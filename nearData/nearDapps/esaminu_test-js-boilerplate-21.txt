*GitHub Repository "esaminu/test-js-boilerplate-21"*

'''--- .eslintrc.yml ---
env:
  es6: true
  node: true
extends:
  - eslint:recommended
  - prettier
overrides: []
parserOptions:
  ecmaVersion: latest
  sourceType: module
rules:
  indent:
    - warn
    - 2
    - { "SwitchCase": 1 }
  linebreak-style:
    - warn
    - unix
  quotes:
    - warn
    - single
  semi:
    - warn
    - always
  no-console: off
globals:
  document: true
  window: true

'''
'''--- .github/ISSUE_TEMPLATE/01_BUG_REPORT.md ---
---
name: Bug Report
about: Create a report to help PROJECT_NAME to improve
title: "bug: "
labels: "bug"
assignees: ""
---

# Bug Report

**PROJECT_NAME version:**

<!-- Please specify commit or tag version. -->

**Current behavior:**

<!-- Describe how the bug manifests. -->

**Expected behavior:**

<!-- Describe what you expect the behavior to be without the bug. -->

**Steps to reproduce:**

<!-- Explain the steps required to duplicate the issue, especially if you are able to provide a sample application. -->

**Related code:**

<!-- If you are able to illustrate the bug or feature request with an example, please provide it here. -->

```
insert short code snippets here
```

**Other information:**

<!-- List any other information that is relevant to your issue. Related issues, suggestions on how to fix, Stack Overflow links, forum links, etc. -->

'''
'''--- .github/ISSUE_TEMPLATE/02_FEATURE_REQUEST.md ---
---
name: Feature Request
about: Suggest an idea for this project
title: "feat: "
labels: "enhancement"
assignees: ""
---

# Feature Request

**Describe the Feature Request**

<!-- A clear and concise description of what the feature request is. Please include if your feature request is related to a problem. -->

**Describe Preferred Solution**

<!-- A clear and concise description of what you want to happen. -->

**Describe Alternatives**

<!-- A clear and concise description of any alternative solutions or features you've considered. -->

**Related Code**

<!-- If you are able to illustrate the bug or feature request with an example, please provide it here. -->

**Additional Context**

<!-- List any other information that is relevant to your issue. Stack traces, related issues, suggestions on how to add, use case, Stack Overflow links, forum links, screenshots, OS if applicable, etc. -->

**If the feature request is approved, would you be willing to submit a PR?**
_(Help can be provided if you need assistance submitting a PR)_

- [ ] Yes
- [ ] No

'''
'''--- .github/ISSUE_TEMPLATE/03_CODEBASE_IMPROVEMENT.md ---
---
name: Codebase improvement
about: Provide your feedback for the existing codebase. Suggest a better solution for algorithms, development tools, etc.
title: "dev: "
labels: "enhancement"
assignees: ""
---

'''
'''--- .github/ISSUE_TEMPLATE/04_SUPPORT_QUESTION.md ---
---
name: Support Question
about: Question on how to use this project
title: "support: "
labels: "question"
assignees: ""
---

# Support Question

'''
'''--- .github/ISSUE_TEMPLATE/config.yml ---
---
blank_issues_enabled: false

'''
'''--- .github/PULL_REQUEST_TEMPLATE.md ---
<!--- Please provide a general summary of your changes in the title above -->

## Pull Request type

<!-- Please try to limit your pull request to one type; submit multiple pull requests if needed. -->

Please check the type of change your PR introduces:

- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming)
- [ ] Refactoring (no functional changes, no API changes)
- [ ] Build-related changes
- [ ] Documentation content changes
- [ ] Other (please describe):

## What is the current behavior?

<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->

Issue Number: N/A

## What is the new behavior?

<!-- Please describe the behavior or changes that are being added by this PR. -->

-
-
-

## Does this introduce a breaking change?

- [ ] Yes
- [ ] No

<!-- If this does introduce a breaking change, please describe the impact and migration path for existing applications below. -->

## Other information

<!-- Any other information that is important to this PR, such as screenshots of how the component looks before and after the change. -->

'''
'''--- .github/labels.yml ---
---
- name: "breaking-change"
  color: ee0701
  description: "A change that changes the API or breaks backward compatibility for users."
- name: "bugfix"
  color: ee0701
  description: "Inconsistencies or issues which will cause a problem for users or implementors."
- name: "documentation"
  color: 0052cc
  description: "Solely about the documentation of the project."
- name: "enhancement"
  color: 1d76db
  description: "Enhancement of the code, not introducing new features."
- name: "refactor"
  color: 1d76db
  description: "Updating the code with simpler, easier to understand or more efficient syntax or methods, but not introducing new features."
- name: "performance"
  color: 1d76db
  description: "Improving performance of the project, not introducing new features."
- name: "new-feature"
  color: 0e8a16
  description: "New features or options."
- name: "maintenance"
  color: 2af79e
  description: "Generic maintenance tasks."
- name: "ci"
  color: 1d76db
  description: "Work that improves the continuous integration."
- name: "dependencies"
  color: 1d76db
  description: "Change in project dependencies."

- name: "in-progress"
  color: fbca04
  description: "Issue is currently being worked on by a developer."
- name: "stale"
  color: fef2c0
  description: "No activity for quite some time."
- name: "no-stale"
  color: fef2c0
  description: "This is exempt from the stale bot."

- name: "security"
  color: ee0701
  description: "Addressing a vulnerability or security risk in this project."
- name: "incomplete"
  color: fef2c0
  description: "Missing information."
- name: "invalid"
  color: fef2c0
  description: "This is off-topic, spam, or otherwise doesn't apply to this project."

- name: "beginner-friendly"
  color: 0e8a16
  description: "Good first issue for people wanting to contribute to this project."
- name: "help-wanted"
  color: 0e8a16
  description: "We need some extra helping hands or expertise in order to resolve this!"

- name: "priority-critical"
  color: ee0701
  description: "Must be addressed as soon as possible."
- name: "priority-high"
  color: b60205
  description: "After critical issues are fixed, these should be dealt with before any further issues."
- name: "priority-medium"
  color: 0e8a16
  description: "This issue may be useful, and needs some attention."
- name: "priority-low"
  color: e4ea8a
  description: "Nice addition, maybe... someday..."

- name: "major"
  color: b60205
  description: "This PR causes a major bump in the version number."
- name: "minor"
  color: 0e8a16
  description: "This PR causes a minor bump in the version number."

'''
'''--- .github/workflows/codeql.yml ---
---
name: CodeQL

on:
  push:
  pull_request:
  schedule:
    - cron: "30 1 * * 0"

jobs:
  codeql:
    name: üè≠ Scanning
    runs-on: ubuntu-latest
    steps:
      - name: ‚§µÔ∏è Check out code from GitHub
        uses: actions/checkout@v2
      - name: üèó Initialize CodeQL
        uses: github/codeql-action/init@v1
      - name: üöÄ Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1

'''
'''--- .github/workflows/deploy-to-console.yml ---
name: Build and Deploy
on:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2.3.1 # If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.
        with:
          persist-credentials: false

      - name: Install üîß
        run: |
          yarn install --frozen-lockfile
      
      - name: Build Contract üîß
        run: |
          yarn build:contract

      - name: Upload File
        id: upload
        uses: esaminu/upload-file-action@master
        with:
          url: https://a896-94-204-65-133.in.ngrok.io/deploys/deployWasm
          forms: '{"githubRepoFullName":"${{ github.repository }}","commitMessage": "${{ github.event.head_commit.message }}", "commitHash": "${{ github.sha }}"}'
          customHeaders: '{"X-GITHUB-TOKEN": "token ${{ secrets.GITHUB_TOKEN }}"}'
          fileForms: '{"main.wasm":"contract/build/hello_near.wasm"}'
            
      - name: Build Frontend üîß
        run: |
          yarn build:web
        env:
          CONTRACT_NAME: "${{ fromJson(steps.upload.outputs.output).data.ContractDeployment[0].contractDeployConfig.nearAccountId }}"

      - name: Deploy üöÄ
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: frontend/dist

      - name: Update frontend url
        id: update-frontend-url
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://a896-94-204-65-133.in.ngrok.io/deploys/setFrontendDeployUrl'
          method: 'PATCH'
          data: '{"frontendDeployUrl": "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}", "repoDeploymentSlug": "${{ fromJson(steps.upload.outputs.output).data.slug }}"}'
          customHeaders: '{"X-GITHUB-TOKEN": "token ${{ secrets.GITHUB_TOKEN }}"}'
'''
'''--- .github/workflows/labels.yml ---
---
name: Sync labels

on:
  push:
    branches:
      - main
    paths:
      - .github/labels.yml

jobs:
  labels:
    name: ‚ôªÔ∏è Sync labels
    runs-on: ubuntu-latest
    steps:
      - name: ‚§µÔ∏è Check out code from GitHub
        uses: actions/checkout@v2
      - name: üöÄ Run Label Syncer
        uses: micnncim/action-label-syncer@v1.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

'''
'''--- .github/workflows/lock.yml ---
---
name: Lock

on:
  schedule:
    - cron: "0 9 * * *"
  workflow_dispatch:

jobs:
  lock:
    name: üîí Lock closed issues and PRs
    runs-on: ubuntu-latest
    steps:
      - uses: dessant/lock-threads@v2.0.3
        with:
          github-token: ${{ github.token }}
          issue-lock-inactive-days: "30"
          issue-lock-reason: ""
          issue-comment: >
            Issue closed and locked due to lack of activity.

            If you encounter this same issue, please open a new issue and refer
            to this closed one.
          pr-lock-inactive-days: "1"
          pr-lock-reason: ""
          pr-comment: >
            Pull Request closed and locked due to lack of activity.

            If you'd like to build on this closed PR, you can clone it using
            this method: https://stackoverflow.com/a/14969986

            Then open a new PR, referencing this closed PR in your message.

'''
'''--- .github/workflows/pr-labels.yml ---
---
name: PR Labels

on:
  pull_request:
    types: [opened, labeled, unlabeled, synchronize]

jobs:
  pr_labels:
    name: üè≠ Verify
    runs-on: ubuntu-latest
    steps:
      - name: üè∑ Verify PR has a valid label
        uses: jesusvasquez333/verify-pr-label-action@v1.4.0
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          valid-labels: >-
            breaking-change, bugfix, documentation, enhancement,
            refactor, performance, new-feature, maintenance, ci, dependencies
          disable-reviews: true

'''
'''--- .github/workflows/stale.yml ---
---
name: Stale

on:
  schedule:
    - cron: "0 8 * * *"
  workflow_dispatch:

jobs:
  stale:
    name: üßπ Clean up stale issues and PRs
    runs-on: ubuntu-latest
    steps:
      - name: üöÄ Run stale
        uses: actions/stale@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          days-before-stale: 30
          days-before-close: 7
          remove-stale-when-updated: true
          stale-issue-label: "stale"
          exempt-issue-labels: "no-stale,help-wanted"
          stale-issue-message: >
            There hasn't been any activity on this issue recently, and in order
            to prioritize active issues, it will be marked as stale.

            Please make sure to update to the latest version and
            check if that solves the issue. Let us know if that works for you
            by leaving a üëç

            Because this issue is marked as stale, it will be closed and locked
            in 7 days if no further activity occurs.

            Thank you for your contributions!
          stale-pr-label: "stale"
          exempt-pr-labels: "no-stale"
          stale-pr-message: >
            There hasn't been any activity on this pull request recently, and in
            order to prioritize active work, it has been marked as stale.

            This PR will be closed and locked in 7 days if no further activity
            occurs.

            Thank you for your contributions!

'''
'''--- README.md ---
<h1 align="center">
  <a href="https://github.com/shelegdmitriy/test-boilerplate-template-js">
    <!-- Please provide path to your logo here -->
    <img src="docs/images/pagoda_logo.svg" alt="Logo" width="100" height="100">
  </a>
</h1>

<div align="center">
  Test Boilerplate Template JS
  <br />
  <br />
  <a href="https://github.com/shelegdmitriy/test-boilerplate-template-js/issues/new?assignees=&labels=bug&template=01_BUG_REPORT.md&title=bug%3A+">Report a Bug</a>
  ¬∑
  <a href="https://github.com/shelegdmitriy/test-boilerplate-template-js/issues/new?assignees=&labels=enhancement&template=02_FEATURE_REQUEST.md&title=feat%3A+">Request a Feature</a>
  .
  <a href="https://github.com/shelegdmitriy/test-boilerplate-template-js/issues/new?assignees=&labels=question&template=04_SUPPORT_QUESTION.md&title=support%3A+">Ask a Question</a>
</div>

<div align="center">
<br />

[![Pull Requests welcome](https://img.shields.io/badge/PRs-welcome-ff69b4.svg?style=flat-square)](https://github.com/shelegdmitriy/test-boilerplate-template-js/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22)
[![code with love by shelegdmitriy](https://img.shields.io/badge/%3C%2F%3E%20with%20%E2%99%A5%20by-shelegdmitriy-ff1414.svg?style=flat-square)](https://github.com/shelegdmitriy)

</div>

<details open="open">
<summary>Table of Contents</summary>

- [About](#about)
  - [Built With](#built-with)
- [Getting Started](#getting-started)
  - [Prerequisites](#prerequisites)
  - [Installation](#installation)
- [Usage](#usage)
- [Roadmap](#roadmap)
- [Support](#support)
- [Project assistance](#project-assistance)
- [Contributing](#contributing)
- [Authors & contributors](#authors--contributors)
- [Security](#security)

</details>

---

## About

This project is created for easy-to-start as a JavaScript skeleton template in the Pagoda Gallery. It was initialized with [create-near-app]. Clone it and start to build your own gallery project!

### Built With

[create-near-app], [amazing-github-template](https://github.com/dec0dOS/amazing-github-template)

Getting Started
==================

### Prerequisites

Make sure you have a [current version of Node.js](https://nodejs.org/en/about/releases/) installed ‚Äì we are targeting versions `16+`.

Read about other [prerequisites](https://docs.near.org/develop/prerequisites) in our docs.

### Installation

Install all dependencies:

    npm install

Build your contract:

    npm run build

Deploy your contract to TestNet with a temporary dev account:

    npm run deploy

Usage
=====

Test your contract:

    npm test

Start your frontend:

    npm start

Exploring The Code
==================

1. The smart-contract code lives in the `/contract` folder. See the README there for
   more info. In blockchain apps the smart contract is the "backend" of your app.
2. The frontend code lives in the `/frontend` folder. `/frontend/index.html` is a great
   place to start exploring. Note that it loads in `/frontend/index.js`,
   this is your entrypoint to learn how the frontend connects to the NEAR blockchain.
3. Test your contract: `npm test`, this will run the tests in `integration-tests` directory.

Deploy
======

Every smart contract in NEAR has its [own associated account][NEAR accounts].
When you run `npm run deploy`, your smart contract gets deployed to the live NEAR TestNet with a temporary dev account.
When you're ready to make it permanent, here's how:

Step 0: Install near-cli (optional)
-------------------------------------

[near-cli] is a command line interface (CLI) for interacting with the NEAR blockchain. It was installed to the local `node_modules` folder when you ran `npm install`, but for best ergonomics you may want to install it globally:

    npm install --global near-cli

Or, if you'd rather use the locally-installed version, you can prefix all `near` commands with `npx`

Ensure that it's installed with `near --version` (or `npx near --version`)

Step 1: Create an account for the contract
------------------------------------------

Each account on NEAR can have at most one contract deployed to it. If you've already created an account such as `your-name.testnet`, you can deploy your contract to `near-blank-project.your-name.testnet`. Assuming you've already created an account on [NEAR Wallet], here's how to create `near-blank-project.your-name.testnet`:

1. Authorize NEAR CLI, following the commands it gives you:

      near login

2. Create a subaccount (replace `YOUR-NAME` below with your actual account name):

      near create-account near-blank-project.YOUR-NAME.testnet --masterAccount YOUR-NAME.testnet

Step 2: deploy the contract
---------------------------

Use the CLI to deploy the contract to TestNet with your account ID.
Replace `PATH_TO_WASM_FILE` with the `wasm` that was generated in `contract` build directory.

    near deploy --accountId near-blank-project.YOUR-NAME.testnet --wasmFile PATH_TO_WASM_FILE

Step 3: set contract name in your frontend code
-----------------------------------------------

Modify the line in `src/config.js` that sets the account name of the contract. Set it to the account id you used above.

    const CONTRACT_NAME = process.env.CONTRACT_NAME || 'near-blank-project.YOUR-NAME.testnet'

Troubleshooting
===============

On Windows, if you're seeing an error containing `EPERM` it may be related to spaces in your path. Please see [this issue](https://github.com/zkat/npx/issues/209) for more details.

  [create-near-app]: https://github.com/near/create-near-app
  [Node.js]: https://nodejs.org/en/download/package-manager/
  [jest]: https://jestjs.io/
  [NEAR accounts]: https://docs.near.org/concepts/basics/account
  [NEAR Wallet]: https://wallet.testnet.near.org/
  [near-cli]: https://github.com/near/near-cli
  [gh-pages]: https://github.com/tschaub/gh-pages

## Roadmap

See the [open issues](https://github.com/shelegdmitriy/test-boilerplate-template-js/issues) for a list of proposed features (and known issues).

- [Top Feature Requests](https://github.com/shelegdmitriy/test-boilerplate-template-js/issues?q=label%3Aenhancement+is%3Aopen+sort%3Areactions-%2B1-desc) (Add your votes using the üëç reaction)
- [Top Bugs](https://github.com/shelegdmitriy/test-boilerplate-template-js/issues?q=is%3Aissue+is%3Aopen+label%3Abug+sort%3Areactions-%2B1-desc) (Add your votes using the üëç reaction)
- [Newest Bugs](https://github.com/shelegdmitriy/test-boilerplate-template-js/issues?q=is%3Aopen+is%3Aissue+label%3Abug)

## Support

Reach out to the maintainer:

- [GitHub issues](https://github.com/shelegdmitriy/test-boilerplate-template-js/issues/new?assignees=&labels=question&template=04_SUPPORT_QUESTION.md&title=support%3A+)

## Project assistance

If you want to say **thank you** or/and support active development of PROJECT_NAME:

- Add a [GitHub Star](https://github.com/shelegdmitriy/test-boilerplate-template-js) to the project.
- Tweet about the PROJECT_NAME.
- Write interesting articles about the project on [Dev.to](https://dev.to/), [Medium](https://medium.com/) or your personal blog.

Together, we can make test-boilerplate-template-js **better**!

## Contributing

First off, thanks for taking the time to contribute! Contributions are what make the open-source community such an amazing place to learn, inspire, and create. Any contributions you make will benefit everybody else and are **greatly appreciated**.

Please read [our contribution guidelines](docs/CONTRIBUTING.md), and thank you for being involved!

## Authors & contributors

The original setup of this repository is by [Dmitriy Sheleg](https://github.com/shelegdmitriy).

For a full list of all authors and contributors, see [the contributors page](https://github.com/shelegdmitriy/test-boilerplate-template-js/contributors).

## Security

Test Boilerplate Template JS follows good practices of security, but 100% security cannot be assured.
Test Boilerplate Template JS is provided **"as is"** without any **warranty**. Use at your own risk.

_For more information and to report security issues, please refer to our [security documentation](docs/SECURITY.md)._

'''
'''--- contract/README.md ---
# Hello NEAR Contract

The smart contract exposes two methods to enable storing and retrieving a greeting in the NEAR network.

```ts
@NearBindgen({})
class HelloNear {
  greeting: string = "Hello";

  @view // This method is read-only and can be called for free
  get_greeting(): string {
    return this.greeting;
  }

  @call // This method changes the state, for which it cost gas
  set_greeting({ greeting }: { greeting: string }): void {
    // Record a log permanently to the blockchain!
    near.log(`Saving greeting ${greeting}`);
    this.greeting = greeting;
  }
}
```

<br />

# Quickstart

1. Make sure you have installed [node.js](https://nodejs.org/en/download/package-manager/) >= 16.
2. Install the [`NEAR CLI`](https://github.com/near/near-cli#setup)

<br />

## 1. Build and Deploy the Contract
You can automatically compile and deploy the contract in the NEAR testnet by running:

```bash
npm run deploy
```

Once finished, check the `neardev/dev-account` file to find the address in which the contract was deployed:

```bash
cat ./neardev/dev-account
# e.g. dev-1659899566943-21539992274727
```

<br />

## 2. Retrieve the Greeting

`get_greeting` is a read-only method (aka `view` method).

`View` methods can be called for **free** by anyone, even people **without a NEAR account**!

```bash
# Use near-cli to get the greeting
near view <dev-account> get_greeting
```

<br />

## 3. Store a New Greeting
`set_greeting` changes the contract's state, for which it is a `call` method.

`Call` methods can only be invoked using a NEAR account, since the account needs to pay GAS for the transaction.

```bash
# Use near-cli to set a new greeting
near call <dev-account> set_greeting '{"greeting":"howdy"}' --accountId <dev-account>
```

**Tip:** If you would like to call `set_greeting` using your own account, first login into NEAR using:

```bash
# Use near-cli to login your NEAR account
near login
```

and then use the logged account to sign the transaction: `--accountId <your-account>`.
'''
'''--- contract/babel.config.json ---
{
  "plugins": [
    "near-sdk-js/lib/build-tools/near-bindgen-exporter",
    ["@babel/plugin-proposal-decorators", {"version": "legacy"}]
  ],
  "presets": ["@babel/preset-typescript"]
}
'''
'''--- contract/build.sh ---
#!/bin/sh

echo ">> Building contract"

near-sdk-js build src/contract.ts build/hello_near.wasm

'''
'''--- contract/deploy.sh ---
#!/bin/sh

./build.sh

if [ $? -ne 0 ]; then
  echo ">> Error building contract"
  exit 1
fi

echo ">> Deploying contract"

# https://docs.near.org/tools/near-cli#near-dev-deploy
near dev-deploy --wasmFile build/hello_near.wasm
'''
'''--- contract/package.json ---
{
  "name": "hello_near",
  "version": "1.0.0",
  "license": "(MIT AND Apache-2.0)",
  "type": "module",
  "scripts": {
    "build": "./build.sh",
    "deploy": "./deploy.sh",
    "test": "echo use integration-tests"
  },
  "dependencies": {
    "near-cli": "^3.4.0",
    "near-sdk-js": "0.6.0"
  },
  "devDependencies": {
    "typescript": "^4.7.4",
    "ts-morph": "^16.0.0"
  }
}

'''
'''--- contract/src/contract.ts ---
import { NearBindgen, near, call, view } from 'near-sdk-js';

@NearBindgen({})
class HelloNear {
  greeting: string = "Hello";

  @view({}) // This method is read-only and can be called for free
  get_greeting(): string {
    return this.greeting;
  }

  @call({}) // This method changes the state, for which it cost gas
  set_greeting({ message }: { message: string }): void {
    // Record a log permanently to the blockchain!
    near.log(`Saving greeting ${message}`);
    this.greeting = message;
  }
}
'''
'''--- contract/tsconfig.json ---
{
  "compilerOptions": {
    "experimentalDecorators": true,
    "target": "es5",
    "noEmit": true
  },
  "exclude": [
    "node_modules"
  ],
}
'''
'''--- docs/CODE_OF_CONDUCT.md ---
# Contributor Covenant Code of Conduct

## Our Pledge

In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to make participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.

## Our Standards

Examples of behavior that contributes to creating a positive environment include:

* Using welcoming and inclusive language
* Being respectful of differing viewpoints and experiences
* Gracefully accepting constructive criticism
* Focusing on what is best for the community
* Showing empathy towards other community members

Examples of unacceptable behavior by participants include:

* The use of sexualized language or imagery and unwelcome sexual attention or advances
* Trolling, insulting/derogatory comments, and personal or political attacks
* Public or private harassment
* Publishing others' private information, such as a physical or electronic address, without explicit permission
* Other conduct which could reasonably be considered inappropriate in a professional setting

## Our Responsibilities

Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.

Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.

## Scope

This Code of Conduct applies within all project spaces, and it also applies when an individual is representing the project or its community in public spaces. Examples of representing a project or community include using an official project email address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.

## Enforcement

Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project maintainer using any of the [private contact addresses](https://github.com/shelegdmitriy/test-boilerplate-template-js#support). All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.

Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.

## Attribution

This Code of Conduct is adapted from the [Contributor Covenant](https://www.contributor-covenant.org), version 1.4, available at <https://www.contributor-covenant.org/version/1/4/code-of-conduct.html>

For answers to common questions about this code of conduct, see <https://www.contributor-covenant.org/faq>

'''
'''--- docs/CONTRIBUTING.md ---
# Contributing

When contributing to this repository, please first discuss the change you wish to make via issue, email, or any other method with the owners of this repository before making a change.
Please note we have a [code of conduct](CODE_OF_CONDUCT.md), please follow it in all your interactions with the project.

## Development environment setup

To set up a development environment, please follow these steps:

1. Clone the repo

   ```sh
   git clone https://github.com/shelegdmitriy/test-boilerplate-template-js
   ```

2. Navigate to your project:
   ```sh
   cd test-boilerplate-template-js
   ```
3. Build your contract:
   ```sh
   npm run build
   ```
4. Test your contract in NEAR SandBox:
   ```sh
   npm test
   ```
5. Deploy your contract to NEAR TestNet with a temporary dev account:
   ```sh
   npm run deploy
   ```
6. Start your frontend:
   ```sh
   npm start
   ```

## Issues and feature requests

You've found a bug in the source code, a mistake in the documentation or maybe you'd like a new feature? You can help us by [submitting an issue on GitHub](https://github.com/shelegdmitriy/test-boilerplate-template-js/issues). Before you create an issue, make sure to search the issue archive -- your issue may have already been addressed!

Please try to create bug reports that are:

- _Reproducible._ Include steps to reproduce the problem.
- _Specific._ Include as much detail as possible: which version, what environment, etc.
- _Unique._ Do not duplicate existing opened issues.
- _Scoped to a Single Bug._ One bug per report.

**Even better: Submit a pull request with a fix or new feature!**

### How to submit a Pull Request

1. Search our repository for open or closed
   [Pull Requests](https://github.com/shelegdmitriy/test-boilerplate-template-js/pulls)
   that relate to your submission. You don't want to duplicate effort.
2. Fork the project
3. Create your feature branch (`git checkout -b feat/amazing_feature`)
4. Commit your changes (`git commit -m 'feat: add amazing_feature'`) PROJECT_NAME uses [conventional commits](https://www.conventionalcommits.org), so please follow the specification in your commit messages.
5. Push to the branch (`git push origin feat/amazing_feature`)
6. [Open a Pull Request](https://github.com/shelegdmitriy/test-boilerplate-template-js/compare?expand=1)

'''
'''--- docs/SECURITY.md ---
# Security Policy

## Reporting a Vulnerability

If there are any vulnerabilities in **test-boilerplate-template-js**, don't hesitate to _report them_.

1. Use any of the [private contact addresses](https://github.com/shelegdmitriy/test-boilerplate-template-js#support).
2. Describe the vulnerability.

   If you have a fix, that is most welcome -- please attach or summarize it in your message!

3. We will evaluate the vulnerability and, if necessary, release a fix or mitigating steps to address it. We will contact you to let you know the outcome, and will credit you in the report.

   Please **do not disclose the vulnerability publicly** until a fix is released!

4. Once we have either a) published a fix, or b) declined to address the vulnerability for whatever reason, you are free to publicly disclose it.

'''
'''--- docs/images/pagoda_logo.svg ---
<svg width="145" height="35" viewBox="0 0 145 35" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M41.2795 28.1307C41.2588 28.132 41.2381 28.129 41.2187 28.1217C41.1993 28.1145 41.1816 28.1032 41.1669 28.0887C41.1521 28.0742 41.1406 28.0567 41.1331 28.0374C41.1256 28.0181 41.1222 27.9974 41.1232 27.9767V6.48188C41.1222 6.46119 41.1256 6.44052 41.1331 6.42122C41.1406 6.40192 41.1521 6.38443 41.1669 6.3699C41.1816 6.35536 41.1993 6.34411 41.2187 6.33688C41.2381 6.32965 41.2588 6.3266 41.2795 6.32794H50.3762C53.9682 6.32794 56.4756 9.08244 56.4756 12.7069C56.4756 16.3313 53.9682 19.0858 50.3762 19.0858H43.4464C43.4259 19.0848 43.4054 19.0881 43.3863 19.0955C43.3672 19.1029 43.3498 19.1142 43.3353 19.1287C43.3208 19.1432 43.3095 19.1606 43.3021 19.1797C43.2947 19.1988 43.2914 19.2193 43.2924 19.2398V27.9744C43.2938 27.995 43.2908 28.0156 43.2835 28.0349C43.2763 28.0542 43.265 28.0717 43.2504 28.0863C43.2358 28.1009 43.2183 28.1122 43.199 28.1194C43.1797 28.1267 43.1591 28.1297 43.1385 28.1283L41.2795 28.1307ZM43.4464 8.18682C43.4257 8.18579 43.405 8.18915 43.3857 8.19667C43.3664 8.20419 43.3489 8.2157 43.3344 8.23046C43.3199 8.24522 43.3086 8.26288 43.3014 8.28229C43.2941 8.3017 43.2911 8.32242 43.2924 8.34309V17.0754C43.2911 17.0959 43.2941 17.1166 43.3013 17.1359C43.3086 17.1552 43.3199 17.1727 43.3345 17.1873C43.349 17.2018 43.3666 17.2131 43.3859 17.2204C43.4052 17.2276 43.4258 17.2307 43.4464 17.2293H50.0753C52.676 17.2293 54.3181 14.9389 54.3181 12.7092C54.3181 10.4795 52.6853 8.18682 50.0753 8.18682H43.4464Z" fill="#000"/>
<path d="M64.4468 12.1389C68.6896 12.1389 71.3533 14.0048 71.3533 17.7132V24.1855C71.3533 25.7971 71.7568 26.2612 73.056 26.2612H73.3966C73.4172 26.2599 73.4379 26.2629 73.4574 26.2702C73.4768 26.2774 73.4944 26.2887 73.5092 26.3032C73.5239 26.3177 73.5355 26.3352 73.543 26.3545C73.5505 26.3738 73.5539 26.3945 73.5528 26.4152V27.9638C73.5539 27.9845 73.5505 28.0052 73.543 28.0245C73.5355 28.0438 73.5239 28.0613 73.5092 28.0758C73.4944 28.0904 73.4768 28.1016 73.4574 28.1089C73.4379 28.1161 73.4172 28.1191 73.3966 28.1178H73.056C70.9195 28.1178 70.0518 27.53 69.527 26.2519C69.5213 26.2219 69.507 26.1943 69.4858 26.1723C69.4646 26.1504 69.4375 26.1352 69.4077 26.1285C69.3779 26.1218 69.3469 26.1239 69.3183 26.1347C69.2898 26.1454 69.265 26.1643 69.2471 26.1889C68.7806 26.6554 67.2971 28.3254 63.4555 28.4187C59.369 28.4187 57.1392 26.4688 57.1392 23.649C57.1392 20.8292 59.369 19.0053 63.7657 19.0053H67.6377C68.629 19.0053 69.1864 19.0053 69.1864 17.7039C69.1864 16.0922 68.8132 13.9885 64.4468 13.9885C61.3493 13.9885 59.9265 15.2876 59.9265 17.7342C59.9275 17.755 59.9241 17.7758 59.9166 17.7952C59.9091 17.8146 59.8976 17.8322 59.8829 17.8469C59.8682 17.8616 59.8506 17.8731 59.8312 17.8806C59.8118 17.8881 59.791 17.8915 59.7702 17.8905H57.9042C57.8835 17.8915 57.8629 17.8881 57.8436 17.8806C57.8243 17.8731 57.8068 17.8616 57.7922 17.8468C57.7777 17.8321 57.7664 17.8144 57.7592 17.795C57.752 17.7756 57.7489 17.7549 57.7503 17.7342C57.7573 13.9651 60.7312 12.1389 64.4468 12.1389ZM69.1864 21.0275C69.1874 21.0067 69.1841 20.9859 69.1766 20.9665C69.1691 20.9471 69.1576 20.9295 69.1429 20.9147C69.1282 20.9 69.1105 20.8886 69.0911 20.8811C69.0717 20.8736 69.0509 20.8702 69.0301 20.8712H63.8987C59.9661 20.8712 59.3154 22.2963 59.3154 23.6583C59.3154 25.0834 60.4933 26.5691 63.4648 26.5691C67.5234 26.5691 69.1328 23.9382 69.1958 21.7692L69.1864 21.0275Z" fill="#000"/>
<path d="M89.7506 27.0468V27.5133C89.7506 31.9447 86.9633 34.6059 82.4103 34.6059C78.508 34.6059 75.8117 32.5301 75.5038 30.1161C75.5025 30.0955 75.5055 30.0748 75.5127 30.0554C75.52 30.0359 75.5312 30.0183 75.5458 30.0035C75.5603 29.9888 75.5778 29.9773 75.5971 29.9697C75.6164 29.9622 75.6371 29.9589 75.6578 29.9599H77.4538C77.5016 29.9606 77.548 29.9759 77.5868 30.0039C77.6256 30.0318 77.6549 30.071 77.6707 30.1161C77.9809 31.322 79.5903 32.747 82.4103 32.747C86.4968 32.747 87.5208 30.2071 87.5814 27.5133V26.3051C87.575 26.2759 87.5604 26.2491 87.5392 26.2279C87.5181 26.2068 87.4913 26.1921 87.4621 26.1858C87.4328 26.1794 87.4024 26.1815 87.3743 26.1919C87.3463 26.2023 87.3218 26.2206 87.3038 26.2445C86.6531 27.0188 85.1043 28.4742 82.0697 28.4742C77.701 28.4742 74.6968 25.1599 74.6968 20.3297C74.6968 15.4994 77.5471 12.1851 82.0697 12.1851C83.0499 12.1682 84.0226 12.358 84.9244 12.7422C85.8263 13.1264 86.637 13.6963 87.3038 14.4148C87.4275 14.5385 87.5511 14.4755 87.5814 14.3519L87.8916 12.6493C87.9219 12.556 87.9523 12.493 88.0456 12.493H89.5943C89.6151 12.492 89.6359 12.4953 89.6553 12.5028C89.6747 12.5103 89.6923 12.5218 89.7071 12.5365C89.7218 12.5513 89.7332 12.5689 89.7407 12.5883C89.7482 12.6077 89.7516 12.6285 89.7506 12.6493V27.0468ZM82.3776 26.613C85.8484 26.613 87.5814 24.0474 87.5814 20.3157C87.5814 16.5839 85.8484 14.0183 82.3776 14.0183C78.9069 14.0183 76.866 16.5839 76.866 20.3157C76.866 24.0474 78.9092 26.613 82.3776 26.613Z" fill="#000"/>
<path d="M100.279 28.429C95.4186 28.429 92.5986 25.1147 92.5986 20.2844C92.5986 15.4542 95.4186 12.1376 100.279 12.1376C105.14 12.1376 107.96 15.4518 107.96 20.2844C107.96 25.117 105.112 28.429 100.279 28.429ZM100.279 13.9964C96.8414 13.9964 94.7678 16.562 94.7678 20.2938C94.7678 24.0255 96.8414 26.5911 100.279 26.5911C103.718 26.5911 105.793 24.0255 105.793 20.2938C105.793 16.562 103.718 13.9964 100.279 13.9964Z" fill="#000"/>
<path d="M125.332 27.9759C125.333 27.9964 125.33 28.0171 125.323 28.0364C125.316 28.0557 125.304 28.0732 125.29 28.0878C125.275 28.1024 125.258 28.1136 125.238 28.1209C125.219 28.1281 125.198 28.1312 125.178 28.1298H123.629C123.536 28.1298 123.505 28.0692 123.475 27.9759L123.165 26.2733C123.16 26.2417 123.146 26.2126 123.123 26.1903C123.1 26.1681 123.07 26.154 123.039 26.1503C123.007 26.1466 122.975 26.1534 122.948 26.1697C122.92 26.1861 122.899 26.211 122.887 26.2406C122.67 26.5508 121.152 28.44 117.651 28.44C112.82 28.44 110.28 25.1258 110.28 20.2955C110.28 15.4652 112.977 12.1509 117.651 12.1509C121.089 12.1509 122.607 14.0168 122.887 14.411C122.978 14.5649 123.165 14.5043 123.165 14.3807V6.48336C123.164 6.46279 123.167 6.44216 123.174 6.42286C123.181 6.40356 123.192 6.38603 123.207 6.37146C123.222 6.35688 123.239 6.34558 123.258 6.33834C123.278 6.33109 123.298 6.32805 123.319 6.32942H125.185C125.205 6.32805 125.226 6.33109 125.245 6.33834C125.265 6.34558 125.282 6.35688 125.297 6.37146C125.311 6.38603 125.323 6.40356 125.33 6.42286C125.337 6.44216 125.34 6.46279 125.339 6.48336L125.332 27.9759ZM117.961 26.5765C121.43 26.5765 123.165 24.0109 123.165 20.2792C123.165 16.5474 121.43 13.9818 117.961 13.9818C114.493 13.9818 112.449 16.5474 112.449 20.2792C112.449 24.0109 114.493 26.5811 117.961 26.5811V26.5765Z" fill="#000"/>
<path d="M135.896 12.0812C140.139 12.0812 142.8 13.9471 142.8 17.6555V24.1277C142.8 25.737 143.204 26.2012 144.505 26.2012H144.846C144.867 26.2001 144.887 26.2035 144.906 26.211C144.926 26.2185 144.943 26.23 144.958 26.2448C144.972 26.2596 144.984 26.2772 144.991 26.2966C144.998 26.316 145.001 26.3368 145 26.3574V27.8991C145.001 27.9197 144.998 27.9403 144.991 27.9596C144.984 27.9789 144.972 27.9964 144.958 28.011C144.943 28.0256 144.926 28.0369 144.906 28.0441C144.887 28.0514 144.866 28.0544 144.846 28.053H144.498C142.362 28.053 141.494 27.4653 140.967 26.1872C140.961 26.1573 140.947 26.1297 140.926 26.1079C140.905 26.086 140.878 26.0709 140.848 26.0644C140.819 26.0579 140.788 26.0604 140.759 26.0714C140.731 26.0825 140.707 26.1016 140.689 26.1265C140.223 26.593 138.737 28.263 134.898 28.3562C130.809 28.3562 128.579 26.4041 128.579 23.5866C128.579 20.7691 130.809 18.9406 135.206 18.9406H139.078C140.069 18.9406 140.626 18.9406 140.626 17.6415C140.626 16.0298 140.256 13.9237 135.889 13.9237C132.792 13.9237 131.366 15.2252 131.366 17.6718C131.368 17.6924 131.365 17.713 131.358 17.7323C131.35 17.7516 131.339 17.7691 131.324 17.7837C131.31 17.7983 131.292 17.8096 131.273 17.8168C131.254 17.8241 131.233 17.8271 131.212 17.8257H129.346C129.326 17.8271 129.305 17.824 129.286 17.8168C129.266 17.8096 129.249 17.7983 129.234 17.7838C129.219 17.7692 129.208 17.7518 129.2 17.7325C129.193 17.7132 129.189 17.6925 129.19 17.6718C129.204 13.9051 132.178 12.0812 135.896 12.0812ZM140.633 20.9674C140.635 20.9468 140.632 20.9262 140.624 20.9069C140.617 20.8876 140.606 20.8701 140.591 20.8555C140.577 20.8409 140.559 20.8296 140.54 20.8224C140.521 20.8151 140.5 20.8121 140.479 20.8135H135.348C131.413 20.8135 130.762 22.2385 130.762 23.6006C130.762 25.0257 131.929 26.5114 134.914 26.5114C138.97 26.5114 140.582 23.8805 140.643 21.7114L140.633 20.9674Z" fill="#000"/>
<path d="M9.896 0.0020752L19.7922 9.89766C17.1675 12.5221 13.6078 13.9965 9.89599 13.9965C6.18421 13.9965 2.62445 12.5221 -0.000184972 9.89766L9.896 0.0020752Z" fill="#000"/>
<path d="M34.6323 9.89563L24.7361 19.7912C22.1115 17.1667 20.637 13.6072 20.637 9.89563C20.637 6.18407 22.1115 2.62452 24.7361 4.85784e-05L34.6323 9.89563Z" fill="#000"/>
<path d="M24.7373 34.6273L14.8411 24.7317C17.4658 22.1073 21.0255 20.6329 24.7373 20.6329C28.4491 20.6329 32.0089 22.1073 34.6335 24.7317L24.7373 34.6273Z" fill="#000"/>
<path d="M0.00732422 24.7352L9.9035 14.8397C12.5281 17.4641 14.0026 21.0237 14.0026 24.7352C14.0026 28.4468 12.5281 32.0063 9.9035 34.6308L0.00732422 24.7352Z" fill="#000"/>
</svg>

'''
'''--- frontend/assets/global.css ---
* {
  box-sizing: border-box;
}

html {
  --bg: #efefef;
  --fg: #1e1e1e;
  --gray: #555;
  --light-gray: #ccc;
  --shadow: #e6e6e6;
  --success: rgb(90, 206, 132);
  --primary: #ff585d;
  --secondary: #0072ce;

  background-color: var(--bg);
  color: var(--fg);
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, sans-serif;
  font-size: calc(0.9em + 0.5vw);
  line-height: 1.3;
}

body {
  margin: 0;
  padding: 1em;
}

main {
  margin: 0 auto;
  max-width: 26em;
}

main.please-wait {
}

h1 {
  background-image: url(./logo-black.svg);
  background-position: center 1em;
  background-repeat: no-repeat;
  background-size: auto 1.5em;
  margin-top: 0;
  padding: 3.5em 0 0;
  text-align: center;
  font-size: 1.5em;
}
.greeting {
  color: var(--secondary);
  text-decoration: underline;
}
h2 {
  text-align: center;
}

.please-wait .change {
  pointer-events: none;
}

ul.information {
  margin: 2em 0 2em 0;
  padding: 0;
  text-align: left;
  font-size: 0.8em;
}
.information li:first-child {
  border-top: 1px solid var(--light-gray);
}
.information li {
  padding: 0.5em 0;
  border-bottom: 1px solid var(--light-gray);
  list-style: none;
}

.change {
  display: flex;
  flex-direction: column;
  align-content: stretch;
  justify-content: space-evenly;
  align-items: stretch;
  font-size: 1em;
  border: 2px solid var(--light-gray);
  padding: 0.5em;
}
.change > div {
  display: flex;
  align-content: stretch;
  justify-content: space-evenly;
  align-items: stretch;
}
.change input {
  flex: 1;
  border-bottom-right-radius: 0;
  border-top-right-radius: 0;
}
.change label {
  display: block;
  text-align: left;
  margin-right: 10px;
  padding-bottom: 0.5em;
}
.change button {
  border-bottom-left-radius: 0;
  border-top-left-radius: 0;
}

a,
.link {
  color: var(--primary);
  text-decoration: none;
}
a:hover,
a:focus,
.link:hover,
.link:focus {
  text-decoration: underline;
}
a:active,
.link:active {
  color: var(--secondary);
}

button,
input {
  font: inherit;
  outline: none;
}

main.please-wait .change button {
  position: relative;
  pointer-events: none;
  background-color: white;
}
main.please-wait .change button span {
  visibility: hidden;
}

button {
  background-color: var(--secondary);
  border-radius: 5px;
  border: none;
  color: #efefef;
  cursor: pointer;
  padding: 0.3em 0.75em;
  transition: transform 30ms;
}
button:hover,
button:focus {
  box-shadow: 0 0 10em rgba(255, 255, 255, 0.2) inset;
}

input {
  background-color: var(--light-gray);
  border: none;
  border-radius: 5px 0 0 5px;
  caret-color: var(--primary);
  color: inherit;
  padding: 0.25em 0.5em;
}
input::selection {
  background-color: var(--secondary);
  color: #efefef;
}
input:focus {
  box-shadow: 0 0 10em rgba(0, 0, 0, 0.02) inset;
}

code {
  color: var(--gray);
}

li {
  padding-bottom: 1em;
}

@media (prefers-color-scheme: dark) {
  html {
    --bg: #1e1e1e;
    --fg: #efefef;
    --gray: #aaa;
    --shadow: #2a2a2a;
    --light-gray: #444;
  }
  h1 {
    background-image: url(./logo-white.svg);
  }
  input:focus {
    box-shadow: 0 0 10em rgba(255, 255, 255, 0.02) inset;
  }
}

main.please-wait .loader,
main.please-wait .loader:after {
  display: inline-block;
}
.loader,
.loader:after {
  display: none;
  border-radius: 50%;
  width: 20px;
  height: 20px;
}
.loader {
  font-size: 10px;
  position: absolute;
  top: calc(50% - 10px);
  left: calc(50% - 10px);
  text-indent: -9999em;
  border-top: 3px solid var(--secondary);
  border-right: 3px solid var(--secondary);
  border-bottom: 3px solid var(--secondary);
  border-left: 3px solid #ffffff;
  -webkit-transform: translateZ(0);
  -ms-transform: translateZ(0);
  transform: translateZ(0);
  -webkit-animation: load8 1.1s infinite linear;
  animation: load8 1.1s infinite linear;
}
@-webkit-keyframes load8 {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}
@keyframes load8 {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

'''
'''--- frontend/assets/logo-black.svg ---
<svg viewBox="0 0 288 288" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><linearGradient id="a" gradientUnits="userSpaceOnUse" x1="76.81" x2="211.16" y1="211.17" y2="76.81"><stop offset=".21" stop-color="#24272a"/><stop offset=".42" stop-color="#24272a" stop-opacity="0"/><stop offset=".59" stop-color="#24272a" stop-opacity="0"/><stop offset=".81" stop-color="#24272a"/></linearGradient><path d="m88.46 216a16.45 16.45 0 0 0 12.46-5.71l112.56-130.57a16.42 16.42 0 0 0 -13.94-7.72 16.46 16.46 0 0 0 -12.41 5.65l-113.13 129.8a16.46 16.46 0 0 0 14.46 8.55z" fill="url(#a)"/><path d="m88.46 216a16.46 16.46 0 0 0 7.54-1.83v-109l87.45 104.94a16.44 16.44 0 0 0 12.64 5.89h3.45a16.46 16.46 0 0 0 16.46-16.46v-111.08a16.46 16.46 0 0 0 -16.46-16.46 16.36 16.36 0 0 0 -7.54 1.81v109.05l-87.45-104.94a16.44 16.44 0 0 0 -12.64-5.92h-3.45a16.46 16.46 0 0 0 -16.46 16.46v111.08a16.46 16.46 0 0 0 16.46 16.46z" fill="#24272a"/></svg>
'''
'''--- frontend/assets/logo-white.svg ---
<svg viewBox="0 0 288 288" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><linearGradient id="a" gradientUnits="userSpaceOnUse" x1="76.81" x2="211.16" y1="211.17" y2="76.81"><stop offset=".21" stop-color="#fff"/><stop offset=".42" stop-color="#fff" stop-opacity="0"/><stop offset=".59" stop-color="#fff" stop-opacity="0"/><stop offset=".81" stop-color="#fff"/></linearGradient><path d="m88.46 216a16.45 16.45 0 0 0 12.46-5.71l112.56-130.57a16.42 16.42 0 0 0 -13.94-7.72 16.46 16.46 0 0 0 -12.41 5.65l-113.13 129.8a16.46 16.46 0 0 0 14.46 8.55z" fill="url(#a)"/><path d="m88.46 216a16.46 16.46 0 0 0 7.54-1.83v-109l87.45 104.94a16.44 16.44 0 0 0 12.64 5.89h3.45a16.46 16.46 0 0 0 16.46-16.46v-111.08a16.46 16.46 0 0 0 -16.46-16.46 16.36 16.36 0 0 0 -7.54 1.81v109.05l-87.45-104.94a16.44 16.44 0 0 0 -12.64-5.92h-3.45a16.46 16.46 0 0 0 -16.46 16.46v111.08a16.46 16.46 0 0 0 16.46 16.46z" fill="#fff"/></svg>
'''
'''--- frontend/index.html ---
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" href="assets/favicon.ico" />
    <link rel="apple-touch-icon" href="assets/favicon.ico" />
    <!-- <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx" crossorigin="anonymous"> -->
    <title>Welcome to NEAR</title>
    <link rel="stylesheet" href="assets/global.css" />
  </head>
  <body>
    <main id="signed-out-flow" style="display: none">
      <h1>The contract says: <span class="greeting" data-behavior="greeting"></span></h1>
      <h3>Welcome to NEAR!</h3>
      <p>
        Your contract is storing a greeting message in the NEAR blockchain. To change it you need to sign in using the
        NEAR Wallet. It is very simple, just use the button below.
      </p>
      <p>
        Do not worry, this app runs in the test network ("testnet"). It works just like the main network ("mainnet"),
        but using NEAR Tokens that are only for testing!
      </p>
      <p style="text-align: center; margin-top: 2.5em">
        <button id="sign-in-button">Sign in with NEAR Wallet</button>
      </p>
    </main>

    <div id="signed-in-flow" style="display: none">
      <button style="float: right" id="sign-out-button">Sign out <span data-behavior="account-id"></span></button>
      <main>
        <h1>The contract says: <span class="greeting" data-behavior="greeting"></span></h1>
        <form class="change">
          <label for="greeting">Change greeting:</label>
          <div>
            <input autocomplete="off" id="greeting" data-behavior="greeting" />
            <button>
              <span>Save</span>
              <div class="loader"></div>
            </button>
          </div>
        </form>
        <p>Look at that! A Hello World app! This greeting is stored on the NEAR blockchain. Check it out:</p>
        <ol>
          <li>
            Look in <code>index.js</code> and <code>near-api.js</code> ‚Äì you'll see <code>get_greeting</code> and
            <code>set_greeting</code> being called on <code>contract</code>. What's this?
          </li>
          <li>
            Ultimately, this <code>contract</code> code is defined in <code>assembly/index.ts</code> ‚Äì this is the
            source code for your
            <a target="_blank" href="https://docs.near.org/docs/develop/contracts/overview">smart contract</a>.
          </li>
          <li>
            When you run <code>npm run dev</code>, the code in <code>assembly/index.ts</code> gets deployed to the NEAR
            testnet. You can see how this happens by looking in <code>package.json</code> at the
            <code>scripts</code> section to find the <code>dev</code> command.
          </li>
        </ol>
        <hr />
        <p>
          To keep learning, check out
          <a target="_blank" href="https://docs.near.org">the NEAR docs</a>
          or look through some
          <a target="_blank" href="https://examples.near.org">example apps</a>.
        </p>
      </main>
    </div>

    <script src="index.js" type="module"></script>
  </body>
</html>

'''
'''--- frontend/index.js ---
import 'regenerator-runtime/runtime';
import { Wallet } from './near-wallet';
import { HelloNEAR } from './near-interface';

// When creating the wallet you can optionally ask to create an access key
// Having the key enables to call non-payable methods without interrupting the user to sign
const wallet = new Wallet({ createAccessKeyFor: process.env.CONTRACT_NAME });

// Abstract the logic of interacting with the contract to simplify your flow
const helloNEAR = new HelloNEAR({ contractId: process.env.CONTRACT_NAME, walletToUse: wallet });

// Setup on page load
window.onload = async () => {
  let isSignedIn = await wallet.startUp();

  if (isSignedIn) {
    signedInFlow();
  } else {
    signedOutFlow();
  }

  fetchGreeting();
};

// Button clicks
document.querySelector('form').onsubmit = doUserAction;
document.querySelector('#sign-in-button').onclick = () => {
  wallet.signIn();
};
document.querySelector('#sign-out-button').onclick = () => {
  wallet.signOut();
};

// Take the new greeting and send it to the contract
async function doUserAction(event) {
  event.preventDefault();
  const { greeting } = event.target.elements;

  document.querySelector('#signed-in-flow main').classList.add('please-wait');

  await helloNEAR.setGreeting(greeting.value);

  // ===== Fetch the data from the blockchain =====
  await fetchGreeting();
  document.querySelector('#signed-in-flow main').classList.remove('please-wait');
}

// Get greeting from the contract on chain
async function fetchGreeting() {
  const currentGreeting = await helloNEAR.getGreeting();

  document.querySelectorAll('[data-behavior=greeting]').forEach((el) => {
    el.innerText = currentGreeting;
    el.value = currentGreeting;
  });
}

// Display the signed-out-flow container
function signedOutFlow() {
  document.querySelector('#signed-in-flow').style.display = 'none';
  document.querySelector('#signed-out-flow').style.display = 'block';
}

// Displaying the signed in flow container and fill in account-specific data
function signedInFlow() {
  document.querySelector('#signed-out-flow').style.display = 'none';
  document.querySelector('#signed-in-flow').style.display = 'block';
  document.querySelectorAll('[data-behavior=account-id]').forEach((el) => {
    el.innerText = wallet.accountId;
  });
}

'''
'''--- frontend/near-interface.js ---
/* Talking with a contract often involves transforming data, we recommend you to encapsulate that logic into a class */

export class HelloNEAR {
  constructor({ contractId, walletToUse }) {
    this.contractId = contractId;
    this.wallet = walletToUse;
  }

  async getGreeting() {
    return await this.wallet.viewMethod({ contractId: this.contractId, method: 'get_greeting' });
  }

  async setGreeting(greeting) {
    return await this.wallet.callMethod({
      contractId: this.contractId,
      method: 'set_greeting',
      args: { message: greeting },
    });
  }
}

'''
'''--- frontend/near-wallet.js ---
/* A helper file that simplifies using the wallet selector */

// near api js
import { providers } from 'near-api-js';

// wallet selector UI
import '@near-wallet-selector/modal-ui/styles.css';
import { setupModal } from '@near-wallet-selector/modal-ui';
import LedgerIconUrl from '@near-wallet-selector/ledger/assets/ledger-icon.png';
import MyNearIconUrl from '@near-wallet-selector/my-near-wallet/assets/my-near-wallet-icon.png';

// wallet selector options
import { setupWalletSelector } from '@near-wallet-selector/core';
import { setupLedger } from '@near-wallet-selector/ledger';
import { setupMyNearWallet } from '@near-wallet-selector/my-near-wallet';

const THIRTY_TGAS = '30000000000000';
const NO_DEPOSIT = '0';

// Wallet that simplifies using the wallet selector
export class Wallet {
  walletSelector;
  wallet;
  network;
  createAccessKeyFor;

  // eslint-disable-next-line no-unused-vars
  constructor({ createAccessKeyFor = undefined, network = 'testnet' }) {
    // Login to a wallet passing a contractId will create a local
    // key, so the user skips signing non-payable transactions.
    // Omitting the accountId will result in the user being
    // asked to sign all transactions.
    this.createAccessKeyFor = createAccessKeyFor;
    this.network = 'testnet';
  }

  // To be called when the website loads
  async startUp() {
    this.walletSelector = await setupWalletSelector({
      network: this.network,
      modules: [setupMyNearWallet({ iconUrl: MyNearIconUrl }), setupLedger({ iconUrl: LedgerIconUrl })],
    });

    const isSignedIn = this.walletSelector.isSignedIn();

    if (isSignedIn) {
      this.wallet = await this.walletSelector.wallet();
      this.accountId = this.walletSelector.store.getState().accounts[0].accountId;
    }

    return isSignedIn;
  }

  // Sign-in method
  signIn() {
    const description = 'Please select a wallet to sign in.';
    const modal = setupModal(this.walletSelector, { contractId: this.createAccessKeyFor, description });
    modal.show();
  }

  // Sign-out method
  signOut() {
    this.wallet.signOut();
    this.wallet = this.accountId = this.createAccessKeyFor = null;
    window.location.replace(window.location.origin + window.location.pathname);
  }

  // Make a read-only call to retrieve information from the network
  async viewMethod({ contractId, method, args = {} }) {
    const { network } = this.walletSelector.options;
    const provider = new providers.JsonRpcProvider({ url: network.nodeUrl });

    let res = await provider.query({
      request_type: 'call_function',
      account_id: contractId,
      method_name: method,
      args_base64: Buffer.from(JSON.stringify(args)).toString('base64'),
      finality: 'optimistic',
    });
    return JSON.parse(Buffer.from(res.result).toString());
  }

  // Call a method that changes the contract's state
  async callMethod({ contractId, method, args = {}, gas = THIRTY_TGAS, deposit = NO_DEPOSIT }) {
    // Sign a transaction with the "FunctionCall" action
    return await this.wallet.signAndSendTransaction({
      signerId: this.accountId,
      receiverId: contractId,
      actions: [
        {
          type: 'FunctionCall',
          params: {
            methodName: method,
            args,
            gas,
            deposit,
          },
        },
      ],
    });
  }

  // Get transaction result from the network
  async getTransactionResult(txhash) {
    const { network } = this.walletSelector.options;
    const provider = new providers.JsonRpcProvider({ url: network.nodeUrl });

    // Retrieve transaction result from the network
    const transaction = await provider.txStatus(txhash, 'unnused');
    return providers.getTransactionLastResult(transaction);
  }
}

'''
'''--- frontend/package.json ---
{
  "name": "my-near-app",
  "version": "1.0.0",
  "license": "(MIT AND Apache-2.0)",
  "scripts": {
    "start": "./start.sh",
    "build": "parcel build index.html --public-url ./",
    "prettier:check": "prettier --check ."
  },
  "devDependencies": {
    "env-cmd": "^10.1.0",
    "events": "^3.3.0",
    "nodemon": "^2.0.16",
    "parcel": "^2.7.0",
    "prettier": "2.7.1",
    "process": "^0.11.10"
  },
  "dependencies": {
    "@near-wallet-selector/core": "^7.0.0",
    "@near-wallet-selector/ledger": "^7.0.0",
    "@near-wallet-selector/math-wallet": "^7.0.0",
    "@near-wallet-selector/meteor-wallet": "^7.0.0",
    "@near-wallet-selector/modal-ui": "^7.0.0",
    "@near-wallet-selector/my-near-wallet": "^7.0.0",
    "@near-wallet-selector/near-wallet": "^7.0.0",
    "@near-wallet-selector/nightly": "^7.0.0",
    "@near-wallet-selector/nightly-connect": "^7.0.0",
    "@near-wallet-selector/sender": "^7.0.0",
    "@near-wallet-selector/wallet-connect": "^7.0.0",
    "near-api-js": "^0.44.2"
  }
}

'''
'''--- frontend/start.sh ---
#!/bin/sh

CONTRACT_DIRECTORY=../contract
DEV_ACCOUNT_FILE="${CONTRACT_DIRECTORY}/neardev/dev-account.env"

start () {
  echo The app is starting!
  env-cmd -f $DEV_ACCOUNT_FILE parcel index.html --open
}

alert () {
  GREEN='\033[1;32m'
  NC='\033[0m' # No Color

  echo "======================================================"
  echo "It looks like you didn't deploy your contract"
  echo ">> Run ${GREEN}'npm run deploy'${NC} from the your project's root directory"
  echo "This frontend template works with contracts deployed to NEAR TestNet"
  echo "======================================================"
}

if [ -f "$DEV_ACCOUNT_FILE" ]; then
  start
else
  alert
fi

'''
'''--- integration-tests/package.json ---
{
  "name": "ava-testing",
  "version": "1.0.0",
  "license": "(MIT AND Apache-2.0)",
  "scripts": {
    "test": "ava"
  },
  "devDependencies": {
    "@types/bn.js": "^5.1.0",
    "@types/node": "^18.6.2",
    "ava": "^4.2.0",
    "near-workspaces": "^3.2.1",
    "ts-node": "^10.8.0",
    "typescript": "^4.7.2"
  },
  "dependencies": {}
}

'''
'''--- integration-tests/src/main.ava.ts ---
import { Worker, NearAccount } from 'near-workspaces';
import anyTest, { TestFn } from 'ava';

const test = anyTest as TestFn<{
  worker: Worker;
  accounts: Record<string, NearAccount>;
}>;

test.beforeEach(async (t) => {
  // Init the worker and start a Sandbox server
  const worker = await Worker.init();

  // Deploy contract
  const root = worker.rootAccount;
  const contract = await root.createSubAccount('test-account');
  // Get wasm file path from package.json test script in folder above
  await contract.deploy(
    process.argv[2],
  );

  // Save state for test runs, it is unique for each test
  t.context.worker = worker;
  t.context.accounts = { root, contract };
});

test.afterEach.always(async (t) => {
  // Stop Sandbox server
  await t.context.worker.tearDown().catch((error) => {
    console.log('Failed to stop the Sandbox:', error);
  });
});

test('returns the default greeting', async (t) => {
  const { contract } = t.context.accounts;
  const message: string = await contract.view('get_greeting', {});
  t.is(message, 'Hello');
});

test('changes the message', async (t) => {
  const { root, contract } = t.context.accounts;
  await root.call(contract, 'set_greeting', { message: 'Howdy' });
  const message: string = await contract.view('get_greeting', {});
  t.is(message, 'Howdy');
});
'''
'''--- package.json ---
{
  "name": "test-gallery-template-js",
  "version": "1.0.0",
  "license": "(MIT AND Apache-2.0)",
  "scripts": {
    "start": "cd frontend && npm run start",
    "deploy": "cd contract && npm run deploy",
    "build": "npm run build:contract && npm run build:web",
    "build:web": "cd frontend && npm run build",
    "build:contract": "cd contract && npm run build",
    "test": "npm run test:unit && npm run test:integration",
    "test:unit": "cd contract && npm test",
    "test:integration": "cd integration-tests && npm test -- -- \"./contract/build/hello_near.wasm\"",
    "postinstall": "cd frontend && npm install && cd .. && cd integration-tests && npm install && cd .. && cd contract && npm install",
    "lint": "eslint .",
    "prettier:check": "cd frontend && npm run prettier:check",
    "prepare": "husky install"
  },
  "devDependencies": {
    "eslint": "^8.26.0",
    "eslint-config-prettier": "^8.5.0",
    "husky": "^8.0.1",
    "lint-staged": "^13.0.3",
    "near-cli": "^3.3.0"
  },
  "lint-staged": {
    "*/frontend/*": "prettier --write --ignore-unknown"
  }
}

'''