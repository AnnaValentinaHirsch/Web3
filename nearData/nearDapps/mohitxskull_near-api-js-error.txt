*GitHub Repository "mohitxskull/near-api-js-error"*

'''--- .env ---
PRIKEY=ed25519:89L9pDNGQUWCo43k1mHpi8RduWSvqoENnY3M5TM79ZVDJmZFqeaTS9RAYwm9XVZ1CyQDayVhaoKwdyNWhFXYFfc
NAME=dev-1673270766973-64615875457732
'''
'''--- .eslintrc.json ---
{
  "env": {
    "browser": false,
    "es6": true,
    "node": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "tsconfig.json",
    "sourceType": "module",
    "ecmaVersion": 2020
  },
  "plugins": ["@typescript-eslint", "jest"],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:jest/recommended",
    "prettier"
  ],
  "rules": {
    // The following rule is enabled only to supplement the inline suppression
    // examples, and because it is not a recommended rule, you should either
    // disable it, or understand what it enforces.
    // https://typescript-eslint.io/rules/explicit-function-return-type/
    "@typescript-eslint/explicit-function-return-type": "warn"
  }
}

'''
'''--- README.md ---
```bash
➜  Array deserialize git:(main) ✗ yarn start
yarn run v1.22.19
$ node build/src/main.js
Account.viewFunction(contractId, methodName, args, options) deprecated use `Account.viewFunction(ViewFunctionCallOptions)` instead <anonymous>:null:null
Receipt: 5UJWuVeBGQx7LhyhEA5uhXisNSRqn9uutohmDTkrRpp7
        Failure [dev-1673270766973-64615875457732]: Error: {"index":0,"kind":{"ExecutionError":"Smart contract panicked: panicked at 'Failed to deserialize input from JSON.: Error(\"Invalid last symbol 51, offset 29.\", line: 1, column: 185)', nft/src/lib.rs:91:1"}}
/home/skull/Projects/Owlski/Final/Back/Error/Array deserialize/node_modules/near-api-js/lib/utils/rpc_errors.js:31
    const server_tx_error = new ServerTransactionError();
                            ^

ServerTransactionError: {"index":0,"kind":{"ExecutionError":"Smart contract panicked: panicked at 'Failed to deserialize input from JSON.: Error(\"Invalid last symbol 51, offset 29.\", line: 1, column: 185)', nft/src/lib.rs:91:1"}}
    at parseResultError (/home/skull/Projects/Owlski/Final/Back/Error/Array deserialize/node_modules/near-api-js/lib/utils/rpc_errors.js:31:29)
    at Account.<anonymous> (/home/skull/Projects/Owlski/Final/Back/Error/Array deserialize/node_modules/near-api-js/lib/account.js:156:61)
    at Generator.next (<anonymous>)
    at fulfilled (/home/skull/Projects/Owlski/Final/Back/Error/Array deserialize/node_modules/near-api-js/lib/account.js:5:58)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
  type: 'FunctionCallError',
  context: undefined,
  index: 0,
  kind: {
    ExecutionError: `Smart contract panicked: panicked at 'Failed to deserialize input from JSON.: Error("Invalid last symbol 51, offset 29.", line: 1, column: 185)', nft/src/lib.rs:91:1`
  },
  transaction_outcome: {
    block_hash: 'JDjDjM8rizryHWNkF2wbvJ4yGzDWgA1PVPRLtbH6b858',
    id: '2kJqaJhnd26eBUj2wD9RVeyps8bA8KdjAYpL31fRYz6E',
    outcome: {
      executor_id: 'dev-1673270766973-64615875457732',
      gas_burnt: 2429763409616,
      logs: [],
      metadata: { gas_profile: null, version: 1 },
      receipt_ids: [ '24WJCSoZ9o2RH12a5QeKFMXhvG5mNqCsDrGkvpMJkqYe' ],
      status: {
        SuccessReceiptId: '24WJCSoZ9o2RH12a5QeKFMXhvG5mNqCsDrGkvpMJkqYe'
      },
      tokens_burnt: '242976340961600000000'
    },
    proof: [
      {
        direction: 'Left',
        hash: '9VaRp7uKmk5G1pFXQX1Rfi1eRzGfdysL6trAg9bec1SJ'
      },
      {
        direction: 'Right',
        hash: '75etQ9b58nauSChJF1X2LYALefgR8nwhkjVNXiB5o4NU'
      },
      {
        direction: 'Right',
        hash: '5wBEQ7uihgXJi9YGr59XQv8vkuFXKq5dwEGRn6n7fK4v'
      }
    ]
  }
}

Node.js v18.13.0
error Command failed with exit code 1.
info Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.
```
'''
'''--- git.sh ---
#!/bin/bash

file_url="https://raw.githubusercontent.com/servedbyskull/scripts/main/src/git.src.sh"
store="$HOME/.sbs"
lu="$store/lu"

if [ ! -d "$store" ]; then
    mkdir "$store"
fi

if [ ! -f "$lu" ]; then
    touch "$lu"
    echo 0 >"$lu"
fi

if [ "$1" = "-u" ] || [ "$(($(date +%s) - $(cat "$lu")))" -gt 86400 ]; then
    echo "" && echo -e "\e[32mUpdating file...\e[0m" && echo ""
    curl -s "$file_url" >"$store/$(basename "$file_url")"
    echo "$(date +%s)" >"$lu"
fi

bash "$store/$(basename "$file_url")" "$@"

'''
'''--- package.json ---
{
  "name": "near-api-js-error",
  "version": "0.0.0",
  "description": "",
  "type": "module",
  "engines": {
    "node": ">= 18.12 <19"
  },
  "devDependencies": {
    "@types/jest": "~29.2",
    "@types/node": "~18",
    "@typescript-eslint/eslint-plugin": "~5.44",
    "@typescript-eslint/parser": "~5.44",
    "eslint": "~8.28",
    "eslint-config-prettier": "~8.5",
    "eslint-plugin-jest": "~27.1",
    "jest": "~29.3",
    "prettier": "~2.8",
    "rimraf": "~3.0",
    "ts-jest": "~29.0",
    "tsutils": "~3.21",
    "typescript": "~4.9"
  },
  "scripts": {
    "start": "node build/src/main.js",
    "clean": "rimraf coverage build tmp",
    "prebuild": "npm run lint",
    "build": "tsc -p tsconfig.json",
    "build:watch": "tsc -w -p tsconfig.json",
    "build:release": "npm run clean && tsc -p tsconfig.release.json",
    "lint": "eslint . --ext .ts --ext .mts",
    "test": "jest --coverage",
    "prettier": "prettier --config .prettierrc --write .",
    "test:watch": "jest --watch"
  },
  "author": "Jakub Synowiec <jsynowiec@users.noreply.github.com>",
  "license": "Apache-2.0",
  "dependencies": {
    "dotenv": "^16.0.3",
    "near-api-js": "^1.1.0",
    "tslib": "~2.4"
  },
  "volta": {
    "node": "18.12.1"
  }
}

'''
'''--- src/main.ts ---
import { keyStores, KeyPair, connect, Contract } from 'near-api-js';
import dotenv from 'dotenv';

dotenv.config();

const ContractName = process.env.NAME;
const PriKey = process.env.PRIKEY;
const KeyStore = new keyStores.InMemoryKeyStore();

const KeyPairC = KeyPair.fromString(PriKey);

const ConnectionConfig = {
  networkId: 'testnet',
  keyStore: KeyStore,
  nodeUrl: 'https://rpc.testnet.near.org',
  walletUrl: 'https://wallet.testnet.near.org',
  helperUrl: 'https://helper.testnet.near.org',
  headers: {},
};

const NearConnection = await connect(ConnectionConfig);
await KeyStore.setKey(ConnectionConfig.networkId, ContractName, KeyPairC);

const ContractAcc = await NearConnection.account(ContractName);

const CContract = new Contract(ContractAcc, ContractName, {
  viewMethods: ['get_current_order'],
  changeMethods: ['complete_the_order'],
});

const demoMeta = {
  description: 'This is a demo description',
  media: 'https://i.imgur.com/nsdHKU3.jpeg',
  media_hash: 'he3279e32eduen23db2837e2387e23',
  title: 'Demo',
  copies: 1,
  issued_at: Date.now().toString(),
};

const CurrentOrder = await CContract.get_current_order();
const CurrentMinerPaidFor = CurrentOrder[1];

const finalMeta: (typeof demoMeta)[] = [];

for (let i = 0; i < CurrentMinerPaidFor; i++) {
  finalMeta.push(demoMeta);
}

const finalCall = await CContract.complete_the_order({
  args: {
    receiver_id: 'asjdkajhd.testnet',
    token_metadata: finalMeta,
  },
  gas: '100000000000000',
  amount: '0',
});

console.log(finalCall);
'''
'''--- src/mmain.d.ts ---
import { Contract } from 'near-api-js';

interface ArgBuilder<T> {
  args: T;
  gas: string;
  amount: string;
}

interface nftMetaType {
  title: string;
  description: string;
  media: string;
  media_hash: string;
  copies: number;
  issued_at: string;
}

interface completeTheOrderArgs {
  receiver_id: string;
  token_metadata: nftMetaType[];
}

declare module 'near-api-js' {
  interface Contract {
    get_current_order(): Promise<[string | null, bigint]>;
    complete_the_order(Args: ArgBuilder<completeTheOrderArgs>): Promise<'OK'>;
  }
}

'''
'''--- tsconfig.json ---
{
  "compilerOptions": {
    "target": "ES2022",
    "module": "Node16",
    "lib": ["ES2022"],
    "moduleResolution": "Node16",
    "rootDir": ".",
    "outDir": "build",
    "allowSyntheticDefaultImports": true,
    "importHelpers": true,
    "alwaysStrict": true,
    "sourceMap": true,
    "forceConsistentCasingInFileNames": true,
    "noFallthroughCasesInSwitch": true,
    "noImplicitReturns": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noImplicitAny": false,
    "noImplicitThis": false,
    "strictNullChecks": false
  },
  "include": ["src/**/*", "__tests__/**/*"]
}

'''
'''--- tsconfig.release.json ---
{
  "extends": "./tsconfig.json",
  "compilerOptions": {
    "sourceMap": false,
    "removeComments": true
  },
  "include": ["src/**/*"]
}

'''