*GitHub Repository "george-shammar/Insignia"*

'''--- README.md ---
![alt text](https://github.com/george-shammar/Insignia/blob/master/src/assets/Logo.png?raw=true)
# INSIGNIA

## OVERVIEW
Insignia is a 3D military strategy blockchain game application. A multi-player play-and-earn game, set in a medieval metaverse. With an immersive experience and one that provides an unequaled earning potential to gamers across the board.

This project hopes to solve specific problems that have been identified in the blockchain gaming ecosystem. Details about the problem statement and our proposed solutions could be found in the whitepaper linked below. 

### Discord
[Join us on Discord](https://discord.gg/A4xfZENW2Z)

### Twitter
[Follow us on Twitter](https://twitter.com/Insignia_verse?s=03)

### Currently availabe only on PC!
<!-- [Live-Demo](https://practical-jennings-1b91e5.netlify.app/) -->

[Game-Demo](https://screenrec.com/share/wVkHyPRexT)

For a comprehensive run down about the gameplay, game economics, tokenomics, road map, e.t.c please visit the link below to read the Whitepaper. 

[Whitepaper](https://getinsignia.gitbook.io/whitepaper/)

Insignia is built on top of [NEAR Protocol](https://near.org/) and game assets are stored on IPFS.

### Create Asset Page
![screenshot](/src/assets/screenshot.png)

## Tech Stack

### Blockchain
- Near Protocol
- IPFS (Decentralized storage)
- Rust
- near-api-js

### Web Application
- React
- Javascript
- HTML
- CSS
- Bootstrap

### Game
- Unreal Engine

## Gettin Started

### To start the application locally

To run a local copy of this application, follow the steps below:

- Go to the "Code" section of this repository and press the green button that says "Code". Copy the URL or the SSH.
- Go to the terminal and enter:
```
git clone https://github.com/george-shammar/Insignia.git
```
The URL or SSH are the links copied from the step above.

- If you don't have git installed, you can download this project and unzip it.
- Change directory into the folder the application is saved.
```
cd directory
```
Directory is the name of your folder.

- Once you have the local copy in your desired folder, go back to your terminal and run:
```
npm install
```
This command installs all the dependencies of the application.

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

- To start the application, run :
```
npm start
``` 
This command runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in your browser.

The page will reload when you make changes.\
You may also see any lint errors in the console.

## Usage

Upon launching the application, go to "Play Now".

### Step 1: NEAR Wallet Set-up
- Insignia lives on the NEAR protocol. NEAR Wallet is your ticket to our metaverse. For first time NEAR users, click "Get NEAR Wallet", otherwise, proceed to the next tab.

### Step 2: Get Insignia Token.
- Insignia Token is the native currency of our metaverse. Details about the tokenomics can be found in the Whitepaper. We are currently using NEAR as the means of exchange. Click "Fund Wallet" and visit any of the exchanges in the list to fund your wallet. To do anything with the NEAR Wallet, you will need at least 0.1 NEAR. However, on the testnet, NEAR wallet is pre-funded when you created an account.

### Step 3a: Create Game Asset
- Each game asset is a unique NFT stored on IPFS. Each wallet can only have one Insignia NFT. Click "Connect Wallet" to link your NEAR Wallet. 
- Click "Create Asset" to mint a unique NFT.

### Step 3b: Marketplace
- An alternative is to purchase a Game Asset in the Marketplace.

### Step 4: Download and Play
Currently, a very limited edition of the Free-To-Play model of the game is available on PC. Android and IOS release is coming soon.

# Game Overview 
(Find details in the whitepaper)

## The basics

### World Of Chaos

#### Cities
World of Chaos is made up of three hundred (300) real-world ancient cities. Each city is a unique NFT. A typical city is made up of a Commander, an Army with a varied number of battalion (A battalion consists of 700 soldiers). When you mint a city, you get the following:

- A medieval city and a 3 minutes video tour of your city with a short military show of force. It's architecture, people, and commerce.
- An army with an unknown number of battalions before minting. The strength of your defense depends on the number of battalions in your army.
- A commander.
- A treasury.
- A unique Insignia.

The bad news is that there are too much incentives for other cities and Mercenaries to attack your city - Your treasury!!! When you're defeated at war by another army, you loose the balance (Insignia Token) in your treasury. When you successfully defend or repel an attack, you earn the balance in the attacking armies' treasury.

You win or loose when your city's symbol of insignia is captured by the other army or otherwise. The World of Chaos is ultimately an open, virtual, and explorable meta-verse.

#### Mercenaries
These are armies for hire - 45 in total. Each mercenary unit is a unique NFT with an unknown number of battalions before minting. Cities with insufficient armies can hire mercenaries to repel an attack or launch an attack. When you mint a mercenary unit you get the following.

- An army with an unknown number of battalions.
- A commander.
- An insignia.

As an owner of a mercenary unit, you can attack a city to earn the balance of the city's treasury or rent out your army to another city for a fee paid upfront and not dependent on the outcome of the renter's war.

### Fighting Pits
The fighting pit involves one-on-one combat in an arena of cheering crowds and real-world viewers. A fighting season takes a maximum of 7 days or less (depending on the number of participants). Each arena holds between 2, 4, and 8 fighters in each pool. One fighter emerges as the winner from each pool and faces the winner from another pool in the tournament until we have one final winner.

Peering is done randomly and the reward mechanism also utilizes a no-loss mechanism. To fight in the tournament, the following steps need to be taken:

- Mint a fighter (unique NFT) to play. If you missed out during the initial minting, you may trade in the Marketplace. Insignia also provides the opportunity to rent a fighter from NFT owners who choose not to participate in a fighting season.
- Deposit Insignia Tokens to enter the tournament. These tokens are withdrawable no matter the outcome of the tournament, win or lose. Hence, the no-loss mechanism.

## Game Controls
- Forward : Keyboard "W"
- Backward: Keyboard Key "Z"
- Right: Keyboard Key "D"
- Left: Keyboard Key "A"
- Squat : Keyboard Key "C"
- Sommersault: Multiple Space Bar press
- Strike: Left Mouse click.
- Jump: Keyboard Key "Space Bar"

## Developer

üë§ **George Gbenle**

- GitHub: [george-shammar](https://github.com/george-shammar)
- Twitter: [@GeorgeShammar](https://twitter.com/GeorgeShammar)
- LinkedIn: [George Gbenle](https://www.linkedin.com/in/georgegbenle/)

## ü§ù Contributing

Contributions, issues and feature requests are welcome!

## Show your support

Give a ‚≠êÔ∏è if you like this project!

'''
'''--- artifacts/@openzeppelin/contracts/access/Ownable.sol/Ownable.dbg.json ---
{
  "_format": "hh-sol-dbg-1",
  "buildInfo": "..\\..\\..\\..\\build-info\\2166894aa5d6d47f56a77d72dfc7be41.json"
}

'''
'''--- artifacts/@openzeppelin/contracts/access/Ownable.sol/Ownable.json ---
{
  "_format": "hh-sol-artifact-1",
  "contractName": "Ownable",
  "sourceName": "@openzeppelin/contracts/access/Ownable.sol",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

'''
'''--- artifacts/@openzeppelin/contracts/security/Pausable.sol/Pausable.dbg.json ---
{
  "_format": "hh-sol-dbg-1",
  "buildInfo": "..\\..\\..\\..\\build-info\\2166894aa5d6d47f56a77d72dfc7be41.json"
}

'''
'''--- artifacts/@openzeppelin/contracts/security/Pausable.sol/Pausable.json ---
{
  "_format": "hh-sol-artifact-1",
  "contractName": "Pausable",
  "sourceName": "@openzeppelin/contracts/security/Pausable.sol",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

'''
'''--- artifacts/@openzeppelin/contracts/token/ERC721/ERC721.sol/ERC721.dbg.json ---
{
  "_format": "hh-sol-dbg-1",
  "buildInfo": "..\\..\\..\\..\\..\\build-info\\2166894aa5d6d47f56a77d72dfc7be41.json"
}

'''
'''--- artifacts/@openzeppelin/contracts/token/ERC721/ERC721.sol/ERC721.json ---
{
  "_format": "hh-sol-artifact-1",
  "contractName": "ERC721",
  "sourceName": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620014dc380380620014dc8339810160408190526200003491620001c1565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b5050506200027b565b828054620000769062000228565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200011f578081fd5b81516001600160401b03808211156200013c576200013c62000265565b604051601f8301601f19908116603f0116810190828211818310171562000167576200016762000265565b8160405283815260209250868385880101111562000183578485fd5b8491505b83821015620001a6578582018301518183018401529082019062000187565b83821115620001b757848385830101525b9695505050505050565b60008060408385031215620001d4578182fd5b82516001600160401b0380821115620001eb578384fd5b620001f9868387016200010e565b935060208501519150808211156200020f578283fd5b506200021e858286016200010e565b9150509250929050565b600181811c908216806200023d57607f821691505b602082108114156200025f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b611251806200028b6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610f49565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f39190611031565b61012461011f366004610f81565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610f20565b6103a6565b005b61014f61015f366004610dd6565b6104bc565b61014f610172366004610dd6565b6104ed565b610124610185366004610f81565b610508565b61019d610198366004610d8a565b61057f565b6040519081526020016100f3565b610104610606565b61014f6101c1366004610ee6565b610615565b61014f6101d4366004610e11565b610624565b6101046101e7366004610f81565b61065c565b6100e76101fa366004610da4565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461028990611156565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590611156565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661038a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103b182610508565b9050806001600160a01b0316836001600160a01b0316141561041f5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610381565b336001600160a01b038216148061043b575061043b81336101fa565b6104ad5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610381565b6104b78383610744565b505050565b6104c633826107b2565b6104e25760405162461bcd60e51b815260040161038190611096565b6104b78383836108a9565b6104b783838360405180602001604052806000815250610624565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610381565b60006001600160a01b0382166105ea5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610381565b506001600160a01b031660009081526003602052604090205490565b60606001805461028990611156565b610620338383610a45565b5050565b61062e33836107b2565b61064a5760405162461bcd60e51b815260040161038190611096565b61065684848484610b14565b50505050565b6000818152600260205260409020546060906001600160a01b03166106db5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610381565b60006106f260408051602081019091526000815290565b90506000815111610712576040518060200160405280600081525061073d565b8061071c84610b47565b60405160200161072d929190610fc5565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061077982610508565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661082b5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610381565b600061083683610508565b9050806001600160a01b0316846001600160a01b031614806108715750836001600160a01b03166108668461030c565b6001600160a01b0316145b806108a157506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166108bc82610508565b6001600160a01b0316146109205760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610381565b6001600160a01b0382166109825760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610381565b61098d600082610744565b6001600160a01b03831660009081526003602052604081208054600192906109b6908490611113565b90915550506001600160a01b03821660009081526003602052604081208054600192906109e49084906110e7565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b03161415610aa75760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610381565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610b1f8484846108a9565b610b2b84848484610c61565b6106565760405162461bcd60e51b815260040161038190611044565b606081610b6b5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b955780610b7f81611191565b9150610b8e9050600a836110ff565b9150610b6f565b60008167ffffffffffffffff811115610bbe57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610be8576020820181803683370190505b5090505b84156108a157610bfd600183611113565b9150610c0a600a866111ac565b610c159060306110e7565b60f81b818381518110610c3857634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350610c5a600a866110ff565b9450610bec565b60006001600160a01b0384163b15610d6357604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610ca5903390899088908890600401610ff4565b602060405180830381600087803b158015610cbf57600080fd5b505af1925050508015610cef575060408051601f3d908101601f19168201909252610cec91810190610f65565b60015b610d49573d808015610d1d576040519150601f19603f3d011682016040523d82523d6000602084013e610d22565b606091505b508051610d415760405162461bcd60e51b815260040161038190611044565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108a1565b506001949350505050565b80356001600160a01b0381168114610d8557600080fd5b919050565b600060208284031215610d9b578081fd5b61073d82610d6e565b60008060408385031215610db6578081fd5b610dbf83610d6e565b9150610dcd60208401610d6e565b90509250929050565b600080600060608486031215610dea578081fd5b610df384610d6e565b9250610e0160208501610d6e565b9150604084013590509250925092565b60008060008060808587031215610e26578081fd5b610e2f85610d6e565b9350610e3d60208601610d6e565b925060408501359150606085013567ffffffffffffffff80821115610e60578283fd5b818701915087601f830112610e73578283fd5b813581811115610e8557610e856111ec565b604051601f8201601f19908116603f01168101908382118183101715610ead57610ead6111ec565b816040528281528a6020848701011115610ec5578586fd5b82602086016020830137918201602001949094529598949750929550505050565b60008060408385031215610ef8578182fd5b610f0183610d6e565b915060208301358015158114610f15578182fd5b809150509250929050565b60008060408385031215610f32578182fd5b610f3b83610d6e565b946020939093013593505050565b600060208284031215610f5a578081fd5b813561073d81611202565b600060208284031215610f76578081fd5b815161073d81611202565b600060208284031215610f92578081fd5b5035919050565b60008151808452610fb181602086016020860161112a565b601f01601f19169290920160200192915050565b60008351610fd781846020880161112a565b835190830190610feb81836020880161112a565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061102790830184610f99565b9695505050505050565b60208152600061073d6020830184610f99565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082198211156110fa576110fa6111c0565b500190565b60008261110e5761110e6111d6565b500490565b600082821015611125576111256111c0565b500390565b60005b8381101561114557818101518382015260200161112d565b838111156106565750506000910152565b600181811c9082168061116a57607f821691505b6020821081141561118b57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156111a5576111a56111c0565b5060010190565b6000826111bb576111bb6111d6565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461121857600080fd5b5056fea264697066735822122015712ae24d8689fae18a6bebbfc16b1fb62d592312dd1868659cf9a0a598d7ad64736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610f49565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f39190611031565b61012461011f366004610f81565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610f20565b6103a6565b005b61014f61015f366004610dd6565b6104bc565b61014f610172366004610dd6565b6104ed565b610124610185366004610f81565b610508565b61019d610198366004610d8a565b61057f565b6040519081526020016100f3565b610104610606565b61014f6101c1366004610ee6565b610615565b61014f6101d4366004610e11565b610624565b6101046101e7366004610f81565b61065c565b6100e76101fa366004610da4565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461028990611156565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590611156565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661038a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103b182610508565b9050806001600160a01b0316836001600160a01b0316141561041f5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610381565b336001600160a01b038216148061043b575061043b81336101fa565b6104ad5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610381565b6104b78383610744565b505050565b6104c633826107b2565b6104e25760405162461bcd60e51b815260040161038190611096565b6104b78383836108a9565b6104b783838360405180602001604052806000815250610624565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610381565b60006001600160a01b0382166105ea5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610381565b506001600160a01b031660009081526003602052604090205490565b60606001805461028990611156565b610620338383610a45565b5050565b61062e33836107b2565b61064a5760405162461bcd60e51b815260040161038190611096565b61065684848484610b14565b50505050565b6000818152600260205260409020546060906001600160a01b03166106db5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610381565b60006106f260408051602081019091526000815290565b90506000815111610712576040518060200160405280600081525061073d565b8061071c84610b47565b60405160200161072d929190610fc5565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061077982610508565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661082b5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610381565b600061083683610508565b9050806001600160a01b0316846001600160a01b031614806108715750836001600160a01b03166108668461030c565b6001600160a01b0316145b806108a157506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166108bc82610508565b6001600160a01b0316146109205760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610381565b6001600160a01b0382166109825760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610381565b61098d600082610744565b6001600160a01b03831660009081526003602052604081208054600192906109b6908490611113565b90915550506001600160a01b03821660009081526003602052604081208054600192906109e49084906110e7565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b03161415610aa75760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610381565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610b1f8484846108a9565b610b2b84848484610c61565b6106565760405162461bcd60e51b815260040161038190611044565b606081610b6b5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b955780610b7f81611191565b9150610b8e9050600a836110ff565b9150610b6f565b60008167ffffffffffffffff811115610bbe57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610be8576020820181803683370190505b5090505b84156108a157610bfd600183611113565b9150610c0a600a866111ac565b610c159060306110e7565b60f81b818381518110610c3857634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350610c5a600a866110ff565b9450610bec565b60006001600160a01b0384163b15610d6357604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610ca5903390899088908890600401610ff4565b602060405180830381600087803b158015610cbf57600080fd5b505af1925050508015610cef575060408051601f3d908101601f19168201909252610cec91810190610f65565b60015b610d49573d808015610d1d576040519150601f19603f3d011682016040523d82523d6000602084013e610d22565b606091505b508051610d415760405162461bcd60e51b815260040161038190611044565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108a1565b506001949350505050565b80356001600160a01b0381168114610d8557600080fd5b919050565b600060208284031215610d9b578081fd5b61073d82610d6e565b60008060408385031215610db6578081fd5b610dbf83610d6e565b9150610dcd60208401610d6e565b90509250929050565b600080600060608486031215610dea578081fd5b610df384610d6e565b9250610e0160208501610d6e565b9150604084013590509250925092565b60008060008060808587031215610e26578081fd5b610e2f85610d6e565b9350610e3d60208601610d6e565b925060408501359150606085013567ffffffffffffffff80821115610e60578283fd5b818701915087601f830112610e73578283fd5b813581811115610e8557610e856111ec565b604051601f8201601f19908116603f01168101908382118183101715610ead57610ead6111ec565b816040528281528a6020848701011115610ec5578586fd5b82602086016020830137918201602001949094529598949750929550505050565b60008060408385031215610ef8578182fd5b610f0183610d6e565b915060208301358015158114610f15578182fd5b809150509250929050565b60008060408385031215610f32578182fd5b610f3b83610d6e565b946020939093013593505050565b600060208284031215610f5a578081fd5b813561073d81611202565b600060208284031215610f76578081fd5b815161073d81611202565b600060208284031215610f92578081fd5b5035919050565b60008151808452610fb181602086016020860161112a565b601f01601f19169290920160200192915050565b60008351610fd781846020880161112a565b835190830190610feb81836020880161112a565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061102790830184610f99565b9695505050505050565b60208152600061073d6020830184610f99565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082198211156110fa576110fa6111c0565b500190565b60008261110e5761110e6111d6565b500490565b600082821015611125576111256111c0565b500390565b60005b8381101561114557818101518382015260200161112d565b838111156106565750506000910152565b600181811c9082168061116a57607f821691505b6020821081141561118b57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156111a5576111a56111c0565b5060010190565b6000826111bb576111bb6111d6565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461121857600080fd5b5056fea264697066735822122015712ae24d8689fae18a6bebbfc16b1fb62d592312dd1868659cf9a0a598d7ad64736f6c63430008040033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

'''
'''--- artifacts/@openzeppelin/contracts/token/ERC721/IERC721.sol/IERC721.dbg.json ---
{
  "_format": "hh-sol-dbg-1",
  "buildInfo": "..\\..\\..\\..\\..\\build-info\\2166894aa5d6d47f56a77d72dfc7be41.json"
}

'''
'''--- artifacts/@openzeppelin/contracts/token/ERC721/IERC721.sol/IERC721.json ---
{
  "_format": "hh-sol-artifact-1",
  "contractName": "IERC721",
  "sourceName": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

'''
'''--- artifacts/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol/IERC721Receiver.dbg.json ---
{
  "_format": "hh-sol-dbg-1",
  "buildInfo": "..\\..\\..\\..\\..\\build-info\\2166894aa5d6d47f56a77d72dfc7be41.json"
}

'''
'''--- artifacts/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol/IERC721Receiver.json ---
{
  "_format": "hh-sol-artifact-1",
  "contractName": "IERC721Receiver",
  "sourceName": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

'''
'''--- artifacts/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol/ERC721URIStorage.dbg.json ---
{
  "_format": "hh-sol-dbg-1",
  "buildInfo": "..\\..\\..\\..\\..\\..\\build-info\\2166894aa5d6d47f56a77d72dfc7be41.json"
}

'''
'''--- artifacts/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol/ERC721URIStorage.json ---
{
  "_format": "hh-sol-artifact-1",
  "contractName": "ERC721URIStorage",
  "sourceName": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

'''
'''--- artifacts/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol/IERC721Metadata.dbg.json ---
{
  "_format": "hh-sol-dbg-1",
  "buildInfo": "..\\..\\..\\..\\..\\..\\build-info\\2166894aa5d6d47f56a77d72dfc7be41.json"
}

'''
'''--- artifacts/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol/IERC721Metadata.json ---
{
  "_format": "hh-sol-artifact-1",
  "contractName": "IERC721Metadata",
  "sourceName": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

'''
'''--- artifacts/@openzeppelin/contracts/utils/Address.sol/Address.dbg.json ---
{
  "_format": "hh-sol-dbg-1",
  "buildInfo": "..\\..\\..\\..\\build-info\\2166894aa5d6d47f56a77d72dfc7be41.json"
}

'''
'''--- artifacts/@openzeppelin/contracts/utils/Address.sol/Address.json ---
{
  "_format": "hh-sol-artifact-1",
  "contractName": "Address",
  "sourceName": "@openzeppelin/contracts/utils/Address.sol",
  "abi": [],
  "bytecode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e1ffa10a5f438f11456da0ee92278049e584d107e9b4fb27ac2522f46c06dee864736f6c63430008040033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e1ffa10a5f438f11456da0ee92278049e584d107e9b4fb27ac2522f46c06dee864736f6c63430008040033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

'''
'''--- artifacts/@openzeppelin/contracts/utils/Context.sol/Context.dbg.json ---
{
  "_format": "hh-sol-dbg-1",
  "buildInfo": "..\\..\\..\\..\\build-info\\2166894aa5d6d47f56a77d72dfc7be41.json"
}

'''
'''--- artifacts/@openzeppelin/contracts/utils/Context.sol/Context.json ---
{
  "_format": "hh-sol-artifact-1",
  "contractName": "Context",
  "sourceName": "@openzeppelin/contracts/utils/Context.sol",
  "abi": [],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

'''
'''--- artifacts/@openzeppelin/contracts/utils/Strings.sol/Strings.dbg.json ---
{
  "_format": "hh-sol-dbg-1",
  "buildInfo": "..\\..\\..\\..\\build-info\\2166894aa5d6d47f56a77d72dfc7be41.json"
}

'''
'''--- artifacts/@openzeppelin/contracts/utils/Strings.sol/Strings.json ---
{
  "_format": "hh-sol-artifact-1",
  "contractName": "Strings",
  "sourceName": "@openzeppelin/contracts/utils/Strings.sol",
  "abi": [],
  "bytecode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a364030ddaa4ba6708934a9435fcbcf71b3c72f0321d6d5d0e0161c12bef99dc64736f6c63430008040033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a364030ddaa4ba6708934a9435fcbcf71b3c72f0321d6d5d0e0161c12bef99dc64736f6c63430008040033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

'''
'''--- artifacts/@openzeppelin/contracts/utils/introspection/ERC165.sol/ERC165.dbg.json ---
{
  "_format": "hh-sol-dbg-1",
  "buildInfo": "..\\..\\..\\..\\..\\build-info\\2166894aa5d6d47f56a77d72dfc7be41.json"
}

'''
'''--- artifacts/@openzeppelin/contracts/utils/introspection/ERC165.sol/ERC165.json ---
{
  "_format": "hh-sol-artifact-1",
  "contractName": "ERC165",
  "sourceName": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

'''
'''--- artifacts/@openzeppelin/contracts/utils/introspection/IERC165.sol/IERC165.dbg.json ---
{
  "_format": "hh-sol-dbg-1",
  "buildInfo": "..\\..\\..\\..\\..\\build-info\\2166894aa5d6d47f56a77d72dfc7be41.json"
}

'''
'''--- artifacts/@openzeppelin/contracts/utils/introspection/IERC165.sol/IERC165.json ---
{
  "_format": "hh-sol-artifact-1",
  "contractName": "IERC165",
  "sourceName": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

'''
'''--- artifacts/contracts/Insignia.sol/Insignia.dbg.json ---
{
  "_format": "hh-sol-dbg-1",
  "buildInfo": "..\\..\\build-info\\2166894aa5d6d47f56a77d72dfc7be41.json"
}

'''
'''--- artifacts/contracts/Insignia.sol/Insignia.json ---
{
  "_format": "hh-sol-artifact-1",
  "contractName": "Insignia",
  "sourceName": "contracts/Insignia.sol",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "dna",
          "type": "uint256"
        }
      ],
      "name": "NewGladiator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "createRandomGladiator",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGladiators",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dna",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "level",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "rarity",
              "type": "uint8"
            }
          ],
          "internalType": "struct Insignia.Gladiator[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMintingPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getOwnerGladiators",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dna",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "level",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "rarity",
              "type": "uint8"
            }
          ],
          "internalType": "struct Insignia.Gladiator[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "gladiators",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dna",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "level",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "rarity",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_gladiatorId",
          "type": "uint256"
        }
      ],
      "name": "levelUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "updateFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405266044364c5bb00006009553480156200001c57600080fd5b5060405180604001604052806008815260200167496e7369676e696160c01b81525060405180604001604052806008815260200167494e5349474e494160c01b81525081600090805190602001906200007792919062000105565b5080516200008d90600190602084019062000105565b50506007805460ff1916905550620000a533620000ab565b620001e8565b600780546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200011390620001ab565b90600052602060002090601f01602090048101928262000137576000855562000182565b82601f106200015257805160ff191683800117855562000182565b8280016001018555821562000182579182015b828111156200018257825182559160200191906001019062000165565b506200019092915062000194565b5090565b5b8082111562000190576000815560010162000195565b600181811c90821680620001c057607f821691505b60208210811415620001e257634e487b7160e01b600052602260045260246000fd5b50919050565b61252380620001f86000396000f3fe60806040526004361061019c5760003560e01c806370a08231116100ec578063a22cb4651161008a578063e4a83fb011610064578063e4a83fb01461046c578063e985e9c514610481578063edf764a3146104ca578063f2fde38b146104fb57600080fd5b8063a22cb4651461040c578063b88d4fde1461042c578063c87b56dd1461044c57600080fd5b80638456cb59116100c65780638456cb591461039f5780638da5cb5b146103b45780639012c4a8146103d757806395d89b41146103f757600080fd5b806370a0823114610347578063715018a61461037557806377d247621461038a57600080fd5b806323b872dd1161015957806342842e0e1161013357806342842e0e146102dc5780635c975abb146102fc5780636352211e146103145780636650fe2a1461033457600080fd5b806323b872dd1461029f5780633ccfd60b146102bf5780633f4ba83a146102c757600080fd5b806301ffc9a7146101a157806305f0bee6146101d657806306fdde0314610203578063081812fc14610225578063095ea7b31461025d5780630ce90ec21461027f575b600080fd5b3480156101ad57600080fd5b506101c16101bc366004612091565b61051b565b60405190151581526020015b60405180910390f35b3480156101e257600080fd5b506101f66101f1366004611f2e565b61056d565b6040516101cd91906121da565b34801561020f57600080fd5b5061021861078f565b6040516101cd9190612277565b34801561023157600080fd5b5061024561024036600461212a565b610821565b6040516001600160a01b0390911681526020016101cd565b34801561026957600080fd5b5061027d610278366004612068565b6108ae565b005b34801561028b57600080fd5b5061027d61029a36600461212a565b6109c4565b3480156102ab57600080fd5b5061027d6102ba366004611f7a565b610a49565b61027d610a7a565b3480156102d357600080fd5b5061027d610afa565b3480156102e857600080fd5b5061027d6102f7366004611f7a565b610b34565b34801561030857600080fd5b5060075460ff166101c1565b34801561032057600080fd5b5061024561032f36600461212a565b610b4f565b61027d6103423660046120c9565b610bc6565b34801561035357600080fd5b50610367610362366004611f2e565b610c25565b6040519081526020016101cd565b34801561038157600080fd5b5061027d610cac565b34801561039657600080fd5b50600954610367565b3480156103ab57600080fd5b5061027d610ce6565b3480156103c057600080fd5b5060075461010090046001600160a01b0316610245565b3480156103e357600080fd5b5061027d6103f236600461212a565b610d1e565b34801561040357600080fd5b50610218610d53565b34801561041857600080fd5b5061027d61042736600461202e565b610d62565b34801561043857600080fd5b5061027d610447366004611fb5565b610d6d565b34801561045857600080fd5b5061021861046736600461212a565b610da5565b34801561047857600080fd5b506101f6610f1c565b34801561048d57600080fd5b506101c161049c366004611f48565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156104d657600080fd5b506104ea6104e536600461212a565b611042565b6040516101cd95949392919061228a565b34801561050757600080fd5b5061027d610516366004611f2e565b611118565b60006001600160e01b031982166380ac58cd60e01b148061054c57506001600160e01b03198216635b5e139f60e01b145b8061056757506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600061057a83610c25565b67ffffffffffffffff8111156105a057634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561060957816020015b6105f66040518060a00160405280606081526020016000815260200160008152602001600060ff168152602001600060ff1681525090565b8152602001906001900390816105be5790505b5090506000805b600a5481101561078657846001600160a01b031661062d82610b4f565b6001600160a01b0316141561077457600a818154811061065d57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600402016040518060a00160405290816000820180546106869061240b565b80601f01602080910402602001604051908101604052809291908181526020018280546106b29061240b565b80156106ff5780601f106106d4576101008083540402835291602001916106ff565b820191906000526020600020905b8154815290600101906020018083116106e257829003601f168201915b5050509183525050600182015460208201526002820154604082015260039091015460ff808216606084015261010090910416608090910152835184908490811061075a57634e487b7160e01b600052603260045260246000fd5b6020026020010181905250818061077090612446565b9250505b8061077e81612446565b915050610610565b50909392505050565b60606000805461079e9061240b565b80601f01602080910402602001604051908101604052809291908181526020018280546107ca9061240b565b80156108175780601f106107ec57610100808354040283529160200191610817565b820191906000526020600020905b8154815290600101906020018083116107fa57829003601f168201915b5050505050905090565b600061082c826111b9565b6108925760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006108b982610b4f565b9050806001600160a01b0316836001600160a01b031614156109275760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610889565b336001600160a01b03821614806109435750610943813361049c565b6109b55760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610889565b6109bf83836111d6565b505050565b336109ce82610b4f565b6001600160a01b0316146109e157600080fd5b6000600a8281548110610a0457634e487b7160e01b600052603260045260246000fd5b6000918252602082206003600490920201908101805491935060ff90911691610a2c83612461565b91906101000a81548160ff021916908360ff160217905550505050565b610a533382611244565b610a6f5760405162461bcd60e51b81526004016108899061234b565b6109bf83838361132a565b6007546001600160a01b03610100909104163314610aaa5760405162461bcd60e51b815260040161088990612316565b60075460009061010090046001600160a01b03166040519091506001600160a01b038216904780156108fc02916000818181858888f19350505050158015610af6573d6000803e3d6000fd5b5050565b6007546001600160a01b03610100909104163314610b2a5760405162461bcd60e51b815260040161088990612316565b610b326114c6565b565b6109bf83838360405180602001604052806000815250610d6d565b6000818152600260205260408120546001600160a01b0316806105675760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610889565b60075460ff1615610c0c5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610889565b600954341015610c1b57600080fd5b610af68282611559565b60006001600160a01b038216610c905760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610889565b506001600160a01b031660009081526003602052604090205490565b6007546001600160a01b03610100909104163314610cdc5760405162461bcd60e51b815260040161088990612316565b610b3260006116ae565b6007546001600160a01b03610100909104163314610d165760405162461bcd60e51b815260040161088990612316565b610b32611708565b6007546001600160a01b03610100909104163314610d4e5760405162461bcd60e51b815260040161088990612316565b600955565b60606001805461079e9061240b565b610af6338383611783565b610d773383611244565b610d935760405162461bcd60e51b81526004016108899061234b565b610d9f84848484611852565b50505050565b6060610db0826111b9565b610e165760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b6064820152608401610889565b60008281526006602052604081208054610e2f9061240b565b80601f0160208091040260200160405190810160405280929190818152602001828054610e5b9061240b565b8015610ea85780601f10610e7d57610100808354040283529160200191610ea8565b820191906000526020600020905b815481529060010190602001808311610e8b57829003601f168201915b505050505090506000610ec660408051602081019091526000815290565b9050805160001415610ed9575092915050565b815115610f0b578082604051602001610ef392919061216e565b60405160208183030381529060405292505050919050565b610f1484611885565b949350505050565b6060600a805480602002602001604051908101604052809291908181526020016000905b8282101561103957838290600052602060002090600402016040518060a0016040529081600082018054610f739061240b565b80601f0160208091040260200160405190810160405280929190818152602001828054610f9f9061240b565b8015610fec5780601f10610fc157610100808354040283529160200191610fec565b820191906000526020600020905b815481529060010190602001808311610fcf57829003601f168201915b50505091835250506001828101546020808401919091526002840154604084015260039093015460ff80821660608501526101009091041660809092019190915291835292019101610f40565b50505050905090565b600a818154811061105257600080fd5b90600052602060002090600402016000915090508060000180546110759061240b565b80601f01602080910402602001604051908101604052809291908181526020018280546110a19061240b565b80156110ee5780601f106110c3576101008083540402835291602001916110ee565b820191906000526020600020905b8154815290600101906020018083116110d157829003601f168201915b50505050600183015460028401546003909401549293909290915060ff8082169161010090041685565b6007546001600160a01b036101009091041633146111485760405162461bcd60e51b815260040161088990612316565b6001600160a01b0381166111ad5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610889565b6111b6816116ae565b50565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061120b82610b4f565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061124f826111b9565b6112b05760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610889565b60006112bb83610b4f565b9050806001600160a01b0316846001600160a01b031614806112f65750836001600160a01b03166112eb84610821565b6001600160a01b0316145b80610f1457506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff16610f14565b826001600160a01b031661133d82610b4f565b6001600160a01b0316146113a15760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610889565b6001600160a01b0382166114035760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610889565b61140e6000826111d6565b6001600160a01b03831660009081526003602052604081208054600192906114379084906123c8565b90915550506001600160a01b038216600090815260036020526040812080546001929061146590849061239c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60075460ff1661150f5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610889565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000611565606461195d565b90506000611579662386f26fc1000061195d565b6040805160a08101825286815260085460208083019190915291810183905260016060820181905260ff86166080830152600a80549182018155600052815180519495509193849360049092027fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a801926115f7928492910190611de4565b50602082015160018201556040820151600282015560608201516003909101805460809093015160ff9081166101000261ffff199094169216919091179190911790556008546116489033906119b2565b611654600854856119cc565b600854604080519182526020820184905233917fafe9a4d0bee41081247d7c2ed78c299e0659e38f39503e1396e7e82f7bee258b910160405180910390a2600880549060006116a283612446565b91905055505050505050565b600780546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60075460ff161561174e5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610889565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861153c3390565b816001600160a01b0316836001600160a01b031614156117e55760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610889565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61185d84848461132a565b61186984848484611a57565b610d9f5760405162461bcd60e51b8152600401610889906122c4565b6060611890826111b9565b6118f45760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610889565b600061190b60408051602081019091526000815290565b9050600081511161192b5760405180602001604052806000815250611956565b8061193584611b64565b60405160200161194692919061216e565b6040516020818303038152906040525b9392505050565b600080423360405160200161198e92919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b60408051601f19818403018152919052805160209091012090506119568382612481565b610af6828260405180602001604052806000815250611c7e565b6119d5826111b9565b611a385760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608401610889565b600082815260066020908152604090912082516109bf92840190611de4565b60006001600160a01b0384163b15611b5957604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611a9b90339089908890889060040161219d565b602060405180830381600087803b158015611ab557600080fd5b505af1925050508015611ae5575060408051601f3d908101601f19168201909252611ae2918101906120ad565b60015b611b3f573d808015611b13576040519150601f19603f3d011682016040523d82523d6000602084013e611b18565b606091505b508051611b375760405162461bcd60e51b8152600401610889906122c4565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610f14565b506001949350505050565b606081611b885750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611bb25780611b9c81612446565b9150611bab9050600a836123b4565b9150611b8c565b60008167ffffffffffffffff811115611bdb57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611c05576020820181803683370190505b5090505b8415610f1457611c1a6001836123c8565b9150611c27600a86612481565b611c3290603061239c565b60f81b818381518110611c5557634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350611c77600a866123b4565b9450611c09565b611c888383611cb1565b611c956000848484611a57565b6109bf5760405162461bcd60e51b8152600401610889906122c4565b6001600160a01b038216611d075760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610889565b611d10816111b9565b15611d5d5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610889565b6001600160a01b0382166000908152600360205260408120805460019290611d8690849061239c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611df09061240b565b90600052602060002090601f016020900481019282611e125760008555611e58565b82601f10611e2b57805160ff1916838001178555611e58565b82800160010185558215611e58579182015b82811115611e58578251825591602001919060010190611e3d565b50611e64929150611e68565b5090565b5b80821115611e645760008155600101611e69565b600067ffffffffffffffff80841115611e9857611e986124c1565b604051601f8501601f19908116603f01168101908282118183101715611ec057611ec06124c1565b81604052809350858152868686011115611ed957600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b0381168114611f0a57600080fd5b919050565b600082601f830112611f1f578081fd5b61195683833560208501611e7d565b600060208284031215611f3f578081fd5b61195682611ef3565b60008060408385031215611f5a578081fd5b611f6383611ef3565b9150611f7160208401611ef3565b90509250929050565b600080600060608486031215611f8e578081fd5b611f9784611ef3565b9250611fa560208501611ef3565b9150604084013590509250925092565b60008060008060808587031215611fca578081fd5b611fd385611ef3565b9350611fe160208601611ef3565b925060408501359150606085013567ffffffffffffffff811115612003578182fd5b8501601f81018713612013578182fd5b61202287823560208401611e7d565b91505092959194509250565b60008060408385031215612040578182fd5b61204983611ef3565b91506020830135801515811461205d578182fd5b809150509250929050565b6000806040838503121561207a578182fd5b61208383611ef3565b946020939093013593505050565b6000602082840312156120a2578081fd5b8135611956816124d7565b6000602082840312156120be578081fd5b8151611956816124d7565b600080604083850312156120db578182fd5b823567ffffffffffffffff808211156120f2578384fd5b6120fe86838701611f0f565b93506020850135915080821115612113578283fd5b5061212085828601611f0f565b9150509250929050565b60006020828403121561213b578081fd5b5035919050565b6000815180845261215a8160208601602086016123df565b601f01601f19169290920160200192915050565b600083516121808184602088016123df565b8351908301906121948183602088016123df565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906121d090830184612142565b9695505050505050565b60006020808301818452808551808352604092508286019150828160051b870101848801865b8381101561226957603f19898403018552815160a0815181865261222682870182612142565b838b0151878c0152898401518a88015260608085015160ff9081169189019190915260809485015116939096019290925250509386019390860190600101612200565b509098975050505050505050565b6020815260006119566020830184612142565b60a08152600061229d60a0830188612142565b602083019690965250604081019390935260ff918216606084015216608090910152919050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082198211156123af576123af612495565b500190565b6000826123c3576123c36124ab565b500490565b6000828210156123da576123da612495565b500390565b60005b838110156123fa5781810151838201526020016123e2565b83811115610d9f5750506000910152565b600181811c9082168061241f57607f821691505b6020821081141561244057634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561245a5761245a612495565b5060010190565b600060ff821660ff81141561247857612478612495565b60010192915050565b600082612490576124906124ab565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146111b657600080fdfea2646970667358221220dcf244a636141fba7714f326ce49b21096df92c6878a9a6db1752f892c3f55ee64736f6c63430008040033",
  "deployedBytecode": "0x60806040526004361061019c5760003560e01c806370a08231116100ec578063a22cb4651161008a578063e4a83fb011610064578063e4a83fb01461046c578063e985e9c514610481578063edf764a3146104ca578063f2fde38b146104fb57600080fd5b8063a22cb4651461040c578063b88d4fde1461042c578063c87b56dd1461044c57600080fd5b80638456cb59116100c65780638456cb591461039f5780638da5cb5b146103b45780639012c4a8146103d757806395d89b41146103f757600080fd5b806370a0823114610347578063715018a61461037557806377d247621461038a57600080fd5b806323b872dd1161015957806342842e0e1161013357806342842e0e146102dc5780635c975abb146102fc5780636352211e146103145780636650fe2a1461033457600080fd5b806323b872dd1461029f5780633ccfd60b146102bf5780633f4ba83a146102c757600080fd5b806301ffc9a7146101a157806305f0bee6146101d657806306fdde0314610203578063081812fc14610225578063095ea7b31461025d5780630ce90ec21461027f575b600080fd5b3480156101ad57600080fd5b506101c16101bc366004612091565b61051b565b60405190151581526020015b60405180910390f35b3480156101e257600080fd5b506101f66101f1366004611f2e565b61056d565b6040516101cd91906121da565b34801561020f57600080fd5b5061021861078f565b6040516101cd9190612277565b34801561023157600080fd5b5061024561024036600461212a565b610821565b6040516001600160a01b0390911681526020016101cd565b34801561026957600080fd5b5061027d610278366004612068565b6108ae565b005b34801561028b57600080fd5b5061027d61029a36600461212a565b6109c4565b3480156102ab57600080fd5b5061027d6102ba366004611f7a565b610a49565b61027d610a7a565b3480156102d357600080fd5b5061027d610afa565b3480156102e857600080fd5b5061027d6102f7366004611f7a565b610b34565b34801561030857600080fd5b5060075460ff166101c1565b34801561032057600080fd5b5061024561032f36600461212a565b610b4f565b61027d6103423660046120c9565b610bc6565b34801561035357600080fd5b50610367610362366004611f2e565b610c25565b6040519081526020016101cd565b34801561038157600080fd5b5061027d610cac565b34801561039657600080fd5b50600954610367565b3480156103ab57600080fd5b5061027d610ce6565b3480156103c057600080fd5b5060075461010090046001600160a01b0316610245565b3480156103e357600080fd5b5061027d6103f236600461212a565b610d1e565b34801561040357600080fd5b50610218610d53565b34801561041857600080fd5b5061027d61042736600461202e565b610d62565b34801561043857600080fd5b5061027d610447366004611fb5565b610d6d565b34801561045857600080fd5b5061021861046736600461212a565b610da5565b34801561047857600080fd5b506101f6610f1c565b34801561048d57600080fd5b506101c161049c366004611f48565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156104d657600080fd5b506104ea6104e536600461212a565b611042565b6040516101cd95949392919061228a565b34801561050757600080fd5b5061027d610516366004611f2e565b611118565b60006001600160e01b031982166380ac58cd60e01b148061054c57506001600160e01b03198216635b5e139f60e01b145b8061056757506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600061057a83610c25565b67ffffffffffffffff8111156105a057634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561060957816020015b6105f66040518060a00160405280606081526020016000815260200160008152602001600060ff168152602001600060ff1681525090565b8152602001906001900390816105be5790505b5090506000805b600a5481101561078657846001600160a01b031661062d82610b4f565b6001600160a01b0316141561077457600a818154811061065d57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600402016040518060a00160405290816000820180546106869061240b565b80601f01602080910402602001604051908101604052809291908181526020018280546106b29061240b565b80156106ff5780601f106106d4576101008083540402835291602001916106ff565b820191906000526020600020905b8154815290600101906020018083116106e257829003601f168201915b5050509183525050600182015460208201526002820154604082015260039091015460ff808216606084015261010090910416608090910152835184908490811061075a57634e487b7160e01b600052603260045260246000fd5b6020026020010181905250818061077090612446565b9250505b8061077e81612446565b915050610610565b50909392505050565b60606000805461079e9061240b565b80601f01602080910402602001604051908101604052809291908181526020018280546107ca9061240b565b80156108175780601f106107ec57610100808354040283529160200191610817565b820191906000526020600020905b8154815290600101906020018083116107fa57829003601f168201915b5050505050905090565b600061082c826111b9565b6108925760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006108b982610b4f565b9050806001600160a01b0316836001600160a01b031614156109275760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610889565b336001600160a01b03821614806109435750610943813361049c565b6109b55760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610889565b6109bf83836111d6565b505050565b336109ce82610b4f565b6001600160a01b0316146109e157600080fd5b6000600a8281548110610a0457634e487b7160e01b600052603260045260246000fd5b6000918252602082206003600490920201908101805491935060ff90911691610a2c83612461565b91906101000a81548160ff021916908360ff160217905550505050565b610a533382611244565b610a6f5760405162461bcd60e51b81526004016108899061234b565b6109bf83838361132a565b6007546001600160a01b03610100909104163314610aaa5760405162461bcd60e51b815260040161088990612316565b60075460009061010090046001600160a01b03166040519091506001600160a01b038216904780156108fc02916000818181858888f19350505050158015610af6573d6000803e3d6000fd5b5050565b6007546001600160a01b03610100909104163314610b2a5760405162461bcd60e51b815260040161088990612316565b610b326114c6565b565b6109bf83838360405180602001604052806000815250610d6d565b6000818152600260205260408120546001600160a01b0316806105675760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610889565b60075460ff1615610c0c5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610889565b600954341015610c1b57600080fd5b610af68282611559565b60006001600160a01b038216610c905760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610889565b506001600160a01b031660009081526003602052604090205490565b6007546001600160a01b03610100909104163314610cdc5760405162461bcd60e51b815260040161088990612316565b610b3260006116ae565b6007546001600160a01b03610100909104163314610d165760405162461bcd60e51b815260040161088990612316565b610b32611708565b6007546001600160a01b03610100909104163314610d4e5760405162461bcd60e51b815260040161088990612316565b600955565b60606001805461079e9061240b565b610af6338383611783565b610d773383611244565b610d935760405162461bcd60e51b81526004016108899061234b565b610d9f84848484611852565b50505050565b6060610db0826111b9565b610e165760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b6064820152608401610889565b60008281526006602052604081208054610e2f9061240b565b80601f0160208091040260200160405190810160405280929190818152602001828054610e5b9061240b565b8015610ea85780601f10610e7d57610100808354040283529160200191610ea8565b820191906000526020600020905b815481529060010190602001808311610e8b57829003601f168201915b505050505090506000610ec660408051602081019091526000815290565b9050805160001415610ed9575092915050565b815115610f0b578082604051602001610ef392919061216e565b60405160208183030381529060405292505050919050565b610f1484611885565b949350505050565b6060600a805480602002602001604051908101604052809291908181526020016000905b8282101561103957838290600052602060002090600402016040518060a0016040529081600082018054610f739061240b565b80601f0160208091040260200160405190810160405280929190818152602001828054610f9f9061240b565b8015610fec5780601f10610fc157610100808354040283529160200191610fec565b820191906000526020600020905b815481529060010190602001808311610fcf57829003601f168201915b50505091835250506001828101546020808401919091526002840154604084015260039093015460ff80821660608501526101009091041660809092019190915291835292019101610f40565b50505050905090565b600a818154811061105257600080fd5b90600052602060002090600402016000915090508060000180546110759061240b565b80601f01602080910402602001604051908101604052809291908181526020018280546110a19061240b565b80156110ee5780601f106110c3576101008083540402835291602001916110ee565b820191906000526020600020905b8154815290600101906020018083116110d157829003601f168201915b50505050600183015460028401546003909401549293909290915060ff8082169161010090041685565b6007546001600160a01b036101009091041633146111485760405162461bcd60e51b815260040161088990612316565b6001600160a01b0381166111ad5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610889565b6111b6816116ae565b50565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061120b82610b4f565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061124f826111b9565b6112b05760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610889565b60006112bb83610b4f565b9050806001600160a01b0316846001600160a01b031614806112f65750836001600160a01b03166112eb84610821565b6001600160a01b0316145b80610f1457506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff16610f14565b826001600160a01b031661133d82610b4f565b6001600160a01b0316146113a15760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610889565b6001600160a01b0382166114035760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610889565b61140e6000826111d6565b6001600160a01b03831660009081526003602052604081208054600192906114379084906123c8565b90915550506001600160a01b038216600090815260036020526040812080546001929061146590849061239c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60075460ff1661150f5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610889565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000611565606461195d565b90506000611579662386f26fc1000061195d565b6040805160a08101825286815260085460208083019190915291810183905260016060820181905260ff86166080830152600a80549182018155600052815180519495509193849360049092027fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a801926115f7928492910190611de4565b50602082015160018201556040820151600282015560608201516003909101805460809093015160ff9081166101000261ffff199094169216919091179190911790556008546116489033906119b2565b611654600854856119cc565b600854604080519182526020820184905233917fafe9a4d0bee41081247d7c2ed78c299e0659e38f39503e1396e7e82f7bee258b910160405180910390a2600880549060006116a283612446565b91905055505050505050565b600780546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60075460ff161561174e5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610889565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861153c3390565b816001600160a01b0316836001600160a01b031614156117e55760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610889565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61185d84848461132a565b61186984848484611a57565b610d9f5760405162461bcd60e51b8152600401610889906122c4565b6060611890826111b9565b6118f45760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610889565b600061190b60408051602081019091526000815290565b9050600081511161192b5760405180602001604052806000815250611956565b8061193584611b64565b60405160200161194692919061216e565b6040516020818303038152906040525b9392505050565b600080423360405160200161198e92919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b60408051601f19818403018152919052805160209091012090506119568382612481565b610af6828260405180602001604052806000815250611c7e565b6119d5826111b9565b611a385760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608401610889565b600082815260066020908152604090912082516109bf92840190611de4565b60006001600160a01b0384163b15611b5957604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611a9b90339089908890889060040161219d565b602060405180830381600087803b158015611ab557600080fd5b505af1925050508015611ae5575060408051601f3d908101601f19168201909252611ae2918101906120ad565b60015b611b3f573d808015611b13576040519150601f19603f3d011682016040523d82523d6000602084013e611b18565b606091505b508051611b375760405162461bcd60e51b8152600401610889906122c4565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610f14565b506001949350505050565b606081611b885750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611bb25780611b9c81612446565b9150611bab9050600a836123b4565b9150611b8c565b60008167ffffffffffffffff811115611bdb57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611c05576020820181803683370190505b5090505b8415610f1457611c1a6001836123c8565b9150611c27600a86612481565b611c3290603061239c565b60f81b818381518110611c5557634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350611c77600a866123b4565b9450611c09565b611c888383611cb1565b611c956000848484611a57565b6109bf5760405162461bcd60e51b8152600401610889906122c4565b6001600160a01b038216611d075760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610889565b611d10816111b9565b15611d5d5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610889565b6001600160a01b0382166000908152600360205260408120805460019290611d8690849061239c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611df09061240b565b90600052602060002090601f016020900481019282611e125760008555611e58565b82601f10611e2b57805160ff1916838001178555611e58565b82800160010185558215611e58579182015b82811115611e58578251825591602001919060010190611e3d565b50611e64929150611e68565b5090565b5b80821115611e645760008155600101611e69565b600067ffffffffffffffff80841115611e9857611e986124c1565b604051601f8501601f19908116603f01168101908282118183101715611ec057611ec06124c1565b81604052809350858152868686011115611ed957600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b0381168114611f0a57600080fd5b919050565b600082601f830112611f1f578081fd5b61195683833560208501611e7d565b600060208284031215611f3f578081fd5b61195682611ef3565b60008060408385031215611f5a578081fd5b611f6383611ef3565b9150611f7160208401611ef3565b90509250929050565b600080600060608486031215611f8e578081fd5b611f9784611ef3565b9250611fa560208501611ef3565b9150604084013590509250925092565b60008060008060808587031215611fca578081fd5b611fd385611ef3565b9350611fe160208601611ef3565b925060408501359150606085013567ffffffffffffffff811115612003578182fd5b8501601f81018713612013578182fd5b61202287823560208401611e7d565b91505092959194509250565b60008060408385031215612040578182fd5b61204983611ef3565b91506020830135801515811461205d578182fd5b809150509250929050565b6000806040838503121561207a578182fd5b61208383611ef3565b946020939093013593505050565b6000602082840312156120a2578081fd5b8135611956816124d7565b6000602082840312156120be578081fd5b8151611956816124d7565b600080604083850312156120db578182fd5b823567ffffffffffffffff808211156120f2578384fd5b6120fe86838701611f0f565b93506020850135915080821115612113578283fd5b5061212085828601611f0f565b9150509250929050565b60006020828403121561213b578081fd5b5035919050565b6000815180845261215a8160208601602086016123df565b601f01601f19169290920160200192915050565b600083516121808184602088016123df565b8351908301906121948183602088016123df565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906121d090830184612142565b9695505050505050565b60006020808301818452808551808352604092508286019150828160051b870101848801865b8381101561226957603f19898403018552815160a0815181865261222682870182612142565b838b0151878c0152898401518a88015260608085015160ff9081169189019190915260809485015116939096019290925250509386019390860190600101612200565b509098975050505050505050565b6020815260006119566020830184612142565b60a08152600061229d60a0830188612142565b602083019690965250604081019390935260ff918216606084015216608090910152919050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082198211156123af576123af612495565b500190565b6000826123c3576123c36124ab565b500490565b6000828210156123da576123da612495565b500390565b60005b838110156123fa5781810151838201526020016123e2565b83811115610d9f5750506000910152565b600181811c9082168061241f57607f821691505b6020821081141561244057634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561245a5761245a612495565b5060010190565b600060ff821660ff81141561247857612478612495565b60010192915050565b600082612490576124906124ab565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146111b657600080fdfea2646970667358221220dcf244a636141fba7714f326ce49b21096df92c6878a9a6db1752f892c3f55ee64736f6c63430008040033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

'''
'''--- cache/solidity-files-cache.json ---
{
  "_format": "hh-sol-cache-2",
  "files": {
    "C:\\Users\\GGR\\Documents\\Blockchain\\insignia\\contracts\\Insignia.sol": {
      "lastModificationDate": 1648673961734,
      "contentHash": "0ff3c7e57db9d11d2b1f95ddc97638ca",
      "sourceName": "contracts/Insignia.sol",
      "solcConfig": {
        "version": "0.8.4",
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "outputSelection": {
            "*": {
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ],
              "": [
                "ast"
              ]
            }
          }
        }
      },
      "imports": [
        "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "@openzeppelin/contracts/access/Ownable.sol",
        "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "@openzeppelin/contracts/security/Pausable.sol"
      ],
      "versionPragmas": [
        "^0.8.4"
      ],
      "artifacts": [
        "Insignia"
      ]
    },
    "C:\\Users\\GGR\\Documents\\Blockchain\\insignia\\node_modules\\@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol": {
      "lastModificationDate": 1648661438102,
      "contentHash": "49295810dc45f300e5f84b4b50d88a59",
      "sourceName": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
      "solcConfig": {
        "version": "0.8.4",
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "outputSelection": {
            "*": {
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ],
              "": [
                "ast"
              ]
            }
          }
        }
      },
      "imports": [
        "./IERC721.sol",
        "./IERC721Receiver.sol",
        "./extensions/IERC721Metadata.sol",
        "../../utils/Address.sol",
        "../../utils/Context.sol",
        "../../utils/Strings.sol",
        "../../utils/introspection/ERC165.sol"
      ],
      "versionPragmas": [
        "^0.8.0"
      ],
      "artifacts": [
        "ERC721"
      ]
    },
    "C:\\Users\\GGR\\Documents\\Blockchain\\insignia\\node_modules\\@openzeppelin\\contracts\\access\\Ownable.sol": {
      "lastModificationDate": 1648661440863,
      "contentHash": "8398972af73b4e9e5ff3b31cad86234f",
      "sourceName": "@openzeppelin/contracts/access/Ownable.sol",
      "solcConfig": {
        "version": "0.8.4",
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "outputSelection": {
            "*": {
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ],
              "": [
                "ast"
              ]
            }
          }
        }
      },
      "imports": [
        "../utils/Context.sol"
      ],
      "versionPragmas": [
        "^0.8.0"
      ],
      "artifacts": [
        "Ownable"
      ]
    },
    "C:\\Users\\GGR\\Documents\\Blockchain\\insignia\\node_modules\\@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol": {
      "lastModificationDate": 1648661438432,
      "contentHash": "580a443491d9d70eb064b0130fc3cd01",
      "sourceName": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
      "solcConfig": {
        "version": "0.8.4",
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "outputSelection": {
            "*": {
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ],
              "": [
                "ast"
              ]
            }
          }
        }
      },
      "imports": [
        "../ERC721.sol"
      ],
      "versionPragmas": [
        "^0.8.0"
      ],
      "artifacts": [
        "ERC721URIStorage"
      ]
    },
    "C:\\Users\\GGR\\Documents\\Blockchain\\insignia\\node_modules\\@openzeppelin\\contracts\\security\\Pausable.sol": {
      "lastModificationDate": 1648661440916,
      "contentHash": "9c2dccab8e3a43a18c41e358763fe4d8",
      "sourceName": "@openzeppelin/contracts/security/Pausable.sol",
      "solcConfig": {
        "version": "0.8.4",
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "outputSelection": {
            "*": {
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ],
              "": [
                "ast"
              ]
            }
          }
        }
      },
      "imports": [
        "../utils/Context.sol"
      ],
      "versionPragmas": [
        "^0.8.0"
      ],
      "artifacts": [
        "Pausable"
      ]
    },
    "C:\\Users\\GGR\\Documents\\Blockchain\\insignia\\node_modules\\@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol": {
      "lastModificationDate": 1648661440173,
      "contentHash": "27d219ec6f69478d065fdbfa7931da68",
      "sourceName": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
      "solcConfig": {
        "version": "0.8.4",
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "outputSelection": {
            "*": {
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ],
              "": [
                "ast"
              ]
            }
          }
        }
      },
      "imports": [
        "../../utils/introspection/IERC165.sol"
      ],
      "versionPragmas": [
        "^0.8.0"
      ],
      "artifacts": [
        "IERC721"
      ]
    },
    "C:\\Users\\GGR\\Documents\\Blockchain\\insignia\\node_modules\\@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol": {
      "lastModificationDate": 1648661440345,
      "contentHash": "592df588492d45fdcf46b3cb608c0fbf",
      "sourceName": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
      "solcConfig": {
        "version": "0.8.4",
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "outputSelection": {
            "*": {
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ],
              "": [
                "ast"
              ]
            }
          }
        }
      },
      "imports": [],
      "versionPragmas": [
        "^0.8.0"
      ],
      "artifacts": [
        "IERC721Receiver"
      ]
    },
    "C:\\Users\\GGR\\Documents\\Blockchain\\insignia\\node_modules\\@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol": {
      "lastModificationDate": 1648661440298,
      "contentHash": "efbc0d15b80a74e34dbe8da0f3e879bb",
      "sourceName": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
      "solcConfig": {
        "version": "0.8.4",
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "outputSelection": {
            "*": {
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ],
              "": [
                "ast"
              ]
            }
          }
        }
      },
      "imports": [
        "../IERC721.sol"
      ],
      "versionPragmas": [
        "^0.8.0"
      ],
      "artifacts": [
        "IERC721Metadata"
      ]
    },
    "C:\\Users\\GGR\\Documents\\Blockchain\\insignia\\node_modules\\@openzeppelin\\contracts\\utils\\Address.sol": {
      "lastModificationDate": 1648661435341,
      "contentHash": "ad714a6368ee7d43cded6bbe8af0b155",
      "sourceName": "@openzeppelin/contracts/utils/Address.sol",
      "solcConfig": {
        "version": "0.8.4",
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "outputSelection": {
            "*": {
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ],
              "": [
                "ast"
              ]
            }
          }
        }
      },
      "imports": [],
      "versionPragmas": [
        "^0.8.1"
      ],
      "artifacts": [
        "Address"
      ]
    },
    "C:\\Users\\GGR\\Documents\\Blockchain\\insignia\\node_modules\\@openzeppelin\\contracts\\utils\\Context.sol": {
      "lastModificationDate": 1648661435859,
      "contentHash": "5f2c5c4b6af2dd4551027144797bc8be",
      "sourceName": "@openzeppelin/contracts/utils/Context.sol",
      "solcConfig": {
        "version": "0.8.4",
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "outputSelection": {
            "*": {
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ],
              "": [
                "ast"
              ]
            }
          }
        }
      },
      "imports": [],
      "versionPragmas": [
        "^0.8.0"
      ],
      "artifacts": [
        "Context"
      ]
    },
    "C:\\Users\\GGR\\Documents\\Blockchain\\insignia\\node_modules\\@openzeppelin\\contracts\\utils\\Strings.sol": {
      "lastModificationDate": 1648661441443,
      "contentHash": "9c54c6c065d9e590fdcdd72c451425b9",
      "sourceName": "@openzeppelin/contracts/utils/Strings.sol",
      "solcConfig": {
        "version": "0.8.4",
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "outputSelection": {
            "*": {
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ],
              "": [
                "ast"
              ]
            }
          }
        }
      },
      "imports": [],
      "versionPragmas": [
        "^0.8.0"
      ],
      "artifacts": [
        "Strings"
      ]
    },
    "C:\\Users\\GGR\\Documents\\Blockchain\\insignia\\node_modules\\@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol": {
      "lastModificationDate": 1648661437036,
      "contentHash": "0e7db055ce108f9da7bb6686a00287c0",
      "sourceName": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
      "solcConfig": {
        "version": "0.8.4",
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "outputSelection": {
            "*": {
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ],
              "": [
                "ast"
              ]
            }
          }
        }
      },
      "imports": [
        "./IERC165.sol"
      ],
      "versionPragmas": [
        "^0.8.0"
      ],
      "artifacts": [
        "ERC165"
      ]
    },
    "C:\\Users\\GGR\\Documents\\Blockchain\\insignia\\node_modules\\@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol": {
      "lastModificationDate": 1648661439718,
      "contentHash": "03e6768535ac4da0e9756f1d8a4a018a",
      "sourceName": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
      "solcConfig": {
        "version": "0.8.4",
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "outputSelection": {
            "*": {
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ],
              "": [
                "ast"
              ]
            }
          }
        }
      },
      "imports": [],
      "versionPragmas": [
        "^0.8.0"
      ],
      "artifacts": [
        "IERC165"
      ]
    }
  }
}

'''
'''--- hardhat.config.js ---
require("@nomiclabs/hardhat-waffle");
// const privateKey = 
// const infuraId = 

module.exports = {
  // defaultNetwork: "testnet",
  networks: {
    localhost: {
      url: "http://127.0.0.1:8545"
    },
    hardhat: {
    },
    // testnet: {
    //   url: "https://data-seed-prebsc-1-s1.binance.org:8545",
    //   chainId: 97,
    //   gasPrice: 20000000000,
    //   accounts: {mnemonic: ""}
    // },
    // mainnet: {
    //   url: "https://bsc-dataseed.binance.org/",
    //   chainId: 56,
    //   gasPrice: 20000000000,
    //   accounts: {mnemonic: mnemonic}
    // }
  },
  solidity: {
  version: "0.8.4",
    settings: {
      optimizer: {
      enabled: true,
      runs: 200
    }
    }
  },
  // paths: {
  //   sources: "./contracts",
  //   tests: "./test",
  //   cache: "./cache",
  //   artifacts: "./artifacts"
  // },
  // mocha: {
  //   timeout: 20000
  // }
};

// module.exports = {
//   defaultNetwork: "hardhat",
//   networks: {
//     hardhat: {
//       chainId: 1337
//     },
    /*
    mumbai: {
      // Infura
      // url: `https://polygon-mumbai.infura.io/v3/${infuraId}`
      url: "https://rpc-mumbai.matic.today",
      accounts: [privateKey]
    },
    matic: {
      // Infura
      // url: `https://polygon-mainnet.infura.io/v3/${infuraId}`,
      url: "https://rpc-mainnet.maticvigil.com",
      accounts: [privateKey]
    }
    */
//   },
//   solidity: {
//     version: "0.8.4",
//     settings: {
//       optimizer: {
//         enabled: true,
//         runs: 200
//       }
//     }
//   }
// };

'''
'''--- package.json ---
{
  "name": "insignia",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@nomiclabs/hardhat-ethers":"^2.0.2",
    "@nomiclabs/hardhat-waffle":"^2.0.1",
    "@openzeppelin/contracts":"^4.3.2",
    "@testing-library/jest-dom": "^5.16.2",
    "@testing-library/react": "^12.1.2",
    "@testing-library/user-event": "^13.5.0",
    "animate.css": "^4.1.1",
    "axios":"^0.21.1",
    "chai":"^4.3.4",
    "dotenv":"^8.6.0",
    "ethereum-waffle":"^3.4.0",
    "ethers":"^5.5.1",
    "hardhat":"^2.6.7",
    "ipfs-car":"^0.6.0",
    "ipfs-http-client":"^50.1.2",
    "nft.storage":"^5.1.3",
    "near-api-js": "^0.44.2",
    "react": ">=16.8",
    "react-dom": ">=16.8",
    "react-router-dom": "^5.2.0",
    "react-scripts": "4.0.3",
    "web-vitals": "^2.1.4",
    "web3":"^1.6.0",
    "web3modal":"^1.9.4"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}

'''
'''--- public/index.html ---
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#000000" />
    <meta
      name="description"
      content="Insignia"
    />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Merienda:wght@700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Roboto&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=MedievalSharp&display=swap" rel="stylesheet"> 
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css"
    integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous" />
    
    <title>Insigina</title>
  </head>
  <body>
   
    <div id="root"></div>
    

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"
    integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous">
  </script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-ho+j7jyWK8fNQe+A12Hb8AhRq26LrZ/JpcUGGOn+Y7RsweNrtN/tE3MoK7ZeZDyx" crossorigin="anonymous">
  </script>

  
  </body>
</html>

'''
'''--- scripts/deploy.js ---
require("@nomiclabs/hardhat-waffle");
const fs = require('fs');
const { ethers } = require("hardhat");

async function main() {
    const [deployer] = await ethers.getSigners();
  
    console.log("Deploying contracts with the account:", deployer.address);
  
    console.log("Account balance:", (await deployer.getBalance()).toString());
  
    const Insignia = await ethers.getContractFactory("Insignia");
    const insignia = await Insignia.deploy();
  
    console.log("Insignia address:", insignia.address);

    //  To save the contract's artifacts and address in the frontend directory
    saveFrontendFiles(insignia);
  }

  function saveFrontendFiles(insignia) {
    const fs = require("fs");
    const contractsDir = __dirname + "/../src/contracts";
  
    if (!fs.existsSync(contractsDir)) {
      fs.mkdirSync(contractsDir);
    }
  
    fs.writeFileSync(
      contractsDir + "/contract-address.json",
      JSON.stringify({ Insignia: insignia.address }, undefined, 2)
    );
  
    const InsigniaArtifact = artifacts.readArtifactSync("Insignia");
  
    fs.writeFileSync(
      contractsDir + "/Insignia.json",
      JSON.stringify(InsigniaArtifact, null, 2)
    );
  }
  
  main()
    .then(() => process.exit(0))
    .catch((error) => {
      console.error(error);
      process.exit(1);
    });
  
'''
'''--- src/components/App.js ---
import React from 'react';
import Nav from "./Nav";
import Home from './Home';
import "../styles/App.css"
import Footer from "./Footer";
import Copyright from './Copyright';
import Scroll from './Scroll';
import Join from './Join';
import Community from './Community';

function App() {
  return (
    <div >
      <div className="app">
        <Nav />
        <Home />
        <Scroll />
        <Join />
        <Community />
        <Footer />
        <Copyright />
      </div>
      
    </div>
  );
}

export default App;
'''
'''--- src/components/Community.js ---
import '../styles/Community.css'
import bottom from '../assets/bottom_brown.png';
import top from '../assets/top_brown.png';
const Community = () => {
    return (
        <div>
             <img src={bottom} alt="" className="rough"/>
        
            <div className="community">
            <h6 className="topic py-5 font-medieval">Game Features</h6>
            </div>
            <img src={top} alt="" className="rough"/>
        </div>
    
    )
}

export default Community;
'''
'''--- src/components/Copyright.js ---
import discord from '../assets/discord-icon.png';
import twitter from '../assets/twitter.png';
import "../styles/Copyright.css"

const Copyright = () => {
    return (
        
        <div className="d-flex justify-content-between black px-5 copyright">
            <div className="d-flex"> 
                <h6 className="white font">Copyright &copy; 2022 - All Rights Reserved: </h6>
                <p className="meridian-font white px-2">Insignia</p>
            </div>
            <div className='connect-link d-flex'>
                <a href="https://discord.gg/A4xfZENW2Z" target="_blank" rel="noreferrer"><img src={discord} alt="" className='connect mx-2'/></a>
                <a href="https://twitter.com/Insignia_verse?s=03" target="_blank" rel="noreferrer"><img src={twitter} alt="" className='connect'/></a>
            </div>
            
            <div>
                <p className="meridian-font white"> Powered by ChainGates Corp.</p>
            </div>
        </div>
    
    )
}

export default Copyright;
'''
'''--- src/components/CreateAsset.js ---
import "regenerator-runtime/runtime";
import React, { useEffect, useState } from "react";
import { ethers } from "ethers";
import { connectWallet, getCurrentWalletConnected } from "../utils/wallet";
import { NoWallet } from "./NoWallet";
import { NFTStorage, File } from 'nft.storage'
import contractAddress from "../contracts/contract-address.json";
import MageArtifact from "../contracts/Insignia.json";
import Nav from "./Nav";
import Copyright from './Copyright';
import { Link } from 'react-router-dom';
import forwardArrow from '../assets/right-arrows.png';
import backwardArrow from '../assets/left-arrow.png';
require('dotenv').config();

const NFT_STORAGE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweDMyNTlEMWEzNTNEMzgyNjQ4MDVmNkY4Y2NjMTY0RThFODQzM0I0MDYiLCJpc3MiOiJuZnQtc3RvcmFnZSIsImlhdCI6MTYzNzkzOTM1Njc5NywibmFtZSI6IkF6YW5pYSJ9.Tn3kou1OKA09gdsp0pduKzFUJGAVQ8KXk1-44pLWH9w";
const ERROR_CODE_TX_REJECTED_BY_USER = 4001;

const CreateAsset = () => {

    const [walletAddress, setWallet] = useState("");
    const [formInput, updateFormInput] = useState({name:""});
    const [status, setStatus] = useState("");

      useEffect(() => {
              (async() => {
                const {address} = await getCurrentWalletConnected();
                setWallet(address)
            
                addWalletListener();
              }) ()
      }, []);

      // connect wallet 
      const connectWalletPressed = async () => {
              const walletResponse = await connectWallet();
              setWallet(walletResponse.address);
      };

      // wallet listener to update UI when wallet's state changes, 
      // such as when the user disconnects or switches accounts.
      function addWalletListener() {
              if (window.ethereum) {
              window.ethereum.on("accountsChanged", (accounts) => {
                  if (accounts.length > 0) {
                  setWallet(accounts[0]);
                
                  } else {
                  setWallet("");
                  }
              });
              } 
      }

      async function mintGladiator() {
        const {name} = formInput;
        if (!name) {
          setStatus("Name your Gladiator");
        }
  
        const provider = new ethers.providers.Web3Provider(window.ethereum);
        const signer = provider.getSigner();
        const contract = new ethers.Contract(contractAddress.Insignia, MageArtifact.abi, signer);
        // const mintingPrice = await contract.getMintingPrice();
        const mintingPrice= "1200000000000000"
              try {
                const client = new NFTStorage({ token: NFT_STORAGE_KEY });
                setStatus("Uploading to nft.storage...")
                const metadata = await client.store({
                  name,
                  description: "Insignia demo gladiator",
                  image: new File(['./assets/player.png'], 'player.png', { type: 'image/jpg' })
                });

                

                setStatus(`Minting token with metadata URI: ${metadata.url}`);
  
                const metadataURI = metadata.url;
                
                const transaction = await contract.createRandomGladiator(name, metadataURI, { value: mintingPrice });
  
                setStatus("Blockchain transaction sent, awaiting confirmation...");
  
                const receipt = await transaction.wait();
                if (receipt.status === 0) {
                    throw new Error("Transaction failed");
                } else {
                  setStatus("Insignia gladiator minted successfully!");
                }
              } catch (error) {
                if (error.code === ERROR_CODE_TX_REJECTED_BY_USER) {
                  return;
                }
                console.error(error);
              } finally {
  
              }
      }
  

        // If window.ethereum has not been injected.
        if (window.ethereum === undefined) {
          return <NoWallet />;
        }

      const confirmedStatus =  "Insignia gladiator minted successfully!";

  return(
                <div>
                    <div className='play'>
                      <div>
                        <Nav />
                      </div>
                      <div>
                        {/* <ProgressBar /> */}

                        <div className='d-flex steps px-5 pt-5 font-meridian'>
                      <Link to="/WalletSetup" className='child'>
                        <div >
                            <p className='step-figure hightlighted py-2 rounded'>1</p>
                            
                            <p className='mt-3'>Wallet Set up</p>
                        
                        </div>
                      </Link>
                          
                      <p className='line'>__________</p>
                        
                      <Link to="/GetToken" className='child'>
                        <div>

                            <p className='step-figure two py-2 rounded'>2</p>
                            <p className='mt-3'>Get Insignia Token</p>
                          </div>
                      </Link>
                        
                      <p className='line'>__________</p>

                      <Link to="/CreateAsset" className='child'> <div>
                            <p className='step-figure highlighted3 py-2 rounded'>3</p>
                            <p className='mt-3'>Create Game Asset</p>
                          </div>
                      </Link>

                      <p className='line'>__________</p>

                      <Link to="/DownloadGame" className='child'> 
                          <div>
                            <p className='step-figure py-2 rounded'>4</p>
                            <p className='mt-3'>Download & Play</p> 
                          </div>
                      </Link>
                    </div>

                      </div>
                      <div className='font-meridian near-wallet pt-5'>
                      <h3>Create Game Asset</h3>
                        <p>Select an asset category below and mint one or purchase one in the marketplace to start playing</p>
                      </div>

                      <div className="border wallet-space py-5 mt-5 shadow-lg">
                          <article className="px-2">
                                      <h6 className="bold pb-3 action font-meridian">Mint A Unique Character</h6>
                                      <p className='gold'></p>

                                      {/* <div>
                                          {walletAddress.length > 0 ? (
                                            <div className="wallet black font-meridian rounded-pill mt-3 py-2">Current Player:   
                                              {String(walletAddress).substring(0, 6) +
                                              "..." +
                                              String(walletAddress).substring(38)}
                                            </div>
                                            ) : (
                                          <div className="wallet font-meridian rounded-pill mt-3 py-2" onClick={connectWalletPressed}>Connect To Insignia</div>
                                            )}
                                      </div> */}

              <div>
                {walletAddress.length > 0 ? (
                  <div className="wallet-metamask white font-meridian rounded-pill mb-0 py-2 px-5">Current Player:   
                    {String(walletAddress).substring(0, 6) +
                      "..." +
                    String(walletAddress).substring(38)}
                  </div>
                    ) : (
                  <div className="wallet-metamask white font-meridian rounded-pill mb-0 py-2 px-5" onClick={connectWalletPressed}>Connect with Metamask</div>
                )}
              </div>

                                      <p className="py-2 font-meridian">
                                        {status}
                                      </p>

                                      <div>
                                          <input 
                                              className="py-1 mt-5 rounded-pill font-meridian" 
                                              placeholder="Name your Asset"
                                              required
                                              onChange={e => updateFormInput({...formInput, name: e.target.value})}  
                                          />
                                      </div>

                                      <p className="py-2 px-3 mt-3 mb-5 submit wallet-metamask white font-meridian rounded-pill" onClick={mintGladiator}>
                                          Mint Asset
                                      </p>

                                      <div className="mint">
                                        {status ===  confirmedStatus ? (
                                          <Link to="/Reveal"><p className="wallet-metamask white font-meridian rounded-pill py-2 px-3">Reveal Asset</p></Link>
                                        ) : (
                                          <p className="font-meridian">Reveal Gladiator here after confirmation... </p>
                                        )}
                                      </div>

                          </article>
                      </div>

                      

                      <div>
                          <Link to="/Marketplace"><p className="wallet-scroll white font-meridian rounded-pill mb-0 mt-5 py-2">Marketplace</p></Link>
                      </div>
                      
                        <div className='d-flex setup-navigation pt-5 mb-5'>
                            <Link to="GetToken" className='font-meridian back'><p><img src={backwardArrow} alt="" className="arrow"/> Back</p></Link>
                          <Link to="/DownloadGame" className='font-meridian back'><p>Next <img src={forwardArrow} alt="" className="arrow"/></p></Link> 
                          
                        </div>
                      </div>

                      <Copyright />
                </div>
  )
};

export default CreateAsset;
'''
'''--- src/components/DownloadGame.js ---
import React from 'react';
import Nav from "./Nav";
import Copyright from './Copyright';
import { Link } from 'react-router-dom';
import forwardArrow from '../assets/right-arrows.png';
import backwardArrow from '../assets/left-arrow.png';

const DownloadGame = () => (
  <div>
      <div className='play'>
        <div>
          <Nav />
        </div>
        <div>
         

        <div className='d-flex steps px-5 pt-5 font-meridian'>
        <Link to="/WalletSetup" className='child'>
          <div >
              <p className='step-figure hightlighted py-2 rounded'>1</p>
              
              <p className='mt-3'>Wallet Set up</p>
          
          </div>
        </Link>
            
        <p className='line'>__________</p>
          
        <Link to="/GetToken" className='child'>
          <div>

              <p className='step-figure two py-2 rounded'>2</p>
              <p className='mt-3'>Get Insignia Token</p>
            </div>
        </Link>
          
        <p className='line'>__________</p>

        <Link to="/CreateAsset" className='child'> <div>
              <p className='step-figure py-2 rounded'>3</p>
              <p className='mt-3'>Create Game Asset</p>
            </div>
        </Link>

        <p className='line'>__________</p>

        <Link to="/DownloadGame" className='child'> 
            <div>
              <p className='step-figure highlighted4 py-2 rounded'>4</p>
              <p className='mt-3'>Download & Play</p> 
            </div>
        </Link>
      </div>

        </div>
        <div className='font-meridian near-wallet pt-5'>
        <h3>Get Insignia</h3>
          <p className='gold'>Select your preferred platform below.... Have Fun!!</p>
         
        </div>
        <div className='platform'>
          <div className='d-flex'>
            <p className="wallet-scroll white font-meridian rounded-pill mb-0 mt-5 py-2">PC</p>
            <p className="wallet-scroll white font-meridian rounded-pill mb-0 mt-5 py-2">Android</p>
            <p className="wallet-scroll white font-meridian rounded-pill mb-0 mt-5 py-2">IOS</p>
          </div>
            
            <div className='d-flex'>
              <p className="wallet-scroll white font-meridian rounded-pill mb-0 mt-5 py-2">PS5</p>
              <p className="wallet-scroll white font-meridian rounded-pill mb-0 mt-5 py-2">Xbox</p>
              <p className="wallet-scroll white font-meridian rounded-pill mb-0 mt-5 py-2"> Nintendo Switch</p>
             
            </div>
            
           
        </div>
       
        
          <div className='d-flex setup-navigation pt-5 mb-5'>
              <Link to="GetToken" className='font-meridian back'><p><img src={backwardArrow} alt="" className="arrow"/> Back</p></Link>
             <Link to="/" className='font-meridian back'><p>Next <img src={forwardArrow} alt="" className="arrow"/></p></Link> 
             
          </div>
         </div>

        <Copyright />
  </div>
);

export default DownloadGame;
'''
'''--- src/components/Event.js ---
import '../styles/Event.css';

const Event = () => {
    return (
        <div className="event">
             <h2 className=" features py-5 font-medieval white ">Game Features</h2>

             <div className="d-flex py-5 px-5 justify-content-between font-roboto">
            <div className="border rounded card-space shadow-lg">
                    <article className="px-2">
                        <i className="fas fa-door-open pink py-4 icon-size action"></i>
                        {/* <img src={castle} className="py-4 castle action" /> */}
                        <h6 className="bold pb-3 action font-meridian">WALLET SETUP</h6>
                        <p>
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                        </p>
                    </article>
                </div>
                <div className="border rounded card-space shadow-lg">
                <article className="px-2">
                    <i className="fas fa-shopping-cart py-4 icon-size action"></i>
                    <h6 className="bold pb-3 action font-meridian">GET TOKEN</h6>
                    <p>
                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                    </p>
                </article>
                </div>
                <div className="border rounded card-space shadow-lg">
                <article className="px-2">
                <i className="fas fa-paint-brush pink py-4 icon-size action"></i>
                    <h6 className="bold pb-3 action font-meridian">CREATE GAME ASSET</h6>
                    <p>
                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                    </p>
                </article>
                </div>
                
                {/* <div className="border rounded card-space shadow-lg">
                <article className="px-2">
                    <i class="fas fa-book-open py-4 icon-size action"></i>
                    <h6 cclassName="bold pb-3 action font-meridian">DOWNLOAD AND PLAY</h6>
                    <p>
                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                    </p>
               
                </article>
                </div> */}

                <div className="border rounded card-space shadow-lg">
                <article className="px-2">
                    <i className="fas fa-shopping-cart py-4 icon-size action"></i>
                    <h6 className="bold pb-3 action font-meridian">DOWNLOAD & PLAY</h6>
                    <p>
                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                    </p>
                </article>
                </div>
            </div>
        </div>
        
    
    )
}

export default Event;
'''
'''--- src/components/Footer.js ---
import { Link } from 'react-router-dom';
import "../styles/Footer.css"

const Footer = () => {
    return(
        <div className="main-footer mb-5">

            <div className="footer-submain">
                <footer>
                    <div className="d-flex d-sm-flex d-md-flex d-lg-flex d-xl-flex d-xxl-flex justify-content-between footer-flex align-items-start ">
                    <div className="width-30">
                        <h6 className="white py-5">Lorem proin volutpat</h6>
                        <p className="grey">Ligula quis sapien nam molestie massa quis pede maecenas quis lacus nunc sed 
                        lectus quis lectus tristique tincidunt sed varius nisl tincidunt lectus pellentesque 
                        sagittis mauris ut leo ullamcorper tortor morbi accumsan.</p>
                        <div className="d-flex justify-content-between pt-5 px-3 justify-content-around">
                            <p><a href="https://twitter.com/Insignia_verse?s=03"><i className="fab fa-facebook grey p-2 bg-secondary "></i></a></p>
                            <p><a href="https://twitter.com/Insignia_verse?s=03"><i className="fab fa-linkedin grey p-2 bg-secondary"></i></a></p>
                            <p><a href="https://discord.gg/A4xfZENW2Z"><i className="fab fa-discord grey p-2 bg-secondary"></i></a></p>
                            <p><a href="https://twitter.com/Insignia_verse?s=03"><i className="fab fa-twitter grey p-2 bg-secondary"></i></a></p>
                            <p><a href="https://twitter.com/Insignia_verse?s=03"><i className="fab fa-instagram grey p-2 bg-secondary"></i></a></p>
                        </div>
                    </div>
                    <div className="width-30 px-5">
                        <h6 className="white font mx-1 py-5">Nascetur ridiculus mus</h6>
                        <div className="blue">
                            <p>Aliquam eget leo praesent</p><hr className="bg-secondary"/>
                            <p>Vel urna nunc ultricies</p><hr className="bg-secondary"/>
                            <p>Faucibus nunc cum sociis</p><hr className="bg-secondary"/>
                            <p>Natoque penatibus et magnis</p><hr className="bg-secondary"/>
                            <p>Dis parturient montes</p>
                        </div>
                    </div>
                    <div className="width-30">
                        <h6 className="white py-5 font">Contact Us</h6>
                        <p className="grey">Ante dapibus luctus sed quis diam vitae ipsum ultrices vehicula.</p>
                        <form action="https://getform.io/f/fc334ca4-90ec-4fc0-a343-069dfc4a0ca8" method="post">
                            <input className="mt-3 white rounded-3 fw-bold opacity-25 bg-secondary p-2 " type="textarea" placeholder="email"></input><br />
                            <input className="mt-3 white rounded-3 fw-bold opacity-25 bg-secondary p-2 " type="text-area" placeholder="Message"></input><br />
                            <button className="py-2 mt-3 white rounded-pill white bg-primary px-5" type="submit" value="submit">Submit</button>
                        </form>
                    </div>
                   
                    
                    </div>
                    <p className="border mt-5"></p>
                    <nav>
                        <div className="d-flex  justify-content-center py-5 last-footer">
                        <Link to="/"><i className="white fas fa-lg fa-home"></i></Link>
                        <a className="px-4 white" href="https">Terms</a>
                        <a className="white" href="https">Privacy</a>
                        <a className="px-4 white" href="https">Cookies</a>
                        <a className="white" href="https">Disclaimer</a>
                        </div>
                    </nav>
                    <p className="border"></p>
                </footer>
               
        </div>
        
    </div>
    )
}

export default Footer;
'''
'''--- src/components/GetToken.js ---
import React, { useEffect, useState } from "react";
import { connectWallet, getCurrentWalletConnected } from "../utils/wallet";
import Nav from "./Nav";
import Copyright from './Copyright';
import { Link } from 'react-router-dom';
import forwardArrow from '../assets/right-arrows.png';
import backwardArrow from '../assets/left-arrow.png';
import '../styles/Play.css';

const GetToken = () => {

  const [walletAddress, setWallet] = useState("");

  useEffect(() => {
    (async() => {
      const {address} = await getCurrentWalletConnected();
      setWallet(address)
  
      addWalletListener();
    }) ()
  }, []);

    // connect wallet 
    const connectWalletPressed = async () => {
      const walletResponse = await connectWallet();
      setWallet(walletResponse.address);
    };

    // wallet listener to update UI when wallet's state changes, 
    // such as when the user disconnects or switches accounts.
    function addWalletListener() {
      if (window.ethereum) {
      window.ethereum.on("accountsChanged", (accounts) => {
          if (accounts.length > 0) {
          setWallet(accounts[0]);
        
          } else {
          setWallet("");
          }
      });
      } 
    }

  
  
  return (
  <div>
       <div className='play'>
        <div>
          <Nav />
        </div>
        <div>
          {/* <ProgressBar /> */}

          <div className='d-flex steps px-5 pt-5 font-meridian'>
        <Link to="/WalletSetup" className='child'>
          <div >
              <p className='step-figure py-2 rounded'>1</p>
              
              <p className='mt-3'>Wallet Set up</p>
          
          </div>
        </Link>
            
        <p className='line'>__________</p>
          
        <Link to="/GetToken" className='child'>
          <div>

              <p className='step-figure hightlighted2 py-2 rounded'>2</p>
              <p className='mt-3'>Get Insignia Token</p>
            </div>
        </Link>
          
        <p className='line'>__________</p>

        <Link to="/CreateAsset" className='child'> <div>
              <p className='step-figure py-2 rounded'>3</p>
              <p className='mt-3'>Creat Game Asset</p>
            </div>
        </Link>

        <p className='line'>__________</p>

        <Link to="/DownloadGame" className='child'> 
            <div>
              <p className='step-figure py-2 rounded'>4</p>
              <p className='mt-3'>Download & Play</p> 
            </div>
        </Link>
      </div>

        </div>
        <div className='font-meridian near-wallet pt-5'>
        <h3>Get Insignia Token</h3>
          <p>Insignia Token is the native currency of our metaverse.</p>
          <p>Please skip this step if your NEAR wallet is funded.</p>
          <p className='gold'>We are currently using NEAR as the means of exchange.</p>
        </div>

        <div className="border wallet-space py-5 mt-5 shadow-lg">
            <article className="px-2">
                        <h6 className="bold pb-3 action font-meridian">Get some token</h6>
                        <p className="font-meridian mb-5 pb-5">
                          Visit any of the exchanges below to fund your wallet. To do anything with the NEAR Wallet, you will need at least 0.1 NEAR.
                        </p>
            </article>

            {/* <img src={near} className="near-logo"/> */}

              <div className="mb-5">
                {walletAddress.length > 0 ? (
                  <div className="wallet-metamask white font-meridian rounded-pill mb-0 py-2 px-5">Current Player:   
                    {String(walletAddress).substring(0, 6) +
                      "..." +
                    String(walletAddress).substring(38)}
                  </div>
                    ) : (
                  <div className="wallet-metamask white font-meridian rounded-pill mb-0 py-2 px-5" onClick={connectWalletPressed}>Connect with Metamask</div>
                )}
              </div>

              
                    <a href="https://wallet.near.org/" target="_blank"  rel="noreferrer" className="wallet-scroll white font-meridian rounded-pill mb-0 mt-5 py-2 px-5">Fund Wallet</a>
            

        </div>

        
          <div className='d-flex setup-navigation pt-5 mb-5'>
              <Link to="WalletSetup" className='font-meridian back'><p><img src={backwardArrow} alt="" className="arrow"/> Back</p></Link>
             <Link to="/CreateAsset" className='font-meridian back'><p>Next <img src={forwardArrow} alt="" className="arrow"/></p></Link> 
             
          </div>
         </div>
        
        <Copyright />
  </div>
  )
};

export default GetToken;
'''
'''--- src/components/Home.js ---
import React, { Component } from "react";
import "../styles/Home.css"
import 'animate.css';
import firstVideo from '../assets/firstVideo.mp4';
import secondVideo from '../assets/runningwarriors.mp4';

const FIRST_PAGE = '5_SECONDS';
const SECOND_PAGE = '15_SECONDS';

const FirstComponent = () => {
  
  return (
    <div>
    <div className="front animate__animated animate__fadeIn">
      <video autoPlay="autoplay"  muted loop id="myVideo" >
        <source src={firstVideo}  type="video/mp4" />
      </video>
      
  
  
        <div className="overlay">
          <h1 className="title-one white font-medieval">INSIGNIA</h1>
          <h2 className="title-two white">THE MILITARY STRATEGY GAME THAT PAYS TO PLAY</h2>
        </div>
        
    </div>
      <div>
        <a href="https://getinsignia.gitbook.io/whitepaper/" target="_blank"  rel="noreferrer">
          <p className="font-meridian white enter rounded-pill mt-3 py-2 center">Whitepaper</p>
        </a>
      </div>
    </div>
  )
 
};

const SecondComponent = () => (
  <div>
      <div className="frame animate__animated animate__fadeIn second">
      <video autoPlay="autoplay"  muted loop id="myVideo" >
        <source src={secondVideo}  type="video/mp4" />
      </video>

      <div className="overlay">
        <p className="title-three white font-medieval">OWN, RENT $ BORROW UNIQUE NFTs </p>
        {/* <p className="title-two white">A NEW WORLD OF PLAY-TO-EARN</p> */}
      </div>
      
    
      </div>
      <div>
        <a href="https://getinsignia.gitbook.io/whitepaper/" target="_blank"  rel="noreferrer">
          <p className="font-meridian white enter rounded-pill mt-3 py-2 center">Whitepaper</p>
        </a>
      </div>
  </div>
  
  
);

class Home extends Component {

  state = {
    currentPage: FIRST_PAGE
  };

  componentDidUpdate() {
    const {currentPage} = this.state;
    const isFirst = currentPage === FIRST_PAGE;

    if (isFirst) {
      this._showSecondPageDelayed();
    } else {
      this._showFirstPageDelayed();
    }
  }

  componentDidMount() {
    this._showSecondPageDelayed();
  };

  _showSecondPageDelayed = () => setTimeout(() => {this.setState({currentPage: SECOND_PAGE})}, 10000);

  _showFirstPageDelayed = () => setTimeout(() => {this.setState({currentPage: FIRST_PAGE})}, 10000);

  render() {
    const {currentPage} = this.state;
    const isFirst = currentPage === FIRST_PAGE;
    const ComponentToRender =  isFirst ? FirstComponent : SecondComponent;

    return <ComponentToRender/>;
  }
}

export default Home;

'''
'''--- src/components/Join.js ---
import React from 'react';
import discord from '../assets/discord-icon.png';
import twitter from '../assets/twitter.png';
import '../styles/Join.css';
import join from '../assets/join.png';

const Join = () => {
  return(
    <div className="join">
      <h6 className="white topic-join font-medieval py-5">Join Us</h6>
      <p className="white join-text font-meridian">Join the conversation on our social media channels.</p>
      
            <div className='soc d-flex'>
                <a href="https://discord.gg/A4xfZENW2Z" target="_blank"  rel="noreferrer"><img src={discord} alt="" className=' join-soc'/></a>
                <a href="https://twitter.com/Insignia_verse?s=03" target="_blank"  rel="noreferrer"><img src={twitter} alt="" className='join-soc'/></a>
            </div>
        <img src={join} alt="" className="join-image"/>
      
      
      
      

    </div>
  )

};

export default Join;
'''
'''--- src/components/Marketplace.js ---
import Nav from "./Nav";
import Copyright from "./Copyright";
import { Link } from 'react-router-dom';
import "../styles/Marketplace.css";

function Marketplace() {
    return (
        <div>
            <Nav />
            <div className="marketplace">
                <p className="topic-marketplace font-medieval pt-5">Insignia Marketplace</p>
                <p className="market-text gold">Own, Rent, Borrow And Lend Unique Assets</p>

                <div className="d-flex capsules">
                    <input className="rounded-pill font-meridian gold search mt-3" type="text" placeholder="Search" />
                    <Link to="/WalletSetup" ><p className="wallet text-market gold font-meridian rounded-pill mt-3 py-2 px-5">Sell</p></Link>
                    <Link to="/WalletSetup" ><p className="wallet text-market gold font-meridian rounded-pill mt-3 py-2 px-5">Rent Out</p></Link>

                    <select className="form-select wallet text-market rounded-pill font-meridian gold search px-4 mt-3">
                        <option selected>Filter</option>
                        <option value="1">For Rent</option>
                        <option value="2">For Sale</option>
                    </select>
                </div>
                
                <h3 className="coming-soon pt-5">Comming Soon... </h3>
                <p className="coming-soon">Under construction.</p>
            </div>
            
            <div className="py-3">
                <Copyright />
            </div>
            
        </div>
    )
}

export default Marketplace;
'''
'''--- src/components/Nav.js ---
import React from 'react';
import { Link } from 'react-router-dom';
import logo from "../assets/Logo.png";
import "../styles/Nav.css"

function Nav() {
    return (
      
      <div className="top-nav d-flex align-text-center">
        <div className="flex1">
          <Link to="/" ><img alt="logo" src={logo} className="logo" /></Link>
        </div>
        <div className="d-flex align-items-center font-meridian flex2">
          <p> <Link to="/" className="px-4 white">Home</Link></p>
          <p><a href="https://getinsignia.gitbook.io/whitepaper/" target="_blank" rel="noreferrer" className="px-4 white">Whitepaper</a></p>
          <p> <Link to="/MarketPLace" className="px-4 white">Market Place</Link></p>
          <p> <Link to="/News" className="px-4 white">News</Link></p>
        
        </div>
        <div className="flex1">
            <Link to="/WalletSetup" ><p className="wallet white font-meridian rounded-pill mt-3 py-2">Play Now</p></Link>
        </div>
      </div>
      
    );
  }
  
  export default Nav;
'''
'''--- src/components/News.js ---
import React from 'react';
import Nav from "./Nav";

const News = () => (
  <div>
      <div>
      <Nav />
        <p>News</p>
      </div>
     
  </div>
  
);

export default News;
'''
'''--- src/components/Next.js ---
import '../styles/Next.css'
const Next = () => {
    return (
        <div>
             
        
            <div className="next">
                
            </div>
        </div>
    
    )
}

export default Next;
'''
'''--- src/components/NoWallet.js ---

export const NoWallet = () => {
    return (
      <div className="overall-nowallet">
        <div className="d-flex main flex-column justify-content-between align-text-center pt-2 px-4">
        <h1 className="pink azania py-2">Mage Wars</h1> 
        <p className="white">No Ethereum wallet was detected. Connect to Metamask to play Mage Wars.</p>
        <a
                href="http://metamask.io"
                target="_blank"
                rel="noopener noreferrer"
              > <div className="px-3 border-0 rounded-pill pt-2 wallet pill white">
            <p className="white">
              Install{" "}
             
                MetaMask
            </p>
          </div> </a>
        </div>
        </div>
    );
  }
'''
'''--- src/components/Reveal.js ---
import player from "../assets/player.png";
import { useEffect, useState } from "react";
import { ethers } from "ethers";
import contractAddress from "../contracts/contract-address.json";
import MageArtifact from "../contracts/Insignia.json";
import Copyright from './Copyright';
import Nav from "./Nav";
import { Link } from 'react-router-dom';
import '../styles/Reveal.css';

const Reveal = () => {  
    const [mages, setMages] = useState([]);

      useEffect(() => {
        loadNFTs()
      }, [])

      async function loadNFTs() {
        const provider = new ethers.providers.Web3Provider(window.ethereum);
        const signer = provider.getSigner();
        const contract = new ethers.Contract(contractAddress.Insignia, MageArtifact.abi, signer);
        
        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });
        const account = accounts[0];

        const data = await contract.getOwnerGladiators(account);

        const mages = await Promise.all(data.map(async i => {
            let mage = {
                mageName : i.name,
                mageID : i.id.toString(),
                mageDNA : i.dna.toString(),
                mageRarity : i.rarity.toString(),
                mageLevel : i.level,
            }
    
            return mage;
        }));
        setMages(mages);
  
      }

    return (
        <div>
        <div className="play">
          <div>
          <Nav />
        </div>
            <div className="d-flex main flex-column justify-content-between align-text-center pt-2 px-4">
                <h1 className="font-meridian py-2 center my-5">Insignia Asset</h1>
            </div>
            <div className="mint">
                <div className="border card mage-heigth rounded shadow-lg mt-3">
                    <img alt="logo" src={player} />
                </div>
                <div>
                    
                {
                mages.map((mage, i) => (
                <div className="border" key={mage.mageID}>
                    <p className="font-meridian">Name: {mage.mageName}</p>
                    <div className="mt-3">
                    <p className="font-meridian">ID: {mage.mageID}</p>
                    <p className="font-meridian">DNA: {mage.mageDNA}</p>
                    <div className="font-meridian">
                        {mage.mageRarity <= 80 ? (
                            <p>Rarity: Rare</p>
                        ) : (
                            <p>Rarity: Super Rare</p>
                        )}
                        
                    </div>
                    <p className="font-meridian">Level: {mage.mageLevel}</p>
                    </div>
                </div>
                ))
            }
            </div>
            </div>
            
            <Link to="/DownloadGame" className='child mb-5'> 
            <div>
              <p className='mt-5 mb-5 wallet-scroll white font-meridian rounded-pill py-2'>Download & Play</p> 
            </div>
        </Link>

        </div>
        <Copyright />
        </div>
    )
}

export default Reveal;
'''
'''--- src/components/Routes.js ---
import React from 'react';
import { BrowserRouter, Switch, Route } from 'react-router-dom';
import App from './App';
import Marketplace from './Marketplace';
import Home from './Home';
import News from './News';
import WalletSetup from './WalletSetup';
import GetToken from './GetToken';
import CreateAsset from './CreateAsset';
import DownloadGame from './DownloadGame';
import Reveal from './Reveal';

const Routes = () => (
  <BrowserRouter>
    <div className="route">
      <Switch>
        <Route exact path="/Home" component={Home} />
        <Route exact path="/" component={App} />
        <Route exact path="/MarketPLace" component={Marketplace} />
        <Route exact path="/News" component={News} />
        ?
        <Route exact path="/WalletSetup" component={WalletSetup} />
        <Route exact path="/GetToken" component={GetToken} />
        <Route exact path="/CreateAsset" component={CreateAsset} />
        <Route exact path="/DownloadGame" component={DownloadGame} />
        <Route exact path="/Reveal" component={Reveal} />
      </Switch>
    </div>
  </BrowserRouter>

);

export default Routes;
'''
'''--- src/components/Scroll.js ---
import React from 'react';
import topdark from '../assets/top_dark.png';
import bottomdark from '../assets/bottom_dark.png';
import { Link } from 'react-router-dom';
import '../styles/Scroll.css';

const Scroll = () => {
  return(
      <div>
             <img src={topdark} alt ="" className="rough"/>
    <div className="scroll">
     
      <section>
            <h6 className="topic py-5 font-medieval">GETTING STARTED</h6>
            <p className='get-started font-roboto'>Click "Play Now" to follow the steps below and get started with Insignia</p>
            <div className="d-flex py-5 px-5 justify-content-between font-roboto">
            <div className="border rounded card-space shadow-lg">
                    <article className="px-2 pt-4">
                       
                        <h6 className="bold pb-3 action font-meridian">WALLET SETUP</h6>
                        <p>
                        Insignia lives on the NEAR protocol. NEAR Wallet is your ticket to our metaverse. For first time NEAR users, click "Get NEAR Wallet", otherwise, proceed to the next tab.
                        </p>
                    </article>
                </div>
                <div className="border rounded card-space shadow-lg">
                <article className="px-2 pt-4">
                    
                    <h6 className="bold pb-3 action font-meridian">GET TOKEN</h6>
                    <p>
                    Insignia Token is the native currency of our metaverse. Details about the tokenomics can be found in the Whitepaper. We are currently using NEAR as the means of exchange. Click "Fund Wallet" and visit any of the exchanges in the list to fund your wallet. To do anything with the NEAR Wallet, you will need at least 0.1 NEAR. However, on the testnet, NEAR wallet is pre-funded when you created an account.
                    </p>
                </article>
                </div>
                <div className="border rounded card-space shadow-lg">
                <article className="px-2 pt-4">
                
                    <h6 className="bold pb-3 action font-meridian">CREATE GAME ASSET</h6>
                    <p>
                    Each game asset is a unique NFT stored on IPFS. Each wallet can only have one Insignia NFT. Click "Connect Wallet" to link your NEAR Wallet. 
                    Click "Create Asset" to mint a unique NFT. An alternative is to purchase a Game Asset in the Marketplace.

                    </p>
                </article>
                </div>

                <div className="border rounded card-space shadow-lg">
                <article className="px-2 pt-4">
                    <h6 className="bold pb-3 action font-meridian">DOWNLOAD & PLAY</h6>
                    <p>
                    Currently, a very limited edition of the Free-To-Play model of the game is available on PC. Android and IOS release is coming soon.

                    </p>
                </article>
                </div>
            </div>
                <div>
                    <Link to="/WalletSetup" ><p className="wallet-scroll white font-meridian rounded-pill mb-0 mt-5 py-2">Play Now</p></Link>
                </div>
            </section>
            

        </div>
        <img src={bottomdark} alt="" className="rough"/>
    </div>
  )

};

export default Scroll;
'''
'''--- src/components/Trailer.js ---
import React from 'react';
import footer from '../assets/footer-edit.png'
import '../styles/Trailer.css';

const Trailer = () => {
  return(
    <div>

  
    <div className="trailer">
      <h6 className="topic font-medieval py-5">Watch The Trailer</h6>
      <p className="gold font-roboto sub">Use a headset for maximum effect</p>
      
            <div className="px-3 video-responsive">
                {/* <iframe className="youtube" src="https://www.youtube.com/embed/gSLiX1QihEc" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe> */}
            </div>
          
      
            
    </div>

    <img src={footer} alt="" className="rough"/>

    </div>
  )

};

export default Trailer;
'''
'''--- src/components/WalletSetup.js ---
import Nav from "./Nav";
import Copyright from './Copyright';
import { Link } from 'react-router-dom';
import forwardArrow from '../assets/right-arrows.png';
import backwardArrow from '../assets/left-arrow.png';
import near from '../assets/near-logo.png';
import metamask from '../assets/MetaMask-Logo.png';
import React, { useEffect, useState } from "react";
import { connectWallet, getCurrentWalletConnected } from "../utils/wallet";
import '../styles/WalletSetup.css';

const WalletSetup = () => {
  const [walletAddress, setWallet] = useState("");

  useEffect(() => {
    (async() => {
      const {address} = await getCurrentWalletConnected();
      setWallet(address)
  
      addWalletListener();
    }) ()
  }, []);

    // connect wallet 
    const connectWalletPressed = async () => {
      const walletResponse = await connectWallet();
      setWallet(walletResponse.address);
    };

    // wallet listener to update UI when wallet's state changes, 
    // such as when the user disconnects or switches accounts.
    function addWalletListener() {
      if (window.ethereum) {
      window.ethereum.on("accountsChanged", (accounts) => {
          if (accounts.length > 0) {
          setWallet(accounts[0]);
        
          } else {
          setWallet("");
          }
      });
      } 
    }

  return (
  <div>
      <div className='play'>
        <div>
          <Nav />
        </div>
        <div>
          

          <div className='d-flex steps px-5 pt-5 font-meridian'>
        <Link to="/WalletSetup" className='child'>
          <div >
              <p className='step-figure hightlighted1 py-2 rounded'>1</p>
              
              <p className='mt-3'>Wallet Set up</p>
          
          </div>
        </Link>
            
        <p className='line'>__________</p>
          
        <Link to="/GetToken" className='child'>
          <div>

              <p className='step-figure two py-2 rounded'>2</p>
              <p className='mt-3'>Get Insignia Token</p>
            </div>
        </Link>
          
        <p className='line'>__________</p>

        <Link to="/CreateAsset" className='child'> <div>
              <p className='step-figure py-2 rounded'>3</p>
              <p className='mt-3'>Create Game Asset</p>
            </div>
        </Link>

        <p className='line'>__________</p>

        <Link to="/DownloadGame" className='child'> 
            <div>
              <p className='step-figure py-2 rounded'>4</p>
              <p className='mt-3'>Download & Play</p> 
            </div>
        </Link>
      </div>

        </div>
        <div className='font-meridian near-wallet pt-5'>
          <h3>Connect To Insignia</h3>
          <p className='gold'>Insignia is a multi-protocol application. Connect to your favorite wallet.</p>
        </div>

        <div className="border wallet-space py-5 mt-5 shadow-lg">
            <article className="px-2">
                        <h6 className="bold pb-3 action font-meridian">WALLET SETUP</h6>
                        <p className="font-meridian">
                          Connect with Metamask or the NEAR Wallet. Skip this section if you already have a NEAR account.
                        </p>
            </article>
          

            <div>
                <img src={metamask} alt="" className="near-logo"/>
              <div>
                {walletAddress.length > 0 ? (
                  <div className="wallet-metamask white font-meridian rounded-pill mb-0 py-2 px-5">Current Player:   
                    {String(walletAddress).substring(0, 6) +
                      "..." +
                    String(walletAddress).substring(38)}
                  </div>
                    ) : (
                  <div className="wallet-metamask white font-meridian rounded-pill mb-0 py-2 px-5" onClick={connectWalletPressed}>Connect with Metamask</div>
                )}
              </div>
            </div>
            

            

            <div>
                <img src={near} alt="" className="near-logo mt-0 pt-0"/>

                <div>
                  <a href="https://wallet.near.org/" target="_blank"  rel="noreferrer" className="wallet-scroll white font-meridian rounded-pill py-2 px-5">Get NEAR Wallet</a>
                </div>
            </div>

        </div>

        
          <div className='d-flex setup-navigation pt-5 mb-5'>
              <Link to="/" className='font-meridian back'><p><img src={backwardArrow} alt="" className="arrow"/> Back</p></Link>
             <Link to="/GetToken" className='font-meridian back'><p>Next <img src={forwardArrow} alt="" className="arrow"/></p></Link> 
             
          </div>
         </div>
        
          
            <Copyright />
          
            
        
     
  </div>
  )
};

export default WalletSetup;
'''
'''--- src/contracts/Insignia.json ---
{
  "_format": "hh-sol-artifact-1",
  "contractName": "Insignia",
  "sourceName": "contracts/Insignia.sol",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "dna",
          "type": "uint256"
        }
      ],
      "name": "NewGladiator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "createRandomGladiator",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGladiators",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dna",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "level",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "rarity",
              "type": "uint8"
            }
          ],
          "internalType": "struct Insignia.Gladiator[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMintingPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getOwnerGladiators",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dna",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "level",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "rarity",
              "type": "uint8"
            }
          ],
          "internalType": "struct Insignia.Gladiator[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "gladiators",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dna",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "level",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "rarity",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_gladiatorId",
          "type": "uint256"
        }
      ],
      "name": "levelUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "updateFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405266044364c5bb00006009553480156200001c57600080fd5b5060405180604001604052806008815260200167496e7369676e696160c01b81525060405180604001604052806008815260200167494e5349474e494160c01b81525081600090805190602001906200007792919062000105565b5080516200008d90600190602084019062000105565b50506007805460ff1916905550620000a533620000ab565b620001e8565b600780546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200011390620001ab565b90600052602060002090601f01602090048101928262000137576000855562000182565b82601f106200015257805160ff191683800117855562000182565b8280016001018555821562000182579182015b828111156200018257825182559160200191906001019062000165565b506200019092915062000194565b5090565b5b8082111562000190576000815560010162000195565b600181811c90821680620001c057607f821691505b60208210811415620001e257634e487b7160e01b600052602260045260246000fd5b50919050565b61252380620001f86000396000f3fe60806040526004361061019c5760003560e01c806370a08231116100ec578063a22cb4651161008a578063e4a83fb011610064578063e4a83fb01461046c578063e985e9c514610481578063edf764a3146104ca578063f2fde38b146104fb57600080fd5b8063a22cb4651461040c578063b88d4fde1461042c578063c87b56dd1461044c57600080fd5b80638456cb59116100c65780638456cb591461039f5780638da5cb5b146103b45780639012c4a8146103d757806395d89b41146103f757600080fd5b806370a0823114610347578063715018a61461037557806377d247621461038a57600080fd5b806323b872dd1161015957806342842e0e1161013357806342842e0e146102dc5780635c975abb146102fc5780636352211e146103145780636650fe2a1461033457600080fd5b806323b872dd1461029f5780633ccfd60b146102bf5780633f4ba83a146102c757600080fd5b806301ffc9a7146101a157806305f0bee6146101d657806306fdde0314610203578063081812fc14610225578063095ea7b31461025d5780630ce90ec21461027f575b600080fd5b3480156101ad57600080fd5b506101c16101bc366004612091565b61051b565b60405190151581526020015b60405180910390f35b3480156101e257600080fd5b506101f66101f1366004611f2e565b61056d565b6040516101cd91906121da565b34801561020f57600080fd5b5061021861078f565b6040516101cd9190612277565b34801561023157600080fd5b5061024561024036600461212a565b610821565b6040516001600160a01b0390911681526020016101cd565b34801561026957600080fd5b5061027d610278366004612068565b6108ae565b005b34801561028b57600080fd5b5061027d61029a36600461212a565b6109c4565b3480156102ab57600080fd5b5061027d6102ba366004611f7a565b610a49565b61027d610a7a565b3480156102d357600080fd5b5061027d610afa565b3480156102e857600080fd5b5061027d6102f7366004611f7a565b610b34565b34801561030857600080fd5b5060075460ff166101c1565b34801561032057600080fd5b5061024561032f36600461212a565b610b4f565b61027d6103423660046120c9565b610bc6565b34801561035357600080fd5b50610367610362366004611f2e565b610c25565b6040519081526020016101cd565b34801561038157600080fd5b5061027d610cac565b34801561039657600080fd5b50600954610367565b3480156103ab57600080fd5b5061027d610ce6565b3480156103c057600080fd5b5060075461010090046001600160a01b0316610245565b3480156103e357600080fd5b5061027d6103f236600461212a565b610d1e565b34801561040357600080fd5b50610218610d53565b34801561041857600080fd5b5061027d61042736600461202e565b610d62565b34801561043857600080fd5b5061027d610447366004611fb5565b610d6d565b34801561045857600080fd5b5061021861046736600461212a565b610da5565b34801561047857600080fd5b506101f6610f1c565b34801561048d57600080fd5b506101c161049c366004611f48565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156104d657600080fd5b506104ea6104e536600461212a565b611042565b6040516101cd95949392919061228a565b34801561050757600080fd5b5061027d610516366004611f2e565b611118565b60006001600160e01b031982166380ac58cd60e01b148061054c57506001600160e01b03198216635b5e139f60e01b145b8061056757506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600061057a83610c25565b67ffffffffffffffff8111156105a057634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561060957816020015b6105f66040518060a00160405280606081526020016000815260200160008152602001600060ff168152602001600060ff1681525090565b8152602001906001900390816105be5790505b5090506000805b600a5481101561078657846001600160a01b031661062d82610b4f565b6001600160a01b0316141561077457600a818154811061065d57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600402016040518060a00160405290816000820180546106869061240b565b80601f01602080910402602001604051908101604052809291908181526020018280546106b29061240b565b80156106ff5780601f106106d4576101008083540402835291602001916106ff565b820191906000526020600020905b8154815290600101906020018083116106e257829003601f168201915b5050509183525050600182015460208201526002820154604082015260039091015460ff808216606084015261010090910416608090910152835184908490811061075a57634e487b7160e01b600052603260045260246000fd5b6020026020010181905250818061077090612446565b9250505b8061077e81612446565b915050610610565b50909392505050565b60606000805461079e9061240b565b80601f01602080910402602001604051908101604052809291908181526020018280546107ca9061240b565b80156108175780601f106107ec57610100808354040283529160200191610817565b820191906000526020600020905b8154815290600101906020018083116107fa57829003601f168201915b5050505050905090565b600061082c826111b9565b6108925760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006108b982610b4f565b9050806001600160a01b0316836001600160a01b031614156109275760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610889565b336001600160a01b03821614806109435750610943813361049c565b6109b55760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610889565b6109bf83836111d6565b505050565b336109ce82610b4f565b6001600160a01b0316146109e157600080fd5b6000600a8281548110610a0457634e487b7160e01b600052603260045260246000fd5b6000918252602082206003600490920201908101805491935060ff90911691610a2c83612461565b91906101000a81548160ff021916908360ff160217905550505050565b610a533382611244565b610a6f5760405162461bcd60e51b81526004016108899061234b565b6109bf83838361132a565b6007546001600160a01b03610100909104163314610aaa5760405162461bcd60e51b815260040161088990612316565b60075460009061010090046001600160a01b03166040519091506001600160a01b038216904780156108fc02916000818181858888f19350505050158015610af6573d6000803e3d6000fd5b5050565b6007546001600160a01b03610100909104163314610b2a5760405162461bcd60e51b815260040161088990612316565b610b326114c6565b565b6109bf83838360405180602001604052806000815250610d6d565b6000818152600260205260408120546001600160a01b0316806105675760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610889565b60075460ff1615610c0c5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610889565b600954341015610c1b57600080fd5b610af68282611559565b60006001600160a01b038216610c905760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610889565b506001600160a01b031660009081526003602052604090205490565b6007546001600160a01b03610100909104163314610cdc5760405162461bcd60e51b815260040161088990612316565b610b3260006116ae565b6007546001600160a01b03610100909104163314610d165760405162461bcd60e51b815260040161088990612316565b610b32611708565b6007546001600160a01b03610100909104163314610d4e5760405162461bcd60e51b815260040161088990612316565b600955565b60606001805461079e9061240b565b610af6338383611783565b610d773383611244565b610d935760405162461bcd60e51b81526004016108899061234b565b610d9f84848484611852565b50505050565b6060610db0826111b9565b610e165760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b6064820152608401610889565b60008281526006602052604081208054610e2f9061240b565b80601f0160208091040260200160405190810160405280929190818152602001828054610e5b9061240b565b8015610ea85780601f10610e7d57610100808354040283529160200191610ea8565b820191906000526020600020905b815481529060010190602001808311610e8b57829003601f168201915b505050505090506000610ec660408051602081019091526000815290565b9050805160001415610ed9575092915050565b815115610f0b578082604051602001610ef392919061216e565b60405160208183030381529060405292505050919050565b610f1484611885565b949350505050565b6060600a805480602002602001604051908101604052809291908181526020016000905b8282101561103957838290600052602060002090600402016040518060a0016040529081600082018054610f739061240b565b80601f0160208091040260200160405190810160405280929190818152602001828054610f9f9061240b565b8015610fec5780601f10610fc157610100808354040283529160200191610fec565b820191906000526020600020905b815481529060010190602001808311610fcf57829003601f168201915b50505091835250506001828101546020808401919091526002840154604084015260039093015460ff80821660608501526101009091041660809092019190915291835292019101610f40565b50505050905090565b600a818154811061105257600080fd5b90600052602060002090600402016000915090508060000180546110759061240b565b80601f01602080910402602001604051908101604052809291908181526020018280546110a19061240b565b80156110ee5780601f106110c3576101008083540402835291602001916110ee565b820191906000526020600020905b8154815290600101906020018083116110d157829003601f168201915b50505050600183015460028401546003909401549293909290915060ff8082169161010090041685565b6007546001600160a01b036101009091041633146111485760405162461bcd60e51b815260040161088990612316565b6001600160a01b0381166111ad5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610889565b6111b6816116ae565b50565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061120b82610b4f565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061124f826111b9565b6112b05760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610889565b60006112bb83610b4f565b9050806001600160a01b0316846001600160a01b031614806112f65750836001600160a01b03166112eb84610821565b6001600160a01b0316145b80610f1457506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff16610f14565b826001600160a01b031661133d82610b4f565b6001600160a01b0316146113a15760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610889565b6001600160a01b0382166114035760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610889565b61140e6000826111d6565b6001600160a01b03831660009081526003602052604081208054600192906114379084906123c8565b90915550506001600160a01b038216600090815260036020526040812080546001929061146590849061239c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60075460ff1661150f5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610889565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000611565606461195d565b90506000611579662386f26fc1000061195d565b6040805160a08101825286815260085460208083019190915291810183905260016060820181905260ff86166080830152600a80549182018155600052815180519495509193849360049092027fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a801926115f7928492910190611de4565b50602082015160018201556040820151600282015560608201516003909101805460809093015160ff9081166101000261ffff199094169216919091179190911790556008546116489033906119b2565b611654600854856119cc565b600854604080519182526020820184905233917fafe9a4d0bee41081247d7c2ed78c299e0659e38f39503e1396e7e82f7bee258b910160405180910390a2600880549060006116a283612446565b91905055505050505050565b600780546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60075460ff161561174e5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610889565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861153c3390565b816001600160a01b0316836001600160a01b031614156117e55760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610889565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61185d84848461132a565b61186984848484611a57565b610d9f5760405162461bcd60e51b8152600401610889906122c4565b6060611890826111b9565b6118f45760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610889565b600061190b60408051602081019091526000815290565b9050600081511161192b5760405180602001604052806000815250611956565b8061193584611b64565b60405160200161194692919061216e565b6040516020818303038152906040525b9392505050565b600080423360405160200161198e92919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b60408051601f19818403018152919052805160209091012090506119568382612481565b610af6828260405180602001604052806000815250611c7e565b6119d5826111b9565b611a385760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608401610889565b600082815260066020908152604090912082516109bf92840190611de4565b60006001600160a01b0384163b15611b5957604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611a9b90339089908890889060040161219d565b602060405180830381600087803b158015611ab557600080fd5b505af1925050508015611ae5575060408051601f3d908101601f19168201909252611ae2918101906120ad565b60015b611b3f573d808015611b13576040519150601f19603f3d011682016040523d82523d6000602084013e611b18565b606091505b508051611b375760405162461bcd60e51b8152600401610889906122c4565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610f14565b506001949350505050565b606081611b885750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611bb25780611b9c81612446565b9150611bab9050600a836123b4565b9150611b8c565b60008167ffffffffffffffff811115611bdb57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611c05576020820181803683370190505b5090505b8415610f1457611c1a6001836123c8565b9150611c27600a86612481565b611c3290603061239c565b60f81b818381518110611c5557634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350611c77600a866123b4565b9450611c09565b611c888383611cb1565b611c956000848484611a57565b6109bf5760405162461bcd60e51b8152600401610889906122c4565b6001600160a01b038216611d075760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610889565b611d10816111b9565b15611d5d5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610889565b6001600160a01b0382166000908152600360205260408120805460019290611d8690849061239c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611df09061240b565b90600052602060002090601f016020900481019282611e125760008555611e58565b82601f10611e2b57805160ff1916838001178555611e58565b82800160010185558215611e58579182015b82811115611e58578251825591602001919060010190611e3d565b50611e64929150611e68565b5090565b5b80821115611e645760008155600101611e69565b600067ffffffffffffffff80841115611e9857611e986124c1565b604051601f8501601f19908116603f01168101908282118183101715611ec057611ec06124c1565b81604052809350858152868686011115611ed957600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b0381168114611f0a57600080fd5b919050565b600082601f830112611f1f578081fd5b61195683833560208501611e7d565b600060208284031215611f3f578081fd5b61195682611ef3565b60008060408385031215611f5a578081fd5b611f6383611ef3565b9150611f7160208401611ef3565b90509250929050565b600080600060608486031215611f8e578081fd5b611f9784611ef3565b9250611fa560208501611ef3565b9150604084013590509250925092565b60008060008060808587031215611fca578081fd5b611fd385611ef3565b9350611fe160208601611ef3565b925060408501359150606085013567ffffffffffffffff811115612003578182fd5b8501601f81018713612013578182fd5b61202287823560208401611e7d565b91505092959194509250565b60008060408385031215612040578182fd5b61204983611ef3565b91506020830135801515811461205d578182fd5b809150509250929050565b6000806040838503121561207a578182fd5b61208383611ef3565b946020939093013593505050565b6000602082840312156120a2578081fd5b8135611956816124d7565b6000602082840312156120be578081fd5b8151611956816124d7565b600080604083850312156120db578182fd5b823567ffffffffffffffff808211156120f2578384fd5b6120fe86838701611f0f565b93506020850135915080821115612113578283fd5b5061212085828601611f0f565b9150509250929050565b60006020828403121561213b578081fd5b5035919050565b6000815180845261215a8160208601602086016123df565b601f01601f19169290920160200192915050565b600083516121808184602088016123df565b8351908301906121948183602088016123df565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906121d090830184612142565b9695505050505050565b60006020808301818452808551808352604092508286019150828160051b870101848801865b8381101561226957603f19898403018552815160a0815181865261222682870182612142565b838b0151878c0152898401518a88015260608085015160ff9081169189019190915260809485015116939096019290925250509386019390860190600101612200565b509098975050505050505050565b6020815260006119566020830184612142565b60a08152600061229d60a0830188612142565b602083019690965250604081019390935260ff918216606084015216608090910152919050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082198211156123af576123af612495565b500190565b6000826123c3576123c36124ab565b500490565b6000828210156123da576123da612495565b500390565b60005b838110156123fa5781810151838201526020016123e2565b83811115610d9f5750506000910152565b600181811c9082168061241f57607f821691505b6020821081141561244057634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561245a5761245a612495565b5060010190565b600060ff821660ff81141561247857612478612495565b60010192915050565b600082612490576124906124ab565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146111b657600080fdfea2646970667358221220dcf244a636141fba7714f326ce49b21096df92c6878a9a6db1752f892c3f55ee64736f6c63430008040033",
  "deployedBytecode": "0x60806040526004361061019c5760003560e01c806370a08231116100ec578063a22cb4651161008a578063e4a83fb011610064578063e4a83fb01461046c578063e985e9c514610481578063edf764a3146104ca578063f2fde38b146104fb57600080fd5b8063a22cb4651461040c578063b88d4fde1461042c578063c87b56dd1461044c57600080fd5b80638456cb59116100c65780638456cb591461039f5780638da5cb5b146103b45780639012c4a8146103d757806395d89b41146103f757600080fd5b806370a0823114610347578063715018a61461037557806377d247621461038a57600080fd5b806323b872dd1161015957806342842e0e1161013357806342842e0e146102dc5780635c975abb146102fc5780636352211e146103145780636650fe2a1461033457600080fd5b806323b872dd1461029f5780633ccfd60b146102bf5780633f4ba83a146102c757600080fd5b806301ffc9a7146101a157806305f0bee6146101d657806306fdde0314610203578063081812fc14610225578063095ea7b31461025d5780630ce90ec21461027f575b600080fd5b3480156101ad57600080fd5b506101c16101bc366004612091565b61051b565b60405190151581526020015b60405180910390f35b3480156101e257600080fd5b506101f66101f1366004611f2e565b61056d565b6040516101cd91906121da565b34801561020f57600080fd5b5061021861078f565b6040516101cd9190612277565b34801561023157600080fd5b5061024561024036600461212a565b610821565b6040516001600160a01b0390911681526020016101cd565b34801561026957600080fd5b5061027d610278366004612068565b6108ae565b005b34801561028b57600080fd5b5061027d61029a36600461212a565b6109c4565b3480156102ab57600080fd5b5061027d6102ba366004611f7a565b610a49565b61027d610a7a565b3480156102d357600080fd5b5061027d610afa565b3480156102e857600080fd5b5061027d6102f7366004611f7a565b610b34565b34801561030857600080fd5b5060075460ff166101c1565b34801561032057600080fd5b5061024561032f36600461212a565b610b4f565b61027d6103423660046120c9565b610bc6565b34801561035357600080fd5b50610367610362366004611f2e565b610c25565b6040519081526020016101cd565b34801561038157600080fd5b5061027d610cac565b34801561039657600080fd5b50600954610367565b3480156103ab57600080fd5b5061027d610ce6565b3480156103c057600080fd5b5060075461010090046001600160a01b0316610245565b3480156103e357600080fd5b5061027d6103f236600461212a565b610d1e565b34801561040357600080fd5b50610218610d53565b34801561041857600080fd5b5061027d61042736600461202e565b610d62565b34801561043857600080fd5b5061027d610447366004611fb5565b610d6d565b34801561045857600080fd5b5061021861046736600461212a565b610da5565b34801561047857600080fd5b506101f6610f1c565b34801561048d57600080fd5b506101c161049c366004611f48565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156104d657600080fd5b506104ea6104e536600461212a565b611042565b6040516101cd95949392919061228a565b34801561050757600080fd5b5061027d610516366004611f2e565b611118565b60006001600160e01b031982166380ac58cd60e01b148061054c57506001600160e01b03198216635b5e139f60e01b145b8061056757506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600061057a83610c25565b67ffffffffffffffff8111156105a057634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561060957816020015b6105f66040518060a00160405280606081526020016000815260200160008152602001600060ff168152602001600060ff1681525090565b8152602001906001900390816105be5790505b5090506000805b600a5481101561078657846001600160a01b031661062d82610b4f565b6001600160a01b0316141561077457600a818154811061065d57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600402016040518060a00160405290816000820180546106869061240b565b80601f01602080910402602001604051908101604052809291908181526020018280546106b29061240b565b80156106ff5780601f106106d4576101008083540402835291602001916106ff565b820191906000526020600020905b8154815290600101906020018083116106e257829003601f168201915b5050509183525050600182015460208201526002820154604082015260039091015460ff808216606084015261010090910416608090910152835184908490811061075a57634e487b7160e01b600052603260045260246000fd5b6020026020010181905250818061077090612446565b9250505b8061077e81612446565b915050610610565b50909392505050565b60606000805461079e9061240b565b80601f01602080910402602001604051908101604052809291908181526020018280546107ca9061240b565b80156108175780601f106107ec57610100808354040283529160200191610817565b820191906000526020600020905b8154815290600101906020018083116107fa57829003601f168201915b5050505050905090565b600061082c826111b9565b6108925760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006108b982610b4f565b9050806001600160a01b0316836001600160a01b031614156109275760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610889565b336001600160a01b03821614806109435750610943813361049c565b6109b55760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610889565b6109bf83836111d6565b505050565b336109ce82610b4f565b6001600160a01b0316146109e157600080fd5b6000600a8281548110610a0457634e487b7160e01b600052603260045260246000fd5b6000918252602082206003600490920201908101805491935060ff90911691610a2c83612461565b91906101000a81548160ff021916908360ff160217905550505050565b610a533382611244565b610a6f5760405162461bcd60e51b81526004016108899061234b565b6109bf83838361132a565b6007546001600160a01b03610100909104163314610aaa5760405162461bcd60e51b815260040161088990612316565b60075460009061010090046001600160a01b03166040519091506001600160a01b038216904780156108fc02916000818181858888f19350505050158015610af6573d6000803e3d6000fd5b5050565b6007546001600160a01b03610100909104163314610b2a5760405162461bcd60e51b815260040161088990612316565b610b326114c6565b565b6109bf83838360405180602001604052806000815250610d6d565b6000818152600260205260408120546001600160a01b0316806105675760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610889565b60075460ff1615610c0c5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610889565b600954341015610c1b57600080fd5b610af68282611559565b60006001600160a01b038216610c905760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610889565b506001600160a01b031660009081526003602052604090205490565b6007546001600160a01b03610100909104163314610cdc5760405162461bcd60e51b815260040161088990612316565b610b3260006116ae565b6007546001600160a01b03610100909104163314610d165760405162461bcd60e51b815260040161088990612316565b610b32611708565b6007546001600160a01b03610100909104163314610d4e5760405162461bcd60e51b815260040161088990612316565b600955565b60606001805461079e9061240b565b610af6338383611783565b610d773383611244565b610d935760405162461bcd60e51b81526004016108899061234b565b610d9f84848484611852565b50505050565b6060610db0826111b9565b610e165760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b6064820152608401610889565b60008281526006602052604081208054610e2f9061240b565b80601f0160208091040260200160405190810160405280929190818152602001828054610e5b9061240b565b8015610ea85780601f10610e7d57610100808354040283529160200191610ea8565b820191906000526020600020905b815481529060010190602001808311610e8b57829003601f168201915b505050505090506000610ec660408051602081019091526000815290565b9050805160001415610ed9575092915050565b815115610f0b578082604051602001610ef392919061216e565b60405160208183030381529060405292505050919050565b610f1484611885565b949350505050565b6060600a805480602002602001604051908101604052809291908181526020016000905b8282101561103957838290600052602060002090600402016040518060a0016040529081600082018054610f739061240b565b80601f0160208091040260200160405190810160405280929190818152602001828054610f9f9061240b565b8015610fec5780601f10610fc157610100808354040283529160200191610fec565b820191906000526020600020905b815481529060010190602001808311610fcf57829003601f168201915b50505091835250506001828101546020808401919091526002840154604084015260039093015460ff80821660608501526101009091041660809092019190915291835292019101610f40565b50505050905090565b600a818154811061105257600080fd5b90600052602060002090600402016000915090508060000180546110759061240b565b80601f01602080910402602001604051908101604052809291908181526020018280546110a19061240b565b80156110ee5780601f106110c3576101008083540402835291602001916110ee565b820191906000526020600020905b8154815290600101906020018083116110d157829003601f168201915b50505050600183015460028401546003909401549293909290915060ff8082169161010090041685565b6007546001600160a01b036101009091041633146111485760405162461bcd60e51b815260040161088990612316565b6001600160a01b0381166111ad5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610889565b6111b6816116ae565b50565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061120b82610b4f565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061124f826111b9565b6112b05760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610889565b60006112bb83610b4f565b9050806001600160a01b0316846001600160a01b031614806112f65750836001600160a01b03166112eb84610821565b6001600160a01b0316145b80610f1457506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff16610f14565b826001600160a01b031661133d82610b4f565b6001600160a01b0316146113a15760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610889565b6001600160a01b0382166114035760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610889565b61140e6000826111d6565b6001600160a01b03831660009081526003602052604081208054600192906114379084906123c8565b90915550506001600160a01b038216600090815260036020526040812080546001929061146590849061239c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60075460ff1661150f5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610889565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000611565606461195d565b90506000611579662386f26fc1000061195d565b6040805160a08101825286815260085460208083019190915291810183905260016060820181905260ff86166080830152600a80549182018155600052815180519495509193849360049092027fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a801926115f7928492910190611de4565b50602082015160018201556040820151600282015560608201516003909101805460809093015160ff9081166101000261ffff199094169216919091179190911790556008546116489033906119b2565b611654600854856119cc565b600854604080519182526020820184905233917fafe9a4d0bee41081247d7c2ed78c299e0659e38f39503e1396e7e82f7bee258b910160405180910390a2600880549060006116a283612446565b91905055505050505050565b600780546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60075460ff161561174e5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610889565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861153c3390565b816001600160a01b0316836001600160a01b031614156117e55760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610889565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61185d84848461132a565b61186984848484611a57565b610d9f5760405162461bcd60e51b8152600401610889906122c4565b6060611890826111b9565b6118f45760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610889565b600061190b60408051602081019091526000815290565b9050600081511161192b5760405180602001604052806000815250611956565b8061193584611b64565b60405160200161194692919061216e565b6040516020818303038152906040525b9392505050565b600080423360405160200161198e92919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b60408051601f19818403018152919052805160209091012090506119568382612481565b610af6828260405180602001604052806000815250611c7e565b6119d5826111b9565b611a385760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608401610889565b600082815260066020908152604090912082516109bf92840190611de4565b60006001600160a01b0384163b15611b5957604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611a9b90339089908890889060040161219d565b602060405180830381600087803b158015611ab557600080fd5b505af1925050508015611ae5575060408051601f3d908101601f19168201909252611ae2918101906120ad565b60015b611b3f573d808015611b13576040519150601f19603f3d011682016040523d82523d6000602084013e611b18565b606091505b508051611b375760405162461bcd60e51b8152600401610889906122c4565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610f14565b506001949350505050565b606081611b885750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611bb25780611b9c81612446565b9150611bab9050600a836123b4565b9150611b8c565b60008167ffffffffffffffff811115611bdb57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611c05576020820181803683370190505b5090505b8415610f1457611c1a6001836123c8565b9150611c27600a86612481565b611c3290603061239c565b60f81b818381518110611c5557634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350611c77600a866123b4565b9450611c09565b611c888383611cb1565b611c956000848484611a57565b6109bf5760405162461bcd60e51b8152600401610889906122c4565b6001600160a01b038216611d075760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610889565b611d10816111b9565b15611d5d5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610889565b6001600160a01b0382166000908152600360205260408120805460019290611d8690849061239c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611df09061240b565b90600052602060002090601f016020900481019282611e125760008555611e58565b82601f10611e2b57805160ff1916838001178555611e58565b82800160010185558215611e58579182015b82811115611e58578251825591602001919060010190611e3d565b50611e64929150611e68565b5090565b5b80821115611e645760008155600101611e69565b600067ffffffffffffffff80841115611e9857611e986124c1565b604051601f8501601f19908116603f01168101908282118183101715611ec057611ec06124c1565b81604052809350858152868686011115611ed957600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b0381168114611f0a57600080fd5b919050565b600082601f830112611f1f578081fd5b61195683833560208501611e7d565b600060208284031215611f3f578081fd5b61195682611ef3565b60008060408385031215611f5a578081fd5b611f6383611ef3565b9150611f7160208401611ef3565b90509250929050565b600080600060608486031215611f8e578081fd5b611f9784611ef3565b9250611fa560208501611ef3565b9150604084013590509250925092565b60008060008060808587031215611fca578081fd5b611fd385611ef3565b9350611fe160208601611ef3565b925060408501359150606085013567ffffffffffffffff811115612003578182fd5b8501601f81018713612013578182fd5b61202287823560208401611e7d565b91505092959194509250565b60008060408385031215612040578182fd5b61204983611ef3565b91506020830135801515811461205d578182fd5b809150509250929050565b6000806040838503121561207a578182fd5b61208383611ef3565b946020939093013593505050565b6000602082840312156120a2578081fd5b8135611956816124d7565b6000602082840312156120be578081fd5b8151611956816124d7565b600080604083850312156120db578182fd5b823567ffffffffffffffff808211156120f2578384fd5b6120fe86838701611f0f565b93506020850135915080821115612113578283fd5b5061212085828601611f0f565b9150509250929050565b60006020828403121561213b578081fd5b5035919050565b6000815180845261215a8160208601602086016123df565b601f01601f19169290920160200192915050565b600083516121808184602088016123df565b8351908301906121948183602088016123df565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906121d090830184612142565b9695505050505050565b60006020808301818452808551808352604092508286019150828160051b870101848801865b8381101561226957603f19898403018552815160a0815181865261222682870182612142565b838b0151878c0152898401518a88015260608085015160ff9081169189019190915260809485015116939096019290925250509386019390860190600101612200565b509098975050505050505050565b6020815260006119566020830184612142565b60a08152600061229d60a0830188612142565b602083019690965250604081019390935260ff918216606084015216608090910152919050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082198211156123af576123af612495565b500190565b6000826123c3576123c36124ab565b500490565b6000828210156123da576123da612495565b500390565b60005b838110156123fa5781810151838201526020016123e2565b83811115610d9f5750506000910152565b600181811c9082168061241f57607f821691505b6020821081141561244057634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561245a5761245a612495565b5060010190565b600060ff821660ff81141561247857612478612495565b60010192915050565b600082612490576124906124ab565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146111b657600080fdfea2646970667358221220dcf244a636141fba7714f326ce49b21096df92c6878a9a6db1752f892c3f55ee64736f6c63430008040033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}
'''
'''--- src/contracts/contract-address.json ---
{
  "Insignia": "0x5FbDB2315678afecb367f032d93F642f64180aa3"
}
'''
'''--- src/index.js ---
import React from 'react';
import ReactDOM from 'react-dom';
import Routes from './components/Routes';
import "./styles/index.css"

ReactDOM.render(
  <React.StrictMode>
    <Routes />
  </React.StrictMode>,
  document.getElementById('root')
);

'''
'''--- src/styles/App.css ---

'''
'''--- src/styles/Community.css ---
.community {
        background-image: url('../assets/tower.jpg');
        height: 300px;
        background-repeat: no-repeat;
        background-size: cover;
        width: 100%;
}

'''
'''--- src/styles/Copyright.css ---

.meridian-font {
	font-family: 'Merienda', cursive;
}

.copyright {
    margin-top: 0;
    padding-top: 0;
    height: 30px;
}

.connect-link {
    width: auto;
    justify-content: center;
    align-self: center;
}

.connect {
    width: 15%;
}
'''
'''--- src/styles/Event.css ---
.event {
    height: 800px;
}

.features {
    text-align: center;
    word-wrap: break-word;
    font-size: 4em;
    font-weight: 700;
    line-height: 1.06;
}
'''
'''--- src/styles/Footer.css ---
.white {
	color: white;
}

.grey {
	color: rgb(180, 176, 176);
}

.footer-flex {
	padding-top: 40px;
}

/* .main-footer {
	background-color: rgb(5, 5, 5);
} */

.footer-submain {
	padding-left: 8%;
	padding-right: 8%;
}

.font {
	font-family: 'Roboto', sans-serif;
}

.width-30 {
	width: 30%;
}

.blue {
	color: rgb(13, 13, 233);
}

.last-footer {
	margin: auto;
  	width: 50%;
}
'''
'''--- src/styles/Home.css ---
.enter {
  position: relative;
  bottom: 20vh;
  cursor: pointer;
  border: solid;
  border-color: #bd8d4c;
  text-align: center;
  width: 15%;
  text-decoration: none;
}

.font-roboto {
  font-family: 'Roboto', sans-serif;
}

.enter:hover {
  background-color: #bd8d4c;
}

.title-one {
  font-size: 5em;
  line-height: 1.2;
  position: relative;
  top: 300px;
  width: 100%;
  text-align: center;
}

.title-three {
  font-size: 5em;
  line-height: 1.2;
  position: relative;
  top: 300px;
  width: 100%;
  text-align: center;
}

.title-two {
  font-size: 2rem;
  font-family: 'Roboto', sans-serif;
  width: 100%;
  text-align: center;
  position: relative;
  top: 320px;
}
/* 
.heading {
  position: absolute;
  top: 200px;
  left: 1%;
}   */

.front {
  height: 100vh;
  position: relative;
}

/* .box {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0.7;
} */

.overlay {
  /* z-index: 9; */
  background: rgba(0, 0, 0, 0.5);
  width: 100%;
  height: 100vh;
}

#myVideo {
  position: absolute;
  /* right: 0;
  bottom: 0; */
  width: 100%;
  opacity: 0.7;
  /* height: 100%; */
}

.second {
  height: 100vh;
  position: relative;
}

.white {
  color: white;
}

.animate__animated.animate__fadeIn {
  --animate-duration: 5s;
}
'''
'''--- src/styles/Join.css ---
.join {
    height: 300px;
}

.join-image {
    position: relative;
    left: 70%;
}

.fav-icons {
    justify-content: space-between;
    width: 20%;
}

.center {
    margin-left: auto;
    margin-right: auto;   
}

.join-text {
    text-align: center;
}

.topic-join {
    text-align: center;
    word-wrap: break-word;
    font-size: 4em;
    font-weight: 700;
    line-height: 1.06;
}

.soc {
    justify-content: center;
}

.join-soc {
    width: 20%;
}
'''
'''--- src/styles/Marketplace.css ---
.marketplace {
    background-image: url('../assets/background-white.jpg');
    background-color: #f2e0c8;
    width: auto;
    background-repeat: no-repeat;
    background-size: cover;
    height: 100vh;
}

.topic-marketplace {
    text-align: center;
    word-wrap: break-word;
    color: #070301;
    font-size: 2em;
    font-weight: 700;
    line-height: 1.06;
}

.market-text {
    text-align: center;    
}

.capsules {
    width: auto;
    justify-content: space-around;
}

.search {
    background-color: #f2e0c8;
    height: 40px;
    border: solid;
}

.coming-soon {
    text-align: center;
}

.text-market:hover {
    color: white;
}
'''
'''--- src/styles/Nav.css ---
.font-meridian {
  font-family: 'Merienda', cursive;
}

.font-medieval {
  font-family: 'MedievalSharp', cursive;
}

a:link {
  text-decoration: none;
}

a:hover {
  color: #bd8d4c;
}

.white {
  color: white;
}

.wallet {
  cursor: pointer;
  border: solid;
  border-color: #bd8d4c;
  text-align: center;
  width: auto;
  text-decoration: none;
}

.wallet:hover {
  background-color: #bd8d4c;
}

.logo {
  width: auto;
  max-height: 6em;
}

.top-nav {
  background-color: #0e0d12;
  padding-right: 2.6em;
 
}

.flex1 {
  width: 20%;
}

.flex2 {
  width: 80%;
}

.flex3 {
  width: 10%;
}

.gold {
  color: #bd8d4c;
}
'''
'''--- src/styles/Next.css ---
.next {
    background-image: url('../assets/background-white.jpg');
    background-color: #f2e0c8;
    height: 800px;
    background-repeat: no-repeat;
    background-size: cover;
    width: 100%;
}
'''
'''--- src/styles/Play.css ---
.play {
    background-image: url('../assets/background-white.jpg');
    background-color: #f2e0c8;
    width: auto;
    background-repeat: no-repeat;
    background-size: cover;
}

.steps {
    width: 50%;
    justify-content: space-around;
    align-content: center;
    align-self: center;
    margin: auto;
}

.child {
    text-align: center;
    cursor: pointer;
    color: black;
}

.step-figure {
    background-color: grey;
    width: 30%;
    margin: auto;
}

.setup-navigation {
    width: 80%;
    align-items: center;
    justify-content: space-around;
    margin: auto;
}

.back {
    color: black;
}

.arrow {
    width: 20px;
}

.line {
    width: auto;
}

.platform {
    height: 50vh;
}

.hightlighted1, .hightlighted2, .highlighted3, .highlighted4 {
  background-color: black;
  color: white;
}

.create-scroll {
    cursor: pointer;
    border: solid;
    border-color: #bd8d4c;
    background-color: #bd8d4c;
    text-align: center;
    width: 20%;
    margin: auto;
}

.sign-in {
    cursor: pointer;
    width: 40%;
}

'''
'''--- src/styles/Reveal.css ---
.mint {
  width: 20%;
  margin: auto;
}

'''
'''--- src/styles/Scroll.css ---
.scroll {
    background-color: rgb(232, 211, 182);
    padding-bottom: 100px;
}

.rough {
    width: 100%;
}

.topic {
    text-align: center;
    word-wrap: break-word;
    color: #070301;
    font-size: 4em;
    font-weight: 700;
    line-height: 1.06;
}

.card-space {
    margin-right: 2%;
    text-align: center;
    max-width: 25%;
}

.action:hover {
    color: #bd8d4c;
}

.wallet-scroll {
  cursor: pointer;
  border: solid;
  border-color: #bd8d4c;
  background-color: #bd8d4c;
  text-align: center;
  width: 12%;
  margin: auto;
  
}

.get-started {
    text-align: center;
    color: #877c6d;
}

.castle {
    width: 15%;
    color: #bd8d4c;
}

'''
'''--- src/styles/Trailer.css ---
.trailer {
    background-image: url('../assets/background-white.jpg');
    background-color: #f2e0c8;
    height: 800px;
    background-repeat: no-repeat;
    background-size: cover;
    width: 100%;
}

.rough {
    width: 100%;
}

.video-responsive {
    
    height: 480px;
    width: 100%;
    margin-top: 100px;
}

.youtube {
    width: 80%;
    height: 450px;
    display: block;
  margin-left: auto;
  margin-right: auto;
}

.sub {
    text-align: center;
}
'''
'''--- src/styles/WalletSetup.css ---
.near-wallet {
  text-align: center;
}

.wallet-space {
  margin: auto;
  text-align: center;
  max-width: 60%;
  background-color: rgba(172, 172, 172, 0.432);
  height: 600px;
  border-radius: 1.5%;
}

.near-logo {
  width: 20%;
}

.wallet-metamask {
  cursor: pointer;
  border: solid;
  border-color: #bd8d4c;
  background-color: #bd8d4c;
  text-align: center;
  width: 40%;
  margin: auto;
}

.container-wallet {
  flex-direction: column;
}

.submit {
  cursor: pointer;
}

'''
'''--- src/styles/Whitepaper.css ---

'''
'''--- src/styles/index.css ---
body {
  background-color: #0A1831;
  max-width: 3600px;
}
'''
'''--- src/utils/wallet.js ---
// First time wallet connection
export const connectWallet = async () => {
    if (window.ethereum) {
        try {
            const addressArray = await window.ethereum.request({
              method: "eth_requestAccounts",
            });
            const obj = {
              address: addressArray[0],
            };
            return obj;
          } catch (err) {
            return {
              address: "",
            };
          }
    } else {
        return {
          address: "",
        };
      }
}

// For an already connected wallet upon browser refresh

export const getCurrentWalletConnected = async () => {
    if (window.ethereum) {
      try {
        const addressArray = await window.ethereum.request({
          method: "eth_accounts",
        });
        if (addressArray.length > 0) {
          return {
            address: addressArray[0],
          };
        } else {
          return {
            address: "",
          };
        }
      } catch (err) {
        return {
          address: "",
        };
      }
    } else {
      return {
        address: "",
      };
    }
  }
'''