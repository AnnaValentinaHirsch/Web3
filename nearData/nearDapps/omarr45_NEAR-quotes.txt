*GitHub Repository "omarr45/NEAR-quotes"*

'''--- README.md ---
## The Quotes Notebook
A simple project that I made for dApps 2022 internship by NEAR foundation

### Check the deployed version [here](https://near-quotes.web.app/):
### and check the code for the frontend [here](https://github.com/omarr45/NEAR-quotes-fe/)
![Screenshot](https://user-images.githubusercontent.com/58887202/179410852-5aa8966a-e2e9-45e1-8fda-afc04474e9cb.png)

'''
'''--- __tests__/as-pect.d.ts ---
/// <reference types="@as-pect/assembly/types/as-pect" />
'''
'''--- __tests__/index.unit.spec.ts ---
//import sayHello from "../assembly/index
//لاستدعاء الفنكش
//sayHello
// من الملف
//index
import { sayHello } from "../assembly/index";

//describe
//لوصف مجموعة اختيارات بإسم  يظهر فى النتائج بعد ذلك
describe("Contract", () => {
  //it
  //أحد طرق وصف اختبار مثلما نقول هذا الإختبار يجب أن
  it("should say print the statement 'hello from the blockchain world!' ", () => {
    //expect
    //نتوقع نتيجة استدعاء الفنكشن أن تكون مساوية للجملة
    expect(sayHello()).toStrictEqual("hello from the blockchain world!");
  });
});

'''
'''--- as-pect.config.js ---
module.exports = require("near-sdk-as/imports");
module.exports.include.push("**/*.unit.spec.ts");

'''
'''--- asconfig.json ---
{
  "extends": "near-sdk-as/asconfig.json"
}

'''
'''--- assembly/as_types.d.ts ---
/// <reference types="near-sdk-as/assembly/as_types" />

'''
'''--- assembly/index.ts ---
import { Context, PersistentVector } from 'near-sdk-as';

import { Quote } from './model';

@nearBindgen
export class Contract {
  public quotes: PersistentVector<Quote> = new PersistentVector<Quote>('qs');

  @mutateState()
  addQuote(quote: string): Quote {
    const writer: string = Context.sender;

    const q = new Quote(quote, writer);

    this.quotes.push(q);
    return q;
  }

  fetchQuotes(): Array<Quote> {
    let Qs = new Array<Quote>(this.quotes.length);
    // loop over the vector and copy the elements to the array
    for (let i = 0; i < this.quotes.length; i++) {
      Qs[i] = this.quotes[i];
    }
    return Qs;
  }
}

'''
'''--- assembly/model.ts ---
@nearBindgen
export class Quote {
  quote: string;
  writer: string;

  constructor(quote: string, writer: string) {
    this.quote = quote;
    this.writer = writer;
  }
}

'''
'''--- assembly/tsconfig.json ---
{
  "extends": "../node_modules/assemblyscript/std/assembly.json",
  "include": ["./**/*.ts"]
}

'''
'''--- package.json ---
{
  "name": "quotes",
  "version": "0.0.1",
  "description": "A quotes archive",
  "scripts": {
    "dev": "watch -d -n 1 'clear && yarn test'",
    "test": "yarn asp -f unit.spec",
    "clean": "rm -rf ./build && rm -rf ./neardev",
    "build": "asb --target debug",
    "build:release": "asb",
    "asp": "asp --verbose --nologo"
  },
  "keywords": [],
  "author": "hello@world-near.org",
  "license": "ISC",
  "devDependencies": {
    "@types/jest": "^27.4.0",
    "near-sdk-as": "^3.1.0"
  }
}

'''