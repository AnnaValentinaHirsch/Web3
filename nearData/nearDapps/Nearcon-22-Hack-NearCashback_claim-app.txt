*GitHub Repository "Nearcon-22-Hack-NearCashback/claim-app"*

'''--- README.md ---
# Getting Started with Near Cashback Frontend App

## About frontend

Deployed frontend: https://app.nearcashback.com/claim

Simple frontend application with 1 page /claim that allows you to claim your cashback that you received on the receipt in QR-code way.
Here user don't need to login because we create functional key for our contract to get claim the money.
So the flow:
1. You have the link(QR-code) from receipt with private-key to claim money
2. We do view call on our smart-contract to get functional-key to use without login user
3. And grab amount of the cashback from SC
4. Then user click "Claim" button, receive, we lock the money and create the link via linkdrop
5. User redirects on linkdrop where create/login and grab cashback

### `yarn start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in your browser.

The page will reload when you make changes.\
You may also see any lint errors in the console.

### `yarn build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

Thanks for watchin, subscribes on us:
https://twitter.com/nearuaguild
https://t.me/nearprotocolua
https://t.me/nearprotocoluachannel
'''
'''--- craco.config.js ---
const path = require('path');
module.exports = {
  webpack: {
    alias: {
      'components': path.resolve(__dirname, 'src/components/'),
      'styles': path.resolve(__dirname, 'src/styles/'),
      'images': path.resolve(__dirname, 'src/images/'),
      'constants': path.resolve(__dirname, 'src/constants'),
    }
  }
}
'''
'''--- package.json ---
{
  "name": "nftvolunteer",
  "version": "0.1.0",
  "private": "false",
  "homepage": "",
  "dependencies": {
    "@craco/craco": "^6.4.3",
    "@testing-library/jest-dom": "^5.11.4",
    "@testing-library/react": "^11.1.0",
    "@testing-library/user-event": "^12.1.10",
    "axios": "^0.27.2",
    "bn.js": "^5.2.1",
    "borsh": "^0.7.0",
    "classnames": "^2.3.1",
    "crypto-js": "^4.1.1",
    "gh-pages": "^3.2.3",
    "near-api-js": "^0.45.1",
    "query-string": "^7.0.1",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-loader-spinner": "^4.0.0",
    "react-router-dom": "6",
    "react-scripts": "4.0.3",
    "regenerator-runtime": "^0.13.9",
    "web-vitals": "^1.0.1"
  },
  "scripts": {
    "start": "BROWSER=none craco start",
    "build": "craco build",
    "test": "craco test",
    "eject": "react-scripts eject",
    "deploy:pages": "gh-pages -d build"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}

'''
'''--- public/index.html ---
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="%PUBLIC_URL%/near_icon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#000000" />
    <meta
      name="description"
      content="Web site created using create-react-app"
    />
    <link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" />
    <!--
      manifest.json provides metadata used when your web app is installed on a
      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/
    -->
    <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
    <!--
      Notice the use of %PUBLIC_URL% in the tags above.
      It will be replaced with the URL of the `public` folder during the build.
      Only files inside the `public` folder can be referenced from the HTML.

      Unlike "/favicon.ico" or "favicon.ico", "%PUBLIC_URL%/favicon.ico" will
      work correctly both with client-side routing and a non-root public URL.
      Learn how to configure a non-root public URL by running `npm run build`.
    -->
    <title>Claim your cashback</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
    <!--
      This HTML file is a template.
      If you open it directly in the browser, you will see an empty page.

      You can add webfonts, meta tags, or analytics to this file.
      The build step will place the bundled scripts into the <body> tag.

      To begin the development, run `npm start` or `yarn start`.
      To create a production bundle, use `npm run build` or `yarn build`.
    -->
  </body>
</html>

'''
'''--- public/manifest.json ---
{
  "short_name": "React App",
  "name": "Create React App Sample",
  "icons": [
    {
      "src": "favicon.ico",
      "sizes": "64x64 32x32 24x24 16x16",
      "type": "image/x-icon"
    },
    {
      "src": "logo192.png",
      "type": "image/png",
      "sizes": "192x192"
    },
    {
      "src": "logo512.png",
      "type": "image/png",
      "sizes": "512x512"
    }
  ],
  "start_url": ".",
  "display": "standalone",
  "theme_color": "#000000",
  "background_color": "#ffffff"
}

'''
'''--- public/near_icon.svg ---
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 288 288"><g id="Layer_1" data-name="Layer 1"><path d="M187.58,79.81l-30.1,44.69a3.2,3.2,0,0,0,4.75,4.2L191.86,103a1.2,1.2,0,0,1,2,.91v80.46a1.2,1.2,0,0,1-2.12.77L102.18,77.93A15.35,15.35,0,0,0,90.47,72.5H87.34A15.34,15.34,0,0,0,72,87.84V201.16A15.34,15.34,0,0,0,87.34,216.5h0a15.35,15.35,0,0,0,13.08-7.31l30.1-44.69a3.2,3.2,0,0,0-4.75-4.2L96.14,186a1.2,1.2,0,0,1-2-.91V104.61a1.2,1.2,0,0,1,2.12-.77l89.55,107.23a15.35,15.35,0,0,0,11.71,5.43h3.13A15.34,15.34,0,0,0,216,201.16V87.84A15.34,15.34,0,0,0,200.66,72.5h0A15.35,15.35,0,0,0,187.58,79.81Z"/></g></svg>
'''
'''--- public/robots.txt ---
# https://www.robotstxt.org/robotstxt.html
User-agent: *
Disallow:

'''
'''--- src/assets/logo-black.svg ---
<svg viewBox="0 0 288 288" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><linearGradient id="a" gradientUnits="userSpaceOnUse" x1="76.81" x2="211.16" y1="211.17" y2="76.81"><stop offset=".21" stop-color="#24272a"/><stop offset=".42" stop-color="#24272a" stop-opacity="0"/><stop offset=".59" stop-color="#24272a" stop-opacity="0"/><stop offset=".81" stop-color="#24272a"/></linearGradient><path d="m88.46 216a16.45 16.45 0 0 0 12.46-5.71l112.56-130.57a16.42 16.42 0 0 0 -13.94-7.72 16.46 16.46 0 0 0 -12.41 5.65l-113.13 129.8a16.46 16.46 0 0 0 14.46 8.55z" fill="url(#a)"/><path d="m88.46 216a16.46 16.46 0 0 0 7.54-1.83v-109l87.45 104.94a16.44 16.44 0 0 0 12.64 5.89h3.45a16.46 16.46 0 0 0 16.46-16.46v-111.08a16.46 16.46 0 0 0 -16.46-16.46 16.36 16.36 0 0 0 -7.54 1.81v109.05l-87.45-104.94a16.44 16.44 0 0 0 -12.64-5.92h-3.45a16.46 16.46 0 0 0 -16.46 16.46v111.08a16.46 16.46 0 0 0 16.46 16.46z" fill="#24272a"/></svg>
'''
'''--- src/assets/logo-white.svg ---
<svg viewBox="0 0 288 288" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><linearGradient id="a" gradientUnits="userSpaceOnUse" x1="76.81" x2="211.16" y1="211.17" y2="76.81"><stop offset=".21" stop-color="#fff"/><stop offset=".42" stop-color="#fff" stop-opacity="0"/><stop offset=".59" stop-color="#fff" stop-opacity="0"/><stop offset=".81" stop-color="#fff"/></linearGradient><path d="m88.46 216a16.45 16.45 0 0 0 12.46-5.71l112.56-130.57a16.42 16.42 0 0 0 -13.94-7.72 16.46 16.46 0 0 0 -12.41 5.65l-113.13 129.8a16.46 16.46 0 0 0 14.46 8.55z" fill="url(#a)"/><path d="m88.46 216a16.46 16.46 0 0 0 7.54-1.83v-109l87.45 104.94a16.44 16.44 0 0 0 12.64 5.89h3.45a16.46 16.46 0 0 0 16.46-16.46v-111.08a16.46 16.46 0 0 0 -16.46-16.46 16.36 16.36 0 0 0 -7.54 1.81v109.05l-87.45-104.94a16.44 16.44 0 0 0 -12.64-5.92h-3.45a16.46 16.46 0 0 0 -16.46 16.46v111.08a16.46 16.46 0 0 0 16.46 16.46z" fill="#fff"/></svg>
'''
'''--- src/components/loading/index.css ---
.loader-hover {
    position: absolute;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-color: #444444;
    opacity: 0.7;
    display: flex;
    justify-content: center;
    align-items: center;
}

.loader {
    max-width: 422px;
    position: relative;
}

.main-loader-bar {
    overflow: hidden;
    object-fit: cover;
    object-position: 100% 0;
    height: 73px;
    background-color: white;
    opacity: 1;
}
'''
'''--- src/components/loading/index.js ---
import './index.css'
import {useInterval} from "../../utils/hooks";
import {useState} from "react";

export default function Loading() {
    const [width, setWidth] = useState(0)
    useInterval(() => {
        switch (width) {
            case 0:
                setWidth(25);
                break;
            case 25:
                setWidth(50);
                break;
            case 50:
                setWidth(75);
                break;
            case 75:
                setWidth(100);
                break;
            default:
                setWidth(0)
                break;
        }
    },500)

    return (
        <div className="loader-hover">
            <div className="loader">
            </div>
        </div>
    )
}
'''
'''--- src/components/pageWrapper/index.css ---
.page-wrapper {
    position: relative;
}
'''
'''--- src/components/pageWrapper/index.js ---
import React, {useEffect} from 'react'

import './index.css'
import {logout} from "../../utils/utils";
import {useLocation, useNavigate} from "react-router-dom";
import Loading from "../loading";

export default function PageWrapper({ children, isLoading }) {
    const navigate = useNavigate()
    const { pathname } = useLocation();
    // useEffect(() => {
    //     const checkToken = async () => {
    //         const hasToken = await window.contract.check_token({
    //             token_type: "Lion"
    //         });
    //         if (!hasToken && pathname !== "/mint") {
    //             navigate("/mint")
    //         }
    //
    //         if (hasToken && pathname === "/mint") {
    //             navigate("/game")
    //         }
    //     }
    //     if (window.walletConnection.isSignedIn()) {
    //         checkToken()
    //     } else {
    //         navigate("/")
    //     }
    // }, [])

    const handleLogout = () => {
        logout()
        navigate("/")
    }

    return (
        <div className="page-wrapper">
            <header className="header">
                <div className="header-profile-div">
                    <div>{window.accountId}</div>
                    <button
                        className="link"
                        style={{float: 'right', height: '100%'}}
                        onClick={handleLogout}
                    >
                        Sign out
                    </button>
                </div>
            </header>
            {children}
            {isLoading && <Loading />}
        </div>
    )
}

'''
'''--- src/config.js ---
const CONTRACT_NAME = process.env.CONTRACT_NAME || 'cashback.nearprotocolua.near'

function getConfig(env) {
  console.log('env', env);
  switch (env) {

  case 'production':
  case 'mainnet':
    return {
      networkId: "mainnet",
      nodeUrl: "https://rpc.mainnet.near.org",
      walletUrl: "https://wallet.near.org",
      helperUrl: "https://helper.mainnet.near.org",
      headers: {},
      contractName: CONTRACT_NAME,
      explorerUrl: 'https://explorer.mainnet.near.org',
    }
  case 'development':
  case 'testnet':
    return {
      networkId: 'testnet',
      nodeUrl: 'https://rpc.testnet.near.org',
      contractName: CONTRACT_NAME,
      walletUrl: 'https://wallet.testnet.near.org',
      helperUrl: 'https://helper.testnet.near.org',
      explorerUrl: 'https://explorer.testnet.near.org',
    }
  case 'betanet':
    return {
      networkId: 'betanet',
      nodeUrl: 'https://rpc.betanet.near.org',
      contractName: CONTRACT_NAME,
      walletUrl: 'https://wallet.betanet.near.org',
      helperUrl: 'https://helper.betanet.near.org',
      explorerUrl: 'https://explorer.betanet.near.org',
    }
  case 'local':
    return {
      networkId: 'local',
      nodeUrl: 'http://localhost:3030',
      keyPath: `${process.env.HOME}/.near/validator_key.json`,
      walletUrl: 'http://localhost:4000/wallet',
      contractName: CONTRACT_NAME,
    }
  case 'test':
  case 'ci':
    return {
      networkId: 'shared-test',
      nodeUrl: 'https://rpc.ci-testnet.near.org',
      contractName: CONTRACT_NAME,
      masterAccount: 'test.near',
    }
  case 'ci-betanet':
    return {
      networkId: 'shared-test-staging',
      nodeUrl: 'https://rpc.ci-betanet.near.org',
      contractName: CONTRACT_NAME,
      masterAccount: 'test.near',
    }
  default:
    throw Error(`Unconfigured environment '${env}'. Can be configured in src/config.js.`)
  }
}

module.exports = getConfig

'''
'''--- src/global.css ---
* {
  box-sizing: border-box;
}

html {
  --bg: #efefef;
  --fg: #1e1e1e;
  --gray: #555;
  --light-gray: #ccc;
  --shadow: #e6e6e6;
  --success: rgb(90, 206, 132);
  --primary: #FF585D;
  --secondary: #0072CE;

  /*background-color: var(--bg);*/
  background-color: #E5E5E5;
  /*color: var(--fg);*/
  font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica,Arial,sans-serif;
  font-size: calc(0.9em + 0.5vw);
  line-height: 1.3;
}

body {
  margin: 0;
  padding: 0;
}

main {
  margin: 0 auto;
  max-width: 25em;
}

h1 {
  /*background-image: url(assets/logo-black.svg);*/
  background-position: center 1em;
  background-repeat: no-repeat;
  background-size: auto 1.5em;
  margin-top: 0;
  padding: 3.5em 0 0.5em;
  text-align: center;
}

h2, h3 {
  margin: 0;
}

a,
.link {
  color: var(--primary);
  text-decoration: none;
}
a:hover,
a:focus,
.link:hover,
.link:focus {
  text-decoration: underline;
}
a:active,
.link:active {
  color: var(--secondary);
}

button, input {
  font: inherit;
  outline: none;
}

button {
  /*background-color: var(--secondary);*/
  background-color: white;
  border-radius: 5px;
  border: 1px solid black;
  color: black;
  cursor: pointer;
  padding: 0.3em 0.75em;
  transition: transform 30ms;
}

button:hover, button:focus {
  box-shadow: 0 0 10em rgba(255, 255, 255, 0.2) inset;
  background-color: rgba(0, 0, 0, 0.3);
}
button:active {
  box-shadow: 0 0 10em rgba(0, 0, 0, 0.1) inset;
}
button.link {
  background: none;
  border: none;
  box-shadow: none;
  display: inline;
}
[disabled] button, button[disabled] {
  box-shadow: none;
  background-color: rgba(0, 0, 0, 0.1);
  color: gray;
  cursor: not-allowed;
  transform: none;
}
[disabled] button {
  text-indent: -900em;
  width: 2em;
  position: relative;
}
[disabled] button:after {
  content: " ";
  display: block;
  width: 0.8em;
  height: 0.8em;
  border-radius: 50%;
  border: 2px solid #fff;
  border-color: var(--fg) transparent var(--fg) transparent;
  animation: loader 1.2s linear infinite;
  position: absolute;
  top: 0.45em;
  right: 0.5em;
}
@keyframes loader {
  0% { transform: rotate(0deg) }
  100% { transform: rotate(360deg) }
}

fieldset {
  border: none;
  padding: 2em 0;
}

input {
  /*background-color: var(--shadow);*/
  border: 1px dotted black;
  border-radius: 5px 0 0 5px;
  caret-color: var(--primary);
  color: inherit;
  padding: 0.25em 1em;
}
input::selection {
  background-color: var(--secondary);
  color: #efefef;
}
input:focus {
  box-shadow: 0 0 10em rgba(0, 0, 0, 0.02) inset;
}

code {
  color: var(--gray);
}

li {
  padding-bottom: 1em;
}

aside {
  animation: notify ease-in-out 10s;
  background-color: var(--shadow);
  border-radius: 5px;
  bottom: 0;
  font-size: 0.8em;
  margin: 1em;
  padding: 1em;
  position: fixed;
  transform: translateY(10em);
  right: 0;
}
aside footer {
  display: flex;
  font-size: 0.9em;
  justify-content: space-between;
  margin-top: 0.5em;
}
aside footer *:first-child {
  color: var(--success);
}
aside footer *:last-child {
  color: var(--gray);
}
@keyframes notify {
  0% { transform: translateY(10em) }
  5% { transform: translateY(0) }
  95% { transform: translateY(0) }
  100% { transform: translateY(10em) }
}

@media (prefers-color-scheme: dark) {
  html {
    --bg: #1e1e1e;
    --fg: #efefef;
    --gray: #aaa;
    --shadow: #2a2a2a;
    --light-gray: #444;
  }
  h1 {
    /*background-image: url(assets/logo-white.svg);*/
  }
  input:focus {
    box-shadow: 0 0 10em rgba(255, 255, 255, 0.02) inset;
  }
}

'''
'''--- src/index.js ---
import "regenerator-runtime/runtime";
import React from 'react'
import './global.css'
import {initContract} from "./utils/utils";
import {
    Routes,
    Route,
    BrowserRouter,
} from "react-router-dom";
import ClaimPage from "./pages/claim";
import { createRoot } from 'react-dom/client';
import GamePage from "./pages/gamePage";

const container = document.getElementById('root');
const root = createRoot(container);

window.nearInitPromise = initContract()
  .then(() => {
    root.render(
        <BrowserRouter basename="/">
            <Routes>
                <Route path="/claim" element={<ClaimPage />} />
                <Route path="/" element={<GamePage />} />
            </Routes>
        </BrowserRouter>
    )
  })
  .catch(console.error)

'''
'''--- src/pages/claim/index.css ---
.page-wrapper {
    position: relative;
    height: 100vh;
    width: 100vw;
    color: white;
}

.card, .cringe {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    min-width: 240px;
    max-width: 240px;
    max-height: 600px;
    background-color: #3CA6A6;
    border-radius: 15px;
    z-index: 5;
}

.cringe::after {
    content: '';
    position: absolute;
    border-radius: 15px;
    opacity: 0.6;
    height: 100%;
    width: 100%;
    background-color: grey;
    z-index: 2;
}

.amount {
    margin: 5px 0 10px 0;
}

.claim-button {
    /*border-color: white;*/
    margin: 0 0 40px 0;
    max-width: 200px;
}

.claim-button:disabled {
    background-color: dimgrey;
    color: white;
}

.middle-text {
    margin-bottom: 15px;
}

/* Loader 4 */
.loader-4 {
    height: 32px;
    width: 32px;
}

.loader-4::after {
    content: "";
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    margin: auto;
    width: 12px;
    height: 12px;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    margin: auto;
    background: #FFF;
    border-radius: 50%;
    -webkit-animation: loader-4-1 2s cubic-bezier(0.770, 0.000, 0.175, 1.000) infinite;
    animation: loader-4-1 2s cubic-bezier(0.770, 0.000, 0.175, 1.000) infinite;
}

@-webkit-keyframes loader-4-1 {
    0% {
        -webkit-transform: scale(0);
        opacity: 0;
    }
    50% {
        -webkit-transform: scale(1);
        opacity: 1;
    }
    100% {
        -webkit-transform: scale(0);
        opacity: 0;
    }
}

@keyframes loader-4-1 {
    0% {
        transform: scale(0);
        opacity: 0;
    }
    50% {
        transform: scale(1);
        opacity: 1;
    }
    100% {
        transform: scale(0);
        opacity: 0;
    }
}

.loader-4 span {
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    margin: auto;
    height: 32px;
    width: 32px;
    -webkit-animation: loader-4-2 2s cubic-bezier(0.770, 0.000, 0.175, 1.000) infinite;
    animation: loader-4-2 2s cubic-bezier(0.770, 0.000, 0.175, 1.000) infinite;
}

@-webkit-keyframes loader-4-2 {
    0% {
        -webkit-transform: rotate(0deg);
    }
    50% {
        -webkit-transform: rotate(180deg);
    }
    100% {
        -webkit-transform: rotate(360deg);
    }
}

@keyframes loader-4-2 {
    0% {
        transform: rotate(0deg);
    }
    50% {
        transform: rotate(180deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

.loader-4 span::before,
.loader-4 span::after {
    content: "";
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    margin: auto;
    height: 12px;
    width: 12px;
    background: #FFF;
    border-radius: 50%;
    -webkit-animation: loader-4-3 2s cubic-bezier(0.770, 0.000, 0.175, 1.000) infinite;
    animation: loader-4-3 2s cubic-bezier(0.770, 0.000, 0.175, 1.000) infinite;
}

@-webkit-keyframes loader-4-3 {
    0% {
        -webkit-transform: translate3d(0, 0, 0) scale(1);
    }
    50% {
        -webkit-transform: translate3d(-16px, 0, 0) scale(.5);
    }
    100% {
        -webkit-transform: translate3d(0, 0, 0) scale(1);
    }
}

@keyframes loader-4-3 {
    0% {
        transform: translate3d(0, 0, 0) scale(1);
    }
    50% {
        transform: translate3d(-16px, 0, 0) scale(.5);
    }
    100% {
        transform: translate3d(0, 0, 0) scale(1);
    }
}

.loader-4 span::after {
    -webkit-animation: loader-4-4 2s cubic-bezier(0.770, 0.000, 0.175, 1.000) infinite;
    animation: loader-4-4 2s cubic-bezier(0.770, 0.000, 0.175, 1.000) infinite;
}

@-webkit-keyframes loader-4-4 {
    0% {
        -webkit-transform: translate3d(0, 0, 0) scale(1);
    }
    50% {
        -webkit-transform: translate3d(16px, 0, 0) scale(.5);
    }
    100% {
        -webkit-transform: translate3d(0, 0, 0) scale(1);
    }
}

@keyframes loader-4-4 {
    0% {
        transform: translate3d(0, 0, 0) scale(1);
    }
    50% {
        transform: translate3d(16px, 0, 0) scale(.5);
    }
    100% {
        transform: translate3d(0, 0, 0) scale(1);
    }
}

/* CSS */
.button-35 {
    align-items: center;
    background-color: #fff;
    border-radius: 12px;
    box-shadow: transparent 0 0 0 3px, rgba(18, 18, 18, .1) 0 6px 20px;
    box-sizing: border-box;
    color: #121212;
    cursor: pointer;
    display: inline-flex;
    flex: 1 1 auto;
    font-family: Inter, sans-serif;
    font-size: 0.8rem;
    font-weight: 700;
    justify-content: center;
    line-height: 1;
    margin: 0 0 50px 0;
    outline: none;
    padding: 1rem 1.2rem;
    text-align: center;
    text-decoration: none;
    transition: box-shadow .2s, -webkit-box-shadow .2s;
    white-space: nowrap;
    border: 0;
    user-select: none;
    -webkit-user-select: none;
    touch-action: manipulation;
    max-width: 200px;
}

.button-35:hover {
    box-shadow: #121212 0 0 0 3px, transparent 0 0 0 0;
    color: white;
}

.ash-1 {
    padding-top: 50px;
    margin-bottom: 0;
}

.ash-2 {
    text-align: center;
    margin-bottom: 20px;
}

/* html */

body {
    margin: 0;
    height: 100vh;
    font-weight: 100;
    background: radial-gradient(#012E40,#024959);
    -webkit-overflow-Y: hidden;
    -moz-overflow-Y: hidden;
    -o-overflow-Y: hidden;
    overflow-y: hidden;
    -webkit-animation: fadeIn 1 1s ease-out;
    -moz-animation: fadeIn 1 1s ease-out;
    -o-animation: fadeIn 1 1s ease-out;
    animation: fadeIn 1 1s ease-out;
}

/*button{*/
/*    position: absolute;*/
/*    border: 2px solid white;*/
/*    background: transparent;*/
/*    font-family: 'Roboto', sans-serif;*/
/*    color: white;*/
/*    width: 250px;*/
/*    height: 50px;*/
/*    font-size: 2em;*/
/*    border-radius: 5px;*/
/*    opacity: .5;*/
/*    top: 60vh;*/
/*    bottom: 0px;*/
/*    left: 0px;*/
/*    right: 0px;*/
/*    margin: auto;*/
/*    transition: .3s;*/
/*}*/

/*button:hover{*/
/*    border: 2px solid #104F55;*/
/*    background-color: rgba(365,365,365,0.5);*/
/*    cursor: pointer;*/
/*    color: #104F55;*/
/*    opacity: .8;*/
/*    transition: .3s;*/
/*    box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);*/
/*}*/

.light {
    position: absolute;
    width: 0px;
    opacity: .75;
    background-color: white;
    box-shadow: #e9f1f1 0px 0px 20px 2px;
    opacity: 0;
    top: 100vh;
    bottom: 0px;
    left: 0px;
    right: 0px;
    margin: auto;
}

.x1{
    -webkit-animation: floatUp 4s infinite linear;
    -moz-animation: floatUp 4s infinite linear;
    -o-animation: floatUp 4s infinite linear;
    animation: floatUp 4s infinite linear;
    -webkit-transform: scale(1.0);
    -moz-transform: scale(1.0);
    -o-transform: scale(1.0);
    transform: scale(1.0);
}

.x2{
    -webkit-animation: floatUp 7s infinite linear;
    -moz-animation: floatUp 7s infinite linear;
    -o-animation: floatUp 7s infinite linear;
    animation: floatUp 7s infinite linear;
    -webkit-transform: scale(1.6);
    -moz-transform: scale(1.6);
    -o-transform: scale(1.6);
    transform: scale(1.6);
    left: 15%;
}

.x3{
    -webkit-animation: floatUp 2.5s infinite linear;
    -moz-animation: floatUp 2.5s infinite linear;
    -o-animation: floatUp 2.5s infinite linear;
    animation: floatUp 2.5s infinite linear;
    -webkit-transform: scale(.5);
    -moz-transform: scale(.5);
    -o-transform: scale(.5);
    transform: scale(.5);
    left: -15%;
}

.x4{
    -webkit-animation: floatUp 4.5s infinite linear;
    -moz-animation: floatUp 4.5s infinite linear;
    -o-animation: floatUp 4.5s infinite linear;
    animation: floatUp 4.5s infinite linear;
    -webkit-transform: scale(1.2);
    -moz-transform: scale(1.2);
    -o-transform: scale(1.2);
    transform: scale(1.2);
    left: -34%;
}

.x5{
    -webkit-animation: floatUp 8s infinite linear;
    -moz-animation: floatUp 8s infinite linear;
    -o-animation: floatUp 8s infinite linear;
    animation: floatUp 8s infinite linear;
    -webkit-transform: scale(2.2);
    -moz-transform: scale(2.2);
    -o-transform: scale(2.2);
    transform: scale(2.2);
    left: -57%;
}

.x6{
    -webkit-animation: floatUp 3s infinite linear;
    -moz-animation: floatUp 3s infinite linear;
    -o-animation: floatUp 3s infinite linear;
    animation: floatUp 3s infinite linear;
    -webkit-transform: scale(.8);
    -moz-transform: scale(.8);
    -o-transform: scale(.8);
    transform: scale(.8);
    left: -81%;
}

.x7{
    -webkit-animation: floatUp 5.3s infinite linear;
    -moz-animation: floatUp 5.3s infinite linear;
    -o-animation: floatUp 5.3s infinite linear;
    animation: floatUp 5.3s infinite linear;
    -webkit-transform: scale(3.2);
    -moz-transform: scale(3.2);
    -o-transform: scale(3.2);
    transform: scale(3.2);
    left: 37%;
}

.x8{
    -webkit-animation: floatUp 4.7s infinite linear;
    -moz-animation: floatUp 4.7s infinite linear;
    -o-animation: floatUp 4.7s infinite linear;
    animation: floatUp 4.7s infinite linear;
    -webkit-transform: scale(1.7);
    -moz-transform: scale(1.7);
    -o-transform: scale(1.7);
    transform: scale(1.7);
    left: 62%;
}

.x9{
    -webkit-animation: floatUp 4.1s infinite linear;
    -moz-animation: floatUp 4.1s infinite linear;
    -o-animation: floatUp 4.1s infinite linear;
    animation: floatUp 4.1s infinite linear;
    -webkit-transform: scale(0.9);
    -moz-transform: scale(0.9);
    -o-transform: scale(0.9);
    transform: scale(0.9);
    left: 85%;
}

button:focus{
    outline: none;
}

@-webkit-keyframes floatUp{
    0%{top: 100vh; opacity: 0;}
    25%{opacity: 1;}
    50%{top: 0vh; opacity: .8;}
    75%{opacity: 1;}
    100%{top: -100vh; opacity: 0;}
}
@-moz-keyframes floatUp{
    0%{top: 100vh; opacity: 0;}
    25%{opacity: 1;}
    50%{top: 0vh; opacity: .8;}
    75%{opacity: 1;}
    100%{top: -100vh; opacity: 0;}
}
@-o-keyframes floatUp{
    0%{top: 100vh; opacity: 0;}
    25%{opacity: 1;}
    50%{top: 0vh; opacity: .8;}
    75%{opacity: 1;}
    100%{top: -100vh; opacity: 0;}
}
@keyframes floatUp{
    0%{top: 100vh; opacity: 0;}
    25%{opacity: 1;}
    50%{top: 0vh; opacity: .8;}
    75%{opacity: 1;}
    100%{top: -100vh; opacity: 0;}
}

.header{
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-family: 'Roboto', sans-serif;
    font-weight: 200;
    color: white;
    font-size: 2em;
}

#head1, #head2,#head3, #head4, #head5{
    opacity: 0;
}

#head1{
    -webkit-animation: fadeOut 1 5s ease-in;
    -moz-animation: fadeOut 1 5s ease-in;
    -o-animation: fadeOut 1 5s ease-in;
    animation: fadeOut 1 5s ease-in;
}

#head2{
    -webkit-animation: fadeOut 1 5s ease-in;
    -moz-animation: fadeOut 1 5s ease-in;
    -o-animation: fadeOut 1 5s ease-in;
    animation: fadeOut 1 5s ease-in;
    -webkit-animation-delay: 6s;
    -moz-animation-delay: 6s;
    -o-animation-delay: 6s;
    animation-delay: 6s;
}

#head3{
    -webkit-animation: fadeOut 1 5s ease-in;
    -moz-animation: fadeOut 1 5s ease-in;
    -o-animation: fadeOut 1 5s ease-in;
    animation: fadeOut 1 5s ease-in;
    -webkit-animation-delay: 12s;
    -moz-animation-delay: 12s;
    -o-animation-delay: 12s;
    animation-delay: 12s;
}

#head4{
    -webkit-animation: fadeOut 1 5s ease-in;
    -moz-animation: fadeOut 1 5s ease-in;
    -o-animation: fadeOut 1 5s ease-in;
    animation: fadeOut 1 5s ease-in;
    -webkit-animation-delay: 17s;
    -moz-animation-delay: 17s;
    -o-animation-delay: 17s;
    animation-delay: 17s;
}

#head5{
    -webkit-animation: finalFade 1 5s ease-in;
    -moz-animation: finalFade 1 5s ease-in;
    -o-animation: finalFade 1 5s ease-in;
    animation: finalFade 1 5s ease-in;
    -webkit-animation-fill-mode: forwards;
    -moz-animation-fill-mode: forwards;
    -o-animation-fill-mode: forwards;
    animation-fill-mode: forwards;
    -webkit-animation-delay: 22s;
    -moz-animation-delay: 22s;
    -o-animation-delay: 22s;
    animation-delay: 22s;
}

@-webkit-keyframes fadeIn{
    from{opacity: 0;}
    to{opacity: 1;}
}

@-moz-keyframes fadeIn{
    from{opacity: 0;}
    to{opacity: 1;}
}

@-o-keyframes fadeIn{
    from{opacity: 0;}
    to{opacity: 1;}
}

@keyframes fadeIn{
    from{opacity: 0;}
    to{opacity: 1;}
}

@-webkit-keyframes fadeOut{
    0%{opacity: 0;}
    30%{opacity: 1;}
    80%{opacity: .9;}
    100%{opacity: 0;}
}

@-moz-keyframes fadeOut{
    0%{opacity: 0;}
    30%{opacity: 1;}
    80%{opacity: .9;}
    100%{opacity: 0;}
}

@-o-keyframes fadeOut{
    0%{opacity: 0;}
    30%{opacity: 1;}
    80%{opacity: .9;}
    100%{opacity: 0;}
}

@keyframes fadeOut{
    0%{opacity: 0;}
    30%{opacity: 1;}
    80%{opacity: .9;}
    100%{opacity: 0;}
}

@-webkit-keyframes finalFade{
    0%{opacity: 0;}
    30%{opacity: 1;}
    80%{opacity: .9;}
    100%{opacity: 1;}
}

@-moz-keyframes finalFade{
    0%{opacity: 0;}
    30%{opacity: 1;}
    80%{opacity: .9;}
    100%{opacity: 1;}
}

@-o-keyframes finalFade{
    0%{opacity: 0;}
    30%{opacity: 1;}
    80%{opacity: .9;}
    100%{opacity: 1;}
}

@keyframes finalFade{
    0%{opacity: 0;}
    30%{opacity: 1;}
    80%{opacity: .9;}
    100%{opacity: 1;}
}

#footer{
    font-family: 'Roboto', sans-serif;
    font-size: 1.2em;
    color: white;
    position: fixed;
    -webkit-transform: translate(95vw,90vh);
    -moz-transform: translate(95vw,90vh);
    transform: translate(95vw,90vh);
    transform: translate(95vw,90vh);
}
'''
'''--- src/pages/claim/index.js ---
import React, { useEffect, useState } from 'react';
import BN from "bn.js";
import { useLocation } from "react-router-dom";
import * as nearAPI from "near-api-js";
import './index.css';

const { KeyPair } = nearAPI;
const walletLink = "https://wallet.near.org/linkdrop/near/";
// const walletLink = "https://app.mynearwallet.com/linkdrop/near/"

const network = 'mainnet'

const numberToUint8Array = (x) => {
    console.log('x', x);
    return Buffer.from(x.toArray("be", 8));
};

function useQuery() {
    const location = useLocation();

    return React.useMemo(() => new URLSearchParams(location.search), [location.search]);
}

function ClaimPage() {
    const [loading, setLoading] = useState(false)
    const [amount, setAmount] = useState(0)
    const query = useQuery();
    const key = query.get("key");
    const id = query.get("id");

    useEffect(() => {
        getOneTimeKey()
        getAmount()
    }, [])

    const getOneTimeKey = async () => {
        setLoading(true)
        const response = await window.contract.get_claiming_key()

        const keyPair = KeyPair.fromString(response);
        await window.nearConnection.connection.signer.keyStore.setKey(network, "cashback.nearprotocolua.near", keyPair);

        window.account = await window.nearConnection.account("cashback.nearprotocolua.near", window.nearConnection.connection.signer.keyStore);
        setLoading(false)
    }

    const getAmount = async () => {
        setLoading(true)
        const amount = await window.contract.get_cashback_amount({
            id: +id
        })

        setAmount(nearAPI.utils.format.formatNearAmount(amount, 4))

        setLoading(false)
    }

    const getLinkdrop = () => {
        return walletLink + key
    }

    const claim = async () => {
        setLoading(true)
        const { utils } = nearAPI;

        const keyPair = utils.KeyPairEd25519.fromString(
            key
        );
        const cashbackId = +id;

        const buffer = numberToUint8Array(new BN(cashbackId));
        console.log('buffer', buffer);

        const signed = keyPair.sign(buffer);

        const signature = signed.signature;

        await window.contract.claim({
            signature: Array.from(signature),
            id: +cashbackId
        })

        window.location.replace(getLinkdrop())
        setLoading(false)
    }

    return (
        <div className="page-wrapper">
            <div className={loading ? "card cringe" : "card"}>
                {/*<img*/}
                {/*    style={{ height: '100%', width: '100%'}}*/}
                {/*    src="../../assets/logo-white.svg"*/}
                {/*    alt="near-image"*/}
                {/*/>*/}
                <h1 className="ash-1">Cashback</h1>
                <h2 className="ash-2">{ amount }Ⓝ <br/> Thank You</h2>
                {/*<div className="middle-text"></div>*/}
                <button disabled={loading} onClick={claim} className="button-35 claim-button">Claim</button>
            </div>
            {
                loading && (
                    <div className="loader-4 center"><span></span></div>
                )
            }
            <div className='light x1'></div>
            <div className='light x2'></div>
            <div className='light x3'></div>
            <div className='light x4'></div>
            <div className='light x5'></div>
            <div className='light x6'></div>
            <div className='light x7'></div>
            <div className='light x8'></div>
            <div className='light x9'></div>
        </div>
    );
}

export default ClaimPage;

'''
'''--- src/pages/gamePage/assets/Basic volunteer.svg ---
<svg width="315" height="465" viewBox="0 0 315 465" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect width="315" height="465" fill="white"/>
<path d="M140.691 158.462C140.691 159.115 140.691 159.768 140.691 160.421C140.691 160.68 140.538 160.999 140.538 161.266C140.538 161.379 140.546 162.198 140.581 162.183C140.968 162.017 141.662 162.149 142.078 162.149C142.222 162.149 143.073 162.174 143.073 162.132C143.073 161.638 142.996 161.18 142.996 160.69C142.996 159.945 142.919 159.167 142.919 158.462" stroke="black" stroke-linecap="round"/>
<path d="M145.761 158.386C145.761 159.117 145.838 159.866 145.838 160.575C145.838 160.722 146.073 161.649 145.949 161.684C145.588 161.787 145.047 161.688 144.668 161.688C144.246 161.688 143.851 161.842 143.457 161.842" stroke="black" stroke-linecap="round"/>
<path d="M138.771 153.086C138.246 153.611 136.826 155.286 137.158 154.622" stroke="black" stroke-width="0.5" stroke-linecap="round"/>
<path d="M139.693 153.547C139.693 153.808 139.728 155.18 139.463 155.313" stroke="black" stroke-width="0.5" stroke-linecap="round"/>
<path d="M141.152 154.161C141.228 154.339 141.288 154.536 141.46 154.622" stroke="black" stroke-width="0.5" stroke-linecap="round"/>
<path d="M142.919 153.086C143.076 153.454 143.289 153.617 143.474 153.931C143.574 154.101 144.15 154.584 144.071 154.545" stroke="black" stroke-width="0.5" stroke-linecap="round"/>
<path d="M145.3 153.316C145.732 153.501 146.157 153.795 146.529 154.084C146.603 154.142 146.964 154.391 146.913 154.391" stroke="black" stroke-width="0.5" stroke-linecap="round"/>
<path d="M146.913 153.009C147.587 153.667 148.244 154.339 148.91 155.006" stroke="black" stroke-width="0.5" stroke-linecap="round"/>
<path d="M141.536 153.162C141.536 153.802 141.75 154.101 142.266 154.502C142.596 154.759 143.445 155.685 143.149 155.39" stroke="black" stroke-width="0.5" stroke-linecap="round"/>
<path d="M143.947 152.959C143.947 153.29 143.904 153.57 144.065 153.861C144.223 154.146 144.428 154.391 144.574 154.683C144.645 154.824 145.28 156.058 145.28 155.389" stroke="black" stroke-width="0.5" stroke-linecap="round"/>
<path d="M139.324 153.43C138.97 154.01 138.36 154.439 138.148 155.075" stroke="black" stroke-width="0.5" stroke-linecap="round"/>
<path d="M137.6 153.508C137.203 153.734 136.824 153.952 136.429 154.174C136.178 154.315 135.963 154.531 135.719 154.666C135.467 154.806 135.252 155.034 135.014 155.154" stroke="black" stroke-width="0.5" stroke-linecap="round"/>
<path d="M133.479 132.806C132.459 134.152 131.338 135.443 131.178 137.202C131.095 138.114 131.165 139.062 131.165 139.979" stroke="black" stroke-width="0.5" stroke-linecap="round"/>
<path d="M136.255 134.888C136.638 136.195 137.107 137.212 137.759 138.372C138.021 138.837 138.338 139.44 138.338 139.979" stroke="black" stroke-width="0.5" stroke-linecap="round"/>
<path d="M142.734 133.963C143.502 135.283 144.444 136.637 144.817 138.128" stroke="black" stroke-width="0.5" stroke-linecap="round"/>
<path d="M149.676 134.426C150.411 135.896 151.374 137.127 152.105 138.591C152.303 138.985 152.915 140.22 152.915 140.21" stroke="black" stroke-width="0.5" stroke-linecap="round"/>
<path d="M155.692 133.731C156.627 133.754 158.063 133.889 158.931 134.323C159.454 134.584 159.851 135.117 160.32 135.351" stroke="black" stroke-width="0.5" stroke-linecap="round"/>
<path d="M148.982 130.955C147.963 131.726 147.852 131.819 147.413 132.806C147.165 133.364 147.485 134.12 147.31 134.708C147.096 135.431 147.102 138.026 146.436 138.359" stroke="black" stroke-width="0.5" stroke-linecap="round"/>
<path d="M151.295 132.112C151.977 133.701 153.292 134.529 154.175 135.917C154.478 136.393 155.693 138.012 155.46 137.896" stroke="black" stroke-width="0.5" stroke-linecap="round"/>
<path d="M139.726 131.417C139.726 132.849 139.726 134.28 139.726 135.711C139.726 136.641 139.444 138.051 139.957 138.822" stroke="black" stroke-width="0.5" stroke-linecap="round"/>
<path d="M153.378 130.492C154.661 130.492 157.38 129.998 158.468 130.723" stroke="black" stroke-width="0.5" stroke-linecap="round"/>
<path d="M137.875 131.417C135.92 132.228 134.912 134.206 133.993 136.045C133.705 136.62 133.247 137.363 133.247 138.012C133.247 138.316 133.018 139.521 132.784 139.053" stroke="black" stroke-width="0.5" stroke-linecap="round"/>
<path d="M144.817 131.649C143.836 132.997 143.843 134.328 143.081 135.698C142.654 136.467 142.549 138.683 141.809 139.053" stroke="black" stroke-width="0.5" stroke-linecap="round"/>
<path d="M130.239 134.426C128.158 134.476 128.026 134.69 127.925 136.508C127.884 137.257 127.438 140.107 126.768 140.442" stroke="black" stroke-width="0.5" stroke-linecap="round"/>
<path d="M146.17 232.138C138.841 236.607 133.931 244.838 130.987 252.786C129.194 257.629 125.951 263.08 125.673 268.348C125.485 271.917 124.99 275.536 124.99 279.279C124.99 281.101 124.777 289.102 124.307 288.161" stroke="black" stroke-width="3" stroke-linecap="round"/>
<path d="M145.486 232.821C153.509 238.276 161.568 244.043 168.032 251.268C170.151 253.635 172.638 258.339 172.815 261.516C173.154 267.619 174.533 273.63 174.181 279.963C174.107 281.291 171.505 288.475 170.765 288.844" stroke="black" stroke-width="3" stroke-linecap="round"/>
<path d="M144.12 232.821C144.12 227.047 142.649 222.059 140.173 217.107C137.349 211.459 136.605 203.535 136.605 197.294C136.605 193.241 135.779 188.051 137.44 184.313C138.482 181.968 139.32 179.412 140.173 176.95C140.555 175.844 142.893 172.016 142.754 172.016" stroke="black" stroke-width="3" stroke-linecap="round"/>
<path d="M142.07 172.016C146.537 176.622 146.489 182.822 147.574 188.792C148.246 192.489 148.901 196.365 149.738 200.027C150.546 203.565 150.458 207.346 151.483 210.807C152.627 214.666 151.717 220.666 150.914 224.281C150.407 226.565 146.759 235.956 144.803 230.088" stroke="black" stroke-width="3" stroke-linecap="round"/>
<path d="M134.555 189.096C127.156 194.477 120.155 199.467 113.376 205.493C110.49 208.058 107.888 209.641 106.392 213.008C105.543 214.917 104.741 223.421 102.444 221.89" stroke="black" stroke-width="3" stroke-linecap="round"/>
<path d="M147.536 189.096C159.077 189.096 177.166 185.425 183.443 197.978C185.165 201.422 185.342 204.325 185.113 208.226C185.015 209.891 184.804 216.424 183.063 216.424" stroke="black" stroke-width="3" stroke-linecap="round"/>
<path d="M141.387 172.699C134.618 171.248 129.927 167.498 125.521 162.602C122.353 159.082 122.257 152.318 122.257 147.762C122.257 140.597 126.088 133.374 132.505 129.808C134.489 128.706 138.328 128.29 140.552 128.29C144.389 128.29 148.034 126.924 151.977 126.924C154.437 126.924 156.838 126.453 158.809 127.986C160.918 129.627 162.999 132.485 164.275 134.781C167.074 139.819 166.334 146.356 163.25 151.367C160.468 155.887 158.397 160.471 154.71 164.159C152.802 166.067 150.92 167.956 148.599 169.283C147.616 169.844 147.432 171.262 146.17 171.332C144.813 171.408 143.43 171.332 142.07 171.332" stroke="black" stroke-width="3" stroke-linecap="round"/>
<path d="M132.505 147.42H137.288" stroke="black" stroke-width="3" stroke-linecap="round"/>
<path d="M152.319 146.054C153.441 146.87 155.867 147.684 156.418 148.786" stroke="black" stroke-width="3" stroke-linecap="round"/>
<path d="M135.922 156.985C140.697 156.985 146.158 157.674 150.269 155.619" stroke="black" stroke-width="3" stroke-linecap="round"/>
</svg>

'''
'''--- src/pages/gamePage/assets/Humanitarian.svg ---
<svg width="100" height="47" viewBox="0 0 100 47" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M18.4449 17.5979C18.4449 25.8123 18.8546 34.3038 18.8546 42.3871C18.8546 45.7407 20.4468 44.6407 22.952 44.6407C28.2979 44.6407 33.7732 44.4358 39.0229 43.5025C44.6101 42.5093 50.6759 43.0017 56.3458 43.0017C60.8606 43.0017 65.3753 43.0017 69.89 43.0017C72.5981 43.0017 74.989 43.4454 74.989 40.0425C74.989 35.7349 76.2182 31.3982 76.2182 27.0219C76.2182 24.2104 76.4289 21.3114 75.8312 18.6222C75.5803 17.4928 75.1536 12.6402 73.9419 12.294C73.085 12.0492 71.5415 12.5138 70.6867 12.7037C68.6485 13.1567 66.4633 13.4918 64.3358 13.8191C60.1179 14.468 55.5539 15.3978 51.3151 15.5492C45.1579 15.7691 38.9483 15.5492 32.7858 15.5492C29.8115 15.5492 26.8153 16.3686 23.7715 16.3686C22.6106 16.3686 21.4496 16.3686 20.2887 16.3686C18.7177 16.3686 18.9579 15.7558 19.6741 17.1881" stroke="black" stroke-linecap="round"/>
<path d="M33.6052 14.7297C33.685 10.7412 36.3126 3.8609 40.1611 1.93669C42.3598 0.837294 46.7087 1.54788 48.9705 2.0505C51.4136 2.59342 55.3214 4.1286 55.3214 7.14949C55.3214 9.54354 55.7312 16.714 55.7312 14.3199" stroke="black" stroke-linecap="round"/>
<path d="M43.8488 22.5148V36.8557" stroke="black" stroke-linecap="round"/>
<path d="M33.6052 29.4803H52.4533" stroke="black" stroke-linecap="round"/>
<path d="M1.64552 32.7583C1.64552 34.1069 1.15563 47.5731 4.42265 44.9595C6.21335 43.5269 15.9864 47.0499 15.9864 44.8457C15.9864 42.7058 16.8059 40.792 16.8059 38.6996C16.8059 37.6625 16.504 33.5208 15.349 33.1908C13.7421 32.7317 10.8119 32.7583 9.22571 32.7583C8.02315 32.7583 3.80197 31.7234 3.28448 32.7583" stroke="black" stroke-linecap="round"/>
<path d="M1.64554 31.1193C2.98502 31.1193 15.5267 31.5596 15.5767 30.7096C15.7003 28.6092 15.5767 26.4631 15.5767 24.3586C15.5767 23.5286 15.6545 22.2492 14.9621 21.6953C14.3561 21.2104 14.9074 19.7319 14.3475 19.032C14.0273 18.6318 9.53751 19.2368 8.61112 19.2368C6.49413 19.2368 4.37714 19.2368 2.26015 19.2368C0.952618 19.2368 0.826061 18.6898 0.826061 20.0563C0.826061 21.6649 0.826061 23.2735 0.826061 24.8821C0.826061 26.1417 0.826061 27.4013 0.826061 28.6609C0.826061 29.3495 0.545866 31.2699 1.2358 29.8901" stroke="black" stroke-linecap="round"/>
<path d="M1.23579 8.58357C1.23579 10.7688 1.23579 12.9541 1.23579 15.1394C1.23579 15.9541 1.18797 16.7848 1.23579 17.5978C1.29221 18.5569 2.50455 17.2099 2.87475 17.1881C4.90623 17.0686 6.98604 17.1881 9.02085 17.1881C9.93574 17.1881 13.3764 16.6913 13.9377 17.393C14.1726 17.6866 13.528 14.4289 13.528 13.6598C13.528 12.8129 14.0428 8.17383 12.9134 8.17383C9.35622 8.17383 5.70242 8.58357 2.05527 8.58357" stroke="black" stroke-linecap="round"/>
<path d="M81.5305 34.4085C80.2242 34.4085 79.9316 34.247 79.281 35.3041C78.8631 35.9832 78.5311 36.8928 78.5311 37.6891C78.5311 38.9402 78.174 40.9696 79.9371 40.9696C80.6105 40.9696 81.3396 39.9585 81.8221 39.5637C82.6602 38.8779 83.8011 38.2251 84.4882 37.3662C84.8571 36.9051 84.5021 35.9167 84.0612 35.7207C83.3624 35.4101 82.6745 35.1631 81.9054 34.9709" stroke="black" stroke-linecap="round"/>
<path d="M87.5293 34.2211C87.5293 35.4252 87.1039 39.47 89.0289 39.47C89.8099 39.47 90.3129 39.4326 90.9035 38.9076C91.2708 38.5812 92.3705 37.965 92.4032 37.4079C92.505 35.6777 92.568 34.3108 90.9035 33.4296C89.6605 32.7715 88.3227 33.9181 87.3418 34.4086" stroke="black" stroke-linecap="round"/>
<path d="M82.6552 31.4091C84.1985 31.4468 86.065 32.5874 86.394 30.2844C86.5369 29.2842 86.5919 28.3074 86.5919 27.285C86.5919 26.2785 86.3327 26.3639 85.4671 25.9311C84.5663 25.4807 83.7467 25.4104 82.7594 25.4104C81.735 25.4104 82.2071 26.0688 81.6242 26.5352C81.2485 26.8357 81.1556 28.4949 81.1556 28.9721C81.1556 29.7786 80.8839 30.6593 81.9054 30.6593" stroke="black" stroke-linecap="round"/>
<path d="M85.6547 24.0982C86.3108 24.0982 86.9669 24.0982 87.623 24.0982C87.9991 24.0982 88.0711 23.7023 88.3625 23.5358C89.0222 23.1589 89.0917 22.1163 89.3623 21.4738C89.5352 21.063 89.5701 19.2907 89.2998 18.9431C88.8594 18.3769 87.156 17.7519 86.4462 17.7246C85.8899 17.7032 84.2829 17.1088 83.9676 17.8183C83.6005 18.6442 83.0981 19.6623 83.0303 20.5781C82.9703 21.3881 82.4878 22.3218 83.6864 22.5881C84.4233 22.7519 85.067 22.9735 85.8422 22.9735" stroke="black" stroke-linecap="round"/>
<path d="M80.0309 20.5365C80.0309 18.9291 80.488 17.3784 78.6249 16.9644C77.6341 16.7442 75.9067 16.2855 75.9067 17.7246C75.9067 19.0143 76.372 20.5142 77.6876 21.0989C78.1144 21.2886 78.4134 21.5296 78.7603 21.8071C79.1784 22.1416 79.9024 21.3095 80.2183 21.0989" stroke="black" stroke-linecap="round"/>
<path d="M74.782 40.9696C76.6306 40.9696 77.6954 42.0857 79.3748 42.4589C80.4145 42.6899 81.4141 43.0317 82.5616 43.0317C83.9724 43.0317 85.433 43.2191 86.8732 43.2191C87.8023 43.2191 88.6608 42.7129 89.5497 42.5109C90.6403 42.2631 91.8808 42.0459 92.8719 41.532C94.2377 40.8238 95.6098 40.2166 96.9439 39.4283C97.4877 39.1069 98.2166 38.9058 98.6832 38.5326C99.3023 38.0373 96.7797 34.2072 96.6315 33.7628C96.2106 32.5001 95.8647 31.2126 95.4443 29.9511C95.2185 29.2738 94.8402 28.6813 94.8402 27.9307C94.8402 26.0728 94.6528 24.1956 94.6528 22.3173C94.6528 20.5707 95.1014 18.022 94.4236 16.4123C93.938 15.259 93.4658 14.7987 92.2158 14.7252C91.8618 14.7043 91.5018 14.2668 91.1743 14.1732C90.7617 14.0553 90.1667 14.1628 89.7371 14.1628C87.0575 14.1628 84.3411 13.9753 81.718 13.9753C81.1253 13.9753 80.3978 13.8639 79.8434 14.0795C79.0596 14.3843 78.03 15.1921 77.219 15.2875C76.7366 15.3443 75.1569 15.8011 75.1569 14.9126" stroke="black" stroke-linecap="round"/>
<path d="M80.5932 13.788C80.5932 13.1471 80.1779 9.27475 80.7806 8.95567C81.563 8.54149 83.5581 8.91401 84.4361 8.91401C87.7655 8.91401 87.3417 12.1105 87.3417 14.5378" stroke="black" stroke-linecap="round"/>
</svg>

'''
'''--- src/pages/gamePage/assets/ItemBorder.svg ---
<svg width="73" height="71" viewBox="0 0 73 71" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M67.6303 65.0413C68.5683 65.0413 68.8784 65.2539 68.8784 64.3281C68.8784 63.8861 68.9668 63.5442 69.3241 63.2583C69.5884 63.047 69.7484 62.6693 69.9085 62.3669C70.1736 61.8662 69.8285 62.0103 69.3241 62.0103C67.7605 62.0103 68.1724 60.9384 69.4133 60.5839C69.6788 60.508 70.4586 60.1037 70.2651 59.6924C70.1831 59.5181 69.847 59.4098 69.6807 59.3358C69.2662 59.1516 68.9739 58.6754 68.7991 58.276C68.2124 56.935 69.7076 56.8906 69.7699 55.7699C69.8344 54.6076 68.2939 55.008 68.3435 53.67C68.3882 52.4639 70.1697 51.2807 70.8297 50.3319C71.2951 49.6629 71.7947 48.6307 71.5132 47.7863C71.2261 46.9252 70.4065 46.3136 70.3146 45.3496C70.2777 44.9622 70.4929 44.0074 70.1264 43.8242" stroke="black" stroke-linecap="round"/>
<path d="M70.1264 43.8242C67.8851 43.8242 69.6853 42.4404 70.483 41.6846C71.5924 40.6336 70.4734 40.6087 69.958 39.7927C69.0064 38.2859 69.2965 35.7963 69.225 34.117C69.1826 33.1209 69.0437 31.0563 68.3435 30.2737C66.7202 28.4595 68.6412 26.1108 69.5717 24.5881C69.6664 24.4332 70.9359 22.7237 70.5622 22.6169C69.9103 22.4307 69.8492 22.6375 69.6807 21.7948C69.42 20.4915 69.8835 19.3228 70.2057 18.0803C70.4112 17.2874 70.3258 16.9274 70.3047 16.1884C70.2892 15.6453 70.6618 13.837 70.1264 13.5536C69.6523 13.3026 69.0482 13.3699 68.5119 13.0682C67.8573 12.7 67.2415 12.1077 66.8379 11.4735C66.6256 11.14 66.5589 10.8388 66.2039 10.6613" stroke="black" stroke-linecap="round"/>
<path d="M66.2039 10.6612C67.2733 9.89203 68.2909 9.33376 69.4132 8.7396C69.9746 8.44242 70.1265 7.12485 70.3146 6.56044C70.4125 6.26666 71.6654 4.42089 71.107 4.42089C70.2585 4.42089 69.4099 4.42089 68.5614 4.42089C66.6217 4.42089 68.0648 2.24506 67.452 1.47902C67.2338 1.20628 66.8056 1.2042 66.6001 0.854987C66.4005 0.515663 66.3094 0.973947 66.095 1.12243C65.2143 1.73213 64.1234 2.27633 63.1729 2.77661C62.9035 2.91838 62.2411 3.99519 61.9248 3.84639C61.3459 3.57393 61.4201 2.81304 60.5876 2.62803C60.084 2.51611 59.3128 2.26652 58.8047 2.54879C57.8884 3.05785 55.8642 2.63794 54.8326 2.63794C54.0421 2.63794 53.0288 2.81515 52.2969 2.45964C51.2457 1.94906 49.8419 1.03328 48.6517 1.03328C47.6147 1.03328 48.0178 2.32387 48.0178 3.15301C48.0178 4.06923 47.6007 4.03707 47.1263 3.3115C47.0072 3.12926 46.4132 1.56338 46.4132 2.45964C46.4132 3.27438 43.9075 1.62677 43.3821 1.47902C42.2724 1.1669 40.7336 0.707497 39.5587 1.04319C39.3024 1.11643 39.6047 1.59468 39.3804 1.70684C38.808 1.99302 37.6821 1.66506 37.1022 1.60779C35.764 1.47563 34.385 1.56817 33.041 1.56817C32.2317 1.56817 31.2379 1.41512 30.4458 1.60779C29.3643 1.87087 29.6738 2.7001 29.4652 3.43036C29.4403 3.5175 25.9531 2.10429 25.6418 2.01391C25.2715 1.90642 22.0648 1.1217 21.9867 1.74646C21.9487 2.05038 19.5336 1.47488 19.2727 1.42949C18.222 1.24677 17.8859 1.26646 17.8859 2.28135C17.8859 3.42216 17.4635 3.17283 16.3704 3.17283C15.7534 3.17283 12.7905 2.50629 12.3984 3.17283C12.3418 3.26904 12.4063 3.88175 12.2597 3.77705C12.0354 3.61684 11.6599 2.96902 11.6456 3.56904C11.6183 4.71401 12.0022 8.13166 12.0022 6.98636C12.0022 6.5526 11.7816 6.09074 11.6852 5.66896C11.627 5.41435 11.6456 4.62527 11.6456 4.88644C11.6456 5.54683 10.7798 4.8795 10.5758 4.77748" stroke="black" stroke-linecap="round"/>
<path d="M10.5758 4.77748C9.15172 3.65145 7.78169 2.4864 6.11843 1.78608C5.75488 1.63301 5.40525 1.699 5.40525 2.10305C5.40525 2.96625 5.11278 3.6291 4.69207 4.38127C4.37603 4.94631 3.76733 7.32059 3.30533 5.98593C3.17686 5.61479 3.18286 5.06779 2.8695 4.8171C2.47655 4.50274 2.37423 5.75135 2.37423 5.92649C2.37423 7.16188 3.73671 6.50397 4.59302 6.74863C5.19749 6.92134 4.83925 8.99092 4.7515 9.33391C4.35837 10.8707 3.29468 12.3283 2.47329 13.6724C1.46298 15.3257 3.444 13.6693 3.444 14.6729C3.444 15.6433 5.1927 15.589 5.22696 16.8223C5.27973 18.7221 3.52781 20.004 3.6223 21.8938C3.68125 23.0729 6.11843 22.6236 6.11843 24.073C6.11843 25.026 5.73337 25.9996 5.54393 26.9257C5.26209 28.3036 4.56003 29.6559 4.01851 30.9473C3.88386 31.2683 3.20504 32.6894 3.54306 33.0274C3.79409 33.2784 4.33548 33.1768 4.33548 33.5722C4.33548 34.2071 4.59897 33.7678 4.87037 34.107C5.70654 35.1523 4.87037 36.4131 4.87037 37.5838C4.87037 38.8832 6.41846 38.3487 6.47502 39.3668C6.5133 40.0557 5.546 41.1065 5.13781 41.6054C4.48455 42.4038 4.08537 42.9327 2.99827 42.9327C1.11743 42.9327 3.77399 44.2044 4.23643 44.5373C4.9144 45.0255 6.65332 45.7889 6.65332 46.766C6.65332 47.6674 5.65999 47.3363 5.04866 47.608C4.49463 47.8542 3.96245 48.9886 3.66192 49.5296C3.31084 50.1615 2.69869 50.3597 2.10679 50.6885C1.80826 50.8544 1.51625 50.9303 1.22522 51.1243C0.843314 51.3789 2.10447 51.3913 2.55253 51.4908C3.34617 51.6672 4.33548 52.0092 4.33548 52.9172C4.33548 53.4018 3.87836 53.4734 3.58268 53.7691C3.38491 53.9668 3.3913 54.2757 3.22609 54.4822C2.97316 54.7984 2.54372 56.443 3.26571 56.4831C3.60141 56.5018 5.14653 56.4945 4.47415 57.335C4.17145 57.7133 4.20005 57.9898 3.97889 58.4444C3.65843 59.1031 3.17559 59.6763 2.81997 60.3165C2.60099 60.7106 2.5059 60.7217 2.99827 60.9405C3.28412 61.0675 3.62717 61.3876 3.89965 61.4655C4.3539 61.5953 5.0208 62.3089 5.36563 62.5848C5.91544 63.0246 4.80835 63.6933 4.51378 63.9715C3.88447 64.5658 3.42797 65.39 4.05813 66.2002C4.72035 67.0516 5.445 67.3591 6.55427 67.3591C7.20113 67.3591 5.52314 68.085 5.3161 68.2506C5.22154 68.3262 6.82102 68.3282 7.27735 67.9732C8.15122 67.2936 8.4962 67.7794 8.61457 68.7855C8.69681 69.4845 9.74583 69.3204 10.2192 69.3204C11.0696 69.3204 11.0567 68.8836 11.606 68.3893C11.9188 68.1077 12.984 67.8693 13.4285 67.894C14.2777 67.9412 14.3826 69.7412 15.3006 69.2312C16.3896 68.6262 16.7777 68.0723 18.0642 68.0723C19.8175 68.0723 21.5707 68.0723 23.3239 68.0723C23.6583 68.0723 23.8417 68.5142 24.2154 68.5973C24.6244 68.6882 25.0482 68.7855 25.4734 68.7855C26.6327 68.7855 26.8125 68.8035 27.2959 67.7157C27.4949 67.2681 27.2614 67.1808 27.8705 67.1808C28.7915 67.1808 29.4882 67.6855 30.3666 67.8544C30.9958 67.9754 31.5781 68.2145 32.1495 68.4685C32.5827 68.661 32.6844 69.151 32.6844 68.419C32.6844 68.0111 32.7639 67.494 32.6745 67.0917C32.5207 66.3995 32.9702 66.6459 33.6849 66.6459C35.1659 66.6459 36.6239 66.8242 38.1026 66.8242C38.4716 66.8242 39.6557 66.743 39.9549 67.0421C40.1135 67.2007 39.9817 67.855 39.9945 68.0723C40.0073 68.2891 40.3432 68.5003 40.4898 68.6468C41.0528 69.2098 41.5978 68.3326 41.8171 67.894C42.1143 67.2997 41.9855 66.4082 42.5303 65.9724C42.7574 65.7907 44.3127 66.389 44.5411 66.5667C45.4826 67.299 47.2324 68.0051 48.3744 68.0723C49.1094 68.1155 49.7277 68.4465 50.514 68.0327C51.2052 67.6688 51.5772 66.8177 52.2078 67.4483C53.8061 69.0466 55.7229 69.2205 57.8142 69.9444C58.9621 70.3418 59.4106 70.9403 60.0428 69.7661C60.286 69.3145 60.3977 68.671 60.4886 68.1713C60.5388 67.8951 60.3626 67.0723 60.8551 67.5374C61.7358 68.3692 62.9993 68.8952 64.0644 69.459C64.997 69.9528 66.4822 69.0022 67.3629 68.5279C68.4355 67.9504 68.4502 67.7948 68.1751 66.5568C68.0078 65.804 67.9869 65.1194 67.9869 64.3281" stroke="black" stroke-linecap="round"/>
</svg>

'''
'''--- src/pages/gamePage/assets/Left Arrow.svg ---
<svg width="29" height="48" viewBox="0 0 29 48" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M27.9634 3.53572C27.9634 16.9968 28.1053 30.4863 27.732 43.9257C27.7054 44.8839 27.732 45.8467 27.732 46.8052C27.732 48.233 26.5458 47.0719 25.9837 46.5609C24.6016 45.3044 23.0878 44.2991 21.4845 43.2829C18.9183 41.6564 16.63 39.4795 14.2987 37.5368C12.6436 36.1576 10.9402 34.9446 9.22101 33.6675C8.32739 33.0037 7.24835 32.5243 6.44436 31.765C5.07106 30.468 3.62797 28.3031 1.58522 28.0628C0.449037 27.9291 2.72219 25.6437 2.81929 25.5304C8.74442 18.6177 13.8585 10.6721 20.9832 4.85977C22.4327 3.67726 24.8093 1.55835 26.8064 1.45324C27.8275 1.3995 27.2097 1.71936 27.0507 2.27595C26.8678 2.91618 26.7925 6.07402 27.2692 6.31237" stroke="black" stroke-linecap="round"/>
<path d="M25.4181 43.5657C23.8054 43.2117 23.0926 42.3645 21.8702 41.3547C20.4293 40.1644 18.4599 39.1337 17.2039 37.7811C16.85 37.4 14.0524 35.2358 14.4272 35.2358C16.4857 35.2358 18.8035 35.5525 20.7904 35.0558C21.8417 34.793 22.7866 34.3245 23.7984 33.9632C24.2365 33.8067 25.1828 33.7228 25.4695 33.4361C25.9195 32.9861 23.8989 33.1533 23.567 33.1533C21.8571 33.1533 20.4413 32.8487 18.8236 32.3563C17.3845 31.9183 15.8743 31.7186 14.4144 31.3536C13.3775 31.0944 12.3622 30.5235 11.2906 30.3895C10.3907 30.277 9.43101 30.1453 8.52684 30.1453C8.29272 30.1453 6.97864 29.8651 7.74269 29.6954C11.1816 28.9312 14.3988 27.427 17.7823 26.3274C19.585 25.7415 21.3556 25.0172 23.0914 24.2578C23.5716 24.0477 24.2876 23.9229 24.6725 23.615C25.4671 22.9794 22.5139 23.2037 22.1658 23.2037C19.9505 23.2037 17.7352 23.2037 15.5199 23.2037C13.7826 23.2037 11.2724 23.6741 9.58094 23.1908C8.62346 22.9172 10.6523 22.2438 10.7122 22.2267C12.6775 21.6652 14.7182 20.0817 16.3683 18.9358C18.515 17.4451 20.5955 15.3696 22.8729 14.231C23.8213 13.7568 23.0879 13.9482 22.4101 13.9482C21.8907 13.9482 20.3266 14.225 19.9162 13.8967C19.0901 13.2358 19.7274 11.2337 20.1476 10.4773C20.703 9.47771 22.3379 9.69624 22.8729 8.62625" stroke="black" stroke-linecap="round"/>
</svg>

'''
'''--- src/pages/gamePage/assets/LoadingBorders (1).svg ---
<svg width="422" height="73" viewBox="0 0 422 73" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M7.66186 23.1765C9.86545 23.1765 16.4762 23.1765 14.2726 23.1765C11.2954 23.1765 8.39618 21.1421 5.47619 20.9072C4.71845 20.8463 4.71928 20.2285 5.08205 19.7726C5.43546 19.3285 7.14931 19.6105 7.66186 19.6105C8.55399 19.6105 12.8018 18.6133 12.1765 17.8276C11.4554 16.9213 12.0421 17.6219 12.8215 17.6655C14.2683 17.7463 13.0156 18.1521 12.1049 17.2692C11.5008 16.6836 6.63117 12.8028 8.46806 12.8028C10.4209 12.8028 11.7039 13.1338 13.0723 11.7582C13.2088 11.621 13.4608 12.1295 13.6277 12.3345C14.1553 12.9828 14.7316 13.4477 15.3296 14.0275C16.3558 15.0222 17.3031 16.0298 18.6261 16.6209C19.4875 17.0058 19.4498 12.0574 19.5756 11.362C19.82 10.0107 19.2846 11.3757 19.6652 11.7582C20.5214 12.619 22.85 11.0554 23.4632 10.6056C23.6229 10.4884 25.865 8.52953 26.0251 9.09277C26.3256 10.15 26.3093 11.1048 26.8313 12.1544C27.2048 12.9055 27.3058 13.6914 28.4616 13.4331C28.9595 13.3219 28.86 12.7436 29.2678 12.5507C29.5752 12.4052 30.0434 12.8028 30.3965 12.8028C31.8124 12.8028 32.9817 12.8679 34.1049 11.8303C34.4145 11.5443 37.1659 8.93836 37.5805 9.30889C38.0286 9.70925 37.3446 10.9574 37.7239 11.4341C38.3492 12.2198 38.9001 12.8028 39.9812 12.8028C42.1349 12.8028 43.4261 11.6454 44.8721 10.0653C45.0895 9.82772 47.3265 6.75366 47.3265 8.10223C47.3265 11.6455 49.673 8.84333 50.7125 6.98562C51.6806 5.25543 51.8412 6.17146 51.8412 7.61596C51.8412 10.3473 51.5588 13.2592 51.9128 15.9725C52.0943 17.3634 52.4087 18.6431 53.6148 17.1612C54.4325 16.1565 55.3545 15.0812 56.4992 14.4237C58.083 13.5139 59.2543 15.082 60.8705 14.6758C63.0028 14.1399 64.1957 11.785 65.636 10.2814C65.9684 9.93445 66.6751 8.16083 66.6751 9.56103C66.6751 11.2379 66.6624 13.099 68.1262 14.2436C68.9207 14.8648 69.1911 13.3804 69.2549 12.8028C69.4703 10.8543 70.9157 12.9109 71.5839 13.4512C74.0817 15.4709 77.0022 17.4461 79.2158 19.7726C79.4482 20.0168 81.6982 22.3317 81.8136 21.5196C82.0836 19.6195 81.8315 17.5139 81.8315 15.5943C81.8315 14.5788 81.2785 14.3695 81.9927 14.928C85.126 17.3778 86.3115 14.151 86.7403 10.8938C86.9017 9.6681 86.6746 8.00026 87.009 6.82353C87.0382 6.72085 88.6272 11.0259 88.9081 11.6142C89.6778 13.2261 90.3167 14.9495 90.9325 16.6209C91.5511 18.3 92.6171 15.994 93.0465 15.3962C94.9227 12.7847 95.6938 10.5991 98.6719 13.3791C99.3062 13.9712 100.775 14.8555 101.664 15.054C102.355 15.2084 102.536 13.8481 103.276 14.2616C106.003 15.7845 107.448 14.8024 107.648 11.6862C107.683 11.1282 107.952 9.21661 107.952 9.23685C107.952 10.348 108.19 11.7865 108.669 12.8028C109.421 14.4002 109.242 12.7562 109.242 11.8303C109.242 10.9658 109.242 8.37238 109.242 9.23685" stroke="black" stroke-linecap="round"/>
<path d="M108.919 13.7754C111.588 13.7754 112.877 13.8514 114.706 11.6682C115.63 10.565 116.247 9.22087 117.143 8.1203C117.479 7.70648 118.271 6.29465 118.271 7.61603C118.271 10.2076 118.1 13.2059 119.4 15.5584C120.443 17.4457 123.969 14.8018 125.043 14.2617C126.632 13.463 127.996 12.2653 129.558 11.4341C129.769 11.322 130.822 10.4419 130.848 10.8578C130.903 11.7493 130.707 12.7155 130.866 13.5953C131.428 16.7036 135.058 12.132 135.613 11.254C135.793 10.971 137.905 8.41368 137.924 8.46249C138.143 9.01265 137.91 9.94067 137.942 10.5336C137.992 11.4286 140.2 13.4754 140.2 11.6682C140.2 10.4551 146.981 14.4648 147.939 15.0001C149.124 15.6619 148.584 12.2147 148.584 11.2C148.584 10.7899 148.396 9.17047 148.727 9.63313C149.998 11.4069 152.29 12.7648 154.084 13.9375C154.692 14.335 156.228 15.0327 156.646 15.5584C157.033 16.0441 157.284 13.041 157.291 12.7308C157.316 11.5668 157.545 10.403 157.613 9.23691C157.676 8.16038 159.396 9.90855 159.566 10.0474C160.218 10.5796 165.031 14.5036 165.926 13.7034C166.905 12.8289 164.09 9.97394 166.07 11.182C168.001 12.3607 170.544 13.127 172.788 13.127C175.498 13.127 176.268 10.1144 177.858 8.51652C178.352 8.02005 178.543 9.37975 178.574 9.81323C178.652 10.8631 179.621 11.6212 179.846 12.6408C180.455 15.3942 180.169 18.5618 178.718 21.2135C178.195 22.1696 177.607 23.0638 177.607 21.5376C177.607 19.962 178.376 18.7327 179.219 17.4134C180.569 15.3034 182.72 13.9771 184.684 12.4967C185.654 11.7648 187.82 10.5133 188.965 11.4341C189.811 12.1146 190.184 11.1378 190.184 10.5156C190.184 9.62112 190.184 6.93765 190.184 7.83214C190.184 10.9511 190.447 14.2045 189.789 17.2693C189.441 18.8938 189.002 20.5266 188.571 22.132C188.442 22.6118 188.448 23.9127 188.088 24.2751C184.797 27.5834 192.926 16.1948 196.132 12.8029C197.24 11.6294 197.505 10.9508 197.941 9.41701C198.016 9.15436 198.896 9.52066 199.105 9.50706C201.366 9.36044 204.066 7.76405 206.164 6.96767C209.831 5.5756 213.252 3.68796 216.591 1.63675C222.796 -2.17527 206.479 12.1749 200.969 16.9451C199.239 18.4422 196.904 20.1332 200.682 17.8816C205.641 14.9261 210.701 11.4179 214.477 7.00369C215.544 5.7568 217.594 3.77694 217.594 1.94292C217.594 1.33402 217.594 4.4528 217.594 5.02261C217.594 5.979 215.712 11.182 217.272 11.182" stroke="black" stroke-linecap="round"/>
<path d="M217.272 11.5061C219.733 13.9803 222.499 16.2586 225.62 17.8275C226.582 18.311 227.591 19.2906 227.591 17.6654C227.591 17.0459 227.836 15.8225 228.075 15.1981C228.885 13.0812 228.904 10.4273 230.009 8.42639C230.469 7.59541 229.83 9.88541 229.848 10.2094C229.919 11.4847 232.499 12.6943 233.467 13.0549C237.812 14.6725 240.324 9.07942 242.908 6.48132C243.285 6.10235 243.302 5.57931 243.41 6.17516C243.548 6.93487 243.711 7.89404 244.037 8.58848C244.633 9.85737 245.591 11.7992 247.101 12.1364C249.13 12.5897 251.507 7.88699 252.744 6.64341C254.735 4.64233 255.507 10.2852 257.438 10.8397C257.811 10.9469 258.323 10.8577 258.71 10.8577C259.028 10.8577 259.194 9.70906 259.194 10.0293C259.194 11.0618 259.194 12.0944 259.194 13.127" stroke="black" stroke-linecap="round"/>
<path d="M258.549 13.127C259.85 13.6831 261.17 14.3213 262.168 15.3242C263 16.1612 263.472 13.7749 264.102 13.199C265.402 12.011 267.129 10.865 268.474 9.81316C268.636 9.68669 267.901 12.1169 267.901 12.4786C267.901 13.0548 267.539 16.0446 268.545 16.0446C269.252 16.0446 270.206 14.242 270.803 13.7753C272.276 12.6238 273.767 11.469 275.389 10.5336C276.139 10.1011 280.8 7.12804 280.8 8.58849C280.8 9.62624 280.157 10.785 280.495 11.9743C280.959 13.6085 287.275 13.7166 287.894 12.3165C288.471 11.0116 288.539 10.2439 288.539 8.75058C288.539 8.11665 288.217 5.05826 288.217 6.96761C288.217 9.73886 290.047 11.1554 291.764 13.199C292.364 13.9135 295.107 17.8022 295.884 16.0446C296.173 15.391 296.057 14.462 296.296 13.7393C296.908 11.8957 297.804 10.1346 298.536 8.33635C298.663 8.02403 299.503 5.61047 299.503 6.48134C299.503 7.19182 299.5 7.54707 299.826 8.12024C300.672 9.60944 301.874 11.2524 303.212 12.2985C304.148 13.0305 307.638 12.5926 308.353 11.6682C309.209 10.5629 308.6 9.33488 308.873 8.10223C308.991 7.56698 309.5 4.6083 309.5 6.15716C309.5 10.1905 316.066 12.9554 319.192 13.9374C321.544 14.6762 321.609 14.2644 322.865 12.6407C323.682 11.5847 324.151 10.398 324.728 9.23685C325.497 7.69107 324.979 9.98443 324.979 10.9298C324.979 11.9647 325.218 14.4212 326.914 13.7033C332.197 11.467 338.147 10.9237 343.038 7.61596C343.969 6.98612 345.161 5.99842 345.599 4.89647C345.795 4.40594 345.617 5.95302 345.617 6.48134C345.617 8.22268 344.972 9.923 344.972 11.6502C344.972 12.0478 344.483 13.1121 344.722 13.3791C345.115 13.8184 345.5 13.9735 345.635 14.5858C345.687 14.8207 346.262 15.9217 346.262 15.3242C346.262 14.1055 346.262 12.8868 346.262 11.6682C346.262 9.34491 346.262 7.02164 346.262 4.69836" stroke="black" stroke-linecap="round"/>
<path d="M346.585 15.0719C348.11 14.7509 352.712 13.6668 352.712 11.5059C352.712 10.8035 352.712 10.1011 352.712 9.39876C352.712 8.00144 353.116 9.5881 353.375 10.0651C354.22 11.6235 356.917 13.0234 358.445 13.7031C359.794 14.3036 361.591 15.8741 363.031 16.0444C364.119 16.1731 364.279 14.9849 365.109 13.7932C366.332 12.0375 367.666 11.0337 369.319 9.74094C370.605 8.73556 369.773 12.8751 369.803 13.451C369.897 15.2431 373.724 15.6484 374.837 14.8738C376.668 13.5998 378.319 11.9506 380.051 10.5334C380.078 10.5109 382.697 8.61001 382.308 9.56085C381.62 11.2391 379.938 12.6459 382.541 13.451C383.526 13.7559 387.187 13.7836 384.314 14.5856C383.321 14.8631 382.127 15.1414 381.09 15.0719C377.84 14.8541 387.393 13.4167 390.513 12.4784C393.305 11.639 396.681 11.4683 399.274 10.0651C400.393 9.45908 399.587 10.2655 398.987 10.5334C397.406 11.2397 396.133 12.1234 394.884 13.3789C394.404 13.8616 395.939 13.451 396.551 13.451C398.164 13.451 399.614 13.5887 401.101 14.2614C402.446 14.8697 403.97 14.8848 405.275 15.4681C407.065 16.2677 405.019 15.085 404.308 14.7477C403.183 14.2135 402.03 13.9078 400.922 13.2889C400.225 12.8997 400.399 12.1339 399.972 11.8481C399.307 11.4019 401.573 11.8301 402.373 11.8301C404.406 11.8301 405.97 12.1033 407.927 12.5505C408.692 12.7254 413.082 14.0542 411.259 15.4681C408.073 17.9388 404.227 19.6589 400.94 21.8616C399.877 22.5742 403.496 21.8796 404.774 21.8796C405.5 21.8796 407.822 21.464 408.429 21.9516C409.305 22.6564 407.882 22.7559 407.372 23.0322C406.145 23.6961 404.937 24.0592 403.842 24.9593C402.796 25.8195 403.532 26.5836 404.38 27.1385C405.902 28.1349 407.744 30.0484 408.823 31.5329C409.306 32.1982 409.702 32.8052 409.45 33.6941C409.275 34.3076 403.808 33.8741 403.036 33.8741C402.658 33.8741 399.961 33.6618 400.438 34.1983C402.079 36.042 403.733 37.8276 405.67 39.3852C407.5 40.857 409.018 41.4999 408.518 43.7616C408.216 45.1264 408.021 47.0353 406.547 47.1834C404.833 47.3558 403.215 47.4896 401.477 47.4896C400.282 47.4896 400.012 47.3936 401.334 47.8858C402.984 48.5001 407.059 51.0897 407.551 52.8205C408.166 54.9871 408.095 57.7534 406.959 59.8083C406.32 60.9659 406.424 60.5456 406.225 59.6463C406.091 59.0396 403.981 58.059 403.52 57.7192C403.101 57.4102 401.301 56.6009 401.334 56.6386C401.806 57.1728 401.927 57.9194 402.445 58.4396C403.595 59.5956 403.663 57.4364 403.663 56.4045C403.663 55.9039 402.701 55.3304 403.09 55.0177C403.803 54.4439 406.416 55.0338 407.21 55.1078C409.743 55.3435 412.21 55.9276 414.735 56.1704C416.212 56.3124 417.61 56.6055 419.07 56.8187C419.199 56.8375 421.094 56.8742 421.023 57.0528C420.828 57.5427 415.003 58.3581 414.376 58.5116C411.27 59.2733 407.537 60.7127 404.451 59.8264C403.75 59.6248 402.784 59.8083 402.051 59.8083C401.525 59.8083 401.559 59.8281 401.388 60.2586C401.346 60.3635 400.558 58.9572 400.438 58.7638C399.788 57.7106 399.432 56.5158 398.826 55.45C398.453 54.7937 396.568 59.1772 396.407 59.4662C395.643 60.8414 395.024 62.9105 394.06 64.0947C393.413 64.8902 393.655 63.4929 393.415 62.798C392.804 61.0229 391.448 60.1325 389.635 60.1325C388.476 60.1325 388.325 60.227 387.539 61.1051C386.289 62.5011 385.311 63.619 383.741 64.671C380.549 66.81 378.725 62.9427 376.736 60.943C375.704 59.9057 375.978 61.0277 375.285 61.1051C373.893 61.2605 372.519 61.6298 371.111 61.7714C370.185 61.8644 368.873 61.787 368.836 62.798C368.792 63.9765 367.823 66.175 367.223 67.1924C366.923 67.7016 366.457 68.6611 366.094 67.7147C365.164 65.2833 364.671 62.643 363.694 60.1865C363.285 59.1597 361.389 52.9106 360.129 55.594C358.681 58.6761 357.055 61.5518 355.238 64.4369C353.937 66.5014 352.619 68.5538 351.314 70.6143C350.905 71.2615 350.297 71.3958 349.827 71.947C349.243 72.6321 344.305 66.4611 343.682 65.5715C343.208 64.8942 342.364 64.0462 341.586 63.6985C341.359 63.5969 340.241 62.2007 340.153 62.5999C339.923 63.6416 339.813 64.8912 339.813 65.9677C339.813 67.312 338.965 63.2202 338.845 62.798C338.394 61.2111 337.872 59.4737 337.072 58.0254C336.421 56.8477 336.188 59.1928 336.015 59.7363C335.41 61.6258 335.09 62.7259 332.897 62.7259C331.474 62.7259 330.631 62.361 329.816 61.1771C329.578 60.8319 327.953 58.884 327.559 59.3041C327.019 59.8783 327.083 61.3481 326.914 62.0776C326.526 63.7514 326.262 65.4505 325.785 67.1023C325.554 67.9018 324.662 72.1517 324.011 69.3716C323.483 67.1128 322.792 64.9253 322.076 62.7259C321.75 61.721 321.507 60.3522 320.715 59.5562C318.579 57.4089 318.076 61.5072 317.418 62.5458C317.069 63.0977 316.751 63.8872 316.2 64.2748C315.829 64.536 313.931 61.9821 313.62 61.6814C312.878 60.9616 312.004 60.1325 310.951 60.1325C309.967 60.1325 310.847 61.3183 310.306 61.7534C308.846 62.9279 307.044 61.1051 305.487 61.1051C304.184 61.1051 305.19 61.8775 304.34 62.3297C303.642 62.7014 302.682 61.9823 302.083 61.6814C300.961 61.1175 300.095 60.7809 298.858 60.7809C297.399 60.7809 296.33 63.4641 295.813 64.653C295.668 64.9861 295.159 66.9961 294.738 65.8957C294.025 64.0327 293.401 62.24 292.48 60.4567C292.16 59.837 291.046 57.259 290.008 57.5571C289.511 57.7 289.829 60.569 289.829 61.1051C289.829 63.7303 288.115 60.4116 286.926 59.8804C285.208 59.1126 285.408 62.4018 283.863 62.4018C281.318 62.4018 278.502 61.2064 275.962 60.7809" stroke="black" stroke-linecap="round"/>
<path d="M274.672 60.7811C274.228 60.4529 268.812 56.1949 268.563 57.0711C268.082 58.7654 268.545 61.315 268.545 63.0504C268.545 63.7086 268.233 64.0229 267.578 64.0229C266.295 64.0229 266.032 62.6886 265.464 61.7537C263.948 59.2603 261.439 58.1877 258.71 58.1877C257.97 58.1877 257.068 60.2055 256.596 60.7991C255.215 62.5349 254.171 64.5261 252.816 66.2921C250.898 68.7908 251.238 67.2512 250.003 65.3196C249.637 64.7471 246.617 61.6967 246.617 63.6987C246.617 64.8217 245.759 62.5534 245.47 62.0778C244.693 60.7985 243.392 59.9611 242.174 59.1602C240.057 57.7689 241.888 61.5233 240.938 61.7356C238.277 62.3301 235.245 60.1465 233.145 58.8361C232.805 58.624 231.171 57.4269 231.138 58.2597C231.107 59.0431 231.138 59.8348 231.138 60.619C231.138 61.1232 231.566 62.5077 230.493 61.4295C229.795 60.7275 229.701 59.4778 229.024 58.674C223.961 52.6582 226.868 65.6067 224.366 64.275C223.819 63.984 223.419 62.8462 223.076 62.33C222.175 60.9713 220.842 59.6274 219.529 58.674C218.526 57.9461 217.945 57.1372 216.627 57.2152C215.958 57.2547 216.314 60.0433 216.286 60.493C216.155 62.5988 215.562 64.9375 214.871 66.9225C214.807 67.1059 214.65 69.6719 213.796 68.8135C213.47 68.4857 213.196 67.056 213.008 66.5443C212.383 64.8495 211.812 63.1246 211.145 61.4475C210.584 60.0391 209.521 58.2664 208.26 57.3953C207.72 57.022 206.427 56.3929 206.307 57.5394C205.972 60.7441 205.42 64.8593 203.728 67.6609C202.226 70.1479 201.7 67.263 200.664 65.6438C199.876 64.4113 197.985 62.303 196.311 62.402C195.428 62.4542 196.413 65.829 195.809 66.4362C195.167 67.0821 194.032 64.1548 193.802 63.7708C192.851 62.1773 192.143 61.442 190.506 60.619C188.087 59.4034 186.959 60.3459 186.959 62.7982C186.959 64.7044 186.139 67.7181 183.895 68.2192C183.147 68.3864 182.343 66.9295 181.943 66.4542C180.651 64.9202 179.374 63.8289 177.679 62.7982C177.25 62.5379 175.35 61.2078 175.35 62.2399C175.35 62.6536 175.583 63.99 175.027 64.0229C174.034 64.0817 173.94 63.4884 173.092 63.0504C171.032 61.9854 168.8 61.7537 166.499 61.7537C164.324 61.7537 162.106 62.1005 160.516 63.6987C160.214 64.0019 159.809 65.5921 159.692 65.6258C158.678 65.917 156.202 60.9712 155.105 60.2768C152.958 58.9179 152.776 60.7414 152.776 62.402" stroke="black" stroke-linecap="round"/>
<path d="M150.519 60.781C148.816 60.1871 147.627 59.3627 146.255 58.2597C145.986 58.0431 146.004 60.396 146.004 60.601C146.004 63.3702 145.954 66.3036 143.998 68.4893C142.514 70.1461 141.734 65.4545 141.167 64.5991C140.679 63.8631 137.208 59.6648 136.33 61.4294" stroke="black" stroke-linecap="round"/>
<path d="M148.262 60.4568C149.644 61.2507 151.838 62.4019 153.421 62.4019" stroke="black" stroke-linecap="round"/>
<path d="M136.653 62.0777C135.419 61.8358 132.251 61.1831 131.35 60.2767C129.623 58.5408 129.881 60.7142 129.881 62.2398C129.881 63.4575 130.348 65.9064 129.486 66.8683C128.668 67.7819 128.63 65.7463 128.573 65.1394C128.384 63.1437 127.266 60.6471 126.011 59.0881C125.377 58.3012 120.851 54.1222 120.851 57.3771C120.851 58.1876 120.851 58.998 120.851 59.8085C120.851 61.8253 118.968 63.5505 117.788 64.9953C116.695 66.3324 115.106 68.2115 113.291 68.5432C111.685 68.8367 111.556 64.8143 111.32 63.8067C111.275 63.615 110.384 60.0873 109.887 60.9611C109.427 61.7701 109.839 62.5923 109.493 63.3744C108.996 64.497 107.793 67.5186 106.483 67.8949C105.502 68.1767 105.222 62.5672 103.581 62.0957C101.551 61.5126 99.6809 63.3849 99.5677 65.3195C99.5481 65.6553 98.9522 62.3224 98.7436 61.5734C98.1475 59.4333 97.4161 58.1876 95.1247 58.1876C91.813 58.1876 91.1156 61.5405 89.5888 63.8427C88.9208 64.8501 89.1326 61.3129 88.281 60.4568C86.8795 59.0479 83.8587 59.7516 82.6377 60.9791C80.7393 62.8875 78.8907 66.0678 76.4927 67.3366C75.6217 67.7974 76.0269 64.152 76.0269 63.3924C76.0269 57.6802 68.4954 66.1466 67.5171 67.8949C66.64 69.4624 66.9976 65.9939 66.9976 65.3375C66.9976 63.1764 66.0672 62.3561 63.7728 63.4465C61.8007 64.3836 60.21 65.8169 58.4699 67.0664C57.5142 67.7526 59.7598 64.9512 59.7598 63.7706C59.7598 63.0717 57.6129 65.5514 57.3949 65.9678C56.2882 68.0817 57.3614 63.5076 57.4666 62.8882C57.5586 62.3464 58.5359 57.215 57.6457 57.215C56.5956 57.215 55.9233 59.4664 55.693 60.2767C55.4703 61.0601 54.1592 60.7452 53.5969 60.799C51.9314 60.9585 50.2678 61.9635 48.6881 62.4739C46.2243 63.27 44.9326 60.8828 42.7402 60.2047C41.5966 59.851 40.9119 60.3362 40.232 61.1052C39.8743 61.5097 39.9095 63.2248 39.9095 62.564C39.9095 61.6198 40.5047 60.7089 40.5545 59.8085C40.6727 57.6688 39.6542 60.6476 39.4258 61.2853C38.7553 63.1577 38.0785 65.0324 37.491 66.9224C37.2189 67.7976 37.0072 68.586 37.0072 67.1925C37.0072 65.8414 38.7095 61.7609 37.5805 60.853C36.6933 60.1395 36.2541 61.9584 36.0398 62.4019C35.4423 63.6386 34.7625 64.631 34.1049 65.7877C33.4741 66.8975 29.8855 66.292 28.802 66.292C27.2289 66.292 28.3832 61.2233 28.3004 59.8085C28.0782 56.0124 25.2764 66.8172 24.359 70.5063C24.0506 71.7464 23.8144 71.9197 23.302 70.9926C22.6464 69.8063 21.9228 68.6986 21.1342 67.5887C20.0852 66.1123 19.529 64.2223 18.7873 62.582C18.5713 62.1042 18.492 60.5114 18.9485 61.4294" stroke="black" stroke-linecap="round"/>
<path d="M19.5934 59.8086C17.9949 59.8086 15.9927 60.1542 15.1504 61.7536C14.9054 62.2188 14.5692 63.1735 13.9321 63.3565C12.5977 63.7398 9.33152 68.2185 8.14546 67.2646C7.5471 66.7834 7.30791 62.2504 7.85881 61.5735C9.25202 59.8617 10.6557 58.1805 12.1764 56.5668C12.5583 56.1615 12.5189 55.8835 13.1438 55.9184C13.8797 55.9595 13.5423 56.7507 13.968 56.8729C14.9241 57.1476 16.4928 56.891 14.2546 56.891C11.3212 56.891 8.62177 56.0682 5.9777 54.9459C4.32765 54.2455 2.9236 53.0451 1.37345 52.3525C0.0337639 51.7539 2.69471 51.4045 3.14707 51.3799C5.57629 51.2479 8.57001 50.3455 10.8865 49.597C12.1398 49.192 15.0047 49.041 15.9745 48.0661C16.3038 47.735 13.0291 47.0632 12.8393 47.0035C11.3119 46.5237 9.79866 45.9012 8.3067 45.4727C7.51093 45.2442 5.40441 44 5.40441 42.9513C5.40441 42.2426 9.41026 41.2243 9.937 41.0063C12.3198 40.0199 15.4091 38.0518 17.981 37.7645C19.4482 37.6006 15.6077 37.3558 15.222 37.2782C13.061 36.8437 10.8719 36.5284 8.70084 36.0716C7.92784 35.9089 5.15223 35.3578 4.75946 34.6668C3.95679 33.2547 5.63312 33.1111 6.69432 32.5777C8.29103 31.7751 10.2901 30.7118 12.0152 30.3264C12.9728 30.1125 13.4499 30.3216 14.2725 29.6601C14.6362 29.3676 16.3295 28.1224 14.7562 28.0392C12.284 27.9084 9.73803 27.849 7.33927 27.715C4.15339 27.5371 7.0761 25.6089 7.98422 24.7974C8.8457 24.0276 10.2877 24.0103 11.3702 23.8429C12.531 23.6634 13.936 23.1765 15.0787 23.1765" stroke="black" stroke-linecap="round"/>
</svg>

'''
'''--- src/pages/gamePage/assets/LoadingBorders.svg ---
<svg width="264" height="47" viewBox="0 0 264 47" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M4.73514 15.2301C6.10981 15.2301 10.2338 15.2301 8.85915 15.2301C7.00189 15.2301 5.19323 13.9676 3.37165 13.8219C2.89895 13.784 2.89946 13.4006 3.12577 13.1178C3.34624 12.8422 4.4154 13.0172 4.73514 13.0172C5.29168 13.0172 7.94162 12.3983 7.55154 11.9107C7.10165 11.3484 7.46767 11.7831 7.95388 11.8101C8.85645 11.8603 8.07498 12.1121 7.50684 11.5643C7.12997 11.2009 4.09216 8.79258 5.23807 8.79258C6.45631 8.79258 7.25672 8.99799 8.11035 8.14436C8.1955 8.05921 8.3527 8.37474 8.45681 8.502C8.78593 8.90426 9.14546 9.19279 9.51855 9.55256C10.1587 10.1698 10.7497 10.7951 11.575 11.1619C12.1124 11.4008 12.0888 8.33001 12.1673 7.89848C12.3198 7.0599 11.9858 7.90695 12.2232 8.14436C12.7573 8.6785 14.21 7.70823 14.5925 7.42908C14.6922 7.35638 16.0909 6.14076 16.1907 6.49028C16.3782 7.14633 16.368 7.73889 16.6937 8.39023C16.9267 8.85629 16.9896 9.34398 17.7107 9.18374C18.0213 9.11472 17.9592 8.75583 18.2136 8.63611C18.4054 8.54587 18.6975 8.79258 18.9177 8.79258C19.801 8.79258 20.5305 8.83298 21.2312 8.18906C21.4243 8.01162 23.1407 6.39446 23.3994 6.6244C23.6789 6.87285 23.2522 7.64742 23.4888 7.94319C23.8789 8.43081 24.2226 8.79258 24.897 8.79258C26.2405 8.79258 27.046 8.07432 27.9481 7.0938C28.0837 6.94637 29.4792 5.03873 29.4792 5.87559C29.4792 8.07438 30.943 6.33549 31.5915 5.18267C32.1954 4.10899 32.2956 4.67744 32.2956 5.57384C32.2956 7.26876 32.1195 9.07581 32.3403 10.7596C32.4535 11.6227 32.6496 12.4168 33.402 11.4972C33.9121 10.8737 34.4873 10.2065 35.2014 9.79843C36.1895 9.23383 36.9202 10.207 37.9284 9.9549C39.2586 9.62235 40.0028 8.16097 40.9013 7.22791C41.1086 7.0126 41.5495 5.91196 41.5495 6.78087C41.5495 7.82149 41.5416 8.97642 42.4547 9.68667C42.9504 10.0722 43.119 9.15104 43.1588 8.79258C43.2932 7.58339 44.1949 8.85965 44.6117 9.19492C46.17 10.4483 47.9918 11.674 49.3728 13.1178C49.5177 13.2693 50.9213 14.7058 50.9933 14.2018C51.1618 13.0227 51.0045 11.7161 51.0045 10.5249C51.0045 9.89468 50.6595 9.76481 51.1051 10.1114C53.0597 11.6316 53.7993 9.62919 54.0668 7.6079C54.1675 6.84731 54.0258 5.81232 54.2344 5.08209C54.2526 5.01837 55.2439 7.68989 55.4191 8.05495C55.8993 9.05529 56.2979 10.1247 56.682 11.1619C57.0679 12.2039 57.7329 10.7729 58.0008 10.4019C59.1712 8.78136 59.6523 7.42507 61.5101 9.15022C61.9058 9.51765 62.822 10.0664 63.3765 10.1896C63.8076 10.2854 63.9205 9.44126 64.3824 9.69785C66.0835 10.6429 66.9846 10.0334 67.1094 8.09965C67.1317 7.7534 67.2994 6.56714 67.2994 6.57969C67.2994 7.26921 67.4477 8.16192 67.7464 8.79258C68.216 9.78387 68.1041 8.76366 68.1041 8.18906C68.1041 7.65261 68.1041 6.04324 68.1041 6.57969" stroke="black" stroke-linecap="round"/>
<path d="M67.9029 9.39615C69.5677 9.39615 70.3719 9.4433 71.5128 8.08854C72.0893 7.4039 72.474 6.5698 73.0328 5.88683C73.2429 5.63003 73.7369 4.7539 73.7369 5.5739C73.7369 7.18213 73.6299 9.04274 74.441 10.5026C75.0916 11.6738 77.291 10.0331 77.9615 9.69791C78.9527 9.20227 79.8036 8.45903 80.7779 7.94325C80.9093 7.87364 81.5664 7.32749 81.5825 7.58561C81.6171 8.13886 81.4944 8.7384 81.5937 9.28439C81.9444 11.2133 84.2087 8.3763 84.5554 7.83148C84.6672 7.65583 85.985 6.06889 85.9971 6.09918C86.1337 6.44059 85.9879 7.01648 86.0083 7.38444C86.0392 7.93982 87.4165 9.20999 87.4165 8.08854C87.4165 7.33569 91.6467 9.82395 92.2446 10.1561C92.9839 10.5669 92.6469 8.42766 92.6469 7.79796C92.6469 7.54347 92.5296 6.53852 92.7364 6.82563C93.5289 7.92636 94.9585 8.76903 96.078 9.49673C96.4575 9.74341 97.4153 10.1764 97.6762 10.5026C97.9174 10.804 98.0745 8.94044 98.0786 8.74793C98.0939 8.02559 98.2372 7.30339 98.2797 6.57975C98.319 5.9117 99.3919 6.99655 99.4979 7.08268C99.9044 7.41294 102.907 9.84807 103.465 9.35144C104.076 8.80879 102.32 7.03712 103.555 7.78678C104.76 8.51826 106.346 8.99381 107.746 8.99381C109.436 8.99381 109.917 7.12431 110.909 6.13271C111.217 5.82462 111.336 6.66839 111.356 6.93739C111.404 7.58892 112.009 8.05937 112.149 8.69205C112.529 10.4007 112.35 12.3664 111.445 14.0119C111.119 14.6052 110.752 15.1601 110.752 14.2131C110.752 13.2353 111.232 12.4724 111.758 11.6537C112.6 10.3444 113.942 9.52129 115.167 8.60264C115.772 8.14848 117.124 7.37185 117.838 7.94325C118.366 8.36551 118.598 7.75937 118.598 7.37326C118.598 6.81818 118.598 5.15293 118.598 5.70801C118.598 7.64351 118.762 9.66245 118.352 11.5643C118.135 12.5724 117.861 13.5857 117.592 14.5819C117.512 14.8797 117.515 15.687 117.29 15.9119C115.237 17.9648 120.309 10.8976 122.309 8.79264C123 8.06444 123.165 7.64331 123.437 6.69151C123.484 6.52852 124.033 6.75584 124.164 6.7474C125.574 6.65641 127.258 5.66575 128.567 5.17155C130.855 4.30769 132.989 3.1363 135.072 1.86341C138.943 -0.502178 128.764 8.40295 125.326 11.3632C124.247 12.2922 122.79 13.3416 125.147 11.9443C128.241 10.1102 131.397 7.9332 133.753 5.19391C134.418 4.42014 135.698 3.19152 135.698 2.0534C135.698 1.67554 135.698 3.61093 135.698 3.96453C135.698 4.55803 134.523 7.78678 135.496 7.78678" stroke="black" stroke-linecap="round"/>
<path d="M135.496 7.98788C137.032 9.5233 138.757 10.9371 140.704 11.9107C141.305 12.2107 141.934 12.8187 141.934 11.8101C141.934 11.4257 142.087 10.6665 142.236 10.279C142.741 8.96532 142.753 7.31842 143.443 6.07675C143.729 5.56109 143.331 6.98216 143.342 7.1832C143.386 7.97463 144.995 8.72526 145.6 8.94903C148.31 9.95285 149.877 6.482 151.49 4.86973C151.725 4.63455 151.735 4.30997 151.802 4.67973C151.888 5.15118 151.99 5.7464 152.194 6.17734C152.565 6.96476 153.163 8.16979 154.105 8.37905C155.37 8.66031 156.854 5.74203 157.625 4.97031C158.867 3.72852 159.349 7.23025 160.553 7.57436C160.786 7.6409 161.105 7.58554 161.347 7.58554C161.546 7.58554 161.649 6.87273 161.649 7.07143C161.649 7.7122 161.649 8.35297 161.649 8.99374" stroke="black" stroke-linecap="round"/>
<path d="M161.246 8.99376C162.058 9.33889 162.882 9.73488 163.504 10.3573C164.023 10.8767 164.318 9.39585 164.711 9.03846C165.522 8.30123 166.599 7.59005 167.438 6.93734C167.539 6.85886 167.08 8.36692 167.08 8.59141C167.08 8.94895 166.855 10.8043 167.483 10.8043C167.923 10.8043 168.519 9.6857 168.891 9.3961C169.81 8.68149 170.74 7.96491 171.752 7.38439C172.22 7.11603 175.127 5.27106 175.127 6.17736C175.127 6.82135 174.726 7.5404 174.937 8.27848C175.227 9.29256 179.167 9.35967 179.553 8.49083C179.913 7.68102 179.955 7.20463 179.955 6.27795C179.955 5.88455 179.754 3.98664 179.754 5.1715C179.754 6.89123 180.896 7.77025 181.967 9.03846C182.341 9.48181 184.053 11.895 184.537 10.8043C184.718 10.3987 184.645 9.8222 184.795 9.37375C185.176 8.2297 185.735 7.1368 186.192 6.02089C186.271 5.82708 186.795 4.32932 186.795 4.86975C186.795 5.31064 186.793 5.53109 186.996 5.88678C187.524 6.81092 188.274 7.83048 189.109 8.47965C189.693 8.9339 191.87 8.66215 192.316 8.08849C192.85 7.40262 192.47 6.64054 192.64 5.8756C192.714 5.54345 193.031 3.70741 193.031 4.66858C193.031 7.17151 197.128 8.88727 199.078 9.49668C200.545 9.95514 200.585 9.69959 201.369 8.692C201.879 8.03666 202.171 7.30028 202.531 6.5797C203.011 5.62045 202.688 7.04362 202.688 7.63026C202.688 8.27247 202.837 9.79688 203.895 9.35139C207.191 7.96366 210.902 7.62647 213.953 5.57385C214.534 5.18299 215.278 4.57007 215.551 3.88624C215.673 3.58184 215.563 4.54189 215.563 4.86975C215.563 5.95035 215.16 7.0055 215.16 8.07731C215.16 8.32405 214.855 8.98451 215.004 9.15022C215.249 9.42282 215.489 9.51908 215.574 9.89903C215.606 10.0448 215.965 10.728 215.965 10.3573C215.965 9.601 215.965 8.84474 215.965 8.08849C215.965 6.64676 215.965 5.20503 215.965 3.76331" stroke="black" stroke-linecap="round"/>
<path d="M216.166 10.2007C217.118 10.0016 219.988 9.32879 219.988 7.98785C219.988 7.55198 219.988 7.11611 219.988 6.68024C219.988 5.81312 220.24 6.79774 220.402 7.09376C220.929 8.0608 222.612 8.92952 223.565 9.35135C224.407 9.72397 225.527 10.6986 226.426 10.8043C227.105 10.8841 227.205 10.1467 227.722 9.40723C228.485 8.31775 229.317 7.69483 230.349 6.89259C231.151 6.26869 230.632 8.8375 230.65 9.19488C230.709 10.307 233.097 10.5585 233.791 10.0778C234.933 9.28722 235.963 8.26382 237.043 7.38434C237.06 7.37037 238.694 6.19077 238.451 6.78083C238.023 7.82231 236.973 8.69527 238.597 9.19488C239.212 9.38408 241.495 9.40128 239.703 9.89898C239.083 10.0712 238.338 10.2439 237.691 10.2007C235.664 10.0656 241.624 9.17363 243.57 8.59137C245.311 8.07044 247.418 7.96453 249.035 7.09376C249.734 6.71767 249.23 7.21812 248.856 7.38434C247.87 7.82263 247.076 8.37103 246.297 9.15018C245.997 9.44972 246.955 9.19488 247.336 9.19488C248.343 9.19488 249.247 9.28032 250.175 9.69781C251.014 10.0753 251.965 10.0847 252.779 10.4466C253.896 10.9428 252.619 10.2089 252.176 9.99957C251.474 9.66805 250.755 9.47837 250.063 9.0943C249.629 8.85279 249.737 8.37754 249.471 8.2002C249.056 7.92329 250.469 8.18903 250.969 8.18903C252.237 8.18903 253.212 8.35857 254.433 8.63607C254.911 8.74462 257.649 9.56922 256.512 10.4466C254.525 11.9799 252.125 13.0473 250.075 14.4142C249.411 14.8564 251.669 14.4253 252.466 14.4253C252.92 14.4253 254.368 14.1674 254.746 14.47C255.293 14.9074 254.405 14.9691 254.087 15.1406C253.322 15.5526 252.568 15.7779 251.885 16.3365C251.233 16.8703 251.692 17.3445 252.22 17.6888C253.17 18.3071 254.319 19.4945 254.992 20.4158C255.294 20.8286 255.541 21.2053 255.383 21.7569C255.274 22.1376 251.864 21.8687 251.382 21.8687C251.146 21.8687 249.464 21.7369 249.762 22.0698C250.785 23.214 251.817 24.322 253.025 25.2886C254.167 26.2019 255.114 26.6009 254.802 28.0044C254.614 28.8514 254.492 30.0359 253.573 30.1279C252.503 30.2348 251.494 30.3179 250.41 30.3179C249.664 30.3179 249.496 30.2583 250.32 30.5637C251.35 30.9449 253.892 32.5519 254.199 33.626C254.583 34.9705 254.538 36.6872 253.83 37.9624C253.431 38.6807 253.496 38.4199 253.372 37.8618C253.288 37.4853 251.972 36.8768 251.684 36.6659C251.422 36.4742 250.3 35.9719 250.32 35.9954C250.615 36.3269 250.691 36.7901 251.013 37.113C251.731 37.8303 251.773 36.4904 251.773 35.8501C251.773 35.5394 251.173 35.1836 251.416 34.9895C251.861 34.6334 253.491 34.9995 253.986 35.0454C255.566 35.1917 257.105 35.5541 258.68 35.7048C259.602 35.7929 260.474 35.9748 261.385 36.1071C261.465 36.1188 262.647 36.1416 262.603 36.2524C262.481 36.5564 258.847 37.0624 258.457 37.1577C256.519 37.6304 254.19 38.5236 252.265 37.9735C251.827 37.8485 251.225 37.9624 250.767 37.9624C250.44 37.9624 250.461 37.9746 250.354 38.2418C250.328 38.3069 249.836 37.4342 249.762 37.3141C249.356 36.6606 249.134 35.9192 248.756 35.2577C248.523 34.8505 247.347 37.5707 247.247 37.75C246.77 38.6034 246.384 39.8874 245.783 40.6223C245.379 41.116 245.53 40.2489 245.381 39.8176C244.999 38.716 244.153 38.1635 243.022 38.1635C242.299 38.1635 242.205 38.2222 241.715 38.767C240.935 39.6334 240.325 40.3271 239.345 40.9799C237.354 42.3073 236.216 39.9074 234.976 38.6665C234.332 38.0228 234.502 38.719 234.07 38.767C233.202 38.8635 232.345 39.0927 231.466 39.1806C230.889 39.2383 230.07 39.1903 230.047 39.8176C230.02 40.5489 229.415 41.9132 229.041 42.5446C228.854 42.8606 228.563 43.456 228.337 42.8687C227.757 41.3599 227.449 39.7214 226.839 38.1971C226.584 37.5598 225.402 33.6819 224.615 35.3471C223.712 37.2597 222.698 39.0443 221.564 40.8346C220.753 42.1158 219.93 43.3895 219.117 44.6681C218.861 45.0697 218.482 45.1531 218.189 45.4951C217.825 45.9202 214.744 42.0908 214.356 41.5387C214.06 41.1184 213.533 40.5922 213.048 40.3764C212.906 40.3134 212.209 39.447 212.154 39.6947C212.01 40.3411 211.941 41.1166 211.941 41.7846C211.941 42.6188 211.413 40.0796 211.338 39.8176C211.057 38.8329 210.731 37.7547 210.231 36.8559C209.825 36.1251 209.681 37.5804 209.572 37.9177C209.195 39.0902 208.996 39.7729 207.627 39.7729C206.74 39.7729 206.214 39.5465 205.705 38.8118C205.557 38.5975 204.543 37.3887 204.297 37.6494C203.96 38.0058 204 38.9178 203.895 39.3706C203.653 40.4092 203.488 41.4636 203.191 42.4887C203.046 42.9848 202.49 45.6222 202.084 43.8969C201.754 42.4952 201.323 41.1377 200.877 39.7729C200.673 39.1493 200.522 38.2999 200.028 37.8059C198.695 36.4734 198.381 39.0166 197.971 39.6611C197.753 40.0036 197.555 40.4935 197.211 40.7341C196.98 40.8961 195.795 39.3113 195.602 39.1247C195.139 38.678 194.593 38.1635 193.937 38.1635C193.323 38.1635 193.872 38.8994 193.534 39.1694C192.623 39.8982 191.499 38.767 190.528 38.767C189.715 38.767 190.343 39.2464 189.813 39.527C189.377 39.7577 188.778 39.3114 188.404 39.1247C187.705 38.7748 187.164 38.5659 186.393 38.5659C185.482 38.5659 184.816 40.231 184.493 40.9688C184.402 41.1755 184.085 42.4228 183.822 41.7399C183.378 40.5838 182.989 39.4713 182.414 38.3647C182.214 37.9801 181.519 36.3803 180.872 36.5653C180.561 36.654 180.76 38.4344 180.76 38.767C180.76 40.3962 179.691 38.3367 178.949 38.0071C177.877 37.5306 178.002 39.5717 177.038 39.5717C175.451 39.5717 173.694 38.83 172.11 38.5659" stroke="black" stroke-linecap="round"/>
<path d="M171.305 38.566C171.028 38.3623 167.649 35.72 167.494 36.2637C167.193 37.3151 167.483 38.8973 167.483 39.9742C167.483 40.3827 167.288 40.5777 166.879 40.5777C166.078 40.5777 165.915 39.7497 165.56 39.1695C164.615 37.6222 163.049 36.9566 161.347 36.9566C160.885 36.9566 160.323 38.2088 160.028 38.5772C159.166 39.6543 158.515 40.89 157.67 41.9859C156.474 43.5365 156.686 42.5811 155.915 41.3824C155.687 41.0271 153.803 39.1341 153.803 40.3765C153.803 41.0734 153.268 39.6658 153.088 39.3707C152.603 38.5768 151.791 38.0571 151.031 37.5601C149.711 36.6967 150.853 39.0266 150.26 39.1583C148.6 39.5272 146.709 38.1722 145.398 37.359C145.186 37.2274 144.167 36.4845 144.147 37.0013C144.127 37.4874 144.147 37.9787 144.147 38.4654C144.147 38.7783 144.413 39.6374 143.744 38.9683C143.309 38.5327 143.25 37.7572 142.828 37.2584C139.669 33.5252 141.483 41.5606 139.922 40.7342C139.581 40.5536 139.331 39.8475 139.117 39.5271C138.555 38.684 137.724 37.85 136.905 37.2584C136.279 36.8067 135.917 36.3047 135.094 36.3531C134.677 36.3776 134.899 38.1081 134.882 38.3872C134.8 39.6939 134.43 41.1453 133.999 42.3771C133.959 42.4909 133.861 44.0833 133.328 43.5506C133.125 43.3471 132.954 42.4599 132.836 42.1424C132.447 41.0906 132.09 40.0203 131.674 38.9795C131.325 38.1055 130.661 37.0054 129.875 36.4649C129.538 36.2332 128.731 35.8428 128.657 36.5543C128.447 38.543 128.103 41.0967 127.047 42.8353C126.11 44.3786 125.782 42.5884 125.136 41.5836C124.644 40.8187 123.465 39.5104 122.42 39.5718C121.869 39.6042 122.484 41.6985 122.107 42.0753C121.707 42.4761 120.999 40.6596 120.856 40.4212C120.262 39.4324 119.821 38.9761 118.799 38.4654C117.29 37.711 116.586 38.2959 116.586 39.8177C116.586 41.0006 116.075 42.8708 114.675 43.1817C114.208 43.2855 113.707 42.3814 113.457 42.0865C112.651 41.1345 111.855 40.4573 110.797 39.8177C110.53 39.6562 109.344 38.8308 109.344 39.4713C109.344 39.7279 109.49 40.5573 109.143 40.5777C108.523 40.6142 108.464 40.246 107.936 39.9742C106.651 39.3133 105.258 39.1695 103.823 39.1695C102.466 39.1695 101.082 39.3847 100.09 40.3765C99.9021 40.5647 99.6493 41.5515 99.5762 41.5724C98.9437 41.7531 97.3994 38.6839 96.715 38.2531C95.3756 37.4097 95.2621 38.5413 95.2621 39.5718" stroke="black" stroke-linecap="round"/>
<path d="M93.854 38.5659C92.7916 38.1974 92.0496 37.6857 91.194 37.0013C91.0261 36.8669 91.0376 38.327 91.0376 38.4542C91.0376 40.1726 91.0065 41.993 89.7858 43.3493C88.8605 44.3775 88.3739 41.4661 88.02 40.9353C87.7155 40.4785 85.55 37.8732 85.0024 38.9683" stroke="black" stroke-linecap="round"/>
<path d="M92.4457 38.3647C93.3079 38.8574 94.6768 39.5718 95.6645 39.5718" stroke="black" stroke-linecap="round"/>
<path d="M85.2036 39.3706C84.4341 39.2205 82.4579 38.8154 81.8954 38.253C80.8182 37.1757 80.979 38.5244 80.979 39.4712C80.979 40.2268 81.2704 41.7465 80.7331 42.3435C80.2229 42.9104 80.199 41.6472 80.1631 41.2706C80.0452 40.0321 79.3482 38.4829 78.5649 37.5154C78.1696 37.027 75.3462 34.4337 75.3462 36.4536C75.3462 36.9565 75.3462 37.4595 75.3462 37.9624C75.3462 39.214 74.1716 40.2846 73.4351 41.1811C72.7535 42.0109 71.762 43.177 70.6299 43.3828C69.6282 43.565 69.5476 41.0688 69.4005 40.4435C69.3725 40.3246 68.8162 38.1355 68.5064 38.6777C68.2195 39.1797 68.4762 39.6899 68.2605 40.1753C67.9509 40.8719 67.2002 42.747 66.3829 42.9805C65.7708 43.1554 65.5965 39.6744 64.5724 39.3818C63.3059 39.0199 62.1395 40.1818 62.0689 41.3823C62.0566 41.5907 61.6849 39.5224 61.5548 39.0577C61.1829 37.7296 60.7267 36.9565 59.2972 36.9565C57.2313 36.9565 56.7962 39.0372 55.8438 40.4659C55.427 41.091 55.5592 38.896 55.0279 38.3647C54.1536 37.4905 52.2691 37.9271 51.5074 38.6889C50.3232 39.8731 49.1699 41.8467 47.674 42.634C47.1306 42.92 47.3834 40.6578 47.3834 40.1865C47.3834 36.6417 42.685 41.8956 42.0747 42.9805C41.5276 43.9532 41.7506 41.8008 41.7506 41.3935C41.7506 40.0524 41.1702 39.5434 39.7389 40.22C38.5087 40.8016 37.5163 41.691 36.4308 42.4664C35.8346 42.8922 37.2354 41.1538 37.2354 40.4212C37.2354 39.9875 35.8962 41.5263 35.7602 41.7847C35.0698 43.0965 35.7393 40.2579 35.8049 39.8735C35.8623 39.5374 36.4719 36.353 35.9166 36.353C35.2615 36.353 34.8421 37.7501 34.6984 38.253C34.5595 38.7391 33.7416 38.5437 33.3908 38.5771C32.3519 38.676 31.3141 39.2997 30.3286 39.6165C28.7916 40.1105 27.9858 38.6291 26.6181 38.2083C25.9047 37.9888 25.4776 38.2899 25.0534 38.7671C24.8302 39.0181 24.8522 40.0824 24.8522 39.6724C24.8522 39.0864 25.2235 38.5212 25.2546 37.9624C25.3283 36.6346 24.6929 38.4831 24.5505 38.8788C24.1322 40.0408 23.71 41.2041 23.3434 42.377C23.1737 42.9201 23.0417 43.4094 23.0417 42.5446C23.0417 41.7062 24.1036 39.174 23.3993 38.6106C22.8458 38.1678 22.5718 39.2966 22.4382 39.5718C22.0654 40.3392 21.6413 40.9551 21.2312 41.6729C20.8376 42.3616 18.5989 41.9858 17.923 41.9858C16.9417 41.9858 17.6617 38.8404 17.6101 37.9624C17.4715 35.6067 15.7236 42.3117 15.1513 44.6011C14.9589 45.3706 14.8116 45.4781 14.4919 44.9028C14.0829 44.1666 13.6315 43.4792 13.1396 42.7905C12.4852 41.8743 12.1382 40.7014 11.6755 39.6835C11.5407 39.387 11.4913 38.3986 11.7761 38.9683" stroke="black" stroke-linecap="round"/>
<path d="M12.1784 37.9624C11.1813 37.9624 9.93219 38.177 9.40674 39.1695C9.25392 39.4581 9.04419 40.0506 8.64676 40.1642C7.81432 40.402 5.77675 43.1813 5.03685 42.5894C4.66357 42.2908 4.51436 39.4778 4.85803 39.0577C5.72716 37.9954 6.60281 36.9521 7.55149 35.9507C7.78973 35.6993 7.76511 35.5267 8.155 35.5484C8.61405 35.5739 8.40359 36.0649 8.66911 36.1407C9.26559 36.3112 10.2442 36.1519 8.84793 36.1519C7.01797 36.1519 5.33399 35.6413 3.68453 34.9449C2.65518 34.5103 1.77929 33.7653 0.812255 33.3355C-0.0234841 32.9641 1.6365 32.7473 1.9187 32.732C3.43412 32.6501 5.3017 32.0901 6.74681 31.6256C7.52863 31.3743 9.31586 31.2806 9.92084 30.6756C10.1263 30.4701 8.08343 30.0532 7.96501 30.0162C7.01217 29.7184 6.06817 29.3321 5.13744 29.0662C4.64101 28.9244 3.32689 28.1523 3.32689 27.5015C3.32689 27.0617 5.82587 26.4298 6.15447 26.2945C7.64093 25.6824 9.56813 24.4611 11.1726 24.2828C12.0879 24.1811 9.69203 24.0292 9.45144 23.981C8.1033 23.7114 6.73766 23.5157 5.38331 23.2322C4.90109 23.1313 3.16958 22.7893 2.92455 22.3605C2.42382 21.4842 3.46957 21.3951 4.13158 21.0641C5.12766 20.566 6.37477 19.9062 7.4509 19.667C8.04829 19.5343 8.34593 19.6641 8.8591 19.2535C9.086 19.072 10.1423 18.2993 9.16086 18.2477C7.61861 18.1665 6.03035 18.1296 4.53392 18.0465C2.54647 17.9361 4.36975 16.7395 4.93626 16.236C5.47368 15.7583 6.37325 15.7475 7.04856 15.6436C7.77269 15.5322 8.6492 15.2301 9.36203 15.2301" stroke="black" stroke-linecap="round"/>
</svg>

'''
'''--- src/pages/gamePage/assets/LoadingZone.svg ---
<svg width="236" height="37" viewBox="0 0 236 37" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M0.622222 8.21214C0.622222 10.8684 0.622222 13.5247 0.622222 16.1811C0.622222 17.7501 0.43031 19.4666 0.726923 21.0089C0.861746 21.71 0.764507 23.4448 1.35513 23.9173C1.89517 24.3493 1.95858 25.0623 2.09967 25.6972C2.38831 26.9961 2.71624 30.9715 2.71624 29.641C2.71624 25.924 3.13505 22.2048 3.13505 18.4845C3.13505 15.6094 2.90038 12.4209 3.85632 9.68959C4.12682 8.91674 4.39146 7.46028 4.39146 9.14281C4.39146 10.9593 4.31637 12.7365 4.8219 14.5058C5.82137 18.004 6.61503 21.6364 7.8466 25.0574C7.98766 25.4492 8.08721 26.3002 8.41664 26.593C8.45126 26.6238 8.8267 24.2597 8.88197 23.9755C9.5783 20.3943 10.2547 17.0747 10.2547 13.4472C10.2547 13.1113 10.2547 9.94767 10.2547 11.3532C10.2547 13.1637 10.1702 14.9924 10.3013 16.7976C10.5253 19.885 10.7261 23.1326 11.3483 26.1742C11.5586 27.2024 11.6785 27.3203 12.1859 26.6861C12.5565 26.2227 12.694 25.5732 13.0002 25.0457C14.2345 22.9201 15.2877 20.844 16.118 18.5194C17.0066 16.0312 17.8731 13.5233 18.5145 10.9576C18.7323 10.0863 19.259 8.89675 19.259 8.00274C19.259 7.5318 18.884 8.1721 18.8518 8.31684C18.7278 8.87492 18.8402 9.58337 18.8402 10.1433C18.8402 14.3384 18.5419 18.6426 18.8867 22.8238C18.9009 22.9949 19.2928 27.0732 19.6313 26.8024C20.6753 25.9672 21.547 23.7626 22.1906 22.6144C23.1613 20.8828 24.0569 19.0927 24.878 17.2862C25.1241 16.7448 25.2802 15.9184 25.7039 15.4947C25.8164 15.3822 25.7505 15.9296 25.7505 16.0764C25.7505 16.8936 25.4749 17.7092 25.3782 18.5194C25.03 21.4355 25.5643 24.1357 26.3787 26.8955C26.4614 27.1757 27.5512 29.8175 27.6816 29.5712C28.2389 28.5185 28.0263 26.9416 28.1702 25.7903C28.3884 24.0447 28.6837 22.3205 28.845 20.5669C28.9467 19.4601 28.8915 18.3285 28.8915 17.2164C28.8915 15.9305 29.1009 14.6133 29.1009 13.3658C29.1009 12.8703 29.1873 14.3537 29.2638 14.8432C29.5835 16.8894 30.3572 18.7572 31.1019 20.6832C32.6097 24.5826 34.7995 27.7174 36.9419 31.2231C37.2036 31.6513 37.449 32.1845 37.477 31.3162C37.5376 29.437 37.6864 27.5826 37.6864 25.6972C37.6864 23.3834 37.8958 21.0795 37.8958 18.7869C37.8958 18.0125 37.6289 16.7336 38.0005 16.0647C38.2104 15.6869 38.0023 15.5085 38.1517 16.0066C38.5172 17.2248 38.8056 18.4112 39.2453 19.6129C39.9435 21.5213 40.6849 24.3797 42.1885 25.8834C42.7982 26.493 44.3597 21.2481 44.4687 20.7879C44.8298 19.2633 45.2249 17.7939 45.2249 16.2276C45.2249 14.5158 45.6891 12.0879 45.2132 10.4225C44.6517 8.45691 44.8061 14.4974 44.8061 16.5417C44.8061 19.0094 44.5738 21.6439 45.4343 24.0104C45.7206 24.7979 46.2347 25.524 46.4813 26.3254C47.155 28.5149 47.8958 26.1084 48.4706 25.0806C50.5114 21.432 52.6216 17.7972 55.0668 14.4011C55.2912 14.0894 56.6214 12.582 56.0673 12.0279C55.0865 11.0472 55.4856 14.3174 55.4856 14.6803C55.4856 17.5499 55.4856 20.4195 55.4856 23.2891C55.4856 23.9374 55.6317 25.1207 56.5326 25.1737C58.5744 25.2938 60.4638 21.6029 61.3023 20.1946C62.6747 17.8898 63.2028 15.2854 64.327 12.9121C64.6006 12.3345 64.4899 11.5918 64.4899 10.9344C64.4899 10.6225 64.5376 10.1184 64.4782 10.7715C64.3392 12.3013 63.9436 13.7897 63.8151 15.3318C63.6046 17.8578 63.6523 20.3832 63.6523 22.9168C63.6523 23.6355 64.2116 23.9944 64.2805 24.5455C64.3202 24.8633 64.8609 25.6144 65.0716 25.8485C65.2973 26.0993 65.2406 26.4301 65.6416 26.4301C66.5175 26.4301 67.3705 25.37 67.8403 24.7549C70.0428 21.8717 71.3666 18.7169 72.6566 15.3783C72.7753 15.0711 72.866 14.0834 72.866 14.4128C72.866 15.1845 72.866 15.9561 72.866 16.7278C72.866 19.9619 72.866 23.196 72.866 26.4301C72.866 27.1317 72.8377 27.5677 73.4942 27.8959" stroke="black" stroke-linecap="round"/>
<path d="M73.4942 27.8959C73.6919 28.8184 74.2263 30.3855 75.4835 30.3855C75.8913 30.3855 76.4069 27.2752 76.5305 26.7559C77.0978 24.3734 77.322 21.916 77.9382 19.5199C78.1441 18.7192 78.101 17.9404 78.101 17.1117C78.101 16.2742 78.966 15.9237 79.3575 15.2387C79.5216 14.9515 79.7471 14.956 79.7879 15.262C79.9406 16.407 80.2026 17.5453 80.4045 18.6822C81.2211 23.2814 83.0611 27.6677 84.7554 31.9909C85.068 32.7886 85.5141 33.5316 85.8955 34.2943C86.3829 35.2693 86.4636 32.6091 86.4655 32.5377C86.6532 25.3118 86.2594 18.3375 84.9183 11.2485C84.8869 11.0828 84.8016 9.49182 84.4878 9.49182C84.1552 9.49182 84.555 11.066 84.5925 11.1903C85.1788 13.1343 86.6203 14.9276 87.7452 16.5882C89.3904 19.0169 91.2076 21.362 93.0849 23.6148C93.684 24.3337 96.1496 27.7358 97.4707 27.4422C98.5265 27.2076 98.5541 23.0188 98.6225 22.3119C98.8986 19.4582 99.0413 16.6385 99.0413 13.7729C99.0413 12.6236 99.105 11.4542 99.0413 10.3062C99.0339 10.1736 98.8319 11.8793 98.8319 12.2373C98.8319 16.8882 98.3507 21.812 99.146 26.4069C99.1604 26.4905 100.071 30.0082 100.461 29.2687C101.742 26.8346 102.414 23.8257 103.183 21.1951C103.4 20.4501 103.951 16.5784 104.276 19.3454C104.731 23.2098 106.289 27.1448 108.232 30.4902C108.672 31.2479 108.974 31.9654 109.604 32.5959C110.337 33.3286 111.01 31.1331 111.187 30.688C112.178 28.1907 112.6 25.5077 113.269 22.9168C113.631 21.5137 113.876 19.9745 113.909 18.5194C113.922 17.9211 113.909 17.812 113.909 18.4728C113.909 19.5968 113.992 20.6259 114.223 21.7302C114.527 23.1854 115.053 25.8374 116.317 26.8489C116.579 27.0586 116.68 26.0027 116.736 25.7438C117.218 23.492 117.625 21.164 118.004 18.8917C118.182 17.8226 118.424 16.7872 118.818 15.7739C118.897 15.5722 118.984 14.8015 119.19 15.3783C120.057 17.8037 120.862 20.1483 122.076 22.4399C122.425 23.1005 122.782 23.8168 123.332 24.3361C123.98 24.9478 124.159 23.5647 124.286 23.1611C125.263 20.0519 125.635 16.9539 125.635 13.7031C125.635 12.4076 125.851 12.8544 126.38 13.9125C127.549 16.2504 128.76 18.564 130.079 20.8228C131.186 22.7174 132.148 24.6895 133.174 26.6279C133.482 27.2092 133.781 27.9949 134.43 28.2682C135.353 28.6567 136.573 27.4286 137.152 26.8489" stroke="black" stroke-linecap="round"/>
<path d="M135.687 27.2677C136.141 25.0471 136.524 23.1317 136.524 20.8693C136.524 19.7664 136.428 18.6182 136.629 17.5305C136.745 16.9012 136.906 15.8836 136.722 15.2387C136.706 15.1815 136.967 16.7174 137.199 17.2164C138.245 19.4704 139.095 21.8937 139.979 24.2198C140.691 26.0919 141.621 27.8794 142.388 29.734C142.439 29.8576 143.199 31.2629 143.225 30.5716C143.414 25.6714 144.574 20.8138 145.226 15.9717C145.41 14.6086 145.895 13.186 145.947 11.8185C145.983 10.9012 145.947 12.3844 145.947 12.6212C145.947 16.7282 146.119 20.7946 147.995 24.5455C148.308 25.1721 148.642 26.118 149.193 26.5465C150.116 27.2646 150.042 25.3535 150.135 24.7084C150.76 20.3995 151.782 16.1505 152.322 11.8301C152.599 9.62082 152.991 7.3959 153.474 5.22235C153.663 4.37061 153.486 6.96736 153.486 7.83987C153.486 10.8666 153.502 13.8514 153.8 16.8674C154.075 19.6468 154.785 22.5856 155.789 25.197C156.19 26.2399 156.649 27.7091 157.464 28.5242C158.429 29.4891 160.017 23.943 160.163 23.5101C161.483 19.6174 162.438 15.6136 163.328 11.6091C163.449 11.0613 163.648 9.2221 163.549 10.6552C163.353 13.4871 163.383 16.5479 163.653 19.3686C163.831 21.2219 163.946 23.583 164.584 25.3366C164.616 25.4228 164.764 26.132 164.84 26.1742C165.072 26.3029 165.45 23.9252 165.468 23.8242C166.061 20.5848 166.317 17.2944 166.457 14.0056C166.478 13.5036 166.376 9.69182 166.48 11.9348C166.679 16.211 167.309 20.3888 168.097 24.592C168.736 28.0002 169.44 31.3915 170.855 34.5735C170.935 34.754 171.692 36.7332 172.169 36.0859C173.009 34.9466 173.41 33.2725 173.798 31.9444C174.402 29.8749 174.938 27.7847 175.52 25.7089C176.037 23.8637 176.533 22.0087 177.044 20.1713C177.268 19.3645 177.148 20.5725 177.148 20.8228C177.148 21.6896 177.902 25.9247 178.288 23.0564C178.87 18.7321 178.823 14.286 178.823 9.93389C178.823 7.37507 179.139 4.48157 178.509 1.96498C177.56 -1.83227 178.195 9.78901 178.195 13.7031C178.195 14.9053 178.195 16.1074 178.195 17.3095C178.195 17.7629 178.207 15.5897 178.184 15.2271C178.075 13.5434 175.535 11.5809 174.007 13.0284C172.86 14.1153 173.292 16.7194 173.542 18.1238C173.682 18.9141 173.823 19.6855 173.996 20.4622C174.274 21.7133 173.222 19.6176 173.146 19.4384C171.918 16.5346 170.87 13.5087 170.029 10.469C169.894 9.98442 169.281 6.60793 168.667 6.36242C168.535 6.30954 168.518 7.48933 168.516 7.51414C168.363 9.39402 168.353 11.2587 168.353 13.1447C168.353 17.39 168.356 21.5098 169.819 25.546C171.276 29.5657 174.075 32.2563 178.451 32.2934C181.926 32.3228 185.195 32.158 188.014 29.8736C190.355 27.9765 192.311 25.7986 192.947 22.8005C193.3 21.1345 193.399 19.3105 191.388 19.3105C190.869 19.3105 190.685 19.3075 190.538 19.8223C190.372 20.4059 189.101 20.5785 188.654 20.6716C186.271 21.168 184.09 19.098 182.593 17.4956C181.079 15.876 180.032 13.7993 178.742 12.0046C177.184 9.83638 178.68 13.2395 178.986 14.0289C180.314 17.451 181.603 21.0176 183.71 24.0569C183.884 24.3083 184.976 25.9 185.443 25.325C186.023 24.6107 186.434 23.7405 186.874 22.9401C188.048 20.806 189.429 18.7936 190.597 16.658C191.791 14.4744 192.95 12.1571 193.784 9.80593C194.246 8.50414 194.388 8.25331 194.308 9.81756C194.162 12.66 194.11 15.484 194.11 18.3332C194.11 19.2901 194.592 16.4761 194.947 15.5878C195.074 15.2715 195.653 13.4279 196.204 13.7031C196.531 13.8667 196.724 14.4806 196.855 14.7734C197.476 16.1536 198.035 17.5819 198.507 19.0196C199.286 21.3899 199.798 23.8709 200.764 26.1742C201.392 27.6713 201.542 27.6329 201.765 25.9764C202.065 23.7451 202.171 21.3969 202.8 19.229C202.868 18.9949 203.324 17.6972 203.324 17.8446C203.324 19.0457 203.625 20.2875 203.742 21.4859C203.847 22.5622 203.901 23.8838 204.208 24.9178C204.529 26.0018 204.969 22.0891 204.999 21.8233C205.365 18.5917 205.758 15.3478 206.046 12.1094C206.069 11.8433 206.244 9.14785 206.418 10.1898C207.395 16.0493 208.573 21.9421 211.176 27.3492C212.339 29.7636 212.72 28.1667 213.061 26.3254C213.261 25.2426 213.356 24.1485 213.631 23.0797C213.76 22.5754 213.728 21.6887 213.957 22.6609C214.006 22.8711 214.083 24.0237 214.538 23.5683C215.283 22.8233 215.646 21.5746 216.004 20.625C216.681 18.8277 217.366 17.0356 218.075 15.2504C218.681 13.7238 219.744 11.7978 219.866 10.1433C219.904 9.64099 220.072 10.1947 220.076 10.3992C220.096 11.4963 220.007 12.5691 219.866 13.6566C219.558 16.0495 219.448 18.4701 219.448 20.881C219.448 22.0589 219.228 23.3891 220.076 24.3361C220.191 24.4646 220.538 25.1503 220.716 24.8247C221.524 23.3419 221.75 21.6183 222.053 19.9736C222.248 18.9184 222.111 17.8602 222.17 16.7976C222.216 15.9739 222.861 18.4054 222.914 18.6241C223.401 20.6132 224.104 22.5367 224.683 24.499C224.871 25.1364 225.37 26.7265 225.73 25.2901C226.399 22.6124 226.729 19.7977 227.091 17.0652C227.24 15.9356 227.716 12.5921 227.824 13.7264C228.337 19.1195 228.11 24.556 228.65 29.9551C228.733 30.7854 229.002 30.8814 229.499 30.1063C230.592 28.4018 231.059 26.1617 231.849 24.2896C232.659 22.3695 232.849 20.3567 233.373 18.3681C233.42 18.1874 233.477 17.1244 233.477 17.4724C233.477 19.5741 233.477 21.6759 233.477 23.7777C233.477 25.3443 233.477 26.911 233.477 28.4776C233.477 28.8426 233.268 29.6979 233.268 28.8499C233.268 25.6337 234.524 22.57 234.524 19.357C234.524 18.2945 234.524 17.2319 234.524 16.1694C234.524 14.9094 233.854 13.9613 233.268 12.9353C232.892 12.2768 231.235 12.6096 230.592 12.6096C230.27 12.6096 229.305 12.6096 229.627 12.6096C230.289 12.6096 231.041 12.2397 231.686 12.0861C232.625 11.8625 233.367 11.4754 233.687 10.5156" stroke="black" stroke-linecap="round"/>
</svg>

'''
'''--- src/pages/gamePage/assets/Right Arrow.svg ---
<svg width="29" height="44" viewBox="0 0 29 44" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M3.30727 1.30435C8.19204 3.98829 12.4 7.43202 17.062 10.4313C20.5844 12.6975 24.1794 15.4405 27.1402 18.4013C27.8432 19.1044 28.9068 19.3995 27.8343 19.9953C26.2302 20.8865 24.7084 22.591 23.2966 23.7618C19.1377 27.2106 14.9113 30.9004 11.2259 34.8555C9.73654 36.4538 7.91128 37.795 6.66239 39.599C6.02287 40.5227 5.04848 41.3008 4.51562 42.2599C4.30157 42.6452 3.30727 43.9405 3.30727 43.1855C3.30727 42.4969 3.13514 41.5585 2.96019 40.8587C2.20534 37.8393 2.17598 34.5721 1.86753 31.4875C1.19459 24.7582 1.45617 17.9641 1.45617 11.2026C1.45617 8.13885 1.45617 5.07511 1.45617 2.01137C1.45617 1.58287 1.45617 1.15438 1.45617 0.725884C1.45617 0.291969 1.44706 0.70392 1.63614 0.892997C2.42624 1.6831 5.58158 2.69268 4.46421 2.69268" stroke="black" stroke-linecap="round"/>
<path d="M3.07585 3.15546C3.74031 4.89967 3.74985 6.90933 3.19154 8.6959C3.09763 8.99643 2.8639 9.32327 2.84446 9.6343C2.82416 9.95919 2.83056 9.3046 2.89588 9.22295C3.32139 8.69106 3.48816 8.2483 4.11709 7.8989C4.70709 7.57112 5.39781 7.52161 5.96819 7.20473C6.41698 6.95541 7.43541 6.62627 7.93498 6.62627C8.63285 6.62627 7.69896 7.94842 7.57505 8.14314C6.8876 9.22342 6.33879 10.5795 5.8525 11.7682C5.4754 12.69 4.51977 13.9555 4.46417 14.9562C4.43942 15.4019 4.25955 16.2769 3.88571 16.5759C3.61802 16.7901 3.16373 17.5421 3.71859 16.9873C5.24152 15.4643 7.59751 14.7066 9.439 13.6836C10.2299 13.2442 11.7842 12.6423 12.6913 12.6423C13.4262 12.6423 14.2181 12.3572 14.1824 13.2851C14.1595 13.8821 13.3351 14.516 13.0255 15.0076C10.4769 19.0554 3.09578 31.3019 6.08389 27.5668C6.65852 26.8485 7.73223 26.6063 8.29492 25.8828C9.14868 24.7851 10.4146 24.046 11.3929 23.0676C12.8316 21.6289 14.8548 20.6723 16.5477 19.584C17.6944 18.8468 19.3389 18.042 20.6613 17.9642C21.0617 17.9407 21.7457 17.6321 21.2398 18.5427C20.8981 19.1578 20.3767 19.7442 19.9414 20.3038C18.1857 22.5611 16.6517 24.9696 14.8766 27.2197C12.8905 29.7374 10.8794 32.1748 8.83482 34.6498C8.39416 35.1833 7.96535 35.7507 7.47221 36.2438C7.1512 36.5649 6.08389 37.6048 6.08389 36.938" stroke="black" stroke-linecap="round"/>
</svg>

'''
'''--- src/pages/gamePage/assets/items/Armor.svg ---
<svg width="31" height="29" viewBox="0 0 31 29" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M4.14355 1.8266C4.96753 2.91424 6.51765 4.16724 6.51765 5.64211C6.51765 5.87506 6.76851 7.22753 6.89449 7.385C7.06115 7.59332 7.19597 8.64371 7.19597 8.60974" stroke="black" stroke-linecap="round"/>
<path d="M20.2535 1.65704C21.6222 1.95749 22.7132 3.54773 23.5509 4.62467C23.8577 5.01914 25.0886 6.8705 24.3234 7.25313" stroke="black" stroke-linecap="round"/>
<path d="M24.493 15.0537C25.4281 13.8761 26.8161 13.0697 27.8845 12.0013" stroke="black" stroke-linecap="round"/>
<path d="M24.493 22.176C26.045 21.2521 27.5444 20.4694 28.657 19.0388C29.0466 18.5379 29.5399 17.5328 30.089 17.2582" stroke="black" stroke-linecap="round"/>
<path d="M3.80438 1.48743C3.80438 4.24665 4.14354 6.75138 4.14354 9.45761" stroke="black" stroke-linecap="round"/>
<path d="M20.5927 1.48743C20.5927 3.6211 21.4405 5.68529 21.4405 7.76183C21.4405 8.21061 21.6511 10.326 21.9493 10.4751" stroke="black" stroke-linecap="round"/>
<path d="M2.78691 27.7721C2.78691 25.916 2.27817 24.1116 2.27817 22.3456C2.27817 21.1372 1.93901 19.9567 1.93901 18.7844C1.93901 16.4607 1.09112 14.1048 1.09112 11.8317C1.09112 11.6386 0.840366 11.3377 1.09112 11.323C1.5239 11.2975 1.85634 11.2739 2.27817 11.1534C3.12564 10.9113 3.91397 10.3055 4.82185 10.3055C6.24568 10.3055 7.76551 9.79677 9.26857 9.79677C11.6989 9.79677 14.1115 9.45761 16.5604 9.45761C18.4132 9.45761 20.266 9.45761 22.1188 9.45761C22.9274 9.45761 23.1363 9.35517 23.1363 10.2207C23.1363 11.2915 23.468 12.3456 23.6827 13.3956C24.0586 15.2333 24.6625 17.2695 24.6625 19.1236C24.6625 20.4147 25.0017 21.7126 25.0017 23.0239C25.0017 23.5858 25.2097 24.2569 25.3314 24.8045C25.4049 25.135 25.5513 26.2447 24.8698 25.6995C24.4916 25.3969 23.349 25.5316 22.8725 25.577C21.5508 25.7029 20.1895 25.9691 18.8969 26.2836C17.1455 26.7096 15.0689 27.4329 13.2631 27.4329C9.98539 27.4329 6.5171 27.9417 3.29564 27.9417" stroke="black" stroke-linecap="round"/>
</svg>

'''
'''--- src/pages/gamePage/assets/items/Bicycle.svg ---
<svg width="40" height="30" viewBox="0 0 40 30" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M8.17891 11.1349C6.79836 11.1349 5.1938 11.0356 3.94571 11.7672C3.29855 12.1466 1.94755 12.433 1.70616 13.2778C1.45924 14.1421 0.794048 15.1318 0.748858 16.0356C0.695123 17.1103 0.748858 18.2002 0.748858 19.2763C0.748858 21.0617 2.09271 22.6537 3.50658 23.5534C4.1004 23.9313 5.08773 24.4141 5.80761 24.4141C6.31408 24.4141 8.35003 24.714 8.65316 24.3351C8.9978 23.9043 9.62388 23.5613 10.0057 23.0704C10.5021 22.4322 10.9976 22.0088 11.3758 21.2524C11.8858 20.2323 12.1756 18.0723 11.6919 16.9841C11.4055 16.3395 11.3178 15.6681 11.0245 15.008C10.7727 14.4415 10.241 14.0503 9.95298 13.5062C9.40862 12.4779 8.21173 11.6256 7.23039 11.1349" stroke="black" stroke-linecap="round"/>
<path d="M35.0536 11.7672C33.3175 11.7672 31.5815 11.7672 29.8455 11.7672C29.3252 11.7672 28.3915 11.5854 27.9748 11.9604C27.3686 12.5061 27.0435 13.3488 26.675 14.0595C25.745 15.8529 24.8323 18.2584 24.6287 20.2951C24.4317 22.2648 24.3641 24.557 25.2873 26.3111C26.2265 28.0956 30.0542 29.1804 31.9006 28.6034C34.7165 27.7234 36.4043 25.4001 37.8113 22.842C38.5491 21.5006 39.4825 19.8722 38.3382 18.442C37.8061 17.7768 37.4875 17.2351 37.1087 16.4395C36.7793 15.7478 36.6241 14.9555 36.1602 14.3756C35.4388 13.4739 34.4611 12.9537 33.947 11.9253" stroke="black" stroke-linecap="round"/>
<path d="M10.234 12.8738C11.279 11.4527 12.3784 10.0864 13.3958 8.64065C13.9808 7.80925 14.3019 8.13127 15.2138 8.13127C16.7946 8.13127 18.3755 8.13127 19.9563 8.13127C20.9799 8.13127 22.0417 7.97318 23.1005 7.97318C23.4018 7.97318 23.7969 8.04395 24.0666 7.89414C24.6191 7.58718 24.459 8.00916 24.655 8.25422C25.7823 9.66337 28.7467 14.1717 27.9397 12.5577" stroke="black" stroke-linecap="round"/>
<path d="M23.8294 7.97314C24.6439 7.3561 25.483 6.81622 26.3237 6.23419C27.0475 5.73312 27.6934 4.74629 28.572 4.49524C29.2287 4.30761 30.9433 3.18626 30.9433 2.44012" stroke="black" stroke-linecap="round"/>
<path d="M30.9433 2.44015C29.3625 2.44015 27.7816 2.44015 26.2007 2.44015C25.2521 2.44015 26.7727 2.28207 27.0263 2.28207C27.8281 2.28207 28.5828 2.12398 29.3625 2.12398C30.4763 2.12398 31.5281 1.80781 32.6823 1.80781C33.3325 1.80781 35.52 2.13951 35.844 1.49164" stroke="black" stroke-linecap="round"/>
<path d="M18.7707 8.28932C18.7707 7.05098 18.7707 5.81264 18.7707 4.5743C18.7707 3.74415 19.0098 3.23056 18.0593 3.23056C17.7667 3.23056 16.2423 3.42459 16.4082 2.84413C16.4809 2.58975 18.548 2.75631 18.8409 2.75631C19.5026 2.75631 20.1642 2.75631 20.8258 2.75631C21.1771 2.75631 22.8557 2.69726 21.9324 3.10761C21.7361 3.19485 21.0849 3.34143 20.9839 3.46769C20.7568 3.75161 20.5648 3.24311 20.3515 3.23056C19.9425 3.2065 18.6886 2.76229 18.4545 3.23056" stroke="black" stroke-linecap="round"/>
<path d="M10.234 13.0319C14.476 13.0319 18.718 13.0319 22.96 13.0319C24.2763 13.0319 25.9114 12.9354 27.1493 13.3481" stroke="black" stroke-linecap="round"/>
<path d="M10.076 13.19C11.2831 14.0776 12.3452 15.2064 13.589 16.0356C14.2578 16.4814 15.0015 16.9116 15.609 17.4583C16.0537 17.8586 17.2194 18.8102 17.8222 18.8811C18.1797 18.9232 18.7913 18.2065 19.245 17.9677C19.7402 17.7071 20.2273 17.4479 20.7029 17.1422C21.1254 16.8705 21.7204 16.8388 22.0905 16.5098C22.4521 16.1884 23.5144 15.617 23.9875 15.5613C24.4335 15.5088 25.236 15.2241 25.5333 14.8938C26.023 14.3497 26.3592 13.506 26.9912 13.19" stroke="black" stroke-linecap="round"/>
<path d="M17.9803 16.3517C16.8178 16.3517 16.2543 16.598 15.2928 17.107C14.6818 17.4305 14.9766 19.002 14.9766 19.5924C14.9766 20.5103 15.0697 21.1434 15.3016 21.955C15.5215 22.7247 17.0838 22.6751 17.6641 22.6751C17.9071 22.6751 18.6127 22.7936 18.7707 22.5961C18.9493 22.3729 19.1767 21.991 19.403 21.8496C20.0055 21.473 20.5096 20.4451 20.5096 19.7505C20.5096 18.9842 20.5265 18.3537 19.7895 17.9325C19.177 17.5826 18.7402 17.1269 18.1384 16.8259" stroke="black" stroke-linecap="round"/>
<path d="M16.8737 20.9362C16.0271 20.9362 15.2788 21.2223 14.4672 21.2524C13.9699 21.2708 13.5548 21.5686 13.0796 21.5686C12.444 21.5686 14.3958 21.5036 14.9766 21.7618C16.3483 22.3714 14.6804 22.0703 14.1862 22.0428C13.5757 22.0089 12.3021 22.2268 11.973 21.5686" stroke="black" stroke-linecap="round"/>
<path d="M20.8258 20.1458C21.353 20.1326 21.8722 19.8296 22.3276 19.8296C23.0642 19.8296 22.0887 19.5745 21.8534 19.5222C21.1603 19.3682 22.0521 19.5615 22.2135 19.7067C22.4418 19.9122 22.7739 20.1713 23.039 20.3039" stroke="black" stroke-linecap="round"/>
</svg>

'''
'''--- src/pages/gamePage/assets/items/Car.svg ---
<svg width="57" height="23" viewBox="0 0 57 23" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M1.36854 15.6728C1.36854 14.4752 1.36854 13.2776 1.36854 12.08C1.36854 11.8368 1.02761 11.2944 1.24435 11.0776C1.48845 10.8335 3.0775 11.0421 3.30243 11.0421C6.50916 11.0421 9.68775 10.8825 12.9009 10.8825C13.7779 10.8825 14.6673 10.7228 15.5001 10.7228C16.202 10.7228 16.8547 9.92708 17.3364 9.44534C18.5872 8.19461 19.748 6.87414 21.0002 5.62192C22.0126 4.60948 22.857 3.14469 23.9631 2.25979C24.2816 2.00498 24.8413 2.29529 25.3204 2.22431C26.715 2.01769 28.1865 1.82623 29.5962 1.78076C30.706 1.74496 31.7902 1.4614 32.9051 1.4614C33.789 1.4614 34.8133 1.39131 35.6995 1.29285C36.5387 1.1996 37.3745 1.01364 38.2189 0.982362C39.1069 0.949472 38.7497 0.78833 39.4076 1.49688C40.2289 2.38133 40.9463 3.28907 41.8383 4.0961C42.3657 4.57325 42.9559 5.04521 43.4528 5.54208C43.908 5.99723 44.323 6.48321 44.7657 6.92597C44.9841 7.14434 45.0924 7.67414 45.4754 7.68888C46.8393 7.74133 48.1584 8.23279 49.5206 8.40743C50.7273 8.56214 52.0965 8.5621 53.2642 8.88647C53.8346 9.0449 54.4974 9.0176 55.0207 9.25018C55.623 9.5179 55.6594 9.012 55.6594 9.7647C55.6594 11.5744 55.6594 13.3841 55.6594 15.1938" stroke="black" stroke-linecap="round"/>
<path d="M1.20886 15.9922C2.75243 15.9922 4.29599 15.9922 5.83955 15.9922C6.13584 15.9922 7.99359 16.1575 8.06618 15.9035C8.12925 15.6827 7.91538 15.2275 7.91538 14.9543C7.91538 14.4388 8.02814 14.422 8.39441 14.076C9.28186 13.2379 10.7022 12.3558 11.9073 12.9938C13.165 13.6596 13.1107 14.5734 13.1848 15.8325C13.2073 16.215 24.384 15.9922 25.3559 15.9922C28.5233 15.9922 31.7746 15.8325 34.9011 15.8325C35.7025 15.8325 36.5038 15.8325 37.3052 15.8325C37.9543 15.8325 38.4998 15.8699 39.1237 15.9833C39.7078 16.0895 39.6169 15.9761 39.2124 15.6728" stroke="black" stroke-linecap="round"/>
<path d="M39.0528 15.5132C39.3957 13.9511 41.198 12.3196 42.8851 12.3196C44.5844 12.3196 42.8483 15.3535 44.7302 15.3535C45.9592 15.3535 47.1484 15.8325 48.394 15.8325C49.2456 15.8325 50.0972 15.8325 50.9488 15.8325C51.694 15.8325 52.4392 15.8325 53.1843 15.8325C53.7097 15.8325 55.4641 16.1163 54.7013 15.3535" stroke="black" stroke-linecap="round"/>
<path d="M42.0867 14.7148C41.0533 16.1357 40.229 19.8305 43.0447 19.6648C43.745 19.6236 43.9742 17.0158 44.0028 16.4713C44.0763 15.0748 43.1545 15.2304 42.0867 14.8745" stroke="black" stroke-linecap="round"/>
<path d="M11.2687 15.5132C10.245 15.5132 9.88737 15.4551 9.22832 16.1874C8.54333 16.9485 8.4076 18.252 7.75573 19.0261C7.27513 19.5968 7.43637 20.5967 7.43637 21.2971C7.43637 22.3663 8.13299 22.3793 9.03316 22.3793C11.9182 22.3793 13.8118 15.0341 11.2687 15.0341" stroke="black" stroke-linecap="round"/>
<path d="M39.2124 2.73885C38.4309 2.73885 37.07 2.4624 36.4181 2.9695C36.1407 3.18526 35.8318 3.31625 35.5753 3.57273C35.3674 3.78061 35.715 3.83486 35.8592 4.08725C36.1548 4.60452 36.5832 5.07398 36.8527 5.61307C37.0902 6.08788 37.5668 6.44538 37.7399 6.92599C37.8944 7.35536 38.285 7.67643 38.4052 8.09696C38.6242 8.86341 39.072 8.80665 39.7891 8.80665C40.7555 8.80665 42.6145 8.83152 43.3996 8.20342C43.7236 7.94417 44.6999 7.84857 45.1206 7.84857" stroke="black" stroke-linecap="round"/>
</svg>

'''
'''--- src/pages/gamePage/assets/items/CarLoader.svg ---
<svg width="378" height="29" viewBox="0 0 378 29" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M323.196 16.7293C323.196 15.5317 323.196 14.3342 323.196 13.1366C323.196 12.8933 322.855 12.3509 323.072 12.1341C323.316 11.89 324.905 12.0987 325.13 12.0987C328.337 12.0987 331.516 11.939 334.729 11.939C335.606 11.939 336.495 11.7793 337.328 11.7793C338.03 11.7793 338.682 10.9836 339.164 10.5019C340.415 9.25113 341.576 7.93065 342.828 6.67844C343.84 5.66599 344.685 4.20121 345.791 3.31631C346.109 3.0615 346.669 3.3518 347.148 3.28083C348.543 3.07421 350.014 2.88275 351.424 2.83727C352.534 2.80148 353.618 2.51792 354.733 2.51792C355.617 2.51792 356.641 2.44783 357.527 2.34937C358.366 2.25612 359.202 2.07015 360.047 2.03888C360.935 2.00599 360.577 1.84485 361.235 2.5534C362.057 3.43785 362.774 4.34558 363.666 5.15262C364.193 5.62977 364.784 6.10173 365.281 6.5986C365.736 7.05375 366.151 7.53973 366.593 7.98248C366.812 8.20086 366.92 8.73066 367.303 8.74539C368.667 8.79785 369.986 9.28931 371.348 9.46395C372.555 9.61865 373.924 9.61862 375.092 9.94299C375.662 10.1014 376.325 10.0741 376.848 10.3067C377.451 10.5744 377.487 10.0685 377.487 10.8212C377.487 12.6309 377.487 14.4406 377.487 16.2503" stroke="black" stroke-linecap="round"/>
<path d="M323.037 17.0488C324.58 17.0488 326.124 17.0488 327.667 17.0488C327.964 17.0488 329.821 17.2141 329.894 16.96C329.957 16.7393 329.743 16.2841 329.743 16.0108C329.743 15.4954 329.856 15.4785 330.222 15.1326C331.11 14.2945 332.53 13.4123 333.735 14.0503C334.993 14.7162 334.938 15.63 335.013 16.8891C335.035 17.2715 346.212 17.0488 347.184 17.0488C350.351 17.0488 353.602 16.8891 356.729 16.8891C357.53 16.8891 358.332 16.8891 359.133 16.8891C359.782 16.8891 360.328 16.9264 360.951 17.0399C361.536 17.1461 361.445 17.0327 361.04 16.7294" stroke="black" stroke-linecap="round"/>
<path d="M360.88 16.5697C361.223 15.0076 363.026 13.3761 364.713 13.3761C366.412 13.3761 364.676 16.41 366.558 16.41C367.787 16.41 368.976 16.889 370.222 16.889C371.073 16.889 371.925 16.889 372.777 16.889C373.522 16.889 374.267 16.889 375.012 16.889C375.537 16.889 377.292 17.1728 376.529 16.41" stroke="black" stroke-linecap="round"/>
<path d="M363.914 15.7712C362.881 17.1922 362.057 20.8869 364.872 20.7213C365.573 20.6801 365.802 18.0723 365.831 17.5277C365.904 16.1312 364.982 16.2869 363.914 15.9309" stroke="black" stroke-linecap="round"/>
<path d="M333.096 16.5696C332.073 16.5696 331.715 16.5115 331.056 17.2438C330.371 18.0049 330.235 19.3085 329.584 20.0825C329.103 20.6533 329.264 21.6532 329.264 22.3535C329.264 23.4227 329.961 23.4358 330.861 23.4358C333.746 23.4358 335.64 16.0906 333.096 16.0906" stroke="black" stroke-linecap="round"/>
<path d="M361.04 3.79543C360.259 3.79543 358.898 3.51898 358.246 4.02608C357.968 4.24184 357.66 4.37283 357.403 4.62931C357.195 4.83719 357.543 4.89144 357.687 5.14383C357.983 5.6611 358.411 6.13056 358.681 6.66965C358.918 7.14446 359.395 7.50196 359.568 7.98257C359.722 8.41194 360.113 8.73301 360.233 9.15354C360.452 9.91999 360.9 9.86323 361.617 9.86323C362.583 9.86323 364.442 9.8881 365.227 9.26C365.551 9.00075 366.528 8.90515 366.948 8.90515" stroke="black" stroke-linecap="round"/>
<path d="M321.652 15.6701C317.91 14.4227 315.156 12.7873 311.863 10.6626C309.392 9.06805 306.324 7.58908 304.238 5.504C303.391 4.6566 302.312 3.6406 301.269 3.08829C299.928 2.37819 300.848 2.12316 300.263 3.44058C297.921 8.70817 294.842 14.3596 293.594 19.9731C292.695 24.0216 291.776 21.8004 289.845 19.646C288.023 17.6141 286.921 14.9107 284.963 12.9525C283.068 11.0575 280.998 9.38507 279.075 7.5171C278.611 7.0664 273.186 1.84394 273.186 4.14516C273.186 6.6491 272 9.53233 271.123 11.8452C270.22 14.2254 268.226 17.0193 267.776 19.495C267.344 21.8725 267.56 23.8325 266.745 26.1886C266.304 27.4626 266.505 28.1729 265.235 27.4467C263.915 26.6925 262.216 25.3879 261.183 24.2761C258.964 21.8859 256.525 19.2669 254.163 17.029C251.811 14.8013 248.806 13.3539 246.463 11.1407C244.949 9.71094 242.869 8.35608 241.254 7.06415C239.991 6.05364 238.239 3.36365 236.297 3.91869C235.812 4.05709 236.105 5.80108 235.693 6.25891C234.497 7.58774 233.719 9.35146 232.421 10.6877C230.836 12.3199 228.8 13.779 227.439 15.5695C227.052 16.0791 225.839 17.4428 225.174 17.4819C221.947 17.6718 220.802 15.8271 218.606 13.6319C216.784 11.8093 216.473 8.75897 214.857 6.96349C213.419 5.36614 213.11 3.0611 210.906 2.08174C209.814 1.59616 208.93 1.62879 207.736 1.62879C206.022 1.62879 206.298 2.41896 205.018 2.98763C204.406 3.25969 203.335 4.96726 203.08 5.60466C202.594 6.82084 201.178 7.05382 200.262 7.97004C196.718 11.5146 193.773 15.5252 191.405 19.9983C190.058 22.5426 187.363 22.0114 184.862 22.0114C180.068 22.0114 176.436 21.7386 172.859 18.1613C169.532 14.8344 164.746 13.778 162.668 9.10241C161.596 6.69183 160.414 5.05716 158.138 3.79287C155.961 2.5834 155.464 0.7229 152.703 0.7229C147.493 0.7229 147.43 8.74917 145.204 12.2479C143.767 14.5061 134.288 22.7763 133.679 21.5584" stroke="black" stroke-linecap="round"/>
<path d="M134.585 21.5585C132.06 21.5585 128.317 22.1796 125.979 21.1055C123.802 20.1055 121.649 19.0016 119.638 17.7084C117.476 16.3186 115.196 15.376 113.85 12.9525C113.136 11.668 111.761 7.34094 111.007 9.9832C110.733 10.9404 108.588 11.8539 107.861 12.2983C105.07 14.0037 102.019 16.5295 99.708 18.8408C99.2795 19.2693 97.21 22.2631 96.5374 22.2631C96.0677 22.2631 96.5374 21.3236 96.5374 20.8539C96.5374 20.1074 96.5374 19.3609 96.5374 18.6143C96.5374 16.4508 94.9834 13.6031 92.8132 12.8519C88.4904 11.3555 84.581 13.6021 81.3637 16.3244C79.8355 17.6176 76.0564 22.4644 74.1166 22.4644C72.7641 22.4644 70.387 15.6292 69.9142 14.2107C69.0168 11.5183 67.5605 7.98181 65.5106 5.93184C63.3185 3.73973 63.3055 2.55154 60.7546 5.25242C57.7665 8.41633 55.4421 11.7273 53.0797 15.4186C51.622 17.6963 48.8639 19.0811 47.9715 21.6591C47.267 23.6944 47.4823 28.6688 44.675 25.8615C41.3044 22.4909 38.4118 18.6924 35.0373 15.3179C33.779 14.0595 32.7995 12.6271 31.5396 11.3672C31.2838 11.1114 29.9543 9.28461 29.9543 9.78189" stroke="black" stroke-linecap="round"/>
<path d="M29.9196 9.51255C29.2035 7.82742 28.3052 6.66961 26.4543 7.19845C25.7643 7.39558 24.7753 7.37725 24.0588 7.41939C23.3317 7.46216 22.9512 8.09615 22.4889 8.46597C21.8976 8.93906 21.5578 10.0779 21.1284 10.7219C20.1554 12.1814 19.2968 13.8037 18.5119 15.3734C17.7226 16.9522 17.0242 18.4716 16.57 20.1876C16.3337 21.0803 15.8353 22.5503 15.1629 23.2227C14.5187 23.8669 13.7635 24.4416 12.9535 24.8972C11.3717 25.787 9.10109 27.472 7.26705 27.5137C5.25591 27.5594 2.91542 26.5629 2.29 24.3739C1.97361 23.2666 1.03411 22.1939 1.03411 20.9784C1.03411 18.6632 0.502666 15.6355 1.40622 13.4895C2.09772 11.8472 2.49931 6.47471 2.49931 8.25665" stroke="black" stroke-linecap="round"/>
</svg>

'''
'''--- src/pages/gamePage/assets/items/Helmet.svg ---
<svg width="42" height="30" viewBox="0 0 42 30" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M1.16859 27.9052C1.16859 26.3649 1.09935 24.8566 1.59333 23.3747C2.01386 22.1131 2.26157 20.8138 2.66304 19.552C3.42144 17.1685 3.85029 14.675 5.21148 12.536C5.83374 11.5581 6.59118 10.5622 7.28798 9.64144C8.30305 8.30009 9.52389 6.83598 10.8039 5.74799C12.3489 4.43475 13.8107 2.95009 15.7199 2.1377C16.4655 1.82039 17.1248 1.41832 17.9379 1.28823C18.5696 1.18716 19.2504 1.22949 19.865 1.07586C21.115 0.763345 22.6743 1.00507 23.9629 1.00507C24.8488 1.00507 25.3886 1.07347 26.1574 1.50059C27.2428 2.10359 28.259 2.72695 29.3508 3.34113C30.4683 3.96971 31.4447 4.77918 32.4577 5.56708C33.5454 6.41303 34.8211 7.40989 35.6511 8.51666C36.5416 9.7039 37.4772 10.8544 38.3726 12.0483C39.2221 13.1809 39.4173 14.3944 39.7491 15.7215C40.422 18.4129 39.8199 21.4563 39.8199 24.1927C39.8199 24.7738 39.6783 25.2578 39.6783 25.8523C39.6783 26.1104 39.6935 26.3735 39.6783 26.631C39.6651 26.8559 38.5972 26.8505 38.4041 26.8827C36.3695 27.2218 34.3596 27.5506 32.3162 27.8344C30.6341 28.0681 28.8853 28.0082 27.1878 28.0468C25.7156 28.0803 24.2319 28.4716 22.7516 28.4716C20.7459 28.4716 18.7439 28.6131 16.7424 28.6131C15.1964 28.6131 13.7522 28.33 12.2433 28.33C10.6832 28.33 9.09813 28.4079 7.53968 28.33C5.41811 28.2239 -0.955636 28.1884 1.16859 28.1884" stroke="black" stroke-linecap="round"/>
<path d="M10.796 5.96037C12.3534 5.99151 13.9352 6.47033 15.4052 6.95143C16.8169 7.41342 18.2367 7.61496 19.6841 7.91102C21.7408 8.33172 23.7015 8.36722 25.8035 8.36722C26.7297 8.36722 27.9189 8.57539 28.7766 8.19418C29.276 7.97223 29.7086 7.72822 30.1924 7.48628C30.8415 7.16176 32.4285 6.44362 32.7409 5.81879" stroke="black" stroke-linecap="round"/>
<path d="M4.84966 12.3314C8.28051 12.3314 11.7219 13.2405 15.1221 13.6764C16.5272 13.8566 17.7805 13.9019 19.1492 14.2821C20.2269 14.5814 21.3792 14.8446 22.4842 15.0214C23.3983 15.1677 24.3208 15.3316 25.2372 15.4462C26.237 15.5712 27.2807 15.4762 28.2654 15.6585C30.5233 16.0767 32.8109 15.4767 34.9275 14.872C35.5162 14.7038 36.6386 14.1985 37.1299 13.8573C37.6784 13.4764 38.7986 13.2414 39.112 12.6146" stroke="black" stroke-linecap="round"/>
<path d="M2.72595 19.552C4.87839 19.552 6.77259 19.9296 8.87681 20.37C12.0675 21.0378 15.2736 21.6665 18.4492 22.3993C21.1049 23.0122 23.7141 23.5162 26.4406 23.5162C28.3673 23.5162 30.2446 23.7994 32.1746 23.7994C33.2929 23.7994 36.0055 24.2458 36.8782 23.5477C37.2713 23.2332 38.2093 23.686 38.6872 23.4848C39.1591 23.2861 40.3589 23.1733 40.5278 22.6668" stroke="black" stroke-linecap="round"/>
</svg>

'''
'''--- src/pages/gamePage/assets/items/Scooter.svg ---
<svg width="31" height="26" viewBox="0 0 31 26" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M23.1076 0.69635C23.1076 4.05615 23.0735 7.67551 24.0849 10.9123C24.363 11.8019 24.5576 12.7094 24.7616 13.6271C24.9136 14.3112 25.1058 15.0428 25.2043 15.7321C25.2326 15.9301 25.5196 16.4105 25.2795 16.3419C24.0821 15.9998 23.1026 15.8824 21.8296 15.8824C18.1069 15.8824 14.3841 15.8824 10.6614 15.8824C9.70958 15.8824 8.74851 16.1832 7.77118 16.1832C7.4972 16.1832 5.80288 16.354 6.0003 16.6008C6.38226 17.0783 6.26761 17.7472 6.26761 18.3633C6.26761 18.378 8.77771 18.7091 9.12439 18.7476C11.9944 19.0665 14.8565 19.0399 17.7699 19.0399C19.1713 19.0399 20.5589 18.8896 21.9382 18.8896C22.3005 18.8896 22.8629 18.9951 23.141 18.7726C23.3796 18.5818 23.8882 18.8967 24.1267 18.7058C24.6464 18.2901 25.5133 18.9936 25.5133 17.9874C25.5133 17.2858 25.5133 16.5841 25.5133 15.8824" stroke="black" stroke-linecap="round"/>
<path d="M18.8976 0.69635H26.8666" stroke="black" stroke-linecap="round"/>
<path d="M25.2126 19.04C23.763 19.04 23.0831 19.2306 21.838 19.9421C20.8361 20.5146 21.2257 21.437 21.4621 22.2643C21.9036 23.8096 24.5789 24.9928 26.0312 24.0686C26.8887 23.5229 31.338 22.1059 29.2389 20.4266C28.1277 19.5377 26.0194 18.7393 24.6112 18.7393" stroke="black" stroke-linecap="round"/>
<path d="M7.32011 18.8896C6.02671 18.8896 -0.0111105 18.2271 1.48959 21.2285C1.98636 22.222 2.32014 23.1053 3.11011 23.8514C4.15858 24.8416 6.43904 24.7535 7.76283 24.7535C8.8173 24.7535 9.76304 24.9995 10.0349 23.7762C10.2812 22.6677 10.8228 21.5841 11.0707 20.4683C11.2045 19.8663 10.2692 19.3752 9.80101 19.1151C9.03239 18.6881 8.34037 18.5889 7.47047 18.5889" stroke="black" stroke-linecap="round"/>
</svg>

'''
'''--- src/pages/gamePage/components/attribute/index.css ---
.left-arrow, .right-arrow {
    height: 45px;
    width: 45px;
    cursor: pointer;
}

.attribute {
    margin-top: 10px;
    display: flex;
    align-items: center;
}

.attribute-name {
    width: 100px;
}
'''
'''--- src/pages/gamePage/components/attribute/index.js ---
import './index.css'
import Left from "../../assets/Left Arrow.svg";
import Right from "../../assets/Right Arrow.svg";

    export default function Attribute({ name, attribute, handleUpdate, handleUnused, defaultUnused, unused, defaultAttr }) {
    const handleUp = () => {
        if (unused > 0) {
            handleUpdate(attribute + 1)
            handleUnused(unused - 1)
        }
    }

    const handleDown = () => {
        console.log('unused', unused);
        if (defaultUnused > unused && defaultAttr !== attribute) {
            handleUpdate(attribute - 1)
            handleUnused(unused + 1)
        }
    }

    return (
        <div className="attribute">
            <div className="attribute-name">{name}:</div>
            <img
                onClick={handleDown}
                className="left-arrow"
                src={Left}
                alt=""
            />
            <div>{attribute}</div>
            <img
                onClick={handleUp}
                className="right-arrow"
                src={Right}
                alt=""
            />
        </div>
    )
}
'''
'''--- src/pages/gamePage/components/attributes/index.css ---
.attributes-block {
    display: flex;
    flex-direction: column;
}

.attributes-save-button {
    margin-top: 15px;
}
'''
'''--- src/pages/gamePage/components/attributes/index.js ---
import './index.css'
import Attribute from "../attribute";
import {useEffect, useState} from "react";

export default function Attributes({getAttribute, attributes, setIsLoading}) {
    const [strength, setStrength] = useState(attributes.strength)
    const [health, setHealth] = useState(attributes.health_attr)
    const [unused, setUnused] = useState(attributes.unused_points)

    useEffect(() => {
        setStrength(attributes.strength)
        setHealth(attributes.health_attr)
        setUnused(attributes.unused_points)
    }, [attributes])

    const handleUpgrade = async () => {
        const newAttributes = {
            strength,
            health_attr: health,
        };
        setIsLoading(true)
        await window.contract.upgrade_attr({
            updating_attributes: newAttributes
        });
        await getAttribute()
    }

    return (
        <div className="attributes-block">
            <h2>Attributes: {unused}</h2>
            <Attribute
                handleUpdate={setStrength}
                handleUnused={setUnused}
                name="Strength"
                attribute={strength}
                defaultUnused={attributes.unused_points}
                defaultAttr={attributes.strength}
                unused={unused}
            />
            <Attribute
                handleUpdate={setHealth}
                handleUnused={setUnused}
                name="Health"
                attribute={health}
                defaultUnused={attributes.unused_points}
                defaultAttr={attributes.health_attr}
                unused={unused}
            />
            <button
                onClick={handleUpgrade}
                className="attributes-save-button"
                disabled={attributes.unused_points === 0}
            >Save
            </button>
        </div>
    )
}
'''
'''--- src/pages/gamePage/components/character/index.css ---

'''
'''--- src/pages/gamePage/components/character/index.js ---
import 'regenerator-runtime/runtime'
import React, {useState} from 'react'

import Volunteer from '../../assets/Basic volunteer.svg'
import './index.css'

export default function Character() {
    const [img, setImg] = useState(Volunteer)
    // useEffect(() => {
    //     setImg(eating ? LionEats : Lion)
    // }, [eating])
    return (
        <div className="character-card">
            <img
                src={img}
                alt="animal image"
            />
        </div>
    )
}

'''
'''--- src/pages/gamePage/components/eventModal/index.css ---
.event-modal-background {
    height: 100vh;
    width: 100vw;
    position: absolute;
    top: 0;
    left: 0;
    background-color: black;
    background-color: rgba(155, 155, 155, 0.7);
    /*opacity: 0.7;*/
}

.event-modal-wrapper {
    position: relative;
    height: 100%;
    width: 100%;
}

.event-modal {
    background-color: white;
    padding: 15px;
    position: absolute;
    top: 20%;
    left: 50%;
    transform: translate(-50%, 0);
    display: flex;
    flex-direction: column;
    align-items: center;
}

.event-modal-nft {
    max-height: 465px;
    max-width: 315px;
}

.event-description, .nft-name {
    text-align: center;
    margin: 0;
}

.event-description {
    margin-bottom: 5px;
}

.nft-name {
    margin-top: 0;
    margin-bottom: 10px;
}

.event-stats {
    display: flex;
    flex-direction: column;
    margin: 10px 0 15px 0;
}

.event-stats-exp, .event-stats-hp {
    margin: 0;
}

.event-stats-hp {

}
'''
'''--- src/pages/gamePage/components/eventModal/index.js ---
import './index.css'

export default function EventModal({ setEventModal, event }) {
    const events = {
        'Big': 'Yeah! You have delivered everything and did great job!',
        'Middle': 'You have delivered humanitarian, but, lost half of it. Cry man, it is okay.',
        'Basic': 'Heh, you tried to deliver humanitarian, but because of rockets and bombs you have lost your humanitarian and was wounded!',
    }

    return (
        <div className="event-modal-background">
            <div className="event-modal-wrapper">
                <div className="event-modal">
                    <p className="event-description">
                        {events[event.event]}
                    </p>
                    <div className="event-stats">
                        <p className="event-stats-exp">
                            Experience: +{event.event_experience}
                        </p>
                        <p className="event-stats-hp">
                            Health: -{event.event_health}
                        </p>
                    </div>
                    <button onClick={() => setEventModal(false)}>Ok</button>
                </div>
            </div>
        </div>
    )
}
'''
'''--- src/pages/gamePage/components/experience/index.css ---
.experience {
    /*background: content-box url("../../assets/LoadingBorders (1).svg") no-repeat;*/
    background-color: white;
    /*height: 45px;*/
    /*width: 263px;*/
    display: flex;
    position: relative;
    max-width: 422px;
}

.loading-bar {
    /*background: content-box url("../../assets/LoadingZone (1).svg") no-repeat;*/
    overflow: hidden;
    object-fit: cover;
    height: 52px;
    object-position: 100% 0;
    /*padding: 13px 15px 10px 15px;*/
    left: 20px;
    top: 9px;
    /*width: 246px;*/
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
}

.experience-numbers {
    position: absolute;
    left: 50%;
    transform: translate(-50%, 0);
    background-color: white;
    font-size: 12px;
}
'''
'''--- src/pages/gamePage/components/experience/index.js ---
import './index.css'
import {useInterval} from "../../../../utils/hooks";
import {useState} from "react";

export default function Experience({ exp, maxExp }) {
    const maxPercentages = exp / (40 / 100)
    const [percentages, setPercentages] = useState(0)

    useInterval(() => {
        if (percentages < maxPercentages) {
            setPercentages(percentages + 2)
        }
    },percentages < maxPercentages ? 500 : null)
    return (
        <div className="experience">
            <div className="experience-numbers">
                {exp}/{maxExp}
            </div>
        </div>

    )
}
'''
'''--- src/pages/gamePage/components/humanitarian/index.css ---
.humanitarian {
    display: flex;
    justify-content: center;align-items: center;
    padding: 5px;
    background-color: white;
}

.humanitarian-img {
    height: 75px;
    width: 75px;
}
'''
'''--- src/pages/gamePage/components/humanitarian/index.js ---
import 'regenerator-runtime/runtime'
import React, {useState} from 'react'

import './index.css'
import Humanitarian from '../../assets/Humanitarian.svg'

export default function Food() {
    const [img, setImg] = useState(Humanitarian)

    // useEffect(() => {
    //     switch (eatingTimes) {
    //         case 1:
    //             setImg(FullFood)
    //             break;
    //         default:
    //             break;
    //     }
    // }, [eatingTimes])

    return (
        <div className="humanitarian">
            <img
                src={img}
                className="humanitarian-img"
                alt="humanitarian image"
            />
        </div>
    )
}

'''
'''--- src/pages/gamePage/components/itemShop/index.css ---
.items-shop {
    width: 50%;
}
'''
'''--- src/pages/gamePage/components/itemShop/index.js ---
import './index.css'

import Helmet from '../../assets/items/Helmet.svg'
import Armor from '../../assets/items/Armor.svg'
import Car from '../../assets/items/Car.svg'
import Bicycle from '../../assets/items/Bicycle.svg'
import {useState} from "react";
import {utils} from "near-api-js";

export default function ItemShop({ getAttribute, setLoading, items }) {
    const [selectedItem, setSelectedItem] = useState(null)
    const itemsData = [
        {
            img: Helmet,
            title: 'Helmet',
            bonus: {health: 20, chance: '+2%'},
            description: 'Helmet for better safety, increase chance to get better deliver on 2%',
            itemType: 'Helmet',
            have: items.helmet,
            cost: 2
        },
        {
            img: Armor,
            title: 'Armor',
            bonus: {health: 50, chance: '+4%'},
            description: 'Armor is the best choic when you are working on humanitarian in Ukraine war zones. Increase chance to get better deliver on 4% and health on 50',
            itemType: 'Armor',
            have: items.armor,
            cost: 5
        },
        {
            img: Car,
            title: 'Car',
            bonus: {health: 25, chance: '+10%'},
            description: 'Car allows you to deliver fast that means safe. Increase chance to get better deliver on 10% and health on 25',
            itemType: 'Car',
            have: items.car,
            cost: 7
        },
        {
            img: Bicycle,
            title: 'Bicycle',
            bonus: {health: 5, chance: '+3%'},
            description: 'By bicycle is better than by foot. Increase chance to get better deliver on 3% and health on 5',
            itemType: 'Bicycle',
            have: items.bicycle,
            cost: 2
        },
    ];

    const handleSelect = (item) => {
        console.log('item', item);
        console.log('selectedItem', selectedItem);
        if (item.title === selectedItem?.title) {
            setSelectedItem(null)
        } else {
            setSelectedItem(item)
        }
    }

    const handleBuyItem = async (item) => {
        setLoading(true)
        console.log('item.cost', item.cost);
        await window.contract.buy_item(
            {
                item: item.itemType,
            },
            300000000000000, // attached GAS (optional)
            utils.format.parseNearAmount(item.cost.toString())
        );
        await getAttribute()
    }

        return (
        <div className="items-shop">
            <h3>Shop:</h3>
            <div className="item-list">
                {
                    itemsData.map(item => !item.have ? (
                        <div
                            key={item.title}
                            className="item-div"
                            onClick={() => handleSelect(item)}
                        >
                            <img
                                key={item.title}
                                src={item.img}
                                alt="smth"
                            />
                        </div>
                    ) : (
                        <div className="item-div" />
                    ))
                }
            </div>
            {
                selectedItem && (
                    <>
                        <h3>Selected Item</h3>
                        <div className="selected-item-div">
                            <div className="item-div">
                                {
                                    selectedItem && (
                                        <img
                                            src={selectedItem.img}
                                            alt="smth"
                                        />
                                    )
                                }
                            </div>
                            <div className="item-description">
                                <p>Name: {selectedItem.title}</p>
                                <p>Bonuses:
                                    {selectedItem.bonus.health ? `health: ${selectedItem.bonus.health} ${selectedItem.bonus.chance ? ', ' : ''}` : ''}
                                    {selectedItem.bonus.chance && `chance: ${selectedItem.bonus.chance}`}
                                </p>
                                <p>Description: {selectedItem.description}</p>
                            </div>
                        </div>
                        <button onClick={() => handleBuyItem(selectedItem)}>Buy</button>
                    </>
                )
            }
        </div>
    )
}
'''
'''--- src/pages/gamePage/components/itemsBar/index.css ---
.items-bar {
    width: 50%;
}

.item-div {
    background-image: url("../../assets/ItemBorder.svg");
    width: 73px;
    min-width: 73px;
    height: 71px;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
}

.item-list {
    display: flex;
}

.selected-item-div {
    display: flex;
}

.item-description p {
    margin: 0;
}
'''
'''--- src/pages/gamePage/components/itemsBar/index.js ---
import './index.css'

import Helmet from '../../assets/items/Helmet.svg'
import Armor from '../../assets/items/Armor.svg'
import Car from '../../assets/items/Car.svg'
import Bicycle from '../../assets/items/Bicycle.svg'
import {useState} from "react";

export default function ItemsBar({ items }) {
    const [selectedItem, setSelectedItem] = useState(null)
    const itemsData = [
        {
            img: Helmet, title: 'Helmet', bonus: { health: 20, chance: '+2%' }, description: 'Helmet for better safety, increase chance to get better deliver on 2%', itemType: 'Helmet', have: items.helmet
        },
        {img: Armor, title: 'Armor', bonus: { health: 50, chance: '+4%' }, description: 'Armor is the best choic when you are working on humanitarian in Ukraine war zones. Increase chance to get better deliver on 4% and health on 50', itemType: 'Armor', have: items.armor},
        {img: Car, title: 'Car', bonus: { health: 25, chance: '+10%' }, description: 'Car allows you to deliver fast that means safe. Increase chance to get better deliver on 10% and health on 25', itemType: 'Car', have: items.car},
        {img: Bicycle, title: 'Bicycle', bonus: { health: 5, chance: '+3%' }, description: 'By bicycle is better than by foot. Increase chance to get better deliver on 3% and health on 5', itemType: 'Bicycle', have: items.bicycle},
    ];

    const handleSelect = (item) => {
        console.log('item', item);
        console.log('selectedItem', selectedItem);
        if (item.title === selectedItem?.title) {
            setSelectedItem(null)
        } else {
            setSelectedItem(item)
        }
    }

    return (
        <div className="items-bar">
            <h3>Your items:</h3>
            <div className="item-list">
                {
                    itemsData.map(item => item.have ? (
                        <div key={item.title} className="item-div" onClick={() => handleSelect(item)}>
                            <img
                                src={item.img}
                                alt="smth"
                            />
                        </div>
                    ) : (
                        <div key={item.title} className="item-div" />
                    ))
                }
            </div>
            {
                selectedItem && (
                    <>
                        <h3>Selected Item</h3>
                        <div className="selected-item-div">
                            <div className="item-div">
                                {
                                    selectedItem && (
                                        <img
                                            src={selectedItem.img}
                                            alt="smth"
                                        />
                                    )
                                }
                            </div>
                            <div className="item-description">
                                <p>Name: {selectedItem.title}</p>
                                <p>Bonuses:
                                    {selectedItem.bonus.health ? `health: ${selectedItem.bonus.health} ${selectedItem.bonus.chance ? ', ' : ''}` : ''}
                                    {selectedItem.bonus.chance && `chance: ${selectedItem.bonus.chance}`}
                                </p>
                                <p>Description: {selectedItem.description}</p>
                            </div>
                        </div>
                    </>
                )
            }
        </div>
    )
}
'''
'''--- src/pages/gamePage/index.css ---
.game-page {
    display: flex;
    justify-content: space-between;
    padding: 15px;
}

.attributes {
    padding: 0 15px;
    display: flex;
    justify-content: space-between;
}

.character-buttons {
    display: flex;
    flex-direction: column;
    margin-left: 10px;
    margin-top: 15px;
}

.character-buttons button {
    height: 45px;
    margin-bottom: 10px;
}

.character-panel {
    display: flex;
    width: 50%;
}

.food-row {
    display: flex;
    align-items: center;
    margin-top: 15px;
}

.food-count {
    margin-right: 10px;
}

.items-panel {
    width: 50%;
    display: flex;
    align-items: flex-end;
    flex-direction: column;
}

.donation-row {
    display: flex;
    align-items: center;
    margin-bottom: 10px;
}

.donation-row input {
    margin: 0;
}

.animal-info {
    margin-left: 15px;
    display: flex;
    flex-direction: column;
}

.animal-info h2 {
    margin: 0 0 5px;
}

.instruction {
    display: flex;
    flex-direction: column;
    align-items: center;
}

'''
'''--- src/pages/gamePage/index.js ---
import React, {useEffect, useState} from 'react'
import Character from "./components/character";
import PageWrapper from "../../components/pageWrapper";
import {useInterval} from "../../utils/hooks";
import Humanitarian from "./components/humanitarian";
import { utils } from "near-api-js";
import Experience from "./components/experience";
import ItemsBar from "./components/itemsBar";
import EventModal from "./components/eventModal";
import ItemShop from "./components/itemShop";
import './index.css'
import Attributes from "./components/attributes";

export default function GamePage() {
    // const [isLoading, setIsLoading] = useState(true)
    // const [eating, setEating] = useState(false)
    // const [eventModal, setEventModal] = useState(false)
    // const [eatingTimes, setEatingTimes] = useState(0)
    // const [humanitarianInput, setHumanitarianInput] = useState(0)
    // const [userBalance, setUserBalance] = useState(0)
    // const [attributes, setAttributes] = useState({
    //     health: 0,
    //     max_experience: 0,
    //     attributes: {
    //         max_health: 0,
    //     },
    //     items: {
    //         helmet: false,
    //         car: false,
    //         bicycle: false,
    //         armor: false,
    //     }
    // })
    //
    // useEffect(() => {
    //     const getUserBalance = async () => {
    //         window.balance = await window.account.getAccountBalance()
    //         setUserBalance(utils.format.formatNearAmount(window.balance.available));
    //     }
    //     getUserBalance()
    //     getAttributes()
    // }, [])
    //
    // useInterval(() => {
    //     setEating(!eating)
    //     setEatingTimes(eatingTimes + 1)
    // }, eatingTimes && eatingTimes <= 10 ? 600 : null)
    //
    // const getAttributes = async () => {
    //     const card_attr = await window.contract.get_attributes();
    //     setAttributes(card_attr)
    //     setIsLoading(false)
    // }
    //
    // const deliverHumanitarian = async () => {
    //     setIsLoading(true)
    //     const card_attr = await window.contract.deliver_humanitarian();
    //     setAttributes({
    //         ...card_attr.card_attr,
    //         ...card_attr,
    //     })
    //     setEventModal(true)
    //     setIsLoading(false)
    // }
    //
    // const handleFoodInputChange = (e) => {
    //     setHumanitarianInput(e.target.value)
    // }
    //
    // const restoreHealth = async () => {
    //     setIsLoading(true)
    //     await window.contract.restore_health();
    //     setIsLoading(false)
    //     setAttributes({
    //         ...attributes,
    //         health: 100
    //     })
    // }
    //
    // const buyFood = async () => {
    //     setIsLoading(true)
    //     const contracthumanitarianCount = await window.contract.buy_humanitarian(
    //         {},
    //         300000000000000, // attached GAS (optional)
    //         utils.format.parseNearAmount(humanitarianInput || "1")
    //     );
    //     setIsLoading(false)
    //     setAttributes({
    //         ...attributes,
    //         humanitarian: contracthumanitarianCount
    //     })
    // }
    //
    // const level = attributes?.max_experience / 40 - 1

    return (
        <div>Nothing here</div>
    )
}

'''
'''--- src/pages/login/index.css ---

'''
'''--- src/pages/login/index.js ---
import 'regenerator-runtime/runtime'
import React, {useEffect, useState} from 'react'

import './index.css'
import {login} from "../../utils/utils";
import {useNavigate} from "react-router-dom";
import Loading from "../../components/loading";

export default function Login() {
    const [isLoading, setIsLoading] = useState(false)
    const navigate = useNavigate()
    useEffect(() => {
        if (window.walletConnection.isSignedIn()) {
            checkToken()
        }
    }, [])

    const handleLogin = async () => {
        await login()
        await checkToken()
    }

    const checkToken = async () => {
        setIsLoading(true)
        const hasToken = await window.contract.check_token({
            token_type: "Lion"
        });
        setIsLoading(false)
        navigate(hasToken ? "/game" : "/mint")
    }

    return (
        <main>
            <h1>Welcome to Ukrainian Volunteer mini-game!</h1>
            <p style={{textAlign: 'center'}}>
                This is a volunteer project the main goal is to help Ukrainian people with donations to humanitarian and allow getting some fun and NFT to helpers
            </p>
            <p style={{textAlign: 'center'}}>
                <button onClick={handleLogin}>Sign in</button>
            </p>
            <p>
                An application contains that parts:
            </p>
            <ol>
                <li>Mint NFT if you don't have one. This NFT will be your character</li>
                <li>Buy humanitarian and try to deliver it (all money from the game going to real humanitarian)!</li>
                <li>It is dangerous to deliver humanitarian in War zones, so it will be a good idea to buy armor or helmet..</li>
                <li>By updating your level you will have more abilities and stats.</li>
                <li>Have fun and help Ukrainian people!</li>
            </ol>
            <p>
                Go ahead and click the button below to try it out:
            </p>
            {isLoading && <Loading />}
        </main>
    )
}

'''
'''--- src/utils/hooks.js ---
import React, { useEffect, useRef } from 'react';

export function useDidMount() {
    const mountRef = useRef(false);

    useEffect(() => { mountRef.current = true }, []);

    return () => mountRef.current;
}

export function useInterval(callback, delay) {
    const savedCallback = useRef();

    // Remember the latest callback.
    useEffect(() => {
        savedCallback.current = callback;
    }, [callback]);

    // Set up the interval.
    useEffect(() => {
        function tick() {
            savedCallback.current();
        }
        if (delay !== null) {
            let id = setInterval(tick, delay);
            return () => clearInterval(id);
        }
    }, [delay]);
}
'''
'''--- src/utils/utils.js ---
import { Account, connect, Contract, keyStores, WalletConnection } from 'near-api-js'
import getConfig from "../config";

const nearConfig = getConfig('mainnet')

// Initialize contract & set global variables
export async function initContract() {
  // Initialize connection to the NEAR testnet
  window.keyStore = new keyStores.InMemoryKeyStore();
  window.nearConnection = await connect(Object.assign({ deps: { keyStore: window.keyStore } }, nearConfig))
  // Initializing Wallet based Account. It can work with NEAR testnet wallet that
  // is hosted at https://wallet.testnet.near.org
  window.walletConnection = new WalletConnection(window.nearConnection)

  // Getting the Account ID. If still unauthorized, it's just empty string
  window.accountId = window.walletConnection.getAccountId()
  window.account = await new Account(window.nearConnection.connection, "cashback.nearprotocolua.near")

  // Initializing our contract APIs by contract name and configuration
  window.contract = await new Contract(window.account || window.account, nearConfig.contractName, {
    // View methods are read only. They don't modify the state, but usually return some value.
    viewMethods: ['get_claiming_key', 'get_cashback_amount'],
    // Change methods can modify the state. But you don't receive the returned value when called.
    changeMethods: ['claim'],
  })
  console.log('window.nearConnection', window.nearConnection.connection);
}

export function logout() {
  window.walletConnection.signOut()
}

export async function login() {
  // Allow the current app to make calls to the specified contract on the
  // user's behalf.
  // This works by creating a new access key for the user's account and storing
  // the private key in localStorage.
  await window.walletConnection.requestSignIn(nearConfig.contractName)
}

'''