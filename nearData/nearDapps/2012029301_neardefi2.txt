*GitHub Repository "2012029301/neardefi2"*

'''--- .eslintrc.js ---
module.exports = {
  env: {
    browser: true,
    es2021: true,
  },
  extends: [
    "airbnb",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "plugin:prettier/recommended",
    "prettier",
  ],
  parser: "@typescript-eslint/parser",
  parserOptions: {
    ecmaFeatures: {
      jsx: true,
    },
    ecmaVersion: 12,
    sourceType: "module",
  },
  plugins: ["react", "@typescript-eslint", "prettier"],
  rules: {
    camelcase: 0,
    "prettier/prettier": "error",
    "object-curly-spacing": "off",
    "no-unused-vars": "off",
    "import/extensions": 0,
    "import/prefer-default-export": 0,
    "no-plusplus": 0,
    "no-param-reassign": 0,
    "no-shadow": "off",
    "import/no-cycle": [1, { maxDepth: 1 }],
    "no-nested-ternary": 0,
    "no-use-before-define": "off",
    "max-classes-per-file": ["error", 2],
    "no-underscore-dangle": ["error", { allowAfterSuper: true, allowAfterThis: true }],
    "dot-notation": 0,
    "no-restricted-syntax": 1,
    "no-unused-expressions": [1, { allowShortCircuit: false, allowTernary: false }],
    "no-void": [1, { allowAsStatement: true }],
    "no-console": ["error", { allow: ["warn", "error", "info"] }],
    "react/react-in-jsx-scope": 0,
    "react/prop-types": 0,
    "react/jsx-filename-extension": [1, { extensions: [".ts", ".tsx"] }],
    "react/jsx-props-no-spreading": 0,
    "react/require-default-props": 0,
    "react/function-component-definition": 0,
    "react/jsx-no-constructed-context-values": 0,
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/no-non-null-assertion": 0,
    "@typescript-eslint/no-non-null-asserted-optional-chain": 0,
    "@typescript-eslint/no-shadow": "error",
    "@typescript-eslint/ban-ts-comment": 0,
    "@typescript-eslint/no-use-before-define": ["error", { variables: false }],
  },
  settings: {
    react: {
      version: "detect",
    },
  },
};

'''
'''--- src/__mocks__/fileMock.js ---
// NOTE: This is used to mock resource imports in JSX for tests
module.exports = "";

'''
'''--- src/index.html ---
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link
      href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap"
      rel="stylesheet"
    />
    <link rel="icon" href="./assets/favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="apple-touch-icon" href="./assets/favicon.png" />
    <title>Burrow.cash</title>
  </head>

  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
    <script type="module" id="burrow-script" src="./index.tsx"></script>
  </body>
</html>

'''
'''--- src/jest.init.js ---
import "regenerator-runtime/runtime";

'''
'''--- src/main.test.js ---
beforeAll(async () => {
  // NOTE: nearlib and nearConfig are made available by near-cli/test_environment
  const near = await nearlib.connect(nearConfig);
  window.accountId = nearConfig.contractName;
  window.contract = await near.loadContract(nearConfig.contractName, {
    viewMethods: ["get_greeting"],
    changeMethods: [],
    sender: window.accountId,
  });

  window.walletConnection = {
    requestSignIn() {},
    signOut() {},
    isSignedIn() {
      return true;
    },
    getAccountId() {
      return window.accountId;
    },
  };
});

test("get_greeting", async () => {
  const message = await window.contract.get_greeting({ account_id: window.accountId });
  expect(message).toEqual("Hello");
});

'''