*GitHub Repository "eteu-technologies/near-converter"*

'''--- .eslintrc.js ---
module.exports = {
    root: true,
    env: {
        es2020: true,
        browser: true,
        node: true,
    },
    extends: ['plugin:vue/essential', 'eslint:recommended', '@vue/typescript'],
    parserOptions: {
        parser: '@typescript-eslint/parser',
    },
    rules: {
        'no-console': process.env.NODE_ENV === 'production' ? 'warn' : 'off',
        'no-debugger': process.env.NODE_ENV === 'production' ? 'warn' : 'off',
        'indent': ['error', 4],
        'arrow-parens': 'off',
        'no-unused-vars': ['warn'],
        'quotes': ['error', 'single'],
        'semi': ['error', 'always'],
        'space-before-function-paren': ['error', 'never'],
        'vue/html-indent': ['error', 4],
        'vue/max-attributes-per-line': ['error', {
            'singleline': 6,
            'multiline': {
                'max': 1,
                'allowFirstLine': true
            }
        }],
        'vue/html-closing-bracket-newline': ['error', {
            'singleline': 'never',
            'multiline': 'never'
        }],
    },
};

'''
'''--- .github/workflows/deploy.yml ---
name: deploy
on:
  push:
    branches: [ master ]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '15'
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install Vue.js CLI
        run: yarn global add @vue/cli @vue/cli-service
      - name: Install project dependencies
        run: yarn
      - name: Build the project
        run: yarn build
      - name: Add CNAME
        run: echo 'convert.eteu.dev' >> ./dist/CNAME
      - name: Deploy site to Github Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/master'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist

'''
'''--- README.md ---
# NEAR Unit Converter

Are you tired of trying to figure out how much yoctoNEAR is NEAR? Gas amount making your brain smoke again at 3am?
Or big numbers making you trouble in general?

Here's our small utility to aid with this problem - if you can use online percentage calculators, then this site shouldn't be any harder to use.

Live version: https://convert.eteu.dev

## Building etc.

```shell
# Project setup
yarn install

# Development build with HMR
yarn serve

# Production build
yarn build

# Lint
yarn lint
```

'''
'''--- babel.config.js ---
module.exports = {
    presets: ['@vue/cli-plugin-babel/preset'],
};

'''
'''--- package.json ---
{
  "name": "near-converter",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "serve": "vue-cli-service serve",
    "build": "vue-cli-service build",
    "lint": "vue-cli-service lint"
  },
  "dependencies": {
    "bootstrap-vue": "^2.21.2",
    "bootswatch": "^5.0.1",
    "core-js": "^3.6.5",
    "vue": "^2.6.11",
    "vue-class-component": "^7.2.3",
    "vue-property-decorator": "^9.1.2"
  },
  "devDependencies": {
    "@typescript-eslint/eslint-plugin": "^4.18.0",
    "@typescript-eslint/parser": "^4.18.0",
    "@vue/cli-plugin-babel": "~4.5.0",
    "@vue/cli-plugin-eslint": "~4.5.0",
    "@vue/cli-plugin-typescript": "~4.5.0",
    "@vue/cli-service": "~4.5.0",
    "@vue/eslint-config-prettier": "^6.0.0",
    "@vue/eslint-config-typescript": "^7.0.0",
    "babel-eslint": "^10.1.0",
    "eslint": "^6.7.2",
    "eslint-plugin-prettier": "^3.4.0",
    "eslint-plugin-vue": "^6.2.2",
    "node-sass": "^4.12.0",
    "prettier": "^2.3.0",
    "sass-loader": "^8.0.2",
    "typescript": "~4.1.5",
    "vue-template-compiler": "^2.6.11"
  }
}

'''
'''--- public/index.html ---
<!DOCTYPE html>
<html lang="">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <meta property="og:description" content="Unit conversion for NEAR made simple" />
    <meta property="og:title" content="NEAR Converter" />
    <meta property="og:type" content="website" />
    <link rel="icon" href="<%= BASE_URL %>favicon.ico">
    <title><%= htmlWebpackPlugin.options.title %></title>
</head>
<body>
<noscript>
    <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled.
        Please enable it to continue.</strong>
</noscript>
<div id="app"></div>
<!-- built files will be auto injected -->
</body>
</html>

'''
'''--- src/assets/svg/clipboard.svg ---
<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 384 512'><!-- Font Awesome Free 5.15.3 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d='M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z'/></svg>

'''
'''--- src/main.ts ---
import Vue from 'vue';
import App from './App.vue';
import { BootstrapVue } from 'bootstrap-vue';

import '@/assets/app.scss';

Vue.config.productionTip = false;
Vue.use(BootstrapVue);

new Vue({
    render: (h) => h(App),
}).$mount('#app');

'''
'''--- src/mixins/watcher.ts ---
import Vue from 'vue';
import Component from 'vue-class-component';

@Component
export class WithoutWatchers extends Vue {

    private _watchers: any;

    withoutWatchers(cb: () => void) {
        const watchers = this._watchers.map((watcher: { cb: any; sync: any; }) => ({ cb: watcher.cb, sync: watcher.sync }));

        for (const index in this._watchers) {
            this._watchers[index] = Object.assign(this._watchers[index], { cb: () => null, sync: true });
        }

        cb();

        for (const index in this._watchers) {
            this._watchers[index] = Object.assign(this._watchers[index], watchers[index]);
        }
    }
}

'''
'''--- src/utils/near.ts ---
// import BN from 'bn.js';

export const units = [
    'NEAR',
    'milliNEAR',
    'yoctoNEAR',
    'TGas', // Currently 1 TGas = 100 million yoctoNEAR. Subject to change in the future.
    // 'GGas',
    // 'Gas'
];

// 1 ... = x NEAR
// eslint-disable-next-line no-unused-vars
const toNearFromX: {[key: string]: (_: number) => number} = {
    'NEAR': (f: number) => f, // no-op
    'milliNEAR': (f: number) => f * 0.0001,
    'yoctoNEAR': (f: number) => f * Math.pow(10, -24),
    'TGas': (f: number) => f * Math.pow(10, -5)
};

const precisionTable: {[key: string]: number} = {
    'NEAR': 0,
    'milliNEAR': 4,
    'yoctoNEAR': 24,
    'TGas': 0
};

// X amount of Y in 1 NEAR
// eslint-disable-next-line no-unused-vars
const toXFromNear: {[key: string]: (_: number) => number} = {
    /* Y: X */
    'NEAR': (f: number) => f,
    'milliNEAR': (f: number) => f * 10000,
    'yoctoNEAR': (f: number) => f * Math.pow(10, 24),
    'TGas': (f: number) => f * Math.pow(10, 5)
};

export const convertNear = ({ value, from, to }: { value: number; from: string; to: string }): [ number, number ] => {
    const precision = precisionTable[from];

    if (from === to) {
        return [ value, precision ];
    }

    const normalized = toNearFromX[from](value);
    const converted = toXFromNear[to](normalized);

    return [ converted, precision ];
};

export const scientificToString = (value: number): string => {
    return (''+value).replace(/(-?)(\d*)\.?(\d+)e([+-]\d+)/, function(a, b, c, d, e) {
        return e < 0
            ? b + '0.' + Array(1-e-c.length).join('0') + c + d
            : b + c + d + Array(e-d.length+1).join('0');
    });
};

export const readable = (value: number, precision: number): string => {
    const hasDecimal = (value % 1) !== 0;
    return hasDecimal ? value.toFixed(precision) : scientificToString(value);
};

'''
'''--- tsconfig.json ---
{
  "compilerOptions": {
    "target": "esnext",
    "module": "esnext",
    "strict": true,
    "jsx": "preserve",
    "importHelpers": true,
    "moduleResolution": "node",
    "experimentalDecorators": true,
    "allowJs": true,
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    "sourceMap": true,
    "baseUrl": ".",
    "types": [
      "webpack-env"
    ],
    "paths": {
      "@/*": [
        "src/*"
      ]
    },
    "lib": [
      "esnext",
      "dom",
      "dom.iterable",
      "scripthost"
    ]
  },
  "include": [
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "tests/**/*.ts",
    "tests/**/*.tsx"
  ],
  "exclude": [
    "node_modules"
  ]
}

'''
'''--- vue.config.js ---
module.exports = {
    pages: {
        index: {
            entry: 'src/main.ts',
            title: 'NEAR Unit Converter',
        },
    }
};

'''