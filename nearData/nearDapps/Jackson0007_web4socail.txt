*GitHub Repository "Jackson0007/web4socail"*

'''--- .env ---
NODE_ENV=development
CONTRACT_NAME=near.yenatmi.testnet
'''
'''--- .gitpod.yml ---
tasks:
  - init: yarn
    command: yarn dev
ports:
  - port: 1234
    onOpen: open-browser

'''
'''--- README.md ---

Web4Social - Decentralize social network platform on NEAR Protocol - 100% on-chain
==================

Why Web4Social? 
===========
- Decentralize, share what you wants without got restricted 
- Using Web4 techonogy, 100% on-chain of powerful blockchain NEAR Protocol
- Share your thought and get tipped with Near  
- Your data is stored on-chain NEAR , Media files are stored on IPFS!, no one can take your files down! 

Features
===========
- Run 100% on-chain on powerful NEAR blockchain using Web4 techonogy
- Homepage: browse feed
- Create post: Photo / Text / Media post, your files will be stored on IPFS - no one can take your files down
- Favorite: Save your favorite posts!
- Donate: Want to tip someone? Do it! 
- Login / Logout with NEAR 
- Profile Page: view user posts and update user profile description 
- Share: share post to other social networks
- Comment: leave your thought!

Team introduction
===========

I worked solo on this project, learned how to deploy and write contract for Web4 and many things

Video Demo
===========
[Web4Social](https://www.youtube.com/watch?v=WnOn-FUQ7YA)

Be part of Web4Social now: 
===========
https://web4social.testnet.page/

Quick Start
===========

To run this project locally:

1. Prerequisites: Make sure you've installed [Node.js] ≥ 12
2. Install dependencies: `yarn install`
3. Run the local development server: `yarn dev` (see `package.json` for a
   full list of `scripts` you can run with `yarn`)

Now you'll have a local development environment backed by the NEAR TestNet!

Go ahead and play with the app and the code. As you make code changes, the app will automatically reload.

Exploring The Code
==================

1. The "backend" code lives in the `/contract` folder. See the README there for
   more info.
2. The frontend code lives in the `/src` folder. `/src/index.html` is a great
   place to start exploring. Note that it loads in `/src/index.js`, where you
   can learn how the frontend connects to the NEAR blockchain.
3. Tests: there are different kinds of tests for the frontend and the smart
   contract. See `contract/README` for info about how it's tested. The frontend
   code gets tested with [jest]. You can run both of these at once with `yarn
   run test`.

Deploy
======

Every smart contract in NEAR has its [own associated account][NEAR accounts]. When you run `yarn dev`, your smart contract gets deployed to the live NEAR TestNet with a throwaway account. When you're ready to make it permanent, here's how.

Step 0: Install near-cli (optional)
-------------------------------------

[near-cli] is a command line interface (CLI) for interacting with the NEAR blockchain. It was installed to the local `node_modules` folder when you ran `yarn install`, but for best ergonomics you may want to install it globally:

    yarn install --global near-cli

Or, if you'd rather use the locally-installed version, you can prefix all `near` commands with `npx`

Ensure that it's installed with `near --version` (or `npx near --version`)

Step 1: Create an account for the contract
------------------------------------------

Each account on NEAR can have at most one contract deployed to it. If you've already created an account such as `your-name.testnet`, you can deploy your contract to `web4social.your-name.testnet`. Assuming you've already created an account on [NEAR Wallet], here's how to create `web4social.your-name.testnet`:

1. Authorize NEAR CLI, following the commands it gives you:

      near login

2. Create a subaccount (replace `YOUR-NAME` below with your actual account name):

      near create-account web4social.YOUR-NAME.testnet --masterAccount YOUR-NAME.testnet

Step 2: set contract name in code
---------------------------------

Modify the line in `src/config.js` that sets the account name of the contract. Set it to the account id you used above.

    const CONTRACT_NAME = process.env.CONTRACT_NAME || 'web4social.YOUR-NAME.testnet'

Step 3: deploy!
---------------

One command:

    yarn deploy

As you can see in `package.json`, this does two things:

1. builds & deploys smart contract to NEAR TestNet
2. builds & deploys frontend code to GitHub using [gh-pages]. This will only work if the project already has a repository set up on GitHub. Feel free to modify the `deploy` script in `package.json` to deploy elsewhere

'''
'''--- babel.config.js ---
module.exports = {
  presets: ['@babel/preset-env', '@babel/preset-react'],
}

'''
'''--- contract/README.md ---
ntik Smart Contract
==================

A [smart contract] written in [AssemblyScript] for an app initialized with [create-near-app]

Quick Start
===========

Before you compile this code, you will need to install [Node.js] ≥ 12

Exploring The Code
==================

1. The main smart contract code lives in `assembly/index.ts`. You can compile
   it with the `./compile` script.
2. Tests: You can run smart contract tests with the `./test` script. This runs
   standard AssemblyScript tests using [as-pect].

  [smart contract]: https://docs.near.org/docs/develop/contracts/overview
  [AssemblyScript]: https://www.assemblyscript.org/
  [create-near-app]: https://github.com/near/create-near-app
  [Node.js]: https://nodejs.org/en/download/package-manager/
  [as-pect]: https://www.npmjs.com/package/@as-pect/cli

'''
'''--- contract/as-pect.config.js ---
module.exports = require('near-sdk-as/imports')
'''
'''--- contract/asconfig.json ---
{
  "extends": "near-sdk-as/asconfig.json"
}

'''
'''--- contract/assembly/__tests__/as-pect.d.ts ---
/// <reference types="@as-pect/assembly/types/as-pect" />
'''
'''--- contract/assembly/__tests__/main.spec.ts ---
import { setGreeting } from '..'
import { storage, Context } from 'near-sdk-as'

describe('Greeting ', () => {
  it('should be set and read', () => {
    setGreeting('hello world')
    storage.get<string>(Context.sender)
  })
})

'''
'''--- contract/assembly/as_types.d.ts ---
/// <reference types="near-sdk-as/assembly/as_types" />
'''
'''--- contract/assembly/index.ts ---
import { context, util, u128, logging, storage, Context, PersistentUnorderedMap } from 'near-sdk-as'
import { htmlResponse, preloadUrls, bodyUrl, status, Web4Request, Web4Response, WEB4_STATIC_URL_KEY, assertOwner } from "./web4";

//====================================  POST  ====================================
/**
 *  posts contains all posts of an account, each account have own posts collection
 * @param postId 
 * @param postObject 
 */

export function addPost(postId: string, postObject: string): void {
  const accountId = Context.sender;
  let posts = new PersistentUnorderedMap<string, string>(accountId + "_post");
  posts.set(postId, postObject);
}
/**
 * posts contains all posts of an account, each account have own posts collection  
 * @param accountId 
 * @param postId 
 * @returns 
 */
export function getPost(accountId: string, postId: string): string | null {
  let posts = new PersistentUnorderedMap<string, string>(accountId + "_post");
  return posts.get(postId);
}

/**
 * get posts from author 
 * @param accountId 
 * @param from 
 * @param to 
 * @returns 
 */
export function getPostsFrom(accountId: string, from: i32, to: i32): string[] {
  let posts = new PersistentUnorderedMap<string, string>(accountId + "_post");
  return posts.values(from, to);
}

/**
 * get posts id
 * @param from 
 * @param to 
 * @returns array of postId 
 */
export function getPostsId(from: i32, to: i32): string[] {
  let posts = new PersistentUnorderedMap<string, string>("posts");
  return posts.values(from, to);
}

//save postId to db if its not exist
//key: postId - value: acountId
export function setPostId(postId: string): void {
  let posts = new PersistentUnorderedMap<string, string>("posts");
  if (!posts.get(postId)) {
    posts.set(postId, Context.sender + "|" + postId);
  }
}

// ==================================== COMMENT ==================================== 
export function getComments(postId: string, from: i32, to: i32): string[] {
  let comments = new PersistentUnorderedMap<string, string>(postId);
  return comments.values(from, to);
}

export function setComment(postId: string, commentId: string, commentObject: string): void {
  let comments = new PersistentUnorderedMap<string, string>(postId);
  comments.set(commentId, commentObject);
}

//==================================== USER PROFILE ====================================

/**
 * set user Profile 
 * @param profileObject 
 */
export function setProfile(profileObject: string): void {
  let profiles = new PersistentUnorderedMap<string, string>("uprofile");
  profiles.set(Context.sender, profileObject);
}

/**
 * 
 * @param userId 
 * @returns profileObject
 */
export function getProfile(userId: string): string | null {
  let profiles = new PersistentUnorderedMap<string, string>("uprofile");
  return profiles.get(userId);
}

// ==== WEB 4 HANDLE REQUESTS ===
// Updates current static content URL in smart contract storage
export function web4_setStaticUrl(url: string): void {
  assertOwner();

  storage.set(WEB4_STATIC_URL_KEY, url);
}

//handle request 
export function web4_get(request: Web4Request): Web4Response {

  //  serving content from IPFS
  if (request.path == "/" ||
    request.path == "/upload" ||
    request.path == "/profile" ||
    request.path == "/liked" ||
    request.path == "/comment" ||
    request.path == "/single" ||
    request.path.includes("/@")
  ) {
    return bodyUrl(`${storage.getString(WEB4_STATIC_URL_KEY)!}`);
  }

  if (request.path == '/test') {
    // Render HTML with form to submit a message
    return htmlResponse("this is a test page ");
    // return bodyUrl("../asset/index.html");

  }

  if (request.path == '/messages') {
    const getMessagesUrl = '/web4/contract/guest-book.testnet/getMessages';
    // Request preload of dependency URLs
    if (!request.preloads) {
      return preloadUrls([getMessagesUrl]);
    }

    // Render HTML with messages
    return htmlResponse('messages: ' + util.bytesToString(request.preloads.get(getMessagesUrl).body)!);
  }

  if (request.path == "/test2") {
    // return bodyUrl(`${storage.getString(WEB4_STATIC_URL_KEY)!}${request.path}`);
    return bodyUrl("ipfs://bafybeiblfwnfkna3klact7t6mrd4wfsxznccof4j6tcnq4foovhxtdgpdq/");

  }

  if (request.path == "/test3") {
    return bodyUrl("ipfs://QmNVTiSRJKKqxTc52E92wq9tih8Ff2Hg7c6kUZEf82K34R/");
  }

  if (request.path == "/test4") {
    return bodyUrl("ipfs://QmQUg7TLWutE7GfT3gTwn6P3LGJ2qmgb4oMo7gV2TqvT91/");
  }

  // By default return 404 Not Found
  return status(404);
}
'''
'''--- contract/assembly/lib.ts ---
// // Exported functions will be part of the public interface for your smart contract.
// // Feel free to extract behavior to non-exported functions!
// export function getGreeting(accountId: string): string | null {
//   // This uses raw `storage.get`, a low-level way to interact with on-chain
//   // storage for simple contracts.
//   // If you have something more complex, check out persistent collections:
//   // https://docs.near.org/docs/concepts/data-storage#assemblyscript-collection-types
//   return storage.get<string>(accountId, DEFAULT_MESSAGE)
// }

'''
'''--- contract/assembly/tsconfig.json ---
{
  "extends": "assemblyscript/std/assembly.json",
  "include": [
    "./**/*.ts"
  ]
}

'''
'''--- contract/assembly/web4.ts ---
import {context, util, u128, logging, storage } from 'near-sdk-as'

// web4 

@nearBindgen
export class Web4Request {
    accountId: string | null;
    path: string;
    params: Map<string, string>;
    query: Map<string, Array<string>>;
    preloads: Map<string, Web4Response>;
}

@nearBindgen
export class Web4Response {
    contentType: string;
    status: u32;
    body: Uint8Array;
    bodyUrl: string;
    preloadUrls: string[] = [];
}

export class HtmlAttributes {
    id: string | null;
    name: string | null;
    class: string | null;
    style: string | null;

    toString(): string {
        let result = "";
        if (this.id) {
            result += "id=";
            result += this.id!;
        }
        if (this.name) {
            result += "name=";
            result += this.name!;
        }
        if (this.class) {
            result += "class=";
            result += this.class!;
        }
        if (this.style) {
            result += "style=";
            result += this.style!;
        }
        return result;
    }
}

export class HtmlFormAttributes extends HtmlAttributes {
    action: string | null;
    method: string = "POST";

    toString(): string {
        let result = super.toString();
        if (this.action) {
            result += "action=";
            result += this.action!;
        }
        if (this.method) {
            result += "method=";
            result += this.method;
        }
        return result;
    }
}

export function htmlResponse(text: string): Web4Response {
    return { contentType: 'text/html; charset=UTF-8', body: util.stringToBytes(text) };
}

export function preloadUrls(urls: string[]): Web4Response {
    return { preloadUrls: urls };
}

export function bodyUrl(url: string): Web4Response {
    return { bodyUrl: url };
}

export function status(status: u32): Web4Response {
    return { status };
}

export function assertOwner(): void {
    // NOTE: Can change this check to alow different owners
    assert(context.sender == context.contractName);
}

export const WEB4_STATIC_URL_KEY = 'web4:staticUrl';

'''
'''--- contract/compile.js ---
// This file does two things:
//
// 1. Compile the AssemblyScript contract using the scripts in package.json
//    (see buildCmd below). This will create a wasm file in the 'build' folder.
// 2. Create a symbolic link (symlink) to the generated wasm file in the root
//    project's `out` folder, for easy use with near-cli.
//
// First, import some helper libraries. `shelljs` is included in the
// devDependencies of the root project, which is why it's available here. It
// makes it easy to use *NIX-style scripting (which works on Linux distros,
// macOS, and Unix systems) on Windows as well.
const sh = require('shelljs')

// Figure out which directory the user called this script from, which we'll use
// later to set up the symlink.
const calledFromDir = sh.pwd().toString()

// For the duration of this script, we want to operate from within the
// AssemblyScript project's folder. Let's change into that directory.
sh.cd(__dirname)

// You can call this script with `node compile.js` or `node compile.js --debug`.
// Let's set a variable to track whether `--debug` was used.
const debug = process.argv.pop() === '--debug'

// Use the correct build command based on the `--debug` flag
const buildCmd = debug
  ? 'npm run build:debug'
  : 'npm run build'

// Execute the build command, storing exit code for later use
const { code } = sh.exec(buildCmd)

// Assuming this is compiled from the root project directory, link the compiled
// contract to the `out` folder –
// When running commands like `near deploy`, near-cli looks for a contract at
// <CURRENT_DIRECTORY>/out/main.wasm
if (code === 0 && calledFromDir !== __dirname) {
  const linkDir = `${calledFromDir}/out`
  const link = `${calledFromDir}/out/main.wasm`
  const packageName = require(`${__dirname}/package.json`).name
  const outFile = `./build/${debug ? 'debug' : 'release'}/${packageName}.wasm`
  sh.mkdir('-p', linkDir)
  sh.rm('-f', link)
  //fixes #831: copy-update instead of linking .- sometimes sh.ln does not work on Windows
  sh.cp('-u',outFile,link)
}

// exit script with the same code as the build command
process.exit(code)

'''
'''--- contract/model.ts ---

'''
'''--- contract/package-lock.json ---
{
  "name": "nsocial",
  "version": "0.0.1",
  "lockfileVersion": 2,
  "requires": true,
  "packages": {
    "": {
      "name": "nsocial",
      "version": "0.0.1",
      "license": "UNLICENSED",
      "dependencies": {
        "near-sdk-as": "3.1.0"
      },
      "devDependencies": {
        "shelljs": "^0.8.4"
      }
    },
    "node_modules/@as-covers/assembly": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/@as-covers/assembly/-/assembly-0.2.0.tgz",
      "integrity": "sha512-3Mo0pdLmaorJPqookq10LmJlWIpyXF/D9JWjphMtv5Th23yO537t6vMGi92uKe35d07k2xMOH/4WRHi04mlk6Q=="
    },
    "node_modules/@as-covers/core": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/@as-covers/core/-/core-0.2.1.tgz",
      "integrity": "sha512-/GGTzPB850shvL6ZiidKDmIXSpBflYfzhYyipe7HA1eijBQKKluaLSRy/JLSN53f6kp3tLrCevPXN6HA2fyuBw==",
      "dependencies": {
        "@as-covers/assembly": "^0.2.0",
        "@as-covers/glue": "^0.2.0",
        "@as-covers/transform": "^0.2.1"
      }
    },
    "node_modules/@as-covers/glue": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/@as-covers/glue/-/glue-0.2.0.tgz",
      "integrity": "sha512-oIRC3q5TA4zfNBv+UwNH10FKq1poAeRTrZUg5pmEcFNv2HpZfED30mb9fF0anNRbr7gmXrSY9iMsRSz6hkrmYQ==",
      "dependencies": {
        "csv-stringify": "^5.6.2",
        "table": "^6.7.1"
      }
    },
    "node_modules/@as-covers/transform": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/@as-covers/transform/-/transform-0.2.1.tgz",
      "integrity": "sha512-FutGj2yMIT2GOfqXrbnqSpeZ0eB5Bsnsg+BLnmqpEszthFhe/5/hKYmfNsiF2QBYZnqcIQ7dHw/z31+PlyUDug==",
      "dependencies": {
        "line-column": "^1.0.2",
        "visitor-as": "^0.6.0"
      }
    },
    "node_modules/@as-covers/transform/node_modules/assemblyscript": {
      "version": "0.18.32",
      "resolved": "https://registry.npmjs.org/assemblyscript/-/assemblyscript-0.18.32.tgz",
      "integrity": "sha512-Py6zremwGhO3nSoI/VxyVUzTZfNhTjzNzFDaUdG4JhPJHeG+FzVlEoNCrw4bE5nPc7F+P2DJ8tZQCqIt15ceKw==",
      "peer": true,
      "dependencies": {
        "binaryen": "100.0.0-nightly.20210413",
        "long": "^4.0.0"
      },
      "bin": {
        "asc": "bin/asc",
        "asinit": "bin/asinit"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/assemblyscript"
      }
    },
    "node_modules/@as-covers/transform/node_modules/binaryen": {
      "version": "100.0.0-nightly.20210413",
      "resolved": "https://registry.npmjs.org/binaryen/-/binaryen-100.0.0-nightly.20210413.tgz",
      "integrity": "sha512-EeGLIxQmJS0xnYl+SH34mNBqVMoixKd9nsE7S7z+CtS9A4eoWn3Qjav+XElgunUgXIHAI5yLnYT2TUGnLX2f1w==",
      "peer": true,
      "bin": {
        "wasm-opt": "bin/wasm-opt"
      }
    },
    "node_modules/@as-covers/transform/node_modules/visitor-as": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/visitor-as/-/visitor-as-0.6.0.tgz",
      "integrity": "sha512-4WcnwCLXWjhNkwJj9gSqh46sdIv9CyIvnSuwr61OOfrGCtN2mKcW5KE828OeEr1rYjEy0Z/CIdPBJKJRLsUgDA==",
      "dependencies": {
        "lodash.clonedeep": "^4.5.0",
        "ts-mixer": "^5.4.1"
      },
      "peerDependencies": {
        "assemblyscript": "^0.18.31"
      }
    },
    "node_modules/@as-pect/assembly": {
      "version": "6.2.0",
      "resolved": "https://registry.npmjs.org/@as-pect/assembly/-/assembly-6.2.0.tgz",
      "integrity": "sha512-jYr1jdlr0xNndIhOpTMBaPHmlhD/c3PcVCzow8wIkzLxgcSOzhBkqjip+LWPWGsiFK1vsZ8ZUaMTeK3fcnXQhw==",
      "peerDependencies": {
        "assemblyscript": "^0.19.3"
      }
    },
    "node_modules/@as-pect/cli": {
      "version": "6.2.4",
      "resolved": "https://registry.npmjs.org/@as-pect/cli/-/cli-6.2.4.tgz",
      "integrity": "sha512-OSWehx90djGxgR4RxFZKixRyh9hsMLNM/6otayAljijEPjiD1zS2lxu3WCu/DiwSWIRJUYdGOUVzw15nqvdcZQ==",
      "dependencies": {
        "@as-covers/core": "0.2.1",
        "@as-pect/assembly": "^6.2.0",
        "@as-pect/core": "^6.2.1",
        "chalk": "^4.1.1",
        "glob": "^7.1.7"
      },
      "bin": {
        "asp": "bin/asp",
        "aspect": "bin/asp"
      },
      "optionalDependencies": {
        "@as-pect/csv-reporter": "^6.2.1",
        "@as-pect/json-reporter": "^6.2.1"
      },
      "peerDependencies": {
        "assemblyscript": "^0.19.3"
      }
    },
    "node_modules/@as-pect/core": {
      "version": "6.2.1",
      "resolved": "https://registry.npmjs.org/@as-pect/core/-/core-6.2.1.tgz",
      "integrity": "sha512-JnvUb55OhGP7CYUnYtsLXttUb+FGv+6kEN9NleTbIMvU73NFJzyTCGjoZuayPNpfiUzOF96j91XuMHuinJ8BAg==",
      "dependencies": {
        "@as-pect/assembly": "^6.2.0",
        "@as-pect/snapshots": "^6.2.1",
        "chalk": "^4.1.1",
        "long": "^4.0.0"
      },
      "peerDependencies": {
        "assemblyscript": "^0.19.3"
      }
    },
    "node_modules/@as-pect/csv-reporter": {
      "version": "6.2.1",
      "resolved": "https://registry.npmjs.org/@as-pect/csv-reporter/-/csv-reporter-6.2.1.tgz",
      "integrity": "sha512-jy8ka8dEP4UY/pK/OIjHFUqs4j2Hvw3r6no6XfX1AkOd9CRLlt/JIDddlzwEqCGEfF83GSBQfQ1At86FkE7RtA==",
      "optional": true,
      "dependencies": {
        "@as-pect/core": "^6.2.1"
      }
    },
    "node_modules/@as-pect/json-reporter": {
      "version": "6.2.1",
      "resolved": "https://registry.npmjs.org/@as-pect/json-reporter/-/json-reporter-6.2.1.tgz",
      "integrity": "sha512-vsTYOiqB42+WPpec0M3apm9P2SjstUe6MfXepDvVIu2DCZzt1rkEuIIXro13LLQCnOzwXgHO/00sn+uPEjsmSQ==",
      "optional": true,
      "dependencies": {
        "@as-pect/core": "^6.2.1"
      }
    },
    "node_modules/@as-pect/snapshots": {
      "version": "6.2.1",
      "resolved": "https://registry.npmjs.org/@as-pect/snapshots/-/snapshots-6.2.1.tgz",
      "integrity": "sha512-a6xcOUaXMrR3f1n6vgGxMJxUUd6MIVm5vlQ3nZ2hDEMz1PFyEQ04OvGqqUIYHhKAeXIvD3iwz02cI8Wh9lDK7Q==",
      "dependencies": {
        "diff": "^5.0.0",
        "nearley": "^2.20.1"
      }
    },
    "node_modules/@assemblyscript/loader": {
      "version": "0.18.32",
      "resolved": "https://registry.npmjs.org/@assemblyscript/loader/-/loader-0.18.32.tgz",
      "integrity": "sha512-fq+nWvQuwASkTgchjMsnLyharobzPJIKx4KGoSlkS1ffrsnjabok2oOH7jAIFW4RMz3JXjHxMONbAmcxzyrcUw=="
    },
    "node_modules/@babel/code-frame": {
      "version": "7.12.11",
      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.12.11.tgz",
      "integrity": "sha512-Zt1yodBx1UcyiePMSkWnU4hPqhwq7hGi2nFL1LeA3EUl+q2LQx16MISgJ0+z7dnmgvP9QtIleuETGOiOH1RcIw==",
      "dependencies": {
        "@babel/highlight": "^7.10.4"
      }
    },
    "node_modules/@babel/helper-validator-identifier": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.18.6.tgz",
      "integrity": "sha512-MmetCkz9ej86nJQV+sFCxoGGrUbU3q02kgLciwkrt9QqEB7cP39oKEY0PakknEO0Gu20SskMRi+AYZ3b1TpN9g==",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/highlight": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/highlight/-/highlight-7.18.6.tgz",
      "integrity": "sha512-u7stbOuYjaPezCuLj29hNW1v64M2Md2qupEKP1fHc7WdOA3DgLh37suiSrZYY7haUB7iBeQZ9P1uiRF359do3g==",
      "dependencies": {
        "@babel/helper-validator-identifier": "^7.18.6",
        "chalk": "^2.0.0",
        "js-tokens": "^4.0.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/highlight/node_modules/ansi-styles": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
      "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
      "dependencies": {
        "color-convert": "^1.9.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/@babel/highlight/node_modules/chalk": {
      "version": "2.4.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
      "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
      "dependencies": {
        "ansi-styles": "^3.2.1",
        "escape-string-regexp": "^1.0.5",
        "supports-color": "^5.3.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/@babel/highlight/node_modules/color-convert": {
      "version": "1.9.3",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
      "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
      "dependencies": {
        "color-name": "1.1.3"
      }
    },
    "node_modules/@babel/highlight/node_modules/color-name": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
      "integrity": "sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw=="
    },
    "node_modules/@babel/highlight/node_modules/escape-string-regexp": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
      "integrity": "sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==",
      "engines": {
        "node": ">=0.8.0"
      }
    },
    "node_modules/@babel/highlight/node_modules/has-flag": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
      "integrity": "sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/@babel/highlight/node_modules/supports-color": {
      "version": "5.5.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
      "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
      "dependencies": {
        "has-flag": "^3.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/@eslint/eslintrc": {
      "version": "0.4.3",
      "resolved": "https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-0.4.3.tgz",
      "integrity": "sha512-J6KFFz5QCYUJq3pf0mjEcCJVERbzv71PUIDczuh9JkwGEzced6CO5ADLHB1rbf/+oPBtoPfMYNOpGDzCANlbXw==",
      "dependencies": {
        "ajv": "^6.12.4",
        "debug": "^4.1.1",
        "espree": "^7.3.0",
        "globals": "^13.9.0",
        "ignore": "^4.0.6",
        "import-fresh": "^3.2.1",
        "js-yaml": "^3.13.1",
        "minimatch": "^3.0.4",
        "strip-json-comments": "^3.1.1"
      },
      "engines": {
        "node": "^10.12.0 || >=12.0.0"
      }
    },
    "node_modules/@humanwhocodes/config-array": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/config-array/-/config-array-0.5.0.tgz",
      "integrity": "sha512-FagtKFz74XrTl7y6HCzQpwDfXP0yhxe9lHLD1UZxjvZIcbyRz8zTFF/yYNfSfzU414eDwZ1SrO0Qvtyf+wFMQg==",
      "dependencies": {
        "@humanwhocodes/object-schema": "^1.2.0",
        "debug": "^4.1.1",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.10.0"
      }
    },
    "node_modules/@humanwhocodes/object-schema": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/object-schema/-/object-schema-1.2.1.tgz",
      "integrity": "sha512-ZnQMnLV4e7hDlUvw8H+U8ASL02SS2Gn6+9Ac3wGGLIe7+je2AeAOxPY+izIPJDfFDb7eDjev0Us8MO1iFRN8hA=="
    },
    "node_modules/acorn": {
      "version": "7.4.1",
      "resolved": "https://registry.npmjs.org/acorn/-/acorn-7.4.1.tgz",
      "integrity": "sha512-nQyp0o1/mNdbTO1PO6kHkwSrmgZ0MT/jCCpNiwbUjGoRN4dlBhqJtoQuCnEOKzgTVwg0ZWiCoQy6SxMebQVh8A==",
      "bin": {
        "acorn": "bin/acorn"
      },
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/acorn-jsx": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz",
      "integrity": "sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==",
      "peerDependencies": {
        "acorn": "^6.0.0 || ^7.0.0 || ^8.0.0"
      }
    },
    "node_modules/ajv": {
      "version": "6.12.6",
      "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
      "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
      "dependencies": {
        "fast-deep-equal": "^3.1.1",
        "fast-json-stable-stringify": "^2.0.0",
        "json-schema-traverse": "^0.4.1",
        "uri-js": "^4.2.2"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/epoberezkin"
      }
    },
    "node_modules/ansi-colors": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/ansi-colors/-/ansi-colors-4.1.3.tgz",
      "integrity": "sha512-/6w/C21Pm1A7aZitlI5Ni/2J6FFQN8i1Cvz3kHABAAbw93v/NlvKdVOqz7CCWz/3iv/JplRSEEZ83XION15ovw==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "dependencies": {
        "color-convert": "^2.0.1"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/argparse": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz",
      "integrity": "sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==",
      "dependencies": {
        "sprintf-js": "~1.0.2"
      }
    },
    "node_modules/as-bignum": {
      "version": "0.2.18",
      "resolved": "https://registry.npmjs.org/as-bignum/-/as-bignum-0.2.18.tgz",
      "integrity": "sha512-5LODrOr7wvS643oh7PHfyRtbBO9vCcU69vNNvrqh5yovrApM9nRHDeT5XcqnaSI8TqK9ZhN12qhZnq4rdIGcwQ=="
    },
    "node_modules/asbuild": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/asbuild/-/asbuild-0.2.0.tgz",
      "integrity": "sha512-c6kE8RQORy8aGFw04NNx2IsH2jCcYwnjha9yOJ1Tv/guymky3EXZJ7thkTIjdxF1Qe3+I4ab8ku2Rqn/Xyym4A==",
      "dependencies": {
        "@as-pect/cli": "^6.0.0",
        "assemblyscript": "^0.18.31",
        "chalk": "^4.1.1",
        "eslint": "^7.17.0",
        "yargs": "^15.4.1"
      },
      "bin": {
        "asb": "bin/asb",
        "asbuild": "bin/asb",
        "assemblyscript-build": "bin/asb"
      }
    },
    "node_modules/asbuild/node_modules/assemblyscript": {
      "version": "0.18.32",
      "resolved": "https://registry.npmjs.org/assemblyscript/-/assemblyscript-0.18.32.tgz",
      "integrity": "sha512-Py6zremwGhO3nSoI/VxyVUzTZfNhTjzNzFDaUdG4JhPJHeG+FzVlEoNCrw4bE5nPc7F+P2DJ8tZQCqIt15ceKw==",
      "dependencies": {
        "binaryen": "100.0.0-nightly.20210413",
        "long": "^4.0.0"
      },
      "bin": {
        "asc": "bin/asc",
        "asinit": "bin/asinit"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/assemblyscript"
      }
    },
    "node_modules/asbuild/node_modules/binaryen": {
      "version": "100.0.0-nightly.20210413",
      "resolved": "https://registry.npmjs.org/binaryen/-/binaryen-100.0.0-nightly.20210413.tgz",
      "integrity": "sha512-EeGLIxQmJS0xnYl+SH34mNBqVMoixKd9nsE7S7z+CtS9A4eoWn3Qjav+XElgunUgXIHAI5yLnYT2TUGnLX2f1w==",
      "bin": {
        "wasm-opt": "bin/wasm-opt"
      }
    },
    "node_modules/asbuild/node_modules/cliui": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-6.0.0.tgz",
      "integrity": "sha512-t6wbgtoCXvAzst7QgXxJYqPt0usEfbgQdftEPbLL/cvv6HPE5VgvqCuAIDR0NgU52ds6rFwqrgakNLrHEjCbrQ==",
      "dependencies": {
        "string-width": "^4.2.0",
        "strip-ansi": "^6.0.0",
        "wrap-ansi": "^6.2.0"
      }
    },
    "node_modules/asbuild/node_modules/wrap-ansi": {
      "version": "6.2.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-6.2.0.tgz",
      "integrity": "sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ/SOIZwINatK9KY/tf+ZrlywOKU0UDj3ATXUBfxJXA==",
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/asbuild/node_modules/y18n": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/y18n/-/y18n-4.0.3.tgz",
      "integrity": "sha512-JKhqTOwSrqNA1NY5lSztJ1GrBiUodLMmIZuLiDaMRJ+itFd+ABVE8XBjOvIWL+rSqNDC74LCSFmlb/U4UZ4hJQ=="
    },
    "node_modules/asbuild/node_modules/yargs": {
      "version": "15.4.1",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-15.4.1.tgz",
      "integrity": "sha512-aePbxDmcYW++PaqBsJ+HYUFwCdv4LVvdnhBy78E57PIor8/OVvhMrADFFEDh8DHDFRv/O9i3lPhsENjO7QX0+A==",
      "dependencies": {
        "cliui": "^6.0.0",
        "decamelize": "^1.2.0",
        "find-up": "^4.1.0",
        "get-caller-file": "^2.0.1",
        "require-directory": "^2.1.1",
        "require-main-filename": "^2.0.0",
        "set-blocking": "^2.0.0",
        "string-width": "^4.2.0",
        "which-module": "^2.0.0",
        "y18n": "^4.0.0",
        "yargs-parser": "^18.1.2"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/asbuild/node_modules/yargs-parser": {
      "version": "18.1.3",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-18.1.3.tgz",
      "integrity": "sha512-o50j0JeToy/4K6OZcaQmW6lyXXKhq7csREXcDwk2omFPJEwUNOVtJKvmDr9EI1fAJZUyZcRF7kxGBWmRXudrCQ==",
      "dependencies": {
        "camelcase": "^5.0.0",
        "decamelize": "^1.2.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/assemblyscript": {
      "version": "0.19.23",
      "resolved": "https://registry.npmjs.org/assemblyscript/-/assemblyscript-0.19.23.tgz",
      "integrity": "sha512-fwOQNZVTMga5KRsfY80g7cpOl4PsFQczMwHzdtgoqLXaYhkhavufKb0sB0l3T1DUxpAufA0KNhlbpuuhZUwxMA==",
      "peer": true,
      "dependencies": {
        "binaryen": "102.0.0-nightly.20211028",
        "long": "^5.2.0",
        "source-map-support": "^0.5.20"
      },
      "bin": {
        "asc": "bin/asc",
        "asinit": "bin/asinit"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/assemblyscript"
      }
    },
    "node_modules/assemblyscript-json": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/assemblyscript-json/-/assemblyscript-json-1.1.0.tgz",
      "integrity": "sha512-UbE8ts8csTWQgd5TnSPN7MRV9NveuHv1bVnKmDLoo/tzjqxkmsZb3lu59Uk8H7SGoqdkDSEE049alx/nHnSdFw=="
    },
    "node_modules/assemblyscript-regex": {
      "version": "1.6.4",
      "resolved": "https://registry.npmjs.org/assemblyscript-regex/-/assemblyscript-regex-1.6.4.tgz",
      "integrity": "sha512-LiuyzuPMASyZLRgZrIktyLyZjxihEhHkzfRHv8FPDnLhBn8WefFe45jGF6Ug06/0rMMdNNRuQS3qXVLy9YyO6g=="
    },
    "node_modules/assemblyscript-temporal": {
      "version": "1.12.0",
      "resolved": "https://registry.npmjs.org/assemblyscript-temporal/-/assemblyscript-temporal-1.12.0.tgz",
      "integrity": "sha512-wpt49CdNPs0bTCn1IkssCWSFoO+hHwX/uCghQdjs+j8+PkxI+sbzfcoxabaCD4hcgY2qV7VahO4ulPXZSXrdtA==",
      "dependencies": {
        "assemblyscript-regex": "^1.6.3"
      }
    },
    "node_modules/assemblyscript/node_modules/long": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/long/-/long-5.2.0.tgz",
      "integrity": "sha512-9RTUNjK60eJbx3uz+TEGF7fUr29ZDxR5QzXcyDpeSfeH28S9ycINflOgOlppit5U+4kNTe83KQnMEerw7GmE8w==",
      "peer": true
    },
    "node_modules/astral-regex": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/astral-regex/-/astral-regex-2.0.0.tgz",
      "integrity": "sha512-Z7tMw1ytTXt5jqMcOP+OQteU1VuNK9Y02uuJtKQ1Sv69jXQKKg5cibLwGJow8yzZP+eAc18EmLGPal0bp36rvQ==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/axios": {
      "version": "0.19.2",
      "resolved": "https://registry.npmjs.org/axios/-/axios-0.19.2.tgz",
      "integrity": "sha512-fjgm5MvRHLhx+osE2xoekY70AhARk3a6hkN+3Io1jc00jtquGvxYlKlsFUhmUET0V5te6CcZI7lcv2Ym61mjHA==",
      "deprecated": "Critical security vulnerability fixed in v0.21.1. For more information, see https://github.com/axios/axios/pull/3410",
      "dependencies": {
        "follow-redirects": "1.5.10"
      }
    },
    "node_modules/balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw=="
    },
    "node_modules/base-x": {
      "version": "3.0.9",
      "resolved": "https://registry.npmjs.org/base-x/-/base-x-3.0.9.tgz",
      "integrity": "sha512-H7JU6iBHTal1gp56aKoaa//YUxEaAOUiydvrV/pILqIHXTtqxSkATOnDA2u+jZ/61sD+L/412+7kzXRtWukhpQ==",
      "dependencies": {
        "safe-buffer": "^5.0.1"
      }
    },
    "node_modules/binary-install": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/binary-install/-/binary-install-0.0.1.tgz",
      "integrity": "sha512-axr6lqB4ec/pkEOb/JMnZpfcroWv1zT48pVz1oQHG7XmGkS77vmdxmP1btuH79lWQdy9e2MVw/uW0D8siopkRg==",
      "dependencies": {
        "axios": "^0.19.0",
        "env-paths": "^2.2.0",
        "mkdirp": "^0.5.1",
        "rimraf": "^3.0.0",
        "tar": "^5.0.5",
        "universal-url": "^2.0.0"
      }
    },
    "node_modules/binaryen": {
      "version": "102.0.0-nightly.20211028",
      "resolved": "https://registry.npmjs.org/binaryen/-/binaryen-102.0.0-nightly.20211028.tgz",
      "integrity": "sha512-GCJBVB5exbxzzvyt8MGDv/MeUjs6gkXDvf4xOIItRBptYl0Tz5sm1o/uG95YK0L0VeG5ajDu3hRtkBP2kzqC5w==",
      "peer": true,
      "bin": {
        "wasm-opt": "bin/wasm-opt"
      }
    },
    "node_modules/bn.js": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-5.2.1.tgz",
      "integrity": "sha512-eXRvHzWyYPBuB4NBy0cmYQjGitUrtqwbvlzP3G6VFnNRbsZQIxQ10PbKKHt8gZ/HW/D/747aDl+QkDqg3KQLMQ=="
    },
    "node_modules/brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/bs58": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/bs58/-/bs58-4.0.1.tgz",
      "integrity": "sha512-Ok3Wdf5vOIlBrgCvTq96gBkJw+JUEzdBgyaza5HLtPm7yTHkjRy8+JzNyHF7BHa0bNWOQIp3m5YF0nnFcOIKLw==",
      "dependencies": {
        "base-x": "^3.0.2"
      }
    },
    "node_modules/buffer-from": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.2.tgz",
      "integrity": "sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==",
      "peer": true
    },
    "node_modules/callsites": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
      "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/camelcase": {
      "version": "5.3.1",
      "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz",
      "integrity": "sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/chalk": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
      "dependencies": {
        "ansi-styles": "^4.1.0",
        "supports-color": "^7.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/chalk?sponsor=1"
      }
    },
    "node_modules/chownr": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/chownr/-/chownr-1.1.4.tgz",
      "integrity": "sha512-jJ0bqzaylmJtVnNgzTeSOs8DPavpbYgEr/b0YL8/2GO3xJEhInFmhKMUnEJQjZumK7KXGFhUy89PrsJWlakBVg=="
    },
    "node_modules/cliui": {
      "version": "7.0.4",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-7.0.4.tgz",
      "integrity": "sha512-OcRE68cOsVMXp1Yvonl/fzkQOyjLSu/8bhPDfQt0e0/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==",
      "dependencies": {
        "string-width": "^4.2.0",
        "strip-ansi": "^6.0.0",
        "wrap-ansi": "^7.0.0"
      }
    },
    "node_modules/color-convert": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
      "dependencies": {
        "color-name": "~1.1.4"
      },
      "engines": {
        "node": ">=7.0.0"
      }
    },
    "node_modules/color-name": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA=="
    },
    "node_modules/commander": {
      "version": "2.20.3",
      "resolved": "https://registry.npmjs.org/commander/-/commander-2.20.3.tgz",
      "integrity": "sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ=="
    },
    "node_modules/concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg=="
    },
    "node_modules/cross-spawn": {
      "version": "7.0.3",
      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz",
      "integrity": "sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==",
      "dependencies": {
        "path-key": "^3.1.0",
        "shebang-command": "^2.0.0",
        "which": "^2.0.1"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/csv-stringify": {
      "version": "5.6.5",
      "resolved": "https://registry.npmjs.org/csv-stringify/-/csv-stringify-5.6.5.tgz",
      "integrity": "sha512-PjiQ659aQ+fUTQqSrd1XEDnOr52jh30RBurfzkscaE2tPaFsDH5wOAHJiw8XAHphRknCwMUE9KRayc4K/NbO8A=="
    },
    "node_modules/debug": {
      "version": "4.3.4",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.4.tgz",
      "integrity": "sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==",
      "dependencies": {
        "ms": "2.1.2"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/decamelize": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz",
      "integrity": "sha512-z2S+W9X73hAUUki+N+9Za2lBlun89zigOyGrsax+KUQ6wKW4ZoWpEYBkGhQjwAjjDCkWxhY0VKEhk8wzY7F5cA==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/deep-is": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz",
      "integrity": "sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ=="
    },
    "node_modules/diff": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/diff/-/diff-5.1.0.tgz",
      "integrity": "sha512-D+mk+qE8VC/PAUrlAU34N+VfXev0ghe5ywmpqrawphmVZc1bEfn56uo9qpyGp1p4xpzOHkSW4ztBd6L7Xx4ACw==",
      "engines": {
        "node": ">=0.3.1"
      }
    },
    "node_modules/discontinuous-range": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/discontinuous-range/-/discontinuous-range-1.0.0.tgz",
      "integrity": "sha512-c68LpLbO+7kP/b1Hr1qs8/BJ09F5khZGTxqxZuhzxpmwJKOgRFHJWIb9/KmqnqHhLdO55aOxFH/EGBvUQbL/RQ=="
    },
    "node_modules/doctrine": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-3.0.0.tgz",
      "integrity": "sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==",
      "dependencies": {
        "esutils": "^2.0.2"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A=="
    },
    "node_modules/enquirer": {
      "version": "2.3.6",
      "resolved": "https://registry.npmjs.org/enquirer/-/enquirer-2.3.6.tgz",
      "integrity": "sha512-yjNnPr315/FjS4zIsUxYguYUPP2e1NK4d7E7ZOLiyYCcbFBiTMyID+2wvm2w6+pZ/odMA7cRkjhsPbltwBOrLg==",
      "dependencies": {
        "ansi-colors": "^4.1.1"
      },
      "engines": {
        "node": ">=8.6"
      }
    },
    "node_modules/env-paths": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/env-paths/-/env-paths-2.2.1.tgz",
      "integrity": "sha512-+h1lkLKhZMTYjog1VEpJNG7NZJWcuc2DDk/qsqSTRRCOXiLjeQ1d1/udrUGhqMxUgAlwKNZ0cf2uqan5GLuS2A==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/escalade": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.1.1.tgz",
      "integrity": "sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/escape-string-regexp": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
      "integrity": "sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/eslint": {
      "version": "7.32.0",
      "resolved": "https://registry.npmjs.org/eslint/-/eslint-7.32.0.tgz",
      "integrity": "sha512-VHZ8gX+EDfz+97jGcgyGCyRia/dPOd6Xh9yPv8Bl1+SoaIwD+a/vlrOmGRUyOYu7MwUhc7CxqeaDZU13S4+EpA==",
      "dependencies": {
        "@babel/code-frame": "7.12.11",
        "@eslint/eslintrc": "^0.4.3",
        "@humanwhocodes/config-array": "^0.5.0",
        "ajv": "^6.10.0",
        "chalk": "^4.0.0",
        "cross-spawn": "^7.0.2",
        "debug": "^4.0.1",
        "doctrine": "^3.0.0",
        "enquirer": "^2.3.5",
        "escape-string-regexp": "^4.0.0",
        "eslint-scope": "^5.1.1",
        "eslint-utils": "^2.1.0",
        "eslint-visitor-keys": "^2.0.0",
        "espree": "^7.3.1",
        "esquery": "^1.4.0",
        "esutils": "^2.0.2",
        "fast-deep-equal": "^3.1.3",
        "file-entry-cache": "^6.0.1",
        "functional-red-black-tree": "^1.0.1",
        "glob-parent": "^5.1.2",
        "globals": "^13.6.0",
        "ignore": "^4.0.6",
        "import-fresh": "^3.0.0",
        "imurmurhash": "^0.1.4",
        "is-glob": "^4.0.0",
        "js-yaml": "^3.13.1",
        "json-stable-stringify-without-jsonify": "^1.0.1",
        "levn": "^0.4.1",
        "lodash.merge": "^4.6.2",
        "minimatch": "^3.0.4",
        "natural-compare": "^1.4.0",
        "optionator": "^0.9.1",
        "progress": "^2.0.0",
        "regexpp": "^3.1.0",
        "semver": "^7.2.1",
        "strip-ansi": "^6.0.0",
        "strip-json-comments": "^3.1.0",
        "table": "^6.0.9",
        "text-table": "^0.2.0",
        "v8-compile-cache": "^2.0.3"
      },
      "bin": {
        "eslint": "bin/eslint.js"
      },
      "engines": {
        "node": "^10.12.0 || >=12.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/eslint-scope": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-5.1.1.tgz",
      "integrity": "sha512-2NxwbF/hZ0KpepYN0cNbo+FN6XoK7GaHlQhgx/hIZl6Va0bF45RQOOwhLIy8lQDbuCiadSLCBnH2CFYquit5bw==",
      "dependencies": {
        "esrecurse": "^4.3.0",
        "estraverse": "^4.1.1"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/eslint-utils": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/eslint-utils/-/eslint-utils-2.1.0.tgz",
      "integrity": "sha512-w94dQYoauyvlDc43XnGB8lU3Zt713vNChgt4EWwhXAP2XkBvndfxF0AgIqKOOasjPIPzj9JqgwkwbCYD0/V3Zg==",
      "dependencies": {
        "eslint-visitor-keys": "^1.1.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/mysticatea"
      }
    },
    "node_modules/eslint-utils/node_modules/eslint-visitor-keys": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-1.3.0.tgz",
      "integrity": "sha512-6J72N8UNa462wa/KFODt/PJ3IU60SDpC3QXC1Hjc1BXXpfL2C9R5+AU7jhe0F6GREqVMh4Juu+NY7xn+6dipUQ==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/eslint-visitor-keys": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-2.1.0.tgz",
      "integrity": "sha512-0rSmRBzXgDzIsD6mGdJgevzgezI534Cer5L/vyMX0kHzT/jiB43jRhd9YUlMGYLQy2zprNmoT8qasCGtY+QaKw==",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/espree": {
      "version": "7.3.1",
      "resolved": "https://registry.npmjs.org/espree/-/espree-7.3.1.tgz",
      "integrity": "sha512-v3JCNCE64umkFpmkFGqzVKsOT0tN1Zr+ueqLZfpV1Ob8e+CEgPWa+OxCoGH3tnhimMKIaBm4m/vaRpJ/krRz2g==",
      "dependencies": {
        "acorn": "^7.4.0",
        "acorn-jsx": "^5.3.1",
        "eslint-visitor-keys": "^1.3.0"
      },
      "engines": {
        "node": "^10.12.0 || >=12.0.0"
      }
    },
    "node_modules/espree/node_modules/eslint-visitor-keys": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-1.3.0.tgz",
      "integrity": "sha512-6J72N8UNa462wa/KFODt/PJ3IU60SDpC3QXC1Hjc1BXXpfL2C9R5+AU7jhe0F6GREqVMh4Juu+NY7xn+6dipUQ==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/esprima": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz",
      "integrity": "sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==",
      "bin": {
        "esparse": "bin/esparse.js",
        "esvalidate": "bin/esvalidate.js"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/esquery": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/esquery/-/esquery-1.4.0.tgz",
      "integrity": "sha512-cCDispWt5vHHtwMY2YrAQ4ibFkAL8RbH5YGBnZBc90MolvvfkkQcJro/aZiAQUlQ3qgrYS6D6v8Gc5G5CQsc9w==",
      "dependencies": {
        "estraverse": "^5.1.0"
      },
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/esquery/node_modules/estraverse": {
      "version": "5.3.0",
      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz",
      "integrity": "sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==",
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/esrecurse": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz",
      "integrity": "sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==",
      "dependencies": {
        "estraverse": "^5.2.0"
      },
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/esrecurse/node_modules/estraverse": {
      "version": "5.3.0",
      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz",
      "integrity": "sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==",
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/estraverse": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-4.3.0.tgz",
      "integrity": "sha512-39nnKffWz8xN1BU/2c79n9nB9HDzo0niYUqx6xyqUnyoAnQyyWpOTdZEeiCch8BBu515t4wp9ZmgVfVhn9EBpw==",
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/esutils": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/fast-deep-equal": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
      "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q=="
    },
    "node_modules/fast-json-stable-stringify": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
      "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw=="
    },
    "node_modules/fast-levenshtein": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",
      "integrity": "sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw=="
    },
    "node_modules/file-entry-cache": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-6.0.1.tgz",
      "integrity": "sha512-7Gps/XWymbLk2QLYK4NzpMOrYjMhdIxXuIvy2QBsLE6ljuodKvdkWs/cpyJJ3CVIVpH0Oi1Hvg1ovbMzLdFBBg==",
      "dependencies": {
        "flat-cache": "^3.0.4"
      },
      "engines": {
        "node": "^10.12.0 || >=12.0.0"
      }
    },
    "node_modules/find-up": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz",
      "integrity": "sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==",
      "dependencies": {
        "locate-path": "^5.0.0",
        "path-exists": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/flat-cache": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/flat-cache/-/flat-cache-3.0.4.tgz",
      "integrity": "sha512-dm9s5Pw7Jc0GvMYbshN6zchCA9RgQlzzEZX3vylR9IqFfS8XciblUXOKfW6SiuJ0e13eDYZoZV5wdrev7P3Nwg==",
      "dependencies": {
        "flatted": "^3.1.0",
        "rimraf": "^3.0.2"
      },
      "engines": {
        "node": "^10.12.0 || >=12.0.0"
      }
    },
    "node_modules/flatted": {
      "version": "3.2.6",
      "resolved": "https://registry.npmjs.org/flatted/-/flatted-3.2.6.tgz",
      "integrity": "sha512-0sQoMh9s0BYsm+12Huy/rkKxVu4R1+r96YX5cG44rHV0pQ6iC3Q+mkoMFaGWObMFYQxCVT+ssG1ksneA2MI9KQ=="
    },
    "node_modules/follow-redirects": {
      "version": "1.5.10",
      "resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.5.10.tgz",
      "integrity": "sha512-0V5l4Cizzvqt5D44aTXbFZz+FtyXV1vrDN6qrelxtfYQKW0KO0W2T/hkE8xvGa/540LkZlkaUjO4ailYTFtHVQ==",
      "dependencies": {
        "debug": "=3.1.0"
      },
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/follow-redirects/node_modules/debug": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/debug/-/debug-3.1.0.tgz",
      "integrity": "sha512-OX8XqP7/1a9cqkxYw2yXss15f26NKWBpDXQd0/uK/KPqdQhxbPa994hnzjcE2VqQpDslf55723cKPUOGSmMY3g==",
      "dependencies": {
        "ms": "2.0.0"
      }
    },
    "node_modules/follow-redirects/node_modules/ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A=="
    },
    "node_modules/fs-minipass": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/fs-minipass/-/fs-minipass-2.1.0.tgz",
      "integrity": "sha512-V/JgOLFCS+R6Vcq0slCuaeWEdNC3ouDlJMNIsacH2VtALiu9mV4LPrHc5cDl8k5aw6J8jwgWWpiTo5RYhmIzvg==",
      "dependencies": {
        "minipass": "^3.0.0"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/fs.realpath": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
      "integrity": "sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw=="
    },
    "node_modules/function-bind": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz",
      "integrity": "sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A==",
      "dev": true
    },
    "node_modules/functional-red-black-tree": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/functional-red-black-tree/-/functional-red-black-tree-1.0.1.tgz",
      "integrity": "sha512-dsKNQNdj6xA3T+QlADDA7mOSlX0qiMINjn0cgr+eGHGsbSHzTabcIogz2+p/iqP1Xs6EP/sS2SbqH+brGTbq0g=="
    },
    "node_modules/get-caller-file": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz",
      "integrity": "sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==",
      "engines": {
        "node": "6.* || 8.* || >= 10.*"
      }
    },
    "node_modules/glob": {
      "version": "7.2.3",
      "resolved": "https://registry.npmjs.org/glob/-/glob-7.2.3.tgz",
      "integrity": "sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==",
      "dependencies": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^3.1.1",
        "once": "^1.3.0",
        "path-is-absolute": "^1.0.0"
      },
      "engines": {
        "node": "*"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "dependencies": {
        "is-glob": "^4.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/globals": {
      "version": "13.16.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-13.16.0.tgz",
      "integrity": "sha512-A1lrQfpNF+McdPOnnFqY3kSN0AFTy485bTi1bkLk4mVPODIUEcSfhHgRqA+QdXPksrSTTztYXx37NFV+GpGk3Q==",
      "dependencies": {
        "type-fest": "^0.20.2"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/has": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/has/-/has-1.0.3.tgz",
      "integrity": "sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==",
      "dev": true,
      "dependencies": {
        "function-bind": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4.0"
      }
    },
    "node_modules/has-flag": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/hasurl": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/hasurl/-/hasurl-1.0.0.tgz",
      "integrity": "sha512-43ypUd3DbwyCT01UYpA99AEZxZ4aKtRxWGBHEIbjcOsUghd9YUON0C+JF6isNjaiwC/UF5neaUudy6JS9jZPZQ==",
      "engines": {
        "node": ">= 4"
      }
    },
    "node_modules/ignore": {
      "version": "4.0.6",
      "resolved": "https://registry.npmjs.org/ignore/-/ignore-4.0.6.tgz",
      "integrity": "sha512-cyFDKrqc/YdcWFniJhzI42+AzS+gNwmUzOSFcRCQYwySuBBBy/KjuxWLZ/FHEH6Moq1NizMOBWyTcv8O4OZIMg==",
      "engines": {
        "node": ">= 4"
      }
    },
    "node_modules/import-fresh": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.0.tgz",
      "integrity": "sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==",
      "dependencies": {
        "parent-module": "^1.0.0",
        "resolve-from": "^4.0.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/imurmurhash": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
      "integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==",
      "engines": {
        "node": ">=0.8.19"
      }
    },
    "node_modules/inflight": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
      "integrity": "sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==",
      "dependencies": {
        "once": "^1.3.0",
        "wrappy": "1"
      }
    },
    "node_modules/inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ=="
    },
    "node_modules/interpret": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/interpret/-/interpret-1.4.0.tgz",
      "integrity": "sha512-agE4QfB2Lkp9uICn7BAqoscw4SZP9kTE2hxiFI3jBPmXJfdqiahTbUuKGsMoN2GtqL9AxhYioAcVvgsb1HvRbA==",
      "dev": true,
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/is-core-module": {
      "version": "2.9.0",
      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.9.0.tgz",
      "integrity": "sha512-+5FPy5PnwmO3lvfMb0AsoPaBG+5KHUI0wYFXOtYPnVVVspTFUuMZNfNaNVRt3FZadstu2c8x23vykRW/NBoU6A==",
      "dev": true,
      "dependencies": {
        "has": "^1.0.3"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-glob": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
      "dependencies": {
        "is-extglob": "^2.1.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/isarray": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
      "integrity": "sha512-VLghIWNM6ELQzo7zwmcg0NmTVyWKYjvIeM83yjp0wRDTmUnrM678fQbcKBo6n2CJEF0szoG//ytg+TKla89ALQ=="
    },
    "node_modules/isexe": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
      "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw=="
    },
    "node_modules/isobject": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/isobject/-/isobject-2.1.0.tgz",
      "integrity": "sha512-+OUdGJlgjOBZDfxnDjYYG6zp487z0JGNQq3cYQYg5f5hKR+syHMsaztzGeml/4kGG55CSpKSpWTY+jYGgsHLgA==",
      "dependencies": {
        "isarray": "1.0.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/js-base64": {
      "version": "3.7.2",
      "resolved": "https://registry.npmjs.org/js-base64/-/js-base64-3.7.2.tgz",
      "integrity": "sha512-NnRs6dsyqUXejqk/yv2aiXlAvOs56sLkX6nUdeaNezI5LFFLlsZjOThmwnrcwh5ZZRwZlCMnVAY3CvhIhoVEKQ=="
    },
    "node_modules/js-tokens": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ=="
    },
    "node_modules/js-yaml": {
      "version": "3.14.1",
      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-3.14.1.tgz",
      "integrity": "sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==",
      "dependencies": {
        "argparse": "^1.0.7",
        "esprima": "^4.0.0"
      },
      "bin": {
        "js-yaml": "bin/js-yaml.js"
      }
    },
    "node_modules/json-schema-traverse": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg=="
    },
    "node_modules/json-stable-stringify-without-jsonify": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz",
      "integrity": "sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw=="
    },
    "node_modules/levn": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/levn/-/levn-0.4.1.tgz",
      "integrity": "sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==",
      "dependencies": {
        "prelude-ls": "^1.2.1",
        "type-check": "~0.4.0"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/line-column": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/line-column/-/line-column-1.0.2.tgz",
      "integrity": "sha512-Ktrjk5noGYlHsVnYWh62FLVs4hTb8A3e+vucNZMgPeAOITdshMSgv4cCZQeRDjm7+goqmo6+liZwTXo+U3sVww==",
      "dependencies": {
        "isarray": "^1.0.0",
        "isobject": "^2.0.0"
      }
    },
    "node_modules/locate-path": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz",
      "integrity": "sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==",
      "dependencies": {
        "p-locate": "^4.1.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/lodash.clonedeep": {
      "version": "4.5.0",
      "resolved": "https://registry.npmjs.org/lodash.clonedeep/-/lodash.clonedeep-4.5.0.tgz",
      "integrity": "sha512-H5ZhCF25riFd9uB5UCkVKo61m3S/xZk1x4wA6yp/L3RFP6Z/eHH1ymQcGLo7J3GMPfm0V/7m1tryHuGVxpqEBQ=="
    },
    "node_modules/lodash.merge": {
      "version": "4.6.2",
      "resolved": "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz",
      "integrity": "sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ=="
    },
    "node_modules/lodash.sortby": {
      "version": "4.7.0",
      "resolved": "https://registry.npmjs.org/lodash.sortby/-/lodash.sortby-4.7.0.tgz",
      "integrity": "sha512-HDWXG8isMntAyRF5vZ7xKuEvOhT4AhlRt/3czTSjvGUxjYCBVRQY48ViDHyfYz9VIoBkW4TMGQNapx+l3RUwdA=="
    },
    "node_modules/lodash.truncate": {
      "version": "4.4.2",
      "resolved": "https://registry.npmjs.org/lodash.truncate/-/lodash.truncate-4.4.2.tgz",
      "integrity": "sha512-jttmRe7bRse52OsWIMDLaXxWqRAmtIUccAQ3garviCqJjafXOfNMO0yMfNpdD6zbGaTU0P5Nz7e7gAT6cKmJRw=="
    },
    "node_modules/long": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/long/-/long-4.0.0.tgz",
      "integrity": "sha512-XsP+KhQif4bjX1kbuSiySJFNAehNxgLb6hPRGJ9QsUr8ajHkuXGdrHmFUTUUXhDwVX2R5bY4JNZEwbUiMhV+MA=="
    },
    "node_modules/lru-cache": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz",
      "integrity": "sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==",
      "dependencies": {
        "yallist": "^4.0.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/minimist": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.6.tgz",
      "integrity": "sha512-Jsjnk4bw3YJqYzbdyBiNsPWHPfO++UGG749Cxs6peCu5Xg4nrena6OVxOYxrQTqww0Jmwt+Ref8rggumkTLz9Q=="
    },
    "node_modules/minipass": {
      "version": "3.3.4",
      "resolved": "https://registry.npmjs.org/minipass/-/minipass-3.3.4.tgz",
      "integrity": "sha512-I9WPbWHCGu8W+6k1ZiGpPu0GkoKBeorkfKNuAFBNS1HNFJvke82sxvI5bzcCNpWPorkOO5QQ+zomzzwRxejXiw==",
      "dependencies": {
        "yallist": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/minizlib": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/minizlib/-/minizlib-2.1.2.tgz",
      "integrity": "sha512-bAxsR8BVfj60DWXHE3u30oHzfl4G7khkSuPW+qvpd7jFRHm7dLxOjUk1EHACJ/hxLY8phGJ0YhYHZo7jil7Qdg==",
      "dependencies": {
        "minipass": "^3.0.0",
        "yallist": "^4.0.0"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/mkdirp": {
      "version": "0.5.6",
      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.6.tgz",
      "integrity": "sha512-FP+p8RB8OWpF3YZBCrP5gtADmtXApB5AMLn+vdyA+PyxCjrCs00mjyUozssO33cwDeT3wNGdLxJ5M//YqtHAJw==",
      "dependencies": {
        "minimist": "^1.2.6"
      },
      "bin": {
        "mkdirp": "bin/cmd.js"
      }
    },
    "node_modules/moo": {
      "version": "0.5.1",
      "resolved": "https://registry.npmjs.org/moo/-/moo-0.5.1.tgz",
      "integrity": "sha512-I1mnb5xn4fO80BH9BLcF0yLypy2UKl+Cb01Fu0hJRkJjlCRtxZMWkTdAtDd5ZqCOxtCkhmRwyI57vWT+1iZ67w=="
    },
    "node_modules/ms": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
      "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
    },
    "node_modules/natural-compare": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz",
      "integrity": "sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw=="
    },
    "node_modules/near-mock-vm": {
      "version": "3.2.2",
      "resolved": "https://registry.npmjs.org/near-mock-vm/-/near-mock-vm-3.2.2.tgz",
      "integrity": "sha512-+jpwEVrJJ3hERMracfGAmvpwS5Yw9Ch1oRCLRD/7Ga/WBomR5RWnafAUr3lnBnswkkoTaKDLp5j/9EN3EVGELA==",
      "dependencies": {
        "@assemblyscript/loader": "^0.18.9",
        "yargs": "^16.2.0"
      },
      "bin": {
        "near-vm-as": "bin/bin.js"
      },
      "engines": {
        "node": ">=12.0.0"
      }
    },
    "node_modules/near-sdk-as": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/near-sdk-as/-/near-sdk-as-3.1.0.tgz",
      "integrity": "sha512-31ZwYwTyPaiG7FFXGWU2u8i5l1ak0BwZCiMLdj0JIpiW4suI+hYN4PXCIf92prAAFD8HTJ5oMdsKKi3bLRwQDQ==",
      "dependencies": {
        "near-mock-vm": "^3.1.0",
        "near-sdk-bindgen": "^3.1.0",
        "near-sdk-core": "^3.1.0",
        "near-sdk-simulator": "^3.1.0"
      },
      "engines": {
        "node": ">=12.0.0"
      }
    },
    "node_modules/near-sdk-bindgen": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/near-sdk-bindgen/-/near-sdk-bindgen-3.2.1.tgz",
      "integrity": "sha512-9IuU27FgTXzXGe26iGMQf5+G2IJTpJ2SIIwY6ukAWI03AaPs0m/F6NomCdO/+fMBYMTq2cfeUAnCWskMe1uiYg=="
    },
    "node_modules/near-sdk-core": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/near-sdk-core/-/near-sdk-core-3.2.1.tgz",
      "integrity": "sha512-vS2tEqUzG5F81RMg+OkwTU0PoGYM54CsYSivNA3lUuFJwWAr4JN3PQwyqwAMJiRAjslqfMXG5iTnDzh3c6Qqng==",
      "dependencies": {
        "@as-pect/cli": "^6.0.0",
        "as-bignum": "^0.2.15",
        "asbuild": "^0.2.0",
        "assemblyscript": "^0.18.25",
        "assemblyscript-json": "^1.0.0",
        "assemblyscript-temporal": "^1.11.0",
        "bn.js": "^5.1.1",
        "bs58": "^4.0.1",
        "js-base64": "^3.4.3",
        "near-vm": "^1.1.0",
        "visitor-as": "^0.5.0"
      },
      "engines": {
        "node": ">=12.0.0"
      }
    },
    "node_modules/near-sdk-core/node_modules/assemblyscript": {
      "version": "0.18.32",
      "resolved": "https://registry.npmjs.org/assemblyscript/-/assemblyscript-0.18.32.tgz",
      "integrity": "sha512-Py6zremwGhO3nSoI/VxyVUzTZfNhTjzNzFDaUdG4JhPJHeG+FzVlEoNCrw4bE5nPc7F+P2DJ8tZQCqIt15ceKw==",
      "dependencies": {
        "binaryen": "100.0.0-nightly.20210413",
        "long": "^4.0.0"
      },
      "bin": {
        "asc": "bin/asc",
        "asinit": "bin/asinit"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/assemblyscript"
      }
    },
    "node_modules/near-sdk-core/node_modules/binaryen": {
      "version": "100.0.0-nightly.20210413",
      "resolved": "https://registry.npmjs.org/binaryen/-/binaryen-100.0.0-nightly.20210413.tgz",
      "integrity": "sha512-EeGLIxQmJS0xnYl+SH34mNBqVMoixKd9nsE7S7z+CtS9A4eoWn3Qjav+XElgunUgXIHAI5yLnYT2TUGnLX2f1w==",
      "bin": {
        "wasm-opt": "bin/wasm-opt"
      }
    },
    "node_modules/near-sdk-simulator": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/near-sdk-simulator/-/near-sdk-simulator-3.2.1.tgz",
      "integrity": "sha512-ITAXyjDwYSDE6mD/q7SYk08NnQUCMe0UBB1gF9zkxicS+NKr6BIDNZ9JfHwKbaukvgZQGcsKUyd1v3luhePQaw=="
    },
    "node_modules/near-vm": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/near-vm/-/near-vm-1.1.0.tgz",
      "integrity": "sha512-7L8pmtoBJXJ5+ETdXKuFM8E9tvOd5r3IXAxF4khhg73/HC58fCTQVUZKxfF4P6tXx2j3V+gFMnioOgbr2KrpnA==",
      "hasInstallScript": true,
      "dependencies": {
        "binary-install": "^0.0.1"
      },
      "bin": {
        "near-vm": "run.js"
      }
    },
    "node_modules/nearley": {
      "version": "2.20.1",
      "resolved": "https://registry.npmjs.org/nearley/-/nearley-2.20.1.tgz",
      "integrity": "sha512-+Mc8UaAebFzgV+KpI5n7DasuuQCHA89dmwm7JXw3TV43ukfNQ9DnBH3Mdb2g/I4Fdxc26pwimBWvjIw0UAILSQ==",
      "dependencies": {
        "commander": "^2.19.0",
        "moo": "^0.5.0",
        "railroad-diagrams": "^1.0.0",
        "randexp": "0.4.6"
      },
      "bin": {
        "nearley-railroad": "bin/nearley-railroad.js",
        "nearley-test": "bin/nearley-test.js",
        "nearley-unparse": "bin/nearley-unparse.js",
        "nearleyc": "bin/nearleyc.js"
      },
      "funding": {
        "type": "individual",
        "url": "https://nearley.js.org/#give-to-nearley"
      }
    },
    "node_modules/once": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
      "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
      "dependencies": {
        "wrappy": "1"
      }
    },
    "node_modules/optionator": {
      "version": "0.9.1",
      "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.9.1.tgz",
      "integrity": "sha512-74RlY5FCnhq4jRxVUPKDaRwrVNXMqsGsiW6AJw4XK8hmtm10wC0ypZBLw5IIp85NZMr91+qd1RvvENwg7jjRFw==",
      "dependencies": {
        "deep-is": "^0.1.3",
        "fast-levenshtein": "^2.0.6",
        "levn": "^0.4.1",
        "prelude-ls": "^1.2.1",
        "type-check": "^0.4.0",
        "word-wrap": "^1.2.3"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/p-limit": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz",
      "integrity": "sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==",
      "dependencies": {
        "p-try": "^2.0.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/p-locate": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz",
      "integrity": "sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==",
      "dependencies": {
        "p-limit": "^2.2.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/p-try": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz",
      "integrity": "sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/parent-module": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
      "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
      "dependencies": {
        "callsites": "^3.0.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/path-exists": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
      "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/path-is-absolute": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
      "integrity": "sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/path-key": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/path-parse": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==",
      "dev": true
    },
    "node_modules/prelude-ls": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz",
      "integrity": "sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==",
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/progress": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/progress/-/progress-2.0.3.tgz",
      "integrity": "sha512-7PiHtLll5LdnKIMw100I+8xJXR5gW2QwWYkT6iJva0bXitZKa/XMrSbdmg3r2Xnaidz9Qumd0VPaMrZlF9V9sA==",
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/punycode": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz",
      "integrity": "sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/railroad-diagrams": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/railroad-diagrams/-/railroad-diagrams-1.0.0.tgz",
      "integrity": "sha512-cz93DjNeLY0idrCNOH6PviZGRN9GJhsdm9hpn1YCS879fj4W+x5IFJhhkRZcwVgMmFF7R82UA/7Oh+R8lLZg6A=="
    },
    "node_modules/randexp": {
      "version": "0.4.6",
      "resolved": "https://registry.npmjs.org/randexp/-/randexp-0.4.6.tgz",
      "integrity": "sha512-80WNmd9DA0tmZrw9qQa62GPPWfuXJknrmVmLcxvq4uZBdYqb1wYoKTmnlGUchvVWe0XiLupYkBoXVOxz3C8DYQ==",
      "dependencies": {
        "discontinuous-range": "1.0.0",
        "ret": "~0.1.10"
      },
      "engines": {
        "node": ">=0.12"
      }
    },
    "node_modules/rechoir": {
      "version": "0.6.2",
      "resolved": "https://registry.npmjs.org/rechoir/-/rechoir-0.6.2.tgz",
      "integrity": "sha512-HFM8rkZ+i3zrV+4LQjwQ0W+ez98pApMGM3HUrN04j3CqzPOzl9nmP15Y8YXNm8QHGv/eacOVEjqhmWpkRV0NAw==",
      "dev": true,
      "dependencies": {
        "resolve": "^1.1.6"
      },
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/regexpp": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/regexpp/-/regexpp-3.2.0.tgz",
      "integrity": "sha512-pq2bWo9mVD43nbts2wGv17XLiNLya+GklZ8kaDLV2Z08gDCsGpnKn9BFMepvWuHCbyVvY7J5o5+BVvoQbmlJLg==",
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/mysticatea"
      }
    },
    "node_modules/require-directory": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz",
      "integrity": "sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/require-from-string": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/require-from-string/-/require-from-string-2.0.2.tgz",
      "integrity": "sha512-Xf0nWe6RseziFMu+Ap9biiUbmplq6S9/p+7w7YXP/JBHhrUDDUhwa+vANyubuqfZWTveU//DYVGsDG7RKL/vEw==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/require-main-filename": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/require-main-filename/-/require-main-filename-2.0.0.tgz",
      "integrity": "sha512-NKN5kMDylKuldxYLSUfrbo5Tuzh4hd+2E8NPPX02mZtn1VuREQToYe/ZdlJy+J3uCpfaiGF05e7B8W0iXbQHmg=="
    },
    "node_modules/resolve": {
      "version": "1.22.1",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.1.tgz",
      "integrity": "sha512-nBpuuYuY5jFsli/JIs1oldw6fOQCBioohqWZg/2hiaOybXOft4lonv85uDOKXdf8rhyK159cxU5cDcK/NKk8zw==",
      "dev": true,
      "dependencies": {
        "is-core-module": "^2.9.0",
        "path-parse": "^1.0.7",
        "supports-preserve-symlinks-flag": "^1.0.0"
      },
      "bin": {
        "resolve": "bin/resolve"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/resolve-from": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
      "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/ret": {
      "version": "0.1.15",
      "resolved": "https://registry.npmjs.org/ret/-/ret-0.1.15.tgz",
      "integrity": "sha512-TTlYpa+OL+vMMNG24xSlQGEJ3B/RzEfUlLct7b5G/ytav+wPrplCpVMFuwzXbkecJrb6IYo1iFb0S9v37754mg==",
      "engines": {
        "node": ">=0.12"
      }
    },
    "node_modules/rimraf": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz",
      "integrity": "sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==",
      "dependencies": {
        "glob": "^7.1.3"
      },
      "bin": {
        "rimraf": "bin.js"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/safe-buffer": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
      "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ]
    },
    "node_modules/semver": {
      "version": "7.3.7",
      "resolved": "https://registry.npmjs.org/semver/-/semver-7.3.7.tgz",
      "integrity": "sha512-QlYTucUYOews+WeEujDoEGziz4K6c47V/Bd+LjSSYcA94p+DmINdf7ncaUinThfvZyu13lN9OY1XDxt8C0Tw0g==",
      "dependencies": {
        "lru-cache": "^6.0.0"
      },
      "bin": {
        "semver": "bin/semver.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/set-blocking": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz",
      "integrity": "sha512-KiKBS8AnWGEyLzofFfmvKwpdPzqiy16LvQfK3yv/fVH7Bj13/wl3JSR1J+rfgRE9q7xUJK4qvgS8raSOeLUehw=="
    },
    "node_modules/shebang-command": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
      "dependencies": {
        "shebang-regex": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/shebang-regex": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/shelljs": {
      "version": "0.8.5",
      "resolved": "https://registry.npmjs.org/shelljs/-/shelljs-0.8.5.tgz",
      "integrity": "sha512-TiwcRcrkhHvbrZbnRcFYMLl30Dfov3HKqzp5tO5b4pt6G/SezKcYhmDg15zXVBswHmctSAQKznqNW2LO5tTDow==",
      "dev": true,
      "dependencies": {
        "glob": "^7.0.0",
        "interpret": "^1.0.0",
        "rechoir": "^0.6.2"
      },
      "bin": {
        "shjs": "bin/shjs"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/slice-ansi": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/slice-ansi/-/slice-ansi-4.0.0.tgz",
      "integrity": "sha512-qMCMfhY040cVHT43K9BFygqYbUPFZKHOg7K73mtTWJRb8pyP3fzf4Ixd5SzdEJQ6MRUg/WBnOLxghZtKKurENQ==",
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "astral-regex": "^2.0.0",
        "is-fullwidth-code-point": "^3.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/slice-ansi?sponsor=1"
      }
    },
    "node_modules/source-map": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
      "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
      "peer": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/source-map-support": {
      "version": "0.5.21",
      "resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.21.tgz",
      "integrity": "sha512-uBHU3L3czsIyYXKX88fdrGovxdSCoTGDRZ6SYXtSRxLZUzHg5P/66Ht6uoUlHu9EZod+inXhKo3qQgwXUT/y1w==",
      "peer": true,
      "dependencies": {
        "buffer-from": "^1.0.0",
        "source-map": "^0.6.0"
      }
    },
    "node_modules/sprintf-js": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz",
      "integrity": "sha512-D9cPgkvLlV3t3IzL0D0YLvGA9Ahk4PcvVwUbN0dSGr1aP0Nrt4AEnTUbuGvquEC0mA64Gqt1fzirlRs5ibXx8g=="
    },
    "node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/strip-json-comments": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz",
      "integrity": "sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==",
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/supports-color": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
      "dependencies": {
        "has-flag": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/supports-preserve-symlinks-flag": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
      "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
      "dev": true,
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/table": {
      "version": "6.8.0",
      "resolved": "https://registry.npmjs.org/table/-/table-6.8.0.tgz",
      "integrity": "sha512-s/fitrbVeEyHKFa7mFdkuQMWlH1Wgw/yEXMt5xACT4ZpzWFluehAxRtUUQKPuWhaLAWhFcVx6w3oC8VKaUfPGA==",
      "dependencies": {
        "ajv": "^8.0.1",
        "lodash.truncate": "^4.4.2",
        "slice-ansi": "^4.0.0",
        "string-width": "^4.2.3",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=10.0.0"
      }
    },
    "node_modules/table/node_modules/ajv": {
      "version": "8.11.0",
      "resolved": "https://registry.npmjs.org/ajv/-/ajv-8.11.0.tgz",
      "integrity": "sha512-wGgprdCvMalC0BztXvitD2hC04YffAvtsUn93JbGXYLAtCUO4xd17mCCZQxUOItiBwZvJScWo8NIvQMQ71rdpg==",
      "dependencies": {
        "fast-deep-equal": "^3.1.1",
        "json-schema-traverse": "^1.0.0",
        "require-from-string": "^2.0.2",
        "uri-js": "^4.2.2"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/epoberezkin"
      }
    },
    "node_modules/table/node_modules/json-schema-traverse": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-1.0.0.tgz",
      "integrity": "sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug=="
    },
    "node_modules/tar": {
      "version": "5.0.11",
      "resolved": "https://registry.npmjs.org/tar/-/tar-5.0.11.tgz",
      "integrity": "sha512-E6q48d5y4XSCD+Xmwc0yc8lXuyDK38E0FB8N4S/drQRtXOMUhfhDxbB0xr2KKDhNfO51CFmoa6Oz00nAkWsjnA==",
      "dependencies": {
        "chownr": "^1.1.4",
        "fs-minipass": "^2.1.0",
        "minipass": "^3.1.3",
        "minizlib": "^2.1.2",
        "mkdirp": "^0.5.5",
        "yallist": "^4.0.0"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/text-table": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz",
      "integrity": "sha512-N+8UisAXDGk8PFXP4HAzVR9nbfmVJ3zYLAWiTIoqC5v5isinhr+r5uaO8+7r3BMfuNIufIsA7RdpVgacC2cSpw=="
    },
    "node_modules/tr46": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/tr46/-/tr46-1.0.1.tgz",
      "integrity": "sha512-dTpowEjclQ7Kgx5SdBkqRzVhERQXov8/l9Ft9dVM9fmg0W0KQSVaXX9T4i6twCPNtYiZM53lpSSUAwJbFPOHxA==",
      "dependencies": {
        "punycode": "^2.1.0"
      }
    },
    "node_modules/ts-mixer": {
      "version": "5.4.1",
      "resolved": "https://registry.npmjs.org/ts-mixer/-/ts-mixer-5.4.1.tgz",
      "integrity": "sha512-Zo9HgPCtNouDgJ+LGtrzVOjSg8+7WGQktIKLwAfaNrlOK1mWGlz1ejsAF/YqUEqAGjUTeB5fEg8gH9Aui6w9xA=="
    },
    "node_modules/type-check": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz",
      "integrity": "sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==",
      "dependencies": {
        "prelude-ls": "^1.2.1"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/type-fest": {
      "version": "0.20.2",
      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.20.2.tgz",
      "integrity": "sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/universal-url": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/universal-url/-/universal-url-2.0.0.tgz",
      "integrity": "sha512-3DLtXdm/G1LQMCnPj+Aw7uDoleQttNHp2g5FnNQKR6cP6taNWS1b/Ehjjx4PVyvejKi3TJyu8iBraKM4q3JQPg==",
      "dependencies": {
        "hasurl": "^1.0.0",
        "whatwg-url": "^7.0.0"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/uri-js": {
      "version": "4.4.1",
      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
      "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
      "dependencies": {
        "punycode": "^2.1.0"
      }
    },
    "node_modules/v8-compile-cache": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/v8-compile-cache/-/v8-compile-cache-2.3.0.tgz",
      "integrity": "sha512-l8lCEmLcLYZh4nbunNZvQCJc5pv7+RCwa8q/LdUx8u7lsWvPDKmpodJAJNwkAhJC//dFY48KuIEmjtd4RViDrA=="
    },
    "node_modules/visitor-as": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/visitor-as/-/visitor-as-0.5.0.tgz",
      "integrity": "sha512-U2P13pa7BAnfj6IEbP4feS1Rci6NT4GlDcwpqkk90u7LGalc5jH9aMuWnxTC8RJJ92iZzDQ8Lea5/OnLDsgzlw==",
      "dependencies": {
        "lodash.clonedeep": "^4.5.0",
        "ts-mixer": "^5.1.0"
      }
    },
    "node_modules/webidl-conversions": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-4.0.2.tgz",
      "integrity": "sha512-YQ+BmxuTgd6UXZW3+ICGfyqRyHXVlD5GtQr5+qjiNW7bF0cqrzX500HVXPBOvgXb5YnzDd+h0zqyv61KUD7+Sg=="
    },
    "node_modules/whatwg-url": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-7.1.0.tgz",
      "integrity": "sha512-WUu7Rg1DroM7oQvGWfOiAK21n74Gg+T4elXEQYkOhtyLeWiJFoOGLXPKI/9gzIie9CtwVLm8wtw6YJdKyxSjeg==",
      "dependencies": {
        "lodash.sortby": "^4.7.0",
        "tr46": "^1.0.1",
        "webidl-conversions": "^4.0.2"
      }
    },
    "node_modules/which": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
      "dependencies": {
        "isexe": "^2.0.0"
      },
      "bin": {
        "node-which": "bin/node-which"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/which-module": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/which-module/-/which-module-2.0.0.tgz",
      "integrity": "sha512-B+enWhmw6cjfVC7kS8Pj9pCrKSc5txArRyaYGe088shv/FGWH+0Rjx/xPgtsWfsUtS27FkP697E4DDhgrgoc0Q=="
    },
    "node_modules/word-wrap": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.3.tgz",
      "integrity": "sha512-Hz/mrNwitNRh/HUAtM/VT/5VH+ygD6DV7mYKZAtHOrbs8U7lvPS6xf7EJKMF0uW1KJCl0H701g3ZGus+muE5vQ==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/wrap-ansi": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/wrappy": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
      "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ=="
    },
    "node_modules/y18n": {
      "version": "5.0.8",
      "resolved": "https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz",
      "integrity": "sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/yallist": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
      "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A=="
    },
    "node_modules/yargs": {
      "version": "16.2.0",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-16.2.0.tgz",
      "integrity": "sha512-D1mvvtDG0L5ft/jGWkLpG1+m0eQxOfaBvTNELraWj22wSVUMWxZUvYgJYcKh6jGGIkJFhH4IZPQhR4TKpc8mBw==",
      "dependencies": {
        "cliui": "^7.0.2",
        "escalade": "^3.1.1",
        "get-caller-file": "^2.0.5",
        "require-directory": "^2.1.1",
        "string-width": "^4.2.0",
        "y18n": "^5.0.5",
        "yargs-parser": "^20.2.2"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/yargs-parser": {
      "version": "20.2.9",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-20.2.9.tgz",
      "integrity": "sha512-y11nGElTIV+CT3Zv9t7VKl+Q3hTQoT9a1Qzezhhl6Rp21gJ/IVTW7Z3y9EWXhuUBC2Shnf+DX0antecpAwSP8w==",
      "engines": {
        "node": ">=10"
      }
    }
  },
  "dependencies": {
    "@as-covers/assembly": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/@as-covers/assembly/-/assembly-0.2.0.tgz",
      "integrity": "sha512-3Mo0pdLmaorJPqookq10LmJlWIpyXF/D9JWjphMtv5Th23yO537t6vMGi92uKe35d07k2xMOH/4WRHi04mlk6Q=="
    },
    "@as-covers/core": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/@as-covers/core/-/core-0.2.1.tgz",
      "integrity": "sha512-/GGTzPB850shvL6ZiidKDmIXSpBflYfzhYyipe7HA1eijBQKKluaLSRy/JLSN53f6kp3tLrCevPXN6HA2fyuBw==",
      "requires": {
        "@as-covers/assembly": "^0.2.0",
        "@as-covers/glue": "^0.2.0",
        "@as-covers/transform": "^0.2.1"
      }
    },
    "@as-covers/glue": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/@as-covers/glue/-/glue-0.2.0.tgz",
      "integrity": "sha512-oIRC3q5TA4zfNBv+UwNH10FKq1poAeRTrZUg5pmEcFNv2HpZfED30mb9fF0anNRbr7gmXrSY9iMsRSz6hkrmYQ==",
      "requires": {
        "csv-stringify": "^5.6.2",
        "table": "^6.7.1"
      }
    },
    "@as-covers/transform": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/@as-covers/transform/-/transform-0.2.1.tgz",
      "integrity": "sha512-FutGj2yMIT2GOfqXrbnqSpeZ0eB5Bsnsg+BLnmqpEszthFhe/5/hKYmfNsiF2QBYZnqcIQ7dHw/z31+PlyUDug==",
      "requires": {
        "line-column": "^1.0.2",
        "visitor-as": "^0.6.0"
      },
      "dependencies": {
        "assemblyscript": {
          "version": "0.18.32",
          "resolved": "https://registry.npmjs.org/assemblyscript/-/assemblyscript-0.18.32.tgz",
          "integrity": "sha512-Py6zremwGhO3nSoI/VxyVUzTZfNhTjzNzFDaUdG4JhPJHeG+FzVlEoNCrw4bE5nPc7F+P2DJ8tZQCqIt15ceKw==",
          "peer": true,
          "requires": {
            "binaryen": "100.0.0-nightly.20210413",
            "long": "^4.0.0"
          }
        },
        "binaryen": {
          "version": "100.0.0-nightly.20210413",
          "resolved": "https://registry.npmjs.org/binaryen/-/binaryen-100.0.0-nightly.20210413.tgz",
          "integrity": "sha512-EeGLIxQmJS0xnYl+SH34mNBqVMoixKd9nsE7S7z+CtS9A4eoWn3Qjav+XElgunUgXIHAI5yLnYT2TUGnLX2f1w==",
          "peer": true
        },
        "visitor-as": {
          "version": "0.6.0",
          "resolved": "https://registry.npmjs.org/visitor-as/-/visitor-as-0.6.0.tgz",
          "integrity": "sha512-4WcnwCLXWjhNkwJj9gSqh46sdIv9CyIvnSuwr61OOfrGCtN2mKcW5KE828OeEr1rYjEy0Z/CIdPBJKJRLsUgDA==",
          "requires": {
            "lodash.clonedeep": "^4.5.0",
            "ts-mixer": "^5.4.1"
          }
        }
      }
    },
    "@as-pect/assembly": {
      "version": "6.2.0",
      "resolved": "https://registry.npmjs.org/@as-pect/assembly/-/assembly-6.2.0.tgz",
      "integrity": "sha512-jYr1jdlr0xNndIhOpTMBaPHmlhD/c3PcVCzow8wIkzLxgcSOzhBkqjip+LWPWGsiFK1vsZ8ZUaMTeK3fcnXQhw==",
      "requires": {}
    },
    "@as-pect/cli": {
      "version": "6.2.4",
      "resolved": "https://registry.npmjs.org/@as-pect/cli/-/cli-6.2.4.tgz",
      "integrity": "sha512-OSWehx90djGxgR4RxFZKixRyh9hsMLNM/6otayAljijEPjiD1zS2lxu3WCu/DiwSWIRJUYdGOUVzw15nqvdcZQ==",
      "requires": {
        "@as-covers/core": "0.2.1",
        "@as-pect/assembly": "^6.2.0",
        "@as-pect/core": "^6.2.1",
        "@as-pect/csv-reporter": "^6.2.1",
        "@as-pect/json-reporter": "^6.2.1",
        "chalk": "^4.1.1",
        "glob": "^7.1.7"
      }
    },
    "@as-pect/core": {
      "version": "6.2.1",
      "resolved": "https://registry.npmjs.org/@as-pect/core/-/core-6.2.1.tgz",
      "integrity": "sha512-JnvUb55OhGP7CYUnYtsLXttUb+FGv+6kEN9NleTbIMvU73NFJzyTCGjoZuayPNpfiUzOF96j91XuMHuinJ8BAg==",
      "requires": {
        "@as-pect/assembly": "^6.2.0",
        "@as-pect/snapshots": "^6.2.1",
        "chalk": "^4.1.1",
        "long": "^4.0.0"
      }
    },
    "@as-pect/csv-reporter": {
      "version": "6.2.1",
      "resolved": "https://registry.npmjs.org/@as-pect/csv-reporter/-/csv-reporter-6.2.1.tgz",
      "integrity": "sha512-jy8ka8dEP4UY/pK/OIjHFUqs4j2Hvw3r6no6XfX1AkOd9CRLlt/JIDddlzwEqCGEfF83GSBQfQ1At86FkE7RtA==",
      "optional": true,
      "requires": {
        "@as-pect/core": "^6.2.1"
      }
    },
    "@as-pect/json-reporter": {
      "version": "6.2.1",
      "resolved": "https://registry.npmjs.org/@as-pect/json-reporter/-/json-reporter-6.2.1.tgz",
      "integrity": "sha512-vsTYOiqB42+WPpec0M3apm9P2SjstUe6MfXepDvVIu2DCZzt1rkEuIIXro13LLQCnOzwXgHO/00sn+uPEjsmSQ==",
      "optional": true,
      "requires": {
        "@as-pect/core": "^6.2.1"
      }
    },
    "@as-pect/snapshots": {
      "version": "6.2.1",
      "resolved": "https://registry.npmjs.org/@as-pect/snapshots/-/snapshots-6.2.1.tgz",
      "integrity": "sha512-a6xcOUaXMrR3f1n6vgGxMJxUUd6MIVm5vlQ3nZ2hDEMz1PFyEQ04OvGqqUIYHhKAeXIvD3iwz02cI8Wh9lDK7Q==",
      "requires": {
        "diff": "^5.0.0",
        "nearley": "^2.20.1"
      }
    },
    "@assemblyscript/loader": {
      "version": "0.18.32",
      "resolved": "https://registry.npmjs.org/@assemblyscript/loader/-/loader-0.18.32.tgz",
      "integrity": "sha512-fq+nWvQuwASkTgchjMsnLyharobzPJIKx4KGoSlkS1ffrsnjabok2oOH7jAIFW4RMz3JXjHxMONbAmcxzyrcUw=="
    },
    "@babel/code-frame": {
      "version": "7.12.11",
      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.12.11.tgz",
      "integrity": "sha512-Zt1yodBx1UcyiePMSkWnU4hPqhwq7hGi2nFL1LeA3EUl+q2LQx16MISgJ0+z7dnmgvP9QtIleuETGOiOH1RcIw==",
      "requires": {
        "@babel/highlight": "^7.10.4"
      }
    },
    "@babel/helper-validator-identifier": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.18.6.tgz",
      "integrity": "sha512-MmetCkz9ej86nJQV+sFCxoGGrUbU3q02kgLciwkrt9QqEB7cP39oKEY0PakknEO0Gu20SskMRi+AYZ3b1TpN9g=="
    },
    "@babel/highlight": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/highlight/-/highlight-7.18.6.tgz",
      "integrity": "sha512-u7stbOuYjaPezCuLj29hNW1v64M2Md2qupEKP1fHc7WdOA3DgLh37suiSrZYY7haUB7iBeQZ9P1uiRF359do3g==",
      "requires": {
        "@babel/helper-validator-identifier": "^7.18.6",
        "chalk": "^2.0.0",
        "js-tokens": "^4.0.0"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          }
        },
        "color-convert": {
          "version": "1.9.3",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
          "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
          "requires": {
            "color-name": "1.1.3"
          }
        },
        "color-name": {
          "version": "1.1.3",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
          "integrity": "sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw=="
        },
        "escape-string-regexp": {
          "version": "1.0.5",
          "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
          "integrity": "sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg=="
        },
        "has-flag": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
          "integrity": "sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw=="
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "@eslint/eslintrc": {
      "version": "0.4.3",
      "resolved": "https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-0.4.3.tgz",
      "integrity": "sha512-J6KFFz5QCYUJq3pf0mjEcCJVERbzv71PUIDczuh9JkwGEzced6CO5ADLHB1rbf/+oPBtoPfMYNOpGDzCANlbXw==",
      "requires": {
        "ajv": "^6.12.4",
        "debug": "^4.1.1",
        "espree": "^7.3.0",
        "globals": "^13.9.0",
        "ignore": "^4.0.6",
        "import-fresh": "^3.2.1",
        "js-yaml": "^3.13.1",
        "minimatch": "^3.0.4",
        "strip-json-comments": "^3.1.1"
      }
    },
    "@humanwhocodes/config-array": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/config-array/-/config-array-0.5.0.tgz",
      "integrity": "sha512-FagtKFz74XrTl7y6HCzQpwDfXP0yhxe9lHLD1UZxjvZIcbyRz8zTFF/yYNfSfzU414eDwZ1SrO0Qvtyf+wFMQg==",
      "requires": {
        "@humanwhocodes/object-schema": "^1.2.0",
        "debug": "^4.1.1",
        "minimatch": "^3.0.4"
      }
    },
    "@humanwhocodes/object-schema": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/object-schema/-/object-schema-1.2.1.tgz",
      "integrity": "sha512-ZnQMnLV4e7hDlUvw8H+U8ASL02SS2Gn6+9Ac3wGGLIe7+je2AeAOxPY+izIPJDfFDb7eDjev0Us8MO1iFRN8hA=="
    },
    "acorn": {
      "version": "7.4.1",
      "resolved": "https://registry.npmjs.org/acorn/-/acorn-7.4.1.tgz",
      "integrity": "sha512-nQyp0o1/mNdbTO1PO6kHkwSrmgZ0MT/jCCpNiwbUjGoRN4dlBhqJtoQuCnEOKzgTVwg0ZWiCoQy6SxMebQVh8A=="
    },
    "acorn-jsx": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz",
      "integrity": "sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==",
      "requires": {}
    },
    "ajv": {
      "version": "6.12.6",
      "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
      "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
      "requires": {
        "fast-deep-equal": "^3.1.1",
        "fast-json-stable-stringify": "^2.0.0",
        "json-schema-traverse": "^0.4.1",
        "uri-js": "^4.2.2"
      }
    },
    "ansi-colors": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/ansi-colors/-/ansi-colors-4.1.3.tgz",
      "integrity": "sha512-/6w/C21Pm1A7aZitlI5Ni/2J6FFQN8i1Cvz3kHABAAbw93v/NlvKdVOqz7CCWz/3iv/JplRSEEZ83XION15ovw=="
    },
    "ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ=="
    },
    "ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "requires": {
        "color-convert": "^2.0.1"
      }
    },
    "argparse": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz",
      "integrity": "sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==",
      "requires": {
        "sprintf-js": "~1.0.2"
      }
    },
    "as-bignum": {
      "version": "0.2.18",
      "resolved": "https://registry.npmjs.org/as-bignum/-/as-bignum-0.2.18.tgz",
      "integrity": "sha512-5LODrOr7wvS643oh7PHfyRtbBO9vCcU69vNNvrqh5yovrApM9nRHDeT5XcqnaSI8TqK9ZhN12qhZnq4rdIGcwQ=="
    },
    "asbuild": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/asbuild/-/asbuild-0.2.0.tgz",
      "integrity": "sha512-c6kE8RQORy8aGFw04NNx2IsH2jCcYwnjha9yOJ1Tv/guymky3EXZJ7thkTIjdxF1Qe3+I4ab8ku2Rqn/Xyym4A==",
      "requires": {
        "@as-pect/cli": "^6.0.0",
        "assemblyscript": "^0.18.31",
        "chalk": "^4.1.1",
        "eslint": "^7.17.0",
        "yargs": "^15.4.1"
      },
      "dependencies": {
        "assemblyscript": {
          "version": "0.18.32",
          "resolved": "https://registry.npmjs.org/assemblyscript/-/assemblyscript-0.18.32.tgz",
          "integrity": "sha512-Py6zremwGhO3nSoI/VxyVUzTZfNhTjzNzFDaUdG4JhPJHeG+FzVlEoNCrw4bE5nPc7F+P2DJ8tZQCqIt15ceKw==",
          "requires": {
            "binaryen": "100.0.0-nightly.20210413",
            "long": "^4.0.0"
          }
        },
        "binaryen": {
          "version": "100.0.0-nightly.20210413",
          "resolved": "https://registry.npmjs.org/binaryen/-/binaryen-100.0.0-nightly.20210413.tgz",
          "integrity": "sha512-EeGLIxQmJS0xnYl+SH34mNBqVMoixKd9nsE7S7z+CtS9A4eoWn3Qjav+XElgunUgXIHAI5yLnYT2TUGnLX2f1w=="
        },
        "cliui": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/cliui/-/cliui-6.0.0.tgz",
          "integrity": "sha512-t6wbgtoCXvAzst7QgXxJYqPt0usEfbgQdftEPbLL/cvv6HPE5VgvqCuAIDR0NgU52ds6rFwqrgakNLrHEjCbrQ==",
          "requires": {
            "string-width": "^4.2.0",
            "strip-ansi": "^6.0.0",
            "wrap-ansi": "^6.2.0"
          }
        },
        "wrap-ansi": {
          "version": "6.2.0",
          "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-6.2.0.tgz",
          "integrity": "sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ/SOIZwINatK9KY/tf+ZrlywOKU0UDj3ATXUBfxJXA==",
          "requires": {
            "ansi-styles": "^4.0.0",
            "string-width": "^4.1.0",
            "strip-ansi": "^6.0.0"
          }
        },
        "y18n": {
          "version": "4.0.3",
          "resolved": "https://registry.npmjs.org/y18n/-/y18n-4.0.3.tgz",
          "integrity": "sha512-JKhqTOwSrqNA1NY5lSztJ1GrBiUodLMmIZuLiDaMRJ+itFd+ABVE8XBjOvIWL+rSqNDC74LCSFmlb/U4UZ4hJQ=="
        },
        "yargs": {
          "version": "15.4.1",
          "resolved": "https://registry.npmjs.org/yargs/-/yargs-15.4.1.tgz",
          "integrity": "sha512-aePbxDmcYW++PaqBsJ+HYUFwCdv4LVvdnhBy78E57PIor8/OVvhMrADFFEDh8DHDFRv/O9i3lPhsENjO7QX0+A==",
          "requires": {
            "cliui": "^6.0.0",
            "decamelize": "^1.2.0",
            "find-up": "^4.1.0",
            "get-caller-file": "^2.0.1",
            "require-directory": "^2.1.1",
            "require-main-filename": "^2.0.0",
            "set-blocking": "^2.0.0",
            "string-width": "^4.2.0",
            "which-module": "^2.0.0",
            "y18n": "^4.0.0",
            "yargs-parser": "^18.1.2"
          }
        },
        "yargs-parser": {
          "version": "18.1.3",
          "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-18.1.3.tgz",
          "integrity": "sha512-o50j0JeToy/4K6OZcaQmW6lyXXKhq7csREXcDwk2omFPJEwUNOVtJKvmDr9EI1fAJZUyZcRF7kxGBWmRXudrCQ==",
          "requires": {
            "camelcase": "^5.0.0",
            "decamelize": "^1.2.0"
          }
        }
      }
    },
    "assemblyscript": {
      "version": "0.19.23",
      "resolved": "https://registry.npmjs.org/assemblyscript/-/assemblyscript-0.19.23.tgz",
      "integrity": "sha512-fwOQNZVTMga5KRsfY80g7cpOl4PsFQczMwHzdtgoqLXaYhkhavufKb0sB0l3T1DUxpAufA0KNhlbpuuhZUwxMA==",
      "peer": true,
      "requires": {
        "binaryen": "102.0.0-nightly.20211028",
        "long": "^5.2.0",
        "source-map-support": "^0.5.20"
      },
      "dependencies": {
        "long": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/long/-/long-5.2.0.tgz",
          "integrity": "sha512-9RTUNjK60eJbx3uz+TEGF7fUr29ZDxR5QzXcyDpeSfeH28S9ycINflOgOlppit5U+4kNTe83KQnMEerw7GmE8w==",
          "peer": true
        }
      }
    },
    "assemblyscript-json": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/assemblyscript-json/-/assemblyscript-json-1.1.0.tgz",
      "integrity": "sha512-UbE8ts8csTWQgd5TnSPN7MRV9NveuHv1bVnKmDLoo/tzjqxkmsZb3lu59Uk8H7SGoqdkDSEE049alx/nHnSdFw=="
    },
    "assemblyscript-regex": {
      "version": "1.6.4",
      "resolved": "https://registry.npmjs.org/assemblyscript-regex/-/assemblyscript-regex-1.6.4.tgz",
      "integrity": "sha512-LiuyzuPMASyZLRgZrIktyLyZjxihEhHkzfRHv8FPDnLhBn8WefFe45jGF6Ug06/0rMMdNNRuQS3qXVLy9YyO6g=="
    },
    "assemblyscript-temporal": {
      "version": "1.12.0",
      "resolved": "https://registry.npmjs.org/assemblyscript-temporal/-/assemblyscript-temporal-1.12.0.tgz",
      "integrity": "sha512-wpt49CdNPs0bTCn1IkssCWSFoO+hHwX/uCghQdjs+j8+PkxI+sbzfcoxabaCD4hcgY2qV7VahO4ulPXZSXrdtA==",
      "requires": {
        "assemblyscript-regex": "^1.6.3"
      }
    },
    "astral-regex": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/astral-regex/-/astral-regex-2.0.0.tgz",
      "integrity": "sha512-Z7tMw1ytTXt5jqMcOP+OQteU1VuNK9Y02uuJtKQ1Sv69jXQKKg5cibLwGJow8yzZP+eAc18EmLGPal0bp36rvQ=="
    },
    "axios": {
      "version": "0.19.2",
      "resolved": "https://registry.npmjs.org/axios/-/axios-0.19.2.tgz",
      "integrity": "sha512-fjgm5MvRHLhx+osE2xoekY70AhARk3a6hkN+3Io1jc00jtquGvxYlKlsFUhmUET0V5te6CcZI7lcv2Ym61mjHA==",
      "requires": {
        "follow-redirects": "1.5.10"
      }
    },
    "balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw=="
    },
    "base-x": {
      "version": "3.0.9",
      "resolved": "https://registry.npmjs.org/base-x/-/base-x-3.0.9.tgz",
      "integrity": "sha512-H7JU6iBHTal1gp56aKoaa//YUxEaAOUiydvrV/pILqIHXTtqxSkATOnDA2u+jZ/61sD+L/412+7kzXRtWukhpQ==",
      "requires": {
        "safe-buffer": "^5.0.1"
      }
    },
    "binary-install": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/binary-install/-/binary-install-0.0.1.tgz",
      "integrity": "sha512-axr6lqB4ec/pkEOb/JMnZpfcroWv1zT48pVz1oQHG7XmGkS77vmdxmP1btuH79lWQdy9e2MVw/uW0D8siopkRg==",
      "requires": {
        "axios": "^0.19.0",
        "env-paths": "^2.2.0",
        "mkdirp": "^0.5.1",
        "rimraf": "^3.0.0",
        "tar": "^5.0.5",
        "universal-url": "^2.0.0"
      }
    },
    "binaryen": {
      "version": "102.0.0-nightly.20211028",
      "resolved": "https://registry.npmjs.org/binaryen/-/binaryen-102.0.0-nightly.20211028.tgz",
      "integrity": "sha512-GCJBVB5exbxzzvyt8MGDv/MeUjs6gkXDvf4xOIItRBptYl0Tz5sm1o/uG95YK0L0VeG5ajDu3hRtkBP2kzqC5w==",
      "peer": true
    },
    "bn.js": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-5.2.1.tgz",
      "integrity": "sha512-eXRvHzWyYPBuB4NBy0cmYQjGitUrtqwbvlzP3G6VFnNRbsZQIxQ10PbKKHt8gZ/HW/D/747aDl+QkDqg3KQLMQ=="
    },
    "brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "requires": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "bs58": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/bs58/-/bs58-4.0.1.tgz",
      "integrity": "sha512-Ok3Wdf5vOIlBrgCvTq96gBkJw+JUEzdBgyaza5HLtPm7yTHkjRy8+JzNyHF7BHa0bNWOQIp3m5YF0nnFcOIKLw==",
      "requires": {
        "base-x": "^3.0.2"
      }
    },
    "buffer-from": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.2.tgz",
      "integrity": "sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==",
      "peer": true
    },
    "callsites": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
      "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ=="
    },
    "camelcase": {
      "version": "5.3.1",
      "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz",
      "integrity": "sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg=="
    },
    "chalk": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
      "requires": {
        "ansi-styles": "^4.1.0",
        "supports-color": "^7.1.0"
      }
    },
    "chownr": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/chownr/-/chownr-1.1.4.tgz",
      "integrity": "sha512-jJ0bqzaylmJtVnNgzTeSOs8DPavpbYgEr/b0YL8/2GO3xJEhInFmhKMUnEJQjZumK7KXGFhUy89PrsJWlakBVg=="
    },
    "cliui": {
      "version": "7.0.4",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-7.0.4.tgz",
      "integrity": "sha512-OcRE68cOsVMXp1Yvonl/fzkQOyjLSu/8bhPDfQt0e0/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==",
      "requires": {
        "string-width": "^4.2.0",
        "strip-ansi": "^6.0.0",
        "wrap-ansi": "^7.0.0"
      }
    },
    "color-convert": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
      "requires": {
        "color-name": "~1.1.4"
      }
    },
    "color-name": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA=="
    },
    "commander": {
      "version": "2.20.3",
      "resolved": "https://registry.npmjs.org/commander/-/commander-2.20.3.tgz",
      "integrity": "sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ=="
    },
    "concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg=="
    },
    "cross-spawn": {
      "version": "7.0.3",
      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz",
      "integrity": "sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==",
      "requires": {
        "path-key": "^3.1.0",
        "shebang-command": "^2.0.0",
        "which": "^2.0.1"
      }
    },
    "csv-stringify": {
      "version": "5.6.5",
      "resolved": "https://registry.npmjs.org/csv-stringify/-/csv-stringify-5.6.5.tgz",
      "integrity": "sha512-PjiQ659aQ+fUTQqSrd1XEDnOr52jh30RBurfzkscaE2tPaFsDH5wOAHJiw8XAHphRknCwMUE9KRayc4K/NbO8A=="
    },
    "debug": {
      "version": "4.3.4",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.4.tgz",
      "integrity": "sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==",
      "requires": {
        "ms": "2.1.2"
      }
    },
    "decamelize": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz",
      "integrity": "sha512-z2S+W9X73hAUUki+N+9Za2lBlun89zigOyGrsax+KUQ6wKW4ZoWpEYBkGhQjwAjjDCkWxhY0VKEhk8wzY7F5cA=="
    },
    "deep-is": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz",
      "integrity": "sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ=="
    },
    "diff": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/diff/-/diff-5.1.0.tgz",
      "integrity": "sha512-D+mk+qE8VC/PAUrlAU34N+VfXev0ghe5ywmpqrawphmVZc1bEfn56uo9qpyGp1p4xpzOHkSW4ztBd6L7Xx4ACw=="
    },
    "discontinuous-range": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/discontinuous-range/-/discontinuous-range-1.0.0.tgz",
      "integrity": "sha512-c68LpLbO+7kP/b1Hr1qs8/BJ09F5khZGTxqxZuhzxpmwJKOgRFHJWIb9/KmqnqHhLdO55aOxFH/EGBvUQbL/RQ=="
    },
    "doctrine": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-3.0.0.tgz",
      "integrity": "sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==",
      "requires": {
        "esutils": "^2.0.2"
      }
    },
    "emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A=="
    },
    "enquirer": {
      "version": "2.3.6",
      "resolved": "https://registry.npmjs.org/enquirer/-/enquirer-2.3.6.tgz",
      "integrity": "sha512-yjNnPr315/FjS4zIsUxYguYUPP2e1NK4d7E7ZOLiyYCcbFBiTMyID+2wvm2w6+pZ/odMA7cRkjhsPbltwBOrLg==",
      "requires": {
        "ansi-colors": "^4.1.1"
      }
    },
    "env-paths": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/env-paths/-/env-paths-2.2.1.tgz",
      "integrity": "sha512-+h1lkLKhZMTYjog1VEpJNG7NZJWcuc2DDk/qsqSTRRCOXiLjeQ1d1/udrUGhqMxUgAlwKNZ0cf2uqan5GLuS2A=="
    },
    "escalade": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.1.1.tgz",
      "integrity": "sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw=="
    },
    "escape-string-regexp": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
      "integrity": "sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA=="
    },
    "eslint": {
      "version": "7.32.0",
      "resolved": "https://registry.npmjs.org/eslint/-/eslint-7.32.0.tgz",
      "integrity": "sha512-VHZ8gX+EDfz+97jGcgyGCyRia/dPOd6Xh9yPv8Bl1+SoaIwD+a/vlrOmGRUyOYu7MwUhc7CxqeaDZU13S4+EpA==",
      "requires": {
        "@babel/code-frame": "7.12.11",
        "@eslint/eslintrc": "^0.4.3",
        "@humanwhocodes/config-array": "^0.5.0",
        "ajv": "^6.10.0",
        "chalk": "^4.0.0",
        "cross-spawn": "^7.0.2",
        "debug": "^4.0.1",
        "doctrine": "^3.0.0",
        "enquirer": "^2.3.5",
        "escape-string-regexp": "^4.0.0",
        "eslint-scope": "^5.1.1",
        "eslint-utils": "^2.1.0",
        "eslint-visitor-keys": "^2.0.0",
        "espree": "^7.3.1",
        "esquery": "^1.4.0",
        "esutils": "^2.0.2",
        "fast-deep-equal": "^3.1.3",
        "file-entry-cache": "^6.0.1",
        "functional-red-black-tree": "^1.0.1",
        "glob-parent": "^5.1.2",
        "globals": "^13.6.0",
        "ignore": "^4.0.6",
        "import-fresh": "^3.0.0",
        "imurmurhash": "^0.1.4",
        "is-glob": "^4.0.0",
        "js-yaml": "^3.13.1",
        "json-stable-stringify-without-jsonify": "^1.0.1",
        "levn": "^0.4.1",
        "lodash.merge": "^4.6.2",
        "minimatch": "^3.0.4",
        "natural-compare": "^1.4.0",
        "optionator": "^0.9.1",
        "progress": "^2.0.0",
        "regexpp": "^3.1.0",
        "semver": "^7.2.1",
        "strip-ansi": "^6.0.0",
        "strip-json-comments": "^3.1.0",
        "table": "^6.0.9",
        "text-table": "^0.2.0",
        "v8-compile-cache": "^2.0.3"
      }
    },
    "eslint-scope": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-5.1.1.tgz",
      "integrity": "sha512-2NxwbF/hZ0KpepYN0cNbo+FN6XoK7GaHlQhgx/hIZl6Va0bF45RQOOwhLIy8lQDbuCiadSLCBnH2CFYquit5bw==",
      "requires": {
        "esrecurse": "^4.3.0",
        "estraverse": "^4.1.1"
      }
    },
    "eslint-utils": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/eslint-utils/-/eslint-utils-2.1.0.tgz",
      "integrity": "sha512-w94dQYoauyvlDc43XnGB8lU3Zt713vNChgt4EWwhXAP2XkBvndfxF0AgIqKOOasjPIPzj9JqgwkwbCYD0/V3Zg==",
      "requires": {
        "eslint-visitor-keys": "^1.1.0"
      },
      "dependencies": {
        "eslint-visitor-keys": {
          "version": "1.3.0",
          "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-1.3.0.tgz",
          "integrity": "sha512-6J72N8UNa462wa/KFODt/PJ3IU60SDpC3QXC1Hjc1BXXpfL2C9R5+AU7jhe0F6GREqVMh4Juu+NY7xn+6dipUQ=="
        }
      }
    },
    "eslint-visitor-keys": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-2.1.0.tgz",
      "integrity": "sha512-0rSmRBzXgDzIsD6mGdJgevzgezI534Cer5L/vyMX0kHzT/jiB43jRhd9YUlMGYLQy2zprNmoT8qasCGtY+QaKw=="
    },
    "espree": {
      "version": "7.3.1",
      "resolved": "https://registry.npmjs.org/espree/-/espree-7.3.1.tgz",
      "integrity": "sha512-v3JCNCE64umkFpmkFGqzVKsOT0tN1Zr+ueqLZfpV1Ob8e+CEgPWa+OxCoGH3tnhimMKIaBm4m/vaRpJ/krRz2g==",
      "requires": {
        "acorn": "^7.4.0",
        "acorn-jsx": "^5.3.1",
        "eslint-visitor-keys": "^1.3.0"
      },
      "dependencies": {
        "eslint-visitor-keys": {
          "version": "1.3.0",
          "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-1.3.0.tgz",
          "integrity": "sha512-6J72N8UNa462wa/KFODt/PJ3IU60SDpC3QXC1Hjc1BXXpfL2C9R5+AU7jhe0F6GREqVMh4Juu+NY7xn+6dipUQ=="
        }
      }
    },
    "esprima": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz",
      "integrity": "sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A=="
    },
    "esquery": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/esquery/-/esquery-1.4.0.tgz",
      "integrity": "sha512-cCDispWt5vHHtwMY2YrAQ4ibFkAL8RbH5YGBnZBc90MolvvfkkQcJro/aZiAQUlQ3qgrYS6D6v8Gc5G5CQsc9w==",
      "requires": {
        "estraverse": "^5.1.0"
      },
      "dependencies": {
        "estraverse": {
          "version": "5.3.0",
          "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz",
          "integrity": "sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA=="
        }
      }
    },
    "esrecurse": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz",
      "integrity": "sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==",
      "requires": {
        "estraverse": "^5.2.0"
      },
      "dependencies": {
        "estraverse": {
          "version": "5.3.0",
          "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz",
          "integrity": "sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA=="
        }
      }
    },
    "estraverse": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-4.3.0.tgz",
      "integrity": "sha512-39nnKffWz8xN1BU/2c79n9nB9HDzo0niYUqx6xyqUnyoAnQyyWpOTdZEeiCch8BBu515t4wp9ZmgVfVhn9EBpw=="
    },
    "esutils": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g=="
    },
    "fast-deep-equal": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
      "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q=="
    },
    "fast-json-stable-stringify": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
      "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw=="
    },
    "fast-levenshtein": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",
      "integrity": "sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw=="
    },
    "file-entry-cache": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-6.0.1.tgz",
      "integrity": "sha512-7Gps/XWymbLk2QLYK4NzpMOrYjMhdIxXuIvy2QBsLE6ljuodKvdkWs/cpyJJ3CVIVpH0Oi1Hvg1ovbMzLdFBBg==",
      "requires": {
        "flat-cache": "^3.0.4"
      }
    },
    "find-up": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz",
      "integrity": "sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==",
      "requires": {
        "locate-path": "^5.0.0",
        "path-exists": "^4.0.0"
      }
    },
    "flat-cache": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/flat-cache/-/flat-cache-3.0.4.tgz",
      "integrity": "sha512-dm9s5Pw7Jc0GvMYbshN6zchCA9RgQlzzEZX3vylR9IqFfS8XciblUXOKfW6SiuJ0e13eDYZoZV5wdrev7P3Nwg==",
      "requires": {
        "flatted": "^3.1.0",
        "rimraf": "^3.0.2"
      }
    },
    "flatted": {
      "version": "3.2.6",
      "resolved": "https://registry.npmjs.org/flatted/-/flatted-3.2.6.tgz",
      "integrity": "sha512-0sQoMh9s0BYsm+12Huy/rkKxVu4R1+r96YX5cG44rHV0pQ6iC3Q+mkoMFaGWObMFYQxCVT+ssG1ksneA2MI9KQ=="
    },
    "follow-redirects": {
      "version": "1.5.10",
      "resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.5.10.tgz",
      "integrity": "sha512-0V5l4Cizzvqt5D44aTXbFZz+FtyXV1vrDN6qrelxtfYQKW0KO0W2T/hkE8xvGa/540LkZlkaUjO4ailYTFtHVQ==",
      "requires": {
        "debug": "=3.1.0"
      },
      "dependencies": {
        "debug": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/debug/-/debug-3.1.0.tgz",
          "integrity": "sha512-OX8XqP7/1a9cqkxYw2yXss15f26NKWBpDXQd0/uK/KPqdQhxbPa994hnzjcE2VqQpDslf55723cKPUOGSmMY3g==",
          "requires": {
            "ms": "2.0.0"
          }
        },
        "ms": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
          "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A=="
        }
      }
    },
    "fs-minipass": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/fs-minipass/-/fs-minipass-2.1.0.tgz",
      "integrity": "sha512-V/JgOLFCS+R6Vcq0slCuaeWEdNC3ouDlJMNIsacH2VtALiu9mV4LPrHc5cDl8k5aw6J8jwgWWpiTo5RYhmIzvg==",
      "requires": {
        "minipass": "^3.0.0"
      }
    },
    "fs.realpath": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
      "integrity": "sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw=="
    },
    "function-bind": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz",
      "integrity": "sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A==",
      "dev": true
    },
    "functional-red-black-tree": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/functional-red-black-tree/-/functional-red-black-tree-1.0.1.tgz",
      "integrity": "sha512-dsKNQNdj6xA3T+QlADDA7mOSlX0qiMINjn0cgr+eGHGsbSHzTabcIogz2+p/iqP1Xs6EP/sS2SbqH+brGTbq0g=="
    },
    "get-caller-file": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz",
      "integrity": "sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg=="
    },
    "glob": {
      "version": "7.2.3",
      "resolved": "https://registry.npmjs.org/glob/-/glob-7.2.3.tgz",
      "integrity": "sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==",
      "requires": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^3.1.1",
        "once": "^1.3.0",
        "path-is-absolute": "^1.0.0"
      }
    },
    "glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "requires": {
        "is-glob": "^4.0.1"
      }
    },
    "globals": {
      "version": "13.16.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-13.16.0.tgz",
      "integrity": "sha512-A1lrQfpNF+McdPOnnFqY3kSN0AFTy485bTi1bkLk4mVPODIUEcSfhHgRqA+QdXPksrSTTztYXx37NFV+GpGk3Q==",
      "requires": {
        "type-fest": "^0.20.2"
      }
    },
    "has": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/has/-/has-1.0.3.tgz",
      "integrity": "sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==",
      "dev": true,
      "requires": {
        "function-bind": "^1.1.1"
      }
    },
    "has-flag": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ=="
    },
    "hasurl": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/hasurl/-/hasurl-1.0.0.tgz",
      "integrity": "sha512-43ypUd3DbwyCT01UYpA99AEZxZ4aKtRxWGBHEIbjcOsUghd9YUON0C+JF6isNjaiwC/UF5neaUudy6JS9jZPZQ=="
    },
    "ignore": {
      "version": "4.0.6",
      "resolved": "https://registry.npmjs.org/ignore/-/ignore-4.0.6.tgz",
      "integrity": "sha512-cyFDKrqc/YdcWFniJhzI42+AzS+gNwmUzOSFcRCQYwySuBBBy/KjuxWLZ/FHEH6Moq1NizMOBWyTcv8O4OZIMg=="
    },
    "import-fresh": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.0.tgz",
      "integrity": "sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==",
      "requires": {
        "parent-module": "^1.0.0",
        "resolve-from": "^4.0.0"
      }
    },
    "imurmurhash": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
      "integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA=="
    },
    "inflight": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
      "integrity": "sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==",
      "requires": {
        "once": "^1.3.0",
        "wrappy": "1"
      }
    },
    "inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ=="
    },
    "interpret": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/interpret/-/interpret-1.4.0.tgz",
      "integrity": "sha512-agE4QfB2Lkp9uICn7BAqoscw4SZP9kTE2hxiFI3jBPmXJfdqiahTbUuKGsMoN2GtqL9AxhYioAcVvgsb1HvRbA==",
      "dev": true
    },
    "is-core-module": {
      "version": "2.9.0",
      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.9.0.tgz",
      "integrity": "sha512-+5FPy5PnwmO3lvfMb0AsoPaBG+5KHUI0wYFXOtYPnVVVspTFUuMZNfNaNVRt3FZadstu2c8x23vykRW/NBoU6A==",
      "dev": true,
      "requires": {
        "has": "^1.0.3"
      }
    },
    "is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ=="
    },
    "is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg=="
    },
    "is-glob": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
      "requires": {
        "is-extglob": "^2.1.1"
      }
    },
    "isarray": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
      "integrity": "sha512-VLghIWNM6ELQzo7zwmcg0NmTVyWKYjvIeM83yjp0wRDTmUnrM678fQbcKBo6n2CJEF0szoG//ytg+TKla89ALQ=="
    },
    "isexe": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
      "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw=="
    },
    "isobject": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/isobject/-/isobject-2.1.0.tgz",
      "integrity": "sha512-+OUdGJlgjOBZDfxnDjYYG6zp487z0JGNQq3cYQYg5f5hKR+syHMsaztzGeml/4kGG55CSpKSpWTY+jYGgsHLgA==",
      "requires": {
        "isarray": "1.0.0"
      }
    },
    "js-base64": {
      "version": "3.7.2",
      "resolved": "https://registry.npmjs.org/js-base64/-/js-base64-3.7.2.tgz",
      "integrity": "sha512-NnRs6dsyqUXejqk/yv2aiXlAvOs56sLkX6nUdeaNezI5LFFLlsZjOThmwnrcwh5ZZRwZlCMnVAY3CvhIhoVEKQ=="
    },
    "js-tokens": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ=="
    },
    "js-yaml": {
      "version": "3.14.1",
      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-3.14.1.tgz",
      "integrity": "sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==",
      "requires": {
        "argparse": "^1.0.7",
        "esprima": "^4.0.0"
      }
    },
    "json-schema-traverse": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg=="
    },
    "json-stable-stringify-without-jsonify": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz",
      "integrity": "sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw=="
    },
    "levn": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/levn/-/levn-0.4.1.tgz",
      "integrity": "sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==",
      "requires": {
        "prelude-ls": "^1.2.1",
        "type-check": "~0.4.0"
      }
    },
    "line-column": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/line-column/-/line-column-1.0.2.tgz",
      "integrity": "sha512-Ktrjk5noGYlHsVnYWh62FLVs4hTb8A3e+vucNZMgPeAOITdshMSgv4cCZQeRDjm7+goqmo6+liZwTXo+U3sVww==",
      "requires": {
        "isarray": "^1.0.0",
        "isobject": "^2.0.0"
      }
    },
    "locate-path": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz",
      "integrity": "sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==",
      "requires": {
        "p-locate": "^4.1.0"
      }
    },
    "lodash.clonedeep": {
      "version": "4.5.0",
      "resolved": "https://registry.npmjs.org/lodash.clonedeep/-/lodash.clonedeep-4.5.0.tgz",
      "integrity": "sha512-H5ZhCF25riFd9uB5UCkVKo61m3S/xZk1x4wA6yp/L3RFP6Z/eHH1ymQcGLo7J3GMPfm0V/7m1tryHuGVxpqEBQ=="
    },
    "lodash.merge": {
      "version": "4.6.2",
      "resolved": "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz",
      "integrity": "sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ=="
    },
    "lodash.sortby": {
      "version": "4.7.0",
      "resolved": "https://registry.npmjs.org/lodash.sortby/-/lodash.sortby-4.7.0.tgz",
      "integrity": "sha512-HDWXG8isMntAyRF5vZ7xKuEvOhT4AhlRt/3czTSjvGUxjYCBVRQY48ViDHyfYz9VIoBkW4TMGQNapx+l3RUwdA=="
    },
    "lodash.truncate": {
      "version": "4.4.2",
      "resolved": "https://registry.npmjs.org/lodash.truncate/-/lodash.truncate-4.4.2.tgz",
      "integrity": "sha512-jttmRe7bRse52OsWIMDLaXxWqRAmtIUccAQ3garviCqJjafXOfNMO0yMfNpdD6zbGaTU0P5Nz7e7gAT6cKmJRw=="
    },
    "long": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/long/-/long-4.0.0.tgz",
      "integrity": "sha512-XsP+KhQif4bjX1kbuSiySJFNAehNxgLb6hPRGJ9QsUr8ajHkuXGdrHmFUTUUXhDwVX2R5bY4JNZEwbUiMhV+MA=="
    },
    "lru-cache": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz",
      "integrity": "sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==",
      "requires": {
        "yallist": "^4.0.0"
      }
    },
    "minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "requires": {
        "brace-expansion": "^1.1.7"
      }
    },
    "minimist": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.6.tgz",
      "integrity": "sha512-Jsjnk4bw3YJqYzbdyBiNsPWHPfO++UGG749Cxs6peCu5Xg4nrena6OVxOYxrQTqww0Jmwt+Ref8rggumkTLz9Q=="
    },
    "minipass": {
      "version": "3.3.4",
      "resolved": "https://registry.npmjs.org/minipass/-/minipass-3.3.4.tgz",
      "integrity": "sha512-I9WPbWHCGu8W+6k1ZiGpPu0GkoKBeorkfKNuAFBNS1HNFJvke82sxvI5bzcCNpWPorkOO5QQ+zomzzwRxejXiw==",
      "requires": {
        "yallist": "^4.0.0"
      }
    },
    "minizlib": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/minizlib/-/minizlib-2.1.2.tgz",
      "integrity": "sha512-bAxsR8BVfj60DWXHE3u30oHzfl4G7khkSuPW+qvpd7jFRHm7dLxOjUk1EHACJ/hxLY8phGJ0YhYHZo7jil7Qdg==",
      "requires": {
        "minipass": "^3.0.0",
        "yallist": "^4.0.0"
      }
    },
    "mkdirp": {
      "version": "0.5.6",
      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.6.tgz",
      "integrity": "sha512-FP+p8RB8OWpF3YZBCrP5gtADmtXApB5AMLn+vdyA+PyxCjrCs00mjyUozssO33cwDeT3wNGdLxJ5M//YqtHAJw==",
      "requires": {
        "minimist": "^1.2.6"
      }
    },
    "moo": {
      "version": "0.5.1",
      "resolved": "https://registry.npmjs.org/moo/-/moo-0.5.1.tgz",
      "integrity": "sha512-I1mnb5xn4fO80BH9BLcF0yLypy2UKl+Cb01Fu0hJRkJjlCRtxZMWkTdAtDd5ZqCOxtCkhmRwyI57vWT+1iZ67w=="
    },
    "ms": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
      "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
    },
    "natural-compare": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz",
      "integrity": "sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw=="
    },
    "near-mock-vm": {
      "version": "3.2.2",
      "resolved": "https://registry.npmjs.org/near-mock-vm/-/near-mock-vm-3.2.2.tgz",
      "integrity": "sha512-+jpwEVrJJ3hERMracfGAmvpwS5Yw9Ch1oRCLRD/7Ga/WBomR5RWnafAUr3lnBnswkkoTaKDLp5j/9EN3EVGELA==",
      "requires": {
        "@assemblyscript/loader": "^0.18.9",
        "yargs": "^16.2.0"
      }
    },
    "near-sdk-as": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/near-sdk-as/-/near-sdk-as-3.1.0.tgz",
      "integrity": "sha512-31ZwYwTyPaiG7FFXGWU2u8i5l1ak0BwZCiMLdj0JIpiW4suI+hYN4PXCIf92prAAFD8HTJ5oMdsKKi3bLRwQDQ==",
      "requires": {
        "near-mock-vm": "^3.1.0",
        "near-sdk-bindgen": "^3.1.0",
        "near-sdk-core": "^3.1.0",
        "near-sdk-simulator": "^3.1.0"
      }
    },
    "near-sdk-bindgen": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/near-sdk-bindgen/-/near-sdk-bindgen-3.2.1.tgz",
      "integrity": "sha512-9IuU27FgTXzXGe26iGMQf5+G2IJTpJ2SIIwY6ukAWI03AaPs0m/F6NomCdO/+fMBYMTq2cfeUAnCWskMe1uiYg=="
    },
    "near-sdk-core": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/near-sdk-core/-/near-sdk-core-3.2.1.tgz",
      "integrity": "sha512-vS2tEqUzG5F81RMg+OkwTU0PoGYM54CsYSivNA3lUuFJwWAr4JN3PQwyqwAMJiRAjslqfMXG5iTnDzh3c6Qqng==",
      "requires": {
        "@as-pect/cli": "^6.0.0",
        "as-bignum": "^0.2.15",
        "asbuild": "^0.2.0",
        "assemblyscript": "^0.18.25",
        "assemblyscript-json": "^1.0.0",
        "assemblyscript-temporal": "^1.11.0",
        "bn.js": "^5.1.1",
        "bs58": "^4.0.1",
        "js-base64": "^3.4.3",
        "near-vm": "^1.1.0",
        "visitor-as": "^0.5.0"
      },
      "dependencies": {
        "assemblyscript": {
          "version": "0.18.32",
          "resolved": "https://registry.npmjs.org/assemblyscript/-/assemblyscript-0.18.32.tgz",
          "integrity": "sha512-Py6zremwGhO3nSoI/VxyVUzTZfNhTjzNzFDaUdG4JhPJHeG+FzVlEoNCrw4bE5nPc7F+P2DJ8tZQCqIt15ceKw==",
          "requires": {
            "binaryen": "100.0.0-nightly.20210413",
            "long": "^4.0.0"
          }
        },
        "binaryen": {
          "version": "100.0.0-nightly.20210413",
          "resolved": "https://registry.npmjs.org/binaryen/-/binaryen-100.0.0-nightly.20210413.tgz",
          "integrity": "sha512-EeGLIxQmJS0xnYl+SH34mNBqVMoixKd9nsE7S7z+CtS9A4eoWn3Qjav+XElgunUgXIHAI5yLnYT2TUGnLX2f1w=="
        }
      }
    },
    "near-sdk-simulator": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/near-sdk-simulator/-/near-sdk-simulator-3.2.1.tgz",
      "integrity": "sha512-ITAXyjDwYSDE6mD/q7SYk08NnQUCMe0UBB1gF9zkxicS+NKr6BIDNZ9JfHwKbaukvgZQGcsKUyd1v3luhePQaw=="
    },
    "near-vm": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/near-vm/-/near-vm-1.1.0.tgz",
      "integrity": "sha512-7L8pmtoBJXJ5+ETdXKuFM8E9tvOd5r3IXAxF4khhg73/HC58fCTQVUZKxfF4P6tXx2j3V+gFMnioOgbr2KrpnA==",
      "requires": {
        "binary-install": "^0.0.1"
      }
    },
    "nearley": {
      "version": "2.20.1",
      "resolved": "https://registry.npmjs.org/nearley/-/nearley-2.20.1.tgz",
      "integrity": "sha512-+Mc8UaAebFzgV+KpI5n7DasuuQCHA89dmwm7JXw3TV43ukfNQ9DnBH3Mdb2g/I4Fdxc26pwimBWvjIw0UAILSQ==",
      "requires": {
        "commander": "^2.19.0",
        "moo": "^0.5.0",
        "railroad-diagrams": "^1.0.0",
        "randexp": "0.4.6"
      }
    },
    "once": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
      "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
      "requires": {
        "wrappy": "1"
      }
    },
    "optionator": {
      "version": "0.9.1",
      "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.9.1.tgz",
      "integrity": "sha512-74RlY5FCnhq4jRxVUPKDaRwrVNXMqsGsiW6AJw4XK8hmtm10wC0ypZBLw5IIp85NZMr91+qd1RvvENwg7jjRFw==",
      "requires": {
        "deep-is": "^0.1.3",
        "fast-levenshtein": "^2.0.6",
        "levn": "^0.4.1",
        "prelude-ls": "^1.2.1",
        "type-check": "^0.4.0",
        "word-wrap": "^1.2.3"
      }
    },
    "p-limit": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz",
      "integrity": "sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==",
      "requires": {
        "p-try": "^2.0.0"
      }
    },
    "p-locate": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz",
      "integrity": "sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==",
      "requires": {
        "p-limit": "^2.2.0"
      }
    },
    "p-try": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz",
      "integrity": "sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ=="
    },
    "parent-module": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
      "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
      "requires": {
        "callsites": "^3.0.0"
      }
    },
    "path-exists": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
      "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w=="
    },
    "path-is-absolute": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
      "integrity": "sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg=="
    },
    "path-key": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q=="
    },
    "path-parse": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==",
      "dev": true
    },
    "prelude-ls": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz",
      "integrity": "sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g=="
    },
    "progress": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/progress/-/progress-2.0.3.tgz",
      "integrity": "sha512-7PiHtLll5LdnKIMw100I+8xJXR5gW2QwWYkT6iJva0bXitZKa/XMrSbdmg3r2Xnaidz9Qumd0VPaMrZlF9V9sA=="
    },
    "punycode": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz",
      "integrity": "sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A=="
    },
    "railroad-diagrams": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/railroad-diagrams/-/railroad-diagrams-1.0.0.tgz",
      "integrity": "sha512-cz93DjNeLY0idrCNOH6PviZGRN9GJhsdm9hpn1YCS879fj4W+x5IFJhhkRZcwVgMmFF7R82UA/7Oh+R8lLZg6A=="
    },
    "randexp": {
      "version": "0.4.6",
      "resolved": "https://registry.npmjs.org/randexp/-/randexp-0.4.6.tgz",
      "integrity": "sha512-80WNmd9DA0tmZrw9qQa62GPPWfuXJknrmVmLcxvq4uZBdYqb1wYoKTmnlGUchvVWe0XiLupYkBoXVOxz3C8DYQ==",
      "requires": {
        "discontinuous-range": "1.0.0",
        "ret": "~0.1.10"
      }
    },
    "rechoir": {
      "version": "0.6.2",
      "resolved": "https://registry.npmjs.org/rechoir/-/rechoir-0.6.2.tgz",
      "integrity": "sha512-HFM8rkZ+i3zrV+4LQjwQ0W+ez98pApMGM3HUrN04j3CqzPOzl9nmP15Y8YXNm8QHGv/eacOVEjqhmWpkRV0NAw==",
      "dev": true,
      "requires": {
        "resolve": "^1.1.6"
      }
    },
    "regexpp": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/regexpp/-/regexpp-3.2.0.tgz",
      "integrity": "sha512-pq2bWo9mVD43nbts2wGv17XLiNLya+GklZ8kaDLV2Z08gDCsGpnKn9BFMepvWuHCbyVvY7J5o5+BVvoQbmlJLg=="
    },
    "require-directory": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz",
      "integrity": "sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q=="
    },
    "require-from-string": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/require-from-string/-/require-from-string-2.0.2.tgz",
      "integrity": "sha512-Xf0nWe6RseziFMu+Ap9biiUbmplq6S9/p+7w7YXP/JBHhrUDDUhwa+vANyubuqfZWTveU//DYVGsDG7RKL/vEw=="
    },
    "require-main-filename": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/require-main-filename/-/require-main-filename-2.0.0.tgz",
      "integrity": "sha512-NKN5kMDylKuldxYLSUfrbo5Tuzh4hd+2E8NPPX02mZtn1VuREQToYe/ZdlJy+J3uCpfaiGF05e7B8W0iXbQHmg=="
    },
    "resolve": {
      "version": "1.22.1",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.1.tgz",
      "integrity": "sha512-nBpuuYuY5jFsli/JIs1oldw6fOQCBioohqWZg/2hiaOybXOft4lonv85uDOKXdf8rhyK159cxU5cDcK/NKk8zw==",
      "dev": true,
      "requires": {
        "is-core-module": "^2.9.0",
        "path-parse": "^1.0.7",
        "supports-preserve-symlinks-flag": "^1.0.0"
      }
    },
    "resolve-from": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
      "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g=="
    },
    "ret": {
      "version": "0.1.15",
      "resolved": "https://registry.npmjs.org/ret/-/ret-0.1.15.tgz",
      "integrity": "sha512-TTlYpa+OL+vMMNG24xSlQGEJ3B/RzEfUlLct7b5G/ytav+wPrplCpVMFuwzXbkecJrb6IYo1iFb0S9v37754mg=="
    },
    "rimraf": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz",
      "integrity": "sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==",
      "requires": {
        "glob": "^7.1.3"
      }
    },
    "safe-buffer": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
      "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ=="
    },
    "semver": {
      "version": "7.3.7",
      "resolved": "https://registry.npmjs.org/semver/-/semver-7.3.7.tgz",
      "integrity": "sha512-QlYTucUYOews+WeEujDoEGziz4K6c47V/Bd+LjSSYcA94p+DmINdf7ncaUinThfvZyu13lN9OY1XDxt8C0Tw0g==",
      "requires": {
        "lru-cache": "^6.0.0"
      }
    },
    "set-blocking": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz",
      "integrity": "sha512-KiKBS8AnWGEyLzofFfmvKwpdPzqiy16LvQfK3yv/fVH7Bj13/wl3JSR1J+rfgRE9q7xUJK4qvgS8raSOeLUehw=="
    },
    "shebang-command": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
      "requires": {
        "shebang-regex": "^3.0.0"
      }
    },
    "shebang-regex": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A=="
    },
    "shelljs": {
      "version": "0.8.5",
      "resolved": "https://registry.npmjs.org/shelljs/-/shelljs-0.8.5.tgz",
      "integrity": "sha512-TiwcRcrkhHvbrZbnRcFYMLl30Dfov3HKqzp5tO5b4pt6G/SezKcYhmDg15zXVBswHmctSAQKznqNW2LO5tTDow==",
      "dev": true,
      "requires": {
        "glob": "^7.0.0",
        "interpret": "^1.0.0",
        "rechoir": "^0.6.2"
      }
    },
    "slice-ansi": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/slice-ansi/-/slice-ansi-4.0.0.tgz",
      "integrity": "sha512-qMCMfhY040cVHT43K9BFygqYbUPFZKHOg7K73mtTWJRb8pyP3fzf4Ixd5SzdEJQ6MRUg/WBnOLxghZtKKurENQ==",
      "requires": {
        "ansi-styles": "^4.0.0",
        "astral-regex": "^2.0.0",
        "is-fullwidth-code-point": "^3.0.0"
      }
    },
    "source-map": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
      "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
      "peer": true
    },
    "source-map-support": {
      "version": "0.5.21",
      "resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.21.tgz",
      "integrity": "sha512-uBHU3L3czsIyYXKX88fdrGovxdSCoTGDRZ6SYXtSRxLZUzHg5P/66Ht6uoUlHu9EZod+inXhKo3qQgwXUT/y1w==",
      "peer": true,
      "requires": {
        "buffer-from": "^1.0.0",
        "source-map": "^0.6.0"
      }
    },
    "sprintf-js": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz",
      "integrity": "sha512-D9cPgkvLlV3t3IzL0D0YLvGA9Ahk4PcvVwUbN0dSGr1aP0Nrt4AEnTUbuGvquEC0mA64Gqt1fzirlRs5ibXx8g=="
    },
    "string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "requires": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      }
    },
    "strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "requires": {
        "ansi-regex": "^5.0.1"
      }
    },
    "strip-json-comments": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz",
      "integrity": "sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig=="
    },
    "supports-color": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
      "requires": {
        "has-flag": "^4.0.0"
      }
    },
    "supports-preserve-symlinks-flag": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
      "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
      "dev": true
    },
    "table": {
      "version": "6.8.0",
      "resolved": "https://registry.npmjs.org/table/-/table-6.8.0.tgz",
      "integrity": "sha512-s/fitrbVeEyHKFa7mFdkuQMWlH1Wgw/yEXMt5xACT4ZpzWFluehAxRtUUQKPuWhaLAWhFcVx6w3oC8VKaUfPGA==",
      "requires": {
        "ajv": "^8.0.1",
        "lodash.truncate": "^4.4.2",
        "slice-ansi": "^4.0.0",
        "string-width": "^4.2.3",
        "strip-ansi": "^6.0.1"
      },
      "dependencies": {
        "ajv": {
          "version": "8.11.0",
          "resolved": "https://registry.npmjs.org/ajv/-/ajv-8.11.0.tgz",
          "integrity": "sha512-wGgprdCvMalC0BztXvitD2hC04YffAvtsUn93JbGXYLAtCUO4xd17mCCZQxUOItiBwZvJScWo8NIvQMQ71rdpg==",
          "requires": {
            "fast-deep-equal": "^3.1.1",
            "json-schema-traverse": "^1.0.0",
            "require-from-string": "^2.0.2",
            "uri-js": "^4.2.2"
          }
        },
        "json-schema-traverse": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-1.0.0.tgz",
          "integrity": "sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug=="
        }
      }
    },
    "tar": {
      "version": "5.0.11",
      "resolved": "https://registry.npmjs.org/tar/-/tar-5.0.11.tgz",
      "integrity": "sha512-E6q48d5y4XSCD+Xmwc0yc8lXuyDK38E0FB8N4S/drQRtXOMUhfhDxbB0xr2KKDhNfO51CFmoa6Oz00nAkWsjnA==",
      "requires": {
        "chownr": "^1.1.4",
        "fs-minipass": "^2.1.0",
        "minipass": "^3.1.3",
        "minizlib": "^2.1.2",
        "mkdirp": "^0.5.5",
        "yallist": "^4.0.0"
      }
    },
    "text-table": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz",
      "integrity": "sha512-N+8UisAXDGk8PFXP4HAzVR9nbfmVJ3zYLAWiTIoqC5v5isinhr+r5uaO8+7r3BMfuNIufIsA7RdpVgacC2cSpw=="
    },
    "tr46": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/tr46/-/tr46-1.0.1.tgz",
      "integrity": "sha512-dTpowEjclQ7Kgx5SdBkqRzVhERQXov8/l9Ft9dVM9fmg0W0KQSVaXX9T4i6twCPNtYiZM53lpSSUAwJbFPOHxA==",
      "requires": {
        "punycode": "^2.1.0"
      }
    },
    "ts-mixer": {
      "version": "5.4.1",
      "resolved": "https://registry.npmjs.org/ts-mixer/-/ts-mixer-5.4.1.tgz",
      "integrity": "sha512-Zo9HgPCtNouDgJ+LGtrzVOjSg8+7WGQktIKLwAfaNrlOK1mWGlz1ejsAF/YqUEqAGjUTeB5fEg8gH9Aui6w9xA=="
    },
    "type-check": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz",
      "integrity": "sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==",
      "requires": {
        "prelude-ls": "^1.2.1"
      }
    },
    "type-fest": {
      "version": "0.20.2",
      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.20.2.tgz",
      "integrity": "sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ=="
    },
    "universal-url": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/universal-url/-/universal-url-2.0.0.tgz",
      "integrity": "sha512-3DLtXdm/G1LQMCnPj+Aw7uDoleQttNHp2g5FnNQKR6cP6taNWS1b/Ehjjx4PVyvejKi3TJyu8iBraKM4q3JQPg==",
      "requires": {
        "hasurl": "^1.0.0",
        "whatwg-url": "^7.0.0"
      }
    },
    "uri-js": {
      "version": "4.4.1",
      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
      "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
      "requires": {
        "punycode": "^2.1.0"
      }
    },
    "v8-compile-cache": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/v8-compile-cache/-/v8-compile-cache-2.3.0.tgz",
      "integrity": "sha512-l8lCEmLcLYZh4nbunNZvQCJc5pv7+RCwa8q/LdUx8u7lsWvPDKmpodJAJNwkAhJC//dFY48KuIEmjtd4RViDrA=="
    },
    "visitor-as": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/visitor-as/-/visitor-as-0.5.0.tgz",
      "integrity": "sha512-U2P13pa7BAnfj6IEbP4feS1Rci6NT4GlDcwpqkk90u7LGalc5jH9aMuWnxTC8RJJ92iZzDQ8Lea5/OnLDsgzlw==",
      "requires": {
        "lodash.clonedeep": "^4.5.0",
        "ts-mixer": "^5.1.0"
      }
    },
    "webidl-conversions": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-4.0.2.tgz",
      "integrity": "sha512-YQ+BmxuTgd6UXZW3+ICGfyqRyHXVlD5GtQr5+qjiNW7bF0cqrzX500HVXPBOvgXb5YnzDd+h0zqyv61KUD7+Sg=="
    },
    "whatwg-url": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-7.1.0.tgz",
      "integrity": "sha512-WUu7Rg1DroM7oQvGWfOiAK21n74Gg+T4elXEQYkOhtyLeWiJFoOGLXPKI/9gzIie9CtwVLm8wtw6YJdKyxSjeg==",
      "requires": {
        "lodash.sortby": "^4.7.0",
        "tr46": "^1.0.1",
        "webidl-conversions": "^4.0.2"
      }
    },
    "which": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
      "requires": {
        "isexe": "^2.0.0"
      }
    },
    "which-module": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/which-module/-/which-module-2.0.0.tgz",
      "integrity": "sha512-B+enWhmw6cjfVC7kS8Pj9pCrKSc5txArRyaYGe088shv/FGWH+0Rjx/xPgtsWfsUtS27FkP697E4DDhgrgoc0Q=="
    },
    "word-wrap": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.3.tgz",
      "integrity": "sha512-Hz/mrNwitNRh/HUAtM/VT/5VH+ygD6DV7mYKZAtHOrbs8U7lvPS6xf7EJKMF0uW1KJCl0H701g3ZGus+muE5vQ=="
    },
    "wrap-ansi": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
      "requires": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      }
    },
    "wrappy": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
      "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ=="
    },
    "y18n": {
      "version": "5.0.8",
      "resolved": "https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz",
      "integrity": "sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA=="
    },
    "yallist": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
      "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A=="
    },
    "yargs": {
      "version": "16.2.0",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-16.2.0.tgz",
      "integrity": "sha512-D1mvvtDG0L5ft/jGWkLpG1+m0eQxOfaBvTNELraWj22wSVUMWxZUvYgJYcKh6jGGIkJFhH4IZPQhR4TKpc8mBw==",
      "requires": {
        "cliui": "^7.0.2",
        "escalade": "^3.1.1",
        "get-caller-file": "^2.0.5",
        "require-directory": "^2.1.1",
        "string-width": "^4.2.0",
        "y18n": "^5.0.5",
        "yargs-parser": "^20.2.2"
      }
    },
    "yargs-parser": {
      "version": "20.2.9",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-20.2.9.tgz",
      "integrity": "sha512-y11nGElTIV+CT3Zv9t7VKl+Q3hTQoT9a1Qzezhhl6Rp21gJ/IVTW7Z3y9EWXhuUBC2Shnf+DX0antecpAwSP8w=="
    }
  }
}

'''
'''--- contract/package.json ---
{
  "name": "nsocial",
  "version": "0.0.1",
  "license": "UNLICENSED",
  "private": true,
  "scripts": {
    "build": "asb",
    "build:debug": "asb --target debug",
    "test": "asp --nologo"
  },
  "dependencies": {
    "near-sdk-as": "^3.2.3"
  },
  "devDependencies": {
    "shelljs": "^0.8.4"
  }
}

'''
'''--- dist/index.html ---
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <link rel="icon" href="/favicon.df682a99.ico">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="apple-touch-icon" href="/favicon.df682a99.ico">
    <title></title>
  <link rel="stylesheet" href="/src.e31bb0bc.css"></head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
    <!--
      This HTML file is a template.
      If you open it directly in the browser, you will see an empty page.

      You can add webfonts, meta tags, or analytics to this file.
      The build step will place the bundled scripts into the <body> tag.

      To begin the development, run `npm start` or `yarn start`.
      To create a production bundle, use `npm run build` or `yarn build`.
    -->
    <script src="/src.e31bb0bc.js"></script>
  </body>
</html>

'''
'''--- dist/src.e31bb0bc.css ---
html,
body {
  margin: 0;
  padding: 0;
  max-width: 500px;
  margin: 0 auto;
  display: block;
}

h2 {
  text-align: center;
  z-index: 999;
}

#header {
  position: fixed;
  z-index: 9999;
  border-bottom: 1px solid rgba(0, 0, 0, 0.12);
  box-shadow: none;
  color: black;
  text-align: center;
  background: white;
}

.post {
  border-radius: 3px;
  margin: 15px 0px;
}

.hideBtn {
  display: none;
}

.btn-wrap {
  position: relative;
  width: 100%;
}

.donate-btn {
  width: 35px !important;
  position: absolute !important;
  right: 10px !important;

}

#loginBtn {
  margin-top: 60%;
  padding: 50px;
  display: block;
  text-align: center;
}

#loginBtn button {
  padding: 16px;
  border: 3px solid;
  font-weight: bold;
}

#loginBtn .login-btn-img {
  width: 27px;
  margin-left: 21px;
}

.donate-btn img {
  width: 100%;
}

.video-container {
  height: 100%;
  width: 450px;
  position: relative;
  top: 4em;
  display: flex;
  justify-content: center;
  margin-top: -4em;
}

.App {
  display: flex;
  justify-content: center;
  min-width: 60%;

}

h1 {
  text-align: center;
  z-index: 999;
}

#play-btn {
  position: absolute;
  top: 18em;
  height: 100px;
  display: none;
}

#heart {
  position: absolute;
  color: white;
  font-size: 45px;

  cursor: pointer;
}

#heart2 {
  position: absolute;
  top: 18em;
  font-size: 45px;
  top: 16.5em;
  left: 9.6em;
  display: none;
  color: white;
}

#btns {
  position: absolute;
  left: 83%;
  top: 55%;
  z-index: 4;
  display: flex;
  flex-direction: column;
}

#icons {
  color: white;
}

h1 {
  z-index: 7;
  position: absolute;
  font-size: 0.9em;
  top: 90%;
  color: white;
  text-align: left;
}

/* 
#logo {
  position: fixed;
  height: 21px;
  left: 10px;
  top: -5px;
  font-size: 15px;
  text-shadow: 2px 2px #e70909, -3px -3px 2.4px #2bc5e0;
} */

/* #loading {
  color: white;
  display: flex;
  justify-content: center;
  position: relative;
  top: 18em;
} */

/* #title {
  z-index: 9999;
  position: relative;
  color: white;
  font-family: "Roboto", sans-serif;
  left: 1em;
  bottom: 3.7em;
  font-size: 0.9em;
} */

#like-count {
  color: white;
  position: absolute;
  text-align: justify;
  bottom: -1em;
  left: 1.75em;
}

#author {
  text-decoration: underline;
  position: relative;
  margin: 0px;
  font-size: 1em;
  z-index: 9999;
  color: white;
  text-transform: lowercase;
  font-family: "Roboto", sans-serif;
  left: 1em;
  bottom: 3em;
  letter-spacing: 0.8px;
  font-weight: bolder;
}

#btns {
  display: flex;
  justify-content: center;
}

::-webkit-scrollbar {
  width: 0px;
  /* Remove scrollbar space */
  background: transparent;
  /* Optional: just make scrollbar invisible */
}

#menu {
  position: absolute;
  bottom: 0px;
  height: 25px;
  background: red;
  width: 100%;
  z-index: 999;
}

.liked-404{
  text-align: center;
  font-size:26px;
}

.liked-404 a{
  font-size:40px;
}

#menu .menu-btn {
  float: left;
  padding: 0px 5px;

}

.cmtUid {
  font-size: 13px;
  font-weight: bold;
}

.cmtContent {
  font-size: 15px;
  margin: 10px 0px;
}

a {
  text-decoration: none !important;
  color: unset !important;
}

@media only screen and (max-width: 550px) {

  #author-title {
    top: 78%;
  }

  #btns {
    top: 55%;
  }
}

video {
  border-radius: 0;
  width: 100%;
  text-align: center;
  background: #fff;
}

.upload-section {
  margin-bottom: 15px;
}

.single-title, .post-home-title{
  font-size: 18px;
  font-weight: bold;
  color: black;
}

.single-desc, .post-home-desc{
  color: black;
  padding-top: 15px;
  white-space: pre-wrap;
}
.comment-wrapper,
.MuiDrawer-paperAnchorBottom,
.comment-post {
  max-width: 750px;
  margin: 0 auto;
  display: block;
  padding-bottom: 50px;
}

.logo-img{
  max-width: 30px;
  padding-right: 5px;
}
#body {
  padding-top: 75px;
  padding-bottom: 75px;
  max-width: 500px;
  width:100%;
}

.post .MuiCardHeader-title {
  font-weight: bold;
  font-size: 16px;
}

.post .MuiCardHeader-subheader {
  font-size: 11px;
}

.post .MuiCardContent-root .MuiTypography-body2 {
  font-size: 15px;
  margin: 0px;

}

/* single post  */
#single-page .post .MuiPaper-root.MuiPaper-outlined {
  border: none !important;

}

#single-page .single-comment-input {
  margin-bottom: 0px;
  border: 1px solid rgba(0, 0, 0, 0.2);
  padding: 10px;
}

.share-btn {
  position: absolute;
  left: 115px;
  bottom: 5px;
}

.share-btn>div>button.MuiButtonBase-root.MuiFab-root {
  box-shadow: none !important;
  background: none;
  color: rgba(0, 0, 0, 0.54);
}

.home-share-btn .share-btn {
  left:80px;
}

.comments-section #loginBtn {
  padding:0;
  margin-top:15px;
  text-align:center;
  transform:scale(0.6);
  
}

.comments-section #loginBtn button{
  padding:5px;
  border:2px solid gray;
  color:gray;
  text-transform:unset;
}

.related-post-title{
  font-weight: bold;
}

#body video{
  min-height: 200px;
}

.comment-post  button{
  transform:scale(1.5);
}

/*# sourceMappingURL=/src.e31bb0bc.css.map */
'''
'''--- neardev/dev-account.env ---
CONTRACT_NAME=dev-1663105566196-36740716411964
'''
'''--- package.json ---
{
  "name": "web4social",
  "version": "0.1.0",
  "license": "UNLICENSED",
  "scripts": {
    "build": "npm run build:contract && npm run build:web",
    "build:contract": "node contract/compile.js",
    "build:contract:debug": "node contract/compile.js --debug",
    "build:web": "parcel build src/index.html --public-url ./",
    "dev:deploy:contract": "near dev-deploy",
    "deploy:contract": "near deploy",
    "deploy:pages": "gh-pages -d dist/",
    "deploy": "npm run build && npm run deploy:contract && npm run deploy:pages",
    "prestart": "npm run build:contract:debug && npm run dev:deploy:contract",
    "start": "echo The app is starting! It will automatically open in your browser when ready && env-cmd -f ./neardev/dev-account.env parcel src/index.html --open",
    "dev": "nodemon --watch contract -e ts --exec \"npm run start\"",
    "test": "npm run build:contract:debug && cd contract && npm run test && cd .. && jest test --runInBand"
  },
  "devDependencies": {
    "@babel/core": "~7.14.0",
    "@babel/preset-env": "~7.14.0",
    "@babel/preset-react": "~7.13.13",
    "assemblyscript": "^0.20.13",
    "babel-jest": "~26.6.2",
    "env-cmd": "~10.1.0",
    "gh-pages": "~3.1.0",
    "jest": "~26.6.2",
    "jest-environment-node": "~26.6.2",
    "near-cli": "~2.1.1",
    "near-sdk-as": "^3.2.3",
    "nodemon": "~2.0.3",
    "parcel-bundler": "~1.12.4",
    "react-test-renderer": "~17.0.1",
    "shelljs": "~0.8.4"
  },
  "dependencies": {
    "@emotion/react": "^11.9.0",
    "@emotion/styled": "^11.8.1",
    
    "@types/react": "^17.0.0",
    "ipfs-http-client": "^54.0.1",
    "near-api-js": "~0.43.1",
    "react": "^17.0.0",
    "react-dom": "^17.0.0",
    "react-router-dom": "^6.3.0",
    "regenerator-runtime": "~0.13.5",
    "uuid": "^8.3.2"
  },
  "resolutions": {
    "@babel/preset-env": "7.13.8"
  },
  "jest": {
    "moduleNameMapper": {
      "\\.(jpg|ico|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/src/__mocks__/fileMock.js",
      "\\.(css|less)$": "<rootDir>/src/__mocks__/fileMock.js"
    },
    "setupFiles": [
      "<rootDir>/src/jest.init.js"
    ],
    "testEnvironment": "near-cli/test_environment",
    "testPathIgnorePatterns": [
      "<rootDir>/contract/",
      "<rootDir>/node_modules/"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}

'''
'''--- src/App.js ---
import React, { useEffect, useState } from "react";
import "./assets/css/app.css";
import { BrowserRouter, Link, Routes, Route } from 'react-router-dom'
import { login, logout } from './utils'
import getConfig from './config'
const { networkId } = getConfig(process.env.NODE_ENV || 'development')
import Single from "./pages/Single";
//Uis 
import Header from "./components/Header";
import Home from "./pages/Home";
import Liked from "./pages/Liked";
import Profile from "./pages/Profile";
import Upload from "./pages/Upload";

//menu 
import Box from '@mui/material/Box';
import CssBaseline from '@mui/material/CssBaseline';
import BottomNavigation from '@mui/material/BottomNavigation';
import BottomNavigationAction from '@mui/material/BottomNavigationAction';
import FavoriteIcon from '@mui/icons-material/Favorite';
import Paper from '@mui/material/Paper';
import  Person from "@mui/icons-material";
import  AddCircle  from "@mui/icons-material";
import HomeIcon from '@mui/icons-material/Radar';
import LoginBtn from "./components/LoginBtn";

function App() {
  const [loggedIn, setLoggedIn] = useState(false);

  const [showNotification, setShowNotification] = useState(false)
  const [loading, setload] = useState(null);
  const [data, setData] = useState([
    {
      video: [],
      author: [],
      title: [],
    },
  ]);

  function MenuBar() {
     return (
      <>
        <BrowserRouter>
          <Box >
            <CssBaseline />
            <Paper sx={{ position: 'fixed', bottom: 0, left: 0, right: 0, zIndex: 9999 }} elevation={4}>
              <BottomNavigation
                showLabels
              >
                <BottomNavigationAction to="/" component={Link} label="Home" icon={<HomeIcon />} />
                <BottomNavigationAction to="/upload" component={Link} label="Upload" icon={<AddCircle />} />
                <BottomNavigationAction to="/liked" component={Link} label="Favorites" icon={<FavoriteIcon />} />
                <BottomNavigationAction to="/profile" component={Link} label="Profile" icon={<Person />} />

              </BottomNavigation>
            </Paper>
          </Box>

          <Routes>
            <Route path="/" element={<Home />} />
            <Route path="/upload" element={ loggedIn ?  <Upload /> : <LoginBtn/> } />
            <Route path="/profile" element= {loggedIn ? <Profile /> : <LoginBtn/>  }  />
            <Route path="/liked" element={  loggedIn ? <Liked /> : <LoginBtn/>  } />
            {/* <Route path="/comment" element={<Comment />} /> */}
            {/* <Route path="/single" element={<Single />} /> */}
            {/* <Route path="/test" element={<Test />} /> */}

            <Route path="/@:walletid" element={<Profile/>} />
            <Route path="/@:walletid/p:postid" element={<Single/>} />
          </Routes>
        </BrowserRouter>
      </>
    )
    
  }

  React.useEffect(() => {
    console.log("window contract: ", window.contract)
    // in this case, we only care to query the contract when signed in
    if (window.walletConnection.isSignedIn()) {
      setLoggedIn(true);
    } else {
      setLoggedIn(false);
    }
  }, [])

  return (
    <div className="App">
      <Header />

      <div id="body">

        {MenuBar()}

      </div>

    </div>
  );
}//App 

// this component gets rendered by App after the form is submitted
function Notification() {
  const urlPrefix = `https://explorer.${networkId}.near.org/accounts`
  return (
    <aside>
      <a target="_blank" rel="noreferrer" href={`${urlPrefix}/${window.accountId}`}>
        {window.accountId}
      </a>
      {' '/* React trims whitespace around tags; insert literal space character when needed */}
      called method: 'setGreeting' in contract:
      {' '}
      <a target="_blank" rel="noreferrer" href={`${urlPrefix}/${window.contract.contractId}`}>
        {window.contract.contractId}
      </a>
      <footer>
        <div>✔ Succeeded</div>
        <div>Just now</div>
      </footer>
    </aside>
  )
}

export default App;

'''
'''--- src/__mocks__/fileMock.js ---
// NOTE: This is used to mock resource imports in JSX for tests
module.exports = '' 

'''
'''--- src/assets/css/app.css ---
html,
body {
  margin: 0;
  padding: 0;
  max-width: 500px;
  margin: 0 auto;
  display: block;
}

h2 {
  text-align: center;
  z-index: 999;
}

#header {
  position: fixed;
  z-index: 9999;
  border-bottom: 1px solid rgba(0, 0, 0, 0.12);
  box-shadow: none;
  color: black;
  text-align: center;
  background: white;
}

.post {
  border-radius: 3px;
  margin: 15px 0px;
}

.hideBtn {
  display: none;
}

.btn-wrap {
  position: relative;
  width: 100%;
}

.donate-btn {
  width: 35px !important;
  position: absolute !important;
  right: 10px !important;

}

#loginBtn {
  margin-top: 60%;
  padding: 50px;
  display: block;
  text-align: center;
}

#loginBtn button {
  padding: 16px;
  border: 3px solid;
  font-weight: bold;
}

#loginBtn .login-btn-img {
  width: 27px;
  margin-left: 21px;
}

.donate-btn img {
  width: 100%;
}

.video-container {
  height: 100%;
  width: 450px;
  position: relative;
  top: 4em;
  display: flex;
  justify-content: center;
  margin-top: -4em;
}

.App {
  display: flex;
  justify-content: center;
  min-width: 60%;

}

h1 {
  text-align: center;
  z-index: 999;
}

#play-btn {
  position: absolute;
  top: 18em;
  height: 100px;
  display: none;
}

#heart {
  position: absolute;
  color: white;
  font-size: 45px;

  cursor: pointer;
}

#heart2 {
  position: absolute;
  top: 18em;
  font-size: 45px;
  top: 16.5em;
  left: 9.6em;
  display: none;
  color: white;
}

#btns {
  position: absolute;
  left: 83%;
  top: 55%;
  z-index: 4;
  display: flex;
  flex-direction: column;
}

#icons {
  color: white;
}

h1 {
  z-index: 7;
  position: absolute;
  font-size: 0.9em;
  top: 90%;
  color: white;
  text-align: left;
}

/* 
#logo {
  position: fixed;
  height: 21px;
  left: 10px;
  top: -5px;
  font-size: 15px;
  text-shadow: 2px 2px #e70909, -3px -3px 2.4px #2bc5e0;
} */

/* #loading {
  color: white;
  display: flex;
  justify-content: center;
  position: relative;
  top: 18em;
} */

/* #title {
  z-index: 9999;
  position: relative;
  color: white;
  font-family: "Roboto", sans-serif;
  left: 1em;
  bottom: 3.7em;
  font-size: 0.9em;
} */

#like-count {
  color: white;
  position: absolute;
  text-align: justify;
  bottom: -1em;
  left: 1.75em;
}

#author {
  text-decoration: underline;
  position: relative;
  margin: 0px;
  font-size: 1em;
  z-index: 9999;
  color: white;
  text-transform: lowercase;
  font-family: "Roboto", sans-serif;
  left: 1em;
  bottom: 3em;
  letter-spacing: 0.8px;
  font-weight: bolder;
}

#btns {
  display: flex;
  justify-content: center;
}

::-webkit-scrollbar {
  width: 0px;
  /* Remove scrollbar space */
  background: transparent;
  /* Optional: just make scrollbar invisible */
}

#menu {
  position: absolute;
  bottom: 0px;
  height: 25px;
  background: red;
  width: 100%;
  z-index: 999;
}

.liked-404{
  text-align: center;
  font-size:26px;
}

.liked-404 a{
  font-size:40px;
}

#menu .menu-btn {
  float: left;
  padding: 0px 5px;

}

.cmtUid {
  font-size: 13px;
  font-weight: bold;
}

.cmtContent {
  font-size: 15px;
  margin: 10px 0px;
}

a {
  text-decoration: none !important;
  color: unset !important;
}

@media only screen and (max-width: 550px) {

  #author-title {
    top: 78%;
  }

  #btns {
    top: 55%;
  }
}

video {
  border-radius: 0;
  width: 100%;
  text-align: center;
  background: #fff;
}

.upload-section {
  margin-bottom: 15px;
}

.single-title, .post-home-title{
  font-size: 18px;
  font-weight: bold;
  color: black;
}

.single-desc, .post-home-desc{
  color: black;
  padding-top: 15px;
  white-space: pre-wrap;
}
.comment-wrapper,
.MuiDrawer-paperAnchorBottom,
.comment-post {
  max-width: 750px;
  margin: 0 auto;
  display: block;
  padding-bottom: 50px;
}

.logo-img{
  max-width: 30px;
  padding-right: 5px;
}
#body {
  padding-top: 75px;
  padding-bottom: 75px;
  max-width: 500px;
  width:100%;
}

.post .MuiCardHeader-title {
  font-weight: bold;
  font-size: 16px;
}

.post .MuiCardHeader-subheader {
  font-size: 11px;
}

.post .MuiCardContent-root .MuiTypography-body2 {
  font-size: 15px;
  margin: 0px;

}

/* single post  */
#single-page .post .MuiPaper-root.MuiPaper-outlined {
  border: none !important;

}

#single-page .single-comment-input {
  margin-bottom: 0px;
  border: 1px solid rgba(0, 0, 0, 0.2);
  padding: 10px;
}

.share-btn {
  position: absolute;
  left: 115px;
  bottom: 5px;
}

.share-btn>div>button.MuiButtonBase-root.MuiFab-root {
  box-shadow: none !important;
  background: none;
  color: rgba(0, 0, 0, 0.54);
}

.home-share-btn .share-btn {
  left:80px;
}

.comments-section #loginBtn {
  padding:0;
  margin-top:15px;
  text-align:center;
  transform:scale(0.6);
  
}

.comments-section #loginBtn button{
  padding:5px;
  border:2px solid gray;
  color:gray;
  text-transform:unset;
}

.related-post-title{
  font-weight: bold;
}

#body video{
  min-height: 200px;
}

.comment-post  button{
  transform:scale(1.5);
}

'''
'''--- src/assets/logo-black.svg ---
<svg viewBox="0 0 288 288" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><linearGradient id="a" gradientUnits="userSpaceOnUse" x1="76.81" x2="211.16" y1="211.17" y2="76.81"><stop offset=".21" stop-color="#24272a"/><stop offset=".42" stop-color="#24272a" stop-opacity="0"/><stop offset=".59" stop-color="#24272a" stop-opacity="0"/><stop offset=".81" stop-color="#24272a"/></linearGradient><path d="m88.46 216a16.45 16.45 0 0 0 12.46-5.71l112.56-130.57a16.42 16.42 0 0 0 -13.94-7.72 16.46 16.46 0 0 0 -12.41 5.65l-113.13 129.8a16.46 16.46 0 0 0 14.46 8.55z" fill="url(#a)"/><path d="m88.46 216a16.46 16.46 0 0 0 7.54-1.83v-109l87.45 104.94a16.44 16.44 0 0 0 12.64 5.89h3.45a16.46 16.46 0 0 0 16.46-16.46v-111.08a16.46 16.46 0 0 0 -16.46-16.46 16.36 16.36 0 0 0 -7.54 1.81v109.05l-87.45-104.94a16.44 16.44 0 0 0 -12.64-5.92h-3.45a16.46 16.46 0 0 0 -16.46 16.46v111.08a16.46 16.46 0 0 0 16.46 16.46z" fill="#24272a"/></svg>
'''
'''--- src/assets/logo-white.svg ---
<svg viewBox="0 0 288 288" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><linearGradient id="a" gradientUnits="userSpaceOnUse" x1="76.81" x2="211.16" y1="211.17" y2="76.81"><stop offset=".21" stop-color="#fff"/><stop offset=".42" stop-color="#fff" stop-opacity="0"/><stop offset=".59" stop-color="#fff" stop-opacity="0"/><stop offset=".81" stop-color="#fff"/></linearGradient><path d="m88.46 216a16.45 16.45 0 0 0 12.46-5.71l112.56-130.57a16.42 16.42 0 0 0 -13.94-7.72 16.46 16.46 0 0 0 -12.41 5.65l-113.13 129.8a16.46 16.46 0 0 0 14.46 8.55z" fill="url(#a)"/><path d="m88.46 216a16.46 16.46 0 0 0 7.54-1.83v-109l87.45 104.94a16.44 16.44 0 0 0 12.64 5.89h3.45a16.46 16.46 0 0 0 16.46-16.46v-111.08a16.46 16.46 0 0 0 -16.46-16.46 16.36 16.36 0 0 0 -7.54 1.81v109.05l-87.45-104.94a16.44 16.44 0 0 0 -12.64-5.92h-3.45a16.46 16.46 0 0 0 -16.46 16.46v111.08a16.46 16.46 0 0 0 16.46 16.46z" fill="#fff"/></svg>
'''
'''--- src/bApp.js ---
import 'regenerator-runtime/runtime'
import React from 'react'
import { login, logout } from './utils'
import './global.css'

import getConfig from './config'
const { networkId } = getConfig(process.env.NODE_ENV || 'development')

export default function App() {
  // use React Hooks to store greeting in component state
  const [greeting, setGreeting] = React.useState()

  // when the user has not yet interacted with the form, disable the button
  const [buttonDisabled, setButtonDisabled] = React.useState(true)

  // after submitting the form, we want to show Notification
  const [showNotification, setShowNotification] = React.useState(false)

  // The useEffect hook can be used to fire side-effects during render
  // Learn more: https://reactjs.org/docs/hooks-intro.html
  React.useEffect(
    () => {
      // in this case, we only care to query the contract when signed in
      if (window.walletConnection.isSignedIn()) {

        // window.contract is set by initContract in index.js
        window.contract.getGreeting({ accountId: window.accountId })
          .then(greetingFromContract => {
            setGreeting(greetingFromContract)
          })
      }
    },

    // The second argument to useEffect tells React when to re-run the effect
    // Use an empty array to specify "only run on first render"
    // This works because signing into NEAR Wallet reloads the page
    []
  )

  // if not signed in, return early with sign-in prompt
  if (!window.walletConnection.isSignedIn()) {
    return (
      <main>
        <h1>Welcome to NEAR!</h1>
        <p>
          To make use of the NEAR blockchain, you need to sign in. The button
          below will sign you in using NEAR Wallet.
        </p>
        <p>
          By default, when your app runs in "development" mode, it connects
          to a test network ("testnet") wallet. This works just like the main
          network ("mainnet") wallet, but the NEAR Tokens on testnet aren't
          convertible to other currencies – they're just for testing!
        </p>
        <p>
          Go ahead and click the button below to try it out:
        </p>
        <p style={{ textAlign: 'center', marginTop: '2.5em' }}>
          <button onClick={login}>Sign in</button>
        </p>
      </main>
    )
  }

  return (
    // use React Fragment, <>, to avoid wrapping elements in unnecessary divs
    <>
      <button className="link" style={{ float: 'right' }} onClick={logout}>
        Sign out
      </button>
      <main>
        <h1>
          <label
            htmlFor="greeting"
            style={{
              color: 'var(--secondary)',
              borderBottom: '2px solid var(--secondary)'
            }}
          >
            {greeting}
          </label>
          {' '/* React trims whitespace around tags; insert literal space character when needed */}
          {window.accountId}!
        </h1>
        <form onSubmit={async event => {
          event.preventDefault()

          // get elements from the form using their id attribute
          const { fieldset, greeting } = event.target.elements

          // hold onto new user-entered value from React's SynthenticEvent for use after `await` call
          const newGreeting = greeting.value

          // disable the form while the value gets updated on-chain
          fieldset.disabled = true

          try {
            // make an update call to the smart contract
            await window.contract.setGreeting({
              // pass the value that the user entered in the greeting field
              message: newGreeting
            })
          } catch (e) {
            alert(
              'Something went wrong! ' +
              'Maybe you need to sign out and back in? ' +
              'Check your browser console for more info.'
            )
            throw e
          } finally {
            // re-enable the form, whether the call succeeded or failed
            fieldset.disabled = false
          }

          // update local `greeting` variable to match persisted value
          setGreeting(newGreeting)

          // show Notification
          setShowNotification(true)

          // remove Notification again after css animation completes
          // this allows it to be shown again next time the form is submitted
          setTimeout(() => {
            setShowNotification(false)
          }, 11000)
        }}>
          <fieldset id="fieldset">
            <label
              htmlFor="greeting"
              style={{
                display: 'block',
                color: 'var(--gray)',
                marginBottom: '0.5em'
              }}
            >
              Change greeting
            </label>
            <div style={{ display: 'flex' }}>
              <input
                autoComplete="off"
                defaultValue={greeting}
                id="greeting"
                onChange={e => setButtonDisabled(e.target.value === greeting)}
                style={{ flex: 1 }}
              />
              <button
                disabled={buttonDisabled}
                style={{ borderRadius: '0 5px 5px 0' }}
              >
                Save
              </button>
            </div>
          </fieldset>
        </form>
        <p>
          Look at that! A Hello World app! This greeting is stored on the NEAR blockchain. Check it out:
        </p>
        <ol>
          <li>
            Look in <code>src/App.js</code> and <code>src/utils.js</code> – you'll see <code>getGreeting</code> and <code>setGreeting</code> being called on <code>contract</code>. What's this?
          </li>
          <li>
            Ultimately, this <code>contract</code> code is defined in <code>assembly/main.ts</code> – this is the source code for your <a target="_blank" rel="noreferrer" href="https://docs.near.org/docs/develop/contracts/overview">smart contract</a>.</li>
          <li>
            When you run <code>yarn dev</code>, the code in <code>assembly/main.ts</code> gets deployed to the NEAR testnet. You can see how this happens by looking in <code>package.json</code> at the <code>scripts</code> section to find the <code>dev</code> command.</li>
        </ol>
        <hr />
        <p>
          To keep learning, check out <a target="_blank" rel="noreferrer" href="https://docs.near.org">the NEAR docs</a> or look through some <a target="_blank" rel="noreferrer" href="https://examples.near.org">example apps</a>.
        </p>
      </main>
      {showNotification && <Notification />}
    </>
  )
}

// this component gets rendered by App after the form is submitted
function Notification() {
  const urlPrefix = `https://explorer.${networkId}.near.org/accounts`
  return (
    <aside>
      <a target="_blank" rel="noreferrer" href={`${urlPrefix}/${window.accountId}`}>
        {window.accountId}
      </a>
      {' '/* React trims whitespace around tags; insert literal space character when needed */}
      called method: 'setGreeting' in contract:
      {' '}
      <a target="_blank" rel="noreferrer" href={`${urlPrefix}/${window.contract.contractId}`}>
        {window.contract.contractId}
      </a>
      <footer>
        <div>✔ Succeeded</div>
        <div>Just now</div>
      </footer>
    </aside>
  )
}

'''
'''--- src/components/DonateBox.js ---
import React, { useEffect, useRef } from "react";
import Button from "@mui/material/Button";
import TextField from "@mui/material/TextField";
import Dialog from "@mui/material/Dialog";
import DialogActions from "@mui/material/DialogActions";
import DialogContent from "@mui/material/DialogContent";
import DialogContentText from "@mui/material/DialogContentText";
import DialogTitle from "@mui/material/DialogTitle";
import { stepButtonClasses } from "@mui/material";
import {utils} from "near-api-js";

export default function DonateBox(props) {
    const [open, setOpen] = React.useState(false);
    const inputRef = useRef();

    const handleClickOpen = () => {
        setOpen(true);
    };

    const handleClose = () => {
        setOpen(false);
        props.setOpen(false);
    };

    const handleDonate = () => {
        console.log("donate clicked: ", inputRef.current.value);
        var amount = utils.format.parseNearAmount(inputRef.current.value) ;

        window.walletConnection.account().sendMoney(props.receiver, amount)
            .then(ob => {
                console.log("transfer done", ob)
            })
            .catch(err => {
                console.log("transfer err", err)
            })
    };

    useEffect(() => {
        setOpen(props.open);
    }, [props.open]);

    return (
        <Dialog className="donate-dialog"
            open={open}
            sx={{
                width: "40%",
                margin: "auto",
                minWidth: "300px !important",
                padding: "5px"
            }}
            onClose={handleClose}
        >
            <DialogTitle>Donate</DialogTitle>
            <DialogContent>

                <DialogContentText>
                    <p>💰 {props.receiver}</p>
                    <TextField defaultValue="1" fullWidth label="NEAR" variant="standard" autoFocus margin="dense"
                        inputRef={inputRef}
                        type="number"
                    />
                </DialogContentText>

            </DialogContent>
            <DialogActions>
                <Button onClick={handleClose}>Close</Button>
                <Button onClick={handleDonate}>Donate</Button>
            </DialogActions>
        </Dialog>
    );
}

'''
'''--- src/components/Header.js ---
import * as React from 'react';
import AppBar from '@mui/material/AppBar';
import Box from '@mui/material/Box';
import Toolbar from '@mui/material/Toolbar';
import Typography from '@mui/material/Typography';
import Container from '@mui/material/Container';
import { NEAR_ICON_IMG } from '../utils';

const pages = ['Products', 'Pricing', 'Blog'];
const settings = ['Profile', 'Account', '<b style="color:red">Logout</b>'];

const Header = () => {
    const [anchorElNav, setAnchorElNav] = React.useState(null);
    const [anchorElUser, setAnchorElUser] = React.useState(null);

    const handleOpenUserMenu = (event) => {
        setAnchorElUser(event.currentTarget);
    };

    const handleCloseUserMenu = () => {
        setAnchorElUser(null);
    };

    return (
        <AppBar position="static" id="header">
            <Container maxWidth="xl">
                <Toolbar disableGutters>

                    <Box sx={{ flexGrow: 1 }}>

                    </Box>
                    <img src={NEAR_ICON_IMG} className="logo-img" />
                    <Typography
                        variant="h5"
                        noWrap
                        component="a"
                        color="#212121"
                        href=""
                        sx={{
                            mr: 2,
                            display: 'flex',
                            flexGrow: 1,
                            fontFamily: 'monospace',
                            fontWeight: 700,
                            letterSpacing: '.3rem',
                            color: 'inherit',
                            textDecoration: 'none',
                        }}
                    >
                        <a href="/">
                            W4Social </a>
                    </Typography>

                </Toolbar>
            </Container>
        </AppBar>
    );
};
export default Header;

'''
'''--- src/components/ListAuthorHome.js ---

'''
'''--- src/components/LoginBtn.js ---
import React, { useState, useEffect } from "react"
import Button from '@mui/material/Button';
import {login,logout} from "../utils";
import { NEAR_ICON_IMG } from "../utils";
export default function LoginBtn(props) {
    return (
        <div id="loginBtn">
            <Button variant="outlined" size="large" onClick={ ()=>{  login()  } }>
                 { props.text ? props.text : " Login with NEAR " }<img src={NEAR_ICON_IMG} className="login-btn-img"/>
            </Button>
        </div>
    )
}
'''
'''--- src/components/Notificaiton.js ---
import React from "react"
import getConfig from "../config"
// this component gets rendered by App after the form is submitted

export default function Notification(props) {
    const { networkId } = getConfig(process.env.NODE_ENV || 'development')
    const urlPrefix = `https://explorer.${networkId}.near.org/accounts`
    return (
        <aside>
            <a target="_blank" rel="noreferrer" href={`${urlPrefix}/${window.accountId}`}>
                 ✔ {props.txt}
            </a>
            {' '}
            {' '}
            <footer>
                <div> Account Id: {window.accountId} | Contract Id: {window.contract.contractId}</div>
                {/* <div>
                    <a target="_blank" rel="noreferrer" href={`${urlPrefix}/transactions/${props.txid}`}>
                        View TxID {props.txid}
                    </a>
                </div> */}
            </footer>
        </aside>
    )
}
'''
'''--- src/components/PostCard.js ---
import React, { useState, useRef, useEffect } from "react";
import Card from '@mui/material/Card';
import CardHeader from '@mui/material/CardHeader';
import CardMedia from '@mui/material/CardMedia';
import CardContent from '@mui/material/CardContent';
import CardActions from '@mui/material/CardActions';
import IconButton from '@mui/material/IconButton';
import Typography from '@mui/material/Typography';
import { red } from '@mui/material/colors';
import FavoriteIcon from '@mui/icons-material/Favorite';
import ShareIcon from '@mui/icons-material/Share';
import CommentIcon from '@mui/icons-material/Comment';

import { Avatar, Grid, Paper } from "@material-ui/core";
import { Drawer, InputBase } from "@mui/material";
import { Close } from "@mui/icons-material";
import { AddCircle } from "@mui/icons-material";
import { v4 as uuid } from "uuid";
import DonateBox from "./DonateBox";
import ShareBtn from "./ShareBtn";
import { isFavorite, NEAR_ICON_IMG, toggleFavorite } from "../utils";
import LoginBtn from "./LoginBtn";
// import ReactWebMediaPlayer from 'react-web-media-player';

function getDateFromTimeStamp(unixTimeStamp) {
    let date = new Date(unixTimeStamp);
    return ('0' + date.getDate()).slice(-2) + '/' + ('0' + (date.getMonth() + 1)).slice(-2) + '/' + date.getFullYear() + ' ' + ('0' + date.getHours()).slice(-2) + ':' + ('0' + date.getMinutes()).slice(-2);
}

export default function PostCard(props) {
    const [post, setPost] = useState({});
    const [expandComment, setExpandComment] = React.useState(false);
    const [donate, setDonate] = React.useState(false);

    //comment feature
    const openCommentSection = () => {
        setExpandComment(!expandComment);
        console.log("set expandcomment", expandComment);
    }
    const openDonateSection = () => {
        setDonate(true);
        console.log("open donate section ")
    }

    const inputRef = useRef(null);
    const [cmts, setCmts] = useState([]);

    useEffect(() => {
        setCmts(props.cmts);
        setPost(props.post);
        console.log("posts ", props.post, props.cmts);
    }, []);

    function addComment() {
        var inputCmt = inputRef.current.value;
        if (inputCmt.trim(0).length == 0) return;
        console.log("cmt subbmited! ", inputCmt);

        var cmt2 = Array.from(cmts);

        const cmtObject = {
            "id": uuid(),
            "uid": window.accountId,
            "cmt": inputRef.current.value,
            "t": Date.now()
        };

        setCmts([cmtObject, ...cmts]);
        inputRef.current.value = "";
        window.contract.setComment({ postId: post.id, commentId: cmtObject.id, commentObject: JSON.stringify(cmtObject) })
            .then(ob => {
                console.log("add cmt success", ob);
            })
            .catch(err => {
                console.log("add cmt err", err);
            })
        console.log(cmts);
    }
    function postThumbnail() {
        if (post.type == "basic") {
            return (
                <CardMedia
                    component="img"
                    height="auto"
                    sx={{ maxHeight: "500px" }}
                    image={post.media}
                    alt={post.title}
                />
            )
        }

        if (post.type == "media") {
            return (
                <video controls loop
                    height="auto"
                    src={post.media} >{post.title}</video>
            )
        }
    }

    function commentInput() {
        if (window.accountId)
            return (
                <Paper style={{ padding: "15px", position: "fixed", bottom: "50px", zIndex: 9999, width: "100%" }} className="comment-post">
                    <Grid container wrap="nowrap" spacing={2}>
                        <InputBase inputRef={inputRef}
                            sx={{ ml: 1, flex: 1 }}
                            placeholder="Leave a comment"
                        />
                        <IconButton type="button" onClick={() => { addComment() }} sx={{ p: '10px' }}>
                            <AddCircle />
                        </IconButton>
                    </Grid>
                </Paper>
            )
        return (
            <Paper style={{ padding: "15px", position: "fixed", bottom: "50px", zIndex: 9999, width: "100%" }} className="comment-post">
                <Grid container wrap="nowrap" spacing={2}>
                    <LoginBtn />
                </Grid>
            </Paper>
        )
    }

    return (

        <Card variant="outlined" sx={{ maxWidth: "auto" }}>
            <CardHeader
                avatar={
                    <a href={`/@${post.author}`} title={post.author}>
                        <Avatar sx={{ bgcolor: red[500] }}>
                        {post.author}
                        </Avatar>
                    </a>
                }

                title={post.title}
                subheader={getDateFromTimeStamp(post.date)}
            />

            {postThumbnail()}
            <CardContent>
                <Typography variant="body2" color="text.secondary">
                    <a href={`/@${post.author}/p${post.id}`} >
                        {post.desc}
                    </a>
                </Typography>
            </CardContent>

            <CardActions disableSpacing className="btn-wrap">

                <IconButton aria-label="add to favorites" onClick={() => { toggleFavorite(post.id, post) }} style={{ color: isFavorite(post.id) ? "red" : "auto" }} >
                    <FavoriteIcon />
                </IconButton>

                <div className="home-share-btn">
                    <ShareBtn link={`/@${post.author}/p${post.id}`} />
                </div>

                <IconButton aria-label='comment' onClick={openCommentSection}>
                    <CommentIcon />
                </IconButton>

                <IconButton className="donate-btn" aria-label="donate" onClick={openDonateSection}>
                    <img src={NEAR_ICON_IMG} />
                </IconButton>
            </CardActions>
            {/* donate section   */}
            <DonateBox setOpen={setDonate} open={donate} receiver={post.author} />
            {/* end donate section  */}

            {/* comment section  */}
            <div className="comments-section" sx={{ padding: 14, height: "50%", padding: 14, height: "50%", maxWidth: "750px", paddingBottom: "50px", margin: "auto" }}>
                <Drawer anchor="bottom" open={expandComment} className="comment-wrapper"
                    sx={{ padding: 14, height: "50%", maxWidth: "750px", paddingBottom: "50px", margin: "auto" }}
                    ModalProps={{
                        keepMounted: true,
                    }} >

                    <div className="comment-header" style={{ position: "fixed" }}>
                        <IconButton onClick={() => setExpandComment(false)}>
                            <Close />
                        </IconButton>
                    </div>

                    {commentInput()}

                    <div style={{ paddingBottom: "25px", paddingTop: "25px" }}></div>

                    {
                        Array.from(cmts).map((e) => (
                            <Paper style={{ padding: "20px 20px" }} key={Math.random()} >
                                <Grid container wrap="nowrap" spacing={2}>

                                    <Grid item>
                                        <Avatar alt={e.id}> {e.uid.substring(0, 3)} </Avatar>
                                    </Grid>

                                    <Grid item xs zeroMinWidth>
                                        <h4 className="cmtUid" style={{ margin: 0, textAlign: "left" }}>{e.uid}</h4>
                                        <p className="cmtContent" style={{ textAlign: "left" }}>{e.cmt}</p>
                                        <p className="cmtPostedAt" style={{ textAlign: "left", color: "gray", fontSize: "70%" }}>
                                            posted at: {getDateFromTimeStamp(e.t)}
                                        </p>
                                    </Grid>
                                </Grid>
                            </Paper>
                        ))
                    }

                </Drawer>

            </div>
            {/* end comment section  */}
        </Card>

    );
}

'''
'''--- src/components/PostCardHome.js ---
import React, { useState, useRef, useEffect } from "react";
import Card from '@mui/material/Card';
import CardHeader from '@mui/material/CardHeader';
import CardMedia from '@mui/material/CardMedia';
import CardContent from '@mui/material/CardContent';
import CardActions from '@mui/material/CardActions';
import IconButton from '@mui/material/IconButton';
import Typography from '@mui/material/Typography';
import { red } from '@mui/material/colors';
import FavoriteIcon from '@mui/icons-material/Favorite';
import ShareIcon from '@mui/icons-material/Share';
import CommentIcon from '@mui/icons-material/Comment';

import { Avatar, Grid, Paper } from "@material-ui/core";
import { Drawer, InputBase } from "@mui/material";
import { Close } from "@mui/icons-material";
import { AddCircle } from "@mui/icons-material";
import { v4 as uuid } from "uuid";
import DonateBox from "./DonateBox";
import ShareBtn from "./ShareBtn";
import { toggleFavorite, isFavorite } from "../utils";

import { NEAR_ICON_IMG } from "../utils";

// import ReactWebMediaPlayer from 'react-web-media-player';

function getDateFromTimeStamp(unixTimeStamp) {
    let date = new Date(unixTimeStamp);
    return ('0' + date.getDate()).slice(-2) + '/' + ('0' + (date.getMonth() + 1)).slice(-2) + '/' + date.getFullYear() + ' ' + ('0' + date.getHours()).slice(-2) + ':' + ('0' + date.getMinutes()).slice(-2);
}

export default function PostCardHome(props) {
    const [post, setPost] = useState({});
    const [expandComment, setExpandComment] = React.useState(false);
    const [donate, setDonate] = React.useState(false);
    const [fav, setFav] = useState(false);

    //comment feature
    const openCommentSection = () => {
        setExpandComment(!expandComment);
        console.log("set expandcomment", expandComment);
    }
    const openDonateSection = () => {
        setDonate(true);
        console.log("open donate section ")
    }

    const inputRef = useRef(null);
    const [cmts, setCmts] = useState([]);

    useEffect(() => {
        setCmts(props.cmts);
        setPost(props.post);
        console.log("posts ", props.post, props.cmts);
        setFav(isFavorite(props.post.id) ? true : false);
    }, []);

    function postThumbnail() {
        if (post.type && !post.media) {
            return (<></>);
        }

        if (post.type == "basic") {
            return (
                <CardMedia
                    component="img"
                    height="auto"
                    sx={{ maxHeight: "500px" }}
                    image={post.media}
                    alt={post.title}
                />
            )
        }

        if (post.type == "media") {
            return (
                <video controls loop
                    height="auto"
                    src={post.media} >{post.title}</video>
            )
        }
    }
    function addComment() {
        var inputCmt = inputRef.current.value;
        if (inputCmt.trim(0).length == 0) return;
        console.log("cmt subbmited! ", inputCmt);

        var cmt2 = Array.from(cmts);

        const cmtObject = {
            "id": uuid(),
            "uid": window.accountId,
            "cmt": inputRef.current.value,
            "t": Date.now()
        };

        setCmts([cmtObject, ...cmts]);
        inputRef.current.value = "";
        window.contract.setComment({ postId: post.id, commentId: cmtObject.id, commentObject: JSON.stringify(cmtObject) })
            .then(ob => {
                console.log("add cmt success", ob);
            })
            .catch(err => {
                console.log("add cmt err", err);
            })
        console.log(cmts);
    }

    function toggleFav() {
        console.log("post fav", post)
        toggleFavorite(post.id, post);
        setFav(!fav);
    }

    return (

        <Card variant="outlined" sx={{ maxWidth: "auto" }} >
            <CardHeader
                avatar={
                    <a href={`/@${post.author}`} title={post.author}>
                        <Avatar sx={{ bgcolor: red[500] }}>
                            {post.author}
                        </Avatar>
                    </a>
                }
                title={ <a href={`/@${post.author}`}>{post.author}</a>}
                subheader={getDateFromTimeStamp(post.date)}
            />

            <a href={`/@${post.author}/p${post.id}`} className="post-home-thumbnail">
                {postThumbnail()}
            </a>

            <CardContent>

                <Typography variant="body2" color="text.secondary">
                    <a href={`/@${post.author}/p${post.id}`} >
                        <div class="post-home-title">
                            {post.title}
                        </div>
                    </a>
                </Typography>

                <Typography variant="body2" color="text.secondary">
                    <div class="post-home-desc">
                        {post.desc}
                    </div>
                </Typography>
            </CardContent>

            <CardActions disableSpacing className="btn-wrap">

                <IconButton aria-label="add to favorites" style={{ color: fav ? "red" : "unset" }} onClick={toggleFav} >
                    <FavoriteIcon />
                </IconButton>

                <div className="home-share-btn">
                    <ShareBtn link={`/@${post.author}/p${post.id}`} />
                </div>

                <IconButton aria-label='comment'>
                    <a href={`/@${post.author}/p${post.id}`} >
                        <CommentIcon />
                    </a>
                </IconButton>

                <IconButton className="donate-btn" aria-label="donate" onClick={openDonateSection}>
                    <img src={NEAR_ICON_IMG} />
                </IconButton>
            </CardActions>
            {/* donate section   */}
            <DonateBox setOpen={setDonate} open={donate} receiver={post.author} />

            {/* end donate section  */}

            {/* comment section  */}
            <div className="comments-section" sx={{ padding: 14, height: "50%", padding: 14, height: "50%", maxWidth: "750px", paddingBottom: "50px", margin: "auto" }}>
                <Drawer anchor="bottom" open={expandComment} className="comment-wrapper"
                    sx={{ padding: 14, height: "50%", maxWidth: "750px", paddingBottom: "50px", margin: "auto" }}
                    ModalProps={{
                        keepMounted: true,
                    }} >

                    <div className="comment-header" style={{ position: "fixed" }}>
                        <IconButton onClick={() => setExpandComment(false)}>
                            <Close />
                        </IconButton>
                    </div>

                    <Paper style={{ padding: "15px", position: "fixed", bottom: "50px", zIndex: 9999, width: "100%" }} className="comment-post">
                        <Grid container wrap="nowrap" spacing={2}>
                            <InputBase inputRef={inputRef}
                                sx={{ ml: 1, flex: 1 }}
                                placeholder="Leave a comment"
                            />
                            <IconButton type="button" onClick={() => { addComment() }} sx={{ p: '10px' }}>
                                <AddCircle />
                            </IconButton>
                        </Grid>
                    </Paper>

                    <div style={{ paddingBottom: "25px", paddingTop: "25px" }}></div>

                    {
                        Array.from(cmts).map((e) => (
                            <Paper style={{ padding: "20px 20px" }} key={Math.random()} >
                                <Grid container wrap="nowrap" spacing={2}>

                                    <Grid item>
                                        <Avatar alt={e.id}> {e.uid.substring(0, 3)} </Avatar>
                                    </Grid>

                                    <Grid item xs zeroMinWidth>
                                        <h4 className="cmtUid" style={{ margin: 0, textAlign: "left" }}>{e.uid}</h4>
                                        <p className="cmtContent" style={{ textAlign: "left" }}>{e.cmt}</p>
                                        <p className="cmtPostedAt" style={{ textAlign: "left", color: "gray", fontSize: "70%" }}>
                                            posted at: {getDateFromTimeStamp(e.t)}
                                        </p>
                                    </Grid>
                                </Grid>
                            </Paper>
                        ))
                    }

                </Drawer>

            </div>
            {/* end comment section  */}
        </Card >

    );
}

'''
'''--- src/components/PostGrid.js ---
import * as React from 'react';
import ImageList from '@mui/material/ImageList';
import ImageListItem from '@mui/material/ImageListItem';
import ImageListItemBar from '@mui/material/ImageListItemBar';
import { NEAR_ICON_IMG } from '../utils';
import { v4 as uuid } from 'uuid';

export default function PostGrid(props) {
    const itemData = props.posts;

    function showPostThumbnail(item) {

        if ( item && item.type == "media") {
            return (
                <video src={item.media} controls loop >{item.title}</video>
            )
        } 
        
        if(item && item.type == "basic"){
            return (
                <img
                    src={`${item.media ? item.media : NEAR_ICON_IMG}?w=248&fit=crop&auto=format`}
                    srcSet={`${item.media ? item.media : NEAR_ICON_IMG}?w=248&fit=crop&auto=format&dpr=2 2x`}
                    alt={item.title}
                    loading="lazy"
                />
            )
        }

    }
    return (
        <ImageList sx={{ width: "100%", minHeight: 200 }} className="postList">
            {itemData && itemData.map((item) => (
                <ImageListItem key={uuid()}>

                    {showPostThumbnail(item)}

                    <a href={`/@${item.author}/p${item.id}`} >
                        <ImageListItemBar
                            title={<b>{item.title}</b>}
                            subtitle={<span>by: {item.author}</span>}
                            position="below"
                        />
                    </a>
                </ImageListItem>
            ))}
        </ImageList>
    );
}
'''
'''--- src/components/ShareBtn.js ---
import React, { useState, useRef, useEffect } from "react";
import Box from '@mui/material/Box';
import SpeedDial from '@mui/material/SpeedDial';
import SpeedDialAction from '@mui/material/SpeedDialAction';
import { Facebook, LinkedIn, Twitter, Share} from "@material-ui/icons";

function ShareBtn(props) {
    const l = window.location.origin  + props.link;
    const actions = [
        { icon: <Facebook />, name: 'Facebook', link: `https://www.facebook.com/sharer/sharer.php?u=${l}` },
        { icon: <Twitter />, name: 'Twitter' , link: `https://twitter.com/intent/tweet?text=${l}`},
        { icon: <LinkedIn />, name: 'LinkedIn' , link: `https://www.linkedin.com/shareArticle?mini=true&url=${l}`},
        
        // { icon: <ShareIcon />, name: 'Share' },
    ];
    return (
        <Box className="share-btn">
            <SpeedDial
                ariaLabel="Share"
                className="share-btn-inner"
                icon={<Share />}
            >
                {actions.map((action) => (
                    <SpeedDialAction onClick={() => {window.open( action.link , "_blank" )}}
                        key={action.name}
                        icon={action.icon}
                        tooltipTitle={action.name}
                    />
                ))}
            </SpeedDial>
        </Box>
    );
}
export default ShareBtn;
'''
'''--- src/components/SinglePost.js ---
import React, { useState, useRef, useEffect } from "react";
import Card from '@mui/material/Card';
import CardHeader from '@mui/material/CardHeader';
import CardMedia from '@mui/material/CardMedia';
import CardContent from '@mui/material/CardContent';
import CardActions from '@mui/material/CardActions';
import IconButton from '@mui/material/IconButton';
import Typography from '@mui/material/Typography';
import { red } from '@mui/material/colors';
import FavoriteIcon from '@mui/icons-material/Favorite';
import CommentIcon from '@mui/icons-material/Comment';
import { Avatar, Grid, Paper } from "@material-ui/core";
import { InputBase } from "@mui/material";
import { AddCircle } from "@mui/icons-material";
import { v4 as uuid } from "uuid";
import DonateBox from "./DonateBox";
import ShareBtn from "./ShareBtn";
import LoginBtn from "./LoginBtn";
import { toggleFavorite, isFavorite, NEAR_ICON_IMG } from "../utils";

// import ReactWebMediaPlayer from 'react-web-media-player';

function getDateFromTimeStamp(unixTimeStamp) {
    let date = new Date(unixTimeStamp);
    return ('0' + date.getDate()).slice(-2) + '/' + ('0' + (date.getMonth() + 1)).slice(-2) + '/' + date.getFullYear() + ' ' + ('0' + date.getHours()).slice(-2) + ':' + ('0' + date.getMinutes()).slice(-2);
}

export default function SinglePost(props) {
    const [post, setPost] = useState({});
    const [expandComment, setExpandComment] = React.useState(false);
    const [donate, setDonate] = React.useState(false);
    const [fav, setFav] = useState(false);

    //comment feature
    const openCommentSection = () => {
        setExpandComment(!expandComment);
        console.log("set expandcomment", expandComment);
    }

    const openDonateSection = () => {
        setDonate(true);
        console.log("open donate section ")
    }

    const inputRef = useRef(null);
    const [cmts, setCmts] = useState([]);

    function toggleFav() {
        console.log("post fav", post)
        toggleFavorite(post.id, post);
        setFav(!fav);
    }

    function addComment() {
        var inputCmt = inputRef.current.value;
        if (inputCmt.trim(0).length == 0) return;
        console.log("cmt subbmited! ", inputCmt);

        var cmt2 = Array.from(cmts);

        const cmtObject = {
            "id": uuid(),
            "uid": window.accountId,
            "cmt": inputRef.current.value,
            "t": Date.now()
        };

        setCmts([cmtObject, ...cmts]);
        inputRef.current.value = "";
        window.contract.setComment({ postId: post.id, commentId: cmtObject.id, commentObject: JSON.stringify(cmtObject) })
            .then(ob => {
                console.log("add cmt success", ob);
            })
            .catch(err => {
                console.log("add cmt err", err);
            })
        console.log(cmts);
    }
    function postThumbnail() {

        if (post.type && !post.media) {
            return (<></>);
        }

        if (post.type == "basic") {
            return (
                <CardMedia
                    component="img"
                    height="auto"
                    sx={{ maxHeight: "500px" }}
                    image={post.media}
                    alt={post.title}
                />
            )
        }

        if (post.type == "media") {
            return (
                <video controls loop
                    height="auto"
                    src={post.media} >{post.title}</video>
            )
        }
    }

    function commentInput() {
        if (window.accountId)
            return (
                <Grid container wrap="nowrap">
                    <InputBase inputRef={inputRef}
                        sx={{ ml: 1, flex: 1 }}
                        placeholder="Leave a comment"
                        className="single-comment-input"
                    />
                    <IconButton type="button" onClick={() => { addComment() }} sx={{ p: '10px' }}>
                        <AddCircle />
                    </IconButton>
                </Grid>
            )
        return (
            <LoginBtn text={"Login with NEAR to leave comment "} />
        )
    }

    useEffect(() => {
        setCmts(props.cmts);
        setPost(props.post);
        console.log("posts ", props.post, props.cmts);
        window.document.title = props.post.title;
        setFav(isFavorite(props.post.id) ? true : false);

    }, []);

    return (

        <Card variant="outlined" sx={{ maxWidth: "auto" }}>
            <CardHeader
                avatar={
                    <a href={`/@${post.author}`} title={post.author}>
                        <Avatar sx={{ bgcolor: red[500] }}>
                        </Avatar>
                    </a>
                }
                title={post.author}
                subheader={getDateFromTimeStamp(post.date)}
            />

            {postThumbnail()}

            <CardContent>
                <Typography variant="body2" color="text.secondary">
                    <div className="single-title">
                        {post.title}
                    </div>
                </Typography>

                <Typography variant="body2" color="text.secondary">
                    <div className="single-desc">
                        {post.desc}
                    </div>
                </Typography>
            </CardContent>

            <CardActions disableSpacing className="btn-wrap">

                <IconButton aria-label="add to favorites" style={{ color: fav ? "red" : "unset" }} onClick={toggleFav} >
                    <FavoriteIcon />
                </IconButton>

                {/* <ShareIcon /> */}
                <ShareBtn link={`/@${post.author}/p${post.id}`} />

                <IconButton aria-label='comment' onClick={openCommentSection}>
                    <CommentIcon /> ( {cmts.length} )
                </IconButton>

                <IconButton className="donate-btn" aria-label="donate" onClick={openDonateSection}>
                    <img src={NEAR_ICON_IMG} />
                </IconButton>
            </CardActions>
            {/* donate section   */}
            <DonateBox setOpen={setDonate} open={donate} receiver={post.author} />

            {/* end donate section  */}

            {/* comment section  */}
            <div className="comments-section" sx={{ padding: 14, height: "50%", padding: 14, height: "50%", maxWidth: "750px", paddingBottom: "50px", margin: "auto" }}>

                <Paper style={{ zIndex: 9999, width: "100%" }} className="comment-post">
                    {commentInput()}
                </Paper>

                <div style={{ paddingBottom: "25px", paddingTop: "25px" }}></div>

                {
                    Array.from(cmts).map((e) => (
                        <Paper style={{ padding: "20px 20px" }} key={Math.random()} >
                            <Grid container wrap="nowrap" spacing={2}>

                                <Grid item>
                                    <Avatar alt={e.id}> {e.uid.substring(0, 3)} </Avatar>
                                </Grid>

                                <Grid item xs zeroMinWidth>
                                    <h4 className="cmtUid" style={{ margin: 0, textAlign: "left" }}>{e.uid}</h4>
                                    <p className="cmtContent" style={{ textAlign: "left" }}>{e.cmt}</p>
                                    <p className="cmtPostedAt" style={{ textAlign: "left", color: "gray", fontSize: "70%" }}>
                                        posted at: {getDateFromTimeStamp(e.t)}
                                    </p>
                                </Grid>
                            </Grid>
                        </Paper>
                    ))
                }

            </div>
            {/* end comment section  */}
        </Card>

    );
}

'''
'''--- src/components/Video.js ---
import "./../assets/css/app.css";
import React, { useRef, useState, useEffect } from "react";
import IconButton from "@material-ui/core/IconButton";
import FavoriteBorderIcon from "@material-ui/icons/FavoriteBorder";
import FavoriteIcon from "@material-ui/icons/Favorite";
import ShareOutlinedIcon from '@mui/icons-material/ShareOutlined';
import ChatBubbleOutlineIcon from '@mui/icons-material/ChatBubbleOutline';
import ReportOutlinedIcon from '@mui/icons-material/ReportOutlined';

import imgPlayBtn from "../assets/img/play.png";

function useOnScreen(ref) {
  const [isIntersecting, setIntersecting] = useState(false);

  useEffect(() => {
    const observer = new IntersectionObserver(([entry]) => {
      setIntersecting(entry.isIntersecting);
    });
    if (ref.current) {
      observer.observe(ref.current);
    }
    return () => {
      observer.unobserve(ref.current);
    };
  }, []);

  return isIntersecting;
}
function useDebounce(value, delay) {
  const [debouncedValue, setDebouncedValue] = useState(value);

  useEffect(() => {
    const handler = setTimeout(() => {
      setDebouncedValue(value);
    }, delay);

    return () => {
      clearTimeout(handler);
    };
  }, [value, delay]);

  return debouncedValue;
}

function Video({ source }) {
  const [click, setClicked] = useState(false);
  const [count, setCount] = useState();
  const [canPlays, setCanPlay] = useState(false);
  console.log(canPlays);
  const videoRef = useRef();
  const audioRef = useRef(false);
  const playRef = useRef(false);
  const ref = useRef();
  const navSec = useRef(null);

  const onScreen = useOnScreen(ref);
  const debouncedSearchTerm = useDebounce(onScreen, 400);

  const clickFunc = () => {
    if (click === false) {
      setClicked(true);
      setCount(1);
    } else {
      setClicked(false);
      setCount("");
      console.log(click);
    }
  };
  const canPlay = (e) => {
    setCanPlay(true);
  };

  useEffect(() => {
    if (debouncedSearchTerm === true && canPlays === true) {
      audioRef.current.currentTime = videoRef.current.currentTime;
      videoRef.current.play();
      audioRef.current.play();

      playRef.current.style.display = "none";
    }
  });

  const videoPlay = () => {
    if (
      videoRef.current.paused === false &&
      audioRef.current.paused === false
    ) {
      videoRef.current.pause();
      audioRef.current.pause();
      playRef.current.style.display = "block";
    } else {
      videoRef.current.play();
      audioRef.current.play();
      playRef.current.style.display = "none";
    }
  };
  return (
    <>
      <div className="video-container" ref={ref}>
        {/* <img ref={playRef} id="play-btn" src={process.env.PUBLIC_URL + '/img/play.png'} alt="play" /> */}
        <img ref={playRef} id="play-btn" src={imgPlayBtn} alt="play" />

        <div id="btns">
          <div id="like-btn">
            <IconButton id="like-icon" onClick={clickFunc}>
              {click ? (
                <FavoriteIcon style={{ fontSize: "40px" }} />
              ) : (
                <FavoriteBorderIcon style={{ fontSize: "40px" }} />
              )}
            </IconButton>
            <span id="like-count">{count}</span>
          </div>

          <div id="share-btn">
            <IconButton id="share-icon">
              <ShareOutlinedIcon style={{ fontSize: "40px" }} />
            </IconButton>
          </div>

          <div id="cmt-btn">
            <IconButton id="cmt-icon">
              <ChatBubbleOutlineIcon style={{ fontSize: "40px" }} />
            </IconButton>
          </div>

          <div id="report-btn">
            <IconButton id="report-icon">
              <ReportOutlinedIcon style={{ fontSize: "40px" }} />
            </IconButton>
          </div>

        </div>

        {debouncedSearchTerm ? (
          <video
            ref={videoRef}
            onClick={videoPlay}
            width="auto"
            height="100%"
            src={source.substring(0, 32) + "DASH_480.mp4?source=fallback"}
            type="video/mp4"
            preload="auto"
            onCanPlayThrough={canPlay}
            playsinline
          />
        ) : (
          <div>Loading...</div>
        )}
        {debouncedSearchTerm ? (
          <audio ref={audioRef}>
            <source src={source && source.slice(0, 37) + "audio.mp4"} />
          </audio>
        ) : (
          console.log("audio element is loading")
        )}

      </div>
    </>

  );
}
export default Video;

'''
'''--- src/components/uploader/AlbumUploader.js ---
import React, { useState, useEffet } from 'react'
import { create as ipfsHttpClient } from 'ipfs-http-client'
import { Card, CardMedia, IconButton, PhotoCamera } from '@mui/material'
import { Button } from '@mui/material'
import { FileUpload } from '@mui/icons-material'
const ipfs = ipfsHttpClient('https://ipfs.infura.io:5001/api/v0')

const AlbumUploader = (props) => {
    const [image, setImage] = useState({})
    const [imagePreview, setImagePreview] = useState('')
    const [loading, setLoading] = useState(false)
    const [uploaded, setUploaded] = useState(false)

    const createPreview = (e) => {
        if (e.target.value !== '') {
            setImage(e.target.files[0])
            const src = URL.createObjectURL(e.target.files[0])
            setImagePreview(src)
        } else {
            setImagePreview('')
        }
    }
    // { setUrl, setSave, props}

    React.useEffect(() => {
        if (!props.uploadFile) return;
        console.log("upload file changed status", props.uploadFile);
        uploadFile();
    }, [props.uploadFile]);

    const uploadFile = async (e) => {
        setLoading(true)
        // e.preventDefault()

        try {
            const added = await ipfs.add(image)
            const url = `https://ipfs.infura.io/ipfs/${added.path}`
            props.setUrl(url)
            setImagePreview(url)
            setUploaded(true)
            props.setSave(true);

        } catch (err) {
            console.log('Error uploading the file : ', err)
        }
        setLoading(false)
    }

    const previewAndUploadButton = () => {
        if (imagePreview !== '') {
            if (!loading) {
                return (
                    <>
                        {uploaded ? (
                            <p>
                                ✅{' '}
                                <a
                                    href={imagePreview}
                                    target='_blank'
                                    rel='noopener noreferrer'
                                >
                                    Image
                                </a>{' '}
                                Uploaded Successfully ✅{' '}
                            </p>
                        ) : (
                            <>
                                <h5>
                                    UPloading....
                                    {image.name}{' '}
                                    <br />
                                    {Math.round(image.size / 1000)} KB
                                </h5>
                            </>
                        )}
                        <Card sx={{ maxWidth: "100%" }} >
                            <CardMedia component="img" image={imagePreview} height="300" />
                        </Card>
                    </>
                )
            } else {
                return (
                    <div>
                        <h4>Uploading Image</h4>

                        <h4>Please Wait ...</h4>
                    </div>
                )
            }
        }
    }

    return (
        <div>

            <label htmlFor="contained-button-file">
                <input required
                    id="contained-button-file"
                    type='file'
                    accept="audio/*,video/*"
                    onChange={(e) => createPreview(e)}
                    className="hideBtn"

                />
                <Button variant="contained" component="span" startIcon={<FileUpload />} sx={{ width: "100%" }}>
                    Upload photo album
                </Button>

            </label>

            {previewAndUploadButton()}

        </div>
    )
}

export default AlbumUploader;
'''
'''--- src/components/uploader/MediaUploader.js ---
import React, { useState, useRef } from 'react'
// import { create as ipfsHttpClient } from 'ipfs-http-client'
import { create as ipfsHttpClient } from "ipfs-http-client";
import { Card, CardMedia } from '@mui/material';
import { Button } from '@mui/material';
import { FileUpload } from '@mui/icons-material';

const ipfs = ipfsHttpClient('https://ipfs.infura.io:5001/api/v0');

const MediaUploader = (props) => {
    const [image, setImage] = useState({})
    const [imagePreview, setImagePreview] = useState('')
    const [loading, setLoading] = useState(false)
    const [uploaded, setUploaded] = useState(false)

    const submitEle = useRef();

    const createPreview = (e) => {
        if (e.target.value) {
            setImage(e.target.files[0])
            const src = URL.createObjectURL(e.target.files[0])
            if(src && src.length > 0 )
                setImagePreview(src)
        } 
    }
    // { setUrl, setSave, props}

    React.useEffect(() => {
        if (!props.uploadFile) return;
        console.log("upload file changed status", props.uploadFile);
        // window.setTimeout( ()=> {
        console.log("trigger submit ");
        submitEle.current.click();

        // } , 300 );
    }, [props.uploadFile]);

    const uploadFile = async (e) => {

        setLoading(true)
        e.preventDefault()
        console.log("trigger upload file ")
        try {
            const added = await ipfs.add(image)
            const url = `https://ipfs.infura.io/ipfs/${added.path}`
            props.setUrl(url)
            // setImagePreview(url)
            setUploaded(true)
            props.setSave(true);

        } catch (err) {
            console.log('Error uploading the file : ', err)
        }
        setLoading(false)
    }

    const previewAndUploadButton = () => {
        if (imagePreview !== '') {
            if (!loading) {
                return (
                    <>
                        {uploaded ? (
                            <p>
                                ✅{' '}
                                <a
                                    href={imagePreview}
                                    target='_blank'
                                    rel='noopener noreferrer'
                                >
                                    Image
                                </a>{' '}
                                Uploaded Successfully ✅{' '}
                            </p>
                        ) : (
                            <>
                                <p>
                                    {image.name}{' '}
                                    <br />
                                    {Math.round(image.size / 1000)} KB
                                </p>
                            </>
                        )}

                        <Card sx={{ maxWidth: "100%" }} >
                            {/* <CardMedia component="img" image={imagePreview} height="200" width="auto" /> */}
                            <video src={imagePreview} controls height="200px" width="auto"></video>
                        </Card>
                    </>
                )
            } else {
                return (
                    <div>
                        <Card sx={{ maxWidth: "100%" }} >
                            <video src={imagePreview} controls height="200px" width="auto"></video>    
                        </Card>
                    </div>
                )
            }
        }
    }

    return (
        <div>

            <form onSubmit={uploadFile}>

                <label htmlFor="contained-button-file">
                    <input required
                        id="contained-button-file"
                        accept="video/*,audio/*"
                        type='file'
                        onChange={(e) => createPreview(e)}
                        className="hideBtn"
                    />
                    <Button variant="contained" component="span" startIcon={<FileUpload />} sx={{ width: "100%" }}>
                        Upload Audio or Video
                    </Button>
                </label>

                <button
                    id="uploadFile"
                    type="submit"
                    ref={submitEle}
                    style={{ display: "none" }}>s</button>

            </form>

            {previewAndUploadButton()}

        </div>
    )
}

export default MediaUploader;
'''
'''--- src/components/uploader/PhotoUploader.js ---
import React, { useState, useRef } from 'react'
// import { create as ipfsHttpClient } from 'ipfs-http-client'
import { create as ipfsHttpClient } from "ipfs-http-client";
import { Card, CardMedia } from '@mui/material';
import { Button } from '@mui/material';
import { FileUpload } from '@mui/icons-material';

const ipfs = ipfsHttpClient('https://ipfs.infura.io:5001/api/v0');

const PhotoUploader = (props) => {
    const [image, setImage] = useState({})
    const [imagePreview, setImagePreview] = useState('')
    const [loading, setLoading] = useState(false)
    const [uploaded, setUploaded] = useState(false)

    const submitEle = useRef();

    const createPreview = (e) => {
        if (e.target.value) {
            setImage(e.target.files[0])
            const src = URL.createObjectURL(e.target.files[0])
            if (src && src.length > 0)
                setImagePreview(src)
        } else {
            setImagePreview(false);
        }
    }
    // { setUrl, setSave, props}

    React.useEffect(() => {
        if (!props.uploadFile) return;
        console.log("upload file changed status", props.uploadFile);
    }, [props.uploadFile]);

    const uploadFile = async (e) => {

        setLoading(true);
        e.preventDefault();
        console.log("trigger upload file ");

        //post with media 
            try {
                console.log("post with image ")
                const added = await ipfs.add(image)
                const url = `https://ipfs.infura.io/ipfs/${added.path}`
                props.setUrl(url)
                // setImagePreview(url)
                setUploaded(true)
                props.setSave(true);

            } catch (err) {
                console.log('Error uploading the file : ', err)
            }

        setLoading(false)
    }

    const previewAndUploadButton = () => {
        if (imagePreview !== '') {
            if (!loading) {
                return (
                    <>
                        {uploaded ? (
                            <p>
                                ✅{' '}
                                <a
                                    href={imagePreview}
                                    target='_blank'
                                    rel='noopener noreferrer'
                                >
                                    Image
                                </a>{' '}
                                Uploaded Successfully ✅{' '}
                            </p>
                        ) : (
                            <>
                                <p>
                                    {image.name}{' '}
                                    <br />
                                    {Math.round(image.size / 1000)} KB
                                </p>
                            </>
                        )}

                        <Card sx={{ maxWidth: "100%" }} >
                            <CardMedia component="img" image={imagePreview} height="200" width="auto" />
                        </Card>
                    </>
                )
            } else {
                return (
                    <div>
                        <Card sx={{ maxWidth: "100%" }} >
                            <CardMedia component="img" image={imagePreview} height="200" width="auto" />
                        </Card>
                    </div>
                )
            }
        }
    }

    return (
        <div>

            <form onSubmit={uploadFile}>

                <label htmlFor="contained-button-file">
                    <input required
                        id="contained-button-file"
                        accept="image/*"
                        type='file'
                        onChange={(e) => createPreview(e)}
                        className="hideBtn"
                    />
                    <Button variant="contained" component="span" startIcon={<FileUpload />} sx={{ width: "100%" }}>
                        Upload Photo
                    </Button>
                </label>

                <button
                    id="uploadFile"
                    type="submit"
                    ref={submitEle}
                    style={{ display: "none" }}>s</button>

            </form>

            {previewAndUploadButton()}

        </div>
    )
}

export default PhotoUploader;
'''
'''--- src/components/uploader/TestUploader.js ---
import React, { useState, useEffet , useRef } from 'react'
// import { create as ipfsHttpClient } from 'ipfs-http-client'
import { create as ipfsHttpClient } from "ipfs-http-client";
import { Card, CardMedia } from '@mui/material';
import { Button } from '@mui/material';
import { FileUpload } from '@mui/icons-material';

const ipfs = ipfsHttpClient('https://ipfs.infura.io:5001/api/v0');

const TestUploader = (props) => {
    const [image, setImage] = useState({})
    const [imagePreview, setImagePreview] = useState('')
    const [loading, setLoading] = useState(false)
    const [uploaded, setUploaded] = useState(false)
    const submitEle = useRef();

    const createPreview = (e) => {
        if (e.target.value !== '') {
            setImage(e.target.files[0])
            const src = URL.createObjectURL(e.target.files[0])
            setImagePreview(src)

            //trigger submit form 
            console.log(submitEle);
            window.setTimeout( ()=>{
                submitEle.current.click();
            }, 500 )
        } else {
            setImagePreview('')
        }

    }
    // { setUrl, setSave, props}

    React.useEffect(() => {
        if (!props.uploadFile) return;
        console.log("upload file changed status", props.uploadFile);
        uploadFile();
    }, [props.uploadFile]);

    const uploadFile = async (e) => {
        setLoading(true)
        e.preventDefault()

        try {
            const added = await ipfs.add(image)
            const url = `https://ipfs.infura.io/ipfs/${added.path}`
            props.setUrl(url)
            setImagePreview(url)
            setUploaded(true)
            props.setSave(true);

        } catch (err) {
            console.log('Error uploading the file : ', err)
        }
        setLoading(false)
    }

    const previewAndUploadButton = () => {
        if (imagePreview !== '') {
            if (!loading) {
                return (
                    <>
                        {uploaded ? (
                            <p>
                                ✅{' '}
                                <a
                                    href={imagePreview}
                                    target='_blank'
                                    rel='noopener noreferrer'
                                >
                                    Image
                                </a>{' '}
                                Uploaded Successfully ✅{' '}
                            </p>
                        ) : (
                            <>
                                <Button type='submit' ref={submitEle}>
                                    Upload Image
                                </Button>
                                <h5>
                                    UPloading....
                                    {image.name}{' '}
                                    <br />
                                    {Math.round(image.size / 1000)} KB
                                </h5>
                            </>
                        )}
                        <Card sx={{ maxWidth: "100%" }} >
                            <CardMedia component="img" image={imagePreview} height="300" />
                        </Card>
                    </>
                )
            } else {
                return (
                    <div>
                        <h4>Uploading Image</h4>

                        <h4>Please Wait ...</h4>
                    </div>
                )
            }
        }
    }

    return (
        <div>

            <label htmlFor="contained-button-file">

                <form onSubmit={uploadFile}  >
                    <input required
                        id="contained-button-file"
                        accept="image/*"
                        type='file'
                        onChange={(e) => createPreview(e)}

                    />
                    <button type="submit" ref={submitEle} style={{display:"none"}}>a</button>
                    {/* <Button variant="contained" component="span" startIcon={<FileUpload />} sx={{ width: "100%" }}>
                        Upload Photo
                    </Button> */}
                    {previewAndUploadButton()}

                </form>

            </label>

        </div>
    )
}

export default TestUploader;
'''
'''--- src/config.js ---
// const CONTRACT_NAME = process.env.CONTRACT_NAME ||'nsocial'
const CONTRACT_NAME = "near.yenatmi.testnet" || process.env.CONTRACT_NAME

function getConfig(env) {
  switch (env) {

  case 'production':
  case 'mainnet':
    return {
      networkId: 'mainnet',
      nodeUrl: 'https://rpc.mainnet.near.org',
      contractName: CONTRACT_NAME,
      walletUrl: 'https://wallet.near.org',
      helperUrl: 'https://helper.mainnet.near.org',
      explorerUrl: 'https://explorer.mainnet.near.org',
    }
  case 'development':
  case 'testnet':
    return {
      networkId: 'testnet',
      nodeUrl: 'https://rpc.testnet.near.org',
      contractName: CONTRACT_NAME,
      walletUrl: 'https://wallet.testnet.near.org',
      helperUrl: 'https://helper.testnet.near.org',
      explorerUrl: 'https://explorer.testnet.near.org',
    }
  case 'betanet':
    return {
      networkId: 'betanet',
      nodeUrl: 'https://rpc.betanet.near.org',
      contractName: CONTRACT_NAME,
      walletUrl: 'https://wallet.betanet.near.org',
      helperUrl: 'https://helper.betanet.near.org',
      explorerUrl: 'https://explorer.betanet.near.org',
    }
  case 'local':
    return {
      networkId: 'local',
      nodeUrl: 'http://localhost:3030',
      keyPath: `${process.env.HOME}/.near/validator_key.json`,
      walletUrl: 'http://localhost:4000/wallet',
      contractName: CONTRACT_NAME,
    }
  case 'test':
  case 'ci':
    return {
      networkId: 'shared-test',
      nodeUrl: 'https://rpc.ci-testnet.near.org',
      contractName: CONTRACT_NAME,
      masterAccount: 'test.near',
    }
  case 'ci-betanet':
    return {
      networkId: 'shared-test-staging',
      nodeUrl: 'https://rpc.ci-betanet.near.org',
      contractName: CONTRACT_NAME,
      masterAccount: 'test.near',
    }
  default:
    throw Error(`Unconfigured environment '${env}'. Can be configured in src/config.js.`)
  }
}

module.exports = getConfig

'''
'''--- src/global.css ---
* {
  box-sizing: border-box;
}

html {
  --bg: #efefef;
  --fg: #1e1e1e;
  --gray: #555;
  --light-gray: #ccc;
  --shadow: #e6e6e6;
  --success: rgb(90, 206, 132);
  --primary: #FF585D;
  --secondary: #0072CE;

  background-color: var(--bg);
  color: var(--fg);
  font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica,Arial,sans-serif;
  font-size: calc(0.9em + 0.5vw);
  line-height: 1.3;
}

body {
  margin: 0;
  padding: 1em;
}

main {
  margin: 0 auto;
  max-width: 25em;
}

h1 {
  background-image: url(assets/logo-black.svg);
  background-position: center 1em;
  background-repeat: no-repeat;
  background-size: auto 1.5em;
  margin-top: 0;
  padding: 3.5em 0 0.5em;
  text-align: center;
}

a,
.link {
  color: var(--primary);
  text-decoration: none;
}
a:hover,
a:focus,
.link:hover,
.link:focus {
  text-decoration: underline;
}
a:active,
.link:active {
  color: var(--secondary);
}

button, input {
  font: inherit;
  outline: none;
}

button {
  background-color: var(--secondary);
  border-radius: 5px;
  border: none;
  color: #efefef;
  cursor: pointer;
  padding: 0.3em 0.75em;
  transition: transform 30ms;
}
button:hover, button:focus {
  box-shadow: 0 0 10em rgba(255, 255, 255, 0.2) inset;
}
button:active {
  box-shadow: 0 0 10em rgba(0, 0, 0, 0.1) inset;
}
button.link {
  background: none;
  border: none;
  box-shadow: none;
  display: inline;
}
[disabled] button, button[disabled] {
  box-shadow: none;
  background-color: var(--light-gray);
  color: gray;
  cursor: not-allowed;
  transform: none;
}
[disabled] button {
  text-indent: -900em;
  width: 2em;
  position: relative;
}
[disabled] button:after {
  content: " ";
  display: block;
  width: 0.8em;
  height: 0.8em;
  border-radius: 50%;
  border: 2px solid #fff;
  border-color: var(--fg) transparent var(--fg) transparent;
  animation: loader 1.2s linear infinite;
  position: absolute;
  top: 0.45em;
  right: 0.5em;
}
@keyframes loader {
  0% { transform: rotate(0deg) }
  100% { transform: rotate(360deg) }
}

fieldset {
  border: none;
  padding: 2em 0;
}

input {
  background-color: var(--shadow);
  border: none;
  border-radius: 5px 0 0 5px;
  caret-color: var(--primary);
  color: inherit;
  padding: 0.25em 1em;
}
input::selection {
  background-color: var(--secondary);
  color: #efefef;
}
input:focus {
  box-shadow: 0 0 10em rgba(0, 0, 0, 0.02) inset;
}

code {
  color: var(--gray);
}

li {
  padding-bottom: 1em;
}

aside {
  animation: notify ease-in-out 10s;
  background-color: var(--shadow);
  border-radius: 5px;
  bottom: 0;
  font-size: 0.8em;
  margin: 1em;
  padding: 1em;
  position: fixed;
  transform: translateY(10em);
  right: 0;
}
aside footer {
  display: flex;
  font-size: 0.9em;
  justify-content: space-between;
  margin-top: 0.5em;
}
aside footer *:first-child {
  color: var(--success);
}
aside footer *:last-child {
  color: var(--gray);
}
@keyframes notify {
  0% { transform: translateY(10em) }
  5% { transform: translateY(0) }
  95% { transform: translateY(0) }
  100% { transform: translateY(10em) }
}

@media (prefers-color-scheme: dark) {
  html {
    --bg: #1e1e1e;
    --fg: #efefef;
    --gray: #aaa;
    --shadow: #2a2a2a;
    --light-gray: #444;
  }
  h1 {
    background-image: url(assets/logo-white.svg);
  }
  input:focus {
    box-shadow: 0 0 10em rgba(255, 255, 255, 0.02) inset;
  }
}

'''
'''--- src/index.html ---
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="./assets/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="apple-touch-icon" href="./assets/favicon.ico" />
    <title></title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
    <!--
      This HTML file is a template.
      If you open it directly in the browser, you will see an empty page.

      You can add webfonts, meta tags, or analytics to this file.
      The build step will place the bundled scripts into the <body> tag.

      To begin the development, run `npm start` or `yarn start`.
      To create a production bundle, use `npm run build` or `yarn build`.
    -->
    <script src="./index.js"></script>
  </body>
</html>

'''
'''--- src/index.js ---
import React from 'react'
import ReactDOM from 'react-dom'
import App from './App'
import { initContract } from './utils'

window.nearInitPromise = initContract()
  .then(() => {
    ReactDOM.render(
      <App />,
      document.querySelector('#root')
    )
  })
  .catch(console.error)

'''
'''--- src/jest.init.js ---
import 'regenerator-runtime/runtime'

'''
'''--- src/main.test.js ---
beforeAll(async function () {
  // NOTE: nearlib and nearConfig are made available by near-cli/test_environment
  const near = await nearlib.connect(nearConfig)
  window.accountId = nearConfig.contractName
  window.contract = await near.loadContract(nearConfig.contractName, {
    viewMethods: ['getGreeting'],
    changeMethods: [],
    sender: window.accountId
  })

  window.walletConnection = {
    requestSignIn() {
    },
    signOut() {
    },
    isSignedIn() {
      return true
    },
    getAccountId() {
      return window.accountId
    }
  }
})

test('getGreeting', async () => {
  const message = await window.contract.getGreeting({ accountId: window.accountId })
  expect(message).toEqual('Hello')
})

'''
'''--- src/pages/Home.js ---
import React, { useEffect, useState } from "react";
import "../assets/css/app.css";
import { makeStyles } from '@material-ui/core/styles';
import PostCardHome from "../components/PostCardHome";
import { TransitionGroup } from 'react-transition-group';

function Home() {
    const [showNotification, setShowNotification] = useState(false)
    const [loading, setload] = useState(null);
    const [postIds, setPostIds] = useState([]);
    const [posts, setPosts] = useState([]);

    useEffect(() => {
        console.log("init home");

        window.contract.getPostsId({ from: 0, to: 30 })
            .then((arr) => {
                console.log("get arr ids ", arr);
                setPostIds(arr);
            })
            .catch(err => {
                console.log(err);
            })

        window.document.title = "NSocial"
    }, []);

    useEffect(() => {
        postIds.forEach((pidaccid) => {
            const accid = pidaccid.split("|")[0];
            const pid = pidaccid.split("|")[1];
            if (accid && pid)
                window.contract.getPost({ accountId: accid, postId: pid }).then(ob => {
                    if (ob) {
                        console.log("got 1 post ", ob);
                        setPosts(posts => [JSON.parse(ob), ...posts]);
                        console.log("posts now ", posts);
                    }

                })
        });
    }, [postIds])

    const useStyles = makeStyles(() => ({
        root: {
            maxWidth: 343,
            margin: 'auto',
            borderRadius: 12,
            padding: 12,
        },
        media: {
            borderRadius: 6,
        },
    }));

    return (
        <TransitionGroup>
            <div id="home-page">
                {
                    posts.map(e => (
                        <div className="post" key={Math.random()}>
                            <PostCardHome post={e} cmts={[]} />
                        </div>
                    ))
                }
            </div>
        </TransitionGroup>

    );
}

export default Home;

'''
'''--- src/pages/Home_1.js ---
import React, { useEffect, useState } from "react";
import "../assets/css/app.css";
import Video from "../components/Video";
import Swiper, { Navigation } from "swiper";
import "swiper/swiper-bundle.css";
Swiper.use([Navigation]);

// const { networkId } = getConfig(process.env.NODE_ENV || 'development')

function Home() {
  const [showNotification, setShowNotification] = useState(false)
  const [loading, setload] = useState(null);
  const [data, setData] = useState([
    {
      video: [],
      author: [],
      title: [],
    },
  ]);

  useEffect(() => {
    const mySwiper = new Swiper(".swiper-container", {
      loop: true,
      // spaceBetween: 830,
      direction: "vertical",
      slidesPerView: 1,
      speed: 600,
      preloadImages: true,
      observer: true,
      observeParents: true,
      watchSlidesVisibility: true,
      watchSlidesProgress: true,
      // preventInteractionOnTransition: true,

      // direction: 'vertical',
      // spaceBetween: 0,
      // hashNavigation: true,
      // mousewheel: true,
      // speed: 600,
      // loop: true
    });

    console.log("init swiper");
  }, []);

  //fetch videos 
  useEffect(() => {
    async function fetchData() {
      const response = await fetch(
        "https://www.reddit.com/r/tiktokcringe/.json?limit=100"
      );

      const data = await response.json();
      const video = [];
      const author = [];
      const title = [];
      const mediaData = data.data.children;
      try {
        for (var i = 7; i < mediaData.length; i++) {
          if (
            mediaData[i].data.media !== null &&
            mediaData[i].data.secure_media.reddit_video.bitrate_kbps < 2500 &&
            mediaData[i].data.secure_media.reddit_video.duration < 45
          ) {
            video.push(mediaData[i].data.media);
            author.push(mediaData[i].data.author);
            title.push(mediaData[i].data.title);
          }
        }
        setData([
          {
            video: video,
            author: author,
            title: title,
          },
        ]);
        setload(true);
      } catch (err) {
        console.log(err);
      }
    }
    fetchData();
  }, []);

  return (
    <div id="video-scroll">
      {data.map(({ video, author, title }) => {
        return (
          <div className="swiper-container" key={Math.random() + "_" + Date.now()}>
            <div className="swiper-wrapper">
              {video.map((v, index) => (
                <div className="swiper-slide" key={Math.random()}>
                  {loading ? (
                    <Video
                      className="lazy"
                      source={v.reddit_video.fallback_url}
                    />
                  ) : (
                    <p>Loading...</p>
                  )}
                  <p id="author">@{author[index]}</p>
                  <p id="title">
                    {title[index].length < 30
                      ? title[index]
                      : title[index].substring(0, 30) + "..."}{" "}
                  </p>
                </div>
              ))}
            </div>
          </div>
        );
      })}
    </div>
  );
}

export default Home;

'''
'''--- src/pages/Liked.js ---
import React from "react";
import PostGrid from "../components/PostGrid";
import { CssBaseline, Container, Box } from "@mui/material";
import { getFavorites } from "../utils";

export default function Liked() {

    const favorites = getFavorites();
    const posts = favorites.map(e => { return e.post });
    console.log("posts ", posts);

    function showPost() {
        if (posts && posts.length > 0) {
            return <PostGrid posts={posts} />
        }
        return (
            <>
                <div className="liked-404">
                    <p>Empty 😉  </p> 
                    <a href="/"> 🔥 Explorer now  </a>
                </div>
            </>

        )
    }
    return (

        <>
            <h2 className="heading">
                Favorites
            </h2>

            <CssBaseline />
            <Container maxWidth="sm" id="profile-page" >
                <Box sx={{ bgcolor: '#cfe8fc' }} />
                {showPost()}
            </Container>
        </>
    )
}
'''
'''--- src/pages/NotFound.js ---
import React, { useState, useEffect } from "react"

export default function NotFound() {
    return (
        <div id="404page">
            <h1 style={{ textAlign: "center" }}>
                404 not found :(
            </h1>
            <div style={{ width: "50%", textAlign: "center", height: "0", paddingBottom: "84%", position: "relative" }}>
                <iframe src="https://giphy.com/embed/4TmsyEHp9Ksw8rEyR8" width="100%" height="100%" style={{ position: "absolute" }} frameBorder="0"
                    className="giphy-embed"
                    allowFullScreen></iframe></div><p><a href="https://giphy.com/gifs/cat-laugh-capoo-4TmsyEHp9Ksw8rEyR8">via GIPHY</a></p>

        </div>

    )
}
'''
'''--- src/pages/Profile.js ---
import React, { useEffect, useRef, useState } from "react";
import CssBaseline from '@mui/material/CssBaseline';
import Container from '@mui/material/Container';
import TextField from '@mui/material/TextField';
import { Button } from "@mui/material";
import PostGrid from "../components/PostGrid";
import { logout } from "../utils";
import { useParams } from "react-router-dom";
import Backdrop from '@mui/material/Backdrop';
import CircularProgress from '@mui/material/CircularProgress';

export default function Profile() {
    const params = useParams();
    const [posts, setPosts] = useState([]);
    const accountId = params.walletid ? params.walletid : window.accountId;
    const [desc, setDesc] = useState();
    const [loading, setLoading] = useState(false);

    let userProfile = {
        media: "",
        author: window.accountId,
        desc: "",
        liked: [], //ids of post 
    };

    const descField = useRef();

    function showLogout() {
        if (!params.walletid) {
            return (<Button color="error" size="small" variant="outlined"
                onClick={() => { return confirm("Confirm Logout?") ? logout() : "" }}>logout</Button>)
        }
    }

    function showUpdateProfile() {
        console.log("wallet id ", params.walletid);
        if (!params.walletid) {
            return (
                <Button variant="contained" sx={{ width: "100%" }} onClick={() => updateProfile()}>Update Profile</Button>
            )
        }
    }

    function updateProfile() {
        console.log("user profile ", userProfile);
        userProfile.desc = descField.current.value;
        setLoading(true);
        window.contract.setProfile({ profileObject: JSON.stringify(userProfile) })
            .then((ob) => {
                setLoading(false);
            })
    }

    useEffect(() => {
        //get posts from author 
        window.contract.getPostsFrom({ accountId: accountId, from: 0, to: 100 })
            .then(ob => {
                console.log("get list posts from author", ob);
                const postsArr = ob.map(ob => JSON.parse(ob));
                console.log("postArr", postsArr);
                setPosts(postsArr);

            })
            .catch(err => {
                console.log(err);
            })

        //get user profile 
        window.contract.getProfile({ userId: accountId })
            .then(ob => {
                var obj = JSON.parse(ob);
                if (obj) {
                    userProfile = obj;
                    userProfile.author = window.accountId;
                    console.log("user profile ", obj);
                    setDesc(obj.desc);

                }
            })

        window.document.title = accountId;
    }, []);

    return (
        <>
            <h2 className="heading">
                {params.walletid} <br />
                {showLogout()}
            </h2>

            <CssBaseline />
            <Container maxWidth="sm" id="profile-page" >

                <TextField id="name" label="Name" variant="standard" InputProps={{ readOnly: true }}
                    sx={{ width: "100%" }}
                    defaultValue={params.walletid ? params.walletid : window.accountId} />

                <TextField id="description" hiddenLabel
                    InputProps={{ readOnly: params.walletid == window.accountId }}
                    variant="standard" multiline rows={3} sx={{ width: "100%", marginTop: "15px", marginBottom: "15px" }}
                    defaultValue={desc}
                    inputRef={descField} />

                {showUpdateProfile()}

                <h2 className="heading" style={{ marginTop: "15px", marginBottom: "15px" }}>
                    Posts
                </h2>
                <PostGrid posts={posts} />

                {/* backdrop loading  */}
                <Backdrop
                    sx={{ color: '#fff', zIndex: 9999 }}
                    open={loading}>
                    <CircularProgress color="inherit" />
                    <h3 style={{ paddingLeft: "15px" }}>Saving.... 🤩 </h3>

                </Backdrop>
            </Container>
        </>
    )
}
'''
'''--- src/pages/Single.js ---
import React, { useEffect, useState } from "react";
import "../assets/css/app.css";

import { makeStyles } from '@material-ui/core/styles';
import { useParams } from "react-router-dom";
import SinglePost from "../components/SinglePost";
import PostGrid from "../components/PostGrid";

// const { networkId } = getConfig(process.env.NODE_ENV || 'development')

function Single() {
    const [post, setPost] = useState({});
    const [posts, setPosts] = useState([]);
    const [cmts, setCmts] = useState([]);
    const params = useParams();

    useEffect(() => {
        console.log("init single page ");

        //get post 
        window.contract.getPost({ accountId: params.walletid, postId: params.postid })
            .then(ob => {
                setPost(JSON.parse(ob));
                console.log("get post ", JSON.parse(ob));
                window.document.title = post.title;

            })
            .catch(err => {
                console.log("get post err", err);
                // window.location.href ="/"
            })

        // //get comment of post 
        window.contract.getComments({ postId: params.postid, from: 0, to: 30 })
            .then(ob => {
                let arrCmts = [];
                if (ob.length > 0) {
                    arrCmts = ob.map(ob => JSON.parse(ob));
                }
                setCmts(arrCmts);
                console.log("arr cmts ", arrCmts);
            })
            .catch(err => {
                console.log("err get comment ", err);
            })

        //get more posts from this authors 
        window.contract.getPostsFrom({ accountId: params.walletid, from: 0, to: 30 })
            .then(rs => {
                console.log("get posts from ", rs);
                let arrRelatedPosts = [];

                if (rs.length > 0) {
                    rs.map(ob => {
                        var o = JSON.parse(ob);
                        if (o && o.id && o.id !== params.postid) {
                            arrRelatedPosts.push(o);
                        }
                    });
                }

                console.log("Related posts ", arrRelatedPosts);
                setPosts(arrRelatedPosts);
            })
            .catch(err => {
                console.log("err get related posts", err);
            })

    }, []);

    // const useStyles = makeStyles(() => ({
    //     root: {
    //         maxWidth: 343,
    //         margin: 'auto',
    //         borderRadius: 12,
    //         padding: 12,
    //     },
    //     media: {
    //         borderRadius: 6,
    //     },
    // }));

    return (
        <div id="single-page">
            {

                <div className="post" key={Math.random()}>
                    <SinglePost post={post} cmts={cmts} />
                </div>

            }
            <div className="related-posts" style={{ padding: 15 }}>
                <p className="related-post-title">More from author</p>
                <PostGrid posts={posts} />
            </div>
        </div>
    );
}

export default Single;

'''
'''--- src/pages/Upload.js ---
import React, { useState, useEffect, useRef } from "react";
import CssBaseline from '@mui/material/CssBaseline';
import Container from '@mui/material/Container';
import TextField from '@mui/material/TextField';
import { Button, Tabs, Tab } from "@mui/material";
import PhotoUploader from "../components/uploader/PhotoUploader";
import { Collections } from "@mui/icons-material";
import { OndemandVideo } from "@mui/icons-material";
import AlbumUploader from "../components/uploader/AlbumUploader";
import MediaUploader from "../components/uploader/MediaUploader";
import { LocalFlorist } from "@mui/icons-material";
import Backdrop from '@mui/material/Backdrop';
import CircularProgress from '@mui/material/CircularProgress';
import { v4 as uuid } from "uuid";

export default function Upload() {

    const postObject = {
        id: "", //postid 
        author: "", //wallet id 
        title: "",
        desc: "",
        date: "",
        type: "", //basic /album / media 
        media: "", // media url 
    }
    const [mediaUrl, setMediaUrl] = useState("");
    const [save, setSave] = useState(false);
    const [uploadFile, setUploadFile] = useState(false);
    const [menuUpload, setMenuUpload] = useState(0);
    const [loading, setLoading] = useState(false);

    const [postType, setPostType] = useState("basic"); //upload type supported: basic (photo or text ) / album (multiple photos) / media (video or audio)
    const postTitle = useRef();
    const postDesc = useRef();

    useEffect(() => {
        console.log("save state changed to", save);
        if (save) {
            //upload to near blockchain 
            console.log("uploading to near blockchain ....", mediaUrl);
            postObject.author = window.accountId;
            postObject.title = postTitle.current.value;
            postObject.desc = postDesc.current.value;
            postObject.media = mediaUrl;
            postObject.date = Date.now();
            postObject.type = postType;
            postObject.id = uuid();
            console.log("post Object", postObject);

            //set post id first 
            window.contract.setPostId({ postId: postObject.id }).then(() => {
                //upload post 
                window.contract.addPost({ postId: postObject.id, postObject: JSON.stringify(postObject) })
                .then((rs) => {
                    console.log("saved to NEAR! ");
                    console.log(rs);
                    setLoading(false);
                    window.location.href = "/" + "@" + postObject.author + "/p" + postObject.id
                    
                }).catch(err => {
                    console.log(err);
                    setLoading(false);
                    alert("Error, please check the console or reload the page ");
                })
            })
                .catch(err => {
                    console.log("set post id failed ", err);
                });

        }
    }, [save]);

    useEffect(() => {
        document.querySelector("#createPost").addEventListener("click", () => {
            document.querySelector("#uploadFile").click();
            if( !document.querySelector( "#contained-button-file").value ){
                console.log("no media upload")
                setSave(true);
            }
        });
    });

    const createPost = () => {
        console.log("createpost!");
        setUploadFile(true);
        setLoading(true);

    }

    const handleMenuChange = (event, newValue) => {
        setMenuUpload(newValue);
    }

    const ShowUploadType = () => {

        if (postType == "basic") {
            return (
                <>
                    <PhotoUploader setUrl={setMediaUrl} setSave={setSave} uploadFile={uploadFile} />
                    {/* {imgUrl ? imgUrl : "not upload yet! "} */}
                </>
            )
        }

        if (postType == "media") {
            return (
                <>
                    <MediaUploader setUrl={setMediaUrl} setSave={setSave} uploadFile={uploadFile} />
                    {/* {imgUrl ? imgUrl : "not upload yet! "} */}
                </>
            )

        }

        if (postType == "album") {
            return (<>
                <AlbumUploader setUrl={setMediaUrl} setSave={setSave} uploadFile={uploadFile} />
                {/* {imgUrl ? imgUrl : "not upload yet! "} */}
            </>)
        }
    }

    return (

        <>
            <h2 className="heading">
                Upload
            </h2>

            <CssBaseline />
            <Container maxWidth="sm" id="profile-page" >

                <div className="upload-section">

                    <Tabs value={menuUpload} onChange={handleMenuChange} sx={{ marginBottom: "15px" }}>
                        <Tab icon={<LocalFlorist />} label="Basic" onClick={() => setPostType("basic")} />
                        <Tab icon={<OndemandVideo />} label="Media" onClick={() => setPostType("media")} />
                    </Tabs>

                    <ShowUploadType />

                </div>

                <TextField id="post_title" label="Title" variant="filled" multiline rows={1} fullWidth placeholder="post title"
                    inputRef={postTitle} />

                <TextField id="post_description" label="Description" variant="filled"
                    inputRef={postDesc}
                    multiline rows={5}
                    fullWidth sx={{ marginTop: "15px", marginBottom: "15px" }}
                    defaultValue="" placeholder="post content" />

                <Button variant="contained" sx={{ width: "100%" }} onClick={createPost} id="createPost" >Upload</Button>

            </Container>

            {/* backdrop loading  */}
            <Backdrop
                sx={{ color: '#fff', zIndex: 9999 }}
                open={loading}>
                <CircularProgress color="inherit" />
                <h3 style={{ paddingLeft: "15px" }}>Please wait.... 😉 </h3>
            </Backdrop>
        </>
    )
}
'''
'''--- src/utils.js ---
import { connect, Contract, keyStores, WalletConnection } from 'near-api-js'
import getConfig from './config'

// const nearConfig = getConfig(process.env.NODE_ENV || 'development')
const nearConfig = getConfig('development')

export const NEAR_ICON_IMG = "https://gfs.sctuts.com/asset/nearicon.png";

// Initialize contract & set global variables
export async function initContract() {
  // Initialize connection to the NEAR testnet
  const near = await connect(Object.assign({ deps: { keyStore: new keyStores.BrowserLocalStorageKeyStore() } }, nearConfig))

  // Initializing Wallet based Account. It can work with NEAR testnet wallet that
  // is hosted at https://wallet.testnet.near.org
  window.walletConnection = new WalletConnection(near)

  // Getting the Account ID. If still unauthorized, it's just empty string
  window.accountId = window.walletConnection.getAccountId()

  // Initializing our contract APIs by contract name and configuration
  window.contract = await new Contract(window.walletConnection.account(), nearConfig.contractName, {
    // View methods are read only. They don't modify the state, but usually return some value.
    viewMethods: ['getPost', 'getPostsFrom', 'getPosts', 'getComments', 'getProfile', 'getPostsId'],
    // Change methods can modify the state. But you don't receive the returned value when called.
    changeMethods: ['addPost', 'setComment', 'setProfile', 'setPostId'],
  })
}

export function logout() {
  window.walletConnection.signOut()
  // reload page
  window.location.replace(window.location.origin + window.location.pathname)
}

export function login() {
  // Allow the current app to make calls to the specified contract on the
  // user's behalf.
  // This works by creating a new access key for the user's account and storing
  // the private key in localStorage.
  window.walletConnection.requestSignIn(nearConfig.contractName)
}

//favorite posts 
export function toggleFavorite(k, p) {
  isFavorite(k) ? removeFavorite(k) : addFavorite(k, p)
}

function addFavorite(k, p) {
  var favObj = getFavorites();
  var obj = { id: k, post: p };
  if (!isFavorite(k, p)) {
    favObj.push(obj);
    console.log("new ids", favObj);
  }
  localStorage.setItem(window.accountId + "fav", JSON.stringify(favObj));
}

function removeFavorite(k) {
  var favObj = getFavorites();
  var newIds = [];
  favObj.forEach(element => {
    if (element.id != k) {
      newIds.push(element);
    }
  });
  localStorage.setItem(window.accountId + "fav", JSON.stringify(newIds));
}

export function isFavorite(k) {
  var favObj = getFavorites();
  var isFav = false;
  favObj.forEach(element => {
    console.log("element id ", element.id)
    if (element.id == k ) {
      isFav = true;
    }
  });
  return isFav;
}

export function getFavorites() {
  return localStorage.getItem(window.accountId + "fav") ? JSON.parse(localStorage.getItem(window.accountId + "fav")) : [];

}
//get favorite posts in local 
'''
'''--- src/wallet/login/index.html ---
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css" integrity="sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS" crossorigin="anonymous">
</head>
<body style="background: #fff; margin-top: 3em">
  <div>For local account login, Please run the following command in NEAR CLI, then enter account id here.
  </div>
  <div>
      <code id="shell-command"></code>
  </div>
  <input type="text" id="accountId" name="accountId" placeholder="Account id"></input>
  <button type="button" onClick="done()">done</button>
  <script>
    const currentUrl = new URL(window.location.href);
    const message = `NODE_ENV=local near create_account {newAccountId} --masterAccount {masterAccountId} --publicKey ${currentUrl.searchParams.get('public_key')} --initialAmount 10000000000000000000`;
    document.getElementById('shell-command').innerText = message;

    function done() {
      const successUrl = new URL(currentUrl.searchParams.get('success_url'));
      successUrl.searchParams.set('account_id', document.getElementById('accountId').value);
      successUrl.searchParams.set('public_key', currentUrl.searchParams.get('public_key'));
      window.location.assign(successUrl.toString());
    }
  </script>
</body>
</html>
'''