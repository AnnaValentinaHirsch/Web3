*GitHub Repository "iOchando/defix3_ts_poo"*

'''--- .adminjs/.entry.js ---
AdminJS.UserComponents = {}

'''
'''--- README.md ---
# defix3_back

'''
'''--- dist/app.js ---
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
require("dotenv/config");
require("reflect-metadata");
const express_1 = __importDefault(require("express"));
const cors_1 = __importDefault(require("cors"));
const morgan_1 = __importDefault(require("morgan"));
const path_1 = __importDefault(require("path"));
const swagger_ui_express_1 = __importDefault(require("swagger-ui-express"));
const swagger_1 = __importDefault(require("./config/swagger"));
const init_1 = require("./modules/users/init");
const init_2 = require("./modules/wallets/init");
const init_3 = require("./modules/address/init");
const init_4 = require("./modules/balance/init");
const init_5 = require("./modules/subscription/init");
const init_6 = require("./modules/general/init");
const init_7 = require("./modules/transactionHistory/init");
const init_8 = require("./modules/transfer/init");
const init_9 = require("./modules/frequent/init");
const init_10 = require("./modules/swap/init");
const init_11 = require("./modules/limitOrder/init");
const init_12 = require("./modules/withdraw/init");
const init_13 = require("./modules/hiddenTokens/init");
const init_14 = require("./modules/bridge/init");
class App {
    constructor() {
        this.app = (0, express_1.default)();
        this.router = express_1.default.Router();
        this.config();
        this.initModules();
    }
    config() {
        this.app.use((0, morgan_1.default)("dev"));
        this.app.use((0, cors_1.default)());
        this.app.use(express_1.default.json());
        this.app.use("/api/v2", this.router);
        this.app.use("/uploads", express_1.default.static(path_1.default.resolve("./uploads/")));
        this.app.use("/swagger", swagger_ui_express_1.default.serve, swagger_ui_express_1.default.setup(swagger_1.default));
    }
    initModules() {
        new init_3.AddressModule(this.router);
        new init_2.WalletsModule(this.router);
        new init_1.UsersModule(this.router);
        new init_4.BalanceModule(this.router);
        new init_5.SubscriptionModule(this.router);
        new init_6.GeneralModule(this.router);
        new init_7.TransactionHistoryModule(this.router);
        new init_8.TransferModule(this.router);
        new init_12.WithdrawModule(this.router);
        new init_10.SwapModule(this.router);
        new init_11.LimitOrderModule(this.router);
        new init_9.FrequentModule(this.router);
        new init_13.HiddenTokensModule(this.router);
        new init_14.BridgeModule(this.router);
    }
}
exports.default = new App().app;

'''
'''--- dist/blockchain/abi.json ---
[
    {
        "constant": true,
        "inputs": [],
        "name": "name",
        "outputs": [
            {
                "name": "",
                "type": "string"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [
            {
                "name": "_spender",
                "type": "address"
            },
            {
                "name": "_value",
                "type": "uint256"
            }
        ],
        "name": "approve",
        "outputs": [
            {
                "name": "",
                "type": "bool"
            }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [],
        "name": "totalSupply",
        "outputs": [
            {
                "name": "",
                "type": "uint256"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [
            {
                "name": "_from",
                "type": "address"
            },
            {
                "name": "_to",
                "type": "address"
            },
            {
                "name": "_value",
                "type": "uint256"
            }
        ],
        "name": "transferFrom",
        "outputs": [
            {
                "name": "",
                "type": "bool"
            }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [],
        "name": "decimals",
        "outputs": [
            {
                "name": "",
                "type": "uint8"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [
            {
                "name": "_spender",
                "type": "address"
            },
            {
                "name": "_subtractedValue",
                "type": "uint256"
            }
        ],
        "name": "decreaseApproval",
        "outputs": [
            {
                "name": "",
                "type": "bool"
            }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [
            {
                "name": "_owner",
                "type": "address"
            }
        ],
        "name": "balanceOf",
        "outputs": [
            {
                "name": "",
                "type": "uint256"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [
            {
                "name": "_to",
                "type": "address"
            },
            {
                "name": "_value",
                "type": "uint256"
            }
        ],
        "name": "transfer",
        "outputs": [
            {
                "name": "",
                "type": "bool"
            }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [
            {
                "name": "_spender",
                "type": "address"
            },
            {
                "name": "_addedValue",
                "type": "uint256"
            }
        ],
        "name": "increaseApproval",
        "outputs": [
            {
                "name": "",
                "type": "bool"
            }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [
            {
                "name": "_owner",
                "type": "address"
            },
            {
                "name": "_spender",
                "type": "address"
            }
        ],
        "name": "allowance",
        "outputs": [
            {
                "name": "",
                "type": "uint256"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [],
        "name": "symbol",
        "outputs": [
            {
                "name": "",
                "type": "string"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "name": "_name",
                "type": "string"
            },
            {
                "name": "_symbol",
                "type": "string"
            },
            {
                "name": "_decimals",
                "type": "uint8"
            },
            {
                "name": "_totalSupply",
                "type": "uint256"
            }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "constructor"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": true,
                "name": "owner",
                "type": "address"
            },
            {
                "indexed": true,
                "name": "spender",
                "type": "address"
            },
            {
                "indexed": false,
                "name": "value",
                "type": "uint256"
            }
        ],
        "name": "Approval",
        "type": "event"
    }
]

'''
'''--- dist/blockchain/binance/binance.service.js ---
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BinanceService = void 0;
const ethers_1 = require("ethers");
const web3_1 = __importDefault(require("web3"));
const axios_1 = __importDefault(require("axios"));
const sdk_1 = require("@paraswap/sdk");
const abi_json_1 = __importDefault(require("../abi.json"));
const utils_shared_1 = require("../../shared/utils/utils.shared");
const ETHEREUM_NETWORK = process.env.ETHEREUM_NETWORK;
const INFURA_PROJECT_ID = process.env.INFURA_PROJECT_ID;
const ETHERSCAN = process.env.ETHERSCAN;
const WEB_BSC = process.env.WEB_BSC;
const web3 = new web3_1.default(new web3_1.default.providers.HttpProvider(WEB_BSC || ""));
const paraSwap = (0, sdk_1.constructSimpleSDK)({
    chainId: Number(process.env.PARASWAP_BNB),
    axios: axios_1.default,
});
const dataToken = {
    decimals: 18,
    contract: "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",
};
class BinanceService {
    getOrderBookCoinToCoin(fromCoin, toCoin) {
        throw new Error("Method not implemented.");
    }
    sendLimitOrder(fromCoin, toCoin, srcAmount, destAmount, blockchain, address, privateKey) {
        throw new Error("Method not implemented.");
    }
    async fromMnemonic(mnemonic) {
        const wallet = ethers_1.ethers.Wallet.fromMnemonic(mnemonic);
        const credential = {
            name: "BNB",
            address: wallet.address,
            privateKey: wallet.privateKey,
        };
        return credential;
    }
    async fromPrivateKey(privateKey) {
        try {
            const wallet = web3.eth.accounts.privateKeyToAccount(privateKey);
            const credential = {
                name: "BNB",
                address: wallet.address,
                privateKey: privateKey,
            };
            return credential;
        }
        catch (error) {
            return null;
        }
    }
    async isAddress(address) {
        return await web3.utils.isAddress(address);
    }
    async getBalance(address) {
        try {
            let balance = await web3.eth.getBalance(address);
            let balanceTotal = 0;
            if (balance) {
                let value = Math.pow(10, 18);
                balanceTotal = Number(balance) / value;
                if (!balanceTotal) {
                    balanceTotal = 0;
                }
                return balanceTotal;
            }
            else {
                return balanceTotal;
            }
        }
        catch (error) {
            console.log(error);
            return 0;
        }
    }
    async getBalanceToken(address, srcContract, decimals) {
        try {
            let contract = new web3.eth.Contract(abi_json_1.default, srcContract);
            const balance = await contract.methods.balanceOf(address).call();
            let balanceTotal = 0;
            if (balance) {
                let value = Math.pow(10, decimals);
                balanceTotal = balance / value;
                if (!balanceTotal) {
                    balanceTotal = 0;
                }
                return balanceTotal;
            }
            else {
                return balanceTotal;
            }
        }
        catch (error) {
            return 0;
        }
    }
    async getFeeTransaction(coin, blockchain, typeTxn) {
        try {
            let comisionAdmin = await utils_shared_1.UtilsShared.getComision(blockchain);
            const response = await axios_1.default.get("https://api.bscscan.com/api?module=gastracker&action=gasoracle&apikey=3SU1MAWAPX8X39UD6U8JBGTQ5C67EVVRSM");
            const wei = response.data.result.SafeGasPrice;
            if (!wei)
                throw new Error(`Error getting gas price`);
            const feeMain = {
                coin,
                blockchain,
                fee: "",
            };
            let gasLimit = 21000;
            if (coin !== "BNB") {
                gasLimit = 55000;
            }
            let comision;
            if (typeTxn === "TRANSFER") {
                comision = comisionAdmin.transfer;
            }
            else if (typeTxn === "WITHDRAW") {
                comision = comisionAdmin.withdraw;
            }
            if (!comision) {
                feeMain.fee = web3.utils.fromWei(String(gasLimit * wei), "gwei");
            }
            else {
                feeMain.fee = String(Number(web3.utils.fromWei(String(gasLimit * wei), "gwei")) * 2);
            }
            return feeMain;
        }
        catch (err) {
            throw new Error(`Failed to get fee transaction, ${err.message}`);
        }
    }
    async sendTransfer(fromAddress, privateKey, toAddress, amount, coin) {
        try {
            const balance = await this.getBalance(fromAddress);
            if (balance < amount) {
                throw new Error(`Error: You do not have enough funds to make the transfer`);
            }
            const gasPrice = await web3.eth.getGasPrice();
            const gasLimit = 21000;
            const nonce = await web3.eth.getTransactionCount(fromAddress);
            const rawTransaction = {
                from: fromAddress,
                to: toAddress,
                value: web3.utils.toHex(web3.utils.toWei(amount.toLocaleString("fullwide", { useGrouping: false }), "ether")),
                gasPrice: web3.utils.toHex(gasPrice),
                gasLimit: web3.utils.toHex(gasLimit),
                nonce: nonce,
            };
            const signedTransaction = await web3.eth.accounts.signTransaction(rawTransaction, privateKey);
            if (!signedTransaction.rawTransaction)
                throw new Error(`Error: Failed to sign transaction`);
            const transactionHash = await web3.eth.sendSignedTransaction(signedTransaction.rawTransaction);
            if (!transactionHash.transactionHash)
                throw new Error(`Error: Failed to send transaction`);
            return transactionHash.transactionHash;
        }
        catch (err) {
            throw new Error(`Failed to send transfer, ${err.message}`);
        }
    }
    async sendTransferToken(fromAddress, privateKey, toAddress, amount, srcToken) {
        try {
            const balance = await this.getBalanceToken(fromAddress, srcToken.contract, srcToken.decimals);
            if (balance < amount) {
                throw new Error(`Error: You do not have enough funds to make the transfer`);
            }
            const provider = new ethers_1.ethers.providers.InfuraProvider(ETHEREUM_NETWORK, INFURA_PROJECT_ID);
            const minABI = abi_json_1.default;
            const wallet = new ethers_1.ethers.Wallet(privateKey);
            const signer = wallet.connect(provider);
            const contract = new ethers_1.ethers.Contract(srcToken.contract, minABI, signer);
            let value = Math.pow(10, srcToken.decimals);
            let srcAmount = amount * value;
            const tx = await contract.transfer(toAddress, srcAmount.toLocaleString("fullwide", { useGrouping: false }));
            if (!tx.hash)
                throw new Error(`Error tx hash.`);
            return tx.hash;
        }
        catch (err) {
            throw new Error(`Failed to send transfer, ${err.message}`);
        }
    }
    async previewSwap(fromCoin, toCoin, amount, blockchain, address) {
        try {
            let fromToken = await utils_shared_1.UtilsShared.getTokenContract(fromCoin, blockchain);
            let toToken = await utils_shared_1.UtilsShared.getTokenContract(toCoin, blockchain);
            if (!fromToken) {
                fromToken = dataToken;
            }
            if (!toToken) {
                toToken = dataToken;
            }
            let value = Math.pow(10, fromToken.decimals);
            const srcAmount = amount * value;
            const priceRoute = await paraSwap.swap.getRate({
                srcToken: fromToken.contract,
                destToken: toToken.contract,
                amount: srcAmount.toLocaleString("fullwide", { useGrouping: false }),
            });
            const response = await axios_1.default.get("https://api.bscscan.com/api?module=gastracker&action=gasoracle&apikey=3SU1MAWAPX8X39UD6U8JBGTQ5C67EVVRSM");
            let wei = response.data.result.SafeGasPrice;
            const comision = await utils_shared_1.UtilsShared.getComision(blockchain);
            let feeTransfer = "0";
            let porcentFee = 0;
            if (comision.swap) {
                porcentFee = comision.swap / 100;
                if (comision.swap && fromCoin === "BNB") {
                    feeTransfer = web3.utils.fromWei(String(21000 * wei), "gwei");
                }
                else {
                    feeTransfer = web3.utils.fromWei(String(55000 * wei), "gwei");
                }
            }
            const feeGas = web3.utils.fromWei(String(Number(priceRoute.gasCost) * wei), "gwei");
            const srcFee = String(Number(feeTransfer) + Number(feeGas));
            let feeDefix = String(Number(srcFee) * porcentFee);
            const swapRate = String(Number(priceRoute.destAmount) / Math.pow(10, toToken.decimals) / (Number(priceRoute.srcAmount) / Math.pow(10, fromToken.decimals)));
            const dataSwap = {
                exchange: priceRoute.bestRoute[0].swaps[0].swapExchanges[0].exchange,
                fromAmount: priceRoute.srcAmount,
                fromDecimals: fromToken.decimals,
                toAmount: priceRoute.destAmount,
                toDecimals: toToken.decimals,
                block: priceRoute.blockNumber,
                swapRate,
                contract: priceRoute.contractAddress,
                fee: srcFee,
                feeDefix: feeDefix,
                feeTotal: String(Number(srcFee) + Number(feeDefix)),
            };
            return { dataSwap, priceRoute };
        }
        catch (err) {
            throw new Error(`Failed to send transfer, ${err.message}`);
        }
    }
    async sendSwap(priceRoute, privateKey, address) {
        try {
            const signer = web3.eth.accounts.privateKeyToAccount(privateKey);
            const txParams = await paraSwap.swap.buildTx({
                srcToken: priceRoute.srcToken,
                destToken: priceRoute.destToken,
                srcAmount: priceRoute.srcAmount,
                destAmount: priceRoute.destAmount,
                priceRoute: priceRoute,
                userAddress: address,
            });
            const txSigned = await signer.signTransaction(txParams);
            if (!txSigned.rawTransaction)
                throw new Error(`Failed to sign swap.`);
            const result = await web3.eth.sendSignedTransaction(txSigned.rawTransaction);
            const transactionHash = result.transactionHash;
            if (!transactionHash)
                throw new Error(`Failed to send swap, transaction Hash.`);
            const srcAmount = String(Number(priceRoute.srcAmount) / Math.pow(10, priceRoute.srcDecimals));
            const destAmount = String(Number(priceRoute.destAmount) / Math.pow(10, priceRoute.destDecimals));
            return {
                transactionHash,
                srcAmount: srcAmount,
                destAmount: destAmount,
                block: priceRoute.blockNumber,
            };
        }
        catch (err) {
            throw new Error(`Failed to send swap, ${err.message}`);
        }
    }
    cancelLimitOrder(address, privateKey) {
        throw new Error("Method not implemented.");
    }
    getAllLimitOrder(address) {
        throw new Error("Method not implemented.");
    }
}
exports.BinanceService = BinanceService;

'''
'''--- dist/blockchain/bitcoin/bitcoin.service.js ---
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BitcoinService = void 0;
const ecpair_1 = require("ecpair");
const bitcoinjs_lib_1 = require("bitcoinjs-lib");
const bip39_1 = require("bip39");
const WAValidator = require("wallet-address-validator");
const axios_1 = __importDefault(require("axios"));
const bip32_1 = __importDefault(require("bip32"));
const ecc = __importStar(require("tiny-secp256k1"));
const bip32 = (0, bip32_1.default)(ecc);
const utils_shared_1 = require("../../shared/utils/utils.shared");
const bitcoin_utils_1 = require("./bitcoin.utils");
const tinysecp = require("tiny-secp256k1");
const ECPair = (0, ecpair_1.ECPairFactory)(tinysecp);
const NETWORK = process.env.NETWORK;
class BitcoinService {
    constructor() {
        this.getBalanceBTC_Cypher = async (address) => {
            try {
                const method = "get";
                const url = "https://api.blockcypher.com/v1/btc/" +
                    process.env.BLOCKCYPHER +
                    "/addrs/" +
                    address +
                    "/balance?token=" +
                    "efe763283ba84fef88d23412be0c5970";
                const balance = await axios_1.default[method](url, {
                    headers: {
                        "Content-Type": "application/json",
                    },
                })
                    .then((response) => {
                    if (response.data) {
                        const satoshi = response.data.balance;
                        const value_satoshi = 100000000;
                        return satoshi / value_satoshi || 0;
                    }
                    return 0;
                })
                    .catch((error) => {
                    return 0;
                });
                return balance;
            }
            catch (error) {
                console.log(error);
                return 0;
            }
        };
    }
    getOrderBookCoinToCoin(fromCoin, toCoin) {
        throw new Error("Method not implemented.");
    }
    sendLimitOrder(fromCoin, toCoin, srcAmount, destAmount, blockchain, address, privateKey) {
        throw new Error("Method not implemented.");
    }
    async fromMnemonic(mnemonic) {
        let network;
        let path;
        if (NETWORK === "mainnet") {
            network = bitcoinjs_lib_1.networks.bitcoin; //use networks.testnet networks.bitcoin for testnet
            path = `m/49'/0'/0'/0`; // Use m/49'/1'/0'/0 for testnet mainnet `m/49'/0'/0'/0
        }
        else {
            network = bitcoinjs_lib_1.networks.testnet;
            path = `m/49'/1/0'/0`;
        }
        const seed = (0, bip39_1.mnemonicToSeedSync)(mnemonic);
        const root = bip32.fromSeed(seed, network);
        const account = root.derivePath(path);
        const node = account.derive(0).derive(0);
        const btcAddress = bitcoinjs_lib_1.payments.p2pkh({
            pubkey: node.publicKey,
            network: network,
        }).address;
        const credential = {
            name: "BTC",
            address: btcAddress || "",
            privateKey: node.toWIF(),
        };
        return credential;
    }
    async fromPrivateKey(privateKey) {
        try {
            let network;
            let path;
            if (NETWORK === "mainnet") {
                network = bitcoinjs_lib_1.networks.bitcoin; //use networks.testnet networks.bitcoin for testnet
                path = `m/49'/0'/0'/0`; // Use m/49'/1'/0'/0 for testnet mainnet `m/49'/0'/0'/0
            }
            else {
                network = bitcoinjs_lib_1.networks.testnet; //use networks.testnet networks.bitcoin for testnet;
                path = `m/49'/1/0'/0`;
            }
            const keyPair = ECPair.fromWIF(privateKey, network);
            if (!keyPair.privateKey)
                return null;
            const chainCode = Buffer.alloc(32);
            const root = bip32.fromPrivateKey(keyPair.privateKey, chainCode);
            const { address } = bitcoinjs_lib_1.payments.p2pkh({
                pubkey: root.publicKey,
                network: network,
            });
            if (!address)
                return null;
            const credential = {
                name: "BTC",
                address: address,
                privateKey: keyPair.toWIF(),
            };
            return credential;
        }
        catch (error) {
            return null;
        }
    }
    async isAddress(address) {
        if (NETWORK === "mainnet") {
            return await WAValidator.validate(address, "BTC");
        }
        else {
            return await WAValidator.validate(address, "BTC", "testnet");
        }
    }
    async getBalance(address) {
        try {
            const method = "get";
            const url = "https://blockchain.info/q/addressbalance/" + address;
            const balance = await axios_1.default[method](url, {
                headers: {
                    "Content-Type": "application/json",
                },
            })
                .then(async (response) => {
                if (response.data || response.data === 0) {
                    const satoshi = response.data;
                    const value_satoshi = 100000000;
                    const balance = satoshi / value_satoshi || 0;
                    return balance;
                }
                const item = await this.getBalanceBTC_Cypher(address);
                return item;
            })
                .catch(async (error) => {
                const item = await this.getBalanceBTC_Cypher(address);
                return item;
            });
            return balance;
        }
        catch (error) {
            console.error(error);
            const item = await this.getBalanceBTC_Cypher(address);
            return item;
        }
    }
    async getBalanceToken(address, contract, decimals) {
        return 0;
    }
    async getFeeTransaction(coin, blockchain, typeTxn, amount, address) {
        try {
            if (!amount || !address)
                throw new Error(`Failed to amount tx btc`);
            let comisionAdmin = await utils_shared_1.UtilsShared.getComision(blockchain);
            const feeMain = {
                coin,
                blockchain,
                fee: "",
            };
            let comision;
            if (typeTxn === "TRANSFER") {
                comision = comisionAdmin.transfer;
            }
            else if (typeTxn === "WITHDRAW") {
                comision = comisionAdmin.withdraw;
            }
            feeMain.fee = String(await bitcoin_utils_1.BitcoinUtils.newTxFee(comision, amount, address));
            return feeMain;
        }
        catch (err) {
            throw new Error(`Failed to get fee transaction, ${err.message}`);
        }
    }
    async sendTransfer(fromAddress, privateKey, toAddress, amount, coin) {
        try {
            let network;
            if (NETWORK === "mainnet") {
                network = bitcoinjs_lib_1.networks.bitcoin; //use networks.testnet networks.bitcoin for testnet
            }
            else {
                network = bitcoinjs_lib_1.networks.testnet; //use networks.testnet networks.bitcoin for testnet
            }
            const keys = ECPair.fromWIF(privateKey, network);
            const value_satoshi = 100000000;
            const amountSatoshi = amount * value_satoshi;
            const vaultSatoshi = 0; // parseInt(String(for_vault * value_satoshi));
            const data = {
                inputs: [
                    {
                        addresses: [fromAddress],
                    },
                ],
                outputs: [
                    {
                        addresses: [toAddress],
                        value: parseInt(String(amountSatoshi)),
                    },
                ],
            };
            if (vaultSatoshi !== 0) {
                data.outputs.push({
                    addresses: [fromAddress],
                    value: parseInt(String(vaultSatoshi)),
                });
            }
            const config = {
                method: "post",
                url: "https://api.blockcypher.com/v1/btc/" + process.env.BLOCKCYPHER + "/txs/new",
                headers: {
                    "Content-Type": "application/json",
                },
                data: data,
            };
            let txHash = null;
            await (0, axios_1.default)(config)
                .then(async function (tmptx) {
                tmptx.data.pubkeys = [];
                tmptx.data.signatures = tmptx.data.tosign.map(function (tosign, n) {
                    tmptx.data.pubkeys.push(keys.publicKey.toString("hex"));
                    return bitcoinjs_lib_1.script.signature
                        .encode(keys.sign(Buffer.from(tosign, "hex")), 0x01)
                        .toString("hex")
                        .slice(0, -2);
                });
                const result = axios_1.default
                    .post("https://api.blockcypher.com/v1/btc/" + process.env.BLOCKCYPHER + "/txs/send", tmptx.data)
                    .then(function (finaltx) {
                    txHash = finaltx.data.tx.hash;
                    console.log("hash", finaltx.data.tx.hash);
                    return true;
                })
                    .catch(function (err) {
                    throw new Error(`Failed to axios, ${err.message}`);
                });
                return result;
            })
                .catch(function (err) {
                throw new Error(`Failed to axios, ${err.message}`);
            });
            if (!txHash)
                throw new Error(`Failed to send btc, hash.`);
            return txHash;
        }
        catch (err) {
            throw new Error(`Failed to send transfer, ${err.message}`);
        }
    }
    sendTransferToken(fromAddress, privateKey, toAddress, amount, srcToken) {
        throw new Error("Method not implemented.");
    }
    previewSwap(fromCoin, toCoin, amount, blockchain, address) {
        throw new Error("Method not implemented.");
    }
    sendSwap(priceRoute, privateKey, address) {
        throw new Error("Method not implemented.");
    }
    cancelLimitOrder(address, privateKey) {
        throw new Error("Method not implemented.");
    }
    getAllLimitOrder(address) {
        throw new Error("Method not implemented.");
    }
}
exports.BitcoinService = BitcoinService;

'''
'''--- dist/blockchain/blockchain.interface.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

'''
'''--- dist/blockchain/ethereum/ethereum.service.js ---
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EthereumService = void 0;
const ethers_1 = require("ethers");
const web3_1 = __importDefault(require("web3"));
const axios_1 = __importDefault(require("axios"));
const sdk_1 = require("@paraswap/sdk");
const abi_json_1 = __importDefault(require("../abi.json"));
const utils_shared_1 = require("../../shared/utils/utils.shared");
const sdk_2 = require("@paraswap/sdk");
const ETHEREUM_NETWORK = process.env.ETHEREUM_NETWORK;
const INFURA_PROJECT_ID = process.env.INFURA_PROJECT_ID;
const ETHERSCAN = process.env.ETHERSCAN;
const web3 = new web3_1.default(new web3_1.default.providers.HttpProvider(`https://${ETHEREUM_NETWORK}.infura.io/v3/${INFURA_PROJECT_ID}`));
const paraSwap = (0, sdk_1.constructSimpleSDK)({
    chainId: Number(process.env.PARASWAP_ETH),
    axios: axios_1.default,
});
const dataToken = {
    decimals: 18,
    contract: "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",
};
const fetcher = (0, sdk_2.constructAxiosFetcher)(axios_1.default);
const provider = ethers_1.ethers.getDefaultProvider(1);
class EthereumService {
    constructor() {
        this.sendLimitOrder = async (fromCoin, toCoin, srcAmount, destAmount, blockchain, address, privateKey) => {
            try {
                const signer = new ethers_1.ethers.Wallet(privateKey, provider);
                const account = signer.address;
                const contractCaller = (0, sdk_2.constructEthersContractCaller)({
                    ethersProviderOrSigner: signer,
                    EthersContract: ethers_1.ethers.Contract,
                }, account);
                const paraSwapLimitOrderSDK = (0, sdk_2.constructPartialSDK)({
                    chainId: 1,
                    fetcher,
                    contractCaller,
                }, sdk_2.constructBuildLimitOrder, sdk_2.constructSignLimitOrder, sdk_2.constructPostLimitOrder);
                console.log(privateKey);
                let fromToken = await utils_shared_1.UtilsShared.getTokenContract(fromCoin, blockchain);
                let toToken = await utils_shared_1.UtilsShared.getTokenContract(toCoin, blockchain);
                if (!fromToken) {
                    fromToken = dataToken;
                }
                if (!toToken) {
                    toToken = dataToken;
                }
                let fromValue = Math.pow(10, fromToken.decimals);
                const srcAmountLimit = Math.round(srcAmount * fromValue);
                let toValue = Math.pow(10, toToken.decimals);
                const destAmountLimit = Math.round(destAmount * toValue);
                const orderInput = {
                    nonce: 1,
                    expiry: 0,
                    makerAsset: fromToken.contract,
                    takerAsset: toToken.contract,
                    makerAmount: srcAmountLimit.toLocaleString("fullwide", { useGrouping: false }),
                    takerAmount: destAmountLimit.toLocaleString("fullwide", { useGrouping: false }),
                    maker: account,
                };
                const signableOrderData = await paraSwapLimitOrderSDK.buildLimitOrder(orderInput);
                console.log(signableOrderData);
                // const signature = await signer._signTypedData(signableOrderData.domain, signableOrderData.types, signableOrderData.data);
                const signature = await paraSwapLimitOrderSDK.signLimitOrder(signableOrderData);
                console.log(signature);
                const orderToPostToApi = Object.assign(Object.assign({}, signableOrderData.data), { signature });
                console.log(orderToPostToApi);
                const newOrder = await paraSwapLimitOrderSDK.postLimitOrder(orderToPostToApi);
                console.log(newOrder);
                return newOrder;
            }
            catch (error) {
                console.log(error);
                throw new Error(`Failed to send order limit, ${error.message}`);
            }
        };
        this.getAllLimitOrder = async (address) => {
            try {
                const web3Main = new web3_1.default(new web3_1.default.providers.HttpProvider(`https://mainnet.infura.io/v3/${INFURA_PROJECT_ID}`));
                const paraSwapLimitOrderSDK = (0, sdk_2.constructPartialSDK)({
                    chainId: 1,
                    fetcher,
                }, sdk_1.constructGetLimitOrders);
                const ordersData = await paraSwapLimitOrderSDK.getLimitOrders({
                    maker: address,
                    type: "LIMIT",
                });
                const orders = [];
                for (let order of ordersData.orders) {
                    let orderFin = order;
                    const makerContract = new web3Main.eth.Contract(abi_json_1.default, order.makerAsset);
                    const fromSymbol = await makerContract.methods.symbol().call();
                    const fromDecimals = await makerContract.methods.decimals().call();
                    // const fromName = await makerContract.methods.name().call();
                    const takerContract = new web3Main.eth.Contract(abi_json_1.default, order.takerAsset);
                    const toSymbol = await takerContract.methods.symbol().call();
                    const toDecimals = await takerContract.methods.decimals().call();
                    // const toName = await takerContract.methods.name().call();
                    orderFin.blockchain = "ETHEREUM";
                    orderFin.blockchainCoin = "ETH";
                    orderFin.fromSymbol = fromSymbol;
                    orderFin.toSymbol = toSymbol;
                    orderFin.fromAmount = Number(orderFin.makerAmount) / Math.pow(10, fromDecimals);
                    orderFin.toAmount = Number(orderFin.takerAmount) / Math.pow(10, toDecimals);
                    orderFin.linkHash = utils_shared_1.UtilsShared.getLinkTransaction(orderFin.blockchainCoin, orderFin.orderHash);
                    orders.push(orderFin);
                }
                return orders;
            }
            catch (error) {
                throw new Error(`Failed to get all order limit, ${error.message}`);
            }
        };
        this.cancelLimitOrder = async (orderHash, privateKey) => {
            try {
                const signer = new ethers_1.ethers.Wallet(privateKey, provider);
                const account = signer.address;
                const contractCaller = (0, sdk_2.constructEthersContractCaller)({
                    ethersProviderOrSigner: signer,
                    EthersContract: ethers_1.ethers.Contract,
                }, account);
                const paraSwapLimitOrderSDK = (0, sdk_2.constructPartialSDK)({
                    chainId: 1,
                    fetcher,
                    contractCaller,
                }, sdk_1.constructGetLimitOrders, sdk_1.constructCancelLimitOrder);
                const deleteTx = await paraSwapLimitOrderSDK.cancelLimitOrder(orderHash);
                console.log("deleteTx", deleteTx);
                return deleteTx;
            }
            catch (error) {
                throw new Error(`Failed to cancel order limit, ${error.message}`);
            }
        };
        this.getOrderBookCoinToCoin = async (fromCoin, toCoin) => {
            try {
                fromCoin = "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2";
                toCoin = "0xdAC17F958D2ee523a2206206994597C13D831ec7";
                const web3Main = new web3_1.default(new web3_1.default.providers.HttpProvider(`https://mainnet.infura.io/v3/${INFURA_PROJECT_ID}`));
                const ordersData = await axios_1.default.get("https://api.paraswap.io/ft/orders/1/orderbook/?makerAsset=" + fromCoin + "&takerAsset=" + toCoin);
                const orders = [];
                for (let order of ordersData.data.orders) {
                    let orderFin = order;
                    const makerContract = new web3Main.eth.Contract(abi_json_1.default, order.makerAsset);
                    const fromSymbol = await makerContract.methods.symbol().call();
                    const fromDecimals = await makerContract.methods.decimals().call();
                    // const fromName = await makerContract.methods.name().call();
                    const takerContract = new web3Main.eth.Contract(abi_json_1.default, order.takerAsset);
                    const toSymbol = await takerContract.methods.symbol().call();
                    const toDecimals = await takerContract.methods.decimals().call();
                    // const toName = await takerContract.methods.name().call();
                    orderFin.blockchain = "ETHEREUM";
                    orderFin.blockchainCoin = "ETH";
                    orderFin.fromSymbol = fromSymbol;
                    orderFin.toSymbol = toSymbol;
                    orderFin.fromAmount = Number(orderFin.makerAmount) / Math.pow(10, fromDecimals);
                    orderFin.toAmount = Number(orderFin.takerAmount) / Math.pow(10, toDecimals);
                    orderFin.linkHash = utils_shared_1.UtilsShared.getLinkTransaction(orderFin.blockchainCoin, orderFin.orderHash);
                    orders.push(orderFin);
                }
                return orders;
            }
            catch (error) {
                throw new Error(`Failed to get order book, ${error.message}`);
            }
        };
    }
    async fromMnemonic(mnemonic) {
        const wallet = ethers_1.ethers.Wallet.fromMnemonic(mnemonic);
        const credential = {
            name: "ETH",
            address: wallet.address,
            privateKey: wallet.privateKey,
        };
        return credential;
    }
    async fromPrivateKey(privateKey) {
        try {
            const wallet = web3.eth.accounts.privateKeyToAccount(privateKey);
            const credential = {
                name: "ETH",
                address: wallet.address,
                privateKey: privateKey,
            };
            return credential;
        }
        catch (error) {
            return null;
        }
    }
    async isAddress(address) {
        return await web3.utils.isAddress(address);
    }
    async getBalance(address) {
        try {
            let balance = await web3.eth.getBalance(address);
            let balanceTotal = 0;
            if (balance) {
                let value = Math.pow(10, 18);
                balanceTotal = Number(balance) / value;
                if (!balanceTotal) {
                    balanceTotal = 0;
                }
                return balanceTotal;
            }
            else {
                return balanceTotal;
            }
        }
        catch (error) {
            return 0;
        }
    }
    async getBalanceToken(address, srcContract, decimals) {
        try {
            let contract = new web3.eth.Contract(abi_json_1.default, srcContract);
            const balance = await contract.methods.balanceOf(address).call();
            console.log(balance);
            let balanceTotal = 0;
            if (balance) {
                let value = Math.pow(10, decimals);
                balanceTotal = balance / value;
                if (!balanceTotal) {
                    balanceTotal = 0;
                }
                return balanceTotal;
            }
            else {
                return balanceTotal;
            }
        }
        catch (error) {
            return 0;
        }
    }
    async getFeeTransaction(coin, blockchain, typeTxn) {
        try {
            let comisionAdmin = await utils_shared_1.UtilsShared.getComision(blockchain);
            const response = await axios_1.default.get("https://api.etherscan.io/api?module=gastracker&action=gasoracle&apikey=ZAXW568KING2VVBGAMBU7399KH7NBB8QX6");
            const wei = response.data.result.SafeGasPrice;
            if (!wei)
                throw new Error(`Error getting gas price`);
            const feeMain = {
                coin,
                blockchain,
                fee: "",
            };
            let gasLimit = 21000;
            if (coin !== "ETH") {
                gasLimit = 55000;
            }
            let comision;
            if (typeTxn === "TRANSFER") {
                comision = comisionAdmin.transfer;
            }
            else if (typeTxn === "WITHDRAW") {
                comision = comisionAdmin.withdraw;
            }
            if (!comision) {
                feeMain.fee = web3.utils.fromWei(String(gasLimit * wei), "gwei");
            }
            else {
                feeMain.fee = String(Number(web3.utils.fromWei(String(gasLimit * wei), "gwei")) * 2);
            }
            return feeMain;
        }
        catch (err) {
            throw new Error(`Failed to get fee transaction, ${err.message}`);
        }
    }
    async sendTransfer(fromAddress, privateKey, toAddress, amount, coin) {
        try {
            const balance = await this.getBalance(fromAddress);
            if (balance < amount) {
                throw new Error(`Error: You do not have enough funds to make the transfer`);
            }
            const gasPrice = await web3.eth.getGasPrice();
            const gasLimit = 21000;
            const nonce = await web3.eth.getTransactionCount(fromAddress);
            const rawTransaction = {
                from: fromAddress,
                to: toAddress,
                value: web3.utils.toHex(web3.utils.toWei(amount.toLocaleString("fullwide", { useGrouping: false }), "ether")),
                gasPrice: web3.utils.toHex(gasPrice),
                gasLimit: web3.utils.toHex(gasLimit),
                nonce: nonce,
            };
            const signedTransaction = await web3.eth.accounts.signTransaction(rawTransaction, privateKey);
            if (!signedTransaction.rawTransaction)
                throw new Error(`Error: Failed to sign transaction`);
            const transactionHash = await web3.eth.sendSignedTransaction(signedTransaction.rawTransaction);
            if (!transactionHash.transactionHash)
                throw new Error(`Error: Failed to send transaction`);
            return transactionHash.transactionHash;
            // const response = await axios.get(
            //   "https://api.etherscan.io/api?module=gastracker&action=gasoracle&apikey=ZAXW568KING2VVBGAMBU7399KH7NBB8QX6"
            // );
            // let wei = response.data.result.SafeGasPrice;
            // let fee = Number(web3.utils.fromWei(String(21000 * wei), "gwei"));
            // const resp_comision = await GET_COMISION(coin);
            // const vault_address = await ADDRESS_VAULT(coin);
            // const comision = resp_comision.transfer / 100;
            // let amount_vault = Number((fee * comision).toFixed(18));
            // console.log(amount_vault, vault_address);
            // if (amount_vault !== 0 && vault_address) {
            //   await payCommissionETH(
            //     fromAddress,
            //     privateKey,
            //     vault_address,
            //     amount_vault
            //   );
            // }
            // if (!transactionHash.transactionHash) return false;
            // return transactionHash.transactionHash as string;
        }
        catch (err) {
            console.log(err);
            throw new Error(`Failed to send transfer, ${err.message}`);
        }
    }
    async sendTransferToken(fromAddress, privateKey, toAddress, amount, srcToken) {
        try {
            const balance = await this.getBalanceToken(fromAddress, srcToken.contract, srcToken.decimals);
            if (balance < amount) {
                throw new Error(`Error: You do not have enough funds to make the transfer`);
            }
            const provider = new ethers_1.ethers.providers.InfuraProvider(ETHEREUM_NETWORK, INFURA_PROJECT_ID);
            const minABI = abi_json_1.default;
            const wallet = new ethers_1.ethers.Wallet(privateKey);
            const signer = wallet.connect(provider);
            console.log(srcToken.contract);
            const contract = new ethers_1.ethers.Contract(srcToken.contract, minABI, signer);
            let value = Math.pow(10, srcToken.decimals);
            let srcAmount = amount * value;
            const gasPrice = signer.getGasPrice();
            const gasLimit = contract.estimateGas.transfer(toAddress, srcAmount.toLocaleString("fullwide", { useGrouping: false }));
            const tx = await contract.transfer(toAddress, srcAmount.toLocaleString("fullwide", { useGrouping: false }), {
                gasLimit: gasLimit,
                gasPrice: gasPrice,
            });
            console.log("PASOOO");
            if (!tx.hash)
                throw new Error(`Error tx hash.`);
            return tx.hash;
        }
        catch (err) {
            throw new Error(`Failed to send transfer, ${err.message}`);
        }
    }
    async previewSwap(fromCoin, toCoin, amount, blockchain, address) {
        try {
            let fromToken = await utils_shared_1.UtilsShared.getTokenContract(fromCoin, blockchain);
            let toToken = await utils_shared_1.UtilsShared.getTokenContract(toCoin, blockchain);
            if (!fromToken) {
                fromToken = dataToken;
            }
            if (!toToken) {
                toToken = dataToken;
            }
            let value = Math.pow(10, fromToken.decimals);
            const srcAmount = amount * value;
            const priceRoute = await paraSwap.swap.getRate({
                srcToken: fromToken.contract,
                destToken: toToken.contract,
                amount: srcAmount.toLocaleString("fullwide", { useGrouping: false }),
            });
            const response = await axios_1.default.get("https://api.etherscan.io/api?module=gastracker&action=gasoracle&apikey=ZAXW568KING2VVBGAMBU7399KH7NBB8QX6");
            let wei = response.data.result.SafeGasPrice;
            const comision = await utils_shared_1.UtilsShared.getComision(blockchain);
            let feeTransfer = "0";
            let porcentFee = 0;
            if (comision.swap) {
                porcentFee = comision.swap / 100;
                if (comision.swap && fromCoin === "ETH") {
                    feeTransfer = web3.utils.fromWei(String(21000 * wei), "gwei");
                }
                else {
                    feeTransfer = web3.utils.fromWei(String(55000 * wei), "gwei");
                }
            }
            const feeGas = web3.utils.fromWei(String(Number(priceRoute.gasCost) * wei), "gwei");
            const srcFee = String(Number(feeTransfer) + Number(feeGas));
            let feeDefix = String(Number(srcFee) * porcentFee);
            const swapRate = String(Number(priceRoute.destAmount) / Math.pow(10, toToken.decimals) / (Number(priceRoute.srcAmount) / Math.pow(10, fromToken.decimals)));
            const dataSwap = {
                exchange: priceRoute.bestRoute[0].swaps[0].swapExchanges[0].exchange,
                fromAmount: priceRoute.srcAmount,
                fromDecimals: fromToken.decimals,
                toAmount: priceRoute.destAmount,
                toDecimals: toToken.decimals,
                block: priceRoute.blockNumber,
                swapRate,
                contract: priceRoute.contractAddress,
                fee: srcFee,
                feeDefix: feeDefix,
                feeTotal: String(Number(srcFee) + Number(feeDefix)),
            };
            return { dataSwap, priceRoute };
        }
        catch (err) {
            throw new Error(`Failed to get preview, ${err.message}`);
        }
    }
    async sendSwap(priceRoute, privateKey, address) {
        try {
            const signer = web3.eth.accounts.privateKeyToAccount(privateKey);
            const txParams = await paraSwap.swap.buildTx({
                srcToken: priceRoute.srcToken,
                destToken: priceRoute.destToken,
                srcAmount: priceRoute.srcAmount,
                destAmount: priceRoute.destAmount,
                priceRoute: priceRoute,
                userAddress: address,
            });
            const txSigned = await signer.signTransaction(txParams);
            if (!txSigned.rawTransaction)
                throw new Error(`Failed to sign swap.`);
            const result = await web3.eth.sendSignedTransaction(txSigned.rawTransaction);
            const transactionHash = result.transactionHash;
            if (!transactionHash)
                throw new Error(`Failed to send swap, transaction Hash.`);
            const srcAmount = String(Number(priceRoute.srcAmount) / Math.pow(10, priceRoute.srcDecimals));
            const destAmount = String(Number(priceRoute.destAmount) / Math.pow(10, priceRoute.destDecimals));
            return {
                transactionHash,
                srcAmount: srcAmount,
                destAmount: destAmount,
                block: priceRoute.blockNumber,
            };
        }
        catch (err) {
            throw new Error(`Failed to send swap, ${err.message}`);
        }
    }
}
exports.EthereumService = EthereumService;

'''
'''--- dist/blockchain/near/near.service.js ---
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NearService = void 0;
const near_api_js_1 = require("near-api-js");
const nearSEED = require("near-seed-phrase");
const bn_js_1 = __importDefault(require("bn.js"));
const ref_sdk_1 = require("@ref-finance/ref-sdk");
const transaction_1 = require("near-api-js/lib/transaction");
const near_utils_1 = require("./near.utils");
const utils_shared_1 = require("../../shared/utils/utils.shared");
const NETWORK = process.env.NETWORK || "testnet";
const ETHERSCAN = process.env.ETHERSCAN;
let NEAR;
let dataToken = {
    decimals: 24,
    contract: "",
};
if (process.env.NEAR_ENV === "testnet") {
    NEAR = "testnet";
    dataToken.contract = "wrap.testnet";
}
else {
    NEAR = "near";
    dataToken.contract = "wrap.near";
}
class NearService {
    getOrderBookCoinToCoin(fromCoin, toCoin) {
        throw new Error("Method not implemented.");
    }
    sendLimitOrder(fromCoin, toCoin, srcAmount, destAmount, blockchain, address, privateKey) {
        throw new Error("Method not implemented.");
    }
    async fromMnemonic(mnemonic) {
        const walletSeed = await nearSEED.parseSeedPhrase(mnemonic);
        const keyPair = near_api_js_1.KeyPair.fromString(walletSeed.secretKey);
        const implicitAccountId = Buffer.from(keyPair.getPublicKey().data).toString("hex");
        const credential = {
            name: "NEAR",
            address: implicitAccountId,
            privateKey: walletSeed.secretKey,
        };
        return credential;
    }
    async fromPrivateKey(privateKey) {
        try {
            if (!privateKey.includes("ed25519:"))
                return null;
            const keyPair = near_api_js_1.KeyPair.fromString(privateKey);
            const implicitAccountId = Buffer.from(keyPair.getPublicKey().data).toString("hex");
            const credential = {
                name: "NEAR",
                address: implicitAccountId,
                privateKey: privateKey,
            };
            return credential;
        }
        catch (error) {
            return null;
        }
    }
    async importWallet(nearId, mnemonic) {
        const walletSeed = await nearSEED.parseSeedPhrase(mnemonic);
        const credential = {
            name: "NEAR",
            address: nearId,
            privateKey: walletSeed.secretKey,
        };
        return credential;
    }
    async isAddress(address) {
        const keyStore = new near_api_js_1.keyStores.InMemoryKeyStore();
        const near = new near_api_js_1.Near(near_utils_1.NearUtils.ConfigNEAR(keyStore));
        const account = new near_utils_1.AccountService(near.connection, address);
        const is_address = await account
            .state()
            .then((response) => {
            console.log(response);
            return true;
        })
            .catch((error) => {
            console.log(error);
            return false;
        });
        return is_address;
    }
    async getBalance(address) {
        try {
            let balanceTotal = 0;
            const keyStore = new near_api_js_1.keyStores.InMemoryKeyStore();
            const near = new near_api_js_1.Near(near_utils_1.NearUtils.ConfigNEAR(keyStore));
            const account = new near_utils_1.AccountService(near.connection, address);
            const balanceAccount = await account.state();
            const valueStorage = Math.pow(10, 19);
            const valueYocto = Math.pow(10, 24);
            const storage = (balanceAccount.storage_usage * valueStorage) / valueYocto;
            balanceTotal = Number(balanceAccount.amount) / valueYocto - storage - 0.05;
            if (balanceTotal === null || balanceTotal < 0) {
                balanceTotal = 0;
            }
            return balanceTotal;
        }
        catch (error) {
            return 0;
        }
    }
    async getBalanceToken(address, srcContract, decimals) {
        try {
            const keyStore = new near_api_js_1.keyStores.InMemoryKeyStore();
            const near = new near_api_js_1.Near(near_utils_1.NearUtils.ConfigNEAR(keyStore));
            const account = new near_utils_1.AccountService(near.connection, address);
            const balance = await account.viewFunction({
                contractId: srcContract,
                methodName: "ft_balance_of",
                args: { account_id: address },
            });
            if (!balance)
                return 0;
            return balance / Math.pow(10, decimals);
        }
        catch (error) {
            return 0;
        }
    }
    async getFeeTransaction(coin, blockchain, typeTxn) {
        try {
            let comisionAdmin = await utils_shared_1.UtilsShared.getComision(blockchain);
            const feeMain = {
                coin,
                blockchain,
                fee: "",
            };
            let comision;
            if (typeTxn === "TRANSFER") {
                comision = comisionAdmin.transfer;
            }
            else if (typeTxn === "WITHDRAW") {
                comision = comisionAdmin.withdraw;
            }
            if (!comision) {
                feeMain.fee = "0.01";
            }
            else {
                feeMain.fee = "0.01";
            }
            return feeMain;
        }
        catch (err) {
            throw new Error(`Failed to get fee transfer, ${err.message}`);
        }
    }
    async sendTransfer(fromAddress, privateKey, toAddress, amount, coin) {
        try {
            const balance = await this.getBalance(fromAddress);
            if (balance < amount)
                throw new Error(`Error: You do not have enough funds to make the transfer`);
            const keyStore = new near_api_js_1.keyStores.InMemoryKeyStore();
            const keyPair = near_api_js_1.KeyPair.fromString(privateKey);
            keyStore.setKey(NETWORK, fromAddress, keyPair);
            const near = new near_api_js_1.Near(near_utils_1.NearUtils.ConfigNEAR(keyStore));
            const account = new near_utils_1.AccountService(near.connection, fromAddress);
            const amountInYocto = near_api_js_1.utils.format.parseNearAmount(String(amount));
            if (!amountInYocto)
                throw new Error(`Failed to send transfer.`);
            const response = await account.sendMoney(toAddress, new bn_js_1.default(amountInYocto));
            if (!response.transaction.hash)
                throw new Error(`Failed to send transfer.`);
            return response.transaction.hash;
        }
        catch (err) {
            throw new Error(`Failed to send transfer, ${err.message}`);
        }
    }
    async sendTransferToken(fromAddress, privateKey, toAddress, amount, srcToken) {
        try {
            const balance = await this.getBalanceToken(fromAddress, srcToken.contract, srcToken.decimals);
            if (balance < amount) {
                throw new Error(`Error: You do not have enough funds to make the transfer`);
            }
            const keyStore = new near_api_js_1.keyStores.InMemoryKeyStore();
            const keyPair = near_api_js_1.KeyPair.fromString(privateKey);
            keyStore.setKey(process.env.NEAR_ENV, fromAddress, keyPair);
            const near = new near_api_js_1.Near(near_utils_1.NearUtils.ConfigNEAR(keyStore));
            const account = new near_utils_1.AccountService(near.connection, fromAddress);
            const activated = await activateAccount(account, fromAddress, toAddress, srcToken.contract, near);
            if (!activated)
                throw new Error(`Error: To activated account`);
            let value = Math.pow(10, srcToken.decimals);
            let srcAmount = Math.round(amount * value);
            // console.log(srcAmount.toLocaleString("fullwide", { useGrouping: false }), (amount * value).toFixed());
            const trx = await near_utils_1.NearUtils.createTransaction(srcToken.contract, [
                await (0, transaction_1.functionCall)("ft_transfer", {
                    receiver_id: toAddress,
                    amount: srcAmount.toLocaleString("fullwide", { useGrouping: false }),
                }, new bn_js_1.default("30000000000000"), new bn_js_1.default("1")),
            ], fromAddress, near);
            const result = await account.signAndSendTrx(trx);
            if (!result.transaction.hash)
                throw new Error(`Failed to send transfer.`);
            return result.transaction.hash;
        }
        catch (err) {
            throw new Error(`Failed to send transfer, ${err.message}`);
        }
    }
    async previewSwap(fromCoin, toCoin, amount, blockchain, address) {
        try {
            let fromToken = await utils_shared_1.UtilsShared.getTokenContract(fromCoin, blockchain);
            let toToken = await utils_shared_1.UtilsShared.getTokenContract(toCoin, blockchain);
            if (!fromToken) {
                fromToken = dataToken;
            }
            if (!toToken) {
                toToken = dataToken;
            }
            const tokenIn = fromToken.contract;
            const tokenOut = toToken.contract;
            const tokensMetadata = await (0, ref_sdk_1.ftGetTokensMetadata)([tokenIn, tokenOut]);
            const transactionsRef = await near_utils_1.NearUtils.getTxSwapRef(tokensMetadata[tokenIn], tokensMetadata[tokenOut], amount, address);
            const transactionsDcl = await near_utils_1.NearUtils.getTxSwapDCL(tokensMetadata[tokenIn], tokensMetadata[tokenOut], amount);
            const minAmountRef = await near_utils_1.NearUtils.getMinAmountOut(transactionsRef, tokenOut);
            let minAmountDcl;
            if (NETWORK === "testnet") {
                minAmountDcl = 0;
            }
            else {
                minAmountDcl = await near_utils_1.NearUtils.getMinAmountOut(transactionsDcl, tokenOut);
            }
            console.log(minAmountRef, minAmountDcl);
            let txMain;
            let minAmountOut = 0;
            // if (minAmountRef && !minAmountDcl) {
            //   console.log("REF");
            //   txMain = transactionsRef;
            //   minAmountOut = minAmountRef;
            // } else if (!minAmountRef && minAmountDcl) {
            //   console.log("DCL");
            //   txMain = transactionsDcl;
            //   minAmountOut = minAmountDcl;
            // } else if (minAmountRef && minAmountDcl) {
            //   if (minAmountRef > minAmountDcl) {
            //     console.log("REF");
            //     txMain = transactionsRef;
            //     minAmountOut = minAmountRef;
            //   } else {
            //     console.log("DCL");
            //     txMain = transactionsDcl;
            //     minAmountOut = minAmountDcl;
            //   }
            // }
            txMain = transactionsRef;
            minAmountOut = minAmountRef;
            if (!txMain || !minAmountOut)
                return;
            const transaction = txMain.find((element) => element.functionCalls[0].methodName === "ft_transfer_call");
            if (!transaction)
                return false;
            const transfer = transaction.functionCalls[0].args;
            const amountIn = transfer.amount;
            const comision = await utils_shared_1.UtilsShared.getComision(blockchain);
            let feeTransfer = "0.1";
            let porcentFee = 0.1;
            if (comision.swap) {
                porcentFee = comision.swap / 100;
            }
            let feeDefix = String(Number(amount) * porcentFee);
            let secondNum;
            if (tokenOut === `wrap.${NEAR}`) {
                secondNum = minAmountOut;
                minAmountOut = near_api_js_1.utils.format.parseNearAmount(String(minAmountOut));
            }
            else {
                secondNum = minAmountOut / Math.pow(10, Number(tokensMetadata[tokenOut].decimals));
            }
            const firstNum = Number(amountIn) / Math.pow(10, Number(tokensMetadata[tokenIn].decimals));
            const swapRate = String(secondNum / firstNum);
            const dataSwap = {
                exchange: "Ref Finance",
                fromAmount: amountIn,
                fromDecimals: tokensMetadata[tokenIn].decimals,
                toAmount: String(minAmountOut),
                toDecimals: tokensMetadata[tokenOut].decimals,
                block: null,
                swapRate,
                contract: tokenIn,
                fee: String(porcentFee),
                feeDefix: feeDefix,
                feeTotal: String(Number(feeDefix)),
            };
            return { dataSwap, priceRoute: { tokenIn, tokenOut, amountIn, minAmountOut: String(minAmountOut), txMain } };
        }
        catch (error) {
            console.log(error);
            throw new Error(`Feiled to get preview swap., ${error.message}`);
        }
    }
    async sendSwap(priceRoute, privateKey, address) {
        try {
            const transaction = priceRoute.txMain.find((element) => element.functionCalls[0].methodName === "ft_transfer_call");
            if (!transaction)
                throw new Error(`Failed to create tx.`);
            const tokensMetadata = await (0, ref_sdk_1.ftGetTokensMetadata)([priceRoute.tokenIn, priceRoute.tokenOut]);
            const tokenIn = tokensMetadata[priceRoute.tokenIn];
            const tokenOut = tokensMetadata[priceRoute.tokenOut];
            const keyStore = new near_api_js_1.keyStores.InMemoryKeyStore();
            const keyPair = near_api_js_1.KeyPair.fromString(privateKey);
            keyStore.setKey(process.env.NEAR_ENV, address, keyPair);
            const near = new near_api_js_1.Near(near_utils_1.NearUtils.ConfigNEAR(keyStore));
            const account = new near_utils_1.AccountService(near.connection, address);
            let nearTransactions = [];
            if (priceRoute.tokenIn.includes("wrap.")) {
                const trx = await near_utils_1.NearUtils.createTransaction(priceRoute.tokenIn, [await (0, transaction_1.functionCall)("near_deposit", {}, new bn_js_1.default("300000000000000"), new bn_js_1.default(priceRoute.amountIn))], address, near);
                nearTransactions.push(trx);
            }
            const trxs = await Promise.all(priceRoute.txMain.map(async (tx) => {
                return await near_utils_1.NearUtils.createTransaction(tx.receiverId, tx.functionCalls.map((fc) => {
                    return (0, transaction_1.functionCall)(fc.methodName, fc.args, fc.gas, new bn_js_1.default(String(near_api_js_1.utils.format.parseNearAmount(fc.amount))));
                }), address, near);
            }));
            nearTransactions = nearTransactions.concat(trxs);
            if (priceRoute.tokenOut.includes("wrap.")) {
                const trx = await near_utils_1.NearUtils.createTransaction(priceRoute.minAmountOut, [await (0, transaction_1.functionCall)("near_withdraw", { amount: priceRoute.minAmountOut }, new bn_js_1.default("300000000000000"), new bn_js_1.default("1"))], address, near);
                nearTransactions.push(trx);
            }
            let resultSwap;
            for (let trx of nearTransactions) {
                const result = await account.signAndSendTrx(trx);
                if (trx.actions[0].functionCall.methodName === "ft_transfer_call") {
                    resultSwap = result;
                }
            }
            if (!resultSwap.transaction.hash)
                return false;
            const transactionHash = resultSwap.transaction.hash;
            const block = resultSwap.transaction_outcome.block_hash;
            if (!transactionHash)
                return false;
            const srcAmount = String(Number(priceRoute.amountIn) / Math.pow(10, tokenIn.decimals));
            const destAmount = String(Number(priceRoute.minAmountOut) / Math.pow(10, tokenOut.decimals));
            return {
                transactionHash,
                srcAmount,
                destAmount,
                block,
            };
        }
        catch (err) {
            console.log(err);
            throw new Error(`Failed to send swap, ${err.message}`);
        }
    }
    cancelLimitOrder(address, privateKey) {
        throw new Error("Method not implemented.");
    }
    getAllLimitOrder(address) {
        throw new Error("Method not implemented.");
    }
}
exports.NearService = NearService;
async function activateAccount(account, fromAddress, toAddress, srcToken, near) {
    try {
        if (!toAddress)
            return false;
        const contract = new near_api_js_1.Contract(account, // the account object that is connecting
        srcToken, {
            viewMethods: ["storage_balance_of"],
            changeMethods: [], // change methods modify state
        });
        const addressActivate = await contract.storage_balance_of({
            account_id: toAddress,
        });
        if (addressActivate)
            return true;
        const trx = await near_utils_1.NearUtils.createTransaction(srcToken, [
            await (0, transaction_1.functionCall)("storage_deposit", {
                registration_only: true,
                account_id: toAddress,
            }, new bn_js_1.default("300000000000000"), new bn_js_1.default("100000000000000000000000")),
        ], fromAddress, near);
        const result = await account.signAndSendTrx(trx);
        if (!result.transaction.hash)
            return false;
        console.log("ACTIVATE END");
        return true;
    }
    catch (error) {
        console.log(error);
        console.log("ACTIVATE ERR");
        return false;
    }
}

'''
'''--- dist/blockchain/tron/tron.service.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TronService = void 0;
const utils_shared_1 = require("../../shared/utils/utils.shared");
const TronWeb = require("tronweb");
const HttpProvider = TronWeb.providers.HttpProvider;
const TRON_PRO_API_KEY = process.env.TRON_PRO_API_KEY;
const FULL_NODE = process.env.FULL_NODE;
const SOLIDITY_NODE = process.env.SOLIDITY_NODE;
const EVENT_SERVER = process.env.EVENT_SERVER;
const fullNode = new HttpProvider(FULL_NODE);
const solidityNode = new HttpProvider(SOLIDITY_NODE);
const eventServer = new HttpProvider(EVENT_SERVER);
const tronWeb = new TronWeb(fullNode, solidityNode, eventServer);
tronWeb.setHeader({ "TRON-PRO-API-KEY": TRON_PRO_API_KEY });
class TronService {
    getOrderBookCoinToCoin(fromCoin, toCoin) {
        throw new Error("Method not implemented.");
    }
    sendLimitOrder(fromCoin, toCoin, srcAmount, destAmount, blockchain, address, privateKey) {
        throw new Error("Method not implemented.");
    }
    async fromMnemonic(mnemonic) {
        const account = await tronWeb.fromMnemonic(mnemonic);
        let privateKey;
        if (account.privateKey.indexOf("0x") === 0) {
            privateKey = account.privateKey.slice(2);
        }
        else {
            privateKey = account.privateKey;
        }
        const credential = {
            name: "TRX",
            address: account.address,
            privateKey: privateKey,
        };
        return credential;
    }
    async fromPrivateKey(privateKey) {
        try {
            const address = tronWeb.address.fromPrivateKey(privateKey);
            if (!address)
                return null;
            const credential = {
                name: "TRX",
                address: address,
                privateKey: privateKey,
            };
            return credential;
        }
        catch (error) {
            return null;
        }
    }
    async isAddress(address) {
        return await tronWeb.isAddress(address);
    }
    async getBalance(address) {
        try {
            let balanceTotal = 0;
            const balance = await tronWeb.trx.getBalance(address);
            if (balance) {
                let value = Math.pow(10, 6);
                balanceTotal = balance / value;
                if (!balanceTotal) {
                    balanceTotal = 0;
                }
                return balanceTotal;
            }
            else {
                return balanceTotal;
            }
        }
        catch (error) {
            return 0;
        }
    }
    async getBalanceToken(address, srcContract, decimals) {
        try {
            tronWeb.setAddress(srcContract);
            const contract = await tronWeb.contract().at(srcContract);
            const balance = await contract.balanceOf(address).call();
            let balanceTotal = 0;
            if (balance) {
                let value = Math.pow(10, decimals);
                balanceTotal = balance / value;
                if (!balanceTotal) {
                    balanceTotal = 0;
                }
                return balanceTotal;
            }
            else {
                return balanceTotal;
            }
        }
        catch (error) {
            return 0;
        }
    }
    cancelLimitOrder(address, privateKey) {
        throw new Error("Method not implemented.");
    }
    getAllLimitOrder(address) {
        throw new Error("Method not implemented.");
    }
    async getFeeTransaction(coin, blockchain, typeTxn) {
        try {
            let comisionAdmin = await utils_shared_1.UtilsShared.getComision(blockchain);
            const feeMain = {
                coin,
                blockchain,
                fee: "",
            };
            let comision;
            if (typeTxn === "TRANSFER") {
                comision = comisionAdmin.transfer;
            }
            else if (typeTxn === "WITHDRAW") {
                comision = comisionAdmin.withdraw;
            }
            if (!comision) {
                feeMain.fee = "0";
            }
            else {
                feeMain.fee = "0";
            }
            return feeMain;
        }
        catch (err) {
            throw new Error(`Failed to get fee transaction, ${err.message}`);
        }
    }
    async sendTransfer(fromAddress, privateKey, toAddress, amount, coin) {
        try {
            const balance = await this.getBalance(fromAddress);
            if (balance < amount) {
                throw new Error(`Error: You do not have enough funds to make the transfer`);
            }
            tronWeb.setAddress(fromAddress);
            let value = Math.pow(10, 6);
            let srcAmount = parseInt(String(amount * value));
            const tx = await tronWeb.transactionBuilder
                .sendTrx(toAddress, srcAmount)
                .then(function (response) {
                return response;
            })
                .catch(function (error) {
                return false;
            });
            if (!tx)
                throw new Error(`Error to do build transaction`);
            const signedTxn = await tronWeb.trx
                .sign(tx, privateKey)
                .then(function (response) {
                return response;
            })
                .catch(function (error) {
                return false;
            });
            if (!signedTxn.signature) {
                throw new Error(`Error to sign transaction`);
            }
            const result = await tronWeb.trx.sendRawTransaction(signedTxn);
            if (!result.txid)
                throw new Error(`Failed to send raw tx.`);
            return result.txid;
        }
        catch (err) {
            throw new Error(`Failed to send transfer, ${err.message}`);
        }
    }
    async sendTransferToken(fromAddress, privateKey, toAddress, amount, srcToken) {
        try {
            const balance = await this.getBalanceToken(fromAddress, srcToken.contract, srcToken.decimals);
            if (balance < amount) {
                throw new Error(`Error: You do not have enough funds to make the transfer`);
            }
            tronWeb.setAddress(fromAddress);
            let value = Math.pow(10, srcToken.decimals);
            let srcAmount = parseInt(String(amount * value));
            const contract = await tronWeb.contract().at(srcToken.contract);
            const transaction = await contract.transfer(toAddress, srcAmount).send({
                callValue: 0,
                shouldPollResponse: true,
                privateKey: privateKey,
            });
            console.log("TRANSACTION: ", transaction);
            return transaction;
        }
        catch (err) {
            throw new Error(`Failed to send transfer, ${err.message}`);
        }
    }
    previewSwap(fromCoin, toCoin, amount, blockchain, address) {
        throw new Error("Method not implemented.");
    }
    sendSwap(priceRoute, privateKey, address) {
        throw new Error("Method not implemented.");
    }
}
exports.TronService = TronService;

'''
'''--- dist/config/dataSource.js ---
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
require("dotenv/config");
const path_1 = __importDefault(require("path"));
const typeorm_1 = require("typeorm");
const AppDataSource = new typeorm_1.DataSource({
    type: "postgres",
    host: process.env.HOST_ORM,
    port: Number(process.env.PORT_DB),
    username: process.env.USER_ORM,
    password: process.env.PASSWORD_ORM,
    database: process.env.DATABASE_ORM,
    synchronize: false,
    logging: false,
    entities: [__dirname + "/../modules/**/*.entity{.ts,.js}"],
    subscribers: [],
    migrations: [path_1.default.join(__dirname, "../migrations/*")],
});
exports.default = AppDataSource;

'''
'''--- dist/config/mongo.js ---
"use strict";
// import "dotenv/config";
// import { connect } from "mongoose";
// async function dbConnect(): Promise<void> {
//   const DB_URI = <string>process.env.DB_URI;
//   await connect(DB_URI);
// }
// export default dbConnect;

'''
'''--- dist/config/postgres.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const pg_1 = require("pg");
// Coloca aquí tus credenciales
async function dbConnect() {
    const connectionData = {
        user: process.env.USER_DB,
        host: process.env.HOST_DB,
        database: process.env.DATABASE,
        password: process.env.PASSWORD_DB,
        port: Number(process.env.PORT_DB),
    };
    return new pg_1.Pool(connectionData);
}
exports.default = dbConnect;

'''
'''--- dist/config/swagger.js ---
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = __importDefault(require("path"));
const swagger_jsdoc_1 = __importDefault(require("swagger-jsdoc"));
const swaggerDefinition = {
    openapi: "3.0.3",
    info: {
        title: "Defix3 - Api V2",
        description: "End Points for Defix3 API V2",
        contact: {
            email: "juanochando00@gmail.com",
        },
        version: "2.0.0",
    },
    servers: [
        {
            url: `https://defix3.com:${process.env.PORT}/api/v2/`,
        },
        {
            url: `http://localhost:${process.env.PORT}/api/v2/`,
        },
    ],
    tags: [
        {
            name: "Wallet",
            description: "EndPoints asociados a la creacion y funciones basicas de las wallets.",
        },
        {
            name: "User",
            description: "EndPoints asociados a la configuracion del perfil de los usuarios.",
        },
        {
            name: "2FA",
            description: "EndPoints asociados al 2FA.",
        },
        {
            name: "Balance",
            description: "EndPoints asociados al balance y Cryptomonedas",
        },
        {
            name: "General",
            description: "EndPoints variados",
        },
        {
            name: "Transfer",
            description: "EndPoints asociados a las transferencias.",
        },
        {
            name: "Withdraw",
            description: "EndPoints asociados a los retiros.",
        },
        {
            name: "Swap",
            description: "EndPoints asociados a al Swap. Solo ETH, BSC y NEAR",
        },
        {
            name: "LimitOrder",
            description: "EndPoints asociados a al Limit Order. Solo ETH",
        },
        {
            name: "TransactionHistory",
            description: "EndPoint ver el historial de Transactiones",
        },
        {
            name: "Frequent",
            description: "EndPoints para los usuarios frecuentes al hacer transferencias",
        },
        {
            name: "Subscription",
            description: "EndPoint para guardar correo de usuario que quiera recibir notificaciones de Defix3",
        },
        {
            name: "Bridge",
            description: "EndPoint asociados a al Bridge.",
        },
    ],
    components: {
        securitySchemes: {
            bearerAuth: {
                type: "http",
                scheme: "bearer",
            },
        },
    },
};
const swaggerOptions = {
    swaggerDefinition,
    apis: [path_1.default.join(__dirname, "../modules/**/{routes,routes.*}{.ts,.js}")],
};
exports.default = (0, swagger_jsdoc_1.default)(swaggerOptions);

'''
'''--- dist/config/webSockets.js ---
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const socket_io_1 = __importDefault(require("socket.io"));
const node_cache_1 = __importDefault(require("node-cache"));
const nodeCache = new node_cache_1.default();
class WebSocketServer {
    constructor(httpServer) {
        this.io = new socket_io_1.default.Server(httpServer);
        this.setup();
    }
    setup() {
        this.io.on("connection", (socket) => {
            console.log("User APP " + socket.id + " connected");
            if (nodeCache.has("getRanking")) {
                const data = nodeCache.get("getRanking");
                this.io.emit("getRanking", data);
            }
        });
    }
}
exports.default = WebSocketServer;

'''
'''--- dist/interfaces/balance.interface.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

'''
'''--- dist/interfaces/balance_crypto.interface.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

'''
'''--- dist/interfaces/credential.interface.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

'''
'''--- dist/interfaces/wallet.interface.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

'''
'''--- dist/migrations/1678390710531-migration.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.migration1678390710531 = void 0;
class migration1678390710531 {
    constructor() {
        this.name = 'migration1678390710531';
    }
    async up(queryRunner) {
        await queryRunner.query(`CREATE TABLE "users" ("id" SERIAL NOT NULL, "defix_id" character varying NOT NULL, "email" character varying, "import_id" character varying NOT NULL, "name" character varying, "lastname" character varying, "close_sessions" boolean DEFAULT false, "dosfa" boolean DEFAULT false, "legal_document" character varying, "type_document" character varying, "secret" character varying, "flag_send" boolean, "flag_receive" boolean, "flag_dex" boolean, "flag_fiat" boolean, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "UQ_5b4b4aa7a7fa89043d7f1ecc415" UNIQUE ("defix_id"), CONSTRAINT "UQ_97672ac88f789774dd47f7c8be3" UNIQUE ("email"), CONSTRAINT "UQ_4761723de32da9c56d745ecdacc" UNIQUE ("import_id"), CONSTRAINT "UQ_a32c406f2cd8265f9dff339a1b2" UNIQUE ("legal_document"), CONSTRAINT "PK_a3ffb1c0c8416b9fc6f907b7433" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "adresses" ("id" SERIAL NOT NULL, "blockchain" character varying, "address" character varying, "userId" integer, CONSTRAINT "PK_2787c84f7433e390ff8961d552d" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "balances" ("id" SERIAL NOT NULL, "blockchain" character varying, "coin" character varying, "balance" double precision DEFAULT '0', "userId" integer, CONSTRAINT "PK_74904758e813e401abc3d4261c2" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "subscriptions" ("id" SERIAL NOT NULL, "email" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "UQ_f0558bf43d14f66844255e8b7c2" UNIQUE ("email"), CONSTRAINT "PK_a87248d73155605cf782be9ee5e" PRIMARY KEY ("id"))`);
        await queryRunner.query(`ALTER TABLE "adresses" ADD CONSTRAINT "FK_b4f5c94493f23641866f161e212" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "balances" ADD CONSTRAINT "FK_414a454532d03cd17f4ef40eae2" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }
    async down(queryRunner) {
        await queryRunner.query(`ALTER TABLE "balances" DROP CONSTRAINT "FK_414a454532d03cd17f4ef40eae2"`);
        await queryRunner.query(`ALTER TABLE "adresses" DROP CONSTRAINT "FK_b4f5c94493f23641866f161e212"`);
        await queryRunner.query(`DROP TABLE "subscriptions"`);
        await queryRunner.query(`DROP TABLE "balances"`);
        await queryRunner.query(`DROP TABLE "adresses"`);
        await queryRunner.query(`DROP TABLE "users"`);
    }
}
exports.migration1678390710531 = migration1678390710531;

'''
'''--- dist/migrations/1678462338922-migration.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.migration1678462338922 = void 0;
class migration1678462338922 {
    constructor() {
        this.name = 'migration1678462338922';
    }
    async up(queryRunner) {
        await queryRunner.query(`CREATE TABLE "transaction_history" ("id" SERIAL NOT NULL, "from_defix" character varying NOT NULL, "to_defix" character varying NOT NULL, "from_address" character varying NOT NULL, "to_address" character varying NOT NULL, "blockchain" character varying NOT NULL, "coin" character varying NOT NULL, "amount" double precision NOT NULL, "hash" character varying NOT NULL, "type" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_1e2444ea77f6b5952b4ab7cb9a2" PRIMARY KEY ("id"))`);
    }
    async down(queryRunner) {
        await queryRunner.query(`DROP TABLE "transaction_history"`);
    }
}
exports.migration1678462338922 = migration1678462338922;

'''
'''--- dist/migrations/1678462532817-migration.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.migration1678462532817 = void 0;
class migration1678462532817 {
    constructor() {
        this.name = 'migration1678462532817';
    }
    async up(queryRunner) {
        await queryRunner.query(`ALTER TABLE "transaction_history" RENAME COLUMN "type" TO "type_txn"`);
    }
    async down(queryRunner) {
        await queryRunner.query(`ALTER TABLE "transaction_history" RENAME COLUMN "type_txn" TO "type"`);
    }
}
exports.migration1678462532817 = migration1678462532817;

'''
'''--- dist/migrations/1678486318270-migration.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.migration1678486318270 = void 0;
class migration1678486318270 {
    constructor() {
        this.name = 'migration1678486318270';
    }
    async up(queryRunner) {
        await queryRunner.query(`ALTER TABLE "users" RENAME COLUMN "dosfa" TO "twofa"`);
    }
    async down(queryRunner) {
        await queryRunner.query(`ALTER TABLE "users" RENAME COLUMN "twofa" TO "dosfa"`);
    }
}
exports.migration1678486318270 = migration1678486318270;

'''
'''--- dist/modules/address/controllers/address.controller.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AddressController = void 0;
class AddressController {
}
exports.AddressController = AddressController;

'''
'''--- dist/modules/address/entities/address.entity.js ---
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AddressEntity = void 0;
const typeorm_1 = require("typeorm");
const user_entity_1 = require("../../users/entities/user.entity");
let AddressEntity = class AddressEntity extends typeorm_1.BaseEntity {
};
__decorate([
    (0, typeorm_1.PrimaryGeneratedColumn)("uuid"),
    __metadata("design:type", String)
], AddressEntity.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => user_entity_1.UserEntity),
    __metadata("design:type", user_entity_1.UserEntity)
], AddressEntity.prototype, "user", void 0);
__decorate([
    (0, typeorm_1.Column)({
        nullable: true,
    }),
    __metadata("design:type", String)
], AddressEntity.prototype, "blockchain", void 0);
__decorate([
    (0, typeorm_1.Column)({
        nullable: true,
    }),
    __metadata("design:type", String)
], AddressEntity.prototype, "address", void 0);
AddressEntity = __decorate([
    (0, typeorm_1.Entity)({ name: "adresses" })
], AddressEntity);
exports.AddressEntity = AddressEntity;

'''
'''--- dist/modules/address/init.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AddressModule = void 0;
const address_controller_1 = require("./controllers/address.controller");
const routes_1 = require("./routes");
class AddressModule {
    constructor(router) {
        this.routes = new routes_1.Routes(router, new address_controller_1.AddressController());
    }
}
exports.AddressModule = AddressModule;

'''
'''--- dist/modules/address/routes.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Routes = void 0;
class Routes {
    constructor(router, controller) {
        this.controller = controller;
        this.configureRoutes(router);
    }
    configureRoutes(router) { }
}
exports.Routes = Routes;

'''
'''--- dist/modules/balance/controllers/balance.controller.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BalanceController = void 0;
const balance_service_1 = require("../services/balance.service");
class BalanceController {
    constructor() {
        this.getBalance = async (req, res) => {
            try {
                const { defixId } = req.body;
                const balance = await this.balanceService.getBalance(defixId);
                res.send(balance);
            }
            catch (error) {
                return res.status(500).send({ message: error.message });
            }
        };
        this.balanceService = new balance_service_1.BalanceService();
    }
}
exports.BalanceController = BalanceController;

'''
'''--- dist/modules/balance/entities/balance.entity.js ---
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BalanceEntity = void 0;
const typeorm_1 = require("typeorm");
const user_entity_1 = require("../../users/entities/user.entity");
let BalanceEntity = class BalanceEntity extends typeorm_1.BaseEntity {
};
__decorate([
    (0, typeorm_1.PrimaryGeneratedColumn)("uuid"),
    __metadata("design:type", String)
], BalanceEntity.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => user_entity_1.UserEntity),
    __metadata("design:type", user_entity_1.UserEntity)
], BalanceEntity.prototype, "user", void 0);
__decorate([
    (0, typeorm_1.Column)({
        nullable: true,
    }),
    __metadata("design:type", String)
], BalanceEntity.prototype, "blockchain", void 0);
__decorate([
    (0, typeorm_1.Column)({
        nullable: true,
    }),
    __metadata("design:type", String)
], BalanceEntity.prototype, "coin", void 0);
__decorate([
    (0, typeorm_1.Column)({
        nullable: true,
        type: "float",
        default: 0,
    }),
    __metadata("design:type", Number)
], BalanceEntity.prototype, "balance", void 0);
BalanceEntity = __decorate([
    (0, typeorm_1.Entity)({ name: "balances" })
], BalanceEntity);
exports.BalanceEntity = BalanceEntity;

'''
'''--- dist/modules/balance/init.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BalanceModule = void 0;
const balance_controller_1 = require("./controllers/balance.controller");
const routes_1 = require("./routes");
class BalanceModule {
    constructor(router) {
        this.routes = new routes_1.Routes(router, new balance_controller_1.BalanceController());
    }
}
exports.BalanceModule = BalanceModule;

'''
'''--- dist/modules/balance/routes.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Routes = void 0;
const shared_middleware_1 = require("../../shared/middlewares/shared.middleware");
class Routes {
    constructor(router, controller) {
        this.controller = controller;
        this.middleware = new shared_middleware_1.SharedMiddleware();
        this.configureRoutes(router);
    }
    configureRoutes(router) {
        /**
         * Post track
         * @swagger
         * /get-balance/:
         *    post:
         *      tags:
         *        - Balance
         *      summary: Obtener balance de un Usuario.
         *      description: Mandar defixId y te dara el balance de ese usuario, con todos las cryptos y tokens.
         *      requestBody:
         *          content:
         *            application/json:
         *              schema:
         *                type: "object"
         *                required: [defixId]
         *                properties: {
         *                  defixId: {
         *                    type: "string"
         *                  }
         *                }
         *      responses:
         *        '200':
         *          description: Array con balance de todas las cryptos del usuario.
         *        '400':
         *          description: Bad Request.
         *        '500':
         *          description: Internal Server Error.
         */
        router.post("/get-balance/", this.middleware.defixIdValid, this.controller.getBalance);
    }
}
exports.Routes = Routes;

'''
'''--- dist/modules/general/controllers/general.controller.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GeneralController = void 0;
const general_service_1 = require("../services/general.service");
class GeneralController {
    constructor() {
        this.getCryptos = async (req, res) => {
            try {
                const cryptos = await this.generalService.getCryptos();
                res.send(cryptos);
            }
            catch (error) {
                return res.status(500).send({ message: error.message });
            }
        };
        this.getCryptosSwap = async (req, res) => {
            try {
                const cryptos = await this.generalService.getCryptosSwap();
                res.send(cryptos);
            }
            catch (error) {
                return res.status(500).send({ message: error.message });
            }
        };
        this.getCryptosLimit = async (req, res) => {
            try {
                const cryptos = await this.generalService.getCryptosLimit();
                res.send(cryptos);
            }
            catch (error) {
                return res.status(500).send({ message: error.message });
            }
        };
        this.getCryptosBridge = async (req, res) => {
            try {
                const cryptos = await this.generalService.getCryptosBridge();
                res.send(cryptos);
            }
            catch (error) {
                return res.status(500).send({ message: error.message });
            }
        };
        this.generalService = new general_service_1.GeneralService();
    }
}
exports.GeneralController = GeneralController;

'''
'''--- dist/modules/general/init.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GeneralModule = void 0;
const general_controller_1 = require("./controllers/general.controller");
const routes_1 = require("./routes");
class GeneralModule {
    constructor(router) {
        this.routes = new routes_1.Routes(router, new general_controller_1.GeneralController());
    }
}
exports.GeneralModule = GeneralModule;

'''
'''--- dist/modules/general/routes.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Routes = void 0;
const shared_middleware_1 = require("../../shared/middlewares/shared.middleware");
class Routes {
    constructor(router, controller) {
        this.controller = controller;
        this.middleware = new shared_middleware_1.SharedMiddleware();
        this.configureRoutes(router);
    }
    configureRoutes(router) {
        /**
         * Post track
         * @swagger
         * /get-cryptos:
         *    get:
         *      tags:
         *        - General
         *      summary: Obtiene las Cryptos y Tokens permitidos en Defix3.
         *      description: Te da un array con las cryptos y tokens.
         *      responses:
         *        '200':
         *          description: Array con las cryptos y tokens.
         *        '400':
         *          description: Bad Request.
         *        '500':
         *          description: Internal Server Error.
         */
        router.get("/get-cryptos", this.controller.getCryptos);
        /**
         * Post track
         * @swagger
         * /get-cryptos-swap:
         *    get:
         *      tags:
         *        - General
         *      summary: Obtiene las Cryptos y Tokens permitidos en Defix3.
         *      description: Te da un array con las cryptos y tokens.
         *      responses:
         *        '200':
         *          description: Array con las cryptos y tokens.
         *        '400':
         *          description: Bad Request.
         *        '500':
         *          description: Internal Server Error.
         */
        router.get("/get-cryptos-swap", this.controller.getCryptosSwap);
        /**
         * Post track
         * @swagger
         * /get-cryptos-limit:
         *    get:
         *      tags:
         *        - General
         *      summary: Obtiene las Cryptos y Tokens permitidos en Defix3.
         *      description: Te da un array con las cryptos y tokens.
         *      responses:
         *        '200':
         *          description: Array con las cryptos y tokens.
         *        '400':
         *          description: Bad Request.
         *        '500':
         *          description: Internal Server Error.
         */
        router.get("/get-cryptos-limit", this.controller.getCryptosLimit);
        /**
         * Post track
         * @swagger
         * /get-cryptos-bridge:
         *    get:
         *      tags:
         *        - General
         *      summary: Obtiene las Cryptos y Tokens permitidos en Defix3.
         *      description: Te da un array con las cryptos y tokens.
         *      responses:
         *        '200':
         *          description: Array con las cryptos y tokens.
         *        '400':
         *          description: Bad Request.
         *        '500':
         *          description: Internal Server Error.
         */
        router.get("/get-cryptos-bridge", this.controller.getCryptosBridge);
    }
}
exports.Routes = Routes;

'''
'''--- dist/modules/general/services/general.service.js ---
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GeneralService = void 0;
const postgres_1 = __importDefault(require("../../../config/postgres"));
const utils_shared_1 = require("../../../shared/utils/utils.shared");
class GeneralService {
    constructor() {
        this.getCryptos = async () => {
            try {
                return await utils_shared_1.UtilsShared.getCryptos();
            }
            catch (err) {
                throw new Error(`Failed to get cryptos: ${err}`);
            }
        };
        this.getCryptosSwap = async () => {
            try {
                const conexion = await (0, postgres_1.default)();
                const cryptocurrencys = await conexion.query("select * from backend_cryptocurrency where swap=true");
                const cryptos = [];
                for (let cryptocurrency of cryptocurrencys.rows) {
                    const tokens = await conexion.query("select * from backend_token where cryptocurrency_id = $1", [cryptocurrency.id]);
                    cryptocurrency.tokens = tokens.rows;
                    cryptos.push(cryptocurrency);
                }
                return cryptos;
            }
            catch (err) {
                throw new Error(`Failed to get cryptos: ${err}`);
            }
        };
        this.getCryptosLimit = async () => {
            try {
                const conexion = await (0, postgres_1.default)();
                const cryptocurrencys = await conexion.query("select * from backend_cryptocurrency where limit_order=true");
                const cryptos = [];
                for (let cryptocurrency of cryptocurrencys.rows) {
                    const tokens = await conexion.query("select * from backend_token where cryptocurrency_id = $1", [cryptocurrency.id]);
                    cryptocurrency.tokens = tokens.rows;
                    cryptos.push(cryptocurrency);
                }
                return cryptos;
            }
            catch (err) {
                throw new Error(`Failed to get cryptos: ${err}`);
            }
        };
        this.getCryptosBridge = async () => {
            try {
                const conexion = await (0, postgres_1.default)();
                const cryptocurrencys = await conexion.query("select * from backend_cryptocurrency where bridge=true");
                const cryptos = [];
                for (let cryptocurrency of cryptocurrencys.rows) {
                    const tokens = await conexion.query("select * from backend_token where cryptocurrency_id = $1", [cryptocurrency.id]);
                    cryptocurrency.tokens = tokens.rows;
                    cryptos.push(cryptocurrency);
                }
                return cryptos;
            }
            catch (err) {
                throw new Error(`Failed to get cryptos: ${err}`);
            }
        };
    }
}
exports.GeneralService = GeneralService;

'''
'''--- dist/modules/subscription/controllers/subscription.controller.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubscriptionController = void 0;
const subscription_service_1 = require("../services/subscription.service");
class SubscriptionController {
    constructor() {
        this.setEmailSubscription = async (req, res) => {
            try {
                const { email } = req.body;
                if (!email)
                    return res.status(400).send({ message: "Invalid data." });
                const resp = await this.subscriptionService.createSubscription(email);
                return res.send(resp);
            }
            catch (error) {
                return res.status(500).send({ message: error.message });
            }
        };
        this.subscriptionService = new subscription_service_1.SubscriptionService();
    }
}
exports.SubscriptionController = SubscriptionController;

'''
'''--- dist/modules/subscription/entities/subscription.entity.js ---
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubscriptionEntity = void 0;
const typeorm_1 = require("typeorm");
let SubscriptionEntity = class SubscriptionEntity extends typeorm_1.BaseEntity {
};
__decorate([
    (0, typeorm_1.PrimaryGeneratedColumn)("uuid"),
    __metadata("design:type", String)
], SubscriptionEntity.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.Column)({
        nullable: false,
        unique: true,
    }),
    __metadata("design:type", String)
], SubscriptionEntity.prototype, "email", void 0);
__decorate([
    (0, typeorm_1.CreateDateColumn)({
        name: "created_at",
    }),
    __metadata("design:type", Date)
], SubscriptionEntity.prototype, "createdAt", void 0);
__decorate([
    (0, typeorm_1.UpdateDateColumn)({
        name: "updated_at",
    }),
    __metadata("design:type", Date)
], SubscriptionEntity.prototype, "updatedAt", void 0);
SubscriptionEntity = __decorate([
    (0, typeorm_1.Entity)({ name: "subscriptions" })
], SubscriptionEntity);
exports.SubscriptionEntity = SubscriptionEntity;

'''
'''--- dist/modules/subscription/init.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubscriptionModule = void 0;
const subscription_controller_1 = require("./controllers/subscription.controller");
const routes_1 = require("./routes");
class SubscriptionModule {
    constructor(router) {
        this.routes = new routes_1.Routes(router, new subscription_controller_1.SubscriptionController());
    }
}
exports.SubscriptionModule = SubscriptionModule;

'''
'''--- dist/modules/subscription/routes.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Routes = void 0;
class Routes {
    constructor(router, controller) {
        this.controller = controller;
        this.configureRoutes(router);
    }
    configureRoutes(router) {
        /**
         * Post track
         * @swagger
         * /create-subscription/:
         *    post:
         *      tags:
         *        - Subscription
         *      summary: Enviar correo para subscribirse a Defix3.
         *      description: Registrar correo.
         *      requestBody:
         *          content:
         *            application/json:
         *              schema:
         *                type: "object"
         *                required: [email]
         *                properties: {
         *                  email: {
         *                    type: "string"
         *                  }
         *                }
         *      responses:
         *        '200':
         *          description: Success.
         *        '400':
         *          description: Bad Request.
         *        '500':
         *          description: Internal Server Error.
         */
        router.post("/create-subscription/", this.controller.setEmailSubscription);
    }
}
exports.Routes = Routes;

'''
'''--- dist/modules/subscription/services/subscription.service.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubscriptionService = void 0;
const utils_shared_1 = require("../../../shared/utils/utils.shared");
const subscription_entity_1 = require("../entities/subscription.entity");
class SubscriptionService {
    constructor() {
        this.createSubscription = async (email) => {
            try {
                const subscription = new subscription_entity_1.SubscriptionEntity();
                if (!(await utils_shared_1.UtilsShared.validateEmail(email)))
                    throw new Error(`Invalid email`);
                subscription.email = email;
                return await subscription.save();
            }
            catch (err) {
                throw new Error(`Failed to create subscription: ${err}`);
            }
        };
    }
}
exports.SubscriptionService = SubscriptionService;

'''
'''--- dist/modules/swap/controllers/swap.controller.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SwapController = void 0;
const swap_service_1 = require("../services/swap.service");
const crypto_shared_1 = require("../../../shared/crypto/crypto.shared");
const email_shared_1 = require("../../../shared/email/email.shared");
const utils_shared_1 = require("../../../shared/utils/utils.shared");
class SwapController {
    constructor() {
        this.getPreviewSwap = async (req, res) => {
            try {
                const { fromCoin, toCoin, amount, blockchain, address } = req.body;
                if (!fromCoin || !toCoin || !amount || !blockchain)
                    return res.status(400).send({ message: "Invalid data." });
                const previewData = await this.swapService.getPreviewSwap(fromCoin, toCoin, amount, blockchain, address);
                res.send(previewData);
            }
            catch (error) {
                console.log(error);
                return res.status(500).send({ message: error.message });
            }
        };
        this.sendSwap = async (req, res) => {
            try {
                const { defixId, fromCoin, toCoin, pkEncrypt, priceRoute, blockchain, language } = req.body;
                let lang = language;
                if (lang !== "en" && lang !== "es") {
                    lang = "en";
                }
                if (!fromCoin || !toCoin || !defixId || !priceRoute || !pkEncrypt || !blockchain)
                    return res.status(400).send({ message: "Invalid data." });
                const privateKey = crypto_shared_1.CryptoShared.decrypt(pkEncrypt);
                if (!privateKey)
                    return res.status(400).send({ message: "privateKey invalid." });
                const address = await utils_shared_1.UtilsShared.getAddressUser(defixId, blockchain);
                if (!address)
                    return res.status(400).send({ message: "Address invalid." });
                const swapResult = await this.swapService.sendSwap(defixId, fromCoin, toCoin, priceRoute, privateKey, blockchain, address);
                this.mailService.emailSuccessSwap(defixId, fromCoin, swapResult.amount, toCoin, swapResult.destAmount, blockchain, swapResult.hash, swapResult.createdAt, lang);
                res.send(swapResult);
            }
            catch (error) {
                console.log(error);
                return res.status(500).send({ message: error.message });
            }
        };
        this.swapService = new swap_service_1.SwapService();
        this.mailService = new email_shared_1.MailShared();
    }
}
exports.SwapController = SwapController;

'''
'''--- dist/modules/swap/init.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SwapModule = void 0;
const swap_controller_1 = require("./controllers/swap.controller");
const routes_1 = require("./routes");
class SwapModule {
    constructor(router) {
        this.routes = new routes_1.Routes(router, new swap_controller_1.SwapController());
    }
}
exports.SwapModule = SwapModule;

'''
'''--- dist/modules/swap/routes.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Routes = void 0;
const twoFA_middleware_1 = require("../../shared/middlewares/twoFA.middleware");
class Routes {
    constructor(router, controller) {
        this.controller = controller;
        this.middleware2fa = new twoFA_middleware_1.TwoFAMiddleware();
        this.configureRoutes(router);
    }
    configureRoutes(router) {
        /**
         * @swagger
         * /get-preview-swap/:
         *    post:
         *      tags:
         *        - Swap
         *      summary: Obtiene el Preview del swap, Tasa de cambio, hash y monto recibido..
         *      description: Manda campos requeridos para obtener el priceRoute.
         *      requestBody:
         *          content:
         *            application/json:
         *              schema:
         *                type: "object"
         *                required: [fromCoin, toCoin, amount, blockchain]
         *                properties: {
         *                  fromCoin: {
         *                    type: "string"
         *                  },
         *                  toCoin: {
         *                    type: "string"
         *                  },
         *                  amount: {
         *                    type: "number"
         *                  },
         *                  blockchain: {
         *                    type: "string"
         *                  },
         *                  address: {
         *                    type: "string"
         *                  }
         *                }
         *      responses:
         *        '200':
         *          description: Devuelve el preview o priceRoute del swap a realizar.
         *        '400':
         *          description: Bad Request.
         *        '500':
         *          description: Internal Server Error.
         */
        router.post("/get-preview-swap/", this.controller.getPreviewSwap);
        /**
         * @swagger
         * /send-swap/:
         *    post:
         *      tags:
         *        - Swap
         *      summary: Realiza el swap
         *      description: Manda el priceRoute obtenido anteriormente para hacer el swap.
         *      requestBody:
         *          content:
         *            application/json:
         *              schema:
         *                type: "object"
         *                required: [defixId, fromCoin, toCoin, pkEncrypt, priceRoute, blockchain]
         *                properties: {
         *                  defixId: {
         *                    type: "string"
         *                  },
         *                  fromCoin: {
         *                    type: "string"
         *                  },
         *                  toCoin: {
         *                    type: "string"
         *                  },
         *                  pkEncrypt: {
         *                    type: "string"
         *                  },
         *                  priceRoute: {
         *                    type: "object"
         *                  },
         *                  blockchain: {
         *                    type: "string"
         *                  },
         *                  code2fa: {
         *                    type: "string"
         *                  },
         *                  language: {
         *                    type: "string"
         *                  },
         *                }
         *      responses:
         *        '200':
         *          description: Devuelve la transaccion del swap.
         *        '400':
         *          description: Bad Request.
         *        '500':
         *          description: Internal Server Error.
         */
        router.post("/send-swap/", this.middleware2fa.validateTwoFA, this.controller.sendSwap);
    }
}
exports.Routes = Routes;

'''
'''--- dist/modules/swap/services/swap.service.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SwapService = void 0;
const utils_shared_1 = require("../../../shared/utils/utils.shared");
const transactionHistory_service_1 = require("../../transactionHistory/services/transactionHistory.service");
const blockchain_1 = require("../../../blockchain");
class SwapService extends transactionHistory_service_1.TransactionHistoryService {
    constructor() {
        super();
        this.getPreviewSwap = async (fromCoin, toCoin, amount, blockchain, address) => {
            try {
                if (!Object.keys(blockchain_1.blockchainService).includes(blockchain.toLowerCase())) {
                    throw new Error(`Invalid blockchain.`);
                }
                const swapResult = await blockchain_1.blockchainService[blockchain.toLowerCase()].previewSwap(fromCoin, toCoin, amount, blockchain, address);
                console.log("Brrr");
                console.log(swapResult);
                if (!swapResult) {
                    throw new Error(`Internal error swap preview.`);
                }
                return swapResult;
            }
            catch (err) {
                throw new Error(`Failed to get preview swap, ${err}`);
            }
        };
        this.sendSwap = async (defixId, fromCoin, toCoin, priceRoute, privateKey, blockchain, address) => {
            try {
                if (!Object.keys(blockchain_1.blockchainService).includes(blockchain.toLowerCase())) {
                    throw new Error(`Invalid blockchain.`);
                }
                const swapResult = await blockchain_1.blockchainService[blockchain.toLowerCase()].sendSwap(priceRoute, privateKey, address);
                if (!swapResult)
                    throw new Error(`Transaction hash.`);
                const coin = fromCoin + "/" + toCoin;
                const transactionHistory = await this.createTransactionHistory({
                    fromDefix: defixId,
                    toDefix: defixId,
                    fromAddress: address,
                    toAddress: address,
                    coin,
                    blockchain,
                    amount: swapResult.srcAmount,
                    hash: swapResult.transactionHash,
                    typeTxn: "SWAP",
                });
                transactionHistory.block = swapResult.block;
                transactionHistory.destAmount = swapResult.destAmount;
                transactionHistory.linkTxn = utils_shared_1.UtilsShared.getLinkTransaction(blockchain, swapResult.transactionHash);
                return transactionHistory;
            }
            catch (err) {
                throw new Error(`Failed to send swap, ${err}`);
            }
        };
    }
}
exports.SwapService = SwapService;

'''
'''--- dist/modules/transactionHistory/controllers/transactionHistory.controller.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransactionHistoryController = void 0;
const transactionHistory_service_1 = require("../services/transactionHistory.service");
class TransactionHistoryController {
    constructor() {
        this.getTransactionHistory = async (req, res) => {
            try {
                const { defixId, blockchain, coin, hash, typeTxn } = req.body;
                const transactions = await this.transactionHistory.getTransactionHistory(defixId, coin, blockchain, hash, typeTxn);
                res.send(transactions);
            }
            catch (error) {
                return res.status(500).send({ message: error.message });
            }
        };
        this.transactionHistory = new transactionHistory_service_1.TransactionHistoryService();
    }
}
exports.TransactionHistoryController = TransactionHistoryController;

'''
'''--- dist/modules/transactionHistory/entities/transactionHistory.entity.js ---
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransactionHistoryEntity = void 0;
const typeorm_1 = require("typeorm");
let TransactionHistoryEntity = class TransactionHistoryEntity extends typeorm_1.BaseEntity {
};
__decorate([
    (0, typeorm_1.PrimaryGeneratedColumn)("uuid"),
    __metadata("design:type", String)
], TransactionHistoryEntity.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.Column)({
        name: "from_defix",
        nullable: false,
    }),
    __metadata("design:type", String)
], TransactionHistoryEntity.prototype, "fromDefix", void 0);
__decorate([
    (0, typeorm_1.Column)({
        name: "to_defix",
        nullable: false,
    }),
    __metadata("design:type", String)
], TransactionHistoryEntity.prototype, "toDefix", void 0);
__decorate([
    (0, typeorm_1.Column)({
        name: "from_address",
        nullable: false,
    }),
    __metadata("design:type", String)
], TransactionHistoryEntity.prototype, "fromAddress", void 0);
__decorate([
    (0, typeorm_1.Column)({
        name: "to_address",
        nullable: false,
    }),
    __metadata("design:type", String)
], TransactionHistoryEntity.prototype, "toAddress", void 0);
__decorate([
    (0, typeorm_1.Column)({
        nullable: false,
    }),
    __metadata("design:type", String)
], TransactionHistoryEntity.prototype, "blockchain", void 0);
__decorate([
    (0, typeorm_1.Column)({
        nullable: false,
    }),
    __metadata("design:type", String)
], TransactionHistoryEntity.prototype, "coin", void 0);
__decorate([
    (0, typeorm_1.Column)({
        nullable: false,
        type: "float",
    }),
    __metadata("design:type", Number)
], TransactionHistoryEntity.prototype, "amount", void 0);
__decorate([
    (0, typeorm_1.Column)({
        nullable: false,
    }),
    __metadata("design:type", String)
], TransactionHistoryEntity.prototype, "hash", void 0);
__decorate([
    (0, typeorm_1.Column)({
        name: "type_txn",
        nullable: false,
    }),
    __metadata("design:type", String)
], TransactionHistoryEntity.prototype, "typeTxn", void 0);
__decorate([
    (0, typeorm_1.CreateDateColumn)({
        name: "created_at",
    }),
    __metadata("design:type", Date)
], TransactionHistoryEntity.prototype, "createdAt", void 0);
TransactionHistoryEntity = __decorate([
    (0, typeorm_1.Entity)({ name: "transaction_history" })
], TransactionHistoryEntity);
exports.TransactionHistoryEntity = TransactionHistoryEntity;

'''
'''--- dist/modules/transactionHistory/init.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransactionHistoryModule = void 0;
const transactionHistory_controller_1 = require("./controllers/transactionHistory.controller");
const routes_1 = require("./routes");
class TransactionHistoryModule {
    constructor(router) {
        this.routes = new routes_1.Routes(router, new transactionHistory_controller_1.TransactionHistoryController());
    }
}
exports.TransactionHistoryModule = TransactionHistoryModule;

'''
'''--- dist/modules/transactionHistory/routes.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Routes = void 0;
class Routes {
    constructor(router, controller) {
        this.controller = controller;
        this.configureRoutes(router);
    }
    configureRoutes(router) {
        /**
         * @swagger
         * /transaction-history/:
         *    post:
         *      tags:
         *        - TransactionHistory
         *      summary: Historico de transacciones.
         *      description: Obtener historico de transacciones de un usuario.
         *      requestBody:
         *          content:
         *            application/json:
         *              schema:
         *                type: "object"
         *                required: [defixId]
         *                properties: {
         *                  defixId: {
         *                    type: "string"
         *                  },
         *                  blockchain: {
         *                    type: "string"
         *                  },
         *                  coin: {
         *                    type: "string"
         *                  },
         *                  hash: {
         *                    type: "string"
         *                  },
         *                  typeTxn: {
         *                    type: "string"
         *                  },
         *                }
         *      responses:
         *        '200':
         *          description: Devuelve array de transacciones.
         *        '400':
         *          description: Bad Request.
         *        '500':
         *          description: Internal Server Error.
         */
        router.post("/transaction-history/", this.controller.getTransactionHistory);
    }
}
exports.Routes = Routes;

'''
'''--- dist/modules/transactionHistory/services/transactionHistory.service.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransactionHistoryService = void 0;
const transactionHistory_entity_1 = require("../entities/transactionHistory.entity");
class TransactionHistoryService {
    constructor() {
        this.createTransactionHistory = async ({ fromDefix, toDefix, fromAddress, toAddress, blockchain, coin, amount, hash, typeTxn }) => {
            try {
                const transactionHistory = new transactionHistory_entity_1.TransactionHistoryEntity();
                transactionHistory.fromDefix = fromDefix;
                transactionHistory.toDefix = toDefix;
                transactionHistory.fromAddress = fromAddress;
                transactionHistory.toAddress = toAddress;
                transactionHistory.blockchain = blockchain;
                transactionHistory.coin = coin;
                transactionHistory.amount = amount;
                transactionHistory.hash = hash;
                transactionHistory.typeTxn = typeTxn;
                return await transactionHistory.save();
            }
            catch (err) {
                throw new Error(`Failed to create address: ${err}`);
            }
        };
        this.getTransactionHistory = async (defixId, coin = null, blockchain = null, hash = null, typeTxn = null, year = null) => {
            try {
                const transactions = await transactionHistory_entity_1.TransactionHistoryEntity.createQueryBuilder("transaction")
                    .where("(transaction.fromDefix = :defixId OR transaction.toDefix = :defixId) \
          AND (transaction.coin = :coin IS NULL OR transaction.coin = :coin) \
          AND (transaction.blockchain = :blockchain IS NULL OR transaction.blockchain = :blockchain) \
          AND (transaction.hash = :hash IS NULL OR transaction.hash = :hash) \
          AND (transaction.typeTxn = :typeTxn IS NULL OR transaction.typeTxn = :typeTxn)", {
                    defixId,
                    coin,
                    blockchain,
                    hash,
                    typeTxn,
                })
                    .getMany();
                return transactions;
            }
            catch (err) {
                console.log(err);
                throw new Error(`Failed to get address: ${err}`);
            }
        };
    }
}
exports.TransactionHistoryService = TransactionHistoryService;

'''
'''--- dist/modules/transfer/controllers/transfer.controller.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransferController = void 0;
const transfer_service_1 = require("../services/transfer.service");
const crypto_shared_1 = require("../../../shared/crypto/crypto.shared");
const email_shared_1 = require("../../../shared/email/email.shared");
class TransferController {
    constructor() {
        this.getFeeTransfer = async (req, res) => {
            try {
                const { coin, blockchain, amount, address } = req.body;
                if (!coin || !blockchain)
                    return res.status(400).send({ message: "Invalid data." });
                const previewData = await this.transferService.getFeeTransfer(coin, blockchain, amount, address);
                res.send(previewData);
            }
            catch (error) {
                return res.status(500).send({ message: error.message });
            }
        };
        this.sendTransfer = async (req, res) => {
            try {
                const { defixId, pkEncrypt, toAddress, coin, amount, blockchain, language } = req.body;
                let lang = language;
                if (lang !== "en" && lang !== "es") {
                    lang = "en";
                }
                if (!defixId || !pkEncrypt || !toAddress || !coin || !amount || !blockchain)
                    return res.status(400).send({ message: "Invalid data." });
                const privateKey = crypto_shared_1.CryptoShared.decrypt(pkEncrypt);
                if (!privateKey)
                    return res.status(400).send({ message: "privateKey invalid." });
                const transaction = await this.transferService.sendTransfer(defixId, privateKey, toAddress, coin, amount, blockchain);
                this.mailService.emailSuccessWithdrawal(defixId, toAddress, amount, coin, blockchain, transaction.hash, lang);
                this.mailService.emailReceivedPayment(defixId, toAddress, amount, coin, blockchain, transaction.hash, lang);
                res.send(transaction);
            }
            catch (error) {
                console.log(error.message);
                return res.status(500).send({ message: error.message });
            }
        };
        this.transferService = new transfer_service_1.TransferService();
        this.mailService = new email_shared_1.MailShared();
    }
}
exports.TransferController = TransferController;

'''
'''--- dist/modules/transfer/init.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransferModule = void 0;
const transfer_controller_1 = require("./controllers/transfer.controller");
const routes_1 = require("./routes");
class TransferModule {
    constructor(router) {
        this.routes = new routes_1.Routes(router, new transfer_controller_1.TransferController());
    }
}
exports.TransferModule = TransferModule;

'''
'''--- dist/modules/transfer/routes.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Routes = void 0;
const twoFA_middleware_1 = require("../../shared/middlewares/twoFA.middleware");
class Routes {
    constructor(router, controller) {
        this.controller = controller;
        this.middleware2fa = new twoFA_middleware_1.TwoFAMiddleware();
        this.configureRoutes(router);
    }
    configureRoutes(router) {
        /**
         * @swagger
         * /get-fee-transfer/:
         *    post:
         *      tags:
         *        - Transfer
         *      summary: Obtiene el fee de la transferencia..
         *      description: Manda campos requeridos para obtener el fee.
         *      requestBody:
         *          content:
         *            application/json:
         *              schema:
         *                type: "object"
         *                required: [coin, blockchain]
         *                properties: {
         *                  coin: {
         *                    type: "string"
         *                  },
         *                  blockchain: {
         *                    type: "string"
         *                  },
         *                  amount: {
         *                    type: "number"
         *                  },
         *                  address: {
         *                    type: "string"
         *                  }
         *                }
         *      responses:
         *        '200':
         *          description: Devuelve el preview de la transfer.
         *        '400':
         *          description: Bad Request.
         *        '500':
         *          description: Internal Server Error.
         */
        router.post("/get-fee-transfer/", this.controller.getFeeTransfer);
        /**
         * @swagger
         * /send-transfer/:
         *    post:
         *      tags:
         *        - Transfer
         *      summary: Hacer transferencia.
         *      description: Manda campos requeridos para hacer una transaction.
         *      requestBody:
         *          content:
         *            application/json:
         *              schema:
         *                type: "object"
         *                required: [defixId, pkEncrypt, toAddress, coin, amount, blockchain]
         *                properties: {
         *                  defixId: {
         *                    type: "string"
         *                  },
         *                  pkEncrypt: {
         *                    type: "string"
         *                  },
         *                  toAddress: {
         *                    type: "string"
         *                  },
         *                  coin: {
         *                    type: "string"
         *                  },
         *                  amount: {
         *                    type: "number"
         *                  },
         *                  blockchain: {
         *                    type: "string"
         *                  },
         *                  code2fa: {
         *                    type: "string"
         *                  },
         *                  language: {
         *                    type: "string"
         *                  },
         *                }
         *      responses:
         *        '200':
         *          description: Devuelve la transaccion realizada.
         *        '400':
         *          description: Bad Request.
         *        '500':
         *          description: Internal Server Error.
         */
        router.post("/send-transfer/", this.middleware2fa.validateTwoFA, this.controller.sendTransfer);
    }
}
exports.Routes = Routes;

'''
'''--- dist/modules/transfer/services/transfer.service.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransferService = void 0;
const utils_shared_1 = require("../../../shared/utils/utils.shared");
const address_service_1 = require("../../address/services/address.service");
const transactionHistory_service_1 = require("../../transactionHistory/services/transactionHistory.service");
const blockchain_1 = require("../../../blockchain");
const frequent_service_1 = require("../../frequent/services/frequent.service");
class TransferService extends transactionHistory_service_1.TransactionHistoryService {
    constructor() {
        super();
        this.getFeeTransfer = async (coin, blockchain, amount, address) => {
            try {
                if (!Object.keys(blockchain_1.blockchainService).includes(blockchain.toLowerCase())) {
                    throw new Error(`Invalid blockchain.`);
                }
                const feeTransfer = await blockchain_1.blockchainService[blockchain.toLowerCase()].getFeeTransaction(coin, blockchain, "TRANSFER", amount, address);
                if (!feeTransfer) {
                    throw new Error(`Internal error fee preview.`);
                }
                return feeTransfer;
            }
            catch (err) {
                throw new Error(`Failed to get fee transfer, ${err}`);
            }
        };
        this.sendTransfer = async (fromDefix, privateKey, toDefix, coin, amount, blockchain) => {
            var _a, _b;
            try {
                let transactionHash, fromAddress, toAddress, tipoEnvio;
                if (fromDefix.includes(".defix3")) {
                    fromAddress = (_a = (await this.addressService.getAddressByDefixId(fromDefix, blockchain))) === null || _a === void 0 ? void 0 : _a.address;
                }
                else {
                    fromAddress = fromDefix;
                }
                if (toDefix.includes(".defix3")) {
                    toAddress = (_b = (await this.addressService.getAddressByDefixId(toDefix, blockchain))) === null || _b === void 0 ? void 0 : _b.address;
                    tipoEnvio = "user";
                }
                else {
                    toAddress = toDefix;
                    tipoEnvio = "wallet";
                }
                if (!fromAddress || !toAddress)
                    throw new Error(`Invalid data.`);
                if (Object.keys(blockchain_1.blockchainService).includes(coin.toLowerCase())) {
                    transactionHash = await blockchain_1.blockchainService[coin.toLowerCase()].sendTransfer(fromAddress, privateKey, toAddress, amount, coin);
                }
                else {
                    if (!Object.keys(blockchain_1.blockchainService).includes(blockchain.toLowerCase())) {
                        throw new Error(`Invalid data.`);
                    }
                    const srcContract = await utils_shared_1.UtilsShared.getTokenContract(coin, blockchain);
                    console.log(srcContract);
                    if (!srcContract)
                        throw new Error(`Failed to get token contract.`);
                    transactionHash = await blockchain_1.blockchainService[blockchain.toLowerCase()].sendTransferToken(fromAddress, privateKey, toAddress, amount, srcContract);
                }
                if (!transactionHash)
                    throw new Error(`Transaction hash.`);
                const transaction = await this.createTransactionHistory({
                    fromDefix,
                    toDefix,
                    fromAddress,
                    toAddress,
                    blockchain,
                    coin,
                    amount,
                    hash: transactionHash,
                    typeTxn: "TRANSFER",
                });
                await this.frequentService.createFrequent(fromDefix, toDefix, "TRANSFER");
                return transaction;
                // const resSend = await getEmailFlagFN(fromDefix, "SEND");
                // const resReceive = await getEmailFlagFN(toDefix, "RECEIVE");
                // const item = {
                //   monto: amount,
                //   moneda: coin,
                //   receptor: toDefix,
                //   emisor: fromDefix,
                //   tipoEnvio: tipoEnvio,
                // };
                // EnvioCorreo(resSend, resReceive, "envio", item);
            }
            catch (err) {
                throw new Error(`Failed to send transfer, ${err}`);
            }
        };
        this.addressService = new address_service_1.AddressService();
        this.frequentService = new frequent_service_1.FrequentService();
    }
}
exports.TransferService = TransferService;

'''
'''--- dist/modules/users/controllers/twoFA.controller.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TwoFAController = void 0;
const twoFA_service_1 = require("../services/twoFA.service");
class TwoFAController {
    constructor() {
        this.generateTwoFA = async (req, res) => {
            try {
                const { defixId } = req.body;
                const response = await this.twoFAService.generateTwoFA(defixId);
                return res.send(response);
            }
            catch (error) {
                return res.status(500).send({ message: error.message });
            }
        };
        this.activateTwoFA = async (req, res) => {
            try {
                const { defixId, code2fa } = req.body;
                if (!code2fa)
                    return res.status(400).send({ message: "Invalid data." });
                await this.twoFAService.activateTwoFA(defixId, code2fa);
                return res.status(204).send();
            }
            catch (error) {
                return res.status(500).send({ message: error.message });
            }
        };
        this.deactivateTwoFA = async (req, res) => {
            try {
                const { defixId, code2fa } = req.body;
                if (!code2fa)
                    return res.status(400).send({ message: "Invalid data." });
                await this.twoFAService.deactivateTwoFA(defixId, code2fa);
                return res.status(204).send();
            }
            catch (error) {
                return res.status(500).send({ message: error.message });
            }
        };
        this.statusTwoFA = async (req, res) => {
            try {
                const { defixId } = req.body;
                const response = await this.twoFAService.statusTwoFA(defixId);
                return res.send(response);
            }
            catch (error) {
                return res.status(500).send({ message: error.message });
            }
        };
        this.twoFAService = new twoFA_service_1.TwoFAService();
    }
}
exports.TwoFAController = TwoFAController;

'''
'''--- dist/modules/users/controllers/user.controller.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserController = void 0;
const user_service_1 = require("../services/user.service");
class UserController {
    constructor() {
        this.validateDefixId = async (req, res) => {
            try {
                const { defixId } = req.body;
                const user = await this.userService.getUserByDefixId(defixId);
                if (!user)
                    return res.send(false);
                return res.send(true);
            }
            catch (error) {
                return res.status(500).send({ message: error.message });
            }
        };
        this.validateEmail = async (req, res) => {
            try {
                const { defixId, email } = req.body;
                const user = await this.userService.getUserByEmail(email);
                if (!user)
                    return res.send(false);
                if (user.defixId === defixId)
                    return res.send(false);
                return res.send(true);
            }
            catch (error) {
                return res.status(500).send({ message: error.message });
            }
        };
        this.getUsers = async (req, res) => {
            try {
                const users = await this.userService.getUsers();
                res.send(users);
            }
            catch (error) {
                return res.status(500).send({ message: error.message });
            }
        };
        this.getUserData = async (req, res) => {
            try {
                const { defixId } = req.body;
                const user = await this.userService.getUserDataByDefixId(defixId);
                if (!user)
                    return res.status(400).send({ message: "User not exists." });
                res.send(user);
            }
            catch (error) {
                return res.status(500).send({ message: error.message });
            }
        };
        this.updateUser = async (req, res) => {
            try {
                const { defixId } = req.body;
                console.log(defixId);
                if (req.file) {
                    req.body.avatar = req.file.filename;
                }
                await this.validateFlags(req);
                const updatedUser = await this.userService.updateUser(defixId, req.body);
                res.send(updatedUser);
            }
            catch (error) {
                return res.status(500).send({ message: error.message });
            }
        };
        this.validateFlags = async (req) => {
            if (typeof req.body.flagSign === "string") {
                if (req.body.flagSign.toLowerCase() === "true")
                    req.body.flagSign = true;
                else if (req.body.flagSign.toLowerCase() === "false") {
                    req.body.flagSign = false;
                }
            }
            if (typeof req.body.flagNews === "string") {
                if (req.body.flagNews.toLowerCase() === "true")
                    req.body.flagNews = true;
                else if (req.body.flagNews.toLowerCase() === "false") {
                    req.body.flagNews = false;
                }
            }
            if (typeof req.body.flagDeposit === "string") {
                if (req.body.flagDeposit.toLowerCase() === "true")
                    req.body.flagDeposit = true;
                else if (req.body.flagDeposit.toLowerCase() === "false") {
                    req.body.flagDeposit = false;
                }
            }
            if (typeof req.body.flagWithdraw === "string") {
                if (req.body.flagWithdraw.toLowerCase() === "true")
                    req.body.flagWithdraw = true;
                else if (req.body.flagWithdraw.toLowerCase() === "false") {
                    req.body.flagWithdraw = false;
                }
            }
            if (typeof req.body.flagEvolution === "string") {
                if (req.body.flagEvolution.toLowerCase() === "true")
                    req.body.flagEvolution = true;
                else if (req.body.flagEvolution.toLowerCase() === "false") {
                    req.body.flagEvolution = false;
                }
            }
        };
        this.userService = new user_service_1.UserService();
    }
}
exports.UserController = UserController;

'''
'''--- dist/modules/users/entities/user.entity.js ---
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserEntity = void 0;
const typeorm_1 = require("typeorm");
let UserEntity = class UserEntity extends typeorm_1.BaseEntity {
};
__decorate([
    (0, typeorm_1.PrimaryGeneratedColumn)("uuid"),
    __metadata("design:type", String)
], UserEntity.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.Column)({
        name: "defix_id",
        nullable: false,
        unique: true,
    }),
    __metadata("design:type", String)
], UserEntity.prototype, "defixId", void 0);
__decorate([
    (0, typeorm_1.Column)({
        nullable: true,
        unique: true,
    }),
    __metadata("design:type", String)
], UserEntity.prototype, "email", void 0);
__decorate([
    (0, typeorm_1.Column)({
        name: "import_id",
        nullable: false,
        unique: true,
    }),
    __metadata("design:type", String)
], UserEntity.prototype, "importId", void 0);
__decorate([
    (0, typeorm_1.Column)({
        nullable: true,
    }),
    __metadata("design:type", String)
], UserEntity.prototype, "name", void 0);
__decorate([
    (0, typeorm_1.Column)({
        nullable: true,
    }),
    __metadata("design:type", String)
], UserEntity.prototype, "lastname", void 0);
__decorate([
    (0, typeorm_1.Column)({
        nullable: true,
    }),
    __metadata("design:type", String)
], UserEntity.prototype, "avatar", void 0);
__decorate([
    (0, typeorm_1.Column)({
        name: "close_sessions",
        nullable: true,
        default: false,
    }),
    __metadata("design:type", Boolean)
], UserEntity.prototype, "closeSessions", void 0);
__decorate([
    (0, typeorm_1.Column)({
        nullable: true,
        default: false,
    }),
    __metadata("design:type", Boolean)
], UserEntity.prototype, "twofa", void 0);
__decorate([
    (0, typeorm_1.Column)({
        name: "legal_document",
        nullable: true,
        unique: true,
    }),
    __metadata("design:type", String)
], UserEntity.prototype, "legalDocument", void 0);
__decorate([
    (0, typeorm_1.Column)({
        name: "type_document",
        nullable: true,
    }),
    __metadata("design:type", String)
], UserEntity.prototype, "typeDocument", void 0);
__decorate([
    (0, typeorm_1.Column)({
        nullable: true,
    }),
    __metadata("design:type", String)
], UserEntity.prototype, "secret", void 0);
__decorate([
    (0, typeorm_1.Column)({
        name: "flag_news",
        nullable: true,
    }),
    __metadata("design:type", Boolean)
], UserEntity.prototype, "flagNews", void 0);
__decorate([
    (0, typeorm_1.Column)({
        name: "flag_deposit",
        nullable: true,
    }),
    __metadata("design:type", Boolean)
], UserEntity.prototype, "flagDeposit", void 0);
__decorate([
    (0, typeorm_1.Column)({
        name: "flag_sign",
        nullable: true,
    }),
    __metadata("design:type", Boolean)
], UserEntity.prototype, "flagSign", void 0);
__decorate([
    (0, typeorm_1.Column)({
        name: "flag_withdrawal",
        nullable: true,
    }),
    __metadata("design:type", Boolean)
], UserEntity.prototype, "flagWithdraw", void 0);
__decorate([
    (0, typeorm_1.Column)({
        name: "flag_evolution",
        nullable: true,
    }),
    __metadata("design:type", Boolean)
], UserEntity.prototype, "flagEvolution", void 0);
__decorate([
    (0, typeorm_1.Column)({
        default: "en",
        nullable: true,
    }),
    __metadata("design:type", String)
], UserEntity.prototype, "language", void 0);
__decorate([
    (0, typeorm_1.CreateDateColumn)({
        name: "created_at",
    }),
    __metadata("design:type", Date)
], UserEntity.prototype, "createdAt", void 0);
__decorate([
    (0, typeorm_1.UpdateDateColumn)({
        name: "updated_at",
    }),
    __metadata("design:type", Date)
], UserEntity.prototype, "updatedAt", void 0);
UserEntity = __decorate([
    (0, typeorm_1.Entity)({ name: "users" })
], UserEntity);
exports.UserEntity = UserEntity;

'''
'''--- dist/modules/users/init.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UsersModule = void 0;
const user_controller_1 = require("./controllers/user.controller");
const routes_user_1 = require("./routes.user");
const routes_twoFA_1 = require("./routes.twoFA");
const twoFA_controller_1 = require("./controllers/twoFA.controller");
class UsersModule {
    constructor(router) {
        this.routes = new routes_user_1.RoutesUser(router, new user_controller_1.UserController());
        this.routesTwoFA = new routes_twoFA_1.RoutesTwoFA(router, new twoFA_controller_1.TwoFAController());
    }
}
exports.UsersModule = UsersModule;

'''
'''--- dist/modules/users/routes.twoFA.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RoutesTwoFA = void 0;
const shared_middleware_1 = require("../../shared/middlewares/shared.middleware");
class RoutesTwoFA {
    constructor(router, controller) {
        this.controller = controller;
        this.middleware = new shared_middleware_1.SharedMiddleware();
        this.configureRoutes(router);
    }
    configureRoutes(router) {
        /**
         * Post track
         * @swagger
         * /generate-2fa/:
         *    post:
         *      tags:
         *        - 2FA
         *      summary: Generar 2FA.
         *      description: Mandar defixId y seedPhrase encriptado para generar un 2fa para el usuario.
         *      requestBody:
         *          content:
         *            application/json:
         *              schema:
         *                type: "object"
         *                required: [defixId, seedPhrase]
         *                properties: {
         *                  defixId: {
         *                    type: "string"
         *                  },
         *                }
         *      responses:
         *        '200':
         *          description: Devuelve el qr y el codigo 2fa.
         *        '400':
         *          description: Bad Request.
         *        '500':
         *          description: Internal Server Error.
         */
        router.post("/generate-2fa/", this.middleware.defixIdValid, this.controller.generateTwoFA);
        /**
         * Post track
         * @swagger
         * /activate-2fa/:
         *    post:
         *      tags:
         *        - 2FA
         *      summary: Activar 2FA.
         *      description: Activa el 2fa en la base de datos del usuario.
         *      requestBody:
         *          content:
         *            application/json:
         *              schema:
         *                type: "object"
         *                required: [defixId, seedPhrase, code2fa]
         *                properties: {
         *                  defixId: {
         *                    type: "string"
         *                  },
         *                  code2fa: {
         *                    type: "string"
         *                  }
         *                }
         *      responses:
         *        '204':
         *          description: Success.
         *        '400':
         *          description: Bad Request.
         *        '500':
         *          description: Internal Server Error.
         */
        router.post("/activate-2fa/", this.middleware.defixIdValid, this.controller.activateTwoFA);
        /**
         * Post track
         * @swagger
         * /deactivate-2fa/:
         *    post:
         *      tags:
         *        - 2FA
         *      summary: Desactivar 2FA.
         *      description: Desactiva el 2fa en la base de datos del usuario.
         *      requestBody:
         *          content:
         *            application/json:
         *              schema:
         *                type: "object"
         *                required: [defixId, code2fa]
         *                properties: {
         *                  defixId: {
         *                    type: "string"
         *                  },
         *                  code2fa: {
         *                    type: "string"
         *                  }
         *                }
         *      responses:
         *        '204':
         *          description: Success.
         *        '400':
         *          description: Bad Request.
         *        '500':
         *          description: Internal Server Error.
         */
        router.post("/deactivate-2fa/", this.middleware.defixIdValid, this.controller.deactivateTwoFA);
        /**
         * Post track
         * @swagger
         * /status-2fa/:
         *    post:
         *      tags:
         *        - 2FA
         *      summary: Status 2FA.
         *      description: Te da un Status del 2FA del usuario.
         *      requestBody:
         *          content:
         *            application/json:
         *              schema:
         *                type: "object"
         *                required: [defixId]
         *                properties: {
         *                  defixId: {
         *                    type: "string"
         *                  }
         *                }
         *      responses:
         *        '200':
         *          description: Devuelve un boolean si el 2FA esta activo o no.
         *        '400':
         *          description: Bad Request.
         *        '500':
         *          description: Internal Server Error.
         */
        router.post("/status-2fa/", this.middleware.defixIdValid, this.controller.statusTwoFA);
    }
}
exports.RoutesTwoFA = RoutesTwoFA;

'''
'''--- dist/modules/users/routes.user.js ---
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RoutesUser = void 0;
const shared_middleware_1 = require("../../shared/middlewares/shared.middleware");
const multer_1 = __importDefault(require("../../config/multer"));
class RoutesUser {
    constructor(router, controller) {
        this.controller = controller;
        this.middleware = new shared_middleware_1.SharedMiddleware();
        this.multerConfig = new multer_1.default();
        this.configureRoutes(router);
    }
    configureRoutes(router) {
        /**
         * Post track
         * @swagger
         * /validate-defix3/:
         *    post:
         *      tags:
         *        - User
         *      summary: Validar si un usuario defix3 existe.
         *      description: Response un Boolean si el usuario existe o no.
         *      requestBody:
         *          content:
         *            application/json:
         *              schema:
         *                type: "object"
         *                required: ["defixId"]
         *                properties: {
         *                  defixId: {
         *                    type: "string"
         *                  }
         *                }
         *      responses:
         *        '200':
         *          description: Responde un boolean.
         *        '400':
         *          description: Bad Request.
         *        '500':
         *          description: Bad Request.
         */
        router.post("/validate-defix3/", this.middleware.defixIdAvailable, this.controller.validateDefixId);
        /**
         * Post track
         * @swagger
         * /validate-email/:
         *    post:
         *      tags:
         *        - User
         *      summary: Validar si un email existe.
         *      description: Response un Boolean si el email existe o no.
         *      requestBody:
         *          content:
         *            application/json:
         *              schema:
         *                type: "object"
         *                required: ["email"]
         *                properties: {
         *                  email: {
         *                    type: "string"
         *                  }
         *                }
         *      responses:
         *        '200':
         *          description: Responde un boolean.
         *        '400':
         *          description: Bad Request.
         *        '500':
         *          description: Bad Request.
         */
        router.post("/validate-email/", this.controller.validateEmail);
        /**
         * Post track
         * @swagger
         * /get-users:
         *    get:
         *      tags:
         *        - User
         *      summary: Lista los username de los usuarios registrados.
         *      description: Responde solo el defixId de los usuarios.
         *      responses:
         *        '200':
         *          description: Responde un Array con la lista de usuarios.
         *        '400':
         *          description: Bad Request.
         *        '500':
         *          description: Bad Request.
         */
        router.get("/get-users", this.controller.getUsers);
        /**
         * Post track
         * @swagger
         * /get-user-data/:
         *    post:
         *      tags:
         *        - User
         *      summary: Obtiene la data de configuracion del usuario.
         *      description: Obtiene data del defixId enviado.
         *      requestBody:
         *          content:
         *            application/json:
         *              schema:
         *                type: "object"
         *                required: [defixId]
         *                properties: {
         *                  defixId: {
         *                    type: "string"
         *                  }
         *                }
         *      responses:
         *        '200':
         *          description: Responde objeto con la data.
         *        '400':
         *          description: Bad Request.
         *        '500':
         *          description: Bad Request.
         */
        router.post("/get-user-data/", this.middleware.defixIdValid, this.controller.getUserData);
        /**
         * Post track
         * @swagger
         * /update-user/:
         *    patch:
         *      tags:
         *        - User
         *      summary: Actualizar data del usuario.
         *      description: Manda data para actualizar el usuario.
         *      requestBody:
         *          content:
         *            application/json:
         *              schema:
         *                type: "object"
         *                required: [defixId]
         *                properties: {
         *                  defixId: {
         *                    type: "string"
         *                  },
         *                }
         *      responses:
         *        '200':
         *          description: Buena respuesta.
         *        '400':
         *          description: Bad Request.
         *        '500':
         *          description: Internal server error.
         */
        router.patch("/update-user/", this.multerConfig.upload().single("avatar"), this.controller.updateUser);
    }
}
exports.RoutesUser = RoutesUser;

'''
'''--- dist/modules/users/services/twoFA.service.js ---
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TwoFAService = void 0;
const user_service_1 = require("./user.service");
const otplib_1 = require("otplib");
const qrcode_1 = __importDefault(require("qrcode"));
class TwoFAService extends user_service_1.UserService {
    constructor() {
        super();
        this.generateTwoFA = async (defixId) => {
            try {
                const user = await this.getUserByDefixId(defixId);
                if (!user)
                    throw new Error(`User not exists.`);
                // if (user.twofa) throw new Error(`2fa is already active.`);
                let secret;
                if (!user.secret) {
                    secret = otplib_1.authenticator.generateSecret();
                    const userUpdated = await this.updateUser(defixId, { secret });
                    if (userUpdated.affected === 0)
                        throw new Error(`Failed to update user.`);
                }
                else {
                    secret = user.secret;
                }
                const codeAuth = otplib_1.authenticator.keyuri(defixId, "Defix3 App", secret);
                // const qr = await QRCode.toDataURL(codigo);
                console.log("QR", await qrcode_1.default.toDataURL(codeAuth));
                return { codeAuth, secret };
            }
            catch (err) {
                throw new Error(`Failed to generate 2fa, ${err}`);
            }
        };
        this.activateTwoFA = async (defixId, code2fa) => {
            try {
                const user = await this.getUserByDefixId(defixId);
                if (!user)
                    throw new Error(`User not exists.`);
                if (!user.secret)
                    throw new Error(`The user does not have the secret.`);
                const auth = otplib_1.authenticator.check(code2fa, user.secret);
                if (!auth)
                    throw new Error(`Error code 2fa.`);
                const userUpdated = await this.updateUser(defixId, { twofa: true });
                if (userUpdated.affected === 0)
                    throw new Error(`Failed to update user.`);
                return;
            }
            catch (err) {
                throw new Error(`Failed to activate 2fa, ${err}`);
            }
        };
        this.deactivateTwoFA = async (defixId, code2fa) => {
            try {
                const user = await this.getUserByDefixId(defixId);
                if (!user)
                    throw new Error(`User not exists.`);
                if (!user.secret)
                    throw new Error(`The user does not have the secret.`);
                const auth = otplib_1.authenticator.check(code2fa, user.secret);
                if (!auth)
                    throw new Error(`Error code 2fa.`);
                const userUpdated = await this.updateUser(defixId, {
                    twofa: false,
                    secret: null,
                });
                if (userUpdated.affected === 0)
                    throw new Error(`Failed to update user.`);
                return;
            }
            catch (err) {
                throw new Error(`Failed to deactivate 2fa, ${err}`);
            }
        };
        this.checkTwoFA = async (code2fa, secret) => {
            try {
                const auth = otplib_1.authenticator.check(code2fa, secret);
                return auth;
            }
            catch (err) {
                throw new Error(`Failed to validate 2fa, ${err}`);
            }
        };
        this.statusTwoFA = async (defixId) => {
            try {
                const user = await this.getUserByDefixId(defixId);
                if (!user)
                    throw new Error(`User not exists.`);
                return user.twofa;
            }
            catch (err) {
                throw new Error(`Failed to generate 2fa, ${err}`);
            }
        };
    }
}
exports.TwoFAService = TwoFAService;

'''
'''--- dist/modules/users/services/user.service.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserService = void 0;
const user_entity_1 = require("../entities/user.entity");
class UserService {
    constructor() {
        this.createUser = async (defixId, importId, language) => {
            try {
                const user = new user_entity_1.UserEntity();
                user.defixId = defixId;
                user.importId = importId;
                user.language = language;
                // email ? (user.email = email) : undefined;
                const userSaved = await user.save();
                return userSaved;
            }
            catch (err) {
                throw new Error(`Failed to create user: ${err}`);
            }
        };
        this.getUserByImportId = async (importId) => {
            return await user_entity_1.UserEntity.findOneBy({ importId });
        };
        this.getUserByDefixId = async (defixId) => {
            return await user_entity_1.UserEntity.findOneBy({ defixId });
        };
        this.getUserByEmail = async (email) => {
            return await user_entity_1.UserEntity.findOneBy({ email });
        };
        this.getUsers = async () => {
            return await user_entity_1.UserEntity.find({ select: ["defixId", "id"] });
        };
        this.getUserDataByDefixId = async (defixId) => {
            const userData = await user_entity_1.UserEntity.createQueryBuilder("user")
                .select([
                "user.defixId",
                "user.email",
                "user.flagNews",
                "user.flagDeposit",
                "user.flagWithdraw",
                "user.flagSign",
                "user.flagEvolution",
                "user.name",
                "user.lastname",
                "user.avatar",
                "user.legalDocument",
                "user.typeDocument",
                "user.closeSessions",
            ])
                .where("user.defixId = :defixId", { defixId: defixId })
                .getOne();
            return userData;
        };
        this.updateUser = async (defixId, body) => {
            const result = await user_entity_1.UserEntity.update({ defixId: defixId }, body);
            if (result.affected === 0)
                throw new Error(`Failed to updated user.`);
            return result;
        };
    }
}
exports.UserService = UserService;

'''
'''--- dist/modules/wallets/controllers/wallet.controller.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WalletController = void 0;
const wallet_service_1 = require("../services/wallet.service");
const crypto_shared_1 = require("../../../shared/crypto/crypto.shared");
const utils_shared_1 = require("../../../shared/utils/utils.shared");
const email_shared_1 = require("../../../shared/email/email.shared");
class WalletController {
    constructor() {
        this.createWalletDefix = async (req, res) => {
            try {
                const { defixId, seedPhrase, email, language } = req.body;
                let lang = language;
                if (!defixId || !seedPhrase)
                    return res.status(400).send({ message: "Invalid data." });
                const mnemonic = crypto_shared_1.CryptoShared.decrypt(seedPhrase);
                if (!mnemonic)
                    return res.status(400).send({ message: "Seed Phrase invalid." });
                if (lang !== "en" && lang !== "es") {
                    lang = "en";
                }
                const defixID = defixId.toLowerCase();
                const wallet = await this.walletService.createWalletDefix(defixID, mnemonic, lang);
                if (!wallet)
                    return res.status(400).send({ message: "Internal server error." });
                if (await utils_shared_1.UtilsShared.validateEmail(email)) {
                    this.mailService.sendMailPhrase(mnemonic, defixID, email, lang);
                }
                return res.send(wallet);
            }
            catch (error) {
                return res.status(500).send({ message: error.message });
            }
        };
        this.importWalletDefix = async (req, res) => {
            try {
                const { seedPhrase, language } = req.body;
                let lang = language;
                if (lang !== "en" && lang !== "es") {
                    lang = "en";
                }
                if (!seedPhrase)
                    return res.status(400).send({ message: "Invalid data." });
                const mnemonic = crypto_shared_1.CryptoShared.decrypt(seedPhrase);
                if (!mnemonic)
                    return res.status(400).send({ message: "Seed Phrase invalid." });
                const wallet = await this.walletService.importWalletDefix(mnemonic, lang);
                return res.send(wallet);
            }
            catch (error) {
                return res.status(500).send({ message: error.message });
            }
        };
        this.importFromPrivateKey = async (req, res) => {
            try {
                const { pkEncrypt } = req.body;
                if (!pkEncrypt)
                    return res.status(400).send({ message: "Invalid data." });
                const privateKey = crypto_shared_1.CryptoShared.decrypt(pkEncrypt);
                if (!privateKey)
                    return res.status(400).send({ message: "Invalid data." });
                const wallet = await this.walletService.importFromPrivateKey(privateKey);
                return res.send(wallet);
            }
            catch (error) {
                return res.status(500).send({ message: error.message });
            }
        };
        this.validateAddress = async (req, res) => {
            try {
                const { address, blockchain } = req.body;
                if (!address || !blockchain)
                    return res.status(400).send({ message: "Invalid data." });
                res.send(await this.walletService.validateAddress(address, blockchain));
            }
            catch (error) {
                return res.status(500).send({ message: error.message });
            }
        };
        this.importFromJson = async (req, res) => {
            try {
                const { data } = req.body;
                if (!data)
                    return res.status(400).send({ message: "Invalid data." });
                const { ciphertext, typeLog, dateTime } = JSON.parse(data);
                if (!ciphertext || !typeLog || !dateTime)
                    return res.status(400).send({ message: "Invalid variables." });
                const dataImport = {
                    ciphertext,
                    typeLog,
                    dateTime,
                };
                const wallet = await this.walletService.importFromJson(dataImport);
                return res.send(wallet);
            }
            catch (error) {
                return res.status(500).send({ message: error.message });
            }
        };
        this.exportWalletJson = async (req, res) => {
            try {
                const { ciphertext, typeLog } = req.body;
                const ciphertextMain = crypto_shared_1.CryptoShared.decrypt(ciphertext);
                if (!ciphertextMain)
                    return res.status(400).send({ message: "Invalid data." });
                if (!ciphertextMain && (typeLog !== "MNEMONIC" || typeLog !== "PRIVATE_KEY"))
                    return res.status(400).send({ message: "Invalid data." });
                res.send(JSON.stringify(await this.walletService.exportWalletJson(ciphertextMain, typeLog)));
            }
            catch (error) {
                return res.status(500).send({ message: error.message });
            }
        };
        this.walletService = new wallet_service_1.WalletService();
        this.mailService = new email_shared_1.MailShared();
    }
}
exports.WalletController = WalletController;

'''
'''--- dist/modules/wallets/init.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WalletsModule = void 0;
const wallet_controller_1 = require("./controllers/wallet.controller");
const routes_1 = require("./routes");
class WalletsModule {
    constructor(router) {
        this.routes = new routes_1.Routes(router, new wallet_controller_1.WalletController());
    }
}
exports.WalletsModule = WalletsModule;

'''
'''--- dist/modules/wallets/interfaces/credential.interface.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

'''
'''--- dist/modules/wallets/interfaces/wallet.interface.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

'''
'''--- dist/modules/wallets/routes.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Routes = void 0;
const shared_middleware_1 = require("../../shared/middlewares/shared.middleware");
class Routes {
    constructor(router, controller) {
        this.controller = controller;
        this.middleware = new shared_middleware_1.SharedMiddleware();
        this.configureRoutes(router);
    }
    configureRoutes(router) {
        /**
         * Post track
         * @swagger
         * /create-wallet/:
         *    post:
         *      tags:
         *        - Wallet
         *      summary: Crear wallet Defix3
         *      description: Te registra y crea una wallet Defix3 con todos los address de las blockchains admitidas.
         *      requestBody:
         *          content:
         *            application/json:
         *              schema:
         *                type: "object"
         *                required: [defixId, seedPhrase]
         *                properties: {
         *                  defixId: {
         *                    type: "string"
         *                  },
         *                  seedPhrase: {
         *                    type: "string"
         *                  },
         *                  email: {
         *                    type: "string"
         *                  },
         *                  language: {
         *                    type: "string"
         *                  },
         *                }
         *      responses:
         *        '200':
         *          description: Responde un Json con todas las credenciales y address de la wallet.
         *        '204':
         *          description: Bad Request.
         *        '400':
         *          description: Bad Request.
         *        '500':
         *          description: Bad Request.
         */
        router.post("/create-wallet/", this.middleware.defixIdAvailable, this.controller.createWalletDefix);
        /**
         * Post track
         * @swagger
         * /import-wallet/:
         *    post:
         *      tags:
         *        - Wallet
         *      summary: Iniciar Sesion con wallet Defix3
         *      description: Ingresa el seedPhrase y te devuelve el username defix3 y las credenciales de la wallet.
         *      requestBody:
         *          content:
         *            application/json:
         *              schema:
         *                type: "object"
         *                required: [seedPhrase]
         *                properties: {
         *                  seedPhrase: {
         *                    type: "string"
         *                  }
         *                }
         *      responses:
         *        '200':
         *          description: Al igual que create, responde un Json con todas las credenciales y address de la wallet.
         *        '204':
         *          description: Bad Request.
         *        '400':
         *          description: Bad Request.
         *        '500':
         *          description: Internal server error.
         */
        router.post("/import-wallet/", this.controller.importWalletDefix);
        /**
         * Post track
         * @swagger
         * /import-from-pk/:
         *    post:
         *      tags:
         *        - Wallet
         *      summary: Inicicar sesion con private key
         *      description: Si colocas una private key te devuelve la credencial de la blockchain
         *      requestBody:
         *          content:
         *            application/json:
         *              schema:
         *                type: "object"
         *                required: ["pkEncrypt"]
         *                properties: {
         *                  pkEncrypt: {
         *                    type: "string"
         *                  }
         *                }
         *      responses:
         *        '200':
         *          description: Te response la credencial de la blockchain
         *        '400':
         *          description: Bad Request.
         *        '500':
         *          description: Internal server error.
         */
        router.post("/import-from-pk/", this.controller.importFromPrivateKey);
        /**
         * Post track
         * @swagger
         * /validate-address/:
         *    post:
         *      tags:
         *        - Wallet
         *      summary: Validar si un address es valido.
         *      description: Valida si el address existe en la blockchain segun el coin, "BTC", "ETH", "NEAR" ...
         *      requestBody:
         *          content:
         *            application/json:
         *              schema:
         *                type: "object"
         *                required: [address, blockchain]
         *                properties: {
         *                  address: {
         *                    type: "string"
         *                  },
         *                  blockchain: {
         *                    type: "string"
         *                  }
         *                }
         *      responses:
         *        '200':
         *          description: Responde un boolean.
         *        '400':
         *          description: Bad Request.
         *        '500':
         *          description: Internal server error.
         */
        router.post("/validate-address/", this.controller.validateAddress);
        /**
         * Post track
         * @swagger
         * /import-from-json/:
         *    post:
         *      tags:
         *        - Wallet
         *      summary: Inicicar sesion con json
         *      description: Manda los parametros del json y se logueara ya sea con seed phrase o private key
         *      requestBody:
         *          content:
         *            application/json:
         *              schema:
         *                type: "object"
         *                required: [ciphertext, typeLog, dateTime]
         *                properties: {
         *                  ciphertext: {
         *                    type: "string"
         *                  },
         *                  typeLog: {
         *                    type: "string"
         *                  },
         *                  dateTime: {
         *                    type: "number"
         *                  }
         *                }
         *      responses:
         *        '200':
         *          description: Te response ya las credentials que tenia el json o la cuenta completa.
         *        '400':
         *          description: Bad Request.
         *        '500':
         *          description: Internal server error.
         */
        router.post("/import-from-json/", this.controller.importFromJson);
        /**
         * Post track
         * @swagger
         * /export-wallet-json/:
         *    post:
         *      tags:
         *        - Wallet
         *      summary: Exportar cuenta defix o crendenciales.
         *      description: Encripta los datos ya sea de la cuenta o crendenciales
         *      requestBody:
         *          content:
         *            application/json:
         *              schema:
         *                type: "object"
         *                required: [ciphertext, typeLog]
         *                properties: {
         *                  ciphertext: {
         *                    type: "string"
         *                  },
         *                  typeLog: {
         *                    type: "string"
         *                  }
         *                }
         *      responses:
         *        '200':
         *          description: Responde json con las encriptaciones.
         *        '400':
         *          description: Bad Request.
         *        '500':
         *          description: Internal server error.
         */
        router.post("/export-wallet-json/", this.controller.exportWalletJson);
    }
}
exports.Routes = Routes;

'''
'''--- dist/modules/wallets/services/wallet.service.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WalletService = void 0;
const utils_shared_1 = require("../../../shared/utils/utils.shared");
const user_service_1 = require("../../users/services/user.service");
const blockchain_1 = require("../../../blockchain");
const address_service_1 = require("../../address/services/address.service");
const crypto_shared_1 = require("../../../shared/crypto/crypto.shared");
class WalletService {
    constructor() {
        this.createWalletDefix = async (defixId, mnemonic, language = "en") => {
            try {
                const credentials = [];
                for (const service of Object.values(blockchain_1.blockchainService)) {
                    credentials.push(await service.fromMnemonic(mnemonic));
                }
                const wallet = {
                    defixId: defixId,
                    credentials: credentials,
                };
                await this.saveWalletDefix(mnemonic, wallet, language);
                return wallet;
            }
            catch (err) {
                console.log(err);
                throw new Error(`Failed to create wallet: ${err}`);
            }
        };
        this.importWalletDefix = async (mnemonic, language) => {
            try {
                const importId = await utils_shared_1.UtilsShared.getIdNear(mnemonic);
                const user = await this.userService.getUserByImportId(importId);
                if (!user)
                    throw new Error("Wallet does not exist in Defix3");
                const defixId = user.defixId;
                const credentials = [];
                for (const service of Object.values(blockchain_1.blockchainService)) {
                    credentials.push(await service.fromMnemonic(mnemonic));
                }
                const wallet = {
                    defixId: defixId,
                    credentials: credentials,
                };
                this.validateWalletsUser(user, wallet);
                await this.userService.updateUser(user.defixId, { language: language || user.language });
                return wallet;
            }
            catch (err) {
                throw new Error(`Failed to import wallet: ${err}`);
            }
        };
        this.importFromPrivateKey = async (privateKey) => {
            try {
                const credentials = [];
                for (const service of Object.values(blockchain_1.blockchainService)) {
                    const credential = await service.fromPrivateKey(privateKey);
                    if (credential) {
                        credentials.push(credential);
                    }
                }
                if (credentials.length === 0)
                    throw new Error(`Failed private key`);
                const wallet = {
                    defixId: credentials[0].address,
                    credentials: credentials,
                };
                return wallet;
            }
            catch (err) {
                throw new Error(`Failed to import wallet: ${err}`);
            }
        };
        this.importFromJson = async (dataImport) => {
            try {
                const credentials = [];
                let defixId;
                if (crypto_shared_1.CryptoShared.decryptAES(dataImport.typeLog) === "MNEMONIC") {
                    const mnemonic = crypto_shared_1.CryptoShared.decryptAES(dataImport.ciphertext);
                    const importId = await utils_shared_1.UtilsShared.getIdNear(mnemonic);
                    const user = await this.userService.getUserByImportId(importId);
                    if (!user)
                        throw new Error("Wallet does not exist in Defix3");
                    defixId = user.defixId;
                    for (const service of Object.values(blockchain_1.blockchainService)) {
                        credentials.push(await service.fromMnemonic(mnemonic));
                    }
                }
                else if (crypto_shared_1.CryptoShared.decryptAES(dataImport.typeLog) === "PRIVATE_KEY") {
                    for (const service of Object.values(blockchain_1.blockchainService)) {
                        const credential = await service.fromPrivateKey(crypto_shared_1.CryptoShared.decryptAES(dataImport.ciphertext));
                        if (credential) {
                            credentials.push(credential);
                        }
                    }
                    defixId = credentials[0].address;
                }
                else {
                    throw new Error(`Invalid mnemonic and private key`);
                }
                const wallet = {
                    defixId: defixId,
                    credentials: credentials,
                };
                return wallet;
            }
            catch (err) {
                throw new Error(`Failed to export wallet: ${err}`);
            }
        };
        this.exportWalletJson = async (ciphertext, typeLog) => {
            try {
                const data = {
                    ciphertext: crypto_shared_1.CryptoShared.encryptAES(ciphertext),
                    typeLog: crypto_shared_1.CryptoShared.encryptAES(typeLog),
                    dateTime: Date.now(),
                };
                return data;
            }
            catch (err) {
                throw new Error(`Failed to export wallet: ${err}`);
            }
        };
        this.validateAddress = async (address, coin) => {
            try {
                if (address.includes(".defix3")) {
                    const user = await this.userService.getUserByDefixId(address);
                    if (!user)
                        return false;
                    return true;
                }
                else {
                    return blockchain_1.blockchainService[coin.toLowerCase()].isAddress(address);
                }
                throw new Error(`Invalid coin`);
            }
            catch (err) {
                throw new Error(`Failed to validate address: ${err}`);
            }
        };
        /**
         * Utils for WalletService
         */
        this.saveWalletDefix = async (mnemonic, wallet, language = "en") => {
            try {
                const importId = await utils_shared_1.UtilsShared.getIdNear(mnemonic);
                const user = await this.userService.createUser(wallet.defixId, importId, language);
                if (!user)
                    throw new Error("Wallet does not exist in Defix3");
                for (let credential of wallet.credentials) {
                    this.addressService.createAddress(user, credential.name, credential.address);
                }
                return user;
            }
            catch (err) {
                throw new Error(`Failed to save wallet addresses: ${err}`);
            }
        };
        this.validateWalletsUser = async (user, wallet) => {
            try {
                const walletsUser = await this.addressService.getAddressesByDefixId(user.defixId);
                for (let credential of wallet.credentials) {
                    if (!walletsUser.find((element) => element.blockchain === credential.name)) {
                        this.addressService.createAddress(user, credential.name, credential.address);
                    }
                }
            }
            catch (err) {
                throw new Error(`Failed to validate wallet address: ${err}`);
            }
        };
        this.userService = new user_service_1.UserService();
        this.addressService = new address_service_1.AddressService();
    }
}
exports.WalletService = WalletService;

'''
'''--- dist/process/index.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.startProcess = void 0;
const child_process_1 = require("child_process");
const fs_1 = require("fs");
const cacheConfig_1 = require("../config/cacheConfig");
const PATH_ROUTER = `${__dirname}`;
const cleanFileName = (fileName) => {
    let file;
    if (fileName.includes(".ts")) {
        file = fileName.split(".ts").shift();
    }
    else {
        file = fileName.split(".js").shift();
    }
    return file;
};
const Process = (routeDemon, io) => {
    console.log("Starting demon...");
    const demon = (0, child_process_1.fork)(routeDemon);
    demon.on("message", (message) => {
        io.emit("getRanking", message);
        // nodeCache.set("getRanking", message);
        cacheConfig_1.CacheConfig.nodeCache.set("getRanking", message);
    });
    demon.on("exit", () => {
        console.log("Demon died. Restarting demon " + routeDemon);
        Process(routeDemon, io);
    });
};
const startProcess = (io) => {
    (0, fs_1.readdirSync)(PATH_ROUTER).filter((fileName) => {
        const cleanName = cleanFileName(fileName);
        if (cleanName !== "index") {
            Process(PATH_ROUTER + "/" + cleanName, io);
        }
    });
};
exports.startProcess = startProcess;

'''
'''--- dist/process/ranking.process.js ---
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const axios_1 = __importDefault(require("axios"));
const process = require("process");
const ProcessFn = async () => {
    try {
        const response = await axios_1.default.get("https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=weth%2Cnear%2Cwbnb%2Ctron%2Cwrapped-tron%2Cbinance-usd%2Cbitcoin%2Cethereum%2Ctether%2Cbinancecoin%2Cwrapped-bitcoin%2Cusd-coin%2Cdai&order=market_cap_desc&per_page=50&page=1&sparkline=false&price_change_percentage=1h%2C24h%2C7d");
        if (response.data) {
            if (response.data.length > 0) {
                // console.log(response.data[0]);
                process.send(response.data);
            }
        }
    }
    catch (error) {
        // console.log("err")
    }
};
const startProcess = () => {
    ProcessFn();
    setInterval(async () => {
        ProcessFn();
    }, 60000);
};
startProcess();

'''
'''--- dist/server.js ---
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
require("dotenv/config");
require("reflect-metadata");
const dataSource_1 = __importDefault(require("./config/dataSource"));
const http = __importStar(require("http"));
const https = __importStar(require("https"));
const postgres_1 = __importDefault(require("./config/postgres"));
const app_1 = __importDefault(require("./app"));
const socket_io_1 = __importDefault(require("socket.io"));
// import NodeCache from "node-cache";
const index_1 = require("./process/index");
const cacheConfig_1 = require("./config/cacheConfig");
// const nodeCache = new NodeCache();
const fs = require("fs");
const glob = __importStar(require("glob"));
const adminjs_1 = __importDefault(require("adminjs"));
const express_1 = __importDefault(require("@adminjs/express"));
const path_1 = __importDefault(require("path"));
const AdminJSTypeorm = __importStar(require("@adminjs/typeorm"));
class Server {
    constructor() {
        this.app = app_1.default;
        this.port = Number(process.env.PORT) || 3000;
        this.initTypeORM();
        this.connectDatabase();
        this.listen();
        this.initWebSockets();
    }
    initTypeORM() {
        dataSource_1.default.initialize()
            .then(async () => {
            console.log("TypeORM Ready");
            this.initAdminJs();
        })
            .catch((err) => {
            console.error(err);
        });
    }
    initAdminJs() {
        adminjs_1.default.registerAdapter({
            Resource: AdminJSTypeorm.Resource,
            Database: AdminJSTypeorm.Database,
        });
        const entityFiles = glob.sync(path_1.default.join(__dirname, "modules", "**", "*.entity.{ts,js}"));
        const entities = entityFiles.map((file) => {
            const entityModule = require(file);
            const entity = Object.values(entityModule)[0];
            return entity;
        });
        const adminOptions = {
            resources: entities,
            branding: {
                companyName: "Admin DeFix3",
                softwareBrothers: false,
                // logo: false, // OR false to hide the default one
            },
        };
        const admin = new adminjs_1.default(adminOptions);
        const DEFAULT_ADMIN = {
            email: process.env.EMAIL_ADMINJS,
            password: process.env.PASSWORD_ADMINJS,
        };
        const secret = process.env.SECRET_ADMINJS;
        const authenticate = async (email, password) => {
            console.log(email, password);
            if (email === DEFAULT_ADMIN.email && password === DEFAULT_ADMIN.password) {
                return { email: DEFAULT_ADMIN.email };
            }
        };
        const adminRouter = express_1.default.buildAuthenticatedRouter(admin, {
            authenticate,
            cookiePassword: "very_secret_secret",
        }, null, {
            resave: true,
            saveUninitialized: true,
            secret,
        });
        this.app.use(admin.options.rootPath, adminRouter);
    }
    connectDatabase() {
        (0, postgres_1.default)().then(() => console.log("connection DB Ready"));
    }
    initWebSockets() {
        this.io = new socket_io_1.default.Server(this.server, {
            cors: {
                origin: "*",
            },
        });
        this.io.on("connection", (socket) => {
            console.log("User APP " + socket.id + " connected");
            if (cacheConfig_1.CacheConfig.nodeCache.has("getRanking")) {
                const data = cacheConfig_1.CacheConfig.nodeCache.get("getRanking");
                // const data = nodeCache.get("getRanking");
                this.io.emit("getRanking", data);
            }
        });
        (0, index_1.startProcess)(this.io);
    }
    listen() {
        if (process.env.NODE_ENV === "production") {
            const credentials = {
                key: fs.readFileSync("/etc/letsencrypt/live/defix3.com/privkey.pem", "utf8"),
                cert: fs.readFileSync("/etc/letsencrypt/live/defix3.com/cert.pem", "utf8"),
                ca: fs.readFileSync("/etc/letsencrypt/live/defix3.com/chain.pem", "utf8"),
            };
            this.server = https.createServer(credentials, this.app);
        }
        else {
            this.server = http.createServer(this.app);
        }
        this.server.listen(this.port, () => {
            console.log(`Server listening on port ${this.port}`);
        });
    }
}
new Server();

'''
'''--- dist/shared/crypto/crypto.shared.js ---
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CryptoShared = void 0;
const crypto_1 = __importDefault(require("crypto"));
const crypto_js_1 = __importDefault(require("crypto-js"));
class CryptoShared {
    static decrypt(text) {
        try {
            // return text;
            const cipheredBytes = Buffer.from(text, "base64");
            const decoded = crypto_1.default
                .privateDecrypt({
                key: process.env.PRIVATE_KEY,
                passphrase: process.env.PASSWORD_CRYPTO,
                padding: crypto_1.default.constants.RSA_PKCS1_OAEP_PADDING,
            }, cipheredBytes)
                .toString();
            return decoded;
        }
        catch (error) {
            console.log(error);
            return false;
        }
    }
    static encryptRSA(text) {
        try {
            const encrypted = crypto_1.default.publicEncrypt({
                key: process.env.PUBLIC_KEY,
                padding: crypto_1.default.constants.RSA_PKCS1_OAEP_PADDING,
            }, Buffer.from(text));
            return encrypted.toString("base64");
        }
        catch (error) {
            console.log(error);
            return false;
        }
    }
    static encryptAES(text) {
        const ciphertext = crypto_js_1.default.AES.encrypt(text, process.env.PRIVATE_KEY).toString();
        return ciphertext;
    }
    static decryptAES(text) {
        var bytes = crypto_js_1.default.AES.decrypt(text, process.env.PRIVATE_KEY);
        var originalText = bytes.toString(crypto_js_1.default.enc.Utf8);
        return originalText;
    }
}
exports.CryptoShared = CryptoShared;

'''
'''--- dist/shared/middlewares/shared.middleware.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SharedMiddleware = void 0;
const user_entity_1 = require("../../modules/users/entities/user.entity");
class SharedMiddleware {
    async defixIdAvailable(req, res, next) {
        try {
            const { defixId } = req.body;
            if (!defixId || !defixId.includes(".defix3") || defixId.includes(" "))
                return res.status(400).send({ message: "Error DefixId." });
            const user = await user_entity_1.UserEntity.findOneBy({ defixId: defixId });
            if (user) {
                return res.status(400).send({ message: "User already exists." });
            }
            next();
        }
        catch (err) {
            res.status(500).send({ message: "Internal server error." });
        }
    }
    async defixIdValid(req, res, next) {
        try {
            const { defixId } = req.body;
            console.log(defixId);
            if (!defixId || !defixId.includes(".defix3") || defixId.includes(" "))
                return res.status(400).send({ message: "Error DefixId." });
            const user = await user_entity_1.UserEntity.findOneBy({ defixId: defixId });
            if (!user) {
                return res.status(400).send({ message: "User not found." });
            }
            next();
        }
        catch (err) {
            res.status(500).send({ message: "Internal server error in Valid." });
        }
    }
}
exports.SharedMiddleware = SharedMiddleware;

'''
'''--- dist/shared/middlewares/twoFA.middleware.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TwoFAMiddleware = void 0;
const twoFA_service_1 = require("../../modules/users/services/twoFA.service");
class TwoFAMiddleware {
    constructor() {
        this.validateTwoFA = async (req, res, next) => {
            try {
                const { defixId, code2fa } = req.body;
                if (defixId && !defixId.includes(".defix3")) {
                    return next();
                }
                const user = await this.twoFAService.getUserByDefixId(defixId);
                if (!user)
                    return res.status(404).send({ message: `User not exists.` });
                if (!user.twofa)
                    return next();
                if (!code2fa)
                    return res.status(404).send({ message: `Invalid data, Error: code2fa.` });
                const auth = await this.twoFAService.checkTwoFA(code2fa, user.secret);
                if (!auth)
                    return res.status(401).send({ message: "code 2fa invalid" });
                return next();
            }
            catch (error) {
                return res.status(500).send({ message: error.message });
            }
        };
        this.twoFAService = new twoFA_service_1.TwoFAService();
    }
}
exports.TwoFAMiddleware = TwoFAMiddleware;

'''
'''--- dist/shared/utils/utils.shared.js ---
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.UtilsShared = void 0;
const axios_1 = __importDefault(require("axios"));
const postgres_1 = __importDefault(require("../../config/postgres"));
const address_entity_1 = require("../../modules/address/entities/address.entity");
const nearSEED = require("near-seed-phrase");
const NETWORK = process.env.NETWORK || "testnet";
class UtilsShared {
}
exports.UtilsShared = UtilsShared;
_a = UtilsShared;
UtilsShared.getTokenContract = async (token, blockchain) => {
    try {
        const conexion = await (0, postgres_1.default)();
        const response = await conexion.query("SELECT *\
        FROM backend_token a\
        inner join backend_cryptocurrency b on b.id = a.cryptocurrency_id\
        where a.coin = $1 and b.coin = $2", [token, blockchain]);
        if (response.rows.length === 0)
            return false;
        return response.rows[0];
    }
    catch (error) {
        throw new Error(`Failed to get token contract.`);
    }
};
UtilsShared.getComision = async (coin) => {
    try {
        const url = process.env.URL_DJANGO + "api/v1/get-comision/" + coin;
        const result = axios_1.default
            .get(url)
            .then(function (response) {
            return response.data;
        })
            .catch(function (err) {
            throw new Error(`Failed to get comision api. ${err.message}}`);
        });
        return result;
    }
    catch (error) {
        throw new Error(`Failed to get comision fn. ${error.message}`);
    }
};
UtilsShared.getAddressUser = async (defixId, blockchain) => {
    try {
        const address = await address_entity_1.AddressEntity.findOneBy({
            user: { defixId: defixId },
            blockchain: blockchain,
        });
        if (!address)
            return false;
        return address.address;
    }
    catch (error) {
        return false;
    }
};
UtilsShared.getCryptos = async () => {
    try {
        const conexion = await (0, postgres_1.default)();
        const cryptocurrencys = await conexion.query("select * from backend_cryptocurrency");
        const cryptos = [];
        for (let cryptocurrency of cryptocurrencys.rows) {
            const tokens = await conexion.query("select * from backend_token where cryptocurrency_id = $1", [cryptocurrency.id]);
            cryptocurrency.tokens = tokens.rows;
            cryptos.push(cryptocurrency);
        }
        return cryptos;
    }
    catch (error) {
        console.log(error);
        return [];
    }
};
UtilsShared.validateEmail = (email) => {
    const regex = /\S+@\S+\.\S+/;
    return regex.test(email);
};
UtilsShared.getIdNear = async (mnemonic) => {
    const walletSeed = await nearSEED.parseSeedPhrase(mnemonic);
    const split = String(walletSeed.publicKey).split(":");
    const id = String(split[1]);
    return id;
};
UtilsShared.getAddressVault = (coin) => {
    switch (coin) {
        case "BTC":
            return process.env.VAULT_BTC;
        case "NEAR":
            return process.env.VAULT_NEAR;
        case "ETH":
            return process.env.VAULT_ETH;
        case "TRX":
            return process.env.VAULT_TRON;
        case "BNB":
            return process.env.VAULT_BNB;
        default:
            throw new Error(`Unconfigured environment '${coin}'`);
    }
};
UtilsShared.getLinkTransaction = (blockchain, transactionHash) => {
    switch (blockchain) {
        case "BTC":
            if (process.env.NETWORK === "mainnet") {
                return `https://live.blockcypher.com/btc/tx/${transactionHash}`;
            }
            else {
                return `https://live.blockcypher.com/btc-testnet/tx/${transactionHash}`;
            }
        case "NEAR":
            if (process.env.NETWORK === "mainnet") {
                return `https://explorer.near.org/transactions/${transactionHash}`;
            }
            else {
                return `https://explorer.testnet.near.org/transactions/${transactionHash}`;
            }
        case "ETH":
            if (process.env.NETWORK === "mainnet") {
                return `https://etherscan.io/tx/${transactionHash}`;
            }
            else {
                return `https://${process.env.ETHERSCAN}.etherscan.io/tx/${transactionHash}`;
            }
        case "TRX":
            if (process.env.NETWORK === "mainnet") {
                return `https://tronscan.org/#/transaction/${transactionHash}`;
            }
            else {
                return `https://shasta.tronscan.org/#/transaction/${transactionHash}`;
            }
        case "BNB":
            if (process.env.NETWORK === "mainnet") {
                return `https://bscscan.com/tx/${transactionHash}`;
            }
            else {
                return `https://testnet.bscscan.com/tx/${transactionHash}`;
            }
        default:
            throw new Error(`Error blockchain '${blockchain}'`);
    }
};

'''
'''--- package-lock.json ---
{
  "name": "defix3_ts_back",
  "version": "1.0.0",
  "lockfileVersion": 2,
  "requires": true,
  "packages": {
    "": {
      "name": "defix3_ts_back",
      "version": "1.0.0",
      "license": "ISC",
      "dependencies": {
        "@1inch/limit-order-protocol-utils": "^3.0.1",
        "@adminjs/express": "^4.0.0",
        "@adminjs/typeorm": "^3.0.0",
        "@paraswap/sdk": "^6.2.0",
        "@ref-finance/ref-sdk": "^1.2.0",
        "adminjs": "^5.0.0",
        "axios": "^1.3.2",
        "bip32": "^3.1.0",
        "bip39": "^3.0.4",
        "bitcoinjs-lib": "^6.1.0",
        "bn.js": "^5.2.1",
        "child_process": "^1.0.2",
        "cors": "^2.8.5",
        "cross-fetch": "^3.1.6",
        "crypto": "^1.0.1",
        "crypto-js": "^4.1.1",
        "dotenv": "^16.0.3",
        "ecpair": "^2.1.0",
        "ethers": "^5.7.2",
        "express": "^4.18.1",
        "express-formidable": "^1.2.0",
        "express-session": "^1.17.3",
        "glob": "^10.3.1",
        "morgan": "^1.10.0",
        "multer": "^1.4.5-lts.1",
        "near-api-js": "^1.1.0",
        "near-seed-phrase": "^0.2.0",
        "node-cache": "^5.1.2",
        "node-fetch": "^3.3.1",
        "nodemailer": "^6.9.1",
        "nodemailer-express-handlebars": "^6.0.0",
        "otplib": "^12.0.1",
        "pg": "^8.9.0",
        "qrcode": "^1.5.1",
        "reflect-metadata": "^0.1.13",
        "serialize-javascript": "^6.0.1",
        "socket.io": "^4.6.0",
        "swagger-jsdoc": "^6.2.8",
        "swagger-ui-express": "^4.6.0",
        "tiny-secp256k1": "^2.2.1",
        "tronweb": "^5.1.0",
        "ts-node": "^10.9.1",
        "tslib": "^2.6.0",
        "typeorm": "^0.3.12",
        "uuid": "^9.0.0",
        "wallet-address-validator": "^0.2.4",
        "web3": "^1.8.2"
      },
      "devDependencies": {
        "@types/axios": "^0.14.0",
        "@types/bip32": "^2.0.0",
        "@types/bip39": "^3.0.0",
        "@types/bitcoinjs-lib": "^5.0.0",
        "@types/bn.js": "^5.1.1",
        "@types/cors": "^2.8.12",
        "@types/crypto-js": "^4.1.1",
        "@types/dotenv": "^8.2.0",
        "@types/express": "^4.17.13",
        "@types/morgan": "^1.9.4",
        "@types/multer": "^1.4.7",
        "@types/node": "^18.13.0",
        "@types/node-forge": "^1.3.1",
        "@types/nodemailer": "^6.4.7",
        "@types/nodemailer-express-handlebars": "^4.0.2",
        "@types/otplib": "^10.0.0",
        "@types/pem": "^1.9.6",
        "@types/pem-jwk": "^2.0.0",
        "@types/pg": "^8.6.6",
        "@types/qrcode": "^1.5.0",
        "@types/serialize-javascript": "^5.0.2",
        "@types/socket.io": "^3.0.2",
        "@types/swagger-jsdoc": "^6.0.1",
        "@types/swagger-ui-express": "^4.1.3",
        "@types/uuid": "^9.0.1",
        "@types/web3": "^1.2.2",
        "nodemon": "^2.0.20",
        "typescript": "^4.9.5"
      }
    },
    "node_modules/@1inch/limit-order-protocol-utils": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/@1inch/limit-order-protocol-utils/-/limit-order-protocol-utils-3.0.1.tgz",
      "integrity": "sha512-HpZ1ZRP0PKNOuma1zvffdEfXl64CH/9oajug9Q26HPgyf0Ot+epiArI6rzqKRFvALOHp5Kl6kixiA2qFmGDQzA==",
      "dependencies": {
        "@ethersproject/abi": "^5.1.1",
        "@ethersproject/bignumber": "^5.1.1",
        "@metamask/eth-sig-util": "^4.0.1",
        "prompts": "^2.4.1",
        "web3": "^1.8.1",
        "yargs": "^17.0.1"
      },
      "bin": {
        "limit-order-rfq-utils": "utils/limit-order-rfq.utils.js"
      },
      "peerDependencies": {
        "assert": "^2.0.0",
        "stream": "^0.0.2"
      }
    },
    "node_modules/@1inch/limit-order-protocol-utils/node_modules/cliui": {
      "version": "8.0.1",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-8.0.1.tgz",
      "integrity": "sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==",
      "dependencies": {
        "string-width": "^4.2.0",
        "strip-ansi": "^6.0.1",
        "wrap-ansi": "^7.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@1inch/limit-order-protocol-utils/node_modules/wrap-ansi": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/@1inch/limit-order-protocol-utils/node_modules/y18n": {
      "version": "5.0.8",
      "resolved": "https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz",
      "integrity": "sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/@1inch/limit-order-protocol-utils/node_modules/yargs": {
      "version": "17.7.1",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-17.7.1.tgz",
      "integrity": "sha512-cwiTb08Xuv5fqF4AovYacTFNxk62th7LKJ6BL9IGUpTJrWoU7/7WdQGTP2SjKf1dUNBGzDd28p/Yfs/GI6JrLw==",
      "dependencies": {
        "cliui": "^8.0.1",
        "escalade": "^3.1.1",
        "get-caller-file": "^2.0.5",
        "require-directory": "^2.1.1",
        "string-width": "^4.2.3",
        "y18n": "^5.0.5",
        "yargs-parser": "^21.1.1"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@1inch/limit-order-protocol-utils/node_modules/yargs-parser": {
      "version": "21.1.1",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz",
      "integrity": "sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@adminjs/design-system": {
      "version": "2.2.4",
      "resolved": "https://registry.npmjs.org/@adminjs/design-system/-/design-system-2.2.4.tgz",
      "integrity": "sha512-C0I0lWJvithwVGPri2PY8Msq/hoaKFvsfV5173d6O2q2FIP20LxB4ZgdFIJ4QbFOht6kLI3L/4TRMC4xAwkFAA==",
      "dependencies": {
        "@carbon/icons-react": "^10.49.0",
        "date-fns": "2.15.0",
        "jw-paginate": "^1.0.4",
        "lodash": "^4.17.20",
        "polished": "^3.6.5",
        "quill": "^1.3.7",
        "react-currency-input-field": "^3.6.4",
        "react-datepicker": "^3.1.3",
        "styled-system": "^5.1.5"
      },
      "peerDependencies": {
        "react": "^16.13.1",
        "react-dom": "^16.13.1",
        "styled-components": "^5.2.0"
      }
    },
    "node_modules/@adminjs/design-system/node_modules/date-fns": {
      "version": "2.15.0",
      "resolved": "https://registry.npmjs.org/date-fns/-/date-fns-2.15.0.tgz",
      "integrity": "sha512-ZCPzAMJZn3rNUvvQIMlXhDr4A+Ar07eLeGsGREoWU19a3Pqf5oYa+ccd+B3F6XVtQY6HANMFdOQ8A+ipFnvJdQ==",
      "engines": {
        "node": ">=0.11"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/date-fns"
      }
    },
    "node_modules/@adminjs/express": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/@adminjs/express/-/express-4.1.3.tgz",
      "integrity": "sha512-zmA1dhwl31ub5lMT037aEc5Km8SlUxaeb3/xlO8qc44NdScliEiHxaKOm+EItSmsemV/OMOOHepTWqYcXtIgiQ==",
      "dependencies": {
        "path-to-regexp": "^6.2.0"
      },
      "peerDependencies": {
        "adminjs": ">=5.0.0",
        "express": ">=4.16.4",
        "express-formidable": "^1.2.0",
        "express-session": ">=1.15.6",
        "tslib": "^2.3.1"
      }
    },
    "node_modules/@adminjs/express/node_modules/path-to-regexp": {
      "version": "6.2.1",
      "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-6.2.1.tgz",
      "integrity": "sha512-JLyh7xT1kizaEvcaXOQwOc2/Yhw6KZOvPf1S8401UyLk86CU79LN3vl7ztXGm/pZ+YjoyAJ4rxmHwbkBXJX+yw=="
    },
    "node_modules/@adminjs/typeorm": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/@adminjs/typeorm/-/typeorm-3.0.2.tgz",
      "integrity": "sha512-8McLKjkHlt3e6C856pwfdI1hSMJAjO5QY4ds5WKJJgz1NYblCWNWAEK5Df7DvfWdMZlPE0pODvbjF07BZVF5ZQ==",
      "peerDependencies": {
        "adminjs": "^5.0.0",
        "typeorm": "~0.3.0"
      }
    },
    "node_modules/@ampproject/remapping": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.2.1.tgz",
      "integrity": "sha512-lFMjJTrFL3j7L9yBxwYfCq2k6qqwHyzuUl/XBnif78PWTJYyL/dfowQHWE3sp6U6ZzqWiiIZnpTMO96zhkjwtg==",
      "dependencies": {
        "@jridgewell/gen-mapping": "^0.3.0",
        "@jridgewell/trace-mapping": "^0.3.9"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@apidevtools/json-schema-ref-parser": {
      "version": "9.1.2",
      "resolved": "https://registry.npmjs.org/@apidevtools/json-schema-ref-parser/-/json-schema-ref-parser-9.1.2.tgz",
      "integrity": "sha512-r1w81DpR+KyRWd3f+rk6TNqMgedmAxZP5v5KWlXQWlgMUUtyEJch0DKEci1SorPMiSeM8XPl7MZ3miJ60JIpQg==",
      "dependencies": {
        "@jsdevtools/ono": "^7.1.3",
        "@types/json-schema": "^7.0.6",
        "call-me-maybe": "^1.0.1",
        "js-yaml": "^4.1.0"
      }
    },
    "node_modules/@apidevtools/openapi-schemas": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/@apidevtools/openapi-schemas/-/openapi-schemas-2.1.0.tgz",
      "integrity": "sha512-Zc1AlqrJlX3SlpupFGpiLi2EbteyP7fXmUOGup6/DnkRgjP9bgMM/ag+n91rsv0U1Gpz0H3VILA/o3bW7Ua6BQ==",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/@apidevtools/swagger-methods": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/@apidevtools/swagger-methods/-/swagger-methods-3.0.2.tgz",
      "integrity": "sha512-QAkD5kK2b1WfjDS/UQn/qQkbwF31uqRjPTrsCs5ZG9BQGAkjwvqGFjjPqAuzac/IYzpPtRzjCP1WrTuAIjMrXg=="
    },
    "node_modules/@apidevtools/swagger-parser": {
      "version": "10.0.3",
      "resolved": "https://registry.npmjs.org/@apidevtools/swagger-parser/-/swagger-parser-10.0.3.tgz",
      "integrity": "sha512-sNiLY51vZOmSPFZA5TF35KZ2HbgYklQnTSDnkghamzLb3EkNtcQnrBQEj5AOCxHpTtXpqMCRM1CrmV2rG6nw4g==",
      "dependencies": {
        "@apidevtools/json-schema-ref-parser": "^9.0.6",
        "@apidevtools/openapi-schemas": "^2.0.4",
        "@apidevtools/swagger-methods": "^3.0.2",
        "@jsdevtools/ono": "^7.1.3",
        "call-me-maybe": "^1.0.1",
        "z-schema": "^5.0.1"
      },
      "peerDependencies": {
        "openapi-types": ">=7"
      }
    },
    "node_modules/@babel/code-frame": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.22.5.tgz",
      "integrity": "sha512-Xmwn266vad+6DAqEB2A6V/CcZVp62BbwVmcOJc2RPuwih1kw02TjQvWVWlcKGbBPd+8/0V5DEkOcizRGYsspYQ==",
      "dependencies": {
        "@babel/highlight": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/compat-data": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.22.5.tgz",
      "integrity": "sha512-4Jc/YuIaYqKnDDz892kPIledykKg12Aw1PYX5i/TY28anJtacvM1Rrr8wbieB9GfEJwlzqT0hUEao0CxEebiDA==",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/core": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/core/-/core-7.22.5.tgz",
      "integrity": "sha512-SBuTAjg91A3eKOvD+bPEz3LlhHZRNu1nFOVts9lzDJTXshHTjII0BAtDS3Y2DAkdZdDKWVZGVwkDfc4Clxn1dg==",
      "dependencies": {
        "@ampproject/remapping": "^2.2.0",
        "@babel/code-frame": "^7.22.5",
        "@babel/generator": "^7.22.5",
        "@babel/helper-compilation-targets": "^7.22.5",
        "@babel/helper-module-transforms": "^7.22.5",
        "@babel/helpers": "^7.22.5",
        "@babel/parser": "^7.22.5",
        "@babel/template": "^7.22.5",
        "@babel/traverse": "^7.22.5",
        "@babel/types": "^7.22.5",
        "convert-source-map": "^1.7.0",
        "debug": "^4.1.0",
        "gensync": "^1.0.0-beta.2",
        "json5": "^2.2.2",
        "semver": "^6.3.0"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/babel"
      }
    },
    "node_modules/@babel/core/node_modules/debug": {
      "version": "4.3.4",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.4.tgz",
      "integrity": "sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==",
      "dependencies": {
        "ms": "2.1.2"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/@babel/core/node_modules/ms": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
      "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
    },
    "node_modules/@babel/core/node_modules/semver": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
      "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/@babel/generator": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.22.5.tgz",
      "integrity": "sha512-+lcUbnTRhd0jOewtFSedLyiPsD5tswKkbgcezOqqWFUVNEwoUTlpPOBmvhG7OXWLR4jMdv0czPGH5XbflnD1EA==",
      "dependencies": {
        "@babel/types": "^7.22.5",
        "@jridgewell/gen-mapping": "^0.3.2",
        "@jridgewell/trace-mapping": "^0.3.17",
        "jsesc": "^2.5.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/generator/node_modules/@jridgewell/trace-mapping": {
      "version": "0.3.18",
      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.18.tgz",
      "integrity": "sha512-w+niJYzMHdd7USdiH2U6869nqhD2nbfZXND5Yp93qIbEmnDNk7PD48o+YchRVpzMU7M6jVCbenTR7PA1FLQ9pA==",
      "dependencies": {
        "@jridgewell/resolve-uri": "3.1.0",
        "@jridgewell/sourcemap-codec": "1.4.14"
      }
    },
    "node_modules/@babel/helper-annotate-as-pure": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.22.5.tgz",
      "integrity": "sha512-LvBTxu8bQSQkcyKOU+a1btnNFQ1dMAd0R6PyW3arXes06F6QLWLIrd681bxRPIXlrMGR3XYnW9JyML7dP3qgxg==",
      "dependencies": {
        "@babel/types": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-builder-binary-assignment-operator-visitor": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-builder-binary-assignment-operator-visitor/-/helper-builder-binary-assignment-operator-visitor-7.22.5.tgz",
      "integrity": "sha512-m1EP3lVOPptR+2DwD125gziZNcmoNSHGmJROKoy87loWUQyJaVXDgpmruWqDARZSmtYQ+Dl25okU8+qhVzuykw==",
      "dependencies": {
        "@babel/types": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-compilation-targets": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.22.5.tgz",
      "integrity": "sha512-Ji+ywpHeuqxB8WDxraCiqR0xfhYjiDE/e6k7FuIaANnoOFxAHskHChz4vA1mJC9Lbm01s1PVAGhQY4FUKSkGZw==",
      "dependencies": {
        "@babel/compat-data": "^7.22.5",
        "@babel/helper-validator-option": "^7.22.5",
        "browserslist": "^4.21.3",
        "lru-cache": "^5.1.1",
        "semver": "^6.3.0"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-compilation-targets/node_modules/semver": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
      "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/@babel/helper-create-class-features-plugin": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.22.5.tgz",
      "integrity": "sha512-xkb58MyOYIslxu3gKmVXmjTtUPvBU4odYzbiIQbWwLKIHCsx6UGZGX6F1IznMFVnDdirseUZopzN+ZRt8Xb33Q==",
      "dependencies": {
        "@babel/helper-annotate-as-pure": "^7.22.5",
        "@babel/helper-environment-visitor": "^7.22.5",
        "@babel/helper-function-name": "^7.22.5",
        "@babel/helper-member-expression-to-functions": "^7.22.5",
        "@babel/helper-optimise-call-expression": "^7.22.5",
        "@babel/helper-replace-supers": "^7.22.5",
        "@babel/helper-skip-transparent-expression-wrappers": "^7.22.5",
        "@babel/helper-split-export-declaration": "^7.22.5",
        "semver": "^6.3.0"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-create-class-features-plugin/node_modules/semver": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
      "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/@babel/helper-create-regexp-features-plugin": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-create-regexp-features-plugin/-/helper-create-regexp-features-plugin-7.22.5.tgz",
      "integrity": "sha512-1VpEFOIbMRaXyDeUwUfmTIxExLwQ+zkW+Bh5zXpApA3oQedBx9v/updixWxnx/bZpKw7u8VxWjb/qWpIcmPq8A==",
      "dependencies": {
        "@babel/helper-annotate-as-pure": "^7.22.5",
        "regexpu-core": "^5.3.1",
        "semver": "^6.3.0"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-create-regexp-features-plugin/node_modules/semver": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
      "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/@babel/helper-define-polyfill-provider": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/@babel/helper-define-polyfill-provider/-/helper-define-polyfill-provider-0.4.0.tgz",
      "integrity": "sha512-RnanLx5ETe6aybRi1cO/edaRH+bNYWaryCEmjDDYyNr4wnSzyOp8T0dWipmqVHKEY3AbVKUom50AKSlj1zmKbg==",
      "dependencies": {
        "@babel/helper-compilation-targets": "^7.17.7",
        "@babel/helper-plugin-utils": "^7.16.7",
        "debug": "^4.1.1",
        "lodash.debounce": "^4.0.8",
        "resolve": "^1.14.2",
        "semver": "^6.1.2"
      },
      "peerDependencies": {
        "@babel/core": "^7.4.0-0"
      }
    },
    "node_modules/@babel/helper-define-polyfill-provider/node_modules/debug": {
      "version": "4.3.4",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.4.tgz",
      "integrity": "sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==",
      "dependencies": {
        "ms": "2.1.2"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/@babel/helper-define-polyfill-provider/node_modules/ms": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
      "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
    },
    "node_modules/@babel/helper-define-polyfill-provider/node_modules/semver": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
      "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/@babel/helper-environment-visitor": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-environment-visitor/-/helper-environment-visitor-7.22.5.tgz",
      "integrity": "sha512-XGmhECfVA/5sAt+H+xpSg0mfrHq6FzNr9Oxh7PSEBBRUb/mL7Kz3NICXb194rCqAEdxkhPT1a88teizAFyvk8Q==",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-function-name": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.22.5.tgz",
      "integrity": "sha512-wtHSq6jMRE3uF2otvfuD3DIvVhOsSNshQl0Qrd7qC9oQJzHvOL4qQXlQn2916+CXGywIjpGuIkoyZRRxHPiNQQ==",
      "dependencies": {
        "@babel/template": "^7.22.5",
        "@babel/types": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-hoist-variables": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-hoist-variables/-/helper-hoist-variables-7.22.5.tgz",
      "integrity": "sha512-wGjk9QZVzvknA6yKIUURb8zY3grXCcOZt+/7Wcy8O2uctxhplmUPkOdlgoNhmdVee2c92JXbf1xpMtVNbfoxRw==",
      "dependencies": {
        "@babel/types": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-member-expression-to-functions": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.22.5.tgz",
      "integrity": "sha512-aBiH1NKMG0H2cGZqspNvsaBe6wNGjbJjuLy29aU+eDZjSbbN53BaxlpB02xm9v34pLTZ1nIQPFYn2qMZoa5BQQ==",
      "dependencies": {
        "@babel/types": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-module-imports": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.22.5.tgz",
      "integrity": "sha512-8Dl6+HD/cKifutF5qGd/8ZJi84QeAKh+CEe1sBzz8UayBBGg1dAIJrdHOcOM5b2MpzWL2yuotJTtGjETq0qjXg==",
      "dependencies": {
        "@babel/types": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-module-transforms": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.22.5.tgz",
      "integrity": "sha512-+hGKDt/Ze8GFExiVHno/2dvG5IdstpzCq0y4Qc9OJ25D4q3pKfiIP/4Vp3/JvhDkLKsDK2api3q3fpIgiIF5bw==",
      "dependencies": {
        "@babel/helper-environment-visitor": "^7.22.5",
        "@babel/helper-module-imports": "^7.22.5",
        "@babel/helper-simple-access": "^7.22.5",
        "@babel/helper-split-export-declaration": "^7.22.5",
        "@babel/helper-validator-identifier": "^7.22.5",
        "@babel/template": "^7.22.5",
        "@babel/traverse": "^7.22.5",
        "@babel/types": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-optimise-call-expression": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.22.5.tgz",
      "integrity": "sha512-HBwaojN0xFRx4yIvpwGqxiV2tUfl7401jlok564NgB9EHS1y6QT17FmKWm4ztqjeVdXLuC4fSvHc5ePpQjoTbw==",
      "dependencies": {
        "@babel/types": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-plugin-utils": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.22.5.tgz",
      "integrity": "sha512-uLls06UVKgFG9QD4OeFYLEGteMIAa5kpTPcFL28yuCIIzsf6ZyKZMllKVOCZFhiZ5ptnwX4mtKdWCBE/uT4amg==",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-remap-async-to-generator": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-remap-async-to-generator/-/helper-remap-async-to-generator-7.22.5.tgz",
      "integrity": "sha512-cU0Sq1Rf4Z55fgz7haOakIyM7+x/uCFwXpLPaeRzfoUtAEAuUZjZvFPjL/rk5rW693dIgn2hng1W7xbT7lWT4g==",
      "dependencies": {
        "@babel/helper-annotate-as-pure": "^7.22.5",
        "@babel/helper-environment-visitor": "^7.22.5",
        "@babel/helper-wrap-function": "^7.22.5",
        "@babel/types": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-replace-supers": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-replace-supers/-/helper-replace-supers-7.22.5.tgz",
      "integrity": "sha512-aLdNM5I3kdI/V9xGNyKSF3X/gTyMUBohTZ+/3QdQKAA9vxIiy12E+8E2HoOP1/DjeqU+g6as35QHJNMDDYpuCg==",
      "dependencies": {
        "@babel/helper-environment-visitor": "^7.22.5",
        "@babel/helper-member-expression-to-functions": "^7.22.5",
        "@babel/helper-optimise-call-expression": "^7.22.5",
        "@babel/template": "^7.22.5",
        "@babel/traverse": "^7.22.5",
        "@babel/types": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-simple-access": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-simple-access/-/helper-simple-access-7.22.5.tgz",
      "integrity": "sha512-n0H99E/K+Bika3++WNL17POvo4rKWZ7lZEp1Q+fStVbUi8nxPQEBOlTmCOxW/0JsS56SKKQ+ojAe2pHKJHN35w==",
      "dependencies": {
        "@babel/types": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-skip-transparent-expression-wrappers": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-skip-transparent-expression-wrappers/-/helper-skip-transparent-expression-wrappers-7.22.5.tgz",
      "integrity": "sha512-tK14r66JZKiC43p8Ki33yLBVJKlQDFoA8GYN67lWCDCqoL6EMMSuM9b+Iff2jHaM/RRFYl7K+iiru7hbRqNx8Q==",
      "dependencies": {
        "@babel/types": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-split-export-declaration": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.22.5.tgz",
      "integrity": "sha512-thqK5QFghPKWLhAV321lxF95yCg2K3Ob5yw+M3VHWfdia0IkPXUtoLH8x/6Fh486QUvzhb8YOWHChTVen2/PoQ==",
      "dependencies": {
        "@babel/types": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-string-parser": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.22.5.tgz",
      "integrity": "sha512-mM4COjgZox8U+JcXQwPijIZLElkgEpO5rsERVDJTc2qfCDfERyob6k5WegS14SX18IIjv+XD+GrqNumY5JRCDw==",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-identifier": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.22.5.tgz",
      "integrity": "sha512-aJXu+6lErq8ltp+JhkJUfk1MTGyuA4v7f3pA+BJ5HLfNC6nAQ0Cpi9uOquUj8Hehg0aUiHzWQbOVJGao6ztBAQ==",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-option": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.22.5.tgz",
      "integrity": "sha512-R3oB6xlIVKUnxNUxbmgq7pKjxpru24zlimpE8WK47fACIlM0II/Hm1RS8IaOI7NgCr6LNS+jl5l75m20npAziw==",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-wrap-function": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-wrap-function/-/helper-wrap-function-7.22.5.tgz",
      "integrity": "sha512-bYqLIBSEshYcYQyfks8ewYA8S30yaGSeRslcvKMvoUk6HHPySbxHq9YRi6ghhzEU+yhQv9bP/jXnygkStOcqZw==",
      "dependencies": {
        "@babel/helper-function-name": "^7.22.5",
        "@babel/template": "^7.22.5",
        "@babel/traverse": "^7.22.5",
        "@babel/types": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helpers": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helpers/-/helpers-7.22.5.tgz",
      "integrity": "sha512-pSXRmfE1vzcUIDFQcSGA5Mr+GxBV9oiRKDuDxXvWQQBCh8HoIjs/2DlDB7H8smac1IVrB9/xdXj2N3Wol9Cr+Q==",
      "dependencies": {
        "@babel/template": "^7.22.5",
        "@babel/traverse": "^7.22.5",
        "@babel/types": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/highlight": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/highlight/-/highlight-7.22.5.tgz",
      "integrity": "sha512-BSKlD1hgnedS5XRnGOljZawtag7H1yPfQp0tdNJCHoH6AZ+Pcm9VvkrK59/Yy593Ypg0zMxH2BxD1VPYUQ7UIw==",
      "dependencies": {
        "@babel/helper-validator-identifier": "^7.22.5",
        "chalk": "^2.0.0",
        "js-tokens": "^4.0.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/highlight/node_modules/ansi-styles": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
      "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
      "dependencies": {
        "color-convert": "^1.9.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/@babel/highlight/node_modules/chalk": {
      "version": "2.4.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
      "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
      "dependencies": {
        "ansi-styles": "^3.2.1",
        "escape-string-regexp": "^1.0.5",
        "supports-color": "^5.3.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/@babel/highlight/node_modules/color-convert": {
      "version": "1.9.3",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
      "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
      "dependencies": {
        "color-name": "1.1.3"
      }
    },
    "node_modules/@babel/highlight/node_modules/color-name": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
      "integrity": "sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw=="
    },
    "node_modules/@babel/parser": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.22.5.tgz",
      "integrity": "sha512-DFZMC9LJUG9PLOclRC32G63UXwzqS2koQC8dkx+PLdmt1xSePYpbT/NbsrJy8Q/muXz7o/h/d4A7Fuyixm559Q==",
      "bin": {
        "parser": "bin/babel-parser.js"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression/-/plugin-bugfix-safari-id-destructuring-collision-in-function-expression-7.22.5.tgz",
      "integrity": "sha512-NP1M5Rf+u2Gw9qfSO4ihjcTGW5zXTi36ITLd4/EoAcEhIZ0yjMqmftDNl3QC19CX7olhrjpyU454g/2W7X0jvQ==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining/-/plugin-bugfix-v8-spread-parameters-in-optional-chaining-7.22.5.tgz",
      "integrity": "sha512-31Bb65aZaUwqCbWMnZPduIZxCBngHFlzyN6Dq6KAJjtx+lx6ohKHubc61OomYi7XwVD4Ol0XCVz4h+pYFR048g==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/helper-skip-transparent-expression-wrappers": "^7.22.5",
        "@babel/plugin-transform-optional-chaining": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.13.0"
      }
    },
    "node_modules/@babel/plugin-proposal-private-property-in-object": {
      "version": "7.21.0-placeholder-for-preset-env.2",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-private-property-in-object/-/plugin-proposal-private-property-in-object-7.21.0-placeholder-for-preset-env.2.tgz",
      "integrity": "sha512-SOSkfJDddaM7mak6cPEpswyTRnuRltl429hMraQEglW+OkovnCzsiszTmsrlY//qLFjCpQDFRvjdm2wA5pPm9w==",
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-proposal-unicode-property-regex": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-unicode-property-regex/-/plugin-proposal-unicode-property-regex-7.18.6.tgz",
      "integrity": "sha512-2BShG/d5yoZyXZfVePH91urL5wTG6ASZU9M4o03lKK8u8UW1y08OMttBSOADTcJrnPMpvDXRG3G8fyLh4ovs8w==",
      "dependencies": {
        "@babel/helper-create-regexp-features-plugin": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.6"
      },
      "engines": {
        "node": ">=4"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-async-generators": {
      "version": "7.8.4",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-async-generators/-/plugin-syntax-async-generators-7.8.4.tgz",
      "integrity": "sha512-tycmZxkGfZaxhMRbXlPXuVFpdWlXpir2W4AMhSJgRKzk/eDlIXOhb2LHWoLpDF7TEHylV5zNhykX6KAgHJmTNw==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.8.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-class-properties": {
      "version": "7.12.13",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-class-properties/-/plugin-syntax-class-properties-7.12.13.tgz",
      "integrity": "sha512-fm4idjKla0YahUNgFNLCB0qySdsoPiZP3iQE3rky0mBUtMZ23yDJ9SJdg6dXTSDnulOVqiF3Hgr9nbXvXTQZYA==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.12.13"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-class-static-block": {
      "version": "7.14.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-class-static-block/-/plugin-syntax-class-static-block-7.14.5.tgz",
      "integrity": "sha512-b+YyPmr6ldyNnM6sqYeMWE+bgJcJpO6yS4QD7ymxgH34GBPNDM/THBh8iunyvKIZztiwLH4CJZ0RxTk9emgpjw==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.14.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-dynamic-import": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-dynamic-import/-/plugin-syntax-dynamic-import-7.8.3.tgz",
      "integrity": "sha512-5gdGbFon+PszYzqs83S3E5mpi7/y/8M9eC90MRTZfduQOYW76ig6SOSPNe41IG5LoP3FGBn2N0RjVDSQiS94kQ==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.8.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-export-namespace-from": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-export-namespace-from/-/plugin-syntax-export-namespace-from-7.8.3.tgz",
      "integrity": "sha512-MXf5laXo6c1IbEbegDmzGPwGNTsHZmEy6QGznu5Sh2UCWvueywb2ee+CCE4zQiZstxU9BMoQO9i6zUFSY0Kj0Q==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.8.3"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-import-assertions": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-import-assertions/-/plugin-syntax-import-assertions-7.22.5.tgz",
      "integrity": "sha512-rdV97N7KqsRzeNGoWUOK6yUsWarLjE5Su/Snk9IYPU9CwkWHs4t+rTGOvffTR8XGkJMTAdLfO0xVnXm8wugIJg==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-import-attributes": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-import-attributes/-/plugin-syntax-import-attributes-7.22.5.tgz",
      "integrity": "sha512-KwvoWDeNKPETmozyFE0P2rOLqh39EoQHNjqizrI5B8Vt0ZNS7M56s7dAiAqbYfiAYOuIzIh96z3iR2ktgu3tEg==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-import-meta": {
      "version": "7.10.4",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-import-meta/-/plugin-syntax-import-meta-7.10.4.tgz",
      "integrity": "sha512-Yqfm+XDx0+Prh3VSeEQCPU81yC+JWZ2pDPFSS4ZdpfZhp4MkFMaDC1UqseovEKwSUpnIL7+vK+Clp7bfh0iD7g==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.10.4"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-json-strings": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-json-strings/-/plugin-syntax-json-strings-7.8.3.tgz",
      "integrity": "sha512-lY6kdGpWHvjoe2vk4WrAapEuBR69EMxZl+RoGRhrFGNYVK8mOPAW8VfbT/ZgrFbXlDNiiaxQnAtgVCZ6jv30EA==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.8.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-jsx": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-jsx/-/plugin-syntax-jsx-7.22.5.tgz",
      "integrity": "sha512-gvyP4hZrgrs/wWMaocvxZ44Hw0b3W8Pe+cMxc8V1ULQ07oh8VNbIRaoD1LRZVTvD+0nieDKjfgKg89sD7rrKrg==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-logical-assignment-operators": {
      "version": "7.10.4",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-logical-assignment-operators/-/plugin-syntax-logical-assignment-operators-7.10.4.tgz",
      "integrity": "sha512-d8waShlpFDinQ5MtvGU9xDAOzKH47+FFoney2baFIoMr952hKOLp1HR7VszoZvOsV/4+RRszNY7D17ba0te0ig==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.10.4"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-nullish-coalescing-operator": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-nullish-coalescing-operator/-/plugin-syntax-nullish-coalescing-operator-7.8.3.tgz",
      "integrity": "sha512-aSff4zPII1u2QD7y+F8oDsz19ew4IGEJg9SVW+bqwpwtfFleiQDMdzA/R+UlWDzfnHFCxxleFT0PMIrR36XLNQ==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.8.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-numeric-separator": {
      "version": "7.10.4",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-numeric-separator/-/plugin-syntax-numeric-separator-7.10.4.tgz",
      "integrity": "sha512-9H6YdfkcK/uOnY/K7/aA2xpzaAgkQn37yzWUMRK7OaPOqOpGS1+n0H5hxT9AUw9EsSjPW8SVyMJwYRtWs3X3ug==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.10.4"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-object-rest-spread": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-object-rest-spread/-/plugin-syntax-object-rest-spread-7.8.3.tgz",
      "integrity": "sha512-XoqMijGZb9y3y2XskN+P1wUGiVwWZ5JmoDRwx5+3GmEplNyVM2s2Dg8ILFQm8rWM48orGy5YpI5Bl8U1y7ydlA==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.8.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-optional-catch-binding": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-optional-catch-binding/-/plugin-syntax-optional-catch-binding-7.8.3.tgz",
      "integrity": "sha512-6VPD0Pc1lpTqw0aKoeRTMiB+kWhAoT24PA+ksWSBrFtl5SIRVpZlwN3NNPQjehA2E/91FV3RjLWoVTglWcSV3Q==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.8.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-optional-chaining": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-optional-chaining/-/plugin-syntax-optional-chaining-7.8.3.tgz",
      "integrity": "sha512-KoK9ErH1MBlCPxV0VANkXW2/dw4vlbGDrFgz8bmUsBGYkFRcbRwMh6cIJubdPrkxRwuGdtCk0v/wPTKbQgBjkg==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.8.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-private-property-in-object": {
      "version": "7.14.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-private-property-in-object/-/plugin-syntax-private-property-in-object-7.14.5.tgz",
      "integrity": "sha512-0wVnp9dxJ72ZUJDV27ZfbSj6iHLoytYZmh3rFcxNnvsJF3ktkzLDZPy/mA17HGsaQT3/DQsWYX1f1QGWkCoVUg==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.14.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-top-level-await": {
      "version": "7.14.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-top-level-await/-/plugin-syntax-top-level-await-7.14.5.tgz",
      "integrity": "sha512-hx++upLv5U1rgYfwe1xBQUhRmU41NEvpUvrp8jkrSCdvGSnM5/qdRMtylJ6PG5OFkBaHkbTAKTnd3/YyESRHFw==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.14.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-typescript": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-typescript/-/plugin-syntax-typescript-7.22.5.tgz",
      "integrity": "sha512-1mS2o03i7t1c6VzH6fdQ3OA8tcEIxwG18zIPRp+UY1Ihv6W+XZzBCVxExF9upussPXJ0xE9XRHwMoNs1ep/nRQ==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-unicode-sets-regex": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-unicode-sets-regex/-/plugin-syntax-unicode-sets-regex-7.18.6.tgz",
      "integrity": "sha512-727YkEAPwSIQTv5im8QHz3upqp92JTWhidIC81Tdx4VJYIte/VndKf1qKrfnnhPLiPghStWfvC/iFaMCQu7Nqg==",
      "dependencies": {
        "@babel/helper-create-regexp-features-plugin": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/plugin-transform-arrow-functions": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-arrow-functions/-/plugin-transform-arrow-functions-7.22.5.tgz",
      "integrity": "sha512-26lTNXoVRdAnsaDXPpvCNUq+OVWEVC6bx7Vvz9rC53F2bagUWW4u4ii2+h8Fejfh7RYqPxn+libeFBBck9muEw==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-async-generator-functions": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-async-generator-functions/-/plugin-transform-async-generator-functions-7.22.5.tgz",
      "integrity": "sha512-gGOEvFzm3fWoyD5uZq7vVTD57pPJ3PczPUD/xCFGjzBpUosnklmXyKnGQbbbGs1NPNPskFex0j93yKbHt0cHyg==",
      "dependencies": {
        "@babel/helper-environment-visitor": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/helper-remap-async-to-generator": "^7.22.5",
        "@babel/plugin-syntax-async-generators": "^7.8.4"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-async-to-generator": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-async-to-generator/-/plugin-transform-async-to-generator-7.22.5.tgz",
      "integrity": "sha512-b1A8D8ZzE/VhNDoV1MSJTnpKkCG5bJo+19R4o4oy03zM7ws8yEMK755j61Dc3EyvdysbqH5BOOTquJ7ZX9C6vQ==",
      "dependencies": {
        "@babel/helper-module-imports": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/helper-remap-async-to-generator": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-block-scoped-functions": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-block-scoped-functions/-/plugin-transform-block-scoped-functions-7.22.5.tgz",
      "integrity": "sha512-tdXZ2UdknEKQWKJP1KMNmuF5Lx3MymtMN/pvA+p/VEkhK8jVcQ1fzSy8KM9qRYhAf2/lV33hoMPKI/xaI9sADA==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-block-scoping": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-block-scoping/-/plugin-transform-block-scoping-7.22.5.tgz",
      "integrity": "sha512-EcACl1i5fSQ6bt+YGuU/XGCeZKStLmyVGytWkpyhCLeQVA0eu6Wtiw92V+I1T/hnezUv7j74dA/Ro69gWcU+hg==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-class-properties": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-class-properties/-/plugin-transform-class-properties-7.22.5.tgz",
      "integrity": "sha512-nDkQ0NfkOhPTq8YCLiWNxp1+f9fCobEjCb0n8WdbNUBc4IB5V7P1QnX9IjpSoquKrXF5SKojHleVNs2vGeHCHQ==",
      "dependencies": {
        "@babel/helper-create-class-features-plugin": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-class-static-block": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-class-static-block/-/plugin-transform-class-static-block-7.22.5.tgz",
      "integrity": "sha512-SPToJ5eYZLxlnp1UzdARpOGeC2GbHvr9d/UV0EukuVx8atktg194oe+C5BqQ8jRTkgLRVOPYeXRSBg1IlMoVRA==",
      "dependencies": {
        "@babel/helper-create-class-features-plugin": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/plugin-syntax-class-static-block": "^7.14.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.12.0"
      }
    },
    "node_modules/@babel/plugin-transform-classes": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-classes/-/plugin-transform-classes-7.22.5.tgz",
      "integrity": "sha512-2edQhLfibpWpsVBx2n/GKOz6JdGQvLruZQfGr9l1qes2KQaWswjBzhQF7UDUZMNaMMQeYnQzxwOMPsbYF7wqPQ==",
      "dependencies": {
        "@babel/helper-annotate-as-pure": "^7.22.5",
        "@babel/helper-compilation-targets": "^7.22.5",
        "@babel/helper-environment-visitor": "^7.22.5",
        "@babel/helper-function-name": "^7.22.5",
        "@babel/helper-optimise-call-expression": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/helper-replace-supers": "^7.22.5",
        "@babel/helper-split-export-declaration": "^7.22.5",
        "globals": "^11.1.0"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-computed-properties": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-computed-properties/-/plugin-transform-computed-properties-7.22.5.tgz",
      "integrity": "sha512-4GHWBgRf0krxPX+AaPtgBAlTgTeZmqDynokHOX7aqqAB4tHs3U2Y02zH6ETFdLZGcg9UQSD1WCmkVrE9ErHeOg==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/template": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-destructuring": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-destructuring/-/plugin-transform-destructuring-7.22.5.tgz",
      "integrity": "sha512-GfqcFuGW8vnEqTUBM7UtPd5A4q797LTvvwKxXTgRsFjoqaJiEg9deBG6kWeQYkVEL569NpnmpC0Pkr/8BLKGnQ==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-dotall-regex": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-dotall-regex/-/plugin-transform-dotall-regex-7.22.5.tgz",
      "integrity": "sha512-5/Yk9QxCQCl+sOIB1WelKnVRxTJDSAIxtJLL2/pqL14ZVlbH0fUQUZa/T5/UnQtBNgghR7mfB8ERBKyKPCi7Vw==",
      "dependencies": {
        "@babel/helper-create-regexp-features-plugin": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-duplicate-keys": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-duplicate-keys/-/plugin-transform-duplicate-keys-7.22.5.tgz",
      "integrity": "sha512-dEnYD+9BBgld5VBXHnF/DbYGp3fqGMsyxKbtD1mDyIA7AkTSpKXFhCVuj/oQVOoALfBs77DudA0BE4d5mcpmqw==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-dynamic-import": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-dynamic-import/-/plugin-transform-dynamic-import-7.22.5.tgz",
      "integrity": "sha512-0MC3ppTB1AMxd8fXjSrbPa7LT9hrImt+/fcj+Pg5YMD7UQyWp/02+JWpdnCymmsXwIx5Z+sYn1bwCn4ZJNvhqQ==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/plugin-syntax-dynamic-import": "^7.8.3"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-exponentiation-operator": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-exponentiation-operator/-/plugin-transform-exponentiation-operator-7.22.5.tgz",
      "integrity": "sha512-vIpJFNM/FjZ4rh1myqIya9jXwrwwgFRHPjT3DkUA9ZLHuzox8jiXkOLvwm1H+PQIP3CqfC++WPKeuDi0Sjdj1g==",
      "dependencies": {
        "@babel/helper-builder-binary-assignment-operator-visitor": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-export-namespace-from": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-export-namespace-from/-/plugin-transform-export-namespace-from-7.22.5.tgz",
      "integrity": "sha512-X4hhm7FRnPgd4nDA4b/5V280xCx6oL7Oob5+9qVS5C13Zq4bh1qq7LU0GgRU6b5dBWBvhGaXYVB4AcN6+ol6vg==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/plugin-syntax-export-namespace-from": "^7.8.3"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-for-of": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-for-of/-/plugin-transform-for-of-7.22.5.tgz",
      "integrity": "sha512-3kxQjX1dU9uudwSshyLeEipvrLjBCVthCgeTp6CzE/9JYrlAIaeekVxRpCWsDDfYTfRZRoCeZatCQvwo+wvK8A==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-function-name": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-function-name/-/plugin-transform-function-name-7.22.5.tgz",
      "integrity": "sha512-UIzQNMS0p0HHiQm3oelztj+ECwFnj+ZRV4KnguvlsD2of1whUeM6o7wGNj6oLwcDoAXQ8gEqfgC24D+VdIcevg==",
      "dependencies": {
        "@babel/helper-compilation-targets": "^7.22.5",
        "@babel/helper-function-name": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-json-strings": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-json-strings/-/plugin-transform-json-strings-7.22.5.tgz",
      "integrity": "sha512-DuCRB7fu8MyTLbEQd1ew3R85nx/88yMoqo2uPSjevMj3yoN7CDM8jkgrY0wmVxfJZyJ/B9fE1iq7EQppWQmR5A==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/plugin-syntax-json-strings": "^7.8.3"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-literals": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-literals/-/plugin-transform-literals-7.22.5.tgz",
      "integrity": "sha512-fTLj4D79M+mepcw3dgFBTIDYpbcB9Sm0bpm4ppXPaO+U+PKFFyV9MGRvS0gvGw62sd10kT5lRMKXAADb9pWy8g==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-logical-assignment-operators": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-logical-assignment-operators/-/plugin-transform-logical-assignment-operators-7.22.5.tgz",
      "integrity": "sha512-MQQOUW1KL8X0cDWfbwYP+TbVbZm16QmQXJQ+vndPtH/BoO0lOKpVoEDMI7+PskYxH+IiE0tS8xZye0qr1lGzSA==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/plugin-syntax-logical-assignment-operators": "^7.10.4"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-member-expression-literals": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-member-expression-literals/-/plugin-transform-member-expression-literals-7.22.5.tgz",
      "integrity": "sha512-RZEdkNtzzYCFl9SE9ATaUMTj2hqMb4StarOJLrZRbqqU4HSBE7UlBw9WBWQiDzrJZJdUWiMTVDI6Gv/8DPvfew==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-modules-amd": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-amd/-/plugin-transform-modules-amd-7.22.5.tgz",
      "integrity": "sha512-R+PTfLTcYEmb1+kK7FNkhQ1gP4KgjpSO6HfH9+f8/yfp2Nt3ggBjiVpRwmwTlfqZLafYKJACy36yDXlEmI9HjQ==",
      "dependencies": {
        "@babel/helper-module-transforms": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-modules-commonjs": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-commonjs/-/plugin-transform-modules-commonjs-7.22.5.tgz",
      "integrity": "sha512-B4pzOXj+ONRmuaQTg05b3y/4DuFz3WcCNAXPLb2Q0GT0TrGKGxNKV4jwsXts+StaM0LQczZbOpj8o1DLPDJIiA==",
      "dependencies": {
        "@babel/helper-module-transforms": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/helper-simple-access": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-modules-systemjs": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-systemjs/-/plugin-transform-modules-systemjs-7.22.5.tgz",
      "integrity": "sha512-emtEpoaTMsOs6Tzz+nbmcePl6AKVtS1yC4YNAeMun9U8YCsgadPNxnOPQ8GhHFB2qdx+LZu9LgoC0Lthuu05DQ==",
      "dependencies": {
        "@babel/helper-hoist-variables": "^7.22.5",
        "@babel/helper-module-transforms": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/helper-validator-identifier": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-modules-umd": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-umd/-/plugin-transform-modules-umd-7.22.5.tgz",
      "integrity": "sha512-+S6kzefN/E1vkSsKx8kmQuqeQsvCKCd1fraCM7zXm4SFoggI099Tr4G8U81+5gtMdUeMQ4ipdQffbKLX0/7dBQ==",
      "dependencies": {
        "@babel/helper-module-transforms": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-named-capturing-groups-regex": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-named-capturing-groups-regex/-/plugin-transform-named-capturing-groups-regex-7.22.5.tgz",
      "integrity": "sha512-YgLLKmS3aUBhHaxp5hi1WJTgOUb/NCuDHzGT9z9WTt3YG+CPRhJs6nprbStx6DnWM4dh6gt7SU3sZodbZ08adQ==",
      "dependencies": {
        "@babel/helper-create-regexp-features-plugin": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/plugin-transform-new-target": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-new-target/-/plugin-transform-new-target-7.22.5.tgz",
      "integrity": "sha512-AsF7K0Fx/cNKVyk3a+DW0JLo+Ua598/NxMRvxDnkpCIGFh43+h/v2xyhRUYf6oD8gE4QtL83C7zZVghMjHd+iw==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-nullish-coalescing-operator": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-nullish-coalescing-operator/-/plugin-transform-nullish-coalescing-operator-7.22.5.tgz",
      "integrity": "sha512-6CF8g6z1dNYZ/VXok5uYkkBBICHZPiGEl7oDnAx2Mt1hlHVHOSIKWJaXHjQJA5VB43KZnXZDIexMchY4y2PGdA==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/plugin-syntax-nullish-coalescing-operator": "^7.8.3"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-numeric-separator": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-numeric-separator/-/plugin-transform-numeric-separator-7.22.5.tgz",
      "integrity": "sha512-NbslED1/6M+sXiwwtcAB/nieypGw02Ejf4KtDeMkCEpP6gWFMX1wI9WKYua+4oBneCCEmulOkRpwywypVZzs/g==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/plugin-syntax-numeric-separator": "^7.10.4"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-object-rest-spread": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-object-rest-spread/-/plugin-transform-object-rest-spread-7.22.5.tgz",
      "integrity": "sha512-Kk3lyDmEslH9DnvCDA1s1kkd3YWQITiBOHngOtDL9Pt6BZjzqb6hiOlb8VfjiiQJ2unmegBqZu0rx5RxJb5vmQ==",
      "dependencies": {
        "@babel/compat-data": "^7.22.5",
        "@babel/helper-compilation-targets": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/plugin-syntax-object-rest-spread": "^7.8.3",
        "@babel/plugin-transform-parameters": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-object-super": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-object-super/-/plugin-transform-object-super-7.22.5.tgz",
      "integrity": "sha512-klXqyaT9trSjIUrcsYIfETAzmOEZL3cBYqOYLJxBHfMFFggmXOv+NYSX/Jbs9mzMVESw/WycLFPRx8ba/b2Ipw==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/helper-replace-supers": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-optional-catch-binding": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-optional-catch-binding/-/plugin-transform-optional-catch-binding-7.22.5.tgz",
      "integrity": "sha512-pH8orJahy+hzZje5b8e2QIlBWQvGpelS76C63Z+jhZKsmzfNaPQ+LaW6dcJ9bxTpo1mtXbgHwy765Ro3jftmUg==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/plugin-syntax-optional-catch-binding": "^7.8.3"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-optional-chaining": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-optional-chaining/-/plugin-transform-optional-chaining-7.22.5.tgz",
      "integrity": "sha512-AconbMKOMkyG+xCng2JogMCDcqW8wedQAqpVIL4cOSescZ7+iW8utC6YDZLMCSUIReEA733gzRSaOSXMAt/4WQ==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/helper-skip-transparent-expression-wrappers": "^7.22.5",
        "@babel/plugin-syntax-optional-chaining": "^7.8.3"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-parameters": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-parameters/-/plugin-transform-parameters-7.22.5.tgz",
      "integrity": "sha512-AVkFUBurORBREOmHRKo06FjHYgjrabpdqRSwq6+C7R5iTCZOsM4QbcB27St0a4U6fffyAOqh3s/qEfybAhfivg==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-private-methods": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-private-methods/-/plugin-transform-private-methods-7.22.5.tgz",
      "integrity": "sha512-PPjh4gyrQnGe97JTalgRGMuU4icsZFnWkzicB/fUtzlKUqvsWBKEpPPfr5a2JiyirZkHxnAqkQMO5Z5B2kK3fA==",
      "dependencies": {
        "@babel/helper-create-class-features-plugin": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-private-property-in-object": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-private-property-in-object/-/plugin-transform-private-property-in-object-7.22.5.tgz",
      "integrity": "sha512-/9xnaTTJcVoBtSSmrVyhtSvO3kbqS2ODoh2juEU72c3aYonNF0OMGiaz2gjukyKM2wBBYJP38S4JiE0Wfb5VMQ==",
      "dependencies": {
        "@babel/helper-annotate-as-pure": "^7.22.5",
        "@babel/helper-create-class-features-plugin": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/plugin-syntax-private-property-in-object": "^7.14.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-property-literals": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-property-literals/-/plugin-transform-property-literals-7.22.5.tgz",
      "integrity": "sha512-TiOArgddK3mK/x1Qwf5hay2pxI6wCZnvQqrFSqbtg1GLl2JcNMitVH/YnqjP+M31pLUeTfzY1HAXFDnUBV30rQ==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-react-display-name": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-display-name/-/plugin-transform-react-display-name-7.22.5.tgz",
      "integrity": "sha512-PVk3WPYudRF5z4GKMEYUrLjPl38fJSKNaEOkFuoprioowGuWN6w2RKznuFNSlJx7pzzXXStPUnNSOEO0jL5EVw==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-react-jsx": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx/-/plugin-transform-react-jsx-7.22.5.tgz",
      "integrity": "sha512-rog5gZaVbUip5iWDMTYbVM15XQq+RkUKhET/IHR6oizR+JEoN6CAfTTuHcK4vwUyzca30qqHqEpzBOnaRMWYMA==",
      "dependencies": {
        "@babel/helper-annotate-as-pure": "^7.22.5",
        "@babel/helper-module-imports": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/plugin-syntax-jsx": "^7.22.5",
        "@babel/types": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-react-jsx-development": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-development/-/plugin-transform-react-jsx-development-7.22.5.tgz",
      "integrity": "sha512-bDhuzwWMuInwCYeDeMzyi7TaBgRQei6DqxhbyniL7/VG4RSS7HtSL2QbY4eESy1KJqlWt8g3xeEBGPuo+XqC8A==",
      "dependencies": {
        "@babel/plugin-transform-react-jsx": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-react-pure-annotations": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-pure-annotations/-/plugin-transform-react-pure-annotations-7.22.5.tgz",
      "integrity": "sha512-gP4k85wx09q+brArVinTXhWiyzLl9UpmGva0+mWyKxk6JZequ05x3eUcIUE+FyttPKJFRRVtAvQaJ6YF9h1ZpA==",
      "dependencies": {
        "@babel/helper-annotate-as-pure": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-regenerator": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-regenerator/-/plugin-transform-regenerator-7.22.5.tgz",
      "integrity": "sha512-rR7KePOE7gfEtNTh9Qw+iO3Q/e4DEsoQ+hdvM6QUDH7JRJ5qxq5AA52ZzBWbI5i9lfNuvySgOGP8ZN7LAmaiPw==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5",
        "regenerator-transform": "^0.15.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-reserved-words": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-reserved-words/-/plugin-transform-reserved-words-7.22.5.tgz",
      "integrity": "sha512-DTtGKFRQUDm8svigJzZHzb/2xatPc6TzNvAIJ5GqOKDsGFYgAskjRulbR/vGsPKq3OPqtexnz327qYpP57RFyA==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-runtime": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-runtime/-/plugin-transform-runtime-7.22.5.tgz",
      "integrity": "sha512-bg4Wxd1FWeFx3daHFTWk1pkSWK/AyQuiyAoeZAOkAOUBjnZPH6KT7eMxouV47tQ6hl6ax2zyAWBdWZXbrvXlaw==",
      "dependencies": {
        "@babel/helper-module-imports": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5",
        "babel-plugin-polyfill-corejs2": "^0.4.3",
        "babel-plugin-polyfill-corejs3": "^0.8.1",
        "babel-plugin-polyfill-regenerator": "^0.5.0",
        "semver": "^6.3.0"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-runtime/node_modules/semver": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
      "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/@babel/plugin-transform-shorthand-properties": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-shorthand-properties/-/plugin-transform-shorthand-properties-7.22.5.tgz",
      "integrity": "sha512-vM4fq9IXHscXVKzDv5itkO1X52SmdFBFcMIBZ2FRn2nqVYqw6dBexUgMvAjHW+KXpPPViD/Yo3GrDEBaRC0QYA==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-spread": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-spread/-/plugin-transform-spread-7.22.5.tgz",
      "integrity": "sha512-5ZzDQIGyvN4w8+dMmpohL6MBo+l2G7tfC/O2Dg7/hjpgeWvUx8FzfeOKxGog9IimPa4YekaQ9PlDqTLOljkcxg==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/helper-skip-transparent-expression-wrappers": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-sticky-regex": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-sticky-regex/-/plugin-transform-sticky-regex-7.22.5.tgz",
      "integrity": "sha512-zf7LuNpHG0iEeiyCNwX4j3gDg1jgt1k3ZdXBKbZSoA3BbGQGvMiSvfbZRR3Dr3aeJe3ooWFZxOOG3IRStYp2Bw==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-template-literals": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-template-literals/-/plugin-transform-template-literals-7.22.5.tgz",
      "integrity": "sha512-5ciOehRNf+EyUeewo8NkbQiUs4d6ZxiHo6BcBcnFlgiJfu16q0bQUw9Jvo0b0gBKFG1SMhDSjeKXSYuJLeFSMA==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-typeof-symbol": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-typeof-symbol/-/plugin-transform-typeof-symbol-7.22.5.tgz",
      "integrity": "sha512-bYkI5lMzL4kPii4HHEEChkD0rkc+nvnlR6+o/qdqR6zrm0Sv/nodmyLhlq2DO0YKLUNd2VePmPRjJXSBh9OIdA==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-typescript": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-typescript/-/plugin-transform-typescript-7.22.5.tgz",
      "integrity": "sha512-SMubA9S7Cb5sGSFFUlqxyClTA9zWJ8qGQrppNUm05LtFuN1ELRFNndkix4zUJrC9F+YivWwa1dHMSyo0e0N9dA==",
      "dependencies": {
        "@babel/helper-annotate-as-pure": "^7.22.5",
        "@babel/helper-create-class-features-plugin": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/plugin-syntax-typescript": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-unicode-escapes": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-unicode-escapes/-/plugin-transform-unicode-escapes-7.22.5.tgz",
      "integrity": "sha512-biEmVg1IYB/raUO5wT1tgfacCef15Fbzhkx493D3urBI++6hpJ+RFG4SrWMn0NEZLfvilqKf3QDrRVZHo08FYg==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-unicode-property-regex": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-unicode-property-regex/-/plugin-transform-unicode-property-regex-7.22.5.tgz",
      "integrity": "sha512-HCCIb+CbJIAE6sXn5CjFQXMwkCClcOfPCzTlilJ8cUatfzwHlWQkbtV0zD338u9dZskwvuOYTuuaMaA8J5EI5A==",
      "dependencies": {
        "@babel/helper-create-regexp-features-plugin": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-unicode-regex": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-unicode-regex/-/plugin-transform-unicode-regex-7.22.5.tgz",
      "integrity": "sha512-028laaOKptN5vHJf9/Arr/HiJekMd41hOEZYvNsrsXqJ7YPYuX2bQxh31fkZzGmq3YqHRJzYFFAVYvKfMPKqyg==",
      "dependencies": {
        "@babel/helper-create-regexp-features-plugin": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-unicode-sets-regex": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-unicode-sets-regex/-/plugin-transform-unicode-sets-regex-7.22.5.tgz",
      "integrity": "sha512-lhMfi4FC15j13eKrh3DnYHjpGj6UKQHtNKTbtc1igvAhRy4+kLhV07OpLcsN0VgDEw/MjAvJO4BdMJsHwMhzCg==",
      "dependencies": {
        "@babel/helper-create-regexp-features-plugin": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/polyfill": {
      "version": "7.12.1",
      "resolved": "https://registry.npmjs.org/@babel/polyfill/-/polyfill-7.12.1.tgz",
      "integrity": "sha512-X0pi0V6gxLi6lFZpGmeNa4zxtwEmCs42isWLNjZZDE0Y8yVfgu0T2OAHlzBbdYlqbW/YXVvoBHpATEM+goCj8g==",
      "deprecated": "🚨 This package has been deprecated in favor of separate inclusion of a polyfill and regenerator-runtime (when needed). See the @babel/polyfill docs (https://babeljs.io/docs/en/babel-polyfill) for more information.",
      "dependencies": {
        "core-js": "^2.6.5",
        "regenerator-runtime": "^0.13.4"
      }
    },
    "node_modules/@babel/preset-env": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/preset-env/-/preset-env-7.22.5.tgz",
      "integrity": "sha512-fj06hw89dpiZzGZtxn+QybifF07nNiZjZ7sazs2aVDcysAZVGjW7+7iFYxg6GLNM47R/thYfLdrXc+2f11Vi9A==",
      "dependencies": {
        "@babel/compat-data": "^7.22.5",
        "@babel/helper-compilation-targets": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/helper-validator-option": "^7.22.5",
        "@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression": "^7.22.5",
        "@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining": "^7.22.5",
        "@babel/plugin-proposal-private-property-in-object": "7.21.0-placeholder-for-preset-env.2",
        "@babel/plugin-syntax-async-generators": "^7.8.4",
        "@babel/plugin-syntax-class-properties": "^7.12.13",
        "@babel/plugin-syntax-class-static-block": "^7.14.5",
        "@babel/plugin-syntax-dynamic-import": "^7.8.3",
        "@babel/plugin-syntax-export-namespace-from": "^7.8.3",
        "@babel/plugin-syntax-import-assertions": "^7.22.5",
        "@babel/plugin-syntax-import-attributes": "^7.22.5",
        "@babel/plugin-syntax-import-meta": "^7.10.4",
        "@babel/plugin-syntax-json-strings": "^7.8.3",
        "@babel/plugin-syntax-logical-assignment-operators": "^7.10.4",
        "@babel/plugin-syntax-nullish-coalescing-operator": "^7.8.3",
        "@babel/plugin-syntax-numeric-separator": "^7.10.4",
        "@babel/plugin-syntax-object-rest-spread": "^7.8.3",
        "@babel/plugin-syntax-optional-catch-binding": "^7.8.3",
        "@babel/plugin-syntax-optional-chaining": "^7.8.3",
        "@babel/plugin-syntax-private-property-in-object": "^7.14.5",
        "@babel/plugin-syntax-top-level-await": "^7.14.5",
        "@babel/plugin-syntax-unicode-sets-regex": "^7.18.6",
        "@babel/plugin-transform-arrow-functions": "^7.22.5",
        "@babel/plugin-transform-async-generator-functions": "^7.22.5",
        "@babel/plugin-transform-async-to-generator": "^7.22.5",
        "@babel/plugin-transform-block-scoped-functions": "^7.22.5",
        "@babel/plugin-transform-block-scoping": "^7.22.5",
        "@babel/plugin-transform-class-properties": "^7.22.5",
        "@babel/plugin-transform-class-static-block": "^7.22.5",
        "@babel/plugin-transform-classes": "^7.22.5",
        "@babel/plugin-transform-computed-properties": "^7.22.5",
        "@babel/plugin-transform-destructuring": "^7.22.5",
        "@babel/plugin-transform-dotall-regex": "^7.22.5",
        "@babel/plugin-transform-duplicate-keys": "^7.22.5",
        "@babel/plugin-transform-dynamic-import": "^7.22.5",
        "@babel/plugin-transform-exponentiation-operator": "^7.22.5",
        "@babel/plugin-transform-export-namespace-from": "^7.22.5",
        "@babel/plugin-transform-for-of": "^7.22.5",
        "@babel/plugin-transform-function-name": "^7.22.5",
        "@babel/plugin-transform-json-strings": "^7.22.5",
        "@babel/plugin-transform-literals": "^7.22.5",
        "@babel/plugin-transform-logical-assignment-operators": "^7.22.5",
        "@babel/plugin-transform-member-expression-literals": "^7.22.5",
        "@babel/plugin-transform-modules-amd": "^7.22.5",
        "@babel/plugin-transform-modules-commonjs": "^7.22.5",
        "@babel/plugin-transform-modules-systemjs": "^7.22.5",
        "@babel/plugin-transform-modules-umd": "^7.22.5",
        "@babel/plugin-transform-named-capturing-groups-regex": "^7.22.5",
        "@babel/plugin-transform-new-target": "^7.22.5",
        "@babel/plugin-transform-nullish-coalescing-operator": "^7.22.5",
        "@babel/plugin-transform-numeric-separator": "^7.22.5",
        "@babel/plugin-transform-object-rest-spread": "^7.22.5",
        "@babel/plugin-transform-object-super": "^7.22.5",
        "@babel/plugin-transform-optional-catch-binding": "^7.22.5",
        "@babel/plugin-transform-optional-chaining": "^7.22.5",
        "@babel/plugin-transform-parameters": "^7.22.5",
        "@babel/plugin-transform-private-methods": "^7.22.5",
        "@babel/plugin-transform-private-property-in-object": "^7.22.5",
        "@babel/plugin-transform-property-literals": "^7.22.5",
        "@babel/plugin-transform-regenerator": "^7.22.5",
        "@babel/plugin-transform-reserved-words": "^7.22.5",
        "@babel/plugin-transform-shorthand-properties": "^7.22.5",
        "@babel/plugin-transform-spread": "^7.22.5",
        "@babel/plugin-transform-sticky-regex": "^7.22.5",
        "@babel/plugin-transform-template-literals": "^7.22.5",
        "@babel/plugin-transform-typeof-symbol": "^7.22.5",
        "@babel/plugin-transform-unicode-escapes": "^7.22.5",
        "@babel/plugin-transform-unicode-property-regex": "^7.22.5",
        "@babel/plugin-transform-unicode-regex": "^7.22.5",
        "@babel/plugin-transform-unicode-sets-regex": "^7.22.5",
        "@babel/preset-modules": "^0.1.5",
        "@babel/types": "^7.22.5",
        "babel-plugin-polyfill-corejs2": "^0.4.3",
        "babel-plugin-polyfill-corejs3": "^0.8.1",
        "babel-plugin-polyfill-regenerator": "^0.5.0",
        "core-js-compat": "^3.30.2",
        "semver": "^6.3.0"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/preset-env/node_modules/semver": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
      "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/@babel/preset-modules": {
      "version": "0.1.5",
      "resolved": "https://registry.npmjs.org/@babel/preset-modules/-/preset-modules-0.1.5.tgz",
      "integrity": "sha512-A57th6YRG7oR3cq/yt/Y84MvGgE0eJG2F1JLhKuyG+jFxEgrd/HAMJatiFtmOiZurz+0DkrvbheCLaV5f2JfjA==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.0.0",
        "@babel/plugin-proposal-unicode-property-regex": "^7.4.4",
        "@babel/plugin-transform-dotall-regex": "^7.4.4",
        "@babel/types": "^7.4.4",
        "esutils": "^2.0.2"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/preset-react": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/preset-react/-/preset-react-7.22.5.tgz",
      "integrity": "sha512-M+Is3WikOpEJHgR385HbuCITPTaPRaNkibTEa9oiofmJvIsrceb4yp9RL9Kb+TE8LznmeyZqpP+Lopwcx59xPQ==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/helper-validator-option": "^7.22.5",
        "@babel/plugin-transform-react-display-name": "^7.22.5",
        "@babel/plugin-transform-react-jsx": "^7.22.5",
        "@babel/plugin-transform-react-jsx-development": "^7.22.5",
        "@babel/plugin-transform-react-pure-annotations": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/preset-typescript": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/preset-typescript/-/preset-typescript-7.22.5.tgz",
      "integrity": "sha512-YbPaal9LxztSGhmndR46FmAbkJ/1fAsw293tSU+I5E5h+cnJ3d4GTwyUgGYmOXJYdGA+uNePle4qbaRzj2NISQ==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/helper-validator-option": "^7.22.5",
        "@babel/plugin-syntax-jsx": "^7.22.5",
        "@babel/plugin-transform-modules-commonjs": "^7.22.5",
        "@babel/plugin-transform-typescript": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/register": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/register/-/register-7.22.5.tgz",
      "integrity": "sha512-vV6pm/4CijSQ8Y47RH5SopXzursN35RQINfGJkmOlcpAtGuf94miFvIPhCKGQN7WGIcsgG1BHEX2KVdTYwTwUQ==",
      "dependencies": {
        "clone-deep": "^4.0.1",
        "find-cache-dir": "^2.0.0",
        "make-dir": "^2.1.0",
        "pirates": "^4.0.5",
        "source-map-support": "^0.5.16"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/regjsgen": {
      "version": "0.8.0",
      "resolved": "https://registry.npmjs.org/@babel/regjsgen/-/regjsgen-0.8.0.tgz",
      "integrity": "sha512-x/rqGMdzj+fWZvCOYForTghzbtqPDZ5gPwaoNGHdgDfF2QA/XZbCBp4Moo5scrkAMPhB7z26XM/AaHuIJdgauA=="
    },
    "node_modules/@babel/runtime": {
      "version": "7.21.0",
      "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.21.0.tgz",
      "integrity": "sha512-xwII0//EObnq89Ji5AKYQaRYiW/nZ3llSv29d49IuxPhKbtJoLP+9QUUZ4nVragQVtaVGeZrpB+ZtG/Pdy/POw==",
      "dependencies": {
        "regenerator-runtime": "^0.13.11"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/template": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/template/-/template-7.22.5.tgz",
      "integrity": "sha512-X7yV7eiwAxdj9k94NEylvbVHLiVG1nvzCV2EAowhxLTwODV1jl9UzZ48leOC0sH7OnuHrIkllaBgneUykIcZaw==",
      "dependencies": {
        "@babel/code-frame": "^7.22.5",
        "@babel/parser": "^7.22.5",
        "@babel/types": "^7.22.5"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/traverse": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.22.5.tgz",
      "integrity": "sha512-7DuIjPgERaNo6r+PZwItpjCZEa5vyw4eJGufeLxrPdBXBoLcCJCIasvK6pK/9DVNrLZTLFhUGqaC6X/PA007TQ==",
      "dependencies": {
        "@babel/code-frame": "^7.22.5",
        "@babel/generator": "^7.22.5",
        "@babel/helper-environment-visitor": "^7.22.5",
        "@babel/helper-function-name": "^7.22.5",
        "@babel/helper-hoist-variables": "^7.22.5",
        "@babel/helper-split-export-declaration": "^7.22.5",
        "@babel/parser": "^7.22.5",
        "@babel/types": "^7.22.5",
        "debug": "^4.1.0",
        "globals": "^11.1.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/traverse/node_modules/debug": {
      "version": "4.3.4",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.4.tgz",
      "integrity": "sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==",
      "dependencies": {
        "ms": "2.1.2"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/@babel/traverse/node_modules/ms": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
      "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
    },
    "node_modules/@babel/types": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.22.5.tgz",
      "integrity": "sha512-zo3MIHGOkPOfoRXitsgHLjEXmlDaD/5KU1Uzuc9GNiZPhSqVxVRtxuPaSBZDsYZ9qV88AjtMtWW7ww98loJ9KA==",
      "dependencies": {
        "@babel/helper-string-parser": "^7.22.5",
        "@babel/helper-validator-identifier": "^7.22.5",
        "to-fast-properties": "^2.0.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@carbon/icon-helpers": {
      "version": "10.41.0",
      "resolved": "https://registry.npmjs.org/@carbon/icon-helpers/-/icon-helpers-10.41.0.tgz",
      "integrity": "sha512-bKMTigt0/WzlNRgQArHO2WF21bVP7Pur/8QQ9pwhIyYkKCdqEbB9b719iPZTOe5qBZAo4rS5+2pGvePf2E3cWQ=="
    },
    "node_modules/@carbon/icons-react": {
      "version": "10.49.0",
      "resolved": "https://registry.npmjs.org/@carbon/icons-react/-/icons-react-10.49.0.tgz",
      "integrity": "sha512-Lzz0A/DfR0fBye0pyxA/7+EPr1e0GeA5qYlxoOwOVJrp/L2vFuKPOe7QLBHkNgKly/BAdqN9Uo1IHKbp6Zljeg==",
      "hasInstallScript": true,
      "dependencies": {
        "@carbon/icon-helpers": "^10.28.0",
        "@carbon/telemetry": "0.1.0",
        "prop-types": "^15.7.2"
      },
      "peerDependencies": {
        "react": ">=16"
      }
    },
    "node_modules/@carbon/telemetry": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/@carbon/telemetry/-/telemetry-0.1.0.tgz",
      "integrity": "sha512-kNWt0bkgPwGW0i5h7HFuljbKRXPvIhsKbB+1tEURAYLXoJg9iJLF1eGvWN5iVoFCS2zje4GR3OGOsvvKVe7Hlg==",
      "bin": {
        "carbon-telemetry": "bin/carbon-telemetry.js"
      }
    },
    "node_modules/@cspotcode/source-map-support": {
      "version": "0.8.1",
      "resolved": "https://registry.npmjs.org/@cspotcode/source-map-support/-/source-map-support-0.8.1.tgz",
      "integrity": "sha512-IchNf6dN4tHoMFIn/7OE8LWZ19Y6q/67Bmf6vnGREv8RSbBVb9LPJxEcnwrcwX6ixSvaiGoomAUvu4YSxXrVgw==",
      "dependencies": {
        "@jridgewell/trace-mapping": "0.3.9"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@emotion/cache": {
      "version": "10.0.29",
      "resolved": "https://registry.npmjs.org/@emotion/cache/-/cache-10.0.29.tgz",
      "integrity": "sha512-fU2VtSVlHiF27empSbxi1O2JFdNWZO+2NFHfwO0pxgTep6Xa3uGb+3pVKfLww2l/IBGLNEZl5Xf/++A4wAYDYQ==",
      "dependencies": {
        "@emotion/sheet": "0.9.4",
        "@emotion/stylis": "0.8.5",
        "@emotion/utils": "0.11.3",
        "@emotion/weak-memoize": "0.2.5"
      }
    },
    "node_modules/@emotion/core": {
      "version": "10.3.1",
      "resolved": "https://registry.npmjs.org/@emotion/core/-/core-10.3.1.tgz",
      "integrity": "sha512-447aUEjPIm0MnE6QYIaFz9VQOHSXf4Iu6EWOIqq11EAPqinkSZmfymPTmlOE3QjLv846lH4JVZBUOtwGbuQoww==",
      "dependencies": {
        "@babel/runtime": "^7.5.5",
        "@emotion/cache": "^10.0.27",
        "@emotion/css": "^10.0.27",
        "@emotion/serialize": "^0.11.15",
        "@emotion/sheet": "0.9.4",
        "@emotion/utils": "0.11.3"
      },
      "peerDependencies": {
        "react": ">=16.3.0"
      }
    },
    "node_modules/@emotion/css": {
      "version": "10.0.27",
      "resolved": "https://registry.npmjs.org/@emotion/css/-/css-10.0.27.tgz",
      "integrity": "sha512-6wZjsvYeBhyZQYNrGoR5yPMYbMBNEnanDrqmsqS1mzDm1cOTu12shvl2j4QHNS36UaTE0USIJawCH9C8oW34Zw==",
      "dependencies": {
        "@emotion/serialize": "^0.11.15",
        "@emotion/utils": "0.11.3",
        "babel-plugin-emotion": "^10.0.27"
      }
    },
    "node_modules/@emotion/hash": {
      "version": "0.8.0",
      "resolved": "https://registry.npmjs.org/@emotion/hash/-/hash-0.8.0.tgz",
      "integrity": "sha512-kBJtf7PH6aWwZ6fka3zQ0p6SBYzx4fl1LoZXE2RrnYST9Xljm7WfKJrU4g/Xr3Beg72MLrp1AWNUmuYJTL7Cow=="
    },
    "node_modules/@emotion/is-prop-valid": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/@emotion/is-prop-valid/-/is-prop-valid-1.2.1.tgz",
      "integrity": "sha512-61Mf7Ufx4aDxx1xlDeOm8aFFigGHE4z+0sKCa+IHCeZKiyP9RLD0Mmx7m8b9/Cf37f7NAvQOOJAbQQGVr5uERw==",
      "dependencies": {
        "@emotion/memoize": "^0.8.1"
      }
    },
    "node_modules/@emotion/is-prop-valid/node_modules/@emotion/memoize": {
      "version": "0.8.1",
      "resolved": "https://registry.npmjs.org/@emotion/memoize/-/memoize-0.8.1.tgz",
      "integrity": "sha512-W2P2c/VRW1/1tLox0mVUalvnWXxavmv/Oum2aPsRcoDJuob75FC3Y8FbpfLwUegRcxINtGUMPq0tFCvYNTBXNA=="
    },
    "node_modules/@emotion/memoize": {
      "version": "0.7.4",
      "resolved": "https://registry.npmjs.org/@emotion/memoize/-/memoize-0.7.4.tgz",
      "integrity": "sha512-Ja/Vfqe3HpuzRsG1oBtWTHk2PGZ7GR+2Vz5iYGelAw8dx32K0y7PjVuxK6z1nMpZOqAFsRUPCkK1YjJ56qJlgw=="
    },
    "node_modules/@emotion/serialize": {
      "version": "0.11.16",
      "resolved": "https://registry.npmjs.org/@emotion/serialize/-/serialize-0.11.16.tgz",
      "integrity": "sha512-G3J4o8by0VRrO+PFeSc3js2myYNOXVJ3Ya+RGVxnshRYgsvErfAOglKAiy1Eo1vhzxqtUvjCyS5gtewzkmvSSg==",
      "dependencies": {
        "@emotion/hash": "0.8.0",
        "@emotion/memoize": "0.7.4",
        "@emotion/unitless": "0.7.5",
        "@emotion/utils": "0.11.3",
        "csstype": "^2.5.7"
      }
    },
    "node_modules/@emotion/serialize/node_modules/csstype": {
      "version": "2.6.21",
      "resolved": "https://registry.npmjs.org/csstype/-/csstype-2.6.21.tgz",
      "integrity": "sha512-Z1PhmomIfypOpoMjRQB70jfvy/wxT50qW08YXO5lMIJkrdq4yOTR+AW7FqutScmB9NkLwxo+jU+kZLbofZZq/w=="
    },
    "node_modules/@emotion/sheet": {
      "version": "0.9.4",
      "resolved": "https://registry.npmjs.org/@emotion/sheet/-/sheet-0.9.4.tgz",
      "integrity": "sha512-zM9PFmgVSqBw4zL101Q0HrBVTGmpAxFZH/pYx/cjJT5advXguvcgjHFTCaIO3enL/xr89vK2bh0Mfyj9aa0ANA=="
    },
    "node_modules/@emotion/stylis": {
      "version": "0.8.5",
      "resolved": "https://registry.npmjs.org/@emotion/stylis/-/stylis-0.8.5.tgz",
      "integrity": "sha512-h6KtPihKFn3T9fuIrwvXXUOwlx3rfUvfZIcP5a6rh8Y7zjE3O06hT5Ss4S/YI1AYhuZ1kjaE/5EaOOI2NqSylQ=="
    },
    "node_modules/@emotion/unitless": {
      "version": "0.7.5",
      "resolved": "https://registry.npmjs.org/@emotion/unitless/-/unitless-0.7.5.tgz",
      "integrity": "sha512-OWORNpfjMsSSUBVrRBVGECkhWcULOAJz9ZW8uK9qgxD+87M7jHRcvh/A96XXNhXTLmKcoYSQtBEX7lHMO7YRwg=="
    },
    "node_modules/@emotion/utils": {
      "version": "0.11.3",
      "resolved": "https://registry.npmjs.org/@emotion/utils/-/utils-0.11.3.tgz",
      "integrity": "sha512-0o4l6pZC+hI88+bzuaX/6BgOvQVhbt2PfmxauVaYOGgbsAw14wdKyvMCZXnsnsHys94iadcF+RG/wZyx6+ZZBw=="
    },
    "node_modules/@emotion/weak-memoize": {
      "version": "0.2.5",
      "resolved": "https://registry.npmjs.org/@emotion/weak-memoize/-/weak-memoize-0.2.5.tgz",
      "integrity": "sha512-6U71C2Wp7r5XtFtQzYrW5iKFT67OixrSxjI4MptCHzdSVlgabczzqLe0ZSgnub/5Kp4hSbpDB1tMytZY9pwxxA=="
    },
    "node_modules/@ethereumjs/common": {
      "version": "2.5.0",
      "resolved": "https://registry.npmjs.org/@ethereumjs/common/-/common-2.5.0.tgz",
      "integrity": "sha512-DEHjW6e38o+JmB/NO3GZBpW4lpaiBpkFgXF6jLcJ6gETBYpEyaA5nTimsWBUJR3Vmtm/didUEbNjajskugZORg==",
      "dependencies": {
        "crc-32": "^1.2.0",
        "ethereumjs-util": "^7.1.1"
      }
    },
    "node_modules/@ethereumjs/tx": {
      "version": "3.3.2",
      "resolved": "https://registry.npmjs.org/@ethereumjs/tx/-/tx-3.3.2.tgz",
      "integrity": "sha512-6AaJhwg4ucmwTvw/1qLaZUX5miWrwZ4nLOUsKyb/HtzS3BMw/CasKhdi1ims9mBKeK9sOJCH4qGKOBGyJCeeog==",
      "dependencies": {
        "@ethereumjs/common": "^2.5.0",
        "ethereumjs-util": "^7.1.2"
      }
    },
    "node_modules/@ethersproject/abi": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/abi/-/abi-5.7.0.tgz",
      "integrity": "sha512-351ktp42TiRcYB3H1OP8yajPeAQstMW/yCFokj/AthP9bLHzQFPlOrxOcwYEDkUAICmOHljvN4K39OMTMUa9RA==",
      "funding": [
        {
          "type": "individual",
          "url": "https://gitcoin.co/grants/13/ethersjs-complete-simple-and-tiny-2"
        },
        {
          "type": "individual",
          "url": "https://www.buymeacoffee.com/ricmoo"
        }
      ],
      "dependencies": {
        "@ethersproject/address": "^5.7.0",
        "@ethersproject/bignumber": "^5.7.0",
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/constants": "^5.7.0",
        "@ethersproject/hash": "^5.7.0",
        "@ethersproject/keccak256": "^5.7.0",
        "@ethersproject/logger": "^5.7.0",
        "@ethersproject/properties": "^5.7.0",
        "@ethersproject/strings": "^5.7.0"
      }
    },
    "node_modules/@ethersproject/abstract-provider": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/abstract-provider/-/abstract-provider-5.7.0.tgz",
      "integrity": "sha512-R41c9UkchKCpAqStMYUpdunjo3pkEvZC3FAwZn5S5MGbXoMQOHIdHItezTETxAO5bevtMApSyEhn9+CHcDsWBw==",
      "funding": [
        {
          "type": "individual",
          "url": "https://gitcoin.co/grants/13/ethersjs-complete-simple-and-tiny-2"
        },
        {
          "type": "individual",
          "url": "https://www.buymeacoffee.com/ricmoo"
        }
      ],
      "dependencies": {
        "@ethersproject/bignumber": "^5.7.0",
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/logger": "^5.7.0",
        "@ethersproject/networks": "^5.7.0",
        "@ethersproject/properties": "^5.7.0",
        "@ethersproject/transactions": "^5.7.0",
        "@ethersproject/web": "^5.7.0"
      }
    },
    "node_modules/@ethersproject/abstract-signer": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/abstract-signer/-/abstract-signer-5.7.0.tgz",
      "integrity": "sha512-a16V8bq1/Cz+TGCkE2OPMTOUDLS3grCpdjoJCYNnVBbdYEMSgKrU0+B90s8b6H+ByYTBZN7a3g76jdIJi7UfKQ==",
      "funding": [
        {
          "type": "individual",
          "url": "https://gitcoin.co/grants/13/ethersjs-complete-simple-and-tiny-2"
        },
        {
          "type": "individual",
          "url": "https://www.buymeacoffee.com/ricmoo"
        }
      ],
      "dependencies": {
        "@ethersproject/abstract-provider": "^5.7.0",
        "@ethersproject/bignumber": "^5.7.0",
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/logger": "^5.7.0",
        "@ethersproject/properties": "^5.7.0"
      }
    },
    "node_modules/@ethersproject/address": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/address/-/address-5.7.0.tgz",
      "integrity": "sha512-9wYhYt7aghVGo758POM5nqcOMaE168Q6aRLJZwUmiqSrAungkG74gSSeKEIR7ukixesdRZGPgVqme6vmxs1fkA==",
      "funding": [
        {
          "type": "individual",
          "url": "https://gitcoin.co/grants/13/ethersjs-complete-simple-and-tiny-2"
        },
        {
          "type": "individual",
          "url": "https://www.buymeacoffee.com/ricmoo"
        }
      ],
      "dependencies": {
        "@ethersproject/bignumber": "^5.7.0",
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/keccak256": "^5.7.0",
        "@ethersproject/logger": "^5.7.0",
        "@ethersproject/rlp": "^5.7.0"
      }
    },
    "node_modules/@ethersproject/base64": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/base64/-/base64-5.7.0.tgz",
      "integrity": "sha512-Dr8tcHt2mEbsZr/mwTPIQAf3Ai0Bks/7gTw9dSqk1mQvhW3XvRlmDJr/4n+wg1JmCl16NZue17CDh8xb/vZ0sQ==",
      "funding": [
        {
          "type": "individual",
          "url": "https://gitcoin.co/grants/13/ethersjs-complete-simple-and-tiny-2"
        },
        {
          "type": "individual",
          "url": "https://www.buymeacoffee.com/ricmoo"
        }
      ],
      "dependencies": {
        "@ethersproject/bytes": "^5.7.0"
      }
    },
    "node_modules/@ethersproject/basex": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/basex/-/basex-5.7.0.tgz",
      "integrity": "sha512-ywlh43GwZLv2Voc2gQVTKBoVQ1mti3d8HK5aMxsfu/nRDnMmNqaSJ3r3n85HBByT8OpoY96SXM1FogC533T4zw==",
      "funding": [
        {
          "type": "individual",
          "url": "https://gitcoin.co/grants/13/ethersjs-complete-simple-and-tiny-2"
        },
        {
          "type": "individual",
          "url": "https://www.buymeacoffee.com/ricmoo"
        }
      ],
      "dependencies": {
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/properties": "^5.7.0"
      }
    },
    "node_modules/@ethersproject/bignumber": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/bignumber/-/bignumber-5.7.0.tgz",
      "integrity": "sha512-n1CAdIHRWjSucQO3MC1zPSVgV/6dy/fjL9pMrPP9peL+QxEg9wOsVqwD4+818B6LUEtaXzVHQiuivzRoxPxUGw==",
      "funding": [
        {
          "type": "individual",
          "url": "https://gitcoin.co/grants/13/ethersjs-complete-simple-and-tiny-2"
        },
        {
          "type": "individual",
          "url": "https://www.buymeacoffee.com/ricmoo"
        }
      ],
      "dependencies": {
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/logger": "^5.7.0",
        "bn.js": "^5.2.1"
      }
    },
    "node_modules/@ethersproject/bytes": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/bytes/-/bytes-5.7.0.tgz",
      "integrity": "sha512-nsbxwgFXWh9NyYWo+U8atvmMsSdKJprTcICAkvbBffT75qDocbuggBU0SJiVK2MuTrp0q+xvLkTnGMPK1+uA9A==",
      "funding": [
        {
          "type": "individual",
          "url": "https://gitcoin.co/grants/13/ethersjs-complete-simple-and-tiny-2"
        },
        {
          "type": "individual",
          "url": "https://www.buymeacoffee.com/ricmoo"
        }
      ],
      "dependencies": {
        "@ethersproject/logger": "^5.7.0"
      }
    },
    "node_modules/@ethersproject/constants": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/constants/-/constants-5.7.0.tgz",
      "integrity": "sha512-DHI+y5dBNvkpYUMiRQyxRBYBefZkJfo70VUkUAsRjcPs47muV9evftfZ0PJVCXYbAiCgght0DtcF9srFQmIgWA==",
      "funding": [
        {
          "type": "individual",
          "url": "https://gitcoin.co/grants/13/ethersjs-complete-simple-and-tiny-2"
        },
        {
          "type": "individual",
          "url": "https://www.buymeacoffee.com/ricmoo"
        }
      ],
      "dependencies": {
        "@ethersproject/bignumber": "^5.7.0"
      }
    },
    "node_modules/@ethersproject/contracts": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/contracts/-/contracts-5.7.0.tgz",
      "integrity": "sha512-5GJbzEU3X+d33CdfPhcyS+z8MzsTrBGk/sc+G+59+tPa9yFkl6HQ9D6L0QMgNTA9q8dT0XKxxkyp883XsQvbbg==",
      "funding": [
        {
          "type": "individual",
          "url": "https://gitcoin.co/grants/13/ethersjs-complete-simple-and-tiny-2"
        },
        {
          "type": "individual",
          "url": "https://www.buymeacoffee.com/ricmoo"
        }
      ],
      "dependencies": {
        "@ethersproject/abi": "^5.7.0",
        "@ethersproject/abstract-provider": "^5.7.0",
        "@ethersproject/abstract-signer": "^5.7.0",
        "@ethersproject/address": "^5.7.0",
        "@ethersproject/bignumber": "^5.7.0",
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/constants": "^5.7.0",
        "@ethersproject/logger": "^5.7.0",
        "@ethersproject/properties": "^5.7.0",
        "@ethersproject/transactions": "^5.7.0"
      }
    },
    "node_modules/@ethersproject/hash": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/hash/-/hash-5.7.0.tgz",
      "integrity": "sha512-qX5WrQfnah1EFnO5zJv1v46a8HW0+E5xuBBDTwMFZLuVTx0tbU2kkx15NqdjxecrLGatQN9FGQKpb1FKdHCt+g==",
      "funding": [
        {
          "type": "individual",
          "url": "https://gitcoin.co/grants/13/ethersjs-complete-simple-and-tiny-2"
        },
        {
          "type": "individual",
          "url": "https://www.buymeacoffee.com/ricmoo"
        }
      ],
      "dependencies": {
        "@ethersproject/abstract-signer": "^5.7.0",
        "@ethersproject/address": "^5.7.0",
        "@ethersproject/base64": "^5.7.0",
        "@ethersproject/bignumber": "^5.7.0",
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/keccak256": "^5.7.0",
        "@ethersproject/logger": "^5.7.0",
        "@ethersproject/properties": "^5.7.0",
        "@ethersproject/strings": "^5.7.0"
      }
    },
    "node_modules/@ethersproject/hdnode": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/hdnode/-/hdnode-5.7.0.tgz",
      "integrity": "sha512-OmyYo9EENBPPf4ERhR7oj6uAtUAhYGqOnIS+jE5pTXvdKBS99ikzq1E7Iv0ZQZ5V36Lqx1qZLeak0Ra16qpeOg==",
      "funding": [
        {
          "type": "individual",
          "url": "https://gitcoin.co/grants/13/ethersjs-complete-simple-and-tiny-2"
        },
        {
          "type": "individual",
          "url": "https://www.buymeacoffee.com/ricmoo"
        }
      ],
      "dependencies": {
        "@ethersproject/abstract-signer": "^5.7.0",
        "@ethersproject/basex": "^5.7.0",
        "@ethersproject/bignumber": "^5.7.0",
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/logger": "^5.7.0",
        "@ethersproject/pbkdf2": "^5.7.0",
        "@ethersproject/properties": "^5.7.0",
        "@ethersproject/sha2": "^5.7.0",
        "@ethersproject/signing-key": "^5.7.0",
        "@ethersproject/strings": "^5.7.0",
        "@ethersproject/transactions": "^5.7.0",
        "@ethersproject/wordlists": "^5.7.0"
      }
    },
    "node_modules/@ethersproject/json-wallets": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/json-wallets/-/json-wallets-5.7.0.tgz",
      "integrity": "sha512-8oee5Xgu6+RKgJTkvEMl2wDgSPSAQ9MB/3JYjFV9jlKvcYHUXZC+cQp0njgmxdHkYWn8s6/IqIZYm0YWCjO/0g==",
      "funding": [
        {
          "type": "individual",
          "url": "https://gitcoin.co/grants/13/ethersjs-complete-simple-and-tiny-2"
        },
        {
          "type": "individual",
          "url": "https://www.buymeacoffee.com/ricmoo"
        }
      ],
      "dependencies": {
        "@ethersproject/abstract-signer": "^5.7.0",
        "@ethersproject/address": "^5.7.0",
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/hdnode": "^5.7.0",
        "@ethersproject/keccak256": "^5.7.0",
        "@ethersproject/logger": "^5.7.0",
        "@ethersproject/pbkdf2": "^5.7.0",
        "@ethersproject/properties": "^5.7.0",
        "@ethersproject/random": "^5.7.0",
        "@ethersproject/strings": "^5.7.0",
        "@ethersproject/transactions": "^5.7.0",
        "aes-js": "3.0.0",
        "scrypt-js": "3.0.1"
      }
    },
    "node_modules/@ethersproject/keccak256": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/keccak256/-/keccak256-5.7.0.tgz",
      "integrity": "sha512-2UcPboeL/iW+pSg6vZ6ydF8tCnv3Iu/8tUmLLzWWGzxWKFFqOBQFLo6uLUv6BDrLgCDfN28RJ/wtByx+jZ4KBg==",
      "funding": [
        {
          "type": "individual",
          "url": "https://gitcoin.co/grants/13/ethersjs-complete-simple-and-tiny-2"
        },
        {
          "type": "individual",
          "url": "https://www.buymeacoffee.com/ricmoo"
        }
      ],
      "dependencies": {
        "@ethersproject/bytes": "^5.7.0",
        "js-sha3": "0.8.0"
      }
    },
    "node_modules/@ethersproject/logger": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/logger/-/logger-5.7.0.tgz",
      "integrity": "sha512-0odtFdXu/XHtjQXJYA3u9G0G8btm0ND5Cu8M7i5vhEcE8/HmF4Lbdqanwyv4uQTr2tx6b7fQRmgLrsnpQlmnig==",
      "funding": [
        {
          "type": "individual",
          "url": "https://gitcoin.co/grants/13/ethersjs-complete-simple-and-tiny-2"
        },
        {
          "type": "individual",
          "url": "https://www.buymeacoffee.com/ricmoo"
        }
      ]
    },
    "node_modules/@ethersproject/networks": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/@ethersproject/networks/-/networks-5.7.1.tgz",
      "integrity": "sha512-n/MufjFYv3yFcUyfhnXotyDlNdFb7onmkSy8aQERi2PjNcnWQ66xXxa3XlS8nCcA8aJKJjIIMNJTC7tu80GwpQ==",
      "funding": [
        {
          "type": "individual",
          "url": "https://gitcoin.co/grants/13/ethersjs-complete-simple-and-tiny-2"
        },
        {
          "type": "individual",
          "url": "https://www.buymeacoffee.com/ricmoo"
        }
      ],
      "dependencies": {
        "@ethersproject/logger": "^5.7.0"
      }
    },
    "node_modules/@ethersproject/pbkdf2": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/pbkdf2/-/pbkdf2-5.7.0.tgz",
      "integrity": "sha512-oR/dBRZR6GTyaofd86DehG72hY6NpAjhabkhxgr3X2FpJtJuodEl2auADWBZfhDHgVCbu3/H/Ocq2uC6dpNjjw==",
      "funding": [
        {
          "type": "individual",
          "url": "https://gitcoin.co/grants/13/ethersjs-complete-simple-and-tiny-2"
        },
        {
          "type": "individual",
          "url": "https://www.buymeacoffee.com/ricmoo"
        }
      ],
      "dependencies": {
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/sha2": "^5.7.0"
      }
    },
    "node_modules/@ethersproject/properties": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/properties/-/properties-5.7.0.tgz",
      "integrity": "sha512-J87jy8suntrAkIZtecpxEPxY//szqr1mlBaYlQ0r4RCaiD2hjheqF9s1LVE8vVuJCXisjIP+JgtK/Do54ej4Sw==",
      "funding": [
        {
          "type": "individual",
          "url": "https://gitcoin.co/grants/13/ethersjs-complete-simple-and-tiny-2"
        },
        {
          "type": "individual",
          "url": "https://www.buymeacoffee.com/ricmoo"
        }
      ],
      "dependencies": {
        "@ethersproject/logger": "^5.7.0"
      }
    },
    "node_modules/@ethersproject/providers": {
      "version": "5.7.2",
      "resolved": "https://registry.npmjs.org/@ethersproject/providers/-/providers-5.7.2.tgz",
      "integrity": "sha512-g34EWZ1WWAVgr4aptGlVBF8mhl3VWjv+8hoAnzStu8Ah22VHBsuGzP17eb6xDVRzw895G4W7vvx60lFFur/1Rg==",
      "funding": [
        {
          "type": "individual",
          "url": "https://gitcoin.co/grants/13/ethersjs-complete-simple-and-tiny-2"
        },
        {
          "type": "individual",
          "url": "https://www.buymeacoffee.com/ricmoo"
        }
      ],
      "dependencies": {
        "@ethersproject/abstract-provider": "^5.7.0",
        "@ethersproject/abstract-signer": "^5.7.0",
        "@ethersproject/address": "^5.7.0",
        "@ethersproject/base64": "^5.7.0",
        "@ethersproject/basex": "^5.7.0",
        "@ethersproject/bignumber": "^5.7.0",
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/constants": "^5.7.0",
        "@ethersproject/hash": "^5.7.0",
        "@ethersproject/logger": "^5.7.0",
        "@ethersproject/networks": "^5.7.0",
        "@ethersproject/properties": "^5.7.0",
        "@ethersproject/random": "^5.7.0",
        "@ethersproject/rlp": "^5.7.0",
        "@ethersproject/sha2": "^5.7.0",
        "@ethersproject/strings": "^5.7.0",
        "@ethersproject/transactions": "^5.7.0",
        "@ethersproject/web": "^5.7.0",
        "bech32": "1.1.4",
        "ws": "7.4.6"
      }
    },
    "node_modules/@ethersproject/providers/node_modules/bech32": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/bech32/-/bech32-1.1.4.tgz",
      "integrity": "sha512-s0IrSOzLlbvX7yp4WBfPITzpAU8sqQcpsmwXDiKwrG4r491vwCO/XpejasRNl0piBMe/DvP4Tz0mIS/X1DPJBQ=="
    },
    "node_modules/@ethersproject/random": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/random/-/random-5.7.0.tgz",
      "integrity": "sha512-19WjScqRA8IIeWclFme75VMXSBvi4e6InrUNuaR4s5pTF2qNhcGdCUwdxUVGtDDqC00sDLCO93jPQoDUH4HVmQ==",
      "funding": [
        {
          "type": "individual",
          "url": "https://gitcoin.co/grants/13/ethersjs-complete-simple-and-tiny-2"
        },
        {
          "type": "individual",
          "url": "https://www.buymeacoffee.com/ricmoo"
        }
      ],
      "dependencies": {
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/logger": "^5.7.0"
      }
    },
    "node_modules/@ethersproject/rlp": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/rlp/-/rlp-5.7.0.tgz",
      "integrity": "sha512-rBxzX2vK8mVF7b0Tol44t5Tb8gomOHkj5guL+HhzQ1yBh/ydjGnpw6at+X6Iw0Kp3OzzzkcKp8N9r0W4kYSs9w==",
      "funding": [
        {
          "type": "individual",
          "url": "https://gitcoin.co/grants/13/ethersjs-complete-simple-and-tiny-2"
        },
        {
          "type": "individual",
          "url": "https://www.buymeacoffee.com/ricmoo"
        }
      ],
      "dependencies": {
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/logger": "^5.7.0"
      }
    },
    "node_modules/@ethersproject/sha2": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/sha2/-/sha2-5.7.0.tgz",
      "integrity": "sha512-gKlH42riwb3KYp0reLsFTokByAKoJdgFCwI+CCiX/k+Jm2mbNs6oOaCjYQSlI1+XBVejwH2KrmCbMAT/GnRDQw==",
      "funding": [
        {
          "type": "individual",
          "url": "https://gitcoin.co/grants/13/ethersjs-complete-simple-and-tiny-2"
        },
        {
          "type": "individual",
          "url": "https://www.buymeacoffee.com/ricmoo"
        }
      ],
      "dependencies": {
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/logger": "^5.7.0",
        "hash.js": "1.1.7"
      }
    },
    "node_modules/@ethersproject/signing-key": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/signing-key/-/signing-key-5.7.0.tgz",
      "integrity": "sha512-MZdy2nL3wO0u7gkB4nA/pEf8lu1TlFswPNmy8AiYkfKTdO6eXBJyUdmHO/ehm/htHw9K/qF8ujnTyUAD+Ry54Q==",
      "funding": [
        {
          "type": "individual",
          "url": "https://gitcoin.co/grants/13/ethersjs-complete-simple-and-tiny-2"
        },
        {
          "type": "individual",
          "url": "https://www.buymeacoffee.com/ricmoo"
        }
      ],
      "dependencies": {
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/logger": "^5.7.0",
        "@ethersproject/properties": "^5.7.0",
        "bn.js": "^5.2.1",
        "elliptic": "6.5.4",
        "hash.js": "1.1.7"
      }
    },
    "node_modules/@ethersproject/solidity": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/solidity/-/solidity-5.7.0.tgz",
      "integrity": "sha512-HmabMd2Dt/raavyaGukF4XxizWKhKQ24DoLtdNbBmNKUOPqwjsKQSdV9GQtj9CBEea9DlzETlVER1gYeXXBGaA==",
      "funding": [
        {
          "type": "individual",
          "url": "https://gitcoin.co/grants/13/ethersjs-complete-simple-and-tiny-2"
        },
        {
          "type": "individual",
          "url": "https://www.buymeacoffee.com/ricmoo"
        }
      ],
      "dependencies": {
        "@ethersproject/bignumber": "^5.7.0",
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/keccak256": "^5.7.0",
        "@ethersproject/logger": "^5.7.0",
        "@ethersproject/sha2": "^5.7.0",
        "@ethersproject/strings": "^5.7.0"
      }
    },
    "node_modules/@ethersproject/strings": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/strings/-/strings-5.7.0.tgz",
      "integrity": "sha512-/9nu+lj0YswRNSH0NXYqrh8775XNyEdUQAuf3f+SmOrnVewcJ5SBNAjF7lpgehKi4abvNNXyf+HX86czCdJ8Mg==",
      "funding": [
        {
          "type": "individual",
          "url": "https://gitcoin.co/grants/13/ethersjs-complete-simple-and-tiny-2"
        },
        {
          "type": "individual",
          "url": "https://www.buymeacoffee.com/ricmoo"
        }
      ],
      "dependencies": {
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/constants": "^5.7.0",
        "@ethersproject/logger": "^5.7.0"
      }
    },
    "node_modules/@ethersproject/transactions": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/transactions/-/transactions-5.7.0.tgz",
      "integrity": "sha512-kmcNicCp1lp8qanMTC3RIikGgoJ80ztTyvtsFvCYpSCfkjhD0jZ2LOrnbcuxuToLIUYYf+4XwD1rP+B/erDIhQ==",
      "funding": [
        {
          "type": "individual",
          "url": "https://gitcoin.co/grants/13/ethersjs-complete-simple-and-tiny-2"
        },
        {
          "type": "individual",
          "url": "https://www.buymeacoffee.com/ricmoo"
        }
      ],
      "dependencies": {
        "@ethersproject/address": "^5.7.0",
        "@ethersproject/bignumber": "^5.7.0",
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/constants": "^5.7.0",
        "@ethersproject/keccak256": "^5.7.0",
        "@ethersproject/logger": "^5.7.0",
        "@ethersproject/properties": "^5.7.0",
        "@ethersproject/rlp": "^5.7.0",
        "@ethersproject/signing-key": "^5.7.0"
      }
    },
    "node_modules/@ethersproject/units": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/units/-/units-5.7.0.tgz",
      "integrity": "sha512-pD3xLMy3SJu9kG5xDGI7+xhTEmGXlEqXU4OfNapmfnxLVY4EMSSRp7j1k7eezutBPH7RBN/7QPnwR7hzNlEFeg==",
      "funding": [
        {
          "type": "individual",
          "url": "https://gitcoin.co/grants/13/ethersjs-complete-simple-and-tiny-2"
        },
        {
          "type": "individual",
          "url": "https://www.buymeacoffee.com/ricmoo"
        }
      ],
      "dependencies": {
        "@ethersproject/bignumber": "^5.7.0",
        "@ethersproject/constants": "^5.7.0",
        "@ethersproject/logger": "^5.7.0"
      }
    },
    "node_modules/@ethersproject/wallet": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/wallet/-/wallet-5.7.0.tgz",
      "integrity": "sha512-MhmXlJXEJFBFVKrDLB4ZdDzxcBxQ3rLyCkhNqVu3CDYvR97E+8r01UgrI+TI99Le+aYm/in/0vp86guJuM7FCA==",
      "funding": [
        {
          "type": "individual",
          "url": "https://gitcoin.co/grants/13/ethersjs-complete-simple-and-tiny-2"
        },
        {
          "type": "individual",
          "url": "https://www.buymeacoffee.com/ricmoo"
        }
      ],
      "dependencies": {
        "@ethersproject/abstract-provider": "^5.7.0",
        "@ethersproject/abstract-signer": "^5.7.0",
        "@ethersproject/address": "^5.7.0",
        "@ethersproject/bignumber": "^5.7.0",
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/hash": "^5.7.0",
        "@ethersproject/hdnode": "^5.7.0",
        "@ethersproject/json-wallets": "^5.7.0",
        "@ethersproject/keccak256": "^5.7.0",
        "@ethersproject/logger": "^5.7.0",
        "@ethersproject/properties": "^5.7.0",
        "@ethersproject/random": "^5.7.0",
        "@ethersproject/signing-key": "^5.7.0",
        "@ethersproject/transactions": "^5.7.0",
        "@ethersproject/wordlists": "^5.7.0"
      }
    },
    "node_modules/@ethersproject/web": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/@ethersproject/web/-/web-5.7.1.tgz",
      "integrity": "sha512-Gueu8lSvyjBWL4cYsWsjh6MtMwM0+H4HvqFPZfB6dV8ctbP9zFAO73VG1cMWae0FLPCtz0peKPpZY8/ugJJX2w==",
      "funding": [
        {
          "type": "individual",
          "url": "https://gitcoin.co/grants/13/ethersjs-complete-simple-and-tiny-2"
        },
        {
          "type": "individual",
          "url": "https://www.buymeacoffee.com/ricmoo"
        }
      ],
      "dependencies": {
        "@ethersproject/base64": "^5.7.0",
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/logger": "^5.7.0",
        "@ethersproject/properties": "^5.7.0",
        "@ethersproject/strings": "^5.7.0"
      }
    },
    "node_modules/@ethersproject/wordlists": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/wordlists/-/wordlists-5.7.0.tgz",
      "integrity": "sha512-S2TFNJNfHWVHNE6cNDjbVlZ6MgE17MIxMbMg2zv3wn+3XSJGosL1m9ZVv3GXCf/2ymSsQ+hRI5IzoMJTG6aoVA==",
      "funding": [
        {
          "type": "individual",
          "url": "https://gitcoin.co/grants/13/ethersjs-complete-simple-and-tiny-2"
        },
        {
          "type": "individual",
          "url": "https://www.buymeacoffee.com/ricmoo"
        }
      ],
      "dependencies": {
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/hash": "^5.7.0",
        "@ethersproject/logger": "^5.7.0",
        "@ethersproject/properties": "^5.7.0",
        "@ethersproject/strings": "^5.7.0"
      }
    },
    "node_modules/@hypnosphi/create-react-context": {
      "version": "0.3.1",
      "resolved": "https://registry.npmjs.org/@hypnosphi/create-react-context/-/create-react-context-0.3.1.tgz",
      "integrity": "sha512-V1klUed202XahrWJLLOT3EXNeCpFHCcJntdFGI15ntCwau+jfT386w7OFTMaCqOgXUH1fa0w/I1oZs+i/Rfr0A==",
      "dependencies": {
        "gud": "^1.0.0",
        "warning": "^4.0.3"
      },
      "peerDependencies": {
        "prop-types": "^15.0.0",
        "react": ">=0.14.0"
      }
    },
    "node_modules/@isaacs/cliui": {
      "version": "8.0.2",
      "resolved": "https://registry.npmjs.org/@isaacs/cliui/-/cliui-8.0.2.tgz",
      "integrity": "sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==",
      "dependencies": {
        "string-width": "^5.1.2",
        "string-width-cjs": "npm:string-width@^4.2.0",
        "strip-ansi": "^7.0.1",
        "strip-ansi-cjs": "npm:strip-ansi@^6.0.1",
        "wrap-ansi": "^8.1.0",
        "wrap-ansi-cjs": "npm:wrap-ansi@^7.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@isaacs/cliui/node_modules/ansi-regex": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.0.1.tgz",
      "integrity": "sha512-n5M855fKb2SsfMIiFFoVrABHJC8QtHwVx+mHWP3QcEqBHYienj5dHSgjbxtC0WEZXYt4wcD6zrQElDPhFuZgfA==",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-regex?sponsor=1"
      }
    },
    "node_modules/@isaacs/cliui/node_modules/ansi-styles": {
      "version": "6.2.1",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.2.1.tgz",
      "integrity": "sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/@isaacs/cliui/node_modules/emoji-regex": {
      "version": "9.2.2",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz",
      "integrity": "sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg=="
    },
    "node_modules/@isaacs/cliui/node_modules/string-width": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz",
      "integrity": "sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==",
      "dependencies": {
        "eastasianwidth": "^0.2.0",
        "emoji-regex": "^9.2.2",
        "strip-ansi": "^7.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/@isaacs/cliui/node_modules/strip-ansi": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz",
      "integrity": "sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==",
      "dependencies": {
        "ansi-regex": "^6.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/strip-ansi?sponsor=1"
      }
    },
    "node_modules/@isaacs/cliui/node_modules/wrap-ansi": {
      "version": "8.1.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-8.1.0.tgz",
      "integrity": "sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==",
      "dependencies": {
        "ansi-styles": "^6.1.0",
        "string-width": "^5.0.1",
        "strip-ansi": "^7.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/@jridgewell/gen-mapping": {
      "version": "0.3.3",
      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.3.tgz",
      "integrity": "sha512-HLhSWOLRi875zjjMG/r+Nv0oCW8umGb0BgEhyX3dDX3egwZtB8PqLnjz3yedt8R5StBrzcg4aBpnh8UA9D1BoQ==",
      "dependencies": {
        "@jridgewell/set-array": "^1.0.1",
        "@jridgewell/sourcemap-codec": "^1.4.10",
        "@jridgewell/trace-mapping": "^0.3.9"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/resolve-uri": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.0.tgz",
      "integrity": "sha512-F2msla3tad+Mfht5cJq7LSXcdudKTWCVYUgw6pLFOOHSTtZlj6SWNYAp+AhuqLmWdBO2X5hPrLcu8cVP8fy28w==",
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/set-array": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.1.2.tgz",
      "integrity": "sha512-xnkseuNADM0gt2bs+BvhO0p78Mk762YnZdsuzFV018NoG1Sj1SCQvpSqa7XUaTam5vAGasABV9qXASMKnFMwMw==",
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/sourcemap-codec": {
      "version": "1.4.14",
      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.4.14.tgz",
      "integrity": "sha512-XPSJHWmi394fuUuzDnGz1wiKqWfo1yXecHQMRf2l6hztTO+nPru658AyDngaBe7isIxEkRsPR3FZh+s7iVa4Uw=="
    },
    "node_modules/@jridgewell/trace-mapping": {
      "version": "0.3.9",
      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.9.tgz",
      "integrity": "sha512-3Belt6tdc8bPgAtbcmdtNJlirVoTmEb5e2gC94PnkwEW9jI6CAHUeoG85tjWP5WquqfavoMtMwiG4P926ZKKuQ==",
      "dependencies": {
        "@jridgewell/resolve-uri": "^3.0.3",
        "@jridgewell/sourcemap-codec": "^1.4.10"
      }
    },
    "node_modules/@jsdevtools/ono": {
      "version": "7.1.3",
      "resolved": "https://registry.npmjs.org/@jsdevtools/ono/-/ono-7.1.3.tgz",
      "integrity": "sha512-4JQNk+3mVzK3xh2rqd6RB4J46qUR19azEHBneZyTZM+c456qOrbbM/5xcR8huNCCcbVt7+UmizG6GuUvPvKUYg=="
    },
    "node_modules/@metamask/eth-sig-util": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/@metamask/eth-sig-util/-/eth-sig-util-4.0.1.tgz",
      "integrity": "sha512-tghyZKLHZjcdlDqCA3gNZmLeR0XvOE9U1qoQO9ohyAZT6Pya+H9vkBPcsyXytmYLNgVoin7CKCmweo/R43V+tQ==",
      "dependencies": {
        "ethereumjs-abi": "^0.6.8",
        "ethereumjs-util": "^6.2.1",
        "ethjs-util": "^0.1.6",
        "tweetnacl": "^1.0.3",
        "tweetnacl-util": "^0.15.1"
      },
      "engines": {
        "node": ">=12.0.0"
      }
    },
    "node_modules/@metamask/eth-sig-util/node_modules/@types/bn.js": {
      "version": "4.11.6",
      "resolved": "https://registry.npmjs.org/@types/bn.js/-/bn.js-4.11.6.tgz",
      "integrity": "sha512-pqr857jrp2kPuO9uRjZ3PwnJTjoQy+fcdxvBTvHm6dkmEL9q+hDD/2j/0ELOBPtPnS8LjCX0gI9nbl8lVkadpg==",
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@metamask/eth-sig-util/node_modules/bn.js": {
      "version": "4.12.0",
      "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz",
      "integrity": "sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA=="
    },
    "node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util": {
      "version": "6.2.1",
      "resolved": "https://registry.npmjs.org/ethereumjs-util/-/ethereumjs-util-6.2.1.tgz",
      "integrity": "sha512-W2Ktez4L01Vexijrm5EB6w7dg4n/TgpoYU4avuT5T3Vmnw/eCRtiBrJfQYS/DCSvDIOLn2k57GcHdeBcgVxAqw==",
      "dependencies": {
        "@types/bn.js": "^4.11.3",
        "bn.js": "^4.11.0",
        "create-hash": "^1.1.2",
        "elliptic": "^6.5.2",
        "ethereum-cryptography": "^0.1.3",
        "ethjs-util": "0.1.6",
        "rlp": "^2.2.3"
      }
    },
    "node_modules/@near-wallet-selector/core": {
      "version": "7.9.0",
      "resolved": "https://registry.npmjs.org/@near-wallet-selector/core/-/core-7.9.0.tgz",
      "integrity": "sha512-VbHNdO1yRILsgjrX3Qxg5C3oJZpC3f1PjHLY0h37FXRBTIyVEycMl+8qVaBHck5j8FIOJMfyS9d6tC+TKRp7Og==",
      "dependencies": {
        "rxjs": "^7.8.0"
      },
      "peerDependencies": {
        "near-api-js": "^0.44.2 || ^1.0.0"
      }
    },
    "node_modules/@noble/hashes": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@noble/hashes/-/hashes-1.2.0.tgz",
      "integrity": "sha512-FZfhjEDbT5GRswV3C6uvLPHMiVD6lQBmpoX5+eSiPaMTXte/IKqI5dykDxzZB/WBeK/CDuQRBWarPdi3FNY2zQ==",
      "funding": [
        {
          "type": "individual",
          "url": "https://paulmillr.com/funding/"
        }
      ]
    },
    "node_modules/@otplib/core": {
      "version": "12.0.1",
      "resolved": "https://registry.npmjs.org/@otplib/core/-/core-12.0.1.tgz",
      "integrity": "sha512-4sGntwbA/AC+SbPhbsziRiD+jNDdIzsZ3JUyfZwjtKyc/wufl1pnSIaG4Uqx8ymPagujub0o92kgBnB89cuAMA=="
    },
    "node_modules/@otplib/plugin-crypto": {
      "version": "12.0.1",
      "resolved": "https://registry.npmjs.org/@otplib/plugin-crypto/-/plugin-crypto-12.0.1.tgz",
      "integrity": "sha512-qPuhN3QrT7ZZLcLCyKOSNhuijUi9G5guMRVrxq63r9YNOxxQjPm59gVxLM+7xGnHnM6cimY57tuKsjK7y9LM1g==",
      "dependencies": {
        "@otplib/core": "^12.0.1"
      }
    },
    "node_modules/@otplib/plugin-thirty-two": {
      "version": "12.0.1",
      "resolved": "https://registry.npmjs.org/@otplib/plugin-thirty-two/-/plugin-thirty-two-12.0.1.tgz",
      "integrity": "sha512-MtT+uqRso909UkbrrYpJ6XFjj9D+x2Py7KjTO9JDPhL0bJUYVu5kFP4TFZW4NFAywrAtFRxOVY261u0qwb93gA==",
      "dependencies": {
        "@otplib/core": "^12.0.1",
        "thirty-two": "^1.0.2"
      }
    },
    "node_modules/@otplib/preset-default": {
      "version": "12.0.1",
      "resolved": "https://registry.npmjs.org/@otplib/preset-default/-/preset-default-12.0.1.tgz",
      "integrity": "sha512-xf1v9oOJRyXfluBhMdpOkr+bsE+Irt+0D5uHtvg6x1eosfmHCsCC6ej/m7FXiWqdo0+ZUI6xSKDhJwc8yfiOPQ==",
      "dependencies": {
        "@otplib/core": "^12.0.1",
        "@otplib/plugin-crypto": "^12.0.1",
        "@otplib/plugin-thirty-two": "^12.0.1"
      }
    },
    "node_modules/@otplib/preset-v11": {
      "version": "12.0.1",
      "resolved": "https://registry.npmjs.org/@otplib/preset-v11/-/preset-v11-12.0.1.tgz",
      "integrity": "sha512-9hSetMI7ECqbFiKICrNa4w70deTUfArtwXykPUvSHWOdzOlfa9ajglu7mNCntlvxycTiOAXkQGwjQCzzDEMRMg==",
      "dependencies": {
        "@otplib/core": "^12.0.1",
        "@otplib/plugin-crypto": "^12.0.1",
        "@otplib/plugin-thirty-two": "^12.0.1"
      }
    },
    "node_modules/@paraswap/core": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/@paraswap/core/-/core-1.0.4.tgz",
      "integrity": "sha512-8/UkGJwftOFghSmeG1raSwEsXZTveVVo69duCNIWoeBbAj4vxy2KOJ5VugRkfvKbtNeDxR3MZ64QY5yqWYg82w=="
    },
    "node_modules/@paraswap/sdk": {
      "version": "6.2.0",
      "resolved": "https://registry.npmjs.org/@paraswap/sdk/-/sdk-6.2.0.tgz",
      "integrity": "sha512-tHl8jWP4mC7nEVyPXshsGXwXLbxFR5sYGW/O6Vs1J+oa6kBVr32EO632Hgs1Dg5j8dMN9CooZi/KAxep++DZ/A==",
      "dependencies": {
        "@paraswap/core": "^1.0.4",
        "bignumber.js": "^9.0.2",
        "ts-essentials": "^9.1.2"
      },
      "engines": {
        "node": ">=12"
      },
      "peerDependencies": {
        "axios": ">=0.25.0 <2.0.0",
        "ethers": "^5.5.0",
        "web3": "^1.7.1"
      },
      "peerDependenciesMeta": {
        "axios": {
          "optional": true
        },
        "ethers": {
          "optional": true
        },
        "web3": {
          "optional": true
        }
      }
    },
    "node_modules/@pkgjs/parseargs": {
      "version": "0.11.0",
      "resolved": "https://registry.npmjs.org/@pkgjs/parseargs/-/parseargs-0.11.0.tgz",
      "integrity": "sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==",
      "optional": true,
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/@react-icons/all-files": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/@react-icons/all-files/-/all-files-4.1.0.tgz",
      "integrity": "sha512-hxBI2UOuVaI3O/BhQfhtb4kcGn9ft12RWAFVMUeNjqqhLsHvFtzIkFaptBJpFDANTKoDfdVoHTKZDlwKCACbMQ==",
      "peerDependencies": {
        "react": "*"
      }
    },
    "node_modules/@ref-finance/ref-sdk": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@ref-finance/ref-sdk/-/ref-sdk-1.2.0.tgz",
      "integrity": "sha512-sGcVxTooqV0PwRCK+qS0QFIZpxvnzc/pkZVV9ZSPgNBZLuR13MoGruQImZlSG+GV1+7UzMDqrcrLLuq4rkFlmQ==",
      "dependencies": {
        "@near-wallet-selector/core": "^7.0.0",
        "@react-icons/all-files": "^4.1.0",
        "@types/big.js": "^6.1.5",
        "@types/bn.js": "^5.1.1",
        "@types/lodash": "^4.14.182",
        "big.js": "^6.2.1",
        "bn.js": "^5.2.0",
        "lodash": "^4.17.21",
        "lodash-es": "^4.17.21",
        "mathjs": "^9.3.0",
        "near-api-js": "0.44.2"
      },
      "engines": {
        "node": ">=10"
      },
      "peerDependencies": {
        "react": ">=16"
      }
    },
    "node_modules/@ref-finance/ref-sdk/node_modules/bn.js": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-5.2.0.tgz",
      "integrity": "sha512-D7iWRBvnZE8ecXiLj/9wbxH7Tk79fAh8IHaTNq1RWRixsS02W+5qS+iE9yq6RYl0asXx5tw0bLhmT5pIfbSquw=="
    },
    "node_modules/@ref-finance/ref-sdk/node_modules/borsh": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/borsh/-/borsh-0.6.0.tgz",
      "integrity": "sha512-sl5k89ViqsThXQpYa9XDtz1sBl3l1lI313cFUY1HKr+wvMILnb+58xpkqTNrYbelh99dY7K8usxoCusQmqix9Q==",
      "dependencies": {
        "bn.js": "^5.2.0",
        "bs58": "^4.0.0",
        "text-encoding-utf-8": "^1.0.2"
      }
    },
    "node_modules/@ref-finance/ref-sdk/node_modules/http-errors": {
      "version": "1.8.1",
      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.8.1.tgz",
      "integrity": "sha512-Kpk9Sm7NmI+RHhnj6OIWDI1d6fIoFAtFt9RLaTMRlg/8w49juAStsrBgp0Dp4OdxdVbRIeKhtCUvoi/RuAhO4g==",
      "dependencies": {
        "depd": "~1.1.2",
        "inherits": "2.0.4",
        "setprototypeof": "1.2.0",
        "statuses": ">= 1.5.0 < 2",
        "toidentifier": "1.0.1"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/@ref-finance/ref-sdk/node_modules/http-errors/node_modules/depd": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/depd/-/depd-1.1.2.tgz",
      "integrity": "sha512-7emPTl6Dpo6JRXOXjLRxck+FlLRX5847cLKEn00PLAgc3g2hTZZgr+e4c2v6QpSmLeFP3n5yUo7ft6avBK/5jQ==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/@ref-finance/ref-sdk/node_modules/near-api-js": {
      "version": "0.44.2",
      "resolved": "https://registry.npmjs.org/near-api-js/-/near-api-js-0.44.2.tgz",
      "integrity": "sha512-eMnc4V+geggapEUa3nU2p8HSHn/njtloI4P2mceHQWO8vDE1NGpnAw8FuTBrLmXSgIv9m6oocgFc9t3VNf5zwg==",
      "dependencies": {
        "bn.js": "5.2.0",
        "borsh": "^0.6.0",
        "bs58": "^4.0.0",
        "depd": "^2.0.0",
        "error-polyfill": "^0.1.3",
        "http-errors": "^1.7.2",
        "js-sha256": "^0.9.0",
        "mustache": "^4.0.0",
        "node-fetch": "^2.6.1",
        "text-encoding-utf-8": "^1.0.2",
        "tweetnacl": "^1.0.1"
      }
    },
    "node_modules/@ref-finance/ref-sdk/node_modules/node-fetch": {
      "version": "2.6.11",
      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.11.tgz",
      "integrity": "sha512-4I6pdBY1EthSqDmJkiNk3JIT8cswwR9nfeW/cPdUagJYEQG7R95WRH74wpz7ma8Gh/9dI9FP+OU+0E4FvtA55w==",
      "dependencies": {
        "whatwg-url": "^5.0.0"
      },
      "engines": {
        "node": "4.x || >=6.0.0"
      },
      "peerDependencies": {
        "encoding": "^0.1.0"
      },
      "peerDependenciesMeta": {
        "encoding": {
          "optional": true
        }
      }
    },
    "node_modules/@ref-finance/ref-sdk/node_modules/statuses": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.5.0.tgz",
      "integrity": "sha512-OpZ3zP+jT1PI7I8nemJX4AKmAX070ZkYPVWV/AaKTJl+tXCTGyVdC1a4SL8RUQYEwk/f34ZX8UTykN68FwrqAA==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/@rollup/plugin-babel": {
      "version": "5.3.1",
      "resolved": "https://registry.npmjs.org/@rollup/plugin-babel/-/plugin-babel-5.3.1.tgz",
      "integrity": "sha512-WFfdLWU/xVWKeRQnKmIAQULUI7Il0gZnBIH/ZFO069wYIfPu+8zrfp/KMW0atmELoRDq8FbiP3VCss9MhCut7Q==",
      "dependencies": {
        "@babel/helper-module-imports": "^7.10.4",
        "@rollup/pluginutils": "^3.1.0"
      },
      "engines": {
        "node": ">= 10.0.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0",
        "@types/babel__core": "^7.1.9",
        "rollup": "^1.20.0||^2.0.0"
      },
      "peerDependenciesMeta": {
        "@types/babel__core": {
          "optional": true
        }
      }
    },
    "node_modules/@rollup/plugin-commonjs": {
      "version": "21.1.0",
      "resolved": "https://registry.npmjs.org/@rollup/plugin-commonjs/-/plugin-commonjs-21.1.0.tgz",
      "integrity": "sha512-6ZtHx3VHIp2ReNNDxHjuUml6ur+WcQ28N1yHgCQwsbNkQg2suhxGMDQGJOn/KuDxKtd1xuZP5xSTwBA4GQ8hbA==",
      "dependencies": {
        "@rollup/pluginutils": "^3.1.0",
        "commondir": "^1.0.1",
        "estree-walker": "^2.0.1",
        "glob": "^7.1.6",
        "is-reference": "^1.2.1",
        "magic-string": "^0.25.7",
        "resolve": "^1.17.0"
      },
      "engines": {
        "node": ">= 8.0.0"
      },
      "peerDependencies": {
        "rollup": "^2.38.3"
      }
    },
    "node_modules/@rollup/plugin-commonjs/node_modules/brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/@rollup/plugin-commonjs/node_modules/glob": {
      "version": "7.2.3",
      "resolved": "https://registry.npmjs.org/glob/-/glob-7.2.3.tgz",
      "integrity": "sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==",
      "dependencies": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^3.1.1",
        "once": "^1.3.0",
        "path-is-absolute": "^1.0.0"
      },
      "engines": {
        "node": "*"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/@rollup/plugin-commonjs/node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/@rollup/plugin-json": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/@rollup/plugin-json/-/plugin-json-4.1.0.tgz",
      "integrity": "sha512-yfLbTdNS6amI/2OpmbiBoW12vngr5NW2jCJVZSBEz+H5KfUJZ2M7sDjk0U6GOOdCWFVScShte29o9NezJ53TPw==",
      "dependencies": {
        "@rollup/pluginutils": "^3.0.8"
      },
      "peerDependencies": {
        "rollup": "^1.20.0 || ^2.0.0"
      }
    },
    "node_modules/@rollup/plugin-node-resolve": {
      "version": "9.0.0",
      "resolved": "https://registry.npmjs.org/@rollup/plugin-node-resolve/-/plugin-node-resolve-9.0.0.tgz",
      "integrity": "sha512-gPz+utFHLRrd41WMP13Jq5mqqzHL3OXrfj3/MkSyB6UBIcuNt9j60GCbarzMzdf1VHFpOxfQh/ez7wyadLMqkg==",
      "dependencies": {
        "@rollup/pluginutils": "^3.1.0",
        "@types/resolve": "1.17.1",
        "builtin-modules": "^3.1.0",
        "deepmerge": "^4.2.2",
        "is-module": "^1.0.0",
        "resolve": "^1.17.0"
      },
      "engines": {
        "node": ">= 10.0.0"
      },
      "peerDependencies": {
        "rollup": "^1.20.0||^2.0.0"
      }
    },
    "node_modules/@rollup/plugin-replace": {
      "version": "2.4.2",
      "resolved": "https://registry.npmjs.org/@rollup/plugin-replace/-/plugin-replace-2.4.2.tgz",
      "integrity": "sha512-IGcu+cydlUMZ5En85jxHH4qj2hta/11BHq95iHEyb2sbgiN0eCdzvUcHw5gt9pBL5lTi4JDYJ1acCoMGpTvEZg==",
      "dependencies": {
        "@rollup/pluginutils": "^3.1.0",
        "magic-string": "^0.25.7"
      },
      "peerDependencies": {
        "rollup": "^1.20.0 || ^2.0.0"
      }
    },
    "node_modules/@rollup/pluginutils": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/@rollup/pluginutils/-/pluginutils-3.1.0.tgz",
      "integrity": "sha512-GksZ6pr6TpIjHm8h9lSQ8pi8BE9VeubNT0OMJ3B5uZJ8pz73NPiqOtCog/x2/QzM1ENChPKxMDhiQuRHsqc+lg==",
      "dependencies": {
        "@types/estree": "0.0.39",
        "estree-walker": "^1.0.1",
        "picomatch": "^2.2.2"
      },
      "engines": {
        "node": ">= 8.0.0"
      },
      "peerDependencies": {
        "rollup": "^1.20.0||^2.0.0"
      }
    },
    "node_modules/@rollup/pluginutils/node_modules/estree-walker": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/estree-walker/-/estree-walker-1.0.1.tgz",
      "integrity": "sha512-1fMXF3YP4pZZVozF8j/ZLfvnR8NSIljt56UhbZ5PeeDmmGHpgpdwQt7ITlGvYaQukCvuBRMLEiKiYC+oeIg4cg=="
    },
    "node_modules/@sindresorhus/is": {
      "version": "4.6.0",
      "resolved": "https://registry.npmjs.org/@sindresorhus/is/-/is-4.6.0.tgz",
      "integrity": "sha512-t09vSN3MdfsyCHoFcTRCH/iUtG7OJ0CsjzB8cjAmKc/va/kIgeDI/TxsigdncE/4be734m0cvIYwNaV4i2XqAw==",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sindresorhus/is?sponsor=1"
      }
    },
    "node_modules/@socket.io/component-emitter": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/@socket.io/component-emitter/-/component-emitter-3.1.0.tgz",
      "integrity": "sha512-+9jVqKhRSpsc591z5vX+X5Yyw+he/HCB4iQ/RYxw35CEPaY1gnsNE43nf9n9AaYjAQrTiI/mOwKUKdUs9vf7Xg=="
    },
    "node_modules/@sqltools/formatter": {
      "version": "1.2.5",
      "resolved": "https://registry.npmjs.org/@sqltools/formatter/-/formatter-1.2.5.tgz",
      "integrity": "sha512-Uy0+khmZqUrUGm5dmMqVlnvufZRSK0FbYzVgp0UMstm+F5+W2/jnEEQyc9vo1ZR/E5ZI/B1WjjoTqBqwJL6Krw=="
    },
    "node_modules/@styled-system/background": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/@styled-system/background/-/background-5.1.2.tgz",
      "integrity": "sha512-jtwH2C/U6ssuGSvwTN3ri/IyjdHb8W9X/g8Y0JLcrH02G+BW3OS8kZdHphF1/YyRklnrKrBT2ngwGUK6aqqV3A==",
      "dependencies": {
        "@styled-system/core": "^5.1.2"
      }
    },
    "node_modules/@styled-system/border": {
      "version": "5.1.5",
      "resolved": "https://registry.npmjs.org/@styled-system/border/-/border-5.1.5.tgz",
      "integrity": "sha512-JvddhNrnhGigtzWRCVuAHepniyVi6hBlimxWDVAdcTuk7aRn9BYJUwfHslURtwYFsF5FoEs8Zmr1oZq2M1AP0A==",
      "dependencies": {
        "@styled-system/core": "^5.1.2"
      }
    },
    "node_modules/@styled-system/color": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/@styled-system/color/-/color-5.1.2.tgz",
      "integrity": "sha512-1kCkeKDZkt4GYkuFNKc7vJQMcOmTl3bJY3YBUs7fCNM6mMYJeT1pViQ2LwBSBJytj3AB0o4IdLBoepgSgGl5MA==",
      "dependencies": {
        "@styled-system/core": "^5.1.2"
      }
    },
    "node_modules/@styled-system/core": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/@styled-system/core/-/core-5.1.2.tgz",
      "integrity": "sha512-XclBDdNIy7OPOsN4HBsawG2eiWfCcuFt6gxKn1x4QfMIgeO6TOlA2pZZ5GWZtIhCUqEPTgIBta6JXsGyCkLBYw==",
      "dependencies": {
        "object-assign": "^4.1.1"
      }
    },
    "node_modules/@styled-system/css": {
      "version": "5.1.5",
      "resolved": "https://registry.npmjs.org/@styled-system/css/-/css-5.1.5.tgz",
      "integrity": "sha512-XkORZdS5kypzcBotAMPBoeckDs9aSZVkvrAlq5K3xP8IMAUek+x2O4NtwoSgkYkWWzVBu6DGdFZLR790QWGG+A=="
    },
    "node_modules/@styled-system/flexbox": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/@styled-system/flexbox/-/flexbox-5.1.2.tgz",
      "integrity": "sha512-6hHV52+eUk654Y1J2v77B8iLeBNtc+SA3R4necsu2VVinSD7+XY5PCCEzBFaWs42dtOEDIa2lMrgL0YBC01mDQ==",
      "dependencies": {
        "@styled-system/core": "^5.1.2"
      }
    },
    "node_modules/@styled-system/grid": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/@styled-system/grid/-/grid-5.1.2.tgz",
      "integrity": "sha512-K3YiV1KyHHzgdNuNlaw8oW2ktMuGga99o1e/NAfTEi5Zsa7JXxzwEnVSDSBdJC+z6R8WYTCYRQC6bkVFcvdTeg==",
      "dependencies": {
        "@styled-system/core": "^5.1.2"
      }
    },
    "node_modules/@styled-system/layout": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/@styled-system/layout/-/layout-5.1.2.tgz",
      "integrity": "sha512-wUhkMBqSeacPFhoE9S6UF3fsMEKFv91gF4AdDWp0Aym1yeMPpqz9l9qS/6vjSsDPF7zOb5cOKC3tcKKOMuDCPw==",
      "dependencies": {
        "@styled-system/core": "^5.1.2"
      }
    },
    "node_modules/@styled-system/position": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/@styled-system/position/-/position-5.1.2.tgz",
      "integrity": "sha512-60IZfMXEOOZe3l1mCu6sj/2NAyUmES2kR9Kzp7s2D3P4qKsZWxD1Se1+wJvevb+1TP+ZMkGPEYYXRyU8M1aF5A==",
      "dependencies": {
        "@styled-system/core": "^5.1.2"
      }
    },
    "node_modules/@styled-system/shadow": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/@styled-system/shadow/-/shadow-5.1.2.tgz",
      "integrity": "sha512-wqniqYb7XuZM7K7C0d1Euxc4eGtqEe/lvM0WjuAFsQVImiq6KGT7s7is+0bNI8O4Dwg27jyu4Lfqo/oIQXNzAg==",
      "dependencies": {
        "@styled-system/core": "^5.1.2"
      }
    },
    "node_modules/@styled-system/space": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/@styled-system/space/-/space-5.1.2.tgz",
      "integrity": "sha512-+zzYpR8uvfhcAbaPXhH8QgDAV//flxqxSjHiS9cDFQQUSznXMQmxJegbhcdEF7/eNnJgHeIXv1jmny78kipgBA==",
      "dependencies": {
        "@styled-system/core": "^5.1.2"
      }
    },
    "node_modules/@styled-system/typography": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/@styled-system/typography/-/typography-5.1.2.tgz",
      "integrity": "sha512-BxbVUnN8N7hJ4aaPOd7wEsudeT7CxarR+2hns8XCX1zp0DFfbWw4xYa/olA0oQaqx7F1hzDg+eRaGzAJbF+jOg==",
      "dependencies": {
        "@styled-system/core": "^5.1.2"
      }
    },
    "node_modules/@styled-system/variant": {
      "version": "5.1.5",
      "resolved": "https://registry.npmjs.org/@styled-system/variant/-/variant-5.1.5.tgz",
      "integrity": "sha512-Yn8hXAFoWIro8+Q5J8YJd/mP85Teiut3fsGVR9CAxwgNfIAiqlYxsk5iHU7VHJks/0KjL4ATSjmbtCDC/4l1qw==",
      "dependencies": {
        "@styled-system/core": "^5.1.2",
        "@styled-system/css": "^5.1.5"
      }
    },
    "node_modules/@szmarczak/http-timer": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/@szmarczak/http-timer/-/http-timer-5.0.1.tgz",
      "integrity": "sha512-+PmQX0PiAYPMeVYe237LJAYvOMYW1j2rH5YROyS3b4CTVJum34HfRvKvAzozHAQG0TnHNdUfY9nCeUyRAs//cw==",
      "dependencies": {
        "defer-to-connect": "^2.0.1"
      },
      "engines": {
        "node": ">=14.16"
      }
    },
    "node_modules/@tronweb3/google-protobuf": {
      "version": "3.21.2",
      "resolved": "https://registry.npmjs.org/@tronweb3/google-protobuf/-/google-protobuf-3.21.2.tgz",
      "integrity": "sha512-IVcT2GfWX3K6tHUVhs14NP5uzKhQt4KeDya1g9ACxuZsUzsaoGUIGzceK2Ltu7xp1YV94AaHOf4yxLAivlvEkQ=="
    },
    "node_modules/@tsconfig/node10": {
      "version": "1.0.9",
      "resolved": "https://registry.npmjs.org/@tsconfig/node10/-/node10-1.0.9.tgz",
      "integrity": "sha512-jNsYVVxU8v5g43Erja32laIDHXeoNvFEpX33OK4d6hljo3jDhCBDhx5dhCCTMWUojscpAagGiRkBKxpdl9fxqA=="
    },
    "node_modules/@tsconfig/node12": {
      "version": "1.0.11",
      "resolved": "https://registry.npmjs.org/@tsconfig/node12/-/node12-1.0.11.tgz",
      "integrity": "sha512-cqefuRsh12pWyGsIoBKJA9luFu3mRxCA+ORZvA4ktLSzIuCUtWVxGIuXigEwO5/ywWFMZ2QEGKWvkZG1zDMTag=="
    },
    "node_modules/@tsconfig/node14": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/@tsconfig/node14/-/node14-1.0.3.tgz",
      "integrity": "sha512-ysT8mhdixWK6Hw3i1V2AeRqZ5WfXg1G43mqoYlM2nc6388Fq5jcXyr5mRsqViLx/GJYdoL0bfXD8nmF+Zn/Iow=="
    },
    "node_modules/@tsconfig/node16": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/@tsconfig/node16/-/node16-1.0.3.tgz",
      "integrity": "sha512-yOlFc+7UtL/89t2ZhjPvvB/DeAr3r+Dq58IgzsFkOAvVC6NMJXmCGjbptdXdR9qsX7pKcTL+s87FtYREi2dEEQ=="
    },
    "node_modules/@types/axios": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@types/axios/-/axios-0.14.0.tgz",
      "integrity": "sha512-KqQnQbdYE54D7oa/UmYVMZKq7CO4l8DEENzOKc4aBRwxCXSlJXGz83flFx5L7AWrOQnmuN3kVsRdt+GZPPjiVQ==",
      "deprecated": "This is a stub types definition for axios (https://github.com/mzabriskie/axios). axios provides its own type definitions, so you don't need @types/axios installed!",
      "dev": true,
      "dependencies": {
        "axios": "*"
      }
    },
    "node_modules/@types/babel-core": {
      "version": "6.25.7",
      "resolved": "https://registry.npmjs.org/@types/babel-core/-/babel-core-6.25.7.tgz",
      "integrity": "sha512-WPnyzNFVRo6bxpr7bcL27qXtNKNQ3iToziNBpibaXHyKGWQA0+tTLt73QQxC/5zzbM544ih6Ni5L5xrck6rGwg==",
      "dependencies": {
        "@types/babel-generator": "*",
        "@types/babel-template": "*",
        "@types/babel-traverse": "*",
        "@types/babel-types": "*",
        "@types/babylon": "*"
      }
    },
    "node_modules/@types/babel-generator": {
      "version": "6.25.5",
      "resolved": "https://registry.npmjs.org/@types/babel-generator/-/babel-generator-6.25.5.tgz",
      "integrity": "sha512-lhbwMlAy5rfWG+R6l8aPtJdEFX/kcv6LMFIuvUb0i89ehqgD24je9YcB+0fRspQhgJGlEsUImxpw4pQeKS/+8Q==",
      "dependencies": {
        "@types/babel-types": "*"
      }
    },
    "node_modules/@types/babel-template": {
      "version": "6.25.2",
      "resolved": "https://registry.npmjs.org/@types/babel-template/-/babel-template-6.25.2.tgz",
      "integrity": "sha512-QKtDQRJmAz3Y1HSxfMl0syIHebMc/NnOeH/8qeD0zjgU2juD0uyC922biMxCy5xjTNvHinigML2l8kxE8eEBmw==",
      "dependencies": {
        "@types/babel-types": "*",
        "@types/babylon": "*"
      }
    },
    "node_modules/@types/babel-traverse": {
      "version": "6.25.7",
      "resolved": "https://registry.npmjs.org/@types/babel-traverse/-/babel-traverse-6.25.7.tgz",
      "integrity": "sha512-BeQiEGLnVzypzBdsexEpZAHUx+WucOMXW6srEWDkl4SegBlaCy+iBvRO+4vz6EZ+BNQg22G4MCdDdvZxf+jW5A==",
      "dependencies": {
        "@types/babel-types": "*"
      }
    },
    "node_modules/@types/babel-types": {
      "version": "7.0.11",
      "resolved": "https://registry.npmjs.org/@types/babel-types/-/babel-types-7.0.11.tgz",
      "integrity": "sha512-pkPtJUUY+Vwv6B1inAz55rQvivClHJxc9aVEPPmaq2cbyeMLCiDpbKpcKyX4LAwpNGi+SHBv0tHv6+0gXv0P2A=="
    },
    "node_modules/@types/babylon": {
      "version": "6.16.6",
      "resolved": "https://registry.npmjs.org/@types/babylon/-/babylon-6.16.6.tgz",
      "integrity": "sha512-G4yqdVlhr6YhzLXFKy5F7HtRBU8Y23+iWy7UKthMq/OSQnL1hbsoeXESQ2LY8zEDlknipDG3nRGhUC9tkwvy/w==",
      "dependencies": {
        "@types/babel-types": "*"
      }
    },
    "node_modules/@types/big.js": {
      "version": "6.1.6",
      "resolved": "https://registry.npmjs.org/@types/big.js/-/big.js-6.1.6.tgz",
      "integrity": "sha512-0r9J+Zz9rYm2hOTwiMAVkm3XFQ4u5uTK37xrQMhc9bysn/sf/okzovWMYYIBMFTn/yrEZ11pusgLEaoarTlQbA=="
    },
    "node_modules/@types/bip32": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/@types/bip32/-/bip32-2.0.0.tgz",
      "integrity": "sha512-c94+QKb7u2kg8wht+5JmbA8mBBelkNJR0mkuN73HtUhPYW5z/s5NZT0Cc3OO0sXNilXBfaxPHm11nUemoKjeJQ==",
      "deprecated": "This is a stub types definition. bip32 provides its own type definitions, so you do not need this installed.",
      "dev": true,
      "dependencies": {
        "bip32": "*"
      }
    },
    "node_modules/@types/bip39": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/@types/bip39/-/bip39-3.0.0.tgz",
      "integrity": "sha512-6CqBtChR2JHspepOd8Y2x2BYyq8GBN8hfrbBrbaj7s7j07kMaghvUPnsVTIYbr2c1yV0Pu50wBbVD56KSdalKQ==",
      "deprecated": "This is a stub types definition. bip39 provides its own type definitions, so you do not need this installed.",
      "dev": true,
      "dependencies": {
        "bip39": "*"
      }
    },
    "node_modules/@types/bitcoinjs-lib": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/@types/bitcoinjs-lib/-/bitcoinjs-lib-5.0.0.tgz",
      "integrity": "sha512-9zXjgmH2E8qEZ9gQ9GH+I6Cze3bweQbyXtR/X4RD3SdR5I4jdRPvmBrKmjegV3HZG03KNricjEoq+lQUtIXCKQ==",
      "deprecated": "This is a stub types definition. bitcoinjs-lib provides its own type definitions, so you do not need this installed.",
      "dev": true,
      "dependencies": {
        "bitcoinjs-lib": "*"
      }
    },
    "node_modules/@types/bn.js": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/@types/bn.js/-/bn.js-5.1.1.tgz",
      "integrity": "sha512-qNrYbZqMx0uJAfKnKclPh+dTwK33KfLHYqtyODwd5HnXOjnkhc4qgn3BrK6RWyGZm5+sIFE7Q7Vz6QQtJB7w7g==",
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@types/body-parser": {
      "version": "1.19.2",
      "resolved": "https://registry.npmjs.org/@types/body-parser/-/body-parser-1.19.2.tgz",
      "integrity": "sha512-ALYone6pm6QmwZoAgeyNksccT9Q4AWZQ6PvfwR37GT6r6FWUPguq6sUmNGSMV2Wr761oQoBxwGGa6DR5o1DC9g==",
      "dev": true,
      "dependencies": {
        "@types/connect": "*",
        "@types/node": "*"
      }
    },
    "node_modules/@types/cacheable-request": {
      "version": "6.0.3",
      "resolved": "https://registry.npmjs.org/@types/cacheable-request/-/cacheable-request-6.0.3.tgz",
      "integrity": "sha512-IQ3EbTzGxIigb1I3qPZc1rWJnH0BmSKv5QYTalEwweFvyBDLSAe24zP0le/hyi7ecGfZVlIVAg4BZqb8WBwKqw==",
      "dependencies": {
        "@types/http-cache-semantics": "*",
        "@types/keyv": "^3.1.4",
        "@types/node": "*",
        "@types/responselike": "^1.0.0"
      }
    },
    "node_modules/@types/connect": {
      "version": "3.4.35",
      "resolved": "https://registry.npmjs.org/@types/connect/-/connect-3.4.35.tgz",
      "integrity": "sha512-cdeYyv4KWoEgpBISTxWvqYsVy444DOqehiF3fM3ne10AmJ62RSyNkUnxMJXHQWRQQX2eR94m5y1IZyDwBjV9FQ==",
      "dev": true,
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@types/cookie": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/@types/cookie/-/cookie-0.4.1.tgz",
      "integrity": "sha512-XW/Aa8APYr6jSVVA1y/DEIZX0/GMKLEVekNG727R8cs56ahETkRAy/3DR7+fJyh7oUgGwNQaRfXCun0+KbWY7Q=="
    },
    "node_modules/@types/cors": {
      "version": "2.8.13",
      "resolved": "https://registry.npmjs.org/@types/cors/-/cors-2.8.13.tgz",
      "integrity": "sha512-RG8AStHlUiV5ysZQKq97copd2UmVYw3/pRMLefISZ3S1hK104Cwm7iLQ3fTKx+lsUH2CE8FlLaYeEA2LSeqYUA==",
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@types/crypto-js": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/@types/crypto-js/-/crypto-js-4.1.1.tgz",
      "integrity": "sha512-BG7fQKZ689HIoc5h+6D2Dgq1fABRa0RbBWKBd9SP/MVRVXROflpm5fhwyATX5duFmbStzyzyycPB8qUYKDH3NA==",
      "dev": true
    },
    "node_modules/@types/dotenv": {
      "version": "8.2.0",
      "resolved": "https://registry.npmjs.org/@types/dotenv/-/dotenv-8.2.0.tgz",
      "integrity": "sha512-ylSC9GhfRH7m1EUXBXofhgx4lUWmFeQDINW5oLuS+gxWdfUeW4zJdeVTYVkexEW+e2VUvlZR2kGnGGipAWR7kw==",
      "deprecated": "This is a stub types definition. dotenv provides its own type definitions, so you do not need this installed.",
      "dev": true,
      "dependencies": {
        "dotenv": "*"
      }
    },
    "node_modules/@types/estree": {
      "version": "0.0.39",
      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-0.0.39.tgz",
      "integrity": "sha512-EYNwp3bU+98cpU4lAWYYL7Zz+2gryWH1qbdDTidVd6hkiR6weksdbMadyXKXNPEkQFhXM+hVO9ZygomHXp+AIw=="
    },
    "node_modules/@types/express": {
      "version": "4.17.17",
      "resolved": "https://registry.npmjs.org/@types/express/-/express-4.17.17.tgz",
      "integrity": "sha512-Q4FmmuLGBG58btUnfS1c1r/NQdlp3DMfGDGig8WhfpA2YRUtEkxAjkZb0yvplJGYdF1fsQ81iMDcH24sSCNC/Q==",
      "dev": true,
      "dependencies": {
        "@types/body-parser": "*",
        "@types/express-serve-static-core": "^4.17.33",
        "@types/qs": "*",
        "@types/serve-static": "*"
      }
    },
    "node_modules/@types/express-handlebars": {
      "version": "5.3.1",
      "resolved": "https://registry.npmjs.org/@types/express-handlebars/-/express-handlebars-5.3.1.tgz",
      "integrity": "sha512-DSzaERLO4gHb8AqnrL58jzSDyT0yDdl6HqDc+bGz1Hf0nrG1FK30nHGzv8NBEGR8QV9eUGB/YaE0Qj3NjF7siw==",
      "dev": true
    },
    "node_modules/@types/express-serve-static-core": {
      "version": "4.17.33",
      "resolved": "https://registry.npmjs.org/@types/express-serve-static-core/-/express-serve-static-core-4.17.33.tgz",
      "integrity": "sha512-TPBqmR/HRYI3eC2E5hmiivIzv+bidAfXofM+sbonAGvyDhySGw9/PQZFt2BLOrjUUR++4eJVpx6KnLQK1Fk9tA==",
      "dev": true,
      "dependencies": {
        "@types/node": "*",
        "@types/qs": "*",
        "@types/range-parser": "*"
      }
    },
    "node_modules/@types/http-cache-semantics": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/@types/http-cache-semantics/-/http-cache-semantics-4.0.1.tgz",
      "integrity": "sha512-SZs7ekbP8CN0txVG2xVRH6EgKmEm31BOxA07vkFaETzZz1xh+cbt8BcI0slpymvwhx5dlFnQG2rTlPVQn+iRPQ=="
    },
    "node_modules/@types/json-schema": {
      "version": "7.0.11",
      "resolved": "https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.11.tgz",
      "integrity": "sha512-wOuvG1SN4Us4rez+tylwwwCV1psiNVOkJeM3AUWUNWg/jDQY2+HE/444y5gc+jBmRqASOm2Oeh5c1axHobwRKQ=="
    },
    "node_modules/@types/keyv": {
      "version": "3.1.4",
      "resolved": "https://registry.npmjs.org/@types/keyv/-/keyv-3.1.4.tgz",
      "integrity": "sha512-BQ5aZNSCpj7D6K2ksrRCTmKRLEpnPvWDiLPfoGyhZ++8YtiK9d/3DBKPJgry359X/P1PfruyYwvnvwFjuEiEIg==",
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@types/lodash": {
      "version": "4.14.191",
      "resolved": "https://registry.npmjs.org/@types/lodash/-/lodash-4.14.191.tgz",
      "integrity": "sha512-BdZ5BCCvho3EIXw6wUCXHe7rS53AIDPLE+JzwgT+OsJk53oBfbSmZZ7CX4VaRoN78N+TJpFi9QPlfIVNmJYWxQ=="
    },
    "node_modules/@types/mime": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/@types/mime/-/mime-3.0.1.tgz",
      "integrity": "sha512-Y4XFY5VJAuw0FgAqPNd6NNoV44jbq9Bz2L7Rh/J6jLTiHBSBJa9fxqQIvkIld4GsoDOcCbvzOUAbLPsSKKg+uA==",
      "dev": true
    },
    "node_modules/@types/morgan": {
      "version": "1.9.4",
      "resolved": "https://registry.npmjs.org/@types/morgan/-/morgan-1.9.4.tgz",
      "integrity": "sha512-cXoc4k+6+YAllH3ZHmx4hf7La1dzUk6keTR4bF4b4Sc0mZxU/zK4wO7l+ZzezXm/jkYj/qC+uYGZrarZdIVvyQ==",
      "dev": true,
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@types/multer": {
      "version": "1.4.7",
      "resolved": "https://registry.npmjs.org/@types/multer/-/multer-1.4.7.tgz",
      "integrity": "sha512-/SNsDidUFCvqqcWDwxv2feww/yqhNeTRL5CVoL3jU4Goc4kKEL10T7Eye65ZqPNi4HRx8sAEX59pV1aEH7drNA==",
      "dev": true,
      "dependencies": {
        "@types/express": "*"
      }
    },
    "node_modules/@types/node": {
      "version": "18.14.5",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-18.14.5.tgz",
      "integrity": "sha512-CRT4tMK/DHYhw1fcCEBwME9CSaZNclxfzVMe7GsO6ULSwsttbj70wSiX6rZdIjGblu93sTJxLdhNIT85KKI7Qw=="
    },
    "node_modules/@types/node-forge": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/@types/node-forge/-/node-forge-1.3.1.tgz",
      "integrity": "sha512-hvQ7Wav8I0j9amPXJtGqI/Yx70zeF62UKlAYq8JPm0nHzjKKzZvo9iR3YI2MiOghZRlOI+tQ2f6D+G6vVf4V2Q==",
      "dev": true,
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@types/nodemailer": {
      "version": "6.4.7",
      "resolved": "https://registry.npmjs.org/@types/nodemailer/-/nodemailer-6.4.7.tgz",
      "integrity": "sha512-f5qCBGAn/f0qtRcd4SEn88c8Fp3Swct1731X4ryPKqS61/A3LmmzN8zaEz7hneJvpjFbUUgY7lru/B/7ODTazg==",
      "dev": true,
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@types/nodemailer-express-handlebars": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/@types/nodemailer-express-handlebars/-/nodemailer-express-handlebars-4.0.2.tgz",
      "integrity": "sha512-LnKnqgl6C3osQKQDcIxB6P4iS2Iixq+p0ZCC93pzhSRLvo4PgGHmrTFE38ZGrFxc/DyZefYGEsYHSblxJtwuxw==",
      "dev": true,
      "dependencies": {
        "@types/express-handlebars": "^5",
        "@types/nodemailer": "*"
      }
    },
    "node_modules/@types/otplib": {
      "version": "10.0.0",
      "resolved": "https://registry.npmjs.org/@types/otplib/-/otplib-10.0.0.tgz",
      "integrity": "sha512-fxgTy0WQiylowcAuKgCdMW/DcWAz/Qo/GZjY5sLD7/z12RXXjIardQnsZU2iSHWFznVlE+7VstBWZnHUA8aF8Q==",
      "deprecated": "This is a stub types definition. otplib provides its own type definitions, so you do not need this installed.",
      "dev": true,
      "dependencies": {
        "otplib": "*"
      }
    },
    "node_modules/@types/parse-json": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/@types/parse-json/-/parse-json-4.0.0.tgz",
      "integrity": "sha512-//oorEZjL6sbPcKUaCdIGlIUeH26mgzimjBB77G6XRgnDl/L5wOnpyBGRe/Mmf5CVW3PwEBE1NjiMZ/ssFh4wA=="
    },
    "node_modules/@types/pbkdf2": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/@types/pbkdf2/-/pbkdf2-3.1.0.tgz",
      "integrity": "sha512-Cf63Rv7jCQ0LaL8tNXmEyqTHuIJxRdlS5vMh1mj5voN4+QFhVZnlZruezqpWYDiJ8UTzhP0VmeLXCmBk66YrMQ==",
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@types/pem": {
      "version": "1.9.6",
      "resolved": "https://registry.npmjs.org/@types/pem/-/pem-1.9.6.tgz",
      "integrity": "sha512-IC67SxacM9fxEi/w7hf98dTun83OwUMeLMo1NS2gE0wdM9MHeg73iH/Pp9nB02OUCQ7Zb2UuKE/IpFCmQw9jxw==",
      "dev": true,
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@types/pem-jwk": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/@types/pem-jwk/-/pem-jwk-2.0.0.tgz",
      "integrity": "sha512-f5qbnCGcBZsSyj0wwpDSzQL8JCw8n3elwVsstHWplQnE+W6cESfddM5tTE2Hn3hUV52Scmr8pSU37dbW3qOm0w==",
      "dev": true
    },
    "node_modules/@types/pg": {
      "version": "8.6.6",
      "resolved": "https://registry.npmjs.org/@types/pg/-/pg-8.6.6.tgz",
      "integrity": "sha512-O2xNmXebtwVekJDD+02udOncjVcMZQuTEQEMpKJ0ZRf5E7/9JJX3izhKUcUifBkyKpljyUM6BTgy2trmviKlpw==",
      "dev": true,
      "dependencies": {
        "@types/node": "*",
        "pg-protocol": "*",
        "pg-types": "^2.2.0"
      }
    },
    "node_modules/@types/prop-types": {
      "version": "15.7.5",
      "resolved": "https://registry.npmjs.org/@types/prop-types/-/prop-types-15.7.5.tgz",
      "integrity": "sha512-JCB8C6SnDoQf0cNycqd/35A7MjcnK+ZTqE7judS6o7utxUCg6imJg3QK2qzHKszlTjcj2cn+NwMB2i96ubpj7w=="
    },
    "node_modules/@types/qrcode": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/@types/qrcode/-/qrcode-1.5.0.tgz",
      "integrity": "sha512-x5ilHXRxUPIMfjtM+1vf/GPTRWZ81nqscursm5gMznJeK9M0YnZ1c3bEvRLQ0zSSgedLx1J6MGL231ObQGGhaA==",
      "dev": true,
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@types/qs": {
      "version": "6.9.7",
      "resolved": "https://registry.npmjs.org/@types/qs/-/qs-6.9.7.tgz",
      "integrity": "sha512-FGa1F62FT09qcrueBA6qYTrJPVDzah9a+493+o2PCXsesWHIn27G98TsSMs3WPNbZIEj4+VJf6saSFpvD+3Zsw==",
      "dev": true
    },
    "node_modules/@types/range-parser": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/@types/range-parser/-/range-parser-1.2.4.tgz",
      "integrity": "sha512-EEhsLsD6UsDM1yFhAvy0Cjr6VwmpMWqFBCb9w07wVugF7w9nfajxLuVmngTIpgS6svCnm6Vaw+MZhoDCKnOfsw==",
      "dev": true
    },
    "node_modules/@types/react": {
      "version": "16.14.43",
      "resolved": "https://registry.npmjs.org/@types/react/-/react-16.14.43.tgz",
      "integrity": "sha512-7zdjv7jvoLLQg1tTvpQsm+hyNUMT2mPlNV1+d0I8fbGhkJl82spopMyBlu4wb1dviZAxpGdk5eHu/muacknnfw==",
      "dependencies": {
        "@types/prop-types": "*",
        "@types/scheduler": "*",
        "csstype": "^3.0.2"
      }
    },
    "node_modules/@types/resolve": {
      "version": "1.17.1",
      "resolved": "https://registry.npmjs.org/@types/resolve/-/resolve-1.17.1.tgz",
      "integrity": "sha512-yy7HuzQhj0dhGpD8RLXSZWEkLsV9ibvxvi6EiJ3bkqLAO1RGo0WbkWQiwpRlSFymTJRz0d3k5LM3kkx8ArDbLw==",
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@types/responselike": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/@types/responselike/-/responselike-1.0.0.tgz",
      "integrity": "sha512-85Y2BjiufFzaMIlvJDvTTB8Fxl2xfLo4HgmHzVBz08w4wDePCTjYw66PdrolO0kzli3yam/YCgRufyo1DdQVTA==",
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@types/scheduler": {
      "version": "0.16.3",
      "resolved": "https://registry.npmjs.org/@types/scheduler/-/scheduler-0.16.3.tgz",
      "integrity": "sha512-5cJ8CB4yAx7BH1oMvdU0Jh9lrEXyPkar6F9G/ERswkCuvP4KQZfZkSjcMbAICCpQTN4OuZn8tz0HiKv9TGZgrQ=="
    },
    "node_modules/@types/secp256k1": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/@types/secp256k1/-/secp256k1-4.0.3.tgz",
      "integrity": "sha512-Da66lEIFeIz9ltsdMZcpQvmrmmoqrfju8pm1BH8WbYjZSwUgCwXLb9C+9XYogwBITnbsSaMdVPb2ekf7TV+03w==",
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@types/serialize-javascript": {
      "version": "5.0.2",
      "resolved": "https://registry.npmjs.org/@types/serialize-javascript/-/serialize-javascript-5.0.2.tgz",
      "integrity": "sha512-BRLlwZzRoZukGaBtcUxkLsZsQfWZpvog6MZk3PWQO9Q6pXmXFzjU5iGzZ+943evp6tkkbN98N1Z31KT0UG1yRw==",
      "dev": true
    },
    "node_modules/@types/serve-static": {
      "version": "1.15.1",
      "resolved": "https://registry.npmjs.org/@types/serve-static/-/serve-static-1.15.1.tgz",
      "integrity": "sha512-NUo5XNiAdULrJENtJXZZ3fHtfMolzZwczzBbnAeBbqBwG+LaG6YaJtuwzwGSQZ2wsCrxjEhNNjAkKigy3n8teQ==",
      "dev": true,
      "dependencies": {
        "@types/mime": "*",
        "@types/node": "*"
      }
    },
    "node_modules/@types/socket.io": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/@types/socket.io/-/socket.io-3.0.2.tgz",
      "integrity": "sha512-pu0sN9m5VjCxBZVK8hW37ZcMe8rjn4HHggBN5CbaRTvFwv5jOmuIRZEuddsBPa9Th0ts0SIo3Niukq+95cMBbQ==",
      "deprecated": "This is a stub types definition. socket.io provides its own type definitions, so you do not need this installed.",
      "dev": true,
      "dependencies": {
        "socket.io": "*"
      }
    },
    "node_modules/@types/swagger-jsdoc": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/@types/swagger-jsdoc/-/swagger-jsdoc-6.0.1.tgz",
      "integrity": "sha512-+MUpcbyxD528dECUBCEVm6abNuORdbuGjbrUdHDeAQ+rkPuo2a+L4N02WJHF3bonSSE6SJ3dUJwF2V6+cHnf0w==",
      "dev": true
    },
    "node_modules/@types/swagger-ui-express": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/@types/swagger-ui-express/-/swagger-ui-express-4.1.3.tgz",
      "integrity": "sha512-jqCjGU/tGEaqIplPy3WyQg+Nrp6y80DCFnDEAvVKWkJyv0VivSSDCChkppHRHAablvInZe6pijDFMnavtN0vqA==",
      "dev": true,
      "dependencies": {
        "@types/express": "*",
        "@types/serve-static": "*"
      }
    },
    "node_modules/@types/uuid": {
      "version": "9.0.1",
      "resolved": "https://registry.npmjs.org/@types/uuid/-/uuid-9.0.1.tgz",
      "integrity": "sha512-rFT3ak0/2trgvp4yYZo5iKFEPsET7vKydKF+VRCxlQ9bpheehyAJH89dAkaLEq/j/RZXJIqcgsmPJKUP1Z28HA==",
      "dev": true
    },
    "node_modules/@types/web3": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/@types/web3/-/web3-1.2.2.tgz",
      "integrity": "sha512-eFiYJKggNrOl0nsD+9cMh2MLk4zVBfXfGnVeRFbpiZzBE20eet4KLA3fXcjSuHaBn0RnQzwLAGdgzgzdet4C0A==",
      "deprecated": "This is a stub types definition. web3 provides its own type definitions, so you do not need this installed.",
      "dev": true,
      "dependencies": {
        "web3": "*"
      }
    },
    "node_modules/abbrev": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/abbrev/-/abbrev-1.1.1.tgz",
      "integrity": "sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q==",
      "dev": true
    },
    "node_modules/abortcontroller-polyfill": {
      "version": "1.7.5",
      "resolved": "https://registry.npmjs.org/abortcontroller-polyfill/-/abortcontroller-polyfill-1.7.5.tgz",
      "integrity": "sha512-JMJ5soJWP18htbbxJjG7bG6yuI6pRhgJ0scHHTfkUjf6wjP912xZWvM+A4sJK3gqd9E8fcPbDnOefbA9Th/FIQ=="
    },
    "node_modules/accepts": {
      "version": "1.3.8",
      "resolved": "https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz",
      "integrity": "sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==",
      "dependencies": {
        "mime-types": "~2.1.34",
        "negotiator": "0.6.3"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/acorn": {
      "version": "8.8.2",
      "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.8.2.tgz",
      "integrity": "sha512-xjIYgE8HBrkpd/sJqOGNspf8uHG+NOHGOw6a/Urj8taM2EXfdNAH2oFcPeIFfsv3+kz/mJrS5VuMqbNLjCa2vw==",
      "bin": {
        "acorn": "bin/acorn"
      },
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/acorn-walk": {
      "version": "8.2.0",
      "resolved": "https://registry.npmjs.org/acorn-walk/-/acorn-walk-8.2.0.tgz",
      "integrity": "sha512-k+iyHEuPgSw6SbuDpGQM+06HQUa04DZ3o+F6CSzXMvvI5KMvnaEqXe+YVe555R9nn6GPt404fos4wcgpw12SDA==",
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/adminjs": {
      "version": "5.11.0",
      "resolved": "https://registry.npmjs.org/adminjs/-/adminjs-5.11.0.tgz",
      "integrity": "sha512-sqGKskqwRTqZUXMWKNbpV+1HQT+oCamgISe3Kok+uvphCF2ARYuAz7tX1Vpq2jvuIVRuJoBmWnIx6+a4iK0fJw==",
      "dependencies": {
        "@adminjs/design-system": "^2.2.4",
        "@babel/core": "^7.10.2",
        "@babel/parser": "^7.10.2",
        "@babel/plugin-transform-runtime": "^7.10.1",
        "@babel/polyfill": "^7.10.1",
        "@babel/preset-env": "^7.16.4",
        "@babel/preset-react": "^7.10.1",
        "@babel/preset-typescript": "^7.10.1",
        "@babel/register": "^7.10.1",
        "@rollup/plugin-babel": "^5.2.1",
        "@rollup/plugin-commonjs": "^21.0.1",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^9.0.0",
        "@rollup/plugin-replace": "^2.3.3",
        "@types/babel-core": "^6.25.7",
        "@types/react": "^16.9.16",
        "axios": "^0.24.0",
        "babel-plugin-styled-components": "^1.11.1",
        "commander": "^5.1.0",
        "flat": "^4.1.0",
        "i18next": "19.8.7",
        "lodash": "^4.17.21",
        "ora": "^5.4.1",
        "prop-types": "^15.7.2",
        "punycode": "^2.1.1",
        "react": "^16.13.1",
        "react-beautiful-dnd": "^13.0.0",
        "react-dom": "^16.13.1",
        "react-i18next": "^11.14.3",
        "react-is": "=16.13.1",
        "react-redux": "=7.2.0",
        "react-router": "=5.2.0",
        "react-router-dom": "=5.2.0",
        "react-select": "=3.1.0",
        "redux": "=4.0.5",
        "rollup": "^2.32.1",
        "rollup-plugin-terser": "^6.1.0",
        "slash": "^3.0.0",
        "styled-components": "^5.1.0",
        "uuid": "^8.3.2"
      },
      "bin": {
        "admin": "cli.js"
      }
    },
    "node_modules/adminjs/node_modules/axios": {
      "version": "0.24.0",
      "resolved": "https://registry.npmjs.org/axios/-/axios-0.24.0.tgz",
      "integrity": "sha512-Q6cWsys88HoPgAaFAVUb0WpPk0O8iTeisR9IMqy9G8AbO4NlpVknrnQS03zzF9PGAWgO3cgletO3VjV/P7VztA==",
      "dependencies": {
        "follow-redirects": "^1.14.4"
      }
    },
    "node_modules/adminjs/node_modules/commander": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/commander/-/commander-5.1.0.tgz",
      "integrity": "sha512-P0CysNDQ7rtVw4QIQtm+MRxV66vKFSvlsQvGYXZWR3qFU0jlMKHZZZgw8e+8DSah4UDKMqnknRDQz+xuQXQ/Zg==",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/adminjs/node_modules/uuid": {
      "version": "8.3.2",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-8.3.2.tgz",
      "integrity": "sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg==",
      "bin": {
        "uuid": "dist/bin/uuid"
      }
    },
    "node_modules/aes-js": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/aes-js/-/aes-js-3.0.0.tgz",
      "integrity": "sha512-H7wUZRn8WpTq9jocdxQ2c8x2sKo9ZVmzfRE13GiNJXfp7NcKYEdvl3vspKjXox6RIG2VtaRe4JFvxG4rqp2Zuw=="
    },
    "node_modules/ajv": {
      "version": "6.12.6",
      "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
      "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
      "dependencies": {
        "fast-deep-equal": "^3.1.1",
        "fast-json-stable-stringify": "^2.0.0",
        "json-schema-traverse": "^0.4.1",
        "uri-js": "^4.2.2"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/epoberezkin"
      }
    },
    "node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "dependencies": {
        "color-convert": "^2.0.1"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/any-promise": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/any-promise/-/any-promise-1.3.0.tgz",
      "integrity": "sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A=="
    },
    "node_modules/anymatch": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz",
      "integrity": "sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==",
      "dev": true,
      "dependencies": {
        "normalize-path": "^3.0.0",
        "picomatch": "^2.0.4"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/app-root-path": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/app-root-path/-/app-root-path-3.1.0.tgz",
      "integrity": "sha512-biN3PwB2gUtjaYy/isrU3aNWI5w+fAfvHkSvCKeQGxhmYpwKFUxudR3Yya+KqVRHBmEDYh+/lTozYCFbmzX4nA==",
      "engines": {
        "node": ">= 6.0.0"
      }
    },
    "node_modules/append-field": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/append-field/-/append-field-1.0.0.tgz",
      "integrity": "sha512-klpgFSWLW1ZEs8svjfb7g4qWY0YS5imI82dTg+QahUvJ8YqAY0P10Uk8tTyh9ZGuYEZEMaeJYCF5BFuX552hsw=="
    },
    "node_modules/arg": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/arg/-/arg-4.1.3.tgz",
      "integrity": "sha512-58S9QDqG0Xx27YwPSt9fJxivjYl432YCwfDMfZ+71RAqUrZef7LrKQZ3LHLOwCS4FLNBplP533Zx895SeOCHvA=="
    },
    "node_modules/argparse": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz",
      "integrity": "sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q=="
    },
    "node_modules/array-flatten": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz",
      "integrity": "sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg=="
    },
    "node_modules/asn1": {
      "version": "0.2.6",
      "resolved": "https://registry.npmjs.org/asn1/-/asn1-0.2.6.tgz",
      "integrity": "sha512-ix/FxPn0MDjeyJ7i/yoHGFt/EX6LyNbxSEhPPXODPL+KB0VPk86UYfL0lMdy+KCnv+fmvIzySwaK5COwqVbWTQ==",
      "dependencies": {
        "safer-buffer": "~2.1.0"
      }
    },
    "node_modules/assert": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/assert/-/assert-2.0.0.tgz",
      "integrity": "sha512-se5Cd+js9dXJnu6Ag2JFc00t+HmHOen+8Q+L7O9zI0PqQXr20uk2J0XQqMxZEeo5U50o8Nvmmx7dZrl+Ufr35A==",
      "peer": true,
      "dependencies": {
        "es6-object-assign": "^1.1.0",
        "is-nan": "^1.2.1",
        "object-is": "^1.0.1",
        "util": "^0.12.0"
      }
    },
    "node_modules/assert-plus": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
      "integrity": "sha512-NfJ4UzBCcQGLDlQq7nHxH+tv3kyZ0hHQqF5BO6J7tNJeP5do1llPr8dZ8zHonfhAu0PHAdMkSo+8o0wxg9lZWw==",
      "engines": {
        "node": ">=0.8"
      }
    },
    "node_modules/async-limiter": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/async-limiter/-/async-limiter-1.0.1.tgz",
      "integrity": "sha512-csOlWGAcRFJaI6m+F2WKdnMKr4HhdhFVBk0H/QbJFMCr+uO2kwohwXQPxw/9OCxp05r5ghVBFSyioixx3gfkNQ=="
    },
    "node_modules/asynckit": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
      "integrity": "sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q=="
    },
    "node_modules/available-typed-arrays": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/available-typed-arrays/-/available-typed-arrays-1.0.5.tgz",
      "integrity": "sha512-DMD0KiN46eipeziST1LPP/STfDU0sufISXmjSgvVsoU2tqxctQeASejWcfNtxYKqETM1UxQ8sp2OrSBWpHY6sw==",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/aws-sign2": {
      "version": "0.7.0",
      "resolved": "https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz",
      "integrity": "sha512-08kcGqnYf/YmjoRhfxyu+CLxBjUtHLXLXX/vUfx9l2LYzG3c1m61nrpyFUZI6zeS+Li/wWMMidD9KgrqtGq3mA==",
      "engines": {
        "node": "*"
      }
    },
    "node_modules/aws4": {
      "version": "1.12.0",
      "resolved": "https://registry.npmjs.org/aws4/-/aws4-1.12.0.tgz",
      "integrity": "sha512-NmWvPnx0F1SfrQbYwOi7OeaNGokp9XhzNioJ/CSBs8Qa4vxug81mhJEAVZwxXuBmYB5KDRfMq/F3RR0BIU7sWg=="
    },
    "node_modules/axios": {
      "version": "1.3.4",
      "resolved": "https://registry.npmjs.org/axios/-/axios-1.3.4.tgz",
      "integrity": "sha512-toYm+Bsyl6VC5wSkfkbbNB6ROv7KY93PEBBL6xyDczaIHasAiv4wPqQ/c4RjoQzipxRD2W5g21cOqQulZ7rHwQ==",
      "dependencies": {
        "follow-redirects": "^1.15.0",
        "form-data": "^4.0.0",
        "proxy-from-env": "^1.1.0"
      }
    },
    "node_modules/babel-plugin-emotion": {
      "version": "10.2.2",
      "resolved": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.2.2.tgz",
      "integrity": "sha512-SMSkGoqTbTyUTDeuVuPIWifPdUGkTk1Kf9BWRiXIOIcuyMfsdp2EjeiiFvOzX8NOBvEh/ypKYvUh2rkgAJMCLA==",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "0.8.0",
        "@emotion/memoize": "0.7.4",
        "@emotion/serialize": "^0.11.16",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      }
    },
    "node_modules/babel-plugin-emotion/node_modules/source-map": {
      "version": "0.5.7",
      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.5.7.tgz",
      "integrity": "sha512-LbrmJOMUSdEVxIKvdcJzQC+nQhe8FUZQTXQy6+I75skNgn3OoQ0DZA8YnFa7gp8tqtL3KPf1kmo0R5DoApeSGQ==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/babel-plugin-macros": {
      "version": "2.8.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-macros/-/babel-plugin-macros-2.8.0.tgz",
      "integrity": "sha512-SEP5kJpfGYqYKpBrj5XU3ahw5p5GOHJ0U5ssOSQ/WBVdwkD2Dzlce95exQTs3jOVWPPKLBN2rlEWkCK7dSmLvg==",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "cosmiconfig": "^6.0.0",
        "resolve": "^1.12.0"
      }
    },
    "node_modules/babel-plugin-polyfill-corejs2": {
      "version": "0.4.3",
      "resolved": "https://registry.npmjs.org/babel-plugin-polyfill-corejs2/-/babel-plugin-polyfill-corejs2-0.4.3.tgz",
      "integrity": "sha512-bM3gHc337Dta490gg+/AseNB9L4YLHxq1nGKZZSHbhXv4aTYU2MD2cjza1Ru4S6975YLTaL1K8uJf6ukJhhmtw==",
      "dependencies": {
        "@babel/compat-data": "^7.17.7",
        "@babel/helper-define-polyfill-provider": "^0.4.0",
        "semver": "^6.1.1"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/babel-plugin-polyfill-corejs2/node_modules/semver": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
      "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/babel-plugin-polyfill-corejs3": {
      "version": "0.8.1",
      "resolved": "https://registry.npmjs.org/babel-plugin-polyfill-corejs3/-/babel-plugin-polyfill-corejs3-0.8.1.tgz",
      "integrity": "sha512-ikFrZITKg1xH6pLND8zT14UPgjKHiGLqex7rGEZCH2EvhsneJaJPemmpQaIZV5AL03II+lXylw3UmddDK8RU5Q==",
      "dependencies": {
        "@babel/helper-define-polyfill-provider": "^0.4.0",
        "core-js-compat": "^3.30.1"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/babel-plugin-polyfill-regenerator": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-polyfill-regenerator/-/babel-plugin-polyfill-regenerator-0.5.0.tgz",
      "integrity": "sha512-hDJtKjMLVa7Z+LwnTCxoDLQj6wdc+B8dun7ayF2fYieI6OzfuvcLMB32ihJZ4UhCBwNYGl5bg/x/P9cMdnkc2g==",
      "dependencies": {
        "@babel/helper-define-polyfill-provider": "^0.4.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/babel-plugin-styled-components": {
      "version": "1.13.3",
      "resolved": "https://registry.npmjs.org/babel-plugin-styled-components/-/babel-plugin-styled-components-1.13.3.tgz",
      "integrity": "sha512-meGStRGv+VuKA/q0/jXxrPNWEm4LPfYIqxooDTdmh8kFsP/Ph7jJG5rUPwUPX3QHUvggwdbgdGpo88P/rRYsVw==",
      "dependencies": {
        "@babel/helper-annotate-as-pure": "^7.15.4",
        "@babel/helper-module-imports": "^7.15.4",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "lodash": "^4.17.11"
      },
      "peerDependencies": {
        "styled-components": ">= 2"
      }
    },
    "node_modules/babel-plugin-syntax-jsx": {
      "version": "6.18.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-syntax-jsx/-/babel-plugin-syntax-jsx-6.18.0.tgz",
      "integrity": "sha512-qrPaCSo9c8RHNRHIotaufGbuOBN8rtdC4QrrFFc43vyWCCz7Kl7GL1PGaXtMGQZUXrkCjNEgxDfmAuAabr/rlw=="
    },
    "node_modules/balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw=="
    },
    "node_modules/base-x": {
      "version": "3.0.9",
      "resolved": "https://registry.npmjs.org/base-x/-/base-x-3.0.9.tgz",
      "integrity": "sha512-H7JU6iBHTal1gp56aKoaa//YUxEaAOUiydvrV/pILqIHXTtqxSkATOnDA2u+jZ/61sD+L/412+7kzXRtWukhpQ==",
      "dependencies": {
        "safe-buffer": "^5.0.1"
      }
    },
    "node_modules/base64-js": {
      "version": "1.5.1",
      "resolved": "https://registry.npmjs.org/base64-js/-/base64-js-1.5.1.tgz",
      "integrity": "sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ]
    },
    "node_modules/base64id": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/base64id/-/base64id-2.0.0.tgz",
      "integrity": "sha512-lGe34o6EHj9y3Kts9R4ZYs/Gr+6N7MCaMlIFA3F1R2O5/m7K06AxfSeO5530PEERE6/WyEg3lsuyw4GHlPZHog==",
      "engines": {
        "node": "^4.5.0 || >= 5.9"
      }
    },
    "node_modules/basic-auth": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/basic-auth/-/basic-auth-2.0.1.tgz",
      "integrity": "sha512-NF+epuEdnUYVlGuhaxbbq+dvJttwLnGY+YixlXlME5KpQ5W3CnXA5cVTneY3SPbPDRkcjMbifrwmFYcClgOZeg==",
      "dependencies": {
        "safe-buffer": "5.1.2"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/basic-auth/node_modules/safe-buffer": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="
    },
    "node_modules/bcrypt-pbkdf": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.2.tgz",
      "integrity": "sha512-qeFIXtP4MSoi6NLqO12WfqARWWuCKi2Rn/9hJLEmtB5yTNr9DqFWkJRCf2qShWzPeAMRnOgCrq0sg/KLv5ES9w==",
      "dependencies": {
        "tweetnacl": "^0.14.3"
      }
    },
    "node_modules/bcrypt-pbkdf/node_modules/tweetnacl": {
      "version": "0.14.5",
      "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz",
      "integrity": "sha512-KXXFFdAbFXY4geFIwoyNK+f5Z1b7swfXABfL7HXCmoIWMKU3dmS26672A4EeQtDzLKy7SXmfBu51JolvEKwtGA=="
    },
    "node_modules/bech32": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/bech32/-/bech32-2.0.0.tgz",
      "integrity": "sha512-LcknSilhIGatDAsY1ak2I8VtGaHNhgMSYVxFrGLXv+xLHytaKZKcaUJJUE7qmBr7h33o5YQwP55pMI0xmkpJwg=="
    },
    "node_modules/big.js": {
      "version": "6.2.1",
      "resolved": "https://registry.npmjs.org/big.js/-/big.js-6.2.1.tgz",
      "integrity": "sha512-bCtHMwL9LeDIozFn+oNhhFoq+yQ3BNdnsLSASUxLciOb1vgvpHsIO1dsENiGMgbb4SkP5TrzWzRiLddn8ahVOQ==",
      "engines": {
        "node": "*"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/bigjs"
      }
    },
    "node_modules/bignumber.js": {
      "version": "9.1.1",
      "resolved": "https://registry.npmjs.org/bignumber.js/-/bignumber.js-9.1.1.tgz",
      "integrity": "sha512-pHm4LsMJ6lzgNGVfZHjMoO8sdoRhOzOH4MLmY65Jg70bpxCKu5iOHNJyfF6OyvYw7t8Fpf35RuzUyqnQsj8Vig==",
      "engines": {
        "node": "*"
      }
    },
    "node_modules/binary-extensions": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.2.0.tgz",
      "integrity": "sha512-jDctJ/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7blbT6dHOafNAiS8ooQKA==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/bip174": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/bip174/-/bip174-2.1.0.tgz",
      "integrity": "sha512-lkc0XyiX9E9KiVAS1ZiOqK1xfiwvf4FXDDdkDq5crcDzOq+xGytY+14qCsqz7kCiy8rpN1CRNfacRhf9G3JNSA==",
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/bip32": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/bip32/-/bip32-3.1.0.tgz",
      "integrity": "sha512-eoeajYEzJ4d6yyVtby8C+XkCeKItiC4Mx56a0M9VaqTMC73SWOm4xVZG7SaR8e/yp4eSyky2XcBpH3DApPdu7Q==",
      "dependencies": {
        "bs58check": "^2.1.1",
        "create-hash": "^1.2.0",
        "create-hmac": "^1.1.7",
        "ripemd160": "^2.0.2",
        "typeforce": "^1.11.5",
        "wif": "^2.0.6"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/bip39": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/bip39/-/bip39-3.1.0.tgz",
      "integrity": "sha512-c9kiwdk45Do5GL0vJMe7tS95VjCii65mYAH7DfWl3uW8AVzXKQVUm64i3hzVybBDMp9r7j9iNxR85+ul8MdN/A==",
      "dependencies": {
        "@noble/hashes": "^1.2.0"
      }
    },
    "node_modules/bip39-light": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/bip39-light/-/bip39-light-1.0.7.tgz",
      "integrity": "sha512-WDTmLRQUsiioBdTs9BmSEmkJza+8xfJmptsNJjxnoq3EydSa/ZBXT6rm66KoT3PJIRYMnhSKNR7S9YL1l7R40Q==",
      "dependencies": {
        "create-hash": "^1.1.0",
        "pbkdf2": "^3.0.9"
      }
    },
    "node_modules/bitcoinjs-lib": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/bitcoinjs-lib/-/bitcoinjs-lib-6.1.0.tgz",
      "integrity": "sha512-eupi1FBTJmPuAZdChnzTXLv2HBqFW2AICpzXZQLniP0V9FWWeeUQSMKES6sP8isy/xO0ijDexbgkdEyFVrsuJw==",
      "dependencies": {
        "bech32": "^2.0.0",
        "bip174": "^2.1.0",
        "bs58check": "^2.1.2",
        "create-hash": "^1.1.0",
        "ripemd160": "^2.0.2",
        "typeforce": "^1.11.3",
        "varuint-bitcoin": "^1.1.2",
        "wif": "^2.0.1"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/bl": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/bl/-/bl-4.1.0.tgz",
      "integrity": "sha512-1W07cM9gS6DcLperZfFSj+bWLtaPGSOHWhPiGzXmvVJbRLdG82sH/Kn8EtW1VqWVA54AKf2h5k5BbnIbwF3h6w==",
      "dependencies": {
        "buffer": "^5.5.0",
        "inherits": "^2.0.4",
        "readable-stream": "^3.4.0"
      }
    },
    "node_modules/bl/node_modules/buffer": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz",
      "integrity": "sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "dependencies": {
        "base64-js": "^1.3.1",
        "ieee754": "^1.1.13"
      }
    },
    "node_modules/blakejs": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/blakejs/-/blakejs-1.2.1.tgz",
      "integrity": "sha512-QXUSXI3QVc/gJME0dBpXrag1kbzOqCjCX8/b54ntNyW6sjtoqxqRk3LTmXzaJoh71zMsDCjM+47jS7XiwN/+fQ=="
    },
    "node_modules/bluebird": {
      "version": "3.7.2",
      "resolved": "https://registry.npmjs.org/bluebird/-/bluebird-3.7.2.tgz",
      "integrity": "sha512-XpNj6GDQzdfW+r2Wnn7xiSAd7TM3jzkxGXBGTtWKuSXv1xUV+azxAm8jdWZN06QTQk+2N2XB9jRDkvbmQmcRtg=="
    },
    "node_modules/bn.js": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-5.2.1.tgz",
      "integrity": "sha512-eXRvHzWyYPBuB4NBy0cmYQjGitUrtqwbvlzP3G6VFnNRbsZQIxQ10PbKKHt8gZ/HW/D/747aDl+QkDqg3KQLMQ=="
    },
    "node_modules/body-parser": {
      "version": "1.20.1",
      "resolved": "https://registry.npmjs.org/body-parser/-/body-parser-1.20.1.tgz",
      "integrity": "sha512-jWi7abTbYwajOytWCQc37VulmWiRae5RyTpaCyDcS5/lMdtwSz5lOpDE67srw/HYe35f1z3fDQw+3txg7gNtWw==",
      "dependencies": {
        "bytes": "3.1.2",
        "content-type": "~1.0.4",
        "debug": "2.6.9",
        "depd": "2.0.0",
        "destroy": "1.2.0",
        "http-errors": "2.0.0",
        "iconv-lite": "0.4.24",
        "on-finished": "2.4.1",
        "qs": "6.11.0",
        "raw-body": "2.5.1",
        "type-is": "~1.6.18",
        "unpipe": "1.0.0"
      },
      "engines": {
        "node": ">= 0.8",
        "npm": "1.2.8000 || >= 1.4.16"
      }
    },
    "node_modules/borsh": {
      "version": "0.7.0",
      "resolved": "https://registry.npmjs.org/borsh/-/borsh-0.7.0.tgz",
      "integrity": "sha512-CLCsZGIBCFnPtkNnieW/a8wmreDmfUtjU2m9yHrzPXIlNbqVs0AQrSatSG6vdNYUqdc83tkQi2eHfF98ubzQLA==",
      "dependencies": {
        "bn.js": "^5.2.0",
        "bs58": "^4.0.0",
        "text-encoding-utf-8": "^1.0.2"
      }
    },
    "node_modules/brace-expansion": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz",
      "integrity": "sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==",
      "dependencies": {
        "balanced-match": "^1.0.0"
      }
    },
    "node_modules/braces": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.2.tgz",
      "integrity": "sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==",
      "dev": true,
      "dependencies": {
        "fill-range": "^7.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/brorand": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/brorand/-/brorand-1.1.0.tgz",
      "integrity": "sha512-cKV8tMCEpQs4hK/ik71d6LrPOnpkpGBR0wzxqr68g2m/LB2GxVYQroAjMJZRVM1Y4BCjCKc3vAamxSzOY2RP+w=="
    },
    "node_modules/browserify-aes": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/browserify-aes/-/browserify-aes-1.2.0.tgz",
      "integrity": "sha512-+7CHXqGuspUn/Sl5aO7Ea0xWGAtETPXNSAjHo48JfLdPWcMng33Xe4znFvQweqc/uzk5zSOI3H52CYnjCfb5hA==",
      "dependencies": {
        "buffer-xor": "^1.0.3",
        "cipher-base": "^1.0.0",
        "create-hash": "^1.1.0",
        "evp_bytestokey": "^1.0.3",
        "inherits": "^2.0.1",
        "safe-buffer": "^5.0.1"
      }
    },
    "node_modules/browserslist": {
      "version": "4.21.9",
      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.21.9.tgz",
      "integrity": "sha512-M0MFoZzbUrRU4KNfCrDLnvyE7gub+peetoTid3TBIqtunaDJyXlwhakT+/VkvSXcfIzFfK/nkCs4nmyTmxdNSg==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "dependencies": {
        "caniuse-lite": "^1.0.30001503",
        "electron-to-chromium": "^1.4.431",
        "node-releases": "^2.0.12",
        "update-browserslist-db": "^1.0.11"
      },
      "bin": {
        "browserslist": "cli.js"
      },
      "engines": {
        "node": "^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7"
      }
    },
    "node_modules/bs58": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/bs58/-/bs58-4.0.1.tgz",
      "integrity": "sha512-Ok3Wdf5vOIlBrgCvTq96gBkJw+JUEzdBgyaza5HLtPm7yTHkjRy8+JzNyHF7BHa0bNWOQIp3m5YF0nnFcOIKLw==",
      "dependencies": {
        "base-x": "^3.0.2"
      }
    },
    "node_modules/bs58check": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/bs58check/-/bs58check-2.1.2.tgz",
      "integrity": "sha512-0TS1jicxdU09dwJMNZtVAfzPi6Q6QeN0pM1Fkzrjn+XYHvzMKPU3pHVpva+769iNVSfIYWf7LJ6WR+BuuMf8cA==",
      "dependencies": {
        "bs58": "^4.0.0",
        "create-hash": "^1.1.0",
        "safe-buffer": "^5.1.2"
      }
    },
    "node_modules/buffer": {
      "version": "6.0.3",
      "resolved": "https://registry.npmjs.org/buffer/-/buffer-6.0.3.tgz",
      "integrity": "sha512-FTiCpNxtwiZZHEZbcbTIcZjERVICn9yq/pDFkTl95/AxzD1naBctN7YO68riM/gLSDY7sdrMby8hofADYuuqOA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "dependencies": {
        "base64-js": "^1.3.1",
        "ieee754": "^1.2.1"
      }
    },
    "node_modules/buffer-from": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.2.tgz",
      "integrity": "sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ=="
    },
    "node_modules/buffer-to-arraybuffer": {
      "version": "0.0.5",
      "resolved": "https://registry.npmjs.org/buffer-to-arraybuffer/-/buffer-to-arraybuffer-0.0.5.tgz",
      "integrity": "sha512-3dthu5CYiVB1DEJp61FtApNnNndTckcqe4pFcLdvHtrpG+kcyekCJKg4MRiDcFW7A6AODnXB9U4dwQiCW5kzJQ=="
    },
    "node_modules/buffer-writer": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/buffer-writer/-/buffer-writer-2.0.0.tgz",
      "integrity": "sha512-a7ZpuTZU1TRtnwyCNW3I5dc0wWNC3VR9S++Ewyk2HHZdrO3CQJqSpd+95Us590V6AL7JqUAH2IwZ/398PmNFgw==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/buffer-xor": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/buffer-xor/-/buffer-xor-1.0.3.tgz",
      "integrity": "sha512-571s0T7nZWK6vB67HI5dyUF7wXiNcfaPPPTl6zYCNApANjIvYJTg7hlud/+cJpdAhS7dVzqMLmfhfHR3rAcOjQ=="
    },
    "node_modules/bufferutil": {
      "version": "4.0.7",
      "resolved": "https://registry.npmjs.org/bufferutil/-/bufferutil-4.0.7.tgz",
      "integrity": "sha512-kukuqc39WOHtdxtw4UScxF/WVnMFVSQVKhtx3AjZJzhd0RGZZldcrfSEbVsWWe6KNH253574cq5F+wpv0G9pJw==",
      "hasInstallScript": true,
      "dependencies": {
        "node-gyp-build": "^4.3.0"
      },
      "engines": {
        "node": ">=6.14.2"
      }
    },
    "node_modules/builtin-modules": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/builtin-modules/-/builtin-modules-3.3.0.tgz",
      "integrity": "sha512-zhaCDicdLuWN5UbN5IMnFqNMhNfo919sH85y2/ea+5Yg9TsTkeZxpL+JLbp6cgYFS4sRLp3YV4S6yDuqVWHYOw==",
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/busboy": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/busboy/-/busboy-1.6.0.tgz",
      "integrity": "sha512-8SFQbg/0hQ9xy3UNTB0YEnsNBbWfhf7RtnzpL7TkBiTBRfrQ9Fxcnz7VJsleJpyp6rVLvXiuORqjlHi5q+PYuA==",
      "dependencies": {
        "streamsearch": "^1.1.0"
      },
      "engines": {
        "node": ">=10.16.0"
      }
    },
    "node_modules/bytes": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz",
      "integrity": "sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/cacheable-lookup": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/cacheable-lookup/-/cacheable-lookup-6.1.0.tgz",
      "integrity": "sha512-KJ/Dmo1lDDhmW2XDPMo+9oiy/CeqosPguPCrgcVzKyZrL6pM1gU2GmPY/xo6OQPTUaA/c0kwHuywB4E6nmT9ww==",
      "engines": {
        "node": ">=10.6.0"
      }
    },
    "node_modules/cacheable-request": {
      "version": "7.0.2",
      "resolved": "https://registry.npmjs.org/cacheable-request/-/cacheable-request-7.0.2.tgz",
      "integrity": "sha512-pouW8/FmiPQbuGpkXQ9BAPv/Mo5xDGANgSNXzTzJ8DrKGuXOssM4wIQRjfanNRh3Yu5cfYPvcorqbhg2KIJtew==",
      "dependencies": {
        "clone-response": "^1.0.2",
        "get-stream": "^5.1.0",
        "http-cache-semantics": "^4.0.0",
        "keyv": "^4.0.0",
        "lowercase-keys": "^2.0.0",
        "normalize-url": "^6.0.1",
        "responselike": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/cacheable-request/node_modules/get-stream": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-5.2.0.tgz",
      "integrity": "sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==",
      "dependencies": {
        "pump": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/cacheable-request/node_modules/lowercase-keys": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-2.0.0.tgz",
      "integrity": "sha512-tqNXrS78oMOE73NMxK4EMLQsQowWf8jKooH9g7xPavRT706R6bkQJ6DY2Te7QukaZsulxa30wQ7bk0pm4XiHmA==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/call-bind": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/call-bind/-/call-bind-1.0.2.tgz",
      "integrity": "sha512-7O+FbCihrB5WGbFYesctwmTKae6rOiIzmz1icreWJ+0aA7LJfuqhEso2T9ncpcFtzMQtzXf2QGGueWJGTYsqrA==",
      "dependencies": {
        "function-bind": "^1.1.1",
        "get-intrinsic": "^1.0.2"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/call-me-maybe": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/call-me-maybe/-/call-me-maybe-1.0.2.tgz",
      "integrity": "sha512-HpX65o1Hnr9HH25ojC1YGs7HCQLq0GCOibSaWER0eNpgJ/Z1MZv2mTc7+xh6WOPxbRVcmgbv4hGU+uSQ/2xFZQ=="
    },
    "node_modules/callsites": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
      "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/camelcase": {
      "version": "5.3.1",
      "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz",
      "integrity": "sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/camelize": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/camelize/-/camelize-1.0.1.tgz",
      "integrity": "sha512-dU+Tx2fsypxTgtLoE36npi3UqcjSSMNYfkqgmoEhtZrraP5VWq0K7FkWVTYa8eMPtnU/G2txVsfdCJTn9uzpuQ==",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/caniuse-lite": {
      "version": "1.0.30001509",
      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001509.tgz",
      "integrity": "sha512-2uDDk+TRiTX5hMcUYT/7CSyzMZxjfGu0vAUjS2g0LSD8UoXOv0LtpH4LxGMemsiPq6LCVIUjNwVM0erkOkGCDA==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/caniuse-lite"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ]
    },
    "node_modules/capability": {
      "version": "0.2.5",
      "resolved": "https://registry.npmjs.org/capability/-/capability-0.2.5.tgz",
      "integrity": "sha512-rsJZYVCgXd08sPqwmaIqjAd5SUTfonV0z/gDJ8D6cN8wQphky1kkAYEqQ+hmDxTw7UihvBfjUVUSY+DBEe44jg=="
    },
    "node_modules/caseless": {
      "version": "0.12.0",
      "resolved": "https://registry.npmjs.org/caseless/-/caseless-0.12.0.tgz",
      "integrity": "sha512-4tYFyifaFfGacoiObjJegolkwSU4xQNGbVgUiNYVUxbQ2x2lUsFvY4hVgVzGiIe6WLOPqycWXA40l+PWsxthUw=="
    },
    "node_modules/chalk": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
      "dependencies": {
        "ansi-styles": "^4.1.0",
        "supports-color": "^7.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/chalk?sponsor=1"
      }
    },
    "node_modules/chalk/node_modules/has-flag": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/chalk/node_modules/supports-color": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
      "dependencies": {
        "has-flag": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/child_process": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/child_process/-/child_process-1.0.2.tgz",
      "integrity": "sha512-Wmza/JzL0SiWz7kl6MhIKT5ceIlnFPJX+lwUGj7Clhy5MMldsSoJR0+uvRzOS5Kv45Mq7t1PoE8TsOA9bzvb6g=="
    },
    "node_modules/chokidar": {
      "version": "3.5.3",
      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.5.3.tgz",
      "integrity": "sha512-Dr3sfKRP6oTcjf2JmUmFJfeVMvXBdegxB0iVQ5eb2V10uFJUCAS8OByZdVAyVb8xXNz3GjjTgj9kLWsZTqE6kw==",
      "dev": true,
      "funding": [
        {
          "type": "individual",
          "url": "https://paulmillr.com/funding/"
        }
      ],
      "dependencies": {
        "anymatch": "~3.1.2",
        "braces": "~3.0.2",
        "glob-parent": "~5.1.2",
        "is-binary-path": "~2.1.0",
        "is-glob": "~4.0.1",
        "normalize-path": "~3.0.0",
        "readdirp": "~3.6.0"
      },
      "engines": {
        "node": ">= 8.10.0"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.2"
      }
    },
    "node_modules/chownr": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/chownr/-/chownr-1.1.4.tgz",
      "integrity": "sha512-jJ0bqzaylmJtVnNgzTeSOs8DPavpbYgEr/b0YL8/2GO3xJEhInFmhKMUnEJQjZumK7KXGFhUy89PrsJWlakBVg=="
    },
    "node_modules/cids": {
      "version": "0.7.5",
      "resolved": "https://registry.npmjs.org/cids/-/cids-0.7.5.tgz",
      "integrity": "sha512-zT7mPeghoWAu+ppn8+BS1tQ5qGmbMfB4AregnQjA/qHY3GC1m1ptI9GkWNlgeu38r7CuRdXB47uY2XgAYt6QVA==",
      "deprecated": "This module has been superseded by the multiformats module",
      "dependencies": {
        "buffer": "^5.5.0",
        "class-is": "^1.1.0",
        "multibase": "~0.6.0",
        "multicodec": "^1.0.0",
        "multihashes": "~0.4.15"
      },
      "engines": {
        "node": ">=4.0.0",
        "npm": ">=3.0.0"
      }
    },
    "node_modules/cids/node_modules/buffer": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz",
      "integrity": "sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "dependencies": {
        "base64-js": "^1.3.1",
        "ieee754": "^1.1.13"
      }
    },
    "node_modules/cids/node_modules/multicodec": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/multicodec/-/multicodec-1.0.4.tgz",
      "integrity": "sha512-NDd7FeS3QamVtbgfvu5h7fd1IlbaC4EQ0/pgU4zqE2vdHCmBGsUa0TiM8/TdSeG6BMPC92OOCf8F1ocE/Wkrrg==",
      "deprecated": "This module has been superseded by the multiformats module",
      "dependencies": {
        "buffer": "^5.6.0",
        "varint": "^5.0.0"
      }
    },
    "node_modules/cipher-base": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/cipher-base/-/cipher-base-1.0.4.tgz",
      "integrity": "sha512-Kkht5ye6ZGmwv40uUDZztayT2ThLQGfnj/T71N/XzeZeo3nf8foyW7zGTsPYkEya3m5f3cAypH+qe7YOrM1U2Q==",
      "dependencies": {
        "inherits": "^2.0.1",
        "safe-buffer": "^5.0.1"
      }
    },
    "node_modules/class-is": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/class-is/-/class-is-1.1.0.tgz",
      "integrity": "sha512-rhjH9AG1fvabIDoGRVH587413LPjTZgmDF9fOFCbFJQV4yuocX1mHxxvXI4g3cGwbVY9wAYIoKlg1N79frJKQw=="
    },
    "node_modules/classnames": {
      "version": "2.3.2",
      "resolved": "https://registry.npmjs.org/classnames/-/classnames-2.3.2.tgz",
      "integrity": "sha512-CSbhY4cFEJRe6/GQzIk5qXZ4Jeg5pcsP7b5peFSDpffpe1cqjASH/n9UTjBwOp6XpMSTwQ8Za2K5V02ueA7Tmw=="
    },
    "node_modules/cli-cursor": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/cli-cursor/-/cli-cursor-3.1.0.tgz",
      "integrity": "sha512-I/zHAwsKf9FqGoXM4WWRACob9+SNukZTd94DWF57E4toouRulbCxcUh6RKUEOQlYTHJnzkPMySvPNaaSLNfLZw==",
      "dependencies": {
        "restore-cursor": "^3.1.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/cli-highlight": {
      "version": "2.1.11",
      "resolved": "https://registry.npmjs.org/cli-highlight/-/cli-highlight-2.1.11.tgz",
      "integrity": "sha512-9KDcoEVwyUXrjcJNvHD0NFc/hiwe/WPVYIleQh2O1N2Zro5gWJZ/K+3DGn8w8P/F6FxOgzyC5bxDyHIgCSPhGg==",
      "dependencies": {
        "chalk": "^4.0.0",
        "highlight.js": "^10.7.1",
        "mz": "^2.4.0",
        "parse5": "^5.1.1",
        "parse5-htmlparser2-tree-adapter": "^6.0.0",
        "yargs": "^16.0.0"
      },
      "bin": {
        "highlight": "bin/highlight"
      },
      "engines": {
        "node": ">=8.0.0",
        "npm": ">=5.0.0"
      }
    },
    "node_modules/cli-highlight/node_modules/cliui": {
      "version": "7.0.4",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-7.0.4.tgz",
      "integrity": "sha512-OcRE68cOsVMXp1Yvonl/fzkQOyjLSu/8bhPDfQt0e0/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==",
      "dependencies": {
        "string-width": "^4.2.0",
        "strip-ansi": "^6.0.0",
        "wrap-ansi": "^7.0.0"
      }
    },
    "node_modules/cli-highlight/node_modules/wrap-ansi": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/cli-highlight/node_modules/y18n": {
      "version": "5.0.8",
      "resolved": "https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz",
      "integrity": "sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/cli-highlight/node_modules/yargs": {
      "version": "16.2.0",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-16.2.0.tgz",
      "integrity": "sha512-D1mvvtDG0L5ft/jGWkLpG1+m0eQxOfaBvTNELraWj22wSVUMWxZUvYgJYcKh6jGGIkJFhH4IZPQhR4TKpc8mBw==",
      "dependencies": {
        "cliui": "^7.0.2",
        "escalade": "^3.1.1",
        "get-caller-file": "^2.0.5",
        "require-directory": "^2.1.1",
        "string-width": "^4.2.0",
        "y18n": "^5.0.5",
        "yargs-parser": "^20.2.2"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/cli-highlight/node_modules/yargs-parser": {
      "version": "20.2.9",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-20.2.9.tgz",
      "integrity": "sha512-y11nGElTIV+CT3Zv9t7VKl+Q3hTQoT9a1Qzezhhl6Rp21gJ/IVTW7Z3y9EWXhuUBC2Shnf+DX0antecpAwSP8w==",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/cli-spinners": {
      "version": "2.9.0",
      "resolved": "https://registry.npmjs.org/cli-spinners/-/cli-spinners-2.9.0.tgz",
      "integrity": "sha512-4/aL9X3Wh0yiMQlE+eeRhWP6vclO3QRtw1JHKIT0FFUs5FjpFmESqtMvYZ0+lbzBw900b95mS0hohy+qn2VK/g==",
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/cliui": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-6.0.0.tgz",
      "integrity": "sha512-t6wbgtoCXvAzst7QgXxJYqPt0usEfbgQdftEPbLL/cvv6HPE5VgvqCuAIDR0NgU52ds6rFwqrgakNLrHEjCbrQ==",
      "dependencies": {
        "string-width": "^4.2.0",
        "strip-ansi": "^6.0.0",
        "wrap-ansi": "^6.2.0"
      }
    },
    "node_modules/clone": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",
      "integrity": "sha512-3Pe/CF1Nn94hyhIYpjtiLhdCoEoz0DqQ+988E9gmeEdQZlojxnOb74wctFyuwWQHzqyf9X7C7MG8juUpqBJT8w==",
      "engines": {
        "node": ">=0.8"
      }
    },
    "node_modules/clone-deep": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/clone-deep/-/clone-deep-4.0.1.tgz",
      "integrity": "sha512-neHB9xuzh/wk0dIHweyAXv2aPGZIVk3pLMe+/RNzINf17fe0OG96QroktYAUm7SM1PBnzTabaLboqqxDyMU+SQ==",
      "dependencies": {
        "is-plain-object": "^2.0.4",
        "kind-of": "^6.0.2",
        "shallow-clone": "^3.0.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/clone-response": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/clone-response/-/clone-response-1.0.3.tgz",
      "integrity": "sha512-ROoL94jJH2dUVML2Y/5PEDNaSHgeOdSDicUyS7izcF63G6sTc/FTjLub4b8Il9S8S0beOfYt0TaA5qvFK+w0wA==",
      "dependencies": {
        "mimic-response": "^1.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/color-convert": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
      "dependencies": {
        "color-name": "~1.1.4"
      },
      "engines": {
        "node": ">=7.0.0"
      }
    },
    "node_modules/color-name": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA=="
    },
    "node_modules/combined-stream": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
      "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
      "dependencies": {
        "delayed-stream": "~1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/commander": {
      "version": "6.2.0",
      "resolved": "https://registry.npmjs.org/commander/-/commander-6.2.0.tgz",
      "integrity": "sha512-zP4jEKbe8SHzKJYQmq8Y9gYjtO/POJLgIdKgV7B9qNmABVFVc+ctqSX6iXh4mCpJfRBOabiZ2YKPg8ciDw6C+Q==",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/commondir": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/commondir/-/commondir-1.0.1.tgz",
      "integrity": "sha512-W9pAhw0ja1Edb5GVdIF1mjZw/ASI0AlShXM83UUGe2DVr5TdAPEA1OA8m/g8zWp9x6On7gqufY+FatDbC3MDQg=="
    },
    "node_modules/complex.js": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/complex.js/-/complex.js-2.1.1.tgz",
      "integrity": "sha512-8njCHOTtFFLtegk6zQo0kkVX1rngygb/KQI6z1qZxlFI3scluC+LVTCFbrkWjBv4vvLlbQ9t88IPMC6k95VTTg==",
      "engines": {
        "node": "*"
      },
      "funding": {
        "type": "patreon",
        "url": "https://www.patreon.com/infusion"
      }
    },
    "node_modules/concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg=="
    },
    "node_modules/concat-stream": {
      "version": "1.6.2",
      "resolved": "https://registry.npmjs.org/concat-stream/-/concat-stream-1.6.2.tgz",
      "integrity": "sha512-27HBghJxjiZtIk3Ycvn/4kbJk/1uZuJFfuPEns6LaEvpvG1f0hTea8lilrouyo9mVc2GWdcEZ8OLoGmSADlrCw==",
      "engines": [
        "node >= 0.8"
      ],
      "dependencies": {
        "buffer-from": "^1.0.0",
        "inherits": "^2.0.3",
        "readable-stream": "^2.2.2",
        "typedarray": "^0.0.6"
      }
    },
    "node_modules/concat-stream/node_modules/readable-stream": {
      "version": "2.3.8",
      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.8.tgz",
      "integrity": "sha512-8p0AUk4XODgIewSi0l8Epjs+EVnWiK7NoDIEGU0HhE7+ZyY8D1IMY7odu5lRrFXGg71L15KG8QrPmum45RTtdA==",
      "dependencies": {
        "core-util-is": "~1.0.0",
        "inherits": "~2.0.3",
        "isarray": "~1.0.0",
        "process-nextick-args": "~2.0.0",
        "safe-buffer": "~5.1.1",
        "string_decoder": "~1.1.1",
        "util-deprecate": "~1.0.1"
      }
    },
    "node_modules/concat-stream/node_modules/safe-buffer": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="
    },
    "node_modules/concat-stream/node_modules/string_decoder": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
      "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
      "dependencies": {
        "safe-buffer": "~5.1.0"
      }
    },
    "node_modules/content-disposition": {
      "version": "0.5.4",
      "resolved": "https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.4.tgz",
      "integrity": "sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==",
      "dependencies": {
        "safe-buffer": "5.2.1"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/content-hash": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/content-hash/-/content-hash-2.5.2.tgz",
      "integrity": "sha512-FvIQKy0S1JaWV10sMsA7TRx8bpU+pqPkhbsfvOJAdjRXvYxEckAwQWGwtRjiaJfh+E0DvcWUGqcdjwMGFjsSdw==",
      "dependencies": {
        "cids": "^0.7.1",
        "multicodec": "^0.5.5",
        "multihashes": "^0.4.15"
      }
    },
    "node_modules/content-type": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/content-type/-/content-type-1.0.5.tgz",
      "integrity": "sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/convert-source-map": {
      "version": "1.9.0",
      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-1.9.0.tgz",
      "integrity": "sha512-ASFBup0Mz1uyiIjANan1jzLQami9z1PoYSZCiiYW2FczPbenXc45FZdBZLzOT+r6+iciuEModtmCti+hjaAk0A=="
    },
    "node_modules/cookie": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.5.0.tgz",
      "integrity": "sha512-YZ3GUyn/o8gfKJlnlX7g7xq4gyO6OSuhGPKaaGssGB2qgDUS0gPgtTvoyZLTt9Ab6dC4hfc9dV5arkvc/OCmrw==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/cookie-signature": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz",
      "integrity": "sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ=="
    },
    "node_modules/core-js": {
      "version": "2.6.12",
      "resolved": "https://registry.npmjs.org/core-js/-/core-js-2.6.12.tgz",
      "integrity": "sha512-Kb2wC0fvsWfQrgk8HU5lW6U/Lcs8+9aaYcy4ZFc6DDlo4nZ7n70dEgE5rtR0oG6ufKDUnrwfWL1mXR5ljDatrQ==",
      "deprecated": "core-js@<3.23.3 is no longer maintained and not recommended for usage due to the number of issues. Because of the V8 engine whims, feature detection in old core-js versions could cause a slowdown up to 100x even if nothing is polyfilled. Some versions have web compatibility issues. Please, upgrade your dependencies to the actual version of core-js.",
      "hasInstallScript": true
    },
    "node_modules/core-js-compat": {
      "version": "3.31.0",
      "resolved": "https://registry.npmjs.org/core-js-compat/-/core-js-compat-3.31.0.tgz",
      "integrity": "sha512-hM7YCu1cU6Opx7MXNu0NuumM0ezNeAeRKadixyiQELWY3vT3De9S4J5ZBMraWV2vZnrE1Cirl0GtFtDtMUXzPw==",
      "dependencies": {
        "browserslist": "^4.21.5"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/core-js"
      }
    },
    "node_modules/core-util-is": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz",
      "integrity": "sha512-3lqz5YjWTYnW6dlDa5TLaTCcShfar1e40rmcJVwCBJC6mWlFuj0eCHIElmG1g5kyuJ/GD+8Wn4FFCcz4gJPfaQ=="
    },
    "node_modules/cors": {
      "version": "2.8.5",
      "resolved": "https://registry.npmjs.org/cors/-/cors-2.8.5.tgz",
      "integrity": "sha512-KIHbLJqu73RGr/hnbrO9uBeixNGuvSQjul/jdFvS/KFSIH1hWVd1ng7zOHx+YrEfInLG7q4n6GHQ9cDtxv/P6g==",
      "dependencies": {
        "object-assign": "^4",
        "vary": "^1"
      },
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/cosmiconfig": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/cosmiconfig/-/cosmiconfig-6.0.0.tgz",
      "integrity": "sha512-xb3ZL6+L8b9JLLCx3ZdoZy4+2ECphCMo2PwqgP1tlfVq6M6YReyzBJtvWWtbDSpNr9hn96pkCiZqUcFEc+54Qg==",
      "dependencies": {
        "@types/parse-json": "^4.0.0",
        "import-fresh": "^3.1.0",
        "parse-json": "^5.0.0",
        "path-type": "^4.0.0",
        "yaml": "^1.7.2"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/cosmiconfig/node_modules/yaml": {
      "version": "1.10.2",
      "resolved": "https://registry.npmjs.org/yaml/-/yaml-1.10.2.tgz",
      "integrity": "sha512-r3vXyErRCYJ7wg28yvBY5VSoAF8ZvlcW9/BwUzEtUsjvX/DKs24dIkuwjtuprwJJHsbyUbLApepYTR1BN4uHrg==",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/crc-32": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/crc-32/-/crc-32-1.2.2.tgz",
      "integrity": "sha512-ROmzCKrTnOwybPcJApAA6WBWij23HVfGVNKqqrZpuyZOHqK2CwHSvpGuyt/UNNvaIjEd8X5IFGp4Mh+Ie1IHJQ==",
      "bin": {
        "crc32": "bin/crc32.njs"
      },
      "engines": {
        "node": ">=0.8"
      }
    },
    "node_modules/create-hash": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/create-hash/-/create-hash-1.2.0.tgz",
      "integrity": "sha512-z00bCGNHDG8mHAkP7CtT1qVu+bFQUPjYq/4Iv3C3kWjTFV10zIjfSoeqXo9Asws8gwSHDGj/hl2u4OGIjapeCg==",
      "dependencies": {
        "cipher-base": "^1.0.1",
        "inherits": "^2.0.1",
        "md5.js": "^1.3.4",
        "ripemd160": "^2.0.1",
        "sha.js": "^2.4.0"
      }
    },
    "node_modules/create-hmac": {
      "version": "1.1.7",
      "resolved": "https://registry.npmjs.org/create-hmac/-/create-hmac-1.1.7.tgz",
      "integrity": "sha512-MJG9liiZ+ogc4TzUwuvbER1JRdgvUFSB5+VR/g5h82fGaIRWMWddtKBHi7/sVhfjQZ6SehlyhvQYrcYkaUIpLg==",
      "dependencies": {
        "cipher-base": "^1.0.3",
        "create-hash": "^1.1.0",
        "inherits": "^2.0.1",
        "ripemd160": "^2.0.0",
        "safe-buffer": "^5.0.1",
        "sha.js": "^2.4.8"
      }
    },
    "node_modules/create-require": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/create-require/-/create-require-1.1.1.tgz",
      "integrity": "sha512-dcKFX3jn0MpIaXjisoRvexIJVEKzaq7z2rZKxf+MSr9TkdmHmsU4m2lcLojrj/FHl8mk5VxMmYA+ftRkP/3oKQ=="
    },
    "node_modules/cross-fetch": {
      "version": "3.1.6",
      "resolved": "https://registry.npmjs.org/cross-fetch/-/cross-fetch-3.1.6.tgz",
      "integrity": "sha512-riRvo06crlE8HiqOwIpQhxwdOk4fOeR7FVM/wXoxchFEqMNUjvbs3bfo4OTgMEMHzppd4DxFBDbyySj8Cv781g==",
      "dependencies": {
        "node-fetch": "^2.6.11"
      }
    },
    "node_modules/cross-fetch/node_modules/node-fetch": {
      "version": "2.6.11",
      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.11.tgz",
      "integrity": "sha512-4I6pdBY1EthSqDmJkiNk3JIT8cswwR9nfeW/cPdUagJYEQG7R95WRH74wpz7ma8Gh/9dI9FP+OU+0E4FvtA55w==",
      "dependencies": {
        "whatwg-url": "^5.0.0"
      },
      "engines": {
        "node": "4.x || >=6.0.0"
      },
      "peerDependencies": {
        "encoding": "^0.1.0"
      },
      "peerDependenciesMeta": {
        "encoding": {
          "optional": true
        }
      }
    },
    "node_modules/cross-spawn": {
      "version": "7.0.3",
      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz",
      "integrity": "sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==",
      "dependencies": {
        "path-key": "^3.1.0",
        "shebang-command": "^2.0.0",
        "which": "^2.0.1"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/crypto": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/crypto/-/crypto-1.0.1.tgz",
      "integrity": "sha512-VxBKmeNcqQdiUQUW2Tzq0t377b54N2bMtXO/qiLa+6eRRmmC4qT3D4OnTGoT/U6O9aklQ/jTwbOtRMTTY8G0Ig==",
      "deprecated": "This package is no longer supported. It's now a built-in Node module. If you've depended on crypto, you should switch to the one that's built-in."
    },
    "node_modules/crypto-js": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/crypto-js/-/crypto-js-4.1.1.tgz",
      "integrity": "sha512-o2JlM7ydqd3Qk9CA0L4NL6mTzU2sdx96a+oOfPu8Mkl/PK51vSyoi8/rQ8NknZtk44vq15lmhAj9CIAGwgeWKw=="
    },
    "node_modules/css-box-model": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/css-box-model/-/css-box-model-1.2.1.tgz",
      "integrity": "sha512-a7Vr4Q/kd/aw96bnJG332W9V9LkJO69JRcaCYDUqjp6/z0w6VcZjgAcTbgFxEPfBgdnAwlh3iwu+hLopa+flJw==",
      "dependencies": {
        "tiny-invariant": "^1.0.6"
      }
    },
    "node_modules/css-color-keywords": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/css-color-keywords/-/css-color-keywords-1.0.0.tgz",
      "integrity": "sha512-FyyrDHZKEjXDpNJYvVsV960FiqQyXc/LlYmsxl2BcdMb2WPx0OGRVgTg55rPSyLSNMqP52R9r8geSp7apN3Ofg==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/css-to-react-native": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/css-to-react-native/-/css-to-react-native-3.2.0.tgz",
      "integrity": "sha512-e8RKaLXMOFii+02mOlqwjbD00KSEKqblnpO9e++1aXS1fPQOpS1YoqdVHBqPjHNoxeF2mimzVqawm2KCbEdtHQ==",
      "dependencies": {
        "camelize": "^1.0.0",
        "css-color-keywords": "^1.0.0",
        "postcss-value-parser": "^4.0.2"
      }
    },
    "node_modules/csstype": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/csstype/-/csstype-3.1.2.tgz",
      "integrity": "sha512-I7K1Uu0MBPzaFKg4nI5Q7Vs2t+3gWWW648spaF+Rg7pI9ds18Ugn+lvg4SHczUdKlHI5LWBXyqfS8+DufyBsgQ=="
    },
    "node_modules/d": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/d/-/d-1.0.1.tgz",
      "integrity": "sha512-m62ShEObQ39CfralilEQRjH6oAMtNCV1xJyEx5LpRYUVN+EviphDgUc/F3hnYbADmkiNs67Y+3ylmlG7Lnu+FA==",
      "dependencies": {
        "es5-ext": "^0.10.50",
        "type": "^1.0.1"
      }
    },
    "node_modules/dashdash": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/dashdash/-/dashdash-1.14.1.tgz",
      "integrity": "sha512-jRFi8UDGo6j+odZiEpjazZaWqEal3w/basFjQHQEwVtZJGDpxbH1MeYluwCS8Xq5wmLJooDlMgvVarmWfGM44g==",
      "dependencies": {
        "assert-plus": "^1.0.0"
      },
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/data-uri-to-buffer": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/data-uri-to-buffer/-/data-uri-to-buffer-4.0.1.tgz",
      "integrity": "sha512-0R9ikRb668HB7QDxT1vkpuUBtqc53YyAwMwGeUFKRojY/NWKvdZ+9UYtRfGmhqNbRkTSVpMbmyhXipFFv2cb/A==",
      "engines": {
        "node": ">= 12"
      }
    },
    "node_modules/date-fns": {
      "version": "2.29.3",
      "resolved": "https://registry.npmjs.org/date-fns/-/date-fns-2.29.3.tgz",
      "integrity": "sha512-dDCnyH2WnnKusqvZZ6+jA1O51Ibt8ZMRNkDZdyAyK4YfbDwa/cEmuztzG5pk6hqlp9aSBPYcjOlktquahGwGeA==",
      "engines": {
        "node": ">=0.11"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/date-fns"
      }
    },
    "node_modules/debug": {
      "version": "2.6.9",
      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
      "dependencies": {
        "ms": "2.0.0"
      }
    },
    "node_modules/decamelize": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz",
      "integrity": "sha512-z2S+W9X73hAUUki+N+9Za2lBlun89zigOyGrsax+KUQ6wKW4ZoWpEYBkGhQjwAjjDCkWxhY0VKEhk8wzY7F5cA==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/decimal.js": {
      "version": "10.4.3",
      "resolved": "https://registry.npmjs.org/decimal.js/-/decimal.js-10.4.3.tgz",
      "integrity": "sha512-VBBaLc1MgL5XpzgIP7ny5Z6Nx3UrRkIViUkPUdtl9aya5amy3De1gsUUSB1g3+3sExYNjCAsAznmukyxCb1GRA=="
    },
    "node_modules/decode-uri-component": {
      "version": "0.2.2",
      "resolved": "https://registry.npmjs.org/decode-uri-component/-/decode-uri-component-0.2.2.tgz",
      "integrity": "sha512-FqUYQ+8o158GyGTrMFJms9qh3CqTKvAqgqsTnkLI8sKu0028orqBhxNMFkFen0zGyg6epACD32pjVk58ngIErQ==",
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/decompress-response": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/decompress-response/-/decompress-response-6.0.0.tgz",
      "integrity": "sha512-aW35yZM6Bb/4oJlZncMH2LCoZtJXTRxES17vE3hoRiowU2kWHaJKFkSBDnDR+cm9J+9QhXmREyIfv0pji9ejCQ==",
      "dependencies": {
        "mimic-response": "^3.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/decompress-response/node_modules/mimic-response": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-3.1.0.tgz",
      "integrity": "sha512-z0yWI+4FDrrweS8Zmt4Ej5HdJmky15+L2e6Wgn3+iK5fWzb6T3fhNFq2+MeTRb064c6Wr4N/wv0DzQTjNzHNGQ==",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/deep-equal": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/deep-equal/-/deep-equal-1.1.1.tgz",
      "integrity": "sha512-yd9c5AdiqVcR+JjcwUQb9DkhJc8ngNr0MahEBGvDiJw8puWab2yZlh+nkasOnZP+EGTAP6rRp2JzJhJZzvNF8g==",
      "dependencies": {
        "is-arguments": "^1.0.4",
        "is-date-object": "^1.0.1",
        "is-regex": "^1.0.4",
        "object-is": "^1.0.1",
        "object-keys": "^1.1.1",
        "regexp.prototype.flags": "^1.2.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/deepmerge": {
      "version": "4.3.1",
      "resolved": "https://registry.npmjs.org/deepmerge/-/deepmerge-4.3.1.tgz",
      "integrity": "sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/defaults": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/defaults/-/defaults-1.0.4.tgz",
      "integrity": "sha512-eFuaLoy/Rxalv2kr+lqMlUnrDWV+3j4pljOIJgLIhI058IQfWJ7vXhyEIHu+HtC738klGALYxOKDO0bQP3tg8A==",
      "dependencies": {
        "clone": "^1.0.2"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/defaults/node_modules/clone": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/clone/-/clone-1.0.4.tgz",
      "integrity": "sha512-JQHZ2QMW6l3aH/j6xCqQThY/9OH4D/9ls34cgkUBiEeocRTU04tHfKPBsUK1PqZCUQM7GiA0IIXJSuXHI64Kbg==",
      "engines": {
        "node": ">=0.8"
      }
    },
    "node_modules/defer-to-connect": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/defer-to-connect/-/defer-to-connect-2.0.1.tgz",
      "integrity": "sha512-4tvttepXG1VaYGrRibk5EwJd1t4udunSOVMdLSAL6mId1ix438oPwPZMALY41FCijukO1L0twNcGsdzS7dHgDg==",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/define-properties": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/define-properties/-/define-properties-1.2.0.tgz",
      "integrity": "sha512-xvqAVKGfT1+UAvPwKTVw/njhdQ8ZhXK4lI0bCIuCMrp2up9nPnaDftrLtmpTazqd1o+UY4zgzU+avtMbDP+ldA==",
      "dependencies": {
        "has-property-descriptors": "^1.0.0",
        "object-keys": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/delayed-stream": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
      "integrity": "sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==",
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/depd": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz",
      "integrity": "sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/destroy": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/destroy/-/destroy-1.2.0.tgz",
      "integrity": "sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==",
      "engines": {
        "node": ">= 0.8",
        "npm": "1.2.8000 || >= 1.4.16"
      }
    },
    "node_modules/diff": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/diff/-/diff-4.0.2.tgz",
      "integrity": "sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A==",
      "engines": {
        "node": ">=0.3.1"
      }
    },
    "node_modules/dijkstrajs": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/dijkstrajs/-/dijkstrajs-1.0.2.tgz",
      "integrity": "sha512-QV6PMaHTCNmKSeP6QoXhVTw9snc9VD8MulTT0Bd99Pacp4SS1cjcrYPgBPmibqKVtMJJfqC6XvOXgPMEEPH/fg=="
    },
    "node_modules/doctrine": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-3.0.0.tgz",
      "integrity": "sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==",
      "dependencies": {
        "esutils": "^2.0.2"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/dom-helpers": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/dom-helpers/-/dom-helpers-5.2.1.tgz",
      "integrity": "sha512-nRCa7CK3VTrM2NmGkIy4cbK7IZlgBE/PYMn55rrXefr5xXDP0LdtfPnblFDoVdcAfslJ7or6iqAUnx0CCGIWQA==",
      "dependencies": {
        "@babel/runtime": "^7.8.7",
        "csstype": "^3.0.2"
      }
    },
    "node_modules/dom-walk": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/dom-walk/-/dom-walk-0.1.2.tgz",
      "integrity": "sha512-6QvTW9mrGeIegrFXdtQi9pk7O/nSK6lSdXW2eqUspN5LWD7UTji2Fqw5V2YLjBpHEoU9Xl/eUWNpDeZvoyOv2w=="
    },
    "node_modules/dotenv": {
      "version": "16.0.3",
      "resolved": "https://registry.npmjs.org/dotenv/-/dotenv-16.0.3.tgz",
      "integrity": "sha512-7GO6HghkA5fYG9TYnNxi14/7K9f5occMlp3zXAuSxn7CKCxt9xbNWG7yF8hTCSUchlfWSe3uLmlPfigevRItzQ==",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/eastasianwidth": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz",
      "integrity": "sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA=="
    },
    "node_modules/ecc-jsbn": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/ecc-jsbn/-/ecc-jsbn-0.1.2.tgz",
      "integrity": "sha512-eh9O+hwRHNbG4BLTjEl3nw044CkGm5X6LoaCf7LPp7UU8Qrt47JYNi6nPX8xjW97TKGKm1ouctg0QSpZe9qrnw==",
      "dependencies": {
        "jsbn": "~0.1.0",
        "safer-buffer": "^2.1.0"
      }
    },
    "node_modules/ecpair": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/ecpair/-/ecpair-2.1.0.tgz",
      "integrity": "sha512-cL/mh3MtJutFOvFc27GPZE2pWL3a3k4YvzUWEOvilnfZVlH3Jwgx/7d6tlD7/75tNk8TG2m+7Kgtz0SI1tWcqw==",
      "dependencies": {
        "randombytes": "^2.1.0",
        "typeforce": "^1.18.0",
        "wif": "^2.0.6"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/ee-first": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz",
      "integrity": "sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow=="
    },
    "node_modules/electron-to-chromium": {
      "version": "1.4.445",
      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.4.445.tgz",
      "integrity": "sha512-++DB+9VK8SBJwC+X1zlMfJ1tMA3F0ipi39GdEp+x3cV2TyBihqAgad8cNMWtLDEkbH39nlDQP7PfGrDr3Dr7HA=="
    },
    "node_modules/elliptic": {
      "version": "6.5.4",
      "resolved": "https://registry.npmjs.org/elliptic/-/elliptic-6.5.4.tgz",
      "integrity": "sha512-iLhC6ULemrljPZb+QutR5TQGB+pdW6KGD5RSegS+8sorOZT+rdQFbsQFJgvN3eRqNALqJer4oQ16YvJHlU8hzQ==",
      "dependencies": {
        "bn.js": "^4.11.9",
        "brorand": "^1.1.0",
        "hash.js": "^1.0.0",
        "hmac-drbg": "^1.0.1",
        "inherits": "^2.0.4",
        "minimalistic-assert": "^1.0.1",
        "minimalistic-crypto-utils": "^1.0.1"
      }
    },
    "node_modules/elliptic/node_modules/bn.js": {
      "version": "4.12.0",
      "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz",
      "integrity": "sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA=="
    },
    "node_modules/emitter-component": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/emitter-component/-/emitter-component-1.1.1.tgz",
      "integrity": "sha512-G+mpdiAySMuB7kesVRLuyvYRqDmshB7ReKEVuyBPkzQlmiDiLrt7hHHIy4Aff552bgknVN7B2/d3lzhGO5dvpQ==",
      "peer": true
    },
    "node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A=="
    },
    "node_modules/encode-utf8": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/encode-utf8/-/encode-utf8-1.0.3.tgz",
      "integrity": "sha512-ucAnuBEhUK4boH2HjVYG5Q2mQyPorvv0u/ocS+zhdw0S8AlHYY+GOFhP1Gio5z4icpP2ivFSvhtFjQi8+T9ppw=="
    },
    "node_modules/encodeurl": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz",
      "integrity": "sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/end-of-stream": {
      "version": "1.4.4",
      "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz",
      "integrity": "sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==",
      "dependencies": {
        "once": "^1.4.0"
      }
    },
    "node_modules/engine.io": {
      "version": "6.4.1",
      "resolved": "https://registry.npmjs.org/engine.io/-/engine.io-6.4.1.tgz",
      "integrity": "sha512-JFYQurD/nbsA5BSPmbaOSLa3tSVj8L6o4srSwXXY3NqE+gGUNmmPTbhn8tjzcCtSqhFgIeqef81ngny8JM25hw==",
      "dependencies": {
        "@types/cookie": "^0.4.1",
        "@types/cors": "^2.8.12",
        "@types/node": ">=10.0.0",
        "accepts": "~1.3.4",
        "base64id": "2.0.0",
        "cookie": "~0.4.1",
        "cors": "~2.8.5",
        "debug": "~4.3.1",
        "engine.io-parser": "~5.0.3",
        "ws": "~8.11.0"
      },
      "engines": {
        "node": ">=10.0.0"
      }
    },
    "node_modules/engine.io-parser": {
      "version": "5.0.6",
      "resolved": "https://registry.npmjs.org/engine.io-parser/-/engine.io-parser-5.0.6.tgz",
      "integrity": "sha512-tjuoZDMAdEhVnSFleYPCtdL2GXwVTGtNjoeJd9IhIG3C1xs9uwxqRNEu5WpnDZCaozwVlK/nuQhpodhXSIMaxw==",
      "engines": {
        "node": ">=10.0.0"
      }
    },
    "node_modules/engine.io/node_modules/cookie": {
      "version": "0.4.2",
      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.4.2.tgz",
      "integrity": "sha512-aSWTXFzaKWkvHO1Ny/s+ePFpvKsPnjc551iI41v3ny/ow6tBG5Vd+FuqGNhh1LxOmVzOlGUriIlOaokOvhaStA==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/engine.io/node_modules/debug": {
      "version": "4.3.4",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.4.tgz",
      "integrity": "sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==",
      "dependencies": {
        "ms": "2.1.2"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/engine.io/node_modules/ms": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
      "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
    },
    "node_modules/engine.io/node_modules/ws": {
      "version": "8.11.0",
      "resolved": "https://registry.npmjs.org/ws/-/ws-8.11.0.tgz",
      "integrity": "sha512-HPG3wQd9sNQoT9xHyNCXoDUa+Xw/VevmY9FoHyQ+g+rrMn4j6FB4np7Z0OhdTgjx6MgQLK7jwSy1YecU1+4Asg==",
      "engines": {
        "node": ">=10.0.0"
      },
      "peerDependencies": {
        "bufferutil": "^4.0.1",
        "utf-8-validate": "^5.0.2"
      },
      "peerDependenciesMeta": {
        "bufferutil": {
          "optional": true
        },
        "utf-8-validate": {
          "optional": true
        }
      }
    },
    "node_modules/error-ex": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz",
      "integrity": "sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==",
      "dependencies": {
        "is-arrayish": "^0.2.1"
      }
    },
    "node_modules/error-polyfill": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/error-polyfill/-/error-polyfill-0.1.3.tgz",
      "integrity": "sha512-XHJk60ufE+TG/ydwp4lilOog549iiQF2OAPhkk9DdiYWMrltz5yhDz/xnKuenNwP7gy3dsibssO5QpVhkrSzzg==",
      "dependencies": {
        "capability": "^0.2.5",
        "o3": "^1.0.3",
        "u3": "^0.1.1"
      }
    },
    "node_modules/es5-ext": {
      "version": "0.10.62",
      "resolved": "https://registry.npmjs.org/es5-ext/-/es5-ext-0.10.62.tgz",
      "integrity": "sha512-BHLqn0klhEpnOKSrzn/Xsz2UIW8j+cGmo9JLzr8BiUapV8hPL9+FliFqjwr9ngW7jWdnxv6eO+/LqyhJVqgrjA==",
      "hasInstallScript": true,
      "dependencies": {
        "es6-iterator": "^2.0.3",
        "es6-symbol": "^3.1.3",
        "next-tick": "^1.1.0"
      },
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/es6-iterator": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/es6-iterator/-/es6-iterator-2.0.3.tgz",
      "integrity": "sha512-zw4SRzoUkd+cl+ZoE15A9o1oQd920Bb0iOJMQkQhl3jNc03YqVjAhG7scf9C5KWRU/R13Orf588uCC6525o02g==",
      "dependencies": {
        "d": "1",
        "es5-ext": "^0.10.35",
        "es6-symbol": "^3.1.1"
      }
    },
    "node_modules/es6-object-assign": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/es6-object-assign/-/es6-object-assign-1.1.0.tgz",
      "integrity": "sha512-MEl9uirslVwqQU369iHNWZXsI8yaZYGg/D65aOgZkeyFJwHYSxilf7rQzXKI7DdDuBPrBXbfk3sl9hJhmd5AUw==",
      "peer": true
    },
    "node_modules/es6-promise": {
      "version": "4.2.8",
      "resolved": "https://registry.npmjs.org/es6-promise/-/es6-promise-4.2.8.tgz",
      "integrity": "sha512-HJDGx5daxeIvxdBxvG2cb9g4tEvwIk3i8+nhX0yGrYmZUzbkdg8QbDevheDB8gd0//uPj4c1EQua8Q+MViT0/w=="
    },
    "node_modules/es6-symbol": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/es6-symbol/-/es6-symbol-3.1.3.tgz",
      "integrity": "sha512-NJ6Yn3FuDinBaBRWl/q5X/s4koRHBrgKAu+yGI6JCBeiu3qrcbJhwT2GeR/EXVfylRk8dpQVJoLEFhK+Mu31NA==",
      "dependencies": {
        "d": "^1.0.1",
        "ext": "^1.1.2"
      }
    },
    "node_modules/escalade": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.1.1.tgz",
      "integrity": "sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/escape-html": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz",
      "integrity": "sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow=="
    },
    "node_modules/escape-latex": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/escape-latex/-/escape-latex-1.2.0.tgz",
      "integrity": "sha512-nV5aVWW1K0wEiUIEdZ4erkGGH8mDxGyxSeqPzRNtWP7ataw+/olFObw7hujFWlVjNsaDFw5VZ5NzVSIqRgfTiw=="
    },
    "node_modules/escape-string-regexp": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
      "integrity": "sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==",
      "engines": {
        "node": ">=0.8.0"
      }
    },
    "node_modules/estree-walker": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/estree-walker/-/estree-walker-2.0.2.tgz",
      "integrity": "sha512-Rfkk/Mp/DL7JVje3u18FxFujQlTNR2q6QfMSMB7AvCBx91NGj/ba3kCfza0f6dVDbw7YlRf/nDrn7pQrCCyQ/w=="
    },
    "node_modules/esutils": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/etag": {
      "version": "1.8.1",
      "resolved": "https://registry.npmjs.org/etag/-/etag-1.8.1.tgz",
      "integrity": "sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/eth-ens-namehash": {
      "version": "2.0.8",
      "resolved": "https://registry.npmjs.org/eth-ens-namehash/-/eth-ens-namehash-2.0.8.tgz",
      "integrity": "sha512-VWEI1+KJfz4Km//dadyvBBoBeSQ0MHTXPvr8UIXiLW6IanxvAV+DmlZAijZwAyggqGUfwQBeHf7tc9wzc1piSw==",
      "dependencies": {
        "idna-uts46-hx": "^2.3.1",
        "js-sha3": "^0.5.7"
      }
    },
    "node_modules/eth-ens-namehash/node_modules/js-sha3": {
      "version": "0.5.7",
      "resolved": "https://registry.npmjs.org/js-sha3/-/js-sha3-0.5.7.tgz",
      "integrity": "sha512-GII20kjaPX0zJ8wzkTbNDYMY7msuZcTWk8S5UOh6806Jq/wz1J8/bnr8uGU0DAUmYDjj2Mr4X1cW8v/GLYnR+g=="
    },
    "node_modules/eth-lib": {
      "version": "0.1.29",
      "resolved": "https://registry.npmjs.org/eth-lib/-/eth-lib-0.1.29.tgz",
      "integrity": "sha512-bfttrr3/7gG4E02HoWTDUcDDslN003OlOoBxk9virpAZQ1ja/jDgwkWB8QfJF7ojuEowrqy+lzp9VcJG7/k5bQ==",
      "dependencies": {
        "bn.js": "^4.11.6",
        "elliptic": "^6.4.0",
        "nano-json-stream-parser": "^0.1.2",
        "servify": "^0.1.12",
        "ws": "^3.0.0",
        "xhr-request-promise": "^0.1.2"
      }
    },
    "node_modules/eth-lib/node_modules/bn.js": {
      "version": "4.12.0",
      "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz",
      "integrity": "sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA=="
    },
    "node_modules/eth-lib/node_modules/safe-buffer": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="
    },
    "node_modules/eth-lib/node_modules/ws": {
      "version": "3.3.3",
      "resolved": "https://registry.npmjs.org/ws/-/ws-3.3.3.tgz",
      "integrity": "sha512-nnWLa/NwZSt4KQJu51MYlCcSQ5g7INpOrOMt4XV8j4dqTXdmlUmSHQ8/oLC069ckre0fRsgfvsKwbTdtKLCDkA==",
      "dependencies": {
        "async-limiter": "~1.0.0",
        "safe-buffer": "~5.1.0",
        "ultron": "~1.1.0"
      }
    },
    "node_modules/ethereum-bloom-filters": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/ethereum-bloom-filters/-/ethereum-bloom-filters-1.0.10.tgz",
      "integrity": "sha512-rxJ5OFN3RwjQxDcFP2Z5+Q9ho4eIdEmSc2ht0fCu8Se9nbXjZ7/031uXoUYJ87KHCOdVeiUuwSnoS7hmYAGVHA==",
      "dependencies": {
        "js-sha3": "^0.8.0"
      }
    },
    "node_modules/ethereum-cryptography": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/ethereum-cryptography/-/ethereum-cryptography-0.1.3.tgz",
      "integrity": "sha512-w8/4x1SGGzc+tO97TASLja6SLd3fRIK2tLVcV2Gx4IB21hE19atll5Cq9o3d0ZmAYC/8aw0ipieTSiekAea4SQ==",
      "dependencies": {
        "@types/pbkdf2": "^3.0.0",
        "@types/secp256k1": "^4.0.1",
        "blakejs": "^1.1.0",
        "browserify-aes": "^1.2.0",
        "bs58check": "^2.1.2",
        "create-hash": "^1.2.0",
        "create-hmac": "^1.1.7",
        "hash.js": "^1.1.7",
        "keccak": "^3.0.0",
        "pbkdf2": "^3.0.17",
        "randombytes": "^2.1.0",
        "safe-buffer": "^5.1.2",
        "scrypt-js": "^3.0.0",
        "secp256k1": "^4.0.1",
        "setimmediate": "^1.0.5"
      }
    },
    "node_modules/ethereumjs-abi": {
      "version": "0.6.8",
      "resolved": "https://registry.npmjs.org/ethereumjs-abi/-/ethereumjs-abi-0.6.8.tgz",
      "integrity": "sha512-Tx0r/iXI6r+lRsdvkFDlut0N08jWMnKRZ6Gkq+Nmw75lZe4e6o3EkSnkaBP5NF6+m5PTGAr9JP43N3LyeoglsA==",
      "dependencies": {
        "bn.js": "^4.11.8",
        "ethereumjs-util": "^6.0.0"
      }
    },
    "node_modules/ethereumjs-abi/node_modules/@types/bn.js": {
      "version": "4.11.6",
      "resolved": "https://registry.npmjs.org/@types/bn.js/-/bn.js-4.11.6.tgz",
      "integrity": "sha512-pqr857jrp2kPuO9uRjZ3PwnJTjoQy+fcdxvBTvHm6dkmEL9q+hDD/2j/0ELOBPtPnS8LjCX0gI9nbl8lVkadpg==",
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/ethereumjs-abi/node_modules/bn.js": {
      "version": "4.12.0",
      "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz",
      "integrity": "sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA=="
    },
    "node_modules/ethereumjs-abi/node_modules/ethereumjs-util": {
      "version": "6.2.1",
      "resolved": "https://registry.npmjs.org/ethereumjs-util/-/ethereumjs-util-6.2.1.tgz",
      "integrity": "sha512-W2Ktez4L01Vexijrm5EB6w7dg4n/TgpoYU4avuT5T3Vmnw/eCRtiBrJfQYS/DCSvDIOLn2k57GcHdeBcgVxAqw==",
      "dependencies": {
        "@types/bn.js": "^4.11.3",
        "bn.js": "^4.11.0",
        "create-hash": "^1.1.2",
        "elliptic": "^6.5.2",
        "ethereum-cryptography": "^0.1.3",
        "ethjs-util": "0.1.6",
        "rlp": "^2.2.3"
      }
    },
    "node_modules/ethereumjs-util": {
      "version": "7.1.5",
      "resolved": "https://registry.npmjs.org/ethereumjs-util/-/ethereumjs-util-7.1.5.tgz",
      "integrity": "sha512-SDl5kKrQAudFBUe5OJM9Ac6WmMyYmXX/6sTmLZ3ffG2eY6ZIGBes3pEDxNN6V72WyOw4CPD5RomKdsa8DAAwLg==",
      "dependencies": {
        "@types/bn.js": "^5.1.0",
        "bn.js": "^5.1.2",
        "create-hash": "^1.1.2",
        "ethereum-cryptography": "^0.1.3",
        "rlp": "^2.2.4"
      },
      "engines": {
        "node": ">=10.0.0"
      }
    },
    "node_modules/ethers": {
      "version": "5.7.2",
      "resolved": "https://registry.npmjs.org/ethers/-/ethers-5.7.2.tgz",
      "integrity": "sha512-wswUsmWo1aOK8rR7DIKiWSw9DbLWe6x98Jrn8wcTflTVvaXhAMaB5zGAXy0GYQEQp9iO1iSHWVyARQm11zUtyg==",
      "funding": [
        {
          "type": "individual",
          "url": "https://gitcoin.co/grants/13/ethersjs-complete-simple-and-tiny-2"
        },
        {
          "type": "individual",
          "url": "https://www.buymeacoffee.com/ricmoo"
        }
      ],
      "dependencies": {
        "@ethersproject/abi": "5.7.0",
        "@ethersproject/abstract-provider": "5.7.0",
        "@ethersproject/abstract-signer": "5.7.0",
        "@ethersproject/address": "5.7.0",
        "@ethersproject/base64": "5.7.0",
        "@ethersproject/basex": "5.7.0",
        "@ethersproject/bignumber": "5.7.0",
        "@ethersproject/bytes": "5.7.0",
        "@ethersproject/constants": "5.7.0",
        "@ethersproject/contracts": "5.7.0",
        "@ethersproject/hash": "5.7.0",
        "@ethersproject/hdnode": "5.7.0",
        "@ethersproject/json-wallets": "5.7.0",
        "@ethersproject/keccak256": "5.7.0",
        "@ethersproject/logger": "5.7.0",
        "@ethersproject/networks": "5.7.1",
        "@ethersproject/pbkdf2": "5.7.0",
        "@ethersproject/properties": "5.7.0",
        "@ethersproject/providers": "5.7.2",
        "@ethersproject/random": "5.7.0",
        "@ethersproject/rlp": "5.7.0",
        "@ethersproject/sha2": "5.7.0",
        "@ethersproject/signing-key": "5.7.0",
        "@ethersproject/solidity": "5.7.0",
        "@ethersproject/strings": "5.7.0",
        "@ethersproject/transactions": "5.7.0",
        "@ethersproject/units": "5.7.0",
        "@ethersproject/wallet": "5.7.0",
        "@ethersproject/web": "5.7.1",
        "@ethersproject/wordlists": "5.7.0"
      }
    },
    "node_modules/ethjs-unit": {
      "version": "0.1.6",
      "resolved": "https://registry.npmjs.org/ethjs-unit/-/ethjs-unit-0.1.6.tgz",
      "integrity": "sha512-/Sn9Y0oKl0uqQuvgFk/zQgR7aw1g36qX/jzSQ5lSwlO0GigPymk4eGQfeNTD03w1dPOqfz8V77Cy43jH56pagw==",
      "dependencies": {
        "bn.js": "4.11.6",
        "number-to-bn": "1.7.0"
      },
      "engines": {
        "node": ">=6.5.0",
        "npm": ">=3"
      }
    },
    "node_modules/ethjs-unit/node_modules/bn.js": {
      "version": "4.11.6",
      "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.11.6.tgz",
      "integrity": "sha512-XWwnNNFCuuSQ0m3r3C4LE3EiORltHd9M05pq6FOlVeiophzRbMo50Sbz1ehl8K3Z+jw9+vmgnXefY1hz8X+2wA=="
    },
    "node_modules/ethjs-util": {
      "version": "0.1.6",
      "resolved": "https://registry.npmjs.org/ethjs-util/-/ethjs-util-0.1.6.tgz",
      "integrity": "sha512-CUnVOQq7gSpDHZVVrQW8ExxUETWrnrvXYvYz55wOU8Uj4VCgw56XC2B/fVqQN+f7gmrnRHSLVnFAwsCuNwji8w==",
      "dependencies": {
        "is-hex-prefixed": "1.0.0",
        "strip-hex-prefix": "1.0.0"
      },
      "engines": {
        "node": ">=6.5.0",
        "npm": ">=3"
      }
    },
    "node_modules/eventemitter3": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-3.1.2.tgz",
      "integrity": "sha512-tvtQIeLVHjDkJYnzf2dgVMxfuSGJeM/7UCG17TT4EumTfNtF+0nebF/4zWOIkCreAbtNqhGEboB6BWrwqNaw4Q=="
    },
    "node_modules/evp_bytestokey": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/evp_bytestokey/-/evp_bytestokey-1.0.3.tgz",
      "integrity": "sha512-/f2Go4TognH/KvCISP7OUsHn85hT9nUkxxA9BEWxFn+Oj9o8ZNLm/40hdlgSLyuOimsrTKLUMEorQexp/aPQeA==",
      "dependencies": {
        "md5.js": "^1.3.4",
        "safe-buffer": "^5.1.1"
      }
    },
    "node_modules/express": {
      "version": "4.18.2",
      "resolved": "https://registry.npmjs.org/express/-/express-4.18.2.tgz",
      "integrity": "sha512-5/PsL6iGPdfQ/lKM1UuielYgv3BUoJfz1aUwU9vHZ+J7gyvwdQXFEBIEIaxeGf0GIcreATNyBExtalisDbuMqQ==",
      "dependencies": {
        "accepts": "~1.3.8",
        "array-flatten": "1.1.1",
        "body-parser": "1.20.1",
        "content-disposition": "0.5.4",
        "content-type": "~1.0.4",
        "cookie": "0.5.0",
        "cookie-signature": "1.0.6",
        "debug": "2.6.9",
        "depd": "2.0.0",
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "etag": "~1.8.1",
        "finalhandler": "1.2.0",
        "fresh": "0.5.2",
        "http-errors": "2.0.0",
        "merge-descriptors": "1.0.1",
        "methods": "~1.1.2",
        "on-finished": "2.4.1",
        "parseurl": "~1.3.3",
        "path-to-regexp": "0.1.7",
        "proxy-addr": "~2.0.7",
        "qs": "6.11.0",
        "range-parser": "~1.2.1",
        "safe-buffer": "5.2.1",
        "send": "0.18.0",
        "serve-static": "1.15.0",
        "setprototypeof": "1.2.0",
        "statuses": "2.0.1",
        "type-is": "~1.6.18",
        "utils-merge": "1.0.1",
        "vary": "~1.1.2"
      },
      "engines": {
        "node": ">= 0.10.0"
      }
    },
    "node_modules/express-formidable": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/express-formidable/-/express-formidable-1.2.0.tgz",
      "integrity": "sha512-w1vXjF3gb50UKTNkFaW8/4rqY4dUrKfZ1sAZzwAF9YxCAgj/29QZsycf71di0GkskrZOAkubk9pvGYfxyAMYiw==",
      "dependencies": {
        "formidable": "^1.0.17"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/express-handlebars": {
      "version": "6.0.7",
      "resolved": "https://registry.npmjs.org/express-handlebars/-/express-handlebars-6.0.7.tgz",
      "integrity": "sha512-iYeMFpc/hMD+E6FNAZA5fgWeXnXr4rslOSPkeEV6TwdmpJ5lEXuWX0u9vFYs31P2MURctQq2batR09oeNj0LIg==",
      "dependencies": {
        "glob": "^8.1.0",
        "graceful-fs": "^4.2.10",
        "handlebars": "^4.7.7"
      },
      "engines": {
        "node": ">=v12.22.9"
      }
    },
    "node_modules/express-handlebars/node_modules/glob": {
      "version": "8.1.0",
      "resolved": "https://registry.npmjs.org/glob/-/glob-8.1.0.tgz",
      "integrity": "sha512-r8hpEjiQEYlF2QU0df3dS+nxxSIreXQS1qRhMJM0Q5NDdR386C7jb7Hwwod8Fgiuex+k0GFjgft18yvxm5XoCQ==",
      "dependencies": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^5.0.1",
        "once": "^1.3.0"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/express-handlebars/node_modules/minimatch": {
      "version": "5.1.6",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-5.1.6.tgz",
      "integrity": "sha512-lKwV/1brpG6mBUFHtb7NUmtABCb2WZZmm2wNiOA5hAb8VdCS4B3dtMWyvcoViccwAW/COERjXLt0zP1zXUN26g==",
      "dependencies": {
        "brace-expansion": "^2.0.1"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/express-session": {
      "version": "1.17.3",
      "resolved": "https://registry.npmjs.org/express-session/-/express-session-1.17.3.tgz",
      "integrity": "sha512-4+otWXlShYlG1Ma+2Jnn+xgKUZTMJ5QD3YvfilX3AcocOAbIkVylSWEklzALe/+Pu4qV6TYBj5GwOBFfdKqLBw==",
      "dependencies": {
        "cookie": "0.4.2",
        "cookie-signature": "1.0.6",
        "debug": "2.6.9",
        "depd": "~2.0.0",
        "on-headers": "~1.0.2",
        "parseurl": "~1.3.3",
        "safe-buffer": "5.2.1",
        "uid-safe": "~2.1.5"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/express-session/node_modules/cookie": {
      "version": "0.4.2",
      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.4.2.tgz",
      "integrity": "sha512-aSWTXFzaKWkvHO1Ny/s+ePFpvKsPnjc551iI41v3ny/ow6tBG5Vd+FuqGNhh1LxOmVzOlGUriIlOaokOvhaStA==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/ext": {
      "version": "1.7.0",
      "resolved": "https://registry.npmjs.org/ext/-/ext-1.7.0.tgz",
      "integrity": "sha512-6hxeJYaL110a9b5TEJSj0gojyHQAmA2ch5Os+ySCiA1QGdS697XWY1pzsrSjqA9LDEEgdB/KypIlR59RcLuHYw==",
      "dependencies": {
        "type": "^2.7.2"
      }
    },
    "node_modules/ext/node_modules/type": {
      "version": "2.7.2",
      "resolved": "https://registry.npmjs.org/type/-/type-2.7.2.tgz",
      "integrity": "sha512-dzlvlNlt6AXU7EBSfpAscydQ7gXB+pPGsPnfJnZpiNJBDj7IaJzQlBZYGdEi4R9HmPdBv2XmWJ6YUtoTa7lmCw=="
    },
    "node_modules/extend": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/extend/-/extend-3.0.2.tgz",
      "integrity": "sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g=="
    },
    "node_modules/extsprintf": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/extsprintf/-/extsprintf-1.3.0.tgz",
      "integrity": "sha512-11Ndz7Nv+mvAC1j0ktTa7fAb0vLyGGX+rMHNBYQviQDGU0Hw7lhctJANqbPhu9nV9/izT/IntTgZ7Im/9LJs9g==",
      "engines": [
        "node >=0.6.0"
      ]
    },
    "node_modules/fast-deep-equal": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
      "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q=="
    },
    "node_modules/fast-diff": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/fast-diff/-/fast-diff-1.1.2.tgz",
      "integrity": "sha512-KaJUt+M9t1qaIteSvjc6P3RbMdXsNhK61GRftR6SNxqmhthcd9MGIi4T+o0jD8LUSpSnSKXE20nLtJ3fOHxQig=="
    },
    "node_modules/fast-json-stable-stringify": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
      "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw=="
    },
    "node_modules/fetch-blob": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/fetch-blob/-/fetch-blob-3.2.0.tgz",
      "integrity": "sha512-7yAQpD2UMJzLi1Dqv7qFYnPbaPx7ZfFK6PiIxQ4PfkGPyNyl2Ugx+a/umUonmKqjhM4DnfbMvdX6otXq83soQQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/jimmywarting"
        },
        {
          "type": "paypal",
          "url": "https://paypal.me/jimmywarting"
        }
      ],
      "dependencies": {
        "node-domexception": "^1.0.0",
        "web-streams-polyfill": "^3.0.3"
      },
      "engines": {
        "node": "^12.20 || >= 14.13"
      }
    },
    "node_modules/fill-range": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz",
      "integrity": "sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==",
      "dev": true,
      "dependencies": {
        "to-regex-range": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/finalhandler": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-1.2.0.tgz",
      "integrity": "sha512-5uXcUVftlQMFnWC9qu/svkWv3GTd2PfUhK/3PLkYNAe7FbqJMt3515HaxE6eRL74GdsriiwujiawdaB1BpEISg==",
      "dependencies": {
        "debug": "2.6.9",
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "on-finished": "2.4.1",
        "parseurl": "~1.3.3",
        "statuses": "2.0.1",
        "unpipe": "~1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/find-cache-dir": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/find-cache-dir/-/find-cache-dir-2.1.0.tgz",
      "integrity": "sha512-Tq6PixE0w/VMFfCgbONnkiQIVol/JJL7nRMi20fqzA4NRs9AfeqMGeRdPi3wIhYkxjeBaWh2rxwapn5Tu3IqOQ==",
      "dependencies": {
        "commondir": "^1.0.1",
        "make-dir": "^2.0.0",
        "pkg-dir": "^3.0.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/find-root": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/find-root/-/find-root-1.1.0.tgz",
      "integrity": "sha512-NKfW6bec6GfKc0SGx1e07QZY9PE99u0Bft/0rzSD5k3sO/vwkVUpDUKVm5Gpp5Ue3YfShPFTX2070tDs5kB9Ng=="
    },
    "node_modules/find-up": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz",
      "integrity": "sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==",
      "dependencies": {
        "locate-path": "^5.0.0",
        "path-exists": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/flat": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/flat/-/flat-4.1.1.tgz",
      "integrity": "sha512-FmTtBsHskrU6FJ2VxCnsDb84wu9zhmO3cUX2kGFb5tuwhfXxGciiT0oRY+cck35QmG+NmGh5eLz6lLCpWTqwpA==",
      "dependencies": {
        "is-buffer": "~2.0.3"
      },
      "bin": {
        "flat": "cli.js"
      }
    },
    "node_modules/follow-redirects": {
      "version": "1.15.2",
      "resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.15.2.tgz",
      "integrity": "sha512-VQLG33o04KaQ8uYi2tVNbdrWp1QWxNNea+nmIB4EVM28v0hmP17z7aG1+wAkNzVq4KeXTq3221ye5qTJP91JwA==",
      "funding": [
        {
          "type": "individual",
          "url": "https://github.com/sponsors/RubenVerborgh"
        }
      ],
      "engines": {
        "node": ">=4.0"
      },
      "peerDependenciesMeta": {
        "debug": {
          "optional": true
        }
      }
    },
    "node_modules/for-each": {
      "version": "0.3.3",
      "resolved": "https://registry.npmjs.org/for-each/-/for-each-0.3.3.tgz",
      "integrity": "sha512-jqYfLp7mo9vIyQf8ykW2v7A+2N4QjeCeI5+Dz9XraiO1ign81wjiH7Fb9vSOWvQfNtmSa4H2RoQTrrXivdUZmw==",
      "dependencies": {
        "is-callable": "^1.1.3"
      }
    },
    "node_modules/foreground-child": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/foreground-child/-/foreground-child-3.1.1.tgz",
      "integrity": "sha512-TMKDUnIte6bfb5nWv7V/caI169OHgvwjb7V4WkeUvbQQdjr5rWKqHFiKWb/fcOwB+CzBT+qbWjvj+DVwRskpIg==",
      "dependencies": {
        "cross-spawn": "^7.0.0",
        "signal-exit": "^4.0.1"
      },
      "engines": {
        "node": ">=14"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/foreground-child/node_modules/signal-exit": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-4.0.2.tgz",
      "integrity": "sha512-MY2/qGx4enyjprQnFaZsHib3Yadh3IXyV2C321GY0pjGfVBu4un0uDJkwgdxqO+Rdx8JMT8IfJIRwbYVz3Ob3Q==",
      "engines": {
        "node": ">=14"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/forever-agent": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/forever-agent/-/forever-agent-0.6.1.tgz",
      "integrity": "sha512-j0KLYPhm6zeac4lz3oJ3o65qvgQCcPubiyotZrXqEaG4hNagNYO8qdlUrX5vwqv9ohqeT/Z3j6+yW067yWWdUw==",
      "engines": {
        "node": "*"
      }
    },
    "node_modules/form-data": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/form-data/-/form-data-4.0.0.tgz",
      "integrity": "sha512-ETEklSGi5t0QMZuiXoA/Q6vcnxcLQP5vdugSpuAyi6SVGi2clPPp+xgEhuMaHC+zGgn31Kd235W35f7Hykkaww==",
      "dependencies": {
        "asynckit": "^0.4.0",
        "combined-stream": "^1.0.8",
        "mime-types": "^2.1.12"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/form-data-encoder": {
      "version": "1.7.1",
      "resolved": "https://registry.npmjs.org/form-data-encoder/-/form-data-encoder-1.7.1.tgz",
      "integrity": "sha512-EFRDrsMm/kyqbTQocNvRXMLjc7Es2Vk+IQFx/YW7hkUH1eBl4J1fqiP34l74Yt0pFLCNpc06fkbVk00008mzjg=="
    },
    "node_modules/formdata-polyfill": {
      "version": "4.0.10",
      "resolved": "https://registry.npmjs.org/formdata-polyfill/-/formdata-polyfill-4.0.10.tgz",
      "integrity": "sha512-buewHzMvYL29jdeQTVILecSaZKnt/RJWjoZCF5OW60Z67/GmSLBkOFM7qh1PI3zFNtJbaZL5eQu1vLfazOwj4g==",
      "dependencies": {
        "fetch-blob": "^3.1.2"
      },
      "engines": {
        "node": ">=12.20.0"
      }
    },
    "node_modules/formidable": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/formidable/-/formidable-1.2.6.tgz",
      "integrity": "sha512-KcpbcpuLNOwrEjnbpMC0gS+X8ciDoZE1kkqzat4a8vrprf+s9pKNQ/QIwWfbfs4ltgmFl3MD177SNTkve3BwGQ==",
      "deprecated": "Please upgrade to latest, formidable@v2 or formidable@v3! Check these notes: https://bit.ly/2ZEqIau",
      "funding": {
        "url": "https://ko-fi.com/tunnckoCore/commissions"
      }
    },
    "node_modules/forwarded": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz",
      "integrity": "sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/fraction.js": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/fraction.js/-/fraction.js-4.2.0.tgz",
      "integrity": "sha512-MhLuK+2gUcnZe8ZHlaaINnQLl0xRIGRfcGk2yl8xoQAfHrSsL3rYu6FCmBdkdbhc9EPlwyGHewaRsvwRMJtAlA==",
      "engines": {
        "node": "*"
      },
      "funding": {
        "type": "patreon",
        "url": "https://www.patreon.com/infusion"
      }
    },
    "node_modules/fresh": {
      "version": "0.5.2",
      "resolved": "https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz",
      "integrity": "sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/fs-extra": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-4.0.3.tgz",
      "integrity": "sha512-q6rbdDd1o2mAnQreO7YADIxf/Whx4AHBiRf6d+/cVT8h44ss+lHgxf1FemcqDnQt9X3ct4McHr+JMGlYSsK7Cg==",
      "dependencies": {
        "graceful-fs": "^4.1.2",
        "jsonfile": "^4.0.0",
        "universalify": "^0.1.0"
      }
    },
    "node_modules/fs-minipass": {
      "version": "1.2.7",
      "resolved": "https://registry.npmjs.org/fs-minipass/-/fs-minipass-1.2.7.tgz",
      "integrity": "sha512-GWSSJGFy4e9GUeCcbIkED+bgAoFyj7XF1mV8rma3QW4NIqX9Kyx79N/PF61H5udOV3aY1IaMLs6pGbH71nlCTA==",
      "dependencies": {
        "minipass": "^2.6.0"
      }
    },
    "node_modules/fs.realpath": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
      "integrity": "sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw=="
    },
    "node_modules/fsevents": {
      "version": "2.3.2",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.2.tgz",
      "integrity": "sha512-xiqMQR4xAeHTuB9uWm+fFRcIOgKBMiOBP+eXiyT7jsgVCq1bkVygt00oASowB7EdtpOHaaPgKt812P9ab+DDKA==",
      "hasInstallScript": true,
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
      }
    },
    "node_modules/function-bind": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz",
      "integrity": "sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A=="
    },
    "node_modules/functions-have-names": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/functions-have-names/-/functions-have-names-1.2.3.tgz",
      "integrity": "sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/gensync": {
      "version": "1.0.0-beta.2",
      "resolved": "https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz",
      "integrity": "sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/get-caller-file": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz",
      "integrity": "sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==",
      "engines": {
        "node": "6.* || 8.* || >= 10.*"
      }
    },
    "node_modules/get-intrinsic": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.2.0.tgz",
      "integrity": "sha512-L049y6nFOuom5wGyRc3/gdTLO94dySVKRACj1RmJZBQXlbTMhtNIgkWkUHq+jYmZvKf14EW1EoJnnjbmoHij0Q==",
      "dependencies": {
        "function-bind": "^1.1.1",
        "has": "^1.0.3",
        "has-symbols": "^1.0.3"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/get-stream": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-6.0.1.tgz",
      "integrity": "sha512-ts6Wi+2j3jQjqi70w5AlN8DFnkSwC+MqmxEzdEALB2qXZYV3X/b1CTfgPLGJNMeAWxdPfU8FO1ms3NUfaHCPYg==",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/getpass": {
      "version": "0.1.7",
      "resolved": "https://registry.npmjs.org/getpass/-/getpass-0.1.7.tgz",
      "integrity": "sha512-0fzj9JxOLfJ+XGLhR8ze3unN0KZCgZwiSSDz168VERjK8Wl8kVSdcu2kspd4s4wtAa1y/qrVRiAA0WclVsu0ng==",
      "dependencies": {
        "assert-plus": "^1.0.0"
      }
    },
    "node_modules/glob": {
      "version": "10.3.1",
      "resolved": "https://registry.npmjs.org/glob/-/glob-10.3.1.tgz",
      "integrity": "sha512-9BKYcEeIs7QwlCYs+Y3GBvqAMISufUS0i2ELd11zpZjxI5V9iyRj0HgzB5/cLf2NY4vcYBTYzJ7GIui7j/4DOw==",
      "dependencies": {
        "foreground-child": "^3.1.0",
        "jackspeak": "^2.0.3",
        "minimatch": "^9.0.1",
        "minipass": "^5.0.0 || ^6.0.2",
        "path-scurry": "^1.10.0"
      },
      "bin": {
        "glob": "dist/cjs/src/bin.js"
      },
      "engines": {
        "node": ">=16 || 14 >=14.17"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "dev": true,
      "dependencies": {
        "is-glob": "^4.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/glob/node_modules/minipass": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/minipass/-/minipass-6.0.2.tgz",
      "integrity": "sha512-MzWSV5nYVT7mVyWCwn2o7JH13w2TBRmmSqSRCKzTw+lmft9X4z+3wjvs06Tzijo5z4W/kahUCDpRXTF+ZrmF/w==",
      "engines": {
        "node": ">=16 || 14 >=14.17"
      }
    },
    "node_modules/global": {
      "version": "4.4.0",
      "resolved": "https://registry.npmjs.org/global/-/global-4.4.0.tgz",
      "integrity": "sha512-wv/LAoHdRE3BeTGz53FAamhGlPLhlssK45usmGFThIi4XqnBmjKQ16u+RNbP7WvigRZDxUsM0J3gcQ5yicaL0w==",
      "dependencies": {
        "min-document": "^2.19.0",
        "process": "^0.11.10"
      }
    },
    "node_modules/globals": {
      "version": "11.12.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-11.12.0.tgz",
      "integrity": "sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/gopd": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.0.1.tgz",
      "integrity": "sha512-d65bNlIadxvpb/A2abVdlqKqV563juRnZ1Wtk6s1sIR8uNsXR70xqIzVqxVf1eTqDunwT2MkczEeaezCKTZhwA==",
      "dependencies": {
        "get-intrinsic": "^1.1.3"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/got": {
      "version": "12.1.0",
      "resolved": "https://registry.npmjs.org/got/-/got-12.1.0.tgz",
      "integrity": "sha512-hBv2ty9QN2RdbJJMK3hesmSkFTjVIHyIDDbssCKnSmq62edGgImJWD10Eb1k77TiV1bxloxqcFAVK8+9pkhOig==",
      "dependencies": {
        "@sindresorhus/is": "^4.6.0",
        "@szmarczak/http-timer": "^5.0.1",
        "@types/cacheable-request": "^6.0.2",
        "@types/responselike": "^1.0.0",
        "cacheable-lookup": "^6.0.4",
        "cacheable-request": "^7.0.2",
        "decompress-response": "^6.0.0",
        "form-data-encoder": "1.7.1",
        "get-stream": "^6.0.1",
        "http2-wrapper": "^2.1.10",
        "lowercase-keys": "^3.0.0",
        "p-cancelable": "^3.0.0",
        "responselike": "^2.0.0"
      },
      "engines": {
        "node": ">=14.16"
      },
      "funding": {
        "url": "https://github.com/sindresorhus/got?sponsor=1"
      }
    },
    "node_modules/graceful-fs": {
      "version": "4.2.10",
      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.10.tgz",
      "integrity": "sha512-9ByhssR2fPVsNZj478qUUbKfmL0+t5BDVyjShtyZZLiK7ZDAArFFfopyOTj0M05wE2tJPisA4iTnnXl2YoPvOA=="
    },
    "node_modules/gud": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/gud/-/gud-1.0.0.tgz",
      "integrity": "sha512-zGEOVKFM5sVPPrYs7J5/hYEw2Pof8KCyOwyhG8sAF26mCAeUFAcYPu1mwB7hhpIP29zOIBaDqwuHdLp0jvZXjw=="
    },
    "node_modules/handlebars": {
      "version": "4.7.7",
      "resolved": "https://registry.npmjs.org/handlebars/-/handlebars-4.7.7.tgz",
      "integrity": "sha512-aAcXm5OAfE/8IXkcZvCepKU3VzW1/39Fb5ZuqMtgI/hT8X2YgoMvBY5dLhq/cpOvw7Lk1nK/UF71aLG/ZnVYRA==",
      "dependencies": {
        "minimist": "^1.2.5",
        "neo-async": "^2.6.0",
        "source-map": "^0.6.1",
        "wordwrap": "^1.0.0"
      },
      "bin": {
        "handlebars": "bin/handlebars"
      },
      "engines": {
        "node": ">=0.4.7"
      },
      "optionalDependencies": {
        "uglify-js": "^3.1.4"
      }
    },
    "node_modules/har-schema": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/har-schema/-/har-schema-2.0.0.tgz",
      "integrity": "sha512-Oqluz6zhGX8cyRaTQlFMPw80bSJVG2x/cFb8ZPhUILGgHka9SsokCCOQgpveePerqidZOrT14ipqfJb7ILcW5Q==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/har-validator": {
      "version": "5.1.5",
      "resolved": "https://registry.npmjs.org/har-validator/-/har-validator-5.1.5.tgz",
      "integrity": "sha512-nmT2T0lljbxdQZfspsno9hgrG3Uir6Ks5afism62poxqBM6sDnMEuPmzTq8XN0OEwqKLLdh1jQI3qyE66Nzb3w==",
      "deprecated": "this library is no longer supported",
      "dependencies": {
        "ajv": "^6.12.3",
        "har-schema": "^2.0.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/has": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/has/-/has-1.0.3.tgz",
      "integrity": "sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==",
      "dependencies": {
        "function-bind": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4.0"
      }
    },
    "node_modules/has-flag": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
      "integrity": "sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/has-property-descriptors": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.0.tgz",
      "integrity": "sha512-62DVLZGoiEBDHQyqG4w9xCuZ7eJEwNmJRWw2VY84Oedb7WFcA27fiEVe8oUQx9hAUJ4ekurquucTGwsyO1XGdQ==",
      "dependencies": {
        "get-intrinsic": "^1.1.1"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-symbols": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.3.tgz",
      "integrity": "sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-tostringtag": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.0.tgz",
      "integrity": "sha512-kFjcSNhnlGV1kyoGk7OXKSawH5JOb/LzUc5w9B02hOTO0dfFRjbHQKvg1d6cf3HbeUmtU9VbbV3qzZ2Teh97WQ==",
      "dependencies": {
        "has-symbols": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/hash-base": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/hash-base/-/hash-base-3.1.0.tgz",
      "integrity": "sha512-1nmYp/rhMDiE7AYkDw+lLwlAzz0AntGIe51F3RfFfEqyQ3feY2eI/NcwC6umIQVOASPMsWJLJScWKSSvzL9IVA==",
      "dependencies": {
        "inherits": "^2.0.4",
        "readable-stream": "^3.6.0",
        "safe-buffer": "^5.2.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/hash.js": {
      "version": "1.1.7",
      "resolved": "https://registry.npmjs.org/hash.js/-/hash.js-1.1.7.tgz",
      "integrity": "sha512-taOaskGt4z4SOANNseOviYDvjEJinIkRgmp7LbKP2YTTmVxWBl87s/uzK9r+44BclBSp2X7K1hqeNfz9JbBeXA==",
      "dependencies": {
        "inherits": "^2.0.3",
        "minimalistic-assert": "^1.0.1"
      }
    },
    "node_modules/highlight.js": {
      "version": "10.7.3",
      "resolved": "https://registry.npmjs.org/highlight.js/-/highlight.js-10.7.3.tgz",
      "integrity": "sha512-tzcUFauisWKNHaRkN4Wjl/ZA07gENAjFl3J/c480dprkGTg5EQstgaNFqBfUqCq54kZRIEcreTsAgF/m2quD7A==",
      "engines": {
        "node": "*"
      }
    },
    "node_modules/history": {
      "version": "4.10.1",
      "resolved": "https://registry.npmjs.org/history/-/history-4.10.1.tgz",
      "integrity": "sha512-36nwAD620w12kuzPAsyINPWJqlNbij+hpK1k9XRloDtym8mxzGYl2c17LnV6IAGB2Dmg4tEa7G7DlawS0+qjew==",
      "dependencies": {
        "@babel/runtime": "^7.1.2",
        "loose-envify": "^1.2.0",
        "resolve-pathname": "^3.0.0",
        "tiny-invariant": "^1.0.2",
        "tiny-warning": "^1.0.0",
        "value-equal": "^1.0.1"
      }
    },
    "node_modules/hmac-drbg": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/hmac-drbg/-/hmac-drbg-1.0.1.tgz",
      "integrity": "sha512-Tti3gMqLdZfhOQY1Mzf/AanLiqh1WTiJgEj26ZuYQ9fbkLomzGchCws4FyrSd4VkpBfiNhaE1On+lOz894jvXg==",
      "dependencies": {
        "hash.js": "^1.0.3",
        "minimalistic-assert": "^1.0.0",
        "minimalistic-crypto-utils": "^1.0.1"
      }
    },
    "node_modules/hoist-non-react-statics": {
      "version": "3.3.2",
      "resolved": "https://registry.npmjs.org/hoist-non-react-statics/-/hoist-non-react-statics-3.3.2.tgz",
      "integrity": "sha512-/gGivxi8JPKWNm/W0jSmzcMPpfpPLc3dY/6GxhX2hQ9iGj3aDfklV4ET7NjKpSinLpJ5vafa9iiGIEZg10SfBw==",
      "dependencies": {
        "react-is": "^16.7.0"
      }
    },
    "node_modules/html-parse-stringify": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/html-parse-stringify/-/html-parse-stringify-3.0.1.tgz",
      "integrity": "sha512-KknJ50kTInJ7qIScF3jeaFRpMpE8/lfiTdzf/twXyPBLAGrLRTmkz3AdTnKeh40X8k9L2fdYwEp/42WGXIRGcg==",
      "dependencies": {
        "void-elements": "3.1.0"
      }
    },
    "node_modules/http-cache-semantics": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/http-cache-semantics/-/http-cache-semantics-4.1.1.tgz",
      "integrity": "sha512-er295DKPVsV82j5kw1Gjt+ADA/XYHsajl82cGNQG2eyoPkvgUhX+nDIyelzhIWbbsXP39EHcI6l5tYs2FYqYXQ=="
    },
    "node_modules/http-errors": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz",
      "integrity": "sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==",
      "dependencies": {
        "depd": "2.0.0",
        "inherits": "2.0.4",
        "setprototypeof": "1.2.0",
        "statuses": "2.0.1",
        "toidentifier": "1.0.1"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/http-https": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/http-https/-/http-https-1.0.0.tgz",
      "integrity": "sha512-o0PWwVCSp3O0wS6FvNr6xfBCHgt0m1tvPLFOCc2iFDKTRAXhB7m8klDf7ErowFH8POa6dVdGatKU5I1YYwzUyg=="
    },
    "node_modules/http-signature": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/http-signature/-/http-signature-1.2.0.tgz",
      "integrity": "sha512-CAbnr6Rz4CYQkLYUtSNXxQPUH2gK8f3iWexVlsnMeD+GjlsQ0Xsy1cOX+mN3dtxYomRy21CiOzU8Uhw6OwncEQ==",
      "dependencies": {
        "assert-plus": "^1.0.0",
        "jsprim": "^1.2.2",
        "sshpk": "^1.7.0"
      },
      "engines": {
        "node": ">=0.8",
        "npm": ">=1.3.7"
      }
    },
    "node_modules/http2-wrapper": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/http2-wrapper/-/http2-wrapper-2.2.0.tgz",
      "integrity": "sha512-kZB0wxMo0sh1PehyjJUWRFEd99KC5TLjZ2cULC4f9iqJBAmKQQXEICjxl5iPJRwP40dpeHFqqhm7tYCvODpqpQ==",
      "dependencies": {
        "quick-lru": "^5.1.1",
        "resolve-alpn": "^1.2.0"
      },
      "engines": {
        "node": ">=10.19.0"
      }
    },
    "node_modules/i18next": {
      "version": "19.8.7",
      "resolved": "https://registry.npmjs.org/i18next/-/i18next-19.8.7.tgz",
      "integrity": "sha512-ezo1gb7QO4OQ5gQCdZMUxopwQSoqpRp6whdEjm1grxMSmkGj1NJ+kYS0UQd4NnpPIVqsgqTQ2L2eqSQYQ+U3Fw==",
      "dependencies": {
        "@babel/runtime": "^7.12.0"
      }
    },
    "node_modules/iconv-lite": {
      "version": "0.4.24",
      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz",
      "integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==",
      "dependencies": {
        "safer-buffer": ">= 2.1.2 < 3"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/idna-uts46-hx": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/idna-uts46-hx/-/idna-uts46-hx-2.3.1.tgz",
      "integrity": "sha512-PWoF9Keq6laYdIRwwCdhTPl60xRqAloYNMQLiyUnG42VjT53oW07BXIRM+NK7eQjzXjAk2gUvX9caRxlnF9TAA==",
      "dependencies": {
        "punycode": "2.1.0"
      },
      "engines": {
        "node": ">=4.0.0"
      }
    },
    "node_modules/idna-uts46-hx/node_modules/punycode": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.0.tgz",
      "integrity": "sha512-Yxz2kRwT90aPiWEMHVYnEf4+rhwF1tBmmZ4KepCP+Wkium9JxtWnUm1nqGwpiAHr/tnTSeHqr3wb++jgSkXjhA==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/ieee754": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/ieee754/-/ieee754-1.2.1.tgz",
      "integrity": "sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ]
    },
    "node_modules/ignore-by-default": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/ignore-by-default/-/ignore-by-default-1.0.1.tgz",
      "integrity": "sha512-Ius2VYcGNk7T90CppJqcIkS5ooHUZyIQK+ClZfMfMNFEF9VSE73Fq+906u/CWu92x4gzZMWOwfFYckPObzdEbA==",
      "dev": true
    },
    "node_modules/import-fresh": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.0.tgz",
      "integrity": "sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==",
      "dependencies": {
        "parent-module": "^1.0.0",
        "resolve-from": "^4.0.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/inflight": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
      "integrity": "sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==",
      "dependencies": {
        "once": "^1.3.0",
        "wrappy": "1"
      }
    },
    "node_modules/inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ=="
    },
    "node_modules/injectpromise": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/injectpromise/-/injectpromise-1.0.0.tgz",
      "integrity": "sha512-qNq5wy4qX4uWHcVFOEU+RqZkoVG65FhvGkyDWbuBxILMjK6A1LFf5A1mgXZkD4nRx5FCorD81X/XvPKp/zVfPA=="
    },
    "node_modules/ipaddr.js": {
      "version": "1.9.1",
      "resolved": "https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz",
      "integrity": "sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==",
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/is-arguments": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-arguments/-/is-arguments-1.1.1.tgz",
      "integrity": "sha512-8Q7EARjzEnKpt/PCD7e1cgUS0a6X8u5tdSiMqXhojOdoV9TsMsiO+9VLC5vAmO8N7/GmXn7yjR8qnA6bVAEzfA==",
      "dependencies": {
        "call-bind": "^1.0.2",
        "has-tostringtag": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-arrayish": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz",
      "integrity": "sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg=="
    },
    "node_modules/is-binary-path": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
      "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
      "dev": true,
      "dependencies": {
        "binary-extensions": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-buffer": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-2.0.5.tgz",
      "integrity": "sha512-i2R6zNFDwgEHJyQUtJEk0XFi1i0dPFn/oqjK3/vPCcDeJvW5NQ83V8QbicfF1SupOaB0h8ntgBC2YiE7dfyctQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/is-callable": {
      "version": "1.2.7",
      "resolved": "https://registry.npmjs.org/is-callable/-/is-callable-1.2.7.tgz",
      "integrity": "sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-core-module": {
      "version": "2.12.1",
      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.12.1.tgz",
      "integrity": "sha512-Q4ZuBAe2FUsKtyQJoQHlvP8OvBERxO3jEmy1I7hcRXcJBGGHFh/aJBswbXuS9sgrDH2QUO8ilkwNPHvHMd8clg==",
      "dependencies": {
        "has": "^1.0.3"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-date-object": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/is-date-object/-/is-date-object-1.0.5.tgz",
      "integrity": "sha512-9YQaSxsAiSwcvS33MBk3wTCVnWK+HhF8VZR2jRxehM16QcVOdHqPn4VPHmRK4lSr38n9JriurInLcP90xsYNfQ==",
      "dependencies": {
        "has-tostringtag": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-function": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/is-function/-/is-function-1.0.2.tgz",
      "integrity": "sha512-lw7DUp0aWXYg+CBCN+JKkcE0Q2RayZnSvnZBlwgxHBQhqt5pZNVy4Ri7H9GmmXkdu7LUthszM+Tor1u/2iBcpQ=="
    },
    "node_modules/is-generator-function": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/is-generator-function/-/is-generator-function-1.0.10.tgz",
      "integrity": "sha512-jsEjy9l3yiXEQ+PsXdmBwEPcOxaXWLspKdplFUVI9vq1iZgIekeC0L167qeu86czQaxed3q/Uzuw0swL0irL8A==",
      "dependencies": {
        "has-tostringtag": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-glob": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
      "dev": true,
      "dependencies": {
        "is-extglob": "^2.1.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-hex-prefixed": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-hex-prefixed/-/is-hex-prefixed-1.0.0.tgz",
      "integrity": "sha512-WvtOiug1VFrE9v1Cydwm+FnXd3+w9GaeVUss5W4v/SLy3UW00vP+6iNF2SdnfiBoLy4bTqVdkftNGTUeOFVsbA==",
      "engines": {
        "node": ">=6.5.0",
        "npm": ">=3"
      }
    },
    "node_modules/is-interactive": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-interactive/-/is-interactive-1.0.0.tgz",
      "integrity": "sha512-2HvIEKRoqS62guEC+qBjpvRubdX910WCMuJTZ+I9yvqKU2/12eSL549HMwtabb4oupdj2sMP50k+XJfB/8JE6w==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-module": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-module/-/is-module-1.0.0.tgz",
      "integrity": "sha512-51ypPSPCoTEIN9dy5Oy+h4pShgJmPCygKfyRCISBI+JoWT/2oJvK8QPxmwv7b/p239jXrm9M1mlQbyKJ5A152g=="
    },
    "node_modules/is-nan": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/is-nan/-/is-nan-1.3.2.tgz",
      "integrity": "sha512-E+zBKpQ2t6MEo1VsonYmluk9NxGrbzpeeLC2xIViuO2EjU2xsXsBPwTr3Ykv9l08UYEVEdWeRZNouaZqF6RN0w==",
      "peer": true,
      "dependencies": {
        "call-bind": "^1.0.0",
        "define-properties": "^1.1.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-number": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
      "dev": true,
      "engines": {
        "node": ">=0.12.0"
      }
    },
    "node_modules/is-plain-object": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/is-plain-object/-/is-plain-object-2.0.4.tgz",
      "integrity": "sha512-h5PpgXkWitc38BBMYawTYMWJHFZJVnBquFE57xFpjB8pJFiF6gZ+bU+WyI/yqXiFR5mdLsgYNaPe8uao6Uv9Og==",
      "dependencies": {
        "isobject": "^3.0.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-reference": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/is-reference/-/is-reference-1.2.1.tgz",
      "integrity": "sha512-U82MsXXiFIrjCK4otLT+o2NA2Cd2g5MLoOVXUZjIOhLurrRxpEXzI8O0KZHr3IjLvlAH1kTPYSuqer5T9ZVBKQ==",
      "dependencies": {
        "@types/estree": "*"
      }
    },
    "node_modules/is-regex": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/is-regex/-/is-regex-1.1.4.tgz",
      "integrity": "sha512-kvRdxDsxZjhzUX07ZnLydzS1TU/TJlTUHHY4YLL87e37oUA49DfkLqgy+VjFocowy29cKvcSiu+kIv728jTTVg==",
      "dependencies": {
        "call-bind": "^1.0.2",
        "has-tostringtag": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-typed-array": {
      "version": "1.1.10",
      "resolved": "https://registry.npmjs.org/is-typed-array/-/is-typed-array-1.1.10.tgz",
      "integrity": "sha512-PJqgEHiWZvMpaFZ3uTc8kHPM4+4ADTlDniuQL7cU/UDA0Ql7F70yGfHph3cLNe+c9toaigv+DFzTJKhc2CtO6A==",
      "dependencies": {
        "available-typed-arrays": "^1.0.5",
        "call-bind": "^1.0.2",
        "for-each": "^0.3.3",
        "gopd": "^1.0.1",
        "has-tostringtag": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-typedarray": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz",
      "integrity": "sha512-cyA56iCMHAh5CdzjJIa4aohJyeO1YbwLi3Jc35MmRU6poroFjIGZzUzupGiRPOjgHg9TLu43xbpwXk523fMxKA=="
    },
    "node_modules/is-unicode-supported": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/is-unicode-supported/-/is-unicode-supported-0.1.0.tgz",
      "integrity": "sha512-knxG2q4UC3u8stRGyAVJCOdxFmv5DZiRcdlIaAQXAbSfJya+OhopNotLQrstBhququ4ZpuKbDc/8S6mgXgPFPw==",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/isarray": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
      "integrity": "sha512-VLghIWNM6ELQzo7zwmcg0NmTVyWKYjvIeM83yjp0wRDTmUnrM678fQbcKBo6n2CJEF0szoG//ytg+TKla89ALQ=="
    },
    "node_modules/isexe": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
      "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw=="
    },
    "node_modules/isobject": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/isobject/-/isobject-3.0.1.tgz",
      "integrity": "sha512-WhB9zCku7EGTj/HQQRz5aUQEUeoQZH2bWcltRErOpymJ4boYE6wL9Tbr23krRPSZ+C5zqNSrSw+Cc7sZZ4b7vg==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/isstream": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/isstream/-/isstream-0.1.2.tgz",
      "integrity": "sha512-Yljz7ffyPbrLpLngrMtZ7NduUgVvi6wG9RJ9IUcyCd59YQ911PBJphODUcbOVbqYfxe1wuYf/LJ8PauMRwsM/g=="
    },
    "node_modules/jackspeak": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/jackspeak/-/jackspeak-2.2.1.tgz",
      "integrity": "sha512-MXbxovZ/Pm42f6cDIDkl3xpwv1AGwObKwfmjs2nQePiy85tP3fatofl3FC1aBsOtP/6fq5SbtgHwWcMsLP+bDw==",
      "dependencies": {
        "@isaacs/cliui": "^8.0.2"
      },
      "engines": {
        "node": ">=14"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      },
      "optionalDependencies": {
        "@pkgjs/parseargs": "^0.11.0"
      }
    },
    "node_modules/javascript-natural-sort": {
      "version": "0.7.1",
      "resolved": "https://registry.npmjs.org/javascript-natural-sort/-/javascript-natural-sort-0.7.1.tgz",
      "integrity": "sha512-nO6jcEfZWQXDhOiBtG2KvKyEptz7RVbpGP4vTD2hLBdmNQSsCiicO2Ioinv6UI4y9ukqnBpy+XZ9H6uLNgJTlw=="
    },
    "node_modules/jest-worker": {
      "version": "26.6.2",
      "resolved": "https://registry.npmjs.org/jest-worker/-/jest-worker-26.6.2.tgz",
      "integrity": "sha512-KWYVV1c4i+jbMpaBC+U++4Va0cp8OisU185o73T1vo99hqi7w8tSJfUXYswwqqrjzwxa6KpRK54WhPvwf5w6PQ==",
      "dependencies": {
        "@types/node": "*",
        "merge-stream": "^2.0.0",
        "supports-color": "^7.0.0"
      },
      "engines": {
        "node": ">= 10.13.0"
      }
    },
    "node_modules/jest-worker/node_modules/has-flag": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/jest-worker/node_modules/supports-color": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
      "dependencies": {
        "has-flag": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/js-sha256": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/js-sha256/-/js-sha256-0.9.0.tgz",
      "integrity": "sha512-sga3MHh9sgQN2+pJ9VYZ+1LPwXOxuBJBA5nrR5/ofPfuiJBE2hnjsaN8se8JznOmGLN2p49Pe5U/ttafcs/apA=="
    },
    "node_modules/js-sha3": {
      "version": "0.8.0",
      "resolved": "https://registry.npmjs.org/js-sha3/-/js-sha3-0.8.0.tgz",
      "integrity": "sha512-gF1cRrHhIzNfToc802P800N8PpXS+evLLXfsVpowqmAFR9uwbi89WvXg2QspOmXL8QL86J4T1EpFu+yUkwJY3Q=="
    },
    "node_modules/js-tokens": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ=="
    },
    "node_modules/js-yaml": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz",
      "integrity": "sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==",
      "dependencies": {
        "argparse": "^2.0.1"
      },
      "bin": {
        "js-yaml": "bin/js-yaml.js"
      }
    },
    "node_modules/jsbn": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/jsbn/-/jsbn-0.1.1.tgz",
      "integrity": "sha512-UVU9dibq2JcFWxQPA6KCqj5O42VOmAY3zQUfEKxU0KpTGXwNoCjkX1e13eHNvw/xPynt6pU0rZ1htjWTNTSXsg=="
    },
    "node_modules/jsesc": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-2.5.2.tgz",
      "integrity": "sha512-OYu7XEzjkCQ3C5Ps3QIZsQfNpqoJyZZA99wd9aWd05NCtC5pWOkShK2mkL6HXQR6/Cy2lbNdPlZBpuQHXE63gA==",
      "bin": {
        "jsesc": "bin/jsesc"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/json-buffer": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz",
      "integrity": "sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ=="
    },
    "node_modules/json-parse-even-better-errors": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/json-parse-even-better-errors/-/json-parse-even-better-errors-2.3.1.tgz",
      "integrity": "sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w=="
    },
    "node_modules/json-schema": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/json-schema/-/json-schema-0.4.0.tgz",
      "integrity": "sha512-es94M3nTIfsEPisRafak+HDLfHXnKBhV3vU5eqPcS3flIWqcxJWgXHXiey3YrpaNsanY5ei1VoYEbOzijuq9BA=="
    },
    "node_modules/json-schema-traverse": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg=="
    },
    "node_modules/json-stringify-safe": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz",
      "integrity": "sha512-ZClg6AaYvamvYEE82d3Iyd3vSSIjQ+odgjaTzRuO3s7toCdFKczob2i0zCh7JE8kWn17yvAWhUVxvqGwUalsRA=="
    },
    "node_modules/json5": {
      "version": "2.2.3",
      "resolved": "https://registry.npmjs.org/json5/-/json5-2.2.3.tgz",
      "integrity": "sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==",
      "bin": {
        "json5": "lib/cli.js"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/jsonfile": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-4.0.0.tgz",
      "integrity": "sha512-m6F1R3z8jjlf2imQHS2Qez5sjKWQzbuuhuJ/FKYFRZvPE3PuHcSMVZzfsLhGVOkfd20obL5SWEBew5ShlquNxg==",
      "optionalDependencies": {
        "graceful-fs": "^4.1.6"
      }
    },
    "node_modules/jsprim": {
      "version": "1.4.2",
      "resolved": "https://registry.npmjs.org/jsprim/-/jsprim-1.4.2.tgz",
      "integrity": "sha512-P2bSOMAc/ciLz6DzgjVlGJP9+BrJWu5UDGK70C2iweC5QBIeFf0ZXRvGjEj2uYgrY2MkAAhsSWHDWlFtEroZWw==",
      "dependencies": {
        "assert-plus": "1.0.0",
        "extsprintf": "1.3.0",
        "json-schema": "0.4.0",
        "verror": "1.10.0"
      },
      "engines": {
        "node": ">=0.6.0"
      }
    },
    "node_modules/jssha": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/jssha/-/jssha-2.3.1.tgz",
      "integrity": "sha512-z75RK13RZmAYW1SR9DAO9eqosXjctPsSEkQ9QJGWx90gJMnQC4AxU/AGQYZ63VCWIJMtzXgbEZ0fTEKmllm8gw==",
      "deprecated": "jsSHA versions < 3.0.0 will no longer receive feature updates",
      "engines": {
        "node": "*"
      }
    },
    "node_modules/jw-paginate": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/jw-paginate/-/jw-paginate-1.0.4.tgz",
      "integrity": "sha512-W0bv782exgCoynUL/egbRpaYwf/r6T6e02H870H5u3hfSgEYrxgz5POwmFF5aApS6iPi6yhZ0VF8IbafNFsntA=="
    },
    "node_modules/keccak": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/keccak/-/keccak-3.0.3.tgz",
      "integrity": "sha512-JZrLIAJWuZxKbCilMpNz5Vj7Vtb4scDG3dMXLOsbzBmQGyjwE61BbW7bJkfKKCShXiQZt3T6sBgALRtmd+nZaQ==",
      "hasInstallScript": true,
      "dependencies": {
        "node-addon-api": "^2.0.0",
        "node-gyp-build": "^4.2.0",
        "readable-stream": "^3.6.0"
      },
      "engines": {
        "node": ">=10.0.0"
      }
    },
    "node_modules/keyv": {
      "version": "4.5.2",
      "resolved": "https://registry.npmjs.org/keyv/-/keyv-4.5.2.tgz",
      "integrity": "sha512-5MHbFaKn8cNSmVW7BYnijeAVlE4cYA/SVkifVgrh7yotnfhKmjuXpDKjrABLnT0SfHWV21P8ow07OGfRrNDg8g==",
      "dependencies": {
        "json-buffer": "3.0.1"
      }
    },
    "node_modules/kind-of": {
      "version": "6.0.3",
      "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.3.tgz",
      "integrity": "sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/kleur": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/kleur/-/kleur-3.0.3.tgz",
      "integrity": "sha512-eTIzlVOSUR+JxdDFepEYcBMtZ9Qqdef+rnzWdRZuMbOywu5tO2w2N7rqjoANZ5k9vywhL6Br1VRjUIgTQx4E8w==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/lines-and-columns": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz",
      "integrity": "sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg=="
    },
    "node_modules/locate-path": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz",
      "integrity": "sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==",
      "dependencies": {
        "p-locate": "^4.1.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/lodash": {
      "version": "4.17.21",
      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",
      "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg=="
    },
    "node_modules/lodash-es": {
      "version": "4.17.21",
      "resolved": "https://registry.npmjs.org/lodash-es/-/lodash-es-4.17.21.tgz",
      "integrity": "sha512-mKnC+QJ9pWVzv+C4/U3rRsHapFfHvQFoFB92e52xeyGMcX6/OlIl78je1u8vePzYZSkkogMPJ2yjxxsb89cxyw=="
    },
    "node_modules/lodash.debounce": {
      "version": "4.0.8",
      "resolved": "https://registry.npmjs.org/lodash.debounce/-/lodash.debounce-4.0.8.tgz",
      "integrity": "sha512-FT1yDzDYEoYWhnSGnpE/4Kj1fLZkDFyqRb7fNt6FdYOSxlUWAtp42Eh6Wb0rGIv/m9Bgo7x4GhQbm5Ys4SG5ow=="
    },
    "node_modules/lodash.get": {
      "version": "4.4.2",
      "resolved": "https://registry.npmjs.org/lodash.get/-/lodash.get-4.4.2.tgz",
      "integrity": "sha512-z+Uw/vLuy6gQe8cfaFWD7p0wVv8fJl3mbzXh33RS+0oW2wvUqiRXiQ69gLWSLpgB5/6sU+r6BlQR0MBILadqTQ=="
    },
    "node_modules/lodash.isequal": {
      "version": "4.5.0",
      "resolved": "https://registry.npmjs.org/lodash.isequal/-/lodash.isequal-4.5.0.tgz",
      "integrity": "sha512-pDo3lu8Jhfjqls6GkMgpahsF9kCyayhgykjyLMNFTKWrpVdAQtYyB4muAMWozBB4ig/dtWAmsMxLEI8wuz+DYQ=="
    },
    "node_modules/lodash.mergewith": {
      "version": "4.6.2",
      "resolved": "https://registry.npmjs.org/lodash.mergewith/-/lodash.mergewith-4.6.2.tgz",
      "integrity": "sha512-GK3g5RPZWTRSeLSpgP8Xhra+pnjBC56q9FZYe1d5RN3TJ35dbkGy3YqBSMbyCrlbi+CM9Z3Jk5yTL7RCsqboyQ=="
    },
    "node_modules/log-symbols": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/log-symbols/-/log-symbols-4.1.0.tgz",
      "integrity": "sha512-8XPvpAA8uyhfteu8pIvQxpJZ7SYYdpUivZpGy6sFsBuKRY/7rQGavedeB8aK+Zkyq6upMFVL/9AW6vOYzfRyLg==",
      "dependencies": {
        "chalk": "^4.1.0",
        "is-unicode-supported": "^0.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/loose-envify": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",
      "integrity": "sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",
      "dependencies": {
        "js-tokens": "^3.0.0 || ^4.0.0"
      },
      "bin": {
        "loose-envify": "cli.js"
      }
    },
    "node_modules/lowercase-keys": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-3.0.0.tgz",
      "integrity": "sha512-ozCC6gdQ+glXOQsveKD0YsDy8DSQFjDTz4zyzEHNV5+JP5D62LmfDZ6o1cycFx9ouG940M5dE8C8CTewdj2YWQ==",
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/lru-cache": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz",
      "integrity": "sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==",
      "dependencies": {
        "yallist": "^3.0.2"
      }
    },
    "node_modules/magic-string": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/magic-string/-/magic-string-0.25.9.tgz",
      "integrity": "sha512-RmF0AsMzgt25qzqqLc1+MbHmhdx0ojF2Fvs4XnOqz2ZOBXzzkEwc/dJQZCYHAn7v1jbVOjAZfK8msRn4BxO4VQ==",
      "dependencies": {
        "sourcemap-codec": "^1.4.8"
      }
    },
    "node_modules/make-dir": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-2.1.0.tgz",
      "integrity": "sha512-LS9X+dc8KLxXCb8dni79fLIIUA5VyZoyjSMCwTluaXA0o27cCK0bhXkpgw+sTXVpPy/lSO57ilRixqk0vDmtRA==",
      "dependencies": {
        "pify": "^4.0.1",
        "semver": "^5.6.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/make-error": {
      "version": "1.3.6",
      "resolved": "https://registry.npmjs.org/make-error/-/make-error-1.3.6.tgz",
      "integrity": "sha512-s8UhlNe7vPKomQhC1qFelMokr/Sc3AgNbso3n74mVPA5LTZwkB9NlXf4XPamLxJE8h0gh73rM94xvwRT2CVInw=="
    },
    "node_modules/mathjs": {
      "version": "9.5.2",
      "resolved": "https://registry.npmjs.org/mathjs/-/mathjs-9.5.2.tgz",
      "integrity": "sha512-c0erTq0GP503/Ch2OtDOAn50GIOsuxTMjmE00NI/vKJFSWrDaQHRjx6ai+16xYv70yBSnnpUgHZGNf9FR9IwmA==",
      "dependencies": {
        "@babel/runtime": "^7.15.4",
        "complex.js": "^2.0.15",
        "decimal.js": "^10.3.1",
        "escape-latex": "^1.2.0",
        "fraction.js": "^4.1.1",
        "javascript-natural-sort": "^0.7.1",
        "seedrandom": "^3.0.5",
        "tiny-emitter": "^2.1.0",
        "typed-function": "^2.0.0"
      },
      "bin": {
        "mathjs": "bin/cli.js"
      },
      "engines": {
        "node": ">= 12"
      }
    },
    "node_modules/md5.js": {
      "version": "1.3.5",
      "resolved": "https://registry.npmjs.org/md5.js/-/md5.js-1.3.5.tgz",
      "integrity": "sha512-xitP+WxNPcTTOgnTJcrhM0xvdPepipPSf3I8EIpGKeFLjt3PlJLIDG3u8EX53ZIubkb+5U2+3rELYpEhHhzdkg==",
      "dependencies": {
        "hash-base": "^3.0.0",
        "inherits": "^2.0.1",
        "safe-buffer": "^5.1.2"
      }
    },
    "node_modules/media-typer": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz",
      "integrity": "sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/memoize-one": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/memoize-one/-/memoize-one-5.2.1.tgz",
      "integrity": "sha512-zYiwtZUcYyXKo/np96AGZAckk+FWWsUdJ3cHGGmld7+AhvcWmQyGCYUh1hc4Q/pkOhb65dQR/pqCyK0cOaHz4Q=="
    },
    "node_modules/merge-descriptors": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.1.tgz",
      "integrity": "sha512-cCi6g3/Zr1iqQi6ySbseM1Xvooa98N0w31jzUYrXPX2xqObmFGHJ0tQ5u74H3mVh7wLouTseZyYIq39g8cNp1w=="
    },
    "node_modules/merge-stream": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/merge-stream/-/merge-stream-2.0.0.tgz",
      "integrity": "sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w=="
    },
    "node_modules/methods": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/methods/-/methods-1.1.2.tgz",
      "integrity": "sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/mime": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/mime/-/mime-1.6.0.tgz",
      "integrity": "sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==",
      "bin": {
        "mime": "cli.js"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/mime-db": {
      "version": "1.52.0",
      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
      "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/mime-types": {
      "version": "2.1.35",
      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
      "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
      "dependencies": {
        "mime-db": "1.52.0"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/mimic-fn": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz",
      "integrity": "sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/mimic-response": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-1.0.1.tgz",
      "integrity": "sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/min-document": {
      "version": "2.19.0",
      "resolved": "https://registry.npmjs.org/min-document/-/min-document-2.19.0.tgz",
      "integrity": "sha512-9Wy1B3m3f66bPPmU5hdA4DR4PB2OfDU/+GS3yAB7IQozE3tqXaVv2zOjgla7MEGSRv95+ILmOuvhLkOK6wJtCQ==",
      "dependencies": {
        "dom-walk": "^0.1.0"
      }
    },
    "node_modules/mini-create-react-context": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/mini-create-react-context/-/mini-create-react-context-0.4.1.tgz",
      "integrity": "sha512-YWCYEmd5CQeHGSAKrYvXgmzzkrvssZcuuQDDeqkT+PziKGMgE+0MCCtcKbROzocGBG1meBLl2FotlRwf4gAzbQ==",
      "deprecated": "Package no longer supported. Contact Support at https://www.npmjs.com/support for more info.",
      "dependencies": {
        "@babel/runtime": "^7.12.1",
        "tiny-warning": "^1.0.3"
      },
      "peerDependencies": {
        "prop-types": "^15.0.0",
        "react": "^0.14.0 || ^15.0.0 || ^16.0.0 || ^17.0.0"
      }
    },
    "node_modules/minimalistic-assert": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/minimalistic-assert/-/minimalistic-assert-1.0.1.tgz",
      "integrity": "sha512-UtJcAD4yEaGtjPezWuO9wC4nwUnVH/8/Im3yEHQP4b67cXlD/Qr9hdITCU1xDbSEXg2XKNaP8jsReV7vQd00/A=="
    },
    "node_modules/minimalistic-crypto-utils": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/minimalistic-crypto-utils/-/minimalistic-crypto-utils-1.0.1.tgz",
      "integrity": "sha512-JIYlbt6g8i5jKfJ3xz7rF0LXmv2TkDxBLUkiBeZ7bAx4GnnNMr8xFpGnOxn6GhTEHx3SjRrZEoU+j04prX1ktg=="
    },
    "node_modules/minimatch": {
      "version": "9.0.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-9.0.2.tgz",
      "integrity": "sha512-PZOT9g5v2ojiTL7r1xF6plNHLtOeTpSlDI007As2NlA2aYBMfVom17yqa6QzhmDP8QOhn7LjHTg7DFCVSSa6yg==",
      "dependencies": {
        "brace-expansion": "^2.0.1"
      },
      "engines": {
        "node": ">=16 || 14 >=14.17"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/minimist": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.8.tgz",
      "integrity": "sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/minipass": {
      "version": "2.9.0",
      "resolved": "https://registry.npmjs.org/minipass/-/minipass-2.9.0.tgz",
      "integrity": "sha512-wxfUjg9WebH+CUDX/CdbRlh5SmfZiy/hpkxaRI16Y9W56Pa75sWgd/rvFilSgrauD9NyFymP/+JFV3KwzIsJeg==",
      "dependencies": {
        "safe-buffer": "^5.1.2",
        "yallist": "^3.0.0"
      }
    },
    "node_modules/minizlib": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/minizlib/-/minizlib-1.3.3.tgz",
      "integrity": "sha512-6ZYMOEnmVsdCeTJVE0W9ZD+pVnE8h9Hma/iOwwRDsdQoePpoX56/8B6z3P9VNwppJuBKNRuFDRNRqRWexT9G9Q==",
      "dependencies": {
        "minipass": "^2.9.0"
      }
    },
    "node_modules/mkdirp": {
      "version": "0.5.6",
      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.6.tgz",
      "integrity": "sha512-FP+p8RB8OWpF3YZBCrP5gtADmtXApB5AMLn+vdyA+PyxCjrCs00mjyUozssO33cwDeT3wNGdLxJ5M//YqtHAJw==",
      "dependencies": {
        "minimist": "^1.2.6"
      },
      "bin": {
        "mkdirp": "bin/cmd.js"
      }
    },
    "node_modules/mkdirp-promise": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/mkdirp-promise/-/mkdirp-promise-5.0.1.tgz",
      "integrity": "sha512-Hepn5kb1lJPtVW84RFT40YG1OddBNTOVUZR2bzQUHc+Z03en8/3uX0+060JDhcEzyO08HmipsN9DcnFMxhIL9w==",
      "deprecated": "This package is broken and no longer maintained. 'mkdirp' itself supports promises now, please switch to that.",
      "dependencies": {
        "mkdirp": "*"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/mock-fs": {
      "version": "4.14.0",
      "resolved": "https://registry.npmjs.org/mock-fs/-/mock-fs-4.14.0.tgz",
      "integrity": "sha512-qYvlv/exQ4+svI3UOvPUpLDF0OMX5euvUH0Ny4N5QyRyhNdgAgUrVH3iUINSzEPLvx0kbo/Bp28GJKIqvE7URw=="
    },
    "node_modules/morgan": {
      "version": "1.10.0",
      "resolved": "https://registry.npmjs.org/morgan/-/morgan-1.10.0.tgz",
      "integrity": "sha512-AbegBVI4sh6El+1gNwvD5YIck7nSA36weD7xvIxG4in80j/UoK8AEGaWnnz8v1GxonMCltmlNs5ZKbGvl9b1XQ==",
      "dependencies": {
        "basic-auth": "~2.0.1",
        "debug": "2.6.9",
        "depd": "~2.0.0",
        "on-finished": "~2.3.0",
        "on-headers": "~1.0.2"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/morgan/node_modules/on-finished": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.3.0.tgz",
      "integrity": "sha512-ikqdkGAAyf/X/gPhXGvfgAytDZtDbr+bkNUJ0N9h5MI/dmdgCs3l6hoHrcUv41sRKew3jIwrp4qQDXiK99Utww==",
      "dependencies": {
        "ee-first": "1.1.1"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A=="
    },
    "node_modules/multer": {
      "version": "1.4.5-lts.1",
      "resolved": "https://registry.npmjs.org/multer/-/multer-1.4.5-lts.1.tgz",
      "integrity": "sha512-ywPWvcDMeH+z9gQq5qYHCCy+ethsk4goepZ45GLD63fOu0YcNecQxi64nDs3qluZB+murG3/D4dJ7+dGctcCQQ==",
      "dependencies": {
        "append-field": "^1.0.0",
        "busboy": "^1.0.0",
        "concat-stream": "^1.5.2",
        "mkdirp": "^0.5.4",
        "object-assign": "^4.1.1",
        "type-is": "^1.6.4",
        "xtend": "^4.0.0"
      },
      "engines": {
        "node": ">= 6.0.0"
      }
    },
    "node_modules/multibase": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/multibase/-/multibase-0.6.1.tgz",
      "integrity": "sha512-pFfAwyTjbbQgNc3G7D48JkJxWtoJoBMaR4xQUOuB8RnCgRqaYmWNFeJTTvrJ2w51bjLq2zTby6Rqj9TQ9elSUw==",
      "deprecated": "This module has been superseded by the multiformats module",
      "dependencies": {
        "base-x": "^3.0.8",
        "buffer": "^5.5.0"
      }
    },
    "node_modules/multibase/node_modules/buffer": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz",
      "integrity": "sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "dependencies": {
        "base64-js": "^1.3.1",
        "ieee754": "^1.1.13"
      }
    },
    "node_modules/multicodec": {
      "version": "0.5.7",
      "resolved": "https://registry.npmjs.org/multicodec/-/multicodec-0.5.7.tgz",
      "integrity": "sha512-PscoRxm3f+88fAtELwUnZxGDkduE2HD9Q6GHUOywQLjOGT/HAdhjLDYNZ1e7VR0s0TP0EwZ16LNUTFpoBGivOA==",
      "deprecated": "This module has been superseded by the multiformats module",
      "dependencies": {
        "varint": "^5.0.0"
      }
    },
    "node_modules/multihashes": {
      "version": "0.4.21",
      "resolved": "https://registry.npmjs.org/multihashes/-/multihashes-0.4.21.tgz",
      "integrity": "sha512-uVSvmeCWf36pU2nB4/1kzYZjsXD9vofZKpgudqkceYY5g2aZZXJ5r9lxuzoRLl1OAp28XljXsEJ/X/85ZsKmKw==",
      "dependencies": {
        "buffer": "^5.5.0",
        "multibase": "^0.7.0",
        "varint": "^5.0.0"
      }
    },
    "node_modules/multihashes/node_modules/buffer": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz",
      "integrity": "sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "dependencies": {
        "base64-js": "^1.3.1",
        "ieee754": "^1.1.13"
      }
    },
    "node_modules/multihashes/node_modules/multibase": {
      "version": "0.7.0",
      "resolved": "https://registry.npmjs.org/multibase/-/multibase-0.7.0.tgz",
      "integrity": "sha512-TW8q03O0f6PNFTQDvh3xxH03c8CjGaaYrjkl9UQPG6rz53TQzzxJVCIWVjzcbN/Q5Y53Zd0IBQBMVktVgNx4Fg==",
      "deprecated": "This module has been superseded by the multiformats module",
      "dependencies": {
        "base-x": "^3.0.8",
        "buffer": "^5.5.0"
      }
    },
    "node_modules/mustache": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/mustache/-/mustache-4.2.0.tgz",
      "integrity": "sha512-71ippSywq5Yb7/tVYyGbkBggbU8H3u5Rz56fH60jGFgr8uHwxs+aSKeqmluIVzM0m0kB7xQjKS6qPfd0b2ZoqQ==",
      "bin": {
        "mustache": "bin/mustache"
      }
    },
    "node_modules/mz": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/mz/-/mz-2.7.0.tgz",
      "integrity": "sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==",
      "dependencies": {
        "any-promise": "^1.0.0",
        "object-assign": "^4.0.1",
        "thenify-all": "^1.0.0"
      }
    },
    "node_modules/nano-json-stream-parser": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/nano-json-stream-parser/-/nano-json-stream-parser-0.1.2.tgz",
      "integrity": "sha512-9MqxMH/BSJC7dnLsEMPyfN5Dvoo49IsPFYMcHw3Bcfc2kN0lpHRBSzlMSVx4HGyJ7s9B31CyBTVehWJoQ8Ctew=="
    },
    "node_modules/near-api-js": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/near-api-js/-/near-api-js-1.1.0.tgz",
      "integrity": "sha512-qYKv1mYsaDZc2uYndhS+ttDhR9+60qFc+ZjD6lWsAxr3ZskMjRwPffDGQZYhC7BRDQMe1HEbk6d5mf+TVm0Lqg==",
      "dependencies": {
        "bn.js": "5.2.1",
        "borsh": "^0.7.0",
        "bs58": "^4.0.0",
        "depd": "^2.0.0",
        "error-polyfill": "^0.1.3",
        "http-errors": "^1.7.2",
        "js-sha256": "^0.9.0",
        "mustache": "^4.0.0",
        "node-fetch": "^2.6.1",
        "text-encoding-utf-8": "^1.0.2",
        "tweetnacl": "^1.0.1"
      }
    },
    "node_modules/near-api-js/node_modules/http-errors": {
      "version": "1.8.1",
      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.8.1.tgz",
      "integrity": "sha512-Kpk9Sm7NmI+RHhnj6OIWDI1d6fIoFAtFt9RLaTMRlg/8w49juAStsrBgp0Dp4OdxdVbRIeKhtCUvoi/RuAhO4g==",
      "dependencies": {
        "depd": "~1.1.2",
        "inherits": "2.0.4",
        "setprototypeof": "1.2.0",
        "statuses": ">= 1.5.0 < 2",
        "toidentifier": "1.0.1"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/near-api-js/node_modules/http-errors/node_modules/depd": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/depd/-/depd-1.1.2.tgz",
      "integrity": "sha512-7emPTl6Dpo6JRXOXjLRxck+FlLRX5847cLKEn00PLAgc3g2hTZZgr+e4c2v6QpSmLeFP3n5yUo7ft6avBK/5jQ==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/near-api-js/node_modules/node-fetch": {
      "version": "2.6.11",
      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.11.tgz",
      "integrity": "sha512-4I6pdBY1EthSqDmJkiNk3JIT8cswwR9nfeW/cPdUagJYEQG7R95WRH74wpz7ma8Gh/9dI9FP+OU+0E4FvtA55w==",
      "dependencies": {
        "whatwg-url": "^5.0.0"
      },
      "engines": {
        "node": "4.x || >=6.0.0"
      },
      "peerDependencies": {
        "encoding": "^0.1.0"
      },
      "peerDependenciesMeta": {
        "encoding": {
          "optional": true
        }
      }
    },
    "node_modules/near-api-js/node_modules/statuses": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.5.0.tgz",
      "integrity": "sha512-OpZ3zP+jT1PI7I8nemJX4AKmAX070ZkYPVWV/AaKTJl+tXCTGyVdC1a4SL8RUQYEwk/f34ZX8UTykN68FwrqAA==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/near-hd-key": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/near-hd-key/-/near-hd-key-1.2.1.tgz",
      "integrity": "sha512-SIrthcL5Wc0sps+2e1xGj3zceEa68TgNZDLuCx0daxmfTP7sFTB3/mtE2pYhlFsCxWoMn+JfID5E1NlzvvbRJg==",
      "dependencies": {
        "bip39": "3.0.2",
        "create-hmac": "1.1.7",
        "tweetnacl": "1.0.3"
      }
    },
    "node_modules/near-hd-key/node_modules/@types/node": {
      "version": "11.11.6",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-11.11.6.tgz",
      "integrity": "sha512-Exw4yUWMBXM3X+8oqzJNRqZSwUAaS4+7NdvHqQuFi/d+synz++xmX3QIf+BFqneW8N31R8Ky+sikfZUXq07ggQ=="
    },
    "node_modules/near-hd-key/node_modules/bip39": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/bip39/-/bip39-3.0.2.tgz",
      "integrity": "sha512-J4E1r2N0tUylTKt07ibXvhpT2c5pyAFgvuA5q1H9uDy6dEGpjV8jmymh3MTYJDLCNbIVClSB9FbND49I6N24MQ==",
      "dependencies": {
        "@types/node": "11.11.6",
        "create-hash": "^1.1.0",
        "pbkdf2": "^3.0.9",
        "randombytes": "^2.0.1"
      }
    },
    "node_modules/near-seed-phrase": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/near-seed-phrase/-/near-seed-phrase-0.2.0.tgz",
      "integrity": "sha512-NpmrnejpY1AdlRpDZ0schJQJtfBaoUheRfiYtQpcq9TkwPgqKZCRULV5L3hHmLc0ep7KRtikbPQ9R2ztN/3cyQ==",
      "dependencies": {
        "bip39-light": "^1.0.7",
        "bs58": "^4.0.1",
        "near-hd-key": "^1.2.1",
        "tweetnacl": "^1.0.2"
      }
    },
    "node_modules/negotiator": {
      "version": "0.6.3",
      "resolved": "https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz",
      "integrity": "sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/neo-async": {
      "version": "2.6.2",
      "resolved": "https://registry.npmjs.org/neo-async/-/neo-async-2.6.2.tgz",
      "integrity": "sha512-Yd3UES5mWCSqR+qNT93S3UoYUkqAZ9lLg8a7g9rimsWmYGK8cVToA4/sF3RrshdyV3sAGMXVUmpMYOw+dLpOuw=="
    },
    "node_modules/next-tick": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/next-tick/-/next-tick-1.1.0.tgz",
      "integrity": "sha512-CXdUiJembsNjuToQvxayPZF9Vqht7hewsvy2sOWafLvi2awflj9mOC6bHIg50orX8IJvWKY9wYQ/zB2kogPslQ=="
    },
    "node_modules/node-addon-api": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/node-addon-api/-/node-addon-api-2.0.2.tgz",
      "integrity": "sha512-Ntyt4AIXyaLIuMHF6IOoTakB3K+RWxwtsHNRxllEoA6vPwP9o4866g6YWDLUdnucilZhmkxiHwHr11gAENw+QA=="
    },
    "node_modules/node-cache": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/node-cache/-/node-cache-5.1.2.tgz",
      "integrity": "sha512-t1QzWwnk4sjLWaQAS8CHgOJ+RAfmHpxFWmc36IWTiWHQfs0w5JDMBS1b1ZxQteo0vVVuWJvIUKHDkkeK7vIGCg==",
      "dependencies": {
        "clone": "2.x"
      },
      "engines": {
        "node": ">= 8.0.0"
      }
    },
    "node_modules/node-domexception": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/node-domexception/-/node-domexception-1.0.0.tgz",
      "integrity": "sha512-/jKZoMpw0F8GRwl4/eLROPA3cfcXtLApP0QzLmUT/HuPCZWyB7IY9ZrMeKw2O/nFIqPQB3PVM9aYm0F312AXDQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/jimmywarting"
        },
        {
          "type": "github",
          "url": "https://paypal.me/jimmywarting"
        }
      ],
      "engines": {
        "node": ">=10.5.0"
      }
    },
    "node_modules/node-fetch": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-3.3.1.tgz",
      "integrity": "sha512-cRVc/kyto/7E5shrWca1Wsea4y6tL9iYJE5FBCius3JQfb/4P4I295PfhgbJQBLTx6lATE4z+wK0rPM4VS2uow==",
      "dependencies": {
        "data-uri-to-buffer": "^4.0.0",
        "fetch-blob": "^3.1.4",
        "formdata-polyfill": "^4.0.10"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/node-fetch"
      }
    },
    "node_modules/node-gyp-build": {
      "version": "4.6.0",
      "resolved": "https://registry.npmjs.org/node-gyp-build/-/node-gyp-build-4.6.0.tgz",
      "integrity": "sha512-NTZVKn9IylLwUzaKjkas1e4u2DLNcV4rdYagA4PWdPwW87Bi7z+BznyKSRwS/761tV/lzCGXplWsiaMjLqP2zQ==",
      "bin": {
        "node-gyp-build": "bin.js",
        "node-gyp-build-optional": "optional.js",
        "node-gyp-build-test": "build-test.js"
      }
    },
    "node_modules/node-releases": {
      "version": "2.0.12",
      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.12.tgz",
      "integrity": "sha512-QzsYKWhXTWx8h1kIvqfnC++o0pEmpRQA/aenALsL2F4pqNVr7YzcdMlDij5WBnwftRbJCNJL/O7zdKaxKPHqgQ=="
    },
    "node_modules/nodemailer": {
      "version": "6.9.1",
      "resolved": "https://registry.npmjs.org/nodemailer/-/nodemailer-6.9.1.tgz",
      "integrity": "sha512-qHw7dOiU5UKNnQpXktdgQ1d3OFgRAekuvbJLcdG5dnEo/GtcTHRYM7+UfJARdOFU9WUQO8OiIamgWPmiSFHYAA==",
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/nodemailer-express-handlebars": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/nodemailer-express-handlebars/-/nodemailer-express-handlebars-6.0.0.tgz",
      "integrity": "sha512-xo5nVCn2GDaE8o0ppOWVq0s3Tt5xLn+R2pDROQrZALKCoP6WsEOXrNGQwH/tYJ4vucWtWd+zdcHm734S6CSA7w==",
      "dependencies": {
        "express-handlebars": "^6.0.0"
      },
      "engines": {
        "node": "14.* || 16.* || >= 18"
      }
    },
    "node_modules/nodemon": {
      "version": "2.0.21",
      "resolved": "https://registry.npmjs.org/nodemon/-/nodemon-2.0.21.tgz",
      "integrity": "sha512-djN/n2549DUtY33S7o1djRCd7dEm0kBnj9c7S9XVXqRUbuggN1MZH/Nqa+5RFQr63Fbefq37nFXAE9VU86yL1A==",
      "dev": true,
      "dependencies": {
        "chokidar": "^3.5.2",
        "debug": "^3.2.7",
        "ignore-by-default": "^1.0.1",
        "minimatch": "^3.1.2",
        "pstree.remy": "^1.1.8",
        "semver": "^5.7.1",
        "simple-update-notifier": "^1.0.7",
        "supports-color": "^5.5.0",
        "touch": "^3.1.0",
        "undefsafe": "^2.0.5"
      },
      "bin": {
        "nodemon": "bin/nodemon.js"
      },
      "engines": {
        "node": ">=8.10.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/nodemon"
      }
    },
    "node_modules/nodemon/node_modules/brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "dev": true,
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/nodemon/node_modules/debug": {
      "version": "3.2.7",
      "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.7.tgz",
      "integrity": "sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==",
      "dev": true,
      "dependencies": {
        "ms": "^2.1.1"
      }
    },
    "node_modules/nodemon/node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dev": true,
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/nodemon/node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
      "dev": true
    },
    "node_modules/nopt": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/nopt/-/nopt-1.0.10.tgz",
      "integrity": "sha512-NWmpvLSqUrgrAC9HCuxEvb+PSloHpqVu+FqcO4eeF2h5qYRhA7ev6KvelyQAKtegUbC6RypJnlEOhd8vloNKYg==",
      "dev": true,
      "dependencies": {
        "abbrev": "1"
      },
      "bin": {
        "nopt": "bin/nopt.js"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/normalize-path": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
      "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/normalize-url": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/normalize-url/-/normalize-url-6.1.0.tgz",
      "integrity": "sha512-DlL+XwOy3NxAQ8xuC0okPgK46iuVNAK01YN7RueYBqqFeGsBjV9XmCAzAdgt+667bCl5kPh9EqKKDwnaPG1I7A==",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/number-to-bn": {
      "version": "1.7.0",
      "resolved": "https://registry.npmjs.org/number-to-bn/-/number-to-bn-1.7.0.tgz",
      "integrity": "sha512-wsJ9gfSz1/s4ZsJN01lyonwuxA1tml6X1yBDnfpMglypcBRFZZkus26EdPSlqS5GJfYddVZa22p3VNb3z5m5Ig==",
      "dependencies": {
        "bn.js": "4.11.6",
        "strip-hex-prefix": "1.0.0"
      },
      "engines": {
        "node": ">=6.5.0",
        "npm": ">=3"
      }
    },
    "node_modules/number-to-bn/node_modules/bn.js": {
      "version": "4.11.6",
      "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.11.6.tgz",
      "integrity": "sha512-XWwnNNFCuuSQ0m3r3C4LE3EiORltHd9M05pq6FOlVeiophzRbMo50Sbz1ehl8K3Z+jw9+vmgnXefY1hz8X+2wA=="
    },
    "node_modules/o3": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/o3/-/o3-1.0.3.tgz",
      "integrity": "sha512-f+4n+vC6s4ysy7YO7O2gslWZBUu8Qj2i2OUJOvjRxQva7jVjYjB29jrr9NCjmxZQR0gzrOcv1RnqoYOeMs5VRQ==",
      "dependencies": {
        "capability": "^0.2.5"
      }
    },
    "node_modules/oauth-sign": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.9.0.tgz",
      "integrity": "sha512-fexhUFFPTGV8ybAtSIGbV6gOkSv8UtRbDBnAyLQw4QPKkgNlsH2ByPGtMUqdWkos6YCRmAqViwgZrJc/mRDzZQ==",
      "engines": {
        "node": "*"
      }
    },
    "node_modules/object-assign": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
      "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/object-inspect": {
      "version": "1.12.3",
      "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.12.3.tgz",
      "integrity": "sha512-geUvdk7c+eizMNUDkRpW1wJwgfOiOeHbxBR/hLXK1aT6zmVSO0jsQcs7fj6MGw89jC/cjGfLcNOrtMYtGqm81g==",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/object-is": {
      "version": "1.1.5",
      "resolved": "https://registry.npmjs.org/object-is/-/object-is-1.1.5.tgz",
      "integrity": "sha512-3cyDsyHgtmi7I7DfSSI2LDp6SK2lwvtbg0p0R1e0RvTqF5ceGx+K2dfSjm1bKDMVCFEDAQvy+o8c6a7VujOddw==",
      "dependencies": {
        "call-bind": "^1.0.2",
        "define-properties": "^1.1.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/object-keys": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz",
      "integrity": "sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/oboe": {
      "version": "2.1.5",
      "resolved": "https://registry.npmjs.org/oboe/-/oboe-2.1.5.tgz",
      "integrity": "sha512-zRFWiF+FoicxEs3jNI/WYUrVEgA7DeET/InK0XQuudGHRg8iIob3cNPrJTKaz4004uaA9Pbe+Dwa8iluhjLZWA==",
      "dependencies": {
        "http-https": "^1.0.0"
      }
    },
    "node_modules/on-finished": {
      "version": "2.4.1",
      "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz",
      "integrity": "sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==",
      "dependencies": {
        "ee-first": "1.1.1"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/on-headers": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/on-headers/-/on-headers-1.0.2.tgz",
      "integrity": "sha512-pZAE+FJLoyITytdqK0U5s+FIpjN0JP3OzFi/u8Rx+EV5/W+JTWGXG8xFzevE7AjBfDqHv/8vL8qQsIhHnqRkrA==",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/once": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
      "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
      "dependencies": {
        "wrappy": "1"
      }
    },
    "node_modules/onetime": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/onetime/-/onetime-5.1.2.tgz",
      "integrity": "sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==",
      "dependencies": {
        "mimic-fn": "^2.1.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/openapi-types": {
      "version": "12.1.0",
      "resolved": "https://registry.npmjs.org/openapi-types/-/openapi-types-12.1.0.tgz",
      "integrity": "sha512-XpeCy01X6L5EpP+6Hc3jWN7rMZJ+/k1lwki/kTmWzbVhdPie3jd5O2ZtedEx8Yp58icJ0osVldLMrTB/zslQXA==",
      "peer": true
    },
    "node_modules/ora": {
      "version": "5.4.1",
      "resolved": "https://registry.npmjs.org/ora/-/ora-5.4.1.tgz",
      "integrity": "sha512-5b6Y85tPxZZ7QytO+BQzysW31HJku27cRIlkbAXaNx+BdcVi+LlRFmVXzeF6a7JCwJpyw5c4b+YSVImQIrBpuQ==",
      "dependencies": {
        "bl": "^4.1.0",
        "chalk": "^4.1.0",
        "cli-cursor": "^3.1.0",
        "cli-spinners": "^2.5.0",
        "is-interactive": "^1.0.0",
        "is-unicode-supported": "^0.1.0",
        "log-symbols": "^4.1.0",
        "strip-ansi": "^6.0.0",
        "wcwidth": "^1.0.1"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/otplib": {
      "version": "12.0.1",
      "resolved": "https://registry.npmjs.org/otplib/-/otplib-12.0.1.tgz",
      "integrity": "sha512-xDGvUOQjop7RDgxTQ+o4pOol0/3xSZzawTiPKRrHnQWAy0WjhNs/5HdIDJCrqC4MBynmjXgULc6YfioaxZeFgg==",
      "dependencies": {
        "@otplib/core": "^12.0.1",
        "@otplib/preset-default": "^12.0.1",
        "@otplib/preset-v11": "^12.0.1"
      }
    },
    "node_modules/p-cancelable": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/p-cancelable/-/p-cancelable-3.0.0.tgz",
      "integrity": "sha512-mlVgR3PGuzlo0MmTdk4cXqXWlwQDLnONTAg6sm62XkMJEiRxN3GL3SffkYvqwonbkJBcrI7Uvv5Zh9yjvn2iUw==",
      "engines": {
        "node": ">=12.20"
      }
    },
    "node_modules/p-limit": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz",
      "integrity": "sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==",
      "dependencies": {
        "p-try": "^2.0.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/p-locate": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz",
      "integrity": "sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==",
      "dependencies": {
        "p-limit": "^2.2.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/p-try": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz",
      "integrity": "sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/packet-reader": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/packet-reader/-/packet-reader-1.0.0.tgz",
      "integrity": "sha512-HAKu/fG3HpHFO0AA8WE8q2g+gBJaZ9MG7fcKk+IJPLTGAD6Psw4443l+9DGRbOIh3/aXr7Phy0TjilYivJo5XQ=="
    },
    "node_modules/parchment": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/parchment/-/parchment-1.1.4.tgz",
      "integrity": "sha512-J5FBQt/pM2inLzg4hEWmzQx/8h8D0CiDxaG3vyp9rKrQRSDgBlhjdP5jQGgosEajXPSQouXGHOmVdgo7QmJuOg=="
    },
    "node_modules/parent-module": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
      "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
      "dependencies": {
        "callsites": "^3.0.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/parse-headers": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/parse-headers/-/parse-headers-2.0.5.tgz",
      "integrity": "sha512-ft3iAoLOB/MlwbNXgzy43SWGP6sQki2jQvAyBg/zDFAgr9bfNWZIUj42Kw2eJIl8kEi4PbgE6U1Zau/HwI75HA=="
    },
    "node_modules/parse-json": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-5.2.0.tgz",
      "integrity": "sha512-ayCKvm/phCGxOkYRSCM82iDwct8/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/odhFrGzQXZwbifC8Rg==",
      "dependencies": {
        "@babel/code-frame": "^7.0.0",
        "error-ex": "^1.3.1",
        "json-parse-even-better-errors": "^2.3.0",
        "lines-and-columns": "^1.1.6"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/parse5": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/parse5/-/parse5-5.1.1.tgz",
      "integrity": "sha512-ugq4DFI0Ptb+WWjAdOK16+u/nHfiIrcE+sh8kZMaM0WllQKLI9rOUq6c2b7cwPkXdzfQESqvoqK6ug7U/Yyzug=="
    },
    "node_modules/parse5-htmlparser2-tree-adapter": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/parse5-htmlparser2-tree-adapter/-/parse5-htmlparser2-tree-adapter-6.0.1.tgz",
      "integrity": "sha512-qPuWvbLgvDGilKc5BoicRovlT4MtYT6JfJyBOMDsKoiT+GiuP5qyrPCnR9HcPECIJJmZh5jRndyNThnhhb/vlA==",
      "dependencies": {
        "parse5": "^6.0.1"
      }
    },
    "node_modules/parse5-htmlparser2-tree-adapter/node_modules/parse5": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/parse5/-/parse5-6.0.1.tgz",
      "integrity": "sha512-Ofn/CTFzRGTTxwpNEs9PP93gXShHcTq255nzRYSKe8AkVpZY7e1fpmTfOyoIvjP5HG7Z2ZM7VS9PPhQGW2pOpw=="
    },
    "node_modules/parseurl": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz",
      "integrity": "sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/path-exists": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
      "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/path-is-absolute": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
      "integrity": "sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/path-key": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/path-parse": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw=="
    },
    "node_modules/path-scurry": {
      "version": "1.10.0",
      "resolved": "https://registry.npmjs.org/path-scurry/-/path-scurry-1.10.0.tgz",
      "integrity": "sha512-tZFEaRQbMLjwrsmidsGJ6wDMv0iazJWk6SfIKnY4Xru8auXgmJkOBa5DUbYFcFD2Rzk2+KDlIiF0GVXNCbgC7g==",
      "dependencies": {
        "lru-cache": "^9.1.1 || ^10.0.0",
        "minipass": "^5.0.0 || ^6.0.2"
      },
      "engines": {
        "node": ">=16 || 14 >=14.17"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/path-scurry/node_modules/lru-cache": {
      "version": "10.0.0",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-10.0.0.tgz",
      "integrity": "sha512-svTf/fzsKHffP42sujkO/Rjs37BCIsQVRCeNYIm9WN8rgT7ffoUnRtZCqU+6BqcSBdv8gwJeTz8knJpgACeQMw==",
      "engines": {
        "node": "14 || >=16.14"
      }
    },
    "node_modules/path-scurry/node_modules/minipass": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/minipass/-/minipass-6.0.2.tgz",
      "integrity": "sha512-MzWSV5nYVT7mVyWCwn2o7JH13w2TBRmmSqSRCKzTw+lmft9X4z+3wjvs06Tzijo5z4W/kahUCDpRXTF+ZrmF/w==",
      "engines": {
        "node": ">=16 || 14 >=14.17"
      }
    },
    "node_modules/path-to-regexp": {
      "version": "0.1.7",
      "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.7.tgz",
      "integrity": "sha512-5DFkuoqlv1uYQKxy8omFBeJPQcdoE07Kv2sferDCrAq1ohOU+MSDswDIbnx3YAM60qIOnYa53wBhXW0EbMonrQ=="
    },
    "node_modules/path-type": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz",
      "integrity": "sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/pbkdf2": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/pbkdf2/-/pbkdf2-3.1.2.tgz",
      "integrity": "sha512-iuh7L6jA7JEGu2WxDwtQP1ddOpaJNC4KlDEFfdQajSGgGPNi4OyDc2R7QnbY2bR9QjBVGwgvTdNJZoE7RaxUMA==",
      "dependencies": {
        "create-hash": "^1.1.2",
        "create-hmac": "^1.1.4",
        "ripemd160": "^2.0.1",
        "safe-buffer": "^5.0.1",
        "sha.js": "^2.4.8"
      },
      "engines": {
        "node": ">=0.12"
      }
    },
    "node_modules/performance-now": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz",
      "integrity": "sha512-7EAHlyLHI56VEIdK57uwHdHKIaAGbnXPiw0yWbarQZOKaKpvUIgW0jWRVLiatnM+XXlSwsanIBH/hzGMJulMow=="
    },
    "node_modules/pg": {
      "version": "8.9.0",
      "resolved": "https://registry.npmjs.org/pg/-/pg-8.9.0.tgz",
      "integrity": "sha512-ZJM+qkEbtOHRuXjmvBtOgNOXOtLSbxiMiUVMgE4rV6Zwocy03RicCVvDXgx8l4Biwo8/qORUnEqn2fdQzV7KCg==",
      "dependencies": {
        "buffer-writer": "2.0.0",
        "packet-reader": "1.0.0",
        "pg-connection-string": "^2.5.0",
        "pg-pool": "^3.5.2",
        "pg-protocol": "^1.6.0",
        "pg-types": "^2.1.0",
        "pgpass": "1.x"
      },
      "engines": {
        "node": ">= 8.0.0"
      },
      "peerDependencies": {
        "pg-native": ">=3.0.1"
      },
      "peerDependenciesMeta": {
        "pg-native": {
          "optional": true
        }
      }
    },
    "node_modules/pg-connection-string": {
      "version": "2.5.0",
      "resolved": "https://registry.npmjs.org/pg-connection-string/-/pg-connection-string-2.5.0.tgz",
      "integrity": "sha512-r5o/V/ORTA6TmUnyWZR9nCj1klXCO2CEKNRlVuJptZe85QuhFayC7WeMic7ndayT5IRIR0S0xFxFi2ousartlQ=="
    },
    "node_modules/pg-int8": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/pg-int8/-/pg-int8-1.0.1.tgz",
      "integrity": "sha512-WCtabS6t3c8SkpDBUlb1kjOs7l66xsGdKpIPZsg4wR+B3+u9UAum2odSsF9tnvxg80h4ZxLWMy4pRjOsFIqQpw==",
      "engines": {
        "node": ">=4.0.0"
      }
    },
    "node_modules/pg-pool": {
      "version": "3.5.2",
      "resolved": "https://registry.npmjs.org/pg-pool/-/pg-pool-3.5.2.tgz",
      "integrity": "sha512-His3Fh17Z4eg7oANLob6ZvH8xIVen3phEZh2QuyrIl4dQSDVEabNducv6ysROKpDNPSD+12tONZVWfSgMvDD9w==",
      "peerDependencies": {
        "pg": ">=8.0"
      }
    },
    "node_modules/pg-protocol": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/pg-protocol/-/pg-protocol-1.6.0.tgz",
      "integrity": "sha512-M+PDm637OY5WM307051+bsDia5Xej6d9IR4GwJse1qA1DIhiKlksvrneZOYQq42OM+spubpcNYEo2FcKQrDk+Q=="
    },
    "node_modules/pg-types": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/pg-types/-/pg-types-2.2.0.tgz",
      "integrity": "sha512-qTAAlrEsl8s4OiEQY69wDvcMIdQN6wdz5ojQiOy6YRMuynxenON0O5oCpJI6lshc6scgAY8qvJ2On/p+CXY0GA==",
      "dependencies": {
        "pg-int8": "1.0.1",
        "postgres-array": "~2.0.0",
        "postgres-bytea": "~1.0.0",
        "postgres-date": "~1.0.4",
        "postgres-interval": "^1.1.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/pgpass": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/pgpass/-/pgpass-1.0.5.tgz",
      "integrity": "sha512-FdW9r/jQZhSeohs1Z3sI1yxFQNFvMcnmfuj4WBMUTxOrAyLMaTcE1aAMBiTlbMNaXvBCQuVi0R7hd8udDSP7ug==",
      "dependencies": {
        "split2": "^4.1.0"
      }
    },
    "node_modules/picocolors": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.0.0.tgz",
      "integrity": "sha512-1fygroTLlHu66zi26VoTDv8yRgm0Fccecssto+MhsZ0D/DGW2sm8E8AjW7NU5VVTRt5GxbeZ5qBuJr+HyLYkjQ=="
    },
    "node_modules/picomatch": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
      "engines": {
        "node": ">=8.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/jonschlinkert"
      }
    },
    "node_modules/pify": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/pify/-/pify-4.0.1.tgz",
      "integrity": "sha512-uB80kBFb/tfd68bVleG9T5GGsGPjJrLAUpR5PZIrhBnIaRTQRjqdJSsIKkOP6OAIFbj7GOrcudc5pNjZ+geV2g==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/pirates": {
      "version": "4.0.6",
      "resolved": "https://registry.npmjs.org/pirates/-/pirates-4.0.6.tgz",
      "integrity": "sha512-saLsH7WeYYPiD25LDuLRRY/i+6HaPYr6G1OUlN39otzkSTxKnubR9RTxS3/Kk50s1g2JTgFwWQDQyplC5/SHZg==",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/pkg-dir": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/pkg-dir/-/pkg-dir-3.0.0.tgz",
      "integrity": "sha512-/E57AYkoeQ25qkxMj5PBOVgF8Kiu/h7cYS30Z5+R7WaiCCBfLq58ZI/dSeaEKb9WVJV5n/03QwrN3IeWIFllvw==",
      "dependencies": {
        "find-up": "^3.0.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/pkg-dir/node_modules/find-up": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/find-up/-/find-up-3.0.0.tgz",
      "integrity": "sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==",
      "dependencies": {
        "locate-path": "^3.0.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/pkg-dir/node_modules/locate-path": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-3.0.0.tgz",
      "integrity": "sha512-7AO748wWnIhNqAuaty2ZWHkQHRSNfPVIsPIfwEOWO22AmaoVrWavlOcMR5nzTLNYvp36X220/maaRsrec1G65A==",
      "dependencies": {
        "p-locate": "^3.0.0",
        "path-exists": "^3.0.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/pkg-dir/node_modules/p-locate": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-3.0.0.tgz",
      "integrity": "sha512-x+12w/To+4GFfgJhBEpiDcLozRJGegY+Ei7/z0tSLkMmxGZNybVMSfWj9aJn8Z5Fc7dBUNJOOVgPv2H7IwulSQ==",
      "dependencies": {
        "p-limit": "^2.0.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/pkg-dir/node_modules/path-exists": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-3.0.0.tgz",
      "integrity": "sha512-bpC7GYwiDYQ4wYLe+FA8lhRjhQCMcQGuSgGGqDkg/QerRWw9CmGRT0iSOVRSZJ29NMLZgIzqaljJ63oaL4NIJQ==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/pngjs": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/pngjs/-/pngjs-5.0.0.tgz",
      "integrity": "sha512-40QW5YalBNfQo5yRYmiw7Yz6TKKVr3h6970B2YE+3fQpsWcrbj1PzJgxeJ19DRQjhMbKPIuMY8rFaXc8moolVw==",
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/polished": {
      "version": "3.7.2",
      "resolved": "https://registry.npmjs.org/polished/-/polished-3.7.2.tgz",
      "integrity": "sha512-pQKtpZGmsZrW8UUpQMAnR7s3ppHeMQVNyMDKtUyKwuvDmklzcEyM5Kllb3JyE/sE/x7arDmyd35i+4vp99H6sQ==",
      "dependencies": {
        "@babel/runtime": "^7.12.5"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/popper.js": {
      "version": "1.16.1",
      "resolved": "https://registry.npmjs.org/popper.js/-/popper.js-1.16.1.tgz",
      "integrity": "sha512-Wb4p1J4zyFTbM+u6WuO4XstYx4Ky9Cewe4DWrel7B0w6VVICvPwdOpotjzcf6eD8TsckVnIMNONQyPIUFOUbCQ==",
      "deprecated": "You can find the new Popper v2 at @popperjs/core, this package is dedicated to the legacy v1",
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/popperjs"
      }
    },
    "node_modules/postcss-value-parser": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-4.2.0.tgz",
      "integrity": "sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ=="
    },
    "node_modules/postgres-array": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/postgres-array/-/postgres-array-2.0.0.tgz",
      "integrity": "sha512-VpZrUqU5A69eQyW2c5CA1jtLecCsN2U/bD6VilrFDWq5+5UIEVO7nazS3TEcHf1zuPYO/sqGvUvW62g86RXZuA==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/postgres-bytea": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/postgres-bytea/-/postgres-bytea-1.0.0.tgz",
      "integrity": "sha512-xy3pmLuQqRBZBXDULy7KbaitYqLcmxigw14Q5sj8QBVLqEwXfeybIKVWiqAXTlcvdvb0+xkOtDbfQMOf4lST1w==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/postgres-date": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/postgres-date/-/postgres-date-1.0.7.tgz",
      "integrity": "sha512-suDmjLVQg78nMK2UZ454hAG+OAW+HQPZ6n++TNDUX+L0+uUlLywnoxJKDou51Zm+zTCjrCl0Nq6J9C5hP9vK/Q==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/postgres-interval": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/postgres-interval/-/postgres-interval-1.2.0.tgz",
      "integrity": "sha512-9ZhXKM/rw350N1ovuWHbGxnGh/SNJ4cnxHiM0rxE4VN41wsg8P8zWn9hv/buK00RP4WvlOyr/RBDiptyxVbkZQ==",
      "dependencies": {
        "xtend": "^4.0.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/process": {
      "version": "0.11.10",
      "resolved": "https://registry.npmjs.org/process/-/process-0.11.10.tgz",
      "integrity": "sha512-cdGef/drWFoydD1JsMzuFf8100nZl+GT+yacc2bEced5f9Rjk4z+WtFUTBu9PhOi9j/jfmBPu0mMEY4wIdAF8A==",
      "engines": {
        "node": ">= 0.6.0"
      }
    },
    "node_modules/process-nextick-args": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz",
      "integrity": "sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag=="
    },
    "node_modules/prompts": {
      "version": "2.4.2",
      "resolved": "https://registry.npmjs.org/prompts/-/prompts-2.4.2.tgz",
      "integrity": "sha512-NxNv/kLguCA7p3jE8oL2aEBsrJWgAakBpgmgK6lpPWV+WuOmY6r2/zbAVnP+T8bQlA0nzHXSJSJW0Hq7ylaD2Q==",
      "dependencies": {
        "kleur": "^3.0.3",
        "sisteransi": "^1.0.5"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/prop-types": {
      "version": "15.8.1",
      "resolved": "https://registry.npmjs.org/prop-types/-/prop-types-15.8.1.tgz",
      "integrity": "sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==",
      "dependencies": {
        "loose-envify": "^1.4.0",
        "object-assign": "^4.1.1",
        "react-is": "^16.13.1"
      }
    },
    "node_modules/proxy-addr": {
      "version": "2.0.7",
      "resolved": "https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz",
      "integrity": "sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==",
      "dependencies": {
        "forwarded": "0.2.0",
        "ipaddr.js": "1.9.1"
      },
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/proxy-from-env": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.1.0.tgz",
      "integrity": "sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg=="
    },
    "node_modules/psl": {
      "version": "1.9.0",
      "resolved": "https://registry.npmjs.org/psl/-/psl-1.9.0.tgz",
      "integrity": "sha512-E/ZsdU4HLs/68gYzgGTkMicWTLPdAftJLfJFlLUAAKZGkStNU72sZjT66SnMDVOfOWY/YAoiD7Jxa9iHvngcag=="
    },
    "node_modules/pstree.remy": {
      "version": "1.1.8",
      "resolved": "https://registry.npmjs.org/pstree.remy/-/pstree.remy-1.1.8.tgz",
      "integrity": "sha512-77DZwxQmxKnu3aR542U+X8FypNzbfJ+C5XQDk3uWjWxn6151aIMGthWYRXTqT1E5oJvg+ljaa2OJi+VfvCOQ8w==",
      "dev": true
    },
    "node_modules/pump": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/pump/-/pump-3.0.0.tgz",
      "integrity": "sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==",
      "dependencies": {
        "end-of-stream": "^1.1.0",
        "once": "^1.3.1"
      }
    },
    "node_modules/punycode": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.0.tgz",
      "integrity": "sha512-rRV+zQD8tVFys26lAGR9WUuS4iUAngJScM+ZRSKtvl5tKeZ2t5bvdNFdNHBW9FWR4guGHlgmsZ1G7BSm2wTbuA==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/qrcode": {
      "version": "1.5.1",
      "resolved": "https://registry.npmjs.org/qrcode/-/qrcode-1.5.1.tgz",
      "integrity": "sha512-nS8NJ1Z3md8uTjKtP+SGGhfqmTCs5flU/xR623oI0JX+Wepz9R8UrRVCTBTJm3qGw3rH6jJ6MUHjkDx15cxSSg==",
      "dependencies": {
        "dijkstrajs": "^1.0.1",
        "encode-utf8": "^1.0.3",
        "pngjs": "^5.0.0",
        "yargs": "^15.3.1"
      },
      "bin": {
        "qrcode": "bin/qrcode"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/qs": {
      "version": "6.11.0",
      "resolved": "https://registry.npmjs.org/qs/-/qs-6.11.0.tgz",
      "integrity": "sha512-MvjoMCJwEarSbUYk5O+nmoSzSutSsTwF85zcHPQ9OrlFoZOYIjaqBAJIqIXjptyD5vThxGq52Xu/MaJzRkIk4Q==",
      "dependencies": {
        "side-channel": "^1.0.4"
      },
      "engines": {
        "node": ">=0.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/query-string": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/query-string/-/query-string-5.1.1.tgz",
      "integrity": "sha512-gjWOsm2SoGlgLEdAGt7a6slVOk9mGiXmPFMqrEhLQ68rhQuBnpfs3+EmlvqKyxnCo9/PPlF+9MtY02S1aFg+Jw==",
      "dependencies": {
        "decode-uri-component": "^0.2.0",
        "object-assign": "^4.1.0",
        "strict-uri-encode": "^1.0.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/quick-lru": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/quick-lru/-/quick-lru-5.1.1.tgz",
      "integrity": "sha512-WuyALRjWPDGtt/wzJiadO5AXY+8hZ80hVpe6MyivgraREW751X3SbhRvG3eLKOYN+8VEvqLcf3wdnt44Z4S4SA==",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/quill": {
      "version": "1.3.7",
      "resolved": "https://registry.npmjs.org/quill/-/quill-1.3.7.tgz",
      "integrity": "sha512-hG/DVzh/TiknWtE6QmWAF/pxoZKYxfe3J/d/+ShUWkDvvkZQVTPeVmUJVu1uE6DDooC4fWTiCLh84ul89oNz5g==",
      "dependencies": {
        "clone": "^2.1.1",
        "deep-equal": "^1.0.1",
        "eventemitter3": "^2.0.3",
        "extend": "^3.0.2",
        "parchment": "^1.1.4",
        "quill-delta": "^3.6.2"
      }
    },
    "node_modules/quill-delta": {
      "version": "3.6.3",
      "resolved": "https://registry.npmjs.org/quill-delta/-/quill-delta-3.6.3.tgz",
      "integrity": "sha512-wdIGBlcX13tCHOXGMVnnTVFtGRLoP0imqxM696fIPwIf5ODIYUHIvHbZcyvGlZFiFhK5XzDC2lpjbxRhnM05Tg==",
      "dependencies": {
        "deep-equal": "^1.0.1",
        "extend": "^3.0.2",
        "fast-diff": "1.1.2"
      },
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/quill/node_modules/eventemitter3": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-2.0.3.tgz",
      "integrity": "sha512-jLN68Dx5kyFHaePoXWPsCGW5qdyZQtLYHkxkg02/Mz6g0kYpDx4FyP6XfArhQdlOC4b8Mv+EMxPo/8La7Tzghg=="
    },
    "node_modules/raf-schd": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/raf-schd/-/raf-schd-4.0.3.tgz",
      "integrity": "sha512-tQkJl2GRWh83ui2DiPTJz9wEiMN20syf+5oKfB03yYP7ioZcJwsIK8FjrtLwH1m7C7e+Tt2yYBlrOpdT+dyeIQ=="
    },
    "node_modules/random-bytes": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/random-bytes/-/random-bytes-1.0.0.tgz",
      "integrity": "sha512-iv7LhNVO047HzYR3InF6pUcUsPQiHTM1Qal51DcGSuZFBil1aBBWG5eHPNek7bvILMaYJ/8RU1e8w1AMdHmLQQ==",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/randombytes": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/randombytes/-/randombytes-2.1.0.tgz",
      "integrity": "sha512-vYl3iOX+4CKUWuxGi9Ukhie6fsqXqS9FE2Zaic4tNFD2N2QQaXOMFbuKK4QmDHC0JO6B1Zp41J0LpT0oR68amQ==",
      "dependencies": {
        "safe-buffer": "^5.1.0"
      }
    },
    "node_modules/range-parser": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz",
      "integrity": "sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/raw-body": {
      "version": "2.5.1",
      "resolved": "https://registry.npmjs.org/raw-body/-/raw-body-2.5.1.tgz",
      "integrity": "sha512-qqJBtEyVgS0ZmPGdCFPWJ3FreoqvG4MVQln/kCgF7Olq95IbOp0/BWyMwbdtn4VTvkM8Y7khCQ2Xgk/tcrCXig==",
      "dependencies": {
        "bytes": "3.1.2",
        "http-errors": "2.0.0",
        "iconv-lite": "0.4.24",
        "unpipe": "1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/react": {
      "version": "16.14.0",
      "resolved": "https://registry.npmjs.org/react/-/react-16.14.0.tgz",
      "integrity": "sha512-0X2CImDkJGApiAlcf0ODKIneSwBPhqJawOa5wCtKbu7ZECrmS26NvtSILynQ66cgkT/RJ4LidJOc3bUESwmU8g==",
      "dependencies": {
        "loose-envify": "^1.1.0",
        "object-assign": "^4.1.1",
        "prop-types": "^15.6.2"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/react-beautiful-dnd": {
      "version": "13.1.1",
      "resolved": "https://registry.npmjs.org/react-beautiful-dnd/-/react-beautiful-dnd-13.1.1.tgz",
      "integrity": "sha512-0Lvs4tq2VcrEjEgDXHjT98r+63drkKEgqyxdA7qD3mvKwga6a5SscbdLPO2IExotU1jW8L0Ksdl0Cj2AF67nPQ==",
      "dependencies": {
        "@babel/runtime": "^7.9.2",
        "css-box-model": "^1.2.0",
        "memoize-one": "^5.1.1",
        "raf-schd": "^4.0.2",
        "react-redux": "^7.2.0",
        "redux": "^4.0.4",
        "use-memo-one": "^1.1.1"
      },
      "peerDependencies": {
        "react": "^16.8.5 || ^17.0.0 || ^18.0.0",
        "react-dom": "^16.8.5 || ^17.0.0 || ^18.0.0"
      }
    },
    "node_modules/react-currency-input-field": {
      "version": "3.6.11",
      "resolved": "https://registry.npmjs.org/react-currency-input-field/-/react-currency-input-field-3.6.11.tgz",
      "integrity": "sha512-M9vOx1eaioSaYWirm7W2WSBi4bpLg+LK4Gf7C1kNhy6MvoSoOzd0mYZPxA78OC9UBIQ2nM080Wu9D1CwTY6n3w==",
      "peerDependencies": {
        "react": "^16.9.0 || ^17.0.0 || ^18.0.0"
      }
    },
    "node_modules/react-datepicker": {
      "version": "3.8.0",
      "resolved": "https://registry.npmjs.org/react-datepicker/-/react-datepicker-3.8.0.tgz",
      "integrity": "sha512-iFVNEp8DJoX5yEvEiciM7sJKmLGrvE70U38KhpG13XrulNSijeHw1RZkhd/0UmuXR71dcZB/kdfjiidifstZjw==",
      "dependencies": {
        "classnames": "^2.2.6",
        "date-fns": "^2.0.1",
        "prop-types": "^15.7.2",
        "react-onclickoutside": "^6.10.0",
        "react-popper": "^1.3.8"
      },
      "peerDependencies": {
        "react": "^16.9.0 || ^17",
        "react-dom": "^16.9.0 || ^17"
      }
    },
    "node_modules/react-dom": {
      "version": "16.14.0",
      "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-16.14.0.tgz",
      "integrity": "sha512-1gCeQXDLoIqMgqD3IO2Ah9bnf0w9kzhwN5q4FGnHZ67hBm9yePzB5JJAIQCc8x3pFnNlwFq4RidZggNAAkzWWw==",
      "dependencies": {
        "loose-envify": "^1.1.0",
        "object-assign": "^4.1.1",
        "prop-types": "^15.6.2",
        "scheduler": "^0.19.1"
      },
      "peerDependencies": {
        "react": "^16.14.0"
      }
    },
    "node_modules/react-i18next": {
      "version": "11.18.6",
      "resolved": "https://registry.npmjs.org/react-i18next/-/react-i18next-11.18.6.tgz",
      "integrity": "sha512-yHb2F9BiT0lqoQDt8loZ5gWP331GwctHz9tYQ8A2EIEUu+CcEdjBLQWli1USG3RdWQt3W+jqQLg/d4rrQR96LA==",
      "dependencies": {
        "@babel/runtime": "^7.14.5",
        "html-parse-stringify": "^3.0.1"
      },
      "peerDependencies": {
        "i18next": ">= 19.0.0",
        "react": ">= 16.8.0"
      },
      "peerDependenciesMeta": {
        "react-dom": {
          "optional": true
        },
        "react-native": {
          "optional": true
        }
      }
    },
    "node_modules/react-input-autosize": {
      "version": "2.2.2",
      "resolved": "https://registry.npmjs.org/react-input-autosize/-/react-input-autosize-2.2.2.tgz",
      "integrity": "sha512-jQJgYCA3S0j+cuOwzuCd1OjmBmnZLdqQdiLKRYrsMMzbjUrVDS5RvJUDwJqA7sKuksDuzFtm6hZGKFu7Mjk5aw==",
      "dependencies": {
        "prop-types": "^15.5.8"
      },
      "peerDependencies": {
        "react": "^0.14.9 || ^15.3.0 || ^16.0.0-rc || ^16.0"
      }
    },
    "node_modules/react-is": {
      "version": "16.13.1",
      "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz",
      "integrity": "sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ=="
    },
    "node_modules/react-onclickoutside": {
      "version": "6.13.0",
      "resolved": "https://registry.npmjs.org/react-onclickoutside/-/react-onclickoutside-6.13.0.tgz",
      "integrity": "sha512-ty8So6tcUpIb+ZE+1HAhbLROvAIJYyJe/1vRrrcmW+jLsaM+/powDRqxzo6hSh9CuRZGSL1Q8mvcF5WRD93a0A==",
      "funding": {
        "type": "individual",
        "url": "https://github.com/Pomax/react-onclickoutside/blob/master/FUNDING.md"
      },
      "peerDependencies": {
        "react": "^15.5.x || ^16.x || ^17.x || ^18.x",
        "react-dom": "^15.5.x || ^16.x || ^17.x || ^18.x"
      }
    },
    "node_modules/react-popper": {
      "version": "1.3.11",
      "resolved": "https://registry.npmjs.org/react-popper/-/react-popper-1.3.11.tgz",
      "integrity": "sha512-VSA/bS+pSndSF2fiasHK/PTEEAyOpX60+H5EPAjoArr8JGm+oihu4UbrqcEBpQibJxBVCpYyjAX7abJ+7DoYVg==",
      "dependencies": {
        "@babel/runtime": "^7.1.2",
        "@hypnosphi/create-react-context": "^0.3.1",
        "deep-equal": "^1.1.1",
        "popper.js": "^1.14.4",
        "prop-types": "^15.6.1",
        "typed-styles": "^0.0.7",
        "warning": "^4.0.2"
      },
      "peerDependencies": {
        "react": "0.14.x || ^15.0.0 || ^16.0.0 || ^17.0.0"
      }
    },
    "node_modules/react-redux": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/react-redux/-/react-redux-7.2.0.tgz",
      "integrity": "sha512-EvCAZYGfOLqwV7gh849xy9/pt55rJXPwmYvI4lilPM5rUT/1NxuuN59ipdBksRVSvz0KInbPnp4IfoXJXCqiDA==",
      "dependencies": {
        "@babel/runtime": "^7.5.5",
        "hoist-non-react-statics": "^3.3.0",
        "loose-envify": "^1.4.0",
        "prop-types": "^15.7.2",
        "react-is": "^16.9.0"
      },
      "peerDependencies": {
        "react": "^16.8.3",
        "redux": "^2.0.0 || ^3.0.0 || ^4.0.0-0"
      },
      "peerDependenciesMeta": {
        "react-dom": {
          "optional": true
        },
        "react-native": {
          "optional": true
        }
      }
    },
    "node_modules/react-router": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/react-router/-/react-router-5.2.0.tgz",
      "integrity": "sha512-smz1DUuFHRKdcJC0jobGo8cVbhO3x50tCL4icacOlcwDOEQPq4TMqwx3sY1TP+DvtTgz4nm3thuo7A+BK2U0Dw==",
      "dependencies": {
        "@babel/runtime": "^7.1.2",
        "history": "^4.9.0",
        "hoist-non-react-statics": "^3.1.0",
        "loose-envify": "^1.3.1",
        "mini-create-react-context": "^0.4.0",
        "path-to-regexp": "^1.7.0",
        "prop-types": "^15.6.2",
        "react-is": "^16.6.0",
        "tiny-invariant": "^1.0.2",
        "tiny-warning": "^1.0.0"
      },
      "peerDependencies": {
        "react": ">=15"
      }
    },
    "node_modules/react-router-dom": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/react-router-dom/-/react-router-dom-5.2.0.tgz",
      "integrity": "sha512-gxAmfylo2QUjcwxI63RhQ5G85Qqt4voZpUXSEqCwykV0baaOTQDR1f0PmY8AELqIyVc0NEZUj0Gov5lNGcXgsA==",
      "dependencies": {
        "@babel/runtime": "^7.1.2",
        "history": "^4.9.0",
        "loose-envify": "^1.3.1",
        "prop-types": "^15.6.2",
        "react-router": "5.2.0",
        "tiny-invariant": "^1.0.2",
        "tiny-warning": "^1.0.0"
      },
      "peerDependencies": {
        "react": ">=15"
      }
    },
    "node_modules/react-router/node_modules/isarray": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz",
      "integrity": "sha512-D2S+3GLxWH+uhrNEcoh/fnmYeP8E8/zHl644d/jdA0g2uyXvy3sb0qxotE+ne0LtccHknQzWwZEzhak7oJ0COQ=="
    },
    "node_modules/react-router/node_modules/path-to-regexp": {
      "version": "1.8.0",
      "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-1.8.0.tgz",
      "integrity": "sha512-n43JRhlUKUAlibEJhPeir1ncUID16QnEjNpwzNdO3Lm4ywrBpBZ5oLD0I6br9evr1Y9JTqwRtAh7JLoOzAQdVA==",
      "dependencies": {
        "isarray": "0.0.1"
      }
    },
    "node_modules/react-select": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/react-select/-/react-select-3.1.0.tgz",
      "integrity": "sha512-wBFVblBH1iuCBprtpyGtd1dGMadsG36W5/t2Aj8OE6WbByDg5jIFyT7X5gT+l0qmT5TqWhxX+VsKJvCEl2uL9g==",
      "dependencies": {
        "@babel/runtime": "^7.4.4",
        "@emotion/cache": "^10.0.9",
        "@emotion/core": "^10.0.9",
        "@emotion/css": "^10.0.9",
        "memoize-one": "^5.0.0",
        "prop-types": "^15.6.0",
        "react-input-autosize": "^2.2.2",
        "react-transition-group": "^4.3.0"
      },
      "peerDependencies": {
        "react": "^16.8.0",
        "react-dom": "^16.8.0"
      }
    },
    "node_modules/react-transition-group": {
      "version": "4.4.5",
      "resolved": "https://registry.npmjs.org/react-transition-group/-/react-transition-group-4.4.5.tgz",
      "integrity": "sha512-pZcd1MCJoiKiBR2NRxeCRg13uCXbydPnmB4EOeRrY7480qNWO8IIgQG6zlDkm6uRMsURXPuKq0GWtiM59a5Q6g==",
      "dependencies": {
        "@babel/runtime": "^7.5.5",
        "dom-helpers": "^5.0.1",
        "loose-envify": "^1.4.0",
        "prop-types": "^15.6.2"
      },
      "peerDependencies": {
        "react": ">=16.6.0",
        "react-dom": ">=16.6.0"
      }
    },
    "node_modules/readable-stream": {
      "version": "3.6.1",
      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.1.tgz",
      "integrity": "sha512-+rQmrWMYGA90yenhTYsLWAsLsqVC8osOw6PKE1HDYiO0gdPeKe/xDHNzIAIn4C91YQ6oenEhfYqqc1883qHbjQ==",
      "dependencies": {
        "inherits": "^2.0.3",
        "string_decoder": "^1.1.1",
        "util-deprecate": "^1.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/readdirp": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz",
      "integrity": "sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==",
      "dev": true,
      "dependencies": {
        "picomatch": "^2.2.1"
      },
      "engines": {
        "node": ">=8.10.0"
      }
    },
    "node_modules/redux": {
      "version": "4.0.5",
      "resolved": "https://registry.npmjs.org/redux/-/redux-4.0.5.tgz",
      "integrity": "sha512-VSz1uMAH24DM6MF72vcojpYPtrTUu3ByVWfPL1nPfVRb5mZVTve5GnNCUV53QM/BZ66xfWrm0CTWoM+Xlz8V1w==",
      "dependencies": {
        "loose-envify": "^1.4.0",
        "symbol-observable": "^1.2.0"
      }
    },
    "node_modules/reflect-metadata": {
      "version": "0.1.13",
      "resolved": "https://registry.npmjs.org/reflect-metadata/-/reflect-metadata-0.1.13.tgz",
      "integrity": "sha512-Ts1Y/anZELhSsjMcU605fU9RE4Oi3p5ORujwbIKXfWa+0Zxs510Qrmrce5/Jowq3cHSZSJqBjypxmHarc+vEWg=="
    },
    "node_modules/regenerate": {
      "version": "1.4.2",
      "resolved": "https://registry.npmjs.org/regenerate/-/regenerate-1.4.2.tgz",
      "integrity": "sha512-zrceR/XhGYU/d/opr2EKO7aRHUeiBI8qjtfHqADTwZd6Szfy16la6kqD0MIUs5z5hx6AaKa+PixpPrR289+I0A=="
    },
    "node_modules/regenerate-unicode-properties": {
      "version": "10.1.0",
      "resolved": "https://registry.npmjs.org/regenerate-unicode-properties/-/regenerate-unicode-properties-10.1.0.tgz",
      "integrity": "sha512-d1VudCLoIGitcU/hEg2QqvyGZQmdC0Lf8BqdOMXGFSvJP4bNV1+XqbPQeHHLD51Jh4QJJ225dlIFvY4Ly6MXmQ==",
      "dependencies": {
        "regenerate": "^1.4.2"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/regenerator-runtime": {
      "version": "0.13.11",
      "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.13.11.tgz",
      "integrity": "sha512-kY1AZVr2Ra+t+piVaJ4gxaFaReZVH40AKNo7UCX6W+dEwBo/2oZJzqfuN1qLq1oL45o56cPaTXELwrTh8Fpggg=="
    },
    "node_modules/regenerator-transform": {
      "version": "0.15.1",
      "resolved": "https://registry.npmjs.org/regenerator-transform/-/regenerator-transform-0.15.1.tgz",
      "integrity": "sha512-knzmNAcuyxV+gQCufkYcvOqX/qIIfHLv0u5x79kRxuGojfYVky1f15TzZEu2Avte8QGepvUNTnLskf8E6X6Vyg==",
      "dependencies": {
        "@babel/runtime": "^7.8.4"
      }
    },
    "node_modules/regexp.prototype.flags": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/regexp.prototype.flags/-/regexp.prototype.flags-1.5.0.tgz",
      "integrity": "sha512-0SutC3pNudRKgquxGoRGIz946MZVHqbNfPjBdxeOhBrdgDKlRoXmYLQN9xRbrR09ZXWeGAdPuif7egofn6v5LA==",
      "dependencies": {
        "call-bind": "^1.0.2",
        "define-properties": "^1.2.0",
        "functions-have-names": "^1.2.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/regexpu-core": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/regexpu-core/-/regexpu-core-5.3.2.tgz",
      "integrity": "sha512-RAM5FlZz+Lhmo7db9L298p2vHP5ZywrVXmVXpmAD9GuL5MPH6t9ROw1iA/wfHkQ76Qe7AaPF0nGuim96/IrQMQ==",
      "dependencies": {
        "@babel/regjsgen": "^0.8.0",
        "regenerate": "^1.4.2",
        "regenerate-unicode-properties": "^10.1.0",
        "regjsparser": "^0.9.1",
        "unicode-match-property-ecmascript": "^2.0.0",
        "unicode-match-property-value-ecmascript": "^2.1.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/regjsparser": {
      "version": "0.9.1",
      "resolved": "https://registry.npmjs.org/regjsparser/-/regjsparser-0.9.1.tgz",
      "integrity": "sha512-dQUtn90WanSNl+7mQKcXAgZxvUe7Z0SqXlgzv0za4LwiUhyzBC58yQO3liFoUgu8GiJVInAhJjkj1N0EtQ5nkQ==",
      "dependencies": {
        "jsesc": "~0.5.0"
      },
      "bin": {
        "regjsparser": "bin/parser"
      }
    },
    "node_modules/regjsparser/node_modules/jsesc": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-0.5.0.tgz",
      "integrity": "sha512-uZz5UnB7u4T9LvwmFqXii7pZSouaRPorGs5who1Ip7VO0wxanFvBL7GkM6dTHlgX+jhBApRetaWpnDabOeTcnA==",
      "bin": {
        "jsesc": "bin/jsesc"
      }
    },
    "node_modules/request": {
      "version": "2.88.2",
      "resolved": "https://registry.npmjs.org/request/-/request-2.88.2.tgz",
      "integrity": "sha512-MsvtOrfG9ZcrOwAW+Qi+F6HbD0CWXEh9ou77uOb7FM2WPhwT7smM833PzanhJLsgXjN89Ir6V2PczXNnMpwKhw==",
      "deprecated": "request has been deprecated, see https://github.com/request/request/issues/3142",
      "dependencies": {
        "aws-sign2": "~0.7.0",
        "aws4": "^1.8.0",
        "caseless": "~0.12.0",
        "combined-stream": "~1.0.6",
        "extend": "~3.0.2",
        "forever-agent": "~0.6.1",
        "form-data": "~2.3.2",
        "har-validator": "~5.1.3",
        "http-signature": "~1.2.0",
        "is-typedarray": "~1.0.0",
        "isstream": "~0.1.2",
        "json-stringify-safe": "~5.0.1",
        "mime-types": "~2.1.19",
        "oauth-sign": "~0.9.0",
        "performance-now": "^2.1.0",
        "qs": "~6.5.2",
        "safe-buffer": "^5.1.2",
        "tough-cookie": "~2.5.0",
        "tunnel-agent": "^0.6.0",
        "uuid": "^3.3.2"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/request/node_modules/form-data": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/form-data/-/form-data-2.3.3.tgz",
      "integrity": "sha512-1lLKB2Mu3aGP1Q/2eCOx0fNbRMe7XdwktwOruhfqqd0rIJWwN4Dh+E3hrPSlDCXnSR7UtZ1N38rVXm+6+MEhJQ==",
      "dependencies": {
        "asynckit": "^0.4.0",
        "combined-stream": "^1.0.6",
        "mime-types": "^2.1.12"
      },
      "engines": {
        "node": ">= 0.12"
      }
    },
    "node_modules/request/node_modules/qs": {
      "version": "6.5.3",
      "resolved": "https://registry.npmjs.org/qs/-/qs-6.5.3.tgz",
      "integrity": "sha512-qxXIEh4pCGfHICj1mAJQ2/2XVZkjCDTcEgfoSQxc/fYivUZxTkk7L3bDBJSoNrEzXI17oUO5Dp07ktqE5KzczA==",
      "engines": {
        "node": ">=0.6"
      }
    },
    "node_modules/request/node_modules/uuid": {
      "version": "3.4.0",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-3.4.0.tgz",
      "integrity": "sha512-HjSDRw6gZE5JMggctHBcjVak08+KEVhSIiDzFnT9S9aegmp85S/bReBVTb4QTFaRNptJ9kuYaNhnbNEOkbKb/A==",
      "deprecated": "Please upgrade  to version 7 or higher.  Older versions may use Math.random() in certain circumstances, which is known to be problematic.  See https://v8.dev/blog/math-random for details.",
      "bin": {
        "uuid": "bin/uuid"
      }
    },
    "node_modules/require-directory": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz",
      "integrity": "sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/require-main-filename": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/require-main-filename/-/require-main-filename-2.0.0.tgz",
      "integrity": "sha512-NKN5kMDylKuldxYLSUfrbo5Tuzh4hd+2E8NPPX02mZtn1VuREQToYe/ZdlJy+J3uCpfaiGF05e7B8W0iXbQHmg=="
    },
    "node_modules/resolve": {
      "version": "1.22.2",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.2.tgz",
      "integrity": "sha512-Sb+mjNHOULsBv818T40qSPeRiuWLyaGMa5ewydRLFimneixmVy2zdivRl+AF6jaYPC8ERxGDmFSiqui6SfPd+g==",
      "dependencies": {
        "is-core-module": "^2.11.0",
        "path-parse": "^1.0.7",
        "supports-preserve-symlinks-flag": "^1.0.0"
      },
      "bin": {
        "resolve": "bin/resolve"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/resolve-alpn": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/resolve-alpn/-/resolve-alpn-1.2.1.tgz",
      "integrity": "sha512-0a1F4l73/ZFZOakJnQ3FvkJ2+gSTQWz/r2KE5OdDY0TxPm5h4GkqkWWfM47T7HsbnOtcJVEF4epCVy6u7Q3K+g=="
    },
    "node_modules/resolve-from": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
      "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/resolve-pathname": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/resolve-pathname/-/resolve-pathname-3.0.0.tgz",
      "integrity": "sha512-C7rARubxI8bXFNB/hqcp/4iUeIXJhJZvFPFPiSPRnhU5UPxzMFIl+2E6yY6c4k9giDJAhtV+enfA+G89N6Csng=="
    },
    "node_modules/responselike": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/responselike/-/responselike-2.0.1.tgz",
      "integrity": "sha512-4gl03wn3hj1HP3yzgdI7d3lCkF95F21Pz4BPGvKHinyQzALR5CapwC8yIi0Rh58DEMQ/SguC03wFj2k0M/mHhw==",
      "dependencies": {
        "lowercase-keys": "^2.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/responselike/node_modules/lowercase-keys": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-2.0.0.tgz",
      "integrity": "sha512-tqNXrS78oMOE73NMxK4EMLQsQowWf8jKooH9g7xPavRT706R6bkQJ6DY2Te7QukaZsulxa30wQ7bk0pm4XiHmA==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/restore-cursor": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-3.1.0.tgz",
      "integrity": "sha512-l+sSefzHpj5qimhFSE5a8nufZYAM3sBSVMAPtYkmC+4EH2anSGaEMXSD0izRQbu9nfyQ9y5JrVmp7E8oZrUjvA==",
      "dependencies": {
        "onetime": "^5.1.0",
        "signal-exit": "^3.0.2"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/ripemd160": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/ripemd160/-/ripemd160-2.0.2.tgz",
      "integrity": "sha512-ii4iagi25WusVoiC4B4lq7pbXfAp3D9v5CwfkY33vffw2+pkDjY1D8GaN7spsxvCSx8dkPqOZCEZyfxcmJG2IA==",
      "dependencies": {
        "hash-base": "^3.0.0",
        "inherits": "^2.0.1"
      }
    },
    "node_modules/rlp": {
      "version": "2.2.7",
      "resolved": "https://registry.npmjs.org/rlp/-/rlp-2.2.7.tgz",
      "integrity": "sha512-d5gdPmgQ0Z+AklL2NVXr/IoSjNZFfTVvQWzL/AM2AOcSzYP2xjlb0AC8YyCLc41MSNf6P6QVtjgPdmVtzb+4lQ==",
      "dependencies": {
        "bn.js": "^5.2.0"
      },
      "bin": {
        "rlp": "bin/rlp"
      }
    },
    "node_modules/rollup": {
      "version": "2.79.1",
      "resolved": "https://registry.npmjs.org/rollup/-/rollup-2.79.1.tgz",
      "integrity": "sha512-uKxbd0IhMZOhjAiD5oAFp7BqvkA4Dv47qpOCtaNvng4HBwdbWtdOh8f5nZNuk2rp51PMGk3bzfWu5oayNEuYnw==",
      "bin": {
        "rollup": "dist/bin/rollup"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.2"
      }
    },
    "node_modules/rollup-plugin-terser": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/rollup-plugin-terser/-/rollup-plugin-terser-6.1.0.tgz",
      "integrity": "sha512-4fB3M9nuoWxrwm39habpd4hvrbrde2W2GG4zEGPQg1YITNkM3Tqur5jSuXlWNzbv/2aMLJ+dZJaySc3GCD8oDw==",
      "deprecated": "This package has been deprecated and is no longer maintained. Please use @rollup/plugin-terser",
      "dependencies": {
        "@babel/code-frame": "^7.8.3",
        "jest-worker": "^26.0.0",
        "serialize-javascript": "^3.0.0",
        "terser": "^4.7.0"
      },
      "peerDependencies": {
        "rollup": "^2.0.0"
      }
    },
    "node_modules/rollup-plugin-terser/node_modules/serialize-javascript": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/serialize-javascript/-/serialize-javascript-3.1.0.tgz",
      "integrity": "sha512-JIJT1DGiWmIKhzRsG91aS6Ze4sFUrYbltlkg2onR5OrnNM02Kl/hnY/T4FN2omvyeBbQmMJv+K4cPOpGzOTFBg==",
      "dependencies": {
        "randombytes": "^2.1.0"
      }
    },
    "node_modules/rxjs": {
      "version": "7.8.0",
      "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-7.8.0.tgz",
      "integrity": "sha512-F2+gxDshqmIub1KdvZkaEfGDwLNpPvk9Fs6LD/MyQxNgMds/WH9OdDDXOmxUZpME+iSK3rQCctkL0DYyytUqMg==",
      "dependencies": {
        "tslib": "^2.1.0"
      }
    },
    "node_modules/safe-buffer": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
      "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ]
    },
    "node_modules/safer-buffer": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg=="
    },
    "node_modules/sax": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/sax/-/sax-1.2.4.tgz",
      "integrity": "sha512-NqVDv9TpANUjFm0N8uM5GxL36UgKi9/atZw+x7YFnQ8ckwFGKrl4xX4yWtrey3UJm5nP1kUbnYgLopqWNSRhWw=="
    },
    "node_modules/scheduler": {
      "version": "0.19.1",
      "resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.19.1.tgz",
      "integrity": "sha512-n/zwRWRYSUj0/3g/otKDRPMh6qv2SYMWNq85IEa8iZyAv8od9zDYpGSnpBEjNgcMNq6Scbu5KfIPxNF72R/2EA==",
      "dependencies": {
        "loose-envify": "^1.1.0",
        "object-assign": "^4.1.1"
      }
    },
    "node_modules/scrypt-js": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/scrypt-js/-/scrypt-js-3.0.1.tgz",
      "integrity": "sha512-cdwTTnqPu0Hyvf5in5asVdZocVDTNRmR7XEcJuIzMjJeSHybHl7vpB66AzwTaIg6CLSbtjcxc8fqcySfnTkccA=="
    },
    "node_modules/secp256k1": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/secp256k1/-/secp256k1-4.0.3.tgz",
      "integrity": "sha512-NLZVf+ROMxwtEj3Xa562qgv2BK5e2WNmXPiOdVIPLgs6lyTzMvBq0aWTYMI5XCP9jZMVKOcqZLw/Wc4vDkuxhA==",
      "hasInstallScript": true,
      "dependencies": {
        "elliptic": "^6.5.4",
        "node-addon-api": "^2.0.0",
        "node-gyp-build": "^4.2.0"
      },
      "engines": {
        "node": ">=10.0.0"
      }
    },
    "node_modules/seedrandom": {
      "version": "3.0.5",
      "resolved": "https://registry.npmjs.org/seedrandom/-/seedrandom-3.0.5.tgz",
      "integrity": "sha512-8OwmbklUNzwezjGInmZ+2clQmExQPvomqjL7LFqOYqtmuxRgQYqOD3mHaU+MvZn5FLUeVxVfQjwLZW/n/JFuqg=="
    },
    "node_modules/semver": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
      "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
      "bin": {
        "semver": "bin/semver"
      }
    },
    "node_modules/send": {
      "version": "0.18.0",
      "resolved": "https://registry.npmjs.org/send/-/send-0.18.0.tgz",
      "integrity": "sha512-qqWzuOjSFOuqPjFe4NOsMLafToQQwBSOEpS+FwEt3A2V3vKubTquT3vmLTQpFgMXp8AlFWFuP1qKaJZOtPpVXg==",
      "dependencies": {
        "debug": "2.6.9",
        "depd": "2.0.0",
        "destroy": "1.2.0",
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "etag": "~1.8.1",
        "fresh": "0.5.2",
        "http-errors": "2.0.0",
        "mime": "1.6.0",
        "ms": "2.1.3",
        "on-finished": "2.4.1",
        "range-parser": "~1.2.1",
        "statuses": "2.0.1"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/send/node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA=="
    },
    "node_modules/serialize-javascript": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/serialize-javascript/-/serialize-javascript-6.0.1.tgz",
      "integrity": "sha512-owoXEFjWRllis8/M1Q+Cw5k8ZH40e3zhp/ovX+Xr/vi1qj6QesbyXXViFbpNvWvPNAD62SutwEXavefrLJWj7w==",
      "dependencies": {
        "randombytes": "^2.1.0"
      }
    },
    "node_modules/serve-static": {
      "version": "1.15.0",
      "resolved": "https://registry.npmjs.org/serve-static/-/serve-static-1.15.0.tgz",
      "integrity": "sha512-XGuRDNjXUijsUL0vl6nSD7cwURuzEgglbOaFuZM9g3kwDXOWVTck0jLzjPzGD+TazWbboZYu52/9/XPdUgne9g==",
      "dependencies": {
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "parseurl": "~1.3.3",
        "send": "0.18.0"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/servify": {
      "version": "0.1.12",
      "resolved": "https://registry.npmjs.org/servify/-/servify-0.1.12.tgz",
      "integrity": "sha512-/xE6GvsKKqyo1BAY+KxOWXcLpPsUUyji7Qg3bVD7hh1eRze5bR1uYiuDA/k3Gof1s9BTzQZEJK8sNcNGFIzeWw==",
      "dependencies": {
        "body-parser": "^1.16.0",
        "cors": "^2.8.1",
        "express": "^4.14.0",
        "request": "^2.79.0",
        "xhr": "^2.3.3"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/set-blocking": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz",
      "integrity": "sha512-KiKBS8AnWGEyLzofFfmvKwpdPzqiy16LvQfK3yv/fVH7Bj13/wl3JSR1J+rfgRE9q7xUJK4qvgS8raSOeLUehw=="
    },
    "node_modules/setimmediate": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/setimmediate/-/setimmediate-1.0.5.tgz",
      "integrity": "sha512-MATJdZp8sLqDl/68LfQmbP8zKPLQNV6BIZoIgrscFDQ+RsvK/BxeDQOgyxKKoh0y/8h3BqVFnCqQ/gd+reiIXA=="
    },
    "node_modules/setprototypeof": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
      "integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw=="
    },
    "node_modules/sha.js": {
      "version": "2.4.11",
      "resolved": "https://registry.npmjs.org/sha.js/-/sha.js-2.4.11.tgz",
      "integrity": "sha512-QMEp5B7cftE7APOjk5Y6xgrbWu+WkLVQwk8JNjZ8nKRciZaByEW6MubieAiToS7+dwvrjGhH8jRXz3MVd0AYqQ==",
      "dependencies": {
        "inherits": "^2.0.1",
        "safe-buffer": "^5.0.1"
      },
      "bin": {
        "sha.js": "bin.js"
      }
    },
    "node_modules/shallow-clone": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/shallow-clone/-/shallow-clone-3.0.1.tgz",
      "integrity": "sha512-/6KqX+GVUdqPuPPd2LxDDxzX6CAbjJehAAOKlNpqqUpAqPM6HeL8f+o3a+JsyGjn2lv0WY8UsTgUJjU9Ok55NA==",
      "dependencies": {
        "kind-of": "^6.0.2"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/shallowequal": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/shallowequal/-/shallowequal-1.1.0.tgz",
      "integrity": "sha512-y0m1JoUZSlPAjXVtPPW70aZWfIL/dSP7AFkRnniLCrK/8MDKog3TySTBmckD+RObVxH0v4Tox67+F14PdED2oQ=="
    },
    "node_modules/shebang-command": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
      "dependencies": {
        "shebang-regex": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/shebang-regex": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/side-channel": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.0.4.tgz",
      "integrity": "sha512-q5XPytqFEIKHkGdiMIrY10mvLRvnQh42/+GoBlFW3b2LXLE2xxJpZFdm94we0BaoV3RwJyGqg5wS7epxTv0Zvw==",
      "dependencies": {
        "call-bind": "^1.0.0",
        "get-intrinsic": "^1.0.2",
        "object-inspect": "^1.9.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/signal-exit": {
      "version": "3.0.7",
      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.7.tgz",
      "integrity": "sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ=="
    },
    "node_modules/simple-concat": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/simple-concat/-/simple-concat-1.0.1.tgz",
      "integrity": "sha512-cSFtAPtRhljv69IK0hTVZQ+OfE9nePi/rtJmw5UjHeVyVroEqJXP1sFztKUy1qU+xvz3u/sfYJLa947b7nAN2Q==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ]
    },
    "node_modules/simple-get": {
      "version": "2.8.2",
      "resolved": "https://registry.npmjs.org/simple-get/-/simple-get-2.8.2.tgz",
      "integrity": "sha512-Ijd/rV5o+mSBBs4F/x9oDPtTx9Zb6X9brmnXvMW4J7IR15ngi9q5xxqWBKU744jTZiaXtxaPL7uHG6vtN8kUkw==",
      "dependencies": {
        "decompress-response": "^3.3.0",
        "once": "^1.3.1",
        "simple-concat": "^1.0.0"
      }
    },
    "node_modules/simple-get/node_modules/decompress-response": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/decompress-response/-/decompress-response-3.3.0.tgz",
      "integrity": "sha512-BzRPQuY1ip+qDonAOz42gRm/pg9F768C+npV/4JOsxRC2sq+Rlk+Q4ZCAsOhnIaMrgarILY+RMUIvMmmX1qAEA==",
      "dependencies": {
        "mimic-response": "^1.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/simple-update-notifier": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/simple-update-notifier/-/simple-update-notifier-1.1.0.tgz",
      "integrity": "sha512-VpsrsJSUcJEseSbMHkrsrAVSdvVS5I96Qo1QAQ4FxQ9wXFcB+pjj7FB7/us9+GcgfW4ziHtYMc1J0PLczb55mg==",
      "dev": true,
      "dependencies": {
        "semver": "~7.0.0"
      },
      "engines": {
        "node": ">=8.10.0"
      }
    },
    "node_modules/simple-update-notifier/node_modules/semver": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/semver/-/semver-7.0.0.tgz",
      "integrity": "sha512-+GB6zVA9LWh6zovYQLALHwv5rb2PHGlJi3lfiqIHxR0uuwCgefcOJc59v9fv1w8GbStwxuuqqAjI9NMAOOgq1A==",
      "dev": true,
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/sisteransi": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/sisteransi/-/sisteransi-1.0.5.tgz",
      "integrity": "sha512-bLGGlR1QxBcynn2d5YmDX4MGjlZvy2MRBDRNHLJ8VI6l6+9FUiyTFNJ0IveOSP0bcXgVDPRcfGqA0pjaqUpfVg=="
    },
    "node_modules/slash": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
      "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/socket.io": {
      "version": "4.6.1",
      "resolved": "https://registry.npmjs.org/socket.io/-/socket.io-4.6.1.tgz",
      "integrity": "sha512-KMcaAi4l/8+xEjkRICl6ak8ySoxsYG+gG6/XfRCPJPQ/haCRIJBTL4wIl8YCsmtaBovcAXGLOShyVWQ/FG8GZA==",
      "dependencies": {
        "accepts": "~1.3.4",
        "base64id": "~2.0.0",
        "debug": "~4.3.2",
        "engine.io": "~6.4.1",
        "socket.io-adapter": "~2.5.2",
        "socket.io-parser": "~4.2.1"
      },
      "engines": {
        "node": ">=10.0.0"
      }
    },
    "node_modules/socket.io-adapter": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/socket.io-adapter/-/socket.io-adapter-2.5.2.tgz",
      "integrity": "sha512-87C3LO/NOMc+eMcpcxUBebGjkpMDkNBS9tf7KJqcDsmL936EChtVva71Dw2q4tQcuVC+hAUy4an2NO/sYXmwRA==",
      "dependencies": {
        "ws": "~8.11.0"
      }
    },
    "node_modules/socket.io-adapter/node_modules/ws": {
      "version": "8.11.0",
      "resolved": "https://registry.npmjs.org/ws/-/ws-8.11.0.tgz",
      "integrity": "sha512-HPG3wQd9sNQoT9xHyNCXoDUa+Xw/VevmY9FoHyQ+g+rrMn4j6FB4np7Z0OhdTgjx6MgQLK7jwSy1YecU1+4Asg==",
      "engines": {
        "node": ">=10.0.0"
      },
      "peerDependencies": {
        "bufferutil": "^4.0.1",
        "utf-8-validate": "^5.0.2"
      },
      "peerDependenciesMeta": {
        "bufferutil": {
          "optional": true
        },
        "utf-8-validate": {
          "optional": true
        }
      }
    },
    "node_modules/socket.io-parser": {
      "version": "4.2.2",
      "resolved": "https://registry.npmjs.org/socket.io-parser/-/socket.io-parser-4.2.2.tgz",
      "integrity": "sha512-DJtziuKypFkMMHCm2uIshOYC7QaylbtzQwiMYDuCKy3OPkjLzu4B2vAhTlqipRHHzrI0NJeBAizTK7X+6m1jVw==",
      "dependencies": {
        "@socket.io/component-emitter": "~3.1.0",
        "debug": "~4.3.1"
      },
      "engines": {
        "node": ">=10.0.0"
      }
    },
    "node_modules/socket.io-parser/node_modules/debug": {
      "version": "4.3.4",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.4.tgz",
      "integrity": "sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==",
      "dependencies": {
        "ms": "2.1.2"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/socket.io-parser/node_modules/ms": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
      "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
    },
    "node_modules/socket.io/node_modules/debug": {
      "version": "4.3.4",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.4.tgz",
      "integrity": "sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==",
      "dependencies": {
        "ms": "2.1.2"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/socket.io/node_modules/ms": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
      "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
    },
    "node_modules/source-map": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
      "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/source-map-support": {
      "version": "0.5.21",
      "resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.21.tgz",
      "integrity": "sha512-uBHU3L3czsIyYXKX88fdrGovxdSCoTGDRZ6SYXtSRxLZUzHg5P/66Ht6uoUlHu9EZod+inXhKo3qQgwXUT/y1w==",
      "dependencies": {
        "buffer-from": "^1.0.0",
        "source-map": "^0.6.0"
      }
    },
    "node_modules/sourcemap-codec": {
      "version": "1.4.8",
      "resolved": "https://registry.npmjs.org/sourcemap-codec/-/sourcemap-codec-1.4.8.tgz",
      "integrity": "sha512-9NykojV5Uih4lgo5So5dtw+f0JgJX30KCNI8gwhz2J9A15wD0Ml6tjHKwf6fTSa6fAdVBdZeNOs9eJ71qCk8vA==",
      "deprecated": "Please use @jridgewell/sourcemap-codec instead"
    },
    "node_modules/split2": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/split2/-/split2-4.1.0.tgz",
      "integrity": "sha512-VBiJxFkxiXRlUIeyMQi8s4hgvKCSjtknJv/LVYbrgALPwf5zSKmEwV9Lst25AkvMDnvxODugjdl6KZgwKM1WYQ==",
      "engines": {
        "node": ">= 10.x"
      }
    },
    "node_modules/sshpk": {
      "version": "1.17.0",
      "resolved": "https://registry.npmjs.org/sshpk/-/sshpk-1.17.0.tgz",
      "integrity": "sha512-/9HIEs1ZXGhSPE8X6Ccm7Nam1z8KcoCqPdI7ecm1N33EzAetWahvQWVqLZtaZQ+IDKX4IyA2o0gBzqIMkAagHQ==",
      "dependencies": {
        "asn1": "~0.2.3",
        "assert-plus": "^1.0.0",
        "bcrypt-pbkdf": "^1.0.0",
        "dashdash": "^1.12.0",
        "ecc-jsbn": "~0.1.1",
        "getpass": "^0.1.1",
        "jsbn": "~0.1.0",
        "safer-buffer": "^2.0.2",
        "tweetnacl": "~0.14.0"
      },
      "bin": {
        "sshpk-conv": "bin/sshpk-conv",
        "sshpk-sign": "bin/sshpk-sign",
        "sshpk-verify": "bin/sshpk-verify"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/sshpk/node_modules/tweetnacl": {
      "version": "0.14.5",
      "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz",
      "integrity": "sha512-KXXFFdAbFXY4geFIwoyNK+f5Z1b7swfXABfL7HXCmoIWMKU3dmS26672A4EeQtDzLKy7SXmfBu51JolvEKwtGA=="
    },
    "node_modules/statuses": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz",
      "integrity": "sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/stream": {
      "version": "0.0.2",
      "resolved": "https://registry.npmjs.org/stream/-/stream-0.0.2.tgz",
      "integrity": "sha512-gCq3NDI2P35B2n6t76YJuOp7d6cN/C7Rt0577l91wllh0sY9ZBuw9KaSGqH/b0hzn3CWWJbpbW0W0WvQ1H/Q7g==",
      "peer": true,
      "dependencies": {
        "emitter-component": "^1.1.1"
      }
    },
    "node_modules/streamsearch": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/streamsearch/-/streamsearch-1.1.0.tgz",
      "integrity": "sha512-Mcc5wHehp9aXz1ax6bZUyY5afg9u2rv5cqQI3mRrYkGC8rW2hM02jWuwjtL++LS5qinSyhj2QfLyNsuc+VsExg==",
      "engines": {
        "node": ">=10.0.0"
      }
    },
    "node_modules/strict-uri-encode": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/strict-uri-encode/-/strict-uri-encode-1.1.0.tgz",
      "integrity": "sha512-R3f198pcvnB+5IpnBlRkphuE9n46WyVl8I39W/ZUTZLz4nqSP/oLYUrcnJrw462Ds8he4YKMov2efsTIw1BDGQ==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/string_decoder": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.3.0.tgz",
      "integrity": "sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==",
      "dependencies": {
        "safe-buffer": "~5.2.0"
      }
    },
    "node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/string-width-cjs": {
      "name": "string-width",
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/strip-ansi-cjs": {
      "name": "strip-ansi",
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/strip-hex-prefix": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/strip-hex-prefix/-/strip-hex-prefix-1.0.0.tgz",
      "integrity": "sha512-q8d4ue7JGEiVcypji1bALTos+0pWtyGlivAWyPuTkHzuTCJqrK9sWxYQZUq6Nq3cuyv3bm734IhHvHtGGURU6A==",
      "dependencies": {
        "is-hex-prefixed": "1.0.0"
      },
      "engines": {
        "node": ">=6.5.0",
        "npm": ">=3"
      }
    },
    "node_modules/styled-components": {
      "version": "5.3.11",
      "resolved": "https://registry.npmjs.org/styled-components/-/styled-components-5.3.11.tgz",
      "integrity": "sha512-uuzIIfnVkagcVHv9nE0VPlHPSCmXIUGKfJ42LNjxCCTDTL5sgnJ8Z7GZBq0EnLYGln77tPpEpExt2+qa+cZqSw==",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@babel/traverse": "^7.4.5",
        "@emotion/is-prop-valid": "^1.1.0",
        "@emotion/stylis": "^0.8.4",
        "@emotion/unitless": "^0.7.4",
        "babel-plugin-styled-components": ">= 1.12.0",
        "css-to-react-native": "^3.0.0",
        "hoist-non-react-statics": "^3.0.0",
        "shallowequal": "^1.1.0",
        "supports-color": "^5.5.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/styled-components"
      },
      "peerDependencies": {
        "react": ">= 16.8.0",
        "react-dom": ">= 16.8.0",
        "react-is": ">= 16.8.0"
      }
    },
    "node_modules/styled-system": {
      "version": "5.1.5",
      "resolved": "https://registry.npmjs.org/styled-system/-/styled-system-5.1.5.tgz",
      "integrity": "sha512-7VoD0o2R3RKzOzPK0jYrVnS8iJdfkKsQJNiLRDjikOpQVqQHns/DXWaPZOH4tIKkhAT7I6wIsy9FWTWh2X3q+A==",
      "dependencies": {
        "@styled-system/background": "^5.1.2",
        "@styled-system/border": "^5.1.5",
        "@styled-system/color": "^5.1.2",
        "@styled-system/core": "^5.1.2",
        "@styled-system/flexbox": "^5.1.2",
        "@styled-system/grid": "^5.1.2",
        "@styled-system/layout": "^5.1.2",
        "@styled-system/position": "^5.1.2",
        "@styled-system/shadow": "^5.1.2",
        "@styled-system/space": "^5.1.2",
        "@styled-system/typography": "^5.1.2",
        "@styled-system/variant": "^5.1.5",
        "object-assign": "^4.1.1"
      }
    },
    "node_modules/supports-color": {
      "version": "5.5.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
      "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
      "dependencies": {
        "has-flag": "^3.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/supports-preserve-symlinks-flag": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
      "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/swagger-jsdoc": {
      "version": "6.2.8",
      "resolved": "https://registry.npmjs.org/swagger-jsdoc/-/swagger-jsdoc-6.2.8.tgz",
      "integrity": "sha512-VPvil1+JRpmJ55CgAtn8DIcpBs0bL5L3q5bVQvF4tAW/k/9JYSj7dCpaYCAv5rufe0vcCbBRQXGvzpkWjvLklQ==",
      "dependencies": {
        "commander": "6.2.0",
        "doctrine": "3.0.0",
        "glob": "7.1.6",
        "lodash.mergewith": "^4.6.2",
        "swagger-parser": "^10.0.3",
        "yaml": "2.0.0-1"
      },
      "bin": {
        "swagger-jsdoc": "bin/swagger-jsdoc.js"
      },
      "engines": {
        "node": ">=12.0.0"
      }
    },
    "node_modules/swagger-jsdoc/node_modules/brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/swagger-jsdoc/node_modules/glob": {
      "version": "7.1.6",
      "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.6.tgz",
      "integrity": "sha512-LwaxwyZ72Lk7vZINtNNrywX0ZuLyStrdDtabefZKAY5ZGJhVtgdznluResxNmPitE0SAO+O26sWTHeKSI2wMBA==",
      "dependencies": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^3.0.4",
        "once": "^1.3.0",
        "path-is-absolute": "^1.0.0"
      },
      "engines": {
        "node": "*"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/swagger-jsdoc/node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/swagger-parser": {
      "version": "10.0.3",
      "resolved": "https://registry.npmjs.org/swagger-parser/-/swagger-parser-10.0.3.tgz",
      "integrity": "sha512-nF7oMeL4KypldrQhac8RyHerJeGPD1p2xDh900GPvc+Nk7nWP6jX2FcC7WmkinMoAmoO774+AFXcWsW8gMWEIg==",
      "dependencies": {
        "@apidevtools/swagger-parser": "10.0.3"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/swagger-ui-dist": {
      "version": "4.17.0",
      "resolved": "https://registry.npmjs.org/swagger-ui-dist/-/swagger-ui-dist-4.17.0.tgz",
      "integrity": "sha512-31zNkTaOItkhyoKQMs1HIRZ+0kwBPcmp1R0TcVsAmZpT8QGWFI6k9wfTfllQ1t2oE8IoHVUwL5V0VTAKUosvNg=="
    },
    "node_modules/swagger-ui-express": {
      "version": "4.6.2",
      "resolved": "https://registry.npmjs.org/swagger-ui-express/-/swagger-ui-express-4.6.2.tgz",
      "integrity": "sha512-MHIOaq9JrTTB3ygUJD+08PbjM5Tt/q7x80yz9VTFIatw8j5uIWKcr90S0h5NLMzFEDC6+eVprtoeA5MDZXCUKQ==",
      "dependencies": {
        "swagger-ui-dist": ">=4.11.0"
      },
      "engines": {
        "node": ">= v0.10.32"
      },
      "peerDependencies": {
        "express": ">=4.0.0"
      }
    },
    "node_modules/swarm-js": {
      "version": "0.1.42",
      "resolved": "https://registry.npmjs.org/swarm-js/-/swarm-js-0.1.42.tgz",
      "integrity": "sha512-BV7c/dVlA3R6ya1lMlSSNPLYrntt0LUq4YMgy3iwpCIc6rZnS5W2wUoctarZ5pXlpKtxDDf9hNziEkcfrxdhqQ==",
      "dependencies": {
        "bluebird": "^3.5.0",
        "buffer": "^5.0.5",
        "eth-lib": "^0.1.26",
        "fs-extra": "^4.0.2",
        "got": "^11.8.5",
        "mime-types": "^2.1.16",
        "mkdirp-promise": "^5.0.1",
        "mock-fs": "^4.1.0",
        "setimmediate": "^1.0.5",
        "tar": "^4.0.2",
        "xhr-request": "^1.0.1"
      }
    },
    "node_modules/swarm-js/node_modules/@szmarczak/http-timer": {
      "version": "4.0.6",
      "resolved": "https://registry.npmjs.org/@szmarczak/http-timer/-/http-timer-4.0.6.tgz",
      "integrity": "sha512-4BAffykYOgO+5nzBWYwE3W90sBgLJoUPRWWcL8wlyiM8IB8ipJz3UMJ9KXQd1RKQXpKp8Tutn80HZtWsu2u76w==",
      "dependencies": {
        "defer-to-connect": "^2.0.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/swarm-js/node_modules/buffer": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz",
      "integrity": "sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "dependencies": {
        "base64-js": "^1.3.1",
        "ieee754": "^1.1.13"
      }
    },
    "node_modules/swarm-js/node_modules/cacheable-lookup": {
      "version": "5.0.4",
      "resolved": "https://registry.npmjs.org/cacheable-lookup/-/cacheable-lookup-5.0.4.tgz",
      "integrity": "sha512-2/kNscPhpcxrOigMZzbiWF7dz8ilhb/nIHU3EyZiXWXpeq/au8qJ8VhdftMkty3n7Gj6HIGalQG8oiBNB3AJgA==",
      "engines": {
        "node": ">=10.6.0"
      }
    },
    "node_modules/swarm-js/node_modules/got": {
      "version": "11.8.6",
      "resolved": "https://registry.npmjs.org/got/-/got-11.8.6.tgz",
      "integrity": "sha512-6tfZ91bOr7bOXnK7PRDCGBLa1H4U080YHNaAQ2KsMGlLEzRbk44nsZF2E1IeRc3vtJHPVbKCYgdFbaGO2ljd8g==",
      "dependencies": {
        "@sindresorhus/is": "^4.0.0",
        "@szmarczak/http-timer": "^4.0.5",
        "@types/cacheable-request": "^6.0.1",
        "@types/responselike": "^1.0.0",
        "cacheable-lookup": "^5.0.3",
        "cacheable-request": "^7.0.2",
        "decompress-response": "^6.0.0",
        "http2-wrapper": "^1.0.0-beta.5.2",
        "lowercase-keys": "^2.0.0",
        "p-cancelable": "^2.0.0",
        "responselike": "^2.0.0"
      },
      "engines": {
        "node": ">=10.19.0"
      },
      "funding": {
        "url": "https://github.com/sindresorhus/got?sponsor=1"
      }
    },
    "node_modules/swarm-js/node_modules/http2-wrapper": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/http2-wrapper/-/http2-wrapper-1.0.3.tgz",
      "integrity": "sha512-V+23sDMr12Wnz7iTcDeJr3O6AIxlnvT/bmaAAAP/Xda35C90p9599p0F1eHR/N1KILWSoWVAiOMFjBBXaXSMxg==",
      "dependencies": {
        "quick-lru": "^5.1.1",
        "resolve-alpn": "^1.0.0"
      },
      "engines": {
        "node": ">=10.19.0"
      }
    },
    "node_modules/swarm-js/node_modules/lowercase-keys": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-2.0.0.tgz",
      "integrity": "sha512-tqNXrS78oMOE73NMxK4EMLQsQowWf8jKooH9g7xPavRT706R6bkQJ6DY2Te7QukaZsulxa30wQ7bk0pm4XiHmA==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/swarm-js/node_modules/p-cancelable": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/p-cancelable/-/p-cancelable-2.1.1.tgz",
      "integrity": "sha512-BZOr3nRQHOntUjTrH8+Lh54smKHoHyur8We1V8DSMVrl5A2malOOwuJRnKRDjSnkoeBh4at6BwEnb5I7Jl31wg==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/symbol-observable": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/symbol-observable/-/symbol-observable-1.2.0.tgz",
      "integrity": "sha512-e900nM8RRtGhlV36KGEU9k65K3mPb1WV70OdjfxlG2EAuM1noi/E/BaW/uMhL7bPEssK8QV57vN3esixjUvcXQ==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/tar": {
      "version": "4.4.19",
      "resolved": "https://registry.npmjs.org/tar/-/tar-4.4.19.tgz",
      "integrity": "sha512-a20gEsvHnWe0ygBY8JbxoM4w3SJdhc7ZAuxkLqh+nvNQN2IOt0B5lLgM490X5Hl8FF0dl0tOf2ewFYAlIFgzVA==",
      "dependencies": {
        "chownr": "^1.1.4",
        "fs-minipass": "^1.2.7",
        "minipass": "^2.9.0",
        "minizlib": "^1.3.3",
        "mkdirp": "^0.5.5",
        "safe-buffer": "^5.2.1",
        "yallist": "^3.1.1"
      },
      "engines": {
        "node": ">=4.5"
      }
    },
    "node_modules/terser": {
      "version": "4.8.1",
      "resolved": "https://registry.npmjs.org/terser/-/terser-4.8.1.tgz",
      "integrity": "sha512-4GnLC0x667eJG0ewJTa6z/yXrbLGv80D9Ru6HIpCQmO+Q4PfEtBFi0ObSckqwL6VyQv/7ENJieXHo2ANmdQwgw==",
      "dependencies": {
        "commander": "^2.20.0",
        "source-map": "~0.6.1",
        "source-map-support": "~0.5.12"
      },
      "bin": {
        "terser": "bin/terser"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/terser/node_modules/commander": {
      "version": "2.20.3",
      "resolved": "https://registry.npmjs.org/commander/-/commander-2.20.3.tgz",
      "integrity": "sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ=="
    },
    "node_modules/text-encoding-utf-8": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/text-encoding-utf-8/-/text-encoding-utf-8-1.0.2.tgz",
      "integrity": "sha512-8bw4MY9WjdsD2aMtO0OzOCY3pXGYNx2d2FfHRVUKkiCPDWjKuOlhLVASS+pD7VkLTVjW268LYJHwsnPFlBpbAg=="
    },
    "node_modules/thenify": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/thenify/-/thenify-3.3.1.tgz",
      "integrity": "sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==",
      "dependencies": {
        "any-promise": "^1.0.0"
      }
    },
    "node_modules/thenify-all": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/thenify-all/-/thenify-all-1.6.0.tgz",
      "integrity": "sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==",
      "dependencies": {
        "thenify": ">= 3.1.0 < 4"
      },
      "engines": {
        "node": ">=0.8"
      }
    },
    "node_modules/thirty-two": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/thirty-two/-/thirty-two-1.0.2.tgz",
      "integrity": "sha512-OEI0IWCe+Dw46019YLl6V10Us5bi574EvlJEOcAkB29IzQ/mYD1A6RyNHLjZPiHCmuodxvgF6U+vZO1L15lxVA==",
      "engines": {
        "node": ">=0.2.6"
      }
    },
    "node_modules/timed-out": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/timed-out/-/timed-out-4.0.1.tgz",
      "integrity": "sha512-G7r3AhovYtr5YKOWQkta8RKAPb+J9IsO4uVmzjl8AZwfhs8UcUwTiD6gcJYSgOtzyjvQKrKYn41syHbUWMkafA==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/tiny-emitter": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/tiny-emitter/-/tiny-emitter-2.1.0.tgz",
      "integrity": "sha512-NB6Dk1A9xgQPMoGqC5CVXn123gWyte215ONT5Pp5a0yt4nlEoO1ZWeCwpncaekPHXO60i47ihFnZPiRPjRMq4Q=="
    },
    "node_modules/tiny-invariant": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/tiny-invariant/-/tiny-invariant-1.3.1.tgz",
      "integrity": "sha512-AD5ih2NlSssTCwsMznbvwMZpJ1cbhkGd2uueNxzv2jDlEeZdU04JQfRnggJQ8DrcVBGjAsCKwFBbDlVNtEMlzw=="
    },
    "node_modules/tiny-secp256k1": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/tiny-secp256k1/-/tiny-secp256k1-2.2.1.tgz",
      "integrity": "sha512-/U4xfVqnVxJXN4YVsru0E6t5wVncu2uunB8+RVR40fYUxkKYUPS10f+ePQZgFBoE/Jbf9H1NBveupF2VmB58Ng==",
      "dependencies": {
        "uint8array-tools": "0.0.7"
      },
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/tiny-warning": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/tiny-warning/-/tiny-warning-1.0.3.tgz",
      "integrity": "sha512-lBN9zLN/oAf68o3zNXYrdCt1kP8WsiGW8Oo2ka41b2IM5JL/S1CTyX1rW0mb/zSuJun0ZUrDxx4sqvYS2FWzPA=="
    },
    "node_modules/to-fast-properties": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-2.0.0.tgz",
      "integrity": "sha512-/OaKK0xYrs3DmxRYqL/yDc+FxFUVYhDlXMhRmv3z915w2HF1tnN1omB354j8VUGO/hbRzyD6Y3sA7v7GS/ceog==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/to-regex-range": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
      "dev": true,
      "dependencies": {
        "is-number": "^7.0.0"
      },
      "engines": {
        "node": ">=8.0"
      }
    },
    "node_modules/toidentifier": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz",
      "integrity": "sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==",
      "engines": {
        "node": ">=0.6"
      }
    },
    "node_modules/touch": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/touch/-/touch-3.1.0.tgz",
      "integrity": "sha512-WBx8Uy5TLtOSRtIq+M03/sKDrXCLHxwDcquSP2c43Le03/9serjQBIztjRz6FkJez9D/hleyAXTBGLwwZUw9lA==",
      "dev": true,
      "dependencies": {
        "nopt": "~1.0.10"
      },
      "bin": {
        "nodetouch": "bin/nodetouch.js"
      }
    },
    "node_modules/tough-cookie": {
      "version": "2.5.0",
      "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.5.0.tgz",
      "integrity": "sha512-nlLsUzgm1kfLXSXfRZMc1KLAugd4hqJHDTvc2hDIwS3mZAfMEuMbc03SujMF+GEcpaX/qboeycw6iO8JwVv2+g==",
      "dependencies": {
        "psl": "^1.1.28",
        "punycode": "^2.1.1"
      },
      "engines": {
        "node": ">=0.8"
      }
    },
    "node_modules/tr46": {
      "version": "0.0.3",
      "resolved": "https://registry.npmjs.org/tr46/-/tr46-0.0.3.tgz",
      "integrity": "sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw=="
    },
    "node_modules/tronweb": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/tronweb/-/tronweb-5.1.0.tgz",
      "integrity": "sha512-8a+mYKVUzsUWjeTHSAKcxAp82FseFTLlNLoLQ0KIL1rIt6Dy5whcyJwYatxUktbaztl55lnImHbupkKqMdIj1w==",
      "dependencies": {
        "@babel/runtime": "^7.0.0",
        "@tronweb3/google-protobuf": "^3.21.2",
        "axios": "^0.26.1",
        "bignumber.js": "^9.0.1",
        "elliptic": "^6.5.4",
        "ethers": "^5.4.4",
        "eventemitter3": "^3.1.0",
        "injectpromise": "^1.0.0",
        "lodash": "^4.17.21",
        "semver": "^5.6.0",
        "validator": "^13.7.0"
      }
    },
    "node_modules/tronweb/node_modules/axios": {
      "version": "0.26.1",
      "resolved": "https://registry.npmjs.org/axios/-/axios-0.26.1.tgz",
      "integrity": "sha512-fPwcX4EvnSHuInCMItEhAGnaSEXRBjtzh9fOtsE6E1G6p7vl7edEeZe11QHf18+6+9gR5PbKV/sGKNaD8YaMeA==",
      "dependencies": {
        "follow-redirects": "^1.14.8"
      }
    },
    "node_modules/ts-essentials": {
      "version": "9.3.1",
      "resolved": "https://registry.npmjs.org/ts-essentials/-/ts-essentials-9.3.1.tgz",
      "integrity": "sha512-9CChSvQMyVRo29Vb1A2jbs+LKo3d/bAf+ndSaX0T8cEiy/HChVaRN/HY5DqUryZ8hZ6uol9bEgCnGmnDbwBR9Q==",
      "peerDependencies": {
        "typescript": ">=4.1.0"
      }
    },
    "node_modules/ts-node": {
      "version": "10.9.1",
      "resolved": "https://registry.npmjs.org/ts-node/-/ts-node-10.9.1.tgz",
      "integrity": "sha512-NtVysVPkxxrwFGUUxGYhfux8k78pQB3JqYBXlLRZgdGUqTO5wU/UyHop5p70iEbGhB7q5KmiZiU0Y3KlJrScEw==",
      "dependencies": {
        "@cspotcode/source-map-support": "^0.8.0",
        "@tsconfig/node10": "^1.0.7",
        "@tsconfig/node12": "^1.0.7",
        "@tsconfig/node14": "^1.0.0",
        "@tsconfig/node16": "^1.0.2",
        "acorn": "^8.4.1",
        "acorn-walk": "^8.1.1",
        "arg": "^4.1.0",
        "create-require": "^1.1.0",
        "diff": "^4.0.1",
        "make-error": "^1.1.1",
        "v8-compile-cache-lib": "^3.0.1",
        "yn": "3.1.1"
      },
      "bin": {
        "ts-node": "dist/bin.js",
        "ts-node-cwd": "dist/bin-cwd.js",
        "ts-node-esm": "dist/bin-esm.js",
        "ts-node-script": "dist/bin-script.js",
        "ts-node-transpile-only": "dist/bin-transpile.js",
        "ts-script": "dist/bin-script-deprecated.js"
      },
      "peerDependencies": {
        "@swc/core": ">=1.2.50",
        "@swc/wasm": ">=1.2.50",
        "@types/node": "*",
        "typescript": ">=2.7"
      },
      "peerDependenciesMeta": {
        "@swc/core": {
          "optional": true
        },
        "@swc/wasm": {
          "optional": true
        }
      }
    },
    "node_modules/tslib": {
      "version": "2.6.0",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.6.0.tgz",
      "integrity": "sha512-7At1WUettjcSRHXCyYtTselblcHl9PJFFVKiCAy/bY97+BPZXSQ2wbq0P9s8tK2G7dFQfNnlJnPAiArVBVBsfA=="
    },
    "node_modules/tunnel-agent": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz",
      "integrity": "sha512-McnNiV1l8RYeY8tBgEpuodCC1mLUdbSN+CYBL7kJsJNInOP8UjDDEwdk6Mw60vdLLrr5NHKZhMAOSrR2NZuQ+w==",
      "dependencies": {
        "safe-buffer": "^5.0.1"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/tweetnacl": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-1.0.3.tgz",
      "integrity": "sha512-6rt+RN7aOi1nGMyC4Xa5DdYiukl2UWCbcJft7YhxReBGQD7OAM8Pbxw6YMo4r2diNEA8FEmu32YOn9rhaiE5yw=="
    },
    "node_modules/tweetnacl-util": {
      "version": "0.15.1",
      "resolved": "https://registry.npmjs.org/tweetnacl-util/-/tweetnacl-util-0.15.1.tgz",
      "integrity": "sha512-RKJBIj8lySrShN4w6i/BonWp2Z/uxwC3h4y7xsRrpP59ZboCd0GpEVsOnMDYLMmKBpYhb5TgHzZXy7wTfYFBRw=="
    },
    "node_modules/type": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/type/-/type-1.2.0.tgz",
      "integrity": "sha512-+5nt5AAniqsCnu2cEQQdpzCAh33kVx8n0VoFidKpB1dVVLAN/F+bgVOqOJqOnEnrhp222clB5p3vUlD+1QAnfg=="
    },
    "node_modules/type-is": {
      "version": "1.6.18",
      "resolved": "https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz",
      "integrity": "sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==",
      "dependencies": {
        "media-typer": "0.3.0",
        "mime-types": "~2.1.24"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/typed-function": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/typed-function/-/typed-function-2.1.0.tgz",
      "integrity": "sha512-bctQIOqx2iVbWGDGPWwIm18QScpu2XRmkC19D8rQGFsjKSgteq/o1hTZvIG/wuDq8fanpBDrLkLq+aEN/6y5XQ==",
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/typed-styles": {
      "version": "0.0.7",
      "resolved": "https://registry.npmjs.org/typed-styles/-/typed-styles-0.0.7.tgz",
      "integrity": "sha512-pzP0PWoZUhsECYjABgCGQlRGL1n7tOHsgwYv3oIiEpJwGhFTuty/YNeduxQYzXXa3Ge5BdT6sHYIQYpl4uJ+5Q=="
    },
    "node_modules/typedarray": {
      "version": "0.0.6",
      "resolved": "https://registry.npmjs.org/typedarray/-/typedarray-0.0.6.tgz",
      "integrity": "sha512-/aCDEGatGvZ2BIk+HmLf4ifCJFwvKFNb9/JeZPMulfgFracn9QFcAf5GO8B/mweUjSoblS5In0cWhqpfs/5PQA=="
    },
    "node_modules/typedarray-to-buffer": {
      "version": "3.1.5",
      "resolved": "https://registry.npmjs.org/typedarray-to-buffer/-/typedarray-to-buffer-3.1.5.tgz",
      "integrity": "sha512-zdu8XMNEDepKKR+XYOXAVPtWui0ly0NtohUscw+UmaHiAWT8hrV1rr//H6V+0DvJ3OQ19S979M0laLfX8rm82Q==",
      "dependencies": {
        "is-typedarray": "^1.0.0"
      }
    },
    "node_modules/typeforce": {
      "version": "1.18.0",
      "resolved": "https://registry.npmjs.org/typeforce/-/typeforce-1.18.0.tgz",
      "integrity": "sha512-7uc1O8h1M1g0rArakJdf0uLRSSgFcYexrVoKo+bzJd32gd4gDy2L/Z+8/FjPnU9ydY3pEnVPtr9FyscYY60K1g=="
    },
    "node_modules/typeorm": {
      "version": "0.3.12",
      "resolved": "https://registry.npmjs.org/typeorm/-/typeorm-0.3.12.tgz",
      "integrity": "sha512-sYSxBmCf1nJLLTcYtwqZ+lQIRtLPyUoO93rHTOKk9vJCyT4UfRtU7oRsJvfvKP3nnZTD1hzz2SEy2zwPEN6OyA==",
      "dependencies": {
        "@sqltools/formatter": "^1.2.5",
        "app-root-path": "^3.1.0",
        "buffer": "^6.0.3",
        "chalk": "^4.1.2",
        "cli-highlight": "^2.1.11",
        "date-fns": "^2.29.3",
        "debug": "^4.3.4",
        "dotenv": "^16.0.3",
        "glob": "^8.1.0",
        "js-yaml": "^4.1.0",
        "mkdirp": "^2.1.3",
        "reflect-metadata": "^0.1.13",
        "sha.js": "^2.4.11",
        "tslib": "^2.5.0",
        "uuid": "^9.0.0",
        "xml2js": "^0.4.23",
        "yargs": "^17.6.2"
      },
      "bin": {
        "typeorm": "cli.js",
        "typeorm-ts-node-commonjs": "cli-ts-node-commonjs.js",
        "typeorm-ts-node-esm": "cli-ts-node-esm.js"
      },
      "engines": {
        "node": ">= 12.9.0"
      },
      "funding": {
        "url": "https://opencollective.com/typeorm"
      },
      "peerDependencies": {
        "@google-cloud/spanner": "^5.18.0",
        "@sap/hana-client": "^2.12.25",
        "better-sqlite3": "^7.1.2 || ^8.0.0",
        "hdb-pool": "^0.1.6",
        "ioredis": "^5.0.4",
        "mongodb": "^3.6.0",
        "mssql": "^7.3.0",
        "mysql2": "^2.2.5 || ^3.0.1",
        "oracledb": "^5.1.0",
        "pg": "^8.5.1",
        "pg-native": "^3.0.0",
        "pg-query-stream": "^4.0.0",
        "redis": "^3.1.1 || ^4.0.0",
        "sql.js": "^1.4.0",
        "sqlite3": "^5.0.3",
        "ts-node": "^10.7.0",
        "typeorm-aurora-data-api-driver": "^2.0.0"
      },
      "peerDependenciesMeta": {
        "@google-cloud/spanner": {
          "optional": true
        },
        "@sap/hana-client": {
          "optional": true
        },
        "better-sqlite3": {
          "optional": true
        },
        "hdb-pool": {
          "optional": true
        },
        "ioredis": {
          "optional": true
        },
        "mongodb": {
          "optional": true
        },
        "mssql": {
          "optional": true
        },
        "mysql2": {
          "optional": true
        },
        "oracledb": {
          "optional": true
        },
        "pg": {
          "optional": true
        },
        "pg-native": {
          "optional": true
        },
        "pg-query-stream": {
          "optional": true
        },
        "redis": {
          "optional": true
        },
        "sql.js": {
          "optional": true
        },
        "sqlite3": {
          "optional": true
        },
        "ts-node": {
          "optional": true
        },
        "typeorm-aurora-data-api-driver": {
          "optional": true
        }
      }
    },
    "node_modules/typeorm/node_modules/cliui": {
      "version": "8.0.1",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-8.0.1.tgz",
      "integrity": "sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==",
      "dependencies": {
        "string-width": "^4.2.0",
        "strip-ansi": "^6.0.1",
        "wrap-ansi": "^7.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/typeorm/node_modules/debug": {
      "version": "4.3.4",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.4.tgz",
      "integrity": "sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==",
      "dependencies": {
        "ms": "2.1.2"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/typeorm/node_modules/glob": {
      "version": "8.1.0",
      "resolved": "https://registry.npmjs.org/glob/-/glob-8.1.0.tgz",
      "integrity": "sha512-r8hpEjiQEYlF2QU0df3dS+nxxSIreXQS1qRhMJM0Q5NDdR386C7jb7Hwwod8Fgiuex+k0GFjgft18yvxm5XoCQ==",
      "dependencies": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^5.0.1",
        "once": "^1.3.0"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/typeorm/node_modules/minimatch": {
      "version": "5.1.6",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-5.1.6.tgz",
      "integrity": "sha512-lKwV/1brpG6mBUFHtb7NUmtABCb2WZZmm2wNiOA5hAb8VdCS4B3dtMWyvcoViccwAW/COERjXLt0zP1zXUN26g==",
      "dependencies": {
        "brace-expansion": "^2.0.1"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/typeorm/node_modules/mkdirp": {
      "version": "2.1.4",
      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-2.1.4.tgz",
      "integrity": "sha512-Cy9cV4pRSl1o10i1dURTuRt4T04l0DkS1WZrT+Jir886OqOVkSv4FbOA7pgjhS8kEUrmm4kCRvv5var2iOCxpA==",
      "bin": {
        "mkdirp": "dist/cjs/src/bin.js"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/typeorm/node_modules/ms": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
      "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
    },
    "node_modules/typeorm/node_modules/wrap-ansi": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/typeorm/node_modules/y18n": {
      "version": "5.0.8",
      "resolved": "https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz",
      "integrity": "sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/typeorm/node_modules/yargs": {
      "version": "17.7.1",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-17.7.1.tgz",
      "integrity": "sha512-cwiTb08Xuv5fqF4AovYacTFNxk62th7LKJ6BL9IGUpTJrWoU7/7WdQGTP2SjKf1dUNBGzDd28p/Yfs/GI6JrLw==",
      "dependencies": {
        "cliui": "^8.0.1",
        "escalade": "^3.1.1",
        "get-caller-file": "^2.0.5",
        "require-directory": "^2.1.1",
        "string-width": "^4.2.3",
        "y18n": "^5.0.5",
        "yargs-parser": "^21.1.1"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/typeorm/node_modules/yargs-parser": {
      "version": "21.1.1",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz",
      "integrity": "sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/typescript": {
      "version": "4.9.5",
      "resolved": "https://registry.npmjs.org/typescript/-/typescript-4.9.5.tgz",
      "integrity": "sha512-1FXk9E2Hm+QzZQ7z+McJiHL4NW1F2EzMu9Nq9i3zAaGqibafqYwCVU6WyWAuyQRRzOlxou8xZSyXLEN8oKj24g==",
      "bin": {
        "tsc": "bin/tsc",
        "tsserver": "bin/tsserver"
      },
      "engines": {
        "node": ">=4.2.0"
      }
    },
    "node_modules/u3": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/u3/-/u3-0.1.1.tgz",
      "integrity": "sha512-+J5D5ir763y+Am/QY6hXNRlwljIeRMZMGs0cT6qqZVVzzT3X3nFPXVyPOFRMOR4kupB0T8JnCdpWdp6Q/iXn3w=="
    },
    "node_modules/uglify-js": {
      "version": "3.17.4",
      "resolved": "https://registry.npmjs.org/uglify-js/-/uglify-js-3.17.4.tgz",
      "integrity": "sha512-T9q82TJI9e/C1TAxYvfb16xO120tMVFZrGA3f9/P4424DNu6ypK103y0GPFVa17yotwSyZW5iYXgjYHkGrJW/g==",
      "optional": true,
      "bin": {
        "uglifyjs": "bin/uglifyjs"
      },
      "engines": {
        "node": ">=0.8.0"
      }
    },
    "node_modules/uid-safe": {
      "version": "2.1.5",
      "resolved": "https://registry.npmjs.org/uid-safe/-/uid-safe-2.1.5.tgz",
      "integrity": "sha512-KPHm4VL5dDXKz01UuEd88Df+KzynaohSL9fBh096KWAxSKZQDI2uBrVqtvRM4rwrIrRRKsdLNML/lnaaVSRioA==",
      "dependencies": {
        "random-bytes": "~1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/uint8array-tools": {
      "version": "0.0.7",
      "resolved": "https://registry.npmjs.org/uint8array-tools/-/uint8array-tools-0.0.7.tgz",
      "integrity": "sha512-vrrNZJiusLWoFWBqz5Y5KMCgP9W9hnjZHzZiZRT8oNAkq3d5Z5Oe76jAvVVSRh4U8GGR90N2X1dWtrhvx6L8UQ==",
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/ultron": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/ultron/-/ultron-1.1.1.tgz",
      "integrity": "sha512-UIEXBNeYmKptWH6z8ZnqTeS8fV74zG0/eRU9VGkpzz+LIJNs8W/zM/L+7ctCkRrgbNnnR0xxw4bKOr0cW0N0Og=="
    },
    "node_modules/undefsafe": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/undefsafe/-/undefsafe-2.0.5.tgz",
      "integrity": "sha512-WxONCrssBM8TSPRqN5EmsjVrsv4A8X12J4ArBiiayv3DyyG3ZlIg6yysuuSYdZsVz3TKcTg2fd//Ujd4CHV1iA==",
      "dev": true
    },
    "node_modules/unicode-canonical-property-names-ecmascript": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/unicode-canonical-property-names-ecmascript/-/unicode-canonical-property-names-ecmascript-2.0.0.tgz",
      "integrity": "sha512-yY5PpDlfVIU5+y/BSCxAJRBIS1Zc2dDG3Ujq+sR0U+JjUevW2JhocOF+soROYDSaAezOzOKuyyixhD6mBknSmQ==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/unicode-match-property-ecmascript": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/unicode-match-property-ecmascript/-/unicode-match-property-ecmascript-2.0.0.tgz",
      "integrity": "sha512-5kaZCrbp5mmbz5ulBkDkbY0SsPOjKqVS35VpL9ulMPfSl0J0Xsm+9Evphv9CoIZFwre7aJoa94AY6seMKGVN5Q==",
      "dependencies": {
        "unicode-canonical-property-names-ecmascript": "^2.0.0",
        "unicode-property-aliases-ecmascript": "^2.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/unicode-match-property-value-ecmascript": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/unicode-match-property-value-ecmascript/-/unicode-match-property-value-ecmascript-2.1.0.tgz",
      "integrity": "sha512-qxkjQt6qjg/mYscYMC0XKRn3Rh0wFPlfxB0xkt9CfyTvpX1Ra0+rAmdX2QyAobptSEvuy4RtpPRui6XkV+8wjA==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/unicode-property-aliases-ecmascript": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/unicode-property-aliases-ecmascript/-/unicode-property-aliases-ecmascript-2.1.0.tgz",
      "integrity": "sha512-6t3foTQI9qne+OZoVQB/8x8rk2k1eVy1gRXhV3oFQ5T6R1dqQ1xtin3XqSlx3+ATBkliTaR/hHyJBm+LVPNM8w==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/universalify": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/universalify/-/universalify-0.1.2.tgz",
      "integrity": "sha512-rBJeI5CXAlmy1pV+617WB9J63U6XcazHHF2f2dbJix4XzpUF0RS3Zbj0FGIOCAva5P/d/GBOYaACQ1w+0azUkg==",
      "engines": {
        "node": ">= 4.0.0"
      }
    },
    "node_modules/unpipe": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz",
      "integrity": "sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/update-browserslist-db": {
      "version": "1.0.11",
      "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.0.11.tgz",
      "integrity": "sha512-dCwEFf0/oT85M1fHBg4F0jtLwJrutGoHSQXCh7u4o2t1drG+c0a9Flnqww6XUKSfQMPpJBRjU8d4RXB09qtvaA==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "dependencies": {
        "escalade": "^3.1.1",
        "picocolors": "^1.0.0"
      },
      "bin": {
        "update-browserslist-db": "cli.js"
      },
      "peerDependencies": {
        "browserslist": ">= 4.21.0"
      }
    },
    "node_modules/uri-js": {
      "version": "4.4.1",
      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
      "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
      "dependencies": {
        "punycode": "^2.1.0"
      }
    },
    "node_modules/url-set-query": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/url-set-query/-/url-set-query-1.0.0.tgz",
      "integrity": "sha512-3AChu4NiXquPfeckE5R5cGdiHCMWJx1dwCWOmWIL4KHAziJNOFIYJlpGFeKDvwLPHovZRCxK3cYlwzqI9Vp+Gg=="
    },
    "node_modules/use-memo-one": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/use-memo-one/-/use-memo-one-1.1.3.tgz",
      "integrity": "sha512-g66/K7ZQGYrI6dy8GLpVcMsBp4s17xNkYJVSMvTEevGy3nDxHOfE6z8BVE22+5G5x7t3+bhzrlTDB7ObrEE0cQ==",
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0"
      }
    },
    "node_modules/utf-8-validate": {
      "version": "5.0.10",
      "resolved": "https://registry.npmjs.org/utf-8-validate/-/utf-8-validate-5.0.10.tgz",
      "integrity": "sha512-Z6czzLq4u8fPOyx7TU6X3dvUZVvoJmxSQ+IcrlmagKhilxlhZgxPK6C5Jqbkw1IDUmFTM+cz9QDnnLTwDz/2gQ==",
      "hasInstallScript": true,
      "dependencies": {
        "node-gyp-build": "^4.3.0"
      },
      "engines": {
        "node": ">=6.14.2"
      }
    },
    "node_modules/utf8": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/utf8/-/utf8-3.0.0.tgz",
      "integrity": "sha512-E8VjFIQ/TyQgp+TZfS6l8yp/xWppSAHzidGiRrqe4bK4XP9pTRyKFgGJpO3SN7zdX4DeomTrwaseCHovfpFcqQ=="
    },
    "node_modules/util": {
      "version": "0.12.5",
      "resolved": "https://registry.npmjs.org/util/-/util-0.12.5.tgz",
      "integrity": "sha512-kZf/K6hEIrWHI6XqOFUiiMa+79wE/D8Q+NCNAWclkyg3b4d2k7s0QGepNjiABc+aR3N1PAyHL7p6UcLY6LmrnA==",
      "dependencies": {
        "inherits": "^2.0.3",
        "is-arguments": "^1.0.4",
        "is-generator-function": "^1.0.7",
        "is-typed-array": "^1.1.3",
        "which-typed-array": "^1.1.2"
      }
    },
    "node_modules/util-deprecate": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
      "integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw=="
    },
    "node_modules/utils-merge": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz",
      "integrity": "sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==",
      "engines": {
        "node": ">= 0.4.0"
      }
    },
    "node_modules/uuid": {
      "version": "9.0.0",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-9.0.0.tgz",
      "integrity": "sha512-MXcSTerfPa4uqyzStbRoTgt5XIe3x5+42+q1sDuy3R5MDk66URdLMOZe5aPX/SQd+kuYAh0FdP/pO28IkQyTeg==",
      "bin": {
        "uuid": "dist/bin/uuid"
      }
    },
    "node_modules/v8-compile-cache-lib": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/v8-compile-cache-lib/-/v8-compile-cache-lib-3.0.1.tgz",
      "integrity": "sha512-wa7YjyUGfNZngI/vtK0UHAN+lgDCxBPCylVXGp0zu59Fz5aiGtNXaq3DhIov063MorB+VfufLh3JlF2KdTK3xg=="
    },
    "node_modules/validator": {
      "version": "13.9.0",
      "resolved": "https://registry.npmjs.org/validator/-/validator-13.9.0.tgz",
      "integrity": "sha512-B+dGG8U3fdtM0/aNK4/X8CXq/EcxU2WPrPEkJGslb47qyHsxmbggTWK0yEA4qnYVNF+nxNlN88o14hIcPmSIEA==",
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/value-equal": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/value-equal/-/value-equal-1.0.1.tgz",
      "integrity": "sha512-NOJ6JZCAWr0zlxZt+xqCHNTEKOsrks2HQd4MqhP1qy4z1SkbEP467eNx6TgDKXMvUOb+OENfJCZwM+16n7fRfw=="
    },
    "node_modules/varint": {
      "version": "5.0.2",
      "resolved": "https://registry.npmjs.org/varint/-/varint-5.0.2.tgz",
      "integrity": "sha512-lKxKYG6H03yCZUpAGOPOsMcGxd1RHCu1iKvEHYDPmTyq2HueGhD73ssNBqqQWfvYs04G9iUFRvmAVLW20Jw6ow=="
    },
    "node_modules/varuint-bitcoin": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/varuint-bitcoin/-/varuint-bitcoin-1.1.2.tgz",
      "integrity": "sha512-4EVb+w4rx+YfVM32HQX42AbbT7/1f5zwAYhIujKXKk8NQK+JfRVl3pqT3hjNn/L+RstigmGGKVwHA/P0wgITZw==",
      "dependencies": {
        "safe-buffer": "^5.1.1"
      }
    },
    "node_modules/vary": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/vary/-/vary-1.1.2.tgz",
      "integrity": "sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/verror": {
      "version": "1.10.0",
      "resolved": "https://registry.npmjs.org/verror/-/verror-1.10.0.tgz",
      "integrity": "sha512-ZZKSmDAEFOijERBLkmYfJ+vmk3w+7hOLYDNkRCuRuMJGEmqYNCNLyBBFwWKVMhfwaEF3WOd0Zlw86U/WC/+nYw==",
      "engines": [
        "node >=0.6.0"
      ],
      "dependencies": {
        "assert-plus": "^1.0.0",
        "core-util-is": "1.0.2",
        "extsprintf": "^1.2.0"
      }
    },
    "node_modules/void-elements": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/void-elements/-/void-elements-3.1.0.tgz",
      "integrity": "sha512-Dhxzh5HZuiHQhbvTW9AMetFfBHDMYpo23Uo9btPXgdYP+3T5S+p+jgNy7spra+veYhBP2dCSgxR/i2Y02h5/6w==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/wallet-address-validator": {
      "version": "0.2.4",
      "resolved": "https://registry.npmjs.org/wallet-address-validator/-/wallet-address-validator-0.2.4.tgz",
      "integrity": "sha512-3fp0pVdhaCA6UoPK3CQFx9Y+ckQgFlCa9rOQ7DZr2Uzlh0kYKs3NaSwIDn4FSceDsi1g6W28EWDrlr9Pr3mI3Q==",
      "dependencies": {
        "base-x": "^3.0.4",
        "jssha": "2.3.1"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/warning": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/warning/-/warning-4.0.3.tgz",
      "integrity": "sha512-rpJyN222KWIvHJ/F53XSZv0Zl/accqHR8et1kpaMTD/fLCRxtV8iX8czMzY7sVZupTI3zcUTg8eycS2kNF9l6w==",
      "dependencies": {
        "loose-envify": "^1.0.0"
      }
    },
    "node_modules/wcwidth": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/wcwidth/-/wcwidth-1.0.1.tgz",
      "integrity": "sha512-XHPEwS0q6TaxcvG85+8EYkbiCux2XtWG2mkc47Ng2A77BQu9+DqIOJldST4HgPkuea7dvKSj5VgX3P1d4rW8Tg==",
      "dependencies": {
        "defaults": "^1.0.3"
      }
    },
    "node_modules/web-streams-polyfill": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/web-streams-polyfill/-/web-streams-polyfill-3.2.1.tgz",
      "integrity": "sha512-e0MO3wdXWKrLbL0DgGnUV7WHVuw9OUvL4hjgnPkIeEvESk74gAITi5G606JtZPp39cd8HA9VQzCIvA49LpPN5Q==",
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/web3": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3/-/web3-1.8.2.tgz",
      "integrity": "sha512-92h0GdEHW9wqDICQQKyG4foZBYi0OQkyg4CRml2F7XBl/NG+fu9o6J19kzfFXzSBoA4DnJXbyRgj/RHZv5LRiw==",
      "hasInstallScript": true,
      "dependencies": {
        "web3-bzz": "1.8.2",
        "web3-core": "1.8.2",
        "web3-eth": "1.8.2",
        "web3-eth-personal": "1.8.2",
        "web3-net": "1.8.2",
        "web3-shh": "1.8.2",
        "web3-utils": "1.8.2"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/web3-bzz": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-bzz/-/web3-bzz-1.8.2.tgz",
      "integrity": "sha512-1EEnxjPnFnvNWw3XeeKuTR8PBxYd0+XWzvaLK7OJC/Go9O8llLGxrxICbKV+8cgIE0sDRBxiYx02X+6OhoAQ9w==",
      "hasInstallScript": true,
      "dependencies": {
        "@types/node": "^12.12.6",
        "got": "12.1.0",
        "swarm-js": "^0.1.40"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/web3-bzz/node_modules/@types/node": {
      "version": "12.20.55",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-12.20.55.tgz",
      "integrity": "sha512-J8xLz7q2OFulZ2cyGTLE1TbbZcjpno7FaN6zdJNrgAdrJ+DZzh/uFR6YrTb4C+nXakvud8Q4+rbhoIWlYQbUFQ=="
    },
    "node_modules/web3-core": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-core/-/web3-core-1.8.2.tgz",
      "integrity": "sha512-DJTVEAYcNqxkqruJE+Rxp3CIv0y5AZMwPHQmOkz/cz+MM75SIzMTc0AUdXzGyTS8xMF8h3YWMQGgGEy8SBf1PQ==",
      "dependencies": {
        "@types/bn.js": "^5.1.0",
        "@types/node": "^12.12.6",
        "bignumber.js": "^9.0.0",
        "web3-core-helpers": "1.8.2",
        "web3-core-method": "1.8.2",
        "web3-core-requestmanager": "1.8.2",
        "web3-utils": "1.8.2"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/web3-core-helpers": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-core-helpers/-/web3-core-helpers-1.8.2.tgz",
      "integrity": "sha512-6B1eLlq9JFrfealZBomd1fmlq1o4A09vrCVQSa51ANoib/jllT3atZrRDr0zt1rfI7TSZTZBXdN/aTdeN99DWw==",
      "dependencies": {
        "web3-eth-iban": "1.8.2",
        "web3-utils": "1.8.2"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/web3-core-method": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-core-method/-/web3-core-method-1.8.2.tgz",
      "integrity": "sha512-1qnr5mw5wVyULzLOrk4B+ryO3gfGjGd/fx8NR+J2xCGLf1e6OSjxT9vbfuQ3fErk/NjSTWWreieYWLMhaogcRA==",
      "dependencies": {
        "@ethersproject/transactions": "^5.6.2",
        "web3-core-helpers": "1.8.2",
        "web3-core-promievent": "1.8.2",
        "web3-core-subscriptions": "1.8.2",
        "web3-utils": "1.8.2"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/web3-core-promievent": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-core-promievent/-/web3-core-promievent-1.8.2.tgz",
      "integrity": "sha512-nvkJWDVgoOSsolJldN33tKW6bKKRJX3MCPDYMwP5SUFOA/mCzDEoI88N0JFofDTXkh1k7gOqp1pvwi9heuaxGg==",
      "dependencies": {
        "eventemitter3": "4.0.4"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/web3-core-promievent/node_modules/eventemitter3": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-4.0.4.tgz",
      "integrity": "sha512-rlaVLnVxtxvoyLsQQFBx53YmXHDxRIzzTLbdfxqi4yocpSjAxXwkU0cScM5JgSKMqEhrZpnvQ2D9gjylR0AimQ=="
    },
    "node_modules/web3-core-requestmanager": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-core-requestmanager/-/web3-core-requestmanager-1.8.2.tgz",
      "integrity": "sha512-p1d090RYs5Mu7DK1yyc3GCBVZB/03rBtFhYFoS2EruGzOWs/5Q0grgtpwS/DScdRAm8wB8mYEBhY/RKJWF6B2g==",
      "dependencies": {
        "util": "^0.12.5",
        "web3-core-helpers": "1.8.2",
        "web3-providers-http": "1.8.2",
        "web3-providers-ipc": "1.8.2",
        "web3-providers-ws": "1.8.2"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/web3-core-subscriptions": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-core-subscriptions/-/web3-core-subscriptions-1.8.2.tgz",
      "integrity": "sha512-vXQogHDmAIQcKpXvGiMddBUeP9lnKgYF64+yQJhPNE5PnWr1sAibXuIPV7mIPihpFr/n/DORRj6Wh1pUv9zaTw==",
      "dependencies": {
        "eventemitter3": "4.0.4",
        "web3-core-helpers": "1.8.2"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/web3-core-subscriptions/node_modules/eventemitter3": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-4.0.4.tgz",
      "integrity": "sha512-rlaVLnVxtxvoyLsQQFBx53YmXHDxRIzzTLbdfxqi4yocpSjAxXwkU0cScM5JgSKMqEhrZpnvQ2D9gjylR0AimQ=="
    },
    "node_modules/web3-core/node_modules/@types/node": {
      "version": "12.20.55",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-12.20.55.tgz",
      "integrity": "sha512-J8xLz7q2OFulZ2cyGTLE1TbbZcjpno7FaN6zdJNrgAdrJ+DZzh/uFR6YrTb4C+nXakvud8Q4+rbhoIWlYQbUFQ=="
    },
    "node_modules/web3-eth": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-eth/-/web3-eth-1.8.2.tgz",
      "integrity": "sha512-JoTiWWc4F4TInpbvDUGb0WgDYJsFhuIjJlinc5ByjWD88Gvh+GKLsRjjFdbqe5YtwIGT4NymwoC5LQd1K6u/QQ==",
      "dependencies": {
        "web3-core": "1.8.2",
        "web3-core-helpers": "1.8.2",
        "web3-core-method": "1.8.2",
        "web3-core-subscriptions": "1.8.2",
        "web3-eth-abi": "1.8.2",
        "web3-eth-accounts": "1.8.2",
        "web3-eth-contract": "1.8.2",
        "web3-eth-ens": "1.8.2",
        "web3-eth-iban": "1.8.2",
        "web3-eth-personal": "1.8.2",
        "web3-net": "1.8.2",
        "web3-utils": "1.8.2"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/web3-eth-abi": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-eth-abi/-/web3-eth-abi-1.8.2.tgz",
      "integrity": "sha512-Om9g3kaRNjqiNPAgKwGT16y+ZwtBzRe4ZJFGjLiSs6v5I7TPNF+rRMWuKnR6jq0azQZDj6rblvKFMA49/k48Og==",
      "dependencies": {
        "@ethersproject/abi": "^5.6.3",
        "web3-utils": "1.8.2"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/web3-eth-accounts": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-eth-accounts/-/web3-eth-accounts-1.8.2.tgz",
      "integrity": "sha512-c367Ij63VCz9YdyjiHHWLFtN85l6QghgwMQH2B1eM/p9Y5lTlTX7t/Eg/8+f1yoIStXbk2w/PYM2lk+IkbqdLA==",
      "dependencies": {
        "@ethereumjs/common": "2.5.0",
        "@ethereumjs/tx": "3.3.2",
        "eth-lib": "0.2.8",
        "ethereumjs-util": "^7.1.5",
        "scrypt-js": "^3.0.1",
        "uuid": "^9.0.0",
        "web3-core": "1.8.2",
        "web3-core-helpers": "1.8.2",
        "web3-core-method": "1.8.2",
        "web3-utils": "1.8.2"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/web3-eth-accounts/node_modules/bn.js": {
      "version": "4.12.0",
      "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz",
      "integrity": "sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA=="
    },
    "node_modules/web3-eth-accounts/node_modules/eth-lib": {
      "version": "0.2.8",
      "resolved": "https://registry.npmjs.org/eth-lib/-/eth-lib-0.2.8.tgz",
      "integrity": "sha512-ArJ7x1WcWOlSpzdoTBX8vkwlkSQ85CjjifSZtV4co64vWxSV8geWfPI9x4SVYu3DSxnX4yWFVTtGL+j9DUFLNw==",
      "dependencies": {
        "bn.js": "^4.11.6",
        "elliptic": "^6.4.0",
        "xhr-request-promise": "^0.1.2"
      }
    },
    "node_modules/web3-eth-contract": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-eth-contract/-/web3-eth-contract-1.8.2.tgz",
      "integrity": "sha512-ID5A25tHTSBNwOPjiXSVzxruz006ULRIDbzWTYIFTp7NJ7vXu/kynKK2ag/ObuTqBpMbobP8nXcA9b5EDkIdQA==",
      "dependencies": {
        "@types/bn.js": "^5.1.0",
        "web3-core": "1.8.2",
        "web3-core-helpers": "1.8.2",
        "web3-core-method": "1.8.2",
        "web3-core-promievent": "1.8.2",
        "web3-core-subscriptions": "1.8.2",
        "web3-eth-abi": "1.8.2",
        "web3-utils": "1.8.2"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/web3-eth-ens": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-eth-ens/-/web3-eth-ens-1.8.2.tgz",
      "integrity": "sha512-PWph7C/CnqdWuu1+SH4U4zdrK4t2HNt0I4XzPYFdv9ugE8EuojselioPQXsVGvjql+Nt3jDLvQvggPqlMbvwRw==",
      "dependencies": {
        "content-hash": "^2.5.2",
        "eth-ens-namehash": "2.0.8",
        "web3-core": "1.8.2",
        "web3-core-helpers": "1.8.2",
        "web3-core-promievent": "1.8.2",
        "web3-eth-abi": "1.8.2",
        "web3-eth-contract": "1.8.2",
        "web3-utils": "1.8.2"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/web3-eth-iban": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-eth-iban/-/web3-eth-iban-1.8.2.tgz",
      "integrity": "sha512-h3vNblDWkWMuYx93Q27TAJz6lhzpP93EiC3+45D6xoz983p6si773vntoQ+H+5aZhwglBtoiBzdh7PSSOnP/xQ==",
      "dependencies": {
        "bn.js": "^5.2.1",
        "web3-utils": "1.8.2"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/web3-eth-personal": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-eth-personal/-/web3-eth-personal-1.8.2.tgz",
      "integrity": "sha512-Vg4HfwCr7doiUF/RC+Jz0wT4+cYaXcOWMAW2AHIjHX6Z7Xwa8nrURIeQgeEE62qcEHAzajyAdB1u6bJyTfuCXw==",
      "dependencies": {
        "@types/node": "^12.12.6",
        "web3-core": "1.8.2",
        "web3-core-helpers": "1.8.2",
        "web3-core-method": "1.8.2",
        "web3-net": "1.8.2",
        "web3-utils": "1.8.2"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/web3-eth-personal/node_modules/@types/node": {
      "version": "12.20.55",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-12.20.55.tgz",
      "integrity": "sha512-J8xLz7q2OFulZ2cyGTLE1TbbZcjpno7FaN6zdJNrgAdrJ+DZzh/uFR6YrTb4C+nXakvud8Q4+rbhoIWlYQbUFQ=="
    },
    "node_modules/web3-net": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-net/-/web3-net-1.8.2.tgz",
      "integrity": "sha512-1itkDMGmbgb83Dg9nporFes9/fxsU7smJ3oRXlFkg4ZHn8YJyP1MSQFPJWWwSc+GrcCFt4O5IrUTvEkHqE3xag==",
      "dependencies": {
        "web3-core": "1.8.2",
        "web3-core-method": "1.8.2",
        "web3-utils": "1.8.2"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/web3-providers-http": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-providers-http/-/web3-providers-http-1.8.2.tgz",
      "integrity": "sha512-2xY94IIEQd16+b+vIBF4IC1p7GVaz9q4EUFscvMUjtEq4ru4Atdzjs9GP+jmcoo49p70II0UV3bqQcz0TQfVyQ==",
      "dependencies": {
        "abortcontroller-polyfill": "^1.7.3",
        "cross-fetch": "^3.1.4",
        "es6-promise": "^4.2.8",
        "web3-core-helpers": "1.8.2"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/web3-providers-ipc": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-providers-ipc/-/web3-providers-ipc-1.8.2.tgz",
      "integrity": "sha512-p6fqKVGFg+WiXGHWnB1hu43PbvPkDHTz4RgoEzbXugv5rtv5zfYLqm8Ba6lrJOS5ks9kGKR21a0y3NzE3u7V4w==",
      "dependencies": {
        "oboe": "2.1.5",
        "web3-core-helpers": "1.8.2"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/web3-providers-ws": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-providers-ws/-/web3-providers-ws-1.8.2.tgz",
      "integrity": "sha512-3s/4K+wHgbiN+Zrp9YjMq2eqAF6QGABw7wFftPdx+m5hWImV27/MoIx57c6HffNRqZXmCHnfWWFCNHHsi7wXnA==",
      "dependencies": {
        "eventemitter3": "4.0.4",
        "web3-core-helpers": "1.8.2",
        "websocket": "^1.0.32"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/web3-providers-ws/node_modules/eventemitter3": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-4.0.4.tgz",
      "integrity": "sha512-rlaVLnVxtxvoyLsQQFBx53YmXHDxRIzzTLbdfxqi4yocpSjAxXwkU0cScM5JgSKMqEhrZpnvQ2D9gjylR0AimQ=="
    },
    "node_modules/web3-shh": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-shh/-/web3-shh-1.8.2.tgz",
      "integrity": "sha512-uZ+3MAoNcaJsXXNCDnizKJ5viBNeHOFYsCbFhV755Uu52FswzTOw6DtE7yK9nYXMtIhiSgi7nwl1RYzP8pystw==",
      "hasInstallScript": true,
      "dependencies": {
        "web3-core": "1.8.2",
        "web3-core-method": "1.8.2",
        "web3-core-subscriptions": "1.8.2",
        "web3-net": "1.8.2"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/web3-utils": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-utils/-/web3-utils-1.8.2.tgz",
      "integrity": "sha512-v7j6xhfLQfY7xQDrUP0BKbaNrmZ2/+egbqP9q3KYmOiPpnvAfol+32slgL0WX/5n8VPvKCK5EZ1HGrAVICSToA==",
      "dependencies": {
        "bn.js": "^5.2.1",
        "ethereum-bloom-filters": "^1.0.6",
        "ethereumjs-util": "^7.1.0",
        "ethjs-unit": "0.1.6",
        "number-to-bn": "1.7.0",
        "randombytes": "^2.1.0",
        "utf8": "3.0.0"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/webidl-conversions": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-3.0.1.tgz",
      "integrity": "sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ=="
    },
    "node_modules/websocket": {
      "version": "1.0.34",
      "resolved": "https://registry.npmjs.org/websocket/-/websocket-1.0.34.tgz",
      "integrity": "sha512-PRDso2sGwF6kM75QykIesBijKSVceR6jL2G8NGYyq2XrItNC2P5/qL5XeR056GhA+Ly7JMFvJb9I312mJfmqnQ==",
      "dependencies": {
        "bufferutil": "^4.0.1",
        "debug": "^2.2.0",
        "es5-ext": "^0.10.50",
        "typedarray-to-buffer": "^3.1.5",
        "utf-8-validate": "^5.0.2",
        "yaeti": "^0.0.6"
      },
      "engines": {
        "node": ">=4.0.0"
      }
    },
    "node_modules/whatwg-url": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-5.0.0.tgz",
      "integrity": "sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==",
      "dependencies": {
        "tr46": "~0.0.3",
        "webidl-conversions": "^3.0.0"
      }
    },
    "node_modules/which": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
      "dependencies": {
        "isexe": "^2.0.0"
      },
      "bin": {
        "node-which": "bin/node-which"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/which-module": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/which-module/-/which-module-2.0.0.tgz",
      "integrity": "sha512-B+enWhmw6cjfVC7kS8Pj9pCrKSc5txArRyaYGe088shv/FGWH+0Rjx/xPgtsWfsUtS27FkP697E4DDhgrgoc0Q=="
    },
    "node_modules/which-typed-array": {
      "version": "1.1.9",
      "resolved": "https://registry.npmjs.org/which-typed-array/-/which-typed-array-1.1.9.tgz",
      "integrity": "sha512-w9c4xkx6mPidwp7180ckYWfMmvxpjlZuIudNtDf4N/tTAUB8VJbX25qZoAsrtGuYNnGw3pa0AXgbGKRB8/EceA==",
      "dependencies": {
        "available-typed-arrays": "^1.0.5",
        "call-bind": "^1.0.2",
        "for-each": "^0.3.3",
        "gopd": "^1.0.1",
        "has-tostringtag": "^1.0.0",
        "is-typed-array": "^1.1.10"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/wif": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/wif/-/wif-2.0.6.tgz",
      "integrity": "sha512-HIanZn1zmduSF+BQhkE+YXIbEiH0xPr1012QbFEGB0xsKqJii0/SqJjyn8dFv6y36kOznMgMB+LGcbZTJ1xACQ==",
      "dependencies": {
        "bs58check": "<3.0.0"
      }
    },
    "node_modules/wordwrap": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/wordwrap/-/wordwrap-1.0.0.tgz",
      "integrity": "sha512-gvVzJFlPycKc5dZN4yPkP8w7Dc37BtP1yczEneOb4uq34pXZcvrtRTmWV8W+Ume+XCxKgbjM+nevkyFPMybd4Q=="
    },
    "node_modules/wrap-ansi": {
      "version": "6.2.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-6.2.0.tgz",
      "integrity": "sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ/SOIZwINatK9KY/tf+ZrlywOKU0UDj3ATXUBfxJXA==",
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrap-ansi-cjs": {
      "name": "wrap-ansi",
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/wrappy": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
      "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ=="
    },
    "node_modules/ws": {
      "version": "7.4.6",
      "resolved": "https://registry.npmjs.org/ws/-/ws-7.4.6.tgz",
      "integrity": "sha512-YmhHDO4MzaDLB+M9ym/mDA5z0naX8j7SIlT8f8z+I0VtzsRbekxEutHSme7NPS2qE8StCYQNUnfWdXta/Yu85A==",
      "engines": {
        "node": ">=8.3.0"
      },
      "peerDependencies": {
        "bufferutil": "^4.0.1",
        "utf-8-validate": "^5.0.2"
      },
      "peerDependenciesMeta": {
        "bufferutil": {
          "optional": true
        },
        "utf-8-validate": {
          "optional": true
        }
      }
    },
    "node_modules/xhr": {
      "version": "2.6.0",
      "resolved": "https://registry.npmjs.org/xhr/-/xhr-2.6.0.tgz",
      "integrity": "sha512-/eCGLb5rxjx5e3mF1A7s+pLlR6CGyqWN91fv1JgER5mVWg1MZmlhBvy9kjcsOdRk8RrIujotWyJamfyrp+WIcA==",
      "dependencies": {
        "global": "~4.4.0",
        "is-function": "^1.0.1",
        "parse-headers": "^2.0.0",
        "xtend": "^4.0.0"
      }
    },
    "node_modules/xhr-request": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/xhr-request/-/xhr-request-1.1.0.tgz",
      "integrity": "sha512-Y7qzEaR3FDtL3fP30k9wO/e+FBnBByZeybKOhASsGP30NIkRAAkKD/sCnLvgEfAIEC1rcmK7YG8f4oEnIrrWzA==",
      "dependencies": {
        "buffer-to-arraybuffer": "^0.0.5",
        "object-assign": "^4.1.1",
        "query-string": "^5.0.1",
        "simple-get": "^2.7.0",
        "timed-out": "^4.0.1",
        "url-set-query": "^1.0.0",
        "xhr": "^2.0.4"
      }
    },
    "node_modules/xhr-request-promise": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/xhr-request-promise/-/xhr-request-promise-0.1.3.tgz",
      "integrity": "sha512-YUBytBsuwgitWtdRzXDDkWAXzhdGB8bYm0sSzMPZT7Z2MBjMSTHFsyCT1yCRATY+XC69DUrQraRAEgcoCRaIPg==",
      "dependencies": {
        "xhr-request": "^1.1.0"
      }
    },
    "node_modules/xml2js": {
      "version": "0.4.23",
      "resolved": "https://registry.npmjs.org/xml2js/-/xml2js-0.4.23.tgz",
      "integrity": "sha512-ySPiMjM0+pLDftHgXY4By0uswI3SPKLDw/i3UXbnO8M/p28zqexCUoPmQFrYD+/1BzhGJSs2i1ERWKJAtiLrug==",
      "dependencies": {
        "sax": ">=0.6.0",
        "xmlbuilder": "~11.0.0"
      },
      "engines": {
        "node": ">=4.0.0"
      }
    },
    "node_modules/xmlbuilder": {
      "version": "11.0.1",
      "resolved": "https://registry.npmjs.org/xmlbuilder/-/xmlbuilder-11.0.1.tgz",
      "integrity": "sha512-fDlsI/kFEx7gLvbecc0/ohLG50fugQp8ryHzMTuW9vSa1GJ0XYWKnhsUx7oie3G98+r56aTQIUB4kht42R3JvA==",
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/xtend": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.2.tgz",
      "integrity": "sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==",
      "engines": {
        "node": ">=0.4"
      }
    },
    "node_modules/y18n": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/y18n/-/y18n-4.0.3.tgz",
      "integrity": "sha512-JKhqTOwSrqNA1NY5lSztJ1GrBiUodLMmIZuLiDaMRJ+itFd+ABVE8XBjOvIWL+rSqNDC74LCSFmlb/U4UZ4hJQ=="
    },
    "node_modules/yaeti": {
      "version": "0.0.6",
      "resolved": "https://registry.npmjs.org/yaeti/-/yaeti-0.0.6.tgz",
      "integrity": "sha512-MvQa//+KcZCUkBTIC9blM+CU9J2GzuTytsOUwf2lidtvkx/6gnEp1QvJv34t9vdjhFmha/mUiNDbN0D0mJWdug==",
      "engines": {
        "node": ">=0.10.32"
      }
    },
    "node_modules/yallist": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
      "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g=="
    },
    "node_modules/yaml": {
      "version": "2.0.0-1",
      "resolved": "https://registry.npmjs.org/yaml/-/yaml-2.0.0-1.tgz",
      "integrity": "sha512-W7h5dEhywMKenDJh2iX/LABkbFnBxasD27oyXWDS/feDsxiw0dD5ncXdYXgkvAsXIY2MpW/ZKkr9IU30DBdMNQ==",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/yargs": {
      "version": "15.4.1",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-15.4.1.tgz",
      "integrity": "sha512-aePbxDmcYW++PaqBsJ+HYUFwCdv4LVvdnhBy78E57PIor8/OVvhMrADFFEDh8DHDFRv/O9i3lPhsENjO7QX0+A==",
      "dependencies": {
        "cliui": "^6.0.0",
        "decamelize": "^1.2.0",
        "find-up": "^4.1.0",
        "get-caller-file": "^2.0.1",
        "require-directory": "^2.1.1",
        "require-main-filename": "^2.0.0",
        "set-blocking": "^2.0.0",
        "string-width": "^4.2.0",
        "which-module": "^2.0.0",
        "y18n": "^4.0.0",
        "yargs-parser": "^18.1.2"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/yargs-parser": {
      "version": "18.1.3",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-18.1.3.tgz",
      "integrity": "sha512-o50j0JeToy/4K6OZcaQmW6lyXXKhq7csREXcDwk2omFPJEwUNOVtJKvmDr9EI1fAJZUyZcRF7kxGBWmRXudrCQ==",
      "dependencies": {
        "camelcase": "^5.0.0",
        "decamelize": "^1.2.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/yn": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/yn/-/yn-3.1.1.tgz",
      "integrity": "sha512-Ux4ygGWsu2c7isFWe8Yu1YluJmqVhxqK2cLXNQA5AcC3QfbGNpM7fu0Y8b/z16pXLnFxZYvWhd3fhBY9DLmC6Q==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/z-schema": {
      "version": "5.0.5",
      "resolved": "https://registry.npmjs.org/z-schema/-/z-schema-5.0.5.tgz",
      "integrity": "sha512-D7eujBWkLa3p2sIpJA0d1pr7es+a7m0vFAnZLlCEKq/Ij2k0MLi9Br2UPxoxdYystm5K1yeBGzub0FlYUEWj2Q==",
      "dependencies": {
        "lodash.get": "^4.4.2",
        "lodash.isequal": "^4.5.0",
        "validator": "^13.7.0"
      },
      "bin": {
        "z-schema": "bin/z-schema"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "optionalDependencies": {
        "commander": "^9.4.1"
      }
    },
    "node_modules/z-schema/node_modules/commander": {
      "version": "9.5.0",
      "resolved": "https://registry.npmjs.org/commander/-/commander-9.5.0.tgz",
      "integrity": "sha512-KRs7WVDKg86PWiuAqhDrAQnTXZKraVcCc6vFdL14qrZ/DcWwuRo7VoiYXalXO7S5GKpqYiVEwCbgFDfxNHKJBQ==",
      "optional": true,
      "engines": {
        "node": "^12.20.0 || >=14"
      }
    }
  },
  "dependencies": {
    "@1inch/limit-order-protocol-utils": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/@1inch/limit-order-protocol-utils/-/limit-order-protocol-utils-3.0.1.tgz",
      "integrity": "sha512-HpZ1ZRP0PKNOuma1zvffdEfXl64CH/9oajug9Q26HPgyf0Ot+epiArI6rzqKRFvALOHp5Kl6kixiA2qFmGDQzA==",
      "requires": {
        "@ethersproject/abi": "^5.1.1",
        "@ethersproject/bignumber": "^5.1.1",
        "@metamask/eth-sig-util": "^4.0.1",
        "prompts": "^2.4.1",
        "web3": "^1.8.1",
        "yargs": "^17.0.1"
      },
      "dependencies": {
        "cliui": {
          "version": "8.0.1",
          "resolved": "https://registry.npmjs.org/cliui/-/cliui-8.0.1.tgz",
          "integrity": "sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==",
          "requires": {
            "string-width": "^4.2.0",
            "strip-ansi": "^6.0.1",
            "wrap-ansi": "^7.0.0"
          }
        },
        "wrap-ansi": {
          "version": "7.0.0",
          "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
          "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
          "requires": {
            "ansi-styles": "^4.0.0",
            "string-width": "^4.1.0",
            "strip-ansi": "^6.0.0"
          }
        },
        "y18n": {
          "version": "5.0.8",
          "resolved": "https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz",
          "integrity": "sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA=="
        },
        "yargs": {
          "version": "17.7.1",
          "resolved": "https://registry.npmjs.org/yargs/-/yargs-17.7.1.tgz",
          "integrity": "sha512-cwiTb08Xuv5fqF4AovYacTFNxk62th7LKJ6BL9IGUpTJrWoU7/7WdQGTP2SjKf1dUNBGzDd28p/Yfs/GI6JrLw==",
          "requires": {
            "cliui": "^8.0.1",
            "escalade": "^3.1.1",
            "get-caller-file": "^2.0.5",
            "require-directory": "^2.1.1",
            "string-width": "^4.2.3",
            "y18n": "^5.0.5",
            "yargs-parser": "^21.1.1"
          }
        },
        "yargs-parser": {
          "version": "21.1.1",
          "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz",
          "integrity": "sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw=="
        }
      }
    },
    "@adminjs/design-system": {
      "version": "2.2.4",
      "resolved": "https://registry.npmjs.org/@adminjs/design-system/-/design-system-2.2.4.tgz",
      "integrity": "sha512-C0I0lWJvithwVGPri2PY8Msq/hoaKFvsfV5173d6O2q2FIP20LxB4ZgdFIJ4QbFOht6kLI3L/4TRMC4xAwkFAA==",
      "requires": {
        "@carbon/icons-react": "^10.49.0",
        "date-fns": "2.15.0",
        "jw-paginate": "^1.0.4",
        "lodash": "^4.17.20",
        "polished": "^3.6.5",
        "quill": "^1.3.7",
        "react-currency-input-field": "^3.6.4",
        "react-datepicker": "^3.1.3",
        "styled-system": "^5.1.5"
      },
      "dependencies": {
        "date-fns": {
          "version": "2.15.0",
          "resolved": "https://registry.npmjs.org/date-fns/-/date-fns-2.15.0.tgz",
          "integrity": "sha512-ZCPzAMJZn3rNUvvQIMlXhDr4A+Ar07eLeGsGREoWU19a3Pqf5oYa+ccd+B3F6XVtQY6HANMFdOQ8A+ipFnvJdQ=="
        }
      }
    },
    "@adminjs/express": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/@adminjs/express/-/express-4.1.3.tgz",
      "integrity": "sha512-zmA1dhwl31ub5lMT037aEc5Km8SlUxaeb3/xlO8qc44NdScliEiHxaKOm+EItSmsemV/OMOOHepTWqYcXtIgiQ==",
      "requires": {
        "path-to-regexp": "^6.2.0"
      },
      "dependencies": {
        "path-to-regexp": {
          "version": "6.2.1",
          "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-6.2.1.tgz",
          "integrity": "sha512-JLyh7xT1kizaEvcaXOQwOc2/Yhw6KZOvPf1S8401UyLk86CU79LN3vl7ztXGm/pZ+YjoyAJ4rxmHwbkBXJX+yw=="
        }
      }
    },
    "@adminjs/typeorm": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/@adminjs/typeorm/-/typeorm-3.0.2.tgz",
      "integrity": "sha512-8McLKjkHlt3e6C856pwfdI1hSMJAjO5QY4ds5WKJJgz1NYblCWNWAEK5Df7DvfWdMZlPE0pODvbjF07BZVF5ZQ==",
      "requires": {}
    },
    "@ampproject/remapping": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.2.1.tgz",
      "integrity": "sha512-lFMjJTrFL3j7L9yBxwYfCq2k6qqwHyzuUl/XBnif78PWTJYyL/dfowQHWE3sp6U6ZzqWiiIZnpTMO96zhkjwtg==",
      "requires": {
        "@jridgewell/gen-mapping": "^0.3.0",
        "@jridgewell/trace-mapping": "^0.3.9"
      }
    },
    "@apidevtools/json-schema-ref-parser": {
      "version": "9.1.2",
      "resolved": "https://registry.npmjs.org/@apidevtools/json-schema-ref-parser/-/json-schema-ref-parser-9.1.2.tgz",
      "integrity": "sha512-r1w81DpR+KyRWd3f+rk6TNqMgedmAxZP5v5KWlXQWlgMUUtyEJch0DKEci1SorPMiSeM8XPl7MZ3miJ60JIpQg==",
      "requires": {
        "@jsdevtools/ono": "^7.1.3",
        "@types/json-schema": "^7.0.6",
        "call-me-maybe": "^1.0.1",
        "js-yaml": "^4.1.0"
      }
    },
    "@apidevtools/openapi-schemas": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/@apidevtools/openapi-schemas/-/openapi-schemas-2.1.0.tgz",
      "integrity": "sha512-Zc1AlqrJlX3SlpupFGpiLi2EbteyP7fXmUOGup6/DnkRgjP9bgMM/ag+n91rsv0U1Gpz0H3VILA/o3bW7Ua6BQ=="
    },
    "@apidevtools/swagger-methods": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/@apidevtools/swagger-methods/-/swagger-methods-3.0.2.tgz",
      "integrity": "sha512-QAkD5kK2b1WfjDS/UQn/qQkbwF31uqRjPTrsCs5ZG9BQGAkjwvqGFjjPqAuzac/IYzpPtRzjCP1WrTuAIjMrXg=="
    },
    "@apidevtools/swagger-parser": {
      "version": "10.0.3",
      "resolved": "https://registry.npmjs.org/@apidevtools/swagger-parser/-/swagger-parser-10.0.3.tgz",
      "integrity": "sha512-sNiLY51vZOmSPFZA5TF35KZ2HbgYklQnTSDnkghamzLb3EkNtcQnrBQEj5AOCxHpTtXpqMCRM1CrmV2rG6nw4g==",
      "requires": {
        "@apidevtools/json-schema-ref-parser": "^9.0.6",
        "@apidevtools/openapi-schemas": "^2.0.4",
        "@apidevtools/swagger-methods": "^3.0.2",
        "@jsdevtools/ono": "^7.1.3",
        "call-me-maybe": "^1.0.1",
        "z-schema": "^5.0.1"
      }
    },
    "@babel/code-frame": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.22.5.tgz",
      "integrity": "sha512-Xmwn266vad+6DAqEB2A6V/CcZVp62BbwVmcOJc2RPuwih1kw02TjQvWVWlcKGbBPd+8/0V5DEkOcizRGYsspYQ==",
      "requires": {
        "@babel/highlight": "^7.22.5"
      }
    },
    "@babel/compat-data": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.22.5.tgz",
      "integrity": "sha512-4Jc/YuIaYqKnDDz892kPIledykKg12Aw1PYX5i/TY28anJtacvM1Rrr8wbieB9GfEJwlzqT0hUEao0CxEebiDA=="
    },
    "@babel/core": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/core/-/core-7.22.5.tgz",
      "integrity": "sha512-SBuTAjg91A3eKOvD+bPEz3LlhHZRNu1nFOVts9lzDJTXshHTjII0BAtDS3Y2DAkdZdDKWVZGVwkDfc4Clxn1dg==",
      "requires": {
        "@ampproject/remapping": "^2.2.0",
        "@babel/code-frame": "^7.22.5",
        "@babel/generator": "^7.22.5",
        "@babel/helper-compilation-targets": "^7.22.5",
        "@babel/helper-module-transforms": "^7.22.5",
        "@babel/helpers": "^7.22.5",
        "@babel/parser": "^7.22.5",
        "@babel/template": "^7.22.5",
        "@babel/traverse": "^7.22.5",
        "@babel/types": "^7.22.5",
        "convert-source-map": "^1.7.0",
        "debug": "^4.1.0",
        "gensync": "^1.0.0-beta.2",
        "json5": "^2.2.2",
        "semver": "^6.3.0"
      },
      "dependencies": {
        "debug": {
          "version": "4.3.4",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.4.tgz",
          "integrity": "sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==",
          "requires": {
            "ms": "2.1.2"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
        },
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw=="
        }
      }
    },
    "@babel/generator": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.22.5.tgz",
      "integrity": "sha512-+lcUbnTRhd0jOewtFSedLyiPsD5tswKkbgcezOqqWFUVNEwoUTlpPOBmvhG7OXWLR4jMdv0czPGH5XbflnD1EA==",
      "requires": {
        "@babel/types": "^7.22.5",
        "@jridgewell/gen-mapping": "^0.3.2",
        "@jridgewell/trace-mapping": "^0.3.17",
        "jsesc": "^2.5.1"
      },
      "dependencies": {
        "@jridgewell/trace-mapping": {
          "version": "0.3.18",
          "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.18.tgz",
          "integrity": "sha512-w+niJYzMHdd7USdiH2U6869nqhD2nbfZXND5Yp93qIbEmnDNk7PD48o+YchRVpzMU7M6jVCbenTR7PA1FLQ9pA==",
          "requires": {
            "@jridgewell/resolve-uri": "3.1.0",
            "@jridgewell/sourcemap-codec": "1.4.14"
          }
        }
      }
    },
    "@babel/helper-annotate-as-pure": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.22.5.tgz",
      "integrity": "sha512-LvBTxu8bQSQkcyKOU+a1btnNFQ1dMAd0R6PyW3arXes06F6QLWLIrd681bxRPIXlrMGR3XYnW9JyML7dP3qgxg==",
      "requires": {
        "@babel/types": "^7.22.5"
      }
    },
    "@babel/helper-builder-binary-assignment-operator-visitor": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-builder-binary-assignment-operator-visitor/-/helper-builder-binary-assignment-operator-visitor-7.22.5.tgz",
      "integrity": "sha512-m1EP3lVOPptR+2DwD125gziZNcmoNSHGmJROKoy87loWUQyJaVXDgpmruWqDARZSmtYQ+Dl25okU8+qhVzuykw==",
      "requires": {
        "@babel/types": "^7.22.5"
      }
    },
    "@babel/helper-compilation-targets": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.22.5.tgz",
      "integrity": "sha512-Ji+ywpHeuqxB8WDxraCiqR0xfhYjiDE/e6k7FuIaANnoOFxAHskHChz4vA1mJC9Lbm01s1PVAGhQY4FUKSkGZw==",
      "requires": {
        "@babel/compat-data": "^7.22.5",
        "@babel/helper-validator-option": "^7.22.5",
        "browserslist": "^4.21.3",
        "lru-cache": "^5.1.1",
        "semver": "^6.3.0"
      },
      "dependencies": {
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw=="
        }
      }
    },
    "@babel/helper-create-class-features-plugin": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.22.5.tgz",
      "integrity": "sha512-xkb58MyOYIslxu3gKmVXmjTtUPvBU4odYzbiIQbWwLKIHCsx6UGZGX6F1IznMFVnDdirseUZopzN+ZRt8Xb33Q==",
      "requires": {
        "@babel/helper-annotate-as-pure": "^7.22.5",
        "@babel/helper-environment-visitor": "^7.22.5",
        "@babel/helper-function-name": "^7.22.5",
        "@babel/helper-member-expression-to-functions": "^7.22.5",
        "@babel/helper-optimise-call-expression": "^7.22.5",
        "@babel/helper-replace-supers": "^7.22.5",
        "@babel/helper-skip-transparent-expression-wrappers": "^7.22.5",
        "@babel/helper-split-export-declaration": "^7.22.5",
        "semver": "^6.3.0"
      },
      "dependencies": {
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw=="
        }
      }
    },
    "@babel/helper-create-regexp-features-plugin": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-create-regexp-features-plugin/-/helper-create-regexp-features-plugin-7.22.5.tgz",
      "integrity": "sha512-1VpEFOIbMRaXyDeUwUfmTIxExLwQ+zkW+Bh5zXpApA3oQedBx9v/updixWxnx/bZpKw7u8VxWjb/qWpIcmPq8A==",
      "requires": {
        "@babel/helper-annotate-as-pure": "^7.22.5",
        "regexpu-core": "^5.3.1",
        "semver": "^6.3.0"
      },
      "dependencies": {
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw=="
        }
      }
    },
    "@babel/helper-define-polyfill-provider": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/@babel/helper-define-polyfill-provider/-/helper-define-polyfill-provider-0.4.0.tgz",
      "integrity": "sha512-RnanLx5ETe6aybRi1cO/edaRH+bNYWaryCEmjDDYyNr4wnSzyOp8T0dWipmqVHKEY3AbVKUom50AKSlj1zmKbg==",
      "requires": {
        "@babel/helper-compilation-targets": "^7.17.7",
        "@babel/helper-plugin-utils": "^7.16.7",
        "debug": "^4.1.1",
        "lodash.debounce": "^4.0.8",
        "resolve": "^1.14.2",
        "semver": "^6.1.2"
      },
      "dependencies": {
        "debug": {
          "version": "4.3.4",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.4.tgz",
          "integrity": "sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==",
          "requires": {
            "ms": "2.1.2"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
        },
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw=="
        }
      }
    },
    "@babel/helper-environment-visitor": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-environment-visitor/-/helper-environment-visitor-7.22.5.tgz",
      "integrity": "sha512-XGmhECfVA/5sAt+H+xpSg0mfrHq6FzNr9Oxh7PSEBBRUb/mL7Kz3NICXb194rCqAEdxkhPT1a88teizAFyvk8Q=="
    },
    "@babel/helper-function-name": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.22.5.tgz",
      "integrity": "sha512-wtHSq6jMRE3uF2otvfuD3DIvVhOsSNshQl0Qrd7qC9oQJzHvOL4qQXlQn2916+CXGywIjpGuIkoyZRRxHPiNQQ==",
      "requires": {
        "@babel/template": "^7.22.5",
        "@babel/types": "^7.22.5"
      }
    },
    "@babel/helper-hoist-variables": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-hoist-variables/-/helper-hoist-variables-7.22.5.tgz",
      "integrity": "sha512-wGjk9QZVzvknA6yKIUURb8zY3grXCcOZt+/7Wcy8O2uctxhplmUPkOdlgoNhmdVee2c92JXbf1xpMtVNbfoxRw==",
      "requires": {
        "@babel/types": "^7.22.5"
      }
    },
    "@babel/helper-member-expression-to-functions": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.22.5.tgz",
      "integrity": "sha512-aBiH1NKMG0H2cGZqspNvsaBe6wNGjbJjuLy29aU+eDZjSbbN53BaxlpB02xm9v34pLTZ1nIQPFYn2qMZoa5BQQ==",
      "requires": {
        "@babel/types": "^7.22.5"
      }
    },
    "@babel/helper-module-imports": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.22.5.tgz",
      "integrity": "sha512-8Dl6+HD/cKifutF5qGd/8ZJi84QeAKh+CEe1sBzz8UayBBGg1dAIJrdHOcOM5b2MpzWL2yuotJTtGjETq0qjXg==",
      "requires": {
        "@babel/types": "^7.22.5"
      }
    },
    "@babel/helper-module-transforms": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.22.5.tgz",
      "integrity": "sha512-+hGKDt/Ze8GFExiVHno/2dvG5IdstpzCq0y4Qc9OJ25D4q3pKfiIP/4Vp3/JvhDkLKsDK2api3q3fpIgiIF5bw==",
      "requires": {
        "@babel/helper-environment-visitor": "^7.22.5",
        "@babel/helper-module-imports": "^7.22.5",
        "@babel/helper-simple-access": "^7.22.5",
        "@babel/helper-split-export-declaration": "^7.22.5",
        "@babel/helper-validator-identifier": "^7.22.5",
        "@babel/template": "^7.22.5",
        "@babel/traverse": "^7.22.5",
        "@babel/types": "^7.22.5"
      }
    },
    "@babel/helper-optimise-call-expression": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.22.5.tgz",
      "integrity": "sha512-HBwaojN0xFRx4yIvpwGqxiV2tUfl7401jlok564NgB9EHS1y6QT17FmKWm4ztqjeVdXLuC4fSvHc5ePpQjoTbw==",
      "requires": {
        "@babel/types": "^7.22.5"
      }
    },
    "@babel/helper-plugin-utils": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.22.5.tgz",
      "integrity": "sha512-uLls06UVKgFG9QD4OeFYLEGteMIAa5kpTPcFL28yuCIIzsf6ZyKZMllKVOCZFhiZ5ptnwX4mtKdWCBE/uT4amg=="
    },
    "@babel/helper-remap-async-to-generator": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-remap-async-to-generator/-/helper-remap-async-to-generator-7.22.5.tgz",
      "integrity": "sha512-cU0Sq1Rf4Z55fgz7haOakIyM7+x/uCFwXpLPaeRzfoUtAEAuUZjZvFPjL/rk5rW693dIgn2hng1W7xbT7lWT4g==",
      "requires": {
        "@babel/helper-annotate-as-pure": "^7.22.5",
        "@babel/helper-environment-visitor": "^7.22.5",
        "@babel/helper-wrap-function": "^7.22.5",
        "@babel/types": "^7.22.5"
      }
    },
    "@babel/helper-replace-supers": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-replace-supers/-/helper-replace-supers-7.22.5.tgz",
      "integrity": "sha512-aLdNM5I3kdI/V9xGNyKSF3X/gTyMUBohTZ+/3QdQKAA9vxIiy12E+8E2HoOP1/DjeqU+g6as35QHJNMDDYpuCg==",
      "requires": {
        "@babel/helper-environment-visitor": "^7.22.5",
        "@babel/helper-member-expression-to-functions": "^7.22.5",
        "@babel/helper-optimise-call-expression": "^7.22.5",
        "@babel/template": "^7.22.5",
        "@babel/traverse": "^7.22.5",
        "@babel/types": "^7.22.5"
      }
    },
    "@babel/helper-simple-access": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-simple-access/-/helper-simple-access-7.22.5.tgz",
      "integrity": "sha512-n0H99E/K+Bika3++WNL17POvo4rKWZ7lZEp1Q+fStVbUi8nxPQEBOlTmCOxW/0JsS56SKKQ+ojAe2pHKJHN35w==",
      "requires": {
        "@babel/types": "^7.22.5"
      }
    },
    "@babel/helper-skip-transparent-expression-wrappers": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-skip-transparent-expression-wrappers/-/helper-skip-transparent-expression-wrappers-7.22.5.tgz",
      "integrity": "sha512-tK14r66JZKiC43p8Ki33yLBVJKlQDFoA8GYN67lWCDCqoL6EMMSuM9b+Iff2jHaM/RRFYl7K+iiru7hbRqNx8Q==",
      "requires": {
        "@babel/types": "^7.22.5"
      }
    },
    "@babel/helper-split-export-declaration": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.22.5.tgz",
      "integrity": "sha512-thqK5QFghPKWLhAV321lxF95yCg2K3Ob5yw+M3VHWfdia0IkPXUtoLH8x/6Fh486QUvzhb8YOWHChTVen2/PoQ==",
      "requires": {
        "@babel/types": "^7.22.5"
      }
    },
    "@babel/helper-string-parser": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.22.5.tgz",
      "integrity": "sha512-mM4COjgZox8U+JcXQwPijIZLElkgEpO5rsERVDJTc2qfCDfERyob6k5WegS14SX18IIjv+XD+GrqNumY5JRCDw=="
    },
    "@babel/helper-validator-identifier": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.22.5.tgz",
      "integrity": "sha512-aJXu+6lErq8ltp+JhkJUfk1MTGyuA4v7f3pA+BJ5HLfNC6nAQ0Cpi9uOquUj8Hehg0aUiHzWQbOVJGao6ztBAQ=="
    },
    "@babel/helper-validator-option": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.22.5.tgz",
      "integrity": "sha512-R3oB6xlIVKUnxNUxbmgq7pKjxpru24zlimpE8WK47fACIlM0II/Hm1RS8IaOI7NgCr6LNS+jl5l75m20npAziw=="
    },
    "@babel/helper-wrap-function": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-wrap-function/-/helper-wrap-function-7.22.5.tgz",
      "integrity": "sha512-bYqLIBSEshYcYQyfks8ewYA8S30yaGSeRslcvKMvoUk6HHPySbxHq9YRi6ghhzEU+yhQv9bP/jXnygkStOcqZw==",
      "requires": {
        "@babel/helper-function-name": "^7.22.5",
        "@babel/template": "^7.22.5",
        "@babel/traverse": "^7.22.5",
        "@babel/types": "^7.22.5"
      }
    },
    "@babel/helpers": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/helpers/-/helpers-7.22.5.tgz",
      "integrity": "sha512-pSXRmfE1vzcUIDFQcSGA5Mr+GxBV9oiRKDuDxXvWQQBCh8HoIjs/2DlDB7H8smac1IVrB9/xdXj2N3Wol9Cr+Q==",
      "requires": {
        "@babel/template": "^7.22.5",
        "@babel/traverse": "^7.22.5",
        "@babel/types": "^7.22.5"
      }
    },
    "@babel/highlight": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/highlight/-/highlight-7.22.5.tgz",
      "integrity": "sha512-BSKlD1hgnedS5XRnGOljZawtag7H1yPfQp0tdNJCHoH6AZ+Pcm9VvkrK59/Yy593Ypg0zMxH2BxD1VPYUQ7UIw==",
      "requires": {
        "@babel/helper-validator-identifier": "^7.22.5",
        "chalk": "^2.0.0",
        "js-tokens": "^4.0.0"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          }
        },
        "color-convert": {
          "version": "1.9.3",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
          "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
          "requires": {
            "color-name": "1.1.3"
          }
        },
        "color-name": {
          "version": "1.1.3",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
          "integrity": "sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw=="
        }
      }
    },
    "@babel/parser": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.22.5.tgz",
      "integrity": "sha512-DFZMC9LJUG9PLOclRC32G63UXwzqS2koQC8dkx+PLdmt1xSePYpbT/NbsrJy8Q/muXz7o/h/d4A7Fuyixm559Q=="
    },
    "@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression/-/plugin-bugfix-safari-id-destructuring-collision-in-function-expression-7.22.5.tgz",
      "integrity": "sha512-NP1M5Rf+u2Gw9qfSO4ihjcTGW5zXTi36ITLd4/EoAcEhIZ0yjMqmftDNl3QC19CX7olhrjpyU454g/2W7X0jvQ==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5"
      }
    },
    "@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining/-/plugin-bugfix-v8-spread-parameters-in-optional-chaining-7.22.5.tgz",
      "integrity": "sha512-31Bb65aZaUwqCbWMnZPduIZxCBngHFlzyN6Dq6KAJjtx+lx6ohKHubc61OomYi7XwVD4Ol0XCVz4h+pYFR048g==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/helper-skip-transparent-expression-wrappers": "^7.22.5",
        "@babel/plugin-transform-optional-chaining": "^7.22.5"
      }
    },
    "@babel/plugin-proposal-private-property-in-object": {
      "version": "7.21.0-placeholder-for-preset-env.2",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-private-property-in-object/-/plugin-proposal-private-property-in-object-7.21.0-placeholder-for-preset-env.2.tgz",
      "integrity": "sha512-SOSkfJDddaM7mak6cPEpswyTRnuRltl429hMraQEglW+OkovnCzsiszTmsrlY//qLFjCpQDFRvjdm2wA5pPm9w==",
      "requires": {}
    },
    "@babel/plugin-proposal-unicode-property-regex": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-unicode-property-regex/-/plugin-proposal-unicode-property-regex-7.18.6.tgz",
      "integrity": "sha512-2BShG/d5yoZyXZfVePH91urL5wTG6ASZU9M4o03lKK8u8UW1y08OMttBSOADTcJrnPMpvDXRG3G8fyLh4ovs8w==",
      "requires": {
        "@babel/helper-create-regexp-features-plugin": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.6"
      }
    },
    "@babel/plugin-syntax-async-generators": {
      "version": "7.8.4",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-async-generators/-/plugin-syntax-async-generators-7.8.4.tgz",
      "integrity": "sha512-tycmZxkGfZaxhMRbXlPXuVFpdWlXpir2W4AMhSJgRKzk/eDlIXOhb2LHWoLpDF7TEHylV5zNhykX6KAgHJmTNw==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.0"
      }
    },
    "@babel/plugin-syntax-class-properties": {
      "version": "7.12.13",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-class-properties/-/plugin-syntax-class-properties-7.12.13.tgz",
      "integrity": "sha512-fm4idjKla0YahUNgFNLCB0qySdsoPiZP3iQE3rky0mBUtMZ23yDJ9SJdg6dXTSDnulOVqiF3Hgr9nbXvXTQZYA==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.12.13"
      }
    },
    "@babel/plugin-syntax-class-static-block": {
      "version": "7.14.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-class-static-block/-/plugin-syntax-class-static-block-7.14.5.tgz",
      "integrity": "sha512-b+YyPmr6ldyNnM6sqYeMWE+bgJcJpO6yS4QD7ymxgH34GBPNDM/THBh8iunyvKIZztiwLH4CJZ0RxTk9emgpjw==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.14.5"
      }
    },
    "@babel/plugin-syntax-dynamic-import": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-dynamic-import/-/plugin-syntax-dynamic-import-7.8.3.tgz",
      "integrity": "sha512-5gdGbFon+PszYzqs83S3E5mpi7/y/8M9eC90MRTZfduQOYW76ig6SOSPNe41IG5LoP3FGBn2N0RjVDSQiS94kQ==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.0"
      }
    },
    "@babel/plugin-syntax-export-namespace-from": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-export-namespace-from/-/plugin-syntax-export-namespace-from-7.8.3.tgz",
      "integrity": "sha512-MXf5laXo6c1IbEbegDmzGPwGNTsHZmEy6QGznu5Sh2UCWvueywb2ee+CCE4zQiZstxU9BMoQO9i6zUFSY0Kj0Q==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-syntax-import-assertions": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-import-assertions/-/plugin-syntax-import-assertions-7.22.5.tgz",
      "integrity": "sha512-rdV97N7KqsRzeNGoWUOK6yUsWarLjE5Su/Snk9IYPU9CwkWHs4t+rTGOvffTR8XGkJMTAdLfO0xVnXm8wugIJg==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5"
      }
    },
    "@babel/plugin-syntax-import-attributes": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-import-attributes/-/plugin-syntax-import-attributes-7.22.5.tgz",
      "integrity": "sha512-KwvoWDeNKPETmozyFE0P2rOLqh39EoQHNjqizrI5B8Vt0ZNS7M56s7dAiAqbYfiAYOuIzIh96z3iR2ktgu3tEg==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5"
      }
    },
    "@babel/plugin-syntax-import-meta": {
      "version": "7.10.4",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-import-meta/-/plugin-syntax-import-meta-7.10.4.tgz",
      "integrity": "sha512-Yqfm+XDx0+Prh3VSeEQCPU81yC+JWZ2pDPFSS4ZdpfZhp4MkFMaDC1UqseovEKwSUpnIL7+vK+Clp7bfh0iD7g==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.10.4"
      }
    },
    "@babel/plugin-syntax-json-strings": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-json-strings/-/plugin-syntax-json-strings-7.8.3.tgz",
      "integrity": "sha512-lY6kdGpWHvjoe2vk4WrAapEuBR69EMxZl+RoGRhrFGNYVK8mOPAW8VfbT/ZgrFbXlDNiiaxQnAtgVCZ6jv30EA==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.0"
      }
    },
    "@babel/plugin-syntax-jsx": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-jsx/-/plugin-syntax-jsx-7.22.5.tgz",
      "integrity": "sha512-gvyP4hZrgrs/wWMaocvxZ44Hw0b3W8Pe+cMxc8V1ULQ07oh8VNbIRaoD1LRZVTvD+0nieDKjfgKg89sD7rrKrg==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5"
      }
    },
    "@babel/plugin-syntax-logical-assignment-operators": {
      "version": "7.10.4",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-logical-assignment-operators/-/plugin-syntax-logical-assignment-operators-7.10.4.tgz",
      "integrity": "sha512-d8waShlpFDinQ5MtvGU9xDAOzKH47+FFoney2baFIoMr952hKOLp1HR7VszoZvOsV/4+RRszNY7D17ba0te0ig==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.10.4"
      }
    },
    "@babel/plugin-syntax-nullish-coalescing-operator": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-nullish-coalescing-operator/-/plugin-syntax-nullish-coalescing-operator-7.8.3.tgz",
      "integrity": "sha512-aSff4zPII1u2QD7y+F8oDsz19ew4IGEJg9SVW+bqwpwtfFleiQDMdzA/R+UlWDzfnHFCxxleFT0PMIrR36XLNQ==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.0"
      }
    },
    "@babel/plugin-syntax-numeric-separator": {
      "version": "7.10.4",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-numeric-separator/-/plugin-syntax-numeric-separator-7.10.4.tgz",
      "integrity": "sha512-9H6YdfkcK/uOnY/K7/aA2xpzaAgkQn37yzWUMRK7OaPOqOpGS1+n0H5hxT9AUw9EsSjPW8SVyMJwYRtWs3X3ug==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.10.4"
      }
    },
    "@babel/plugin-syntax-object-rest-spread": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-object-rest-spread/-/plugin-syntax-object-rest-spread-7.8.3.tgz",
      "integrity": "sha512-XoqMijGZb9y3y2XskN+P1wUGiVwWZ5JmoDRwx5+3GmEplNyVM2s2Dg8ILFQm8rWM48orGy5YpI5Bl8U1y7ydlA==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.0"
      }
    },
    "@babel/plugin-syntax-optional-catch-binding": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-optional-catch-binding/-/plugin-syntax-optional-catch-binding-7.8.3.tgz",
      "integrity": "sha512-6VPD0Pc1lpTqw0aKoeRTMiB+kWhAoT24PA+ksWSBrFtl5SIRVpZlwN3NNPQjehA2E/91FV3RjLWoVTglWcSV3Q==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.0"
      }
    },
    "@babel/plugin-syntax-optional-chaining": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-optional-chaining/-/plugin-syntax-optional-chaining-7.8.3.tgz",
      "integrity": "sha512-KoK9ErH1MBlCPxV0VANkXW2/dw4vlbGDrFgz8bmUsBGYkFRcbRwMh6cIJubdPrkxRwuGdtCk0v/wPTKbQgBjkg==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.0"
      }
    },
    "@babel/plugin-syntax-private-property-in-object": {
      "version": "7.14.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-private-property-in-object/-/plugin-syntax-private-property-in-object-7.14.5.tgz",
      "integrity": "sha512-0wVnp9dxJ72ZUJDV27ZfbSj6iHLoytYZmh3rFcxNnvsJF3ktkzLDZPy/mA17HGsaQT3/DQsWYX1f1QGWkCoVUg==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.14.5"
      }
    },
    "@babel/plugin-syntax-top-level-await": {
      "version": "7.14.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-top-level-await/-/plugin-syntax-top-level-await-7.14.5.tgz",
      "integrity": "sha512-hx++upLv5U1rgYfwe1xBQUhRmU41NEvpUvrp8jkrSCdvGSnM5/qdRMtylJ6PG5OFkBaHkbTAKTnd3/YyESRHFw==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.14.5"
      }
    },
    "@babel/plugin-syntax-typescript": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-typescript/-/plugin-syntax-typescript-7.22.5.tgz",
      "integrity": "sha512-1mS2o03i7t1c6VzH6fdQ3OA8tcEIxwG18zIPRp+UY1Ihv6W+XZzBCVxExF9upussPXJ0xE9XRHwMoNs1ep/nRQ==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5"
      }
    },
    "@babel/plugin-syntax-unicode-sets-regex": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-unicode-sets-regex/-/plugin-syntax-unicode-sets-regex-7.18.6.tgz",
      "integrity": "sha512-727YkEAPwSIQTv5im8QHz3upqp92JTWhidIC81Tdx4VJYIte/VndKf1qKrfnnhPLiPghStWfvC/iFaMCQu7Nqg==",
      "requires": {
        "@babel/helper-create-regexp-features-plugin": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.6"
      }
    },
    "@babel/plugin-transform-arrow-functions": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-arrow-functions/-/plugin-transform-arrow-functions-7.22.5.tgz",
      "integrity": "sha512-26lTNXoVRdAnsaDXPpvCNUq+OVWEVC6bx7Vvz9rC53F2bagUWW4u4ii2+h8Fejfh7RYqPxn+libeFBBck9muEw==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5"
      }
    },
    "@babel/plugin-transform-async-generator-functions": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-async-generator-functions/-/plugin-transform-async-generator-functions-7.22.5.tgz",
      "integrity": "sha512-gGOEvFzm3fWoyD5uZq7vVTD57pPJ3PczPUD/xCFGjzBpUosnklmXyKnGQbbbGs1NPNPskFex0j93yKbHt0cHyg==",
      "requires": {
        "@babel/helper-environment-visitor": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/helper-remap-async-to-generator": "^7.22.5",
        "@babel/plugin-syntax-async-generators": "^7.8.4"
      }
    },
    "@babel/plugin-transform-async-to-generator": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-async-to-generator/-/plugin-transform-async-to-generator-7.22.5.tgz",
      "integrity": "sha512-b1A8D8ZzE/VhNDoV1MSJTnpKkCG5bJo+19R4o4oy03zM7ws8yEMK755j61Dc3EyvdysbqH5BOOTquJ7ZX9C6vQ==",
      "requires": {
        "@babel/helper-module-imports": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/helper-remap-async-to-generator": "^7.22.5"
      }
    },
    "@babel/plugin-transform-block-scoped-functions": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-block-scoped-functions/-/plugin-transform-block-scoped-functions-7.22.5.tgz",
      "integrity": "sha512-tdXZ2UdknEKQWKJP1KMNmuF5Lx3MymtMN/pvA+p/VEkhK8jVcQ1fzSy8KM9qRYhAf2/lV33hoMPKI/xaI9sADA==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5"
      }
    },
    "@babel/plugin-transform-block-scoping": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-block-scoping/-/plugin-transform-block-scoping-7.22.5.tgz",
      "integrity": "sha512-EcACl1i5fSQ6bt+YGuU/XGCeZKStLmyVGytWkpyhCLeQVA0eu6Wtiw92V+I1T/hnezUv7j74dA/Ro69gWcU+hg==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5"
      }
    },
    "@babel/plugin-transform-class-properties": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-class-properties/-/plugin-transform-class-properties-7.22.5.tgz",
      "integrity": "sha512-nDkQ0NfkOhPTq8YCLiWNxp1+f9fCobEjCb0n8WdbNUBc4IB5V7P1QnX9IjpSoquKrXF5SKojHleVNs2vGeHCHQ==",
      "requires": {
        "@babel/helper-create-class-features-plugin": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5"
      }
    },
    "@babel/plugin-transform-class-static-block": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-class-static-block/-/plugin-transform-class-static-block-7.22.5.tgz",
      "integrity": "sha512-SPToJ5eYZLxlnp1UzdARpOGeC2GbHvr9d/UV0EukuVx8atktg194oe+C5BqQ8jRTkgLRVOPYeXRSBg1IlMoVRA==",
      "requires": {
        "@babel/helper-create-class-features-plugin": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/plugin-syntax-class-static-block": "^7.14.5"
      }
    },
    "@babel/plugin-transform-classes": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-classes/-/plugin-transform-classes-7.22.5.tgz",
      "integrity": "sha512-2edQhLfibpWpsVBx2n/GKOz6JdGQvLruZQfGr9l1qes2KQaWswjBzhQF7UDUZMNaMMQeYnQzxwOMPsbYF7wqPQ==",
      "requires": {
        "@babel/helper-annotate-as-pure": "^7.22.5",
        "@babel/helper-compilation-targets": "^7.22.5",
        "@babel/helper-environment-visitor": "^7.22.5",
        "@babel/helper-function-name": "^7.22.5",
        "@babel/helper-optimise-call-expression": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/helper-replace-supers": "^7.22.5",
        "@babel/helper-split-export-declaration": "^7.22.5",
        "globals": "^11.1.0"
      }
    },
    "@babel/plugin-transform-computed-properties": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-computed-properties/-/plugin-transform-computed-properties-7.22.5.tgz",
      "integrity": "sha512-4GHWBgRf0krxPX+AaPtgBAlTgTeZmqDynokHOX7aqqAB4tHs3U2Y02zH6ETFdLZGcg9UQSD1WCmkVrE9ErHeOg==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/template": "^7.22.5"
      }
    },
    "@babel/plugin-transform-destructuring": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-destructuring/-/plugin-transform-destructuring-7.22.5.tgz",
      "integrity": "sha512-GfqcFuGW8vnEqTUBM7UtPd5A4q797LTvvwKxXTgRsFjoqaJiEg9deBG6kWeQYkVEL569NpnmpC0Pkr/8BLKGnQ==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5"
      }
    },
    "@babel/plugin-transform-dotall-regex": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-dotall-regex/-/plugin-transform-dotall-regex-7.22.5.tgz",
      "integrity": "sha512-5/Yk9QxCQCl+sOIB1WelKnVRxTJDSAIxtJLL2/pqL14ZVlbH0fUQUZa/T5/UnQtBNgghR7mfB8ERBKyKPCi7Vw==",
      "requires": {
        "@babel/helper-create-regexp-features-plugin": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5"
      }
    },
    "@babel/plugin-transform-duplicate-keys": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-duplicate-keys/-/plugin-transform-duplicate-keys-7.22.5.tgz",
      "integrity": "sha512-dEnYD+9BBgld5VBXHnF/DbYGp3fqGMsyxKbtD1mDyIA7AkTSpKXFhCVuj/oQVOoALfBs77DudA0BE4d5mcpmqw==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5"
      }
    },
    "@babel/plugin-transform-dynamic-import": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-dynamic-import/-/plugin-transform-dynamic-import-7.22.5.tgz",
      "integrity": "sha512-0MC3ppTB1AMxd8fXjSrbPa7LT9hrImt+/fcj+Pg5YMD7UQyWp/02+JWpdnCymmsXwIx5Z+sYn1bwCn4ZJNvhqQ==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/plugin-syntax-dynamic-import": "^7.8.3"
      }
    },
    "@babel/plugin-transform-exponentiation-operator": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-exponentiation-operator/-/plugin-transform-exponentiation-operator-7.22.5.tgz",
      "integrity": "sha512-vIpJFNM/FjZ4rh1myqIya9jXwrwwgFRHPjT3DkUA9ZLHuzox8jiXkOLvwm1H+PQIP3CqfC++WPKeuDi0Sjdj1g==",
      "requires": {
        "@babel/helper-builder-binary-assignment-operator-visitor": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5"
      }
    },
    "@babel/plugin-transform-export-namespace-from": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-export-namespace-from/-/plugin-transform-export-namespace-from-7.22.5.tgz",
      "integrity": "sha512-X4hhm7FRnPgd4nDA4b/5V280xCx6oL7Oob5+9qVS5C13Zq4bh1qq7LU0GgRU6b5dBWBvhGaXYVB4AcN6+ol6vg==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/plugin-syntax-export-namespace-from": "^7.8.3"
      }
    },
    "@babel/plugin-transform-for-of": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-for-of/-/plugin-transform-for-of-7.22.5.tgz",
      "integrity": "sha512-3kxQjX1dU9uudwSshyLeEipvrLjBCVthCgeTp6CzE/9JYrlAIaeekVxRpCWsDDfYTfRZRoCeZatCQvwo+wvK8A==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5"
      }
    },
    "@babel/plugin-transform-function-name": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-function-name/-/plugin-transform-function-name-7.22.5.tgz",
      "integrity": "sha512-UIzQNMS0p0HHiQm3oelztj+ECwFnj+ZRV4KnguvlsD2of1whUeM6o7wGNj6oLwcDoAXQ8gEqfgC24D+VdIcevg==",
      "requires": {
        "@babel/helper-compilation-targets": "^7.22.5",
        "@babel/helper-function-name": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5"
      }
    },
    "@babel/plugin-transform-json-strings": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-json-strings/-/plugin-transform-json-strings-7.22.5.tgz",
      "integrity": "sha512-DuCRB7fu8MyTLbEQd1ew3R85nx/88yMoqo2uPSjevMj3yoN7CDM8jkgrY0wmVxfJZyJ/B9fE1iq7EQppWQmR5A==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/plugin-syntax-json-strings": "^7.8.3"
      }
    },
    "@babel/plugin-transform-literals": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-literals/-/plugin-transform-literals-7.22.5.tgz",
      "integrity": "sha512-fTLj4D79M+mepcw3dgFBTIDYpbcB9Sm0bpm4ppXPaO+U+PKFFyV9MGRvS0gvGw62sd10kT5lRMKXAADb9pWy8g==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5"
      }
    },
    "@babel/plugin-transform-logical-assignment-operators": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-logical-assignment-operators/-/plugin-transform-logical-assignment-operators-7.22.5.tgz",
      "integrity": "sha512-MQQOUW1KL8X0cDWfbwYP+TbVbZm16QmQXJQ+vndPtH/BoO0lOKpVoEDMI7+PskYxH+IiE0tS8xZye0qr1lGzSA==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/plugin-syntax-logical-assignment-operators": "^7.10.4"
      }
    },
    "@babel/plugin-transform-member-expression-literals": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-member-expression-literals/-/plugin-transform-member-expression-literals-7.22.5.tgz",
      "integrity": "sha512-RZEdkNtzzYCFl9SE9ATaUMTj2hqMb4StarOJLrZRbqqU4HSBE7UlBw9WBWQiDzrJZJdUWiMTVDI6Gv/8DPvfew==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5"
      }
    },
    "@babel/plugin-transform-modules-amd": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-amd/-/plugin-transform-modules-amd-7.22.5.tgz",
      "integrity": "sha512-R+PTfLTcYEmb1+kK7FNkhQ1gP4KgjpSO6HfH9+f8/yfp2Nt3ggBjiVpRwmwTlfqZLafYKJACy36yDXlEmI9HjQ==",
      "requires": {
        "@babel/helper-module-transforms": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5"
      }
    },
    "@babel/plugin-transform-modules-commonjs": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-commonjs/-/plugin-transform-modules-commonjs-7.22.5.tgz",
      "integrity": "sha512-B4pzOXj+ONRmuaQTg05b3y/4DuFz3WcCNAXPLb2Q0GT0TrGKGxNKV4jwsXts+StaM0LQczZbOpj8o1DLPDJIiA==",
      "requires": {
        "@babel/helper-module-transforms": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/helper-simple-access": "^7.22.5"
      }
    },
    "@babel/plugin-transform-modules-systemjs": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-systemjs/-/plugin-transform-modules-systemjs-7.22.5.tgz",
      "integrity": "sha512-emtEpoaTMsOs6Tzz+nbmcePl6AKVtS1yC4YNAeMun9U8YCsgadPNxnOPQ8GhHFB2qdx+LZu9LgoC0Lthuu05DQ==",
      "requires": {
        "@babel/helper-hoist-variables": "^7.22.5",
        "@babel/helper-module-transforms": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/helper-validator-identifier": "^7.22.5"
      }
    },
    "@babel/plugin-transform-modules-umd": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-umd/-/plugin-transform-modules-umd-7.22.5.tgz",
      "integrity": "sha512-+S6kzefN/E1vkSsKx8kmQuqeQsvCKCd1fraCM7zXm4SFoggI099Tr4G8U81+5gtMdUeMQ4ipdQffbKLX0/7dBQ==",
      "requires": {
        "@babel/helper-module-transforms": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5"
      }
    },
    "@babel/plugin-transform-named-capturing-groups-regex": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-named-capturing-groups-regex/-/plugin-transform-named-capturing-groups-regex-7.22.5.tgz",
      "integrity": "sha512-YgLLKmS3aUBhHaxp5hi1WJTgOUb/NCuDHzGT9z9WTt3YG+CPRhJs6nprbStx6DnWM4dh6gt7SU3sZodbZ08adQ==",
      "requires": {
        "@babel/helper-create-regexp-features-plugin": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5"
      }
    },
    "@babel/plugin-transform-new-target": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-new-target/-/plugin-transform-new-target-7.22.5.tgz",
      "integrity": "sha512-AsF7K0Fx/cNKVyk3a+DW0JLo+Ua598/NxMRvxDnkpCIGFh43+h/v2xyhRUYf6oD8gE4QtL83C7zZVghMjHd+iw==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5"
      }
    },
    "@babel/plugin-transform-nullish-coalescing-operator": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-nullish-coalescing-operator/-/plugin-transform-nullish-coalescing-operator-7.22.5.tgz",
      "integrity": "sha512-6CF8g6z1dNYZ/VXok5uYkkBBICHZPiGEl7oDnAx2Mt1hlHVHOSIKWJaXHjQJA5VB43KZnXZDIexMchY4y2PGdA==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/plugin-syntax-nullish-coalescing-operator": "^7.8.3"
      }
    },
    "@babel/plugin-transform-numeric-separator": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-numeric-separator/-/plugin-transform-numeric-separator-7.22.5.tgz",
      "integrity": "sha512-NbslED1/6M+sXiwwtcAB/nieypGw02Ejf4KtDeMkCEpP6gWFMX1wI9WKYua+4oBneCCEmulOkRpwywypVZzs/g==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/plugin-syntax-numeric-separator": "^7.10.4"
      }
    },
    "@babel/plugin-transform-object-rest-spread": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-object-rest-spread/-/plugin-transform-object-rest-spread-7.22.5.tgz",
      "integrity": "sha512-Kk3lyDmEslH9DnvCDA1s1kkd3YWQITiBOHngOtDL9Pt6BZjzqb6hiOlb8VfjiiQJ2unmegBqZu0rx5RxJb5vmQ==",
      "requires": {
        "@babel/compat-data": "^7.22.5",
        "@babel/helper-compilation-targets": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/plugin-syntax-object-rest-spread": "^7.8.3",
        "@babel/plugin-transform-parameters": "^7.22.5"
      }
    },
    "@babel/plugin-transform-object-super": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-object-super/-/plugin-transform-object-super-7.22.5.tgz",
      "integrity": "sha512-klXqyaT9trSjIUrcsYIfETAzmOEZL3cBYqOYLJxBHfMFFggmXOv+NYSX/Jbs9mzMVESw/WycLFPRx8ba/b2Ipw==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/helper-replace-supers": "^7.22.5"
      }
    },
    "@babel/plugin-transform-optional-catch-binding": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-optional-catch-binding/-/plugin-transform-optional-catch-binding-7.22.5.tgz",
      "integrity": "sha512-pH8orJahy+hzZje5b8e2QIlBWQvGpelS76C63Z+jhZKsmzfNaPQ+LaW6dcJ9bxTpo1mtXbgHwy765Ro3jftmUg==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/plugin-syntax-optional-catch-binding": "^7.8.3"
      }
    },
    "@babel/plugin-transform-optional-chaining": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-optional-chaining/-/plugin-transform-optional-chaining-7.22.5.tgz",
      "integrity": "sha512-AconbMKOMkyG+xCng2JogMCDcqW8wedQAqpVIL4cOSescZ7+iW8utC6YDZLMCSUIReEA733gzRSaOSXMAt/4WQ==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/helper-skip-transparent-expression-wrappers": "^7.22.5",
        "@babel/plugin-syntax-optional-chaining": "^7.8.3"
      }
    },
    "@babel/plugin-transform-parameters": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-parameters/-/plugin-transform-parameters-7.22.5.tgz",
      "integrity": "sha512-AVkFUBurORBREOmHRKo06FjHYgjrabpdqRSwq6+C7R5iTCZOsM4QbcB27St0a4U6fffyAOqh3s/qEfybAhfivg==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5"
      }
    },
    "@babel/plugin-transform-private-methods": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-private-methods/-/plugin-transform-private-methods-7.22.5.tgz",
      "integrity": "sha512-PPjh4gyrQnGe97JTalgRGMuU4icsZFnWkzicB/fUtzlKUqvsWBKEpPPfr5a2JiyirZkHxnAqkQMO5Z5B2kK3fA==",
      "requires": {
        "@babel/helper-create-class-features-plugin": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5"
      }
    },
    "@babel/plugin-transform-private-property-in-object": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-private-property-in-object/-/plugin-transform-private-property-in-object-7.22.5.tgz",
      "integrity": "sha512-/9xnaTTJcVoBtSSmrVyhtSvO3kbqS2ODoh2juEU72c3aYonNF0OMGiaz2gjukyKM2wBBYJP38S4JiE0Wfb5VMQ==",
      "requires": {
        "@babel/helper-annotate-as-pure": "^7.22.5",
        "@babel/helper-create-class-features-plugin": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/plugin-syntax-private-property-in-object": "^7.14.5"
      }
    },
    "@babel/plugin-transform-property-literals": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-property-literals/-/plugin-transform-property-literals-7.22.5.tgz",
      "integrity": "sha512-TiOArgddK3mK/x1Qwf5hay2pxI6wCZnvQqrFSqbtg1GLl2JcNMitVH/YnqjP+M31pLUeTfzY1HAXFDnUBV30rQ==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5"
      }
    },
    "@babel/plugin-transform-react-display-name": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-display-name/-/plugin-transform-react-display-name-7.22.5.tgz",
      "integrity": "sha512-PVk3WPYudRF5z4GKMEYUrLjPl38fJSKNaEOkFuoprioowGuWN6w2RKznuFNSlJx7pzzXXStPUnNSOEO0jL5EVw==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5"
      }
    },
    "@babel/plugin-transform-react-jsx": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx/-/plugin-transform-react-jsx-7.22.5.tgz",
      "integrity": "sha512-rog5gZaVbUip5iWDMTYbVM15XQq+RkUKhET/IHR6oizR+JEoN6CAfTTuHcK4vwUyzca30qqHqEpzBOnaRMWYMA==",
      "requires": {
        "@babel/helper-annotate-as-pure": "^7.22.5",
        "@babel/helper-module-imports": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/plugin-syntax-jsx": "^7.22.5",
        "@babel/types": "^7.22.5"
      }
    },
    "@babel/plugin-transform-react-jsx-development": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-development/-/plugin-transform-react-jsx-development-7.22.5.tgz",
      "integrity": "sha512-bDhuzwWMuInwCYeDeMzyi7TaBgRQei6DqxhbyniL7/VG4RSS7HtSL2QbY4eESy1KJqlWt8g3xeEBGPuo+XqC8A==",
      "requires": {
        "@babel/plugin-transform-react-jsx": "^7.22.5"
      }
    },
    "@babel/plugin-transform-react-pure-annotations": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-pure-annotations/-/plugin-transform-react-pure-annotations-7.22.5.tgz",
      "integrity": "sha512-gP4k85wx09q+brArVinTXhWiyzLl9UpmGva0+mWyKxk6JZequ05x3eUcIUE+FyttPKJFRRVtAvQaJ6YF9h1ZpA==",
      "requires": {
        "@babel/helper-annotate-as-pure": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5"
      }
    },
    "@babel/plugin-transform-regenerator": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-regenerator/-/plugin-transform-regenerator-7.22.5.tgz",
      "integrity": "sha512-rR7KePOE7gfEtNTh9Qw+iO3Q/e4DEsoQ+hdvM6QUDH7JRJ5qxq5AA52ZzBWbI5i9lfNuvySgOGP8ZN7LAmaiPw==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5",
        "regenerator-transform": "^0.15.1"
      }
    },
    "@babel/plugin-transform-reserved-words": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-reserved-words/-/plugin-transform-reserved-words-7.22.5.tgz",
      "integrity": "sha512-DTtGKFRQUDm8svigJzZHzb/2xatPc6TzNvAIJ5GqOKDsGFYgAskjRulbR/vGsPKq3OPqtexnz327qYpP57RFyA==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5"
      }
    },
    "@babel/plugin-transform-runtime": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-runtime/-/plugin-transform-runtime-7.22.5.tgz",
      "integrity": "sha512-bg4Wxd1FWeFx3daHFTWk1pkSWK/AyQuiyAoeZAOkAOUBjnZPH6KT7eMxouV47tQ6hl6ax2zyAWBdWZXbrvXlaw==",
      "requires": {
        "@babel/helper-module-imports": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5",
        "babel-plugin-polyfill-corejs2": "^0.4.3",
        "babel-plugin-polyfill-corejs3": "^0.8.1",
        "babel-plugin-polyfill-regenerator": "^0.5.0",
        "semver": "^6.3.0"
      },
      "dependencies": {
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw=="
        }
      }
    },
    "@babel/plugin-transform-shorthand-properties": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-shorthand-properties/-/plugin-transform-shorthand-properties-7.22.5.tgz",
      "integrity": "sha512-vM4fq9IXHscXVKzDv5itkO1X52SmdFBFcMIBZ2FRn2nqVYqw6dBexUgMvAjHW+KXpPPViD/Yo3GrDEBaRC0QYA==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5"
      }
    },
    "@babel/plugin-transform-spread": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-spread/-/plugin-transform-spread-7.22.5.tgz",
      "integrity": "sha512-5ZzDQIGyvN4w8+dMmpohL6MBo+l2G7tfC/O2Dg7/hjpgeWvUx8FzfeOKxGog9IimPa4YekaQ9PlDqTLOljkcxg==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/helper-skip-transparent-expression-wrappers": "^7.22.5"
      }
    },
    "@babel/plugin-transform-sticky-regex": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-sticky-regex/-/plugin-transform-sticky-regex-7.22.5.tgz",
      "integrity": "sha512-zf7LuNpHG0iEeiyCNwX4j3gDg1jgt1k3ZdXBKbZSoA3BbGQGvMiSvfbZRR3Dr3aeJe3ooWFZxOOG3IRStYp2Bw==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5"
      }
    },
    "@babel/plugin-transform-template-literals": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-template-literals/-/plugin-transform-template-literals-7.22.5.tgz",
      "integrity": "sha512-5ciOehRNf+EyUeewo8NkbQiUs4d6ZxiHo6BcBcnFlgiJfu16q0bQUw9Jvo0b0gBKFG1SMhDSjeKXSYuJLeFSMA==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5"
      }
    },
    "@babel/plugin-transform-typeof-symbol": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-typeof-symbol/-/plugin-transform-typeof-symbol-7.22.5.tgz",
      "integrity": "sha512-bYkI5lMzL4kPii4HHEEChkD0rkc+nvnlR6+o/qdqR6zrm0Sv/nodmyLhlq2DO0YKLUNd2VePmPRjJXSBh9OIdA==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5"
      }
    },
    "@babel/plugin-transform-typescript": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-typescript/-/plugin-transform-typescript-7.22.5.tgz",
      "integrity": "sha512-SMubA9S7Cb5sGSFFUlqxyClTA9zWJ8qGQrppNUm05LtFuN1ELRFNndkix4zUJrC9F+YivWwa1dHMSyo0e0N9dA==",
      "requires": {
        "@babel/helper-annotate-as-pure": "^7.22.5",
        "@babel/helper-create-class-features-plugin": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/plugin-syntax-typescript": "^7.22.5"
      }
    },
    "@babel/plugin-transform-unicode-escapes": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-unicode-escapes/-/plugin-transform-unicode-escapes-7.22.5.tgz",
      "integrity": "sha512-biEmVg1IYB/raUO5wT1tgfacCef15Fbzhkx493D3urBI++6hpJ+RFG4SrWMn0NEZLfvilqKf3QDrRVZHo08FYg==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5"
      }
    },
    "@babel/plugin-transform-unicode-property-regex": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-unicode-property-regex/-/plugin-transform-unicode-property-regex-7.22.5.tgz",
      "integrity": "sha512-HCCIb+CbJIAE6sXn5CjFQXMwkCClcOfPCzTlilJ8cUatfzwHlWQkbtV0zD338u9dZskwvuOYTuuaMaA8J5EI5A==",
      "requires": {
        "@babel/helper-create-regexp-features-plugin": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5"
      }
    },
    "@babel/plugin-transform-unicode-regex": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-unicode-regex/-/plugin-transform-unicode-regex-7.22.5.tgz",
      "integrity": "sha512-028laaOKptN5vHJf9/Arr/HiJekMd41hOEZYvNsrsXqJ7YPYuX2bQxh31fkZzGmq3YqHRJzYFFAVYvKfMPKqyg==",
      "requires": {
        "@babel/helper-create-regexp-features-plugin": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5"
      }
    },
    "@babel/plugin-transform-unicode-sets-regex": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-unicode-sets-regex/-/plugin-transform-unicode-sets-regex-7.22.5.tgz",
      "integrity": "sha512-lhMfi4FC15j13eKrh3DnYHjpGj6UKQHtNKTbtc1igvAhRy4+kLhV07OpLcsN0VgDEw/MjAvJO4BdMJsHwMhzCg==",
      "requires": {
        "@babel/helper-create-regexp-features-plugin": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5"
      }
    },
    "@babel/polyfill": {
      "version": "7.12.1",
      "resolved": "https://registry.npmjs.org/@babel/polyfill/-/polyfill-7.12.1.tgz",
      "integrity": "sha512-X0pi0V6gxLi6lFZpGmeNa4zxtwEmCs42isWLNjZZDE0Y8yVfgu0T2OAHlzBbdYlqbW/YXVvoBHpATEM+goCj8g==",
      "requires": {
        "core-js": "^2.6.5",
        "regenerator-runtime": "^0.13.4"
      }
    },
    "@babel/preset-env": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/preset-env/-/preset-env-7.22.5.tgz",
      "integrity": "sha512-fj06hw89dpiZzGZtxn+QybifF07nNiZjZ7sazs2aVDcysAZVGjW7+7iFYxg6GLNM47R/thYfLdrXc+2f11Vi9A==",
      "requires": {
        "@babel/compat-data": "^7.22.5",
        "@babel/helper-compilation-targets": "^7.22.5",
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/helper-validator-option": "^7.22.5",
        "@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression": "^7.22.5",
        "@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining": "^7.22.5",
        "@babel/plugin-proposal-private-property-in-object": "7.21.0-placeholder-for-preset-env.2",
        "@babel/plugin-syntax-async-generators": "^7.8.4",
        "@babel/plugin-syntax-class-properties": "^7.12.13",
        "@babel/plugin-syntax-class-static-block": "^7.14.5",
        "@babel/plugin-syntax-dynamic-import": "^7.8.3",
        "@babel/plugin-syntax-export-namespace-from": "^7.8.3",
        "@babel/plugin-syntax-import-assertions": "^7.22.5",
        "@babel/plugin-syntax-import-attributes": "^7.22.5",
        "@babel/plugin-syntax-import-meta": "^7.10.4",
        "@babel/plugin-syntax-json-strings": "^7.8.3",
        "@babel/plugin-syntax-logical-assignment-operators": "^7.10.4",
        "@babel/plugin-syntax-nullish-coalescing-operator": "^7.8.3",
        "@babel/plugin-syntax-numeric-separator": "^7.10.4",
        "@babel/plugin-syntax-object-rest-spread": "^7.8.3",
        "@babel/plugin-syntax-optional-catch-binding": "^7.8.3",
        "@babel/plugin-syntax-optional-chaining": "^7.8.3",
        "@babel/plugin-syntax-private-property-in-object": "^7.14.5",
        "@babel/plugin-syntax-top-level-await": "^7.14.5",
        "@babel/plugin-syntax-unicode-sets-regex": "^7.18.6",
        "@babel/plugin-transform-arrow-functions": "^7.22.5",
        "@babel/plugin-transform-async-generator-functions": "^7.22.5",
        "@babel/plugin-transform-async-to-generator": "^7.22.5",
        "@babel/plugin-transform-block-scoped-functions": "^7.22.5",
        "@babel/plugin-transform-block-scoping": "^7.22.5",
        "@babel/plugin-transform-class-properties": "^7.22.5",
        "@babel/plugin-transform-class-static-block": "^7.22.5",
        "@babel/plugin-transform-classes": "^7.22.5",
        "@babel/plugin-transform-computed-properties": "^7.22.5",
        "@babel/plugin-transform-destructuring": "^7.22.5",
        "@babel/plugin-transform-dotall-regex": "^7.22.5",
        "@babel/plugin-transform-duplicate-keys": "^7.22.5",
        "@babel/plugin-transform-dynamic-import": "^7.22.5",
        "@babel/plugin-transform-exponentiation-operator": "^7.22.5",
        "@babel/plugin-transform-export-namespace-from": "^7.22.5",
        "@babel/plugin-transform-for-of": "^7.22.5",
        "@babel/plugin-transform-function-name": "^7.22.5",
        "@babel/plugin-transform-json-strings": "^7.22.5",
        "@babel/plugin-transform-literals": "^7.22.5",
        "@babel/plugin-transform-logical-assignment-operators": "^7.22.5",
        "@babel/plugin-transform-member-expression-literals": "^7.22.5",
        "@babel/plugin-transform-modules-amd": "^7.22.5",
        "@babel/plugin-transform-modules-commonjs": "^7.22.5",
        "@babel/plugin-transform-modules-systemjs": "^7.22.5",
        "@babel/plugin-transform-modules-umd": "^7.22.5",
        "@babel/plugin-transform-named-capturing-groups-regex": "^7.22.5",
        "@babel/plugin-transform-new-target": "^7.22.5",
        "@babel/plugin-transform-nullish-coalescing-operator": "^7.22.5",
        "@babel/plugin-transform-numeric-separator": "^7.22.5",
        "@babel/plugin-transform-object-rest-spread": "^7.22.5",
        "@babel/plugin-transform-object-super": "^7.22.5",
        "@babel/plugin-transform-optional-catch-binding": "^7.22.5",
        "@babel/plugin-transform-optional-chaining": "^7.22.5",
        "@babel/plugin-transform-parameters": "^7.22.5",
        "@babel/plugin-transform-private-methods": "^7.22.5",
        "@babel/plugin-transform-private-property-in-object": "^7.22.5",
        "@babel/plugin-transform-property-literals": "^7.22.5",
        "@babel/plugin-transform-regenerator": "^7.22.5",
        "@babel/plugin-transform-reserved-words": "^7.22.5",
        "@babel/plugin-transform-shorthand-properties": "^7.22.5",
        "@babel/plugin-transform-spread": "^7.22.5",
        "@babel/plugin-transform-sticky-regex": "^7.22.5",
        "@babel/plugin-transform-template-literals": "^7.22.5",
        "@babel/plugin-transform-typeof-symbol": "^7.22.5",
        "@babel/plugin-transform-unicode-escapes": "^7.22.5",
        "@babel/plugin-transform-unicode-property-regex": "^7.22.5",
        "@babel/plugin-transform-unicode-regex": "^7.22.5",
        "@babel/plugin-transform-unicode-sets-regex": "^7.22.5",
        "@babel/preset-modules": "^0.1.5",
        "@babel/types": "^7.22.5",
        "babel-plugin-polyfill-corejs2": "^0.4.3",
        "babel-plugin-polyfill-corejs3": "^0.8.1",
        "babel-plugin-polyfill-regenerator": "^0.5.0",
        "core-js-compat": "^3.30.2",
        "semver": "^6.3.0"
      },
      "dependencies": {
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw=="
        }
      }
    },
    "@babel/preset-modules": {
      "version": "0.1.5",
      "resolved": "https://registry.npmjs.org/@babel/preset-modules/-/preset-modules-0.1.5.tgz",
      "integrity": "sha512-A57th6YRG7oR3cq/yt/Y84MvGgE0eJG2F1JLhKuyG+jFxEgrd/HAMJatiFtmOiZurz+0DkrvbheCLaV5f2JfjA==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.0.0",
        "@babel/plugin-proposal-unicode-property-regex": "^7.4.4",
        "@babel/plugin-transform-dotall-regex": "^7.4.4",
        "@babel/types": "^7.4.4",
        "esutils": "^2.0.2"
      }
    },
    "@babel/preset-react": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/preset-react/-/preset-react-7.22.5.tgz",
      "integrity": "sha512-M+Is3WikOpEJHgR385HbuCITPTaPRaNkibTEa9oiofmJvIsrceb4yp9RL9Kb+TE8LznmeyZqpP+Lopwcx59xPQ==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/helper-validator-option": "^7.22.5",
        "@babel/plugin-transform-react-display-name": "^7.22.5",
        "@babel/plugin-transform-react-jsx": "^7.22.5",
        "@babel/plugin-transform-react-jsx-development": "^7.22.5",
        "@babel/plugin-transform-react-pure-annotations": "^7.22.5"
      }
    },
    "@babel/preset-typescript": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/preset-typescript/-/preset-typescript-7.22.5.tgz",
      "integrity": "sha512-YbPaal9LxztSGhmndR46FmAbkJ/1fAsw293tSU+I5E5h+cnJ3d4GTwyUgGYmOXJYdGA+uNePle4qbaRzj2NISQ==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.22.5",
        "@babel/helper-validator-option": "^7.22.5",
        "@babel/plugin-syntax-jsx": "^7.22.5",
        "@babel/plugin-transform-modules-commonjs": "^7.22.5",
        "@babel/plugin-transform-typescript": "^7.22.5"
      }
    },
    "@babel/register": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/register/-/register-7.22.5.tgz",
      "integrity": "sha512-vV6pm/4CijSQ8Y47RH5SopXzursN35RQINfGJkmOlcpAtGuf94miFvIPhCKGQN7WGIcsgG1BHEX2KVdTYwTwUQ==",
      "requires": {
        "clone-deep": "^4.0.1",
        "find-cache-dir": "^2.0.0",
        "make-dir": "^2.1.0",
        "pirates": "^4.0.5",
        "source-map-support": "^0.5.16"
      }
    },
    "@babel/regjsgen": {
      "version": "0.8.0",
      "resolved": "https://registry.npmjs.org/@babel/regjsgen/-/regjsgen-0.8.0.tgz",
      "integrity": "sha512-x/rqGMdzj+fWZvCOYForTghzbtqPDZ5gPwaoNGHdgDfF2QA/XZbCBp4Moo5scrkAMPhB7z26XM/AaHuIJdgauA=="
    },
    "@babel/runtime": {
      "version": "7.21.0",
      "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.21.0.tgz",
      "integrity": "sha512-xwII0//EObnq89Ji5AKYQaRYiW/nZ3llSv29d49IuxPhKbtJoLP+9QUUZ4nVragQVtaVGeZrpB+ZtG/Pdy/POw==",
      "requires": {
        "regenerator-runtime": "^0.13.11"
      }
    },
    "@babel/template": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/template/-/template-7.22.5.tgz",
      "integrity": "sha512-X7yV7eiwAxdj9k94NEylvbVHLiVG1nvzCV2EAowhxLTwODV1jl9UzZ48leOC0sH7OnuHrIkllaBgneUykIcZaw==",
      "requires": {
        "@babel/code-frame": "^7.22.5",
        "@babel/parser": "^7.22.5",
        "@babel/types": "^7.22.5"
      }
    },
    "@babel/traverse": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.22.5.tgz",
      "integrity": "sha512-7DuIjPgERaNo6r+PZwItpjCZEa5vyw4eJGufeLxrPdBXBoLcCJCIasvK6pK/9DVNrLZTLFhUGqaC6X/PA007TQ==",
      "requires": {
        "@babel/code-frame": "^7.22.5",
        "@babel/generator": "^7.22.5",
        "@babel/helper-environment-visitor": "^7.22.5",
        "@babel/helper-function-name": "^7.22.5",
        "@babel/helper-hoist-variables": "^7.22.5",
        "@babel/helper-split-export-declaration": "^7.22.5",
        "@babel/parser": "^7.22.5",
        "@babel/types": "^7.22.5",
        "debug": "^4.1.0",
        "globals": "^11.1.0"
      },
      "dependencies": {
        "debug": {
          "version": "4.3.4",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.4.tgz",
          "integrity": "sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==",
          "requires": {
            "ms": "2.1.2"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
        }
      }
    },
    "@babel/types": {
      "version": "7.22.5",
      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.22.5.tgz",
      "integrity": "sha512-zo3MIHGOkPOfoRXitsgHLjEXmlDaD/5KU1Uzuc9GNiZPhSqVxVRtxuPaSBZDsYZ9qV88AjtMtWW7ww98loJ9KA==",
      "requires": {
        "@babel/helper-string-parser": "^7.22.5",
        "@babel/helper-validator-identifier": "^7.22.5",
        "to-fast-properties": "^2.0.0"
      }
    },
    "@carbon/icon-helpers": {
      "version": "10.41.0",
      "resolved": "https://registry.npmjs.org/@carbon/icon-helpers/-/icon-helpers-10.41.0.tgz",
      "integrity": "sha512-bKMTigt0/WzlNRgQArHO2WF21bVP7Pur/8QQ9pwhIyYkKCdqEbB9b719iPZTOe5qBZAo4rS5+2pGvePf2E3cWQ=="
    },
    "@carbon/icons-react": {
      "version": "10.49.0",
      "resolved": "https://registry.npmjs.org/@carbon/icons-react/-/icons-react-10.49.0.tgz",
      "integrity": "sha512-Lzz0A/DfR0fBye0pyxA/7+EPr1e0GeA5qYlxoOwOVJrp/L2vFuKPOe7QLBHkNgKly/BAdqN9Uo1IHKbp6Zljeg==",
      "requires": {
        "@carbon/icon-helpers": "^10.28.0",
        "@carbon/telemetry": "0.1.0",
        "prop-types": "^15.7.2"
      }
    },
    "@carbon/telemetry": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/@carbon/telemetry/-/telemetry-0.1.0.tgz",
      "integrity": "sha512-kNWt0bkgPwGW0i5h7HFuljbKRXPvIhsKbB+1tEURAYLXoJg9iJLF1eGvWN5iVoFCS2zje4GR3OGOsvvKVe7Hlg=="
    },
    "@cspotcode/source-map-support": {
      "version": "0.8.1",
      "resolved": "https://registry.npmjs.org/@cspotcode/source-map-support/-/source-map-support-0.8.1.tgz",
      "integrity": "sha512-IchNf6dN4tHoMFIn/7OE8LWZ19Y6q/67Bmf6vnGREv8RSbBVb9LPJxEcnwrcwX6ixSvaiGoomAUvu4YSxXrVgw==",
      "requires": {
        "@jridgewell/trace-mapping": "0.3.9"
      }
    },
    "@emotion/cache": {
      "version": "10.0.29",
      "resolved": "https://registry.npmjs.org/@emotion/cache/-/cache-10.0.29.tgz",
      "integrity": "sha512-fU2VtSVlHiF27empSbxi1O2JFdNWZO+2NFHfwO0pxgTep6Xa3uGb+3pVKfLww2l/IBGLNEZl5Xf/++A4wAYDYQ==",
      "requires": {
        "@emotion/sheet": "0.9.4",
        "@emotion/stylis": "0.8.5",
        "@emotion/utils": "0.11.3",
        "@emotion/weak-memoize": "0.2.5"
      }
    },
    "@emotion/core": {
      "version": "10.3.1",
      "resolved": "https://registry.npmjs.org/@emotion/core/-/core-10.3.1.tgz",
      "integrity": "sha512-447aUEjPIm0MnE6QYIaFz9VQOHSXf4Iu6EWOIqq11EAPqinkSZmfymPTmlOE3QjLv846lH4JVZBUOtwGbuQoww==",
      "requires": {
        "@babel/runtime": "^7.5.5",
        "@emotion/cache": "^10.0.27",
        "@emotion/css": "^10.0.27",
        "@emotion/serialize": "^0.11.15",
        "@emotion/sheet": "0.9.4",
        "@emotion/utils": "0.11.3"
      }
    },
    "@emotion/css": {
      "version": "10.0.27",
      "resolved": "https://registry.npmjs.org/@emotion/css/-/css-10.0.27.tgz",
      "integrity": "sha512-6wZjsvYeBhyZQYNrGoR5yPMYbMBNEnanDrqmsqS1mzDm1cOTu12shvl2j4QHNS36UaTE0USIJawCH9C8oW34Zw==",
      "requires": {
        "@emotion/serialize": "^0.11.15",
        "@emotion/utils": "0.11.3",
        "babel-plugin-emotion": "^10.0.27"
      }
    },
    "@emotion/hash": {
      "version": "0.8.0",
      "resolved": "https://registry.npmjs.org/@emotion/hash/-/hash-0.8.0.tgz",
      "integrity": "sha512-kBJtf7PH6aWwZ6fka3zQ0p6SBYzx4fl1LoZXE2RrnYST9Xljm7WfKJrU4g/Xr3Beg72MLrp1AWNUmuYJTL7Cow=="
    },
    "@emotion/is-prop-valid": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/@emotion/is-prop-valid/-/is-prop-valid-1.2.1.tgz",
      "integrity": "sha512-61Mf7Ufx4aDxx1xlDeOm8aFFigGHE4z+0sKCa+IHCeZKiyP9RLD0Mmx7m8b9/Cf37f7NAvQOOJAbQQGVr5uERw==",
      "requires": {
        "@emotion/memoize": "^0.8.1"
      },
      "dependencies": {
        "@emotion/memoize": {
          "version": "0.8.1",
          "resolved": "https://registry.npmjs.org/@emotion/memoize/-/memoize-0.8.1.tgz",
          "integrity": "sha512-W2P2c/VRW1/1tLox0mVUalvnWXxavmv/Oum2aPsRcoDJuob75FC3Y8FbpfLwUegRcxINtGUMPq0tFCvYNTBXNA=="
        }
      }
    },
    "@emotion/memoize": {
      "version": "0.7.4",
      "resolved": "https://registry.npmjs.org/@emotion/memoize/-/memoize-0.7.4.tgz",
      "integrity": "sha512-Ja/Vfqe3HpuzRsG1oBtWTHk2PGZ7GR+2Vz5iYGelAw8dx32K0y7PjVuxK6z1nMpZOqAFsRUPCkK1YjJ56qJlgw=="
    },
    "@emotion/serialize": {
      "version": "0.11.16",
      "resolved": "https://registry.npmjs.org/@emotion/serialize/-/serialize-0.11.16.tgz",
      "integrity": "sha512-G3J4o8by0VRrO+PFeSc3js2myYNOXVJ3Ya+RGVxnshRYgsvErfAOglKAiy1Eo1vhzxqtUvjCyS5gtewzkmvSSg==",
      "requires": {
        "@emotion/hash": "0.8.0",
        "@emotion/memoize": "0.7.4",
        "@emotion/unitless": "0.7.5",
        "@emotion/utils": "0.11.3",
        "csstype": "^2.5.7"
      },
      "dependencies": {
        "csstype": {
          "version": "2.6.21",
          "resolved": "https://registry.npmjs.org/csstype/-/csstype-2.6.21.tgz",
          "integrity": "sha512-Z1PhmomIfypOpoMjRQB70jfvy/wxT50qW08YXO5lMIJkrdq4yOTR+AW7FqutScmB9NkLwxo+jU+kZLbofZZq/w=="
        }
      }
    },
    "@emotion/sheet": {
      "version": "0.9.4",
      "resolved": "https://registry.npmjs.org/@emotion/sheet/-/sheet-0.9.4.tgz",
      "integrity": "sha512-zM9PFmgVSqBw4zL101Q0HrBVTGmpAxFZH/pYx/cjJT5advXguvcgjHFTCaIO3enL/xr89vK2bh0Mfyj9aa0ANA=="
    },
    "@emotion/stylis": {
      "version": "0.8.5",
      "resolved": "https://registry.npmjs.org/@emotion/stylis/-/stylis-0.8.5.tgz",
      "integrity": "sha512-h6KtPihKFn3T9fuIrwvXXUOwlx3rfUvfZIcP5a6rh8Y7zjE3O06hT5Ss4S/YI1AYhuZ1kjaE/5EaOOI2NqSylQ=="
    },
    "@emotion/unitless": {
      "version": "0.7.5",
      "resolved": "https://registry.npmjs.org/@emotion/unitless/-/unitless-0.7.5.tgz",
      "integrity": "sha512-OWORNpfjMsSSUBVrRBVGECkhWcULOAJz9ZW8uK9qgxD+87M7jHRcvh/A96XXNhXTLmKcoYSQtBEX7lHMO7YRwg=="
    },
    "@emotion/utils": {
      "version": "0.11.3",
      "resolved": "https://registry.npmjs.org/@emotion/utils/-/utils-0.11.3.tgz",
      "integrity": "sha512-0o4l6pZC+hI88+bzuaX/6BgOvQVhbt2PfmxauVaYOGgbsAw14wdKyvMCZXnsnsHys94iadcF+RG/wZyx6+ZZBw=="
    },
    "@emotion/weak-memoize": {
      "version": "0.2.5",
      "resolved": "https://registry.npmjs.org/@emotion/weak-memoize/-/weak-memoize-0.2.5.tgz",
      "integrity": "sha512-6U71C2Wp7r5XtFtQzYrW5iKFT67OixrSxjI4MptCHzdSVlgabczzqLe0ZSgnub/5Kp4hSbpDB1tMytZY9pwxxA=="
    },
    "@ethereumjs/common": {
      "version": "2.5.0",
      "resolved": "https://registry.npmjs.org/@ethereumjs/common/-/common-2.5.0.tgz",
      "integrity": "sha512-DEHjW6e38o+JmB/NO3GZBpW4lpaiBpkFgXF6jLcJ6gETBYpEyaA5nTimsWBUJR3Vmtm/didUEbNjajskugZORg==",
      "requires": {
        "crc-32": "^1.2.0",
        "ethereumjs-util": "^7.1.1"
      }
    },
    "@ethereumjs/tx": {
      "version": "3.3.2",
      "resolved": "https://registry.npmjs.org/@ethereumjs/tx/-/tx-3.3.2.tgz",
      "integrity": "sha512-6AaJhwg4ucmwTvw/1qLaZUX5miWrwZ4nLOUsKyb/HtzS3BMw/CasKhdi1ims9mBKeK9sOJCH4qGKOBGyJCeeog==",
      "requires": {
        "@ethereumjs/common": "^2.5.0",
        "ethereumjs-util": "^7.1.2"
      }
    },
    "@ethersproject/abi": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/abi/-/abi-5.7.0.tgz",
      "integrity": "sha512-351ktp42TiRcYB3H1OP8yajPeAQstMW/yCFokj/AthP9bLHzQFPlOrxOcwYEDkUAICmOHljvN4K39OMTMUa9RA==",
      "requires": {
        "@ethersproject/address": "^5.7.0",
        "@ethersproject/bignumber": "^5.7.0",
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/constants": "^5.7.0",
        "@ethersproject/hash": "^5.7.0",
        "@ethersproject/keccak256": "^5.7.0",
        "@ethersproject/logger": "^5.7.0",
        "@ethersproject/properties": "^5.7.0",
        "@ethersproject/strings": "^5.7.0"
      }
    },
    "@ethersproject/abstract-provider": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/abstract-provider/-/abstract-provider-5.7.0.tgz",
      "integrity": "sha512-R41c9UkchKCpAqStMYUpdunjo3pkEvZC3FAwZn5S5MGbXoMQOHIdHItezTETxAO5bevtMApSyEhn9+CHcDsWBw==",
      "requires": {
        "@ethersproject/bignumber": "^5.7.0",
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/logger": "^5.7.0",
        "@ethersproject/networks": "^5.7.0",
        "@ethersproject/properties": "^5.7.0",
        "@ethersproject/transactions": "^5.7.0",
        "@ethersproject/web": "^5.7.0"
      }
    },
    "@ethersproject/abstract-signer": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/abstract-signer/-/abstract-signer-5.7.0.tgz",
      "integrity": "sha512-a16V8bq1/Cz+TGCkE2OPMTOUDLS3grCpdjoJCYNnVBbdYEMSgKrU0+B90s8b6H+ByYTBZN7a3g76jdIJi7UfKQ==",
      "requires": {
        "@ethersproject/abstract-provider": "^5.7.0",
        "@ethersproject/bignumber": "^5.7.0",
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/logger": "^5.7.0",
        "@ethersproject/properties": "^5.7.0"
      }
    },
    "@ethersproject/address": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/address/-/address-5.7.0.tgz",
      "integrity": "sha512-9wYhYt7aghVGo758POM5nqcOMaE168Q6aRLJZwUmiqSrAungkG74gSSeKEIR7ukixesdRZGPgVqme6vmxs1fkA==",
      "requires": {
        "@ethersproject/bignumber": "^5.7.0",
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/keccak256": "^5.7.0",
        "@ethersproject/logger": "^5.7.0",
        "@ethersproject/rlp": "^5.7.0"
      }
    },
    "@ethersproject/base64": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/base64/-/base64-5.7.0.tgz",
      "integrity": "sha512-Dr8tcHt2mEbsZr/mwTPIQAf3Ai0Bks/7gTw9dSqk1mQvhW3XvRlmDJr/4n+wg1JmCl16NZue17CDh8xb/vZ0sQ==",
      "requires": {
        "@ethersproject/bytes": "^5.7.0"
      }
    },
    "@ethersproject/basex": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/basex/-/basex-5.7.0.tgz",
      "integrity": "sha512-ywlh43GwZLv2Voc2gQVTKBoVQ1mti3d8HK5aMxsfu/nRDnMmNqaSJ3r3n85HBByT8OpoY96SXM1FogC533T4zw==",
      "requires": {
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/properties": "^5.7.0"
      }
    },
    "@ethersproject/bignumber": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/bignumber/-/bignumber-5.7.0.tgz",
      "integrity": "sha512-n1CAdIHRWjSucQO3MC1zPSVgV/6dy/fjL9pMrPP9peL+QxEg9wOsVqwD4+818B6LUEtaXzVHQiuivzRoxPxUGw==",
      "requires": {
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/logger": "^5.7.0",
        "bn.js": "^5.2.1"
      }
    },
    "@ethersproject/bytes": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/bytes/-/bytes-5.7.0.tgz",
      "integrity": "sha512-nsbxwgFXWh9NyYWo+U8atvmMsSdKJprTcICAkvbBffT75qDocbuggBU0SJiVK2MuTrp0q+xvLkTnGMPK1+uA9A==",
      "requires": {
        "@ethersproject/logger": "^5.7.0"
      }
    },
    "@ethersproject/constants": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/constants/-/constants-5.7.0.tgz",
      "integrity": "sha512-DHI+y5dBNvkpYUMiRQyxRBYBefZkJfo70VUkUAsRjcPs47muV9evftfZ0PJVCXYbAiCgght0DtcF9srFQmIgWA==",
      "requires": {
        "@ethersproject/bignumber": "^5.7.0"
      }
    },
    "@ethersproject/contracts": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/contracts/-/contracts-5.7.0.tgz",
      "integrity": "sha512-5GJbzEU3X+d33CdfPhcyS+z8MzsTrBGk/sc+G+59+tPa9yFkl6HQ9D6L0QMgNTA9q8dT0XKxxkyp883XsQvbbg==",
      "requires": {
        "@ethersproject/abi": "^5.7.0",
        "@ethersproject/abstract-provider": "^5.7.0",
        "@ethersproject/abstract-signer": "^5.7.0",
        "@ethersproject/address": "^5.7.0",
        "@ethersproject/bignumber": "^5.7.0",
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/constants": "^5.7.0",
        "@ethersproject/logger": "^5.7.0",
        "@ethersproject/properties": "^5.7.0",
        "@ethersproject/transactions": "^5.7.0"
      }
    },
    "@ethersproject/hash": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/hash/-/hash-5.7.0.tgz",
      "integrity": "sha512-qX5WrQfnah1EFnO5zJv1v46a8HW0+E5xuBBDTwMFZLuVTx0tbU2kkx15NqdjxecrLGatQN9FGQKpb1FKdHCt+g==",
      "requires": {
        "@ethersproject/abstract-signer": "^5.7.0",
        "@ethersproject/address": "^5.7.0",
        "@ethersproject/base64": "^5.7.0",
        "@ethersproject/bignumber": "^5.7.0",
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/keccak256": "^5.7.0",
        "@ethersproject/logger": "^5.7.0",
        "@ethersproject/properties": "^5.7.0",
        "@ethersproject/strings": "^5.7.0"
      }
    },
    "@ethersproject/hdnode": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/hdnode/-/hdnode-5.7.0.tgz",
      "integrity": "sha512-OmyYo9EENBPPf4ERhR7oj6uAtUAhYGqOnIS+jE5pTXvdKBS99ikzq1E7Iv0ZQZ5V36Lqx1qZLeak0Ra16qpeOg==",
      "requires": {
        "@ethersproject/abstract-signer": "^5.7.0",
        "@ethersproject/basex": "^5.7.0",
        "@ethersproject/bignumber": "^5.7.0",
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/logger": "^5.7.0",
        "@ethersproject/pbkdf2": "^5.7.0",
        "@ethersproject/properties": "^5.7.0",
        "@ethersproject/sha2": "^5.7.0",
        "@ethersproject/signing-key": "^5.7.0",
        "@ethersproject/strings": "^5.7.0",
        "@ethersproject/transactions": "^5.7.0",
        "@ethersproject/wordlists": "^5.7.0"
      }
    },
    "@ethersproject/json-wallets": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/json-wallets/-/json-wallets-5.7.0.tgz",
      "integrity": "sha512-8oee5Xgu6+RKgJTkvEMl2wDgSPSAQ9MB/3JYjFV9jlKvcYHUXZC+cQp0njgmxdHkYWn8s6/IqIZYm0YWCjO/0g==",
      "requires": {
        "@ethersproject/abstract-signer": "^5.7.0",
        "@ethersproject/address": "^5.7.0",
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/hdnode": "^5.7.0",
        "@ethersproject/keccak256": "^5.7.0",
        "@ethersproject/logger": "^5.7.0",
        "@ethersproject/pbkdf2": "^5.7.0",
        "@ethersproject/properties": "^5.7.0",
        "@ethersproject/random": "^5.7.0",
        "@ethersproject/strings": "^5.7.0",
        "@ethersproject/transactions": "^5.7.0",
        "aes-js": "3.0.0",
        "scrypt-js": "3.0.1"
      }
    },
    "@ethersproject/keccak256": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/keccak256/-/keccak256-5.7.0.tgz",
      "integrity": "sha512-2UcPboeL/iW+pSg6vZ6ydF8tCnv3Iu/8tUmLLzWWGzxWKFFqOBQFLo6uLUv6BDrLgCDfN28RJ/wtByx+jZ4KBg==",
      "requires": {
        "@ethersproject/bytes": "^5.7.0",
        "js-sha3": "0.8.0"
      }
    },
    "@ethersproject/logger": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/logger/-/logger-5.7.0.tgz",
      "integrity": "sha512-0odtFdXu/XHtjQXJYA3u9G0G8btm0ND5Cu8M7i5vhEcE8/HmF4Lbdqanwyv4uQTr2tx6b7fQRmgLrsnpQlmnig=="
    },
    "@ethersproject/networks": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/@ethersproject/networks/-/networks-5.7.1.tgz",
      "integrity": "sha512-n/MufjFYv3yFcUyfhnXotyDlNdFb7onmkSy8aQERi2PjNcnWQ66xXxa3XlS8nCcA8aJKJjIIMNJTC7tu80GwpQ==",
      "requires": {
        "@ethersproject/logger": "^5.7.0"
      }
    },
    "@ethersproject/pbkdf2": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/pbkdf2/-/pbkdf2-5.7.0.tgz",
      "integrity": "sha512-oR/dBRZR6GTyaofd86DehG72hY6NpAjhabkhxgr3X2FpJtJuodEl2auADWBZfhDHgVCbu3/H/Ocq2uC6dpNjjw==",
      "requires": {
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/sha2": "^5.7.0"
      }
    },
    "@ethersproject/properties": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/properties/-/properties-5.7.0.tgz",
      "integrity": "sha512-J87jy8suntrAkIZtecpxEPxY//szqr1mlBaYlQ0r4RCaiD2hjheqF9s1LVE8vVuJCXisjIP+JgtK/Do54ej4Sw==",
      "requires": {
        "@ethersproject/logger": "^5.7.0"
      }
    },
    "@ethersproject/providers": {
      "version": "5.7.2",
      "resolved": "https://registry.npmjs.org/@ethersproject/providers/-/providers-5.7.2.tgz",
      "integrity": "sha512-g34EWZ1WWAVgr4aptGlVBF8mhl3VWjv+8hoAnzStu8Ah22VHBsuGzP17eb6xDVRzw895G4W7vvx60lFFur/1Rg==",
      "requires": {
        "@ethersproject/abstract-provider": "^5.7.0",
        "@ethersproject/abstract-signer": "^5.7.0",
        "@ethersproject/address": "^5.7.0",
        "@ethersproject/base64": "^5.7.0",
        "@ethersproject/basex": "^5.7.0",
        "@ethersproject/bignumber": "^5.7.0",
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/constants": "^5.7.0",
        "@ethersproject/hash": "^5.7.0",
        "@ethersproject/logger": "^5.7.0",
        "@ethersproject/networks": "^5.7.0",
        "@ethersproject/properties": "^5.7.0",
        "@ethersproject/random": "^5.7.0",
        "@ethersproject/rlp": "^5.7.0",
        "@ethersproject/sha2": "^5.7.0",
        "@ethersproject/strings": "^5.7.0",
        "@ethersproject/transactions": "^5.7.0",
        "@ethersproject/web": "^5.7.0",
        "bech32": "1.1.4",
        "ws": "7.4.6"
      },
      "dependencies": {
        "bech32": {
          "version": "1.1.4",
          "resolved": "https://registry.npmjs.org/bech32/-/bech32-1.1.4.tgz",
          "integrity": "sha512-s0IrSOzLlbvX7yp4WBfPITzpAU8sqQcpsmwXDiKwrG4r491vwCO/XpejasRNl0piBMe/DvP4Tz0mIS/X1DPJBQ=="
        }
      }
    },
    "@ethersproject/random": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/random/-/random-5.7.0.tgz",
      "integrity": "sha512-19WjScqRA8IIeWclFme75VMXSBvi4e6InrUNuaR4s5pTF2qNhcGdCUwdxUVGtDDqC00sDLCO93jPQoDUH4HVmQ==",
      "requires": {
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/logger": "^5.7.0"
      }
    },
    "@ethersproject/rlp": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/rlp/-/rlp-5.7.0.tgz",
      "integrity": "sha512-rBxzX2vK8mVF7b0Tol44t5Tb8gomOHkj5guL+HhzQ1yBh/ydjGnpw6at+X6Iw0Kp3OzzzkcKp8N9r0W4kYSs9w==",
      "requires": {
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/logger": "^5.7.0"
      }
    },
    "@ethersproject/sha2": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/sha2/-/sha2-5.7.0.tgz",
      "integrity": "sha512-gKlH42riwb3KYp0reLsFTokByAKoJdgFCwI+CCiX/k+Jm2mbNs6oOaCjYQSlI1+XBVejwH2KrmCbMAT/GnRDQw==",
      "requires": {
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/logger": "^5.7.0",
        "hash.js": "1.1.7"
      }
    },
    "@ethersproject/signing-key": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/signing-key/-/signing-key-5.7.0.tgz",
      "integrity": "sha512-MZdy2nL3wO0u7gkB4nA/pEf8lu1TlFswPNmy8AiYkfKTdO6eXBJyUdmHO/ehm/htHw9K/qF8ujnTyUAD+Ry54Q==",
      "requires": {
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/logger": "^5.7.0",
        "@ethersproject/properties": "^5.7.0",
        "bn.js": "^5.2.1",
        "elliptic": "6.5.4",
        "hash.js": "1.1.7"
      }
    },
    "@ethersproject/solidity": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/solidity/-/solidity-5.7.0.tgz",
      "integrity": "sha512-HmabMd2Dt/raavyaGukF4XxizWKhKQ24DoLtdNbBmNKUOPqwjsKQSdV9GQtj9CBEea9DlzETlVER1gYeXXBGaA==",
      "requires": {
        "@ethersproject/bignumber": "^5.7.0",
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/keccak256": "^5.7.0",
        "@ethersproject/logger": "^5.7.0",
        "@ethersproject/sha2": "^5.7.0",
        "@ethersproject/strings": "^5.7.0"
      }
    },
    "@ethersproject/strings": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/strings/-/strings-5.7.0.tgz",
      "integrity": "sha512-/9nu+lj0YswRNSH0NXYqrh8775XNyEdUQAuf3f+SmOrnVewcJ5SBNAjF7lpgehKi4abvNNXyf+HX86czCdJ8Mg==",
      "requires": {
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/constants": "^5.7.0",
        "@ethersproject/logger": "^5.7.0"
      }
    },
    "@ethersproject/transactions": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/transactions/-/transactions-5.7.0.tgz",
      "integrity": "sha512-kmcNicCp1lp8qanMTC3RIikGgoJ80ztTyvtsFvCYpSCfkjhD0jZ2LOrnbcuxuToLIUYYf+4XwD1rP+B/erDIhQ==",
      "requires": {
        "@ethersproject/address": "^5.7.0",
        "@ethersproject/bignumber": "^5.7.0",
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/constants": "^5.7.0",
        "@ethersproject/keccak256": "^5.7.0",
        "@ethersproject/logger": "^5.7.0",
        "@ethersproject/properties": "^5.7.0",
        "@ethersproject/rlp": "^5.7.0",
        "@ethersproject/signing-key": "^5.7.0"
      }
    },
    "@ethersproject/units": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/units/-/units-5.7.0.tgz",
      "integrity": "sha512-pD3xLMy3SJu9kG5xDGI7+xhTEmGXlEqXU4OfNapmfnxLVY4EMSSRp7j1k7eezutBPH7RBN/7QPnwR7hzNlEFeg==",
      "requires": {
        "@ethersproject/bignumber": "^5.7.0",
        "@ethersproject/constants": "^5.7.0",
        "@ethersproject/logger": "^5.7.0"
      }
    },
    "@ethersproject/wallet": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/wallet/-/wallet-5.7.0.tgz",
      "integrity": "sha512-MhmXlJXEJFBFVKrDLB4ZdDzxcBxQ3rLyCkhNqVu3CDYvR97E+8r01UgrI+TI99Le+aYm/in/0vp86guJuM7FCA==",
      "requires": {
        "@ethersproject/abstract-provider": "^5.7.0",
        "@ethersproject/abstract-signer": "^5.7.0",
        "@ethersproject/address": "^5.7.0",
        "@ethersproject/bignumber": "^5.7.0",
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/hash": "^5.7.0",
        "@ethersproject/hdnode": "^5.7.0",
        "@ethersproject/json-wallets": "^5.7.0",
        "@ethersproject/keccak256": "^5.7.0",
        "@ethersproject/logger": "^5.7.0",
        "@ethersproject/properties": "^5.7.0",
        "@ethersproject/random": "^5.7.0",
        "@ethersproject/signing-key": "^5.7.0",
        "@ethersproject/transactions": "^5.7.0",
        "@ethersproject/wordlists": "^5.7.0"
      }
    },
    "@ethersproject/web": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/@ethersproject/web/-/web-5.7.1.tgz",
      "integrity": "sha512-Gueu8lSvyjBWL4cYsWsjh6MtMwM0+H4HvqFPZfB6dV8ctbP9zFAO73VG1cMWae0FLPCtz0peKPpZY8/ugJJX2w==",
      "requires": {
        "@ethersproject/base64": "^5.7.0",
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/logger": "^5.7.0",
        "@ethersproject/properties": "^5.7.0",
        "@ethersproject/strings": "^5.7.0"
      }
    },
    "@ethersproject/wordlists": {
      "version": "5.7.0",
      "resolved": "https://registry.npmjs.org/@ethersproject/wordlists/-/wordlists-5.7.0.tgz",
      "integrity": "sha512-S2TFNJNfHWVHNE6cNDjbVlZ6MgE17MIxMbMg2zv3wn+3XSJGosL1m9ZVv3GXCf/2ymSsQ+hRI5IzoMJTG6aoVA==",
      "requires": {
        "@ethersproject/bytes": "^5.7.0",
        "@ethersproject/hash": "^5.7.0",
        "@ethersproject/logger": "^5.7.0",
        "@ethersproject/properties": "^5.7.0",
        "@ethersproject/strings": "^5.7.0"
      }
    },
    "@hypnosphi/create-react-context": {
      "version": "0.3.1",
      "resolved": "https://registry.npmjs.org/@hypnosphi/create-react-context/-/create-react-context-0.3.1.tgz",
      "integrity": "sha512-V1klUed202XahrWJLLOT3EXNeCpFHCcJntdFGI15ntCwau+jfT386w7OFTMaCqOgXUH1fa0w/I1oZs+i/Rfr0A==",
      "requires": {
        "gud": "^1.0.0",
        "warning": "^4.0.3"
      }
    },
    "@isaacs/cliui": {
      "version": "8.0.2",
      "resolved": "https://registry.npmjs.org/@isaacs/cliui/-/cliui-8.0.2.tgz",
      "integrity": "sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==",
      "requires": {
        "string-width": "^5.1.2",
        "string-width-cjs": "npm:string-width@^4.2.0",
        "strip-ansi": "^7.0.1",
        "strip-ansi-cjs": "npm:strip-ansi@^6.0.1",
        "wrap-ansi": "^8.1.0",
        "wrap-ansi-cjs": "npm:wrap-ansi@^7.0.0"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "6.0.1",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.0.1.tgz",
          "integrity": "sha512-n5M855fKb2SsfMIiFFoVrABHJC8QtHwVx+mHWP3QcEqBHYienj5dHSgjbxtC0WEZXYt4wcD6zrQElDPhFuZgfA=="
        },
        "ansi-styles": {
          "version": "6.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.2.1.tgz",
          "integrity": "sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug=="
        },
        "emoji-regex": {
          "version": "9.2.2",
          "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz",
          "integrity": "sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg=="
        },
        "string-width": {
          "version": "5.1.2",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz",
          "integrity": "sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==",
          "requires": {
            "eastasianwidth": "^0.2.0",
            "emoji-regex": "^9.2.2",
            "strip-ansi": "^7.0.1"
          }
        },
        "strip-ansi": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz",
          "integrity": "sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==",
          "requires": {
            "ansi-regex": "^6.0.1"
          }
        },
        "wrap-ansi": {
          "version": "8.1.0",
          "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-8.1.0.tgz",
          "integrity": "sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==",
          "requires": {
            "ansi-styles": "^6.1.0",
            "string-width": "^5.0.1",
            "strip-ansi": "^7.0.1"
          }
        }
      }
    },
    "@jridgewell/gen-mapping": {
      "version": "0.3.3",
      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.3.tgz",
      "integrity": "sha512-HLhSWOLRi875zjjMG/r+Nv0oCW8umGb0BgEhyX3dDX3egwZtB8PqLnjz3yedt8R5StBrzcg4aBpnh8UA9D1BoQ==",
      "requires": {
        "@jridgewell/set-array": "^1.0.1",
        "@jridgewell/sourcemap-codec": "^1.4.10",
        "@jridgewell/trace-mapping": "^0.3.9"
      }
    },
    "@jridgewell/resolve-uri": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.0.tgz",
      "integrity": "sha512-F2msla3tad+Mfht5cJq7LSXcdudKTWCVYUgw6pLFOOHSTtZlj6SWNYAp+AhuqLmWdBO2X5hPrLcu8cVP8fy28w=="
    },
    "@jridgewell/set-array": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.1.2.tgz",
      "integrity": "sha512-xnkseuNADM0gt2bs+BvhO0p78Mk762YnZdsuzFV018NoG1Sj1SCQvpSqa7XUaTam5vAGasABV9qXASMKnFMwMw=="
    },
    "@jridgewell/sourcemap-codec": {
      "version": "1.4.14",
      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.4.14.tgz",
      "integrity": "sha512-XPSJHWmi394fuUuzDnGz1wiKqWfo1yXecHQMRf2l6hztTO+nPru658AyDngaBe7isIxEkRsPR3FZh+s7iVa4Uw=="
    },
    "@jridgewell/trace-mapping": {
      "version": "0.3.9",
      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.9.tgz",
      "integrity": "sha512-3Belt6tdc8bPgAtbcmdtNJlirVoTmEb5e2gC94PnkwEW9jI6CAHUeoG85tjWP5WquqfavoMtMwiG4P926ZKKuQ==",
      "requires": {
        "@jridgewell/resolve-uri": "^3.0.3",
        "@jridgewell/sourcemap-codec": "^1.4.10"
      }
    },
    "@jsdevtools/ono": {
      "version": "7.1.3",
      "resolved": "https://registry.npmjs.org/@jsdevtools/ono/-/ono-7.1.3.tgz",
      "integrity": "sha512-4JQNk+3mVzK3xh2rqd6RB4J46qUR19azEHBneZyTZM+c456qOrbbM/5xcR8huNCCcbVt7+UmizG6GuUvPvKUYg=="
    },
    "@metamask/eth-sig-util": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/@metamask/eth-sig-util/-/eth-sig-util-4.0.1.tgz",
      "integrity": "sha512-tghyZKLHZjcdlDqCA3gNZmLeR0XvOE9U1qoQO9ohyAZT6Pya+H9vkBPcsyXytmYLNgVoin7CKCmweo/R43V+tQ==",
      "requires": {
        "ethereumjs-abi": "^0.6.8",
        "ethereumjs-util": "^6.2.1",
        "ethjs-util": "^0.1.6",
        "tweetnacl": "^1.0.3",
        "tweetnacl-util": "^0.15.1"
      },
      "dependencies": {
        "@types/bn.js": {
          "version": "4.11.6",
          "resolved": "https://registry.npmjs.org/@types/bn.js/-/bn.js-4.11.6.tgz",
          "integrity": "sha512-pqr857jrp2kPuO9uRjZ3PwnJTjoQy+fcdxvBTvHm6dkmEL9q+hDD/2j/0ELOBPtPnS8LjCX0gI9nbl8lVkadpg==",
          "requires": {
            "@types/node": "*"
          }
        },
        "bn.js": {
          "version": "4.12.0",
          "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz",
          "integrity": "sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA=="
        },
        "ethereumjs-util": {
          "version": "6.2.1",
          "resolved": "https://registry.npmjs.org/ethereumjs-util/-/ethereumjs-util-6.2.1.tgz",
          "integrity": "sha512-W2Ktez4L01Vexijrm5EB6w7dg4n/TgpoYU4avuT5T3Vmnw/eCRtiBrJfQYS/DCSvDIOLn2k57GcHdeBcgVxAqw==",
          "requires": {
            "@types/bn.js": "^4.11.3",
            "bn.js": "^4.11.0",
            "create-hash": "^1.1.2",
            "elliptic": "^6.5.2",
            "ethereum-cryptography": "^0.1.3",
            "ethjs-util": "0.1.6",
            "rlp": "^2.2.3"
          }
        }
      }
    },
    "@near-wallet-selector/core": {
      "version": "7.9.0",
      "resolved": "https://registry.npmjs.org/@near-wallet-selector/core/-/core-7.9.0.tgz",
      "integrity": "sha512-VbHNdO1yRILsgjrX3Qxg5C3oJZpC3f1PjHLY0h37FXRBTIyVEycMl+8qVaBHck5j8FIOJMfyS9d6tC+TKRp7Og==",
      "requires": {
        "rxjs": "^7.8.0"
      }
    },
    "@noble/hashes": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@noble/hashes/-/hashes-1.2.0.tgz",
      "integrity": "sha512-FZfhjEDbT5GRswV3C6uvLPHMiVD6lQBmpoX5+eSiPaMTXte/IKqI5dykDxzZB/WBeK/CDuQRBWarPdi3FNY2zQ=="
    },
    "@otplib/core": {
      "version": "12.0.1",
      "resolved": "https://registry.npmjs.org/@otplib/core/-/core-12.0.1.tgz",
      "integrity": "sha512-4sGntwbA/AC+SbPhbsziRiD+jNDdIzsZ3JUyfZwjtKyc/wufl1pnSIaG4Uqx8ymPagujub0o92kgBnB89cuAMA=="
    },
    "@otplib/plugin-crypto": {
      "version": "12.0.1",
      "resolved": "https://registry.npmjs.org/@otplib/plugin-crypto/-/plugin-crypto-12.0.1.tgz",
      "integrity": "sha512-qPuhN3QrT7ZZLcLCyKOSNhuijUi9G5guMRVrxq63r9YNOxxQjPm59gVxLM+7xGnHnM6cimY57tuKsjK7y9LM1g==",
      "requires": {
        "@otplib/core": "^12.0.1"
      }
    },
    "@otplib/plugin-thirty-two": {
      "version": "12.0.1",
      "resolved": "https://registry.npmjs.org/@otplib/plugin-thirty-two/-/plugin-thirty-two-12.0.1.tgz",
      "integrity": "sha512-MtT+uqRso909UkbrrYpJ6XFjj9D+x2Py7KjTO9JDPhL0bJUYVu5kFP4TFZW4NFAywrAtFRxOVY261u0qwb93gA==",
      "requires": {
        "@otplib/core": "^12.0.1",
        "thirty-two": "^1.0.2"
      }
    },
    "@otplib/preset-default": {
      "version": "12.0.1",
      "resolved": "https://registry.npmjs.org/@otplib/preset-default/-/preset-default-12.0.1.tgz",
      "integrity": "sha512-xf1v9oOJRyXfluBhMdpOkr+bsE+Irt+0D5uHtvg6x1eosfmHCsCC6ej/m7FXiWqdo0+ZUI6xSKDhJwc8yfiOPQ==",
      "requires": {
        "@otplib/core": "^12.0.1",
        "@otplib/plugin-crypto": "^12.0.1",
        "@otplib/plugin-thirty-two": "^12.0.1"
      }
    },
    "@otplib/preset-v11": {
      "version": "12.0.1",
      "resolved": "https://registry.npmjs.org/@otplib/preset-v11/-/preset-v11-12.0.1.tgz",
      "integrity": "sha512-9hSetMI7ECqbFiKICrNa4w70deTUfArtwXykPUvSHWOdzOlfa9ajglu7mNCntlvxycTiOAXkQGwjQCzzDEMRMg==",
      "requires": {
        "@otplib/core": "^12.0.1",
        "@otplib/plugin-crypto": "^12.0.1",
        "@otplib/plugin-thirty-two": "^12.0.1"
      }
    },
    "@paraswap/core": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/@paraswap/core/-/core-1.0.4.tgz",
      "integrity": "sha512-8/UkGJwftOFghSmeG1raSwEsXZTveVVo69duCNIWoeBbAj4vxy2KOJ5VugRkfvKbtNeDxR3MZ64QY5yqWYg82w=="
    },
    "@paraswap/sdk": {
      "version": "6.2.0",
      "resolved": "https://registry.npmjs.org/@paraswap/sdk/-/sdk-6.2.0.tgz",
      "integrity": "sha512-tHl8jWP4mC7nEVyPXshsGXwXLbxFR5sYGW/O6Vs1J+oa6kBVr32EO632Hgs1Dg5j8dMN9CooZi/KAxep++DZ/A==",
      "requires": {
        "@paraswap/core": "^1.0.4",
        "bignumber.js": "^9.0.2",
        "ts-essentials": "^9.1.2"
      }
    },
    "@pkgjs/parseargs": {
      "version": "0.11.0",
      "resolved": "https://registry.npmjs.org/@pkgjs/parseargs/-/parseargs-0.11.0.tgz",
      "integrity": "sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==",
      "optional": true
    },
    "@react-icons/all-files": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/@react-icons/all-files/-/all-files-4.1.0.tgz",
      "integrity": "sha512-hxBI2UOuVaI3O/BhQfhtb4kcGn9ft12RWAFVMUeNjqqhLsHvFtzIkFaptBJpFDANTKoDfdVoHTKZDlwKCACbMQ==",
      "requires": {}
    },
    "@ref-finance/ref-sdk": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@ref-finance/ref-sdk/-/ref-sdk-1.2.0.tgz",
      "integrity": "sha512-sGcVxTooqV0PwRCK+qS0QFIZpxvnzc/pkZVV9ZSPgNBZLuR13MoGruQImZlSG+GV1+7UzMDqrcrLLuq4rkFlmQ==",
      "requires": {
        "@near-wallet-selector/core": "^7.0.0",
        "@react-icons/all-files": "^4.1.0",
        "@types/big.js": "^6.1.5",
        "@types/bn.js": "^5.1.1",
        "@types/lodash": "^4.14.182",
        "big.js": "^6.2.1",
        "bn.js": "^5.2.0",
        "lodash": "^4.17.21",
        "lodash-es": "^4.17.21",
        "mathjs": "^9.3.0",
        "near-api-js": "0.44.2"
      },
      "dependencies": {
        "bn.js": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-5.2.0.tgz",
          "integrity": "sha512-D7iWRBvnZE8ecXiLj/9wbxH7Tk79fAh8IHaTNq1RWRixsS02W+5qS+iE9yq6RYl0asXx5tw0bLhmT5pIfbSquw=="
        },
        "borsh": {
          "version": "0.6.0",
          "resolved": "https://registry.npmjs.org/borsh/-/borsh-0.6.0.tgz",
          "integrity": "sha512-sl5k89ViqsThXQpYa9XDtz1sBl3l1lI313cFUY1HKr+wvMILnb+58xpkqTNrYbelh99dY7K8usxoCusQmqix9Q==",
          "requires": {
            "bn.js": "^5.2.0",
            "bs58": "^4.0.0",
            "text-encoding-utf-8": "^1.0.2"
          }
        },
        "http-errors": {
          "version": "1.8.1",
          "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.8.1.tgz",
          "integrity": "sha512-Kpk9Sm7NmI+RHhnj6OIWDI1d6fIoFAtFt9RLaTMRlg/8w49juAStsrBgp0Dp4OdxdVbRIeKhtCUvoi/RuAhO4g==",
          "requires": {
            "depd": "~1.1.2",
            "inherits": "2.0.4",
            "setprototypeof": "1.2.0",
            "statuses": ">= 1.5.0 < 2",
            "toidentifier": "1.0.1"
          },
          "dependencies": {
            "depd": {
              "version": "1.1.2",
              "resolved": "https://registry.npmjs.org/depd/-/depd-1.1.2.tgz",
              "integrity": "sha512-7emPTl6Dpo6JRXOXjLRxck+FlLRX5847cLKEn00PLAgc3g2hTZZgr+e4c2v6QpSmLeFP3n5yUo7ft6avBK/5jQ=="
            }
          }
        },
        "near-api-js": {
          "version": "0.44.2",
          "resolved": "https://registry.npmjs.org/near-api-js/-/near-api-js-0.44.2.tgz",
          "integrity": "sha512-eMnc4V+geggapEUa3nU2p8HSHn/njtloI4P2mceHQWO8vDE1NGpnAw8FuTBrLmXSgIv9m6oocgFc9t3VNf5zwg==",
          "requires": {
            "bn.js": "5.2.0",
            "borsh": "^0.6.0",
            "bs58": "^4.0.0",
            "depd": "^2.0.0",
            "error-polyfill": "^0.1.3",
            "http-errors": "^1.7.2",
            "js-sha256": "^0.9.0",
            "mustache": "^4.0.0",
            "node-fetch": "^2.6.1",
            "text-encoding-utf-8": "^1.0.2",
            "tweetnacl": "^1.0.1"
          }
        },
        "node-fetch": {
          "version": "2.6.11",
          "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.11.tgz",
          "integrity": "sha512-4I6pdBY1EthSqDmJkiNk3JIT8cswwR9nfeW/cPdUagJYEQG7R95WRH74wpz7ma8Gh/9dI9FP+OU+0E4FvtA55w==",
          "requires": {
            "whatwg-url": "^5.0.0"
          }
        },
        "statuses": {
          "version": "1.5.0",
          "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.5.0.tgz",
          "integrity": "sha512-OpZ3zP+jT1PI7I8nemJX4AKmAX070ZkYPVWV/AaKTJl+tXCTGyVdC1a4SL8RUQYEwk/f34ZX8UTykN68FwrqAA=="
        }
      }
    },
    "@rollup/plugin-babel": {
      "version": "5.3.1",
      "resolved": "https://registry.npmjs.org/@rollup/plugin-babel/-/plugin-babel-5.3.1.tgz",
      "integrity": "sha512-WFfdLWU/xVWKeRQnKmIAQULUI7Il0gZnBIH/ZFO069wYIfPu+8zrfp/KMW0atmELoRDq8FbiP3VCss9MhCut7Q==",
      "requires": {
        "@babel/helper-module-imports": "^7.10.4",
        "@rollup/pluginutils": "^3.1.0"
      }
    },
    "@rollup/plugin-commonjs": {
      "version": "21.1.0",
      "resolved": "https://registry.npmjs.org/@rollup/plugin-commonjs/-/plugin-commonjs-21.1.0.tgz",
      "integrity": "sha512-6ZtHx3VHIp2ReNNDxHjuUml6ur+WcQ28N1yHgCQwsbNkQg2suhxGMDQGJOn/KuDxKtd1xuZP5xSTwBA4GQ8hbA==",
      "requires": {
        "@rollup/pluginutils": "^3.1.0",
        "commondir": "^1.0.1",
        "estree-walker": "^2.0.1",
        "glob": "^7.1.6",
        "is-reference": "^1.2.1",
        "magic-string": "^0.25.7",
        "resolve": "^1.17.0"
      },
      "dependencies": {
        "brace-expansion": {
          "version": "1.1.11",
          "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
          "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
          "requires": {
            "balanced-match": "^1.0.0",
            "concat-map": "0.0.1"
          }
        },
        "glob": {
          "version": "7.2.3",
          "resolved": "https://registry.npmjs.org/glob/-/glob-7.2.3.tgz",
          "integrity": "sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==",
          "requires": {
            "fs.realpath": "^1.0.0",
            "inflight": "^1.0.4",
            "inherits": "2",
            "minimatch": "^3.1.1",
            "once": "^1.3.0",
            "path-is-absolute": "^1.0.0"
          }
        },
        "minimatch": {
          "version": "3.1.2",
          "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
          "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
          "requires": {
            "brace-expansion": "^1.1.7"
          }
        }
      }
    },
    "@rollup/plugin-json": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/@rollup/plugin-json/-/plugin-json-4.1.0.tgz",
      "integrity": "sha512-yfLbTdNS6amI/2OpmbiBoW12vngr5NW2jCJVZSBEz+H5KfUJZ2M7sDjk0U6GOOdCWFVScShte29o9NezJ53TPw==",
      "requires": {
        "@rollup/pluginutils": "^3.0.8"
      }
    },
    "@rollup/plugin-node-resolve": {
      "version": "9.0.0",
      "resolved": "https://registry.npmjs.org/@rollup/plugin-node-resolve/-/plugin-node-resolve-9.0.0.tgz",
      "integrity": "sha512-gPz+utFHLRrd41WMP13Jq5mqqzHL3OXrfj3/MkSyB6UBIcuNt9j60GCbarzMzdf1VHFpOxfQh/ez7wyadLMqkg==",
      "requires": {
        "@rollup/pluginutils": "^3.1.0",
        "@types/resolve": "1.17.1",
        "builtin-modules": "^3.1.0",
        "deepmerge": "^4.2.2",
        "is-module": "^1.0.0",
        "resolve": "^1.17.0"
      }
    },
    "@rollup/plugin-replace": {
      "version": "2.4.2",
      "resolved": "https://registry.npmjs.org/@rollup/plugin-replace/-/plugin-replace-2.4.2.tgz",
      "integrity": "sha512-IGcu+cydlUMZ5En85jxHH4qj2hta/11BHq95iHEyb2sbgiN0eCdzvUcHw5gt9pBL5lTi4JDYJ1acCoMGpTvEZg==",
      "requires": {
        "@rollup/pluginutils": "^3.1.0",
        "magic-string": "^0.25.7"
      }
    },
    "@rollup/pluginutils": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/@rollup/pluginutils/-/pluginutils-3.1.0.tgz",
      "integrity": "sha512-GksZ6pr6TpIjHm8h9lSQ8pi8BE9VeubNT0OMJ3B5uZJ8pz73NPiqOtCog/x2/QzM1ENChPKxMDhiQuRHsqc+lg==",
      "requires": {
        "@types/estree": "0.0.39",
        "estree-walker": "^1.0.1",
        "picomatch": "^2.2.2"
      },
      "dependencies": {
        "estree-walker": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/estree-walker/-/estree-walker-1.0.1.tgz",
          "integrity": "sha512-1fMXF3YP4pZZVozF8j/ZLfvnR8NSIljt56UhbZ5PeeDmmGHpgpdwQt7ITlGvYaQukCvuBRMLEiKiYC+oeIg4cg=="
        }
      }
    },
    "@sindresorhus/is": {
      "version": "4.6.0",
      "resolved": "https://registry.npmjs.org/@sindresorhus/is/-/is-4.6.0.tgz",
      "integrity": "sha512-t09vSN3MdfsyCHoFcTRCH/iUtG7OJ0CsjzB8cjAmKc/va/kIgeDI/TxsigdncE/4be734m0cvIYwNaV4i2XqAw=="
    },
    "@socket.io/component-emitter": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/@socket.io/component-emitter/-/component-emitter-3.1.0.tgz",
      "integrity": "sha512-+9jVqKhRSpsc591z5vX+X5Yyw+he/HCB4iQ/RYxw35CEPaY1gnsNE43nf9n9AaYjAQrTiI/mOwKUKdUs9vf7Xg=="
    },
    "@sqltools/formatter": {
      "version": "1.2.5",
      "resolved": "https://registry.npmjs.org/@sqltools/formatter/-/formatter-1.2.5.tgz",
      "integrity": "sha512-Uy0+khmZqUrUGm5dmMqVlnvufZRSK0FbYzVgp0UMstm+F5+W2/jnEEQyc9vo1ZR/E5ZI/B1WjjoTqBqwJL6Krw=="
    },
    "@styled-system/background": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/@styled-system/background/-/background-5.1.2.tgz",
      "integrity": "sha512-jtwH2C/U6ssuGSvwTN3ri/IyjdHb8W9X/g8Y0JLcrH02G+BW3OS8kZdHphF1/YyRklnrKrBT2ngwGUK6aqqV3A==",
      "requires": {
        "@styled-system/core": "^5.1.2"
      }
    },
    "@styled-system/border": {
      "version": "5.1.5",
      "resolved": "https://registry.npmjs.org/@styled-system/border/-/border-5.1.5.tgz",
      "integrity": "sha512-JvddhNrnhGigtzWRCVuAHepniyVi6hBlimxWDVAdcTuk7aRn9BYJUwfHslURtwYFsF5FoEs8Zmr1oZq2M1AP0A==",
      "requires": {
        "@styled-system/core": "^5.1.2"
      }
    },
    "@styled-system/color": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/@styled-system/color/-/color-5.1.2.tgz",
      "integrity": "sha512-1kCkeKDZkt4GYkuFNKc7vJQMcOmTl3bJY3YBUs7fCNM6mMYJeT1pViQ2LwBSBJytj3AB0o4IdLBoepgSgGl5MA==",
      "requires": {
        "@styled-system/core": "^5.1.2"
      }
    },
    "@styled-system/core": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/@styled-system/core/-/core-5.1.2.tgz",
      "integrity": "sha512-XclBDdNIy7OPOsN4HBsawG2eiWfCcuFt6gxKn1x4QfMIgeO6TOlA2pZZ5GWZtIhCUqEPTgIBta6JXsGyCkLBYw==",
      "requires": {
        "object-assign": "^4.1.1"
      }
    },
    "@styled-system/css": {
      "version": "5.1.5",
      "resolved": "https://registry.npmjs.org/@styled-system/css/-/css-5.1.5.tgz",
      "integrity": "sha512-XkORZdS5kypzcBotAMPBoeckDs9aSZVkvrAlq5K3xP8IMAUek+x2O4NtwoSgkYkWWzVBu6DGdFZLR790QWGG+A=="
    },
    "@styled-system/flexbox": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/@styled-system/flexbox/-/flexbox-5.1.2.tgz",
      "integrity": "sha512-6hHV52+eUk654Y1J2v77B8iLeBNtc+SA3R4necsu2VVinSD7+XY5PCCEzBFaWs42dtOEDIa2lMrgL0YBC01mDQ==",
      "requires": {
        "@styled-system/core": "^5.1.2"
      }
    },
    "@styled-system/grid": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/@styled-system/grid/-/grid-5.1.2.tgz",
      "integrity": "sha512-K3YiV1KyHHzgdNuNlaw8oW2ktMuGga99o1e/NAfTEi5Zsa7JXxzwEnVSDSBdJC+z6R8WYTCYRQC6bkVFcvdTeg==",
      "requires": {
        "@styled-system/core": "^5.1.2"
      }
    },
    "@styled-system/layout": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/@styled-system/layout/-/layout-5.1.2.tgz",
      "integrity": "sha512-wUhkMBqSeacPFhoE9S6UF3fsMEKFv91gF4AdDWp0Aym1yeMPpqz9l9qS/6vjSsDPF7zOb5cOKC3tcKKOMuDCPw==",
      "requires": {
        "@styled-system/core": "^5.1.2"
      }
    },
    "@styled-system/position": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/@styled-system/position/-/position-5.1.2.tgz",
      "integrity": "sha512-60IZfMXEOOZe3l1mCu6sj/2NAyUmES2kR9Kzp7s2D3P4qKsZWxD1Se1+wJvevb+1TP+ZMkGPEYYXRyU8M1aF5A==",
      "requires": {
        "@styled-system/core": "^5.1.2"
      }
    },
    "@styled-system/shadow": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/@styled-system/shadow/-/shadow-5.1.2.tgz",
      "integrity": "sha512-wqniqYb7XuZM7K7C0d1Euxc4eGtqEe/lvM0WjuAFsQVImiq6KGT7s7is+0bNI8O4Dwg27jyu4Lfqo/oIQXNzAg==",
      "requires": {
        "@styled-system/core": "^5.1.2"
      }
    },
    "@styled-system/space": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/@styled-system/space/-/space-5.1.2.tgz",
      "integrity": "sha512-+zzYpR8uvfhcAbaPXhH8QgDAV//flxqxSjHiS9cDFQQUSznXMQmxJegbhcdEF7/eNnJgHeIXv1jmny78kipgBA==",
      "requires": {
        "@styled-system/core": "^5.1.2"
      }
    },
    "@styled-system/typography": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/@styled-system/typography/-/typography-5.1.2.tgz",
      "integrity": "sha512-BxbVUnN8N7hJ4aaPOd7wEsudeT7CxarR+2hns8XCX1zp0DFfbWw4xYa/olA0oQaqx7F1hzDg+eRaGzAJbF+jOg==",
      "requires": {
        "@styled-system/core": "^5.1.2"
      }
    },
    "@styled-system/variant": {
      "version": "5.1.5",
      "resolved": "https://registry.npmjs.org/@styled-system/variant/-/variant-5.1.5.tgz",
      "integrity": "sha512-Yn8hXAFoWIro8+Q5J8YJd/mP85Teiut3fsGVR9CAxwgNfIAiqlYxsk5iHU7VHJks/0KjL4ATSjmbtCDC/4l1qw==",
      "requires": {
        "@styled-system/core": "^5.1.2",
        "@styled-system/css": "^5.1.5"
      }
    },
    "@szmarczak/http-timer": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/@szmarczak/http-timer/-/http-timer-5.0.1.tgz",
      "integrity": "sha512-+PmQX0PiAYPMeVYe237LJAYvOMYW1j2rH5YROyS3b4CTVJum34HfRvKvAzozHAQG0TnHNdUfY9nCeUyRAs//cw==",
      "requires": {
        "defer-to-connect": "^2.0.1"
      }
    },
    "@tronweb3/google-protobuf": {
      "version": "3.21.2",
      "resolved": "https://registry.npmjs.org/@tronweb3/google-protobuf/-/google-protobuf-3.21.2.tgz",
      "integrity": "sha512-IVcT2GfWX3K6tHUVhs14NP5uzKhQt4KeDya1g9ACxuZsUzsaoGUIGzceK2Ltu7xp1YV94AaHOf4yxLAivlvEkQ=="
    },
    "@tsconfig/node10": {
      "version": "1.0.9",
      "resolved": "https://registry.npmjs.org/@tsconfig/node10/-/node10-1.0.9.tgz",
      "integrity": "sha512-jNsYVVxU8v5g43Erja32laIDHXeoNvFEpX33OK4d6hljo3jDhCBDhx5dhCCTMWUojscpAagGiRkBKxpdl9fxqA=="
    },
    "@tsconfig/node12": {
      "version": "1.0.11",
      "resolved": "https://registry.npmjs.org/@tsconfig/node12/-/node12-1.0.11.tgz",
      "integrity": "sha512-cqefuRsh12pWyGsIoBKJA9luFu3mRxCA+ORZvA4ktLSzIuCUtWVxGIuXigEwO5/ywWFMZ2QEGKWvkZG1zDMTag=="
    },
    "@tsconfig/node14": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/@tsconfig/node14/-/node14-1.0.3.tgz",
      "integrity": "sha512-ysT8mhdixWK6Hw3i1V2AeRqZ5WfXg1G43mqoYlM2nc6388Fq5jcXyr5mRsqViLx/GJYdoL0bfXD8nmF+Zn/Iow=="
    },
    "@tsconfig/node16": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/@tsconfig/node16/-/node16-1.0.3.tgz",
      "integrity": "sha512-yOlFc+7UtL/89t2ZhjPvvB/DeAr3r+Dq58IgzsFkOAvVC6NMJXmCGjbptdXdR9qsX7pKcTL+s87FtYREi2dEEQ=="
    },
    "@types/axios": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@types/axios/-/axios-0.14.0.tgz",
      "integrity": "sha512-KqQnQbdYE54D7oa/UmYVMZKq7CO4l8DEENzOKc4aBRwxCXSlJXGz83flFx5L7AWrOQnmuN3kVsRdt+GZPPjiVQ==",
      "dev": true,
      "requires": {
        "axios": "*"
      }
    },
    "@types/babel-core": {
      "version": "6.25.7",
      "resolved": "https://registry.npmjs.org/@types/babel-core/-/babel-core-6.25.7.tgz",
      "integrity": "sha512-WPnyzNFVRo6bxpr7bcL27qXtNKNQ3iToziNBpibaXHyKGWQA0+tTLt73QQxC/5zzbM544ih6Ni5L5xrck6rGwg==",
      "requires": {
        "@types/babel-generator": "*",
        "@types/babel-template": "*",
        "@types/babel-traverse": "*",
        "@types/babel-types": "*",
        "@types/babylon": "*"
      }
    },
    "@types/babel-generator": {
      "version": "6.25.5",
      "resolved": "https://registry.npmjs.org/@types/babel-generator/-/babel-generator-6.25.5.tgz",
      "integrity": "sha512-lhbwMlAy5rfWG+R6l8aPtJdEFX/kcv6LMFIuvUb0i89ehqgD24je9YcB+0fRspQhgJGlEsUImxpw4pQeKS/+8Q==",
      "requires": {
        "@types/babel-types": "*"
      }
    },
    "@types/babel-template": {
      "version": "6.25.2",
      "resolved": "https://registry.npmjs.org/@types/babel-template/-/babel-template-6.25.2.tgz",
      "integrity": "sha512-QKtDQRJmAz3Y1HSxfMl0syIHebMc/NnOeH/8qeD0zjgU2juD0uyC922biMxCy5xjTNvHinigML2l8kxE8eEBmw==",
      "requires": {
        "@types/babel-types": "*",
        "@types/babylon": "*"
      }
    },
    "@types/babel-traverse": {
      "version": "6.25.7",
      "resolved": "https://registry.npmjs.org/@types/babel-traverse/-/babel-traverse-6.25.7.tgz",
      "integrity": "sha512-BeQiEGLnVzypzBdsexEpZAHUx+WucOMXW6srEWDkl4SegBlaCy+iBvRO+4vz6EZ+BNQg22G4MCdDdvZxf+jW5A==",
      "requires": {
        "@types/babel-types": "*"
      }
    },
    "@types/babel-types": {
      "version": "7.0.11",
      "resolved": "https://registry.npmjs.org/@types/babel-types/-/babel-types-7.0.11.tgz",
      "integrity": "sha512-pkPtJUUY+Vwv6B1inAz55rQvivClHJxc9aVEPPmaq2cbyeMLCiDpbKpcKyX4LAwpNGi+SHBv0tHv6+0gXv0P2A=="
    },
    "@types/babylon": {
      "version": "6.16.6",
      "resolved": "https://registry.npmjs.org/@types/babylon/-/babylon-6.16.6.tgz",
      "integrity": "sha512-G4yqdVlhr6YhzLXFKy5F7HtRBU8Y23+iWy7UKthMq/OSQnL1hbsoeXESQ2LY8zEDlknipDG3nRGhUC9tkwvy/w==",
      "requires": {
        "@types/babel-types": "*"
      }
    },
    "@types/big.js": {
      "version": "6.1.6",
      "resolved": "https://registry.npmjs.org/@types/big.js/-/big.js-6.1.6.tgz",
      "integrity": "sha512-0r9J+Zz9rYm2hOTwiMAVkm3XFQ4u5uTK37xrQMhc9bysn/sf/okzovWMYYIBMFTn/yrEZ11pusgLEaoarTlQbA=="
    },
    "@types/bip32": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/@types/bip32/-/bip32-2.0.0.tgz",
      "integrity": "sha512-c94+QKb7u2kg8wht+5JmbA8mBBelkNJR0mkuN73HtUhPYW5z/s5NZT0Cc3OO0sXNilXBfaxPHm11nUemoKjeJQ==",
      "dev": true,
      "requires": {
        "bip32": "*"
      }
    },
    "@types/bip39": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/@types/bip39/-/bip39-3.0.0.tgz",
      "integrity": "sha512-6CqBtChR2JHspepOd8Y2x2BYyq8GBN8hfrbBrbaj7s7j07kMaghvUPnsVTIYbr2c1yV0Pu50wBbVD56KSdalKQ==",
      "dev": true,
      "requires": {
        "bip39": "*"
      }
    },
    "@types/bitcoinjs-lib": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/@types/bitcoinjs-lib/-/bitcoinjs-lib-5.0.0.tgz",
      "integrity": "sha512-9zXjgmH2E8qEZ9gQ9GH+I6Cze3bweQbyXtR/X4RD3SdR5I4jdRPvmBrKmjegV3HZG03KNricjEoq+lQUtIXCKQ==",
      "dev": true,
      "requires": {
        "bitcoinjs-lib": "*"
      }
    },
    "@types/bn.js": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/@types/bn.js/-/bn.js-5.1.1.tgz",
      "integrity": "sha512-qNrYbZqMx0uJAfKnKclPh+dTwK33KfLHYqtyODwd5HnXOjnkhc4qgn3BrK6RWyGZm5+sIFE7Q7Vz6QQtJB7w7g==",
      "requires": {
        "@types/node": "*"
      }
    },
    "@types/body-parser": {
      "version": "1.19.2",
      "resolved": "https://registry.npmjs.org/@types/body-parser/-/body-parser-1.19.2.tgz",
      "integrity": "sha512-ALYone6pm6QmwZoAgeyNksccT9Q4AWZQ6PvfwR37GT6r6FWUPguq6sUmNGSMV2Wr761oQoBxwGGa6DR5o1DC9g==",
      "dev": true,
      "requires": {
        "@types/connect": "*",
        "@types/node": "*"
      }
    },
    "@types/cacheable-request": {
      "version": "6.0.3",
      "resolved": "https://registry.npmjs.org/@types/cacheable-request/-/cacheable-request-6.0.3.tgz",
      "integrity": "sha512-IQ3EbTzGxIigb1I3qPZc1rWJnH0BmSKv5QYTalEwweFvyBDLSAe24zP0le/hyi7ecGfZVlIVAg4BZqb8WBwKqw==",
      "requires": {
        "@types/http-cache-semantics": "*",
        "@types/keyv": "^3.1.4",
        "@types/node": "*",
        "@types/responselike": "^1.0.0"
      }
    },
    "@types/connect": {
      "version": "3.4.35",
      "resolved": "https://registry.npmjs.org/@types/connect/-/connect-3.4.35.tgz",
      "integrity": "sha512-cdeYyv4KWoEgpBISTxWvqYsVy444DOqehiF3fM3ne10AmJ62RSyNkUnxMJXHQWRQQX2eR94m5y1IZyDwBjV9FQ==",
      "dev": true,
      "requires": {
        "@types/node": "*"
      }
    },
    "@types/cookie": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/@types/cookie/-/cookie-0.4.1.tgz",
      "integrity": "sha512-XW/Aa8APYr6jSVVA1y/DEIZX0/GMKLEVekNG727R8cs56ahETkRAy/3DR7+fJyh7oUgGwNQaRfXCun0+KbWY7Q=="
    },
    "@types/cors": {
      "version": "2.8.13",
      "resolved": "https://registry.npmjs.org/@types/cors/-/cors-2.8.13.tgz",
      "integrity": "sha512-RG8AStHlUiV5ysZQKq97copd2UmVYw3/pRMLefISZ3S1hK104Cwm7iLQ3fTKx+lsUH2CE8FlLaYeEA2LSeqYUA==",
      "requires": {
        "@types/node": "*"
      }
    },
    "@types/crypto-js": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/@types/crypto-js/-/crypto-js-4.1.1.tgz",
      "integrity": "sha512-BG7fQKZ689HIoc5h+6D2Dgq1fABRa0RbBWKBd9SP/MVRVXROflpm5fhwyATX5duFmbStzyzyycPB8qUYKDH3NA==",
      "dev": true
    },
    "@types/dotenv": {
      "version": "8.2.0",
      "resolved": "https://registry.npmjs.org/@types/dotenv/-/dotenv-8.2.0.tgz",
      "integrity": "sha512-ylSC9GhfRH7m1EUXBXofhgx4lUWmFeQDINW5oLuS+gxWdfUeW4zJdeVTYVkexEW+e2VUvlZR2kGnGGipAWR7kw==",
      "dev": true,
      "requires": {
        "dotenv": "*"
      }
    },
    "@types/estree": {
      "version": "0.0.39",
      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-0.0.39.tgz",
      "integrity": "sha512-EYNwp3bU+98cpU4lAWYYL7Zz+2gryWH1qbdDTidVd6hkiR6weksdbMadyXKXNPEkQFhXM+hVO9ZygomHXp+AIw=="
    },
    "@types/express": {
      "version": "4.17.17",
      "resolved": "https://registry.npmjs.org/@types/express/-/express-4.17.17.tgz",
      "integrity": "sha512-Q4FmmuLGBG58btUnfS1c1r/NQdlp3DMfGDGig8WhfpA2YRUtEkxAjkZb0yvplJGYdF1fsQ81iMDcH24sSCNC/Q==",
      "dev": true,
      "requires": {
        "@types/body-parser": "*",
        "@types/express-serve-static-core": "^4.17.33",
        "@types/qs": "*",
        "@types/serve-static": "*"
      }
    },
    "@types/express-handlebars": {
      "version": "5.3.1",
      "resolved": "https://registry.npmjs.org/@types/express-handlebars/-/express-handlebars-5.3.1.tgz",
      "integrity": "sha512-DSzaERLO4gHb8AqnrL58jzSDyT0yDdl6HqDc+bGz1Hf0nrG1FK30nHGzv8NBEGR8QV9eUGB/YaE0Qj3NjF7siw==",
      "dev": true
    },
    "@types/express-serve-static-core": {
      "version": "4.17.33",
      "resolved": "https://registry.npmjs.org/@types/express-serve-static-core/-/express-serve-static-core-4.17.33.tgz",
      "integrity": "sha512-TPBqmR/HRYI3eC2E5hmiivIzv+bidAfXofM+sbonAGvyDhySGw9/PQZFt2BLOrjUUR++4eJVpx6KnLQK1Fk9tA==",
      "dev": true,
      "requires": {
        "@types/node": "*",
        "@types/qs": "*",
        "@types/range-parser": "*"
      }
    },
    "@types/http-cache-semantics": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/@types/http-cache-semantics/-/http-cache-semantics-4.0.1.tgz",
      "integrity": "sha512-SZs7ekbP8CN0txVG2xVRH6EgKmEm31BOxA07vkFaETzZz1xh+cbt8BcI0slpymvwhx5dlFnQG2rTlPVQn+iRPQ=="
    },
    "@types/json-schema": {
      "version": "7.0.11",
      "resolved": "https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.11.tgz",
      "integrity": "sha512-wOuvG1SN4Us4rez+tylwwwCV1psiNVOkJeM3AUWUNWg/jDQY2+HE/444y5gc+jBmRqASOm2Oeh5c1axHobwRKQ=="
    },
    "@types/keyv": {
      "version": "3.1.4",
      "resolved": "https://registry.npmjs.org/@types/keyv/-/keyv-3.1.4.tgz",
      "integrity": "sha512-BQ5aZNSCpj7D6K2ksrRCTmKRLEpnPvWDiLPfoGyhZ++8YtiK9d/3DBKPJgry359X/P1PfruyYwvnvwFjuEiEIg==",
      "requires": {
        "@types/node": "*"
      }
    },
    "@types/lodash": {
      "version": "4.14.191",
      "resolved": "https://registry.npmjs.org/@types/lodash/-/lodash-4.14.191.tgz",
      "integrity": "sha512-BdZ5BCCvho3EIXw6wUCXHe7rS53AIDPLE+JzwgT+OsJk53oBfbSmZZ7CX4VaRoN78N+TJpFi9QPlfIVNmJYWxQ=="
    },
    "@types/mime": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/@types/mime/-/mime-3.0.1.tgz",
      "integrity": "sha512-Y4XFY5VJAuw0FgAqPNd6NNoV44jbq9Bz2L7Rh/J6jLTiHBSBJa9fxqQIvkIld4GsoDOcCbvzOUAbLPsSKKg+uA==",
      "dev": true
    },
    "@types/morgan": {
      "version": "1.9.4",
      "resolved": "https://registry.npmjs.org/@types/morgan/-/morgan-1.9.4.tgz",
      "integrity": "sha512-cXoc4k+6+YAllH3ZHmx4hf7La1dzUk6keTR4bF4b4Sc0mZxU/zK4wO7l+ZzezXm/jkYj/qC+uYGZrarZdIVvyQ==",
      "dev": true,
      "requires": {
        "@types/node": "*"
      }
    },
    "@types/multer": {
      "version": "1.4.7",
      "resolved": "https://registry.npmjs.org/@types/multer/-/multer-1.4.7.tgz",
      "integrity": "sha512-/SNsDidUFCvqqcWDwxv2feww/yqhNeTRL5CVoL3jU4Goc4kKEL10T7Eye65ZqPNi4HRx8sAEX59pV1aEH7drNA==",
      "dev": true,
      "requires": {
        "@types/express": "*"
      }
    },
    "@types/node": {
      "version": "18.14.5",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-18.14.5.tgz",
      "integrity": "sha512-CRT4tMK/DHYhw1fcCEBwME9CSaZNclxfzVMe7GsO6ULSwsttbj70wSiX6rZdIjGblu93sTJxLdhNIT85KKI7Qw=="
    },
    "@types/node-forge": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/@types/node-forge/-/node-forge-1.3.1.tgz",
      "integrity": "sha512-hvQ7Wav8I0j9amPXJtGqI/Yx70zeF62UKlAYq8JPm0nHzjKKzZvo9iR3YI2MiOghZRlOI+tQ2f6D+G6vVf4V2Q==",
      "dev": true,
      "requires": {
        "@types/node": "*"
      }
    },
    "@types/nodemailer": {
      "version": "6.4.7",
      "resolved": "https://registry.npmjs.org/@types/nodemailer/-/nodemailer-6.4.7.tgz",
      "integrity": "sha512-f5qCBGAn/f0qtRcd4SEn88c8Fp3Swct1731X4ryPKqS61/A3LmmzN8zaEz7hneJvpjFbUUgY7lru/B/7ODTazg==",
      "dev": true,
      "requires": {
        "@types/node": "*"
      }
    },
    "@types/nodemailer-express-handlebars": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/@types/nodemailer-express-handlebars/-/nodemailer-express-handlebars-4.0.2.tgz",
      "integrity": "sha512-LnKnqgl6C3osQKQDcIxB6P4iS2Iixq+p0ZCC93pzhSRLvo4PgGHmrTFE38ZGrFxc/DyZefYGEsYHSblxJtwuxw==",
      "dev": true,
      "requires": {
        "@types/express-handlebars": "^5",
        "@types/nodemailer": "*"
      }
    },
    "@types/otplib": {
      "version": "10.0.0",
      "resolved": "https://registry.npmjs.org/@types/otplib/-/otplib-10.0.0.tgz",
      "integrity": "sha512-fxgTy0WQiylowcAuKgCdMW/DcWAz/Qo/GZjY5sLD7/z12RXXjIardQnsZU2iSHWFznVlE+7VstBWZnHUA8aF8Q==",
      "dev": true,
      "requires": {
        "otplib": "*"
      }
    },
    "@types/parse-json": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/@types/parse-json/-/parse-json-4.0.0.tgz",
      "integrity": "sha512-//oorEZjL6sbPcKUaCdIGlIUeH26mgzimjBB77G6XRgnDl/L5wOnpyBGRe/Mmf5CVW3PwEBE1NjiMZ/ssFh4wA=="
    },
    "@types/pbkdf2": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/@types/pbkdf2/-/pbkdf2-3.1.0.tgz",
      "integrity": "sha512-Cf63Rv7jCQ0LaL8tNXmEyqTHuIJxRdlS5vMh1mj5voN4+QFhVZnlZruezqpWYDiJ8UTzhP0VmeLXCmBk66YrMQ==",
      "requires": {
        "@types/node": "*"
      }
    },
    "@types/pem": {
      "version": "1.9.6",
      "resolved": "https://registry.npmjs.org/@types/pem/-/pem-1.9.6.tgz",
      "integrity": "sha512-IC67SxacM9fxEi/w7hf98dTun83OwUMeLMo1NS2gE0wdM9MHeg73iH/Pp9nB02OUCQ7Zb2UuKE/IpFCmQw9jxw==",
      "dev": true,
      "requires": {
        "@types/node": "*"
      }
    },
    "@types/pem-jwk": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/@types/pem-jwk/-/pem-jwk-2.0.0.tgz",
      "integrity": "sha512-f5qbnCGcBZsSyj0wwpDSzQL8JCw8n3elwVsstHWplQnE+W6cESfddM5tTE2Hn3hUV52Scmr8pSU37dbW3qOm0w==",
      "dev": true
    },
    "@types/pg": {
      "version": "8.6.6",
      "resolved": "https://registry.npmjs.org/@types/pg/-/pg-8.6.6.tgz",
      "integrity": "sha512-O2xNmXebtwVekJDD+02udOncjVcMZQuTEQEMpKJ0ZRf5E7/9JJX3izhKUcUifBkyKpljyUM6BTgy2trmviKlpw==",
      "dev": true,
      "requires": {
        "@types/node": "*",
        "pg-protocol": "*",
        "pg-types": "^2.2.0"
      }
    },
    "@types/prop-types": {
      "version": "15.7.5",
      "resolved": "https://registry.npmjs.org/@types/prop-types/-/prop-types-15.7.5.tgz",
      "integrity": "sha512-JCB8C6SnDoQf0cNycqd/35A7MjcnK+ZTqE7judS6o7utxUCg6imJg3QK2qzHKszlTjcj2cn+NwMB2i96ubpj7w=="
    },
    "@types/qrcode": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/@types/qrcode/-/qrcode-1.5.0.tgz",
      "integrity": "sha512-x5ilHXRxUPIMfjtM+1vf/GPTRWZ81nqscursm5gMznJeK9M0YnZ1c3bEvRLQ0zSSgedLx1J6MGL231ObQGGhaA==",
      "dev": true,
      "requires": {
        "@types/node": "*"
      }
    },
    "@types/qs": {
      "version": "6.9.7",
      "resolved": "https://registry.npmjs.org/@types/qs/-/qs-6.9.7.tgz",
      "integrity": "sha512-FGa1F62FT09qcrueBA6qYTrJPVDzah9a+493+o2PCXsesWHIn27G98TsSMs3WPNbZIEj4+VJf6saSFpvD+3Zsw==",
      "dev": true
    },
    "@types/range-parser": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/@types/range-parser/-/range-parser-1.2.4.tgz",
      "integrity": "sha512-EEhsLsD6UsDM1yFhAvy0Cjr6VwmpMWqFBCb9w07wVugF7w9nfajxLuVmngTIpgS6svCnm6Vaw+MZhoDCKnOfsw==",
      "dev": true
    },
    "@types/react": {
      "version": "16.14.43",
      "resolved": "https://registry.npmjs.org/@types/react/-/react-16.14.43.tgz",
      "integrity": "sha512-7zdjv7jvoLLQg1tTvpQsm+hyNUMT2mPlNV1+d0I8fbGhkJl82spopMyBlu4wb1dviZAxpGdk5eHu/muacknnfw==",
      "requires": {
        "@types/prop-types": "*",
        "@types/scheduler": "*",
        "csstype": "^3.0.2"
      }
    },
    "@types/resolve": {
      "version": "1.17.1",
      "resolved": "https://registry.npmjs.org/@types/resolve/-/resolve-1.17.1.tgz",
      "integrity": "sha512-yy7HuzQhj0dhGpD8RLXSZWEkLsV9ibvxvi6EiJ3bkqLAO1RGo0WbkWQiwpRlSFymTJRz0d3k5LM3kkx8ArDbLw==",
      "requires": {
        "@types/node": "*"
      }
    },
    "@types/responselike": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/@types/responselike/-/responselike-1.0.0.tgz",
      "integrity": "sha512-85Y2BjiufFzaMIlvJDvTTB8Fxl2xfLo4HgmHzVBz08w4wDePCTjYw66PdrolO0kzli3yam/YCgRufyo1DdQVTA==",
      "requires": {
        "@types/node": "*"
      }
    },
    "@types/scheduler": {
      "version": "0.16.3",
      "resolved": "https://registry.npmjs.org/@types/scheduler/-/scheduler-0.16.3.tgz",
      "integrity": "sha512-5cJ8CB4yAx7BH1oMvdU0Jh9lrEXyPkar6F9G/ERswkCuvP4KQZfZkSjcMbAICCpQTN4OuZn8tz0HiKv9TGZgrQ=="
    },
    "@types/secp256k1": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/@types/secp256k1/-/secp256k1-4.0.3.tgz",
      "integrity": "sha512-Da66lEIFeIz9ltsdMZcpQvmrmmoqrfju8pm1BH8WbYjZSwUgCwXLb9C+9XYogwBITnbsSaMdVPb2ekf7TV+03w==",
      "requires": {
        "@types/node": "*"
      }
    },
    "@types/serialize-javascript": {
      "version": "5.0.2",
      "resolved": "https://registry.npmjs.org/@types/serialize-javascript/-/serialize-javascript-5.0.2.tgz",
      "integrity": "sha512-BRLlwZzRoZukGaBtcUxkLsZsQfWZpvog6MZk3PWQO9Q6pXmXFzjU5iGzZ+943evp6tkkbN98N1Z31KT0UG1yRw==",
      "dev": true
    },
    "@types/serve-static": {
      "version": "1.15.1",
      "resolved": "https://registry.npmjs.org/@types/serve-static/-/serve-static-1.15.1.tgz",
      "integrity": "sha512-NUo5XNiAdULrJENtJXZZ3fHtfMolzZwczzBbnAeBbqBwG+LaG6YaJtuwzwGSQZ2wsCrxjEhNNjAkKigy3n8teQ==",
      "dev": true,
      "requires": {
        "@types/mime": "*",
        "@types/node": "*"
      }
    },
    "@types/socket.io": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/@types/socket.io/-/socket.io-3.0.2.tgz",
      "integrity": "sha512-pu0sN9m5VjCxBZVK8hW37ZcMe8rjn4HHggBN5CbaRTvFwv5jOmuIRZEuddsBPa9Th0ts0SIo3Niukq+95cMBbQ==",
      "dev": true,
      "requires": {
        "socket.io": "*"
      }
    },
    "@types/swagger-jsdoc": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/@types/swagger-jsdoc/-/swagger-jsdoc-6.0.1.tgz",
      "integrity": "sha512-+MUpcbyxD528dECUBCEVm6abNuORdbuGjbrUdHDeAQ+rkPuo2a+L4N02WJHF3bonSSE6SJ3dUJwF2V6+cHnf0w==",
      "dev": true
    },
    "@types/swagger-ui-express": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/@types/swagger-ui-express/-/swagger-ui-express-4.1.3.tgz",
      "integrity": "sha512-jqCjGU/tGEaqIplPy3WyQg+Nrp6y80DCFnDEAvVKWkJyv0VivSSDCChkppHRHAablvInZe6pijDFMnavtN0vqA==",
      "dev": true,
      "requires": {
        "@types/express": "*",
        "@types/serve-static": "*"
      }
    },
    "@types/uuid": {
      "version": "9.0.1",
      "resolved": "https://registry.npmjs.org/@types/uuid/-/uuid-9.0.1.tgz",
      "integrity": "sha512-rFT3ak0/2trgvp4yYZo5iKFEPsET7vKydKF+VRCxlQ9bpheehyAJH89dAkaLEq/j/RZXJIqcgsmPJKUP1Z28HA==",
      "dev": true
    },
    "@types/web3": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/@types/web3/-/web3-1.2.2.tgz",
      "integrity": "sha512-eFiYJKggNrOl0nsD+9cMh2MLk4zVBfXfGnVeRFbpiZzBE20eet4KLA3fXcjSuHaBn0RnQzwLAGdgzgzdet4C0A==",
      "dev": true,
      "requires": {
        "web3": "*"
      }
    },
    "abbrev": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/abbrev/-/abbrev-1.1.1.tgz",
      "integrity": "sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q==",
      "dev": true
    },
    "abortcontroller-polyfill": {
      "version": "1.7.5",
      "resolved": "https://registry.npmjs.org/abortcontroller-polyfill/-/abortcontroller-polyfill-1.7.5.tgz",
      "integrity": "sha512-JMJ5soJWP18htbbxJjG7bG6yuI6pRhgJ0scHHTfkUjf6wjP912xZWvM+A4sJK3gqd9E8fcPbDnOefbA9Th/FIQ=="
    },
    "accepts": {
      "version": "1.3.8",
      "resolved": "https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz",
      "integrity": "sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==",
      "requires": {
        "mime-types": "~2.1.34",
        "negotiator": "0.6.3"
      }
    },
    "acorn": {
      "version": "8.8.2",
      "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.8.2.tgz",
      "integrity": "sha512-xjIYgE8HBrkpd/sJqOGNspf8uHG+NOHGOw6a/Urj8taM2EXfdNAH2oFcPeIFfsv3+kz/mJrS5VuMqbNLjCa2vw=="
    },
    "acorn-walk": {
      "version": "8.2.0",
      "resolved": "https://registry.npmjs.org/acorn-walk/-/acorn-walk-8.2.0.tgz",
      "integrity": "sha512-k+iyHEuPgSw6SbuDpGQM+06HQUa04DZ3o+F6CSzXMvvI5KMvnaEqXe+YVe555R9nn6GPt404fos4wcgpw12SDA=="
    },
    "adminjs": {
      "version": "5.11.0",
      "resolved": "https://registry.npmjs.org/adminjs/-/adminjs-5.11.0.tgz",
      "integrity": "sha512-sqGKskqwRTqZUXMWKNbpV+1HQT+oCamgISe3Kok+uvphCF2ARYuAz7tX1Vpq2jvuIVRuJoBmWnIx6+a4iK0fJw==",
      "requires": {
        "@adminjs/design-system": "^2.2.4",
        "@babel/core": "^7.10.2",
        "@babel/parser": "^7.10.2",
        "@babel/plugin-transform-runtime": "^7.10.1",
        "@babel/polyfill": "^7.10.1",
        "@babel/preset-env": "^7.16.4",
        "@babel/preset-react": "^7.10.1",
        "@babel/preset-typescript": "^7.10.1",
        "@babel/register": "^7.10.1",
        "@rollup/plugin-babel": "^5.2.1",
        "@rollup/plugin-commonjs": "^21.0.1",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^9.0.0",
        "@rollup/plugin-replace": "^2.3.3",
        "@types/babel-core": "^6.25.7",
        "@types/react": "^16.9.16",
        "axios": "^0.24.0",
        "babel-plugin-styled-components": "^1.11.1",
        "commander": "^5.1.0",
        "flat": "^4.1.0",
        "i18next": "19.8.7",
        "lodash": "^4.17.21",
        "ora": "^5.4.1",
        "prop-types": "^15.7.2",
        "punycode": "^2.1.1",
        "react": "^16.13.1",
        "react-beautiful-dnd": "^13.0.0",
        "react-dom": "^16.13.1",
        "react-i18next": "^11.14.3",
        "react-is": "=16.13.1",
        "react-redux": "=7.2.0",
        "react-router": "=5.2.0",
        "react-router-dom": "=5.2.0",
        "react-select": "=3.1.0",
        "redux": "=4.0.5",
        "rollup": "^2.32.1",
        "rollup-plugin-terser": "^6.1.0",
        "slash": "^3.0.0",
        "styled-components": "^5.1.0",
        "uuid": "^8.3.2"
      },
      "dependencies": {
        "axios": {
          "version": "0.24.0",
          "resolved": "https://registry.npmjs.org/axios/-/axios-0.24.0.tgz",
          "integrity": "sha512-Q6cWsys88HoPgAaFAVUb0WpPk0O8iTeisR9IMqy9G8AbO4NlpVknrnQS03zzF9PGAWgO3cgletO3VjV/P7VztA==",
          "requires": {
            "follow-redirects": "^1.14.4"
          }
        },
        "commander": {
          "version": "5.1.0",
          "resolved": "https://registry.npmjs.org/commander/-/commander-5.1.0.tgz",
          "integrity": "sha512-P0CysNDQ7rtVw4QIQtm+MRxV66vKFSvlsQvGYXZWR3qFU0jlMKHZZZgw8e+8DSah4UDKMqnknRDQz+xuQXQ/Zg=="
        },
        "uuid": {
          "version": "8.3.2",
          "resolved": "https://registry.npmjs.org/uuid/-/uuid-8.3.2.tgz",
          "integrity": "sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg=="
        }
      }
    },
    "aes-js": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/aes-js/-/aes-js-3.0.0.tgz",
      "integrity": "sha512-H7wUZRn8WpTq9jocdxQ2c8x2sKo9ZVmzfRE13GiNJXfp7NcKYEdvl3vspKjXox6RIG2VtaRe4JFvxG4rqp2Zuw=="
    },
    "ajv": {
      "version": "6.12.6",
      "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
      "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
      "requires": {
        "fast-deep-equal": "^3.1.1",
        "fast-json-stable-stringify": "^2.0.0",
        "json-schema-traverse": "^0.4.1",
        "uri-js": "^4.2.2"
      }
    },
    "ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ=="
    },
    "ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "requires": {
        "color-convert": "^2.0.1"
      }
    },
    "any-promise": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/any-promise/-/any-promise-1.3.0.tgz",
      "integrity": "sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A=="
    },
    "anymatch": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz",
      "integrity": "sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==",
      "dev": true,
      "requires": {
        "normalize-path": "^3.0.0",
        "picomatch": "^2.0.4"
      }
    },
    "app-root-path": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/app-root-path/-/app-root-path-3.1.0.tgz",
      "integrity": "sha512-biN3PwB2gUtjaYy/isrU3aNWI5w+fAfvHkSvCKeQGxhmYpwKFUxudR3Yya+KqVRHBmEDYh+/lTozYCFbmzX4nA=="
    },
    "append-field": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/append-field/-/append-field-1.0.0.tgz",
      "integrity": "sha512-klpgFSWLW1ZEs8svjfb7g4qWY0YS5imI82dTg+QahUvJ8YqAY0P10Uk8tTyh9ZGuYEZEMaeJYCF5BFuX552hsw=="
    },
    "arg": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/arg/-/arg-4.1.3.tgz",
      "integrity": "sha512-58S9QDqG0Xx27YwPSt9fJxivjYl432YCwfDMfZ+71RAqUrZef7LrKQZ3LHLOwCS4FLNBplP533Zx895SeOCHvA=="
    },
    "argparse": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz",
      "integrity": "sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q=="
    },
    "array-flatten": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz",
      "integrity": "sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg=="
    },
    "asn1": {
      "version": "0.2.6",
      "resolved": "https://registry.npmjs.org/asn1/-/asn1-0.2.6.tgz",
      "integrity": "sha512-ix/FxPn0MDjeyJ7i/yoHGFt/EX6LyNbxSEhPPXODPL+KB0VPk86UYfL0lMdy+KCnv+fmvIzySwaK5COwqVbWTQ==",
      "requires": {
        "safer-buffer": "~2.1.0"
      }
    },
    "assert": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/assert/-/assert-2.0.0.tgz",
      "integrity": "sha512-se5Cd+js9dXJnu6Ag2JFc00t+HmHOen+8Q+L7O9zI0PqQXr20uk2J0XQqMxZEeo5U50o8Nvmmx7dZrl+Ufr35A==",
      "peer": true,
      "requires": {
        "es6-object-assign": "^1.1.0",
        "is-nan": "^1.2.1",
        "object-is": "^1.0.1",
        "util": "^0.12.0"
      }
    },
    "assert-plus": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
      "integrity": "sha512-NfJ4UzBCcQGLDlQq7nHxH+tv3kyZ0hHQqF5BO6J7tNJeP5do1llPr8dZ8zHonfhAu0PHAdMkSo+8o0wxg9lZWw=="
    },
    "async-limiter": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/async-limiter/-/async-limiter-1.0.1.tgz",
      "integrity": "sha512-csOlWGAcRFJaI6m+F2WKdnMKr4HhdhFVBk0H/QbJFMCr+uO2kwohwXQPxw/9OCxp05r5ghVBFSyioixx3gfkNQ=="
    },
    "asynckit": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
      "integrity": "sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q=="
    },
    "available-typed-arrays": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/available-typed-arrays/-/available-typed-arrays-1.0.5.tgz",
      "integrity": "sha512-DMD0KiN46eipeziST1LPP/STfDU0sufISXmjSgvVsoU2tqxctQeASejWcfNtxYKqETM1UxQ8sp2OrSBWpHY6sw=="
    },
    "aws-sign2": {
      "version": "0.7.0",
      "resolved": "https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz",
      "integrity": "sha512-08kcGqnYf/YmjoRhfxyu+CLxBjUtHLXLXX/vUfx9l2LYzG3c1m61nrpyFUZI6zeS+Li/wWMMidD9KgrqtGq3mA=="
    },
    "aws4": {
      "version": "1.12.0",
      "resolved": "https://registry.npmjs.org/aws4/-/aws4-1.12.0.tgz",
      "integrity": "sha512-NmWvPnx0F1SfrQbYwOi7OeaNGokp9XhzNioJ/CSBs8Qa4vxug81mhJEAVZwxXuBmYB5KDRfMq/F3RR0BIU7sWg=="
    },
    "axios": {
      "version": "1.3.4",
      "resolved": "https://registry.npmjs.org/axios/-/axios-1.3.4.tgz",
      "integrity": "sha512-toYm+Bsyl6VC5wSkfkbbNB6ROv7KY93PEBBL6xyDczaIHasAiv4wPqQ/c4RjoQzipxRD2W5g21cOqQulZ7rHwQ==",
      "requires": {
        "follow-redirects": "^1.15.0",
        "form-data": "^4.0.0",
        "proxy-from-env": "^1.1.0"
      }
    },
    "babel-plugin-emotion": {
      "version": "10.2.2",
      "resolved": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.2.2.tgz",
      "integrity": "sha512-SMSkGoqTbTyUTDeuVuPIWifPdUGkTk1Kf9BWRiXIOIcuyMfsdp2EjeiiFvOzX8NOBvEh/ypKYvUh2rkgAJMCLA==",
      "requires": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "0.8.0",
        "@emotion/memoize": "0.7.4",
        "@emotion/serialize": "^0.11.16",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "dependencies": {
        "source-map": {
          "version": "0.5.7",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.5.7.tgz",
          "integrity": "sha512-LbrmJOMUSdEVxIKvdcJzQC+nQhe8FUZQTXQy6+I75skNgn3OoQ0DZA8YnFa7gp8tqtL3KPf1kmo0R5DoApeSGQ=="
        }
      }
    },
    "babel-plugin-macros": {
      "version": "2.8.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-macros/-/babel-plugin-macros-2.8.0.tgz",
      "integrity": "sha512-SEP5kJpfGYqYKpBrj5XU3ahw5p5GOHJ0U5ssOSQ/WBVdwkD2Dzlce95exQTs3jOVWPPKLBN2rlEWkCK7dSmLvg==",
      "requires": {
        "@babel/runtime": "^7.7.2",
        "cosmiconfig": "^6.0.0",
        "resolve": "^1.12.0"
      }
    },
    "babel-plugin-polyfill-corejs2": {
      "version": "0.4.3",
      "resolved": "https://registry.npmjs.org/babel-plugin-polyfill-corejs2/-/babel-plugin-polyfill-corejs2-0.4.3.tgz",
      "integrity": "sha512-bM3gHc337Dta490gg+/AseNB9L4YLHxq1nGKZZSHbhXv4aTYU2MD2cjza1Ru4S6975YLTaL1K8uJf6ukJhhmtw==",
      "requires": {
        "@babel/compat-data": "^7.17.7",
        "@babel/helper-define-polyfill-provider": "^0.4.0",
        "semver": "^6.1.1"
      },
      "dependencies": {
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw=="
        }
      }
    },
    "babel-plugin-polyfill-corejs3": {
      "version": "0.8.1",
      "resolved": "https://registry.npmjs.org/babel-plugin-polyfill-corejs3/-/babel-plugin-polyfill-corejs3-0.8.1.tgz",
      "integrity": "sha512-ikFrZITKg1xH6pLND8zT14UPgjKHiGLqex7rGEZCH2EvhsneJaJPemmpQaIZV5AL03II+lXylw3UmddDK8RU5Q==",
      "requires": {
        "@babel/helper-define-polyfill-provider": "^0.4.0",
        "core-js-compat": "^3.30.1"
      }
    },
    "babel-plugin-polyfill-regenerator": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-polyfill-regenerator/-/babel-plugin-polyfill-regenerator-0.5.0.tgz",
      "integrity": "sha512-hDJtKjMLVa7Z+LwnTCxoDLQj6wdc+B8dun7ayF2fYieI6OzfuvcLMB32ihJZ4UhCBwNYGl5bg/x/P9cMdnkc2g==",
      "requires": {
        "@babel/helper-define-polyfill-provider": "^0.4.0"
      }
    },
    "babel-plugin-styled-components": {
      "version": "1.13.3",
      "resolved": "https://registry.npmjs.org/babel-plugin-styled-components/-/babel-plugin-styled-components-1.13.3.tgz",
      "integrity": "sha512-meGStRGv+VuKA/q0/jXxrPNWEm4LPfYIqxooDTdmh8kFsP/Ph7jJG5rUPwUPX3QHUvggwdbgdGpo88P/rRYsVw==",
      "requires": {
        "@babel/helper-annotate-as-pure": "^7.15.4",
        "@babel/helper-module-imports": "^7.15.4",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "lodash": "^4.17.11"
      }
    },
    "babel-plugin-syntax-jsx": {
      "version": "6.18.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-syntax-jsx/-/babel-plugin-syntax-jsx-6.18.0.tgz",
      "integrity": "sha512-qrPaCSo9c8RHNRHIotaufGbuOBN8rtdC4QrrFFc43vyWCCz7Kl7GL1PGaXtMGQZUXrkCjNEgxDfmAuAabr/rlw=="
    },
    "balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw=="
    },
    "base-x": {
      "version": "3.0.9",
      "resolved": "https://registry.npmjs.org/base-x/-/base-x-3.0.9.tgz",
      "integrity": "sha512-H7JU6iBHTal1gp56aKoaa//YUxEaAOUiydvrV/pILqIHXTtqxSkATOnDA2u+jZ/61sD+L/412+7kzXRtWukhpQ==",
      "requires": {
        "safe-buffer": "^5.0.1"
      }
    },
    "base64-js": {
      "version": "1.5.1",
      "resolved": "https://registry.npmjs.org/base64-js/-/base64-js-1.5.1.tgz",
      "integrity": "sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA=="
    },
    "base64id": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/base64id/-/base64id-2.0.0.tgz",
      "integrity": "sha512-lGe34o6EHj9y3Kts9R4ZYs/Gr+6N7MCaMlIFA3F1R2O5/m7K06AxfSeO5530PEERE6/WyEg3lsuyw4GHlPZHog=="
    },
    "basic-auth": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/basic-auth/-/basic-auth-2.0.1.tgz",
      "integrity": "sha512-NF+epuEdnUYVlGuhaxbbq+dvJttwLnGY+YixlXlME5KpQ5W3CnXA5cVTneY3SPbPDRkcjMbifrwmFYcClgOZeg==",
      "requires": {
        "safe-buffer": "5.1.2"
      },
      "dependencies": {
        "safe-buffer": {
          "version": "5.1.2",
          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
          "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="
        }
      }
    },
    "bcrypt-pbkdf": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.2.tgz",
      "integrity": "sha512-qeFIXtP4MSoi6NLqO12WfqARWWuCKi2Rn/9hJLEmtB5yTNr9DqFWkJRCf2qShWzPeAMRnOgCrq0sg/KLv5ES9w==",
      "requires": {
        "tweetnacl": "^0.14.3"
      },
      "dependencies": {
        "tweetnacl": {
          "version": "0.14.5",
          "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz",
          "integrity": "sha512-KXXFFdAbFXY4geFIwoyNK+f5Z1b7swfXABfL7HXCmoIWMKU3dmS26672A4EeQtDzLKy7SXmfBu51JolvEKwtGA=="
        }
      }
    },
    "bech32": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/bech32/-/bech32-2.0.0.tgz",
      "integrity": "sha512-LcknSilhIGatDAsY1ak2I8VtGaHNhgMSYVxFrGLXv+xLHytaKZKcaUJJUE7qmBr7h33o5YQwP55pMI0xmkpJwg=="
    },
    "big.js": {
      "version": "6.2.1",
      "resolved": "https://registry.npmjs.org/big.js/-/big.js-6.2.1.tgz",
      "integrity": "sha512-bCtHMwL9LeDIozFn+oNhhFoq+yQ3BNdnsLSASUxLciOb1vgvpHsIO1dsENiGMgbb4SkP5TrzWzRiLddn8ahVOQ=="
    },
    "bignumber.js": {
      "version": "9.1.1",
      "resolved": "https://registry.npmjs.org/bignumber.js/-/bignumber.js-9.1.1.tgz",
      "integrity": "sha512-pHm4LsMJ6lzgNGVfZHjMoO8sdoRhOzOH4MLmY65Jg70bpxCKu5iOHNJyfF6OyvYw7t8Fpf35RuzUyqnQsj8Vig=="
    },
    "binary-extensions": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.2.0.tgz",
      "integrity": "sha512-jDctJ/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7blbT6dHOafNAiS8ooQKA==",
      "dev": true
    },
    "bip174": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/bip174/-/bip174-2.1.0.tgz",
      "integrity": "sha512-lkc0XyiX9E9KiVAS1ZiOqK1xfiwvf4FXDDdkDq5crcDzOq+xGytY+14qCsqz7kCiy8rpN1CRNfacRhf9G3JNSA=="
    },
    "bip32": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/bip32/-/bip32-3.1.0.tgz",
      "integrity": "sha512-eoeajYEzJ4d6yyVtby8C+XkCeKItiC4Mx56a0M9VaqTMC73SWOm4xVZG7SaR8e/yp4eSyky2XcBpH3DApPdu7Q==",
      "requires": {
        "bs58check": "^2.1.1",
        "create-hash": "^1.2.0",
        "create-hmac": "^1.1.7",
        "ripemd160": "^2.0.2",
        "typeforce": "^1.11.5",
        "wif": "^2.0.6"
      }
    },
    "bip39": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/bip39/-/bip39-3.1.0.tgz",
      "integrity": "sha512-c9kiwdk45Do5GL0vJMe7tS95VjCii65mYAH7DfWl3uW8AVzXKQVUm64i3hzVybBDMp9r7j9iNxR85+ul8MdN/A==",
      "requires": {
        "@noble/hashes": "^1.2.0"
      }
    },
    "bip39-light": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/bip39-light/-/bip39-light-1.0.7.tgz",
      "integrity": "sha512-WDTmLRQUsiioBdTs9BmSEmkJza+8xfJmptsNJjxnoq3EydSa/ZBXT6rm66KoT3PJIRYMnhSKNR7S9YL1l7R40Q==",
      "requires": {
        "create-hash": "^1.1.0",
        "pbkdf2": "^3.0.9"
      }
    },
    "bitcoinjs-lib": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/bitcoinjs-lib/-/bitcoinjs-lib-6.1.0.tgz",
      "integrity": "sha512-eupi1FBTJmPuAZdChnzTXLv2HBqFW2AICpzXZQLniP0V9FWWeeUQSMKES6sP8isy/xO0ijDexbgkdEyFVrsuJw==",
      "requires": {
        "bech32": "^2.0.0",
        "bip174": "^2.1.0",
        "bs58check": "^2.1.2",
        "create-hash": "^1.1.0",
        "ripemd160": "^2.0.2",
        "typeforce": "^1.11.3",
        "varuint-bitcoin": "^1.1.2",
        "wif": "^2.0.1"
      }
    },
    "bl": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/bl/-/bl-4.1.0.tgz",
      "integrity": "sha512-1W07cM9gS6DcLperZfFSj+bWLtaPGSOHWhPiGzXmvVJbRLdG82sH/Kn8EtW1VqWVA54AKf2h5k5BbnIbwF3h6w==",
      "requires": {
        "buffer": "^5.5.0",
        "inherits": "^2.0.4",
        "readable-stream": "^3.4.0"
      },
      "dependencies": {
        "buffer": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz",
          "integrity": "sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==",
          "requires": {
            "base64-js": "^1.3.1",
            "ieee754": "^1.1.13"
          }
        }
      }
    },
    "blakejs": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/blakejs/-/blakejs-1.2.1.tgz",
      "integrity": "sha512-QXUSXI3QVc/gJME0dBpXrag1kbzOqCjCX8/b54ntNyW6sjtoqxqRk3LTmXzaJoh71zMsDCjM+47jS7XiwN/+fQ=="
    },
    "bluebird": {
      "version": "3.7.2",
      "resolved": "https://registry.npmjs.org/bluebird/-/bluebird-3.7.2.tgz",
      "integrity": "sha512-XpNj6GDQzdfW+r2Wnn7xiSAd7TM3jzkxGXBGTtWKuSXv1xUV+azxAm8jdWZN06QTQk+2N2XB9jRDkvbmQmcRtg=="
    },
    "bn.js": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-5.2.1.tgz",
      "integrity": "sha512-eXRvHzWyYPBuB4NBy0cmYQjGitUrtqwbvlzP3G6VFnNRbsZQIxQ10PbKKHt8gZ/HW/D/747aDl+QkDqg3KQLMQ=="
    },
    "body-parser": {
      "version": "1.20.1",
      "resolved": "https://registry.npmjs.org/body-parser/-/body-parser-1.20.1.tgz",
      "integrity": "sha512-jWi7abTbYwajOytWCQc37VulmWiRae5RyTpaCyDcS5/lMdtwSz5lOpDE67srw/HYe35f1z3fDQw+3txg7gNtWw==",
      "requires": {
        "bytes": "3.1.2",
        "content-type": "~1.0.4",
        "debug": "2.6.9",
        "depd": "2.0.0",
        "destroy": "1.2.0",
        "http-errors": "2.0.0",
        "iconv-lite": "0.4.24",
        "on-finished": "2.4.1",
        "qs": "6.11.0",
        "raw-body": "2.5.1",
        "type-is": "~1.6.18",
        "unpipe": "1.0.0"
      }
    },
    "borsh": {
      "version": "0.7.0",
      "resolved": "https://registry.npmjs.org/borsh/-/borsh-0.7.0.tgz",
      "integrity": "sha512-CLCsZGIBCFnPtkNnieW/a8wmreDmfUtjU2m9yHrzPXIlNbqVs0AQrSatSG6vdNYUqdc83tkQi2eHfF98ubzQLA==",
      "requires": {
        "bn.js": "^5.2.0",
        "bs58": "^4.0.0",
        "text-encoding-utf-8": "^1.0.2"
      }
    },
    "brace-expansion": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz",
      "integrity": "sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==",
      "requires": {
        "balanced-match": "^1.0.0"
      }
    },
    "braces": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.2.tgz",
      "integrity": "sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==",
      "dev": true,
      "requires": {
        "fill-range": "^7.0.1"
      }
    },
    "brorand": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/brorand/-/brorand-1.1.0.tgz",
      "integrity": "sha512-cKV8tMCEpQs4hK/ik71d6LrPOnpkpGBR0wzxqr68g2m/LB2GxVYQroAjMJZRVM1Y4BCjCKc3vAamxSzOY2RP+w=="
    },
    "browserify-aes": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/browserify-aes/-/browserify-aes-1.2.0.tgz",
      "integrity": "sha512-+7CHXqGuspUn/Sl5aO7Ea0xWGAtETPXNSAjHo48JfLdPWcMng33Xe4znFvQweqc/uzk5zSOI3H52CYnjCfb5hA==",
      "requires": {
        "buffer-xor": "^1.0.3",
        "cipher-base": "^1.0.0",
        "create-hash": "^1.1.0",
        "evp_bytestokey": "^1.0.3",
        "inherits": "^2.0.1",
        "safe-buffer": "^5.0.1"
      }
    },
    "browserslist": {
      "version": "4.21.9",
      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.21.9.tgz",
      "integrity": "sha512-M0MFoZzbUrRU4KNfCrDLnvyE7gub+peetoTid3TBIqtunaDJyXlwhakT+/VkvSXcfIzFfK/nkCs4nmyTmxdNSg==",
      "requires": {
        "caniuse-lite": "^1.0.30001503",
        "electron-to-chromium": "^1.4.431",
        "node-releases": "^2.0.12",
        "update-browserslist-db": "^1.0.11"
      }
    },
    "bs58": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/bs58/-/bs58-4.0.1.tgz",
      "integrity": "sha512-Ok3Wdf5vOIlBrgCvTq96gBkJw+JUEzdBgyaza5HLtPm7yTHkjRy8+JzNyHF7BHa0bNWOQIp3m5YF0nnFcOIKLw==",
      "requires": {
        "base-x": "^3.0.2"
      }
    },
    "bs58check": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/bs58check/-/bs58check-2.1.2.tgz",
      "integrity": "sha512-0TS1jicxdU09dwJMNZtVAfzPi6Q6QeN0pM1Fkzrjn+XYHvzMKPU3pHVpva+769iNVSfIYWf7LJ6WR+BuuMf8cA==",
      "requires": {
        "bs58": "^4.0.0",
        "create-hash": "^1.1.0",
        "safe-buffer": "^5.1.2"
      }
    },
    "buffer": {
      "version": "6.0.3",
      "resolved": "https://registry.npmjs.org/buffer/-/buffer-6.0.3.tgz",
      "integrity": "sha512-FTiCpNxtwiZZHEZbcbTIcZjERVICn9yq/pDFkTl95/AxzD1naBctN7YO68riM/gLSDY7sdrMby8hofADYuuqOA==",
      "requires": {
        "base64-js": "^1.3.1",
        "ieee754": "^1.2.1"
      }
    },
    "buffer-from": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.2.tgz",
      "integrity": "sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ=="
    },
    "buffer-to-arraybuffer": {
      "version": "0.0.5",
      "resolved": "https://registry.npmjs.org/buffer-to-arraybuffer/-/buffer-to-arraybuffer-0.0.5.tgz",
      "integrity": "sha512-3dthu5CYiVB1DEJp61FtApNnNndTckcqe4pFcLdvHtrpG+kcyekCJKg4MRiDcFW7A6AODnXB9U4dwQiCW5kzJQ=="
    },
    "buffer-writer": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/buffer-writer/-/buffer-writer-2.0.0.tgz",
      "integrity": "sha512-a7ZpuTZU1TRtnwyCNW3I5dc0wWNC3VR9S++Ewyk2HHZdrO3CQJqSpd+95Us590V6AL7JqUAH2IwZ/398PmNFgw=="
    },
    "buffer-xor": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/buffer-xor/-/buffer-xor-1.0.3.tgz",
      "integrity": "sha512-571s0T7nZWK6vB67HI5dyUF7wXiNcfaPPPTl6zYCNApANjIvYJTg7hlud/+cJpdAhS7dVzqMLmfhfHR3rAcOjQ=="
    },
    "bufferutil": {
      "version": "4.0.7",
      "resolved": "https://registry.npmjs.org/bufferutil/-/bufferutil-4.0.7.tgz",
      "integrity": "sha512-kukuqc39WOHtdxtw4UScxF/WVnMFVSQVKhtx3AjZJzhd0RGZZldcrfSEbVsWWe6KNH253574cq5F+wpv0G9pJw==",
      "requires": {
        "node-gyp-build": "^4.3.0"
      }
    },
    "builtin-modules": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/builtin-modules/-/builtin-modules-3.3.0.tgz",
      "integrity": "sha512-zhaCDicdLuWN5UbN5IMnFqNMhNfo919sH85y2/ea+5Yg9TsTkeZxpL+JLbp6cgYFS4sRLp3YV4S6yDuqVWHYOw=="
    },
    "busboy": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/busboy/-/busboy-1.6.0.tgz",
      "integrity": "sha512-8SFQbg/0hQ9xy3UNTB0YEnsNBbWfhf7RtnzpL7TkBiTBRfrQ9Fxcnz7VJsleJpyp6rVLvXiuORqjlHi5q+PYuA==",
      "requires": {
        "streamsearch": "^1.1.0"
      }
    },
    "bytes": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz",
      "integrity": "sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg=="
    },
    "cacheable-lookup": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/cacheable-lookup/-/cacheable-lookup-6.1.0.tgz",
      "integrity": "sha512-KJ/Dmo1lDDhmW2XDPMo+9oiy/CeqosPguPCrgcVzKyZrL6pM1gU2GmPY/xo6OQPTUaA/c0kwHuywB4E6nmT9ww=="
    },
    "cacheable-request": {
      "version": "7.0.2",
      "resolved": "https://registry.npmjs.org/cacheable-request/-/cacheable-request-7.0.2.tgz",
      "integrity": "sha512-pouW8/FmiPQbuGpkXQ9BAPv/Mo5xDGANgSNXzTzJ8DrKGuXOssM4wIQRjfanNRh3Yu5cfYPvcorqbhg2KIJtew==",
      "requires": {
        "clone-response": "^1.0.2",
        "get-stream": "^5.1.0",
        "http-cache-semantics": "^4.0.0",
        "keyv": "^4.0.0",
        "lowercase-keys": "^2.0.0",
        "normalize-url": "^6.0.1",
        "responselike": "^2.0.0"
      },
      "dependencies": {
        "get-stream": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-5.2.0.tgz",
          "integrity": "sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==",
          "requires": {
            "pump": "^3.0.0"
          }
        },
        "lowercase-keys": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-2.0.0.tgz",
          "integrity": "sha512-tqNXrS78oMOE73NMxK4EMLQsQowWf8jKooH9g7xPavRT706R6bkQJ6DY2Te7QukaZsulxa30wQ7bk0pm4XiHmA=="
        }
      }
    },
    "call-bind": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/call-bind/-/call-bind-1.0.2.tgz",
      "integrity": "sha512-7O+FbCihrB5WGbFYesctwmTKae6rOiIzmz1icreWJ+0aA7LJfuqhEso2T9ncpcFtzMQtzXf2QGGueWJGTYsqrA==",
      "requires": {
        "function-bind": "^1.1.1",
        "get-intrinsic": "^1.0.2"
      }
    },
    "call-me-maybe": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/call-me-maybe/-/call-me-maybe-1.0.2.tgz",
      "integrity": "sha512-HpX65o1Hnr9HH25ojC1YGs7HCQLq0GCOibSaWER0eNpgJ/Z1MZv2mTc7+xh6WOPxbRVcmgbv4hGU+uSQ/2xFZQ=="
    },
    "callsites": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
      "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ=="
    },
    "camelcase": {
      "version": "5.3.1",
      "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz",
      "integrity": "sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg=="
    },
    "camelize": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/camelize/-/camelize-1.0.1.tgz",
      "integrity": "sha512-dU+Tx2fsypxTgtLoE36npi3UqcjSSMNYfkqgmoEhtZrraP5VWq0K7FkWVTYa8eMPtnU/G2txVsfdCJTn9uzpuQ=="
    },
    "caniuse-lite": {
      "version": "1.0.30001509",
      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001509.tgz",
      "integrity": "sha512-2uDDk+TRiTX5hMcUYT/7CSyzMZxjfGu0vAUjS2g0LSD8UoXOv0LtpH4LxGMemsiPq6LCVIUjNwVM0erkOkGCDA=="
    },
    "capability": {
      "version": "0.2.5",
      "resolved": "https://registry.npmjs.org/capability/-/capability-0.2.5.tgz",
      "integrity": "sha512-rsJZYVCgXd08sPqwmaIqjAd5SUTfonV0z/gDJ8D6cN8wQphky1kkAYEqQ+hmDxTw7UihvBfjUVUSY+DBEe44jg=="
    },
    "caseless": {
      "version": "0.12.0",
      "resolved": "https://registry.npmjs.org/caseless/-/caseless-0.12.0.tgz",
      "integrity": "sha512-4tYFyifaFfGacoiObjJegolkwSU4xQNGbVgUiNYVUxbQ2x2lUsFvY4hVgVzGiIe6WLOPqycWXA40l+PWsxthUw=="
    },
    "chalk": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
      "requires": {
        "ansi-styles": "^4.1.0",
        "supports-color": "^7.1.0"
      },
      "dependencies": {
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ=="
        },
        "supports-color": {
          "version": "7.2.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
          "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
          "requires": {
            "has-flag": "^4.0.0"
          }
        }
      }
    },
    "child_process": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/child_process/-/child_process-1.0.2.tgz",
      "integrity": "sha512-Wmza/JzL0SiWz7kl6MhIKT5ceIlnFPJX+lwUGj7Clhy5MMldsSoJR0+uvRzOS5Kv45Mq7t1PoE8TsOA9bzvb6g=="
    },
    "chokidar": {
      "version": "3.5.3",
      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.5.3.tgz",
      "integrity": "sha512-Dr3sfKRP6oTcjf2JmUmFJfeVMvXBdegxB0iVQ5eb2V10uFJUCAS8OByZdVAyVb8xXNz3GjjTgj9kLWsZTqE6kw==",
      "dev": true,
      "requires": {
        "anymatch": "~3.1.2",
        "braces": "~3.0.2",
        "fsevents": "~2.3.2",
        "glob-parent": "~5.1.2",
        "is-binary-path": "~2.1.0",
        "is-glob": "~4.0.1",
        "normalize-path": "~3.0.0",
        "readdirp": "~3.6.0"
      }
    },
    "chownr": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/chownr/-/chownr-1.1.4.tgz",
      "integrity": "sha512-jJ0bqzaylmJtVnNgzTeSOs8DPavpbYgEr/b0YL8/2GO3xJEhInFmhKMUnEJQjZumK7KXGFhUy89PrsJWlakBVg=="
    },
    "cids": {
      "version": "0.7.5",
      "resolved": "https://registry.npmjs.org/cids/-/cids-0.7.5.tgz",
      "integrity": "sha512-zT7mPeghoWAu+ppn8+BS1tQ5qGmbMfB4AregnQjA/qHY3GC1m1ptI9GkWNlgeu38r7CuRdXB47uY2XgAYt6QVA==",
      "requires": {
        "buffer": "^5.5.0",
        "class-is": "^1.1.0",
        "multibase": "~0.6.0",
        "multicodec": "^1.0.0",
        "multihashes": "~0.4.15"
      },
      "dependencies": {
        "buffer": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz",
          "integrity": "sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==",
          "requires": {
            "base64-js": "^1.3.1",
            "ieee754": "^1.1.13"
          }
        },
        "multicodec": {
          "version": "1.0.4",
          "resolved": "https://registry.npmjs.org/multicodec/-/multicodec-1.0.4.tgz",
          "integrity": "sha512-NDd7FeS3QamVtbgfvu5h7fd1IlbaC4EQ0/pgU4zqE2vdHCmBGsUa0TiM8/TdSeG6BMPC92OOCf8F1ocE/Wkrrg==",
          "requires": {
            "buffer": "^5.6.0",
            "varint": "^5.0.0"
          }
        }
      }
    },
    "cipher-base": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/cipher-base/-/cipher-base-1.0.4.tgz",
      "integrity": "sha512-Kkht5ye6ZGmwv40uUDZztayT2ThLQGfnj/T71N/XzeZeo3nf8foyW7zGTsPYkEya3m5f3cAypH+qe7YOrM1U2Q==",
      "requires": {
        "inherits": "^2.0.1",
        "safe-buffer": "^5.0.1"
      }
    },
    "class-is": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/class-is/-/class-is-1.1.0.tgz",
      "integrity": "sha512-rhjH9AG1fvabIDoGRVH587413LPjTZgmDF9fOFCbFJQV4yuocX1mHxxvXI4g3cGwbVY9wAYIoKlg1N79frJKQw=="
    },
    "classnames": {
      "version": "2.3.2",
      "resolved": "https://registry.npmjs.org/classnames/-/classnames-2.3.2.tgz",
      "integrity": "sha512-CSbhY4cFEJRe6/GQzIk5qXZ4Jeg5pcsP7b5peFSDpffpe1cqjASH/n9UTjBwOp6XpMSTwQ8Za2K5V02ueA7Tmw=="
    },
    "cli-cursor": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/cli-cursor/-/cli-cursor-3.1.0.tgz",
      "integrity": "sha512-I/zHAwsKf9FqGoXM4WWRACob9+SNukZTd94DWF57E4toouRulbCxcUh6RKUEOQlYTHJnzkPMySvPNaaSLNfLZw==",
      "requires": {
        "restore-cursor": "^3.1.0"
      }
    },
    "cli-highlight": {
      "version": "2.1.11",
      "resolved": "https://registry.npmjs.org/cli-highlight/-/cli-highlight-2.1.11.tgz",
      "integrity": "sha512-9KDcoEVwyUXrjcJNvHD0NFc/hiwe/WPVYIleQh2O1N2Zro5gWJZ/K+3DGn8w8P/F6FxOgzyC5bxDyHIgCSPhGg==",
      "requires": {
        "chalk": "^4.0.0",
        "highlight.js": "^10.7.1",
        "mz": "^2.4.0",
        "parse5": "^5.1.1",
        "parse5-htmlparser2-tree-adapter": "^6.0.0",
        "yargs": "^16.0.0"
      },
      "dependencies": {
        "cliui": {
          "version": "7.0.4",
          "resolved": "https://registry.npmjs.org/cliui/-/cliui-7.0.4.tgz",
          "integrity": "sha512-OcRE68cOsVMXp1Yvonl/fzkQOyjLSu/8bhPDfQt0e0/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==",
          "requires": {
            "string-width": "^4.2.0",
            "strip-ansi": "^6.0.0",
            "wrap-ansi": "^7.0.0"
          }
        },
        "wrap-ansi": {
          "version": "7.0.0",
          "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
          "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
          "requires": {
            "ansi-styles": "^4.0.0",
            "string-width": "^4.1.0",
            "strip-ansi": "^6.0.0"
          }
        },
        "y18n": {
          "version": "5.0.8",
          "resolved": "https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz",
          "integrity": "sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA=="
        },
        "yargs": {
          "version": "16.2.0",
          "resolved": "https://registry.npmjs.org/yargs/-/yargs-16.2.0.tgz",
          "integrity": "sha512-D1mvvtDG0L5ft/jGWkLpG1+m0eQxOfaBvTNELraWj22wSVUMWxZUvYgJYcKh6jGGIkJFhH4IZPQhR4TKpc8mBw==",
          "requires": {
            "cliui": "^7.0.2",
            "escalade": "^3.1.1",
            "get-caller-file": "^2.0.5",
            "require-directory": "^2.1.1",
            "string-width": "^4.2.0",
            "y18n": "^5.0.5",
            "yargs-parser": "^20.2.2"
          }
        },
        "yargs-parser": {
          "version": "20.2.9",
          "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-20.2.9.tgz",
          "integrity": "sha512-y11nGElTIV+CT3Zv9t7VKl+Q3hTQoT9a1Qzezhhl6Rp21gJ/IVTW7Z3y9EWXhuUBC2Shnf+DX0antecpAwSP8w=="
        }
      }
    },
    "cli-spinners": {
      "version": "2.9.0",
      "resolved": "https://registry.npmjs.org/cli-spinners/-/cli-spinners-2.9.0.tgz",
      "integrity": "sha512-4/aL9X3Wh0yiMQlE+eeRhWP6vclO3QRtw1JHKIT0FFUs5FjpFmESqtMvYZ0+lbzBw900b95mS0hohy+qn2VK/g=="
    },
    "cliui": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-6.0.0.tgz",
      "integrity": "sha512-t6wbgtoCXvAzst7QgXxJYqPt0usEfbgQdftEPbLL/cvv6HPE5VgvqCuAIDR0NgU52ds6rFwqrgakNLrHEjCbrQ==",
      "requires": {
        "string-width": "^4.2.0",
        "strip-ansi": "^6.0.0",
        "wrap-ansi": "^6.2.0"
      }
    },
    "clone": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",
      "integrity": "sha512-3Pe/CF1Nn94hyhIYpjtiLhdCoEoz0DqQ+988E9gmeEdQZlojxnOb74wctFyuwWQHzqyf9X7C7MG8juUpqBJT8w=="
    },
    "clone-deep": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/clone-deep/-/clone-deep-4.0.1.tgz",
      "integrity": "sha512-neHB9xuzh/wk0dIHweyAXv2aPGZIVk3pLMe+/RNzINf17fe0OG96QroktYAUm7SM1PBnzTabaLboqqxDyMU+SQ==",
      "requires": {
        "is-plain-object": "^2.0.4",
        "kind-of": "^6.0.2",
        "shallow-clone": "^3.0.0"
      }
    },
    "clone-response": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/clone-response/-/clone-response-1.0.3.tgz",
      "integrity": "sha512-ROoL94jJH2dUVML2Y/5PEDNaSHgeOdSDicUyS7izcF63G6sTc/FTjLub4b8Il9S8S0beOfYt0TaA5qvFK+w0wA==",
      "requires": {
        "mimic-response": "^1.0.0"
      }
    },
    "color-convert": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
      "requires": {
        "color-name": "~1.1.4"
      }
    },
    "color-name": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA=="
    },
    "combined-stream": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
      "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
      "requires": {
        "delayed-stream": "~1.0.0"
      }
    },
    "commander": {
      "version": "6.2.0",
      "resolved": "https://registry.npmjs.org/commander/-/commander-6.2.0.tgz",
      "integrity": "sha512-zP4jEKbe8SHzKJYQmq8Y9gYjtO/POJLgIdKgV7B9qNmABVFVc+ctqSX6iXh4mCpJfRBOabiZ2YKPg8ciDw6C+Q=="
    },
    "commondir": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/commondir/-/commondir-1.0.1.tgz",
      "integrity": "sha512-W9pAhw0ja1Edb5GVdIF1mjZw/ASI0AlShXM83UUGe2DVr5TdAPEA1OA8m/g8zWp9x6On7gqufY+FatDbC3MDQg=="
    },
    "complex.js": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/complex.js/-/complex.js-2.1.1.tgz",
      "integrity": "sha512-8njCHOTtFFLtegk6zQo0kkVX1rngygb/KQI6z1qZxlFI3scluC+LVTCFbrkWjBv4vvLlbQ9t88IPMC6k95VTTg=="
    },
    "concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg=="
    },
    "concat-stream": {
      "version": "1.6.2",
      "resolved": "https://registry.npmjs.org/concat-stream/-/concat-stream-1.6.2.tgz",
      "integrity": "sha512-27HBghJxjiZtIk3Ycvn/4kbJk/1uZuJFfuPEns6LaEvpvG1f0hTea8lilrouyo9mVc2GWdcEZ8OLoGmSADlrCw==",
      "requires": {
        "buffer-from": "^1.0.0",
        "inherits": "^2.0.3",
        "readable-stream": "^2.2.2",
        "typedarray": "^0.0.6"
      },
      "dependencies": {
        "readable-stream": {
          "version": "2.3.8",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.8.tgz",
          "integrity": "sha512-8p0AUk4XODgIewSi0l8Epjs+EVnWiK7NoDIEGU0HhE7+ZyY8D1IMY7odu5lRrFXGg71L15KG8QrPmum45RTtdA==",
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "safe-buffer": {
          "version": "5.1.2",
          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
          "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "content-disposition": {
      "version": "0.5.4",
      "resolved": "https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.4.tgz",
      "integrity": "sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==",
      "requires": {
        "safe-buffer": "5.2.1"
      }
    },
    "content-hash": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/content-hash/-/content-hash-2.5.2.tgz",
      "integrity": "sha512-FvIQKy0S1JaWV10sMsA7TRx8bpU+pqPkhbsfvOJAdjRXvYxEckAwQWGwtRjiaJfh+E0DvcWUGqcdjwMGFjsSdw==",
      "requires": {
        "cids": "^0.7.1",
        "multicodec": "^0.5.5",
        "multihashes": "^0.4.15"
      }
    },
    "content-type": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/content-type/-/content-type-1.0.5.tgz",
      "integrity": "sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA=="
    },
    "convert-source-map": {
      "version": "1.9.0",
      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-1.9.0.tgz",
      "integrity": "sha512-ASFBup0Mz1uyiIjANan1jzLQami9z1PoYSZCiiYW2FczPbenXc45FZdBZLzOT+r6+iciuEModtmCti+hjaAk0A=="
    },
    "cookie": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.5.0.tgz",
      "integrity": "sha512-YZ3GUyn/o8gfKJlnlX7g7xq4gyO6OSuhGPKaaGssGB2qgDUS0gPgtTvoyZLTt9Ab6dC4hfc9dV5arkvc/OCmrw=="
    },
    "cookie-signature": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz",
      "integrity": "sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ=="
    },
    "core-js": {
      "version": "2.6.12",
      "resolved": "https://registry.npmjs.org/core-js/-/core-js-2.6.12.tgz",
      "integrity": "sha512-Kb2wC0fvsWfQrgk8HU5lW6U/Lcs8+9aaYcy4ZFc6DDlo4nZ7n70dEgE5rtR0oG6ufKDUnrwfWL1mXR5ljDatrQ=="
    },
    "core-js-compat": {
      "version": "3.31.0",
      "resolved": "https://registry.npmjs.org/core-js-compat/-/core-js-compat-3.31.0.tgz",
      "integrity": "sha512-hM7YCu1cU6Opx7MXNu0NuumM0ezNeAeRKadixyiQELWY3vT3De9S4J5ZBMraWV2vZnrE1Cirl0GtFtDtMUXzPw==",
      "requires": {
        "browserslist": "^4.21.5"
      }
    },
    "core-util-is": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz",
      "integrity": "sha512-3lqz5YjWTYnW6dlDa5TLaTCcShfar1e40rmcJVwCBJC6mWlFuj0eCHIElmG1g5kyuJ/GD+8Wn4FFCcz4gJPfaQ=="
    },
    "cors": {
      "version": "2.8.5",
      "resolved": "https://registry.npmjs.org/cors/-/cors-2.8.5.tgz",
      "integrity": "sha512-KIHbLJqu73RGr/hnbrO9uBeixNGuvSQjul/jdFvS/KFSIH1hWVd1ng7zOHx+YrEfInLG7q4n6GHQ9cDtxv/P6g==",
      "requires": {
        "object-assign": "^4",
        "vary": "^1"
      }
    },
    "cosmiconfig": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/cosmiconfig/-/cosmiconfig-6.0.0.tgz",
      "integrity": "sha512-xb3ZL6+L8b9JLLCx3ZdoZy4+2ECphCMo2PwqgP1tlfVq6M6YReyzBJtvWWtbDSpNr9hn96pkCiZqUcFEc+54Qg==",
      "requires": {
        "@types/parse-json": "^4.0.0",
        "import-fresh": "^3.1.0",
        "parse-json": "^5.0.0",
        "path-type": "^4.0.0",
        "yaml": "^1.7.2"
      },
      "dependencies": {
        "yaml": {
          "version": "1.10.2",
          "resolved": "https://registry.npmjs.org/yaml/-/yaml-1.10.2.tgz",
          "integrity": "sha512-r3vXyErRCYJ7wg28yvBY5VSoAF8ZvlcW9/BwUzEtUsjvX/DKs24dIkuwjtuprwJJHsbyUbLApepYTR1BN4uHrg=="
        }
      }
    },
    "crc-32": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/crc-32/-/crc-32-1.2.2.tgz",
      "integrity": "sha512-ROmzCKrTnOwybPcJApAA6WBWij23HVfGVNKqqrZpuyZOHqK2CwHSvpGuyt/UNNvaIjEd8X5IFGp4Mh+Ie1IHJQ=="
    },
    "create-hash": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/create-hash/-/create-hash-1.2.0.tgz",
      "integrity": "sha512-z00bCGNHDG8mHAkP7CtT1qVu+bFQUPjYq/4Iv3C3kWjTFV10zIjfSoeqXo9Asws8gwSHDGj/hl2u4OGIjapeCg==",
      "requires": {
        "cipher-base": "^1.0.1",
        "inherits": "^2.0.1",
        "md5.js": "^1.3.4",
        "ripemd160": "^2.0.1",
        "sha.js": "^2.4.0"
      }
    },
    "create-hmac": {
      "version": "1.1.7",
      "resolved": "https://registry.npmjs.org/create-hmac/-/create-hmac-1.1.7.tgz",
      "integrity": "sha512-MJG9liiZ+ogc4TzUwuvbER1JRdgvUFSB5+VR/g5h82fGaIRWMWddtKBHi7/sVhfjQZ6SehlyhvQYrcYkaUIpLg==",
      "requires": {
        "cipher-base": "^1.0.3",
        "create-hash": "^1.1.0",
        "inherits": "^2.0.1",
        "ripemd160": "^2.0.0",
        "safe-buffer": "^5.0.1",
        "sha.js": "^2.4.8"
      }
    },
    "create-require": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/create-require/-/create-require-1.1.1.tgz",
      "integrity": "sha512-dcKFX3jn0MpIaXjisoRvexIJVEKzaq7z2rZKxf+MSr9TkdmHmsU4m2lcLojrj/FHl8mk5VxMmYA+ftRkP/3oKQ=="
    },
    "cross-fetch": {
      "version": "3.1.6",
      "resolved": "https://registry.npmjs.org/cross-fetch/-/cross-fetch-3.1.6.tgz",
      "integrity": "sha512-riRvo06crlE8HiqOwIpQhxwdOk4fOeR7FVM/wXoxchFEqMNUjvbs3bfo4OTgMEMHzppd4DxFBDbyySj8Cv781g==",
      "requires": {
        "node-fetch": "^2.6.11"
      },
      "dependencies": {
        "node-fetch": {
          "version": "2.6.11",
          "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.11.tgz",
          "integrity": "sha512-4I6pdBY1EthSqDmJkiNk3JIT8cswwR9nfeW/cPdUagJYEQG7R95WRH74wpz7ma8Gh/9dI9FP+OU+0E4FvtA55w==",
          "requires": {
            "whatwg-url": "^5.0.0"
          }
        }
      }
    },
    "cross-spawn": {
      "version": "7.0.3",
      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz",
      "integrity": "sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==",
      "requires": {
        "path-key": "^3.1.0",
        "shebang-command": "^2.0.0",
        "which": "^2.0.1"
      }
    },
    "crypto": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/crypto/-/crypto-1.0.1.tgz",
      "integrity": "sha512-VxBKmeNcqQdiUQUW2Tzq0t377b54N2bMtXO/qiLa+6eRRmmC4qT3D4OnTGoT/U6O9aklQ/jTwbOtRMTTY8G0Ig=="
    },
    "crypto-js": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/crypto-js/-/crypto-js-4.1.1.tgz",
      "integrity": "sha512-o2JlM7ydqd3Qk9CA0L4NL6mTzU2sdx96a+oOfPu8Mkl/PK51vSyoi8/rQ8NknZtk44vq15lmhAj9CIAGwgeWKw=="
    },
    "css-box-model": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/css-box-model/-/css-box-model-1.2.1.tgz",
      "integrity": "sha512-a7Vr4Q/kd/aw96bnJG332W9V9LkJO69JRcaCYDUqjp6/z0w6VcZjgAcTbgFxEPfBgdnAwlh3iwu+hLopa+flJw==",
      "requires": {
        "tiny-invariant": "^1.0.6"
      }
    },
    "css-color-keywords": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/css-color-keywords/-/css-color-keywords-1.0.0.tgz",
      "integrity": "sha512-FyyrDHZKEjXDpNJYvVsV960FiqQyXc/LlYmsxl2BcdMb2WPx0OGRVgTg55rPSyLSNMqP52R9r8geSp7apN3Ofg=="
    },
    "css-to-react-native": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/css-to-react-native/-/css-to-react-native-3.2.0.tgz",
      "integrity": "sha512-e8RKaLXMOFii+02mOlqwjbD00KSEKqblnpO9e++1aXS1fPQOpS1YoqdVHBqPjHNoxeF2mimzVqawm2KCbEdtHQ==",
      "requires": {
        "camelize": "^1.0.0",
        "css-color-keywords": "^1.0.0",
        "postcss-value-parser": "^4.0.2"
      }
    },
    "csstype": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/csstype/-/csstype-3.1.2.tgz",
      "integrity": "sha512-I7K1Uu0MBPzaFKg4nI5Q7Vs2t+3gWWW648spaF+Rg7pI9ds18Ugn+lvg4SHczUdKlHI5LWBXyqfS8+DufyBsgQ=="
    },
    "d": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/d/-/d-1.0.1.tgz",
      "integrity": "sha512-m62ShEObQ39CfralilEQRjH6oAMtNCV1xJyEx5LpRYUVN+EviphDgUc/F3hnYbADmkiNs67Y+3ylmlG7Lnu+FA==",
      "requires": {
        "es5-ext": "^0.10.50",
        "type": "^1.0.1"
      }
    },
    "dashdash": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/dashdash/-/dashdash-1.14.1.tgz",
      "integrity": "sha512-jRFi8UDGo6j+odZiEpjazZaWqEal3w/basFjQHQEwVtZJGDpxbH1MeYluwCS8Xq5wmLJooDlMgvVarmWfGM44g==",
      "requires": {
        "assert-plus": "^1.0.0"
      }
    },
    "data-uri-to-buffer": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/data-uri-to-buffer/-/data-uri-to-buffer-4.0.1.tgz",
      "integrity": "sha512-0R9ikRb668HB7QDxT1vkpuUBtqc53YyAwMwGeUFKRojY/NWKvdZ+9UYtRfGmhqNbRkTSVpMbmyhXipFFv2cb/A=="
    },
    "date-fns": {
      "version": "2.29.3",
      "resolved": "https://registry.npmjs.org/date-fns/-/date-fns-2.29.3.tgz",
      "integrity": "sha512-dDCnyH2WnnKusqvZZ6+jA1O51Ibt8ZMRNkDZdyAyK4YfbDwa/cEmuztzG5pk6hqlp9aSBPYcjOlktquahGwGeA=="
    },
    "debug": {
      "version": "2.6.9",
      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
      "requires": {
        "ms": "2.0.0"
      }
    },
    "decamelize": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz",
      "integrity": "sha512-z2S+W9X73hAUUki+N+9Za2lBlun89zigOyGrsax+KUQ6wKW4ZoWpEYBkGhQjwAjjDCkWxhY0VKEhk8wzY7F5cA=="
    },
    "decimal.js": {
      "version": "10.4.3",
      "resolved": "https://registry.npmjs.org/decimal.js/-/decimal.js-10.4.3.tgz",
      "integrity": "sha512-VBBaLc1MgL5XpzgIP7ny5Z6Nx3UrRkIViUkPUdtl9aya5amy3De1gsUUSB1g3+3sExYNjCAsAznmukyxCb1GRA=="
    },
    "decode-uri-component": {
      "version": "0.2.2",
      "resolved": "https://registry.npmjs.org/decode-uri-component/-/decode-uri-component-0.2.2.tgz",
      "integrity": "sha512-FqUYQ+8o158GyGTrMFJms9qh3CqTKvAqgqsTnkLI8sKu0028orqBhxNMFkFen0zGyg6epACD32pjVk58ngIErQ=="
    },
    "decompress-response": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/decompress-response/-/decompress-response-6.0.0.tgz",
      "integrity": "sha512-aW35yZM6Bb/4oJlZncMH2LCoZtJXTRxES17vE3hoRiowU2kWHaJKFkSBDnDR+cm9J+9QhXmREyIfv0pji9ejCQ==",
      "requires": {
        "mimic-response": "^3.1.0"
      },
      "dependencies": {
        "mimic-response": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-3.1.0.tgz",
          "integrity": "sha512-z0yWI+4FDrrweS8Zmt4Ej5HdJmky15+L2e6Wgn3+iK5fWzb6T3fhNFq2+MeTRb064c6Wr4N/wv0DzQTjNzHNGQ=="
        }
      }
    },
    "deep-equal": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/deep-equal/-/deep-equal-1.1.1.tgz",
      "integrity": "sha512-yd9c5AdiqVcR+JjcwUQb9DkhJc8ngNr0MahEBGvDiJw8puWab2yZlh+nkasOnZP+EGTAP6rRp2JzJhJZzvNF8g==",
      "requires": {
        "is-arguments": "^1.0.4",
        "is-date-object": "^1.0.1",
        "is-regex": "^1.0.4",
        "object-is": "^1.0.1",
        "object-keys": "^1.1.1",
        "regexp.prototype.flags": "^1.2.0"
      }
    },
    "deepmerge": {
      "version": "4.3.1",
      "resolved": "https://registry.npmjs.org/deepmerge/-/deepmerge-4.3.1.tgz",
      "integrity": "sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A=="
    },
    "defaults": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/defaults/-/defaults-1.0.4.tgz",
      "integrity": "sha512-eFuaLoy/Rxalv2kr+lqMlUnrDWV+3j4pljOIJgLIhI058IQfWJ7vXhyEIHu+HtC738klGALYxOKDO0bQP3tg8A==",
      "requires": {
        "clone": "^1.0.2"
      },
      "dependencies": {
        "clone": {
          "version": "1.0.4",
          "resolved": "https://registry.npmjs.org/clone/-/clone-1.0.4.tgz",
          "integrity": "sha512-JQHZ2QMW6l3aH/j6xCqQThY/9OH4D/9ls34cgkUBiEeocRTU04tHfKPBsUK1PqZCUQM7GiA0IIXJSuXHI64Kbg=="
        }
      }
    },
    "defer-to-connect": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/defer-to-connect/-/defer-to-connect-2.0.1.tgz",
      "integrity": "sha512-4tvttepXG1VaYGrRibk5EwJd1t4udunSOVMdLSAL6mId1ix438oPwPZMALY41FCijukO1L0twNcGsdzS7dHgDg=="
    },
    "define-properties": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/define-properties/-/define-properties-1.2.0.tgz",
      "integrity": "sha512-xvqAVKGfT1+UAvPwKTVw/njhdQ8ZhXK4lI0bCIuCMrp2up9nPnaDftrLtmpTazqd1o+UY4zgzU+avtMbDP+ldA==",
      "requires": {
        "has-property-descriptors": "^1.0.0",
        "object-keys": "^1.1.1"
      }
    },
    "delayed-stream": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
      "integrity": "sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ=="
    },
    "depd": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz",
      "integrity": "sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw=="
    },
    "destroy": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/destroy/-/destroy-1.2.0.tgz",
      "integrity": "sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg=="
    },
    "diff": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/diff/-/diff-4.0.2.tgz",
      "integrity": "sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A=="
    },
    "dijkstrajs": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/dijkstrajs/-/dijkstrajs-1.0.2.tgz",
      "integrity": "sha512-QV6PMaHTCNmKSeP6QoXhVTw9snc9VD8MulTT0Bd99Pacp4SS1cjcrYPgBPmibqKVtMJJfqC6XvOXgPMEEPH/fg=="
    },
    "doctrine": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-3.0.0.tgz",
      "integrity": "sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==",
      "requires": {
        "esutils": "^2.0.2"
      }
    },
    "dom-helpers": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/dom-helpers/-/dom-helpers-5.2.1.tgz",
      "integrity": "sha512-nRCa7CK3VTrM2NmGkIy4cbK7IZlgBE/PYMn55rrXefr5xXDP0LdtfPnblFDoVdcAfslJ7or6iqAUnx0CCGIWQA==",
      "requires": {
        "@babel/runtime": "^7.8.7",
        "csstype": "^3.0.2"
      }
    },
    "dom-walk": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/dom-walk/-/dom-walk-0.1.2.tgz",
      "integrity": "sha512-6QvTW9mrGeIegrFXdtQi9pk7O/nSK6lSdXW2eqUspN5LWD7UTji2Fqw5V2YLjBpHEoU9Xl/eUWNpDeZvoyOv2w=="
    },
    "dotenv": {
      "version": "16.0.3",
      "resolved": "https://registry.npmjs.org/dotenv/-/dotenv-16.0.3.tgz",
      "integrity": "sha512-7GO6HghkA5fYG9TYnNxi14/7K9f5occMlp3zXAuSxn7CKCxt9xbNWG7yF8hTCSUchlfWSe3uLmlPfigevRItzQ=="
    },
    "eastasianwidth": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz",
      "integrity": "sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA=="
    },
    "ecc-jsbn": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/ecc-jsbn/-/ecc-jsbn-0.1.2.tgz",
      "integrity": "sha512-eh9O+hwRHNbG4BLTjEl3nw044CkGm5X6LoaCf7LPp7UU8Qrt47JYNi6nPX8xjW97TKGKm1ouctg0QSpZe9qrnw==",
      "requires": {
        "jsbn": "~0.1.0",
        "safer-buffer": "^2.1.0"
      }
    },
    "ecpair": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/ecpair/-/ecpair-2.1.0.tgz",
      "integrity": "sha512-cL/mh3MtJutFOvFc27GPZE2pWL3a3k4YvzUWEOvilnfZVlH3Jwgx/7d6tlD7/75tNk8TG2m+7Kgtz0SI1tWcqw==",
      "requires": {
        "randombytes": "^2.1.0",
        "typeforce": "^1.18.0",
        "wif": "^2.0.6"
      }
    },
    "ee-first": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz",
      "integrity": "sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow=="
    },
    "electron-to-chromium": {
      "version": "1.4.445",
      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.4.445.tgz",
      "integrity": "sha512-++DB+9VK8SBJwC+X1zlMfJ1tMA3F0ipi39GdEp+x3cV2TyBihqAgad8cNMWtLDEkbH39nlDQP7PfGrDr3Dr7HA=="
    },
    "elliptic": {
      "version": "6.5.4",
      "resolved": "https://registry.npmjs.org/elliptic/-/elliptic-6.5.4.tgz",
      "integrity": "sha512-iLhC6ULemrljPZb+QutR5TQGB+pdW6KGD5RSegS+8sorOZT+rdQFbsQFJgvN3eRqNALqJer4oQ16YvJHlU8hzQ==",
      "requires": {
        "bn.js": "^4.11.9",
        "brorand": "^1.1.0",
        "hash.js": "^1.0.0",
        "hmac-drbg": "^1.0.1",
        "inherits": "^2.0.4",
        "minimalistic-assert": "^1.0.1",
        "minimalistic-crypto-utils": "^1.0.1"
      },
      "dependencies": {
        "bn.js": {
          "version": "4.12.0",
          "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz",
          "integrity": "sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA=="
        }
      }
    },
    "emitter-component": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/emitter-component/-/emitter-component-1.1.1.tgz",
      "integrity": "sha512-G+mpdiAySMuB7kesVRLuyvYRqDmshB7ReKEVuyBPkzQlmiDiLrt7hHHIy4Aff552bgknVN7B2/d3lzhGO5dvpQ==",
      "peer": true
    },
    "emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A=="
    },
    "encode-utf8": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/encode-utf8/-/encode-utf8-1.0.3.tgz",
      "integrity": "sha512-ucAnuBEhUK4boH2HjVYG5Q2mQyPorvv0u/ocS+zhdw0S8AlHYY+GOFhP1Gio5z4icpP2ivFSvhtFjQi8+T9ppw=="
    },
    "encodeurl": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz",
      "integrity": "sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w=="
    },
    "end-of-stream": {
      "version": "1.4.4",
      "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz",
      "integrity": "sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==",
      "requires": {
        "once": "^1.4.0"
      }
    },
    "engine.io": {
      "version": "6.4.1",
      "resolved": "https://registry.npmjs.org/engine.io/-/engine.io-6.4.1.tgz",
      "integrity": "sha512-JFYQurD/nbsA5BSPmbaOSLa3tSVj8L6o4srSwXXY3NqE+gGUNmmPTbhn8tjzcCtSqhFgIeqef81ngny8JM25hw==",
      "requires": {
        "@types/cookie": "^0.4.1",
        "@types/cors": "^2.8.12",
        "@types/node": ">=10.0.0",
        "accepts": "~1.3.4",
        "base64id": "2.0.0",
        "cookie": "~0.4.1",
        "cors": "~2.8.5",
        "debug": "~4.3.1",
        "engine.io-parser": "~5.0.3",
        "ws": "~8.11.0"
      },
      "dependencies": {
        "cookie": {
          "version": "0.4.2",
          "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.4.2.tgz",
          "integrity": "sha512-aSWTXFzaKWkvHO1Ny/s+ePFpvKsPnjc551iI41v3ny/ow6tBG5Vd+FuqGNhh1LxOmVzOlGUriIlOaokOvhaStA=="
        },
        "debug": {
          "version": "4.3.4",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.4.tgz",
          "integrity": "sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==",
          "requires": {
            "ms": "2.1.2"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
        },
        "ws": {
          "version": "8.11.0",
          "resolved": "https://registry.npmjs.org/ws/-/ws-8.11.0.tgz",
          "integrity": "sha512-HPG3wQd9sNQoT9xHyNCXoDUa+Xw/VevmY9FoHyQ+g+rrMn4j6FB4np7Z0OhdTgjx6MgQLK7jwSy1YecU1+4Asg==",
          "requires": {}
        }
      }
    },
    "engine.io-parser": {
      "version": "5.0.6",
      "resolved": "https://registry.npmjs.org/engine.io-parser/-/engine.io-parser-5.0.6.tgz",
      "integrity": "sha512-tjuoZDMAdEhVnSFleYPCtdL2GXwVTGtNjoeJd9IhIG3C1xs9uwxqRNEu5WpnDZCaozwVlK/nuQhpodhXSIMaxw=="
    },
    "error-ex": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz",
      "integrity": "sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==",
      "requires": {
        "is-arrayish": "^0.2.1"
      }
    },
    "error-polyfill": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/error-polyfill/-/error-polyfill-0.1.3.tgz",
      "integrity": "sha512-XHJk60ufE+TG/ydwp4lilOog549iiQF2OAPhkk9DdiYWMrltz5yhDz/xnKuenNwP7gy3dsibssO5QpVhkrSzzg==",
      "requires": {
        "capability": "^0.2.5",
        "o3": "^1.0.3",
        "u3": "^0.1.1"
      }
    },
    "es5-ext": {
      "version": "0.10.62",
      "resolved": "https://registry.npmjs.org/es5-ext/-/es5-ext-0.10.62.tgz",
      "integrity": "sha512-BHLqn0klhEpnOKSrzn/Xsz2UIW8j+cGmo9JLzr8BiUapV8hPL9+FliFqjwr9ngW7jWdnxv6eO+/LqyhJVqgrjA==",
      "requires": {
        "es6-iterator": "^2.0.3",
        "es6-symbol": "^3.1.3",
        "next-tick": "^1.1.0"
      }
    },
    "es6-iterator": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/es6-iterator/-/es6-iterator-2.0.3.tgz",
      "integrity": "sha512-zw4SRzoUkd+cl+ZoE15A9o1oQd920Bb0iOJMQkQhl3jNc03YqVjAhG7scf9C5KWRU/R13Orf588uCC6525o02g==",
      "requires": {
        "d": "1",
        "es5-ext": "^0.10.35",
        "es6-symbol": "^3.1.1"
      }
    },
    "es6-object-assign": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/es6-object-assign/-/es6-object-assign-1.1.0.tgz",
      "integrity": "sha512-MEl9uirslVwqQU369iHNWZXsI8yaZYGg/D65aOgZkeyFJwHYSxilf7rQzXKI7DdDuBPrBXbfk3sl9hJhmd5AUw==",
      "peer": true
    },
    "es6-promise": {
      "version": "4.2.8",
      "resolved": "https://registry.npmjs.org/es6-promise/-/es6-promise-4.2.8.tgz",
      "integrity": "sha512-HJDGx5daxeIvxdBxvG2cb9g4tEvwIk3i8+nhX0yGrYmZUzbkdg8QbDevheDB8gd0//uPj4c1EQua8Q+MViT0/w=="
    },
    "es6-symbol": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/es6-symbol/-/es6-symbol-3.1.3.tgz",
      "integrity": "sha512-NJ6Yn3FuDinBaBRWl/q5X/s4koRHBrgKAu+yGI6JCBeiu3qrcbJhwT2GeR/EXVfylRk8dpQVJoLEFhK+Mu31NA==",
      "requires": {
        "d": "^1.0.1",
        "ext": "^1.1.2"
      }
    },
    "escalade": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.1.1.tgz",
      "integrity": "sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw=="
    },
    "escape-html": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz",
      "integrity": "sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow=="
    },
    "escape-latex": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/escape-latex/-/escape-latex-1.2.0.tgz",
      "integrity": "sha512-nV5aVWW1K0wEiUIEdZ4erkGGH8mDxGyxSeqPzRNtWP7ataw+/olFObw7hujFWlVjNsaDFw5VZ5NzVSIqRgfTiw=="
    },
    "escape-string-regexp": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
      "integrity": "sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg=="
    },
    "estree-walker": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/estree-walker/-/estree-walker-2.0.2.tgz",
      "integrity": "sha512-Rfkk/Mp/DL7JVje3u18FxFujQlTNR2q6QfMSMB7AvCBx91NGj/ba3kCfza0f6dVDbw7YlRf/nDrn7pQrCCyQ/w=="
    },
    "esutils": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g=="
    },
    "etag": {
      "version": "1.8.1",
      "resolved": "https://registry.npmjs.org/etag/-/etag-1.8.1.tgz",
      "integrity": "sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg=="
    },
    "eth-ens-namehash": {
      "version": "2.0.8",
      "resolved": "https://registry.npmjs.org/eth-ens-namehash/-/eth-ens-namehash-2.0.8.tgz",
      "integrity": "sha512-VWEI1+KJfz4Km//dadyvBBoBeSQ0MHTXPvr8UIXiLW6IanxvAV+DmlZAijZwAyggqGUfwQBeHf7tc9wzc1piSw==",
      "requires": {
        "idna-uts46-hx": "^2.3.1",
        "js-sha3": "^0.5.7"
      },
      "dependencies": {
        "js-sha3": {
          "version": "0.5.7",
          "resolved": "https://registry.npmjs.org/js-sha3/-/js-sha3-0.5.7.tgz",
          "integrity": "sha512-GII20kjaPX0zJ8wzkTbNDYMY7msuZcTWk8S5UOh6806Jq/wz1J8/bnr8uGU0DAUmYDjj2Mr4X1cW8v/GLYnR+g=="
        }
      }
    },
    "eth-lib": {
      "version": "0.1.29",
      "resolved": "https://registry.npmjs.org/eth-lib/-/eth-lib-0.1.29.tgz",
      "integrity": "sha512-bfttrr3/7gG4E02HoWTDUcDDslN003OlOoBxk9virpAZQ1ja/jDgwkWB8QfJF7ojuEowrqy+lzp9VcJG7/k5bQ==",
      "requires": {
        "bn.js": "^4.11.6",
        "elliptic": "^6.4.0",
        "nano-json-stream-parser": "^0.1.2",
        "servify": "^0.1.12",
        "ws": "^3.0.0",
        "xhr-request-promise": "^0.1.2"
      },
      "dependencies": {
        "bn.js": {
          "version": "4.12.0",
          "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz",
          "integrity": "sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA=="
        },
        "safe-buffer": {
          "version": "5.1.2",
          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
          "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="
        },
        "ws": {
          "version": "3.3.3",
          "resolved": "https://registry.npmjs.org/ws/-/ws-3.3.3.tgz",
          "integrity": "sha512-nnWLa/NwZSt4KQJu51MYlCcSQ5g7INpOrOMt4XV8j4dqTXdmlUmSHQ8/oLC069ckre0fRsgfvsKwbTdtKLCDkA==",
          "requires": {
            "async-limiter": "~1.0.0",
            "safe-buffer": "~5.1.0",
            "ultron": "~1.1.0"
          }
        }
      }
    },
    "ethereum-bloom-filters": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/ethereum-bloom-filters/-/ethereum-bloom-filters-1.0.10.tgz",
      "integrity": "sha512-rxJ5OFN3RwjQxDcFP2Z5+Q9ho4eIdEmSc2ht0fCu8Se9nbXjZ7/031uXoUYJ87KHCOdVeiUuwSnoS7hmYAGVHA==",
      "requires": {
        "js-sha3": "^0.8.0"
      }
    },
    "ethereum-cryptography": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/ethereum-cryptography/-/ethereum-cryptography-0.1.3.tgz",
      "integrity": "sha512-w8/4x1SGGzc+tO97TASLja6SLd3fRIK2tLVcV2Gx4IB21hE19atll5Cq9o3d0ZmAYC/8aw0ipieTSiekAea4SQ==",
      "requires": {
        "@types/pbkdf2": "^3.0.0",
        "@types/secp256k1": "^4.0.1",
        "blakejs": "^1.1.0",
        "browserify-aes": "^1.2.0",
        "bs58check": "^2.1.2",
        "create-hash": "^1.2.0",
        "create-hmac": "^1.1.7",
        "hash.js": "^1.1.7",
        "keccak": "^3.0.0",
        "pbkdf2": "^3.0.17",
        "randombytes": "^2.1.0",
        "safe-buffer": "^5.1.2",
        "scrypt-js": "^3.0.0",
        "secp256k1": "^4.0.1",
        "setimmediate": "^1.0.5"
      }
    },
    "ethereumjs-abi": {
      "version": "0.6.8",
      "resolved": "https://registry.npmjs.org/ethereumjs-abi/-/ethereumjs-abi-0.6.8.tgz",
      "integrity": "sha512-Tx0r/iXI6r+lRsdvkFDlut0N08jWMnKRZ6Gkq+Nmw75lZe4e6o3EkSnkaBP5NF6+m5PTGAr9JP43N3LyeoglsA==",
      "requires": {
        "bn.js": "^4.11.8",
        "ethereumjs-util": "^6.0.0"
      },
      "dependencies": {
        "@types/bn.js": {
          "version": "4.11.6",
          "resolved": "https://registry.npmjs.org/@types/bn.js/-/bn.js-4.11.6.tgz",
          "integrity": "sha512-pqr857jrp2kPuO9uRjZ3PwnJTjoQy+fcdxvBTvHm6dkmEL9q+hDD/2j/0ELOBPtPnS8LjCX0gI9nbl8lVkadpg==",
          "requires": {
            "@types/node": "*"
          }
        },
        "bn.js": {
          "version": "4.12.0",
          "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz",
          "integrity": "sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA=="
        },
        "ethereumjs-util": {
          "version": "6.2.1",
          "resolved": "https://registry.npmjs.org/ethereumjs-util/-/ethereumjs-util-6.2.1.tgz",
          "integrity": "sha512-W2Ktez4L01Vexijrm5EB6w7dg4n/TgpoYU4avuT5T3Vmnw/eCRtiBrJfQYS/DCSvDIOLn2k57GcHdeBcgVxAqw==",
          "requires": {
            "@types/bn.js": "^4.11.3",
            "bn.js": "^4.11.0",
            "create-hash": "^1.1.2",
            "elliptic": "^6.5.2",
            "ethereum-cryptography": "^0.1.3",
            "ethjs-util": "0.1.6",
            "rlp": "^2.2.3"
          }
        }
      }
    },
    "ethereumjs-util": {
      "version": "7.1.5",
      "resolved": "https://registry.npmjs.org/ethereumjs-util/-/ethereumjs-util-7.1.5.tgz",
      "integrity": "sha512-SDl5kKrQAudFBUe5OJM9Ac6WmMyYmXX/6sTmLZ3ffG2eY6ZIGBes3pEDxNN6V72WyOw4CPD5RomKdsa8DAAwLg==",
      "requires": {
        "@types/bn.js": "^5.1.0",
        "bn.js": "^5.1.2",
        "create-hash": "^1.1.2",
        "ethereum-cryptography": "^0.1.3",
        "rlp": "^2.2.4"
      }
    },
    "ethers": {
      "version": "5.7.2",
      "resolved": "https://registry.npmjs.org/ethers/-/ethers-5.7.2.tgz",
      "integrity": "sha512-wswUsmWo1aOK8rR7DIKiWSw9DbLWe6x98Jrn8wcTflTVvaXhAMaB5zGAXy0GYQEQp9iO1iSHWVyARQm11zUtyg==",
      "requires": {
        "@ethersproject/abi": "5.7.0",
        "@ethersproject/abstract-provider": "5.7.0",
        "@ethersproject/abstract-signer": "5.7.0",
        "@ethersproject/address": "5.7.0",
        "@ethersproject/base64": "5.7.0",
        "@ethersproject/basex": "5.7.0",
        "@ethersproject/bignumber": "5.7.0",
        "@ethersproject/bytes": "5.7.0",
        "@ethersproject/constants": "5.7.0",
        "@ethersproject/contracts": "5.7.0",
        "@ethersproject/hash": "5.7.0",
        "@ethersproject/hdnode": "5.7.0",
        "@ethersproject/json-wallets": "5.7.0",
        "@ethersproject/keccak256": "5.7.0",
        "@ethersproject/logger": "5.7.0",
        "@ethersproject/networks": "5.7.1",
        "@ethersproject/pbkdf2": "5.7.0",
        "@ethersproject/properties": "5.7.0",
        "@ethersproject/providers": "5.7.2",
        "@ethersproject/random": "5.7.0",
        "@ethersproject/rlp": "5.7.0",
        "@ethersproject/sha2": "5.7.0",
        "@ethersproject/signing-key": "5.7.0",
        "@ethersproject/solidity": "5.7.0",
        "@ethersproject/strings": "5.7.0",
        "@ethersproject/transactions": "5.7.0",
        "@ethersproject/units": "5.7.0",
        "@ethersproject/wallet": "5.7.0",
        "@ethersproject/web": "5.7.1",
        "@ethersproject/wordlists": "5.7.0"
      }
    },
    "ethjs-unit": {
      "version": "0.1.6",
      "resolved": "https://registry.npmjs.org/ethjs-unit/-/ethjs-unit-0.1.6.tgz",
      "integrity": "sha512-/Sn9Y0oKl0uqQuvgFk/zQgR7aw1g36qX/jzSQ5lSwlO0GigPymk4eGQfeNTD03w1dPOqfz8V77Cy43jH56pagw==",
      "requires": {
        "bn.js": "4.11.6",
        "number-to-bn": "1.7.0"
      },
      "dependencies": {
        "bn.js": {
          "version": "4.11.6",
          "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.11.6.tgz",
          "integrity": "sha512-XWwnNNFCuuSQ0m3r3C4LE3EiORltHd9M05pq6FOlVeiophzRbMo50Sbz1ehl8K3Z+jw9+vmgnXefY1hz8X+2wA=="
        }
      }
    },
    "ethjs-util": {
      "version": "0.1.6",
      "resolved": "https://registry.npmjs.org/ethjs-util/-/ethjs-util-0.1.6.tgz",
      "integrity": "sha512-CUnVOQq7gSpDHZVVrQW8ExxUETWrnrvXYvYz55wOU8Uj4VCgw56XC2B/fVqQN+f7gmrnRHSLVnFAwsCuNwji8w==",
      "requires": {
        "is-hex-prefixed": "1.0.0",
        "strip-hex-prefix": "1.0.0"
      }
    },
    "eventemitter3": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-3.1.2.tgz",
      "integrity": "sha512-tvtQIeLVHjDkJYnzf2dgVMxfuSGJeM/7UCG17TT4EumTfNtF+0nebF/4zWOIkCreAbtNqhGEboB6BWrwqNaw4Q=="
    },
    "evp_bytestokey": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/evp_bytestokey/-/evp_bytestokey-1.0.3.tgz",
      "integrity": "sha512-/f2Go4TognH/KvCISP7OUsHn85hT9nUkxxA9BEWxFn+Oj9o8ZNLm/40hdlgSLyuOimsrTKLUMEorQexp/aPQeA==",
      "requires": {
        "md5.js": "^1.3.4",
        "safe-buffer": "^5.1.1"
      }
    },
    "express": {
      "version": "4.18.2",
      "resolved": "https://registry.npmjs.org/express/-/express-4.18.2.tgz",
      "integrity": "sha512-5/PsL6iGPdfQ/lKM1UuielYgv3BUoJfz1aUwU9vHZ+J7gyvwdQXFEBIEIaxeGf0GIcreATNyBExtalisDbuMqQ==",
      "requires": {
        "accepts": "~1.3.8",
        "array-flatten": "1.1.1",
        "body-parser": "1.20.1",
        "content-disposition": "0.5.4",
        "content-type": "~1.0.4",
        "cookie": "0.5.0",
        "cookie-signature": "1.0.6",
        "debug": "2.6.9",
        "depd": "2.0.0",
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "etag": "~1.8.1",
        "finalhandler": "1.2.0",
        "fresh": "0.5.2",
        "http-errors": "2.0.0",
        "merge-descriptors": "1.0.1",
        "methods": "~1.1.2",
        "on-finished": "2.4.1",
        "parseurl": "~1.3.3",
        "path-to-regexp": "0.1.7",
        "proxy-addr": "~2.0.7",
        "qs": "6.11.0",
        "range-parser": "~1.2.1",
        "safe-buffer": "5.2.1",
        "send": "0.18.0",
        "serve-static": "1.15.0",
        "setprototypeof": "1.2.0",
        "statuses": "2.0.1",
        "type-is": "~1.6.18",
        "utils-merge": "1.0.1",
        "vary": "~1.1.2"
      }
    },
    "express-formidable": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/express-formidable/-/express-formidable-1.2.0.tgz",
      "integrity": "sha512-w1vXjF3gb50UKTNkFaW8/4rqY4dUrKfZ1sAZzwAF9YxCAgj/29QZsycf71di0GkskrZOAkubk9pvGYfxyAMYiw==",
      "requires": {
        "formidable": "^1.0.17"
      }
    },
    "express-handlebars": {
      "version": "6.0.7",
      "resolved": "https://registry.npmjs.org/express-handlebars/-/express-handlebars-6.0.7.tgz",
      "integrity": "sha512-iYeMFpc/hMD+E6FNAZA5fgWeXnXr4rslOSPkeEV6TwdmpJ5lEXuWX0u9vFYs31P2MURctQq2batR09oeNj0LIg==",
      "requires": {
        "glob": "^8.1.0",
        "graceful-fs": "^4.2.10",
        "handlebars": "^4.7.7"
      },
      "dependencies": {
        "glob": {
          "version": "8.1.0",
          "resolved": "https://registry.npmjs.org/glob/-/glob-8.1.0.tgz",
          "integrity": "sha512-r8hpEjiQEYlF2QU0df3dS+nxxSIreXQS1qRhMJM0Q5NDdR386C7jb7Hwwod8Fgiuex+k0GFjgft18yvxm5XoCQ==",
          "requires": {
            "fs.realpath": "^1.0.0",
            "inflight": "^1.0.4",
            "inherits": "2",
            "minimatch": "^5.0.1",
            "once": "^1.3.0"
          }
        },
        "minimatch": {
          "version": "5.1.6",
          "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-5.1.6.tgz",
          "integrity": "sha512-lKwV/1brpG6mBUFHtb7NUmtABCb2WZZmm2wNiOA5hAb8VdCS4B3dtMWyvcoViccwAW/COERjXLt0zP1zXUN26g==",
          "requires": {
            "brace-expansion": "^2.0.1"
          }
        }
      }
    },
    "express-session": {
      "version": "1.17.3",
      "resolved": "https://registry.npmjs.org/express-session/-/express-session-1.17.3.tgz",
      "integrity": "sha512-4+otWXlShYlG1Ma+2Jnn+xgKUZTMJ5QD3YvfilX3AcocOAbIkVylSWEklzALe/+Pu4qV6TYBj5GwOBFfdKqLBw==",
      "requires": {
        "cookie": "0.4.2",
        "cookie-signature": "1.0.6",
        "debug": "2.6.9",
        "depd": "~2.0.0",
        "on-headers": "~1.0.2",
        "parseurl": "~1.3.3",
        "safe-buffer": "5.2.1",
        "uid-safe": "~2.1.5"
      },
      "dependencies": {
        "cookie": {
          "version": "0.4.2",
          "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.4.2.tgz",
          "integrity": "sha512-aSWTXFzaKWkvHO1Ny/s+ePFpvKsPnjc551iI41v3ny/ow6tBG5Vd+FuqGNhh1LxOmVzOlGUriIlOaokOvhaStA=="
        }
      }
    },
    "ext": {
      "version": "1.7.0",
      "resolved": "https://registry.npmjs.org/ext/-/ext-1.7.0.tgz",
      "integrity": "sha512-6hxeJYaL110a9b5TEJSj0gojyHQAmA2ch5Os+ySCiA1QGdS697XWY1pzsrSjqA9LDEEgdB/KypIlR59RcLuHYw==",
      "requires": {
        "type": "^2.7.2"
      },
      "dependencies": {
        "type": {
          "version": "2.7.2",
          "resolved": "https://registry.npmjs.org/type/-/type-2.7.2.tgz",
          "integrity": "sha512-dzlvlNlt6AXU7EBSfpAscydQ7gXB+pPGsPnfJnZpiNJBDj7IaJzQlBZYGdEi4R9HmPdBv2XmWJ6YUtoTa7lmCw=="
        }
      }
    },
    "extend": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/extend/-/extend-3.0.2.tgz",
      "integrity": "sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g=="
    },
    "extsprintf": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/extsprintf/-/extsprintf-1.3.0.tgz",
      "integrity": "sha512-11Ndz7Nv+mvAC1j0ktTa7fAb0vLyGGX+rMHNBYQviQDGU0Hw7lhctJANqbPhu9nV9/izT/IntTgZ7Im/9LJs9g=="
    },
    "fast-deep-equal": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
      "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q=="
    },
    "fast-diff": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/fast-diff/-/fast-diff-1.1.2.tgz",
      "integrity": "sha512-KaJUt+M9t1qaIteSvjc6P3RbMdXsNhK61GRftR6SNxqmhthcd9MGIi4T+o0jD8LUSpSnSKXE20nLtJ3fOHxQig=="
    },
    "fast-json-stable-stringify": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
      "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw=="
    },
    "fetch-blob": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/fetch-blob/-/fetch-blob-3.2.0.tgz",
      "integrity": "sha512-7yAQpD2UMJzLi1Dqv7qFYnPbaPx7ZfFK6PiIxQ4PfkGPyNyl2Ugx+a/umUonmKqjhM4DnfbMvdX6otXq83soQQ==",
      "requires": {
        "node-domexception": "^1.0.0",
        "web-streams-polyfill": "^3.0.3"
      }
    },
    "fill-range": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz",
      "integrity": "sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==",
      "dev": true,
      "requires": {
        "to-regex-range": "^5.0.1"
      }
    },
    "finalhandler": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-1.2.0.tgz",
      "integrity": "sha512-5uXcUVftlQMFnWC9qu/svkWv3GTd2PfUhK/3PLkYNAe7FbqJMt3515HaxE6eRL74GdsriiwujiawdaB1BpEISg==",
      "requires": {
        "debug": "2.6.9",
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "on-finished": "2.4.1",
        "parseurl": "~1.3.3",
        "statuses": "2.0.1",
        "unpipe": "~1.0.0"
      }
    },
    "find-cache-dir": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/find-cache-dir/-/find-cache-dir-2.1.0.tgz",
      "integrity": "sha512-Tq6PixE0w/VMFfCgbONnkiQIVol/JJL7nRMi20fqzA4NRs9AfeqMGeRdPi3wIhYkxjeBaWh2rxwapn5Tu3IqOQ==",
      "requires": {
        "commondir": "^1.0.1",
        "make-dir": "^2.0.0",
        "pkg-dir": "^3.0.0"
      }
    },
    "find-root": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/find-root/-/find-root-1.1.0.tgz",
      "integrity": "sha512-NKfW6bec6GfKc0SGx1e07QZY9PE99u0Bft/0rzSD5k3sO/vwkVUpDUKVm5Gpp5Ue3YfShPFTX2070tDs5kB9Ng=="
    },
    "find-up": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz",
      "integrity": "sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==",
      "requires": {
        "locate-path": "^5.0.0",
        "path-exists": "^4.0.0"
      }
    },
    "flat": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/flat/-/flat-4.1.1.tgz",
      "integrity": "sha512-FmTtBsHskrU6FJ2VxCnsDb84wu9zhmO3cUX2kGFb5tuwhfXxGciiT0oRY+cck35QmG+NmGh5eLz6lLCpWTqwpA==",
      "requires": {
        "is-buffer": "~2.0.3"
      }
    },
    "follow-redirects": {
      "version": "1.15.2",
      "resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.15.2.tgz",
      "integrity": "sha512-VQLG33o04KaQ8uYi2tVNbdrWp1QWxNNea+nmIB4EVM28v0hmP17z7aG1+wAkNzVq4KeXTq3221ye5qTJP91JwA=="
    },
    "for-each": {
      "version": "0.3.3",
      "resolved": "https://registry.npmjs.org/for-each/-/for-each-0.3.3.tgz",
      "integrity": "sha512-jqYfLp7mo9vIyQf8ykW2v7A+2N4QjeCeI5+Dz9XraiO1ign81wjiH7Fb9vSOWvQfNtmSa4H2RoQTrrXivdUZmw==",
      "requires": {
        "is-callable": "^1.1.3"
      }
    },
    "foreground-child": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/foreground-child/-/foreground-child-3.1.1.tgz",
      "integrity": "sha512-TMKDUnIte6bfb5nWv7V/caI169OHgvwjb7V4WkeUvbQQdjr5rWKqHFiKWb/fcOwB+CzBT+qbWjvj+DVwRskpIg==",
      "requires": {
        "cross-spawn": "^7.0.0",
        "signal-exit": "^4.0.1"
      },
      "dependencies": {
        "signal-exit": {
          "version": "4.0.2",
          "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-4.0.2.tgz",
          "integrity": "sha512-MY2/qGx4enyjprQnFaZsHib3Yadh3IXyV2C321GY0pjGfVBu4un0uDJkwgdxqO+Rdx8JMT8IfJIRwbYVz3Ob3Q=="
        }
      }
    },
    "forever-agent": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/forever-agent/-/forever-agent-0.6.1.tgz",
      "integrity": "sha512-j0KLYPhm6zeac4lz3oJ3o65qvgQCcPubiyotZrXqEaG4hNagNYO8qdlUrX5vwqv9ohqeT/Z3j6+yW067yWWdUw=="
    },
    "form-data": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/form-data/-/form-data-4.0.0.tgz",
      "integrity": "sha512-ETEklSGi5t0QMZuiXoA/Q6vcnxcLQP5vdugSpuAyi6SVGi2clPPp+xgEhuMaHC+zGgn31Kd235W35f7Hykkaww==",
      "requires": {
        "asynckit": "^0.4.0",
        "combined-stream": "^1.0.8",
        "mime-types": "^2.1.12"
      }
    },
    "form-data-encoder": {
      "version": "1.7.1",
      "resolved": "https://registry.npmjs.org/form-data-encoder/-/form-data-encoder-1.7.1.tgz",
      "integrity": "sha512-EFRDrsMm/kyqbTQocNvRXMLjc7Es2Vk+IQFx/YW7hkUH1eBl4J1fqiP34l74Yt0pFLCNpc06fkbVk00008mzjg=="
    },
    "formdata-polyfill": {
      "version": "4.0.10",
      "resolved": "https://registry.npmjs.org/formdata-polyfill/-/formdata-polyfill-4.0.10.tgz",
      "integrity": "sha512-buewHzMvYL29jdeQTVILecSaZKnt/RJWjoZCF5OW60Z67/GmSLBkOFM7qh1PI3zFNtJbaZL5eQu1vLfazOwj4g==",
      "requires": {
        "fetch-blob": "^3.1.2"
      }
    },
    "formidable": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/formidable/-/formidable-1.2.6.tgz",
      "integrity": "sha512-KcpbcpuLNOwrEjnbpMC0gS+X8ciDoZE1kkqzat4a8vrprf+s9pKNQ/QIwWfbfs4ltgmFl3MD177SNTkve3BwGQ=="
    },
    "forwarded": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz",
      "integrity": "sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow=="
    },
    "fraction.js": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/fraction.js/-/fraction.js-4.2.0.tgz",
      "integrity": "sha512-MhLuK+2gUcnZe8ZHlaaINnQLl0xRIGRfcGk2yl8xoQAfHrSsL3rYu6FCmBdkdbhc9EPlwyGHewaRsvwRMJtAlA=="
    },
    "fresh": {
      "version": "0.5.2",
      "resolved": "https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz",
      "integrity": "sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q=="
    },
    "fs-extra": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-4.0.3.tgz",
      "integrity": "sha512-q6rbdDd1o2mAnQreO7YADIxf/Whx4AHBiRf6d+/cVT8h44ss+lHgxf1FemcqDnQt9X3ct4McHr+JMGlYSsK7Cg==",
      "requires": {
        "graceful-fs": "^4.1.2",
        "jsonfile": "^4.0.0",
        "universalify": "^0.1.0"
      }
    },
    "fs-minipass": {
      "version": "1.2.7",
      "resolved": "https://registry.npmjs.org/fs-minipass/-/fs-minipass-1.2.7.tgz",
      "integrity": "sha512-GWSSJGFy4e9GUeCcbIkED+bgAoFyj7XF1mV8rma3QW4NIqX9Kyx79N/PF61H5udOV3aY1IaMLs6pGbH71nlCTA==",
      "requires": {
        "minipass": "^2.6.0"
      }
    },
    "fs.realpath": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
      "integrity": "sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw=="
    },
    "fsevents": {
      "version": "2.3.2",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.2.tgz",
      "integrity": "sha512-xiqMQR4xAeHTuB9uWm+fFRcIOgKBMiOBP+eXiyT7jsgVCq1bkVygt00oASowB7EdtpOHaaPgKt812P9ab+DDKA==",
      "optional": true
    },
    "function-bind": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz",
      "integrity": "sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A=="
    },
    "functions-have-names": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/functions-have-names/-/functions-have-names-1.2.3.tgz",
      "integrity": "sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ=="
    },
    "gensync": {
      "version": "1.0.0-beta.2",
      "resolved": "https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz",
      "integrity": "sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg=="
    },
    "get-caller-file": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz",
      "integrity": "sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg=="
    },
    "get-intrinsic": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.2.0.tgz",
      "integrity": "sha512-L049y6nFOuom5wGyRc3/gdTLO94dySVKRACj1RmJZBQXlbTMhtNIgkWkUHq+jYmZvKf14EW1EoJnnjbmoHij0Q==",
      "requires": {
        "function-bind": "^1.1.1",
        "has": "^1.0.3",
        "has-symbols": "^1.0.3"
      }
    },
    "get-stream": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-6.0.1.tgz",
      "integrity": "sha512-ts6Wi+2j3jQjqi70w5AlN8DFnkSwC+MqmxEzdEALB2qXZYV3X/b1CTfgPLGJNMeAWxdPfU8FO1ms3NUfaHCPYg=="
    },
    "getpass": {
      "version": "0.1.7",
      "resolved": "https://registry.npmjs.org/getpass/-/getpass-0.1.7.tgz",
      "integrity": "sha512-0fzj9JxOLfJ+XGLhR8ze3unN0KZCgZwiSSDz168VERjK8Wl8kVSdcu2kspd4s4wtAa1y/qrVRiAA0WclVsu0ng==",
      "requires": {
        "assert-plus": "^1.0.0"
      }
    },
    "glob": {
      "version": "10.3.1",
      "resolved": "https://registry.npmjs.org/glob/-/glob-10.3.1.tgz",
      "integrity": "sha512-9BKYcEeIs7QwlCYs+Y3GBvqAMISufUS0i2ELd11zpZjxI5V9iyRj0HgzB5/cLf2NY4vcYBTYzJ7GIui7j/4DOw==",
      "requires": {
        "foreground-child": "^3.1.0",
        "jackspeak": "^2.0.3",
        "minimatch": "^9.0.1",
        "minipass": "^5.0.0 || ^6.0.2",
        "path-scurry": "^1.10.0"
      },
      "dependencies": {
        "minipass": {
          "version": "6.0.2",
          "resolved": "https://registry.npmjs.org/minipass/-/minipass-6.0.2.tgz",
          "integrity": "sha512-MzWSV5nYVT7mVyWCwn2o7JH13w2TBRmmSqSRCKzTw+lmft9X4z+3wjvs06Tzijo5z4W/kahUCDpRXTF+ZrmF/w=="
        }
      }
    },
    "glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "dev": true,
      "requires": {
        "is-glob": "^4.0.1"
      }
    },
    "global": {
      "version": "4.4.0",
      "resolved": "https://registry.npmjs.org/global/-/global-4.4.0.tgz",
      "integrity": "sha512-wv/LAoHdRE3BeTGz53FAamhGlPLhlssK45usmGFThIi4XqnBmjKQ16u+RNbP7WvigRZDxUsM0J3gcQ5yicaL0w==",
      "requires": {
        "min-document": "^2.19.0",
        "process": "^0.11.10"
      }
    },
    "globals": {
      "version": "11.12.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-11.12.0.tgz",
      "integrity": "sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA=="
    },
    "gopd": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.0.1.tgz",
      "integrity": "sha512-d65bNlIadxvpb/A2abVdlqKqV563juRnZ1Wtk6s1sIR8uNsXR70xqIzVqxVf1eTqDunwT2MkczEeaezCKTZhwA==",
      "requires": {
        "get-intrinsic": "^1.1.3"
      }
    },
    "got": {
      "version": "12.1.0",
      "resolved": "https://registry.npmjs.org/got/-/got-12.1.0.tgz",
      "integrity": "sha512-hBv2ty9QN2RdbJJMK3hesmSkFTjVIHyIDDbssCKnSmq62edGgImJWD10Eb1k77TiV1bxloxqcFAVK8+9pkhOig==",
      "requires": {
        "@sindresorhus/is": "^4.6.0",
        "@szmarczak/http-timer": "^5.0.1",
        "@types/cacheable-request": "^6.0.2",
        "@types/responselike": "^1.0.0",
        "cacheable-lookup": "^6.0.4",
        "cacheable-request": "^7.0.2",
        "decompress-response": "^6.0.0",
        "form-data-encoder": "1.7.1",
        "get-stream": "^6.0.1",
        "http2-wrapper": "^2.1.10",
        "lowercase-keys": "^3.0.0",
        "p-cancelable": "^3.0.0",
        "responselike": "^2.0.0"
      }
    },
    "graceful-fs": {
      "version": "4.2.10",
      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.10.tgz",
      "integrity": "sha512-9ByhssR2fPVsNZj478qUUbKfmL0+t5BDVyjShtyZZLiK7ZDAArFFfopyOTj0M05wE2tJPisA4iTnnXl2YoPvOA=="
    },
    "gud": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/gud/-/gud-1.0.0.tgz",
      "integrity": "sha512-zGEOVKFM5sVPPrYs7J5/hYEw2Pof8KCyOwyhG8sAF26mCAeUFAcYPu1mwB7hhpIP29zOIBaDqwuHdLp0jvZXjw=="
    },
    "handlebars": {
      "version": "4.7.7",
      "resolved": "https://registry.npmjs.org/handlebars/-/handlebars-4.7.7.tgz",
      "integrity": "sha512-aAcXm5OAfE/8IXkcZvCepKU3VzW1/39Fb5ZuqMtgI/hT8X2YgoMvBY5dLhq/cpOvw7Lk1nK/UF71aLG/ZnVYRA==",
      "requires": {
        "minimist": "^1.2.5",
        "neo-async": "^2.6.0",
        "source-map": "^0.6.1",
        "uglify-js": "^3.1.4",
        "wordwrap": "^1.0.0"
      }
    },
    "har-schema": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/har-schema/-/har-schema-2.0.0.tgz",
      "integrity": "sha512-Oqluz6zhGX8cyRaTQlFMPw80bSJVG2x/cFb8ZPhUILGgHka9SsokCCOQgpveePerqidZOrT14ipqfJb7ILcW5Q=="
    },
    "har-validator": {
      "version": "5.1.5",
      "resolved": "https://registry.npmjs.org/har-validator/-/har-validator-5.1.5.tgz",
      "integrity": "sha512-nmT2T0lljbxdQZfspsno9hgrG3Uir6Ks5afism62poxqBM6sDnMEuPmzTq8XN0OEwqKLLdh1jQI3qyE66Nzb3w==",
      "requires": {
        "ajv": "^6.12.3",
        "har-schema": "^2.0.0"
      }
    },
    "has": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/has/-/has-1.0.3.tgz",
      "integrity": "sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==",
      "requires": {
        "function-bind": "^1.1.1"
      }
    },
    "has-flag": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
      "integrity": "sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw=="
    },
    "has-property-descriptors": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.0.tgz",
      "integrity": "sha512-62DVLZGoiEBDHQyqG4w9xCuZ7eJEwNmJRWw2VY84Oedb7WFcA27fiEVe8oUQx9hAUJ4ekurquucTGwsyO1XGdQ==",
      "requires": {
        "get-intrinsic": "^1.1.1"
      }
    },
    "has-symbols": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.3.tgz",
      "integrity": "sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A=="
    },
    "has-tostringtag": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.0.tgz",
      "integrity": "sha512-kFjcSNhnlGV1kyoGk7OXKSawH5JOb/LzUc5w9B02hOTO0dfFRjbHQKvg1d6cf3HbeUmtU9VbbV3qzZ2Teh97WQ==",
      "requires": {
        "has-symbols": "^1.0.2"
      }
    },
    "hash-base": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/hash-base/-/hash-base-3.1.0.tgz",
      "integrity": "sha512-1nmYp/rhMDiE7AYkDw+lLwlAzz0AntGIe51F3RfFfEqyQ3feY2eI/NcwC6umIQVOASPMsWJLJScWKSSvzL9IVA==",
      "requires": {
        "inherits": "^2.0.4",
        "readable-stream": "^3.6.0",
        "safe-buffer": "^5.2.0"
      }
    },
    "hash.js": {
      "version": "1.1.7",
      "resolved": "https://registry.npmjs.org/hash.js/-/hash.js-1.1.7.tgz",
      "integrity": "sha512-taOaskGt4z4SOANNseOviYDvjEJinIkRgmp7LbKP2YTTmVxWBl87s/uzK9r+44BclBSp2X7K1hqeNfz9JbBeXA==",
      "requires": {
        "inherits": "^2.0.3",
        "minimalistic-assert": "^1.0.1"
      }
    },
    "highlight.js": {
      "version": "10.7.3",
      "resolved": "https://registry.npmjs.org/highlight.js/-/highlight.js-10.7.3.tgz",
      "integrity": "sha512-tzcUFauisWKNHaRkN4Wjl/ZA07gENAjFl3J/c480dprkGTg5EQstgaNFqBfUqCq54kZRIEcreTsAgF/m2quD7A=="
    },
    "history": {
      "version": "4.10.1",
      "resolved": "https://registry.npmjs.org/history/-/history-4.10.1.tgz",
      "integrity": "sha512-36nwAD620w12kuzPAsyINPWJqlNbij+hpK1k9XRloDtym8mxzGYl2c17LnV6IAGB2Dmg4tEa7G7DlawS0+qjew==",
      "requires": {
        "@babel/runtime": "^7.1.2",
        "loose-envify": "^1.2.0",
        "resolve-pathname": "^3.0.0",
        "tiny-invariant": "^1.0.2",
        "tiny-warning": "^1.0.0",
        "value-equal": "^1.0.1"
      }
    },
    "hmac-drbg": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/hmac-drbg/-/hmac-drbg-1.0.1.tgz",
      "integrity": "sha512-Tti3gMqLdZfhOQY1Mzf/AanLiqh1WTiJgEj26ZuYQ9fbkLomzGchCws4FyrSd4VkpBfiNhaE1On+lOz894jvXg==",
      "requires": {
        "hash.js": "^1.0.3",
        "minimalistic-assert": "^1.0.0",
        "minimalistic-crypto-utils": "^1.0.1"
      }
    },
    "hoist-non-react-statics": {
      "version": "3.3.2",
      "resolved": "https://registry.npmjs.org/hoist-non-react-statics/-/hoist-non-react-statics-3.3.2.tgz",
      "integrity": "sha512-/gGivxi8JPKWNm/W0jSmzcMPpfpPLc3dY/6GxhX2hQ9iGj3aDfklV4ET7NjKpSinLpJ5vafa9iiGIEZg10SfBw==",
      "requires": {
        "react-is": "^16.7.0"
      }
    },
    "html-parse-stringify": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/html-parse-stringify/-/html-parse-stringify-3.0.1.tgz",
      "integrity": "sha512-KknJ50kTInJ7qIScF3jeaFRpMpE8/lfiTdzf/twXyPBLAGrLRTmkz3AdTnKeh40X8k9L2fdYwEp/42WGXIRGcg==",
      "requires": {
        "void-elements": "3.1.0"
      }
    },
    "http-cache-semantics": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/http-cache-semantics/-/http-cache-semantics-4.1.1.tgz",
      "integrity": "sha512-er295DKPVsV82j5kw1Gjt+ADA/XYHsajl82cGNQG2eyoPkvgUhX+nDIyelzhIWbbsXP39EHcI6l5tYs2FYqYXQ=="
    },
    "http-errors": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz",
      "integrity": "sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==",
      "requires": {
        "depd": "2.0.0",
        "inherits": "2.0.4",
        "setprototypeof": "1.2.0",
        "statuses": "2.0.1",
        "toidentifier": "1.0.1"
      }
    },
    "http-https": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/http-https/-/http-https-1.0.0.tgz",
      "integrity": "sha512-o0PWwVCSp3O0wS6FvNr6xfBCHgt0m1tvPLFOCc2iFDKTRAXhB7m8klDf7ErowFH8POa6dVdGatKU5I1YYwzUyg=="
    },
    "http-signature": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/http-signature/-/http-signature-1.2.0.tgz",
      "integrity": "sha512-CAbnr6Rz4CYQkLYUtSNXxQPUH2gK8f3iWexVlsnMeD+GjlsQ0Xsy1cOX+mN3dtxYomRy21CiOzU8Uhw6OwncEQ==",
      "requires": {
        "assert-plus": "^1.0.0",
        "jsprim": "^1.2.2",
        "sshpk": "^1.7.0"
      }
    },
    "http2-wrapper": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/http2-wrapper/-/http2-wrapper-2.2.0.tgz",
      "integrity": "sha512-kZB0wxMo0sh1PehyjJUWRFEd99KC5TLjZ2cULC4f9iqJBAmKQQXEICjxl5iPJRwP40dpeHFqqhm7tYCvODpqpQ==",
      "requires": {
        "quick-lru": "^5.1.1",
        "resolve-alpn": "^1.2.0"
      }
    },
    "i18next": {
      "version": "19.8.7",
      "resolved": "https://registry.npmjs.org/i18next/-/i18next-19.8.7.tgz",
      "integrity": "sha512-ezo1gb7QO4OQ5gQCdZMUxopwQSoqpRp6whdEjm1grxMSmkGj1NJ+kYS0UQd4NnpPIVqsgqTQ2L2eqSQYQ+U3Fw==",
      "requires": {
        "@babel/runtime": "^7.12.0"
      }
    },
    "iconv-lite": {
      "version": "0.4.24",
      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz",
      "integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==",
      "requires": {
        "safer-buffer": ">= 2.1.2 < 3"
      }
    },
    "idna-uts46-hx": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/idna-uts46-hx/-/idna-uts46-hx-2.3.1.tgz",
      "integrity": "sha512-PWoF9Keq6laYdIRwwCdhTPl60xRqAloYNMQLiyUnG42VjT53oW07BXIRM+NK7eQjzXjAk2gUvX9caRxlnF9TAA==",
      "requires": {
        "punycode": "2.1.0"
      },
      "dependencies": {
        "punycode": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.0.tgz",
          "integrity": "sha512-Yxz2kRwT90aPiWEMHVYnEf4+rhwF1tBmmZ4KepCP+Wkium9JxtWnUm1nqGwpiAHr/tnTSeHqr3wb++jgSkXjhA=="
        }
      }
    },
    "ieee754": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/ieee754/-/ieee754-1.2.1.tgz",
      "integrity": "sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA=="
    },
    "ignore-by-default": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/ignore-by-default/-/ignore-by-default-1.0.1.tgz",
      "integrity": "sha512-Ius2VYcGNk7T90CppJqcIkS5ooHUZyIQK+ClZfMfMNFEF9VSE73Fq+906u/CWu92x4gzZMWOwfFYckPObzdEbA==",
      "dev": true
    },
    "import-fresh": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.0.tgz",
      "integrity": "sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==",
      "requires": {
        "parent-module": "^1.0.0",
        "resolve-from": "^4.0.0"
      }
    },
    "inflight": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
      "integrity": "sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==",
      "requires": {
        "once": "^1.3.0",
        "wrappy": "1"
      }
    },
    "inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ=="
    },
    "injectpromise": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/injectpromise/-/injectpromise-1.0.0.tgz",
      "integrity": "sha512-qNq5wy4qX4uWHcVFOEU+RqZkoVG65FhvGkyDWbuBxILMjK6A1LFf5A1mgXZkD4nRx5FCorD81X/XvPKp/zVfPA=="
    },
    "ipaddr.js": {
      "version": "1.9.1",
      "resolved": "https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz",
      "integrity": "sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g=="
    },
    "is-arguments": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-arguments/-/is-arguments-1.1.1.tgz",
      "integrity": "sha512-8Q7EARjzEnKpt/PCD7e1cgUS0a6X8u5tdSiMqXhojOdoV9TsMsiO+9VLC5vAmO8N7/GmXn7yjR8qnA6bVAEzfA==",
      "requires": {
        "call-bind": "^1.0.2",
        "has-tostringtag": "^1.0.0"
      }
    },
    "is-arrayish": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz",
      "integrity": "sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg=="
    },
    "is-binary-path": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
      "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
      "dev": true,
      "requires": {
        "binary-extensions": "^2.0.0"
      }
    },
    "is-buffer": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-2.0.5.tgz",
      "integrity": "sha512-i2R6zNFDwgEHJyQUtJEk0XFi1i0dPFn/oqjK3/vPCcDeJvW5NQ83V8QbicfF1SupOaB0h8ntgBC2YiE7dfyctQ=="
    },
    "is-callable": {
      "version": "1.2.7",
      "resolved": "https://registry.npmjs.org/is-callable/-/is-callable-1.2.7.tgz",
      "integrity": "sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA=="
    },
    "is-core-module": {
      "version": "2.12.1",
      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.12.1.tgz",
      "integrity": "sha512-Q4ZuBAe2FUsKtyQJoQHlvP8OvBERxO3jEmy1I7hcRXcJBGGHFh/aJBswbXuS9sgrDH2QUO8ilkwNPHvHMd8clg==",
      "requires": {
        "has": "^1.0.3"
      }
    },
    "is-date-object": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/is-date-object/-/is-date-object-1.0.5.tgz",
      "integrity": "sha512-9YQaSxsAiSwcvS33MBk3wTCVnWK+HhF8VZR2jRxehM16QcVOdHqPn4VPHmRK4lSr38n9JriurInLcP90xsYNfQ==",
      "requires": {
        "has-tostringtag": "^1.0.0"
      }
    },
    "is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
      "dev": true
    },
    "is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg=="
    },
    "is-function": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/is-function/-/is-function-1.0.2.tgz",
      "integrity": "sha512-lw7DUp0aWXYg+CBCN+JKkcE0Q2RayZnSvnZBlwgxHBQhqt5pZNVy4Ri7H9GmmXkdu7LUthszM+Tor1u/2iBcpQ=="
    },
    "is-generator-function": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/is-generator-function/-/is-generator-function-1.0.10.tgz",
      "integrity": "sha512-jsEjy9l3yiXEQ+PsXdmBwEPcOxaXWLspKdplFUVI9vq1iZgIekeC0L167qeu86czQaxed3q/Uzuw0swL0irL8A==",
      "requires": {
        "has-tostringtag": "^1.0.0"
      }
    },
    "is-glob": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
      "dev": true,
      "requires": {
        "is-extglob": "^2.1.1"
      }
    },
    "is-hex-prefixed": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-hex-prefixed/-/is-hex-prefixed-1.0.0.tgz",
      "integrity": "sha512-WvtOiug1VFrE9v1Cydwm+FnXd3+w9GaeVUss5W4v/SLy3UW00vP+6iNF2SdnfiBoLy4bTqVdkftNGTUeOFVsbA=="
    },
    "is-interactive": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-interactive/-/is-interactive-1.0.0.tgz",
      "integrity": "sha512-2HvIEKRoqS62guEC+qBjpvRubdX910WCMuJTZ+I9yvqKU2/12eSL549HMwtabb4oupdj2sMP50k+XJfB/8JE6w=="
    },
    "is-module": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-module/-/is-module-1.0.0.tgz",
      "integrity": "sha512-51ypPSPCoTEIN9dy5Oy+h4pShgJmPCygKfyRCISBI+JoWT/2oJvK8QPxmwv7b/p239jXrm9M1mlQbyKJ5A152g=="
    },
    "is-nan": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/is-nan/-/is-nan-1.3.2.tgz",
      "integrity": "sha512-E+zBKpQ2t6MEo1VsonYmluk9NxGrbzpeeLC2xIViuO2EjU2xsXsBPwTr3Ykv9l08UYEVEdWeRZNouaZqF6RN0w==",
      "peer": true,
      "requires": {
        "call-bind": "^1.0.0",
        "define-properties": "^1.1.3"
      }
    },
    "is-number": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
      "dev": true
    },
    "is-plain-object": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/is-plain-object/-/is-plain-object-2.0.4.tgz",
      "integrity": "sha512-h5PpgXkWitc38BBMYawTYMWJHFZJVnBquFE57xFpjB8pJFiF6gZ+bU+WyI/yqXiFR5mdLsgYNaPe8uao6Uv9Og==",
      "requires": {
        "isobject": "^3.0.1"
      }
    },
    "is-reference": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/is-reference/-/is-reference-1.2.1.tgz",
      "integrity": "sha512-U82MsXXiFIrjCK4otLT+o2NA2Cd2g5MLoOVXUZjIOhLurrRxpEXzI8O0KZHr3IjLvlAH1kTPYSuqer5T9ZVBKQ==",
      "requires": {
        "@types/estree": "*"
      }
    },
    "is-regex": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/is-regex/-/is-regex-1.1.4.tgz",
      "integrity": "sha512-kvRdxDsxZjhzUX07ZnLydzS1TU/TJlTUHHY4YLL87e37oUA49DfkLqgy+VjFocowy29cKvcSiu+kIv728jTTVg==",
      "requires": {
        "call-bind": "^1.0.2",
        "has-tostringtag": "^1.0.0"
      }
    },
    "is-typed-array": {
      "version": "1.1.10",
      "resolved": "https://registry.npmjs.org/is-typed-array/-/is-typed-array-1.1.10.tgz",
      "integrity": "sha512-PJqgEHiWZvMpaFZ3uTc8kHPM4+4ADTlDniuQL7cU/UDA0Ql7F70yGfHph3cLNe+c9toaigv+DFzTJKhc2CtO6A==",
      "requires": {
        "available-typed-arrays": "^1.0.5",
        "call-bind": "^1.0.2",
        "for-each": "^0.3.3",
        "gopd": "^1.0.1",
        "has-tostringtag": "^1.0.0"
      }
    },
    "is-typedarray": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz",
      "integrity": "sha512-cyA56iCMHAh5CdzjJIa4aohJyeO1YbwLi3Jc35MmRU6poroFjIGZzUzupGiRPOjgHg9TLu43xbpwXk523fMxKA=="
    },
    "is-unicode-supported": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/is-unicode-supported/-/is-unicode-supported-0.1.0.tgz",
      "integrity": "sha512-knxG2q4UC3u8stRGyAVJCOdxFmv5DZiRcdlIaAQXAbSfJya+OhopNotLQrstBhququ4ZpuKbDc/8S6mgXgPFPw=="
    },
    "isarray": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
      "integrity": "sha512-VLghIWNM6ELQzo7zwmcg0NmTVyWKYjvIeM83yjp0wRDTmUnrM678fQbcKBo6n2CJEF0szoG//ytg+TKla89ALQ=="
    },
    "isexe": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
      "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw=="
    },
    "isobject": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/isobject/-/isobject-3.0.1.tgz",
      "integrity": "sha512-WhB9zCku7EGTj/HQQRz5aUQEUeoQZH2bWcltRErOpymJ4boYE6wL9Tbr23krRPSZ+C5zqNSrSw+Cc7sZZ4b7vg=="
    },
    "isstream": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/isstream/-/isstream-0.1.2.tgz",
      "integrity": "sha512-Yljz7ffyPbrLpLngrMtZ7NduUgVvi6wG9RJ9IUcyCd59YQ911PBJphODUcbOVbqYfxe1wuYf/LJ8PauMRwsM/g=="
    },
    "jackspeak": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/jackspeak/-/jackspeak-2.2.1.tgz",
      "integrity": "sha512-MXbxovZ/Pm42f6cDIDkl3xpwv1AGwObKwfmjs2nQePiy85tP3fatofl3FC1aBsOtP/6fq5SbtgHwWcMsLP+bDw==",
      "requires": {
        "@isaacs/cliui": "^8.0.2",
        "@pkgjs/parseargs": "^0.11.0"
      }
    },
    "javascript-natural-sort": {
      "version": "0.7.1",
      "resolved": "https://registry.npmjs.org/javascript-natural-sort/-/javascript-natural-sort-0.7.1.tgz",
      "integrity": "sha512-nO6jcEfZWQXDhOiBtG2KvKyEptz7RVbpGP4vTD2hLBdmNQSsCiicO2Ioinv6UI4y9ukqnBpy+XZ9H6uLNgJTlw=="
    },
    "jest-worker": {
      "version": "26.6.2",
      "resolved": "https://registry.npmjs.org/jest-worker/-/jest-worker-26.6.2.tgz",
      "integrity": "sha512-KWYVV1c4i+jbMpaBC+U++4Va0cp8OisU185o73T1vo99hqi7w8tSJfUXYswwqqrjzwxa6KpRK54WhPvwf5w6PQ==",
      "requires": {
        "@types/node": "*",
        "merge-stream": "^2.0.0",
        "supports-color": "^7.0.0"
      },
      "dependencies": {
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ=="
        },
        "supports-color": {
          "version": "7.2.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
          "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
          "requires": {
            "has-flag": "^4.0.0"
          }
        }
      }
    },
    "js-sha256": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/js-sha256/-/js-sha256-0.9.0.tgz",
      "integrity": "sha512-sga3MHh9sgQN2+pJ9VYZ+1LPwXOxuBJBA5nrR5/ofPfuiJBE2hnjsaN8se8JznOmGLN2p49Pe5U/ttafcs/apA=="
    },
    "js-sha3": {
      "version": "0.8.0",
      "resolved": "https://registry.npmjs.org/js-sha3/-/js-sha3-0.8.0.tgz",
      "integrity": "sha512-gF1cRrHhIzNfToc802P800N8PpXS+evLLXfsVpowqmAFR9uwbi89WvXg2QspOmXL8QL86J4T1EpFu+yUkwJY3Q=="
    },
    "js-tokens": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ=="
    },
    "js-yaml": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz",
      "integrity": "sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==",
      "requires": {
        "argparse": "^2.0.1"
      }
    },
    "jsbn": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/jsbn/-/jsbn-0.1.1.tgz",
      "integrity": "sha512-UVU9dibq2JcFWxQPA6KCqj5O42VOmAY3zQUfEKxU0KpTGXwNoCjkX1e13eHNvw/xPynt6pU0rZ1htjWTNTSXsg=="
    },
    "jsesc": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-2.5.2.tgz",
      "integrity": "sha512-OYu7XEzjkCQ3C5Ps3QIZsQfNpqoJyZZA99wd9aWd05NCtC5pWOkShK2mkL6HXQR6/Cy2lbNdPlZBpuQHXE63gA=="
    },
    "json-buffer": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz",
      "integrity": "sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ=="
    },
    "json-parse-even-better-errors": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/json-parse-even-better-errors/-/json-parse-even-better-errors-2.3.1.tgz",
      "integrity": "sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w=="
    },
    "json-schema": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/json-schema/-/json-schema-0.4.0.tgz",
      "integrity": "sha512-es94M3nTIfsEPisRafak+HDLfHXnKBhV3vU5eqPcS3flIWqcxJWgXHXiey3YrpaNsanY5ei1VoYEbOzijuq9BA=="
    },
    "json-schema-traverse": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg=="
    },
    "json-stringify-safe": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz",
      "integrity": "sha512-ZClg6AaYvamvYEE82d3Iyd3vSSIjQ+odgjaTzRuO3s7toCdFKczob2i0zCh7JE8kWn17yvAWhUVxvqGwUalsRA=="
    },
    "json5": {
      "version": "2.2.3",
      "resolved": "https://registry.npmjs.org/json5/-/json5-2.2.3.tgz",
      "integrity": "sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg=="
    },
    "jsonfile": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-4.0.0.tgz",
      "integrity": "sha512-m6F1R3z8jjlf2imQHS2Qez5sjKWQzbuuhuJ/FKYFRZvPE3PuHcSMVZzfsLhGVOkfd20obL5SWEBew5ShlquNxg==",
      "requires": {
        "graceful-fs": "^4.1.6"
      }
    },
    "jsprim": {
      "version": "1.4.2",
      "resolved": "https://registry.npmjs.org/jsprim/-/jsprim-1.4.2.tgz",
      "integrity": "sha512-P2bSOMAc/ciLz6DzgjVlGJP9+BrJWu5UDGK70C2iweC5QBIeFf0ZXRvGjEj2uYgrY2MkAAhsSWHDWlFtEroZWw==",
      "requires": {
        "assert-plus": "1.0.0",
        "extsprintf": "1.3.0",
        "json-schema": "0.4.0",
        "verror": "1.10.0"
      }
    },
    "jssha": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/jssha/-/jssha-2.3.1.tgz",
      "integrity": "sha512-z75RK13RZmAYW1SR9DAO9eqosXjctPsSEkQ9QJGWx90gJMnQC4AxU/AGQYZ63VCWIJMtzXgbEZ0fTEKmllm8gw=="
    },
    "jw-paginate": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/jw-paginate/-/jw-paginate-1.0.4.tgz",
      "integrity": "sha512-W0bv782exgCoynUL/egbRpaYwf/r6T6e02H870H5u3hfSgEYrxgz5POwmFF5aApS6iPi6yhZ0VF8IbafNFsntA=="
    },
    "keccak": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/keccak/-/keccak-3.0.3.tgz",
      "integrity": "sha512-JZrLIAJWuZxKbCilMpNz5Vj7Vtb4scDG3dMXLOsbzBmQGyjwE61BbW7bJkfKKCShXiQZt3T6sBgALRtmd+nZaQ==",
      "requires": {
        "node-addon-api": "^2.0.0",
        "node-gyp-build": "^4.2.0",
        "readable-stream": "^3.6.0"
      }
    },
    "keyv": {
      "version": "4.5.2",
      "resolved": "https://registry.npmjs.org/keyv/-/keyv-4.5.2.tgz",
      "integrity": "sha512-5MHbFaKn8cNSmVW7BYnijeAVlE4cYA/SVkifVgrh7yotnfhKmjuXpDKjrABLnT0SfHWV21P8ow07OGfRrNDg8g==",
      "requires": {
        "json-buffer": "3.0.1"
      }
    },
    "kind-of": {
      "version": "6.0.3",
      "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.3.tgz",
      "integrity": "sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw=="
    },
    "kleur": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/kleur/-/kleur-3.0.3.tgz",
      "integrity": "sha512-eTIzlVOSUR+JxdDFepEYcBMtZ9Qqdef+rnzWdRZuMbOywu5tO2w2N7rqjoANZ5k9vywhL6Br1VRjUIgTQx4E8w=="
    },
    "lines-and-columns": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz",
      "integrity": "sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg=="
    },
    "locate-path": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz",
      "integrity": "sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==",
      "requires": {
        "p-locate": "^4.1.0"
      }
    },
    "lodash": {
      "version": "4.17.21",
      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",
      "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg=="
    },
    "lodash-es": {
      "version": "4.17.21",
      "resolved": "https://registry.npmjs.org/lodash-es/-/lodash-es-4.17.21.tgz",
      "integrity": "sha512-mKnC+QJ9pWVzv+C4/U3rRsHapFfHvQFoFB92e52xeyGMcX6/OlIl78je1u8vePzYZSkkogMPJ2yjxxsb89cxyw=="
    },
    "lodash.debounce": {
      "version": "4.0.8",
      "resolved": "https://registry.npmjs.org/lodash.debounce/-/lodash.debounce-4.0.8.tgz",
      "integrity": "sha512-FT1yDzDYEoYWhnSGnpE/4Kj1fLZkDFyqRb7fNt6FdYOSxlUWAtp42Eh6Wb0rGIv/m9Bgo7x4GhQbm5Ys4SG5ow=="
    },
    "lodash.get": {
      "version": "4.4.2",
      "resolved": "https://registry.npmjs.org/lodash.get/-/lodash.get-4.4.2.tgz",
      "integrity": "sha512-z+Uw/vLuy6gQe8cfaFWD7p0wVv8fJl3mbzXh33RS+0oW2wvUqiRXiQ69gLWSLpgB5/6sU+r6BlQR0MBILadqTQ=="
    },
    "lodash.isequal": {
      "version": "4.5.0",
      "resolved": "https://registry.npmjs.org/lodash.isequal/-/lodash.isequal-4.5.0.tgz",
      "integrity": "sha512-pDo3lu8Jhfjqls6GkMgpahsF9kCyayhgykjyLMNFTKWrpVdAQtYyB4muAMWozBB4ig/dtWAmsMxLEI8wuz+DYQ=="
    },
    "lodash.mergewith": {
      "version": "4.6.2",
      "resolved": "https://registry.npmjs.org/lodash.mergewith/-/lodash.mergewith-4.6.2.tgz",
      "integrity": "sha512-GK3g5RPZWTRSeLSpgP8Xhra+pnjBC56q9FZYe1d5RN3TJ35dbkGy3YqBSMbyCrlbi+CM9Z3Jk5yTL7RCsqboyQ=="
    },
    "log-symbols": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/log-symbols/-/log-symbols-4.1.0.tgz",
      "integrity": "sha512-8XPvpAA8uyhfteu8pIvQxpJZ7SYYdpUivZpGy6sFsBuKRY/7rQGavedeB8aK+Zkyq6upMFVL/9AW6vOYzfRyLg==",
      "requires": {
        "chalk": "^4.1.0",
        "is-unicode-supported": "^0.1.0"
      }
    },
    "loose-envify": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",
      "integrity": "sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",
      "requires": {
        "js-tokens": "^3.0.0 || ^4.0.0"
      }
    },
    "lowercase-keys": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-3.0.0.tgz",
      "integrity": "sha512-ozCC6gdQ+glXOQsveKD0YsDy8DSQFjDTz4zyzEHNV5+JP5D62LmfDZ6o1cycFx9ouG940M5dE8C8CTewdj2YWQ=="
    },
    "lru-cache": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz",
      "integrity": "sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==",
      "requires": {
        "yallist": "^3.0.2"
      }
    },
    "magic-string": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/magic-string/-/magic-string-0.25.9.tgz",
      "integrity": "sha512-RmF0AsMzgt25qzqqLc1+MbHmhdx0ojF2Fvs4XnOqz2ZOBXzzkEwc/dJQZCYHAn7v1jbVOjAZfK8msRn4BxO4VQ==",
      "requires": {
        "sourcemap-codec": "^1.4.8"
      }
    },
    "make-dir": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-2.1.0.tgz",
      "integrity": "sha512-LS9X+dc8KLxXCb8dni79fLIIUA5VyZoyjSMCwTluaXA0o27cCK0bhXkpgw+sTXVpPy/lSO57ilRixqk0vDmtRA==",
      "requires": {
        "pify": "^4.0.1",
        "semver": "^5.6.0"
      }
    },
    "make-error": {
      "version": "1.3.6",
      "resolved": "https://registry.npmjs.org/make-error/-/make-error-1.3.6.tgz",
      "integrity": "sha512-s8UhlNe7vPKomQhC1qFelMokr/Sc3AgNbso3n74mVPA5LTZwkB9NlXf4XPamLxJE8h0gh73rM94xvwRT2CVInw=="
    },
    "mathjs": {
      "version": "9.5.2",
      "resolved": "https://registry.npmjs.org/mathjs/-/mathjs-9.5.2.tgz",
      "integrity": "sha512-c0erTq0GP503/Ch2OtDOAn50GIOsuxTMjmE00NI/vKJFSWrDaQHRjx6ai+16xYv70yBSnnpUgHZGNf9FR9IwmA==",
      "requires": {
        "@babel/runtime": "^7.15.4",
        "complex.js": "^2.0.15",
        "decimal.js": "^10.3.1",
        "escape-latex": "^1.2.0",
        "fraction.js": "^4.1.1",
        "javascript-natural-sort": "^0.7.1",
        "seedrandom": "^3.0.5",
        "tiny-emitter": "^2.1.0",
        "typed-function": "^2.0.0"
      }
    },
    "md5.js": {
      "version": "1.3.5",
      "resolved": "https://registry.npmjs.org/md5.js/-/md5.js-1.3.5.tgz",
      "integrity": "sha512-xitP+WxNPcTTOgnTJcrhM0xvdPepipPSf3I8EIpGKeFLjt3PlJLIDG3u8EX53ZIubkb+5U2+3rELYpEhHhzdkg==",
      "requires": {
        "hash-base": "^3.0.0",
        "inherits": "^2.0.1",
        "safe-buffer": "^5.1.2"
      }
    },
    "media-typer": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz",
      "integrity": "sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ=="
    },
    "memoize-one": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/memoize-one/-/memoize-one-5.2.1.tgz",
      "integrity": "sha512-zYiwtZUcYyXKo/np96AGZAckk+FWWsUdJ3cHGGmld7+AhvcWmQyGCYUh1hc4Q/pkOhb65dQR/pqCyK0cOaHz4Q=="
    },
    "merge-descriptors": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.1.tgz",
      "integrity": "sha512-cCi6g3/Zr1iqQi6ySbseM1Xvooa98N0w31jzUYrXPX2xqObmFGHJ0tQ5u74H3mVh7wLouTseZyYIq39g8cNp1w=="
    },
    "merge-stream": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/merge-stream/-/merge-stream-2.0.0.tgz",
      "integrity": "sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w=="
    },
    "methods": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/methods/-/methods-1.1.2.tgz",
      "integrity": "sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w=="
    },
    "mime": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/mime/-/mime-1.6.0.tgz",
      "integrity": "sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg=="
    },
    "mime-db": {
      "version": "1.52.0",
      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
      "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg=="
    },
    "mime-types": {
      "version": "2.1.35",
      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
      "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
      "requires": {
        "mime-db": "1.52.0"
      }
    },
    "mimic-fn": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz",
      "integrity": "sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg=="
    },
    "mimic-response": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-1.0.1.tgz",
      "integrity": "sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ=="
    },
    "min-document": {
      "version": "2.19.0",
      "resolved": "https://registry.npmjs.org/min-document/-/min-document-2.19.0.tgz",
      "integrity": "sha512-9Wy1B3m3f66bPPmU5hdA4DR4PB2OfDU/+GS3yAB7IQozE3tqXaVv2zOjgla7MEGSRv95+ILmOuvhLkOK6wJtCQ==",
      "requires": {
        "dom-walk": "^0.1.0"
      }
    },
    "mini-create-react-context": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/mini-create-react-context/-/mini-create-react-context-0.4.1.tgz",
      "integrity": "sha512-YWCYEmd5CQeHGSAKrYvXgmzzkrvssZcuuQDDeqkT+PziKGMgE+0MCCtcKbROzocGBG1meBLl2FotlRwf4gAzbQ==",
      "requires": {
        "@babel/runtime": "^7.12.1",
        "tiny-warning": "^1.0.3"
      }
    },
    "minimalistic-assert": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/minimalistic-assert/-/minimalistic-assert-1.0.1.tgz",
      "integrity": "sha512-UtJcAD4yEaGtjPezWuO9wC4nwUnVH/8/Im3yEHQP4b67cXlD/Qr9hdITCU1xDbSEXg2XKNaP8jsReV7vQd00/A=="
    },
    "minimalistic-crypto-utils": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/minimalistic-crypto-utils/-/minimalistic-crypto-utils-1.0.1.tgz",
      "integrity": "sha512-JIYlbt6g8i5jKfJ3xz7rF0LXmv2TkDxBLUkiBeZ7bAx4GnnNMr8xFpGnOxn6GhTEHx3SjRrZEoU+j04prX1ktg=="
    },
    "minimatch": {
      "version": "9.0.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-9.0.2.tgz",
      "integrity": "sha512-PZOT9g5v2ojiTL7r1xF6plNHLtOeTpSlDI007As2NlA2aYBMfVom17yqa6QzhmDP8QOhn7LjHTg7DFCVSSa6yg==",
      "requires": {
        "brace-expansion": "^2.0.1"
      }
    },
    "minimist": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.8.tgz",
      "integrity": "sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA=="
    },
    "minipass": {
      "version": "2.9.0",
      "resolved": "https://registry.npmjs.org/minipass/-/minipass-2.9.0.tgz",
      "integrity": "sha512-wxfUjg9WebH+CUDX/CdbRlh5SmfZiy/hpkxaRI16Y9W56Pa75sWgd/rvFilSgrauD9NyFymP/+JFV3KwzIsJeg==",
      "requires": {
        "safe-buffer": "^5.1.2",
        "yallist": "^3.0.0"
      }
    },
    "minizlib": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/minizlib/-/minizlib-1.3.3.tgz",
      "integrity": "sha512-6ZYMOEnmVsdCeTJVE0W9ZD+pVnE8h9Hma/iOwwRDsdQoePpoX56/8B6z3P9VNwppJuBKNRuFDRNRqRWexT9G9Q==",
      "requires": {
        "minipass": "^2.9.0"
      }
    },
    "mkdirp": {
      "version": "0.5.6",
      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.6.tgz",
      "integrity": "sha512-FP+p8RB8OWpF3YZBCrP5gtADmtXApB5AMLn+vdyA+PyxCjrCs00mjyUozssO33cwDeT3wNGdLxJ5M//YqtHAJw==",
      "requires": {
        "minimist": "^1.2.6"
      }
    },
    "mkdirp-promise": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/mkdirp-promise/-/mkdirp-promise-5.0.1.tgz",
      "integrity": "sha512-Hepn5kb1lJPtVW84RFT40YG1OddBNTOVUZR2bzQUHc+Z03en8/3uX0+060JDhcEzyO08HmipsN9DcnFMxhIL9w==",
      "requires": {
        "mkdirp": "*"
      }
    },
    "mock-fs": {
      "version": "4.14.0",
      "resolved": "https://registry.npmjs.org/mock-fs/-/mock-fs-4.14.0.tgz",
      "integrity": "sha512-qYvlv/exQ4+svI3UOvPUpLDF0OMX5euvUH0Ny4N5QyRyhNdgAgUrVH3iUINSzEPLvx0kbo/Bp28GJKIqvE7URw=="
    },
    "morgan": {
      "version": "1.10.0",
      "resolved": "https://registry.npmjs.org/morgan/-/morgan-1.10.0.tgz",
      "integrity": "sha512-AbegBVI4sh6El+1gNwvD5YIck7nSA36weD7xvIxG4in80j/UoK8AEGaWnnz8v1GxonMCltmlNs5ZKbGvl9b1XQ==",
      "requires": {
        "basic-auth": "~2.0.1",
        "debug": "2.6.9",
        "depd": "~2.0.0",
        "on-finished": "~2.3.0",
        "on-headers": "~1.0.2"
      },
      "dependencies": {
        "on-finished": {
          "version": "2.3.0",
          "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.3.0.tgz",
          "integrity": "sha512-ikqdkGAAyf/X/gPhXGvfgAytDZtDbr+bkNUJ0N9h5MI/dmdgCs3l6hoHrcUv41sRKew3jIwrp4qQDXiK99Utww==",
          "requires": {
            "ee-first": "1.1.1"
          }
        }
      }
    },
    "ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A=="
    },
    "multer": {
      "version": "1.4.5-lts.1",
      "resolved": "https://registry.npmjs.org/multer/-/multer-1.4.5-lts.1.tgz",
      "integrity": "sha512-ywPWvcDMeH+z9gQq5qYHCCy+ethsk4goepZ45GLD63fOu0YcNecQxi64nDs3qluZB+murG3/D4dJ7+dGctcCQQ==",
      "requires": {
        "append-field": "^1.0.0",
        "busboy": "^1.0.0",
        "concat-stream": "^1.5.2",
        "mkdirp": "^0.5.4",
        "object-assign": "^4.1.1",
        "type-is": "^1.6.4",
        "xtend": "^4.0.0"
      }
    },
    "multibase": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/multibase/-/multibase-0.6.1.tgz",
      "integrity": "sha512-pFfAwyTjbbQgNc3G7D48JkJxWtoJoBMaR4xQUOuB8RnCgRqaYmWNFeJTTvrJ2w51bjLq2zTby6Rqj9TQ9elSUw==",
      "requires": {
        "base-x": "^3.0.8",
        "buffer": "^5.5.0"
      },
      "dependencies": {
        "buffer": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz",
          "integrity": "sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==",
          "requires": {
            "base64-js": "^1.3.1",
            "ieee754": "^1.1.13"
          }
        }
      }
    },
    "multicodec": {
      "version": "0.5.7",
      "resolved": "https://registry.npmjs.org/multicodec/-/multicodec-0.5.7.tgz",
      "integrity": "sha512-PscoRxm3f+88fAtELwUnZxGDkduE2HD9Q6GHUOywQLjOGT/HAdhjLDYNZ1e7VR0s0TP0EwZ16LNUTFpoBGivOA==",
      "requires": {
        "varint": "^5.0.0"
      }
    },
    "multihashes": {
      "version": "0.4.21",
      "resolved": "https://registry.npmjs.org/multihashes/-/multihashes-0.4.21.tgz",
      "integrity": "sha512-uVSvmeCWf36pU2nB4/1kzYZjsXD9vofZKpgudqkceYY5g2aZZXJ5r9lxuzoRLl1OAp28XljXsEJ/X/85ZsKmKw==",
      "requires": {
        "buffer": "^5.5.0",
        "multibase": "^0.7.0",
        "varint": "^5.0.0"
      },
      "dependencies": {
        "buffer": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz",
          "integrity": "sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==",
          "requires": {
            "base64-js": "^1.3.1",
            "ieee754": "^1.1.13"
          }
        },
        "multibase": {
          "version": "0.7.0",
          "resolved": "https://registry.npmjs.org/multibase/-/multibase-0.7.0.tgz",
          "integrity": "sha512-TW8q03O0f6PNFTQDvh3xxH03c8CjGaaYrjkl9UQPG6rz53TQzzxJVCIWVjzcbN/Q5Y53Zd0IBQBMVktVgNx4Fg==",
          "requires": {
            "base-x": "^3.0.8",
            "buffer": "^5.5.0"
          }
        }
      }
    },
    "mustache": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/mustache/-/mustache-4.2.0.tgz",
      "integrity": "sha512-71ippSywq5Yb7/tVYyGbkBggbU8H3u5Rz56fH60jGFgr8uHwxs+aSKeqmluIVzM0m0kB7xQjKS6qPfd0b2ZoqQ=="
    },
    "mz": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/mz/-/mz-2.7.0.tgz",
      "integrity": "sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==",
      "requires": {
        "any-promise": "^1.0.0",
        "object-assign": "^4.0.1",
        "thenify-all": "^1.0.0"
      }
    },
    "nano-json-stream-parser": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/nano-json-stream-parser/-/nano-json-stream-parser-0.1.2.tgz",
      "integrity": "sha512-9MqxMH/BSJC7dnLsEMPyfN5Dvoo49IsPFYMcHw3Bcfc2kN0lpHRBSzlMSVx4HGyJ7s9B31CyBTVehWJoQ8Ctew=="
    },
    "near-api-js": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/near-api-js/-/near-api-js-1.1.0.tgz",
      "integrity": "sha512-qYKv1mYsaDZc2uYndhS+ttDhR9+60qFc+ZjD6lWsAxr3ZskMjRwPffDGQZYhC7BRDQMe1HEbk6d5mf+TVm0Lqg==",
      "requires": {
        "bn.js": "5.2.1",
        "borsh": "^0.7.0",
        "bs58": "^4.0.0",
        "depd": "^2.0.0",
        "error-polyfill": "^0.1.3",
        "http-errors": "^1.7.2",
        "js-sha256": "^0.9.0",
        "mustache": "^4.0.0",
        "node-fetch": "^2.6.1",
        "text-encoding-utf-8": "^1.0.2",
        "tweetnacl": "^1.0.1"
      },
      "dependencies": {
        "http-errors": {
          "version": "1.8.1",
          "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.8.1.tgz",
          "integrity": "sha512-Kpk9Sm7NmI+RHhnj6OIWDI1d6fIoFAtFt9RLaTMRlg/8w49juAStsrBgp0Dp4OdxdVbRIeKhtCUvoi/RuAhO4g==",
          "requires": {
            "depd": "~1.1.2",
            "inherits": "2.0.4",
            "setprototypeof": "1.2.0",
            "statuses": ">= 1.5.0 < 2",
            "toidentifier": "1.0.1"
          },
          "dependencies": {
            "depd": {
              "version": "1.1.2",
              "resolved": "https://registry.npmjs.org/depd/-/depd-1.1.2.tgz",
              "integrity": "sha512-7emPTl6Dpo6JRXOXjLRxck+FlLRX5847cLKEn00PLAgc3g2hTZZgr+e4c2v6QpSmLeFP3n5yUo7ft6avBK/5jQ=="
            }
          }
        },
        "node-fetch": {
          "version": "2.6.11",
          "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.11.tgz",
          "integrity": "sha512-4I6pdBY1EthSqDmJkiNk3JIT8cswwR9nfeW/cPdUagJYEQG7R95WRH74wpz7ma8Gh/9dI9FP+OU+0E4FvtA55w==",
          "requires": {
            "whatwg-url": "^5.0.0"
          }
        },
        "statuses": {
          "version": "1.5.0",
          "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.5.0.tgz",
          "integrity": "sha512-OpZ3zP+jT1PI7I8nemJX4AKmAX070ZkYPVWV/AaKTJl+tXCTGyVdC1a4SL8RUQYEwk/f34ZX8UTykN68FwrqAA=="
        }
      }
    },
    "near-hd-key": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/near-hd-key/-/near-hd-key-1.2.1.tgz",
      "integrity": "sha512-SIrthcL5Wc0sps+2e1xGj3zceEa68TgNZDLuCx0daxmfTP7sFTB3/mtE2pYhlFsCxWoMn+JfID5E1NlzvvbRJg==",
      "requires": {
        "bip39": "3.0.2",
        "create-hmac": "1.1.7",
        "tweetnacl": "1.0.3"
      },
      "dependencies": {
        "@types/node": {
          "version": "11.11.6",
          "resolved": "https://registry.npmjs.org/@types/node/-/node-11.11.6.tgz",
          "integrity": "sha512-Exw4yUWMBXM3X+8oqzJNRqZSwUAaS4+7NdvHqQuFi/d+synz++xmX3QIf+BFqneW8N31R8Ky+sikfZUXq07ggQ=="
        },
        "bip39": {
          "version": "3.0.2",
          "resolved": "https://registry.npmjs.org/bip39/-/bip39-3.0.2.tgz",
          "integrity": "sha512-J4E1r2N0tUylTKt07ibXvhpT2c5pyAFgvuA5q1H9uDy6dEGpjV8jmymh3MTYJDLCNbIVClSB9FbND49I6N24MQ==",
          "requires": {
            "@types/node": "11.11.6",
            "create-hash": "^1.1.0",
            "pbkdf2": "^3.0.9",
            "randombytes": "^2.0.1"
          }
        }
      }
    },
    "near-seed-phrase": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/near-seed-phrase/-/near-seed-phrase-0.2.0.tgz",
      "integrity": "sha512-NpmrnejpY1AdlRpDZ0schJQJtfBaoUheRfiYtQpcq9TkwPgqKZCRULV5L3hHmLc0ep7KRtikbPQ9R2ztN/3cyQ==",
      "requires": {
        "bip39-light": "^1.0.7",
        "bs58": "^4.0.1",
        "near-hd-key": "^1.2.1",
        "tweetnacl": "^1.0.2"
      }
    },
    "negotiator": {
      "version": "0.6.3",
      "resolved": "https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz",
      "integrity": "sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg=="
    },
    "neo-async": {
      "version": "2.6.2",
      "resolved": "https://registry.npmjs.org/neo-async/-/neo-async-2.6.2.tgz",
      "integrity": "sha512-Yd3UES5mWCSqR+qNT93S3UoYUkqAZ9lLg8a7g9rimsWmYGK8cVToA4/sF3RrshdyV3sAGMXVUmpMYOw+dLpOuw=="
    },
    "next-tick": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/next-tick/-/next-tick-1.1.0.tgz",
      "integrity": "sha512-CXdUiJembsNjuToQvxayPZF9Vqht7hewsvy2sOWafLvi2awflj9mOC6bHIg50orX8IJvWKY9wYQ/zB2kogPslQ=="
    },
    "node-addon-api": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/node-addon-api/-/node-addon-api-2.0.2.tgz",
      "integrity": "sha512-Ntyt4AIXyaLIuMHF6IOoTakB3K+RWxwtsHNRxllEoA6vPwP9o4866g6YWDLUdnucilZhmkxiHwHr11gAENw+QA=="
    },
    "node-cache": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/node-cache/-/node-cache-5.1.2.tgz",
      "integrity": "sha512-t1QzWwnk4sjLWaQAS8CHgOJ+RAfmHpxFWmc36IWTiWHQfs0w5JDMBS1b1ZxQteo0vVVuWJvIUKHDkkeK7vIGCg==",
      "requires": {
        "clone": "2.x"
      }
    },
    "node-domexception": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/node-domexception/-/node-domexception-1.0.0.tgz",
      "integrity": "sha512-/jKZoMpw0F8GRwl4/eLROPA3cfcXtLApP0QzLmUT/HuPCZWyB7IY9ZrMeKw2O/nFIqPQB3PVM9aYm0F312AXDQ=="
    },
    "node-fetch": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-3.3.1.tgz",
      "integrity": "sha512-cRVc/kyto/7E5shrWca1Wsea4y6tL9iYJE5FBCius3JQfb/4P4I295PfhgbJQBLTx6lATE4z+wK0rPM4VS2uow==",
      "requires": {
        "data-uri-to-buffer": "^4.0.0",
        "fetch-blob": "^3.1.4",
        "formdata-polyfill": "^4.0.10"
      }
    },
    "node-gyp-build": {
      "version": "4.6.0",
      "resolved": "https://registry.npmjs.org/node-gyp-build/-/node-gyp-build-4.6.0.tgz",
      "integrity": "sha512-NTZVKn9IylLwUzaKjkas1e4u2DLNcV4rdYagA4PWdPwW87Bi7z+BznyKSRwS/761tV/lzCGXplWsiaMjLqP2zQ=="
    },
    "node-releases": {
      "version": "2.0.12",
      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.12.tgz",
      "integrity": "sha512-QzsYKWhXTWx8h1kIvqfnC++o0pEmpRQA/aenALsL2F4pqNVr7YzcdMlDij5WBnwftRbJCNJL/O7zdKaxKPHqgQ=="
    },
    "nodemailer": {
      "version": "6.9.1",
      "resolved": "https://registry.npmjs.org/nodemailer/-/nodemailer-6.9.1.tgz",
      "integrity": "sha512-qHw7dOiU5UKNnQpXktdgQ1d3OFgRAekuvbJLcdG5dnEo/GtcTHRYM7+UfJARdOFU9WUQO8OiIamgWPmiSFHYAA=="
    },
    "nodemailer-express-handlebars": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/nodemailer-express-handlebars/-/nodemailer-express-handlebars-6.0.0.tgz",
      "integrity": "sha512-xo5nVCn2GDaE8o0ppOWVq0s3Tt5xLn+R2pDROQrZALKCoP6WsEOXrNGQwH/tYJ4vucWtWd+zdcHm734S6CSA7w==",
      "requires": {
        "express-handlebars": "^6.0.0"
      }
    },
    "nodemon": {
      "version": "2.0.21",
      "resolved": "https://registry.npmjs.org/nodemon/-/nodemon-2.0.21.tgz",
      "integrity": "sha512-djN/n2549DUtY33S7o1djRCd7dEm0kBnj9c7S9XVXqRUbuggN1MZH/Nqa+5RFQr63Fbefq37nFXAE9VU86yL1A==",
      "dev": true,
      "requires": {
        "chokidar": "^3.5.2",
        "debug": "^3.2.7",
        "ignore-by-default": "^1.0.1",
        "minimatch": "^3.1.2",
        "pstree.remy": "^1.1.8",
        "semver": "^5.7.1",
        "simple-update-notifier": "^1.0.7",
        "supports-color": "^5.5.0",
        "touch": "^3.1.0",
        "undefsafe": "^2.0.5"
      },
      "dependencies": {
        "brace-expansion": {
          "version": "1.1.11",
          "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
          "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
          "dev": true,
          "requires": {
            "balanced-match": "^1.0.0",
            "concat-map": "0.0.1"
          }
        },
        "debug": {
          "version": "3.2.7",
          "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.7.tgz",
          "integrity": "sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==",
          "dev": true,
          "requires": {
            "ms": "^2.1.1"
          }
        },
        "minimatch": {
          "version": "3.1.2",
          "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
          "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
          "dev": true,
          "requires": {
            "brace-expansion": "^1.1.7"
          }
        },
        "ms": {
          "version": "2.1.3",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
          "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
          "dev": true
        }
      }
    },
    "nopt": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/nopt/-/nopt-1.0.10.tgz",
      "integrity": "sha512-NWmpvLSqUrgrAC9HCuxEvb+PSloHpqVu+FqcO4eeF2h5qYRhA7ev6KvelyQAKtegUbC6RypJnlEOhd8vloNKYg==",
      "dev": true,
      "requires": {
        "abbrev": "1"
      }
    },
    "normalize-path": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
      "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==",
      "dev": true
    },
    "normalize-url": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/normalize-url/-/normalize-url-6.1.0.tgz",
      "integrity": "sha512-DlL+XwOy3NxAQ8xuC0okPgK46iuVNAK01YN7RueYBqqFeGsBjV9XmCAzAdgt+667bCl5kPh9EqKKDwnaPG1I7A=="
    },
    "number-to-bn": {
      "version": "1.7.0",
      "resolved": "https://registry.npmjs.org/number-to-bn/-/number-to-bn-1.7.0.tgz",
      "integrity": "sha512-wsJ9gfSz1/s4ZsJN01lyonwuxA1tml6X1yBDnfpMglypcBRFZZkus26EdPSlqS5GJfYddVZa22p3VNb3z5m5Ig==",
      "requires": {
        "bn.js": "4.11.6",
        "strip-hex-prefix": "1.0.0"
      },
      "dependencies": {
        "bn.js": {
          "version": "4.11.6",
          "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.11.6.tgz",
          "integrity": "sha512-XWwnNNFCuuSQ0m3r3C4LE3EiORltHd9M05pq6FOlVeiophzRbMo50Sbz1ehl8K3Z+jw9+vmgnXefY1hz8X+2wA=="
        }
      }
    },
    "o3": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/o3/-/o3-1.0.3.tgz",
      "integrity": "sha512-f+4n+vC6s4ysy7YO7O2gslWZBUu8Qj2i2OUJOvjRxQva7jVjYjB29jrr9NCjmxZQR0gzrOcv1RnqoYOeMs5VRQ==",
      "requires": {
        "capability": "^0.2.5"
      }
    },
    "oauth-sign": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.9.0.tgz",
      "integrity": "sha512-fexhUFFPTGV8ybAtSIGbV6gOkSv8UtRbDBnAyLQw4QPKkgNlsH2ByPGtMUqdWkos6YCRmAqViwgZrJc/mRDzZQ=="
    },
    "object-assign": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
      "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg=="
    },
    "object-inspect": {
      "version": "1.12.3",
      "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.12.3.tgz",
      "integrity": "sha512-geUvdk7c+eizMNUDkRpW1wJwgfOiOeHbxBR/hLXK1aT6zmVSO0jsQcs7fj6MGw89jC/cjGfLcNOrtMYtGqm81g=="
    },
    "object-is": {
      "version": "1.1.5",
      "resolved": "https://registry.npmjs.org/object-is/-/object-is-1.1.5.tgz",
      "integrity": "sha512-3cyDsyHgtmi7I7DfSSI2LDp6SK2lwvtbg0p0R1e0RvTqF5ceGx+K2dfSjm1bKDMVCFEDAQvy+o8c6a7VujOddw==",
      "requires": {
        "call-bind": "^1.0.2",
        "define-properties": "^1.1.3"
      }
    },
    "object-keys": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz",
      "integrity": "sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA=="
    },
    "oboe": {
      "version": "2.1.5",
      "resolved": "https://registry.npmjs.org/oboe/-/oboe-2.1.5.tgz",
      "integrity": "sha512-zRFWiF+FoicxEs3jNI/WYUrVEgA7DeET/InK0XQuudGHRg8iIob3cNPrJTKaz4004uaA9Pbe+Dwa8iluhjLZWA==",
      "requires": {
        "http-https": "^1.0.0"
      }
    },
    "on-finished": {
      "version": "2.4.1",
      "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz",
      "integrity": "sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==",
      "requires": {
        "ee-first": "1.1.1"
      }
    },
    "on-headers": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/on-headers/-/on-headers-1.0.2.tgz",
      "integrity": "sha512-pZAE+FJLoyITytdqK0U5s+FIpjN0JP3OzFi/u8Rx+EV5/W+JTWGXG8xFzevE7AjBfDqHv/8vL8qQsIhHnqRkrA=="
    },
    "once": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
      "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
      "requires": {
        "wrappy": "1"
      }
    },
    "onetime": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/onetime/-/onetime-5.1.2.tgz",
      "integrity": "sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==",
      "requires": {
        "mimic-fn": "^2.1.0"
      }
    },
    "openapi-types": {
      "version": "12.1.0",
      "resolved": "https://registry.npmjs.org/openapi-types/-/openapi-types-12.1.0.tgz",
      "integrity": "sha512-XpeCy01X6L5EpP+6Hc3jWN7rMZJ+/k1lwki/kTmWzbVhdPie3jd5O2ZtedEx8Yp58icJ0osVldLMrTB/zslQXA==",
      "peer": true
    },
    "ora": {
      "version": "5.4.1",
      "resolved": "https://registry.npmjs.org/ora/-/ora-5.4.1.tgz",
      "integrity": "sha512-5b6Y85tPxZZ7QytO+BQzysW31HJku27cRIlkbAXaNx+BdcVi+LlRFmVXzeF6a7JCwJpyw5c4b+YSVImQIrBpuQ==",
      "requires": {
        "bl": "^4.1.0",
        "chalk": "^4.1.0",
        "cli-cursor": "^3.1.0",
        "cli-spinners": "^2.5.0",
        "is-interactive": "^1.0.0",
        "is-unicode-supported": "^0.1.0",
        "log-symbols": "^4.1.0",
        "strip-ansi": "^6.0.0",
        "wcwidth": "^1.0.1"
      }
    },
    "otplib": {
      "version": "12.0.1",
      "resolved": "https://registry.npmjs.org/otplib/-/otplib-12.0.1.tgz",
      "integrity": "sha512-xDGvUOQjop7RDgxTQ+o4pOol0/3xSZzawTiPKRrHnQWAy0WjhNs/5HdIDJCrqC4MBynmjXgULc6YfioaxZeFgg==",
      "requires": {
        "@otplib/core": "^12.0.1",
        "@otplib/preset-default": "^12.0.1",
        "@otplib/preset-v11": "^12.0.1"
      }
    },
    "p-cancelable": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/p-cancelable/-/p-cancelable-3.0.0.tgz",
      "integrity": "sha512-mlVgR3PGuzlo0MmTdk4cXqXWlwQDLnONTAg6sm62XkMJEiRxN3GL3SffkYvqwonbkJBcrI7Uvv5Zh9yjvn2iUw=="
    },
    "p-limit": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz",
      "integrity": "sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==",
      "requires": {
        "p-try": "^2.0.0"
      }
    },
    "p-locate": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz",
      "integrity": "sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==",
      "requires": {
        "p-limit": "^2.2.0"
      }
    },
    "p-try": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz",
      "integrity": "sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ=="
    },
    "packet-reader": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/packet-reader/-/packet-reader-1.0.0.tgz",
      "integrity": "sha512-HAKu/fG3HpHFO0AA8WE8q2g+gBJaZ9MG7fcKk+IJPLTGAD6Psw4443l+9DGRbOIh3/aXr7Phy0TjilYivJo5XQ=="
    },
    "parchment": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/parchment/-/parchment-1.1.4.tgz",
      "integrity": "sha512-J5FBQt/pM2inLzg4hEWmzQx/8h8D0CiDxaG3vyp9rKrQRSDgBlhjdP5jQGgosEajXPSQouXGHOmVdgo7QmJuOg=="
    },
    "parent-module": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
      "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
      "requires": {
        "callsites": "^3.0.0"
      }
    },
    "parse-headers": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/parse-headers/-/parse-headers-2.0.5.tgz",
      "integrity": "sha512-ft3iAoLOB/MlwbNXgzy43SWGP6sQki2jQvAyBg/zDFAgr9bfNWZIUj42Kw2eJIl8kEi4PbgE6U1Zau/HwI75HA=="
    },
    "parse-json": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-5.2.0.tgz",
      "integrity": "sha512-ayCKvm/phCGxOkYRSCM82iDwct8/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/odhFrGzQXZwbifC8Rg==",
      "requires": {
        "@babel/code-frame": "^7.0.0",
        "error-ex": "^1.3.1",
        "json-parse-even-better-errors": "^2.3.0",
        "lines-and-columns": "^1.1.6"
      }
    },
    "parse5": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/parse5/-/parse5-5.1.1.tgz",
      "integrity": "sha512-ugq4DFI0Ptb+WWjAdOK16+u/nHfiIrcE+sh8kZMaM0WllQKLI9rOUq6c2b7cwPkXdzfQESqvoqK6ug7U/Yyzug=="
    },
    "parse5-htmlparser2-tree-adapter": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/parse5-htmlparser2-tree-adapter/-/parse5-htmlparser2-tree-adapter-6.0.1.tgz",
      "integrity": "sha512-qPuWvbLgvDGilKc5BoicRovlT4MtYT6JfJyBOMDsKoiT+GiuP5qyrPCnR9HcPECIJJmZh5jRndyNThnhhb/vlA==",
      "requires": {
        "parse5": "^6.0.1"
      },
      "dependencies": {
        "parse5": {
          "version": "6.0.1",
          "resolved": "https://registry.npmjs.org/parse5/-/parse5-6.0.1.tgz",
          "integrity": "sha512-Ofn/CTFzRGTTxwpNEs9PP93gXShHcTq255nzRYSKe8AkVpZY7e1fpmTfOyoIvjP5HG7Z2ZM7VS9PPhQGW2pOpw=="
        }
      }
    },
    "parseurl": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz",
      "integrity": "sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ=="
    },
    "path-exists": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
      "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w=="
    },
    "path-is-absolute": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
      "integrity": "sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg=="
    },
    "path-key": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q=="
    },
    "path-parse": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw=="
    },
    "path-scurry": {
      "version": "1.10.0",
      "resolved": "https://registry.npmjs.org/path-scurry/-/path-scurry-1.10.0.tgz",
      "integrity": "sha512-tZFEaRQbMLjwrsmidsGJ6wDMv0iazJWk6SfIKnY4Xru8auXgmJkOBa5DUbYFcFD2Rzk2+KDlIiF0GVXNCbgC7g==",
      "requires": {
        "lru-cache": "^9.1.1 || ^10.0.0",
        "minipass": "^5.0.0 || ^6.0.2"
      },
      "dependencies": {
        "lru-cache": {
          "version": "10.0.0",
          "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-10.0.0.tgz",
          "integrity": "sha512-svTf/fzsKHffP42sujkO/Rjs37BCIsQVRCeNYIm9WN8rgT7ffoUnRtZCqU+6BqcSBdv8gwJeTz8knJpgACeQMw=="
        },
        "minipass": {
          "version": "6.0.2",
          "resolved": "https://registry.npmjs.org/minipass/-/minipass-6.0.2.tgz",
          "integrity": "sha512-MzWSV5nYVT7mVyWCwn2o7JH13w2TBRmmSqSRCKzTw+lmft9X4z+3wjvs06Tzijo5z4W/kahUCDpRXTF+ZrmF/w=="
        }
      }
    },
    "path-to-regexp": {
      "version": "0.1.7",
      "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.7.tgz",
      "integrity": "sha512-5DFkuoqlv1uYQKxy8omFBeJPQcdoE07Kv2sferDCrAq1ohOU+MSDswDIbnx3YAM60qIOnYa53wBhXW0EbMonrQ=="
    },
    "path-type": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz",
      "integrity": "sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw=="
    },
    "pbkdf2": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/pbkdf2/-/pbkdf2-3.1.2.tgz",
      "integrity": "sha512-iuh7L6jA7JEGu2WxDwtQP1ddOpaJNC4KlDEFfdQajSGgGPNi4OyDc2R7QnbY2bR9QjBVGwgvTdNJZoE7RaxUMA==",
      "requires": {
        "create-hash": "^1.1.2",
        "create-hmac": "^1.1.4",
        "ripemd160": "^2.0.1",
        "safe-buffer": "^5.0.1",
        "sha.js": "^2.4.8"
      }
    },
    "performance-now": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz",
      "integrity": "sha512-7EAHlyLHI56VEIdK57uwHdHKIaAGbnXPiw0yWbarQZOKaKpvUIgW0jWRVLiatnM+XXlSwsanIBH/hzGMJulMow=="
    },
    "pg": {
      "version": "8.9.0",
      "resolved": "https://registry.npmjs.org/pg/-/pg-8.9.0.tgz",
      "integrity": "sha512-ZJM+qkEbtOHRuXjmvBtOgNOXOtLSbxiMiUVMgE4rV6Zwocy03RicCVvDXgx8l4Biwo8/qORUnEqn2fdQzV7KCg==",
      "requires": {
        "buffer-writer": "2.0.0",
        "packet-reader": "1.0.0",
        "pg-connection-string": "^2.5.0",
        "pg-pool": "^3.5.2",
        "pg-protocol": "^1.6.0",
        "pg-types": "^2.1.0",
        "pgpass": "1.x"
      }
    },
    "pg-connection-string": {
      "version": "2.5.0",
      "resolved": "https://registry.npmjs.org/pg-connection-string/-/pg-connection-string-2.5.0.tgz",
      "integrity": "sha512-r5o/V/ORTA6TmUnyWZR9nCj1klXCO2CEKNRlVuJptZe85QuhFayC7WeMic7ndayT5IRIR0S0xFxFi2ousartlQ=="
    },
    "pg-int8": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/pg-int8/-/pg-int8-1.0.1.tgz",
      "integrity": "sha512-WCtabS6t3c8SkpDBUlb1kjOs7l66xsGdKpIPZsg4wR+B3+u9UAum2odSsF9tnvxg80h4ZxLWMy4pRjOsFIqQpw=="
    },
    "pg-pool": {
      "version": "3.5.2",
      "resolved": "https://registry.npmjs.org/pg-pool/-/pg-pool-3.5.2.tgz",
      "integrity": "sha512-His3Fh17Z4eg7oANLob6ZvH8xIVen3phEZh2QuyrIl4dQSDVEabNducv6ysROKpDNPSD+12tONZVWfSgMvDD9w==",
      "requires": {}
    },
    "pg-protocol": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/pg-protocol/-/pg-protocol-1.6.0.tgz",
      "integrity": "sha512-M+PDm637OY5WM307051+bsDia5Xej6d9IR4GwJse1qA1DIhiKlksvrneZOYQq42OM+spubpcNYEo2FcKQrDk+Q=="
    },
    "pg-types": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/pg-types/-/pg-types-2.2.0.tgz",
      "integrity": "sha512-qTAAlrEsl8s4OiEQY69wDvcMIdQN6wdz5ojQiOy6YRMuynxenON0O5oCpJI6lshc6scgAY8qvJ2On/p+CXY0GA==",
      "requires": {
        "pg-int8": "1.0.1",
        "postgres-array": "~2.0.0",
        "postgres-bytea": "~1.0.0",
        "postgres-date": "~1.0.4",
        "postgres-interval": "^1.1.0"
      }
    },
    "pgpass": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/pgpass/-/pgpass-1.0.5.tgz",
      "integrity": "sha512-FdW9r/jQZhSeohs1Z3sI1yxFQNFvMcnmfuj4WBMUTxOrAyLMaTcE1aAMBiTlbMNaXvBCQuVi0R7hd8udDSP7ug==",
      "requires": {
        "split2": "^4.1.0"
      }
    },
    "picocolors": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.0.0.tgz",
      "integrity": "sha512-1fygroTLlHu66zi26VoTDv8yRgm0Fccecssto+MhsZ0D/DGW2sm8E8AjW7NU5VVTRt5GxbeZ5qBuJr+HyLYkjQ=="
    },
    "picomatch": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA=="
    },
    "pify": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/pify/-/pify-4.0.1.tgz",
      "integrity": "sha512-uB80kBFb/tfd68bVleG9T5GGsGPjJrLAUpR5PZIrhBnIaRTQRjqdJSsIKkOP6OAIFbj7GOrcudc5pNjZ+geV2g=="
    },
    "pirates": {
      "version": "4.0.6",
      "resolved": "https://registry.npmjs.org/pirates/-/pirates-4.0.6.tgz",
      "integrity": "sha512-saLsH7WeYYPiD25LDuLRRY/i+6HaPYr6G1OUlN39otzkSTxKnubR9RTxS3/Kk50s1g2JTgFwWQDQyplC5/SHZg=="
    },
    "pkg-dir": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/pkg-dir/-/pkg-dir-3.0.0.tgz",
      "integrity": "sha512-/E57AYkoeQ25qkxMj5PBOVgF8Kiu/h7cYS30Z5+R7WaiCCBfLq58ZI/dSeaEKb9WVJV5n/03QwrN3IeWIFllvw==",
      "requires": {
        "find-up": "^3.0.0"
      },
      "dependencies": {
        "find-up": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/find-up/-/find-up-3.0.0.tgz",
          "integrity": "sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==",
          "requires": {
            "locate-path": "^3.0.0"
          }
        },
        "locate-path": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-3.0.0.tgz",
          "integrity": "sha512-7AO748wWnIhNqAuaty2ZWHkQHRSNfPVIsPIfwEOWO22AmaoVrWavlOcMR5nzTLNYvp36X220/maaRsrec1G65A==",
          "requires": {
            "p-locate": "^3.0.0",
            "path-exists": "^3.0.0"
          }
        },
        "p-locate": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-3.0.0.tgz",
          "integrity": "sha512-x+12w/To+4GFfgJhBEpiDcLozRJGegY+Ei7/z0tSLkMmxGZNybVMSfWj9aJn8Z5Fc7dBUNJOOVgPv2H7IwulSQ==",
          "requires": {
            "p-limit": "^2.0.0"
          }
        },
        "path-exists": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-3.0.0.tgz",
          "integrity": "sha512-bpC7GYwiDYQ4wYLe+FA8lhRjhQCMcQGuSgGGqDkg/QerRWw9CmGRT0iSOVRSZJ29NMLZgIzqaljJ63oaL4NIJQ=="
        }
      }
    },
    "pngjs": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/pngjs/-/pngjs-5.0.0.tgz",
      "integrity": "sha512-40QW5YalBNfQo5yRYmiw7Yz6TKKVr3h6970B2YE+3fQpsWcrbj1PzJgxeJ19DRQjhMbKPIuMY8rFaXc8moolVw=="
    },
    "polished": {
      "version": "3.7.2",
      "resolved": "https://registry.npmjs.org/polished/-/polished-3.7.2.tgz",
      "integrity": "sha512-pQKtpZGmsZrW8UUpQMAnR7s3ppHeMQVNyMDKtUyKwuvDmklzcEyM5Kllb3JyE/sE/x7arDmyd35i+4vp99H6sQ==",
      "requires": {
        "@babel/runtime": "^7.12.5"
      }
    },
    "popper.js": {
      "version": "1.16.1",
      "resolved": "https://registry.npmjs.org/popper.js/-/popper.js-1.16.1.tgz",
      "integrity": "sha512-Wb4p1J4zyFTbM+u6WuO4XstYx4Ky9Cewe4DWrel7B0w6VVICvPwdOpotjzcf6eD8TsckVnIMNONQyPIUFOUbCQ=="
    },
    "postcss-value-parser": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-4.2.0.tgz",
      "integrity": "sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ=="
    },
    "postgres-array": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/postgres-array/-/postgres-array-2.0.0.tgz",
      "integrity": "sha512-VpZrUqU5A69eQyW2c5CA1jtLecCsN2U/bD6VilrFDWq5+5UIEVO7nazS3TEcHf1zuPYO/sqGvUvW62g86RXZuA=="
    },
    "postgres-bytea": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/postgres-bytea/-/postgres-bytea-1.0.0.tgz",
      "integrity": "sha512-xy3pmLuQqRBZBXDULy7KbaitYqLcmxigw14Q5sj8QBVLqEwXfeybIKVWiqAXTlcvdvb0+xkOtDbfQMOf4lST1w=="
    },
    "postgres-date": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/postgres-date/-/postgres-date-1.0.7.tgz",
      "integrity": "sha512-suDmjLVQg78nMK2UZ454hAG+OAW+HQPZ6n++TNDUX+L0+uUlLywnoxJKDou51Zm+zTCjrCl0Nq6J9C5hP9vK/Q=="
    },
    "postgres-interval": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/postgres-interval/-/postgres-interval-1.2.0.tgz",
      "integrity": "sha512-9ZhXKM/rw350N1ovuWHbGxnGh/SNJ4cnxHiM0rxE4VN41wsg8P8zWn9hv/buK00RP4WvlOyr/RBDiptyxVbkZQ==",
      "requires": {
        "xtend": "^4.0.0"
      }
    },
    "process": {
      "version": "0.11.10",
      "resolved": "https://registry.npmjs.org/process/-/process-0.11.10.tgz",
      "integrity": "sha512-cdGef/drWFoydD1JsMzuFf8100nZl+GT+yacc2bEced5f9Rjk4z+WtFUTBu9PhOi9j/jfmBPu0mMEY4wIdAF8A=="
    },
    "process-nextick-args": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz",
      "integrity": "sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag=="
    },
    "prompts": {
      "version": "2.4.2",
      "resolved": "https://registry.npmjs.org/prompts/-/prompts-2.4.2.tgz",
      "integrity": "sha512-NxNv/kLguCA7p3jE8oL2aEBsrJWgAakBpgmgK6lpPWV+WuOmY6r2/zbAVnP+T8bQlA0nzHXSJSJW0Hq7ylaD2Q==",
      "requires": {
        "kleur": "^3.0.3",
        "sisteransi": "^1.0.5"
      }
    },
    "prop-types": {
      "version": "15.8.1",
      "resolved": "https://registry.npmjs.org/prop-types/-/prop-types-15.8.1.tgz",
      "integrity": "sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==",
      "requires": {
        "loose-envify": "^1.4.0",
        "object-assign": "^4.1.1",
        "react-is": "^16.13.1"
      }
    },
    "proxy-addr": {
      "version": "2.0.7",
      "resolved": "https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz",
      "integrity": "sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==",
      "requires": {
        "forwarded": "0.2.0",
        "ipaddr.js": "1.9.1"
      }
    },
    "proxy-from-env": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.1.0.tgz",
      "integrity": "sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg=="
    },
    "psl": {
      "version": "1.9.0",
      "resolved": "https://registry.npmjs.org/psl/-/psl-1.9.0.tgz",
      "integrity": "sha512-E/ZsdU4HLs/68gYzgGTkMicWTLPdAftJLfJFlLUAAKZGkStNU72sZjT66SnMDVOfOWY/YAoiD7Jxa9iHvngcag=="
    },
    "pstree.remy": {
      "version": "1.1.8",
      "resolved": "https://registry.npmjs.org/pstree.remy/-/pstree.remy-1.1.8.tgz",
      "integrity": "sha512-77DZwxQmxKnu3aR542U+X8FypNzbfJ+C5XQDk3uWjWxn6151aIMGthWYRXTqT1E5oJvg+ljaa2OJi+VfvCOQ8w==",
      "dev": true
    },
    "pump": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/pump/-/pump-3.0.0.tgz",
      "integrity": "sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==",
      "requires": {
        "end-of-stream": "^1.1.0",
        "once": "^1.3.1"
      }
    },
    "punycode": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.0.tgz",
      "integrity": "sha512-rRV+zQD8tVFys26lAGR9WUuS4iUAngJScM+ZRSKtvl5tKeZ2t5bvdNFdNHBW9FWR4guGHlgmsZ1G7BSm2wTbuA=="
    },
    "qrcode": {
      "version": "1.5.1",
      "resolved": "https://registry.npmjs.org/qrcode/-/qrcode-1.5.1.tgz",
      "integrity": "sha512-nS8NJ1Z3md8uTjKtP+SGGhfqmTCs5flU/xR623oI0JX+Wepz9R8UrRVCTBTJm3qGw3rH6jJ6MUHjkDx15cxSSg==",
      "requires": {
        "dijkstrajs": "^1.0.1",
        "encode-utf8": "^1.0.3",
        "pngjs": "^5.0.0",
        "yargs": "^15.3.1"
      }
    },
    "qs": {
      "version": "6.11.0",
      "resolved": "https://registry.npmjs.org/qs/-/qs-6.11.0.tgz",
      "integrity": "sha512-MvjoMCJwEarSbUYk5O+nmoSzSutSsTwF85zcHPQ9OrlFoZOYIjaqBAJIqIXjptyD5vThxGq52Xu/MaJzRkIk4Q==",
      "requires": {
        "side-channel": "^1.0.4"
      }
    },
    "query-string": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/query-string/-/query-string-5.1.1.tgz",
      "integrity": "sha512-gjWOsm2SoGlgLEdAGt7a6slVOk9mGiXmPFMqrEhLQ68rhQuBnpfs3+EmlvqKyxnCo9/PPlF+9MtY02S1aFg+Jw==",
      "requires": {
        "decode-uri-component": "^0.2.0",
        "object-assign": "^4.1.0",
        "strict-uri-encode": "^1.0.0"
      }
    },
    "quick-lru": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/quick-lru/-/quick-lru-5.1.1.tgz",
      "integrity": "sha512-WuyALRjWPDGtt/wzJiadO5AXY+8hZ80hVpe6MyivgraREW751X3SbhRvG3eLKOYN+8VEvqLcf3wdnt44Z4S4SA=="
    },
    "quill": {
      "version": "1.3.7",
      "resolved": "https://registry.npmjs.org/quill/-/quill-1.3.7.tgz",
      "integrity": "sha512-hG/DVzh/TiknWtE6QmWAF/pxoZKYxfe3J/d/+ShUWkDvvkZQVTPeVmUJVu1uE6DDooC4fWTiCLh84ul89oNz5g==",
      "requires": {
        "clone": "^2.1.1",
        "deep-equal": "^1.0.1",
        "eventemitter3": "^2.0.3",
        "extend": "^3.0.2",
        "parchment": "^1.1.4",
        "quill-delta": "^3.6.2"
      },
      "dependencies": {
        "eventemitter3": {
          "version": "2.0.3",
          "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-2.0.3.tgz",
          "integrity": "sha512-jLN68Dx5kyFHaePoXWPsCGW5qdyZQtLYHkxkg02/Mz6g0kYpDx4FyP6XfArhQdlOC4b8Mv+EMxPo/8La7Tzghg=="
        }
      }
    },
    "quill-delta": {
      "version": "3.6.3",
      "resolved": "https://registry.npmjs.org/quill-delta/-/quill-delta-3.6.3.tgz",
      "integrity": "sha512-wdIGBlcX13tCHOXGMVnnTVFtGRLoP0imqxM696fIPwIf5ODIYUHIvHbZcyvGlZFiFhK5XzDC2lpjbxRhnM05Tg==",
      "requires": {
        "deep-equal": "^1.0.1",
        "extend": "^3.0.2",
        "fast-diff": "1.1.2"
      }
    },
    "raf-schd": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/raf-schd/-/raf-schd-4.0.3.tgz",
      "integrity": "sha512-tQkJl2GRWh83ui2DiPTJz9wEiMN20syf+5oKfB03yYP7ioZcJwsIK8FjrtLwH1m7C7e+Tt2yYBlrOpdT+dyeIQ=="
    },
    "random-bytes": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/random-bytes/-/random-bytes-1.0.0.tgz",
      "integrity": "sha512-iv7LhNVO047HzYR3InF6pUcUsPQiHTM1Qal51DcGSuZFBil1aBBWG5eHPNek7bvILMaYJ/8RU1e8w1AMdHmLQQ=="
    },
    "randombytes": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/randombytes/-/randombytes-2.1.0.tgz",
      "integrity": "sha512-vYl3iOX+4CKUWuxGi9Ukhie6fsqXqS9FE2Zaic4tNFD2N2QQaXOMFbuKK4QmDHC0JO6B1Zp41J0LpT0oR68amQ==",
      "requires": {
        "safe-buffer": "^5.1.0"
      }
    },
    "range-parser": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz",
      "integrity": "sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg=="
    },
    "raw-body": {
      "version": "2.5.1",
      "resolved": "https://registry.npmjs.org/raw-body/-/raw-body-2.5.1.tgz",
      "integrity": "sha512-qqJBtEyVgS0ZmPGdCFPWJ3FreoqvG4MVQln/kCgF7Olq95IbOp0/BWyMwbdtn4VTvkM8Y7khCQ2Xgk/tcrCXig==",
      "requires": {
        "bytes": "3.1.2",
        "http-errors": "2.0.0",
        "iconv-lite": "0.4.24",
        "unpipe": "1.0.0"
      }
    },
    "react": {
      "version": "16.14.0",
      "resolved": "https://registry.npmjs.org/react/-/react-16.14.0.tgz",
      "integrity": "sha512-0X2CImDkJGApiAlcf0ODKIneSwBPhqJawOa5wCtKbu7ZECrmS26NvtSILynQ66cgkT/RJ4LidJOc3bUESwmU8g==",
      "requires": {
        "loose-envify": "^1.1.0",
        "object-assign": "^4.1.1",
        "prop-types": "^15.6.2"
      }
    },
    "react-beautiful-dnd": {
      "version": "13.1.1",
      "resolved": "https://registry.npmjs.org/react-beautiful-dnd/-/react-beautiful-dnd-13.1.1.tgz",
      "integrity": "sha512-0Lvs4tq2VcrEjEgDXHjT98r+63drkKEgqyxdA7qD3mvKwga6a5SscbdLPO2IExotU1jW8L0Ksdl0Cj2AF67nPQ==",
      "requires": {
        "@babel/runtime": "^7.9.2",
        "css-box-model": "^1.2.0",
        "memoize-one": "^5.1.1",
        "raf-schd": "^4.0.2",
        "react-redux": "^7.2.0",
        "redux": "^4.0.4",
        "use-memo-one": "^1.1.1"
      }
    },
    "react-currency-input-field": {
      "version": "3.6.11",
      "resolved": "https://registry.npmjs.org/react-currency-input-field/-/react-currency-input-field-3.6.11.tgz",
      "integrity": "sha512-M9vOx1eaioSaYWirm7W2WSBi4bpLg+LK4Gf7C1kNhy6MvoSoOzd0mYZPxA78OC9UBIQ2nM080Wu9D1CwTY6n3w==",
      "requires": {}
    },
    "react-datepicker": {
      "version": "3.8.0",
      "resolved": "https://registry.npmjs.org/react-datepicker/-/react-datepicker-3.8.0.tgz",
      "integrity": "sha512-iFVNEp8DJoX5yEvEiciM7sJKmLGrvE70U38KhpG13XrulNSijeHw1RZkhd/0UmuXR71dcZB/kdfjiidifstZjw==",
      "requires": {
        "classnames": "^2.2.6",
        "date-fns": "^2.0.1",
        "prop-types": "^15.7.2",
        "react-onclickoutside": "^6.10.0",
        "react-popper": "^1.3.8"
      }
    },
    "react-dom": {
      "version": "16.14.0",
      "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-16.14.0.tgz",
      "integrity": "sha512-1gCeQXDLoIqMgqD3IO2Ah9bnf0w9kzhwN5q4FGnHZ67hBm9yePzB5JJAIQCc8x3pFnNlwFq4RidZggNAAkzWWw==",
      "requires": {
        "loose-envify": "^1.1.0",
        "object-assign": "^4.1.1",
        "prop-types": "^15.6.2",
        "scheduler": "^0.19.1"
      }
    },
    "react-i18next": {
      "version": "11.18.6",
      "resolved": "https://registry.npmjs.org/react-i18next/-/react-i18next-11.18.6.tgz",
      "integrity": "sha512-yHb2F9BiT0lqoQDt8loZ5gWP331GwctHz9tYQ8A2EIEUu+CcEdjBLQWli1USG3RdWQt3W+jqQLg/d4rrQR96LA==",
      "requires": {
        "@babel/runtime": "^7.14.5",
        "html-parse-stringify": "^3.0.1"
      }
    },
    "react-input-autosize": {
      "version": "2.2.2",
      "resolved": "https://registry.npmjs.org/react-input-autosize/-/react-input-autosize-2.2.2.tgz",
      "integrity": "sha512-jQJgYCA3S0j+cuOwzuCd1OjmBmnZLdqQdiLKRYrsMMzbjUrVDS5RvJUDwJqA7sKuksDuzFtm6hZGKFu7Mjk5aw==",
      "requires": {
        "prop-types": "^15.5.8"
      }
    },
    "react-is": {
      "version": "16.13.1",
      "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz",
      "integrity": "sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ=="
    },
    "react-onclickoutside": {
      "version": "6.13.0",
      "resolved": "https://registry.npmjs.org/react-onclickoutside/-/react-onclickoutside-6.13.0.tgz",
      "integrity": "sha512-ty8So6tcUpIb+ZE+1HAhbLROvAIJYyJe/1vRrrcmW+jLsaM+/powDRqxzo6hSh9CuRZGSL1Q8mvcF5WRD93a0A==",
      "requires": {}
    },
    "react-popper": {
      "version": "1.3.11",
      "resolved": "https://registry.npmjs.org/react-popper/-/react-popper-1.3.11.tgz",
      "integrity": "sha512-VSA/bS+pSndSF2fiasHK/PTEEAyOpX60+H5EPAjoArr8JGm+oihu4UbrqcEBpQibJxBVCpYyjAX7abJ+7DoYVg==",
      "requires": {
        "@babel/runtime": "^7.1.2",
        "@hypnosphi/create-react-context": "^0.3.1",
        "deep-equal": "^1.1.1",
        "popper.js": "^1.14.4",
        "prop-types": "^15.6.1",
        "typed-styles": "^0.0.7",
        "warning": "^4.0.2"
      }
    },
    "react-redux": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/react-redux/-/react-redux-7.2.0.tgz",
      "integrity": "sha512-EvCAZYGfOLqwV7gh849xy9/pt55rJXPwmYvI4lilPM5rUT/1NxuuN59ipdBksRVSvz0KInbPnp4IfoXJXCqiDA==",
      "requires": {
        "@babel/runtime": "^7.5.5",
        "hoist-non-react-statics": "^3.3.0",
        "loose-envify": "^1.4.0",
        "prop-types": "^15.7.2",
        "react-is": "^16.9.0"
      }
    },
    "react-router": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/react-router/-/react-router-5.2.0.tgz",
      "integrity": "sha512-smz1DUuFHRKdcJC0jobGo8cVbhO3x50tCL4icacOlcwDOEQPq4TMqwx3sY1TP+DvtTgz4nm3thuo7A+BK2U0Dw==",
      "requires": {
        "@babel/runtime": "^7.1.2",
        "history": "^4.9.0",
        "hoist-non-react-statics": "^3.1.0",
        "loose-envify": "^1.3.1",
        "mini-create-react-context": "^0.4.0",
        "path-to-regexp": "^1.7.0",
        "prop-types": "^15.6.2",
        "react-is": "^16.6.0",
        "tiny-invariant": "^1.0.2",
        "tiny-warning": "^1.0.0"
      },
      "dependencies": {
        "isarray": {
          "version": "0.0.1",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz",
          "integrity": "sha512-D2S+3GLxWH+uhrNEcoh/fnmYeP8E8/zHl644d/jdA0g2uyXvy3sb0qxotE+ne0LtccHknQzWwZEzhak7oJ0COQ=="
        },
        "path-to-regexp": {
          "version": "1.8.0",
          "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-1.8.0.tgz",
          "integrity": "sha512-n43JRhlUKUAlibEJhPeir1ncUID16QnEjNpwzNdO3Lm4ywrBpBZ5oLD0I6br9evr1Y9JTqwRtAh7JLoOzAQdVA==",
          "requires": {
            "isarray": "0.0.1"
          }
        }
      }
    },
    "react-router-dom": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/react-router-dom/-/react-router-dom-5.2.0.tgz",
      "integrity": "sha512-gxAmfylo2QUjcwxI63RhQ5G85Qqt4voZpUXSEqCwykV0baaOTQDR1f0PmY8AELqIyVc0NEZUj0Gov5lNGcXgsA==",
      "requires": {
        "@babel/runtime": "^7.1.2",
        "history": "^4.9.0",
        "loose-envify": "^1.3.1",
        "prop-types": "^15.6.2",
        "react-router": "5.2.0",
        "tiny-invariant": "^1.0.2",
        "tiny-warning": "^1.0.0"
      }
    },
    "react-select": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/react-select/-/react-select-3.1.0.tgz",
      "integrity": "sha512-wBFVblBH1iuCBprtpyGtd1dGMadsG36W5/t2Aj8OE6WbByDg5jIFyT7X5gT+l0qmT5TqWhxX+VsKJvCEl2uL9g==",
      "requires": {
        "@babel/runtime": "^7.4.4",
        "@emotion/cache": "^10.0.9",
        "@emotion/core": "^10.0.9",
        "@emotion/css": "^10.0.9",
        "memoize-one": "^5.0.0",
        "prop-types": "^15.6.0",
        "react-input-autosize": "^2.2.2",
        "react-transition-group": "^4.3.0"
      }
    },
    "react-transition-group": {
      "version": "4.4.5",
      "resolved": "https://registry.npmjs.org/react-transition-group/-/react-transition-group-4.4.5.tgz",
      "integrity": "sha512-pZcd1MCJoiKiBR2NRxeCRg13uCXbydPnmB4EOeRrY7480qNWO8IIgQG6zlDkm6uRMsURXPuKq0GWtiM59a5Q6g==",
      "requires": {
        "@babel/runtime": "^7.5.5",
        "dom-helpers": "^5.0.1",
        "loose-envify": "^1.4.0",
        "prop-types": "^15.6.2"
      }
    },
    "readable-stream": {
      "version": "3.6.1",
      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.1.tgz",
      "integrity": "sha512-+rQmrWMYGA90yenhTYsLWAsLsqVC8osOw6PKE1HDYiO0gdPeKe/xDHNzIAIn4C91YQ6oenEhfYqqc1883qHbjQ==",
      "requires": {
        "inherits": "^2.0.3",
        "string_decoder": "^1.1.1",
        "util-deprecate": "^1.0.1"
      }
    },
    "readdirp": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz",
      "integrity": "sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==",
      "dev": true,
      "requires": {
        "picomatch": "^2.2.1"
      }
    },
    "redux": {
      "version": "4.0.5",
      "resolved": "https://registry.npmjs.org/redux/-/redux-4.0.5.tgz",
      "integrity": "sha512-VSz1uMAH24DM6MF72vcojpYPtrTUu3ByVWfPL1nPfVRb5mZVTve5GnNCUV53QM/BZ66xfWrm0CTWoM+Xlz8V1w==",
      "requires": {
        "loose-envify": "^1.4.0",
        "symbol-observable": "^1.2.0"
      }
    },
    "reflect-metadata": {
      "version": "0.1.13",
      "resolved": "https://registry.npmjs.org/reflect-metadata/-/reflect-metadata-0.1.13.tgz",
      "integrity": "sha512-Ts1Y/anZELhSsjMcU605fU9RE4Oi3p5ORujwbIKXfWa+0Zxs510Qrmrce5/Jowq3cHSZSJqBjypxmHarc+vEWg=="
    },
    "regenerate": {
      "version": "1.4.2",
      "resolved": "https://registry.npmjs.org/regenerate/-/regenerate-1.4.2.tgz",
      "integrity": "sha512-zrceR/XhGYU/d/opr2EKO7aRHUeiBI8qjtfHqADTwZd6Szfy16la6kqD0MIUs5z5hx6AaKa+PixpPrR289+I0A=="
    },
    "regenerate-unicode-properties": {
      "version": "10.1.0",
      "resolved": "https://registry.npmjs.org/regenerate-unicode-properties/-/regenerate-unicode-properties-10.1.0.tgz",
      "integrity": "sha512-d1VudCLoIGitcU/hEg2QqvyGZQmdC0Lf8BqdOMXGFSvJP4bNV1+XqbPQeHHLD51Jh4QJJ225dlIFvY4Ly6MXmQ==",
      "requires": {
        "regenerate": "^1.4.2"
      }
    },
    "regenerator-runtime": {
      "version": "0.13.11",
      "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.13.11.tgz",
      "integrity": "sha512-kY1AZVr2Ra+t+piVaJ4gxaFaReZVH40AKNo7UCX6W+dEwBo/2oZJzqfuN1qLq1oL45o56cPaTXELwrTh8Fpggg=="
    },
    "regenerator-transform": {
      "version": "0.15.1",
      "resolved": "https://registry.npmjs.org/regenerator-transform/-/regenerator-transform-0.15.1.tgz",
      "integrity": "sha512-knzmNAcuyxV+gQCufkYcvOqX/qIIfHLv0u5x79kRxuGojfYVky1f15TzZEu2Avte8QGepvUNTnLskf8E6X6Vyg==",
      "requires": {
        "@babel/runtime": "^7.8.4"
      }
    },
    "regexp.prototype.flags": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/regexp.prototype.flags/-/regexp.prototype.flags-1.5.0.tgz",
      "integrity": "sha512-0SutC3pNudRKgquxGoRGIz946MZVHqbNfPjBdxeOhBrdgDKlRoXmYLQN9xRbrR09ZXWeGAdPuif7egofn6v5LA==",
      "requires": {
        "call-bind": "^1.0.2",
        "define-properties": "^1.2.0",
        "functions-have-names": "^1.2.3"
      }
    },
    "regexpu-core": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/regexpu-core/-/regexpu-core-5.3.2.tgz",
      "integrity": "sha512-RAM5FlZz+Lhmo7db9L298p2vHP5ZywrVXmVXpmAD9GuL5MPH6t9ROw1iA/wfHkQ76Qe7AaPF0nGuim96/IrQMQ==",
      "requires": {
        "@babel/regjsgen": "^0.8.0",
        "regenerate": "^1.4.2",
        "regenerate-unicode-properties": "^10.1.0",
        "regjsparser": "^0.9.1",
        "unicode-match-property-ecmascript": "^2.0.0",
        "unicode-match-property-value-ecmascript": "^2.1.0"
      }
    },
    "regjsparser": {
      "version": "0.9.1",
      "resolved": "https://registry.npmjs.org/regjsparser/-/regjsparser-0.9.1.tgz",
      "integrity": "sha512-dQUtn90WanSNl+7mQKcXAgZxvUe7Z0SqXlgzv0za4LwiUhyzBC58yQO3liFoUgu8GiJVInAhJjkj1N0EtQ5nkQ==",
      "requires": {
        "jsesc": "~0.5.0"
      },
      "dependencies": {
        "jsesc": {
          "version": "0.5.0",
          "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-0.5.0.tgz",
          "integrity": "sha512-uZz5UnB7u4T9LvwmFqXii7pZSouaRPorGs5who1Ip7VO0wxanFvBL7GkM6dTHlgX+jhBApRetaWpnDabOeTcnA=="
        }
      }
    },
    "request": {
      "version": "2.88.2",
      "resolved": "https://registry.npmjs.org/request/-/request-2.88.2.tgz",
      "integrity": "sha512-MsvtOrfG9ZcrOwAW+Qi+F6HbD0CWXEh9ou77uOb7FM2WPhwT7smM833PzanhJLsgXjN89Ir6V2PczXNnMpwKhw==",
      "requires": {
        "aws-sign2": "~0.7.0",
        "aws4": "^1.8.0",
        "caseless": "~0.12.0",
        "combined-stream": "~1.0.6",
        "extend": "~3.0.2",
        "forever-agent": "~0.6.1",
        "form-data": "~2.3.2",
        "har-validator": "~5.1.3",
        "http-signature": "~1.2.0",
        "is-typedarray": "~1.0.0",
        "isstream": "~0.1.2",
        "json-stringify-safe": "~5.0.1",
        "mime-types": "~2.1.19",
        "oauth-sign": "~0.9.0",
        "performance-now": "^2.1.0",
        "qs": "~6.5.2",
        "safe-buffer": "^5.1.2",
        "tough-cookie": "~2.5.0",
        "tunnel-agent": "^0.6.0",
        "uuid": "^3.3.2"
      },
      "dependencies": {
        "form-data": {
          "version": "2.3.3",
          "resolved": "https://registry.npmjs.org/form-data/-/form-data-2.3.3.tgz",
          "integrity": "sha512-1lLKB2Mu3aGP1Q/2eCOx0fNbRMe7XdwktwOruhfqqd0rIJWwN4Dh+E3hrPSlDCXnSR7UtZ1N38rVXm+6+MEhJQ==",
          "requires": {
            "asynckit": "^0.4.0",
            "combined-stream": "^1.0.6",
            "mime-types": "^2.1.12"
          }
        },
        "qs": {
          "version": "6.5.3",
          "resolved": "https://registry.npmjs.org/qs/-/qs-6.5.3.tgz",
          "integrity": "sha512-qxXIEh4pCGfHICj1mAJQ2/2XVZkjCDTcEgfoSQxc/fYivUZxTkk7L3bDBJSoNrEzXI17oUO5Dp07ktqE5KzczA=="
        },
        "uuid": {
          "version": "3.4.0",
          "resolved": "https://registry.npmjs.org/uuid/-/uuid-3.4.0.tgz",
          "integrity": "sha512-HjSDRw6gZE5JMggctHBcjVak08+KEVhSIiDzFnT9S9aegmp85S/bReBVTb4QTFaRNptJ9kuYaNhnbNEOkbKb/A=="
        }
      }
    },
    "require-directory": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz",
      "integrity": "sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q=="
    },
    "require-main-filename": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/require-main-filename/-/require-main-filename-2.0.0.tgz",
      "integrity": "sha512-NKN5kMDylKuldxYLSUfrbo5Tuzh4hd+2E8NPPX02mZtn1VuREQToYe/ZdlJy+J3uCpfaiGF05e7B8W0iXbQHmg=="
    },
    "resolve": {
      "version": "1.22.2",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.2.tgz",
      "integrity": "sha512-Sb+mjNHOULsBv818T40qSPeRiuWLyaGMa5ewydRLFimneixmVy2zdivRl+AF6jaYPC8ERxGDmFSiqui6SfPd+g==",
      "requires": {
        "is-core-module": "^2.11.0",
        "path-parse": "^1.0.7",
        "supports-preserve-symlinks-flag": "^1.0.0"
      }
    },
    "resolve-alpn": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/resolve-alpn/-/resolve-alpn-1.2.1.tgz",
      "integrity": "sha512-0a1F4l73/ZFZOakJnQ3FvkJ2+gSTQWz/r2KE5OdDY0TxPm5h4GkqkWWfM47T7HsbnOtcJVEF4epCVy6u7Q3K+g=="
    },
    "resolve-from": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
      "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g=="
    },
    "resolve-pathname": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/resolve-pathname/-/resolve-pathname-3.0.0.tgz",
      "integrity": "sha512-C7rARubxI8bXFNB/hqcp/4iUeIXJhJZvFPFPiSPRnhU5UPxzMFIl+2E6yY6c4k9giDJAhtV+enfA+G89N6Csng=="
    },
    "responselike": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/responselike/-/responselike-2.0.1.tgz",
      "integrity": "sha512-4gl03wn3hj1HP3yzgdI7d3lCkF95F21Pz4BPGvKHinyQzALR5CapwC8yIi0Rh58DEMQ/SguC03wFj2k0M/mHhw==",
      "requires": {
        "lowercase-keys": "^2.0.0"
      },
      "dependencies": {
        "lowercase-keys": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-2.0.0.tgz",
          "integrity": "sha512-tqNXrS78oMOE73NMxK4EMLQsQowWf8jKooH9g7xPavRT706R6bkQJ6DY2Te7QukaZsulxa30wQ7bk0pm4XiHmA=="
        }
      }
    },
    "restore-cursor": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-3.1.0.tgz",
      "integrity": "sha512-l+sSefzHpj5qimhFSE5a8nufZYAM3sBSVMAPtYkmC+4EH2anSGaEMXSD0izRQbu9nfyQ9y5JrVmp7E8oZrUjvA==",
      "requires": {
        "onetime": "^5.1.0",
        "signal-exit": "^3.0.2"
      }
    },
    "ripemd160": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/ripemd160/-/ripemd160-2.0.2.tgz",
      "integrity": "sha512-ii4iagi25WusVoiC4B4lq7pbXfAp3D9v5CwfkY33vffw2+pkDjY1D8GaN7spsxvCSx8dkPqOZCEZyfxcmJG2IA==",
      "requires": {
        "hash-base": "^3.0.0",
        "inherits": "^2.0.1"
      }
    },
    "rlp": {
      "version": "2.2.7",
      "resolved": "https://registry.npmjs.org/rlp/-/rlp-2.2.7.tgz",
      "integrity": "sha512-d5gdPmgQ0Z+AklL2NVXr/IoSjNZFfTVvQWzL/AM2AOcSzYP2xjlb0AC8YyCLc41MSNf6P6QVtjgPdmVtzb+4lQ==",
      "requires": {
        "bn.js": "^5.2.0"
      }
    },
    "rollup": {
      "version": "2.79.1",
      "resolved": "https://registry.npmjs.org/rollup/-/rollup-2.79.1.tgz",
      "integrity": "sha512-uKxbd0IhMZOhjAiD5oAFp7BqvkA4Dv47qpOCtaNvng4HBwdbWtdOh8f5nZNuk2rp51PMGk3bzfWu5oayNEuYnw==",
      "requires": {
        "fsevents": "~2.3.2"
      }
    },
    "rollup-plugin-terser": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/rollup-plugin-terser/-/rollup-plugin-terser-6.1.0.tgz",
      "integrity": "sha512-4fB3M9nuoWxrwm39habpd4hvrbrde2W2GG4zEGPQg1YITNkM3Tqur5jSuXlWNzbv/2aMLJ+dZJaySc3GCD8oDw==",
      "requires": {
        "@babel/code-frame": "^7.8.3",
        "jest-worker": "^26.0.0",
        "serialize-javascript": "^3.0.0",
        "terser": "^4.7.0"
      },
      "dependencies": {
        "serialize-javascript": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/serialize-javascript/-/serialize-javascript-3.1.0.tgz",
          "integrity": "sha512-JIJT1DGiWmIKhzRsG91aS6Ze4sFUrYbltlkg2onR5OrnNM02Kl/hnY/T4FN2omvyeBbQmMJv+K4cPOpGzOTFBg==",
          "requires": {
            "randombytes": "^2.1.0"
          }
        }
      }
    },
    "rxjs": {
      "version": "7.8.0",
      "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-7.8.0.tgz",
      "integrity": "sha512-F2+gxDshqmIub1KdvZkaEfGDwLNpPvk9Fs6LD/MyQxNgMds/WH9OdDDXOmxUZpME+iSK3rQCctkL0DYyytUqMg==",
      "requires": {
        "tslib": "^2.1.0"
      }
    },
    "safe-buffer": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
      "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ=="
    },
    "safer-buffer": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg=="
    },
    "sax": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/sax/-/sax-1.2.4.tgz",
      "integrity": "sha512-NqVDv9TpANUjFm0N8uM5GxL36UgKi9/atZw+x7YFnQ8ckwFGKrl4xX4yWtrey3UJm5nP1kUbnYgLopqWNSRhWw=="
    },
    "scheduler": {
      "version": "0.19.1",
      "resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.19.1.tgz",
      "integrity": "sha512-n/zwRWRYSUj0/3g/otKDRPMh6qv2SYMWNq85IEa8iZyAv8od9zDYpGSnpBEjNgcMNq6Scbu5KfIPxNF72R/2EA==",
      "requires": {
        "loose-envify": "^1.1.0",
        "object-assign": "^4.1.1"
      }
    },
    "scrypt-js": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/scrypt-js/-/scrypt-js-3.0.1.tgz",
      "integrity": "sha512-cdwTTnqPu0Hyvf5in5asVdZocVDTNRmR7XEcJuIzMjJeSHybHl7vpB66AzwTaIg6CLSbtjcxc8fqcySfnTkccA=="
    },
    "secp256k1": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/secp256k1/-/secp256k1-4.0.3.tgz",
      "integrity": "sha512-NLZVf+ROMxwtEj3Xa562qgv2BK5e2WNmXPiOdVIPLgs6lyTzMvBq0aWTYMI5XCP9jZMVKOcqZLw/Wc4vDkuxhA==",
      "requires": {
        "elliptic": "^6.5.4",
        "node-addon-api": "^2.0.0",
        "node-gyp-build": "^4.2.0"
      }
    },
    "seedrandom": {
      "version": "3.0.5",
      "resolved": "https://registry.npmjs.org/seedrandom/-/seedrandom-3.0.5.tgz",
      "integrity": "sha512-8OwmbklUNzwezjGInmZ+2clQmExQPvomqjL7LFqOYqtmuxRgQYqOD3mHaU+MvZn5FLUeVxVfQjwLZW/n/JFuqg=="
    },
    "semver": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
      "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ=="
    },
    "send": {
      "version": "0.18.0",
      "resolved": "https://registry.npmjs.org/send/-/send-0.18.0.tgz",
      "integrity": "sha512-qqWzuOjSFOuqPjFe4NOsMLafToQQwBSOEpS+FwEt3A2V3vKubTquT3vmLTQpFgMXp8AlFWFuP1qKaJZOtPpVXg==",
      "requires": {
        "debug": "2.6.9",
        "depd": "2.0.0",
        "destroy": "1.2.0",
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "etag": "~1.8.1",
        "fresh": "0.5.2",
        "http-errors": "2.0.0",
        "mime": "1.6.0",
        "ms": "2.1.3",
        "on-finished": "2.4.1",
        "range-parser": "~1.2.1",
        "statuses": "2.0.1"
      },
      "dependencies": {
        "ms": {
          "version": "2.1.3",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
          "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA=="
        }
      }
    },
    "serialize-javascript": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/serialize-javascript/-/serialize-javascript-6.0.1.tgz",
      "integrity": "sha512-owoXEFjWRllis8/M1Q+Cw5k8ZH40e3zhp/ovX+Xr/vi1qj6QesbyXXViFbpNvWvPNAD62SutwEXavefrLJWj7w==",
      "requires": {
        "randombytes": "^2.1.0"
      }
    },
    "serve-static": {
      "version": "1.15.0",
      "resolved": "https://registry.npmjs.org/serve-static/-/serve-static-1.15.0.tgz",
      "integrity": "sha512-XGuRDNjXUijsUL0vl6nSD7cwURuzEgglbOaFuZM9g3kwDXOWVTck0jLzjPzGD+TazWbboZYu52/9/XPdUgne9g==",
      "requires": {
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "parseurl": "~1.3.3",
        "send": "0.18.0"
      }
    },
    "servify": {
      "version": "0.1.12",
      "resolved": "https://registry.npmjs.org/servify/-/servify-0.1.12.tgz",
      "integrity": "sha512-/xE6GvsKKqyo1BAY+KxOWXcLpPsUUyji7Qg3bVD7hh1eRze5bR1uYiuDA/k3Gof1s9BTzQZEJK8sNcNGFIzeWw==",
      "requires": {
        "body-parser": "^1.16.0",
        "cors": "^2.8.1",
        "express": "^4.14.0",
        "request": "^2.79.0",
        "xhr": "^2.3.3"
      }
    },
    "set-blocking": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz",
      "integrity": "sha512-KiKBS8AnWGEyLzofFfmvKwpdPzqiy16LvQfK3yv/fVH7Bj13/wl3JSR1J+rfgRE9q7xUJK4qvgS8raSOeLUehw=="
    },
    "setimmediate": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/setimmediate/-/setimmediate-1.0.5.tgz",
      "integrity": "sha512-MATJdZp8sLqDl/68LfQmbP8zKPLQNV6BIZoIgrscFDQ+RsvK/BxeDQOgyxKKoh0y/8h3BqVFnCqQ/gd+reiIXA=="
    },
    "setprototypeof": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
      "integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw=="
    },
    "sha.js": {
      "version": "2.4.11",
      "resolved": "https://registry.npmjs.org/sha.js/-/sha.js-2.4.11.tgz",
      "integrity": "sha512-QMEp5B7cftE7APOjk5Y6xgrbWu+WkLVQwk8JNjZ8nKRciZaByEW6MubieAiToS7+dwvrjGhH8jRXz3MVd0AYqQ==",
      "requires": {
        "inherits": "^2.0.1",
        "safe-buffer": "^5.0.1"
      }
    },
    "shallow-clone": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/shallow-clone/-/shallow-clone-3.0.1.tgz",
      "integrity": "sha512-/6KqX+GVUdqPuPPd2LxDDxzX6CAbjJehAAOKlNpqqUpAqPM6HeL8f+o3a+JsyGjn2lv0WY8UsTgUJjU9Ok55NA==",
      "requires": {
        "kind-of": "^6.0.2"
      }
    },
    "shallowequal": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/shallowequal/-/shallowequal-1.1.0.tgz",
      "integrity": "sha512-y0m1JoUZSlPAjXVtPPW70aZWfIL/dSP7AFkRnniLCrK/8MDKog3TySTBmckD+RObVxH0v4Tox67+F14PdED2oQ=="
    },
    "shebang-command": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
      "requires": {
        "shebang-regex": "^3.0.0"
      }
    },
    "shebang-regex": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A=="
    },
    "side-channel": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.0.4.tgz",
      "integrity": "sha512-q5XPytqFEIKHkGdiMIrY10mvLRvnQh42/+GoBlFW3b2LXLE2xxJpZFdm94we0BaoV3RwJyGqg5wS7epxTv0Zvw==",
      "requires": {
        "call-bind": "^1.0.0",
        "get-intrinsic": "^1.0.2",
        "object-inspect": "^1.9.0"
      }
    },
    "signal-exit": {
      "version": "3.0.7",
      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.7.tgz",
      "integrity": "sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ=="
    },
    "simple-concat": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/simple-concat/-/simple-concat-1.0.1.tgz",
      "integrity": "sha512-cSFtAPtRhljv69IK0hTVZQ+OfE9nePi/rtJmw5UjHeVyVroEqJXP1sFztKUy1qU+xvz3u/sfYJLa947b7nAN2Q=="
    },
    "simple-get": {
      "version": "2.8.2",
      "resolved": "https://registry.npmjs.org/simple-get/-/simple-get-2.8.2.tgz",
      "integrity": "sha512-Ijd/rV5o+mSBBs4F/x9oDPtTx9Zb6X9brmnXvMW4J7IR15ngi9q5xxqWBKU744jTZiaXtxaPL7uHG6vtN8kUkw==",
      "requires": {
        "decompress-response": "^3.3.0",
        "once": "^1.3.1",
        "simple-concat": "^1.0.0"
      },
      "dependencies": {
        "decompress-response": {
          "version": "3.3.0",
          "resolved": "https://registry.npmjs.org/decompress-response/-/decompress-response-3.3.0.tgz",
          "integrity": "sha512-BzRPQuY1ip+qDonAOz42gRm/pg9F768C+npV/4JOsxRC2sq+Rlk+Q4ZCAsOhnIaMrgarILY+RMUIvMmmX1qAEA==",
          "requires": {
            "mimic-response": "^1.0.0"
          }
        }
      }
    },
    "simple-update-notifier": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/simple-update-notifier/-/simple-update-notifier-1.1.0.tgz",
      "integrity": "sha512-VpsrsJSUcJEseSbMHkrsrAVSdvVS5I96Qo1QAQ4FxQ9wXFcB+pjj7FB7/us9+GcgfW4ziHtYMc1J0PLczb55mg==",
      "dev": true,
      "requires": {
        "semver": "~7.0.0"
      },
      "dependencies": {
        "semver": {
          "version": "7.0.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-7.0.0.tgz",
          "integrity": "sha512-+GB6zVA9LWh6zovYQLALHwv5rb2PHGlJi3lfiqIHxR0uuwCgefcOJc59v9fv1w8GbStwxuuqqAjI9NMAOOgq1A==",
          "dev": true
        }
      }
    },
    "sisteransi": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/sisteransi/-/sisteransi-1.0.5.tgz",
      "integrity": "sha512-bLGGlR1QxBcynn2d5YmDX4MGjlZvy2MRBDRNHLJ8VI6l6+9FUiyTFNJ0IveOSP0bcXgVDPRcfGqA0pjaqUpfVg=="
    },
    "slash": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
      "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q=="
    },
    "socket.io": {
      "version": "4.6.1",
      "resolved": "https://registry.npmjs.org/socket.io/-/socket.io-4.6.1.tgz",
      "integrity": "sha512-KMcaAi4l/8+xEjkRICl6ak8ySoxsYG+gG6/XfRCPJPQ/haCRIJBTL4wIl8YCsmtaBovcAXGLOShyVWQ/FG8GZA==",
      "requires": {
        "accepts": "~1.3.4",
        "base64id": "~2.0.0",
        "debug": "~4.3.2",
        "engine.io": "~6.4.1",
        "socket.io-adapter": "~2.5.2",
        "socket.io-parser": "~4.2.1"
      },
      "dependencies": {
        "debug": {
          "version": "4.3.4",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.4.tgz",
          "integrity": "sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==",
          "requires": {
            "ms": "2.1.2"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
        }
      }
    },
    "socket.io-adapter": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/socket.io-adapter/-/socket.io-adapter-2.5.2.tgz",
      "integrity": "sha512-87C3LO/NOMc+eMcpcxUBebGjkpMDkNBS9tf7KJqcDsmL936EChtVva71Dw2q4tQcuVC+hAUy4an2NO/sYXmwRA==",
      "requires": {
        "ws": "~8.11.0"
      },
      "dependencies": {
        "ws": {
          "version": "8.11.0",
          "resolved": "https://registry.npmjs.org/ws/-/ws-8.11.0.tgz",
          "integrity": "sha512-HPG3wQd9sNQoT9xHyNCXoDUa+Xw/VevmY9FoHyQ+g+rrMn4j6FB4np7Z0OhdTgjx6MgQLK7jwSy1YecU1+4Asg==",
          "requires": {}
        }
      }
    },
    "socket.io-parser": {
      "version": "4.2.2",
      "resolved": "https://registry.npmjs.org/socket.io-parser/-/socket.io-parser-4.2.2.tgz",
      "integrity": "sha512-DJtziuKypFkMMHCm2uIshOYC7QaylbtzQwiMYDuCKy3OPkjLzu4B2vAhTlqipRHHzrI0NJeBAizTK7X+6m1jVw==",
      "requires": {
        "@socket.io/component-emitter": "~3.1.0",
        "debug": "~4.3.1"
      },
      "dependencies": {
        "debug": {
          "version": "4.3.4",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.4.tgz",
          "integrity": "sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==",
          "requires": {
            "ms": "2.1.2"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
        }
      }
    },
    "source-map": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
      "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="
    },
    "source-map-support": {
      "version": "0.5.21",
      "resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.21.tgz",
      "integrity": "sha512-uBHU3L3czsIyYXKX88fdrGovxdSCoTGDRZ6SYXtSRxLZUzHg5P/66Ht6uoUlHu9EZod+inXhKo3qQgwXUT/y1w==",
      "requires": {
        "buffer-from": "^1.0.0",
        "source-map": "^0.6.0"
      }
    },
    "sourcemap-codec": {
      "version": "1.4.8",
      "resolved": "https://registry.npmjs.org/sourcemap-codec/-/sourcemap-codec-1.4.8.tgz",
      "integrity": "sha512-9NykojV5Uih4lgo5So5dtw+f0JgJX30KCNI8gwhz2J9A15wD0Ml6tjHKwf6fTSa6fAdVBdZeNOs9eJ71qCk8vA=="
    },
    "split2": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/split2/-/split2-4.1.0.tgz",
      "integrity": "sha512-VBiJxFkxiXRlUIeyMQi8s4hgvKCSjtknJv/LVYbrgALPwf5zSKmEwV9Lst25AkvMDnvxODugjdl6KZgwKM1WYQ=="
    },
    "sshpk": {
      "version": "1.17.0",
      "resolved": "https://registry.npmjs.org/sshpk/-/sshpk-1.17.0.tgz",
      "integrity": "sha512-/9HIEs1ZXGhSPE8X6Ccm7Nam1z8KcoCqPdI7ecm1N33EzAetWahvQWVqLZtaZQ+IDKX4IyA2o0gBzqIMkAagHQ==",
      "requires": {
        "asn1": "~0.2.3",
        "assert-plus": "^1.0.0",
        "bcrypt-pbkdf": "^1.0.0",
        "dashdash": "^1.12.0",
        "ecc-jsbn": "~0.1.1",
        "getpass": "^0.1.1",
        "jsbn": "~0.1.0",
        "safer-buffer": "^2.0.2",
        "tweetnacl": "~0.14.0"
      },
      "dependencies": {
        "tweetnacl": {
          "version": "0.14.5",
          "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz",
          "integrity": "sha512-KXXFFdAbFXY4geFIwoyNK+f5Z1b7swfXABfL7HXCmoIWMKU3dmS26672A4EeQtDzLKy7SXmfBu51JolvEKwtGA=="
        }
      }
    },
    "statuses": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz",
      "integrity": "sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ=="
    },
    "stream": {
      "version": "0.0.2",
      "resolved": "https://registry.npmjs.org/stream/-/stream-0.0.2.tgz",
      "integrity": "sha512-gCq3NDI2P35B2n6t76YJuOp7d6cN/C7Rt0577l91wllh0sY9ZBuw9KaSGqH/b0hzn3CWWJbpbW0W0WvQ1H/Q7g==",
      "peer": true,
      "requires": {
        "emitter-component": "^1.1.1"
      }
    },
    "streamsearch": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/streamsearch/-/streamsearch-1.1.0.tgz",
      "integrity": "sha512-Mcc5wHehp9aXz1ax6bZUyY5afg9u2rv5cqQI3mRrYkGC8rW2hM02jWuwjtL++LS5qinSyhj2QfLyNsuc+VsExg=="
    },
    "strict-uri-encode": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/strict-uri-encode/-/strict-uri-encode-1.1.0.tgz",
      "integrity": "sha512-R3f198pcvnB+5IpnBlRkphuE9n46WyVl8I39W/ZUTZLz4nqSP/oLYUrcnJrw462Ds8he4YKMov2efsTIw1BDGQ=="
    },
    "string_decoder": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.3.0.tgz",
      "integrity": "sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==",
      "requires": {
        "safe-buffer": "~5.2.0"
      }
    },
    "string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "requires": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      }
    },
    "string-width-cjs": {
      "version": "npm:string-width@4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "requires": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      }
    },
    "strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "requires": {
        "ansi-regex": "^5.0.1"
      }
    },
    "strip-ansi-cjs": {
      "version": "npm:strip-ansi@6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "requires": {
        "ansi-regex": "^5.0.1"
      }
    },
    "strip-hex-prefix": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/strip-hex-prefix/-/strip-hex-prefix-1.0.0.tgz",
      "integrity": "sha512-q8d4ue7JGEiVcypji1bALTos+0pWtyGlivAWyPuTkHzuTCJqrK9sWxYQZUq6Nq3cuyv3bm734IhHvHtGGURU6A==",
      "requires": {
        "is-hex-prefixed": "1.0.0"
      }
    },
    "styled-components": {
      "version": "5.3.11",
      "resolved": "https://registry.npmjs.org/styled-components/-/styled-components-5.3.11.tgz",
      "integrity": "sha512-uuzIIfnVkagcVHv9nE0VPlHPSCmXIUGKfJ42LNjxCCTDTL5sgnJ8Z7GZBq0EnLYGln77tPpEpExt2+qa+cZqSw==",
      "requires": {
        "@babel/helper-module-imports": "^7.0.0",
        "@babel/traverse": "^7.4.5",
        "@emotion/is-prop-valid": "^1.1.0",
        "@emotion/stylis": "^0.8.4",
        "@emotion/unitless": "^0.7.4",
        "babel-plugin-styled-components": ">= 1.12.0",
        "css-to-react-native": "^3.0.0",
        "hoist-non-react-statics": "^3.0.0",
        "shallowequal": "^1.1.0",
        "supports-color": "^5.5.0"
      }
    },
    "styled-system": {
      "version": "5.1.5",
      "resolved": "https://registry.npmjs.org/styled-system/-/styled-system-5.1.5.tgz",
      "integrity": "sha512-7VoD0o2R3RKzOzPK0jYrVnS8iJdfkKsQJNiLRDjikOpQVqQHns/DXWaPZOH4tIKkhAT7I6wIsy9FWTWh2X3q+A==",
      "requires": {
        "@styled-system/background": "^5.1.2",
        "@styled-system/border": "^5.1.5",
        "@styled-system/color": "^5.1.2",
        "@styled-system/core": "^5.1.2",
        "@styled-system/flexbox": "^5.1.2",
        "@styled-system/grid": "^5.1.2",
        "@styled-system/layout": "^5.1.2",
        "@styled-system/position": "^5.1.2",
        "@styled-system/shadow": "^5.1.2",
        "@styled-system/space": "^5.1.2",
        "@styled-system/typography": "^5.1.2",
        "@styled-system/variant": "^5.1.5",
        "object-assign": "^4.1.1"
      }
    },
    "supports-color": {
      "version": "5.5.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
      "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
      "requires": {
        "has-flag": "^3.0.0"
      }
    },
    "supports-preserve-symlinks-flag": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
      "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w=="
    },
    "swagger-jsdoc": {
      "version": "6.2.8",
      "resolved": "https://registry.npmjs.org/swagger-jsdoc/-/swagger-jsdoc-6.2.8.tgz",
      "integrity": "sha512-VPvil1+JRpmJ55CgAtn8DIcpBs0bL5L3q5bVQvF4tAW/k/9JYSj7dCpaYCAv5rufe0vcCbBRQXGvzpkWjvLklQ==",
      "requires": {
        "commander": "6.2.0",
        "doctrine": "3.0.0",
        "glob": "7.1.6",
        "lodash.mergewith": "^4.6.2",
        "swagger-parser": "^10.0.3",
        "yaml": "2.0.0-1"
      },
      "dependencies": {
        "brace-expansion": {
          "version": "1.1.11",
          "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
          "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
          "requires": {
            "balanced-match": "^1.0.0",
            "concat-map": "0.0.1"
          }
        },
        "glob": {
          "version": "7.1.6",
          "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.6.tgz",
          "integrity": "sha512-LwaxwyZ72Lk7vZINtNNrywX0ZuLyStrdDtabefZKAY5ZGJhVtgdznluResxNmPitE0SAO+O26sWTHeKSI2wMBA==",
          "requires": {
            "fs.realpath": "^1.0.0",
            "inflight": "^1.0.4",
            "inherits": "2",
            "minimatch": "^3.0.4",
            "once": "^1.3.0",
            "path-is-absolute": "^1.0.0"
          }
        },
        "minimatch": {
          "version": "3.1.2",
          "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
          "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
          "requires": {
            "brace-expansion": "^1.1.7"
          }
        }
      }
    },
    "swagger-parser": {
      "version": "10.0.3",
      "resolved": "https://registry.npmjs.org/swagger-parser/-/swagger-parser-10.0.3.tgz",
      "integrity": "sha512-nF7oMeL4KypldrQhac8RyHerJeGPD1p2xDh900GPvc+Nk7nWP6jX2FcC7WmkinMoAmoO774+AFXcWsW8gMWEIg==",
      "requires": {
        "@apidevtools/swagger-parser": "10.0.3"
      }
    },
    "swagger-ui-dist": {
      "version": "4.17.0",
      "resolved": "https://registry.npmjs.org/swagger-ui-dist/-/swagger-ui-dist-4.17.0.tgz",
      "integrity": "sha512-31zNkTaOItkhyoKQMs1HIRZ+0kwBPcmp1R0TcVsAmZpT8QGWFI6k9wfTfllQ1t2oE8IoHVUwL5V0VTAKUosvNg=="
    },
    "swagger-ui-express": {
      "version": "4.6.2",
      "resolved": "https://registry.npmjs.org/swagger-ui-express/-/swagger-ui-express-4.6.2.tgz",
      "integrity": "sha512-MHIOaq9JrTTB3ygUJD+08PbjM5Tt/q7x80yz9VTFIatw8j5uIWKcr90S0h5NLMzFEDC6+eVprtoeA5MDZXCUKQ==",
      "requires": {
        "swagger-ui-dist": ">=4.11.0"
      }
    },
    "swarm-js": {
      "version": "0.1.42",
      "resolved": "https://registry.npmjs.org/swarm-js/-/swarm-js-0.1.42.tgz",
      "integrity": "sha512-BV7c/dVlA3R6ya1lMlSSNPLYrntt0LUq4YMgy3iwpCIc6rZnS5W2wUoctarZ5pXlpKtxDDf9hNziEkcfrxdhqQ==",
      "requires": {
        "bluebird": "^3.5.0",
        "buffer": "^5.0.5",
        "eth-lib": "^0.1.26",
        "fs-extra": "^4.0.2",
        "got": "^11.8.5",
        "mime-types": "^2.1.16",
        "mkdirp-promise": "^5.0.1",
        "mock-fs": "^4.1.0",
        "setimmediate": "^1.0.5",
        "tar": "^4.0.2",
        "xhr-request": "^1.0.1"
      },
      "dependencies": {
        "@szmarczak/http-timer": {
          "version": "4.0.6",
          "resolved": "https://registry.npmjs.org/@szmarczak/http-timer/-/http-timer-4.0.6.tgz",
          "integrity": "sha512-4BAffykYOgO+5nzBWYwE3W90sBgLJoUPRWWcL8wlyiM8IB8ipJz3UMJ9KXQd1RKQXpKp8Tutn80HZtWsu2u76w==",
          "requires": {
            "defer-to-connect": "^2.0.0"
          }
        },
        "buffer": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz",
          "integrity": "sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==",
          "requires": {
            "base64-js": "^1.3.1",
            "ieee754": "^1.1.13"
          }
        },
        "cacheable-lookup": {
          "version": "5.0.4",
          "resolved": "https://registry.npmjs.org/cacheable-lookup/-/cacheable-lookup-5.0.4.tgz",
          "integrity": "sha512-2/kNscPhpcxrOigMZzbiWF7dz8ilhb/nIHU3EyZiXWXpeq/au8qJ8VhdftMkty3n7Gj6HIGalQG8oiBNB3AJgA=="
        },
        "got": {
          "version": "11.8.6",
          "resolved": "https://registry.npmjs.org/got/-/got-11.8.6.tgz",
          "integrity": "sha512-6tfZ91bOr7bOXnK7PRDCGBLa1H4U080YHNaAQ2KsMGlLEzRbk44nsZF2E1IeRc3vtJHPVbKCYgdFbaGO2ljd8g==",
          "requires": {
            "@sindresorhus/is": "^4.0.0",
            "@szmarczak/http-timer": "^4.0.5",
            "@types/cacheable-request": "^6.0.1",
            "@types/responselike": "^1.0.0",
            "cacheable-lookup": "^5.0.3",
            "cacheable-request": "^7.0.2",
            "decompress-response": "^6.0.0",
            "http2-wrapper": "^1.0.0-beta.5.2",
            "lowercase-keys": "^2.0.0",
            "p-cancelable": "^2.0.0",
            "responselike": "^2.0.0"
          }
        },
        "http2-wrapper": {
          "version": "1.0.3",
          "resolved": "https://registry.npmjs.org/http2-wrapper/-/http2-wrapper-1.0.3.tgz",
          "integrity": "sha512-V+23sDMr12Wnz7iTcDeJr3O6AIxlnvT/bmaAAAP/Xda35C90p9599p0F1eHR/N1KILWSoWVAiOMFjBBXaXSMxg==",
          "requires": {
            "quick-lru": "^5.1.1",
            "resolve-alpn": "^1.0.0"
          }
        },
        "lowercase-keys": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-2.0.0.tgz",
          "integrity": "sha512-tqNXrS78oMOE73NMxK4EMLQsQowWf8jKooH9g7xPavRT706R6bkQJ6DY2Te7QukaZsulxa30wQ7bk0pm4XiHmA=="
        },
        "p-cancelable": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/p-cancelable/-/p-cancelable-2.1.1.tgz",
          "integrity": "sha512-BZOr3nRQHOntUjTrH8+Lh54smKHoHyur8We1V8DSMVrl5A2malOOwuJRnKRDjSnkoeBh4at6BwEnb5I7Jl31wg=="
        }
      }
    },
    "symbol-observable": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/symbol-observable/-/symbol-observable-1.2.0.tgz",
      "integrity": "sha512-e900nM8RRtGhlV36KGEU9k65K3mPb1WV70OdjfxlG2EAuM1noi/E/BaW/uMhL7bPEssK8QV57vN3esixjUvcXQ=="
    },
    "tar": {
      "version": "4.4.19",
      "resolved": "https://registry.npmjs.org/tar/-/tar-4.4.19.tgz",
      "integrity": "sha512-a20gEsvHnWe0ygBY8JbxoM4w3SJdhc7ZAuxkLqh+nvNQN2IOt0B5lLgM490X5Hl8FF0dl0tOf2ewFYAlIFgzVA==",
      "requires": {
        "chownr": "^1.1.4",
        "fs-minipass": "^1.2.7",
        "minipass": "^2.9.0",
        "minizlib": "^1.3.3",
        "mkdirp": "^0.5.5",
        "safe-buffer": "^5.2.1",
        "yallist": "^3.1.1"
      }
    },
    "terser": {
      "version": "4.8.1",
      "resolved": "https://registry.npmjs.org/terser/-/terser-4.8.1.tgz",
      "integrity": "sha512-4GnLC0x667eJG0ewJTa6z/yXrbLGv80D9Ru6HIpCQmO+Q4PfEtBFi0ObSckqwL6VyQv/7ENJieXHo2ANmdQwgw==",
      "requires": {
        "commander": "^2.20.0",
        "source-map": "~0.6.1",
        "source-map-support": "~0.5.12"
      },
      "dependencies": {
        "commander": {
          "version": "2.20.3",
          "resolved": "https://registry.npmjs.org/commander/-/commander-2.20.3.tgz",
          "integrity": "sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ=="
        }
      }
    },
    "text-encoding-utf-8": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/text-encoding-utf-8/-/text-encoding-utf-8-1.0.2.tgz",
      "integrity": "sha512-8bw4MY9WjdsD2aMtO0OzOCY3pXGYNx2d2FfHRVUKkiCPDWjKuOlhLVASS+pD7VkLTVjW268LYJHwsnPFlBpbAg=="
    },
    "thenify": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/thenify/-/thenify-3.3.1.tgz",
      "integrity": "sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==",
      "requires": {
        "any-promise": "^1.0.0"
      }
    },
    "thenify-all": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/thenify-all/-/thenify-all-1.6.0.tgz",
      "integrity": "sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==",
      "requires": {
        "thenify": ">= 3.1.0 < 4"
      }
    },
    "thirty-two": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/thirty-two/-/thirty-two-1.0.2.tgz",
      "integrity": "sha512-OEI0IWCe+Dw46019YLl6V10Us5bi574EvlJEOcAkB29IzQ/mYD1A6RyNHLjZPiHCmuodxvgF6U+vZO1L15lxVA=="
    },
    "timed-out": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/timed-out/-/timed-out-4.0.1.tgz",
      "integrity": "sha512-G7r3AhovYtr5YKOWQkta8RKAPb+J9IsO4uVmzjl8AZwfhs8UcUwTiD6gcJYSgOtzyjvQKrKYn41syHbUWMkafA=="
    },
    "tiny-emitter": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/tiny-emitter/-/tiny-emitter-2.1.0.tgz",
      "integrity": "sha512-NB6Dk1A9xgQPMoGqC5CVXn123gWyte215ONT5Pp5a0yt4nlEoO1ZWeCwpncaekPHXO60i47ihFnZPiRPjRMq4Q=="
    },
    "tiny-invariant": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/tiny-invariant/-/tiny-invariant-1.3.1.tgz",
      "integrity": "sha512-AD5ih2NlSssTCwsMznbvwMZpJ1cbhkGd2uueNxzv2jDlEeZdU04JQfRnggJQ8DrcVBGjAsCKwFBbDlVNtEMlzw=="
    },
    "tiny-secp256k1": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/tiny-secp256k1/-/tiny-secp256k1-2.2.1.tgz",
      "integrity": "sha512-/U4xfVqnVxJXN4YVsru0E6t5wVncu2uunB8+RVR40fYUxkKYUPS10f+ePQZgFBoE/Jbf9H1NBveupF2VmB58Ng==",
      "requires": {
        "uint8array-tools": "0.0.7"
      }
    },
    "tiny-warning": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/tiny-warning/-/tiny-warning-1.0.3.tgz",
      "integrity": "sha512-lBN9zLN/oAf68o3zNXYrdCt1kP8WsiGW8Oo2ka41b2IM5JL/S1CTyX1rW0mb/zSuJun0ZUrDxx4sqvYS2FWzPA=="
    },
    "to-fast-properties": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-2.0.0.tgz",
      "integrity": "sha512-/OaKK0xYrs3DmxRYqL/yDc+FxFUVYhDlXMhRmv3z915w2HF1tnN1omB354j8VUGO/hbRzyD6Y3sA7v7GS/ceog=="
    },
    "to-regex-range": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
      "dev": true,
      "requires": {
        "is-number": "^7.0.0"
      }
    },
    "toidentifier": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz",
      "integrity": "sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA=="
    },
    "touch": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/touch/-/touch-3.1.0.tgz",
      "integrity": "sha512-WBx8Uy5TLtOSRtIq+M03/sKDrXCLHxwDcquSP2c43Le03/9serjQBIztjRz6FkJez9D/hleyAXTBGLwwZUw9lA==",
      "dev": true,
      "requires": {
        "nopt": "~1.0.10"
      }
    },
    "tough-cookie": {
      "version": "2.5.0",
      "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.5.0.tgz",
      "integrity": "sha512-nlLsUzgm1kfLXSXfRZMc1KLAugd4hqJHDTvc2hDIwS3mZAfMEuMbc03SujMF+GEcpaX/qboeycw6iO8JwVv2+g==",
      "requires": {
        "psl": "^1.1.28",
        "punycode": "^2.1.1"
      }
    },
    "tr46": {
      "version": "0.0.3",
      "resolved": "https://registry.npmjs.org/tr46/-/tr46-0.0.3.tgz",
      "integrity": "sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw=="
    },
    "tronweb": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/tronweb/-/tronweb-5.1.0.tgz",
      "integrity": "sha512-8a+mYKVUzsUWjeTHSAKcxAp82FseFTLlNLoLQ0KIL1rIt6Dy5whcyJwYatxUktbaztl55lnImHbupkKqMdIj1w==",
      "requires": {
        "@babel/runtime": "^7.0.0",
        "@tronweb3/google-protobuf": "^3.21.2",
        "axios": "^0.26.1",
        "bignumber.js": "^9.0.1",
        "elliptic": "^6.5.4",
        "ethers": "^5.4.4",
        "eventemitter3": "^3.1.0",
        "injectpromise": "^1.0.0",
        "lodash": "^4.17.21",
        "semver": "^5.6.0",
        "validator": "^13.7.0"
      },
      "dependencies": {
        "axios": {
          "version": "0.26.1",
          "resolved": "https://registry.npmjs.org/axios/-/axios-0.26.1.tgz",
          "integrity": "sha512-fPwcX4EvnSHuInCMItEhAGnaSEXRBjtzh9fOtsE6E1G6p7vl7edEeZe11QHf18+6+9gR5PbKV/sGKNaD8YaMeA==",
          "requires": {
            "follow-redirects": "^1.14.8"
          }
        }
      }
    },
    "ts-essentials": {
      "version": "9.3.1",
      "resolved": "https://registry.npmjs.org/ts-essentials/-/ts-essentials-9.3.1.tgz",
      "integrity": "sha512-9CChSvQMyVRo29Vb1A2jbs+LKo3d/bAf+ndSaX0T8cEiy/HChVaRN/HY5DqUryZ8hZ6uol9bEgCnGmnDbwBR9Q==",
      "requires": {}
    },
    "ts-node": {
      "version": "10.9.1",
      "resolved": "https://registry.npmjs.org/ts-node/-/ts-node-10.9.1.tgz",
      "integrity": "sha512-NtVysVPkxxrwFGUUxGYhfux8k78pQB3JqYBXlLRZgdGUqTO5wU/UyHop5p70iEbGhB7q5KmiZiU0Y3KlJrScEw==",
      "requires": {
        "@cspotcode/source-map-support": "^0.8.0",
        "@tsconfig/node10": "^1.0.7",
        "@tsconfig/node12": "^1.0.7",
        "@tsconfig/node14": "^1.0.0",
        "@tsconfig/node16": "^1.0.2",
        "acorn": "^8.4.1",
        "acorn-walk": "^8.1.1",
        "arg": "^4.1.0",
        "create-require": "^1.1.0",
        "diff": "^4.0.1",
        "make-error": "^1.1.1",
        "v8-compile-cache-lib": "^3.0.1",
        "yn": "3.1.1"
      }
    },
    "tslib": {
      "version": "2.6.0",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.6.0.tgz",
      "integrity": "sha512-7At1WUettjcSRHXCyYtTselblcHl9PJFFVKiCAy/bY97+BPZXSQ2wbq0P9s8tK2G7dFQfNnlJnPAiArVBVBsfA=="
    },
    "tunnel-agent": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz",
      "integrity": "sha512-McnNiV1l8RYeY8tBgEpuodCC1mLUdbSN+CYBL7kJsJNInOP8UjDDEwdk6Mw60vdLLrr5NHKZhMAOSrR2NZuQ+w==",
      "requires": {
        "safe-buffer": "^5.0.1"
      }
    },
    "tweetnacl": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-1.0.3.tgz",
      "integrity": "sha512-6rt+RN7aOi1nGMyC4Xa5DdYiukl2UWCbcJft7YhxReBGQD7OAM8Pbxw6YMo4r2diNEA8FEmu32YOn9rhaiE5yw=="
    },
    "tweetnacl-util": {
      "version": "0.15.1",
      "resolved": "https://registry.npmjs.org/tweetnacl-util/-/tweetnacl-util-0.15.1.tgz",
      "integrity": "sha512-RKJBIj8lySrShN4w6i/BonWp2Z/uxwC3h4y7xsRrpP59ZboCd0GpEVsOnMDYLMmKBpYhb5TgHzZXy7wTfYFBRw=="
    },
    "type": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/type/-/type-1.2.0.tgz",
      "integrity": "sha512-+5nt5AAniqsCnu2cEQQdpzCAh33kVx8n0VoFidKpB1dVVLAN/F+bgVOqOJqOnEnrhp222clB5p3vUlD+1QAnfg=="
    },
    "type-is": {
      "version": "1.6.18",
      "resolved": "https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz",
      "integrity": "sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==",
      "requires": {
        "media-typer": "0.3.0",
        "mime-types": "~2.1.24"
      }
    },
    "typed-function": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/typed-function/-/typed-function-2.1.0.tgz",
      "integrity": "sha512-bctQIOqx2iVbWGDGPWwIm18QScpu2XRmkC19D8rQGFsjKSgteq/o1hTZvIG/wuDq8fanpBDrLkLq+aEN/6y5XQ=="
    },
    "typed-styles": {
      "version": "0.0.7",
      "resolved": "https://registry.npmjs.org/typed-styles/-/typed-styles-0.0.7.tgz",
      "integrity": "sha512-pzP0PWoZUhsECYjABgCGQlRGL1n7tOHsgwYv3oIiEpJwGhFTuty/YNeduxQYzXXa3Ge5BdT6sHYIQYpl4uJ+5Q=="
    },
    "typedarray": {
      "version": "0.0.6",
      "resolved": "https://registry.npmjs.org/typedarray/-/typedarray-0.0.6.tgz",
      "integrity": "sha512-/aCDEGatGvZ2BIk+HmLf4ifCJFwvKFNb9/JeZPMulfgFracn9QFcAf5GO8B/mweUjSoblS5In0cWhqpfs/5PQA=="
    },
    "typedarray-to-buffer": {
      "version": "3.1.5",
      "resolved": "https://registry.npmjs.org/typedarray-to-buffer/-/typedarray-to-buffer-3.1.5.tgz",
      "integrity": "sha512-zdu8XMNEDepKKR+XYOXAVPtWui0ly0NtohUscw+UmaHiAWT8hrV1rr//H6V+0DvJ3OQ19S979M0laLfX8rm82Q==",
      "requires": {
        "is-typedarray": "^1.0.0"
      }
    },
    "typeforce": {
      "version": "1.18.0",
      "resolved": "https://registry.npmjs.org/typeforce/-/typeforce-1.18.0.tgz",
      "integrity": "sha512-7uc1O8h1M1g0rArakJdf0uLRSSgFcYexrVoKo+bzJd32gd4gDy2L/Z+8/FjPnU9ydY3pEnVPtr9FyscYY60K1g=="
    },
    "typeorm": {
      "version": "0.3.12",
      "resolved": "https://registry.npmjs.org/typeorm/-/typeorm-0.3.12.tgz",
      "integrity": "sha512-sYSxBmCf1nJLLTcYtwqZ+lQIRtLPyUoO93rHTOKk9vJCyT4UfRtU7oRsJvfvKP3nnZTD1hzz2SEy2zwPEN6OyA==",
      "requires": {
        "@sqltools/formatter": "^1.2.5",
        "app-root-path": "^3.1.0",
        "buffer": "^6.0.3",
        "chalk": "^4.1.2",
        "cli-highlight": "^2.1.11",
        "date-fns": "^2.29.3",
        "debug": "^4.3.4",
        "dotenv": "^16.0.3",
        "glob": "^8.1.0",
        "js-yaml": "^4.1.0",
        "mkdirp": "^2.1.3",
        "reflect-metadata": "^0.1.13",
        "sha.js": "^2.4.11",
        "tslib": "^2.5.0",
        "uuid": "^9.0.0",
        "xml2js": "^0.4.23",
        "yargs": "^17.6.2"
      },
      "dependencies": {
        "cliui": {
          "version": "8.0.1",
          "resolved": "https://registry.npmjs.org/cliui/-/cliui-8.0.1.tgz",
          "integrity": "sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==",
          "requires": {
            "string-width": "^4.2.0",
            "strip-ansi": "^6.0.1",
            "wrap-ansi": "^7.0.0"
          }
        },
        "debug": {
          "version": "4.3.4",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.4.tgz",
          "integrity": "sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==",
          "requires": {
            "ms": "2.1.2"
          }
        },
        "glob": {
          "version": "8.1.0",
          "resolved": "https://registry.npmjs.org/glob/-/glob-8.1.0.tgz",
          "integrity": "sha512-r8hpEjiQEYlF2QU0df3dS+nxxSIreXQS1qRhMJM0Q5NDdR386C7jb7Hwwod8Fgiuex+k0GFjgft18yvxm5XoCQ==",
          "requires": {
            "fs.realpath": "^1.0.0",
            "inflight": "^1.0.4",
            "inherits": "2",
            "minimatch": "^5.0.1",
            "once": "^1.3.0"
          }
        },
        "minimatch": {
          "version": "5.1.6",
          "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-5.1.6.tgz",
          "integrity": "sha512-lKwV/1brpG6mBUFHtb7NUmtABCb2WZZmm2wNiOA5hAb8VdCS4B3dtMWyvcoViccwAW/COERjXLt0zP1zXUN26g==",
          "requires": {
            "brace-expansion": "^2.0.1"
          }
        },
        "mkdirp": {
          "version": "2.1.4",
          "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-2.1.4.tgz",
          "integrity": "sha512-Cy9cV4pRSl1o10i1dURTuRt4T04l0DkS1WZrT+Jir886OqOVkSv4FbOA7pgjhS8kEUrmm4kCRvv5var2iOCxpA=="
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
        },
        "wrap-ansi": {
          "version": "7.0.0",
          "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
          "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
          "requires": {
            "ansi-styles": "^4.0.0",
            "string-width": "^4.1.0",
            "strip-ansi": "^6.0.0"
          }
        },
        "y18n": {
          "version": "5.0.8",
          "resolved": "https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz",
          "integrity": "sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA=="
        },
        "yargs": {
          "version": "17.7.1",
          "resolved": "https://registry.npmjs.org/yargs/-/yargs-17.7.1.tgz",
          "integrity": "sha512-cwiTb08Xuv5fqF4AovYacTFNxk62th7LKJ6BL9IGUpTJrWoU7/7WdQGTP2SjKf1dUNBGzDd28p/Yfs/GI6JrLw==",
          "requires": {
            "cliui": "^8.0.1",
            "escalade": "^3.1.1",
            "get-caller-file": "^2.0.5",
            "require-directory": "^2.1.1",
            "string-width": "^4.2.3",
            "y18n": "^5.0.5",
            "yargs-parser": "^21.1.1"
          }
        },
        "yargs-parser": {
          "version": "21.1.1",
          "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz",
          "integrity": "sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw=="
        }
      }
    },
    "typescript": {
      "version": "4.9.5",
      "resolved": "https://registry.npmjs.org/typescript/-/typescript-4.9.5.tgz",
      "integrity": "sha512-1FXk9E2Hm+QzZQ7z+McJiHL4NW1F2EzMu9Nq9i3zAaGqibafqYwCVU6WyWAuyQRRzOlxou8xZSyXLEN8oKj24g=="
    },
    "u3": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/u3/-/u3-0.1.1.tgz",
      "integrity": "sha512-+J5D5ir763y+Am/QY6hXNRlwljIeRMZMGs0cT6qqZVVzzT3X3nFPXVyPOFRMOR4kupB0T8JnCdpWdp6Q/iXn3w=="
    },
    "uglify-js": {
      "version": "3.17.4",
      "resolved": "https://registry.npmjs.org/uglify-js/-/uglify-js-3.17.4.tgz",
      "integrity": "sha512-T9q82TJI9e/C1TAxYvfb16xO120tMVFZrGA3f9/P4424DNu6ypK103y0GPFVa17yotwSyZW5iYXgjYHkGrJW/g==",
      "optional": true
    },
    "uid-safe": {
      "version": "2.1.5",
      "resolved": "https://registry.npmjs.org/uid-safe/-/uid-safe-2.1.5.tgz",
      "integrity": "sha512-KPHm4VL5dDXKz01UuEd88Df+KzynaohSL9fBh096KWAxSKZQDI2uBrVqtvRM4rwrIrRRKsdLNML/lnaaVSRioA==",
      "requires": {
        "random-bytes": "~1.0.0"
      }
    },
    "uint8array-tools": {
      "version": "0.0.7",
      "resolved": "https://registry.npmjs.org/uint8array-tools/-/uint8array-tools-0.0.7.tgz",
      "integrity": "sha512-vrrNZJiusLWoFWBqz5Y5KMCgP9W9hnjZHzZiZRT8oNAkq3d5Z5Oe76jAvVVSRh4U8GGR90N2X1dWtrhvx6L8UQ=="
    },
    "ultron": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/ultron/-/ultron-1.1.1.tgz",
      "integrity": "sha512-UIEXBNeYmKptWH6z8ZnqTeS8fV74zG0/eRU9VGkpzz+LIJNs8W/zM/L+7ctCkRrgbNnnR0xxw4bKOr0cW0N0Og=="
    },
    "undefsafe": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/undefsafe/-/undefsafe-2.0.5.tgz",
      "integrity": "sha512-WxONCrssBM8TSPRqN5EmsjVrsv4A8X12J4ArBiiayv3DyyG3ZlIg6yysuuSYdZsVz3TKcTg2fd//Ujd4CHV1iA==",
      "dev": true
    },
    "unicode-canonical-property-names-ecmascript": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/unicode-canonical-property-names-ecmascript/-/unicode-canonical-property-names-ecmascript-2.0.0.tgz",
      "integrity": "sha512-yY5PpDlfVIU5+y/BSCxAJRBIS1Zc2dDG3Ujq+sR0U+JjUevW2JhocOF+soROYDSaAezOzOKuyyixhD6mBknSmQ=="
    },
    "unicode-match-property-ecmascript": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/unicode-match-property-ecmascript/-/unicode-match-property-ecmascript-2.0.0.tgz",
      "integrity": "sha512-5kaZCrbp5mmbz5ulBkDkbY0SsPOjKqVS35VpL9ulMPfSl0J0Xsm+9Evphv9CoIZFwre7aJoa94AY6seMKGVN5Q==",
      "requires": {
        "unicode-canonical-property-names-ecmascript": "^2.0.0",
        "unicode-property-aliases-ecmascript": "^2.0.0"
      }
    },
    "unicode-match-property-value-ecmascript": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/unicode-match-property-value-ecmascript/-/unicode-match-property-value-ecmascript-2.1.0.tgz",
      "integrity": "sha512-qxkjQt6qjg/mYscYMC0XKRn3Rh0wFPlfxB0xkt9CfyTvpX1Ra0+rAmdX2QyAobptSEvuy4RtpPRui6XkV+8wjA=="
    },
    "unicode-property-aliases-ecmascript": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/unicode-property-aliases-ecmascript/-/unicode-property-aliases-ecmascript-2.1.0.tgz",
      "integrity": "sha512-6t3foTQI9qne+OZoVQB/8x8rk2k1eVy1gRXhV3oFQ5T6R1dqQ1xtin3XqSlx3+ATBkliTaR/hHyJBm+LVPNM8w=="
    },
    "universalify": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/universalify/-/universalify-0.1.2.tgz",
      "integrity": "sha512-rBJeI5CXAlmy1pV+617WB9J63U6XcazHHF2f2dbJix4XzpUF0RS3Zbj0FGIOCAva5P/d/GBOYaACQ1w+0azUkg=="
    },
    "unpipe": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz",
      "integrity": "sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ=="
    },
    "update-browserslist-db": {
      "version": "1.0.11",
      "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.0.11.tgz",
      "integrity": "sha512-dCwEFf0/oT85M1fHBg4F0jtLwJrutGoHSQXCh7u4o2t1drG+c0a9Flnqww6XUKSfQMPpJBRjU8d4RXB09qtvaA==",
      "requires": {
        "escalade": "^3.1.1",
        "picocolors": "^1.0.0"
      }
    },
    "uri-js": {
      "version": "4.4.1",
      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
      "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
      "requires": {
        "punycode": "^2.1.0"
      }
    },
    "url-set-query": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/url-set-query/-/url-set-query-1.0.0.tgz",
      "integrity": "sha512-3AChu4NiXquPfeckE5R5cGdiHCMWJx1dwCWOmWIL4KHAziJNOFIYJlpGFeKDvwLPHovZRCxK3cYlwzqI9Vp+Gg=="
    },
    "use-memo-one": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/use-memo-one/-/use-memo-one-1.1.3.tgz",
      "integrity": "sha512-g66/K7ZQGYrI6dy8GLpVcMsBp4s17xNkYJVSMvTEevGy3nDxHOfE6z8BVE22+5G5x7t3+bhzrlTDB7ObrEE0cQ==",
      "requires": {}
    },
    "utf-8-validate": {
      "version": "5.0.10",
      "resolved": "https://registry.npmjs.org/utf-8-validate/-/utf-8-validate-5.0.10.tgz",
      "integrity": "sha512-Z6czzLq4u8fPOyx7TU6X3dvUZVvoJmxSQ+IcrlmagKhilxlhZgxPK6C5Jqbkw1IDUmFTM+cz9QDnnLTwDz/2gQ==",
      "requires": {
        "node-gyp-build": "^4.3.0"
      }
    },
    "utf8": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/utf8/-/utf8-3.0.0.tgz",
      "integrity": "sha512-E8VjFIQ/TyQgp+TZfS6l8yp/xWppSAHzidGiRrqe4bK4XP9pTRyKFgGJpO3SN7zdX4DeomTrwaseCHovfpFcqQ=="
    },
    "util": {
      "version": "0.12.5",
      "resolved": "https://registry.npmjs.org/util/-/util-0.12.5.tgz",
      "integrity": "sha512-kZf/K6hEIrWHI6XqOFUiiMa+79wE/D8Q+NCNAWclkyg3b4d2k7s0QGepNjiABc+aR3N1PAyHL7p6UcLY6LmrnA==",
      "requires": {
        "inherits": "^2.0.3",
        "is-arguments": "^1.0.4",
        "is-generator-function": "^1.0.7",
        "is-typed-array": "^1.1.3",
        "which-typed-array": "^1.1.2"
      }
    },
    "util-deprecate": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
      "integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw=="
    },
    "utils-merge": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz",
      "integrity": "sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA=="
    },
    "uuid": {
      "version": "9.0.0",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-9.0.0.tgz",
      "integrity": "sha512-MXcSTerfPa4uqyzStbRoTgt5XIe3x5+42+q1sDuy3R5MDk66URdLMOZe5aPX/SQd+kuYAh0FdP/pO28IkQyTeg=="
    },
    "v8-compile-cache-lib": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/v8-compile-cache-lib/-/v8-compile-cache-lib-3.0.1.tgz",
      "integrity": "sha512-wa7YjyUGfNZngI/vtK0UHAN+lgDCxBPCylVXGp0zu59Fz5aiGtNXaq3DhIov063MorB+VfufLh3JlF2KdTK3xg=="
    },
    "validator": {
      "version": "13.9.0",
      "resolved": "https://registry.npmjs.org/validator/-/validator-13.9.0.tgz",
      "integrity": "sha512-B+dGG8U3fdtM0/aNK4/X8CXq/EcxU2WPrPEkJGslb47qyHsxmbggTWK0yEA4qnYVNF+nxNlN88o14hIcPmSIEA=="
    },
    "value-equal": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/value-equal/-/value-equal-1.0.1.tgz",
      "integrity": "sha512-NOJ6JZCAWr0zlxZt+xqCHNTEKOsrks2HQd4MqhP1qy4z1SkbEP467eNx6TgDKXMvUOb+OENfJCZwM+16n7fRfw=="
    },
    "varint": {
      "version": "5.0.2",
      "resolved": "https://registry.npmjs.org/varint/-/varint-5.0.2.tgz",
      "integrity": "sha512-lKxKYG6H03yCZUpAGOPOsMcGxd1RHCu1iKvEHYDPmTyq2HueGhD73ssNBqqQWfvYs04G9iUFRvmAVLW20Jw6ow=="
    },
    "varuint-bitcoin": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/varuint-bitcoin/-/varuint-bitcoin-1.1.2.tgz",
      "integrity": "sha512-4EVb+w4rx+YfVM32HQX42AbbT7/1f5zwAYhIujKXKk8NQK+JfRVl3pqT3hjNn/L+RstigmGGKVwHA/P0wgITZw==",
      "requires": {
        "safe-buffer": "^5.1.1"
      }
    },
    "vary": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/vary/-/vary-1.1.2.tgz",
      "integrity": "sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg=="
    },
    "verror": {
      "version": "1.10.0",
      "resolved": "https://registry.npmjs.org/verror/-/verror-1.10.0.tgz",
      "integrity": "sha512-ZZKSmDAEFOijERBLkmYfJ+vmk3w+7hOLYDNkRCuRuMJGEmqYNCNLyBBFwWKVMhfwaEF3WOd0Zlw86U/WC/+nYw==",
      "requires": {
        "assert-plus": "^1.0.0",
        "core-util-is": "1.0.2",
        "extsprintf": "^1.2.0"
      }
    },
    "void-elements": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/void-elements/-/void-elements-3.1.0.tgz",
      "integrity": "sha512-Dhxzh5HZuiHQhbvTW9AMetFfBHDMYpo23Uo9btPXgdYP+3T5S+p+jgNy7spra+veYhBP2dCSgxR/i2Y02h5/6w=="
    },
    "wallet-address-validator": {
      "version": "0.2.4",
      "resolved": "https://registry.npmjs.org/wallet-address-validator/-/wallet-address-validator-0.2.4.tgz",
      "integrity": "sha512-3fp0pVdhaCA6UoPK3CQFx9Y+ckQgFlCa9rOQ7DZr2Uzlh0kYKs3NaSwIDn4FSceDsi1g6W28EWDrlr9Pr3mI3Q==",
      "requires": {
        "base-x": "^3.0.4",
        "jssha": "2.3.1"
      }
    },
    "warning": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/warning/-/warning-4.0.3.tgz",
      "integrity": "sha512-rpJyN222KWIvHJ/F53XSZv0Zl/accqHR8et1kpaMTD/fLCRxtV8iX8czMzY7sVZupTI3zcUTg8eycS2kNF9l6w==",
      "requires": {
        "loose-envify": "^1.0.0"
      }
    },
    "wcwidth": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/wcwidth/-/wcwidth-1.0.1.tgz",
      "integrity": "sha512-XHPEwS0q6TaxcvG85+8EYkbiCux2XtWG2mkc47Ng2A77BQu9+DqIOJldST4HgPkuea7dvKSj5VgX3P1d4rW8Tg==",
      "requires": {
        "defaults": "^1.0.3"
      }
    },
    "web-streams-polyfill": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/web-streams-polyfill/-/web-streams-polyfill-3.2.1.tgz",
      "integrity": "sha512-e0MO3wdXWKrLbL0DgGnUV7WHVuw9OUvL4hjgnPkIeEvESk74gAITi5G606JtZPp39cd8HA9VQzCIvA49LpPN5Q=="
    },
    "web3": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3/-/web3-1.8.2.tgz",
      "integrity": "sha512-92h0GdEHW9wqDICQQKyG4foZBYi0OQkyg4CRml2F7XBl/NG+fu9o6J19kzfFXzSBoA4DnJXbyRgj/RHZv5LRiw==",
      "requires": {
        "web3-bzz": "1.8.2",
        "web3-core": "1.8.2",
        "web3-eth": "1.8.2",
        "web3-eth-personal": "1.8.2",
        "web3-net": "1.8.2",
        "web3-shh": "1.8.2",
        "web3-utils": "1.8.2"
      }
    },
    "web3-bzz": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-bzz/-/web3-bzz-1.8.2.tgz",
      "integrity": "sha512-1EEnxjPnFnvNWw3XeeKuTR8PBxYd0+XWzvaLK7OJC/Go9O8llLGxrxICbKV+8cgIE0sDRBxiYx02X+6OhoAQ9w==",
      "requires": {
        "@types/node": "^12.12.6",
        "got": "12.1.0",
        "swarm-js": "^0.1.40"
      },
      "dependencies": {
        "@types/node": {
          "version": "12.20.55",
          "resolved": "https://registry.npmjs.org/@types/node/-/node-12.20.55.tgz",
          "integrity": "sha512-J8xLz7q2OFulZ2cyGTLE1TbbZcjpno7FaN6zdJNrgAdrJ+DZzh/uFR6YrTb4C+nXakvud8Q4+rbhoIWlYQbUFQ=="
        }
      }
    },
    "web3-core": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-core/-/web3-core-1.8.2.tgz",
      "integrity": "sha512-DJTVEAYcNqxkqruJE+Rxp3CIv0y5AZMwPHQmOkz/cz+MM75SIzMTc0AUdXzGyTS8xMF8h3YWMQGgGEy8SBf1PQ==",
      "requires": {
        "@types/bn.js": "^5.1.0",
        "@types/node": "^12.12.6",
        "bignumber.js": "^9.0.0",
        "web3-core-helpers": "1.8.2",
        "web3-core-method": "1.8.2",
        "web3-core-requestmanager": "1.8.2",
        "web3-utils": "1.8.2"
      },
      "dependencies": {
        "@types/node": {
          "version": "12.20.55",
          "resolved": "https://registry.npmjs.org/@types/node/-/node-12.20.55.tgz",
          "integrity": "sha512-J8xLz7q2OFulZ2cyGTLE1TbbZcjpno7FaN6zdJNrgAdrJ+DZzh/uFR6YrTb4C+nXakvud8Q4+rbhoIWlYQbUFQ=="
        }
      }
    },
    "web3-core-helpers": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-core-helpers/-/web3-core-helpers-1.8.2.tgz",
      "integrity": "sha512-6B1eLlq9JFrfealZBomd1fmlq1o4A09vrCVQSa51ANoib/jllT3atZrRDr0zt1rfI7TSZTZBXdN/aTdeN99DWw==",
      "requires": {
        "web3-eth-iban": "1.8.2",
        "web3-utils": "1.8.2"
      }
    },
    "web3-core-method": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-core-method/-/web3-core-method-1.8.2.tgz",
      "integrity": "sha512-1qnr5mw5wVyULzLOrk4B+ryO3gfGjGd/fx8NR+J2xCGLf1e6OSjxT9vbfuQ3fErk/NjSTWWreieYWLMhaogcRA==",
      "requires": {
        "@ethersproject/transactions": "^5.6.2",
        "web3-core-helpers": "1.8.2",
        "web3-core-promievent": "1.8.2",
        "web3-core-subscriptions": "1.8.2",
        "web3-utils": "1.8.2"
      }
    },
    "web3-core-promievent": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-core-promievent/-/web3-core-promievent-1.8.2.tgz",
      "integrity": "sha512-nvkJWDVgoOSsolJldN33tKW6bKKRJX3MCPDYMwP5SUFOA/mCzDEoI88N0JFofDTXkh1k7gOqp1pvwi9heuaxGg==",
      "requires": {
        "eventemitter3": "4.0.4"
      },
      "dependencies": {
        "eventemitter3": {
          "version": "4.0.4",
          "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-4.0.4.tgz",
          "integrity": "sha512-rlaVLnVxtxvoyLsQQFBx53YmXHDxRIzzTLbdfxqi4yocpSjAxXwkU0cScM5JgSKMqEhrZpnvQ2D9gjylR0AimQ=="
        }
      }
    },
    "web3-core-requestmanager": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-core-requestmanager/-/web3-core-requestmanager-1.8.2.tgz",
      "integrity": "sha512-p1d090RYs5Mu7DK1yyc3GCBVZB/03rBtFhYFoS2EruGzOWs/5Q0grgtpwS/DScdRAm8wB8mYEBhY/RKJWF6B2g==",
      "requires": {
        "util": "^0.12.5",
        "web3-core-helpers": "1.8.2",
        "web3-providers-http": "1.8.2",
        "web3-providers-ipc": "1.8.2",
        "web3-providers-ws": "1.8.2"
      }
    },
    "web3-core-subscriptions": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-core-subscriptions/-/web3-core-subscriptions-1.8.2.tgz",
      "integrity": "sha512-vXQogHDmAIQcKpXvGiMddBUeP9lnKgYF64+yQJhPNE5PnWr1sAibXuIPV7mIPihpFr/n/DORRj6Wh1pUv9zaTw==",
      "requires": {
        "eventemitter3": "4.0.4",
        "web3-core-helpers": "1.8.2"
      },
      "dependencies": {
        "eventemitter3": {
          "version": "4.0.4",
          "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-4.0.4.tgz",
          "integrity": "sha512-rlaVLnVxtxvoyLsQQFBx53YmXHDxRIzzTLbdfxqi4yocpSjAxXwkU0cScM5JgSKMqEhrZpnvQ2D9gjylR0AimQ=="
        }
      }
    },
    "web3-eth": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-eth/-/web3-eth-1.8.2.tgz",
      "integrity": "sha512-JoTiWWc4F4TInpbvDUGb0WgDYJsFhuIjJlinc5ByjWD88Gvh+GKLsRjjFdbqe5YtwIGT4NymwoC5LQd1K6u/QQ==",
      "requires": {
        "web3-core": "1.8.2",
        "web3-core-helpers": "1.8.2",
        "web3-core-method": "1.8.2",
        "web3-core-subscriptions": "1.8.2",
        "web3-eth-abi": "1.8.2",
        "web3-eth-accounts": "1.8.2",
        "web3-eth-contract": "1.8.2",
        "web3-eth-ens": "1.8.2",
        "web3-eth-iban": "1.8.2",
        "web3-eth-personal": "1.8.2",
        "web3-net": "1.8.2",
        "web3-utils": "1.8.2"
      }
    },
    "web3-eth-abi": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-eth-abi/-/web3-eth-abi-1.8.2.tgz",
      "integrity": "sha512-Om9g3kaRNjqiNPAgKwGT16y+ZwtBzRe4ZJFGjLiSs6v5I7TPNF+rRMWuKnR6jq0azQZDj6rblvKFMA49/k48Og==",
      "requires": {
        "@ethersproject/abi": "^5.6.3",
        "web3-utils": "1.8.2"
      }
    },
    "web3-eth-accounts": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-eth-accounts/-/web3-eth-accounts-1.8.2.tgz",
      "integrity": "sha512-c367Ij63VCz9YdyjiHHWLFtN85l6QghgwMQH2B1eM/p9Y5lTlTX7t/Eg/8+f1yoIStXbk2w/PYM2lk+IkbqdLA==",
      "requires": {
        "@ethereumjs/common": "2.5.0",
        "@ethereumjs/tx": "3.3.2",
        "eth-lib": "0.2.8",
        "ethereumjs-util": "^7.1.5",
        "scrypt-js": "^3.0.1",
        "uuid": "^9.0.0",
        "web3-core": "1.8.2",
        "web3-core-helpers": "1.8.2",
        "web3-core-method": "1.8.2",
        "web3-utils": "1.8.2"
      },
      "dependencies": {
        "bn.js": {
          "version": "4.12.0",
          "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz",
          "integrity": "sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA=="
        },
        "eth-lib": {
          "version": "0.2.8",
          "resolved": "https://registry.npmjs.org/eth-lib/-/eth-lib-0.2.8.tgz",
          "integrity": "sha512-ArJ7x1WcWOlSpzdoTBX8vkwlkSQ85CjjifSZtV4co64vWxSV8geWfPI9x4SVYu3DSxnX4yWFVTtGL+j9DUFLNw==",
          "requires": {
            "bn.js": "^4.11.6",
            "elliptic": "^6.4.0",
            "xhr-request-promise": "^0.1.2"
          }
        }
      }
    },
    "web3-eth-contract": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-eth-contract/-/web3-eth-contract-1.8.2.tgz",
      "integrity": "sha512-ID5A25tHTSBNwOPjiXSVzxruz006ULRIDbzWTYIFTp7NJ7vXu/kynKK2ag/ObuTqBpMbobP8nXcA9b5EDkIdQA==",
      "requires": {
        "@types/bn.js": "^5.1.0",
        "web3-core": "1.8.2",
        "web3-core-helpers": "1.8.2",
        "web3-core-method": "1.8.2",
        "web3-core-promievent": "1.8.2",
        "web3-core-subscriptions": "1.8.2",
        "web3-eth-abi": "1.8.2",
        "web3-utils": "1.8.2"
      }
    },
    "web3-eth-ens": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-eth-ens/-/web3-eth-ens-1.8.2.tgz",
      "integrity": "sha512-PWph7C/CnqdWuu1+SH4U4zdrK4t2HNt0I4XzPYFdv9ugE8EuojselioPQXsVGvjql+Nt3jDLvQvggPqlMbvwRw==",
      "requires": {
        "content-hash": "^2.5.2",
        "eth-ens-namehash": "2.0.8",
        "web3-core": "1.8.2",
        "web3-core-helpers": "1.8.2",
        "web3-core-promievent": "1.8.2",
        "web3-eth-abi": "1.8.2",
        "web3-eth-contract": "1.8.2",
        "web3-utils": "1.8.2"
      }
    },
    "web3-eth-iban": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-eth-iban/-/web3-eth-iban-1.8.2.tgz",
      "integrity": "sha512-h3vNblDWkWMuYx93Q27TAJz6lhzpP93EiC3+45D6xoz983p6si773vntoQ+H+5aZhwglBtoiBzdh7PSSOnP/xQ==",
      "requires": {
        "bn.js": "^5.2.1",
        "web3-utils": "1.8.2"
      }
    },
    "web3-eth-personal": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-eth-personal/-/web3-eth-personal-1.8.2.tgz",
      "integrity": "sha512-Vg4HfwCr7doiUF/RC+Jz0wT4+cYaXcOWMAW2AHIjHX6Z7Xwa8nrURIeQgeEE62qcEHAzajyAdB1u6bJyTfuCXw==",
      "requires": {
        "@types/node": "^12.12.6",
        "web3-core": "1.8.2",
        "web3-core-helpers": "1.8.2",
        "web3-core-method": "1.8.2",
        "web3-net": "1.8.2",
        "web3-utils": "1.8.2"
      },
      "dependencies": {
        "@types/node": {
          "version": "12.20.55",
          "resolved": "https://registry.npmjs.org/@types/node/-/node-12.20.55.tgz",
          "integrity": "sha512-J8xLz7q2OFulZ2cyGTLE1TbbZcjpno7FaN6zdJNrgAdrJ+DZzh/uFR6YrTb4C+nXakvud8Q4+rbhoIWlYQbUFQ=="
        }
      }
    },
    "web3-net": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-net/-/web3-net-1.8.2.tgz",
      "integrity": "sha512-1itkDMGmbgb83Dg9nporFes9/fxsU7smJ3oRXlFkg4ZHn8YJyP1MSQFPJWWwSc+GrcCFt4O5IrUTvEkHqE3xag==",
      "requires": {
        "web3-core": "1.8.2",
        "web3-core-method": "1.8.2",
        "web3-utils": "1.8.2"
      }
    },
    "web3-providers-http": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-providers-http/-/web3-providers-http-1.8.2.tgz",
      "integrity": "sha512-2xY94IIEQd16+b+vIBF4IC1p7GVaz9q4EUFscvMUjtEq4ru4Atdzjs9GP+jmcoo49p70II0UV3bqQcz0TQfVyQ==",
      "requires": {
        "abortcontroller-polyfill": "^1.7.3",
        "cross-fetch": "^3.1.4",
        "es6-promise": "^4.2.8",
        "web3-core-helpers": "1.8.2"
      }
    },
    "web3-providers-ipc": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-providers-ipc/-/web3-providers-ipc-1.8.2.tgz",
      "integrity": "sha512-p6fqKVGFg+WiXGHWnB1hu43PbvPkDHTz4RgoEzbXugv5rtv5zfYLqm8Ba6lrJOS5ks9kGKR21a0y3NzE3u7V4w==",
      "requires": {
        "oboe": "2.1.5",
        "web3-core-helpers": "1.8.2"
      }
    },
    "web3-providers-ws": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-providers-ws/-/web3-providers-ws-1.8.2.tgz",
      "integrity": "sha512-3s/4K+wHgbiN+Zrp9YjMq2eqAF6QGABw7wFftPdx+m5hWImV27/MoIx57c6HffNRqZXmCHnfWWFCNHHsi7wXnA==",
      "requires": {
        "eventemitter3": "4.0.4",
        "web3-core-helpers": "1.8.2",
        "websocket": "^1.0.32"
      },
      "dependencies": {
        "eventemitter3": {
          "version": "4.0.4",
          "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-4.0.4.tgz",
          "integrity": "sha512-rlaVLnVxtxvoyLsQQFBx53YmXHDxRIzzTLbdfxqi4yocpSjAxXwkU0cScM5JgSKMqEhrZpnvQ2D9gjylR0AimQ=="
        }
      }
    },
    "web3-shh": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-shh/-/web3-shh-1.8.2.tgz",
      "integrity": "sha512-uZ+3MAoNcaJsXXNCDnizKJ5viBNeHOFYsCbFhV755Uu52FswzTOw6DtE7yK9nYXMtIhiSgi7nwl1RYzP8pystw==",
      "requires": {
        "web3-core": "1.8.2",
        "web3-core-method": "1.8.2",
        "web3-core-subscriptions": "1.8.2",
        "web3-net": "1.8.2"
      }
    },
    "web3-utils": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/web3-utils/-/web3-utils-1.8.2.tgz",
      "integrity": "sha512-v7j6xhfLQfY7xQDrUP0BKbaNrmZ2/+egbqP9q3KYmOiPpnvAfol+32slgL0WX/5n8VPvKCK5EZ1HGrAVICSToA==",
      "requires": {
        "bn.js": "^5.2.1",
        "ethereum-bloom-filters": "^1.0.6",
        "ethereumjs-util": "^7.1.0",
        "ethjs-unit": "0.1.6",
        "number-to-bn": "1.7.0",
        "randombytes": "^2.1.0",
        "utf8": "3.0.0"
      }
    },
    "webidl-conversions": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-3.0.1.tgz",
      "integrity": "sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ=="
    },
    "websocket": {
      "version": "1.0.34",
      "resolved": "https://registry.npmjs.org/websocket/-/websocket-1.0.34.tgz",
      "integrity": "sha512-PRDso2sGwF6kM75QykIesBijKSVceR6jL2G8NGYyq2XrItNC2P5/qL5XeR056GhA+Ly7JMFvJb9I312mJfmqnQ==",
      "requires": {
        "bufferutil": "^4.0.1",
        "debug": "^2.2.0",
        "es5-ext": "^0.10.50",
        "typedarray-to-buffer": "^3.1.5",
        "utf-8-validate": "^5.0.2",
        "yaeti": "^0.0.6"
      }
    },
    "whatwg-url": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-5.0.0.tgz",
      "integrity": "sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==",
      "requires": {
        "tr46": "~0.0.3",
        "webidl-conversions": "^3.0.0"
      }
    },
    "which": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
      "requires": {
        "isexe": "^2.0.0"
      }
    },
    "which-module": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/which-module/-/which-module-2.0.0.tgz",
      "integrity": "sha512-B+enWhmw6cjfVC7kS8Pj9pCrKSc5txArRyaYGe088shv/FGWH+0Rjx/xPgtsWfsUtS27FkP697E4DDhgrgoc0Q=="
    },
    "which-typed-array": {
      "version": "1.1.9",
      "resolved": "https://registry.npmjs.org/which-typed-array/-/which-typed-array-1.1.9.tgz",
      "integrity": "sha512-w9c4xkx6mPidwp7180ckYWfMmvxpjlZuIudNtDf4N/tTAUB8VJbX25qZoAsrtGuYNnGw3pa0AXgbGKRB8/EceA==",
      "requires": {
        "available-typed-arrays": "^1.0.5",
        "call-bind": "^1.0.2",
        "for-each": "^0.3.3",
        "gopd": "^1.0.1",
        "has-tostringtag": "^1.0.0",
        "is-typed-array": "^1.1.10"
      }
    },
    "wif": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/wif/-/wif-2.0.6.tgz",
      "integrity": "sha512-HIanZn1zmduSF+BQhkE+YXIbEiH0xPr1012QbFEGB0xsKqJii0/SqJjyn8dFv6y36kOznMgMB+LGcbZTJ1xACQ==",
      "requires": {
        "bs58check": "<3.0.0"
      }
    },
    "wordwrap": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/wordwrap/-/wordwrap-1.0.0.tgz",
      "integrity": "sha512-gvVzJFlPycKc5dZN4yPkP8w7Dc37BtP1yczEneOb4uq34pXZcvrtRTmWV8W+Ume+XCxKgbjM+nevkyFPMybd4Q=="
    },
    "wrap-ansi": {
      "version": "6.2.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-6.2.0.tgz",
      "integrity": "sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ/SOIZwINatK9KY/tf+ZrlywOKU0UDj3ATXUBfxJXA==",
      "requires": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      }
    },
    "wrap-ansi-cjs": {
      "version": "npm:wrap-ansi@7.0.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
      "requires": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      }
    },
    "wrappy": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
      "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ=="
    },
    "ws": {
      "version": "7.4.6",
      "resolved": "https://registry.npmjs.org/ws/-/ws-7.4.6.tgz",
      "integrity": "sha512-YmhHDO4MzaDLB+M9ym/mDA5z0naX8j7SIlT8f8z+I0VtzsRbekxEutHSme7NPS2qE8StCYQNUnfWdXta/Yu85A==",
      "requires": {}
    },
    "xhr": {
      "version": "2.6.0",
      "resolved": "https://registry.npmjs.org/xhr/-/xhr-2.6.0.tgz",
      "integrity": "sha512-/eCGLb5rxjx5e3mF1A7s+pLlR6CGyqWN91fv1JgER5mVWg1MZmlhBvy9kjcsOdRk8RrIujotWyJamfyrp+WIcA==",
      "requires": {
        "global": "~4.4.0",
        "is-function": "^1.0.1",
        "parse-headers": "^2.0.0",
        "xtend": "^4.0.0"
      }
    },
    "xhr-request": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/xhr-request/-/xhr-request-1.1.0.tgz",
      "integrity": "sha512-Y7qzEaR3FDtL3fP30k9wO/e+FBnBByZeybKOhASsGP30NIkRAAkKD/sCnLvgEfAIEC1rcmK7YG8f4oEnIrrWzA==",
      "requires": {
        "buffer-to-arraybuffer": "^0.0.5",
        "object-assign": "^4.1.1",
        "query-string": "^5.0.1",
        "simple-get": "^2.7.0",
        "timed-out": "^4.0.1",
        "url-set-query": "^1.0.0",
        "xhr": "^2.0.4"
      }
    },
    "xhr-request-promise": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/xhr-request-promise/-/xhr-request-promise-0.1.3.tgz",
      "integrity": "sha512-YUBytBsuwgitWtdRzXDDkWAXzhdGB8bYm0sSzMPZT7Z2MBjMSTHFsyCT1yCRATY+XC69DUrQraRAEgcoCRaIPg==",
      "requires": {
        "xhr-request": "^1.1.0"
      }
    },
    "xml2js": {
      "version": "0.4.23",
      "resolved": "https://registry.npmjs.org/xml2js/-/xml2js-0.4.23.tgz",
      "integrity": "sha512-ySPiMjM0+pLDftHgXY4By0uswI3SPKLDw/i3UXbnO8M/p28zqexCUoPmQFrYD+/1BzhGJSs2i1ERWKJAtiLrug==",
      "requires": {
        "sax": ">=0.6.0",
        "xmlbuilder": "~11.0.0"
      }
    },
    "xmlbuilder": {
      "version": "11.0.1",
      "resolved": "https://registry.npmjs.org/xmlbuilder/-/xmlbuilder-11.0.1.tgz",
      "integrity": "sha512-fDlsI/kFEx7gLvbecc0/ohLG50fugQp8ryHzMTuW9vSa1GJ0XYWKnhsUx7oie3G98+r56aTQIUB4kht42R3JvA=="
    },
    "xtend": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.2.tgz",
      "integrity": "sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ=="
    },
    "y18n": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/y18n/-/y18n-4.0.3.tgz",
      "integrity": "sha512-JKhqTOwSrqNA1NY5lSztJ1GrBiUodLMmIZuLiDaMRJ+itFd+ABVE8XBjOvIWL+rSqNDC74LCSFmlb/U4UZ4hJQ=="
    },
    "yaeti": {
      "version": "0.0.6",
      "resolved": "https://registry.npmjs.org/yaeti/-/yaeti-0.0.6.tgz",
      "integrity": "sha512-MvQa//+KcZCUkBTIC9blM+CU9J2GzuTytsOUwf2lidtvkx/6gnEp1QvJv34t9vdjhFmha/mUiNDbN0D0mJWdug=="
    },
    "yallist": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
      "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g=="
    },
    "yaml": {
      "version": "2.0.0-1",
      "resolved": "https://registry.npmjs.org/yaml/-/yaml-2.0.0-1.tgz",
      "integrity": "sha512-W7h5dEhywMKenDJh2iX/LABkbFnBxasD27oyXWDS/feDsxiw0dD5ncXdYXgkvAsXIY2MpW/ZKkr9IU30DBdMNQ=="
    },
    "yargs": {
      "version": "15.4.1",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-15.4.1.tgz",
      "integrity": "sha512-aePbxDmcYW++PaqBsJ+HYUFwCdv4LVvdnhBy78E57PIor8/OVvhMrADFFEDh8DHDFRv/O9i3lPhsENjO7QX0+A==",
      "requires": {
        "cliui": "^6.0.0",
        "decamelize": "^1.2.0",
        "find-up": "^4.1.0",
        "get-caller-file": "^2.0.1",
        "require-directory": "^2.1.1",
        "require-main-filename": "^2.0.0",
        "set-blocking": "^2.0.0",
        "string-width": "^4.2.0",
        "which-module": "^2.0.0",
        "y18n": "^4.0.0",
        "yargs-parser": "^18.1.2"
      }
    },
    "yargs-parser": {
      "version": "18.1.3",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-18.1.3.tgz",
      "integrity": "sha512-o50j0JeToy/4K6OZcaQmW6lyXXKhq7csREXcDwk2omFPJEwUNOVtJKvmDr9EI1fAJZUyZcRF7kxGBWmRXudrCQ==",
      "requires": {
        "camelcase": "^5.0.0",
        "decamelize": "^1.2.0"
      }
    },
    "yn": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/yn/-/yn-3.1.1.tgz",
      "integrity": "sha512-Ux4ygGWsu2c7isFWe8Yu1YluJmqVhxqK2cLXNQA5AcC3QfbGNpM7fu0Y8b/z16pXLnFxZYvWhd3fhBY9DLmC6Q=="
    },
    "z-schema": {
      "version": "5.0.5",
      "resolved": "https://registry.npmjs.org/z-schema/-/z-schema-5.0.5.tgz",
      "integrity": "sha512-D7eujBWkLa3p2sIpJA0d1pr7es+a7m0vFAnZLlCEKq/Ij2k0MLi9Br2UPxoxdYystm5K1yeBGzub0FlYUEWj2Q==",
      "requires": {
        "commander": "^9.4.1",
        "lodash.get": "^4.4.2",
        "lodash.isequal": "^4.5.0",
        "validator": "^13.7.0"
      },
      "dependencies": {
        "commander": {
          "version": "9.5.0",
          "resolved": "https://registry.npmjs.org/commander/-/commander-9.5.0.tgz",
          "integrity": "sha512-KRs7WVDKg86PWiuAqhDrAQnTXZKraVcCc6vFdL14qrZ/DcWwuRo7VoiYXalXO7S5GKpqYiVEwCbgFDfxNHKJBQ==",
          "optional": true
        }
      }
    }
  }
}

'''
'''--- package.json ---
{
  "name": "defix3_ts_back",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "dev": "nodemon ./src/server.ts",
    "build": "rm -rf dist/* && tsc",
    "start": "npm run build && node ./dist/server.js",
    "production": "export NODE_ENV=production && node ./dist/server.js",
    "typeorm": "ts-node ./node_modules/typeorm/cli.js -d ./src/config/dataSource.ts",
    "create": "typeorm migration:create ./src/migrations/migration",
    "migrate": "ts-node --transpile-only ./node_modules/typeorm/cli.js migration:run -d ./src/config/dataSource.ts",
    "generate": "npm run typeorm -d migration:generate ./src/migrations/migration"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@1inch/limit-order-protocol-utils": "^3.0.1",
    "@adminjs/express": "^4.0.0",
    "@adminjs/typeorm": "^3.0.0",
    "@paraswap/sdk": "^6.2.0",
    "@ref-finance/ref-sdk": "^1.2.0",
    "adminjs": "^5.0.0",
    "axios": "^1.3.2",
    "bip32": "^3.1.0",
    "bip39": "^3.0.4",
    "bitcoinjs-lib": "^6.1.0",
    "bn.js": "^5.2.1",
    "child_process": "^1.0.2",
    "cors": "^2.8.5",
    "cross-fetch": "^3.1.6",
    "crypto": "^1.0.1",
    "crypto-js": "^4.1.1",
    "dotenv": "^16.0.3",
    "ecpair": "^2.1.0",
    "ethers": "^5.7.2",
    "express": "^4.18.1",
    "express-formidable": "^1.2.0",
    "express-session": "^1.17.3",
    "glob": "^10.3.1",
    "morgan": "^1.10.0",
    "multer": "^1.4.5-lts.1",
    "near-api-js": "^1.1.0",
    "near-seed-phrase": "^0.2.0",
    "node-cache": "^5.1.2",
    "node-fetch": "^3.3.1",
    "nodemailer": "^6.9.1",
    "nodemailer-express-handlebars": "^6.0.0",
    "otplib": "^12.0.1",
    "pg": "^8.9.0",
    "qrcode": "^1.5.1",
    "reflect-metadata": "^0.1.13",
    "serialize-javascript": "^6.0.1",
    "socket.io": "^4.6.0",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^4.6.0",
    "tiny-secp256k1": "^2.2.1",
    "tronweb": "^5.1.0",
    "ts-node": "^10.9.1",
    "tslib": "^2.6.0",
    "typeorm": "^0.3.12",
    "uuid": "^9.0.0",
    "wallet-address-validator": "^0.2.4",
    "web3": "^1.8.2"
  },
  "devDependencies": {
    "@types/axios": "^0.14.0",
    "@types/bip32": "^2.0.0",
    "@types/bip39": "^3.0.0",
    "@types/bitcoinjs-lib": "^5.0.0",
    "@types/bn.js": "^5.1.1",
    "@types/cors": "^2.8.12",
    "@types/crypto-js": "^4.1.1",
    "@types/dotenv": "^8.2.0",
    "@types/express": "^4.17.13",
    "@types/morgan": "^1.9.4",
    "@types/multer": "^1.4.7",
    "@types/node": "^18.13.0",
    "@types/node-forge": "^1.3.1",
    "@types/nodemailer": "^6.4.7",
    "@types/nodemailer-express-handlebars": "^4.0.2",
    "@types/otplib": "^10.0.0",
    "@types/pem": "^1.9.6",
    "@types/pem-jwk": "^2.0.0",
    "@types/pg": "^8.6.6",
    "@types/qrcode": "^1.5.0",
    "@types/serialize-javascript": "^5.0.2",
    "@types/socket.io": "^3.0.2",
    "@types/swagger-jsdoc": "^6.0.1",
    "@types/swagger-ui-express": "^4.1.3",
    "@types/uuid": "^9.0.1",
    "@types/web3": "^1.2.2",
    "nodemon": "^2.0.20",
    "typescript": "^4.9.5"
  }
}

'''
'''--- src/app.ts ---
import "dotenv/config";
import "reflect-metadata";
import express from "express";
import cors from "cors";
import morgan from "morgan";
import path from "path";
import swaggerUi from "swagger-ui-express";
import swaggerSetup from "./config/swagger";
import { UsersModule } from "./modules/users/init";
import { WalletsModule } from "./modules/wallets/init";
import { AddressModule } from "./modules/address/init";
import { BalanceModule } from "./modules/balance/init";
import { SubscriptionModule } from "./modules/subscription/init";
import { GeneralModule } from "./modules/general/init";
import { TransactionHistoryModule } from "./modules/transactionHistory/init";
import { TransferModule } from "./modules/transfer/init";
import { FrequentModule } from "./modules/frequent/init";
import { SwapModule } from "./modules/swap/init";
import { LimitOrderModule } from "./modules/limitOrder/init";
import { WithdrawModule } from "./modules/withdraw/init";
import { HiddenTokensModule } from "./modules/hiddenTokens/init";
import { BridgeModule } from "./modules/bridge/init";

class App {
  public app: express.Express;
  public router: express.Router;

  constructor() {
    this.app = express();
    this.router = express.Router();
    this.config();
    this.initModules();
  }

  private config() {
    this.app.use(morgan("dev"));
    this.app.use(cors());
    this.app.use(express.json());
    this.app.use("/api/v2", this.router);
    this.app.use("/uploads", express.static(path.resolve("./uploads/")));
    this.app.use("/swagger", swaggerUi.serve, swaggerUi.setup(swaggerSetup));
  }

  private initModules() {
    new AddressModule(this.router);
    new WalletsModule(this.router);
    new UsersModule(this.router);
    new BalanceModule(this.router);
    new SubscriptionModule(this.router);
    new GeneralModule(this.router);
    new TransactionHistoryModule(this.router);
    new TransferModule(this.router);
    new WithdrawModule(this.router);
    new SwapModule(this.router);
    new LimitOrderModule(this.router);
    new FrequentModule(this.router);
    new HiddenTokensModule(this.router);
    new BridgeModule(this.router);
  }
}

export default new App().app;

'''
'''--- src/blockchain/abi.json ---
[
  {
    "constant": true,
    "inputs": [],
    "name": "name",
    "outputs": [
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "_spender",
        "type": "address"
      },
      {
        "name": "_value",
        "type": "uint256"
      }
    ],
    "name": "approve",
    "outputs": [
      {
        "name": "",
        "type": "bool"
      }
    ],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "totalSupply",
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "_from",
        "type": "address"
      },
      {
        "name": "_to",
        "type": "address"
      },
      {
        "name": "_value",
        "type": "uint256"
      }
    ],
    "name": "transferFrom",
    "outputs": [
      {
        "name": "",
        "type": "bool"
      }
    ],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "decimals",
    "outputs": [
      {
        "name": "",
        "type": "uint8"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "_spender",
        "type": "address"
      },
      {
        "name": "_subtractedValue",
        "type": "uint256"
      }
    ],
    "name": "decreaseApproval",
    "outputs": [
      {
        "name": "",
        "type": "bool"
      }
    ],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [
      {
        "name": "_owner",
        "type": "address"
      }
    ],
    "name": "balanceOf",
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "_to",
        "type": "address"
      },
      {
        "name": "_value",
        "type": "uint256"
      }
    ],
    "name": "transfer",
    "outputs": [
      {
        "name": "",
        "type": "bool"
      }
    ],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "_spender",
        "type": "address"
      },
      {
        "name": "_addedValue",
        "type": "uint256"
      }
    ],
    "name": "increaseApproval",
    "outputs": [
      {
        "name": "",
        "type": "bool"
      }
    ],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [
      {
        "name": "_owner",
        "type": "address"
      },
      {
        "name": "_spender",
        "type": "address"
      }
    ],
    "name": "allowance",
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "symbol",
    "outputs": [
        {
            "name": "",
            "type": "string"
        }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "name": "_name",
        "type": "string"
      },
      {
        "name": "_symbol",
        "type": "string"
      },
      {
        "name": "_decimals",
        "type": "uint8"
      },
      {
        "name": "_totalSupply",
        "type": "uint256"
      }
    ],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "name": "owner",
        "type": "address"
      },
      {
        "indexed": true,
        "name": "spender",
        "type": "address"
      },
      {
        "indexed": false,
        "name": "value",
        "type": "uint256"
      }
    ],
    "name": "Approval",
    "type": "event"
  }
]

'''
'''--- src/blockchain/binance/binance.service.ts ---
import { BlockchainService } from "../blockchain.interface";
import { ethers, Wallet } from "ethers";
import Web3 from "web3";
import web3Utils from "web3-utils";
import { AbiItem } from "web3-utils";
import { CredentialInterface } from "../../interfaces/credential.interface";
import axios from "axios";
import { constructSimpleSDK, OptimalRate } from "@paraswap/sdk";
import abi from "../abi.json";
import { UtilsShared } from "../../shared/utils/utils.shared";

const ETHEREUM_NETWORK = process.env.ETHEREUM_NETWORK;
const INFURA_PROJECT_ID = process.env.INFURA_PROJECT_ID;

const ETHERSCAN = process.env.ETHERSCAN;

const WEB_BSC = process.env.WEB_BSC;

const web3 = new Web3(new Web3.providers.HttpProvider(WEB_BSC || ""));

const paraSwap = constructSimpleSDK({
  chainId: Number(process.env.PARASWAP_BNB),
  axios,
});

const dataToken = {
  decimals: 18,
  contract: "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",
};

export class BinanceService implements BlockchainService {
  getOrderBookCoinToCoin(fromCoin: string, toCoin: string): Promise<any> {
    throw new Error("Method not implemented.");
  }
  sendLimitOrder(
    fromCoin: string,
    toCoin: string,
    srcAmount: number,
    destAmount: number,
    blockchain: string,
    address: string,
    privateKey: string
  ): Promise<any> {
    throw new Error("Method not implemented.");
  }
  async fromMnemonic(mnemonic: string): Promise<CredentialInterface> {
    const wallet = ethers.Wallet.fromMnemonic(mnemonic);

    const credential: CredentialInterface = {
      name: "BNB",
      address: wallet.address,
      privateKey: wallet.privateKey,
    };

    return credential;
  }
  async fromPrivateKey(privateKey: string): Promise<CredentialInterface | null> {
    try {
      const wallet = web3.eth.accounts.privateKeyToAccount(privateKey);
      const credential: CredentialInterface = {
        name: "BNB",
        address: wallet.address,
        privateKey: privateKey,
      };

      return credential;
    } catch (error) {
      return null;
    }
  }
  async isAddress(address: string): Promise<boolean> {
    return await web3.utils.isAddress(address);
  }
  async getBalance(address: string): Promise<number> {
    try {
      let balance = await web3.eth.getBalance(address);

      let balanceTotal = 0;

      if (balance) {
        let value = Math.pow(10, 18);
        balanceTotal = Number(balance) / value;
        if (!balanceTotal) {
          balanceTotal = 0;
        }
        return balanceTotal;
      } else {
        return balanceTotal;
      }
    } catch (error) {
      console.log(error);
      return 0;
    }
  }

  async getBalanceToken(address: string, srcContract: string, decimals: number): Promise<number> {
    try {
      let contract = new web3.eth.Contract(abi as web3Utils.AbiItem[], srcContract);

      const balance = await contract.methods.balanceOf(address).call();

      let balanceTotal = 0;

      if (balance) {
        let value = Math.pow(10, decimals);
        balanceTotal = balance / value;
        if (!balanceTotal) {
          balanceTotal = 0;
        }
        return balanceTotal;
      } else {
        return balanceTotal;
      }
    } catch (error) {
      return 0;
    }
  }

  async getFeeTransaction(coin: string, blockchain: string, typeTxn: string): Promise<any> {
    try {
      let comisionAdmin: any = await UtilsShared.getComision(blockchain);

      const response = await axios.get("https://api.bscscan.com/api?module=gastracker&action=gasoracle&apikey=3SU1MAWAPX8X39UD6U8JBGTQ5C67EVVRSM");
      const wei = response.data.result.SafeGasPrice;

      if (!wei) throw new Error(`Error getting gas price`);

      const feeMain = {
        coin,
        blockchain,
        fee: "",
      };

      let gasLimit = 21000;
      if (coin !== "BNB") {
        gasLimit = 55000;
      }

      let comision;

      if (typeTxn === "TRANSFER") {
        comision = comisionAdmin.transfer;
      } else if (typeTxn === "WITHDRAW") {
        comision = comisionAdmin.withdraw;
      }

      if (!comision) {
        feeMain.fee = web3.utils.fromWei(String(gasLimit * wei), "gwei");
      } else {
        feeMain.fee = String(Number(web3.utils.fromWei(String(gasLimit * wei), "gwei")) * 2);
      }
      return feeMain;
    } catch (err: any) {
      throw new Error(`Failed to get fee transaction, ${err.message}`);
    }
  }

  async sendTransfer(fromAddress: string, privateKey: string, toAddress: string, amount: number, coin: string): Promise<string> {
    try {
      const balance = await this.getBalance(fromAddress);
      if (balance < amount) {
        throw new Error(`Error: You do not have enough funds to make the transfer`);
      }

      const gasPrice = await web3.eth.getGasPrice();
      const gasLimit = 21000;
      const nonce = await web3.eth.getTransactionCount(fromAddress);

      const rawTransaction = {
        from: fromAddress,
        to: toAddress,
        value: web3.utils.toHex(web3.utils.toWei(amount.toLocaleString("fullwide", { useGrouping: false }), "ether")),
        gasPrice: web3.utils.toHex(gasPrice),
        gasLimit: web3.utils.toHex(gasLimit),
        nonce: nonce,
      };

      const signedTransaction = await web3.eth.accounts.signTransaction(rawTransaction, privateKey);

      if (!signedTransaction.rawTransaction) throw new Error(`Error: Failed to sign transaction`);

      const transactionHash = await web3.eth.sendSignedTransaction(signedTransaction.rawTransaction);

      if (!transactionHash.transactionHash) throw new Error(`Error: Failed to send transaction`);

      return transactionHash.transactionHash;
    } catch (err: any) {
      throw new Error(`Failed to send transfer, ${err.message}`);
    }
  }

  async sendTransferToken(fromAddress: string, privateKey: string, toAddress: string, amount: number, srcToken: any): Promise<string> {
    try {
      const balance = await this.getBalanceToken(fromAddress, srcToken.contract, srcToken.decimals);
      if (balance < amount) {
        throw new Error(`Error: You do not have enough funds to make the transfer`);
      }

      // const provider = new ethers.providers.InfuraProvider(ETHEREUM_NETWORK, INFURA_PROJECT_ID);

      const provider = new ethers.providers.JsonRpcProvider(WEB_BSC); // provider for signing transaction
      let wallet = new ethers.Wallet(privateKey, provider);

      const minABI = abi;

      // const wallet = new ethers.Wallet(privateKey);
      const signer = wallet.connect(provider);

      const contract = new ethers.Contract(srcToken.contract, minABI, signer);
      let value = Math.pow(10, srcToken.decimals);
      let srcAmount = amount * value;

      const tx = await contract.transfer(toAddress, srcAmount.toLocaleString("fullwide", { useGrouping: false }));

      const txWait = await tx.wait();

      if (!tx.hash) throw new Error(`Error tx hash.`);

      return tx.hash as string;
    } catch (err: any) {
      throw new Error(`Failed to send transfer, ${err.message}`);
    }
  }

  async previewSwap(fromCoin: string, toCoin: string, amount: number, blockchain: string, address: string): Promise<any> {
    try {
      let fromToken: any = await UtilsShared.getTokenContract(fromCoin, blockchain);
      let toToken: any = await UtilsShared.getTokenContract(toCoin, blockchain);

      if (!fromToken) {
        fromToken = dataToken;
      }
      if (!toToken) {
        toToken = dataToken;
      }

      let value = Math.pow(10, fromToken.decimals);
      const srcAmount = amount * value;

      const priceRoute: OptimalRate = await paraSwap.swap.getRate({
        srcToken: fromToken.contract,
        destToken: toToken.contract,
        amount: srcAmount.toLocaleString("fullwide", { useGrouping: false }),
      });

      const response = await axios.get("https://api.bscscan.com/api?module=gastracker&action=gasoracle&apikey=3SU1MAWAPX8X39UD6U8JBGTQ5C67EVVRSM");
      let wei = response.data.result.SafeGasPrice;

      const comision = await UtilsShared.getComision(blockchain);

      let feeTransfer = "0";
      let porcentFee = 0;

      if (comision.swap) {
        porcentFee = comision.swap / 100;
        if (comision.swap && fromCoin === "BNB") {
          feeTransfer = web3.utils.fromWei(String(21000 * wei), "gwei");
        } else {
          feeTransfer = web3.utils.fromWei(String(55000 * wei), "gwei");
        }
      }
      const feeGas = web3.utils.fromWei(String(Number(priceRoute.gasCost) * wei), "gwei");

      const srcFee = String(Number(feeTransfer) + Number(feeGas));

      let feeDefix = String(Number(srcFee) * porcentFee);

      const swapRate = String(
        Number(priceRoute.destAmount) / Math.pow(10, toToken.decimals) / (Number(priceRoute.srcAmount) / Math.pow(10, fromToken.decimals))
      );

      const dataSwap = {
        exchange: priceRoute.bestRoute[0].swaps[0].swapExchanges[0].exchange,
        fromAmount: priceRoute.srcAmount,
        fromDecimals: fromToken.decimals,
        toAmount: priceRoute.destAmount,
        toDecimals: toToken.decimals,
        block: priceRoute.blockNumber,
        swapRate,
        contract: priceRoute.contractAddress,
        fee: srcFee,
        feeDefix: feeDefix,
        feeTotal: String(Number(srcFee) + Number(feeDefix)),
      };

      return { dataSwap, priceRoute };
    } catch (err: any) {
      throw new Error(`Failed to send transfer, ${err.message}`);
    }
  }

  async sendSwap(priceRoute: any, privateKey: string, address: string): Promise<any> {
    try {
      // const provider = ethers.getDefaultProvider(56);
      if (priceRoute.srcToken !== "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee") {
        const provider = new ethers.providers.JsonRpcProvider(WEB_BSC);
        const signerApprove = new ethers.Wallet(privateKey, provider);
        const account = signerApprove.address;

        const contractToken = new ethers.Contract(priceRoute.srcToken, abi, signerApprove);

        const allowance = await contractToken.allowance(account, priceRoute.tokenTransferProxy);

        // if (allowance > priceRoute.srcAmount) {
        const gasPrice = await signerApprove.getGasPrice();

        const gasLimit = await contractToken.estimateGas.approve(priceRoute.tokenTransferProxy, priceRoute.srcAmount);

        const approve = await contractToken.connect(signerApprove).approve(priceRoute.tokenTransferProxy, priceRoute.srcAmount, {
          gasLimit: gasLimit,
          gasPrice: gasPrice,
        });

        console.log("APPROVE", approve);

        await approve.wait();
      }
      // }

      const signer = web3.eth.accounts.privateKeyToAccount(privateKey);

      const txParams = await paraSwap.swap.buildTx({
        srcToken: priceRoute.srcToken,
        destToken: priceRoute.destToken,
        srcAmount: priceRoute.srcAmount,
        destAmount: priceRoute.destAmount,
        priceRoute: priceRoute,
        userAddress: address,
      });

      const txSigned = await signer.signTransaction(txParams);

      if (!txSigned.rawTransaction) throw new Error(`Failed to sign swap.`);

      const result = await web3.eth.sendSignedTransaction(txSigned.rawTransaction);

      const transactionHash = result.transactionHash;

      if (!transactionHash) throw new Error(`Failed to send swap, transaction Hash.`);

      const srcAmount = String(Number(priceRoute.srcAmount) / Math.pow(10, priceRoute.srcDecimals));
      const destAmount = String(Number(priceRoute.destAmount) / Math.pow(10, priceRoute.destDecimals));

      return {
        transactionHash,
        srcAmount: srcAmount,
        destAmount: destAmount,
        block: priceRoute.blockNumber,
      };
    } catch (err: any) {
      throw new Error(`Failed to send swap, ${err.message}`);
    }
  }
  cancelLimitOrder(address: string, privateKey: string): Promise<any> {
    throw new Error("Method not implemented.");
  }
  getAllLimitOrder(address: string): Promise<any> {
    throw new Error("Method not implemented.");
  }
}

'''
'''--- src/blockchain/bitcoin/bitcoin.service.ts ---
import ecfacory, { TinySecp256k1Interface, ECPairAPI, ECPairFactory } from "ecpair";
import { networks, payments, script } from "bitcoinjs-lib";
import { mnemonicToSeedSync } from "bip39";
const WAValidator = require("wallet-address-validator");
import axios from "axios";
import BIP32Factory from "bip32";
import * as ecc from "tiny-secp256k1";
import { BIP32Interface } from "bip32";
const bip32 = BIP32Factory(ecc);
import crypto from "crypto";
import { CredentialInterface } from "../../interfaces/credential.interface";
import { BlockchainService } from "../blockchain.interface";
import { UtilsShared } from "../../shared/utils/utils.shared";
import { BitcoinUtils } from "./bitcoin.utils";

const tinysecp: TinySecp256k1Interface = require("tiny-secp256k1");
const ECPair: ECPairAPI = ECPairFactory(tinysecp);

const NETWORK = process.env.NETWORK;

export class BitcoinService implements BlockchainService {
  getOrderBookCoinToCoin(fromCoin: string, toCoin: string): Promise<any> {
    throw new Error("Method not implemented.");
  }
  sendLimitOrder(
    fromCoin: string,
    toCoin: string,
    srcAmount: number,
    destAmount: number,
    blockchain: string,
    address: string,
    privateKey: string
  ): Promise<any> {
    throw new Error("Method not implemented.");
  }
  async fromMnemonic(mnemonic: string): Promise<CredentialInterface> {
    let network;
    let path;
    if (NETWORK === "mainnet") {
      network = networks.bitcoin; //use networks.testnet networks.bitcoin for testnet
      path = `m/49'/0'/0'/0`; // Use m/49'/1'/0'/0 for testnet mainnet `m/49'/0'/0'/0
    } else {
      network = networks.testnet;
      path = `m/49'/1/0'/0`;
    }

    const seed = mnemonicToSeedSync(mnemonic);

    const root: BIP32Interface = bip32.fromSeed(seed, network);

    const account = root.derivePath(path);

    const node = account.derive(0).derive(0);

    const btcAddress = payments.p2pkh({
      pubkey: node.publicKey,
      network: network,
    }).address;

    const credential: CredentialInterface = {
      name: "BTC",
      address: btcAddress || "",
      privateKey: node.toWIF(),
    };

    return credential;
  }
  async fromPrivateKey(privateKey: string): Promise<CredentialInterface | null> {
    try {
      let network;
      let path;
      if (NETWORK === "mainnet") {
        network = networks.bitcoin; //use networks.testnet networks.bitcoin for testnet
        path = `m/49'/0'/0'/0`; // Use m/49'/1'/0'/0 for testnet mainnet `m/49'/0'/0'/0
      } else {
        network = networks.testnet; //use networks.testnet networks.bitcoin for testnet;
        path = `m/49'/1/0'/0`;
      }

      const keyPair = ECPair.fromWIF(privateKey, network);
      if (!keyPair.privateKey) return null;

      const chainCode = Buffer.alloc(32);
      const root: BIP32Interface = bip32.fromPrivateKey(keyPair.privateKey, chainCode);

      const { address } = payments.p2pkh({
        pubkey: root.publicKey,
        network: network,
      });

      if (!address) return null;

      const credential: CredentialInterface = {
        name: "BTC",
        address: address,
        privateKey: keyPair.toWIF(),
      };

      return credential;
    } catch (error) {
      return null;
    }
  }
  async isAddress(address: string): Promise<boolean> {
    if (NETWORK === "mainnet") {
      return await WAValidator.validate(address, "BTC");
    } else {
      return await WAValidator.validate(address, "BTC", "testnet");
    }
  }
  async getBalance(address: string): Promise<number> {
    try {
      const method = "get";
      const url = "https://blockchain.info/q/addressbalance/" + address;

      const balance = await axios[method](url, {
        headers: {
          "Content-Type": "application/json",
        },
      })
        .then(async (response) => {
          if (response.data || response.data === 0) {
            const satoshi = response.data;
            const value_satoshi = 100000000;
            const balance = satoshi / value_satoshi || 0;
            return balance;
          }
          const item = await this.getBalanceBTC_Cypher(address);
          return item;
        })
        .catch(async (error) => {
          const item = await this.getBalanceBTC_Cypher(address);
          return item;
        });
      return balance;
    } catch (error) {
      console.error(error);
      const item = await this.getBalanceBTC_Cypher(address);
      return item;
    }
  }
  async getBalanceToken(address: string, contract: string, decimals: number): Promise<number> {
    return 0;
  }
  private getBalanceBTC_Cypher = async (address: string) => {
    try {
      const method = "get";
      const url =
        "https://api.blockcypher.com/v1/btc/" +
        process.env.BLOCKCYPHER +
        "/addrs/" +
        address +
        "/balance?token=" +
        "efe763283ba84fef88d23412be0c5970";

      const balance = await axios[method](url, {
        headers: {
          "Content-Type": "application/json",
        },
      })
        .then((response) => {
          if (response.data) {
            const satoshi = response.data.balance;
            const value_satoshi = 100000000;
            return satoshi / value_satoshi || 0;
          }
          return 0;
        })
        .catch((error) => {
          return 0;
        });
      return balance;
    } catch (error) {
      console.log(error);
      return 0;
    }
  };

  async getFeeTransaction(coin: string, blockchain: string, typeTxn: string, amount: number | undefined, address: string | undefined): Promise<any> {
    try {
      if (!amount || !address) throw new Error(`Failed to amount tx btc`);
      let comisionAdmin: any = await UtilsShared.getComision(blockchain);

      const feeMain = {
        coin,
        blockchain,
        fee: "",
      };

      let comision;

      if (typeTxn === "TRANSFER") {
        comision = comisionAdmin.transfer;
      } else if (typeTxn === "WITHDRAW") {
        comision = comisionAdmin.withdraw;
      }

      feeMain.fee = String(await BitcoinUtils.newTxFee(comision, amount, address));
      return feeMain;
    } catch (err: any) {
      throw new Error(`Failed to get fee transaction, ${err.message}`);
    }
  }

  async sendTransfer(fromAddress: string, privateKey: string, toAddress: string, amount: number, coin: string): Promise<string> {
    try {
      let network;
      if (NETWORK === "mainnet") {
        network = networks.bitcoin; //use networks.testnet networks.bitcoin for testnet
      } else {
        network = networks.testnet; //use networks.testnet networks.bitcoin for testnet
      }

      const keys = ECPair.fromWIF(privateKey, network);

      const value_satoshi = 100000000;
      const amountSatoshi = amount * value_satoshi;
      const vaultSatoshi = 0; // parseInt(String(for_vault * value_satoshi));

      const data = {
        inputs: [
          {
            addresses: [fromAddress],
          },
        ],
        outputs: [
          {
            addresses: [toAddress],
            value: parseInt(String(amountSatoshi)),
          },
        ],
      };

      if (vaultSatoshi !== 0) {
        data.outputs.push({
          addresses: [fromAddress],
          value: parseInt(String(vaultSatoshi)),
        });
      }

      const config = {
        method: "post",
        url: "https://api.blockcypher.com/v1/btc/" + process.env.BLOCKCYPHER + "/txs/new",
        headers: {
          "Content-Type": "application/json",
        },
        data: data,
      };

      let txHash = null;

      await axios(config)
        .then(async function (tmptx) {
          tmptx.data.pubkeys = [];
          tmptx.data.signatures = tmptx.data.tosign.map(function (tosign: any, n: any) {
            tmptx.data.pubkeys.push(keys.publicKey.toString("hex"));
            return script.signature
              .encode(keys.sign(Buffer.from(tosign, "hex")), 0x01)
              .toString("hex")
              .slice(0, -2);
          });

          const result = axios
            .post("https://api.blockcypher.com/v1/btc/" + process.env.BLOCKCYPHER + "/txs/send", tmptx.data)
            .then(function (finaltx) {
              txHash = finaltx.data.tx.hash;
              console.log("hash", finaltx.data.tx.hash);
              return true;
            })
            .catch(function (err: any) {
              throw new Error(`Failed to axios, ${err.message}`);
            });
          return result;
        })
        .catch(function (err: any) {
          throw new Error(`Failed to axios, ${err.message}`);
        });

      if (!txHash) throw new Error(`Failed to send btc, hash.`);

      return txHash as string;
    } catch (err: any) {
      throw new Error(`Failed to send transfer, ${err.message}`);
    }
  }
  sendTransferToken(fromAddress: string, privateKey: string, toAddress: string, amount: number, srcToken: any): Promise<string> {
    throw new Error("Method not implemented.");
  }

  previewSwap(fromCoin: string, toCoin: string, amount: number, blockchain: string, address: string): Promise<string> {
    throw new Error("Method not implemented.");
  }

  sendSwap(priceRoute: any, privateKey: string, address: string): Promise<any> {
    throw new Error("Method not implemented.");
  }
  cancelLimitOrder(address: string, privateKey: string): Promise<any> {
    throw new Error("Method not implemented.");
  }
  getAllLimitOrder(address: string): Promise<any> {
    throw new Error("Method not implemented.");
  }
}

'''
'''--- src/blockchain/bitcoin/bitcoin.utils.ts ---
import ecfacory, {
  TinySecp256k1Interface,
  ECPairAPI,
  ECPairFactory,
} from "ecpair";
import { networks, payments, script } from "bitcoinjs-lib";
import { mnemonicToSeedSync } from "bip39";
const WAValidator = require("wallet-address-validator");
import axios from "axios";
import BIP32Factory from "bip32";
import * as ecc from "tiny-secp256k1";
import { BIP32Interface } from "bip32";
const bip32 = BIP32Factory(ecc);
import crypto from "crypto";
import { CredentialInterface } from "../../interfaces/credential.interface";
import { BlockchainService } from "../blockchain.interface";
import { UtilsShared } from "../../shared/utils/utils.shared";

const tinysecp: TinySecp256k1Interface = require("tiny-secp256k1");
const ECPair: ECPairAPI = ECPairFactory(tinysecp);

const NETWORK = process.env.NETWORK;

export class BitcoinUtils {
  static async newTxFee(comisionAdmin: any, amount: number, address: string) {
    try {
      const vault_address = await UtilsShared.getAddressVault("BTC");

      const comision = comisionAdmin / 100;

      var for_vault = amount * comision;

      const value_satoshi = 100000000;
      const amountSatoshi = amount * value_satoshi;
      const vaultSatoshi = parseInt(String(for_vault * value_satoshi));

      const data = {
        inputs: [
          {
            addresses: [address],
          },
        ],
        outputs: [
          {
            addresses: [address],
            value: parseInt(String(amountSatoshi)),
          },
        ],
      };

      if (vaultSatoshi !== 0 && vault_address) {
        data.outputs.push({
          addresses: [vault_address],
          value: parseInt(String(vaultSatoshi)),
        });
      }
      const config = {
        method: "post",
        url:
          "https://api.blockcypher.com/v1/btc/" +
          process.env.BLOCKCYPHER +
          "/txs/new",
        headers: {
          "Content-Type": "application/json",
        },
        data: data,
      };

      const fee = await axios(config)
        .then(async function (tmptx) {
          let inputs = tmptx.data.tx.inputs.length;
          let outputs = tmptx.data.tx.outputs.length;
          let bytes = inputs * 146 + outputs * 33 + 16;
          let resp = await axios
            .get("https://bitcoinfees.earn.com/api/v1/fees/recommended")
            .then(async function (response) {
              let price = response.data.hourFee;

              let fee = (bytes * price) / 100000000;

              return fee;
            })
            .catch(function (error) {
              throw new Error(`Error bitcoin tx'`);
            });

          return resp;
        })
        .catch(async function (error) {
          let inputs = error.response.data.tx.inputs.length;
          let outputs = error.response.data.tx.outputs.length;
          let bytes = inputs * 146 + outputs * 33 + 16;
          let resp = await axios
            .get("https://bitcoinfees.earn.com/api/v1/fees/recommended")
            .then(async function (response) {
              let price = response.data.hourFee;

              let fee = (bytes * price) / 100000000;

              return fee;
            })
            .catch(function (error) {
              throw new Error(`Error bitcoin tx'`);
            });

          return resp;
        });
      return fee;
    } catch (error: any) {
      throw new Error(`Error bitcoin tx ${error.message}`);
    }
  }
}

'''
'''--- src/blockchain/blockchain.interface.ts ---
import { CredentialInterface } from "../interfaces/credential.interface";
export interface BlockchainService {
  fromMnemonic(mnemonic: string): Promise<CredentialInterface>;
  fromPrivateKey(privateKey: string): Promise<CredentialInterface | null>;
  isAddress(address: string): Promise<boolean>;
  getBalance(address: string): Promise<number>;
  getBalanceToken(address: string, contract: string, decimals: number): Promise<number>;
  getFeeTransaction(coin: string, blockchain: string, typeTxn: string, amount: number | undefined, address: string | undefined): Promise<any>;
  sendTransfer(fromAddress: string, privateKey: string, toAddress: string, amount: number, coin: string): Promise<string>;
  sendTransferToken(fromAddress: string, privateKey: string, toAddress: string, amount: number, srcToken: any): Promise<string>;
  previewSwap(fromCoin: string, toCoin: string, amount: number, blockchain: string, address: string | undefined): Promise<any>;
  sendSwap(priceRoute: any, privateKey: string, address: string): Promise<any>;
  sendLimitOrder(
    fromCoin: string,
    toCoin: string,
    srcAmount: number,
    destAmount: number,
    blockchain: string,
    address: string,
    privateKey: string
  ): Promise<any>;
  cancelLimitOrder(blockchain: string, address: string, privateKey: string): Promise<any>;
  getAllLimitOrder(address: string): Promise<any>;
  getOrderBookCoinToCoin(fromCoin: string, toCoin: string): Promise<any>;
}

'''
'''--- src/blockchain/ethereum/ethereum.service.ts ---
import { BlockchainService } from "../blockchain.interface";
import { BigNumber, ethers, Wallet } from "ethers";
import Web3 from "web3";
import web3Utils from "web3-utils";
import { CredentialInterface } from "../../interfaces/credential.interface";
import axios from "axios";
import { constructCancelLimitOrder, constructGetLimitOrders, constructSimpleSDK, OptimalRate, SwapSide } from "@paraswap/sdk";
import abi from "../abi.json";
import { UtilsShared } from "../../shared/utils/utils.shared";
import {
  // swap methods
  constructPartialSDK,
  constructEthersContractCaller,
  constructAxiosFetcher,
  // limitOrders methods
  constructBuildLimitOrder,
  constructSignLimitOrder,
  constructPostLimitOrder,
  // extra types
  SignableOrderData,
  LimitOrderToSend,
} from "@paraswap/sdk";

const ETHEREUM_NETWORK = process.env.ETHEREUM_NETWORK;
const INFURA_PROJECT_ID = process.env.INFURA_PROJECT_ID;

const ETHERSCAN = process.env.ETHERSCAN;

const web3 = new Web3(new Web3.providers.HttpProvider(`https://${ETHEREUM_NETWORK}.infura.io/v3/${INFURA_PROJECT_ID}`));

const paraSwap = constructSimpleSDK({
  chainId: Number(process.env.PARASWAP_ETH),
  axios,
});

const dataToken = {
  decimals: 18,
  contract: "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",
};

const fetcher = constructAxiosFetcher(axios);
const provider = ethers.getDefaultProvider(1);

export class EthereumService implements BlockchainService {
  async fromMnemonic(mnemonic: string): Promise<CredentialInterface> {
    const wallet = ethers.Wallet.fromMnemonic(mnemonic);

    const credential: CredentialInterface = {
      name: "ETH",
      address: wallet.address,
      privateKey: wallet.privateKey,
    };

    return credential;
  }
  async fromPrivateKey(privateKey: string): Promise<CredentialInterface | null> {
    try {
      const wallet = web3.eth.accounts.privateKeyToAccount(privateKey);
      const credential: CredentialInterface = {
        name: "ETH",
        address: wallet.address,
        privateKey: privateKey,
      };

      return credential;
    } catch (error) {
      return null;
    }
  }
  async isAddress(address: string): Promise<boolean> {
    return await web3.utils.isAddress(address);
  }
  async getBalance(address: string): Promise<number> {
    try {
      let balance = await web3.eth.getBalance(address);

      let balanceTotal = 0;

      if (balance) {
        let value = Math.pow(10, 18);
        balanceTotal = Number(balance) / value;
        if (!balanceTotal) {
          balanceTotal = 0;
        }
        return balanceTotal;
      } else {
        return balanceTotal;
      }
    } catch (error) {
      return 0;
    }
  }

  async getBalanceToken(address: string, srcContract: string, decimals: number): Promise<number> {
    try {
      let contract = new web3.eth.Contract(abi as web3Utils.AbiItem[], srcContract);

      const balance = await contract.methods.balanceOf(address).call();

      console.log(balance);

      let balanceTotal = 0;

      if (balance) {
        let value = Math.pow(10, decimals);
        balanceTotal = balance / value;
        if (!balanceTotal) {
          balanceTotal = 0;
        }
        return balanceTotal;
      } else {
        return balanceTotal;
      }
    } catch (error) {
      return 0;
    }
  }

  async getFeeTransaction(coin: string, blockchain: string, typeTxn: string): Promise<any> {
    try {
      let comisionAdmin: any = await UtilsShared.getComision(blockchain);

      const response = await axios.get("https://api.etherscan.io/api?module=gastracker&action=gasoracle&apikey=ZAXW568KING2VVBGAMBU7399KH7NBB8QX6");
      const wei = response.data.result.SafeGasPrice;

      if (!wei) throw new Error(`Error getting gas price`);

      const feeMain = {
        coin,
        blockchain,
        fee: "",
      };

      let gasLimit = 21000;
      if (coin !== "ETH") {
        gasLimit = 55000;
      }

      let comision;

      if (typeTxn === "TRANSFER") {
        comision = comisionAdmin.transfer;
      } else if (typeTxn === "WITHDRAW") {
        comision = comisionAdmin.withdraw;
      }

      if (!comision) {
        feeMain.fee = web3.utils.fromWei(String(gasLimit * wei), "gwei");
      } else {
        feeMain.fee = String(Number(web3.utils.fromWei(String(gasLimit * wei), "gwei")) * 2);
      }
      return feeMain;
    } catch (err: any) {
      throw new Error(`Failed to get fee transaction, ${err.message}`);
    }
  }

  async sendTransfer(fromAddress: string, privateKey: string, toAddress: string, amount: number, coin: string): Promise<string> {
    try {
      const balance = await this.getBalance(fromAddress);
      if (balance < amount) {
        throw new Error(`Error: You do not have enough funds to make the transfer`);
      }

      const gasPrice = await web3.eth.getGasPrice();
      const gasLimit = 21000;
      const nonce = await web3.eth.getTransactionCount(fromAddress);

      const rawTransaction = {
        from: fromAddress,
        to: toAddress,
        value: web3.utils.toHex(web3.utils.toWei(amount.toLocaleString("fullwide", { useGrouping: false }), "ether")),
        gasPrice: web3.utils.toHex(gasPrice),
        gasLimit: web3.utils.toHex(gasLimit),
        nonce: nonce,
      };

      const signedTransaction = await web3.eth.accounts.signTransaction(rawTransaction, privateKey);

      if (!signedTransaction.rawTransaction) throw new Error(`Error: Failed to sign transaction`);

      const transactionHash = await web3.eth.sendSignedTransaction(signedTransaction.rawTransaction);

      if (!transactionHash.transactionHash) throw new Error(`Error: Failed to send transaction`);

      return transactionHash.transactionHash;

      // const response = await axios.get(
      //   "https://api.etherscan.io/api?module=gastracker&action=gasoracle&apikey=ZAXW568KING2VVBGAMBU7399KH7NBB8QX6"
      // );
      // let wei = response.data.result.SafeGasPrice;
      // let fee = Number(web3.utils.fromWei(String(21000 * wei), "gwei"));

      // const resp_comision = await GET_COMISION(coin);
      // const vault_address = await ADDRESS_VAULT(coin);

      // const comision = resp_comision.transfer / 100;

      // let amount_vault = Number((fee * comision).toFixed(18));

      // console.log(amount_vault, vault_address);

      // if (amount_vault !== 0 && vault_address) {
      //   await payCommissionETH(
      //     fromAddress,
      //     privateKey,
      //     vault_address,
      //     amount_vault
      //   );
      // }

      // if (!transactionHash.transactionHash) return false;

      // return transactionHash.transactionHash as string;
    } catch (err: any) {
      console.log(err);
      throw new Error(`Failed to send transfer, ${err.message}`);
    }
  }

  async sendTransferToken(fromAddress: string, privateKey: string, toAddress: string, amount: number, srcToken: any): Promise<string> {
    try {
      const balance = await this.getBalanceToken(fromAddress, srcToken.contract, srcToken.decimals);
      if (balance < amount) {
        throw new Error(`Error: You do not have enough funds to make the transfer`);
      }

      const provider = new ethers.providers.InfuraProvider(ETHEREUM_NETWORK, INFURA_PROJECT_ID);

      const minABI = abi;

      const wallet = new ethers.Wallet(privateKey);
      const signer = wallet.connect(provider);

      console.log(srcToken.contract);

      const contract = new ethers.Contract(srcToken.contract, minABI, signer);
      let value = Math.pow(10, srcToken.decimals);
      let srcAmount = amount * value;

      const gasPrice = signer.getGasPrice();

      const gasLimit = contract.estimateGas.transfer(toAddress, srcAmount.toLocaleString("fullwide", { useGrouping: false }));

      const tx = await contract.transfer(toAddress, srcAmount.toLocaleString("fullwide", { useGrouping: false }), {
        gasLimit: gasLimit,
        gasPrice: gasPrice,
      });

      console.log("PASOOO");

      if (!tx.hash) throw new Error(`Error tx hash.`);

      return tx.hash as string;
    } catch (err: any) {
      throw new Error(`Failed to send transfer, ${err.message}`);
    }
  }

  async previewSwap(fromCoin: string, toCoin: string, amount: number, blockchain: string, address: string): Promise<any> {
    try {
      let fromToken: any = await UtilsShared.getTokenContract(fromCoin, blockchain);
      let toToken: any = await UtilsShared.getTokenContract(toCoin, blockchain);

      if (!fromToken) {
        fromToken = dataToken;
      }
      if (!toToken) {
        toToken = dataToken;
      }

      let value = Math.pow(10, fromToken.decimals);
      const srcAmount = amount * value;

      const priceRoute: OptimalRate = await paraSwap.swap.getRate({
        srcToken: fromToken.contract,
        destToken: toToken.contract,
        amount: srcAmount.toLocaleString("fullwide", { useGrouping: false }),
      });

      const response = await axios.get("https://api.etherscan.io/api?module=gastracker&action=gasoracle&apikey=ZAXW568KING2VVBGAMBU7399KH7NBB8QX6");
      let wei = response.data.result.SafeGasPrice;

      const comision = await UtilsShared.getComision(blockchain);

      let feeTransfer = "0";
      let porcentFee = 0;

      if (comision.swap) {
        porcentFee = comision.swap / 100;
        if (comision.swap && fromCoin === "ETH") {
          feeTransfer = web3.utils.fromWei(String(21000 * wei), "gwei");
        } else {
          feeTransfer = web3.utils.fromWei(String(55000 * wei), "gwei");
        }
      }
      const feeGas = web3.utils.fromWei(String(Number(priceRoute.gasCost) * wei), "gwei");

      const srcFee = String(Number(feeTransfer) + Number(feeGas));

      let feeDefix = String(Number(srcFee) * porcentFee);

      const swapRate = String(
        Number(priceRoute.destAmount) / Math.pow(10, toToken.decimals) / (Number(priceRoute.srcAmount) / Math.pow(10, fromToken.decimals))
      );

      const dataSwap = {
        exchange: priceRoute.bestRoute[0].swaps[0].swapExchanges[0].exchange,
        fromAmount: priceRoute.srcAmount,
        fromDecimals: fromToken.decimals,
        toAmount: priceRoute.destAmount,
        toDecimals: toToken.decimals,
        block: priceRoute.blockNumber,
        swapRate,
        contract: priceRoute.contractAddress,
        fee: srcFee,
        feeDefix: feeDefix,
        feeTotal: String(Number(srcFee) + Number(feeDefix)),
      };

      return { dataSwap, priceRoute };
    } catch (err: any) {
      throw new Error(`Failed to get preview, ${err.message}`);
    }
  }

  async sendSwap(priceRoute: any, privateKey: string, address: string): Promise<any> {
    try {
      const signer = web3.eth.accounts.privateKeyToAccount(privateKey);

      const txParams = await paraSwap.swap.buildTx({
        srcToken: priceRoute.srcToken,
        destToken: priceRoute.destToken,
        srcAmount: priceRoute.srcAmount,
        destAmount: priceRoute.destAmount,
        priceRoute: priceRoute,
        userAddress: address,
      });

      const txSigned = await signer.signTransaction(txParams);

      if (!txSigned.rawTransaction) throw new Error(`Failed to sign swap.`);

      const result = await web3.eth.sendSignedTransaction(txSigned.rawTransaction);

      // setTimeout(() => {
      //   console.log("sleep");
      // }, 20000);

      const transactionHash = result.transactionHash;

      if (!transactionHash) throw new Error(`Failed to send swap, transaction Hash.`);

      const srcAmount = String(Number(priceRoute.srcAmount) / Math.pow(10, priceRoute.srcDecimals));
      const destAmount = String(Number(priceRoute.destAmount) / Math.pow(10, priceRoute.destDecimals));

      return {
        transactionHash,
        srcAmount: srcAmount,
        destAmount: destAmount,
        block: priceRoute.blockNumber,
      };
    } catch (err: any) {
      throw new Error(`Failed to send swap, ${err.message}`);
    }
  }

  public sendLimitOrder = async (
    fromCoin: string,
    toCoin: string,
    srcAmount: number,
    destAmount: number,
    blockchain: string,
    address: string,
    privateKey: string
  ) => {
    try {
      const signer = new ethers.Wallet(privateKey, provider);
      const account = signer.address;
      const contractCaller = constructEthersContractCaller(
        {
          ethersProviderOrSigner: signer,
          EthersContract: ethers.Contract,
        },
        account
      );

      const paraSwapLimitOrderSDK = constructPartialSDK(
        {
          chainId: 1,
          fetcher,
          contractCaller,
        },
        constructBuildLimitOrder,
        constructSignLimitOrder,
        constructPostLimitOrder
      );

      console.log(privateKey);

      let fromToken: any = await UtilsShared.getTokenContract(fromCoin, blockchain);
      let toToken: any = await UtilsShared.getTokenContract(toCoin, blockchain);

      if (!fromToken) {
        fromToken = dataToken;
      }
      if (!toToken) {
        toToken = dataToken;
      }

      let fromValue = Math.pow(10, fromToken.decimals);
      const srcAmountLimit = Math.round(srcAmount * fromValue);

      let toValue = Math.pow(10, toToken.decimals);
      const destAmountLimit = Math.round(destAmount * toValue);
      console.log("AQUI VA");
      console.log(fromToken.contract);
      console.log(toToken.contract);
      console.log(srcAmountLimit.toLocaleString("fullwide", { useGrouping: false }));
      console.log(destAmountLimit.toLocaleString("fullwide", { useGrouping: false }));
      const orderInput = {
        nonce: 1,
        expiry: 0, //Math.floor(Date.now() / 1000) + 60 * 60 * 24 * 7, // week from now, in sec
        makerAsset: fromToken.contract,
        takerAsset: toToken.contract,
        makerAmount: srcAmountLimit.toLocaleString("fullwide", { useGrouping: false }),
        takerAmount: destAmountLimit.toLocaleString("fullwide", { useGrouping: false }),
        maker: account,
      };

      const signableOrderData: SignableOrderData = await paraSwapLimitOrderSDK.buildLimitOrder(orderInput);

      console.log(signableOrderData);

      // const signature = await signer._signTypedData(signableOrderData.domain, signableOrderData.types, signableOrderData.data);

      const signature: string = await paraSwapLimitOrderSDK.signLimitOrder(signableOrderData);

      console.log(signature);

      const orderToPostToApi: LimitOrderToSend = {
        ...signableOrderData.data,
        signature,
      };
      console.log(orderToPostToApi);

      const contractToken = new ethers.Contract(fromToken.contract, abi, signer);

      const allowance = await contractToken.allowance(account, signableOrderData.domain.verifyingContract);

      if (allowance > srcAmountLimit.toLocaleString("fullwide", { useGrouping: false })) {
        const gasPrice = await signer.getGasPrice();

        const gasLimit = await contractToken.estimateGas.approve(
          signableOrderData.domain.verifyingContract,
          srcAmountLimit.toLocaleString("fullwide", { useGrouping: false })
        );

        const approve = await contractToken
          .connect(signer)
          .approve(signableOrderData.domain.verifyingContract, srcAmountLimit.toLocaleString("fullwide", { useGrouping: false }), {
            gasLimit: gasLimit,
            gasPrice: gasPrice,
          });

        console.log("APPROVE", approve);

        await approve.wait();
      }

      const newOrder = await paraSwapLimitOrderSDK.postLimitOrder(orderToPostToApi);
      console.log(newOrder);

      return newOrder;
    } catch (error: any) {
      console.log(error);
      throw new Error(`Failed to send order limit, ${error.message}`);
    }
  };

  public getAllLimitOrder = async (address: string) => {
    try {
      const web3Main = new Web3(new Web3.providers.HttpProvider(`https://mainnet.infura.io/v3/${INFURA_PROJECT_ID}`));

      const paraSwapLimitOrderSDK = constructPartialSDK(
        {
          chainId: 1,
          fetcher,
        },
        constructGetLimitOrders
      );

      const ordersData = await paraSwapLimitOrderSDK.getLimitOrders({
        maker: address,
        type: "LIMIT",
      });

      console.log(address);
      console.log("ORDERS", ordersData);

      const orders: any[] = [];

      for (let order of ordersData.orders) {
        let orderFin: any = order;
        const makerContract = new web3Main.eth.Contract(abi as web3Utils.AbiItem[], order.makerAsset);

        const fromSymbol = await makerContract.methods.symbol().call();
        const fromDecimals = await makerContract.methods.decimals().call();
        // const fromName = await makerContract.methods.name().call();

        const takerContract = new web3Main.eth.Contract(abi as web3Utils.AbiItem[], order.takerAsset);

        const toSymbol = await takerContract.methods.symbol().call();
        const toDecimals = await takerContract.methods.decimals().call();
        // const toName = await takerContract.methods.name().call();

        orderFin.blockchain = "ETHEREUM";
        orderFin.blockchainCoin = "ETH";

        orderFin.fromSymbol = fromSymbol;
        orderFin.toSymbol = toSymbol;

        orderFin.fromAmount = Number(orderFin.makerAmount) / Math.pow(10, fromDecimals);
        orderFin.toAmount = Number(orderFin.takerAmount) / Math.pow(10, toDecimals);

        orderFin.linkHash = UtilsShared.getLinkTransaction(orderFin.blockchainCoin, orderFin.orderHash);

        orders.push(orderFin);
      }

      return orders;
    } catch (error: any) {
      throw new Error(`Failed to get all order limit, ${error.message}`);
    }
  };

  public cancelLimitOrder = async (orderHash: string, privateKey: string) => {
    try {
      const signer = new ethers.Wallet(privateKey, provider);
      const account = signer.address;

      const contractCaller = constructEthersContractCaller(
        {
          ethersProviderOrSigner: signer,
          EthersContract: ethers.Contract,
        },
        account
      );

      const paraSwapLimitOrderSDK = constructPartialSDK(
        {
          chainId: 1,
          fetcher,
          contractCaller,
        },
        constructGetLimitOrders,
        constructCancelLimitOrder
      );

      const deleteTx: ethers.ContractTransaction = await paraSwapLimitOrderSDK.cancelLimitOrder(orderHash);

      console.log("deleteTx", deleteTx);

      return deleteTx;
    } catch (error: any) {
      throw new Error(`Failed to cancel order limit, ${error.message}`);
    }
  };

  public getOrderBookCoinToCoin = async (fromCoin: string, toCoin: string) => {
    try {
      const web3Main = new Web3(new Web3.providers.HttpProvider(`https://mainnet.infura.io/v3/${INFURA_PROJECT_ID}`));

      const ordersData = await axios.get("https://api.paraswap.io/ft/orders/1/orderbook/?makerAsset=" + fromCoin + "&takerAsset=" + toCoin);

      const orders: any[] = [];

      for (let order of ordersData.data.orders) {
        let orderFin: any = order;
        const makerContract = new web3Main.eth.Contract(abi as web3Utils.AbiItem[], order.makerAsset);

        const fromSymbol = await makerContract.methods.symbol().call();
        const fromDecimals = await makerContract.methods.decimals().call();
        // const fromName = await makerContract.methods.name().call();

        const takerContract = new web3Main.eth.Contract(abi as web3Utils.AbiItem[], order.takerAsset);

        const toSymbol = await takerContract.methods.symbol().call();
        const toDecimals = await takerContract.methods.decimals().call();
        // const toName = await takerContract.methods.name().call();

        orderFin.blockchain = "ETHEREUM";
        orderFin.blockchainCoin = "ETH";

        orderFin.fromSymbol = fromSymbol;
        orderFin.toSymbol = toSymbol;

        orderFin.fromAmount = Number(orderFin.makerAmount) / Math.pow(10, fromDecimals);
        orderFin.toAmount = Number(orderFin.takerAmount) / Math.pow(10, toDecimals);

        orderFin.linkHash = UtilsShared.getLinkTransaction(orderFin.blockchainCoin, orderFin.orderHash);

        orders.push(orderFin);
      }

      return orders;
    } catch (error: any) {
      throw new Error(`Failed to get order book, ${error.message}`);
    }
  };
}

'''
'''--- src/blockchain/index.ts ---
import { EthereumService } from "./ethereum/ethereum.service";
import { BinanceService } from "./binance/binance.service";
import { BitcoinService } from "./bitcoin/bitcoin.service";
import { NearService } from "./near/near.service";
import { TronService } from "./tron/tron.service";

export const blockchainService = {
  btc: new BitcoinService(),
  eth: new EthereumService(),
  bnb: new BinanceService(),
  near: new NearService(),
  trx: new TronService(),
};

'''
'''--- src/blockchain/near/near.service.ts ---
import { BlockchainService } from "../blockchain.interface";
import { KeyPair, keyStores, Near, Account, utils, ConnectedWalletAccount, WalletConnection, Contract } from "near-api-js";
import axios from "axios";
const nearSEED = require("near-seed-phrase");
import { CredentialInterface } from "../../interfaces/credential.interface";
import { BufferN } from "bitcoinjs-lib/src/types";
import BN from "bn.js";
import ref from "@ref-finance/ref-sdk";
import { ftGetTokensMetadata, fetchAllPools, estimateSwap, instantSwap } from "@ref-finance/ref-sdk";
import { Action, createTransaction, functionCall } from "near-api-js/lib/transaction";
import { PublicKey } from "near-api-js/lib/utils";
import e from "express";
import { AccountService, NearUtils } from "./near.utils";
import { UtilsShared } from "../../shared/utils/utils.shared";

const NETWORK = process.env.NETWORK || "testnet";
const ETHERSCAN = process.env.ETHERSCAN;

let NEAR: string;
let dataToken = {
  decimals: 24,
  contract: "",
};

if (process.env.NEAR_ENV === "testnet") {
  NEAR = "testnet";
  dataToken.contract = "wrap.testnet";
} else {
  NEAR = "near";
  dataToken.contract = "wrap.near";
}

export class NearService implements BlockchainService {
  getOrderBookCoinToCoin(fromCoin: string, toCoin: string): Promise<any> {
    throw new Error("Method not implemented.");
  }
  sendLimitOrder(
    fromCoin: string,
    toCoin: string,
    srcAmount: number,
    destAmount: number,
    blockchain: string,
    address: string,
    privateKey: string
  ): Promise<any> {
    throw new Error("Method not implemented.");
  }
  async fromMnemonic(mnemonic: string): Promise<CredentialInterface> {
    const walletSeed = await nearSEED.parseSeedPhrase(mnemonic);
    const keyPair = KeyPair.fromString(walletSeed.secretKey);
    const implicitAccountId = Buffer.from(keyPair.getPublicKey().data).toString("hex");

    const credential: CredentialInterface = {
      name: "NEAR",
      address: implicitAccountId,
      privateKey: walletSeed.secretKey,
    };

    return credential;
  }

  async fromPrivateKey(privateKey: string): Promise<CredentialInterface | null> {
    try {
      if (!privateKey.includes("ed25519:")) return null;
      const keyPair = KeyPair.fromString(privateKey);
      const implicitAccountId = Buffer.from(keyPair.getPublicKey().data).toString("hex");

      const credential: CredentialInterface = {
        name: "NEAR",
        address: implicitAccountId,
        privateKey: privateKey,
      };

      return credential;
    } catch (error) {
      return null;
    }
  }

  async importWallet(nearId: string, mnemonic: string): Promise<CredentialInterface> {
    const walletSeed = await nearSEED.parseSeedPhrase(mnemonic);
    const credential: CredentialInterface = {
      name: "NEAR",
      address: nearId,
      privateKey: walletSeed.secretKey,
    };

    return credential;
  }

  async isAddress(address: string): Promise<boolean> {
    const keyStore = new keyStores.InMemoryKeyStore();
    const near = new Near(NearUtils.ConfigNEAR(keyStore));
    const account = new AccountService(near.connection, address);
    const is_address = await account
      .state()
      .then((response) => {
        console.log(response);
        return true;
      })
      .catch((error) => {
        console.log(error);
        return false;
      });
    return is_address;
  }

  async getBalance(address: string): Promise<number> {
    try {
      let balanceTotal = 0;

      const keyStore = new keyStores.InMemoryKeyStore();
      const near = new Near(NearUtils.ConfigNEAR(keyStore));

      const account = new AccountService(near.connection, address);

      const balanceAccount = await account.state();
      const valueStorage = Math.pow(10, 19);
      const valueYocto = Math.pow(10, 24);
      const storage = (balanceAccount.storage_usage * valueStorage) / valueYocto;
      balanceTotal = Number(balanceAccount.amount) / valueYocto - storage - 0.05;
      if (balanceTotal === null || balanceTotal < 0) {
        balanceTotal = 0;
      }
      return balanceTotal;
    } catch (error) {
      return 0;
    }
  }

  async getBalanceToken(address: string, srcContract: string, decimals: number): Promise<number> {
    try {
      const keyStore = new keyStores.InMemoryKeyStore();
      const near = new Near(NearUtils.ConfigNEAR(keyStore));

      const account = new AccountService(near.connection, address);

      const balance = await account.viewFunction({
        contractId: srcContract,
        methodName: "ft_balance_of",
        args: { account_id: address },
      });

      if (!balance) return 0;

      return balance / Math.pow(10, decimals);
    } catch (error) {
      return 0;
    }
  }

  async getFeeTransaction(coin: string, blockchain: string, typeTxn: string): Promise<any> {
    try {
      let comisionAdmin: any = await UtilsShared.getComision(blockchain);

      const feeMain = {
        coin,
        blockchain,
        fee: "",
      };

      let comision;

      if (typeTxn === "TRANSFER") {
        comision = comisionAdmin.transfer;
      } else if (typeTxn === "WITHDRAW") {
        comision = comisionAdmin.withdraw;
      }

      if (!comision) {
        feeMain.fee = "0.01";
      } else {
        feeMain.fee = "0.01";
      }
      return feeMain;
    } catch (err: any) {
      throw new Error(`Failed to get fee transfer, ${err.message}`);
    }
  }

  async sendTransfer(fromAddress: string, privateKey: string, toAddress: string, amount: number, coin: string): Promise<string> {
    try {
      const balance = await this.getBalance(fromAddress);

      if (balance < amount) throw new Error(`Error: You do not have enough funds to make the transfer`);

      const keyStore = new keyStores.InMemoryKeyStore();

      const keyPair = KeyPair.fromString(privateKey);
      keyStore.setKey(NETWORK, fromAddress, keyPair);

      const near = new Near(NearUtils.ConfigNEAR(keyStore));

      const account = new AccountService(near.connection, fromAddress);

      const amountInYocto = utils.format.parseNearAmount(String(amount));

      if (!amountInYocto) throw new Error(`Failed to send transfer.`);

      const response = await account.sendMoney(toAddress, new BN(amountInYocto));

      if (!response.transaction.hash) throw new Error(`Failed to send transfer.`);

      return response.transaction.hash as string;
    } catch (err: any) {
      throw new Error(`Failed to send transfer, ${err.message}`);
    }
  }

  async sendTransferToken(fromAddress: string, privateKey: string, toAddress: string, amount: number, srcToken: any): Promise<string> {
    try {
      const balance = await this.getBalanceToken(fromAddress, srcToken.contract, srcToken.decimals);
      if (balance < amount) {
        throw new Error(`Error: You do not have enough funds to make the transfer`);
      }

      const keyStore = new keyStores.InMemoryKeyStore();

      const keyPair = KeyPair.fromString(privateKey);
      keyStore.setKey(process.env.NEAR_ENV!, fromAddress, keyPair);
      const near = new Near(NearUtils.ConfigNEAR(keyStore));

      const account = new AccountService(near.connection, fromAddress);

      const activated = await activateAccount(account, fromAddress, toAddress, srcToken.contract, near);

      if (!activated) throw new Error(`Error: To activated account`);

      let value = Math.pow(10, srcToken.decimals);
      let srcAmount = Math.round(amount * value);

      // console.log(srcAmount.toLocaleString("fullwide", { useGrouping: false }), (amount * value).toFixed());

      const trx = await NearUtils.createTransaction(
        srcToken.contract,
        [
          await functionCall(
            "ft_transfer",
            {
              receiver_id: toAddress,
              amount: srcAmount.toLocaleString("fullwide", { useGrouping: false }),
            },
            new BN("30000000000000"),
            new BN("1")
          ),
        ],
        fromAddress,
        near
      );

      const result = await account.signAndSendTrx(trx);

      if (!result.transaction.hash) throw new Error(`Failed to send transfer.`);

      return result.transaction.hash as string;
    } catch (err: any) {
      throw new Error(`Failed to send transfer, ${err.message}`);
    }
  }

  async previewSwap(fromCoin: string, toCoin: string, amount: number, blockchain: string, address: string): Promise<any> {
    try {
      let fromToken: any = await UtilsShared.getTokenContract(fromCoin, blockchain);
      let toToken: any = await UtilsShared.getTokenContract(toCoin, blockchain);

      if (!fromToken) {
        fromToken = dataToken;
      }
      if (!toToken) {
        toToken = dataToken;
      }

      const tokenIn = fromToken.contract;
      const tokenOut = toToken.contract;

      const tokensMetadata = await ftGetTokensMetadata([tokenIn, tokenOut]);

      const transactionsRef = await NearUtils.getTxSwapRef(tokensMetadata[tokenIn], tokensMetadata[tokenOut], amount, address);

      const transactionsDcl = await NearUtils.getTxSwapDCL(tokensMetadata[tokenIn], tokensMetadata[tokenOut], amount);

      const minAmountRef = await NearUtils.getMinAmountOut(transactionsRef, tokenOut);
      let minAmountDcl: any;
      if (NETWORK === "testnet") {
        minAmountDcl = 0;
      } else {
        minAmountDcl = await NearUtils.getMinAmountOut(transactionsDcl, tokenOut);
      }

      console.log(minAmountRef, minAmountDcl);

      let txMain: any;
      let minAmountOut: any = 0;

      // if (minAmountRef && !minAmountDcl) {
      //   console.log("REF");
      //   txMain = transactionsRef;
      //   minAmountOut = minAmountRef;
      // } else if (!minAmountRef && minAmountDcl) {
      //   console.log("DCL");
      //   txMain = transactionsDcl;
      //   minAmountOut = minAmountDcl;
      // } else if (minAmountRef && minAmountDcl) {
      //   if (minAmountRef > minAmountDcl) {
      //     console.log("REF");
      //     txMain = transactionsRef;
      //     minAmountOut = minAmountRef;
      //   } else {
      //     console.log("DCL");
      //     txMain = transactionsDcl;
      //     minAmountOut = minAmountDcl;
      //   }
      // }

      txMain = transactionsRef;
      minAmountOut = minAmountRef;

      if (!txMain || !minAmountOut) return;

      const transaction = txMain.find(
        (element: { functionCalls: { methodName: string }[] }) => element.functionCalls[0].methodName === "ft_transfer_call"
      );

      if (!transaction) return false;

      const transfer: any = transaction.functionCalls[0].args;
      const amountIn = transfer.amount;

      const comision = await UtilsShared.getComision(blockchain);
      let feeTransfer = "0.1";
      let porcentFee = 0.1;

      if (comision.swap) {
        porcentFee = comision.swap / 100;
      }

      let feeDefix = String(Number(amount) * porcentFee);

      let secondNum;
      if (tokenOut === `wrap.${NEAR}`) {
        secondNum = minAmountOut;
        minAmountOut = utils.format.parseNearAmount(String(minAmountOut));
      } else {
        secondNum = minAmountOut / Math.pow(10, Number(tokensMetadata[tokenOut].decimals));
      }

      const firstNum = Number(amountIn) / Math.pow(10, Number(tokensMetadata[tokenIn].decimals));

      const swapRate = String(secondNum / firstNum);

      const dataSwap = {
        exchange: "Ref Finance",
        fromAmount: amountIn,
        fromDecimals: tokensMetadata[tokenIn].decimals,
        toAmount: String(minAmountOut),
        toDecimals: tokensMetadata[tokenOut].decimals,
        block: null,
        swapRate,
        contract: tokenIn,
        fee: String(porcentFee),
        feeDefix: feeDefix,
        feeTotal: String(Number(feeDefix)),
      };

      return { dataSwap, priceRoute: { tokenIn, tokenOut, amountIn, minAmountOut: String(minAmountOut), txMain } };
    } catch (error: any) {
      console.log(error);

      throw new Error(`Feiled to get preview swap., ${error.message}`);
    }
  }

  async sendSwap(priceRoute: any, privateKey: string, address: string): Promise<any> {
    try {
      const transaction = priceRoute.txMain.find(
        (element: { functionCalls: { methodName: string }[] }) => element.functionCalls[0].methodName === "ft_transfer_call"
      );

      if (!transaction) throw new Error(`Failed to create tx.`);

      const tokensMetadata = await ftGetTokensMetadata([priceRoute.tokenIn, priceRoute.tokenOut]);

      const tokenIn = tokensMetadata[priceRoute.tokenIn];
      const tokenOut = tokensMetadata[priceRoute.tokenOut];

      const keyStore = new keyStores.InMemoryKeyStore();

      const keyPair = KeyPair.fromString(privateKey);
      keyStore.setKey(process.env.NEAR_ENV!, address, keyPair);
      const near = new Near(NearUtils.ConfigNEAR(keyStore));

      const account = new AccountService(near.connection, address);

      let nearTransactions = [];

      if (priceRoute.tokenIn.includes("wrap.")) {
        const trx = await NearUtils.createTransaction(
          priceRoute.tokenIn,
          [await functionCall("near_deposit", {}, new BN("300000000000000"), new BN(priceRoute.amountIn))],
          address,
          near
        );

        nearTransactions.push(trx);
      }

      const trxs = await Promise.all(
        priceRoute.txMain.map(async (tx: any) => {
          return await NearUtils.createTransaction(
            tx.receiverId,
            tx.functionCalls.map((fc: any) => {
              return functionCall(fc.methodName, fc.args, fc.gas, new BN(String(utils.format.parseNearAmount(fc.amount))));
            }),
            address,
            near
          );
        })
      );

      nearTransactions = nearTransactions.concat(trxs);

      if (priceRoute.tokenOut.includes("wrap.")) {
        const trx = await NearUtils.createTransaction(
          priceRoute.minAmountOut,
          [await functionCall("near_withdraw", { amount: priceRoute.minAmountOut }, new BN("300000000000000"), new BN("1"))],
          address,
          near
        );

        nearTransactions.push(trx);
      }

      let resultSwap: any;
      for (let trx of nearTransactions) {
        const result = await account.signAndSendTrx(trx);

        if (trx.actions[0].functionCall.methodName === "ft_transfer_call") {
          resultSwap = result;
        }
      }

      if (!resultSwap.transaction.hash) return false;

      const transactionHash = resultSwap.transaction.hash;
      const block = resultSwap.transaction_outcome.block_hash;

      if (!transactionHash) return false;

      const srcAmount = String(Number(priceRoute.amountIn) / Math.pow(10, tokenIn.decimals));
      const destAmount = String(Number(priceRoute.minAmountOut) / Math.pow(10, tokenOut.decimals));

      return {
        transactionHash,
        srcAmount,
        destAmount,
        block,
      };
    } catch (err: any) {
      console.log(err);
      throw new Error(`Failed to send swap, ${err.message}`);
    }
  }
  cancelLimitOrder(address: string, privateKey: string): Promise<any> {
    throw new Error("Method not implemented.");
  }
  getAllLimitOrder(address: string): Promise<any> {
    throw new Error("Method not implemented.");
  }
}

async function activateAccount(account: AccountService, fromAddress: string, toAddress: string, srcToken: string, near: Near) {
  try {
    if (!toAddress) return false;
    const contract: any = new Contract(
      account, // the account object that is connecting
      srcToken,
      {
        viewMethods: ["storage_balance_of"], // view methods do not change state but usually return a value
        changeMethods: [], // change methods modify state
      }
    );

    const addressActivate = await contract.storage_balance_of({
      account_id: toAddress,
    });

    if (addressActivate) return true;

    const trx = await NearUtils.createTransaction(
      srcToken,
      [
        await functionCall(
          "storage_deposit",
          {
            registration_only: true,
            account_id: toAddress,
          },
          new BN("300000000000000"),
          new BN("100000000000000000000000")
        ),
      ],
      fromAddress,
      near
    );

    const result = await account.signAndSendTrx(trx);

    if (!result.transaction.hash) return false;
    console.log("ACTIVATE END");
    return true;
  } catch (error) {
    console.log(error);
    console.log("ACTIVATE ERR");
    return false;
  }
}

'''
'''--- src/blockchain/near/near.utils.ts ---
import axios from "axios";
import dbConnect from "../../config/postgres";
import { AddressEntity } from "../../modules/address/entities/address.entity";
import { Action, createTransaction } from "near-api-js/lib/transaction";
import { Account, ConnectedWalletAccount, Contract, Near, WalletConnection, utils } from "near-api-js";
import { PublicKey } from "near-api-js/lib/utils";
import { DCLSwap, Pool, StablePool, SwapOptions, estimateSwap, fetchAllPools, getDCLPoolId, getStablePools, instantSwap } from "@ref-finance/ref-sdk";

const nearSEED = require("near-seed-phrase");

const NETWORK = process.env.NETWORK || "testnet";

let NEAR: string;
if (process.env.NEAR_ENV === "testnet") {
  NEAR = "testnet";
} else {
  NEAR = "near";
}

export class AccountService extends Account {
  public async signAndSendTrx(trx: any) {
    return await this.signAndSendTransaction(trx);
  }
}

export class NearUtils {
  static ConfigNEAR(keyStores: any) {
    switch (NETWORK) {
      case "mainnet":
        return {
          networkId: "mainnet",
          nodeUrl: "https://rpc.mainnet.near.org",
          keyStore: keyStores,
          walletUrl: "https://wallet.near.org",
          helperUrl: "https://helper.mainnet.near.org",
          explorerUrl: "https://explorer.mainnet.near.org",
        };
      case "testnet":
        return {
          networkId: "testnet",
          keyStore: keyStores,
          nodeUrl: "https://rpc.testnet.near.org",
          walletUrl: "https://wallet.testnet.near.org",
          helperUrl: "https://helper.testnet.near.org",
          explorerUrl: "https://explorer.testnet.near.org",
        };
      default:
        throw new Error(`Unconfigured environment '${NETWORK}'`);
    }
  }

  static async createTransaction(receiverId: string, actions: Action[], userAddress: string, near: Near) {
    const walletConnection = new WalletConnection(near, null);
    const wallet = new ConnectedWalletAccount(walletConnection, near.connection, userAddress);

    if (!wallet || !near) {
      throw new Error(`No active wallet or NEAR connection.`);
    }

    const localKey = await near?.connection.signer.getPublicKey(userAddress, near.connection.networkId);

    const accessKey = await wallet.accessKeyForTransaction(receiverId, actions, localKey);

    if (!accessKey) {
      throw new Error(`Cannot find matching key for transaction sent to ${receiverId}`);
    }

    const block = await near?.connection.provider.block({
      finality: "final",
    });

    if (!block) {
      throw new Error(`Cannot find block for transaction sent to ${receiverId}`);
    }

    const blockHash = utils.serialize.base_decode(block?.header?.hash);
    //const blockHash = nearAPI.utils.serialize.base_decode(accessKey.block_hash);

    const publicKey = PublicKey.from(accessKey.public_key);
    //const nonce = accessKey.access_key.nonce + nonceOffset
    const nonce = ++accessKey.access_key.nonce;

    return createTransaction(userAddress, publicKey, receiverId, nonce, actions, blockHash);
  }

  static async getTxSwapRef(tokenMetadataA: any, tokenMetadataB: any, amount: number, address: string) {
    const { ratedPools, unRatedPools, simplePools } = await fetchAllPools();

    const stablePools: Pool[] = unRatedPools.concat(ratedPools);

    const stablePoolsDetail: StablePool[] = await getStablePools(stablePools);

    const options: SwapOptions = {
      enableSmartRouting: true,
      stablePools,
      stablePoolsDetail,
    };

    const swapAlls = await estimateSwap({
      tokenIn: tokenMetadataA,
      tokenOut: tokenMetadataB,
      amountIn: String(amount),
      simplePools: simplePools,
      options,
    });

    const transactionsRef = await instantSwap({
      tokenIn: tokenMetadataA,
      tokenOut: tokenMetadataB,
      amountIn: String(amount),
      swapTodos: swapAlls,
      slippageTolerance: 0.01,
      AccountId: address,
    });

    return transactionsRef;
  }

  static async getTxSwapDCL(tokenMetadataA: any, tokenMetadataB: any, amount: number) {
    const nearUsd = await getNearPrice();

    const fee = 2000;

    const pool_ids = [getDCLPoolId(tokenMetadataA.id, tokenMetadataB.id, fee)];

    const transactionsDcl = await DCLSwap({
      swapInfo: {
        amountA: String(amount),
        tokenA: tokenMetadataA,
        tokenB: tokenMetadataB,
      },
      Swap: {
        pool_ids,
        min_output_amount: String(Math.round(amount * nearUsd * 0.99 * Math.pow(10, tokenMetadataB.decimals))),
      },
      AccountId: tokenMetadataA.id,
    });

    return transactionsDcl;
  }

  static getMinAmountOut(trxSwap: any, tokenOut: string) {
    const transaction = trxSwap.find(
      (element: {
        functionCalls: {
          methodName: string;
        }[];
      }) => element.functionCalls[0].methodName === "ft_transfer_call"
    );

    if (!transaction) return false;

    const argsMsg = JSON.parse(transaction.functionCalls[0].args.msg);

    console.log(argsMsg);

    if (Object.keys(argsMsg).includes("actions")) {
      let minAmountOut = 0;
      for (const action of argsMsg.actions) {
        if (action.token_out === tokenOut) {
          if (action.token_out === `wrap.${NEAR}`) {
            minAmountOut += Number(utils.format.formatNearAmount(action.min_amount_out));
          } else {
            console.log(Number(action.min_amount_out));
            minAmountOut += Number(action.min_amount_out);
          }
        }
      }
      return minAmountOut;
    } else if (Object.keys(argsMsg).includes("Swap")) {
      if (tokenOut === `wrap.${NEAR}`) {
        return Number(utils.format.formatNearAmount(argsMsg.Swap.min_output_amount));
      
      }
      return Number(argsMsg.Swap.min_output_amount);
    } else {
      return 0;
    }
  }
}
async function getNearPrice() {
  try {
    const nearPrice: any = await axios.get("https://api.coingecko.com/api/v3/simple/price?ids=NEAR&vs_currencies=USD");

    if (!nearPrice.data.near.usd) throw new Error("Error near usd");
    return nearPrice.data.near.usd;
  } catch (error) {
    const nearPrice = await axios.get("https://nearblocks.io/api/near-price");
    if (!nearPrice.data.usd) throw new Error("Error near usd");
    return nearPrice.data.usd;
  }
}

'''
'''--- src/blockchain/tron/tron.service.ts ---
import { BlockchainService } from "../blockchain.interface";
import { CredentialInterface } from "../../interfaces/credential.interface";
import { UtilsShared } from "../../shared/utils/utils.shared";
const TronWeb = require("tronweb");
const HttpProvider = TronWeb.providers.HttpProvider;

const TRON_PRO_API_KEY = process.env.TRON_PRO_API_KEY;

const FULL_NODE = process.env.FULL_NODE;
const SOLIDITY_NODE = process.env.SOLIDITY_NODE;
const EVENT_SERVER = process.env.EVENT_SERVER;

const fullNode = new HttpProvider(FULL_NODE);
const solidityNode = new HttpProvider(SOLIDITY_NODE);
const eventServer = new HttpProvider(EVENT_SERVER);

const tronWeb = new TronWeb(fullNode, solidityNode, eventServer);
tronWeb.setHeader({ "TRON-PRO-API-KEY": TRON_PRO_API_KEY });

export class TronService implements BlockchainService {
  getOrderBookCoinToCoin(fromCoin: string, toCoin: string): Promise<any> {
    throw new Error("Method not implemented.");
  }
  sendLimitOrder(
    fromCoin: string,
    toCoin: string,
    srcAmount: number,
    destAmount: number,
    blockchain: string,
    address: string,
    privateKey: string
  ): Promise<any> {
    throw new Error("Method not implemented.");
  }
  async fromMnemonic(mnemonic: string): Promise<CredentialInterface> {
    const account = await tronWeb.fromMnemonic(mnemonic);
    let privateKey;

    if (account.privateKey.indexOf("0x") === 0) {
      privateKey = account.privateKey.slice(2);
    } else {
      privateKey = account.privateKey;
    }

    const credential: CredentialInterface = {
      name: "TRX",
      address: account.address,
      privateKey: privateKey,
    };

    return credential;
  }
  async fromPrivateKey(privateKey: string): Promise<CredentialInterface | null> {
    try {
      const address = tronWeb.address.fromPrivateKey(privateKey);

      if (!address) return null;

      const credential: CredentialInterface = {
        name: "TRX",
        address: address,
        privateKey: privateKey,
      };

      return credential;
    } catch (error) {
      return null;
    }
  }
  async isAddress(address: string): Promise<boolean> {
    return await tronWeb.isAddress(address);
  }
  async getBalance(address: string): Promise<number> {
    try {
      let balanceTotal = 0;
      const balance = await tronWeb.trx.getBalance(address);
      if (balance) {
        let value = Math.pow(10, 6);
        balanceTotal = balance / value;
        if (!balanceTotal) {
          balanceTotal = 0;
        }
        return balanceTotal;
      } else {
        return balanceTotal;
      }
    } catch (error) {
      return 0;
    }
  }
  async getBalanceToken(address: string, srcContract: string, decimals: number): Promise<number> {
    try {
      tronWeb.setAddress(srcContract);
      const contract = await tronWeb.contract().at(srcContract);

      const balance = await contract.balanceOf(address).call();

      let balanceTotal = 0;

      if (balance) {
        let value = Math.pow(10, decimals);
        balanceTotal = balance / value;
        if (!balanceTotal) {
          balanceTotal = 0;
        }
        return balanceTotal;
      } else {
        return balanceTotal;
      }
    } catch (error) {
      return 0;
    }
  }

  cancelLimitOrder(address: string, privateKey: string): Promise<any> {
    throw new Error("Method not implemented.");
  }
  getAllLimitOrder(address: string): Promise<any> {
    throw new Error("Method not implemented.");
  }

  async getFeeTransaction(coin: string, blockchain: string, typeTxn: string): Promise<any> {
    try {
      let comisionAdmin: any = await UtilsShared.getComision(blockchain);

      const feeMain = {
        coin,
        blockchain,
        fee: "",
      };

      let comision;

      if (typeTxn === "TRANSFER") {
        comision = comisionAdmin.transfer;
      } else if (typeTxn === "WITHDRAW") {
        comision = comisionAdmin.withdraw;
      }

      if (!comision) {
        feeMain.fee = "0";
      } else {
        feeMain.fee = "0";
      }
      return feeMain;
    } catch (err: any) {
      throw new Error(`Failed to get fee transaction, ${err.message}`);
    }
  }

  async sendTransfer(fromAddress: string, privateKey: string, toAddress: string, amount: number, coin: string): Promise<string> {
    try {
      const balance = await this.getBalance(fromAddress);
      if (balance < amount) {
        throw new Error(`Error: You do not have enough funds to make the transfer`);
      }

      tronWeb.setAddress(fromAddress);

      let value = Math.pow(10, 6);
      let srcAmount = parseInt(String(amount * value));

      const tx = await tronWeb.transactionBuilder
        .sendTrx(toAddress, srcAmount)
        .then(function (response: any) {
          return response;
        })
        .catch(function (error: any) {
          return false;
        });

      if (!tx) throw new Error(`Error to do build transaction`);

      const signedTxn = await tronWeb.trx
        .sign(tx, privateKey)
        .then(function (response: any) {
          return response;
        })
        .catch(function (error: any) {
          return false;
        });

      if (!signedTxn.signature) {
        throw new Error(`Error to sign transaction`);
      }

      const result = await tronWeb.trx.sendRawTransaction(signedTxn);

      if (!result.txid) throw new Error(`Failed to send raw tx.`);

      return result.txid as string;
    } catch (err: any) {
      throw new Error(`Failed to send transfer, ${err.message}`);
    }
  }

  async sendTransferToken(fromAddress: string, privateKey: string, toAddress: string, amount: number, srcToken: any): Promise<string> {
    try {
      const balance = await this.getBalanceToken(fromAddress, srcToken.contract, srcToken.decimals);
      if (balance < amount) {
        throw new Error(`Error: You do not have enough funds to make the transfer`);
      }

      const tronWebPK = new TronWeb(fullNode, solidityNode, eventServer, privateKey);
      tronWebPK.setHeader({ "TRON-PRO-API-KEY": TRON_PRO_API_KEY });

      tronWebPK.setAddress(fromAddress);

      let value = Math.pow(10, srcToken.decimals);
      let srcAmount = parseInt(String(amount * value));

      const contract = await tronWebPK.contract().at(srcToken.contract);
      const transaction = await contract
        .transfer(toAddress, srcAmount)
        .send()
        .then((output: any) => {
          return output;
        });

      return transaction;
    } catch (err: any) {
      throw new Error(`Failed to send transfer token, ${err.message}`);
    }
  }

  previewSwap(fromCoin: string, toCoin: string, amount: number, blockchain: string, address: string): Promise<string> {
    throw new Error("Method not implemented.");
  }

  sendSwap(priceRoute: any, privateKey: string, address: string): Promise<string> {
    throw new Error("Method not implemented.");
  }
}

'''
'''--- src/config/cacheConfig.ts ---
import NodeCache from "node-cache";

export class CacheConfig {
  static nodeCache: NodeCache = new NodeCache();
}

'''
'''--- src/config/dataSource.ts ---
import "dotenv/config";
import path from "path";
import { DataSource } from "typeorm";

const AppDataSource = new DataSource({
  type: "postgres",
  host: process.env.HOST_ORM,
  port: Number(process.env.PORT_DB),
  username: process.env.USER_ORM,
  password: process.env.PASSWORD_ORM,
  database: process.env.DATABASE_ORM,
  synchronize: false,
  logging: false,
  entities: [__dirname + "/../modules/**/*.entity{.ts,.js}"],
  subscribers: [],
  migrations: [path.join(__dirname, "../migrations/*")],
});

export default AppDataSource;

'''
'''--- src/config/mongo.ts ---
// import "dotenv/config";
// import { connect } from "mongoose";

// async function dbConnect(): Promise<void> {
//   const DB_URI = <string>process.env.DB_URI;
//   await connect(DB_URI);
// }

// export default dbConnect;

'''
'''--- src/config/multer.ts ---
import multer, { Multer } from "multer";
import { v4 as uuidv4 } from "uuid";
import path from "path";

class MulterConfig {
  private storage: multer.StorageEngine;

  constructor() {
    this.storage = multer.diskStorage({
      destination: path.resolve("./uploads/"),
      filename: (req, file, cb) => {
        const fileName = this.generateFileName(file.originalname);
        cb(null, fileName);
      },
    });
  }

  private generateFileName = (originalFileName: string) => {
    const uuid = uuidv4();
    const extension = originalFileName.split(".").pop();
    return `${uuid}.${extension}`;
  };

  public upload(): Multer {
    return multer({
      storage: this.storage,
    });
  }
}

export default MulterConfig;

'''
'''--- src/config/postgres.ts ---
import { Pool, PoolConfig, Client } from "pg";
// Coloca aquí tus credenciales

async function dbConnect(): Promise<Pool> {
  const connectionData: PoolConfig = {
    user: process.env.USER_DB,
    host: process.env.HOST_DB,
    database: process.env.DATABASE,
    password: process.env.PASSWORD_DB,
    port: Number(process.env.PORT_DB),
  };
  return new Pool(connectionData);
}

export default dbConnect;

'''
'''--- src/config/swagger.ts ---
import path from "path";
import swaggerJSDoc, { OAS3Definition, OAS3Options } from "swagger-jsdoc";

const swaggerDefinition: OAS3Definition = {
  openapi: "3.0.3",
  info: {
    title: "Defix3 - Api V2",
    description: "End Points for Defix3 API V2",
    contact: {
      email: "juanochando00@gmail.com",
    },
    version: "2.0.0",
  },
  servers: [
    {
      url: `https://defix3.com:${process.env.PORT}/api/v2/`,
    },
    {
      url: `http://localhost:${process.env.PORT}/api/v2/`,
    },
  ],
  tags: [
    {
      name: "Wallet",
      description: "EndPoints asociados a la creacion y funciones basicas de las wallets.",
    },
    {
      name: "User",
      description: "EndPoints asociados a la configuracion del perfil de los usuarios.",
    },
    {
      name: "2FA",
      description: "EndPoints asociados al 2FA.",
    },
    {
      name: "Balance",
      description: "EndPoints asociados al balance y Cryptomonedas",
    },
    {
      name: "General",
      description: "EndPoints variados",
    },
    {
      name: "Transfer",
      description: "EndPoints asociados a las transferencias.",
    },
    {
      name: "Withdraw",
      description: "EndPoints asociados a los retiros.",
    },
    {
      name: "Swap",
      description: "EndPoints asociados a al Swap. Solo ETH, BSC y NEAR",
    },
    {
      name: "LimitOrder",
      description: "EndPoints asociados a al Limit Order. Solo ETH",
    },
    {
      name: "TransactionHistory",
      description: "EndPoint ver el historial de Transactiones",
    },
    {
      name: "Frequent",
      description: "EndPoints para los usuarios frecuentes al hacer transferencias",
    },
    {
      name: "Subscription",
      description: "EndPoint para guardar correo de usuario que quiera recibir notificaciones de Defix3",
    },
    {
      name: "Bridge",
      description: "EndPoint asociados a al Bridge.",
    },
  ],
  components: {
    securitySchemes: {
      bearerAuth: {
        type: "http",
        scheme: "bearer",
      },
    },
  },
};

const swaggerOptions: OAS3Options = {
  swaggerDefinition,
  apis: [path.join(__dirname, "../modules/**/{routes,routes.*}{.ts,.js}")],
};

export default swaggerJSDoc(swaggerOptions);

'''
'''--- src/config/webSockets.ts ---
import { Server as HttpServer } from "http";
import { Server as HttpsServer } from "https";
import { EventEmitter } from "events";
import socketIo, { Socket } from "socket.io";
import NodeCache from "node-cache";
const nodeCache = new NodeCache();

class WebSocketServer {
  public io: socketIo.Server;

  constructor(httpServer: HttpServer | HttpsServer) {
    this.io = new socketIo.Server(httpServer);
    this.setup();
  }

  public setup(): void {
    this.io.on("connection", (socket: Socket) => {
      console.log("User APP " + socket.id + " connected");

      if (nodeCache.has("getRanking")) {
        const data = nodeCache.get("getRanking");
        this.io.emit("getRanking", data);
      }
    });
  }
}

export default WebSocketServer;

'''
'''--- src/interfaces/balance.interface.ts ---
export interface Balance {
  coin: string;
  balance: number;
  icon: string;
}

'''
'''--- src/interfaces/balance_crypto.interface.ts ---
import { Balance } from "./balance.interface";

export interface BalanceCrypto {
  coin: string;
  blockchain: string;
  icon: string;
  balance: number;
  tokens: Array<Balance>;
}

'''
'''--- src/interfaces/credential.interface.ts ---
export interface CredentialInterface {
  name: string;
  address: string;
  privateKey: string;
}

'''
'''--- src/interfaces/wallet.interface.ts ---
import { CredentialInterface } from "../interfaces/credential.interface";

export interface WalletInterface {
  defixId: string;
  credentials: Array<CredentialInterface>;
}

'''
'''--- src/migrations/1678390710531-migration.ts ---
import { MigrationInterface, QueryRunner } from "typeorm";

export class migration1678390710531 implements MigrationInterface {
    name = 'migration1678390710531'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "users" ("id" SERIAL NOT NULL, "defix_id" character varying NOT NULL, "email" character varying, "import_id" character varying NOT NULL, "name" character varying, "lastname" character varying, "close_sessions" boolean DEFAULT false, "dosfa" boolean DEFAULT false, "legal_document" character varying, "type_document" character varying, "secret" character varying, "flag_send" boolean, "flag_receive" boolean, "flag_dex" boolean, "flag_fiat" boolean, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "UQ_5b4b4aa7a7fa89043d7f1ecc415" UNIQUE ("defix_id"), CONSTRAINT "UQ_97672ac88f789774dd47f7c8be3" UNIQUE ("email"), CONSTRAINT "UQ_4761723de32da9c56d745ecdacc" UNIQUE ("import_id"), CONSTRAINT "UQ_a32c406f2cd8265f9dff339a1b2" UNIQUE ("legal_document"), CONSTRAINT "PK_a3ffb1c0c8416b9fc6f907b7433" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "adresses" ("id" SERIAL NOT NULL, "blockchain" character varying, "address" character varying, "userId" integer, CONSTRAINT "PK_2787c84f7433e390ff8961d552d" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "balances" ("id" SERIAL NOT NULL, "blockchain" character varying, "coin" character varying, "balance" double precision DEFAULT '0', "userId" integer, CONSTRAINT "PK_74904758e813e401abc3d4261c2" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "subscriptions" ("id" SERIAL NOT NULL, "email" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "UQ_f0558bf43d14f66844255e8b7c2" UNIQUE ("email"), CONSTRAINT "PK_a87248d73155605cf782be9ee5e" PRIMARY KEY ("id"))`);
        await queryRunner.query(`ALTER TABLE "adresses" ADD CONSTRAINT "FK_b4f5c94493f23641866f161e212" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "balances" ADD CONSTRAINT "FK_414a454532d03cd17f4ef40eae2" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "balances" DROP CONSTRAINT "FK_414a454532d03cd17f4ef40eae2"`);
        await queryRunner.query(`ALTER TABLE "adresses" DROP CONSTRAINT "FK_b4f5c94493f23641866f161e212"`);
        await queryRunner.query(`DROP TABLE "subscriptions"`);
        await queryRunner.query(`DROP TABLE "balances"`);
        await queryRunner.query(`DROP TABLE "adresses"`);
        await queryRunner.query(`DROP TABLE "users"`);
    }

}

'''
'''--- src/migrations/1678462338922-migration.ts ---
import { MigrationInterface, QueryRunner } from "typeorm";

export class migration1678462338922 implements MigrationInterface {
    name = 'migration1678462338922'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "transaction_history" ("id" SERIAL NOT NULL, "from_defix" character varying NOT NULL, "to_defix" character varying NOT NULL, "from_address" character varying NOT NULL, "to_address" character varying NOT NULL, "blockchain" character varying NOT NULL, "coin" character varying NOT NULL, "amount" double precision NOT NULL, "hash" character varying NOT NULL, "type" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_1e2444ea77f6b5952b4ab7cb9a2" PRIMARY KEY ("id"))`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`DROP TABLE "transaction_history"`);
    }

}

'''
'''--- src/migrations/1678462532817-migration.ts ---
import { MigrationInterface, QueryRunner } from "typeorm";

export class migration1678462532817 implements MigrationInterface {
    name = 'migration1678462532817'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "transaction_history" RENAME COLUMN "type" TO "type_txn"`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "transaction_history" RENAME COLUMN "type_txn" TO "type"`);
    }

}

'''
'''--- src/migrations/1678486318270-migration.ts ---
import { MigrationInterface, QueryRunner } from "typeorm";

export class migration1678486318270 implements MigrationInterface {
    name = 'migration1678486318270'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "users" RENAME COLUMN "dosfa" TO "twofa"`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "users" RENAME COLUMN "twofa" TO "dosfa"`);
    }

}

'''
'''--- src/migrations/1678627370958-migration.ts ---
import { MigrationInterface, QueryRunner } from "typeorm";

export class migration1678627370958 implements MigrationInterface {
    name = 'migration1678627370958'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "frequent" ("id" SERIAL NOT NULL, "frequent_user" character varying, "userId" integer, CONSTRAINT "PK_a8d43caba57de5186d5191bf393" PRIMARY KEY ("id"))`);
        await queryRunner.query(`ALTER TABLE "frequent" ADD CONSTRAINT "FK_8a97a1f6ec786e55bf00d60a677" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "frequent" DROP CONSTRAINT "FK_8a97a1f6ec786e55bf00d60a677"`);
        await queryRunner.query(`DROP TABLE "frequent"`);
    }

}

'''
'''--- src/migrations/1678994228605-migration.ts ---
import { MigrationInterface, QueryRunner } from "typeorm";

export class migration1678994228605 implements MigrationInterface {
    name = 'migration1678994228605'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "users" ADD "avatar" character varying`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "avatar"`);
    }

}

'''
'''--- src/migrations/1679059229514-migration.ts ---
import { MigrationInterface, QueryRunner } from "typeorm";

export class migration1679059229514 implements MigrationInterface {
    name = 'migration1679059229514'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "flag_send"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "flag_receive"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "flag_dex"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "flag_fiat"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "flag_news" boolean`);
        await queryRunner.query(`ALTER TABLE "users" ADD "flag_deposit" boolean`);
        await queryRunner.query(`ALTER TABLE "users" ADD "flag_sign" boolean`);
        await queryRunner.query(`ALTER TABLE "users" ADD "flag_withdrawal" boolean`);
        await queryRunner.query(`ALTER TABLE "users" ADD "flag_evolution" boolean`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "flag_evolution"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "flag_withdrawal"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "flag_sign"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "flag_deposit"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "flag_news"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "flag_fiat" boolean`);
        await queryRunner.query(`ALTER TABLE "users" ADD "flag_dex" boolean`);
        await queryRunner.query(`ALTER TABLE "users" ADD "flag_receive" boolean`);
        await queryRunner.query(`ALTER TABLE "users" ADD "flag_send" boolean`);
    }

}

'''
'''--- src/migrations/1679323940197-migration.ts ---
import { MigrationInterface, QueryRunner } from "typeorm";

export class migration1679323940197 implements MigrationInterface {
    name = 'migration1679323940197'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "users" ADD "passcode" integer`);
        await queryRunner.query(`ALTER TABLE "frequent" ADD "type_transaction" character varying`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "frequent" DROP COLUMN "type_transaction"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "passcode"`);
    }

}

'''
'''--- src/migrations/1683311770312-migration.ts ---
import { MigrationInterface, QueryRunner } from "typeorm";

export class migration1683311770312 implements MigrationInterface {
    name = 'migration1683311770312'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "passcode"`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "users" ADD "passcode" integer`);
    }

}

'''
'''--- src/migrations/1683327305047-migration.ts ---
import { MigrationInterface, QueryRunner } from "typeorm";

export class migration1683327305047 implements MigrationInterface {
    name = 'migration1683327305047'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "hidden_tokens_limit" ("id" SERIAL NOT NULL, "user" character varying NOT NULL, "token_id" integer NOT NULL, CONSTRAINT "PK_9267eececf01938277f4957727c" PRIMARY KEY ("id"))`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`DROP TABLE "hidden_tokens_limit"`);
    }

}

'''
'''--- src/migrations/1686583495788-migration.ts ---
import { MigrationInterface, QueryRunner } from "typeorm";

export class migration1686583495788 implements MigrationInterface {
    name = 'migration1686583495788'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "adresses" DROP CONSTRAINT "FK_b4f5c94493f23641866f161e212"`);
        await queryRunner.query(`ALTER TABLE "balances" DROP CONSTRAINT "FK_414a454532d03cd17f4ef40eae2"`);
        await queryRunner.query(`ALTER TABLE "frequent" DROP CONSTRAINT "FK_8a97a1f6ec786e55bf00d60a677"`);
        await queryRunner.query(`ALTER TABLE "users" DROP CONSTRAINT "PK_a3ffb1c0c8416b9fc6f907b7433"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "id"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "id" uuid NOT NULL DEFAULT uuid_generate_v4()`);
        await queryRunner.query(`ALTER TABLE "users" ADD CONSTRAINT "PK_a3ffb1c0c8416b9fc6f907b7433" PRIMARY KEY ("id")`);
        await queryRunner.query(`ALTER TABLE "frequent" DROP CONSTRAINT "PK_a8d43caba57de5186d5191bf393"`);
        await queryRunner.query(`ALTER TABLE "frequent" DROP COLUMN "id"`);
        await queryRunner.query(`ALTER TABLE "frequent" ADD "id" uuid NOT NULL DEFAULT uuid_generate_v4()`);
        await queryRunner.query(`ALTER TABLE "frequent" ADD CONSTRAINT "PK_a8d43caba57de5186d5191bf393" PRIMARY KEY ("id")`);
        await queryRunner.query(`ALTER TABLE "frequent" DROP COLUMN "userId"`);
        await queryRunner.query(`ALTER TABLE "frequent" ADD "userId" uuid`);
        await queryRunner.query(`ALTER TABLE "adresses" DROP CONSTRAINT "PK_2787c84f7433e390ff8961d552d"`);
        await queryRunner.query(`ALTER TABLE "adresses" DROP COLUMN "id"`);
        await queryRunner.query(`ALTER TABLE "adresses" ADD "id" uuid NOT NULL DEFAULT uuid_generate_v4()`);
        await queryRunner.query(`ALTER TABLE "adresses" ADD CONSTRAINT "PK_2787c84f7433e390ff8961d552d" PRIMARY KEY ("id")`);
        await queryRunner.query(`ALTER TABLE "adresses" DROP COLUMN "userId"`);
        await queryRunner.query(`ALTER TABLE "adresses" ADD "userId" uuid`);
        await queryRunner.query(`ALTER TABLE "hidden_tokens_limit" DROP CONSTRAINT "PK_9267eececf01938277f4957727c"`);
        await queryRunner.query(`ALTER TABLE "hidden_tokens_limit" DROP COLUMN "id"`);
        await queryRunner.query(`ALTER TABLE "hidden_tokens_limit" ADD "id" uuid NOT NULL DEFAULT uuid_generate_v4()`);
        await queryRunner.query(`ALTER TABLE "hidden_tokens_limit" ADD CONSTRAINT "PK_9267eececf01938277f4957727c" PRIMARY KEY ("id")`);
        await queryRunner.query(`ALTER TABLE "subscriptions" DROP CONSTRAINT "PK_a87248d73155605cf782be9ee5e"`);
        await queryRunner.query(`ALTER TABLE "subscriptions" DROP COLUMN "id"`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ADD "id" uuid NOT NULL DEFAULT uuid_generate_v4()`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ADD CONSTRAINT "PK_a87248d73155605cf782be9ee5e" PRIMARY KEY ("id")`);
        await queryRunner.query(`ALTER TABLE "transaction_history" DROP CONSTRAINT "PK_1e2444ea77f6b5952b4ab7cb9a2"`);
        await queryRunner.query(`ALTER TABLE "transaction_history" DROP COLUMN "id"`);
        await queryRunner.query(`ALTER TABLE "transaction_history" ADD "id" uuid NOT NULL DEFAULT uuid_generate_v4()`);
        await queryRunner.query(`ALTER TABLE "transaction_history" ADD CONSTRAINT "PK_1e2444ea77f6b5952b4ab7cb9a2" PRIMARY KEY ("id")`);
        await queryRunner.query(`ALTER TABLE "balances" DROP CONSTRAINT "PK_74904758e813e401abc3d4261c2"`);
        await queryRunner.query(`ALTER TABLE "balances" DROP COLUMN "id"`);
        await queryRunner.query(`ALTER TABLE "balances" ADD "id" uuid NOT NULL DEFAULT uuid_generate_v4()`);
        await queryRunner.query(`ALTER TABLE "balances" ADD CONSTRAINT "PK_74904758e813e401abc3d4261c2" PRIMARY KEY ("id")`);
        await queryRunner.query(`ALTER TABLE "balances" DROP COLUMN "userId"`);
        await queryRunner.query(`ALTER TABLE "balances" ADD "userId" uuid`);
        await queryRunner.query(`ALTER TABLE "frequent" ADD CONSTRAINT "FK_8a97a1f6ec786e55bf00d60a677" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "adresses" ADD CONSTRAINT "FK_b4f5c94493f23641866f161e212" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "balances" ADD CONSTRAINT "FK_414a454532d03cd17f4ef40eae2" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "balances" DROP CONSTRAINT "FK_414a454532d03cd17f4ef40eae2"`);
        await queryRunner.query(`ALTER TABLE "adresses" DROP CONSTRAINT "FK_b4f5c94493f23641866f161e212"`);
        await queryRunner.query(`ALTER TABLE "frequent" DROP CONSTRAINT "FK_8a97a1f6ec786e55bf00d60a677"`);
        await queryRunner.query(`ALTER TABLE "balances" DROP COLUMN "userId"`);
        await queryRunner.query(`ALTER TABLE "balances" ADD "userId" integer`);
        await queryRunner.query(`ALTER TABLE "balances" DROP CONSTRAINT "PK_74904758e813e401abc3d4261c2"`);
        await queryRunner.query(`ALTER TABLE "balances" DROP COLUMN "id"`);
        await queryRunner.query(`ALTER TABLE "balances" ADD "id" SERIAL NOT NULL`);
        await queryRunner.query(`ALTER TABLE "balances" ADD CONSTRAINT "PK_74904758e813e401abc3d4261c2" PRIMARY KEY ("id")`);
        await queryRunner.query(`ALTER TABLE "transaction_history" DROP CONSTRAINT "PK_1e2444ea77f6b5952b4ab7cb9a2"`);
        await queryRunner.query(`ALTER TABLE "transaction_history" DROP COLUMN "id"`);
        await queryRunner.query(`ALTER TABLE "transaction_history" ADD "id" SERIAL NOT NULL`);
        await queryRunner.query(`ALTER TABLE "transaction_history" ADD CONSTRAINT "PK_1e2444ea77f6b5952b4ab7cb9a2" PRIMARY KEY ("id")`);
        await queryRunner.query(`ALTER TABLE "subscriptions" DROP CONSTRAINT "PK_a87248d73155605cf782be9ee5e"`);
        await queryRunner.query(`ALTER TABLE "subscriptions" DROP COLUMN "id"`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ADD "id" SERIAL NOT NULL`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ADD CONSTRAINT "PK_a87248d73155605cf782be9ee5e" PRIMARY KEY ("id")`);
        await queryRunner.query(`ALTER TABLE "hidden_tokens_limit" DROP CONSTRAINT "PK_9267eececf01938277f4957727c"`);
        await queryRunner.query(`ALTER TABLE "hidden_tokens_limit" DROP COLUMN "id"`);
        await queryRunner.query(`ALTER TABLE "hidden_tokens_limit" ADD "id" SERIAL NOT NULL`);
        await queryRunner.query(`ALTER TABLE "hidden_tokens_limit" ADD CONSTRAINT "PK_9267eececf01938277f4957727c" PRIMARY KEY ("id")`);
        await queryRunner.query(`ALTER TABLE "adresses" DROP COLUMN "userId"`);
        await queryRunner.query(`ALTER TABLE "adresses" ADD "userId" integer`);
        await queryRunner.query(`ALTER TABLE "adresses" DROP CONSTRAINT "PK_2787c84f7433e390ff8961d552d"`);
        await queryRunner.query(`ALTER TABLE "adresses" DROP COLUMN "id"`);
        await queryRunner.query(`ALTER TABLE "adresses" ADD "id" SERIAL NOT NULL`);
        await queryRunner.query(`ALTER TABLE "adresses" ADD CONSTRAINT "PK_2787c84f7433e390ff8961d552d" PRIMARY KEY ("id")`);
        await queryRunner.query(`ALTER TABLE "frequent" DROP COLUMN "userId"`);
        await queryRunner.query(`ALTER TABLE "frequent" ADD "userId" integer`);
        await queryRunner.query(`ALTER TABLE "frequent" DROP CONSTRAINT "PK_a8d43caba57de5186d5191bf393"`);
        await queryRunner.query(`ALTER TABLE "frequent" DROP COLUMN "id"`);
        await queryRunner.query(`ALTER TABLE "frequent" ADD "id" SERIAL NOT NULL`);
        await queryRunner.query(`ALTER TABLE "frequent" ADD CONSTRAINT "PK_a8d43caba57de5186d5191bf393" PRIMARY KEY ("id")`);
        await queryRunner.query(`ALTER TABLE "users" DROP CONSTRAINT "PK_a3ffb1c0c8416b9fc6f907b7433"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "id"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "id" SERIAL NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" ADD CONSTRAINT "PK_a3ffb1c0c8416b9fc6f907b7433" PRIMARY KEY ("id")`);
        await queryRunner.query(`ALTER TABLE "frequent" ADD CONSTRAINT "FK_8a97a1f6ec786e55bf00d60a677" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "balances" ADD CONSTRAINT "FK_414a454532d03cd17f4ef40eae2" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "adresses" ADD CONSTRAINT "FK_b4f5c94493f23641866f161e212" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

}

'''
'''--- src/migrations/1687879616654-migration.ts ---
import { MigrationInterface, QueryRunner } from "typeorm";

export class migration1687879616654 implements MigrationInterface {
    name = 'migration1687879616654'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "users" ADD "language" character varying DEFAULT 'EN'`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "language"`);
    }

}

'''
'''--- src/modules/address/controllers/address.controller.ts ---
import { Request, Response } from "express";

export class AddressController {
  // public getUser = async (req: Request, res: Response) => {
  //   const userId = req.params.userid;
  //   try {
  //     return res.status(200).send({ message: "FINE" });
  //   } catch (error) {
  //     return res.status(400).send({ message: error });
  //   }
  // };
}

'''
'''--- src/modules/address/entities/address.entity.ts ---
import { Entity, Column, PrimaryGeneratedColumn, BaseEntity, ManyToOne } from "typeorm";
import { UserEntity } from "../../users/entities/user.entity";

@Entity({ name: "adresses" })
export class AddressEntity extends BaseEntity {
  @PrimaryGeneratedColumn("uuid")
  id!: string;

  @ManyToOne(() => UserEntity)
  user!: UserEntity;

  @Column({
    nullable: true,
  })
  blockchain!: string;

  @Column({
    nullable: true,
  })
  address!: string;
}

'''
'''--- src/modules/address/init.ts ---
import { Express, Router } from "express";
import { AddressController } from "./controllers/address.controller";
import { Routes } from "./routes";

export class AddressModule {
  public routes: Routes;

  constructor(router: Router) {
    this.routes = new Routes(router, new AddressController());
  }
}

'''
'''--- src/modules/address/routes.ts ---
import { Express, Router } from "express";
import { AddressController } from "./controllers/address.controller";

export class Routes {
  private controller: AddressController;

  constructor(router: Router, controller: AddressController) {
    this.controller = controller;
    this.configureRoutes(router);
  }

  private configureRoutes(router: Router) {}
}

'''
'''--- src/modules/address/services/address.service.ts ---
import { UtilsShared } from "../../../shared/utils/utils.shared";
import { UserEntity } from "../../users/entities/user.entity";
import { AddressEntity } from "../entities/address.entity";

export class AddressService {
  public createAddress = async (user: UserEntity, blockchain: string, address: string) => {
    try {
      const walletAddress = new AddressEntity();

      walletAddress.user = user;
      walletAddress.blockchain = blockchain;
      walletAddress.address = address;

      return await walletAddress.save();
    } catch (err) {
      throw new Error(`Failed to create address: ${err}`);
    }
  };

  public getAddressByDefixId = async (defixId: string, blockchain: string) => {
    try {
      const address = await AddressEntity.findOneBy({
        user: { defixId: defixId },
        blockchain,
      });
      return address;
    } catch (err) {
      throw new Error(`Failed to get address: ${err}`);
    }
  };

  public getAddressesByDefixId = async (defixId: string) => {
    try {
      return await AddressEntity.findBy({
        user: { defixId: defixId },
      });
    } catch (err) {
      throw new Error(`Failed to get addresses: ${err}`);
    }
  };
}

'''
'''--- src/modules/balance/controllers/balance.controller.ts ---
import { Request, Response } from "express";
import { BalanceService } from "../services/balance.service";

export class BalanceController {
  private balanceService: BalanceService;

  constructor() {
    this.balanceService = new BalanceService();
  }
  public getBalance = async (req: Request, res: Response) => {
    try {
      const { defixId } = req.body;
      const balance = await this.balanceService.getBalance(defixId);
      res.send(balance);
    } catch (error: any) {
      return res.status(500).send({ message: error.message });
    }
  };
}

'''
'''--- src/modules/balance/entities/balance.entity.ts ---
import { Entity, Column, PrimaryGeneratedColumn, BaseEntity, ManyToOne } from "typeorm";
import { UserEntity } from "../../users/entities/user.entity";

@Entity({ name: "balances" })
export class BalanceEntity extends BaseEntity {
  @PrimaryGeneratedColumn("uuid")
  id!: string;

  @ManyToOne(() => UserEntity)
  user!: UserEntity;

  @Column({
    nullable: true,
  })
  blockchain!: string;

  @Column({
    nullable: true,
  })
  coin!: string;

  @Column({
    nullable: true,
    type: "float",
    default: 0,
  })
  balance!: number;
}

'''
'''--- src/modules/balance/init.ts ---
import { Express, Router } from "express";
import { BalanceController } from "./controllers/balance.controller";
import { Routes } from "./routes";

export class BalanceModule {
  public routes: Routes;

  constructor(router: Router) {
    this.routes = new Routes(router, new BalanceController());
  }
}

'''
'''--- src/modules/balance/routes.ts ---
import { Express, Router } from "express";
import { BalanceController } from "./controllers/balance.controller";
import { SharedMiddleware } from "../../shared/middlewares/shared.middleware";

export class Routes {
  private controller: BalanceController;
  private middleware: SharedMiddleware;

  constructor(router: Router, controller: BalanceController) {
    this.controller = controller;
    this.middleware = new SharedMiddleware();
    this.configureRoutes(router);
  }

  private configureRoutes(router: Router) {
    /**
     * Post track
     * @swagger
     * /get-balance/:
     *    post:
     *      tags:
     *        - Balance
     *      summary: Obtener balance de un Usuario.
     *      description: Mandar defixId y te dara el balance de ese usuario, con todos las cryptos y tokens.
     *      requestBody:
     *          content:
     *            application/json:
     *              schema:
     *                type: "object"
     *                required: [defixId]
     *                properties: {
     *                  defixId: {
     *                    type: "string"
     *                  }
     *                }
     *      responses:
     *        '200':
     *          description: Array con balance de todas las cryptos del usuario.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Internal Server Error.
     */
    router.post("/get-balance/", this.middleware.defixIdValid, this.controller.getBalance);
  }
}

'''
'''--- src/modules/balance/services/balance.service.ts ---
import { blockchainService } from "../../../blockchain";
import { CacheConfig } from "../../../config/cacheConfig";
import { Balance } from "../../../interfaces/balance.interface";
import { BalanceCrypto } from "../../../interfaces/balance_crypto.interface";
import { UtilsShared } from "../../../shared/utils/utils.shared";
import { AddressService } from "../../address/services/address.service";

export class BalanceService {
  private addressService: AddressService;

  constructor() {
    this.addressService = new AddressService();
  }

  public getBalance = async (defixId: string) => {
    try {
      const addresses = await this.addressService.getAddressesByDefixId(defixId);
      const balances: BalanceCrypto[] = [];

      const cryptos = await UtilsShared.getCryptos();

      const pnlArray: any = [];
      let pnl = 0;
      let pnlSum = 0;

      for (let crypto of cryptos) {
        const balanceCrypto: BalanceCrypto = {
          coin: crypto.coin,
          blockchain: crypto.blockchain,
          icon: crypto.icon,
          balance: 0,
          tokens: [],
        };

        const addressItem = addresses.find((element) => element.blockchain === crypto.coin);

        if (!addressItem) throw new Error(`Failed to get balance`);

        const address = addressItem.address || "";

        balanceCrypto.balance = await blockchainService[crypto.coin.toLowerCase() as keyof typeof blockchainService].getBalance(address);

        for (let token of crypto.tokens) {
          const itemToken: Balance = {
            coin: token.coin,
            balance: 0,
            icon: token.icon,
          };

          itemToken.balance = await blockchainService[crypto.coin.toLowerCase() as keyof typeof blockchainService].getBalanceToken(
            address,
            token.contract,
            token.decimals,
          );

          balanceCrypto.tokens.push(itemToken);
        }

        const coinMarket: any = CacheConfig.nodeCache.get("getRanking");

        if (coinMarket) {
          // const coin = coinMarket.find(() => element);
          const coin = coinMarket.find((element: any) => element.symbol === balanceCrypto.coin.toLowerCase());
          if (coin) {
            const price7d = coin.current_price - (coin.price_change_percentage_7d_in_currency / 100) * coin.current_price;

            pnlArray.push((price7d - coin.current_price) * balanceCrypto.balance);
            pnl += (price7d - coin.current_price) * balanceCrypto.balance;
            pnlSum += price7d * balanceCrypto.balance;
          }
          for (let crypto of balanceCrypto.tokens) {
            const coin = coinMarket.find((element: any) => element.symbol === crypto.coin.toLowerCase());
            if (coin) {
              const price7d = coin.current_price - (coin.price_change_percentage_7d_in_currency / 100) * coin.current_price;
              pnlArray.push((price7d - coin.current_price) * crypto.balance);
              pnl += (price7d - coin.current_price) * crypto.balance;
              pnlSum += price7d * crypto.balance;
            }
          }
        }

        balances.push(balanceCrypto);
      }
      const pnlTotal = (pnl / pnlSum) * 100 || 0;
      return { pnl: { percentage: pnlTotal, dollar: pnl }, balances };
    } catch (err) {
      throw new Error(`Failed to get address: ${err}`);
    }
  };
}

'''
'''--- src/modules/bridge/abi.json ---
[
  {
    "constant": true,
    "inputs": [],
    "name": "name",
    "outputs": [
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "_spender",
        "type": "address"
      },
      {
        "name": "_value",
        "type": "uint256"
      }
    ],
    "name": "approve",
    "outputs": [
      {
        "name": "",
        "type": "bool"
      }
    ],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "totalSupply",
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "_from",
        "type": "address"
      },
      {
        "name": "_to",
        "type": "address"
      },
      {
        "name": "_value",
        "type": "uint256"
      }
    ],
    "name": "transferFrom",
    "outputs": [
      {
        "name": "",
        "type": "bool"
      }
    ],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "decimals",
    "outputs": [
      {
        "name": "",
        "type": "uint8"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "_spender",
        "type": "address"
      },
      {
        "name": "_subtractedValue",
        "type": "uint256"
      }
    ],
    "name": "decreaseApproval",
    "outputs": [
      {
        "name": "",
        "type": "bool"
      }
    ],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [
      {
        "name": "_owner",
        "type": "address"
      }
    ],
    "name": "balanceOf",
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "_to",
        "type": "address"
      },
      {
        "name": "_value",
        "type": "uint256"
      }
    ],
    "name": "transfer",
    "outputs": [
      {
        "name": "",
        "type": "bool"
      }
    ],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "_spender",
        "type": "address"
      },
      {
        "name": "_addedValue",
        "type": "uint256"
      }
    ],
    "name": "increaseApproval",
    "outputs": [
      {
        "name": "",
        "type": "bool"
      }
    ],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [
      {
        "name": "_owner",
        "type": "address"
      },
      {
        "name": "_spender",
        "type": "address"
      }
    ],
    "name": "allowance",
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "symbol",
    "outputs": [
        {
            "name": "",
            "type": "string"
        }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "name": "_name",
        "type": "string"
      },
      {
        "name": "_symbol",
        "type": "string"
      },
      {
        "name": "_decimals",
        "type": "uint8"
      },
      {
        "name": "_totalSupply",
        "type": "uint256"
      }
    ],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "name": "owner",
        "type": "address"
      },
      {
        "indexed": true,
        "name": "spender",
        "type": "address"
      },
      {
        "indexed": false,
        "name": "value",
        "type": "uint256"
      }
    ],
    "name": "Approval",
    "type": "event"
  }
]

'''
'''--- src/modules/bridge/anyswapV3Router.json ---
[{"inputs":[{"internalType":"address","name":"_factory","type":"address"},{"internalType":"address","name":"_wNATIVE","type":"address"},{"internalType":"address","name":"_mpc","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"txhash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fromChainID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"toChainID","type":"uint256"}],"name":"LogAnySwapIn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fromChainID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"toChainID","type":"uint256"}],"name":"LogAnySwapOut","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address[]","name":"path","type":"address[]"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fromChainID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"toChainID","type":"uint256"}],"name":"LogAnySwapTradeTokensForNative","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address[]","name":"path","type":"address[]"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fromChainID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"toChainID","type":"uint256"}],"name":"LogAnySwapTradeTokensForTokens","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldMPC","type":"address"},{"indexed":true,"internalType":"address","name":"newMPC","type":"address"},{"indexed":true,"internalType":"uint256","name":"effectiveTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"chainID","type":"uint256"}],"name":"LogChangeMPC","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldRouter","type":"address"},{"indexed":true,"internalType":"address","name":"newRouter","type":"address"},{"indexed":false,"internalType":"uint256","name":"chainID","type":"uint256"}],"name":"LogChangeRouter","type":"event"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"anySwapFeeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"txs","type":"bytes32[]"},{"internalType":"address[]","name":"tokens","type":"address[]"},{"internalType":"address[]","name":"to","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"fromChainIDs","type":"uint256[]"}],"name":"anySwapIn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"txs","type":"bytes32"},{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"fromChainID","type":"uint256"}],"name":"anySwapIn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"txs","type":"bytes32"},{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"fromChainID","type":"uint256"}],"name":"anySwapInAuto","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"txs","type":"bytes32"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"fromChainID","type":"uint256"}],"name":"anySwapInExactTokensForNative","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"txs","type":"bytes32"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"fromChainID","type":"uint256"}],"name":"anySwapInExactTokensForTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"txs","type":"bytes32"},{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"fromChainID","type":"uint256"}],"name":"anySwapInUnderlying","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"toChainID","type":"uint256"}],"name":"anySwapOut","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"tokens","type":"address[]"},{"internalType":"address[]","name":"to","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"toChainIDs","type":"uint256[]"}],"name":"anySwapOut","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"toChainID","type":"uint256"}],"name":"anySwapOutExactTokensForNative","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"toChainID","type":"uint256"}],"name":"anySwapOutExactTokensForNativeUnderlying","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint256","name":"toChainID","type":"uint256"}],"name":"anySwapOutExactTokensForNativeUnderlyingWithPermit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint256","name":"toChainID","type":"uint256"}],"name":"anySwapOutExactTokensForNativeUnderlyingWithTransferPermit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"toChainID","type":"uint256"}],"name":"anySwapOutExactTokensForTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"toChainID","type":"uint256"}],"name":"anySwapOutExactTokensForTokensUnderlying","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint256","name":"toChainID","type":"uint256"}],"name":"anySwapOutExactTokensForTokensUnderlyingWithPermit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint256","name":"toChainID","type":"uint256"}],"name":"anySwapOutExactTokensForTokensUnderlyingWithTransferPermit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"toChainID","type":"uint256"}],"name":"anySwapOutNative","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"toChainID","type":"uint256"}],"name":"anySwapOutUnderlying","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint256","name":"toChainID","type":"uint256"}],"name":"anySwapOutUnderlyingWithPermit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint256","name":"toChainID","type":"uint256"}],"name":"anySwapOutUnderlyingWithTransferPermit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"cID","outputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newMPC","type":"address"}],"name":"changeMPC","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"newVault","type":"address"}],"name":"changeVault","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"}],"name":"depositNative","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"reserveIn","type":"uint256"},{"internalType":"uint256","name":"reserveOut","type":"uint256"}],"name":"getAmountIn","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"reserveIn","type":"uint256"},{"internalType":"uint256","name":"reserveOut","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"}],"name":"getAmountsIn","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"}],"name":"getAmountsOut","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mpc","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"reserveA","type":"uint256"},{"internalType":"uint256","name":"reserveB","type":"uint256"}],"name":"quote","outputs":[{"internalType":"uint256","name":"amountB","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"wNATIVE","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"withdrawNative","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}]
'''
'''--- src/modules/bridge/asd.json ---
{
  "evm0x3053ad3b31600074e9a90440770f78d5e8fc5a54": {
      "name": "JustYours",
      "symbol": "JUST",
      "decimals": 10,
      "address": "0x3053ad3b31600074e9a90440770f78d5e8fc5a54",
      "price": 0.00005683,
      "logoUrl": "https://assets.coingecko.com/coins/images/18328/large/justyours.jpg",
      "destChains": {
          "250": {
              "0x4ce98bfe273b82081cab0f2dd7b7ea56016573ddb463a38c166ac8aa1780d193": {
                  "name": "JustYours",
                  "symbol": "JUST",
                  "decimals": 10,
                  "address": "0x37c045be4641328dfeb625f1dde610d061613497",
                  "fromanytoken": {
                      "name": "JustYours",
                      "symbol": "JUST",
                      "decimals": 10,
                      "address": "0x3053ad3b31600074e9a90440770f78d5e8fc5a54"
                  },
                  "underlying": false,
                  "type": "swapout",
                  "router": "0x3053ad3b31600074e9a90440770f78d5e8fc5a54",
                  "tokenid": "",
                  "routerABI": "Swapout(amount,toAddress)",
                  "isLiquidity": false,
                  "isApprove": false,
                  "isFromLiquidity": false,
                  "spender": "",
                  "BigValueThreshold": 26000000,
                  "MaximumSwap": 130000000,
                  "MaximumSwapFee": 0,
                  "MinimumSwap": 700,
                  "MinimumSwapFee": 0,
                  "SwapFeeRatePerMillion": 0,
                  "pairid": "justv2",
                  "DepositAddress": "0xf778F4D7a14A8CB73d5261f9C61970ef4E7D7842",
                  "BaseFeePercent": 0,
                  "sortId": 0,
                  "tokenType": "TOKEN",
                  "chainId": "250"
              }
          }
      },
      "tokenType": "TOKEN",
      "chainId": "1"
  },
  "evm0x84b67e43474a403cde9aa181b02ba07399a54573": {
      "name": "Metti Inu",
      "symbol": "Metti",
      "decimals": 18,
      "address": "0x84b67e43474a403cde9aa181b02ba07399a54573",
      "price": 1.0852e-11,
      "logoUrl": "https://assets.coingecko.com/coins/images/19561/large/alLjUap.png",
      "destChains": {
          "250": {
              "0xf9e008e9d07dd271a56d6576ab30647f28d22d2085cb7f97bdc54da4592e2752": {
                  "name": "Metti Inu ",
                  "symbol": "Metti",
                  "decimals": 18,
                  "address": "0x42ae8468a1fddb965d420bd71368a87ec3a2b4b8",
                  "fromanytoken": {
                      "name": "Metti Inu",
                      "symbol": "Metti",
                      "decimals": 18,
                      "address": "0x84b67e43474a403cde9aa181b02ba07399a54573"
                  },
                  "underlying": false,
                  "type": "swapout",
                  "router": "0x84b67e43474a403cde9aa181b02ba07399a54573",
                  "tokenid": "",
                  "routerABI": "Swapout(amount,toAddress)",
                  "isLiquidity": false,
                  "isApprove": false,
                  "isFromLiquidity": false,
                  "spender": "",
                  "BigValueThreshold": 3800000000000000,
                  "MaximumSwap": 19000000000000000,
                  "MaximumSwapFee": 0,
                  "MinimumSwap": 300000000000,
                  "MinimumSwapFee": 0,
                  "SwapFeeRatePerMillion": 0,
                  "pairid": "mettiv5",
                  "DepositAddress": "0xf778F4D7a14A8CB73d5261f9C61970ef4E7D7842",
                  "BaseFeePercent": 0,
                  "sortId": 0,
                  "tokenType": "TOKEN",
                  "chainId": "250"
              }
          }
      },
      "tokenType": "TOKEN",
      "chainId": "1"
  }
}
'''
'''--- src/modules/bridge/controllers/bridge.controller.ts ---
import { Request, Response } from "express";
import { BridgeService } from "../services/bridge.service";
import { CryptoShared } from "../../../shared/crypto/crypto.shared";
import { AddressService } from "../../address/services/address.service";

export class BridgeController {
  private bridgeService: BridgeService;
  private addressService: AddressService;

  constructor() {
    this.bridgeService = new BridgeService();
    this.addressService = new AddressService();
  }

  public getFeeBridge = async (req: Request, res: Response) => {
    try {
      const { chainTo, amount, coin, chainFrom } = req.body;

      // let toChain;
      // if (chainTo === "ETH") {
      //   toChain = "ETH";
      // } else if (chainTo === "BNB") {
      //   toChain = "BSC";
      // } else if (chainTo === "NEAR") {
      //   toChain = "AURORA";
      // }

      // let fromChain;
      // if (chainFrom === "ETH") {
      //   fromChain = "ETH";
      // } else if (chainFrom === "BNB") {
      //   fromChain = "BSC";
      // } else if (chainFrom === "NEAR") {
      //   fromChain = "AURORA";
      // }

      // if (!toChain || !fromChain) throw new Error("Error no chaind");

      const resp: any = await this.bridgeService.getFeeBridge(chainTo, amount, coin, chainFrom);

      res.json(resp);
    } catch (error) {
      console.error("An error occurred:", error);
      res.status(500).send(error);
    }
  };

  public getFeeLimitBridge = async (req: Request, res: Response) => {
    try {
      const { coin, chainTo } = req.body;

      const resp: any = await this.bridgeService.getFeeLimitBridge(coin, chainTo);

      res.json(resp);
    } catch (error) {
      console.error("An error occurred:", error);
      res.status(500).send(error);
    }
  };

  public getAddressesBridge = async (req: Request, res: Response) => {
    try {
      const { coin, blockchain } = req.body;
      // let chainId;
      // if (blockchain === "ETH") {
      //   chainId = "1";
      // } else if (blockchain === "BNB") {
      //   chainId = "56";
      // } else if (blockchain === "NEAR") {
      //   chainId = "1313161554";
      // }

      // if (!chainId) throw new Error("Error no chaind ID");

      // console.log(chainId);

      const resp = await this.bridgeService.getAddressesBridge(coin, blockchain);

      res.json(resp);
    } catch (error) {
      console.error("An error occurred:", error);
      res.status(500).send(error);
    }
  };

  public sendBridge = async (req: Request, res: Response) => {
    try {
      const { defixId, pkEncrypt, toAddress, coin, amount, fromChain, toChain } = req.body;

      if (!defixId || !pkEncrypt || !toAddress || !coin || !amount || !fromChain || !toChain)
        return res.status(400).send({ message: "Invalid data." });

      const privateKey = CryptoShared.decrypt(pkEncrypt);

      if (!privateKey) return res.status(400).send({ message: "privateKey invalid." });

      const resp = await this.bridgeService.sendBridge(toAddress, privateKey, coin, fromChain, toChain, amount, defixId);

      console.log(resp);

      res.json(resp);
    } catch (error) {
      console.error("An error occurred:", error);
      res.status(500).send(error);
    }
  };
}

'''
'''--- src/modules/bridge/init.ts ---
import { Express, Router } from "express";
import { BridgeController } from "./controllers/bridge.controller";
import { Routes } from "./routes";

export class BridgeModule {
  public routes: Routes;

  constructor(router: Router) {
    this.routes = new Routes(router, new BridgeController());
  }
}

'''
'''--- src/modules/bridge/purifiedBridgeInfo.json ---
{
  "STABLEV3": {
    "1": {
      "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48": {
        "address": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",
        "anyToken": {
          "address": "0x7ea2be2df7ba6e54b1a9c70676f668455e329d29",
          "name": "USDC",
          "symbol": "anyUSDC",
          "decimals": 6
        },
        "underlying": {
          "address": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",
          "name": "USDCoin",
          "symbol": "USDC",
          "decimals": 6
        },
        "destChains": {
          "56": {
            "address": "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d",
            "underlying": {
              "address": "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d",
              "name": "USDCoin",
              "symbol": "USDC",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "20000000",
            "MinimumSwap": "12",
            "BigValueThreshold": "5000000",
            "SwapFeeRatePerMillion": 0.01,
            "MaximumSwapFee": "1000",
            "MinimumSwapFee": "0.19",
            "anyToken": {
              "address": "0x8965349fb649a33a30cbfda057d8ec2c48abe2a2",
              "name": "USDC",
              "symbol": "anyUSDC",
              "decimals": 18
            }
          }
        },
        "price": 0.999971,
        "logoUrl": "https://assets.coingecko.com/coins/images/6319/large/USD_Coin_icon.png",
        "chainId": "1",
        "tokenid": "anyUSDC",
        "version": "STABLEV3",
        "router": "0x6b7a87899490ece95443e979ca9485cbe7e71522",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x99d8a9c45b2eca8864373a26d1459e3dff1e17f3": {
        "address": "0x99d8a9c45b2eca8864373a26d1459e3dff1e17f3",
        "anyToken": {
          "address": "0xbbc4a8d076f4b1888fec42581b6fc58d242cf2d5",
          "name": "MagicInternetMoney",
          "symbol": "anyMIM",
          "decimals": 18
        },
        "underlying": {
          "address": "0x99d8a9c45b2eca8864373a26d1459e3dff1e17f3",
          "name": "MagicInternetMoney",
          "symbol": "MIM",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xfe19f0b51438fd612f6fd59c1dbb3ea319f433ba",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "20000000",
            "MinimumSwap": "12",
            "BigValueThreshold": "5000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "0.9",
            "MinimumSwapFee": "0.9",
            "anyToken": {
              "address": "0xfe19f0b51438fd612f6fd59c1dbb3ea319f433ba",
              "name": "MagicInternetMoney",
              "symbol": "MIM",
              "decimals": 18
            }
          }
        },
        "price": 0.998956,
        "logoUrl": "https://assets.coingecko.com/coins/images/16786/large/mimlogopng.png",
        "chainId": "1",
        "tokenid": "MIM",
        "version": "STABLEV3",
        "router": "0x6b7a87899490ece95443e979ca9485cbe7e71522",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x6b175474e89094c44da98b954eedeac495271d0f": {
        "address": "0x6b175474e89094c44da98b954eedeac495271d0f",
        "anyToken": {
          "address": "0x739ca6d71365a08f584c8fc4e1029045fa8abc4b",
          "name": "DaiStablecoin",
          "symbol": "anyDAI",
          "decimals": 18
        },
        "underlying": {
          "address": "0x6b175474e89094c44da98b954eedeac495271d0f",
          "name": "DaiStablecoin",
          "symbol": "DAI",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3",
            "underlying": {
              "address": "0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3",
              "name": "DaiToken",
              "symbol": "DAI",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "20000000",
            "MinimumSwap": "12",
            "BigValueThreshold": "5000000",
            "SwapFeeRatePerMillion": 0.01,
            "MaximumSwapFee": "1000",
            "MinimumSwapFee": "0.5",
            "anyToken": {
              "address": "0x1282911d3600b202698997f61f46379db3b9f01e",
              "name": "Binance-PegDaiToken",
              "symbol": "anyDAI",
              "decimals": 18
            }
          }
        },
        "price": 0.999332,
        "logoUrl": "https://assets.coingecko.com/coins/images/9956/large/4943.png",
        "chainId": "1",
        "tokenid": "anyDAI",
        "version": "STABLEV3",
        "router": "0x6b7a87899490ece95443e979ca9485cbe7e71522",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xdac17f958d2ee523a2206206994597c13d831ec7": {
        "address": "0xdac17f958d2ee523a2206206994597c13d831ec7",
        "anyToken": {
          "address": "0x22648c12acd87912ea1710357b1302c6a4154ebc",
          "name": "TetherUSD",
          "symbol": "anyUSDT",
          "decimals": 6
        },
        "underlying": {
          "address": "0xdac17f958d2ee523a2206206994597c13d831ec7",
          "name": "TetherUSD",
          "symbol": "USDT",
          "decimals": 6
        },
        "destChains": {
          "56": {
            "address": "0x55d398326f99059ff775485246999027b3197955",
            "underlying": {
              "address": "0x55d398326f99059ff775485246999027b3197955",
              "name": "TetherUSD",
              "symbol": "USDT",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "20000000",
            "MinimumSwap": "12",
            "BigValueThreshold": "5000000",
            "SwapFeeRatePerMillion": 0.01,
            "MaximumSwapFee": "1000",
            "MinimumSwapFee": "0.19",
            "anyToken": {
              "address": "0xedf0c420bc3b92b961c6ec411cc810ca81f5f21a",
              "name": "Binance-PegBSC-USD",
              "symbol": "anyUSDT",
              "decimals": 18
            }
          }
        },
        "price": 0.999405,
        "logoUrl": "https://assets.coingecko.com/coins/images/325/large/Tether-logo.png",
        "chainId": "1",
        "tokenid": "anyUSDT",
        "version": "STABLEV3",
        "router": "0x6b7a87899490ece95443e979ca9485cbe7e71522",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xdb25f211ab05b1c97d595516f45794528a807ad8": {
        "address": "0xdb25f211ab05b1c97d595516f45794528a807ad8",
        "anyToken": {
          "address": "0xb72842d6f5fedf91d22d56202802bb9a79c6322e",
          "name": "STASISEURSToken",
          "symbol": "anyEURS",
          "decimals": 2
        },
        "underlying": {
          "address": "0xdb25f211ab05b1c97d595516f45794528a807ad8",
          "name": "STASISEURSToken",
          "symbol": "EURS",
          "decimals": 2
        },
        "destChains": {
          "56": {
            "address": "0x5fe5a66c84c6f8c213503a04f95a417ac6684361",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "16800000",
            "MinimumSwap": "10",
            "BigValueThreshold": "4200000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "0.77",
            "MinimumSwapFee": "0.77",
            "anyToken": {
              "address": "0x5fe5a66c84c6f8c213503a04f95a417ac6684361",
              "name": "STASISEURSToken",
              "symbol": "EURS",
              "decimals": 2
            }
          }
        },
        "price": 1.056,
        "logoUrl": "https://assets.coingecko.com/coins/images/5164/large/EURS_300x300.png",
        "chainId": "1",
        "tokenid": "anyEURS",
        "version": "STABLEV3",
        "router": "0x6b7a87899490ece95443e979ca9485cbe7e71522",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x0000000000085d4780b73119b644ae5ecd22b376": {
        "address": "0x0000000000085d4780b73119b644ae5ecd22b376",
        "anyToken": {
          "address": "0x0bd19f6447cd676255c7c7b00428462b3da67e3a",
          "name": "TrueUSD",
          "symbol": "anyTUSD",
          "decimals": 18
        },
        "underlying": {
          "address": "0x0000000000085d4780b73119b644ae5ecd22b376",
          "name": "TrueUSD",
          "symbol": "TUSD",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.999858,
        "logoUrl": "https://assets.coingecko.com/coins/images/3449/large/tusd.png",
        "chainId": "1",
        "tokenid": "anyTUSD",
        "version": "STABLEV3",
        "router": "0x6b7a87899490ece95443e979ca9485cbe7e71522",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x2260fac5e5542a773aa44fbcfedf7c193bc2c599": {
        "address": "0x2260fac5e5542a773aa44fbcfedf7c193bc2c599",
        "anyToken": {
          "address": "0xe6b9d092223f39013656702a40dbe6b7decc5746",
          "name": "Wrapped BTC",
          "symbol": "anyWBTC",
          "decimals": 8
        },
        "underlying": {
          "address": "0x2260fac5e5542a773aa44fbcfedf7c193bc2c599",
          "name": "WrappedBTC",
          "symbol": "WBTC",
          "decimals": 8
        },
        "destChains": {
          "56": {
            "address": "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c",
            "underlying": {
              "address": "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c",
              "name": "BTCB Token",
              "symbol": "BTCB",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "970",
            "MinimumSwap": "0.0005",
            "BigValueThreshold": "242",
            "SwapFeeRatePerMillion": 0.01,
            "MaximumSwapFee": "0.05",
            "MinimumSwapFee": "0.000025",
            "anyToken": {
              "address": "0x0653553e574657410d41ce758db36617f409b6c5",
              "name": "Binance-Peg BTCB Token",
              "symbol": "anyBTCB",
              "decimals": 18
            }
          }
        },
        "price": 26761,
        "logoUrl": "https://assets.coingecko.com/coins/images/1/large/bitcoin.png",
        "chainId": "1",
        "tokenid": "anyWBTC",
        "version": "STABLEV3",
        "router": "0x6b7a87899490ece95443e979ca9485cbe7e71522",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      }
    },
    "56": {
      "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d": {
        "address": "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d",
        "anyToken": {
          "address": "0x8965349fb649a33a30cbfda057d8ec2c48abe2a2",
          "name": "USDC",
          "symbol": "anyUSDC",
          "decimals": 18
        },
        "underlying": {
          "address": "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d",
          "name": "USDCoin",
          "symbol": "USDC",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",
            "underlying": {
              "address": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",
              "name": "USDCoin",
              "symbol": "USDC",
              "decimals": 6
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "20000000",
            "MinimumSwap": "30",
            "BigValueThreshold": "5000000",
            "SwapFeeRatePerMillion": 0.02,
            "MaximumSwapFee": 1000,
            "MinimumSwapFee": 29.9,
            "anyToken": {
              "address": "0x7ea2be2df7ba6e54b1a9c70676f668455e329d29",
              "name": "USDC",
              "symbol": "anyUSDC",
              "decimals": 6
            }
          }
        },
        "price": 0.999971,
        "logoUrl": "https://assets.coingecko.com/coins/images/6319/large/USD_Coin_icon.png",
        "chainId": "56",
        "tokenid": "anyUSDC",
        "version": "STABLEV3",
        "router": "0xd1c5966f9f5ee6881ff6b261bbeda45972b1b5f3",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3": {
        "address": "0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3",
        "anyToken": {
          "address": "0x1282911d3600b202698997f61f46379db3b9f01e",
          "name": "Binance-PegDaiToken",
          "symbol": "anyDAI",
          "decimals": 18
        },
        "underlying": {
          "address": "0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3",
          "name": "DaiToken",
          "symbol": "DAI",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x6b175474e89094c44da98b954eedeac495271d0f",
            "underlying": {
              "address": "0x6b175474e89094c44da98b954eedeac495271d0f",
              "name": "DaiStablecoin",
              "symbol": "DAI",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "20000000",
            "MinimumSwap": "20",
            "BigValueThreshold": "5000000",
            "SwapFeeRatePerMillion": 0.02,
            "MaximumSwapFee": 1000,
            "MinimumSwapFee": 19.9,
            "anyToken": {
              "address": "0x739ca6d71365a08f584c8fc4e1029045fa8abc4b",
              "name": "DaiStablecoin",
              "symbol": "anyDAI",
              "decimals": 18
            }
          }
        },
        "price": 0.999332,
        "logoUrl": "https://assets.coingecko.com/coins/images/9956/large/4943.png",
        "chainId": "56",
        "tokenid": "anyDAI",
        "version": "STABLEV3",
        "router": "0xd1c5966f9f5ee6881ff6b261bbeda45972b1b5f3",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x2170ed0880ac9a755fd29b2688956bd959f933f8": {
        "address": "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
        "anyToken": {
          "address": "0xdebb1d6a2196f2335ad51fbde7ca587205889360",
          "name": "Binance-PegEthereumToken",
          "symbol": "anyETH",
          "decimals": 18
        },
        "underlying": {
          "address": "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
          "name": "EthereumToken",
          "symbol": "ETH",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",
            "underlying": {
              "address": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",
              "name": "Ethereum",
              "symbol": "ETH",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "11799.41",
            "MinimumSwap": "0.02",
            "BigValueThreshold": "2949.85",
            "SwapFeeRatePerMillion": 0.01,
            "MaximumSwapFee": 0.64,
            "MinimumSwapFee": 0.017,
            "anyToken": {
              "address": "0x0615dbba33fe61a31c7ed131bda6655ed76748b1",
              "name": "Wrapped Ether",
              "symbol": "anyETH",
              "decimals": 18
            }
          }
        },
        "price": 1819.72,
        "logoUrl": "https://assets.coingecko.com/coins/images/279/large/ethereum.png",
        "chainId": "56",
        "tokenid": "anyETH",
        "version": "STABLEV3",
        "router": "0xd1c5966f9f5ee6881ff6b261bbeda45972b1b5f3",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x55d398326f99059ff775485246999027b3197955": {
        "address": "0x55d398326f99059ff775485246999027b3197955",
        "anyToken": {
          "address": "0xedf0c420bc3b92b961c6ec411cc810ca81f5f21a",
          "name": "Binance-PegBSC-USD",
          "symbol": "anyUSDT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x55d398326f99059ff775485246999027b3197955",
          "name": "TetherUSD",
          "symbol": "USDT",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xdac17f958d2ee523a2206206994597c13d831ec7",
            "underlying": {
              "address": "0xdac17f958d2ee523a2206206994597c13d831ec7",
              "name": "TetherUSD",
              "symbol": "USDT",
              "decimals": 6
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "20000000",
            "MinimumSwap": "30",
            "BigValueThreshold": "5000000",
            "SwapFeeRatePerMillion": 0.02,
            "MaximumSwapFee": 1000,
            "MinimumSwapFee": 29.9,
            "anyToken": {
              "address": "0x22648c12acd87912ea1710357b1302c6a4154ebc",
              "name": "TetherUSD",
              "symbol": "anyUSDT",
              "decimals": 6
            }
          }
        },
        "price": 0.999405,
        "logoUrl": "https://assets.coingecko.com/coins/images/325/large/Tether-logo.png",
        "chainId": "56",
        "tokenid": "anyUSDT",
        "version": "STABLEV3",
        "router": "0xd1c5966f9f5ee6881ff6b261bbeda45972b1b5f3",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c": {
        "address": "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c",
        "anyToken": {
          "address": "0x0653553e574657410d41ce758db36617f409b6c5",
          "name": "Binance-Peg BTCB Token",
          "symbol": "anyBTCB",
          "decimals": 18
        },
        "underlying": {
          "address": "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c",
          "name": "BTCB Token",
          "symbol": "BTCB",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x2260fac5e5542a773aa44fbcfedf7c193bc2c599",
            "underlying": {
              "address": "0x2260fac5e5542a773aa44fbcfedf7c193bc2c599",
              "name": "WrappedBTC",
              "symbol": "WBTC",
              "decimals": 8
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "809.39",
            "MinimumSwap": "0.0008",
            "BigValueThreshold": "202.35",
            "SwapFeeRatePerMillion": 0.02,
            "MaximumSwapFee": 0.044,
            "MinimumSwapFee": 0.0007,
            "anyToken": {
              "address": "0xe6b9d092223f39013656702a40dbe6b7decc5746",
              "name": "Wrapped BTC",
              "symbol": "anyWBTC",
              "decimals": 8
            }
          }
        },
        "price": 26761,
        "logoUrl": "https://assets.coingecko.com/coins/images/1/large/bitcoin.png",
        "chainId": "56",
        "tokenid": "anyWBTC",
        "version": "STABLEV3",
        "router": "0xd1c5966f9f5ee6881ff6b261bbeda45972b1b5f3",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      }
    }
  },
  "UNDERLYINGV2": {
    "1": {
      "0x067ede5097574b387ff30999e3a1775f3d7d569d": {
        "address": "0x067ede5097574b387ff30999e3a1775f3d7d569d",
        "anyToken": {
          "address": "0xefaeee334f0fd1712f9a8cc375f427d9cdd40d73",
          "name": "Dopamine",
          "symbol": "anyDOPE",
          "decimals": 18
        },
        "underlying": {
          "address": "0x067ede5097574b387ff30999e3a1775f3d7d569d",
          "name": "Dopamine",
          "symbol": "DOPE",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x067ede5097574b387ff30999e3a1775f3d7d569d",
            "underlying": {
              "address": "0x067ede5097574b387ff30999e3a1775f3d7d569d",
              "name": "Dopamine",
              "symbol": "DOPE",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "4",
            "liquidityType": "INIT",
            "MaximumSwap": "20000000",
            "MinimumSwap": "600",
            "BigValueThreshold": "4000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "30000",
            "MinimumSwapFee": "300",
            "anyToken": {
              "address": "0xe5cf1558a1470cb5c166c2e8651ed0f3c5fb8f42",
              "name": "Dopamine",
              "symbol": "anyDOPE",
              "decimals": 18
            }
          }
        },
        "price": 0.00292274,
        "logoUrl": "https://assets.coingecko.com/coins/images/295/large/dopecoin.png",
        "chainId": "1",
        "tokenid": "anyDOPE",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x7968bc6a03017ea2de509aaa816f163db0f35148": {
        "address": "0x7968bc6a03017ea2de509aaa816f163db0f35148",
        "anyToken": {
          "address": "0x818ec0a7fe18ff94269904fced6ae3dae6d6dc0b",
          "name": "Hedget",
          "symbol": "anyHGET",
          "decimals": 6
        },
        "underlying": {
          "address": "0x7968bc6a03017ea2de509aaa816f163db0f35148",
          "name": "Hedget",
          "symbol": "HGET",
          "decimals": 6
        },
        "destChains": {
          "56": {
            "address": "0xc7d8d35eba58a0935ff2d5a33df105dd9f071731",
            "underlying": {
              "address": "0xc7d8d35eba58a0935ff2d5a33df105dd9f071731",
              "name": "Hedget",
              "symbol": "HGET",
              "decimals": 6
            },
            "swapfeeon": 1,
            "ContractVersion": "4",
            "liquidityType": "INIT",
            "MaximumSwap": "340000",
            "MinimumSwap": "10",
            "BigValueThreshold": "67000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "340",
            "MinimumSwapFee": "5",
            "anyToken": {
              "address": "0x634398cb81b76bfc75ebb434cf7c82036f9e7d78",
              "name": "Hedget",
              "symbol": "anyHGET",
              "decimals": 6
            }
          }
        },
        "price": 0.242332,
        "logoUrl": "https://assets.coingecko.com/coins/images/12453/large/Hedget.png",
        "chainId": "1",
        "tokenid": "anyHGET",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xd794dd1cada4cf79c9eebaab8327a1b0507ef7d4": {
        "address": "0xd794dd1cada4cf79c9eebaab8327a1b0507ef7d4",
        "anyToken": {
          "address": "0x922d641a426dcffaef11680e5358f34d97d112e1",
          "name": "HYVE",
          "symbol": "anyHYVE",
          "decimals": 18
        },
        "underlying": {
          "address": "0xd794dd1cada4cf79c9eebaab8327a1b0507ef7d4",
          "name": "HYVE",
          "symbol": "HYVE",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xf6565a97dc832d93dc83b75ee9aa5c7e8ecb0f9d",
            "underlying": {
              "address": "0xf6565a97dc832d93dc83b75ee9aa5c7e8ecb0f9d",
              "name": "HYVE",
              "symbol": "HYVE",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "4",
            "liquidityType": "INIT",
            "MaximumSwap": "5800000",
            "MinimumSwap": "172",
            "BigValueThreshold": "1200000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "5800",
            "MinimumSwapFee": "86",
            "anyToken": {
              "address": "0x94977c9888f3d2fafae290d33fab4a5a598ad764",
              "name": "HYVE",
              "symbol": "anyHYVE",
              "decimals": 18
            }
          }
        },
        "price": 0.058524,
        "logoUrl": "https://assets.coingecko.com/coins/images/13072/large/MKHXNbf.png",
        "chainId": "1",
        "tokenid": "anyHYVE",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x000000000000d0151e748d25b766e77efe2a6c83": {
        "address": "0x000000000000d0151e748d25b766e77efe2a6c83",
        "anyToken": {
          "address": "0xfa9343c3897324496a05fc75abed6bac29f8a40f",
          "name": "XDEFIGovernanceToken",
          "symbol": "anyXDEX",
          "decimals": 18
        },
        "underlying": {
          "address": "0x000000000000d0151e748d25b766e77efe2a6c83",
          "name": "XDEFIGovernanceToken",
          "symbol": "XDEX",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x47f46484a8d7573e07513b6e6b2bdc4f748ba294",
            "underlying": {
              "address": "0x47f46484a8d7573e07513b6e6b2bdc4f748ba294",
              "name": "XDEFIGovernanceToken",
              "symbol": "XDEX",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "4",
            "liquidityType": "INIT",
            "MaximumSwap": "25000000",
            "MinimumSwap": "750",
            "BigValueThreshold": "5000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "25000",
            "MinimumSwapFee": "375",
            "anyToken": {
              "address": "0xbbc4a8d076f4b1888fec42581b6fc58d242cf2d5",
              "name": "XDEFIGovernanceToken",
              "symbol": "anyXDEX",
              "decimals": 18
            }
          }
        },
        "price": 0.01581463,
        "logoUrl": "https://assets.coingecko.com/coins/images/14485/large/logo.png",
        "chainId": "1",
        "tokenid": "anyXDEX",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xae12c5930881c53715b369cec7606b70d8eb229f": {
        "address": "0xae12c5930881c53715b369cec7606b70d8eb229f",
        "anyToken": {
          "address": "0x3d632d9e1a60a0880dd45e61f279d919b5748377",
          "name": "Coin98",
          "symbol": "anyC98",
          "decimals": 18
        },
        "underlying": {
          "address": "0xae12c5930881c53715b369cec7606b70d8eb229f",
          "name": "Coin98",
          "symbol": "C98",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xaec945e04baf28b135fa7c640f624f8d90f1c3a6",
            "underlying": {
              "address": "0xaec945e04baf28b135fa7c640f624f8d90f1c3a6",
              "name": "Coin98",
              "symbol": "C98",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "840000",
            "MinimumSwap": "8.4",
            "BigValueThreshold": "170000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "840",
            "MinimumSwapFee": "4.2",
            "anyToken": {
              "address": "0xa8752333f6a6fe47323a4edac3d09bb1048a0e23",
              "name": "Coin98",
              "symbol": "anyC98",
              "decimals": 18
            }
          }
        },
        "price": 0.191205,
        "logoUrl": "https://assets.coingecko.com/coins/images/17117/large/logo.png",
        "chainId": "1",
        "tokenid": "anyC98",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x5d30ad9c6374bf925d0a75454fa327aacf778492": {
        "address": "0x5d30ad9c6374bf925d0a75454fa327aacf778492",
        "anyToken": {
          "address": "0x9ea48018587fdf4b5857940171d3d32465b0b761",
          "name": "PeriFinanceToken",
          "symbol": "anyPERI",
          "decimals": 18
        },
        "underlying": {
          "address": "0x5d30ad9c6374bf925d0a75454fa327aacf778492",
          "name": "PeriFinanceToken",
          "symbol": "PERI",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xb49b7e0742ecb4240ffe91661d2a580677460b6a",
            "underlying": {
              "address": "0xb49b7e0742ecb4240ffe91661d2a580677460b6a",
              "name": "PeriFinanceToken",
              "symbol": "PERI",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "1400000",
            "MinimumSwap": "2.8",
            "BigValueThreshold": "272000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "272",
            "MinimumSwapFee": "1.4",
            "anyToken": {
              "address": "0x2244faab5a2a633cb7f6e3d35e7db8ec0136d3e2",
              "name": "PeriFinanceToken",
              "symbol": "anyPERI",
              "decimals": 18
            }
          }
        },
        "price": 0.061164,
        "logoUrl": "https://assets.coingecko.com/coins/images/15313/large/6xVEMS1.png",
        "chainId": "1",
        "tokenid": "anyPERI",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x6e765d26388a17a6e86c49a8e41df3f58abcd337": {
        "address": "0x6e765d26388a17a6e86c49a8e41df3f58abcd337",
        "anyToken": {
          "address": "0x7f8bc696bebbbd29255f871cbef55b74e8f10e57",
          "name": "Kangal",
          "symbol": "anyKANGAL",
          "decimals": 18
        },
        "underlying": {
          "address": "0x6e765d26388a17a6e86c49a8e41df3f58abcd337",
          "name": "Kangal",
          "symbol": "KANGAL",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xd632bd021a07af70592ce1e18717ab9aa126decb",
            "underlying": {
              "address": "0xd632bd021a07af70592ce1e18717ab9aa126decb",
              "name": "Kangal",
              "symbol": "bKANGAL",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "350000000000",
            "MinimumSwap": "700000",
            "BigValueThreshold": "70000000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "70000000",
            "MinimumSwapFee": "350000",
            "anyToken": {
              "address": "0x56501b0b12ee9518c2991451bbc8d7f9267949d2",
              "name": "Kangal",
              "symbol": "anybKANGAL",
              "decimals": 18
            }
          }
        },
        "price": 0.00000228,
        "logoUrl": "https://assets.coingecko.com/coins/images/14241/large/logo-200.png",
        "chainId": "1",
        "tokenid": "anyKANGAL",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xf6650117017ffd48b725b4ec5a00b414097108a7": {
        "address": "0xf6650117017ffd48b725b4ec5a00b414097108a7",
        "anyToken": {
          "address": "0xf7428ffcb2581a2804998efbb036a43255c8a8d3",
          "name": "XIDOFINANCE",
          "symbol": "anyXIDO",
          "decimals": 18
        },
        "underlying": {
          "address": "0xf6650117017ffd48b725b4ec5a00b414097108a7",
          "name": "XIDOFINANCE",
          "symbol": "XIDO",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x3764bc0de9b6a68c67929130aaec16b6060cab8c",
            "underlying": {
              "address": "0x3764bc0de9b6a68c67929130aaec16b6060cab8c",
              "name": "XIDOFINANCE",
              "symbol": "XIDO",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "81000",
            "MinimumSwap": "0.16",
            "BigValueThreshold": "16100",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "16",
            "MinimumSwapFee": "0.08",
            "anyToken": {
              "address": "0x6e283470cb5f0c7315c6e165eec4cc39965e5ceb",
              "name": "XIDOFINANCE",
              "symbol": "anyXIDO",
              "decimals": 18
            }
          }
        },
        "price": 2.23,
        "logoUrl": "https://assets.coingecko.com/coins/images/16161/large/KJw4clj.png",
        "chainId": "1",
        "tokenid": "anyXIDO",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x2cc71c048a804da930e28e93f3211dc03c702995": {
        "address": "0x2cc71c048a804da930e28e93f3211dc03c702995",
        "anyToken": {
          "address": "0x38389eb214c4ac1cdda7a7582ab01e8a9bb548ba",
          "name": "Kripton",
          "symbol": "anyLPK",
          "decimals": 8
        },
        "underlying": {
          "address": "0x2cc71c048a804da930e28e93f3211dc03c702995",
          "name": "Kripton",
          "symbol": "LPK",
          "decimals": 8
        },
        "destChains": {
          "56": {
            "address": "0x9b71b5511998e0798625b8fa74e86d8192de78c1",
            "underlying": {
              "address": "0x9b71b5511998e0798625b8fa74e86d8192de78c1",
              "name": "Kripton",
              "symbol": "LPK",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "8400000000",
            "MinimumSwap": "17000",
            "BigValueThreshold": "1700000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1700000",
            "MinimumSwapFee": "8400",
            "anyToken": {
              "address": "0x9833c643f387ecfb76aa8114546ad524703c66fb",
              "name": "Kripton",
              "symbol": "anyLPK",
              "decimals": 18
            }
          }
        },
        "price": 0.000039,
        "logoUrl": "https://assets.coingecko.com/coins/images/4880/large/l-pesa.jpg",
        "chainId": "1",
        "tokenid": "anyLPK",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x090185f2135308bad17527004364ebcc2d37e5f6": {
        "address": "0x090185f2135308bad17527004364ebcc2d37e5f6",
        "anyToken": {
          "address": "0x4e840aadd28da189b9906674b4afcb77c128d9ea",
          "name": "SpellToken",
          "symbol": "anySPELL",
          "decimals": 18
        },
        "underlying": {
          "address": "0x090185f2135308bad17527004364ebcc2d37e5f6",
          "name": "SpellToken",
          "symbol": "SPELL",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x9fe28d11ce29e340b7124c493f59607cbab9ce48",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "4600000000",
            "MinimumSwap": "200",
            "BigValueThreshold": "910000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "32750",
            "MinimumSwapFee": "164",
            "anyToken": {
              "address": "0x9fe28d11ce29e340b7124c493f59607cbab9ce48",
              "name": "Spell Token",
              "symbol": "SPELL",
              "decimals": 18
            }
          }
        },
        "price": 0.00057821,
        "logoUrl": "https://assets.coingecko.com/coins/images/15861/large/abracadabra-3.png",
        "chainId": "1",
        "tokenid": "anySPELL",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x5f6c5c2fb289db2228d159c69621215e354218d7": {
        "address": "0x5f6c5c2fb289db2228d159c69621215e354218d7",
        "anyToken": {
          "address": "0xd4143e8db48a8f73afcdf13d7b3305f28da38116",
          "name": "DemodyfiToken",
          "symbol": "anyDMOD",
          "decimals": 18
        },
        "underlying": {
          "address": "0x5f6c5c2fb289db2228d159c69621215e354218d7",
          "name": "DemodyfiToken",
          "symbol": "DMOD",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x002d8563759f5e1eaf8784181f3973288f6856e4",
            "underlying": {
              "address": "0x002d8563759f5e1eaf8784181f3973288f6856e4",
              "name": "DemodyfiToken",
              "symbol": "DMOD",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "26000000",
            "MinimumSwap": "52",
            "BigValueThreshold": "5200000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "5200",
            "MinimumSwapFee": "26",
            "anyToken": {
              "address": "0x6f1bc0967945465539877b39ba48373b0219248f",
              "name": "DemodyfiToken",
              "symbol": "anyDMOD",
              "decimals": 18
            }
          }
        },
        "price": 0.00380089,
        "logoUrl": "https://assets.coingecko.com/coins/images/16262/large/Logo_coingecko_%281%29.png",
        "chainId": "1",
        "tokenid": "anyDMOD",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x6911f552842236bd9e8ea8ddbb3fb414e2c5fa9d": {
        "address": "0x6911f552842236bd9e8ea8ddbb3fb414e2c5fa9d",
        "anyToken": {
          "address": "0x7d09a42045359aa85488bc07d0ada83e22d50017",
          "name": "SynapseNetwork",
          "symbol": "anySNP",
          "decimals": 18
        },
        "underlying": {
          "address": "0x6911f552842236bd9e8ea8ddbb3fb414e2c5fa9d",
          "name": "SynapseNetwork",
          "symbol": "SNP",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x6911f552842236bd9e8ea8ddbb3fb414e2c5fa9d",
            "underlying": {
              "address": "0x6911f552842236bd9e8ea8ddbb3fb414e2c5fa9d",
              "name": "SynapseNetwork",
              "symbol": "SNP",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "8000000",
            "MinimumSwap": "16",
            "BigValueThreshold": "1600000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1600",
            "MinimumSwapFee": "8",
            "anyToken": {
              "address": "0xe408849d21646a42fd5e36cc520b26e7cdd62370",
              "name": "SynapseNetwork",
              "symbol": "anySNP",
              "decimals": 18
            }
          }
        },
        "price": 0.01028263,
        "logoUrl": "https://assets.coingecko.com/coins/images/17962/large/Webp-net-resizeimage_%282%29.png",
        "chainId": "1",
        "tokenid": "anySNP",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x054f76beed60ab6dbeb23502178c52d6c5debe40": {
        "address": "0x054f76beed60ab6dbeb23502178c52d6c5debe40",
        "anyToken": {
          "address": "0xe3ab61371ecc88534c522922a026f2296116c109",
          "name": "DeFiner",
          "symbol": "anyFIN",
          "decimals": 18
        },
        "underlying": {
          "address": "0x054f76beed60ab6dbeb23502178c52d6c5debe40",
          "name": "DeFiner",
          "symbol": "FIN",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00064866,
        "logoUrl": "https://assets.coingecko.com/coins/images/12780/large/PdaW8Lb.png",
        "chainId": "1",
        "tokenid": "anyFIN",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x85ffb35957203dfd12061eaecd708db623bd567c": {
        "address": "0x85ffb35957203dfd12061eaecd708db623bd567c",
        "anyToken": {
          "address": "0x5d47baba0d66083c52009271faf3f50dcc01023c",
          "name": "Ledgity",
          "symbol": "anyLTY",
          "decimals": 18
        },
        "underlying": {
          "address": "0x85ffb35957203dfd12061eaecd708db623bd567c",
          "name": "Ledgity",
          "symbol": "LTY",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x0cbe5c4f318035b866aacfaf7d018fb4c5f920f3",
            "underlying": {
              "address": "0x0cbe5c4f318035b866aacfaf7d018fb4c5f920f3",
              "name": "Ledgity",
              "symbol": "LTY",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "520000000",
            "MinimumSwap": "1040",
            "BigValueThreshold": "110000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "102200",
            "MinimumSwapFee": "520",
            "anyToken": {
              "address": "0x158335c10d3eee1c5db5a302ab972022f3e59040",
              "name": "Ledgity",
              "symbol": "anyLTY",
              "decimals": 18
            }
          }
        },
        "price": 0.00083093,
        "logoUrl": "https://assets.coingecko.com/coins/images/17939/large/ledgity.PNG",
        "chainId": "1",
        "tokenid": "anyLTY",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x491604c0fdf08347dd1fa4ee062a822a5dd06b5d": {
        "address": "0x491604c0fdf08347dd1fa4ee062a822a5dd06b5d",
        "anyToken": {
          "address": "0xe5cf1558a1470cb5c166c2e8651ed0f3c5fb8f42",
          "name": "CartesiToken",
          "symbol": "anyCTSI",
          "decimals": 18
        },
        "underlying": {
          "address": "0x491604c0fdf08347dd1fa4ee062a822a5dd06b5d",
          "name": "Cartesi Token",
          "symbol": "CTSI",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x8da443f84fea710266c8eb6bc34b71702d033ef2",
            "underlying": {
              "address": "0x8da443f84fea710266c8eb6bc34b71702d033ef2",
              "name": "CartesiToken",
              "symbol": "CTSI",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "2600000",
            "MinimumSwap": "26",
            "BigValueThreshold": "510000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "2600",
            "MinimumSwapFee": "13",
            "anyToken": {
              "address": "0x4b6f0494b08d6f387b392cb9f56539b238de3367",
              "name": "CartesiToken",
              "symbol": "anyCTSI",
              "decimals": 18
            }
          }
        },
        "price": 0.175235,
        "logoUrl": "https://assets.coingecko.com/coins/images/11038/large/cartesi.png",
        "chainId": "1",
        "tokenid": "anyCTSI",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x32a7c02e79c4ea1008dd6564b35f131428673c41": {
        "address": "0x32a7c02e79c4ea1008dd6564b35f131428673c41",
        "anyToken": {
          "address": "0x82f0b8b456c1a451378467398982d4834b6829c1",
          "name": "CRUST",
          "symbol": "anyCRU",
          "decimals": 18
        },
        "underlying": {
          "address": "0x32a7c02e79c4ea1008dd6564b35f131428673c41",
          "name": "CRUST",
          "symbol": "CRU",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.813144,
        "logoUrl": "https://assets.coingecko.com/coins/images/12549/large/sAB3KVzD_400x400.jpg",
        "chainId": "1",
        "tokenid": "anyCRU",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x4e352cf164e64adcbad318c3a1e222e9eba4ce42": {
        "address": "0x4e352cf164e64adcbad318c3a1e222e9eba4ce42",
        "anyToken": {
          "address": "0xd1a891e6eccb7471ebd6bc352f57150d4365db21",
          "name": "MCDEXToken",
          "symbol": "anyMCB",
          "decimals": 18
        },
        "underlying": {
          "address": "0x4e352cf164e64adcbad318c3a1e222e9eba4ce42",
          "name": "MCDEXToken",
          "symbol": "MCB",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x5fe80d2cd054645b9419657d3d10d26391780a7b",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "200000",
            "MinimumSwap": "0.28",
            "BigValueThreshold": "40000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "4",
            "MinimumSwapFee": "0.14",
            "anyToken": {
              "address": "0x5fe80d2cd054645b9419657d3d10d26391780a7b",
              "name": "MCDEXToken",
              "symbol": "MCB",
              "decimals": 18
            }
          }
        },
        "price": 13.39,
        "logoUrl": "https://assets.coingecko.com/coins/images/11796/large/mcb.png",
        "chainId": "1",
        "tokenid": "anyMCB",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x10010078a54396f62c96df8532dc2b4847d47ed3": {
        "address": "0x10010078a54396f62c96df8532dc2b4847d47ed3",
        "anyToken": {
          "address": "0xc8a45dd787a301c38ad33f692f0d41c18590ef94",
          "name": "HundredFinance",
          "symbol": "anyHND",
          "decimals": 18
        },
        "underlying": {
          "address": "0x10010078a54396f62c96df8532dc2b4847d47ed3",
          "name": "HundredFinance",
          "symbol": "HND",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.01727479,
        "logoUrl": "https://assets.coingecko.com/coins/images/18445/large/hnd.PNG",
        "chainId": "1",
        "tokenid": "anyHND",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xd26fb114401ec86887cd09f62eccd95fcf20b571": {
        "address": "0xd26fb114401ec86887cd09f62eccd95fcf20b571",
        "anyToken": {
          "address": "0x97cd1cfe2ed5712660bb6c14053c0ecb031bff7d",
          "name": "bitcoinplatinums",
          "symbol": "anyBCP",
          "decimals": 8
        },
        "underlying": {
          "address": "0xd26fb114401ec86887cd09f62eccd95fcf20b571",
          "name": "bitcoinplatinums",
          "symbol": "BCP",
          "decimals": 8
        },
        "destChains": {
          "56": {
            "address": "0xd21d5467c341dc697b384cf4e4be56394cae5d0b",
            "underlying": {
              "address": "0xd21d5467c341dc697b384cf4e4be56394cae5d0b",
              "name": "BitcoinPlatinums",
              "symbol": "BCP",
              "decimals": 8
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "12000",
            "MinimumSwap": "0.024",
            "BigValueThreshold": "2400",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "2.4",
            "MinimumSwapFee": "0.012",
            "anyToken": {
              "address": "0xf3f64ad6af423be76a06908141217cfeb6f718c6",
              "name": "BitcoinPlatinums",
              "symbol": "anyBCP",
              "decimals": 8
            }
          }
        },
        "price": 2.33695e-7,
        "logoUrl": "https://assets.coingecko.com/coins/images/8395/large/DzEn-8rWkAALlqK_%281%29.jpg",
        "chainId": "1",
        "tokenid": "anyBCP",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x88a9a52f944315d5b4e917b9689e65445c401e83": {
        "address": "0x88a9a52f944315d5b4e917b9689e65445c401e83",
        "anyToken": {
          "address": "0x3bd2dfd03bc7c3011ed7fb8c4d0949b382726cee",
          "name": "FearNFTs",
          "symbol": "anyFEAR",
          "decimals": 18
        },
        "underlying": {
          "address": "0x88a9a52f944315d5b4e917b9689e65445c401e83",
          "name": "FearNFTs",
          "symbol": "FEAR",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x9ba6a67a6f3b21705a46b380a1b97373a33da311",
            "underlying": {
              "address": "0x9ba6a67a6f3b21705a46b380a1b97373a33da311",
              "name": "Chainport.io-PegFearNFTs",
              "symbol": "FEAR",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "5520000",
            "MinimumSwap": "11.2",
            "BigValueThreshold": "1102000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1102",
            "MinimumSwapFee": "5.6",
            "anyToken": {
              "address": "0xd95f99d6e5527eeb35eba9e024900ee7f8eaeafc",
              "name": "Chainport.io-PegFearNFTs",
              "symbol": "anyFEAR",
              "decimals": 18
            }
          }
        },
        "price": 0.11102,
        "logoUrl": "https://assets.coingecko.com/coins/images/15825/large/fear-logo-400-400.png",
        "chainId": "1",
        "tokenid": "anyFEAR",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xff3ac80c1caa08cbd43a7e90d20c398d54c7342f": {
        "address": "0xff3ac80c1caa08cbd43a7e90d20c398d54c7342f",
        "anyToken": {
          "address": "0x5fcb9de282af6122ce3518cde28b7089c9f97b26",
          "name": "StakedIceTokens",
          "symbol": "anynICE",
          "decimals": 18
        },
        "underlying": {
          "address": "0xff3ac80c1caa08cbd43a7e90d20c398d54c7342f",
          "name": "StakedIceTokens",
          "symbol": "nICE",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x8506560320826e459f356cb56ccf721da8875414",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "2200000",
            "MinimumSwap": "0.22",
            "BigValueThreshold": "220000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "21",
            "MinimumSwapFee": "0.11",
            "anyToken": {
              "address": "0x8506560320826e459f356cb56ccf721da8875414",
              "name": "StakedIceTokens",
              "symbol": "nICE",
              "decimals": 18
            }
          }
        },
        "price": 1.12,
        "logoUrl": "https://assets.coingecko.com/coins/images/14586/large/ice.png",
        "chainId": "1",
        "tokenid": "anynICE",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xca76543cf381ebbb277be79574059e32108e3e65": {
        "address": "0xca76543cf381ebbb277be79574059e32108e3e65",
        "anyToken": {
          "address": "0x8e60d469a94e1be77668e8c9c55c498701870762",
          "name": "WrappedsOHM",
          "symbol": "anywsOHM",
          "decimals": 18
        },
        "underlying": {
          "address": "0xca76543cf381ebbb277be79574059e32108e3e65",
          "name": "WrappedsOHM",
          "symbol": "wsOHM",
          "decimals": 18
        },
        "destChains": {},
        "price": 2491.02,
        "logoUrl": "https://assets.coingecko.com/coins/images/19221/large/token_wsOHM_logo.png",
        "chainId": "1",
        "tokenid": "anywsOHM",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x0f17bc9a994b87b5225cfb6a2cd4d667adb4f20b": {
        "address": "0x0f17bc9a994b87b5225cfb6a2cd4d667adb4f20b",
        "anyToken": {
          "address": "0xa71353bb71dda105d383b02fc2dd172c4d39ef8b",
          "name": "JarvisSyntheticEuro",
          "symbol": "anyjEUR",
          "decimals": 18
        },
        "underlying": {
          "address": "0x0f17bc9a994b87b5225cfb6a2cd4d667adb4f20b",
          "name": "JarvisSyntheticEuro",
          "symbol": "jEUR",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x23b8683ff98f9e4781552dfe6f12aa32814924e8",
            "underlying": {
              "address": "0x23b8683ff98f9e4781552dfe6f12aa32814924e8",
              "name": "Jarvis Synthetic Euro",
              "symbol": "jEUR",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "4504504.5",
            "MinimumSwap": "9.01",
            "BigValueThreshold": "900900.9",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "900.9",
            "MinimumSwapFee": "4.5",
            "anyToken": {
              "address": "0x1ad411be31cba244d0ff981a8c50cdd92002afd9",
              "name": "Jarvis Synthetic Euro",
              "symbol": "anyjEUR",
              "decimals": 18
            }
          }
        },
        "price": 1.076,
        "logoUrl": "https://assets.coingecko.com/coins/images/15725/large/jEUR.png",
        "chainId": "1",
        "tokenid": "anyjEUR",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xd8c1232fcd219286e341271385bd70601503b3d7": {
        "address": "0xd8c1232fcd219286e341271385bd70601503b3d7",
        "anyToken": {
          "address": "0x47536f17f4ff30e64a96a7555826b8f9e66ec468",
          "name": "Dogira",
          "symbol": "anyDOGIRA",
          "decimals": 9
        },
        "underlying": {
          "address": "0xd8c1232fcd219286e341271385bd70601503b3d7",
          "name": "Dogira",
          "symbol": "DOGIRA",
          "decimals": 9
        },
        "destChains": {},
        "price": 0.00068028,
        "logoUrl": "https://assets.coingecko.com/coins/images/14634/large/IQgaRw0.png",
        "chainId": "1",
        "tokenid": "anyDOGIRA",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xd9016a907dc0ecfa3ca425ab20b6b785b42f2373": {
        "address": "0xd9016a907dc0ecfa3ca425ab20b6b785b42f2373",
        "anyToken": {
          "address": "0xf1b7980826cd89a99e45eb4236492fd42d463660",
          "name": "GAMEE",
          "symbol": "anyGMEE",
          "decimals": 18
        },
        "underlying": {
          "address": "0xd9016a907dc0ecfa3ca425ab20b6b785b42f2373",
          "name": "GAMEE",
          "symbol": "GMEE",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x84e9a6f9d240fdd33801f7135908bfa16866939a",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "13000000",
            "MinimumSwap": "26",
            "BigValueThreshold": "2600000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "2600",
            "MinimumSwapFee": "13",
            "anyToken": {
              "address": "0x84e9a6f9d240fdd33801f7135908bfa16866939a",
              "name": "GAMEE",
              "symbol": "GMEE",
              "decimals": 18
            }
          }
        },
        "price": 0.01020672,
        "logoUrl": "https://assets.coingecko.com/coins/images/14716/large/gmee-200x200.png",
        "chainId": "1",
        "tokenid": "anyGMEE",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x147faf8de9d8d8daae129b187f0d02d819126750": {
        "address": "0x147faf8de9d8d8daae129b187f0d02d819126750",
        "anyToken": {
          "address": "0x6b26780e74cfc64b88c9e1ebc33ffae29c1679ea",
          "name": "GeoDBCoin",
          "symbol": "anyGEO",
          "decimals": 18
        },
        "underlying": {
          "address": "0x147faf8de9d8d8daae129b187f0d02d819126750",
          "name": "GeoDBCoin",
          "symbol": "GEO",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xc342774492b54ce5f8ac662113ed702fc1b34972",
            "underlying": {
              "address": "0xc342774492b54ce5f8ac662113ed702fc1b34972",
              "name": "BinanceGeoDBCoin",
              "symbol": "BGEO",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "75000000",
            "MinimumSwap": "150",
            "BigValueThreshold": "15000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "15000",
            "MinimumSwapFee": "75",
            "anyToken": {
              "address": "0x49369aeee769bd6043726b0cd5f0bd53d843bc32",
              "name": "BinanceGeoDBCoin",
              "symbol": "anyGEO",
              "decimals": 18
            }
          }
        },
        "price": 0.00249037,
        "logoUrl": "https://assets.coingecko.com/coins/images/11130/large/geodb.png",
        "chainId": "1",
        "tokenid": "anyGEO",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x9040e237c3bf18347bb00957dc22167d0f2b999d": {
        "address": "0x9040e237c3bf18347bb00957dc22167d0f2b999d",
        "anyToken": {
          "address": "0x826ee16b4b401e84c76b48a2a81545cbb994a995",
          "name": "Standard",
          "symbol": "anySTND",
          "decimals": 18
        },
        "underlying": {
          "address": "0x9040e237c3bf18347bb00957dc22167d0f2b999d",
          "name": "Standard",
          "symbol": "STND",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.01112499,
        "logoUrl": "https://assets.coingecko.com/coins/images/15100/large/standard.jpeg",
        "chainId": "1",
        "tokenid": "anySTND",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x9fa69536d1cda4a04cfb50688294de75b505a9ae": {
        "address": "0x9fa69536d1cda4a04cfb50688294de75b505a9ae",
        "anyToken": {
          "address": "0xc5e509bc8438d4f4ee355282eeb4af92ae14e43a",
          "name": "DeRaceToken",
          "symbol": "anyDERC",
          "decimals": 18
        },
        "underlying": {
          "address": "0x9fa69536d1cda4a04cfb50688294de75b505a9ae",
          "name": "DeRaceToken",
          "symbol": "DERC",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x373e768f79c820aa441540d254dca6d045c6d25b",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "1310000",
            "MinimumSwap": "2.6",
            "BigValueThreshold": "261000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "260",
            "MinimumSwapFee": "1.3",
            "anyToken": {
              "address": "0x373e768f79c820aa441540d254dca6d045c6d25b",
              "name": "DeRaceToken",
              "symbol": "DERC",
              "decimals": 18
            }
          }
        },
        "price": 0.143623,
        "logoUrl": "https://assets.coingecko.com/coins/images/17438/large/derace-logo-black-coingecko.png",
        "chainId": "1",
        "tokenid": "anyDERC",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xce16a802725438af9b4dcac00e7791e3d890e3b4": {
        "address": "0xce16a802725438af9b4dcac00e7791e3d890e3b4",
        "anyToken": {
          "address": "0x8cd309e14575203535ef120b5b0ab4dded0c2073",
          "name": "Hodooi.com",
          "symbol": "anyHOD",
          "decimals": 18
        },
        "underlying": {
          "address": "0xce16a802725438af9b4dcac00e7791e3d890e3b4",
          "name": "Hodooi.com",
          "symbol": "HOD",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x19a4866a85c652eb4a2ed44c42e4cb2863a62d51",
            "underlying": {
              "address": "0x19a4866a85c652eb4a2ed44c42e4cb2863a62d51",
              "name": "Hodooi.comToken",
              "symbol": "HOD",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "120000000",
            "MinimumSwap": "240",
            "BigValueThreshold": "24000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "24000",
            "MinimumSwapFee": "120",
            "anyToken": {
              "address": "0xa0eda2d19211d108772711a3698c69f79673aec8",
              "name": "Hodooi.comToken",
              "symbol": "anyHOD",
              "decimals": 18
            }
          }
        },
        "price": 0.00243978,
        "logoUrl": "https://assets.coingecko.com/coins/images/16301/large/HoDooi-Logo-V2-White-02.png",
        "chainId": "1",
        "tokenid": "anyHOD",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x26fa3fffb6efe8c1e69103acb4044c26b9a106a9": {
        "address": "0x26fa3fffb6efe8c1e69103acb4044c26b9a106a9",
        "anyToken": {
          "address": "0x6b289cceaa8639e3831095d75a3e43520fabf552",
          "name": "Staked Spell Tokens",
          "symbol": "anysSPELL",
          "decimals": 18
        },
        "underlying": {
          "address": "0x26fa3fffb6efe8c1e69103acb4044c26b9a106a9",
          "name": "Staked Spell Tokens",
          "symbol": "sSPELL",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x66eff5221ca926636224650fd3b9c497ff828f7d",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "170000000",
            "MinimumSwap": "324",
            "BigValueThreshold": "33000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "32332",
            "MinimumSwapFee": "162",
            "anyToken": {
              "address": "0x66eff5221ca926636224650fd3b9c497ff828f7d",
              "name": "Staked Spell Tokens",
              "symbol": "sSPELL",
              "decimals": 18
            }
          }
        },
        "price": 0.00057821,
        "logoUrl": "https://assets.coingecko.com/coins/images/15861/large/abracadabra-3.png",
        "chainId": "1",
        "tokenid": "anysSPELL",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xb8647e90c0645152fccf4d9abb6b59eb4aa99052": {
        "address": "0xb8647e90c0645152fccf4d9abb6b59eb4aa99052",
        "anyToken": {
          "address": "0xafb2780cbb58b2af27023eb2a0e60c8ca0eee9bb",
          "name": "KeyFi Token",
          "symbol": "anyKEYFI",
          "decimals": 18
        },
        "underlying": {
          "address": "0xb8647e90c0645152fccf4d9abb6b59eb4aa99052",
          "name": "KeyFi Token",
          "symbol": "KEYFI",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x4b6000f9163de2e3f0a01ec37e06e1469dbbce9d",
            "underlying": {
              "address": "0x4b6000f9163de2e3f0a01ec37e06e1469dbbce9d",
              "name": "KeyFi Token",
              "symbol": "KEYFI",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "6400000",
            "MinimumSwap": "12.8",
            "BigValueThreshold": "1300000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1273",
            "MinimumSwapFee": "6.4",
            "anyToken": {
              "address": "0xe1168753035cfb5bf8841bef92355c583e5b704b",
              "name": "KeyFi Token",
              "symbol": "anyKEYFI",
              "decimals": 18
            }
          }
        },
        "price": 0.04439985,
        "logoUrl": "https://assets.coingecko.com/coins/images/15098/large/keyfi_logo.jpg",
        "chainId": "1",
        "tokenid": "anyKEYFI",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xf063fe1ab7a291c5d06a86e14730b00bf24cb589": {
        "address": "0xf063fe1ab7a291c5d06a86e14730b00bf24cb589",
        "anyToken": {
          "address": "0x8323fcf06d58f49533da60906d731c6a56626fb2",
          "name": "DxSale.Network",
          "symbol": "anySALE",
          "decimals": 18
        },
        "underlying": {
          "address": "0xf063fe1ab7a291c5d06a86e14730b00bf24cb589",
          "name": "DxSale.Network",
          "symbol": "SALE",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x04f73a09e2eb410205be256054794fb452f0d245",
            "underlying": {
              "address": "0x04f73a09e2eb410205be256054794fb452f0d245",
              "name": "DxSale.Network",
              "symbol": "SALE",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "7100000",
            "MinimumSwap": "14",
            "BigValueThreshold": "1500000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1410",
            "MinimumSwapFee": "7",
            "anyToken": {
              "address": "0xb969792e669b92e2e6d33441a0c6caf3aee1d01d",
              "name": "DxSale.Network",
              "symbol": "anySALE",
              "decimals": 18
            }
          }
        },
        "price": 0.127928,
        "logoUrl": "https://assets.coingecko.com/coins/images/12250/large/dx-light.png",
        "chainId": "1",
        "tokenid": "anySALE",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x327673ae6b33bd3d90f0096870059994f30dc8af": {
        "address": "0x327673ae6b33bd3d90f0096870059994f30dc8af",
        "anyToken": {
          "address": "0x937e077abaea52d3abf879c9b9d3f2ebd15baa21",
          "name": "Lympo Market Token",
          "symbol": "anyLMT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x327673ae6b33bd3d90f0096870059994f30dc8af",
          "name": "LympoMarketToken",
          "symbol": "LMT",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x9617857e191354dbea0b714d78bc59e57c411087",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "400000000",
            "MinimumSwap": "800",
            "BigValueThreshold": "80000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "80000",
            "MinimumSwapFee": "400",
            "anyToken": {
              "address": "0x9617857e191354dbea0b714d78bc59e57c411087",
              "name": "LympoMarketToken",
              "symbol": "LMT",
              "decimals": 18
            }
          }
        },
        "price": 0.00049978,
        "logoUrl": "https://assets.coingecko.com/coins/images/15155/large/coin_%282%29.png",
        "chainId": "1",
        "tokenid": "anyLMT",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xac57de9c1a09fec648e93eb98875b212db0d460b": {
        "address": "0xac57de9c1a09fec648e93eb98875b212db0d460b",
        "anyToken": {
          "address": "0x8b92ea35171e29948cc9e49c52ac8db0549b7d6b",
          "name": "Baby Doge Coin",
          "symbol": "anyBabyDoge",
          "decimals": 9
        },
        "underlying": {
          "address": "0xac57de9c1a09fec648e93eb98875b212db0d460b",
          "name": "Baby Doge Coin",
          "symbol": "BabyDoge",
          "decimals": 9
        },
        "destChains": {
          "56": {
            "address": "0xc748673057861a797275cd8a068abb95a902e8de",
            "underlying": {
              "address": "0xc748673057861a797275cd8a068abb95a902e8de",
              "name": "BabyDogeCoin",
              "symbol": "BabyDoge",
              "decimals": 9
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "1720000000000000",
            "MinimumSwap": "3430000000",
            "BigValueThreshold": "343000000000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "343000000000",
            "MinimumSwapFee": "1720000000",
            "anyToken": {
              "address": "0xf9d051603fa3a69967e93c5b506ccf0292ccd849",
              "name": "Baby Doge Coin",
              "symbol": "anyBabyDoge",
              "decimals": 9
            }
          }
        },
        "price": 1.945e-9,
        "logoUrl": "https://assets.coingecko.com/coins/images/16125/large/Baby_Doge.png",
        "chainId": "1",
        "tokenid": "anyBabyDoge",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xdefa4e8a7bcba345f687a2f1456f5edd9ce97202": {
        "address": "0xdefa4e8a7bcba345f687a2f1456f5edd9ce97202",
        "anyToken": {
          "address": "0x7beb05cf5681f402e762f8569c2fc138a2172978",
          "name": "Kyber Network Crystal v2",
          "symbol": "anyKNC",
          "decimals": 18
        },
        "underlying": {
          "address": "0xdefa4e8a7bcba345f687a2f1456f5edd9ce97202",
          "name": "Kyber Network Crystal v2",
          "symbol": "KNC",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xfe56d5892bdffc7bf58f2e84be1b2c32d21c308b",
            "underlying": {
              "address": "0xfe56d5892bdffc7bf58f2e84be1b2c32d21c308b",
              "name": "Kyber Network Crystal",
              "symbol": "KNC",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "1113585.75",
            "MinimumSwap": "2.227",
            "BigValueThreshold": "222717.15",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "222.72",
            "MinimumSwapFee": "1.113",
            "anyToken": {
              "address": "0x5650c49d662cb83666ab0fad224453b603179d2a",
              "name": "Kyber Network Crystal",
              "symbol": "anyKNC",
              "decimals": 18
            }
          }
        },
        "price": 0.618245,
        "logoUrl": "https://assets.coingecko.com/coins/images/14899/large/RwdVsGcw_400x400.jpg",
        "chainId": "1",
        "tokenid": "anyKNC",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x794baab6b878467f93ef17e2f2851ce04e3e34c8": {
        "address": "0x794baab6b878467f93ef17e2f2851ce04e3e34c8",
        "anyToken": {
          "address": "0x52dc835d5a36fdf9e6a84603cfef82298645635c",
          "name": "YIN Finance",
          "symbol": "anyYIN",
          "decimals": 18
        },
        "underlying": {
          "address": "0x794baab6b878467f93ef17e2f2851ce04e3e34c8",
          "name": "YIN Finance",
          "symbol": "YIN",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x794baab6b878467f93ef17e2f2851ce04e3e34c8",
            "underlying": {
              "address": "0x794baab6b878467f93ef17e2f2851ce04e3e34c8",
              "name": "YIN Finance",
              "symbol": "YIN",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "6200000",
            "MinimumSwap": "12.4",
            "BigValueThreshold": "1300000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1230",
            "MinimumSwapFee": "6.2",
            "anyToken": {
              "address": "0x0acaabc390d7d7134eef4166f61e3e30b362f675",
              "name": "YIN Finance",
              "symbol": "anyYIN",
              "decimals": 18
            }
          }
        },
        "price": 0.01386825,
        "logoUrl": "https://assets.coingecko.com/coins/images/18272/large/e37387ae6ee756fd.jpg",
        "chainId": "1",
        "tokenid": "anyYIN",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x853d955acef822db058eb8505911ed77f175b99e": {
        "address": "0x853d955acef822db058eb8505911ed77f175b99e",
        "anyToken": {
          "address": "0x4f60a160d8c2dddaafe16fcc57566db84d674bd6",
          "name": "Frax",
          "symbol": "anyFRAX",
          "decimals": 18
        },
        "underlying": {
          "address": "0x853d955acef822db058eb8505911ed77f175b99e",
          "name": "Frax",
          "symbol": "FRAX",
          "decimals": 18
        },
        "destChains": {
          "1313161554": {
            "address": "0xe4b9e004389d91e4134a28f19bd833cba1d994b6",
            "underlying": {
              "address": "0xe4b9e004389d91e4134a28f19bd833cba1d994b6",
              "name": "Frax",
              "symbol": "FRAX",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "5000000",
            "MinimumSwap": "10",
            "BigValueThreshold": "1000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1000",
            "MinimumSwapFee": "5",
            "anyToken": {
              "address": "0xb12c13e66ade1f72f71834f2fc5082db8c091358",
              "name": "Frax",
              "symbol": "FRAX",
              "decimals": 18
            }
          }
        },
        "price": 0.999069,
        "logoUrl": "https://assets.coingecko.com/coins/images/13422/large/frax_logo.png",
        "chainId": "1",
        "tokenid": "anyFRAX",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x3432b6a60d23ca0dfca7761b7ab56459d9c964d0": {
        "address": "0x3432b6a60d23ca0dfca7761b7ab56459d9c964d0",
        "anyToken": {
          "address": "0x685b63cfe0179b3efb70a01dcb1d648549aa192d",
          "name": "Frax Share",
          "symbol": "anyFXS",
          "decimals": 18
        },
        "underlying": {
          "address": "0x3432b6a60d23ca0dfca7761b7ab56459d9c964d0",
          "name": "Frax Share",
          "symbol": "FXS",
          "decimals": 18
        },
        "destChains": {
          "1313161554": {
            "address": "0xbb8831701e68b99616bf940b7dafbeb4cdb23e0b",
            "underlying": {
              "address": "0xbb8831701e68b99616bf940b7dafbeb4cdb23e0b",
              "name": "Frax Share",
              "symbol": "FXS",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "250000",
            "MinimumSwap": "0.56",
            "BigValueThreshold": "50000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "56",
            "MinimumSwapFee": "0.28",
            "anyToken": {
              "address": "0x735abe48e8782948a37c7765ecb76b98cde97b0f",
              "name": "Frax Share",
              "symbol": "FXS",
              "decimals": 18
            }
          }
        },
        "price": 6.89,
        "logoUrl": "https://assets.coingecko.com/coins/images/13423/large/frax_share.png",
        "chainId": "1",
        "tokenid": "anyFXS",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xacfa209fb73bf3dd5bbfb1101b9bc999c49062a5": {
        "address": "0xacfa209fb73bf3dd5bbfb1101b9bc999c49062a5",
        "anyToken": {
          "address": "0x09211dc67f9fe98fb7bbb91be0ef05f4a12fa2b2",
          "name": "Blockchain Certified Data Token",
          "symbol": "anyBCDT",
          "decimals": 18
        },
        "underlying": {
          "address": "0xacfa209fb73bf3dd5bbfb1101b9bc999c49062a5",
          "name": "EvidenZ",
          "symbol": "BCDT",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x8683e604cdf911cd72652a04bf9d571697a86a60",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "25000000",
            "MinimumSwap": "50",
            "BigValueThreshold": "5000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "5000",
            "MinimumSwapFee": "25",
            "anyToken": {
              "address": "0x8683e604cdf911cd72652a04bf9d571697a86a60",
              "name": "EvidenZ",
              "symbol": "BCDT",
              "decimals": 18
            }
          }
        },
        "price": 0.04934507,
        "logoUrl": "https://assets.coingecko.com/coins/images/2014/large/evidenz-512.png",
        "chainId": "1",
        "tokenid": "anyBCDT",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x62dc4817588d53a056cbbd18231d91ffccd34b2a": {
        "address": "0x62dc4817588d53a056cbbd18231d91ffccd34b2a",
        "anyToken": {
          "address": "0xbd83010eb60f12112908774998f65761cf9f6f9a",
          "name": "DeHive.finance",
          "symbol": "anyDHV",
          "decimals": 18
        },
        "underlying": {
          "address": "0x62dc4817588d53a056cbbd18231d91ffccd34b2a",
          "name": "DeHive.finance",
          "symbol": "DHV",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x58759dd469ae5631c42cf8a473992335575b58d7",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "5000000",
            "MinimumSwap": "9.9",
            "BigValueThreshold": "1000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1000",
            "MinimumSwapFee": "4.96",
            "anyToken": {
              "address": "0x58759dd469ae5631c42cf8a473992335575b58d7",
              "name": "DeHive.finance",
              "symbol": "DHV",
              "decimals": 18
            }
          }
        },
        "price": 0.056879,
        "logoUrl": "https://assets.coingecko.com/coins/images/14926/large/logo_200x200.png",
        "chainId": "1",
        "tokenid": "anyDHV",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x3b1388eb39c72d2145f092c01067c02bb627d4be": {
        "address": "0x3b1388eb39c72d2145f092c01067c02bb627d4be",
        "anyToken": {
          "address": "0x25a528af62e56512a19ce8c3cab427807c28cc19",
          "name": "Wrapped sSQUID",
          "symbol": "anywsSQUID",
          "decimals": 18
        },
        "underlying": {
          "address": "0x3b1388eb39c72d2145f092c01067c02bb627d4be",
          "name": "Wrapped sSQUID",
          "symbol": "wsSQUID",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x96a70751fd5bf2b18091b99ef7689b9a3a90920e",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "5",
            "MinimumSwap": "0.00001",
            "BigValueThreshold": "1",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "0.001",
            "MinimumSwapFee": "0.000005",
            "anyToken": {
              "address": "0x96a70751fd5bf2b18091b99ef7689b9a3a90920e",
              "name": "Wrapped sSQUID",
              "symbol": "wsSQUID",
              "decimals": 18
            }
          }
        },
        "price": 576.88,
        "logoUrl": "https://assets.coingecko.com/coins/images/19658/large/HdG_f69k_400x400.jpeg",
        "chainId": "1",
        "tokenid": "anywsSQUID",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x5f944b0c4315cb7c3a846b025ab4045da44abf6c": {
        "address": "0x5f944b0c4315cb7c3a846b025ab4045da44abf6c",
        "anyToken": {
          "address": "0x015cea338ce68bd912b3c704620c6000ee9f4ab9",
          "name": "PANCAKE GAMES",
          "symbol": "anyGCAKE",
          "decimals": 18
        },
        "underlying": {
          "address": "0x5f944b0c4315cb7c3a846b025ab4045da44abf6c",
          "name": "PANCAKE GAMES",
          "symbol": "GCAKE",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x61d5822dd7b3ed495108733e6550d4529480c8f6",
            "underlying": {
              "address": "0x61d5822dd7b3ed495108733e6550d4529480c8f6",
              "name": "Pancake GAMES",
              "symbol": "GCAKE",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "400000000000",
            "MinimumSwap": "680000",
            "BigValueThreshold": "68000000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "68000000",
            "MinimumSwapFee": "340000",
            "anyToken": {
              "address": "0xe77b2e0347cc910d7ad9dc1a8f97108c825cf81f",
              "name": "Pancake GAMES",
              "symbol": "anyGCAKE",
              "decimals": 18
            }
          }
        },
        "price": 4.69397e-7,
        "logoUrl": "https://assets.coingecko.com/coins/images/20217/large/6oc-L2UC_400x400.png",
        "chainId": "1",
        "tokenid": "anyGCAKE",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x4cf89ca06ad997bc732dc876ed2a7f26a9e7f361": {
        "address": "0x4cf89ca06ad997bc732dc876ed2a7f26a9e7f361",
        "anyToken": {
          "address": "0x58c1bbb508e96cfec1787acf6afe1c7008a5b064",
          "name": "Mysterium",
          "symbol": "anyMYST",
          "decimals": 18
        },
        "underlying": {
          "address": "0x4cf89ca06ad997bc732dc876ed2a7f26a9e7f361",
          "name": "Mysterium",
          "symbol": "MYST",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x2ff0b946a6782190c4fe5d4971cfe79f0b6e4df2",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "5100000",
            "MinimumSwap": "10.2",
            "BigValueThreshold": "1100000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1017",
            "MinimumSwapFee": "5.1",
            "anyToken": {
              "address": "0x2ff0b946a6782190c4fe5d4971cfe79f0b6e4df2",
              "name": "Mysterium",
              "symbol": "MYST",
              "decimals": 18
            }
          }
        },
        "price": 0.241443,
        "logoUrl": "https://assets.coingecko.com/coins/images/757/large/mysterium.png",
        "chainId": "1",
        "tokenid": "anyMYST",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x4691937a7508860f876c9c0a2a617e7d9e945d4b": {
        "address": "0x4691937a7508860f876c9c0a2a617e7d9e945d4b",
        "anyToken": {
          "address": "0x95555e4e4cb2c094914af53598eff14b9340881f",
          "name": "Wootrade Network",
          "symbol": "anyWOO",
          "decimals": 18
        },
        "underlying": {
          "address": "0x4691937a7508860f876c9c0a2a617e7d9e945d4b",
          "name": "WootradeNetwork",
          "symbol": "WOO",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x4691937a7508860f876c9c0a2a617e7d9e945d4b",
            "underlying": {
              "address": "0x4691937a7508860f876c9c0a2a617e7d9e945d4b",
              "name": "Wootrade Network",
              "symbol": "WOO",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "5000000",
            "MinimumSwap": "9.6",
            "BigValueThreshold": "1000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "962",
            "MinimumSwapFee": "4.8",
            "anyToken": {
              "address": "0x5022a3772357a2bba192a4d93a918446492baa94",
              "name": "Wootrade Network",
              "symbol": "anyWOO",
              "decimals": 18
            }
          }
        },
        "price": 0.20889,
        "logoUrl": "https://assets.coingecko.com/coins/images/12921/large/w2UiemF__400x400.jpg",
        "chainId": "1",
        "tokenid": "anyWOO",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xdfdd3459d4f87234751696840092ee20c970fb07": {
        "address": "0xdfdd3459d4f87234751696840092ee20c970fb07",
        "anyToken": {
          "address": "0x34f380a4e3389e99c0369264453523bbe5af7fab",
          "name": "Myōbu",
          "symbol": "anyMYOBU",
          "decimals": 9
        },
        "underlying": {
          "address": "0xdfdd3459d4f87234751696840092ee20c970fb07",
          "name": "Myōbu",
          "symbol": "MYOBU",
          "decimals": 9
        },
        "destChains": {
          "56": {
            "address": "0x4ef06d1a55962f29d362c53c864a4f0c791dcb9e",
            "underlying": {
              "address": "0x4ef06d1a55962f29d362c53c864a4f0c791dcb9e",
              "name": "Myōbu",
              "symbol": "MYOBU",
              "decimals": 9
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "290000000000",
            "MinimumSwap": "570800",
            "BigValueThreshold": "58000000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "57080000",
            "MinimumSwapFee": "286000",
            "anyToken": {
              "address": "0x5003c91913944f9a0ae82c729508808b3f7c7c7e",
              "name": "Myōbu",
              "symbol": "anyMYOBU",
              "decimals": 9
            }
          }
        },
        "price": 1.11721e-7,
        "logoUrl": "https://assets.coingecko.com/coins/images/16122/small/myobu.png",
        "chainId": "1",
        "tokenid": "anyMYOBU",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x88536c9b2c4701b8db824e6a16829d5b5eb84440": {
        "address": "0x88536c9b2c4701b8db824e6a16829d5b5eb84440",
        "anyToken": {
          "address": "0x790cfdc6ab2e0ee45a433aac5434f183be1f6a20",
          "name": "Universal Store of Value",
          "symbol": "anyUSV",
          "decimals": 9
        },
        "underlying": {
          "address": "0x88536c9b2c4701b8db824e6a16829d5b5eb84440",
          "name": "Universal Store of Value",
          "symbol": "USV",
          "decimals": 9
        },
        "destChains": {
          "56": {
            "address": "0xaf6162dc717cfc8818efc8d6f46a41cf7042fcba",
            "underlying": {
              "address": "0xaf6162dc717cfc8818efc8d6f46a41cf7042fcba",
              "name": "Universal Store of Value",
              "symbol": "USV",
              "decimals": 9
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "6500",
            "MinimumSwap": "0.013",
            "BigValueThreshold": "1300",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1.3",
            "MinimumSwapFee": "0.0065",
            "anyToken": {
              "address": "0xc40ef4f38a3235f21987f9f13431983cd3025e58",
              "name": "Universal Store of Value",
              "symbol": "anyUSV",
              "decimals": 9
            }
          }
        },
        "price": 12.47,
        "logoUrl": "https://assets.coingecko.com/coins/images/22066/small/7iUyjg5t.png",
        "chainId": "1",
        "tokenid": "anyUSV",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xb31ef9e52d94d4120eb44fe1ddfde5b4654a6515": {
        "address": "0xb31ef9e52d94d4120eb44fe1ddfde5b4654a6515",
        "anyToken": {
          "address": "0x2cf7d99c1bff7caa25b737c909637948e6e7781e",
          "name": "DOSE",
          "symbol": "anyDOSE",
          "decimals": 18
        },
        "underlying": {
          "address": "0xb31ef9e52d94d4120eb44fe1ddfde5b4654a6515",
          "name": "DOSE",
          "symbol": "DOSE",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x7837fd820ba38f95c54d6dac4ca3751b81511357",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "22000000",
            "MinimumSwap": "43",
            "BigValueThreshold": "4300000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "4290",
            "MinimumSwapFee": "21.5",
            "anyToken": {
              "address": "0x7837fd820ba38f95c54d6dac4ca3751b81511357",
              "name": "DOSE",
              "symbol": "DOSE",
              "decimals": 18
            }
          }
        },
        "price": 0.00392713,
        "logoUrl": "https://assets.coingecko.com/coins/images/18847/large/dose.PNG",
        "chainId": "1",
        "tokenid": "anyDOSE",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x3f6d1649a1366b0e82173d33e365953f9f1cc84c": {
        "address": "0x3f6d1649a1366b0e82173d33e365953f9f1cc84c",
        "anyToken": {
          "address": "0xa4fffc757e8c4f24e7b209c033c123d20983ad40",
          "name": "ScallopX",
          "symbol": "anySCLP",
          "decimals": 18
        },
        "underlying": {
          "address": "0x3f6d1649a1366b0e82173d33e365953f9f1cc84c",
          "name": "ScallopX",
          "symbol": "SCLP",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xf2c96e402c9199682d5ded26d3771c6b192c01af",
            "underlying": {
              "address": "0xf2c96e402c9199682d5ded26d3771c6b192c01af",
              "name": "Scallop",
              "symbol": "SCLP",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "3200000",
            "MinimumSwap": "6.4",
            "BigValueThreshold": "630000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "630",
            "MinimumSwapFee": "3.2",
            "anyToken": {
              "address": "0x3da9769665849bd67139cf67735445deea16340d",
              "name": "Scallop",
              "symbol": "anySCLP",
              "decimals": 18
            }
          }
        },
        "price": 0.178993,
        "logoUrl": "https://assets.coingecko.com/coins/images/19059/large/scallop.PNG",
        "chainId": "1",
        "tokenid": "anySCLP",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x9ac59862934ebc36072d4d8ada37c62373a13856": {
        "address": "0x9ac59862934ebc36072d4d8ada37c62373a13856",
        "anyToken": {
          "address": "0x758d08864fb6cce3062667225ca10b8f00496cc2",
          "name": "RYOSHI TOKEN",
          "symbol": "anyRYOSHI",
          "decimals": 9
        },
        "underlying": {
          "address": "0x9ac59862934ebc36072d4d8ada37c62373a13856",
          "name": "RYOSHI TOKEN",
          "symbol": "RYOSHI",
          "decimals": 9
        },
        "destChains": {
          "56": {
            "address": "0x0e5f989ce525acc4ee45506af91964f7f4c9f2e9",
            "underlying": {
              "address": "0x0e5f989ce525acc4ee45506af91964f7f4c9f2e9",
              "name": "RYOSHI TOKEN",
              "symbol": "RYOSHI",
              "decimals": 9
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "140000000000000",
            "MinimumSwap": "272000000",
            "BigValueThreshold": "28000000000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "27200000000",
            "MinimumSwapFee": "136000000",
            "anyToken": {
              "address": "0x91648237a47585242f1f8ad10e84dd03fa95ec4e",
              "name": "RYOSHI TOKEN",
              "symbol": "anyRYOSHI",
              "decimals": 9
            }
          }
        },
        "price": 4.83886e-10,
        "logoUrl": "https://assets.coingecko.com/coins/images/16394/large/RyoshiLogo.png.jpg",
        "chainId": "1",
        "tokenid": "anyRYOSHI",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x28b5e12cce51f15594b0b91d5b5adaa70f684a02": {
        "address": "0x28b5e12cce51f15594b0b91d5b5adaa70f684a02",
        "anyToken": {
          "address": "0x40d4c6ceca870a0439dc0232d40cf8be8b425baf",
          "name": "NapoleonX",
          "symbol": "anyNPX",
          "decimals": 2
        },
        "underlying": {
          "address": "0x28b5e12cce51f15594b0b91d5b5adaa70f684a02",
          "name": "NapoleonX Token",
          "symbol": "NPX",
          "decimals": 2
        },
        "destChains": {
          "56": {
            "address": "0xd8cb4c2369db13c94c90c7fd3bebc9757900ee6b",
            "underlying": {
              "address": "0xd8cb4c2369db13c94c90c7fd3bebc9757900ee6b",
              "name": "NapoleonX Token",
              "symbol": "NPXB",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "35000000",
            "MinimumSwap": "67",
            "BigValueThreshold": "7000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "6692",
            "MinimumSwapFee": "33.5",
            "anyToken": {
              "address": "0x2bfdf2adc0e8f738c4a1bca25c5c1d36072eba31",
              "name": "NapoleonX Token",
              "symbol": "anyNPXB",
              "decimals": 18
            }
          }
        },
        "price": 0.01387195,
        "logoUrl": "https://assets.coingecko.com/coins/images/1471/large/napoleon-x.jpg",
        "chainId": "1",
        "tokenid": "anyNPX",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x12bb890508c125661e03b09ec06e404bc9289040": {
        "address": "0x12bb890508c125661e03b09ec06e404bc9289040",
        "anyToken": {
          "address": "0x16aba2d28329620f31d44748ec82fa08daa50b86",
          "name": "Radio Caca V2",
          "symbol": "anyRACA",
          "decimals": 18
        },
        "underlying": {
          "address": "0x12bb890508c125661e03b09ec06e404bc9289040",
          "name": "Radio Caca V2",
          "symbol": "RACA",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x12bb890508c125661e03b09ec06e404bc9289040",
            "underlying": {
              "address": "0x12bb890508c125661e03b09ec06e404bc9289040",
              "name": "Radio Caca V2",
              "symbol": "RACA",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "1300000000",
            "MinimumSwap": "2506",
            "BigValueThreshold": "260000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "250530",
            "MinimumSwapFee": "1253",
            "anyToken": {
              "address": "0xe6de9f70d5a4ec9da52ce35f449794eba826de72",
              "name": "Radio Caca V2",
              "symbol": "anyRACA",
              "decimals": 18
            }
          }
        },
        "price": 0.00015299,
        "logoUrl": "https://assets.coingecko.com/coins/images/17841/large/ez44_BSs_400x400.jpg",
        "chainId": "1",
        "tokenid": "anyRACA",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x3f5294df68f871241c4b18fcf78ebd8ac18ab654": {
        "address": "0x3f5294df68f871241c4b18fcf78ebd8ac18ab654",
        "anyToken": {
          "address": "0xe87d84dcbb848fe94c6daedc9c81c913f707f2d2",
          "name": "99Starz",
          "symbol": "anySTZ",
          "decimals": 18
        },
        "underlying": {
          "address": "0x3f5294df68f871241c4b18fcf78ebd8ac18ab654",
          "name": "99Starz",
          "symbol": "STZ",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x7fe378c5e0b5c32af2ecc8829bedf02245a0e4ef",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "10000000",
            "MinimumSwap": "20",
            "BigValueThreshold": "2000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "2000",
            "MinimumSwapFee": "10",
            "anyToken": {
              "address": "0x7fe378c5e0b5c32af2ecc8829bedf02245a0e4ef",
              "name": "99Starz",
              "symbol": "STZ",
              "decimals": 18
            }
          }
        },
        "price": 0.059842,
        "logoUrl": "https://assets.coingecko.com/coins/images/21467/large/stz.png",
        "chainId": "1",
        "tokenid": "anySTZ",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x65def5029a0e7591e46b38742bfedd1fb7b24436": {
        "address": "0x65def5029a0e7591e46b38742bfedd1fb7b24436",
        "anyToken": {
          "address": "0xd2af5442bd47461b37726fd323d95e569973fe6d",
          "name": "Kanpeki",
          "symbol": "anyKAE",
          "decimals": 18
        },
        "underlying": {
          "address": "0x65def5029a0e7591e46b38742bfedd1fb7b24436",
          "name": "Kanpeki",
          "symbol": "KAE",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.04232647,
        "logoUrl": "https://assets.coingecko.com/coins/images/18833/large/kanpeki-logo-square_2.png",
        "chainId": "1",
        "tokenid": "anyKAE",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x8db253a1943dddf1af9bcf8706ac9a0ce939d922": {
        "address": "0x8db253a1943dddf1af9bcf8706ac9a0ce939d922",
        "anyToken": {
          "address": "0xc0330289b5509269bc312c83e5db42aeb259b687",
          "name": "Unbound",
          "symbol": "anyUNB",
          "decimals": 18
        },
        "underlying": {
          "address": "0x8db253a1943dddf1af9bcf8706ac9a0ce939d922",
          "name": "Unbound",
          "symbol": "UNB",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x301af3eff0c904dc5ddd06faa808f653474f7fcc",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "2089060841.807957",
            "MinimumSwap": "4178.121684",
            "BigValueThreshold": "417812168.361591",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "417812.168362",
            "MinimumSwapFee": "2089.060842",
            "anyToken": {
              "address": "0x301af3eff0c904dc5ddd06faa808f653474f7fcc",
              "name": "Unbound",
              "symbol": "UNB",
              "decimals": 18
            }
          }
        },
        "price": 0.00087027,
        "logoUrl": "https://assets.coingecko.com/coins/images/21412/large/Unbound_icon_png.png",
        "chainId": "1",
        "tokenid": "anyUNB",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xa803778ab953d3ffe4fbd20cfa0042ecefe8319d": {
        "address": "0xa803778ab953d3ffe4fbd20cfa0042ecefe8319d",
        "anyToken": {
          "address": "0x2eaa12c0c76ea8192d82b63f8dbbb7ec2a270295",
          "name": "Totem Earth Systems",
          "symbol": "anyCTZN",
          "decimals": 18
        },
        "underlying": {
          "address": "0xa803778ab953d3ffe4fbd20cfa0042ecefe8319d",
          "name": "Totem Earth Systems",
          "symbol": "CTZN",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xa803778ab953d3ffe4fbd20cfa0042ecefe8319d",
            "underlying": {
              "address": "0xa803778ab953d3ffe4fbd20cfa0042ecefe8319d",
              "name": "Totem Earth Systems",
              "symbol": "CTZN",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "36000000",
            "MinimumSwap": "70",
            "BigValueThreshold": "7100000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "7018",
            "MinimumSwapFee": "35",
            "anyToken": {
              "address": "0x9adbbc5410a30f3d71473efe7ed5e27cb6c02e1c",
              "name": "Totem Earth Systems",
              "symbol": "anyCTZN",
              "decimals": 18
            }
          }
        },
        "price": 0.00047217,
        "logoUrl": "https://assets.coingecko.com/coins/images/21558/large/2021-12-19_10.41.00.jpg",
        "chainId": "1",
        "tokenid": "anyCTZN",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x7777777777697cfeecf846a76326da79cc606517": {
        "address": "0x7777777777697cfeecf846a76326da79cc606517",
        "anyToken": {
          "address": "0xd5ebd23d5eb968c2efba2b03f27ee61718609a71",
          "name": "xSigma",
          "symbol": "anySIG",
          "decimals": 18
        },
        "underlying": {
          "address": "0x7777777777697cfeecf846a76326da79cc606517",
          "name": "xSigma",
          "symbol": "SIG",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x7777777777697cfeecf846a76326da79cc606517",
            "underlying": {
              "address": "0x7777777777697cfeecf846a76326da79cc606517",
              "name": "xSigma",
              "symbol": "SIG",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "37000000",
            "MinimumSwap": "73.2",
            "BigValueThreshold": "7400000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "7320",
            "MinimumSwapFee": "36.6",
            "anyToken": {
              "address": "0xc20ff003662d9b91b4139ffa6b7c9d69968bad2c",
              "name": "xSigma",
              "symbol": "anySIG",
              "decimals": 18
            }
          }
        },
        "price": 0.00463995,
        "logoUrl": "https://assets.coingecko.com/coins/images/14090/large/logo_128.png",
        "chainId": "1",
        "tokenid": "anySIG",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x0b6f3c17e1626a7cbfa4302ce4e3c45522d23a83": {
        "address": "0x0b6f3c17e1626a7cbfa4302ce4e3c45522d23a83",
        "anyToken": {
          "address": "0x40df1ae6074c35047bff66675488aa2f9f6384f3",
          "name": "WardenSwap",
          "symbol": "anyWAD",
          "decimals": 18
        },
        "underlying": {
          "address": "0x0b6f3c17e1626a7cbfa4302ce4e3c45522d23a83",
          "name": "WardenSwap",
          "symbol": "WAD",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x0feadcc3824e7f3c12f40e324a60c23ca51627fc",
            "underlying": {
              "address": "0x0feadcc3824e7f3c12f40e324a60c23ca51627fc",
              "name": "WardenSwap Token",
              "symbol": "WAD",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "12000000",
            "MinimumSwap": "24",
            "BigValueThreshold": "2400000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "2370",
            "MinimumSwapFee": "12",
            "anyToken": {
              "address": "0x378dacb12e3dccca598c37325a2b32c2dc3a4ae4",
              "name": "WardenSwap Token",
              "symbol": "anyWAD",
              "decimals": 18
            }
          }
        },
        "price": 0.01126109,
        "logoUrl": "https://assets.coingecko.com/coins/images/16456/large/WAD.png",
        "chainId": "1",
        "tokenid": "anyWAD",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xd9adb7536e90660f601c5bfb15cb49bfa78ca0a6": {
        "address": "0xd9adb7536e90660f601c5bfb15cb49bfa78ca0a6",
        "anyToken": {
          "address": "0x986a4ea3679afe15b5963a6ec3437be859279bc1",
          "name": "2022MOON",
          "symbol": "any2022M",
          "decimals": 18
        },
        "underlying": {
          "address": "0xd9adb7536e90660f601c5bfb15cb49bfa78ca0a6",
          "name": "2022MOON",
          "symbol": "2022M",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x047a02a57501a813975b2d347278fdd3df671e86",
            "underlying": {
              "address": "0x047a02a57501a813975b2d347278fdd3df671e86",
              "name": "2022MOON",
              "symbol": "2022M",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "230000000000000",
            "MinimumSwap": "456000000",
            "BigValueThreshold": "46000000000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "46000000000",
            "MinimumSwapFee": "228000000",
            "anyToken": {
              "address": "0x2ec59b2105be94d2d94bdd55c447810edd495d3d",
              "name": "2022MOON",
              "symbol": "any2022M",
              "decimals": 18
            }
          }
        },
        "price": 1.602e-9,
        "logoUrl": "https://assets.coingecko.com/coins/images/20473/large/2022m.png",
        "chainId": "1",
        "tokenid": "any2022M",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xc813ea5e3b48bebeedb796ab42a30c5599b01740": {
        "address": "0xc813ea5e3b48bebeedb796ab42a30c5599b01740",
        "anyToken": {
          "address": "0x58a547ed09684ac2a688610d5caf8e8968b51908",
          "name": "Autonio",
          "symbol": "anyNIOX",
          "decimals": 4
        },
        "underlying": {
          "address": "0xc813ea5e3b48bebeedb796ab42a30c5599b01740",
          "name": "Autonio",
          "symbol": "NIOX",
          "decimals": 4
        },
        "destChains": {
          "56": {
            "address": "0xdc37fa1507c7697c0778d3a7d61b31dce7cbba70",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "170000000",
            "MinimumSwap": "334",
            "BigValueThreshold": "34000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "33227",
            "MinimumSwapFee": "167",
            "anyToken": {
              "address": "0xdc37fa1507c7697c0778d3a7d61b31dce7cbba70",
              "name": "Autonio",
              "symbol": "NIOX",
              "decimals": 4
            }
          },
          "1313161554": {
            "address": "0xc931f61b1534eb21d8c11b24f3f5ab2471d4ab50",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "170000000",
            "MinimumSwap": "334",
            "BigValueThreshold": "34000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "33227",
            "MinimumSwapFee": "167",
            "anyToken": {
              "address": "0xc931f61b1534eb21d8c11b24f3f5ab2471d4ab50",
              "name": "Autonio",
              "symbol": "NIOX",
              "decimals": 4
            }
          }
        },
        "price": 0.00166755,
        "logoUrl": "https://assets.coingecko.com/coins/images/1122/large/NewLogo.png",
        "chainId": "1",
        "tokenid": "anyNIOX",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x71dc40668682a124231301414167e4cf7f55383c": {
        "address": "0x71dc40668682a124231301414167e4cf7f55383c",
        "anyToken": {
          "address": "0x20cf1b6e9d856321ed4686877cf4538f2c84b4de",
          "name": "Mimir Token",
          "symbol": "anyMIMIR",
          "decimals": 18
        },
        "underlying": {
          "address": "0x71dc40668682a124231301414167e4cf7f55383c",
          "name": "Mimir Token",
          "symbol": "MIMIR",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x336f5a68fd46a25056a6c1d9c06072c691486acc",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "15000000",
            "MinimumSwap": "30",
            "BigValueThreshold": "3000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "2963",
            "MinimumSwapFee": "15",
            "anyToken": {
              "address": "0x336f5a68fd46a25056a6c1d9c06072c691486acc",
              "name": "Mimir Token",
              "symbol": "MIMIR",
              "decimals": 18
            }
          }
        },
        "price": 0.00250876,
        "logoUrl": "https://assets.coingecko.com/coins/images/19551/large/xaq5Xlzg_400x400.jpg",
        "chainId": "1",
        "tokenid": "anyMIMIR",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x8290333cef9e6d528dd5618fb97a76f268f3edd4": {
        "address": "0x8290333cef9e6d528dd5618fb97a76f268f3edd4",
        "anyToken": {
          "address": "0x6362496bef53458b20548a35a2101214ee2be3e0",
          "name": "Ankr Network",
          "symbol": "anyANKR",
          "decimals": 18
        },
        "underlying": {
          "address": "0x8290333cef9e6d528dd5618fb97a76f268f3edd4",
          "name": "Ankr Network",
          "symbol": "ANKR",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xf307910a4c7bbc79691fd374889b36d8531b08e3",
            "underlying": {
              "address": "0xf307910a4c7bbc79691fd374889b36d8531b08e3",
              "name": "Ankr",
              "symbol": "ANKR",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "46000000",
            "MinimumSwap": "91.4",
            "BigValueThreshold": "9200000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "9130",
            "MinimumSwapFee": "45.7",
            "anyToken": {
              "address": "0x14834532cd1aaaca7d271a4d419dcbda0b64f630",
              "name": "Ankr",
              "symbol": "anyANKR",
              "decimals": 18
            }
          }
        },
        "price": 0.02533028,
        "logoUrl": "https://assets.coingecko.com/coins/images/4324/large/U85xTl2.png",
        "chainId": "1",
        "tokenid": "anyANKR",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xee9e5eff401ee921b138490d00ca8d1f13f67a72": {
        "address": "0xee9e5eff401ee921b138490d00ca8d1f13f67a72",
        "anyToken": {
          "address": "0x6fefd97f328342a8a840546a55fdcfee7542f9a8",
          "name": "Asian Fintech",
          "symbol": "anyAfin",
          "decimals": 8
        },
        "underlying": {
          "address": "0xee9e5eff401ee921b138490d00ca8d1f13f67a72",
          "name": "Asian Fintech",
          "symbol": "Afin",
          "decimals": 8
        },
        "destChains": {
          "56": {
            "address": "0xb955b4cab9aa3b49e23aeb5204ebc5ff6678e86d",
            "underlying": {
              "address": "0xb955b4cab9aa3b49e23aeb5204ebc5ff6678e86d",
              "name": "Asian Fintech",
              "symbol": "Afin",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "50000000",
            "MinimumSwap": "100",
            "BigValueThreshold": "10000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "10000",
            "MinimumSwapFee": "50",
            "anyToken": {
              "address": "0x51634caff769b4a04d9b40e06198a4c451f896b5",
              "name": "Asian Fintech",
              "symbol": "anyAfin",
              "decimals": 18
            }
          }
        },
        "price": 0.00090756,
        "logoUrl": "https://assets.coingecko.com/coins/images/7519/large/Afinlogo-200x200.png",
        "chainId": "1",
        "tokenid": "anyAfin",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x64a77277e37d44957fe5815d6ff442ab8b16cc29": {
        "address": "0x64a77277e37d44957fe5815d6ff442ab8b16cc29",
        "anyToken": {
          "address": "0xfe77d71baf7a6cdabbd63a2ad1e0adb68ca64c06",
          "name": "SpaceDawgs",
          "symbol": "DAWGS",
          "decimals": 9
        },
        "underlying": {
          "address": "0x64a77277e37d44957fe5815d6ff442ab8b16cc29",
          "name": "SpaceDawgs",
          "symbol": "DAWGS",
          "decimals": 9
        },
        "destChains": {
          "56": {
            "address": "0x222cf80a8514f8ce551c06d1b8d01db3678688ad",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "430000000000",
            "MinimumSwap": "855440",
            "BigValueThreshold": "86000000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "85543200",
            "MinimumSwapFee": "427720",
            "anyToken": {
              "address": "0x222cf80a8514f8ce551c06d1b8d01db3678688ad",
              "name": "SpaceDawgs",
              "symbol": "DAWGS",
              "decimals": 9
            }
          }
        },
        "price": 4.09564e-7,
        "logoUrl": "https://assets.coingecko.com/coins/images/17076/large/SPACEDAWGS_Token_Logo.png",
        "chainId": "1",
        "tokenid": "anyDAWGS",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xaa61d5dec73971cd4a026ef2820bb87b4a4ed8d6": {
        "address": "0xaa61d5dec73971cd4a026ef2820bb87b4a4ed8d6",
        "anyToken": {
          "address": "0xb8930bd2dd53d449f83466705827f3dbf90ea7fc",
          "name": "CRE8R DAO",
          "symbol": "anyCRE8R",
          "decimals": 18
        },
        "underlying": {
          "address": "0xaa61d5dec73971cd4a026ef2820bb87b4a4ed8d6",
          "name": "CRE8R DAO ",
          "symbol": "CRE8R",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.0015108,
        "logoUrl": "https://assets.coingecko.com/coins/images/22568/large/cropped-FINALwithbrick-2-1-1.png",
        "chainId": "1",
        "tokenid": "anyCRE8R",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x48592de8cded16f6bb56c896fe1affc37630889c": {
        "address": "0x48592de8cded16f6bb56c896fe1affc37630889c",
        "anyToken": {
          "address": "0x99f7d752745f270e100233cc05768b4a12bd09f0",
          "name": "PolkaParty",
          "symbol": "anyPOLP",
          "decimals": 18
        },
        "underlying": {
          "address": "0x48592de8cded16f6bb56c896fe1affc37630889c",
          "name": "PolkaParty",
          "symbol": "POLP",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x6e3bf2fff13e18413d3780f93753d6cff5aee3e1",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "260000000",
            "MinimumSwap": "512",
            "BigValueThreshold": "52000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "51203",
            "MinimumSwapFee": "256",
            "anyToken": {
              "address": "0x6e3bf2fff13e18413d3780f93753d6cff5aee3e1",
              "name": "PolkaParty",
              "symbol": "POLP",
              "decimals": 18
            }
          }
        },
        "price": 0.00006618,
        "logoUrl": "https://assets.coingecko.com/coins/images/17867/large/polp_logo.jpg",
        "chainId": "1",
        "tokenid": "anyPOLP",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x8a65b987d9813f0a97446eda0de918b2573ae406": {
        "address": "0x8a65b987d9813f0a97446eda0de918b2573ae406",
        "anyToken": {
          "address": "0x5d5530eb3147152fe78d5c4bfeede054c8d1442a",
          "name": "FomoETH",
          "symbol": "anyFomoETH",
          "decimals": 9
        },
        "underlying": {
          "address": "0x8a65b987d9813f0a97446eda0de918b2573ae406",
          "name": "FomoETH",
          "symbol": "FomoETH",
          "decimals": 9
        },
        "destChains": {
          "56": {
            "address": "0x8a65b987d9813f0a97446eda0de918b2573ae406",
            "underlying": {
              "address": "0x8a65b987d9813f0a97446eda0de918b2573ae406",
              "name": "FomoETH",
              "symbol": "FomoETH",
              "decimals": 9
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "3100000000000",
            "MinimumSwap": "6097560",
            "BigValueThreshold": "610000000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "610000000",
            "MinimumSwapFee": "3048780",
            "anyToken": {
              "address": "0x619f98fcf9a3f5fecee753fa9f4e3ce39ef43caa",
              "name": "FomoETH",
              "symbol": "anyFomoETH",
              "decimals": 9
            }
          }
        },
        "price": 8.8315e-8,
        "logoUrl": "https://assets.coingecko.com/coins/images/21934/large/qSCAqd6m_400x400.jpg",
        "chainId": "1",
        "tokenid": "anyFomoETH",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x573d2505a7ee69d136a8667b4cd915f039ac54e5": {
        "address": "0x573d2505a7ee69d136a8667b4cd915f039ac54e5",
        "anyToken": {
          "address": "0xbb29d2a58d880af8aa5859e30470134deaf84f2b",
          "name": "xDollar Interverse Money",
          "symbol": "anyXIM",
          "decimals": 18
        },
        "underlying": {
          "address": "0x573d2505a7ee69d136a8667b4cd915f039ac54e5",
          "name": "xDollar Interverse Money",
          "symbol": "XIM",
          "decimals": 18
        },
        "destChains": {},
        "price": null,
        "logoUrl": "https://assets.coingecko.com/coins/images/22182/large/xim-200x200.png",
        "chainId": "1",
        "tokenid": "anyXIM",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x69570f3e84f51ea70b7b68055c8d667e77735a25": {
        "address": "0x69570f3e84f51ea70b7b68055c8d667e77735a25",
        "anyToken": {
          "address": "0x84051efb5e0c61ac1863b5de72cd5bc3221870e4",
          "name": "Betswap.gg",
          "symbol": "anyBSGG",
          "decimals": 18
        },
        "underlying": {
          "address": "0x69570f3e84f51ea70b7b68055c8d667e77735a25",
          "name": "Betswap.gg",
          "symbol": "BSGG",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x496e80cad8712025dafc5b2c96fc36c395af684a",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "149664885.35",
            "MinimumSwap": "299.329",
            "BigValueThreshold": "29932977.07",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "29932.98",
            "MinimumSwapFee": "149.664",
            "anyToken": {
              "address": "0x496e80cad8712025dafc5b2c96fc36c395af684a",
              "name": "Betswap.gg",
              "symbol": "BSGG",
              "decimals": 18
            }
          }
        },
        "price": 0.00116916,
        "logoUrl": "https://assets.coingecko.com/coins/images/22496/large/betswap.jpg",
        "chainId": "1",
        "tokenid": "anyBSGG",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x6b3595068778dd592e39a122f4f5a5cf09c90fe2": {
        "address": "0x6b3595068778dd592e39a122f4f5a5cf09c90fe2",
        "anyToken": {
          "address": "0xa5432cbf7097c4e3536731dec837e3fa676b38c3",
          "name": "SushiToken",
          "symbol": "anySUSHI",
          "decimals": 18
        },
        "underlying": {
          "address": "0x6b3595068778dd592e39a122f4f5a5cf09c90fe2",
          "name": "SushiToken",
          "symbol": "SUSHI",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x986cdf0fd180b40c4d6aeaa01ab740b996d8b782",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "4132231.404959",
            "MinimumSwap": "8.264463",
            "BigValueThreshold": "826446.280992",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "826.446281",
            "MinimumSwapFee": "4.132231",
            "anyToken": {
              "address": "0x986cdf0fd180b40c4d6aeaa01ab740b996d8b782",
              "name": "SushiToken",
              "symbol": "SUSHI",
              "decimals": 18
            }
          }
        },
        "price": 0.87766,
        "logoUrl": "https://assets.coingecko.com/coins/images/12271/large/512x512_Logo_no_chop.png",
        "chainId": "1",
        "tokenid": "anySUSHI",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xaecc217a749c2405b5ebc9857a16d58bdc1c367f": {
        "address": "0xaecc217a749c2405b5ebc9857a16d58bdc1c367f",
        "anyToken": {
          "address": "0xdfed31e640b7280f76f046a97179e5e369d209b5",
          "name": "Pawthereum",
          "symbol": "anyPAWTH",
          "decimals": 9
        },
        "underlying": {
          "address": "0xaecc217a749c2405b5ebc9857a16d58bdc1c367f",
          "name": "Pawthereum",
          "symbol": "PAWTH",
          "decimals": 9
        },
        "destChains": {
          "56": {
            "address": "0x409e215738e31d8ab252016369c2dd9c2008fee0",
            "underlying": {
              "address": "0x409e215738e31d8ab252016369c2dd9c2008fee0",
              "name": "Pawthereum",
              "symbol": "PAWTH",
              "decimals": 9
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "600000000",
            "MinimumSwap": "1148",
            "BigValueThreshold": "120000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "114809",
            "MinimumSwapFee": "574",
            "anyToken": {
              "address": "0xc90c592677a58e3af3af0e36635be22b76d92d45",
              "name": "Pawthereum",
              "symbol": "anyPAWTH",
              "decimals": 9
            }
          }
        },
        "price": 0.00089842,
        "logoUrl": "https://assets.coingecko.com/coins/images/19275/large/pawth.png",
        "chainId": "1",
        "tokenid": "anyPAWTH",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xaaca86b876ca011844b5798eca7a67591a9743c8": {
        "address": "0xaaca86b876ca011844b5798eca7a67591a9743c8",
        "anyToken": {
          "address": "0x90f615bb7b2def7bd14c507f90ff42b6acacf86e",
          "name": "BIOS",
          "symbol": "anyBIOS",
          "decimals": 18
        },
        "underlying": {
          "address": "0xaaca86b876ca011844b5798eca7a67591a9743c8",
          "name": "BIOS",
          "symbol": "BIOS",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xcf87d3d50a98a7832f5cfdf99ae1b88c7cfba4a7",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "1200000",
            "MinimumSwap": "2.4",
            "BigValueThreshold": "240000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "231",
            "MinimumSwapFee": "1.2",
            "anyToken": {
              "address": "0xcf87d3d50a98a7832f5cfdf99ae1b88c7cfba4a7",
              "name": "BIOS",
              "symbol": "BIOS",
              "decimals": 18
            }
          }
        },
        "price": 0.0250074,
        "logoUrl": "https://assets.coingecko.com/coins/images/15600/large/BIOS_01.png",
        "chainId": "1",
        "tokenid": "anyBIOS",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x514910771af9ca656af840dff83e8264ecf986ca": {
        "address": "0x514910771af9ca656af840dff83e8264ecf986ca",
        "anyToken": {
          "address": "0x8dfdc61c7c7551d0deec950a2822eb59cddb8f59",
          "name": "ChainLink Token",
          "symbol": "anyLINK",
          "decimals": 18
        },
        "underlying": {
          "address": "0x514910771af9ca656af840dff83e8264ecf986ca",
          "name": "ChainLinkToken",
          "symbol": "LINK",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd",
            "underlying": {
              "address": "0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd",
              "name": "ChainLink Token",
              "symbol": "LINK",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "300000",
            "MinimumSwap": "0.6",
            "BigValueThreshold": "60000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "60",
            "MinimumSwapFee": "0.3",
            "anyToken": {
              "address": "0x83fc51a3a35d3e2a2c42003df964294062f505a2",
              "name": "Binance-Peg ChainLink Token",
              "symbol": "anyLINK",
              "decimals": 18
            }
          }
        },
        "price": 6.36,
        "logoUrl": "https://assets.coingecko.com/coins/images/877/large/chainlink-new-logo.png",
        "chainId": "1",
        "tokenid": "anyLINK",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x57b946008913b82e4df85f501cbaed910e58d26c": {
        "address": "0x57b946008913b82e4df85f501cbaed910e58d26c",
        "anyToken": {
          "address": "0xb53ec4ace420a62cfb75afdeba600d284777cd65",
          "name": "Marlin POND",
          "symbol": "anyPOND",
          "decimals": 18
        },
        "underlying": {
          "address": "0x57b946008913b82e4df85f501cbaed910e58d26c",
          "name": "Marlin POND",
          "symbol": "POND",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xa1428370f540b4c4e319224165ecae513a391f77",
            "underlying": {
              "address": "0xa1428370f540b4c4e319224165ecae513a391f77",
              "name": "Marlin POND",
              "symbol": "POND",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "130000000",
            "MinimumSwap": "242",
            "BigValueThreshold": "25000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "24050",
            "MinimumSwapFee": "121",
            "anyToken": {
              "address": "0x204d3d2bbbf39a7bb85a00dd45fb0d2fe57a660b",
              "name": "Marlin POND",
              "symbol": "anyPOND",
              "decimals": 18
            }
          }
        },
        "price": 0.008385,
        "logoUrl": "https://assets.coingecko.com/coins/images/8903/large/POND_200x200.png",
        "chainId": "1",
        "tokenid": "anyPOND",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x0e95b13539d0381ab20b4e2893e926fc99b3d8dc": {
        "address": "0x0e95b13539d0381ab20b4e2893e926fc99b3d8dc",
        "anyToken": {
          "address": "0x1e1085efaa63edfe74aad7c05a28eae4ef917c3f",
          "name": "Trusted Node",
          "symbol": "anyTNODE",
          "decimals": 18
        },
        "underlying": {
          "address": "0x0e95b13539d0381ab20b4e2893e926fc99b3d8dc",
          "name": "Trusted Node",
          "symbol": "TNODE",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x7f12a37b6921ffac11fab16338b3ae67ee0c462b",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "60000000",
            "MinimumSwap": "114",
            "BigValueThreshold": "12000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "11364",
            "MinimumSwapFee": "57",
            "anyToken": {
              "address": "0x7f12a37b6921ffac11fab16338b3ae67ee0c462b",
              "name": "Trusted Node",
              "symbol": "TNODE",
              "decimals": 18
            }
          },
          "1313161554": {
            "address": "0xa649325aa7c5093d12d6f98eb4378deae68ce23f",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "60000000",
            "MinimumSwap": "114",
            "BigValueThreshold": "12000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "11364",
            "MinimumSwapFee": "57",
            "anyToken": {
              "address": "0xa649325aa7c5093d12d6f98eb4378deae68ce23f",
              "name": "Trusted Node",
              "symbol": "TNODE",
              "decimals": 18
            }
          }
        },
        "price": 0.00219866,
        "logoUrl": "https://assets.coingecko.com/coins/images/20534/large/trustednode.png",
        "chainId": "1",
        "tokenid": "anyTNODE",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x0000000000085d4780b73119b644ae5ecd22b376": {
        "address": "0x0000000000085d4780b73119b644ae5ecd22b376",
        "anyToken": {
          "address": "0xf751575ed3390f6c02b4358f9e165e7b44877032",
          "name": "TrueUSD",
          "symbol": "anyTUSD",
          "decimals": 18
        },
        "underlying": {
          "address": "0x0000000000085d4780b73119b644ae5ecd22b376",
          "name": "TrueUSD",
          "symbol": "TUSD",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x14016e85a25aeb13065688cafb43044c2ef86784",
            "underlying": {
              "address": "0x14016e85a25aeb13065688cafb43044c2ef86784",
              "name": "TrueUSD",
              "symbol": "TUSD",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "5000000",
            "MinimumSwap": "10",
            "BigValueThreshold": "1000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1000",
            "MinimumSwapFee": "5",
            "anyToken": {
              "address": "0x559e9fc6a4d28d4b514f076724cb62f07ace862a",
              "name": "TrueUSD",
              "symbol": "anyTUSD",
              "decimals": 18
            }
          }
        },
        "price": 0.999858,
        "logoUrl": "https://assets.coingecko.com/coins/images/3449/large/tusd.png",
        "chainId": "1",
        "tokenid": "anyTUSD",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x3085154623f51b00dedfc6ceeb5197277a66b17b": {
        "address": "0x3085154623f51b00dedfc6ceeb5197277a66b17b",
        "anyToken": {
          "address": "0x9f47f313acfd4bdc52f4373b493eae7d5ac5b765",
          "name": "NFTY Token",
          "symbol": "anyNFTY",
          "decimals": 18
        },
        "underlying": {
          "address": "0x3085154623f51b00dedfc6ceeb5197277a66b17b",
          "name": "NFTY Token",
          "symbol": "NFTY",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x8623e66bea0dce41b6d47f9c44e806a115babae0",
            "underlying": {
              "address": "0x8623e66bea0dce41b6d47f9c44e806a115babae0",
              "name": "NFTY Token",
              "symbol": "NFTY",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "9400000",
            "MinimumSwap": "18.8",
            "BigValueThreshold": "1900000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1870",
            "MinimumSwapFee": "9.4",
            "anyToken": {
              "address": "0x860ea5712db042de011c4ffb2789bdcb2bff9828",
              "name": "NFTY Token",
              "symbol": "anyNFTY",
              "decimals": 18
            }
          }
        },
        "price": 0.0020087,
        "logoUrl": "https://assets.coingecko.com/coins/images/18584/large/nfty_logo.png",
        "chainId": "1",
        "tokenid": "anyNFTY",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x84ca8bc7997272c7cfb4d0cd3d55cd942b3c9419": {
        "address": "0x84ca8bc7997272c7cfb4d0cd3d55cd942b3c9419",
        "anyToken": {
          "address": "0x410a7bf502414b2f0caad204de5782077ac6478f",
          "name": "DIAToken",
          "symbol": "anyDIA",
          "decimals": 18
        },
        "underlying": {
          "address": "0x84ca8bc7997272c7cfb4d0cd3d55cd942b3c9419",
          "name": "DIAToken",
          "symbol": "DIA",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.289493,
        "logoUrl": "https://assets.coingecko.com/coins/images/11955/large/DIA-icon-colour_%281%29.png",
        "chainId": "1",
        "tokenid": "anyDIA",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x40986a85b4cfcdb054a6cbfb1210194fee51af88": {
        "address": "0x40986a85b4cfcdb054a6cbfb1210194fee51af88",
        "anyToken": {
          "address": "0xbdba76fa2659c33ffcc2b0bc134c3a2c8a3aa94d",
          "name": "UNIFARM Token",
          "symbol": "anyUFARM",
          "decimals": 18
        },
        "underlying": {
          "address": "0x40986a85b4cfcdb054a6cbfb1210194fee51af88",
          "name": "UNIFARM Token",
          "symbol": "UFARM",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x0a356f512f6fce740111ee04ab1699017a908680",
            "underlying": {
              "address": "0x0a356f512f6fce740111ee04ab1699017a908680",
              "name": "UNIFARM Token",
              "symbol": "UFARM",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "410000000",
            "MinimumSwap": "808",
            "BigValueThreshold": "78000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "80806",
            "MinimumSwapFee": "404",
            "anyToken": {
              "address": "0x3d2e9d762413cec5bf862fdb0085315dd2c4c09e",
              "name": "UNIFARM Token",
              "symbol": "anyUFARM",
              "decimals": 18
            }
          }
        },
        "price": 0.00100463,
        "logoUrl": "https://assets.coingecko.com/coins/images/15247/large/ufarm.jpeg",
        "chainId": "1",
        "tokenid": "anyUFARM",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xac51066d7bec65dc4589368da368b212745d63e8": {
        "address": "0xac51066d7bec65dc4589368da368b212745d63e8",
        "anyToken": {
          "address": "0x3915c77dc839d97e875613a5b64179acc1da97df",
          "name": "ALICE",
          "symbol": "anyALICE",
          "decimals": 6
        },
        "underlying": {
          "address": "0xac51066d7bec65dc4589368da368b212745d63e8",
          "name": "ALICE",
          "symbol": "ALICE",
          "decimals": 6
        },
        "destChains": {
          "56": {
            "address": "0xac51066d7bec65dc4589368da368b212745d63e8",
            "underlying": {
              "address": "0xac51066d7bec65dc4589368da368b212745d63e8",
              "name": "ALICE",
              "symbol": "ALICE",
              "decimals": 6
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "3246753.246753",
            "MinimumSwap": "6.493506",
            "BigValueThreshold": "649350.649351",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "649.350649",
            "MinimumSwapFee": "3.246753",
            "anyToken": {
              "address": "0x84a5d1d7b78810512357c1ebd252447acc91d77e",
              "name": "ALICE",
              "symbol": "anyALICE",
              "decimals": 6
            }
          }
        },
        "price": 1.3,
        "logoUrl": "https://assets.coingecko.com/coins/images/14375/large/alice_logo.jpg",
        "chainId": "1",
        "tokenid": "anyALICE",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xd38b1159c8aee064af2d869afa1c2c1632da8b97": {
        "address": "0xd38b1159c8aee064af2d869afa1c2c1632da8b97",
        "anyToken": {
          "address": "0x1608278e54fb9e070cb109234d111ff3a359612b",
          "name": "Wrapped Metrix",
          "symbol": "anyMRXe",
          "decimals": 8
        },
        "underlying": {
          "address": "0xd38b1159c8aee064af2d869afa1c2c1632da8b97",
          "name": "Wrapped Metrix",
          "symbol": "MRXe",
          "decimals": 8
        },
        "destChains": {
          "56": {
            "address": "0x767b28a30e3a15dcece7bff7a020adfde9d19cf8",
            "underlying": {
              "address": "0x767b28a30e3a15dcece7bff7a020adfde9d19cf8",
              "name": "Wrapped Metrix",
              "symbol": "MRXb",
              "decimals": 8
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "20000000000",
            "MinimumSwap": "36320",
            "BigValueThreshold": "3700000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "3632000",
            "MinimumSwapFee": "18161",
            "anyToken": {
              "address": "0x40642f7f80138913ca239306aa74f1acaef6b0e8",
              "name": "Wrapped Metrix",
              "symbol": "anyMRXb",
              "decimals": 8
            }
          }
        },
        "price": 0.00004409,
        "logoUrl": "https://assets.coingecko.com/coins/images/20763/large/Copy_of_Metrix_Logo_Final_Cut.png",
        "chainId": "1",
        "tokenid": "anyMRXe",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xb2ea51baa12c461327d12a2069d47b30e680b69d": {
        "address": "0xb2ea51baa12c461327d12a2069d47b30e680b69d",
        "anyToken": {
          "address": "0xcb56e96615bb22bf4d78390ac79f4b5e9f582ccf",
          "name": "Space Crown",
          "symbol": "anySMCW",
          "decimals": 18
        },
        "underlying": {
          "address": "0xb2ea51baa12c461327d12a2069d47b30e680b69d",
          "name": "Space Crown",
          "symbol": "SMCW",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xb2ea51baa12c461327d12a2069d47b30e680b69d",
            "underlying": {
              "address": "0xb2ea51baa12c461327d12a2069d47b30e680b69d",
              "name": "Space Crown",
              "symbol": "SMCW",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "31250000",
            "MinimumSwap": "62.5",
            "BigValueThreshold": "6250000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "6250",
            "MinimumSwapFee": "31.25",
            "anyToken": {
              "address": "0x26414054e097156c58b0294a9189a34c06bb0ecb",
              "name": "Space Crown",
              "symbol": "anySMCW",
              "decimals": 18
            }
          }
        },
        "chainId": "1",
        "tokenid": "anySMCW",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xdfdb7f72c1f195c5951a234e8db9806eb0635346": {
        "address": "0xdfdb7f72c1f195c5951a234e8db9806eb0635346",
        "anyToken": {
          "address": "0xe008ff5483d5c0214911ba6cbdaccf822436d165",
          "name": "Feisty Doge NFT",
          "symbol": "anyNFD",
          "decimals": 18
        },
        "underlying": {
          "address": "0xdfdb7f72c1f195c5951a234e8db9806eb0635346",
          "name": "Feisty Doge NFT",
          "symbol": "NFD",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x0fe9778c005a5a6115cbe12b0568a2d50b765a51",
            "underlying": {
              "address": "0x0fe9778c005a5a6115cbe12b0568a2d50b765a51",
              "name": "Feisty Doge NFT",
              "symbol": "NFD",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "50000000000",
            "MinimumSwap": "98952",
            "BigValueThreshold": "10000000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "9895112",
            "MinimumSwapFee": "49476",
            "anyToken": {
              "address": "0x41a072b1c8d716721e407640e5b1fdcc714239ab",
              "name": "Feisty Doge NFT",
              "symbol": "anyNFD",
              "decimals": 18
            }
          },
          "1313161554": {
            "address": "0x90eb16621274fb47a071001fbbf7550948874cb5",
            "underlying": {
              "address": "0x90eb16621274fb47a071001fbbf7550948874cb5",
              "name": "Feisty Doge NFT",
              "symbol": "NFD",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "50000000000",
            "MinimumSwap": "98952",
            "BigValueThreshold": "10000000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "9895112",
            "MinimumSwapFee": "49476",
            "anyToken": {
              "address": "0xd6070ae98b8069de6b494332d1a1a81b6179d960",
              "name": "Feisty Doge NFT",
              "symbol": "NFD",
              "decimals": 18
            }
          }
        },
        "price": 0.00002404,
        "logoUrl": "https://assets.coingecko.com/coins/images/17834/large/doge-fractionalized.png",
        "chainId": "1",
        "tokenid": "anyNFD",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xab167e816e4d76089119900e941befdfa37d6b32": {
        "address": "0xab167e816e4d76089119900e941befdfa37d6b32",
        "anyToken": {
          "address": "0x6496994241804d7fe2b032901931e03bcd82301f",
          "name": "Shibnobi",
          "symbol": "anySHINJA",
          "decimals": 9
        },
        "underlying": {
          "address": "0xab167e816e4d76089119900e941befdfa37d6b32",
          "name": "Shibnobi",
          "symbol": "SHINJA",
          "decimals": 9
        },
        "destChains": {
          "56": {
            "address": "0xa8ea8d1d7a3e689ccc90dcecb437ab0674d5ec6f",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "453000000000000000000",
            "MinimumSwap": "905000000000000",
            "BigValueThreshold": "90500000000000000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "90500000000000000",
            "MinimumSwapFee": "453000000000000",
            "anyToken": {
              "address": "0xa8ea8d1d7a3e689ccc90dcecb437ab0674d5ec6f",
              "name": "Shibnobi",
              "symbol": "SHINJA",
              "decimals": 9
            }
          }
        },
        "price": "",
        "logoUrl": "https://assets.coingecko.com/coins/images/20545/large/lpZPNdu_d.jpg",
        "chainId": "1",
        "tokenid": "anySHINJA",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xa283aa7cfbb27ef0cfbcb2493dd9f4330e0fd304": {
        "address": "0xa283aa7cfbb27ef0cfbcb2493dd9f4330e0fd304",
        "anyToken": {
          "address": "0xe2d27f06f63d98b8e11b38b5b08a75d0c8dd62b9",
          "name": "MMToken",
          "symbol": "anyMM",
          "decimals": 18
        },
        "underlying": {
          "address": "0xa283aa7cfbb27ef0cfbcb2493dd9f4330e0fd304",
          "name": "MMToken",
          "symbol": "MM",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x73f059db0182dc2ed716d028e1b13033cfcbf63b",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "3400000",
            "MinimumSwap": "6.8",
            "BigValueThreshold": "700000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "676",
            "MinimumSwapFee": "3.4",
            "anyToken": {
              "address": "0x73f059db0182dc2ed716d028e1b13033cfcbf63b",
              "name": "MMToken",
              "symbol": "MM",
              "decimals": 18
            }
          }
        },
        "price": 0.04138134,
        "logoUrl": "https://assets.coingecko.com/coins/images/13302/large/MM.jpg",
        "chainId": "1",
        "tokenid": "anyMM",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x1a3496c18d558bd9c6c8f609e1b129f67ab08163": {
        "address": "0x1a3496c18d558bd9c6c8f609e1b129f67ab08163",
        "anyToken": {
          "address": "0xafaace7138ab3c2bcb2db4264f8312e1bbb80653",
          "name": "DEAPCOIN",
          "symbol": "anyDEP",
          "decimals": 18
        },
        "underlying": {
          "address": "0x1a3496c18d558bd9c6c8f609e1b129f67ab08163",
          "name": "DEAPCOIN",
          "symbol": "DEP",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xcaf5191fc480f43e4df80106c7695eca56e48b18",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "110000000",
            "MinimumSwap": "214",
            "BigValueThreshold": "22000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "21322",
            "MinimumSwapFee": "107",
            "anyToken": {
              "address": "0xcaf5191fc480f43e4df80106c7695eca56e48b18",
              "name": "DEAPCOIN",
              "symbol": "DEP",
              "decimals": 18
            }
          }
        },
        "price": 0.00211239,
        "logoUrl": "https://assets.coingecko.com/coins/images/10970/large/DEAPcoin_01.png",
        "chainId": "1",
        "tokenid": "anyDEP",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xcafe001067cdef266afb7eb5a286dcfd277f3de5": {
        "address": "0xcafe001067cdef266afb7eb5a286dcfd277f3de5",
        "anyToken": {
          "address": "0x84ae7b0ff2bc523969fb3162e04149a419196f4b",
          "name": "ParaSwap",
          "symbol": "anyPSP",
          "decimals": 18
        },
        "underlying": {
          "address": "0xcafe001067cdef266afb7eb5a286dcfd277f3de5",
          "name": "ParaSwap",
          "symbol": "PSP",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.03263441,
        "logoUrl": "https://assets.coingecko.com/coins/images/20403/large/ep7GqM19_400x400.jpg",
        "chainId": "1",
        "tokenid": "anyPSP",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x7ae0d42f23c33338de15bfa89c7405c068d9dc0a": {
        "address": "0x7ae0d42f23c33338de15bfa89c7405c068d9dc0a",
        "anyToken": {
          "address": "0xbb3d3ee59002b7b9a0a276c269d60fbac3ea65f8",
          "name": "Shibaverse",
          "symbol": "anyVERSE",
          "decimals": 18
        },
        "underlying": {
          "address": "0x7ae0d42f23c33338de15bfa89c7405c068d9dc0a",
          "name": "Shibaverse",
          "symbol": "VERSE",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00053935,
        "logoUrl": "https://assets.coingecko.com/coins/images/18407/large/logo_200.png",
        "chainId": "1",
        "tokenid": "anyVERSE",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xadb2437e6f65682b85f814fbc12fec0508a7b1d0": {
        "address": "0xadb2437e6f65682b85f814fbc12fec0508a7b1d0",
        "anyToken": {
          "address": "0xd9a807e9d2f61b0098b4c3f79b2dfb9bc2e181ae",
          "name": "UniCrypt",
          "symbol": "anyUNCX",
          "decimals": 18
        },
        "underlying": {
          "address": "0xadb2437e6f65682b85f814fbc12fec0508a7b1d0",
          "name": "UniCrypt",
          "symbol": "UNCX",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x09a6c44c3947b69e2b45f4d51b67e6a39acfb506",
            "underlying": {
              "address": "0x09a6c44c3947b69e2b45f4d51b67e6a39acfb506",
              "name": "UniCrypt on xDai on BSC",
              "symbol": "UNCX",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "12755.752845",
            "MinimumSwap": "0.025512",
            "BigValueThreshold": "2551.150569",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "2.551151",
            "MinimumSwapFee": "0.012756",
            "anyToken": {
              "address": "0xe529797535426a042a79aa555334f444565d118e",
              "name": "UniCrypt on xDai on BSC",
              "symbol": "anyUNCX",
              "decimals": 18
            }
          }
        },
        "price": 238.26,
        "logoUrl": "https://assets.coingecko.com/coins/images/12871/large/unicrypt_logo.png",
        "chainId": "1",
        "tokenid": "anyUNCX",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x2f4eb47a1b1f4488c71fc10e39a4aa56af33dd49": {
        "address": "0x2f4eb47a1b1f4488c71fc10e39a4aa56af33dd49",
        "anyToken": {
          "address": "0xcb69f7ac645f5e09310b91445277a53f7fcb78cf",
          "name": "UNCL",
          "symbol": "anyUNCL",
          "decimals": 18
        },
        "underlying": {
          "address": "0x2f4eb47a1b1f4488c71fc10e39a4aa56af33dd49",
          "name": "UNCL",
          "symbol": "UNCL",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x0e8d5504bf54d9e44260f8d153ecd5412130cabb",
            "underlying": {
              "address": "0x0e8d5504bf54d9e44260f8d153ecd5412130cabb",
              "name": "UNCL on xDai on BSC",
              "symbol": "UNCL",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "150000",
            "MinimumSwap": "0.3",
            "BigValueThreshold": "30000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "30",
            "MinimumSwapFee": "0.15",
            "anyToken": {
              "address": "0xbb244fc91e86c5a4b9d31b2935c5bc57c034bfa1",
              "name": "UNCL on xDai on BSC",
              "symbol": "anyUNCL",
              "decimals": 18
            }
          }
        },
        "price": 3.37,
        "logoUrl": "https://assets.coingecko.com/coins/images/13102/large/uncl_logo.png",
        "chainId": "1",
        "tokenid": "anyUNCL",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x850aab69f0e0171a9a49db8be3e71351c8247df4": {
        "address": "0x850aab69f0e0171a9a49db8be3e71351c8247df4",
        "anyToken": {
          "address": "0xa8752333f6a6fe47323a4edac3d09bb1048a0e23",
          "name": "Konomi",
          "symbol": "anyKONO",
          "decimals": 18
        },
        "underlying": {
          "address": "0x850aab69f0e0171a9a49db8be3e71351c8247df4",
          "name": "Konomi",
          "symbol": "KONO",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xe22b9152914986e4020a00ab6ef510085c26c208",
            "underlying": {
              "address": "0xe22b9152914986e4020a00ab6ef510085c26c208",
              "name": "Konomi",
              "symbol": "KONO",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "40000000",
            "MinimumSwap": "80",
            "BigValueThreshold": "8000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "7856",
            "MinimumSwapFee": "40",
            "anyToken": {
              "address": "0xf35870b6fd9a77d47364d357dd0b16a5e5c956da",
              "name": "Konomi",
              "symbol": "anyKONO",
              "decimals": 18
            }
          }
        },
        "price": 0.02277413,
        "logoUrl": "https://assets.coingecko.com/coins/images/14406/large/konomi.jpg",
        "chainId": "1",
        "tokenid": "anyKONO",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xb2979ab4705fa0621fcab059748b4e77dd76b78e": {
        "address": "0xb2979ab4705fa0621fcab059748b4e77dd76b78e",
        "anyToken": {
          "address": "0x1748e1a07e82762660b4e57838b570dcb73bf75d",
          "name": "Unvaxxed Sperm",
          "symbol": "anynuBTC",
          "decimals": 9
        },
        "underlying": {
          "address": "0xb2979ab4705fa0621fcab059748b4e77dd76b78e",
          "name": "Unvaxxed Sperm",
          "symbol": "nuBTC",
          "decimals": 9
        },
        "destChains": {
          "56": {
            "address": "0x0dea5ac2898e6aa637ece0db750fd6d35e460392",
            "underlying": {
              "address": "0x0dea5ac2898e6aa637ece0db750fd6d35e460392",
              "name": "Unvaxxed Sperm",
              "symbol": "nuBTC",
              "decimals": 9
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "6500000000000",
            "MinimumSwap": "13000000",
            "BigValueThreshold": "1300000000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1300000000",
            "MinimumSwapFee": "6500000",
            "anyToken": {
              "address": "0x231f197d0e3e912deccd93c076ad92bddde70d61",
              "name": "Unvaxxed Sperm",
              "symbol": "anynuBTC",
              "decimals": 9
            }
          }
        },
        "logoUrl": "https://s2.coinmarketcap.com/static/img/coins/64x64/15344.png",
        "chainId": "1",
        "tokenid": "anynuBTC",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xea1ea0972fa092dd463f2968f9bb51cc4c981d71": {
        "address": "0xea1ea0972fa092dd463f2968f9bb51cc4c981d71",
        "anyToken": {
          "address": "0xfc2afd7ebf2e0ca69340cd9f466177e23812cf5a",
          "name": "Modefi",
          "symbol": "anyMOD",
          "decimals": 18
        },
        "underlying": {
          "address": "0xea1ea0972fa092dd463f2968f9bb51cc4c981d71",
          "name": "Modefi",
          "symbol": "MOD",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xd4fbc57b6233f268e7fba3b66e62719d74deecbc",
            "underlying": {
              "address": "0xd4fbc57b6233f268e7fba3b66e62719d74deecbc",
              "name": "Modefi",
              "symbol": "MOD",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "8600000",
            "MinimumSwap": "17.2",
            "BigValueThreshold": "1800000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1705",
            "MinimumSwapFee": "8.6",
            "anyToken": {
              "address": "0x22e7f79c547d676baf561032bf64d51d6ceb5f3f",
              "name": "Modefi",
              "symbol": "anyMOD",
              "decimals": 18
            }
          }
        },
        "price": 0.230006,
        "logoUrl": "https://assets.coingecko.com/coins/images/13980/large/modefi_logo.png",
        "chainId": "1",
        "tokenid": "anyMOD",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x1a7e4e63778b4f12a199c062f3efdd288afcbce8": {
        "address": "0x1a7e4e63778b4f12a199c062f3efdd288afcbce8",
        "anyToken": {
          "address": "0xe705af5f63fcabdcdf5016aa838eaaac35d12890",
          "name": "agEUR",
          "symbol": "anyagEUR",
          "decimals": 18
        },
        "underlying": {
          "address": "0x1a7e4e63778b4f12a199c062f3efdd288afcbce8",
          "name": "agEUR",
          "symbol": "agEUR",
          "decimals": 18
        },
        "destChains": {},
        "price": 1.078,
        "logoUrl": "https://assets.coingecko.com/coins/images/19479/large/agEUR.png",
        "chainId": "1",
        "tokenid": "anyagEUR",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xc17fbe1d709ddf6c0b6665dd0591046815ac7554": {
        "address": "0xc17fbe1d709ddf6c0b6665dd0591046815ac7554",
        "anyToken": {
          "address": "0x5f1c76b7a90d88ee5bada971a28aaef514719dbf",
          "name": "Polars",
          "symbol": "anyPOL",
          "decimals": 18
        },
        "underlying": {
          "address": "0xc17fbe1d709ddf6c0b6665dd0591046815ac7554",
          "name": "Polars",
          "symbol": "POL",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x273a4ffceb31b8473d51051ad2a2edbb7ac8ce02",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "340000000",
            "MinimumSwap": "678",
            "BigValueThreshold": "68000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "67658",
            "MinimumSwapFee": "339",
            "anyToken": {
              "address": "0x273a4ffceb31b8473d51051ad2a2edbb7ac8ce02",
              "name": "Polars",
              "symbol": "POL",
              "decimals": 18
            }
          }
        },
        "price": 0,
        "logoUrl": "https://assets.coingecko.com/coins/images/16285/large/LOGO-CMC.png",
        "chainId": "1",
        "tokenid": "anyPOL",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xf3db5fa2c66b7af3eb0c0b782510816cbe4813b8": {
        "address": "0xf3db5fa2c66b7af3eb0c0b782510816cbe4813b8",
        "anyToken": {
          "address": "0x95dd59343a893637be1c3228060ee6afbf6f0730",
          "name": "Everex",
          "symbol": "anyEVX",
          "decimals": 4
        },
        "underlying": {
          "address": "0xf3db5fa2c66b7af3eb0c0b782510816cbe4813b8",
          "name": "Everex",
          "symbol": "EVX",
          "decimals": 4
        },
        "destChains": {
          "56": {
            "address": "0x0c9b7103e16f171f60448e039f48d3b50241fcbc",
            "underlying": {
              "address": "0x0c9b7103e16f171f60448e039f48d3b50241fcbc",
              "name": "Everex",
              "symbol": "EVX",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "110000000",
            "MinimumSwap": "215",
            "BigValueThreshold": "22000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "21500",
            "MinimumSwapFee": "107.5",
            "anyToken": {
              "address": "0x51138ef0dc9de2a03aaafa95f69924302b49a5fb",
              "name": "Everex",
              "symbol": "anyEVX",
              "decimals": 18
            }
          }
        },
        "price": 0.01123141,
        "logoUrl": "https://assets.coingecko.com/coins/images/997/large/everex.png",
        "chainId": "1",
        "tokenid": "anyEVX",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xc741f06082aa47f93729070ad0dd95e223bda091": {
        "address": "0xc741f06082aa47f93729070ad0dd95e223bda091",
        "anyToken": {
          "address": "0xa6e822e865fbe37d6ebc6d721947afbbd9f95c19",
          "name": "Education",
          "symbol": "anyLEDU",
          "decimals": 8
        },
        "underlying": {
          "address": "0xc741f06082aa47f93729070ad0dd95e223bda091",
          "name": "Education",
          "symbol": "LEDU",
          "decimals": 8
        },
        "destChains": {
          "56": {
            "address": "0x887d9c01fff04022da9c6d64a65a481a9e5d1fca",
            "underlying": {
              "address": "0x887d9c01fff04022da9c6d64a65a481a9e5d1fca",
              "name": "Education",
              "symbol": "LEDU",
              "decimals": 8
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "600000000",
            "MinimumSwap": "1126",
            "BigValueThreshold": "120000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "112440",
            "MinimumSwapFee": "563",
            "anyToken": {
              "address": "0xe5b834d5086564de95ec6ce390605186a7732439",
              "name": "Education",
              "symbol": "anyLEDU",
              "decimals": 8
            }
          }
        },
        "price": 0.001171,
        "logoUrl": "https://assets.coingecko.com/coins/images/3451/large/LEDU-education-ecosystem.png",
        "chainId": "1",
        "tokenid": "anyLEDU",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x95a1796437bad6502d1c1cce165cd76e522409a9": {
        "address": "0x95a1796437bad6502d1c1cce165cd76e522409a9",
        "anyToken": {
          "address": "0x8d34a11f49172c057d11833cf92aff97f28fc595",
          "name": "Official Crypto Cowboy Token",
          "symbol": "anyOCCT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x95a1796437bad6502d1c1cce165cd76e522409a9",
          "name": "Official Crypto Cowboy Token",
          "symbol": "OCCT",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x5c865352f9012308378b1c74fe01d899f28e8fd9",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "230000000000000000",
            "MinimumSwap": "460000000000",
            "BigValueThreshold": "46000000000000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "45600000000000",
            "MinimumSwapFee": "230000000000",
            "anyToken": {
              "address": "0x5c865352f9012308378b1c74fe01d899f28e8fd9",
              "name": "Official Crypto Cowboy Token",
              "symbol": "OCCT",
              "decimals": 18
            }
          }
        },
        "price": 2.799e-12,
        "logoUrl": "https://assets.coingecko.com/coins/images/20302/large/OCCT-SPROCCT_200x200.PNG",
        "chainId": "1",
        "tokenid": "anyOCCT",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x6781a0f84c7e9e846dcb84a9a5bd49333067b104": {
        "address": "0x6781a0f84c7e9e846dcb84a9a5bd49333067b104",
        "anyToken": {
          "address": "0x2ad402655243203fcfa7dcb62f8a08cc2ba88ae0",
          "name": "ZAP TOKEN",
          "symbol": "anyZAP",
          "decimals": 18
        },
        "underlying": {
          "address": "0x6781a0f84c7e9e846dcb84a9a5bd49333067b104",
          "name": "ZAP TOKEN",
          "symbol": "ZAP",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xc5326b32e8baef125acd68f8bc646fd646104f1c",
            "underlying": {
              "address": "0xc5326b32e8baef125acd68f8bc646fd646104f1c",
              "name": "ZAP TOKEN",
              "symbol": "ZAP",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "420000000",
            "MinimumSwap": "828",
            "BigValueThreshold": "83000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "82762",
            "MinimumSwapFee": "414",
            "anyToken": {
              "address": "0xeb2f197b3467b02dd8f36b09b2d179c250352ff3",
              "name": "ZAP TOKEN",
              "symbol": "anyZAP",
              "decimals": 18
            }
          }
        },
        "price": 0.00234197,
        "logoUrl": "https://assets.coingecko.com/coins/images/2180/large/zap.png",
        "chainId": "1",
        "tokenid": "anyZAP",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xa350da05405cc204e551c4eed19c3039646528d5": {
        "address": "0xa350da05405cc204e551c4eed19c3039646528d5",
        "anyToken": {
          "address": "0xe84cea9df2d6a6010c0bd74b803f6372534e75e9",
          "name": "Blocksport Token",
          "symbol": "anyBSPT",
          "decimals": 18
        },
        "underlying": {
          "address": "0xa350da05405cc204e551c4eed19c3039646528d5",
          "name": "Blocksport Token",
          "symbol": "BSPT",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x74f996a2ed8b1370c2f12ce9d040a1d9c9254e6e",
            "underlying": {
              "address": "0x74f996a2ed8b1370c2f12ce9d040a1d9c9254e6e",
              "name": "Blocksport Token",
              "symbol": "BSPT",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "100000000",
            "MinimumSwap": "200",
            "BigValueThreshold": "20000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "20000",
            "MinimumSwapFee": "100",
            "anyToken": {
              "address": "0x6aeec4b23aa51442e613e5023dafa5c9de2dfe95",
              "name": "Blocksport Token",
              "symbol": "anyBSPT",
              "decimals": 18
            }
          }
        },
        "price": 0.0011196,
        "logoUrl": "https://blocksport.io/wp-content/uploads/2022/02/Logo_black2_cube.png",
        "chainId": "1",
        "tokenid": "anyBSPT",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x591127253e40d4f63bf29ccf3d81fd062a149c8c": {
        "address": "0x591127253e40d4f63bf29ccf3d81fd062a149c8c",
        "anyToken": {
          "address": "0xe613a914bbb433855378183c3ab13003285da40a",
          "name": "TTX METAVERSE",
          "symbol": "anyXMETA",
          "decimals": 18
        },
        "underlying": {
          "address": "0x591127253e40d4f63bf29ccf3d81fd062a149c8c",
          "name": "TTX METAVERSE",
          "symbol": "XMETA",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x9aab0a9b3a2f7cf669f1385c48e0a063b93834bb",
            "underlying": {
              "address": "0x9aab0a9b3a2f7cf669f1385c48e0a063b93834bb",
              "name": "TTX METAVERSE",
              "symbol": "XMETA",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "1700000000",
            "MinimumSwap": "3212",
            "BigValueThreshold": "330000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "321028",
            "MinimumSwapFee": "1606",
            "anyToken": {
              "address": "0x1441e091e1247e6e6990ccb2c27169204fb04aa9",
              "name": "TTX METAVERSE",
              "symbol": "anyXMETA",
              "decimals": 18
            }
          }
        },
        "price": 2.16226e-7,
        "logoUrl": "https://assets.coingecko.com/coins/images/23332/small/xmeta.png",
        "chainId": "1",
        "tokenid": "anyXMETA",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xa849eaae994fb86afa73382e9bd88c2b6b18dc71": {
        "address": "0xa849eaae994fb86afa73382e9bd88c2b6b18dc71",
        "anyToken": {
          "address": "0x02a2b736f9150d36c0919f3acee8ba2a92fbbb40",
          "name": "Mass Vehicle Ledger Token",
          "symbol": "anyMVL",
          "decimals": 18
        },
        "underlying": {
          "address": "0xa849eaae994fb86afa73382e9bd88c2b6b18dc71",
          "name": "Mass Vehicle Ledger Token",
          "symbol": "MVL",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x5f588efaf8eb57e3837486e834fc5a4e07768d98",
            "underlying": {
              "address": "0x5f588efaf8eb57e3837486e834fc5a4e07768d98",
              "name": "Binance Wrapped MVL",
              "symbol": "bMVL",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "560000000",
            "MinimumSwap": "1110",
            "BigValueThreshold": "120000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "111000",
            "MinimumSwapFee": "555",
            "anyToken": {
              "address": "0x2cbff5a1b0c34791fb96d89467798b4e6f755e34",
              "name": "Binance Wrapped MVL ",
              "symbol": "anybMVL",
              "decimals": 18
            }
          }
        },
        "price": 0.00332793,
        "logoUrl": "https://assets.coingecko.com/coins/images/3476/large/mass-vehicle-ledger.png",
        "chainId": "1",
        "tokenid": "anyMVL",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x47b9f01b16e9c9cb99191dca68c9cc5bf6403957": {
        "address": "0x47b9f01b16e9c9cb99191dca68c9cc5bf6403957",
        "anyToken": {
          "address": "0x5a33869045db8a6a16c9f351293501cfd92cf7ed",
          "name": "ONSTON",
          "symbol": "anyONSTON",
          "decimals": 18
        },
        "underlying": {
          "address": "0x47b9f01b16e9c9cb99191dca68c9cc5bf6403957",
          "name": "ONSTON",
          "symbol": "ONSTON",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00414981,
        "logoUrl": "https://assets.coingecko.com/coins/images/20669/large/onston.PNG",
        "chainId": "1",
        "tokenid": "anyONSTON",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xc6dddb5bc6e61e0841c54f3e723ae1f3a807260b": {
        "address": "0xc6dddb5bc6e61e0841c54f3e723ae1f3a807260b",
        "anyToken": {
          "address": "0x782617249085aa28a367feb49cf811434660cee5",
          "name": "Aurox Token",
          "symbol": "anyURUS",
          "decimals": 18
        },
        "underlying": {
          "address": "0xc6dddb5bc6e61e0841c54f3e723ae1f3a807260b",
          "name": "Aurox Token",
          "symbol": "URUS",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xc6dddb5bc6e61e0841c54f3e723ae1f3a807260b",
            "underlying": {
              "address": "0xc6dddb5bc6e61e0841c54f3e723ae1f3a807260b",
              "name": "Aurox Token",
              "symbol": "URUS",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "68000",
            "MinimumSwap": "0.14",
            "BigValueThreshold": "14000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "13.5",
            "MinimumSwapFee": "0.07",
            "anyToken": {
              "address": "0xb2c7a198be3345d554043f6b875e254cb2034219",
              "name": "Aurox Token",
              "symbol": "anyURUS",
              "decimals": 18
            }
          }
        },
        "price": 15.62,
        "logoUrl": "https://assets.coingecko.com/coins/images/14122/large/urus.PNG",
        "chainId": "1",
        "tokenid": "anyURUS",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x8a7adc1b690e81c758f1bd0f72dfe27ae6ec56a5": {
        "address": "0x8a7adc1b690e81c758f1bd0f72dfe27ae6ec56a5",
        "anyToken": {
          "address": "0xf8a363cf116b6b633faedf66848ed52895ce703b",
          "name": "Bolide",
          "symbol": "anyBLID",
          "decimals": 18
        },
        "underlying": {
          "address": "0x8a7adc1b690e81c758f1bd0f72dfe27ae6ec56a5",
          "name": "Bolide",
          "symbol": "BLID",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x766afcf83fd5eaf884b3d529b432ca27a6d84617",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "217391304.347826",
            "MinimumSwap": "434.782609",
            "BigValueThreshold": "43478260.869565",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "43478.260869",
            "MinimumSwapFee": "217.391304",
            "anyToken": {
              "address": "0x766afcf83fd5eaf884b3d529b432ca27a6d84617",
              "name": "Bolide",
              "symbol": "BLID",
              "decimals": 18
            }
          }
        },
        "price": 0.02583957,
        "logoUrl": "https://invest.bolide.fi/img/token_logo_255x255.png",
        "chainId": "1",
        "tokenid": "anyBLID",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xe0ad1806fd3e7edf6ff52fdb822432e847411033": {
        "address": "0xe0ad1806fd3e7edf6ff52fdb822432e847411033",
        "anyToken": {
          "address": "0x3b9e3b5c616a1a038fdc190758bbe9bab6c7a857",
          "name": "OnX.finance",
          "symbol": "anyONX",
          "decimals": 18
        },
        "underlying": {
          "address": "0xe0ad1806fd3e7edf6ff52fdb822432e847411033",
          "name": "OnX.finance",
          "symbol": "ONX",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x50dfd52c9f6961bf94d1d5489ae4b3e37d2f1fe7",
            "underlying": {
              "address": "0x50dfd52c9f6961bf94d1d5489ae4b3e37d2f1fe7",
              "name": "OnX.finance",
              "symbol": "ONX",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "17000000",
            "MinimumSwap": "34",
            "BigValueThreshold": "3400000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "3334",
            "MinimumSwapFee": "17",
            "anyToken": {
              "address": "0xcc41555e193d56b2b5c07db69418d90dfaf20c08",
              "name": "OnX.finance",
              "symbol": "anyONX",
              "decimals": 18
            }
          }
        },
        "price": 0.02598584,
        "logoUrl": "https://assets.coingecko.com/coins/images/13445/large/onxlogo-1.png",
        "chainId": "1",
        "tokenid": "anyONX",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x15ee120fd69bec86c1d38502299af7366a41d1a6": {
        "address": "0x15ee120fd69bec86c1d38502299af7366a41d1a6",
        "anyToken": {
          "address": "0x57e8283743b169855248c1de250b921336096677",
          "name": "anyBitANT",
          "symbol": "anyBitANT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x15ee120fd69bec86c1d38502299af7366a41d1a6",
          "name": "BitANT",
          "symbol": "BitANT",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x81a4c8438b77221f192d8d25252afac62fecd58f",
            "underlying": {
              "address": "0x81a4c8438b77221f192d8d25252afac62fecd58f",
              "name": "BitANT",
              "symbol": "BitANT",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "7600000000",
            "MinimumSwap": "15070",
            "BigValueThreshold": "1600000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1506910",
            "MinimumSwapFee": "7535",
            "anyToken": {
              "address": "0xe60988bfb3c4669fca76fc466d6cffafe11d2b6e",
              "name": "anyBitANT",
              "symbol": "anyBitANT",
              "decimals": 18
            }
          }
        },
        "price": 0.00002594,
        "logoUrl": "https://assets.coingecko.com/coins/images/19055/large/BitANT.png",
        "chainId": "1",
        "tokenid": "anyBitANT",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x5a98fcbea516cf06857215779fd812ca3bef1b32": {
        "address": "0x5a98fcbea516cf06857215779fd812ca3bef1b32",
        "anyToken": {
          "address": "0x0914d4ccc4154ca864637b0b653bc5fd5e1d3ecf",
          "name": "Lido DAO Token",
          "symbol": "anyLDO",
          "decimals": 18
        },
        "underlying": {
          "address": "0x5a98fcbea516cf06857215779fd812ca3bef1b32",
          "name": "Lido DAO Token",
          "symbol": "LDO",
          "decimals": 18
        },
        "destChains": {},
        "price": 1.95,
        "logoUrl": "https://assets.coingecko.com/coins/images/13573/large/Lido_DAO.png",
        "chainId": "1",
        "tokenid": "anyLDO",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x4c4d878fae704fff9e00325f7c2bc758489202ec": {
        "address": "0x4c4d878fae704fff9e00325f7c2bc758489202ec",
        "anyToken": {
          "address": "0x19193f450086d0442157b852081976d41657ad56",
          "name": "NunuToken",
          "symbol": "anyNNT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x4c4d878fae704fff9e00325f7c2bc758489202ec",
          "name": "NunuToken",
          "symbol": "NNT",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x3a2927e68749dd6ad0a568d7c05b587863c0bc10",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "50000000",
            "MinimumSwap": "100",
            "BigValueThreshold": "10000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "10000",
            "MinimumSwapFee": "50",
            "anyToken": {
              "address": "0x3a2927e68749dd6ad0a568d7c05b587863c0bc10",
              "name": "NunuToken",
              "symbol": "NNT",
              "decimals": 18
            }
          }
        },
        "price": 0.00501822,
        "logoUrl": "https://nunuspirits.io/wp-content/uploads/2021/11/NNT.png",
        "chainId": "1",
        "tokenid": "anyNNT",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x01824357d7d7eaf4677bc17786abd26cbdec9ad7": {
        "address": "0x01824357d7d7eaf4677bc17786abd26cbdec9ad7",
        "anyToken": {
          "address": "0xb25e20de2f2ebb4cffd4d16a55c7b395e8a94762",
          "name": "Forward",
          "symbol": "any$FORWARD",
          "decimals": 18
        },
        "underlying": {
          "address": "0x01824357d7d7eaf4677bc17786abd26cbdec9ad7",
          "name": "Forward",
          "symbol": "$FORWARD",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x886640149e31e1430fa74cc39725431eb82ddfb2",
            "underlying": {
              "address": "0x886640149e31e1430fa74cc39725431eb82ddfb2",
              "name": "Forward",
              "symbol": "$FORWARD",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "1000000000",
            "MinimumSwap": "2000",
            "BigValueThreshold": "200000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "200000",
            "MinimumSwapFee": "1000",
            "anyToken": {
              "address": "0xc36d14c0be40dc9ab88760d2112cc5a69ff8b3c7",
              "name": "Forward",
              "symbol": "any$FORWARD",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://forwardprotocol.io/FORWARD_Symbol_Purple.png",
        "chainId": "1",
        "tokenid": "anyFORWARD",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x5a75a093747b72a0e14056352751edf03518031d": {
        "address": "0x5a75a093747b72a0e14056352751edf03518031d",
        "anyToken": {
          "address": "0x7fc5670b2041d34414b0b2178fc660b1e1faf801",
          "name": "EmiSwap - EmiDao Token",
          "symbol": "anyESW",
          "decimals": 18
        },
        "underlying": {
          "address": "0x5a75a093747b72a0e14056352751edf03518031d",
          "name": "EmiSwap-EmiDaoToken",
          "symbol": "ESW",
          "decimals": 18
        },
        "destChains": {
          "1313161554": {
            "address": "0xd2fa7c9386040f260e3ec934601982ad4cd7902b",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "0",
            "liquidityType": "INIT",
            "MaximumSwap": "613265170.95",
            "MinimumSwap": "1226.53",
            "BigValueThreshold": "122653034.19",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "122653.03",
            "MinimumSwapFee": "613.27",
            "anyToken": {
              "address": "0xd2fa7c9386040f260e3ec934601982ad4cd7902b",
              "name": "EmiDAO Token",
              "symbol": "ESW",
              "decimals": 18
            }
          }
        },
        "price": 0.00134027,
        "logoUrl": "https://assets.coingecko.com/coins/images/17526/large/Emiswap_Logo_light_colour_horizontal.png",
        "chainId": "1",
        "tokenid": "anyESW",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x3708dea52a5846fd16d0060aab01c87bb5932b02": {
        "address": "0x3708dea52a5846fd16d0060aab01c87bb5932b02",
        "anyToken": {
          "address": "0xbaa75208d0ec8dde89c036dd71e897c8df903f11",
          "name": "ATEM",
          "symbol": "anyATEM",
          "decimals": 18
        },
        "underlying": {
          "address": "0x3708dea52a5846fd16d0060aab01c87bb5932b02",
          "name": "ATEM",
          "symbol": "ATEM",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x3708dea52a5846fd16d0060aab01c87bb5932b02",
            "underlying": {
              "address": "0x3708dea52a5846fd16d0060aab01c87bb5932b02",
              "name": "ATEM",
              "symbol": "ATEM",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "1000000",
            "MinimumSwap": "2",
            "BigValueThreshold": "200000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "200",
            "MinimumSwapFee": "1",
            "anyToken": {
              "address": "0x977b4fec686ad3d37dfc7c54336a26113d4c1393",
              "name": "ATEM",
              "symbol": "anyATEM",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://vwp923728.kagoyacloud.com/wp-content/uploads/2022/02/atem.png",
        "chainId": "1",
        "tokenid": "anyATEM",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xcd2828fc4d8e8a0ede91bb38cf64b1a81de65bf6": {
        "address": "0xcd2828fc4d8e8a0ede91bb38cf64b1a81de65bf6",
        "anyToken": {
          "address": "0xa097c96acc9587d140ad8aeaac13d9db2c6cc07f",
          "name": "OddzToken",
          "symbol": "anyODDZ",
          "decimals": 18
        },
        "underlying": {
          "address": "0xcd2828fc4d8e8a0ede91bb38cf64b1a81de65bf6",
          "name": "OddzToken",
          "symbol": "ODDZ",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xcd40f2670cf58720b694968698a5514e924f742d",
            "underlying": {
              "address": "0xcd40f2670cf58720b694968698a5514e924f742d",
              "name": "OddzToken",
              "symbol": "ODDZ",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "40586721.65",
            "MinimumSwap": "81.17",
            "BigValueThreshold": "8117344.33",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "8117.34",
            "MinimumSwapFee": "40.59",
            "anyToken": {
              "address": "0x4ea6f39c719d3a77ce2e5b913312cf2999e6d19d",
              "name": "OddzToken",
              "symbol": "anyODDZ",
              "decimals": 18
            }
          }
        },
        "price": 0.01326685,
        "logoUrl": "https://assets.coingecko.com/coins/images/14421/large/NewLogo.png",
        "chainId": "1",
        "tokenid": "anyODDZ",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xff56cc6b1e6ded347aa0b7676c85ab0b3d08b0fa": {
        "address": "0xff56cc6b1e6ded347aa0b7676c85ab0b3d08b0fa",
        "anyToken": {
          "address": "0x944a05c5acc46c9777aca7d8dd92b048b1b6d3e0",
          "name": "Orbs",
          "symbol": "anyORBS",
          "decimals": 18
        },
        "underlying": {
          "address": "0xff56cc6b1e6ded347aa0b7676c85ab0b3d08b0fa",
          "name": "Orbs",
          "symbol": "ORBS",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xebd49b26169e1b52c04cfd19fcf289405df55f80",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "70621468.93",
            "MinimumSwap": "141.24",
            "BigValueThreshold": "14124293.78",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "14124.29",
            "MinimumSwapFee": "70.62",
            "anyToken": {
              "address": "0xebd49b26169e1b52c04cfd19fcf289405df55f80",
              "name": "Orbs",
              "symbol": "ORBS",
              "decimals": 18
            }
          }
        },
        "price": 0.02555958,
        "logoUrl": "https://assets.coingecko.com/coins/images/4630/small/Orbs.jpg",
        "chainId": "1",
        "tokenid": "anyORBS",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x5c2fce5a43a56fc158a5a86cac4fcc4fbdc577f4": {
        "address": "0x5c2fce5a43a56fc158a5a86cac4fcc4fbdc577f4",
        "anyToken": {
          "address": "0x0802d66f029c46e042b74d543fc43b6705ccb4ba",
          "name": "MemeForce",
          "symbol": "any$MF",
          "decimals": 18
        },
        "underlying": {
          "address": "0x5c2fce5a43a56fc158a5a86cac4fcc4fbdc577f4",
          "name": "MemeForce",
          "symbol": "$MF",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xa97b64afbb6d6811696caafd323ffc9ea983a7bb",
            "underlying": {
              "address": "0xa97b64afbb6d6811696caafd323ffc9ea983a7bb",
              "name": "MemeForce",
              "symbol": "$MF",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "9554748710108.92",
            "MinimumSwap": "19109497.42",
            "BigValueThreshold": "1910949742021.78",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1910949742.02",
            "MinimumSwapFee": "9554748.71",
            "anyToken": {
              "address": "0xc05b9aba543dc4f1c19cdd73753d77f8cc75097d",
              "name": "MemeForce",
              "symbol": "any$MF",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://cdn.sanity.io/images/gz1p1grm/production/40d8f8066a137a2533793ab1abb6452ca25d48cb-192x192.png",
        "chainId": "1",
        "tokenid": "anyMF",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x993864e43caa7f7f12953ad6feb1d1ca635b875f": {
        "address": "0x993864e43caa7f7f12953ad6feb1d1ca635b875f",
        "anyToken": {
          "address": "0xde58658a05a8ce87bb8ab96a05a4c4544938e28f",
          "name": "Singularity Dao",
          "symbol": "anySDAO",
          "decimals": 18
        },
        "underlying": {
          "address": "0x993864e43caa7f7f12953ad6feb1d1ca635b875f",
          "name": "Singularity Dao",
          "symbol": "SDAO",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x90ed8f1dc86388f14b64ba8fb4bbd23099f18240",
            "underlying": {
              "address": "0x90ed8f1dc86388f14b64ba8fb4bbd23099f18240",
              "name": "Singularity Dao",
              "symbol": "SDAO",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "6944444.44",
            "MinimumSwap": "13.89",
            "BigValueThreshold": "1388888.89",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1388.89",
            "MinimumSwapFee": "6.94",
            "anyToken": {
              "address": "0xd41ed5867f6b82ca64d8cb3eeba9315891c0b7c9",
              "name": "Singularity Dao",
              "symbol": "anySDAO",
              "decimals": 18
            }
          }
        },
        "price": 0.347458,
        "logoUrl": "https://singularitydao.ai/image/token/SDAO.svg",
        "chainId": "1",
        "tokenid": "anySDAO",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x0ada190c81b814548ddc2f6adc4a689ce7c1fe73": {
        "address": "0x0ada190c81b814548ddc2f6adc4a689ce7c1fe73",
        "anyToken": {
          "address": "0x64ee4f41a15d6c431ab6607d4e95462169d50f6c",
          "name": "yAxis V2",
          "symbol": "anyYAXIS",
          "decimals": 18
        },
        "underlying": {
          "address": "0x0ada190c81b814548ddc2f6adc4a689ce7c1fe73",
          "name": "yAxis V2",
          "symbol": "YAXIS",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.6557,
        "logoUrl": "https://assets.coingecko.com/coins/images/12620/large/Logo.png",
        "chainId": "1",
        "tokenid": "anyYAXIS",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x90b831fa3bebf58e9744a14d638e25b4ee06f9bc": {
        "address": "0x90b831fa3bebf58e9744a14d638e25b4ee06f9bc",
        "anyToken": {
          "address": "0xe238ce130e8d0bed5fab0bb52fed6396f1aaa192",
          "name": "MIMO Parallel Governance Token",
          "symbol": "anyMIMO",
          "decimals": 18
        },
        "underlying": {
          "address": "0x90b831fa3bebf58e9744a14d638e25b4ee06f9bc",
          "name": "MIMO Parallel Governance Token",
          "symbol": "MIMO",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.02523025,
        "logoUrl": "https://assets.coingecko.com/coins/images/16449/large/mimodefi.PNG",
        "chainId": "1",
        "tokenid": "anyMIMO",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x6468e79a80c0eab0f9a2b574c8d5bc374af59414": {
        "address": "0x6468e79a80c0eab0f9a2b574c8d5bc374af59414",
        "anyToken": {
          "address": "0x4e1581f01046efdd7a1a2cdb0f82cdd7f71f2e59",
          "name": "E-RADIX",
          "symbol": "anyEXRD",
          "decimals": 18
        },
        "underlying": {
          "address": "0x6468e79a80c0eab0f9a2b574c8d5bc374af59414",
          "name": "E-RADIX",
          "symbol": "EXRD",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.073681,
        "logoUrl": "https://assets.coingecko.com/coins/images/13145/large/exrd_logo.png",
        "chainId": "1",
        "tokenid": "anyeXRD",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xe8521b61f64fc45a0bc3db36d2a524fe61a69b52": {
        "address": "0xe8521b61f64fc45a0bc3db36d2a524fe61a69b52",
        "anyToken": {
          "address": "0xb808d767ddf0f61ca62331c1bbbebe0530b41079",
          "name": "Duet Governance Token",
          "symbol": "anyDUET",
          "decimals": 18
        },
        "underlying": {
          "address": "0xe8521b61f64fc45a0bc3db36d2a524fe61a69b52",
          "name": "Duet Governance Token",
          "symbol": "DUET",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x95ee03e1e2c5c4877f9a298f1c0d6c98698fab7b",
            "underlying": {
              "address": "0x95ee03e1e2c5c4877f9a298f1c0d6c98698fab7b",
              "name": "Duet Governance Token",
              "symbol": "DUET",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "15250411.76",
            "MinimumSwap": "30.5",
            "BigValueThreshold": "3050082.35",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "3050.08",
            "MinimumSwapFee": "15.25",
            "anyToken": {
              "address": "0x1f9ce5ac8befa74bfa614ae22ffc0fdd1e06827e",
              "name": "Duet Governance Token",
              "symbol": "anyDUET",
              "decimals": 18
            }
          }
        },
        "price": 0.00125259,
        "logoUrl": "https://assets.coingecko.com/coins/images/16164/large/Duet.jpg",
        "chainId": "1",
        "tokenid": "anyDUET",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xfb7b4564402e5500db5bb6d63ae671302777c75a": {
        "address": "0xfb7b4564402e5500db5bb6d63ae671302777c75a",
        "anyToken": {
          "address": "0x47736ccbab8117d09540e4e56db4089a328ff7a1",
          "name": "DEXTools",
          "symbol": "anyDEXT",
          "decimals": 18
        },
        "underlying": {
          "address": "0xfb7b4564402e5500db5bb6d63ae671302777c75a",
          "name": "DEXTools",
          "symbol": "DEXT",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xe91a8d2c584ca93c7405f15c22cdfe53c29896e3",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "21998424.91",
            "MinimumSwap": "44",
            "BigValueThreshold": "4399684.98",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "4399.68",
            "MinimumSwapFee": "22",
            "anyToken": {
              "address": "0xe91a8d2c584ca93c7405f15c22cdfe53c29896e3",
              "name": "DEXTools",
              "symbol": "DEXT",
              "decimals": 18
            }
          }
        },
        "price": 0.547088,
        "logoUrl": "https://assets.coingecko.com/coins/images/11603/large/dext.png",
        "chainId": "1",
        "tokenid": "anyDEXT",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x4d224452801aced8b2f0aebe155379bb5d594381": {
        "address": "0x4d224452801aced8b2f0aebe155379bb5d594381",
        "anyToken": {
          "address": "0xc167f62e93775acadeb3d2b0940bce560171fdf3",
          "name": "ApeCoin",
          "symbol": "anyAPE",
          "decimals": 18
        },
        "underlying": {
          "address": "0x4d224452801aced8b2f0aebe155379bb5d594381",
          "name": "ApeCoin",
          "symbol": "APE",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x0b079b33b6e72311c6be245f9f660cc385029fc3",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "360000",
            "MinimumSwap": "0.72",
            "BigValueThreshold": "71000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "0.36",
            "MinimumSwapFee": "0.36",
            "anyToken": {
              "address": "0x0b079b33b6e72311c6be245f9f660cc385029fc3",
              "name": "ApeCoin",
              "symbol": "APE",
              "decimals": 18
            }
          },
          "1313161554": {
            "address": "0xd7c295e399ca928a3a14b01d760e794f1adf8990",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "375375.38",
            "MinimumSwap": "0.75",
            "BigValueThreshold": "75075.08",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "75.07",
            "MinimumSwapFee": "0.38",
            "anyToken": {
              "address": "0xd7c295e399ca928a3a14b01d760e794f1adf8990",
              "name": "ApeCoin",
              "symbol": "APE",
              "decimals": 18
            }
          }
        },
        "price": 3.48,
        "logoUrl": "https://assets.coingecko.com/coins/images/24383/large/apecoin.jpg",
        "chainId": "1",
        "tokenid": "anyAPE",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x16b3e050e9e2f0ac4f1bea1b3e4fdc43d7f062dd": {
        "address": "0x16b3e050e9e2f0ac4f1bea1b3e4fdc43d7f062dd",
        "anyToken": {
          "address": "0xf887906e130349a624ffa3cf1fa5b56f48b11c08",
          "name": "SOMBRA",
          "symbol": "anySMBR",
          "decimals": 9
        },
        "underlying": {
          "address": "0x16b3e050e9e2f0ac4f1bea1b3e4fdc43d7f062dd",
          "name": "SOMBRA",
          "symbol": "SMBR",
          "decimals": 9
        },
        "destChains": {
          "56": {
            "address": "0x8ad8e9b85787ddd0d31b32ecf655e93bfc0747ef",
            "underlying": {
              "address": "0x8ad8e9b85787ddd0d31b32ecf655e93bfc0747ef",
              "name": "SOMBRA",
              "symbol": "SMBR",
              "decimals": 9
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "60000000",
            "MinimumSwap": "120",
            "BigValueThreshold": "12000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "12000",
            "MinimumSwapFee": "60",
            "anyToken": {
              "address": "0x8c4e06c8d4297448e768f91947e0643b31db08d3",
              "name": "SOMBRA",
              "symbol": "anySMBR",
              "decimals": 9
            }
          }
        },
        "price": 0.02451833,
        "logoUrl": "https://assets.coingecko.com/coins/images/17884/large/sombra-200.png",
        "chainId": "1",
        "tokenid": "anySMBR",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x874464211649eb0c504903195902415fb6986aad": {
        "address": "0x874464211649eb0c504903195902415fb6986aad",
        "anyToken": {
          "address": "0x48844ddba89799dc40ec31728dac629802d407f3",
          "name": "Green Token",
          "symbol": "anyGREEN",
          "decimals": 18
        },
        "underlying": {
          "address": "0x874464211649eb0c504903195902415fb6986aad",
          "name": "Green Token",
          "symbol": "GREEN",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xeb29f65c4daeea6462a2f280e3bf418ec8b3da9b",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "500000000",
            "MinimumSwap": "1000",
            "BigValueThreshold": "100000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "100000",
            "MinimumSwapFee": "500",
            "anyToken": {
              "address": "0xeb29f65c4daeea6462a2f280e3bf418ec8b3da9b",
              "name": "Green Token",
              "symbol": "GREEN",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://images.squarespace-cdn.com/content/v1/6089fde8184c71168ac9e1fc/1619677040558-VD58M0KI28V21FIG545E/Header+Logo.png",
        "chainId": "1",
        "tokenid": "anyGREEN",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x2b95a1dcc3d405535f9ed33c219ab38e8d7e0884": {
        "address": "0x2b95a1dcc3d405535f9ed33c219ab38e8d7e0884",
        "anyToken": {
          "address": "0x85009bca4cd4c8f554c3c9a1c2f778ec3ce7feb1",
          "name": "Aladdin cvxCRV",
          "symbol": "anyaCRV",
          "decimals": 18
        },
        "underlying": {
          "address": "0x2b95a1dcc3d405535f9ed33c219ab38e8d7e0884",
          "name": "Aladdin cvxCRV",
          "symbol": "aCRV",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.660391,
        "logoUrl": "https://concentrator.aladdin.club/logo.svg",
        "chainId": "1",
        "tokenid": "anyaCRV",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x92cfbec26c206c90aee3b7c66a9ae673754fab7e": {
        "address": "0x92cfbec26c206c90aee3b7c66a9ae673754fab7e",
        "anyToken": {
          "address": "0xd6040966181c9d1b28158335780dc42514b119e7",
          "name": "OpenLeverage",
          "symbol": "anyOLE",
          "decimals": 18
        },
        "underlying": {
          "address": "0x92cfbec26c206c90aee3b7c66a9ae673754fab7e",
          "name": "OpenLeverage",
          "symbol": "OLE",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xa865197a84e780957422237b5d152772654341f3",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "37037037.037037",
            "MinimumSwap": "74.074074",
            "BigValueThreshold": "7407407.407407",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "7407.407407",
            "MinimumSwapFee": "37.037037",
            "anyToken": {
              "address": "0xa865197a84e780957422237b5d152772654341f3",
              "name": "OpenLeverage",
              "symbol": "OLE",
              "decimals": 18
            }
          }
        },
        "price": 0.01621351,
        "logoUrl": "https://openleverage.finance/brandassets/logo256x256.png",
        "chainId": "1",
        "tokenid": "anyOLE",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x73b708e84837ffccde2933e3a1531fe61d5e80ef": {
        "address": "0x73b708e84837ffccde2933e3a1531fe61d5e80ef",
        "anyToken": {
          "address": "0xf331b2c406fef2539e9b1150345575feb9f0323c",
          "name": "Betero",
          "symbol": "anyBTE",
          "decimals": 18
        },
        "underlying": {
          "address": "0x73b708e84837ffccde2933e3a1531fe61d5e80ef",
          "name": "Betero",
          "symbol": "BTE",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x7faaf8d4c411218415d9d3f82d56214658349dbb",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "466281990.77",
            "MinimumSwap": "932.563",
            "BigValueThreshold": "93256398.15",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "93256.4",
            "MinimumSwapFee": "466.281",
            "anyToken": {
              "address": "0x7faaf8d4c411218415d9d3f82d56214658349dbb",
              "name": "Betero",
              "symbol": "BTE",
              "decimals": 18
            }
          }
        },
        "price": 0.00578775,
        "logoUrl": "https://www.betero.io/B_green.svg",
        "chainId": "1",
        "tokenid": "anyBTE",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xfeea0bdd3d07eb6fe305938878c0cadbfa169042": {
        "address": "0xfeea0bdd3d07eb6fe305938878c0cadbfa169042",
        "anyToken": {
          "address": "0x77c62e549ca46ef8dd5edc052b1edc783f60a400",
          "name": "8PAY Network",
          "symbol": "any8PAY",
          "decimals": 18
        },
        "underlying": {
          "address": "0xfeea0bdd3d07eb6fe305938878c0cadbfa169042",
          "name": "8PAY Network",
          "symbol": "8PAY",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xfeea0bdd3d07eb6fe305938878c0cadbfa169042",
            "underlying": {
              "address": "0xfeea0bdd3d07eb6fe305938878c0cadbfa169042",
              "name": "8PAY Network",
              "symbol": "8PAY",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "183901011.23",
            "MinimumSwap": "367.8",
            "BigValueThreshold": "36780202.25",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "36780.2",
            "MinimumSwapFee": "183.9",
            "anyToken": {
              "address": "0xd6e6513f1c449fbaf3b527456a3f7ecc729b63cd",
              "name": "8PAY Network",
              "symbol": "any8PAY",
              "decimals": 18
            }
          }
        },
        "price": 0.01289602,
        "logoUrl": "https://assets.coingecko.com/coins/images/14667/large/8pay.jpeg",
        "chainId": "1",
        "tokenid": "any8PAY",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x4374f26f0148a6331905edf4cd33b89d8eed78d1": {
        "address": "0x4374f26f0148a6331905edf4cd33b89d8eed78d1",
        "anyToken": {
          "address": "0xf75565b89ba076b8fc7b9708d14855fd3da89e97",
          "name": "Yoshi.exchange",
          "symbol": "anyYOSHI",
          "decimals": 18
        },
        "underlying": {
          "address": "0x4374f26f0148a6331905edf4cd33b89d8eed78d1",
          "name": "Yoshi.exchange",
          "symbol": "YOSHI",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x4374f26f0148a6331905edf4cd33b89d8eed78d1",
            "underlying": {
              "address": "0x4374f26f0148a6331905edf4cd33b89d8eed78d1",
              "name": "Yoshi.exchange",
              "symbol": "YOSHI",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "4700000",
            "MinimumSwap": "9.4",
            "BigValueThreshold": "930000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "926",
            "MinimumSwapFee": "4.7",
            "anyToken": {
              "address": "0x6c01361d8dbaf43b81b52da3efae7dab1b8fffe9",
              "name": "Yoshi.exchange",
              "symbol": "anyYOSHI",
              "decimals": 18
            }
          }
        },
        "price": 0.080424,
        "logoUrl": "https://assets.coingecko.com/coins/images/19355/small/YOSHI_200.png",
        "chainId": "1",
        "tokenid": "anyYOSHI",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x7a5d3a9dcd33cb8d527f7b5f96eb4fef43d55636": {
        "address": "0x7a5d3a9dcd33cb8d527f7b5f96eb4fef43d55636",
        "anyToken": {
          "address": "0x05f2972cd67705e7f2dcbffd0daa3f939b61020b",
          "name": "RadioShack Token",
          "symbol": "anyRADIO",
          "decimals": 18
        },
        "underlying": {
          "address": "0x7a5d3a9dcd33cb8d527f7b5f96eb4fef43d55636",
          "name": "RadioShack Token",
          "symbol": "RADIO",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x30807d3b851a31d62415b8bb7af7dca59390434a",
            "underlying": {
              "address": "0x30807d3b851a31d62415b8bb7af7dca59390434a",
              "name": "RadioShack Token",
              "symbol": "RADIO",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "166666666.67",
            "MinimumSwap": "333.33",
            "BigValueThreshold": "33333333.33",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "33333.33",
            "MinimumSwapFee": "166.67",
            "anyToken": {
              "address": "0xb139ed4143bceb793346020453ab1f9d886bd294",
              "name": "RadioShack Token",
              "symbol": "anyRADIO",
              "decimals": 18
            }
          }
        },
        "price": 0.00057218,
        "logoUrl": "https://i.ibb.co/Mhf5JL7/android-chrome-256x256.png",
        "chainId": "1",
        "tokenid": "anyRADIO",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x397e10ee5e315f69b23cb6c8a913a589b5850c80": {
        "address": "0x397e10ee5e315f69b23cb6c8a913a589b5850c80",
        "anyToken": {
          "address": "0x527c571300be23e6f157290dedf9ac22f7435801",
          "name": "YUGEN",
          "symbol": "anyYGN",
          "decimals": 18
        },
        "underlying": {
          "address": "0x397e10ee5e315f69b23cb6c8a913a589b5850c80",
          "name": "YUGEN",
          "symbol": "YGN",
          "decimals": 18
        },
        "destChains": {},
        "logoUrl": "https://s3.us-east-2.amazonaws.com/www.yugen.finance/assets/ygn.webp",
        "chainId": "1",
        "tokenid": "anyYGN",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x7fc3ec3574d408f3b59cd88709bacb42575ebf2b": {
        "address": "0x7fc3ec3574d408f3b59cd88709bacb42575ebf2b",
        "anyToken": {
          "address": "0x3e01b7e242d5af8064cb9a8f9468ac0f8683617c",
          "name": "POP!",
          "symbol": "anyPOP!",
          "decimals": 18
        },
        "underlying": {
          "address": "0x7fc3ec3574d408f3b59cd88709bacb42575ebf2b",
          "name": "POP!",
          "symbol": "POP!",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00174782,
        "logoUrl": "https://assets.coingecko.com/coins/images/14598/large/pop.png",
        "chainId": "1",
        "tokenid": "anyPOP",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x4f640f2529ee0cf119a2881485845fa8e61a782a": {
        "address": "0x4f640f2529ee0cf119a2881485845fa8e61a782a",
        "anyToken": {
          "address": "0xef5ce7411b389e004a73b37acfc51a8218322a6c",
          "name": "pTokens ORE",
          "symbol": "anyORE",
          "decimals": 18
        },
        "underlying": {
          "address": "0x4f640f2529ee0cf119a2881485845fa8e61a782a",
          "name": "pTokens ORE",
          "symbol": "ORE",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x4ef285c8cbe52267c022c39da98b97ca4b7e2ff9",
            "underlying": {
              "address": "0x4ef285c8cbe52267c022c39da98b97ca4b7e2ff9",
              "name": "pTokens ORE [via ChainPort.io]",
              "symbol": "ORE",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "127888031.47",
            "MinimumSwap": "255.776",
            "BigValueThreshold": "25577606.29",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "25577.61",
            "MinimumSwapFee": "127.888",
            "anyToken": {
              "address": "0xe44108ca708a5016131f5fe82581e789cb4eaf96",
              "name": "pTokens ORE [via ChainPort.io]",
              "symbol": "anyORE",
              "decimals": 18
            }
          }
        },
        "price": 0.00350657,
        "logoUrl": "https://assets.coingecko.com/coins/images/18917/large/ORE_FullColor.png",
        "chainId": "1",
        "tokenid": "anyORE",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x3ebb4a4e91ad83be51f8d596533818b246f4bee1": {
        "address": "0x3ebb4a4e91ad83be51f8d596533818b246f4bee1",
        "anyToken": {
          "address": "0xbbb63f49fe75cd82513c4a3da2ec80dd36a8448f",
          "name": "Signata",
          "symbol": "anySATA",
          "decimals": 18
        },
        "underlying": {
          "address": "0x3ebb4a4e91ad83be51f8d596533818b246f4bee1",
          "name": "Signata",
          "symbol": "SATA",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x6b1c8765c7eff0b60706b0ae489eb9bb9667465a",
            "underlying": {
              "address": "0x6b1c8765c7eff0b60706b0ae489eb9bb9667465a",
              "name": "Signata",
              "symbol": "SATA",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "24648269.2",
            "MinimumSwap": "49.296",
            "BigValueThreshold": "4929653.84",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "4929.65",
            "MinimumSwapFee": "24.648",
            "anyToken": {
              "address": "0x1a8d54beed300e99e41dfc806d522eba5aefa034",
              "name": "Signata",
              "symbol": "anySATA",
              "decimals": 18
            }
          }
        },
        "price": 0.010985,
        "logoUrl": "https://assets.coingecko.com/coins/images/14704/large/logo.png",
        "chainId": "1",
        "tokenid": "anySATA",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x44709a920fccf795fbc57baa433cc3dd53c44dbe": {
        "address": "0x44709a920fccf795fbc57baa433cc3dd53c44dbe",
        "anyToken": {
          "address": "0x49a0400587a7f65072c87c4910449fdcc5c47242",
          "name": "DappRadar",
          "symbol": "anyRADAR",
          "decimals": 18
        },
        "underlying": {
          "address": "0x44709a920fccf795fbc57baa433cc3dd53c44dbe",
          "name": "DappRadar",
          "symbol": "RADAR",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x489580eb70a50515296ef31e8179ff3e77e24965",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "321320044.5",
            "MinimumSwap": "642.64",
            "BigValueThreshold": "64264008.9",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "64264.01",
            "MinimumSwapFee": "321.32",
            "anyToken": {
              "address": "0x489580eb70a50515296ef31e8179ff3e77e24965",
              "name": "DappRadar",
              "symbol": "RADAR",
              "decimals": 18
            }
          }
        },
        "price": 0.00652525,
        "logoUrl": "https://assets.coingecko.com/coins/images/20894/large/radar.png",
        "chainId": "1",
        "tokenid": "anyRADAR",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2": {
        "address": "0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2",
        "anyToken": {
          "address": "0x11eb3aa66fe1f2b75cb353d3e874e96968182bda",
          "name": "Maker",
          "symbol": "anyMKR",
          "decimals": 18
        },
        "underlying": {
          "address": "0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2",
          "name": "Maker",
          "symbol": "MKR",
          "decimals": 18
        },
        "destChains": {},
        "price": 623.04,
        "logoUrl": "https://assets.coingecko.com/coins/images/1364/large/Mark_Maker.png",
        "chainId": "1",
        "tokenid": "anyMKRe",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x3e5d9d8a63cc8a88748f229999cf59487e90721e": {
        "address": "0x3e5d9d8a63cc8a88748f229999cf59487e90721e",
        "anyToken": {
          "address": "0x9833c643f387ecfb76aa8114546ad524703c66fb",
          "name": "MetalSwap",
          "symbol": "anyXMT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x3e5d9d8a63cc8a88748f229999cf59487e90721e",
          "name": "MetalSwap",
          "symbol": "XMT",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x582c12b30f85162fa393e5dbe2573f9f601f9d91",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "21654020.72",
            "MinimumSwap": "43.308",
            "BigValueThreshold": "4330804.14",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "4330.8",
            "MinimumSwapFee": "21.654",
            "anyToken": {
              "address": "0x582c12b30f85162fa393e5dbe2573f9f601f9d91",
              "name": "MetalSwap",
              "symbol": "XMT",
              "decimals": 18
            }
          }
        },
        "price": 0.01897179,
        "logoUrl": "https://i.ibb.co/jgjYJ1s/Logo-Metal-Swap-2.png",
        "chainId": "1",
        "tokenid": "anyXMT",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xa1faa113cbe53436df28ff0aee54275c13b40975": {
        "address": "0xa1faa113cbe53436df28ff0aee54275c13b40975",
        "anyToken": {
          "address": "0xb1d6bc439f5d3bfbd828da3d0848b0f3658c9dc6",
          "name": "AlphaToken",
          "symbol": "anyALPHA",
          "decimals": 18
        },
        "underlying": {
          "address": "0xa1faa113cbe53436df28ff0aee54275c13b40975",
          "name": "AlphaToken",
          "symbol": "ALPHA",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xa1faa113cbe53436df28ff0aee54275c13b40975",
            "underlying": {
              "address": "0xa1faa113cbe53436df28ff0aee54275c13b40975",
              "name": "AlphaToken",
              "symbol": "ALPHA",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "19531250",
            "MinimumSwap": "39.06",
            "BigValueThreshold": "3906250",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "3906.25",
            "MinimumSwapFee": "19.53",
            "anyToken": {
              "address": "0x64b84d2eab43109220c84e0b163fb073fe125223",
              "name": "AlphaToken",
              "symbol": "anyALPHA",
              "decimals": 18
            }
          }
        },
        "price": 0.113617,
        "logoUrl": "https://assets.coingecko.com/coins/images/12738/large/AlphaToken_256x256.png",
        "chainId": "1",
        "tokenid": "anyALPHA",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x92b914f1ddcbb1d117a718e83c9ed7eb32fc44d1": {
        "address": "0x92b914f1ddcbb1d117a718e83c9ed7eb32fc44d1",
        "anyToken": {
          "address": "0x6e264d4f2f7810cb82b9b73d6310e73c88be0bff",
          "name": "EnkronosToken",
          "symbol": "anyENK",
          "decimals": 18
        },
        "underlying": {
          "address": "0x92b914f1ddcbb1d117a718e83c9ed7eb32fc44d1",
          "name": "EnkronosToken",
          "symbol": "ENK",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x72ee88374d8087eeb069510a79c7220d90dc4779",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "520833.33",
            "MinimumSwap": "1.041",
            "BigValueThreshold": "104166.67",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "104.17",
            "MinimumSwapFee": "0.52",
            "anyToken": {
              "address": "0x72ee88374d8087eeb069510a79c7220d90dc4779",
              "name": "EnkronosToken",
              "symbol": "ENK",
              "decimals": 18
            }
          }
        },
        "price": 0.00004219,
        "chainId": "1",
        "tokenid": "anyENK",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xfd30c9bea1a952feeed2ef2c6b2ff8a8fc4aad07": {
        "address": "0xfd30c9bea1a952feeed2ef2c6b2ff8a8fc4aad07",
        "anyToken": {
          "address": "0x34324e1598bf02ccd3dea93f4e332b5507097473",
          "name": "Polkally",
          "symbol": "anyKALLY",
          "decimals": 18
        },
        "underlying": {
          "address": "0xfd30c9bea1a952feeed2ef2c6b2ff8a8fc4aad07",
          "name": "Polkally",
          "symbol": "KALLY",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x3831dfef762f4f64261f2d875c710f90038578e4",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "221543216.88",
            "MinimumSwap": "443.086",
            "BigValueThreshold": "44308643.38",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "44308.64",
            "MinimumSwapFee": "221.543",
            "anyToken": {
              "address": "0x3831dfef762f4f64261f2d875c710f90038578e4",
              "name": "Polkally",
              "symbol": "KALLY",
              "decimals": 18
            }
          }
        },
        "price": 0.00248415,
        "logoUrl": "https://assets.coingecko.com/coins/images/15812/large/polkally.PNG",
        "chainId": "1",
        "tokenid": "anyKALLY",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xbc6da0fe9ad5f3b0d58160288917aa56653660e9": {
        "address": "0xbc6da0fe9ad5f3b0d58160288917aa56653660e9",
        "anyToken": {
          "address": "0xf49818b5d7de5b0dbfccb3ddcd14e1f0aa1a6f01",
          "name": "Alchemix USD",
          "symbol": "anyalUSD",
          "decimals": 18
        },
        "underlying": {
          "address": "0xbc6da0fe9ad5f3b0d58160288917aa56653660e9",
          "name": "Alchemix USD",
          "symbol": "alUSD",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.99928,
        "logoUrl": "https://assets.coingecko.com/coins/images/14114/large/Alchemix_USD.png",
        "chainId": "1",
        "tokenid": "anyalUSD",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x4b1e80cac91e2216eeb63e29b957eb91ae9c2be8": {
        "address": "0x4b1e80cac91e2216eeb63e29b957eb91ae9c2be8",
        "anyToken": {
          "address": "0xa1ae26219565370fcfea073249309d117d805c39",
          "name": "Jupiter",
          "symbol": "anyJUP",
          "decimals": 18
        },
        "underlying": {
          "address": "0x4b1e80cac91e2216eeb63e29b957eb91ae9c2be8",
          "name": "Jupiter",
          "symbol": "JUP",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x0231f91e02debd20345ae8ab7d71a41f8e140ce7",
            "underlying": {
              "address": "0x0231f91e02debd20345ae8ab7d71a41f8e140ce7",
              "name": "BSC Wrapped Jupiter",
              "symbol": "bwJUP",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "323812175.98",
            "MinimumSwap": "647.624",
            "BigValueThreshold": "64762435.2",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "64762.43",
            "MinimumSwapFee": "323.812",
            "anyToken": {
              "address": "0xd31228d81b2b295e18ea1ad4cd4e25da0afe1e4c",
              "name": "BSC Wrapped Jupiter",
              "symbol": "anybwJUP",
              "decimals": 18
            }
          }
        },
        "price": 0.00741294,
        "logoUrl": "https://assets.coingecko.com/coins/images/10351/large/logo512.png",
        "chainId": "1",
        "tokenid": "anyJUP",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xf0d33beda4d734c72684b5f9abbebf715d0a7935": {
        "address": "0xf0d33beda4d734c72684b5f9abbebf715d0a7935",
        "anyToken": {
          "address": "0x7761a5e95c96ff0d68daf5ef2f94741229b36b50",
          "name": "NuNet Utility Token",
          "symbol": "anyNTX",
          "decimals": 6
        },
        "underlying": {
          "address": "0xf0d33beda4d734c72684b5f9abbebf715d0a7935",
          "name": "NuNet Utility Token",
          "symbol": "NTX",
          "decimals": 6
        },
        "destChains": {
          "56": {
            "address": "0x5c4bcc4dbaeabc7659f6435bce4e659314ebad87",
            "underlying": {
              "address": "0x5c4bcc4dbaeabc7659f6435bce4e659314ebad87",
              "name": "NuNet Utility Token",
              "symbol": "NTX",
              "decimals": 6
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "61050061.050061",
            "MinimumSwap": "122.100122",
            "BigValueThreshold": "12210012.210012",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "12210.01221",
            "MinimumSwapFee": "61.050061",
            "anyToken": {
              "address": "0x0aa473bdf86233b7f9224ffaead25b1ed182279c",
              "name": "NuNet Utility Token",
              "symbol": "anyNTX",
              "decimals": 6
            }
          }
        },
        "price": 0.04231665,
        "logoUrl": "https://s2.coinmarketcap.com/static/img/coins/200x200/13198.png",
        "chainId": "1",
        "tokenid": "anyNTX",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x6cd13e1856286de773a435c8ba93a7c73a04f82d": {
        "address": "0x6cd13e1856286de773a435c8ba93a7c73a04f82d",
        "anyToken": {
          "address": "0x76fba02e148cab052f86dc1d8f4b10e64efc7046",
          "name": "MIDA Token",
          "symbol": "anyMIDA",
          "decimals": 18
        },
        "underlying": {
          "address": "0x6cd13e1856286de773a435c8ba93a7c73a04f82d",
          "name": "MIDA Token",
          "symbol": "MIDA",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x1104918312cc9ad88eadabe07b5110cae99583f6",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "50000000",
            "MinimumSwap": "100",
            "BigValueThreshold": "10000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "10000",
            "MinimumSwapFee": "50",
            "anyToken": {
              "address": "0x1104918312cc9ad88eadabe07b5110cae99583f6",
              "name": "MIDA Token",
              "symbol": "MIDA",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://mida-media-prod.s3.eu-central-1.amazonaws.com/MIDA_Logo_Transparent_128x128.png",
        "chainId": "1",
        "tokenid": "anyMIDA",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x1ccaa0f2a7210d76e1fdec740d5f323e2e1b1672": {
        "address": "0x1ccaa0f2a7210d76e1fdec740d5f323e2e1b1672",
        "anyToken": {
          "address": "0x2d72a97a31dc920db03330780d30074626e39c8a",
          "name": "Faceter Token",
          "symbol": "anyFACE",
          "decimals": 18
        },
        "underlying": {
          "address": "0x1ccaa0f2a7210d76e1fdec740d5f323e2e1b1672",
          "name": "Faceter Token",
          "symbol": "FACE",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x5ae9604fea71d4916ecedb3af1df8c4903a064b7",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "2423314221.46",
            "MinimumSwap": "4846.628",
            "BigValueThreshold": "484662844.29",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "484662.84",
            "MinimumSwapFee": "2423.314",
            "anyToken": {
              "address": "0x5ae9604fea71d4916ecedb3af1df8c4903a064b7",
              "name": "Faceter Token",
              "symbol": "FACE",
              "decimals": 18
            }
          }
        },
        "price": 0.00009928,
        "logoUrl": "https://assets.coingecko.com/coins/images/4383/large/faceter-logo.png",
        "chainId": "1",
        "tokenid": "anyFACE",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x97a3bd8a445cc187c6a751f392e15c3b2134d695": {
        "address": "0x97a3bd8a445cc187c6a751f392e15c3b2134d695",
        "anyToken": {
          "address": "0x884247ec9921195c1e722d5e8e812415bd8715d2",
          "name": "Blockster",
          "symbol": "anyBXR",
          "decimals": 18
        },
        "underlying": {
          "address": "0x97a3bd8a445cc187c6a751f392e15c3b2134d695",
          "name": "Blockster",
          "symbol": "BXR",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x09a15e2ecc0306046826d95696c183d533c228df",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "66854751.37",
            "MinimumSwap": "133.709",
            "BigValueThreshold": "13370950.27",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "13370.95",
            "MinimumSwapFee": "66.854",
            "anyToken": {
              "address": "0x09a15e2ecc0306046826d95696c183d533c228df",
              "name": "Blockster",
              "symbol": "BXR",
              "decimals": 18
            }
          }
        },
        "price": 0.00622939,
        "logoUrl": "https://assets.coingecko.com/coins/images/19857/large/bxr-left2.png",
        "chainId": "1",
        "tokenid": "anyBXR",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xe1c7e30c42c24582888c758984f6e382096786bd": {
        "address": "0xe1c7e30c42c24582888c758984f6e382096786bd",
        "anyToken": {
          "address": "0xdb12c7e30dc2a2c421724d07c7a09147bd9f61bb",
          "name": "Curate",
          "symbol": "anyXCUR",
          "decimals": 8
        },
        "underlying": {
          "address": "0xe1c7e30c42c24582888c758984f6e382096786bd",
          "name": "Curate",
          "symbol": "XCUR",
          "decimals": 8
        },
        "destChains": {
          "56": {
            "address": "0xd52669712f253cd6b2fe8a8638f66ed726cb770c",
            "underlying": {
              "address": "0xd52669712f253cd6b2fe8a8638f66ed726cb770c",
              "name": "Curate",
              "symbol": "XCUR",
              "decimals": 8
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "4098360.65",
            "MinimumSwap": "8.196",
            "BigValueThreshold": "819672.13",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "819.67",
            "MinimumSwapFee": "4.098",
            "anyToken": {
              "address": "0x250c30a63374a613ed14a0e4d7bd7d14abab8fbf",
              "name": "Curate",
              "symbol": "anyXCUR",
              "decimals": 8
            }
          }
        },
        "price": 0.02289074,
        "logoUrl": "https://assets.coingecko.com/coins/images/13327/large/400x400_%281%29_%283%29_%282%29.png",
        "chainId": "1",
        "tokenid": "anyXCUR",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xdf09a216fac5adc3e640db418c0b956076509503": {
        "address": "0xdf09a216fac5adc3e640db418c0b956076509503",
        "anyToken": {
          "address": "0x623332a33ae3a8fc9b121322c72550decc0ed81c",
          "name": "Poken",
          "symbol": "anyPKN",
          "decimals": 18
        },
        "underlying": {
          "address": "0xdf09a216fac5adc3e640db418c0b956076509503",
          "name": "Poken",
          "symbol": "PKN",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x4b5decb9327b4d511a58137a1ade61434aacdd43",
            "underlying": {
              "address": "0x4b5decb9327b4d511a58137a1ade61434aacdd43",
              "name": "Poken",
              "symbol": "PKN",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "189748063.9",
            "MinimumSwap": "379.496",
            "BigValueThreshold": "37949612.78",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "37949.61",
            "MinimumSwapFee": "189.748",
            "anyToken": {
              "address": "0x6362c3ac9713008b79deb0ee361f1f6f57037694",
              "name": "Poken",
              "symbol": "anyPKN",
              "decimals": 18
            }
          }
        },
        "price": 0.00121298,
        "logoUrl": "https://assets.coingecko.com/coins/images/21574/large/G10VNBAR_400x400.jpg",
        "chainId": "1",
        "tokenid": "anyPKN",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x06b884e60794ce02aafab13791b59a2e6a07442f": {
        "address": "0x06b884e60794ce02aafab13791b59a2e6a07442f",
        "anyToken": {
          "address": "0xa65225a7c67d7e44183dbcc04ebd434bc32f29b7",
          "name": "Unbanked",
          "symbol": "anyUNBNK",
          "decimals": 18
        },
        "underlying": {
          "address": "0x06b884e60794ce02aafab13791b59a2e6a07442f",
          "name": "Unbanked",
          "symbol": "UNBNK",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00189188,
        "logoUrl": "https://assets.coingecko.com/coins/images/20171/large/logo_-_2021-11-11T115427.135.png",
        "chainId": "1",
        "tokenid": "anyUNBNK",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x4057db5bd9f67a566aa10e5587b1a964affc6a16": {
        "address": "0x4057db5bd9f67a566aa10e5587b1a964affc6a16",
        "anyToken": {
          "address": "0xe5130d3dbfac6ae7d73a24d719762df74d8e4c27",
          "name": "Truefeedback",
          "symbol": "anyTFBX",
          "decimals": 18
        },
        "underlying": {
          "address": "0x4057db5bd9f67a566aa10e5587b1a964affc6a16",
          "name": "Truefeedback",
          "symbol": "TFBX",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x1354e1c028ad93ed9992ee3bfd3ee5608489439c",
            "underlying": {
              "address": "0x1354e1c028ad93ed9992ee3bfd3ee5608489439c",
              "name": "Truefeedback Token",
              "symbol": "TFBX",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "2507962781.83",
            "MinimumSwap": "5015.925",
            "BigValueThreshold": "501592556.37",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "501592.56",
            "MinimumSwapFee": "2507.962",
            "anyToken": {
              "address": "0x8c1d1ae5d02629e6b8bf4da1b8ced34346cb8a9f",
              "name": "Truefeedback Token",
              "symbol": "anyTFBX",
              "decimals": 18
            }
          }
        },
        "price": 0.0002187,
        "logoUrl": "https://assets.coingecko.com/coins/images/8842/large/5rd7a55q_400x400.png",
        "chainId": "1",
        "tokenid": "anyTFBX",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x1b40183efb4dd766f11bda7a7c3ad8982e998421": {
        "address": "0x1b40183efb4dd766f11bda7a7c3ad8982e998421",
        "anyToken": {
          "address": "0x1c2e7118591ec1b6122e4fe3d645706a9747b10e",
          "name": "VesperToken",
          "symbol": "anyVSP",
          "decimals": 18
        },
        "underlying": {
          "address": "0x1b40183efb4dd766f11bda7a7c3ad8982e998421",
          "name": "VesperToken",
          "symbol": "VSP",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x332730a4f6e03d9c55829435f10360e13cfa41ff",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "2958579.88",
            "MinimumSwap": "5.917",
            "BigValueThreshold": "591715.98",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "591.72",
            "MinimumSwapFee": "2.958",
            "anyToken": {
              "address": "0x332730a4f6e03d9c55829435f10360e13cfa41ff",
              "name": "VesperToken",
              "symbol": "VSP",
              "decimals": 18
            }
          }
        },
        "price": 0.280345,
        "logoUrl": "https://assets.coingecko.com/coins/images/13527/large/vesper_logo.jpg",
        "chainId": "1",
        "tokenid": "anyVSP",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x297d33e17e61c2ddd812389c2105193f8348188a": {
        "address": "0x297d33e17e61c2ddd812389c2105193f8348188a",
        "anyToken": {
          "address": "0x9eba16f6b7e8848e440922861123f0bee957002a",
          "name": "Strudel Finance",
          "symbol": "any$TRDL",
          "decimals": 18
        },
        "underlying": {
          "address": "0x297d33e17e61c2ddd812389c2105193f8348188a",
          "name": "Strudel Finance",
          "symbol": "$TRDL",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00398439,
        "logoUrl": "https://assets.coingecko.com/coins/images/13854/large/1614634281474-TRDL_LOGO_PNG.png",
        "chainId": "1",
        "tokenid": "anyTRDL",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xc36b4311b21fc0c2ead46f1ea6ce97c9c4d98d3d": {
        "address": "0xc36b4311b21fc0c2ead46f1ea6ce97c9c4d98d3d",
        "anyToken": {
          "address": "0x14d3e0ffbd62c9618c73ebb6f9c1cbcd23b6abe1",
          "name": "Creaticles",
          "symbol": "anyCRE8",
          "decimals": 18
        },
        "underlying": {
          "address": "0xc36b4311b21fc0c2ead46f1ea6ce97c9c4d98d3d",
          "name": "Creaticles",
          "symbol": "CRE8",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.01329715,
        "logoUrl": "https://assets.coingecko.com/coins/images/21115/large/logo-v3-small.png",
        "chainId": "1",
        "tokenid": "anyCRE8",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x93dede06ae3b5590af1d4c111bc54c3f717e4b35": {
        "address": "0x93dede06ae3b5590af1d4c111bc54c3f717e4b35",
        "anyToken": {
          "address": "0x6474239b1a83ceb3789cd8ddb2218e6f5c6840dd",
          "name": "governanceALCX",
          "symbol": "anygALCX",
          "decimals": 18
        },
        "underlying": {
          "address": "0x93dede06ae3b5590af1d4c111bc54c3f717e4b35",
          "name": "governanceALCX",
          "symbol": "gALCX",
          "decimals": 18
        },
        "destChains": {},
        "price": 17.01,
        "logoUrl": "https://alchemix.fi/images/token-icons/gALCX.svg",
        "chainId": "1",
        "tokenid": "anygALCX",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xe9cb6838902ccf711f16a9ea5a1170f8e9853c02": {
        "address": "0xe9cb6838902ccf711f16a9ea5a1170f8e9853c02",
        "anyToken": {
          "address": "0x76ce14947f74a2664700e68452fe9166174af9ab",
          "name": "StripCoin",
          "symbol": "anySTRIP",
          "decimals": 18
        },
        "underlying": {
          "address": "0xe9cb6838902ccf711f16a9ea5a1170f8e9853c02",
          "name": "StripCoin",
          "symbol": "STRIP",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x9f080368661261ee5d03bbd2b2f09d5489225e2c",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "549450549450.55",
            "MinimumSwap": "1098901.098",
            "BigValueThreshold": "109890109890.11",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "109890109.89",
            "MinimumSwapFee": "549450.549",
            "anyToken": {
              "address": "0x9f080368661261ee5d03bbd2b2f09d5489225e2c",
              "name": "StripCoin",
              "symbol": "STRIP",
              "decimals": 18
            }
          }
        },
        "price": 5.06097e-7,
        "logoUrl": "https://assets.coingecko.com/coins/images/20242/large/um7swakg.png",
        "chainId": "1",
        "tokenid": "anySTRIP",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x15b7c0c907e4c6b9adaaaabc300c08991d6cea05": {
        "address": "0x15b7c0c907e4c6b9adaaaabc300c08991d6cea05",
        "anyToken": {
          "address": "0xe7f04e0fbde4b16feb4a67747133f251e4dbccd7",
          "name": "Gelato Network Token",
          "symbol": "anyGEL",
          "decimals": 18
        },
        "underlying": {
          "address": "0x15b7c0c907e4c6b9adaaaabc300c08991d6cea05",
          "name": "Gelato Network Token",
          "symbol": "GEL",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.27046,
        "logoUrl": "https://assets.coingecko.com/coins/images/15026/large/Gelato_Icon_Logo_1024x1024.png",
        "chainId": "1",
        "tokenid": "anyGEL",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x332e824e46fceeb9e59ba9491b80d3e6d42b0b59": {
        "address": "0x332e824e46fceeb9e59ba9491b80d3e6d42b0b59",
        "anyToken": {
          "address": "0xdfb5a6b5136186f4ffcf3fe055b48f27793cdbd2",
          "name": "CheeseFry",
          "symbol": "anyCHEESE",
          "decimals": 18
        },
        "underlying": {
          "address": "0x332e824e46fceeb9e59ba9491b80d3e6d42b0b59",
          "name": "CheeseFry",
          "symbol": "CHEESE",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.182276,
        "logoUrl": "https://assets.coingecko.com/coins/images/18784/large/_CHEESE_token.png",
        "chainId": "1",
        "tokenid": "anyCHEESE",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x4c2e59d098df7b6cbae0848d66de2f8a4889b9c3": {
        "address": "0x4c2e59d098df7b6cbae0848d66de2f8a4889b9c3",
        "anyToken": {
          "address": "0x8ce3dfcae03beb7d2cab25a1e1434c3791f45dd8",
          "name": "Fodl",
          "symbol": "anyFODL",
          "decimals": 18
        },
        "underlying": {
          "address": "0x4c2e59d098df7b6cbae0848d66de2f8a4889b9c3",
          "name": "Fodl",
          "symbol": "FODL",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x43f5b29d63cedc5a7c1724dbb1d698fde05ada21",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "31747039.59",
            "MinimumSwap": "63.494",
            "BigValueThreshold": "6349407.92",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "6349.41",
            "MinimumSwapFee": "31.747",
            "anyToken": {
              "address": "0x43f5b29d63cedc5a7c1724dbb1d698fde05ada21",
              "name": "Fodl",
              "symbol": "FODL",
              "decimals": 18
            }
          }
        },
        "price": 0.00278996,
        "logoUrl": "https://assets.coingecko.com/coins/images/19040/large/new.jpg",
        "chainId": "1",
        "tokenid": "anyFODL",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x893700a1a86ee68b92536bf6fd4d3200d7369f7d": {
        "address": "0x893700a1a86ee68b92536bf6fd4d3200d7369f7d",
        "anyToken": {
          "address": "0xa753efa27efd65a456295078ed606306c52c2ebf",
          "name": "Emanate",
          "symbol": "anyEMT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x893700a1a86ee68b92536bf6fd4d3200d7369f7d",
          "name": "Emanate",
          "symbol": "EMT",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00533428,
        "logoUrl": "https://assets.coingecko.com/coins/images/4152/large/emanate.png",
        "chainId": "1",
        "tokenid": "anyEMT",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x035df12e0f3ac6671126525f1015e47d79dfeddf": {
        "address": "0x035df12e0f3ac6671126525f1015e47d79dfeddf",
        "anyToken": {
          "address": "0x08111ecee4eb8d766abdf6dcbfca81949c0b0891",
          "name": "0xMonero",
          "symbol": "any0xMR",
          "decimals": 18
        },
        "underlying": {
          "address": "0x035df12e0f3ac6671126525f1015e47d79dfeddf",
          "name": "0xMonero",
          "symbol": "0xMR",
          "decimals": 18
        },
        "destChains": {
          "1313161554": {
            "address": "0x7ea2be2df7ba6e54b1a9c70676f668455e329d29",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "14615780.36",
            "MinimumSwap": "29.231",
            "BigValueThreshold": "2923156.07",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "2923.16",
            "MinimumSwapFee": "14.615",
            "anyToken": {
              "address": "0x7ea2be2df7ba6e54b1a9c70676f668455e329d29",
              "name": "0xMonero",
              "symbol": "0xMR",
              "decimals": 18
            }
          }
        },
        "price": 0.114571,
        "logoUrl": "https://assets.coingecko.com/coins/images/11035/large/0xmnr.PNG",
        "chainId": "1",
        "tokenid": "any0xMR",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x01fb70ea8acfdd5435c8e8bd1531d96d57ced0ec": {
        "address": "0x01fb70ea8acfdd5435c8e8bd1531d96d57ced0ec",
        "anyToken": {
          "address": "0x09b809fbb0a1fa04916fb47b24dbc33529fd0c73",
          "name": "SmartElectrum",
          "symbol": "anySELECT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x01fb70ea8acfdd5435c8e8bd1531d96d57ced0ec",
          "name": "SmartElectrum",
          "symbol": "SELECT",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x01fb70ea8acfdd5435c8e8bd1531d96d57ced0ec",
            "underlying": {
              "address": "0x01fb70ea8acfdd5435c8e8bd1531d96d57ced0ec",
              "name": "SmartElectrum",
              "symbol": "SELECT",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "562176748.37",
            "MinimumSwap": "1124.353",
            "BigValueThreshold": "112435349.67",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "112435.35",
            "MinimumSwapFee": "562.176",
            "anyToken": {
              "address": "0x6cee1e8763589d77746e7a0ec84f9815402facd7",
              "name": "SmartElectrum",
              "symbol": "anySELECT",
              "decimals": 18
            }
          }
        },
        "price": 0.00040079,
        "logoUrl": "https://coinpaprika.com/coin/select-smart-electrum/logo.png",
        "chainId": "1",
        "tokenid": "anySELECT",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x446f2a8a39cc730ef378be759a3c57f1a3fe824c": {
        "address": "0x446f2a8a39cc730ef378be759a3c57f1a3fe824c",
        "anyToken": {
          "address": "0xcea59dce6a6d73a24e6d6944cfabc330814c098a",
          "name": "NanoByte Token",
          "symbol": "anyNBT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x446f2a8a39cc730ef378be759a3c57f1a3fe824c",
          "name": "NanoByte Token",
          "symbol": "NBT",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x1d3437e570e93581bd94b2fd8fbf202d4a65654a",
            "underlying": {
              "address": "0x1d3437e570e93581bd94b2fd8fbf202d4a65654a",
              "name": "NanoByte Token",
              "symbol": "NBT",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "326487329.35",
            "MinimumSwap": "652.974",
            "BigValueThreshold": "65297465.87",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "65297.46",
            "MinimumSwapFee": "326.487",
            "anyToken": {
              "address": "0xd7008fe6577a8c4c4c995359e157480e36b8c710",
              "name": "NanoByte Token",
              "symbol": "anyNBT",
              "decimals": 18
            }
          }
        },
        "price": 0.0028294,
        "logoUrl": "https://assets.coingecko.com/coins/images/23698/large/WpcmdLW.png",
        "chainId": "1",
        "tokenid": "anyNBT",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xb753428af26e81097e7fd17f40c88aaa3e04902c": {
        "address": "0xb753428af26e81097e7fd17f40c88aaa3e04902c",
        "anyToken": {
          "address": "0x3ff1af9e583d3790ec51e1407c9e94d8d1133dc3",
          "name": "Spice",
          "symbol": "anySFI",
          "decimals": 18
        },
        "underlying": {
          "address": "0xb753428af26e81097e7fd17f40c88aaa3e04902c",
          "name": "Spice",
          "symbol": "SFI",
          "decimals": 18
        },
        "destChains": {},
        "price": 25.41,
        "logoUrl": "https://assets.coingecko.com/coins/images/13117/large/sfi_red_250px.png",
        "chainId": "1",
        "tokenid": "anySFI",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x7815bda662050d84718b988735218cffd32f75ea": {
        "address": "0x7815bda662050d84718b988735218cffd32f75ea",
        "anyToken": {
          "address": "0x301de15579c37d1e1cc8b46d74324b885a77291b",
          "name": "YEL Token",
          "symbol": "anyYEL",
          "decimals": 18
        },
        "underlying": {
          "address": "0x7815bda662050d84718b988735218cffd32f75ea",
          "name": "YELToken",
          "symbol": "YEL",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00263129,
        "logoUrl": "https://assets.coingecko.com/coins/images/17429/large/Logo200.png",
        "chainId": "1",
        "tokenid": "anyYEL",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x8eedefe828a0f16c8fc80e46a87bc0f1de2d960c": {
        "address": "0x8eedefe828a0f16c8fc80e46a87bc0f1de2d960c",
        "anyToken": {
          "address": "0x19f36bbb75cfb2969486d46a95e37c74a90c7cbb",
          "name": "DigiMetaverse",
          "symbol": "anyDGMV",
          "decimals": 18
        },
        "underlying": {
          "address": "0x8eedefe828a0f16c8fc80e46a87bc0f1de2d960c",
          "name": "DigiMetaverse",
          "symbol": "DGMV",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xe336a772532650bc82828e9620dd0d5a3b78bfe8",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "35588201.8",
            "MinimumSwap": "71.176",
            "BigValueThreshold": "7117640.36",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "7117.64",
            "MinimumSwapFee": "35.588",
            "anyToken": {
              "address": "0xe336a772532650bc82828e9620dd0d5a3b78bfe8",
              "name": "DigiMetaverse",
              "symbol": "DGMV",
              "decimals": 18
            }
          }
        },
        "price": 0.00633375,
        "logoUrl": "https://assets.coingecko.com/coins/images/23701/large/DigiCorpLabs_token.png",
        "chainId": "1",
        "tokenid": "anyDGMV",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xb546c4a4fbfb0ae97b589e6887d198d11e9f375e": {
        "address": "0xb546c4a4fbfb0ae97b589e6887d198d11e9f375e",
        "anyToken": {
          "address": "0x0b23341fa1da0171f52aa8ef85f3946b44d35ac0",
          "name": "Meta Interstellar Token",
          "symbol": "anyMIT",
          "decimals": 18
        },
        "underlying": {
          "address": "0xb546c4a4fbfb0ae97b589e6887d198d11e9f375e",
          "name": "Meta Interstellar Token",
          "symbol": "MIT",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xe6906717f129427eebade5406de68cadd57aa0c0",
            "underlying": {
              "address": "0xe6906717f129427eebade5406de68cadd57aa0c0",
              "name": "Meta Interstellar Token",
              "symbol": "MIT",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "5667771.13",
            "MinimumSwap": "11.335",
            "BigValueThreshold": "1133554.23",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1133.55",
            "MinimumSwapFee": "5.667",
            "anyToken": {
              "address": "0x85d4c747da02ec4fc8d6b8da6f2a59ea91f7a460",
              "name": "Meta Interstellar Token",
              "symbol": "anyMIT",
              "decimals": 18
            }
          }
        },
        "price": 0.075643,
        "logoUrl": "https://assets.coingecko.com/coins/images/23003/large/gJ21fw3N_400x400.jpg",
        "chainId": "1",
        "tokenid": "anyMIT",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xa31b1767e09f842ecfd4bc471fe44f830e3891aa": {
        "address": "0xa31b1767e09f842ecfd4bc471fe44f830e3891aa",
        "anyToken": {
          "address": "0x5cb4b462ca075558ef0343db6b55f590e47482e4",
          "name": "ROOBEE",
          "symbol": "anyROOBEE",
          "decimals": 18
        },
        "underlying": {
          "address": "0xa31b1767e09f842ecfd4bc471fe44f830e3891aa",
          "name": "ROOBEE",
          "symbol": "ROOBEE",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xf77351d8f4ee853135961a936bb8d2e4ffa75f9d",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "1760749374.93",
            "MinimumSwap": "3521.498",
            "BigValueThreshold": "352149874.99",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "352149.87",
            "MinimumSwapFee": "1760.749",
            "anyToken": {
              "address": "0xf77351d8f4ee853135961a936bb8d2e4ffa75f9d",
              "name": "ROOBEE",
              "symbol": "ROOBEE",
              "decimals": 18
            }
          }
        },
        "price": 0.00079663,
        "logoUrl": "https://assets.coingecko.com/coins/images/8791/large/Group_11.png",
        "chainId": "1",
        "tokenid": "anyROOBEE",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x97a9bac06f90940bce9caec2b880ff17707519e4": {
        "address": "0x97a9bac06f90940bce9caec2b880ff17707519e4",
        "anyToken": {
          "address": "0xb0fdcdd7e920a036331abe9ffc7313322c0abba0",
          "name": "Minato",
          "symbol": "anyMNTO",
          "decimals": 18
        },
        "underlying": {
          "address": "0x97a9bac06f90940bce9caec2b880ff17707519e4",
          "name": "Minato",
          "symbol": "MNTO",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x854a63b35b70a7becbed508ff0b6ff5038d0c917",
            "underlying": {
              "address": "0x854a63b35b70a7becbed508ff0b6ff5038d0c917",
              "name": "Minato",
              "symbol": "MNTO",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "459136.82",
            "MinimumSwap": "0.918",
            "BigValueThreshold": "91827.36",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "91.83",
            "MinimumSwapFee": "0.459",
            "anyToken": {
              "address": "0xf207dbe40068c4f071e731ad1720f1c763fb42d1",
              "name": "Minato",
              "symbol": "anyMNTO",
              "decimals": 18
            }
          }
        },
        "price": 3.04,
        "logoUrl": "https://assets.coingecko.com/coins/images/24622/large/MNTO_200x200.png",
        "chainId": "1",
        "tokenid": "anyMNTO",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xa130e3a33a4d84b04c3918c4e5762223ae252f80": {
        "address": "0xa130e3a33a4d84b04c3918c4e5762223ae252f80",
        "anyToken": {
          "address": "0x2ef4a574b72e1f555185afa8a09c6d1a8ac4025c",
          "name": "Swash Token",
          "symbol": "anySWASH",
          "decimals": 18
        },
        "underlying": {
          "address": "0xa130e3a33a4d84b04c3918c4e5762223ae252f80",
          "name": "Swash Token",
          "symbol": "SWASH",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x41065e3428188ba6eb27fbdde8526ae3af8e3830",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "0",
            "liquidityType": "INIT",
            "MaximumSwap": "199188346.58",
            "MinimumSwap": "398.376",
            "BigValueThreshold": "39837669.32",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "39837.67",
            "MinimumSwapFee": "199.188",
            "anyToken": {
              "address": "0x41065e3428188ba6eb27fbdde8526ae3af8e3830",
              "name": "Swash Token",
              "symbol": "SWASH",
              "decimals": 18
            }
          }
        },
        "price": 0.0144851,
        "logoUrl": "https://assets.coingecko.com/coins/images/18774/large/swash.png",
        "chainId": "1",
        "tokenid": "anySWASH",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xd98f75b1a3261dab9eed4956c93f33749027a964": {
        "address": "0xd98f75b1a3261dab9eed4956c93f33749027a964",
        "anyToken": {
          "address": "0xc5c71cd0b734dae8c6eba9d79c3db693d112dda1",
          "name": "ShareToken",
          "symbol": "anySHR",
          "decimals": 2
        },
        "underlying": {
          "address": "0xd98f75b1a3261dab9eed4956c93f33749027a964",
          "name": "ShareToken",
          "symbol": "SHR",
          "decimals": 2
        },
        "destChains": {
          "56": {
            "address": "0x5fb4968fc85868df3ad2d6e59883a10570f01d18",
            "underlying": {
              "address": "0x5fb4968fc85868df3ad2d6e59883a10570f01d18",
              "name": "ShareToken",
              "symbol": "SHR",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "747350641.97",
            "MinimumSwap": "1494.701",
            "BigValueThreshold": "149470128.39",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "149470.13",
            "MinimumSwapFee": "747.35",
            "anyToken": {
              "address": "0x036bae7f92fc429725871d44b1a4dcda21691f50",
              "name": "ShareToken",
              "symbol": "anySHR",
              "decimals": 18
            }
          }
        },
        "price": 0.00226752,
        "logoUrl": "https://assets.coingecko.com/coins/images/3609/large/74586729_2443914875881351_2785018663453851648_n.png",
        "chainId": "1",
        "tokenid": "anySHR",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xedadeb5faa413e6c8623461849dfd0b7c3790c32": {
        "address": "0xedadeb5faa413e6c8623461849dfd0b7c3790c32",
        "anyToken": {
          "address": "0x7f352fa977713019c484c58e9bdfb04910016871",
          "name": "OBORTECH",
          "symbol": "anyOBOT",
          "decimals": 18
        },
        "underlying": {
          "address": "0xedadeb5faa413e6c8623461849dfd0b7c3790c32",
          "name": "OBORTECH",
          "symbol": "OBOT",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xb5be8d87fce6ce87a24b90abdb019458a8ec31f9",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "391605850.28",
            "MinimumSwap": "783.211",
            "BigValueThreshold": "78321170.06",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "78321.17",
            "MinimumSwapFee": "391.605",
            "anyToken": {
              "address": "0xb5be8d87fce6ce87a24b90abdb019458a8ec31f9",
              "name": "OBORTECH",
              "symbol": "OBOT",
              "decimals": 18
            }
          }
        },
        "price": 0.01230295,
        "logoUrl": "https://assets.coingecko.com/coins/images/14929/large/OBORTECH_200.png",
        "chainId": "1",
        "tokenid": "anyOBOT",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x16ba8efe847ebdfef99d399902ec29397d403c30": {
        "address": "0x16ba8efe847ebdfef99d399902ec29397d403c30",
        "anyToken": {
          "address": "0x413fbfdce9b5afb65b6147fbbc970148b79e706a",
          "name": "Oh! Finance",
          "symbol": "anyOH",
          "decimals": 18
        },
        "underlying": {
          "address": "0x16ba8efe847ebdfef99d399902ec29397d403c30",
          "name": "Oh!Finance",
          "symbol": "OH",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.0026624,
        "logoUrl": "https://assets.coingecko.com/coins/images/19493/large/oh-token-logo-200.png",
        "chainId": "1",
        "tokenid": "anyOH",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xc4398e483b178ac559b4fe665c6bce70a179f80f": {
        "address": "0xc4398e483b178ac559b4fe665c6bce70a179f80f",
        "anyToken": {
          "address": "0xa1388e73c51b37383b1ab9dce8317ef5a0349cc5",
          "name": "Vinci",
          "symbol": "anyVINCI",
          "decimals": 18
        },
        "underlying": {
          "address": "0xc4398e483b178ac559b4fe665c6bce70a179f80f",
          "name": "Vinci",
          "symbol": "VINCI",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x85ba4988443bc8b39307eec67b8c488666cd5819",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "22222222222.22",
            "MinimumSwap": "44444.444",
            "BigValueThreshold": "4444444444.44",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "4444444.44",
            "MinimumSwapFee": "22222.222",
            "anyToken": {
              "address": "0x85ba4988443bc8b39307eec67b8c488666cd5819",
              "name": "Vinci",
              "symbol": "VINCI",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://byvinci.io/vinci-icon.png",
        "chainId": "1",
        "tokenid": "anyVINCI",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x0aabcc65ef352ad84b1326df188c95b6ab856c1c": {
        "address": "0x0aabcc65ef352ad84b1326df188c95b6ab856c1c",
        "anyToken": {
          "address": "0x6574e2c013171cd50a6d34e588906047a0d12f2c",
          "name": "Scorefam",
          "symbol": "anySFT",
          "decimals": 8
        },
        "underlying": {
          "address": "0x0aabcc65ef352ad84b1326df188c95b6ab856c1c",
          "name": "Scorefam",
          "symbol": "SFT",
          "decimals": 8
        },
        "destChains": {
          "56": {
            "address": "0xcb73918ac58d0c90d71c7992637c61094c15305b",
            "underlying": {
              "address": "0xcb73918ac58d0c90d71c7992637c61094c15305b",
              "name": "Scorefam",
              "symbol": "SFT",
              "decimals": 8
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "139236981.34",
            "MinimumSwap": "278.473",
            "BigValueThreshold": "27847396.27",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "27847.4",
            "MinimumSwapFee": "139.236",
            "anyToken": {
              "address": "0x0ebddb1ef6d508b89bfd62b26d162c13f05be477",
              "name": "Scorefam",
              "symbol": "anySFT",
              "decimals": 8
            }
          },
          "1313161554": {
            "address": "0xfc56694ab428e7b4a03b8299b502d4598d945217",
            "underlying": {
              "address": "0xfc56694ab428e7b4a03b8299b502d4598d945217",
              "name": "Scorefam",
              "symbol": "SFT",
              "decimals": 8
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "139236981.34",
            "MinimumSwap": "278.473",
            "BigValueThreshold": "27847396.27",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "27847.4",
            "MinimumSwapFee": "139.236",
            "anyToken": {
              "address": "0x86b3f23b6e90f5bbfac59b5b2661134ef8ffd255",
              "name": "Scorefam",
              "symbol": "anySFT",
              "decimals": 8
            }
          }
        },
        "logoUrl": "https://s2.coinmarketcap.com/static/img/coins/64x64/19914.png",
        "chainId": "1",
        "tokenid": "anySFT",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x22b48e1f20043d1db5f2a11cbf1d520a4f20b198": {
        "address": "0x22b48e1f20043d1db5f2a11cbf1d520a4f20b198",
        "anyToken": {
          "address": "0xcc081220542a60a8ea7963c4f53d522b503272c1",
          "name": "Okuru Token",
          "symbol": "anyXOT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x22b48e1f20043d1db5f2a11cbf1d520a4f20b198",
          "name": "Okuru Token",
          "symbol": "XOT",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xe17915332d853093af2a35b0f7acb3dea8734f0d",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "186150.41",
            "MinimumSwap": "0.372",
            "BigValueThreshold": "37230.08",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "37.23",
            "MinimumSwapFee": "0.186",
            "anyToken": {
              "address": "0xe17915332d853093af2a35b0f7acb3dea8734f0d",
              "name": "Okuru Token",
              "symbol": "XOT",
              "decimals": 18
            }
          }
        },
        "price": 21.84,
        "logoUrl": "https://assets.coingecko.com/coins/images/25473/large/xot.png",
        "chainId": "1",
        "tokenid": "anyXOT",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xd533a949740bb3306d119cc777fa900ba034cd52": {
        "address": "0xd533a949740bb3306d119cc777fa900ba034cd52",
        "anyToken": {
          "address": "0x0e1b539eaf71d5d025f8ce90ca2256b4cf3e94b1",
          "name": "Curve DAO Token",
          "symbol": "anyCRV",
          "decimals": 18
        },
        "underlying": {
          "address": "0xd533a949740bb3306d119cc777fa900ba034cd52",
          "name": "CurveDAOToken",
          "symbol": "CRV",
          "decimals": 18
        },
        "destChains": {
          "1313161554": {
            "address": "0x64d5baf5ac030e2b7c435add967f787ae94d0205",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "4032258.06",
            "MinimumSwap": "8.064",
            "BigValueThreshold": "806451.61",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "806.45",
            "MinimumSwapFee": "4.032",
            "anyToken": {
              "address": "0x64d5baf5ac030e2b7c435add967f787ae94d0205",
              "name": "Curve DAO Token",
              "symbol": "CRV",
              "decimals": 18
            }
          }
        },
        "price": 0.854087,
        "logoUrl": "https://assets.coingecko.com/coins/images/12124/large/Curve.png",
        "chainId": "1",
        "tokenid": "anyCRV",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x47be779de87de6580d0548cde80710a93c502405": {
        "address": "0x47be779de87de6580d0548cde80710a93c502405",
        "anyToken": {
          "address": "0xd10e226f85dfb53aa2f9f3d297e521e1ee4f1bf7",
          "name": "Rainbow Pool",
          "symbol": "anyxRNBW",
          "decimals": 18
        },
        "underlying": {
          "address": "0x47be779de87de6580d0548cde80710a93c502405",
          "name": "Rainbow Pool",
          "symbol": "xRNBW",
          "decimals": 18
        },
        "destChains": {},
        "price": 2.9136e-8,
        "logoUrl": "https://s2.coinmarketcap.com/static/img/coins/200x200/11063.png",
        "chainId": "1",
        "tokenid": "anyxRNBW",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x13c2fab6354d3790d8ece4f0f1a3280b4a25ad96": {
        "address": "0x13c2fab6354d3790d8ece4f0f1a3280b4a25ad96",
        "anyToken": {
          "address": "0xfc5c0e5d0ba6386fbb7d921e5073fd04082a5b49",
          "name": "PHI Token",
          "symbol": "anyPHI",
          "decimals": 18
        },
        "underlying": {
          "address": "0x13c2fab6354d3790d8ece4f0f1a3280b4a25ad96",
          "name": "PHI Token",
          "symbol": "PHI",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x0e8c9611bc2fefb0a0adeb3f12ee7b11ab206c49",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "68615342.39",
            "MinimumSwap": "137.23",
            "BigValueThreshold": "13723068.48",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "13723.07",
            "MinimumSwapFee": "68.615",
            "anyToken": {
              "address": "0x0e8c9611bc2fefb0a0adeb3f12ee7b11ab206c49",
              "name": "PHI Token",
              "symbol": "PHI",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://s2.coinmarketcap.com/static/img/coins/64x64/2676.png",
        "chainId": "1",
        "tokenid": "anyPHI",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xf1bb87563a122211d40d393ebf1c633c330377f9": {
        "address": "0xf1bb87563a122211d40d393ebf1c633c330377f9",
        "anyToken": {
          "address": "0x21804205c744dd98fbc87898704564d5094bb167",
          "name": "Staked Premia",
          "symbol": "anyxPREMIA",
          "decimals": 18
        },
        "underlying": {
          "address": "0xf1bb87563a122211d40d393ebf1c633c330377f9",
          "name": "Staked Premia",
          "symbol": "xPREMIA",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.626461,
        "logoUrl": "https://assets.coingecko.com/coins/images/13962/large/apple-touch-icon.png",
        "chainId": "1",
        "tokenid": "anyxPREMIA",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x6399c842dd2be3de30bf99bc7d1bbf6fa3650e70": {
        "address": "0x6399c842dd2be3de30bf99bc7d1bbf6fa3650e70",
        "anyToken": {
          "address": "0x4b27cd6e6a5e83d236ead376d256fe2f9e9f0d2e",
          "name": "Premia",
          "symbol": "anyPREMIA",
          "decimals": 18
        },
        "underlying": {
          "address": "0x6399c842dd2be3de30bf99bc7d1bbf6fa3650e70",
          "name": "premia",
          "symbol": "premia",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xc417b45e6090bd4201d9400b48f84c9f34f4d0a5",
            "underlying": {
              "address": "0xc417b45e6090bd4201d9400b48f84c9f34f4d0a5",
              "name": "Premia",
              "symbol": "PREMIA",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "6389106.83",
            "MinimumSwap": "12.778",
            "BigValueThreshold": "1277821.37",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1277.82",
            "MinimumSwapFee": "6.389",
            "anyToken": {
              "address": "0x9a8e7727b9733b194339dfd8f923b45b60d0fc3a",
              "name": "Premia",
              "symbol": "anyPREMIA",
              "decimals": 18
            }
          }
        },
        "price": 0.626461,
        "logoUrl": "https://assets.coingecko.com/coins/images/13962/large/apple-touch-icon.png",
        "chainId": "1",
        "tokenid": "anyPREMIA",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x6b37374fe7980ae33fc87b0d66a490ec6903e87a": {
        "address": "0x6b37374fe7980ae33fc87b0d66a490ec6903e87a",
        "anyToken": {
          "address": "0xf9cfbdd3120f59f261f0db3610d683fe0337eb20",
          "name": "TOR",
          "symbol": "anyTOR",
          "decimals": 18
        },
        "underlying": {
          "address": "0x6b37374fe7980ae33fc87b0d66a490ec6903e87a",
          "name": "TOR",
          "symbol": "TOR",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x1d6cbdc6b29c6afbae65444a1f65ba9252b8ca83",
            "underlying": {
              "address": "0x1d6cbdc6b29c6afbae65444a1f65ba9252b8ca83",
              "name": "TOR",
              "symbol": "TOR",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "5008584.71",
            "MinimumSwap": "10.017",
            "BigValueThreshold": "1001716.94",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1001.72",
            "MinimumSwapFee": "5.008",
            "anyToken": {
              "address": "0x80d209227cf0a64e1fcbe62c7a80b8e691f0ef4d",
              "name": "TOR",
              "symbol": "anyTOR",
              "decimals": 18
            }
          }
        },
        "price": 0.99775,
        "logoUrl": "https://assets.coingecko.com/coins/images/23609/large/tor.png",
        "chainId": "1",
        "tokenid": "anyTOR",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x67c5870b4a41d4ebef24d2456547a03f1f3e094b": {
        "address": "0x67c5870b4a41d4ebef24d2456547a03f1f3e094b",
        "anyToken": {
          "address": "0xd17652350cfd2a37ba2f947c910987a3b1a1c60d",
          "name": "GoodDollar",
          "symbol": "anyG$",
          "decimals": 2
        },
        "underlying": {
          "address": "0x67c5870b4a41d4ebef24d2456547a03f1f3e094b",
          "name": "GoodDollar",
          "symbol": "G$",
          "decimals": 2
        },
        "destChains": {},
        "logoUrl": "https://raw.githubusercontent.com/GoodDollar/GoodProtocolUI/master/src/assets/images/G%24%20Coin.png",
        "chainId": "1",
        "tokenid": "anyG$",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xe0cca86b254005889ac3a81e737f56a14f4a38f5": {
        "address": "0xe0cca86b254005889ac3a81e737f56a14f4a38f5",
        "anyToken": {
          "address": "0xe408849d21646a42fd5e36cc520b26e7cdd62370",
          "name": "Alta Finance",
          "symbol": "anyALTA",
          "decimals": 18
        },
        "underlying": {
          "address": "0xe0cca86b254005889ac3a81e737f56a14f4a38f5",
          "name": "Alta Finance",
          "symbol": "ALTA",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xe0cca86b254005889ac3a81e737f56a14f4a38f5",
            "underlying": {
              "address": "0xe0cca86b254005889ac3a81e737f56a14f4a38f5",
              "name": "Alta Finance",
              "symbol": "ALTA",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "26159794.49",
            "MinimumSwap": "52.319",
            "BigValueThreshold": "5231958.9",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "5231.96",
            "MinimumSwapFee": "26.159",
            "anyToken": {
              "address": "0xbdf5680cc6b9e7355d24575e59e764b21d6cf7bf",
              "name": "Alta Finance",
              "symbol": "anyALTA",
              "decimals": 18
            }
          }
        },
        "price": 1.28541e-7,
        "logoUrl": "https://assets.coingecko.com/coins/images/18713/large/AFN-token-Altafin-200.png",
        "chainId": "1",
        "tokenid": "anyALTA",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xf6134e74b7a4ee23a888436e53e77f83e62e8df8": {
        "address": "0xf6134e74b7a4ee23a888436e53e77f83e62e8df8",
        "anyToken": {
          "address": "0xd2c244d5c3b530b9310c34962bf9b48c08dc0bcb",
          "name": "dYEL Index Token",
          "symbol": "anydYel",
          "decimals": 6
        },
        "underlying": {
          "address": "0xf6134e74b7a4ee23a888436e53e77f83e62e8df8",
          "name": "dYEL Index Token",
          "symbol": "dYel",
          "decimals": 6
        },
        "destChains": {
          "56": {
            "address": "0xf6134e74b7a4ee23a888436e53e77f83e62e8df8",
            "underlying": {
              "address": "0xf6134e74b7a4ee23a888436e53e77f83e62e8df8",
              "name": "dYEL Index Token",
              "symbol": "dYel",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "100000",
            "MinimumSwap": "0.2",
            "BigValueThreshold": "20000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "20",
            "MinimumSwapFee": "0.1",
            "anyToken": {
              "address": "0x35addb6e6a081da64e2014e77d2963804b0ce55f",
              "name": "dYEL Index Token",
              "symbol": "anydYel",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://raw.githubusercontent.com/YieldEnhancementLabs/assets/main/logo/dyel/circle_200.png",
        "chainId": "1",
        "tokenid": "anydYel",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xafaeb84415c1cd2bc99cd1f5f0b3090bae1beb6c": {
        "address": "0xafaeb84415c1cd2bc99cd1f5f0b3090bae1beb6c",
        "anyToken": {
          "address": "0x2127b96a05f9bf9095913d1e8b7bdb203a683a9f",
          "name": "BIG Token",
          "symbol": "anyBIG",
          "decimals": 9
        },
        "underlying": {
          "address": "0xafaeb84415c1cd2bc99cd1f5f0b3090bae1beb6c",
          "name": "BIG Token",
          "symbol": "BIG",
          "decimals": 9
        },
        "destChains": {
          "56": {
            "address": "0xafaeb84415c1cd2bc99cd1f5f0b3090bae1beb6c",
            "underlying": {
              "address": "0xafaeb84415c1cd2bc99cd1f5f0b3090bae1beb6c",
              "name": "BIG Token",
              "symbol": "BIG",
              "decimals": 9
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "10000",
            "MinimumSwap": "0.02",
            "BigValueThreshold": "2000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "2",
            "MinimumSwapFee": "0.01",
            "anyToken": {
              "address": "0xbc690879d762ca00bcfa5e9e6f4b7011485c29c9",
              "name": "BIG Token",
              "symbol": "anyBIG",
              "decimals": 9
            }
          }
        },
        "logoUrl": "https://raw.githubusercontent.com/YieldEnhancementLabs/assets/main/logo/dyel/big/circle_200.png",
        "chainId": "1",
        "tokenid": "anyBIG",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xaae3cf9968d26925bdb73ce3864e0084a20f4687": {
        "address": "0xaae3cf9968d26925bdb73ce3864e0084a20f4687",
        "anyToken": {
          "address": "0xed3516aa436b630b50960a3d19ba7a2e46d0e368",
          "name": "Farmland Protocol",
          "symbol": "anyFAR",
          "decimals": 18
        },
        "underlying": {
          "address": "0xaae3cf9968d26925bdb73ce3864e0084a20f4687",
          "name": "Farmland Protocol",
          "symbol": "FAR",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x49236832a3f75d3b13cba687da952aea5042e2aa",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "1244781254.59",
            "MinimumSwap": "2489.562",
            "BigValueThreshold": "248956250.92",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "248956.25",
            "MinimumSwapFee": "1244.781",
            "anyToken": {
              "address": "0x49236832a3f75d3b13cba687da952aea5042e2aa",
              "name": "Farmland Protocol",
              "symbol": "FAR",
              "decimals": 18
            }
          }
        },
        "price": 0.00507667,
        "logoUrl": "https://assets.coingecko.com/coins/images/13497/large/70059912.jpg",
        "chainId": "1",
        "tokenid": "anyFAR",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xd5b87813a5ecb2eac24b6b3f2d4b8b69f583af4e": {
        "address": "0xd5b87813a5ecb2eac24b6b3f2d4b8b69f583af4e",
        "anyToken": {
          "address": "0xd91903d548f19c0fc0a6b9ed09d2f72b4dfe7144",
          "name": "Anyswap Adapter Impossible Decentralized Incubator Access Token",
          "symbol": "AnyIDIA",
          "decimals": 18
        },
        "underlying": {
          "address": "0xd5b87813a5ecb2eac24b6b3f2d4b8b69f583af4e",
          "name": "Impossible Decentralized Incubator Access Token",
          "symbol": "IDIA",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x0b15ddf19d47e6a86a56148fb4afffc6929bcb89",
            "underlying": {
              "address": "0x0b15ddf19d47e6a86a56148fb4afffc6929bcb89",
              "name": "ImpossibleDecentralizedIncubat",
              "symbol": "IDIA",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "0",
            "liquidityType": "INIT",
            "MaximumSwap": "13817422.11",
            "MinimumSwap": "27.634",
            "BigValueThreshold": "2763484.42",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "2763.48",
            "MinimumSwapFee": "13.817",
            "anyToken": {
              "address": "0x35bc8f36ab08fc1b484d4c921a6f3b3c75e6d15d",
              "name": "Anyswap Adapter Impossible Decentralized Access Token",
              "symbol": "AnyIDIA",
              "decimals": 18
            }
          },
          "1313161554": {
            "address": "0x2efedebd6e29963511589731a33311196f00eacb",
            "underlying": {
              "address": "0x2efedebd6e29963511589731a33311196f00eacb",
              "name": "Impossible Decentralized Incubator Access Token",
              "symbol": "IDIA",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "0",
            "liquidityType": "INIT",
            "MaximumSwap": "13817422.11",
            "MinimumSwap": "27.634",
            "BigValueThreshold": "2763484.42",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "2763.48",
            "MinimumSwapFee": "13.817",
            "anyToken": {
              "address": "0x559f7afc3312ec94a8cc0dd6275716c68d345787",
              "name": "Anyswap Adapter Impossible Decentralized Access Token",
              "symbol": "AnyIDIA",
              "decimals": 18
            }
          }
        },
        "price": 0.03236612,
        "logoUrl": "https://assets.coingecko.com/coins/images/17803/large/IDIA.png",
        "chainId": "1",
        "tokenid": "anyIDIAv2",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xd1ba9bac957322d6e8c07a160a3a8da11a0d2867": {
        "address": "0xd1ba9bac957322d6e8c07a160a3a8da11a0d2867",
        "anyToken": {
          "address": "0x06e2ddd17f1043c0a4cbe72cc7c256e4d8a3e374",
          "name": "Human Token",
          "symbol": "anyHMT",
          "decimals": 18
        },
        "underlying": {
          "address": "0xd1ba9bac957322d6e8c07a160a3a8da11a0d2867",
          "name": "Human Token",
          "symbol": "HMT",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x0d501b743f22b641b8c8dfe00f1aab881d57ddc7",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "49413462.203643",
            "MinimumSwap": "98.826924",
            "BigValueThreshold": "9882692.440728",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "9882.692441",
            "MinimumSwapFee": "49.413462",
            "anyToken": {
              "address": "0x0d501b743f22b641b8c8dfe00f1aab881d57ddc7",
              "name": "Human Token",
              "symbol": "HMT",
              "decimals": 18
            }
          }
        },
        "price": 0.04779933,
        "logoUrl": "https://assets.coingecko.com/coins/images/16412/large/human_protocol.PNG",
        "chainId": "1",
        "tokenid": "anyHMT",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x721a1b990699ee9d90b6327faad0a3e840ae8335": {
        "address": "0x721a1b990699ee9d90b6327faad0a3e840ae8335",
        "anyToken": {
          "address": "0xd6cce248263ea1e2b8cb765178c944fc16ed0727",
          "name": "LOOT Token",
          "symbol": "anyLOOT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x721a1b990699ee9d90b6327faad0a3e840ae8335",
          "name": "LOOT Token",
          "symbol": "LOOT",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x14a9a94e555fdd54c21d7f7e328e61d7ebece54b",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "6250000",
            "MinimumSwap": "12.5",
            "BigValueThreshold": "1250000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1250",
            "MinimumSwapFee": "6.25",
            "anyToken": {
              "address": "0x14a9a94e555fdd54c21d7f7e328e61d7ebece54b",
              "name": "LOOT Token",
              "symbol": "LOOT",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://storage.googleapis.com/lootex-image/LOOTToken.png",
        "chainId": "1",
        "tokenid": "anyLOOT",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x5f4c148d17effd165c2e2d46b46d2bd6e3ebdc3e": {
        "address": "0x5f4c148d17effd165c2e2d46b46d2bd6e3ebdc3e",
        "anyToken": {
          "address": "0x3bd9856bf578910b55261d45d9148d61c177b092",
          "name": "FiveKM RUN",
          "symbol": "anyRUN",
          "decimals": 18
        },
        "underlying": {
          "address": "0x5f4c148d17effd165c2e2d46b46d2bd6e3ebdc3e",
          "name": "FiveKM RUN",
          "symbol": "RUN",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xe600b5960b002d5f7c8d7e7ee182065ced999ecb",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "250000000",
            "MinimumSwap": "500",
            "BigValueThreshold": "50000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "50000",
            "MinimumSwapFee": "250",
            "anyToken": {
              "address": "0xe600b5960b002d5f7c8d7e7ee182065ced999ecb",
              "name": "FiveKM RUN",
              "symbol": "RUN",
              "decimals": 18
            }
          }
        },
        "price": 0.00011995,
        "logoUrl": "https://files.5km.app/logo-200.png",
        "chainId": "1",
        "tokenid": "anyRUN",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x0100546f2cd4c9d97f798ffc9755e47865ff7ee6": {
        "address": "0x0100546f2cd4c9d97f798ffc9755e47865ff7ee6",
        "anyToken": {
          "address": "0xe2f28d24a2c6a69de859dfdefe347c9b25ad6aa2",
          "name": "Alchemix ETH",
          "symbol": "anyalETH",
          "decimals": 18
        },
        "underlying": {
          "address": "0x0100546f2cd4c9d97f798ffc9755e47865ff7ee6",
          "name": "Alchemix ETH",
          "symbol": "alETH",
          "decimals": 18
        },
        "destChains": {},
        "price": 1819.72,
        "logoUrl": "https://assets.coingecko.com/coins/images/279/large/ethereum.png",
        "chainId": "1",
        "tokenid": "anyalETH",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x4ee438be38f8682abb089f2bfea48851c5e71eaf": {
        "address": "0x4ee438be38f8682abb089f2bfea48851c5e71eaf",
        "anyToken": {
          "address": "0x419fa2e21092d834e3b02bd0802dee329c84268a",
          "name": "Cryptonovae",
          "symbol": "anyYAE",
          "decimals": 18
        },
        "underlying": {
          "address": "0x4ee438be38f8682abb089f2bfea48851c5e71eaf",
          "name": "Cryptonovae",
          "symbol": "YAE",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x4ee438be38f8682abb089f2bfea48851c5e71eaf",
            "underlying": {
              "address": "0x4ee438be38f8682abb089f2bfea48851c5e71eaf",
              "name": "Cryptonovae",
              "symbol": "YAE",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "142857142.857143",
            "MinimumSwap": "285.714286",
            "BigValueThreshold": "28571428.571428",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "28571.428571",
            "MinimumSwapFee": "142.857143",
            "anyToken": {
              "address": "0x26519efc30494c20f435819910062a607e0630a6",
              "name": "Cryptonovae",
              "symbol": "anyYAE",
              "decimals": 18
            }
          }
        },
        "price": 0.00551022,
        "logoUrl": "https://assets.coingecko.com/coins/images/14693/large/yae.png",
        "chainId": "1",
        "tokenid": "anyYAE",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xba100000625a3754423978a60c9317c58a424e3d": {
        "address": "0xba100000625a3754423978a60c9317c58a424e3d",
        "anyToken": {
          "address": "0xcb9d0b8cfd8371143ba5a794c7218d4766c493e2",
          "name": "Balancer",
          "symbol": "anyBAL",
          "decimals": 18
        },
        "underlying": {
          "address": "0xba100000625a3754423978a60c9317c58a424e3d",
          "name": "Balancer",
          "symbol": "BAL",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xf9815ea1a246401d2ebf2185f207d7db579a2500",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "896057.34767",
            "MinimumSwap": "1.792115",
            "BigValueThreshold": "179211.469534",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "179.21147",
            "MinimumSwapFee": "0.896057",
            "anyToken": {
              "address": "0xf9815ea1a246401d2ebf2185f207d7db579a2500",
              "name": "Balancer",
              "symbol": "BAL",
              "decimals": 18
            }
          }
        },
        "price": 5.41,
        "logoUrl": "https://assets.coingecko.com/coins/images/11683/large/Balancer.png",
        "chainId": "1",
        "tokenid": "anyBAL",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xc19b6a4ac7c7cc24459f08984bbd09664af17bd1": {
        "address": "0xc19b6a4ac7c7cc24459f08984bbd09664af17bd1",
        "anyToken": {
          "address": "0xfcb7388eef472293290b15027642702ebf57250a",
          "name": "Sensorium",
          "symbol": "anySENSO",
          "decimals": 0
        },
        "underlying": {
          "address": "0xc19b6a4ac7c7cc24459f08984bbd09664af17bd1",
          "name": "Sensorium",
          "symbol": "SENSO",
          "decimals": 0
        },
        "destChains": {
          "56": {
            "address": "0x02a9cd311c4d7244f7a0ac7735b5f1987b76e3db",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "28000000",
            "MinimumSwap": "56",
            "BigValueThreshold": "5500000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "5473",
            "MinimumSwapFee": "28",
            "anyToken": {
              "address": "0x02a9cd311c4d7244f7a0ac7735b5f1987b76e3db",
              "name": "Sensorium",
              "symbol": "SENSO",
              "decimals": 0
            }
          }
        },
        "price": 0.090588,
        "logoUrl": "https://assets.coingecko.com/coins/images/11064/large/senso.png",
        "chainId": "1",
        "tokenid": "anySENSO",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xdf49c9f599a0a9049d97cff34d0c30e468987389": {
        "address": "0xdf49c9f599a0a9049d97cff34d0c30e468987389",
        "anyToken": {
          "address": "0x702d161ed480e4a367a5810a6086074b791cf6a0",
          "name": "Smart Advertising Transaction Token",
          "symbol": "SATT",
          "decimals": 18
        },
        "underlying": {
          "address": "0xdf49c9f599a0a9049d97cff34d0c30e468987389",
          "name": "Smart Advertising Transaction Token",
          "symbol": "SATT",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x448bee2d93be708b54ee6353a7cc35c4933f1156",
            "underlying": {
              "address": "0x448bee2d93be708b54ee6353a7cc35c4933f1156",
              "name": "Smart Advertising Transaction Token",
              "symbol": "SATT",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "4040678711.86",
            "MinimumSwap": "8081.357",
            "BigValueThreshold": "808135742.37",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "808135.74",
            "MinimumSwapFee": "4040.678",
            "anyToken": {
              "address": "0xc33211c3618a3f2b2a70152185cea469d2dab6d4",
              "name": "Smart Advertising Transaction Token",
              "symbol": "anySATT",
              "decimals": 18
            }
          }
        },
        "price": 0.00011903,
        "logoUrl": "https://assets.coingecko.com/coins/images/4070/large/r3s9XKk.png",
        "chainId": "1",
        "tokenid": "anySATT",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x18a1ea69a50a85752b7bc204a2c45a95ce6e429d": {
        "address": "0x18a1ea69a50a85752b7bc204a2c45a95ce6e429d",
        "anyToken": {
          "address": "0x41471fbf66dafb95b682afaf1426bee11f25e10a",
          "name": "Spice",
          "symbol": "anySPICE",
          "decimals": 18
        },
        "underlying": {
          "address": "0x18a1ea69a50a85752b7bc204a2c45a95ce6e429d",
          "name": "Spice",
          "symbol": "SPICE",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x42586ef4495bb512a86cf7496f6ef85ae7d69a64",
            "underlying": {
              "address": "0x42586ef4495bb512a86cf7496f6ef85ae7d69a64",
              "name": "Spice",
              "symbol": "SPICE",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "51569252.35",
            "MinimumSwap": "103.138",
            "BigValueThreshold": "10313850.47",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "10313.85",
            "MinimumSwapFee": "51.569",
            "anyToken": {
              "address": "0x250e8703097f33d4e098fbf633040c0fb83231a8",
              "name": "Spice",
              "symbol": "anySPICE",
              "decimals": 18
            }
          }
        },
        "price": 0.00036746,
        "logoUrl": "https://assets.coingecko.com/coins/images/25770/large/SPICE.png",
        "chainId": "1",
        "tokenid": "anySPICE",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x45fdb1b92a649fb6a64ef1511d3ba5bf60044838": {
        "address": "0x45fdb1b92a649fb6a64ef1511d3ba5bf60044838",
        "anyToken": {
          "address": "0xfedadce4361658ad34410f02de20af217b0a9048",
          "name": "Spice USD",
          "symbol": "anyUSDS",
          "decimals": 18
        },
        "underlying": {
          "address": "0x45fdb1b92a649fb6a64ef1511d3ba5bf60044838",
          "name": "Spice USD",
          "symbol": "USDS",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xde7d1ce109236b12809c45b23d22f30dba0ef424",
            "underlying": {
              "address": "0xde7d1ce109236b12809c45b23d22f30dba0ef424",
              "name": "Spice USD",
              "symbol": "USDS",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "5045322.13",
            "MinimumSwap": "10.09",
            "BigValueThreshold": "1009064.43",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1009.06",
            "MinimumSwapFee": "5.045",
            "anyToken": {
              "address": "0x696e96f08f9d046b0125be299bf900f645d79acd",
              "name": "Spice USD",
              "symbol": "anyUSDS",
              "decimals": 18
            }
          }
        },
        "price": 0.129638,
        "logoUrl": "https://assets.coingecko.com/coins/images/25697/large/USDS.png",
        "chainId": "1",
        "tokenid": "anyUSDS",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xf9c2b386ff5df088ac717ab0010587bad3bc1ab1": {
        "address": "0xf9c2b386ff5df088ac717ab0010587bad3bc1ab1",
        "anyToken": {
          "address": "0x83102ec9b8a4dbf2e6aa41f6e7c8b5863b800681",
          "name": "Inflation Adjusted Spice USD",
          "symbol": "anyiUSDS",
          "decimals": 18
        },
        "underlying": {
          "address": "0xf9c2b386ff5df088ac717ab0010587bad3bc1ab1",
          "name": "Inflation Adjusted Spice USD",
          "symbol": "iUSDS",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x6458df5d764284346c19d88a104fd3d692471499",
            "underlying": {
              "address": "0x6458df5d764284346c19d88a104fd3d692471499",
              "name": "Inflation Adjusted Spice USD",
              "symbol": "iUSDS",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "4807692.31",
            "MinimumSwap": "9.615",
            "BigValueThreshold": "961538.46",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "961.54",
            "MinimumSwapFee": "4.807",
            "anyToken": {
              "address": "0xfb32f9581148e588bf92a91a15fdcbc65a68e4c9",
              "name": "Inflation Adjusted Spice USD",
              "symbol": "anyiUSDS",
              "decimals": 18
            }
          }
        },
        "price": 0.260297,
        "logoUrl": "https://assets.coingecko.com/coins/images/25698/large/iUSDS2.png",
        "chainId": "1",
        "tokenid": "anyiUSDS",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x967da4048cd07ab37855c090aaf366e4ce1b9f48": {
        "address": "0x967da4048cd07ab37855c090aaf366e4ce1b9f48",
        "anyToken": {
          "address": "0xa65779aa9a29af831da49c48899e7146934905c7",
          "name": "Ocean Token",
          "symbol": "anyOCEAN",
          "decimals": 18
        },
        "underlying": {
          "address": "0x967da4048cd07ab37855c090aaf366e4ce1b9f48",
          "name": "Ocean",
          "symbol": "OCEAN",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.338317,
        "logoUrl": "https://assets.coingecko.com/coins/images/3687/large/ocean-protocol-logo.jpg",
        "chainId": "1",
        "tokenid": "anyOCEAN",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x29b3d220f0f1e37b342cf7c48c1164bf5bf79efa": {
        "address": "0x29b3d220f0f1e37b342cf7c48c1164bf5bf79efa",
        "anyToken": {
          "address": "0xd76b758a552f763cd496f1fb06a8f56364122675",
          "name": "Hector",
          "symbol": "anyHEC",
          "decimals": 9
        },
        "underlying": {
          "address": "0x29b3d220f0f1e37b342cf7c48c1164bf5bf79efa",
          "name": "Hector",
          "symbol": "HEC",
          "decimals": 9
        },
        "destChains": {
          "56": {
            "address": "0x638eebe886b0e9e7c6929e69490064a6c94d204d",
            "underlying": {
              "address": "0x638eebe886b0e9e7c6929e69490064a6c94d204d",
              "name": "Hector",
              "symbol": "HEC",
              "decimals": 9
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "615006.150061",
            "MinimumSwap": "1.230012",
            "BigValueThreshold": "123001.230012",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "123.00123",
            "MinimumSwapFee": "0.615006",
            "anyToken": {
              "address": "0xe98803e5ce78cf8aad43267d9852a4057423cb1d",
              "name": "Hector",
              "symbol": "anyHEC",
              "decimals": 9
            }
          }
        },
        "price": 4.56,
        "logoUrl": "https://assets.coingecko.com/coins/images/19832/large/logo-final.png",
        "chainId": "1",
        "tokenid": "anyHEC",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x15d4c048f83bd7e37d49ea4c83a07267ec4203da": {
        "address": "0x15d4c048f83bd7e37d49ea4c83a07267ec4203da",
        "anyToken": {
          "address": "0xebe58381406d2c9bc9f68f541d503ba4f1a29fdf",
          "name": "Gala",
          "symbol": "anyGALA",
          "decimals": 8
        },
        "underlying": {
          "address": "0x15d4c048f83bd7e37d49ea4c83a07267ec4203da",
          "name": "Gala",
          "symbol": "GALA",
          "decimals": 8
        },
        "destChains": {},
        "price": 0.02969083,
        "logoUrl": "https://assets.coingecko.com/coins/images/12493/large/GALA-COINGECKO.png",
        "chainId": "1",
        "tokenid": "anyGALA",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xf629cbd94d3791c9250152bd8dfbdf380e2a3b9c": {
        "address": "0xf629cbd94d3791c9250152bd8dfbdf380e2a3b9c",
        "anyToken": {
          "address": "0x4a0a3902e091cdb3aec4279a6bfac50297f0a79e",
          "name": "Enjin Coin",
          "symbol": "anyENJ",
          "decimals": 18
        },
        "underlying": {
          "address": "0xf629cbd94d3791c9250152bd8dfbdf380e2a3b9c",
          "name": "Enjin Coin",
          "symbol": "ENJ",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.333744,
        "logoUrl": "https://assets.coingecko.com/coins/images/1102/large/enjin-coin-logo.png",
        "chainId": "1",
        "tokenid": "anyENJ",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x5f018e73c185ab23647c82bd039e762813877f0e": {
        "address": "0x5f018e73c185ab23647c82bd039e762813877f0e",
        "anyToken": {
          "address": "0x8497842420cfdbc97896c2353d75d89fc8d5be5d",
          "name": "Shack Token",
          "symbol": "anySHACK",
          "decimals": 18
        },
        "underlying": {
          "address": "0x5f018e73c185ab23647c82bd039e762813877f0e",
          "name": "Shack Token",
          "symbol": "SHACK",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xe79a1163a95734ccfbd006cbaaba954f3e846beb",
            "underlying": {
              "address": "0xe79a1163a95734ccfbd006cbaaba954f3e846beb",
              "name": "Shack Token",
              "symbol": "SHACK",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "1330852624.042119",
            "MinimumSwap": "2661.705248",
            "BigValueThreshold": "266170524.808424",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "266170.524808",
            "MinimumSwapFee": "1330.852624",
            "anyToken": {
              "address": "0x01d6370230ae0deb59bca3742ccc7de018a8b5b4",
              "name": "Shack Token",
              "symbol": "anySHACK",
              "decimals": 18
            }
          }
        },
        "price": 0.00014996,
        "logoUrl": "https://assets.coingecko.com/coins/images/25699/large/shack_no_bg_no_pad3.png",
        "chainId": "1",
        "tokenid": "anySHACK",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xc86817249634ac209bc73fca1712bbd75e37407d": {
        "address": "0xc86817249634ac209bc73fca1712bbd75e37407d",
        "anyToken": {
          "address": "0x976cdc77e43667747e35c82a9477111259d0c6f0",
          "name": "1-UP",
          "symbol": "any1-UP",
          "decimals": 18
        },
        "underlying": {
          "address": "0xc86817249634ac209bc73fca1712bbd75e37407d",
          "name": "1-UP",
          "symbol": "1-UP",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x538d4622c34064dc532f232842b72a99cdefe4c8",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "0",
            "liquidityType": "INIT",
            "MaximumSwap": "288474242.423368",
            "MinimumSwap": "576.948485",
            "BigValueThreshold": "57694848.484674",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "57694.848485",
            "MinimumSwapFee": "288.474242",
            "anyToken": {
              "address": "0x538d4622c34064dc532f232842b72a99cdefe4c8",
              "name": "1-UP",
              "symbol": "1-UP",
              "decimals": 18
            }
          }
        },
        "price": 0.02340125,
        "logoUrl": "https://assets.coingecko.com/coins/images/17376/large/1up.png",
        "chainId": "1",
        "tokenid": "any1-UP",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xb2c1d397ec86acb569cdab7889e66c3964fe43b6": {
        "address": "0xb2c1d397ec86acb569cdab7889e66c3964fe43b6",
        "anyToken": {
          "address": "0xa87bdda360932cf11aecf1369e8f08889326814e",
          "name": "DDstable",
          "symbol": "anyDD",
          "decimals": 18
        },
        "underlying": {
          "address": "0xb2c1d397ec86acb569cdab7889e66c3964fe43b6",
          "name": "DDstable",
          "symbol": "DD",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xf83a0cdfd0cbfc59ea23c26294251bf2152c7254",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "18362100.624311",
            "MinimumSwap": "36.724201",
            "BigValueThreshold": "3672420.124862",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "3672.420125",
            "MinimumSwapFee": "18.362101",
            "anyToken": {
              "address": "0xf83a0cdfd0cbfc59ea23c26294251bf2152c7254",
              "name": "DDstable",
              "symbol": "DD",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://ddirham.io/Logo.svg",
        "chainId": "1",
        "tokenid": "anyDD",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xd26a9c3437f7d121098c8c05c7413f5cc70bb070": {
        "address": "0xd26a9c3437f7d121098c8c05c7413f5cc70bb070",
        "anyToken": {
          "address": "0xad4612bd2096ec4e4abfa6f15d141a1de7eb8488",
          "name": "Azuma coin",
          "symbol": "anyAZUM",
          "decimals": 18
        },
        "underlying": {
          "address": "0xd26a9c3437f7d121098c8c05c7413f5cc70bb070",
          "name": "Azuma coin",
          "symbol": "AZUM",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00012026,
        "logoUrl": "https://assets.coingecko.com/coins/images/10483/large/WDncHJ5.png",
        "chainId": "1",
        "tokenid": "anyAZUM",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x81f8f0bb1cb2a06649e51913a151f0e7ef6fa321": {
        "address": "0x81f8f0bb1cb2a06649e51913a151f0e7ef6fa321",
        "anyToken": {
          "address": "0xfd33e5413e28142a14033cb0a4b0c7f98ae76da1",
          "name": "VitaDAO Token",
          "symbol": "anyVITA",
          "decimals": 18
        },
        "underlying": {
          "address": "0x81f8f0bb1cb2a06649e51913a151f0e7ef6fa321",
          "name": "VitaDAO Token",
          "symbol": "VITA",
          "decimals": 18
        },
        "destChains": {},
        "price": 1.89,
        "logoUrl": "https://assets.coingecko.com/coins/images/16580/large/QmRjwywiAfpzSfQTuWM3zCTghSHN7G6ohQaar7Ht6WANUp.png",
        "chainId": "1",
        "tokenid": "anyVITA",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xebf2096e01455108badcbaf86ce30b6e5a72aa52": {
        "address": "0xebf2096e01455108badcbaf86ce30b6e5a72aa52",
        "anyToken": {
          "address": "0xf1c55367b8e4742a7abf80968705795b07536804",
          "name": "XIDR",
          "symbol": "anyXIDR",
          "decimals": 6
        },
        "underlying": {
          "address": "0xebf2096e01455108badcbaf86ce30b6e5a72aa52",
          "name": "XIDR",
          "symbol": "XIDR",
          "decimals": 6
        },
        "destChains": {},
        "price": 0.00006698,
        "logoUrl": "https://s2.coinmarketcap.com/static/img/coins/64x64/15326.png",
        "chainId": "1",
        "tokenid": "anyXIDR",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xb4f74994fcbd60e1bc3603b9a33069ea1b32d4a4": {
        "address": "0xb4f74994fcbd60e1bc3603b9a33069ea1b32d4a4",
        "anyToken": {
          "address": "0xbaf8e9ca8693036bbd1e5b81b82f2359739ee5a6",
          "name": "Only Graded Coin",
          "symbol": "anyOGUC",
          "decimals": 18
        },
        "underlying": {
          "address": "0xb4f74994fcbd60e1bc3603b9a33069ea1b32d4a4",
          "name": "Only Graded Coin",
          "symbol": "OGUC",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x97200cc65c4082e9e0f8e966b1f296a7c4c46a61",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "50000000",
            "MinimumSwap": "100",
            "BigValueThreshold": "10000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "10000",
            "MinimumSwapFee": "50",
            "anyToken": {
              "address": "0x97200cc65c4082e9e0f8e966b1f296a7c4c46a61",
              "name": "Only Graded Coin",
              "symbol": "OGUC",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://onlygraded.com/assets/images/bannerimages/ogcoin.png",
        "chainId": "1",
        "tokenid": "anyOGUC",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x56de8bc61346321d4f2211e3ac3c0a7f00db9b76": {
        "address": "0x56de8bc61346321d4f2211e3ac3c0a7f00db9b76",
        "anyToken": {
          "address": "0xb8a239996690430436425e249dc569d13d4c7aad",
          "name": "Rena",
          "symbol": "anyRENA",
          "decimals": 18
        },
        "underlying": {
          "address": "0x56de8bc61346321d4f2211e3ac3c0a7f00db9b76",
          "name": "Rena",
          "symbol": "RENA",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.077935,
        "logoUrl": "https://assets.coingecko.com/coins/images/15667/large/photo_2021-05-21_17-31-35.png",
        "chainId": "1",
        "tokenid": "anyRENA",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x03ab458634910aad20ef5f1c8ee96f1d6ac54919": {
        "address": "0x03ab458634910aad20ef5f1c8ee96f1d6ac54919",
        "anyToken": {
          "address": "0x403beb734e0c7e87d632a4ea1b290059e3b3a3c9",
          "name": "Rai Reflex Index",
          "symbol": "anyRAI",
          "decimals": 18
        },
        "underlying": {
          "address": "0x03ab458634910aad20ef5f1c8ee96f1d6ac54919",
          "name": "RaiReflexIndex",
          "symbol": "RAI",
          "decimals": 18
        },
        "destChains": {},
        "price": 2.79,
        "logoUrl": "https://assets.coingecko.com/coins/images/14004/large/RAI-logo-coin.png",
        "chainId": "1",
        "tokenid": "anyRAI",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x09f098b155d561fc9f7bccc97038b7e3d20baf74": {
        "address": "0x09f098b155d561fc9f7bccc97038b7e3d20baf74",
        "anyToken": {
          "address": "0x8c62c65d65176b9d45ab180e23eb5dacc2e599a4",
          "name": "ZooDAO",
          "symbol": "anyZOO",
          "decimals": 18
        },
        "underlying": {
          "address": "0x09f098b155d561fc9f7bccc97038b7e3d20baf74",
          "name": "ZooDAO",
          "symbol": "ZOO",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.06916,
        "logoUrl": "https://assets.coingecko.com/coins/images/24305/large/Zt2BM_8D_400x400.jpg",
        "chainId": "1",
        "tokenid": "anyZOO",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x8642a849d0dcb7a15a974794668adcfbe4794b56": {
        "address": "0x8642a849d0dcb7a15a974794668adcfbe4794b56",
        "anyToken": {
          "address": "0x1b4ead1f89eebef694efa6f9b95d61a429c05bdb",
          "name": "Prosper",
          "symbol": "anyPROS",
          "decimals": 18
        },
        "underlying": {
          "address": "0x8642a849d0dcb7a15a974794668adcfbe4794b56",
          "name": "Prosper",
          "symbol": "PROS",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.400031,
        "logoUrl": "https://assets.coingecko.com/coins/images/13668/large/heD6cg22l3sF5VgPh4G1xC6lnKEWXJif-jbaqUpv8CDP6jbWaqn9UjBdkXWNrw1CewaQOxb8zXRdNeNJWWiUDjfsEl_d7E3bPLg4cFoilQF5TGKHfWyJlnpm3UYc9ytvRvOjxOevMuiu8-lusnNoOcwgsJpMkYWHqe322GAxLt0_30kFMVAcjEDUrOlkK6hUYi0m9P433mvNlOm.jpg",
        "chainId": "1",
        "tokenid": "anyPROS",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x66f73d0fd4161cfad4302dc145ff994375c13475": {
        "address": "0x66f73d0fd4161cfad4302dc145ff994375c13475",
        "anyToken": {
          "address": "0xb775feee081bd18cf0244fae8ac641f1bf7704b0",
          "name": "DEXGame",
          "symbol": "anyDXGM",
          "decimals": 18
        },
        "underlying": {
          "address": "0x66f73d0fd4161cfad4302dc145ff994375c13475",
          "name": "DEXGame",
          "symbol": "DXGM",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xccaa7ad74eaf153b4ab0d327794d0b6734e4d51a",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "663307676.592403",
            "MinimumSwap": "1326.615353",
            "BigValueThreshold": "132661535.31848",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "132661.535318",
            "MinimumSwapFee": "663.307677",
            "anyToken": {
              "address": "0xccaa7ad74eaf153b4ab0d327794d0b6734e4d51a",
              "name": "DEXGame",
              "symbol": "DXGM",
              "decimals": 18
            }
          }
        },
        "price": 0.00861864,
        "logoUrl": "https://assets.coingecko.com/coins/images/21084/large/dxgm-token.png",
        "chainId": "1",
        "tokenid": "anyDXGM",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x53884b61963351c283118a8e1fc05ba464a11959": {
        "address": "0x53884b61963351c283118a8e1fc05ba464a11959",
        "anyToken": {
          "address": "0x31df3cfc1113b0afa2120887db216948c36eb77c",
          "name": "Monnos Token",
          "symbol": "anyMNS",
          "decimals": 18
        },
        "underlying": {
          "address": "0x53884b61963351c283118a8e1fc05ba464a11959",
          "name": "Monnos Token",
          "symbol": "MNS",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x5f58aee77fba2760cec20ccdcd982bd42e56fc4e",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "8051789107.539695",
            "MinimumSwap": "16103.578215",
            "BigValueThreshold": "1610357821.507939",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1610357.821508",
            "MinimumSwapFee": "8051.789108",
            "anyToken": {
              "address": "0x5f58aee77fba2760cec20ccdcd982bd42e56fc4e",
              "name": "Monnos Token",
              "symbol": "MNS",
              "decimals": 18
            }
          }
        },
        "price": 0.0004136,
        "logoUrl": "https://assets.coingecko.com/coins/images/11640/small/logo_%2880%29.png",
        "chainId": "1",
        "tokenid": "anyMNS",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x5f2080542ab6ae7e0b06778f0b2d263006297840": {
        "address": "0x5f2080542ab6ae7e0b06778f0b2d263006297840",
        "anyToken": {
          "address": "0xc261b646f2e4b63068470666db5cc39e4be743a8",
          "name": "DeFiHelper Governance Token",
          "symbol": "anyDFH",
          "decimals": 18
        },
        "underlying": {
          "address": "0x5f2080542ab6ae7e0b06778f0b2d263006297840",
          "name": "DeFiHelper Governance Token",
          "symbol": "DFH",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x039b724994260d7c956a06f85c565355a8383198",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "166666666.666667",
            "MinimumSwap": "333.333333",
            "BigValueThreshold": "33333333.333333",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "33333.333333",
            "MinimumSwapFee": "166.666667",
            "anyToken": {
              "address": "0x039b724994260d7c956a06f85c565355a8383198",
              "name": "DeFiHelper Governance Token",
              "symbol": "DFH",
              "decimals": 18
            }
          }
        },
        "price": 0.00049103,
        "logoUrl": "https://assets.coingecko.com/coins/images/20270/small/dfh-d-ava-main-cgb.png",
        "chainId": "1",
        "tokenid": "anyDFH",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x865377367054516e17014ccded1e7d814edc9ce4": {
        "address": "0x865377367054516e17014ccded1e7d814edc9ce4",
        "anyToken": {
          "address": "0x4a24b7269459017c999ababa32962b3cdb436250",
          "name": "Dola USD Stablecoin",
          "symbol": "anyDOLA",
          "decimals": 18
        },
        "underlying": {
          "address": "0x865377367054516e17014ccded1e7d814edc9ce4",
          "name": "DolaUSDStablecoin",
          "symbol": "DOLA",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x2f29bc0ffaf9bff337b31cbe6cb5fb3bf12e5840",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "5032788.617845",
            "MinimumSwap": "10.065577",
            "BigValueThreshold": "1006557.723569",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1006.557723",
            "MinimumSwapFee": "5.032789",
            "anyToken": {
              "address": "0x2f29bc0ffaf9bff337b31cbe6cb5fb3bf12e5840",
              "name": "Dola USD Stablecoin",
              "symbol": "DOLA",
              "decimals": 18
            }
          }
        },
        "price": 0.994111,
        "logoUrl": "https://assets.coingecko.com/coins/images/14287/small/dola.png",
        "chainId": "1",
        "tokenid": "anyDOLA",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x947aeb02304391f8fbe5b25d7d98d649b57b1788": {
        "address": "0x947aeb02304391f8fbe5b25d7d98d649b57b1788",
        "anyToken": {
          "address": "0xde22e15c6c21b6a8a1266b171ff7f3905c4b1109",
          "name": "MANDALA EXCHANGE TOKEN",
          "symbol": "anyMDX",
          "decimals": 18
        },
        "underlying": {
          "address": "0x947aeb02304391f8fbe5b25d7d98d649b57b1788",
          "name": "MANDALA EXCHANGE TOKEN",
          "symbol": "MDX",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xc40289e08bb3eb14a26c9aec9f2eeacb9fdab297",
            "underlying": {
              "address": "0xc40289e08bb3eb14a26c9aec9f2eeacb9fdab297",
              "name": "Mandala Exchange Token",
              "symbol": "MDX",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "438596.491228",
            "MinimumSwap": "0.877193",
            "BigValueThreshold": "87719.298246",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "87.719298",
            "MinimumSwapFee": "0.438596",
            "anyToken": {
              "address": "0xf133ed3095a6c3167f140ab26fc1ad6b10096ab1",
              "name": "Mandala Exchange Token",
              "symbol": "anyMDX",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://mandala.exchange/wp-content/uploads/2022/07/logo-200x200-1.png",
        "chainId": "1",
        "tokenid": "anyMDX",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x513c3200f227ebb62e3b3d00b7a83779643a71cf": {
        "address": "0x513c3200f227ebb62e3b3d00b7a83779643a71cf",
        "anyToken": {
          "address": "0x495b56e08e20c0b6924cd4cadc9bf4146a64bb52",
          "name": "Uplift",
          "symbol": "anyLIFT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x513c3200f227ebb62e3b3d00b7a83779643a71cf",
          "name": "Uplift",
          "symbol": "LIFT",
          "decimals": 18
        },
        "destChains": {
          "1313161554": {
            "address": "0x513c3200f227ebb62e3b3d00b7a83779643a71cf",
            "underlying": {
              "address": "0x513c3200f227ebb62e3b3d00b7a83779643a71cf",
              "name": "Uplift",
              "symbol": "LIFT",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "140541974.82837",
            "MinimumSwap": "281.08395",
            "BigValueThreshold": "28108394.965674",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "28108.394966",
            "MinimumSwapFee": "140.541975",
            "anyToken": {
              "address": "0x667fd83e24ca1d935d36717d305d54fa0cac991c",
              "name": "Uplift",
              "symbol": "anyLIFT",
              "decimals": 18
            }
          }
        },
        "price": 0.02561364,
        "logoUrl": "https://assets.coingecko.com/coins/images/20666/large/logo-200x200.png",
        "chainId": "1",
        "tokenid": "anyLIFT",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x40932d9cd67e89749406f16edd2d211b7ab1ff50": {
        "address": "0x40932d9cd67e89749406f16edd2d211b7ab1ff50",
        "anyToken": {
          "address": "0xc49f8b8a273456171a7e059ee90437eb51159ec0",
          "name": "LPGToken",
          "symbol": "anyLPG",
          "decimals": 18
        },
        "underlying": {
          "address": "0x40932d9cd67e89749406f16edd2d211b7ab1ff50",
          "name": "LPGToken",
          "symbol": "LPG",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x0ee249311cd882ca360567960ce9559f5d4184c6",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "2403210689.481147",
            "MinimumSwap": "4806.421379",
            "BigValueThreshold": "480642137.896229",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "480642.137896",
            "MinimumSwapFee": "2403.210689",
            "anyToken": {
              "address": "0x0ee249311cd882ca360567960ce9559f5d4184c6",
              "name": "LPGToken",
              "symbol": "LPG",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://thelittlepiggy.io/logo128.png",
        "chainId": "1",
        "tokenid": "anyLPG",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xd9a8bb44968f35282f1b91c353f77a61baf31a4b": {
        "address": "0xd9a8bb44968f35282f1b91c353f77a61baf31a4b",
        "anyToken": {
          "address": "0x86a298581388bc199e61bfecdca8ea22cf6c0da3",
          "name": "Global Transaction Payment Solution",
          "symbol": "anyGTPS",
          "decimals": 18
        },
        "underlying": {
          "address": "0xd9a8bb44968f35282f1b91c353f77a61baf31a4b",
          "name": "Global Transaction Payment Solution",
          "symbol": "GTPS",
          "decimals": 18
        },
        "destChains": {},
        "logoUrl": "https://img1.wsimg.com/blobby/go/f561f953-0bdd-48bf-a39b-982ecbd1698b/downloads/GTPS%20128x128.png",
        "chainId": "1",
        "tokenid": "anyGTPS",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x0d97fee619d955509e54b046c9992b6e9f5b0630": {
        "address": "0x0d97fee619d955509e54b046c9992b6e9f5b0630",
        "anyToken": {
          "address": "0xa15a269a54f377292b2b0369cf10655b0f76d201",
          "name": "PONY Index",
          "symbol": "anyPONY",
          "decimals": 18
        },
        "underlying": {
          "address": "0x0d97fee619d955509e54b046c9992b6e9f5b0630",
          "name": "PONY Index",
          "symbol": "PONY",
          "decimals": 18
        },
        "destChains": {},
        "price": 1.061,
        "logoUrl": "https://assets.coingecko.com/coins/images/26131/large/pfemoji.png",
        "chainId": "1",
        "tokenid": "anyPONY",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x57b59f981730c6257df57cf6f0d98283749a9eeb": {
        "address": "0x57b59f981730c6257df57cf6f0d98283749a9eeb",
        "anyToken": {
          "address": "0x6562e5791da22950c959b8c2febcfbca15ae520c",
          "name": "Build Token",
          "symbol": "anyBUILD",
          "decimals": 18
        },
        "underlying": {
          "address": "0x57b59f981730c6257df57cf6f0d98283749a9eeb",
          "name": "Build Token",
          "symbol": "BUILD",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x83b27de2fca046fa63a11c7ce7743de33ec58822",
            "underlying": {
              "address": "0x83b27de2fca046fa63a11c7ce7743de33ec58822",
              "name": "Build Token",
              "symbol": "BUILD",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "4347826086.956522",
            "MinimumSwap": "8695.652174",
            "BigValueThreshold": "869565217.391304",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "869565.217391",
            "MinimumSwapFee": "4347.826087",
            "anyToken": {
              "address": "0xee6c005fd7fe5949f2326531eccbdea7d2ee86cf",
              "name": "Build Token",
              "symbol": "anyBUILD",
              "decimals": 18
            }
          }
        },
        "price": 0.00007998,
        "logoUrl": "https://assets.coingecko.com/coins/images/26533/large/BUILD.png",
        "chainId": "1",
        "tokenid": "anyBUILD",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x231cc03e6d8b7368ec2abfafb5f73d216c8af980": {
        "address": "0x231cc03e6d8b7368ec2abfafb5f73d216c8af980",
        "anyToken": {
          "address": "0x152c0f9c32c393961e9803a9467b2194e1c00b21",
          "name": "Helix",
          "symbol": "anyHELIX",
          "decimals": 18
        },
        "underlying": {
          "address": "0x231cc03e6d8b7368ec2abfafb5f73d216c8af980",
          "name": "Helix",
          "symbol": "HELIX",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xfd9b1448a8874b03e6e8476049db259a82569a41",
            "underlying": {
              "address": "0xfd9b1448a8874b03e6e8476049db259a82569a41",
              "name": "Helix",
              "symbol": "HELIX",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "50000000",
            "MinimumSwap": "100",
            "BigValueThreshold": "10000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "10000",
            "MinimumSwapFee": "50",
            "anyToken": {
              "address": "0xa387d1ebd7c6fc182a370fbd1f0cce0da1a865d9",
              "name": "Helix",
              "symbol": "anyHELIX",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://helix.finance/helix-icon-128.png",
        "chainId": "1",
        "tokenid": "anyHELIX",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x8cc0f052fff7ead7f2edcccac895502e884a8a71": {
        "address": "0x8cc0f052fff7ead7f2edcccac895502e884a8a71",
        "anyToken": {
          "address": "0xede1b2f557942c9132c0ea1b7f20a63f711982d4",
          "name": "ARTH Valuecoin",
          "symbol": "anyARTH",
          "decimals": 18
        },
        "underlying": {
          "address": "0x8cc0f052fff7ead7f2edcccac895502e884a8a71",
          "name": "ARTH Valuecoin",
          "symbol": "ARTH",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x85dab10c3ba20148ca60c2eb955e1f8ffe9eaa79",
            "underlying": {
              "address": "0x85dab10c3ba20148ca60c2eb955e1f8ffe9eaa79",
              "name": "ARTH Valuecoin (BSC)",
              "symbol": "ARTH.bsc",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "2427184.466019",
            "MinimumSwap": "4.854369",
            "BigValueThreshold": "485436.893204",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "485.436893",
            "MinimumSwapFee": "2.427184",
            "anyToken": {
              "address": "0x41a4c52925cae8ec45292113b5934e902f920fcd",
              "name": "ARTH Valuecoin (BSC)",
              "symbol": "anyARTH.bsc",
              "decimals": 18
            }
          }
        },
        "price": 2.15,
        "logoUrl": "https://i.imgur.com/8OvswDK.png",
        "chainId": "1",
        "tokenid": "anyARTH",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x559b7bfc48a5274754b08819f75c5f27af53d53b": {
        "address": "0x559b7bfc48a5274754b08819f75c5f27af53d53b",
        "anyToken": {
          "address": "0xa01a715a1465150060ec881fdfbf02186072b5e8",
          "name": "QiDao",
          "symbol": "anyQI",
          "decimals": 18
        },
        "underlying": {
          "address": "0x559b7bfc48a5274754b08819f75c5f27af53d53b",
          "name": "QiDao",
          "symbol": "QI",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xddc3d26baa9d2d979f5e2e42515478bf18f354d5",
            "underlying": {
              "address": "0xddc3d26baa9d2d979f5e2e42515478bf18f354d5",
              "name": "QiDao",
              "symbol": "QI",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "7060152.5",
            "MinimumSwap": "14.12",
            "BigValueThreshold": "1412030.5",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1412.03",
            "MinimumSwapFee": "7.06",
            "anyToken": {
              "address": "0x02a5ad4597f7a090148ed209e022555ec2afdbc7",
              "name": "QiDao",
              "symbol": "anyQI",
              "decimals": 18
            }
          }
        },
        "price": 0.051458,
        "logoUrl": "https://assets.coingecko.com/coins/images/15329/large/qi.png",
        "chainId": "1",
        "tokenid": "anyQI",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x8d6cebd76f18e1558d4db88138e2defb3909fad6": {
        "address": "0x8d6cebd76f18e1558d4db88138e2defb3909fad6",
        "anyToken": {
          "address": "0x4b641f607570b9053035780615f5b56a91f38f90",
          "name": "Mai Stablecoin",
          "symbol": "anyMAI",
          "decimals": 18
        },
        "underlying": {
          "address": "0x8d6cebd76f18e1558d4db88138e2defb3909fad6",
          "name": "Mai Stablecoin",
          "symbol": "MAI",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x3f56e0c36d275367b8c502090edf38289b3dea0d",
            "underlying": {
              "address": "0x3f56e0c36d275367b8c502090edf38289b3dea0d",
              "name": "Mai Stablecoin",
              "symbol": "MAI",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "5000000",
            "MinimumSwap": "12",
            "BigValueThreshold": "750000",
            "SwapFeeRatePerMillion": 0.02,
            "MaximumSwapFee": "1000",
            "MinimumSwapFee": "0.9",
            "anyToken": {
              "address": "0xc412ecccaa35621cfcbada4ce203e3ef78c4114a",
              "name": "Mai Stablecoin",
              "symbol": "anyMAI",
              "decimals": 18
            }
          },
          "1313161554": {
            "address": "0xdfa46478f9e5ea86d57387849598dbfb2e964b02",
            "underlying": {
              "address": "0xdfa46478f9e5ea86d57387849598dbfb2e964b02",
              "name": "Mai Stablecoin",
              "symbol": "MAI",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "5000000",
            "MinimumSwap": "12",
            "BigValueThreshold": "750000",
            "SwapFeeRatePerMillion": 0.02,
            "MaximumSwapFee": "1000",
            "MinimumSwapFee": "0.9",
            "anyToken": {
              "address": "0xc9baa8cfdde8e328787e29b4b078abf2dadc2055",
              "name": "Mai Stablecoin",
              "symbol": "MAI",
              "decimals": 18
            }
          }
        },
        "price": 0.995532,
        "logoUrl": "https://assets.coingecko.com/coins/images/15264/large/mimatic-red.png",
        "chainId": "1",
        "tokenid": "anyMAI",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x37129b96896891e56bc099540fe7d1841005a367": {
        "address": "0x37129b96896891e56bc099540fe7d1841005a367",
        "anyToken": {
          "address": "0xe7619904607fd71e3d95bb6cf2971db4ad6027b5",
          "name": "Spice EUR",
          "symbol": "anyEUROS",
          "decimals": 18
        },
        "underlying": {
          "address": "0x37129b96896891e56bc099540fe7d1841005a367",
          "name": "Spice EUR",
          "symbol": "EUROS",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.200253,
        "logoUrl": "https://static.radioshack.org/images/tokens/EUROS.png",
        "chainId": "1",
        "tokenid": "anyEUROS",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xc87f0a3f3671f7d01278625561dc6e284b62dae9": {
        "address": "0xc87f0a3f3671f7d01278625561dc6e284b62dae9",
        "anyToken": {
          "address": "0x6d8516baabc086c725707c8f630ccd6d7a68ac3f",
          "name": "Inflation Adjusted Spice EUR",
          "symbol": "anyiEUROS",
          "decimals": 18
        },
        "underlying": {
          "address": "0xc87f0a3f3671f7d01278625561dc6e284b62dae9",
          "name": "Inflation Adjusted Spice EUR",
          "symbol": "iEUROS",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.304655,
        "logoUrl": "https://static.radioshack.org/images/tokens/iEUROS.png",
        "chainId": "1",
        "tokenid": "anyiEUROS",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x7051faed0775f664a0286af4f75ef5ed74e02754": {
        "address": "0x7051faed0775f664a0286af4f75ef5ed74e02754",
        "anyToken": {
          "address": "0x827ed6fe802db52970f0e36b709279e606e4f252",
          "name": "ChangeX",
          "symbol": "anyCHANGE",
          "decimals": 18
        },
        "underlying": {
          "address": "0x7051faed0775f664a0286af4f75ef5ed74e02754",
          "name": "ChangeX",
          "symbol": "CHANGE",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x731282fe28e71550dcbca783c40287a1945abb84",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "112416617.784174",
            "MinimumSwap": "224.833236",
            "BigValueThreshold": "22483323.556835",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "22483.323557",
            "MinimumSwapFee": "112.416618",
            "anyToken": {
              "address": "0x731282fe28e71550dcbca783c40287a1945abb84",
              "name": "ChangeX",
              "symbol": "CHANGE",
              "decimals": 18
            }
          }
        },
        "price": 0.01284849,
        "logoUrl": "https://assets.coingecko.com/coins/images/26487/small/ChangeX_logo_19_Jul.png",
        "chainId": "1",
        "tokenid": "anyCHANGE",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x6e98e5401adcb0d76f4debfc3d794b3031f48790": {
        "address": "0x6e98e5401adcb0d76f4debfc3d794b3031f48790",
        "anyToken": {
          "address": "0x91827bc11cb9bbed7f4796393cd664aff9c60f58",
          "name": "Aurix Exchange",
          "symbol": "anyAUR",
          "decimals": 18
        },
        "underlying": {
          "address": "0x6e98e5401adcb0d76f4debfc3d794b3031f48790",
          "name": "Aurix Exchange",
          "symbol": "AUR",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x1a91c7852fb2436ac87671bddf8f720e83ef1fd3",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "2475247.524752",
            "MinimumSwap": "4.950495",
            "BigValueThreshold": "495049.50495",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "495.049505",
            "MinimumSwapFee": "2.475248",
            "anyToken": {
              "address": "0x1a91c7852fb2436ac87671bddf8f720e83ef1fd3",
              "name": "Aurix Exchange",
              "symbol": "AUR",
              "decimals": 18
            }
          }
        },
        "price": 0.919887,
        "logoUrl": "https://assets.coingecko.com/coins/images/14372/small/gold-brown-2.png",
        "chainId": "1",
        "tokenid": "anyAUR-Aurix",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xd528cf2e081f72908e086f8800977df826b5a483": {
        "address": "0xd528cf2e081f72908e086f8800977df826b5a483",
        "anyToken": {
          "address": "0xba40c1589b8120d995e56427cf2ca63bf6a38e7e",
          "name": "Paribus",
          "symbol": "anyPBX",
          "decimals": 18
        },
        "underlying": {
          "address": "0xd528cf2e081f72908e086f8800977df826b5a483",
          "name": "Paribus",
          "symbol": "PBX",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00091809,
        "logoUrl": "https://assets.coingecko.com/coins/images/18410/large/paribus.PNG",
        "chainId": "1",
        "tokenid": "anyPBX",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x808507121b80c02388fad14726482e061b8da827": {
        "address": "0x808507121b80c02388fad14726482e061b8da827",
        "anyToken": {
          "address": "0x0f7efb2e96b9681950f96d3d18ce0bf68d60fd7e",
          "name": "Pendle",
          "symbol": "anyPENDLE",
          "decimals": 18
        },
        "underlying": {
          "address": "0x808507121b80c02388fad14726482e061b8da827",
          "name": "Pendle",
          "symbol": "PENDLE",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.432852,
        "logoUrl": "https://assets.coingecko.com/coins/images/15069/large/Pendle_Logo_Normal-03.png",
        "chainId": "1",
        "tokenid": "anyPENDLE",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x92a42db88ed0f02c71d439e55962ca7cab0168b5": {
        "address": "0x92a42db88ed0f02c71d439e55962ca7cab0168b5",
        "anyToken": {
          "address": "0x0f65f65792d4b286b6f2ff373ee1c1631f71c635",
          "name": "Tardigrades.Finance",
          "symbol": "anyTRDG",
          "decimals": 9
        },
        "underlying": {
          "address": "0x92a42db88ed0f02c71d439e55962ca7cab0168b5",
          "name": "Tardigrades.Finance",
          "symbol": "TRDG",
          "decimals": 9
        },
        "destChains": {
          "56": {
            "address": "0x92a42db88ed0f02c71d439e55962ca7cab0168b5",
            "underlying": {
              "address": "0x92a42db88ed0f02c71d439e55962ca7cab0168b5",
              "name": "Tardigrades.Finance",
              "symbol": "TRDG",
              "decimals": 9
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "1497005988023952095.75",
            "MinimumSwap": "2994011976047.904191",
            "BigValueThreshold": "299401197604790419.15625",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "299401197604790.419159",
            "MinimumSwapFee": "1497005988023.952096",
            "anyToken": {
              "address": "0x068002c95f033ed7ac19f32638a85a6f971ba11f",
              "name": "Tardigrades.Finance",
              "symbol": "anyTRDG",
              "decimals": 9
            }
          }
        },
        "price": 2.326e-12,
        "logoUrl": "https://assets.coingecko.com/coins/images/14371/large/trdg.png",
        "chainId": "1",
        "tokenid": "anyTRDG",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xfad45e47083e4607302aa43c65fb3106f1cd7607": {
        "address": "0xfad45e47083e4607302aa43c65fb3106f1cd7607",
        "anyToken": {
          "address": "0x9b2f9f348425b1ef54c232f87ee7d4d570c1b552",
          "name": "hoge.finance",
          "symbol": "anyHOGE",
          "decimals": 9
        },
        "underlying": {
          "address": "0xfad45e47083e4607302aa43c65fb3106f1cd7607",
          "name": "hoge.finance",
          "symbol": "HOGE",
          "decimals": 9
        },
        "destChains": {
          "56": {
            "address": "0xa4fffc757e8c4f24e7b209c033c123d20983ad40",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "83236224404.860996",
            "MinimumSwap": "166472.44881",
            "BigValueThreshold": "16647244880.972199",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "16647244.880972",
            "MinimumSwapFee": "83236.224405",
            "anyToken": {
              "address": "0xa4fffc757e8c4f24e7b209c033c123d20983ad40",
              "name": "hoge.finance",
              "symbol": "HOGE",
              "decimals": 9
            }
          }
        },
        "price": 0.00001711,
        "logoUrl": "https://assets.coingecko.com/coins/images/14360/large/hoge.jpg",
        "chainId": "1",
        "tokenid": "anyHOGE",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xf460d98a3517b45edd8063dd3847de92a8038aa2": {
        "address": "0xf460d98a3517b45edd8063dd3847de92a8038aa2",
        "anyToken": {
          "address": "0xc8f884783ea40116ac7ee1893858c21d9d438b6c",
          "name": "MetaShooter",
          "symbol": "anyMHUNT",
          "decimals": 18
        },
        "underlying": {
          "address": "0xf460d98a3517b45edd8063dd3847de92a8038aa2",
          "name": "MetaShooter",
          "symbol": "MHUNT",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x2c717059b366714d267039af8f59125cadce6d8c",
            "underlying": {
              "address": "0x2c717059b366714d267039af8f59125cadce6d8c",
              "name": "MetaShooter",
              "symbol": "MHUNT",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "29411764.7",
            "MinimumSwap": "58.823",
            "BigValueThreshold": "5882352.94",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "5882.35",
            "MinimumSwapFee": "29.411",
            "anyToken": {
              "address": "0x70d9b7457c713019f5b9c99bf73fd42084555630",
              "name": "MetaShooter",
              "symbol": "anyMHUNT",
              "decimals": 18
            }
          }
        },
        "price": 0.00933822,
        "logoUrl": "https://assets.coingecko.com/coins/images/24985/large/200x200.png",
        "chainId": "1",
        "tokenid": "anyMHUNT",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x1b308d8c92ee6b06fabafe3c8ed21a9dbbe5facd": {
        "address": "0x1b308d8c92ee6b06fabafe3c8ed21a9dbbe5facd",
        "anyToken": {
          "address": "0x063069f9beab2b01153c87622f6ed8f693ed5215",
          "name": "Cage Token",
          "symbol": "anyC4G3",
          "decimals": 18
        },
        "underlying": {
          "address": "0x1b308d8c92ee6b06fabafe3c8ed21a9dbbe5facd",
          "name": "Cage Token",
          "symbol": "C4G3",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x6e5476e9c14f3a3c3611bfce694f2b3ced81fa4c",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "1000000000",
            "MinimumSwap": "2000",
            "BigValueThreshold": "200000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "200000",
            "MinimumSwapFee": "1000",
            "anyToken": {
              "address": "0x6e5476e9c14f3a3c3611bfce694f2b3ced81fa4c",
              "name": "Cage Token",
              "symbol": "C4G3",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://i.imgur.com/556CzKQ.png",
        "chainId": "1",
        "tokenid": "anyC4G3",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x429881672b9ae42b8eba0e26cd9c73711b891ca5": {
        "address": "0x429881672b9ae42b8eba0e26cd9c73711b891ca5",
        "anyToken": {
          "address": "0xa97588986830962f01e1778b752775d40322827f",
          "name": "PickleToken",
          "symbol": "anyPICKLE",
          "decimals": 18
        },
        "underlying": {
          "address": "0x429881672b9ae42b8eba0e26cd9c73711b891ca5",
          "name": "PickleToken",
          "symbol": "PICKLE",
          "decimals": 18
        },
        "destChains": {},
        "price": 1.11,
        "logoUrl": "https://assets.coingecko.com/coins/images/12435/large/0M4W6Yr6_400x400.jpg",
        "chainId": "1",
        "tokenid": "anyPICKLE",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x95b3497bbcccc46a8f45f5cf54b0878b39f8d96c": {
        "address": "0x95b3497bbcccc46a8f45f5cf54b0878b39f8d96c",
        "anyToken": {
          "address": "0x7a02492baa66b0b8266a6d25bbd6d8ba169296cc",
          "name": "UniDex",
          "symbol": "anyUNIDX",
          "decimals": 18
        },
        "underlying": {
          "address": "0x95b3497bbcccc46a8f45f5cf54b0878b39f8d96c",
          "name": "UniDex",
          "symbol": "UNIDX",
          "decimals": 18
        },
        "destChains": {},
        "price": 4.77,
        "logoUrl": "https://assets.coingecko.com/coins/images/13178/large/unidx.png",
        "chainId": "1",
        "tokenid": "anyUNIDX",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x7659ce147d0e714454073a5dd7003544234b6aa0": {
        "address": "0x7659ce147d0e714454073a5dd7003544234b6aa0",
        "anyToken": {
          "address": "0x1ff9b7dc66bb8cc7819e875b6739409b3a42111b",
          "name": "XCAD Token",
          "symbol": "anyXCAD",
          "decimals": 18
        },
        "underlying": {
          "address": "0x7659ce147d0e714454073a5dd7003544234b6aa0",
          "name": "XCAD Token",
          "symbol": "XCAD",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.810229,
        "logoUrl": "https://assets.coingecko.com/coins/images/15857/large/xcad.PNG",
        "chainId": "1",
        "tokenid": "anyXCAD",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x0f51bb10119727a7e5ea3538074fb341f56b09ad": {
        "address": "0x0f51bb10119727a7e5ea3538074fb341f56b09ad",
        "anyToken": {
          "address": "0xdd98b79b36c77ee1f23f37b61e58a61cc3d5acef",
          "name": "DAO Maker",
          "symbol": "anyDAO",
          "decimals": 18
        },
        "underlying": {
          "address": "0x0f51bb10119727a7e5ea3538074fb341f56b09ad",
          "name": "DAOMaker",
          "symbol": "DAO",
          "decimals": 18
        },
        "destChains": {},
        "price": 1.26,
        "logoUrl": "https://assets.coingecko.com/coins/images/13915/large/4.png",
        "chainId": "1",
        "tokenid": "anyDAO",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x1a4b46696b2bb4794eb3d4c26f1c55f9170fa4c5": {
        "address": "0x1a4b46696b2bb4794eb3d4c26f1c55f9170fa4c5",
        "anyToken": {
          "address": "0x712052f807eafd1a27d7350e33f0a6c500385df4",
          "name": "BitDAO",
          "symbol": "anyBIT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x1a4b46696b2bb4794eb3d4c26f1c55f9170fa4c5",
          "name": "BitDAO",
          "symbol": "BIT",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.523701,
        "logoUrl": "https://assets.coingecko.com/coins/images/17627/small/rI_YptK8.png",
        "chainId": "1",
        "tokenid": "anyBIT",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x33840024177a7daca3468912363bed8b425015c5": {
        "address": "0x33840024177a7daca3468912363bed8b425015c5",
        "anyToken": {
          "address": "0xb2004d3299eaad78951ba8502cc1840655061483",
          "name": "ethbox Token",
          "symbol": "anyEBOX",
          "decimals": 18
        },
        "underlying": {
          "address": "0x33840024177a7daca3468912363bed8b425015c5",
          "name": "ethbox Token",
          "symbol": "EBOX",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x33840024177a7daca3468912363bed8b425015c5",
            "underlying": {
              "address": "0x33840024177a7daca3468912363bed8b425015c5",
              "name": "ethbox Token",
              "symbol": "EBOX",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "736553841.349249",
            "MinimumSwap": "1473.107683",
            "BigValueThreshold": "147310768.26985",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "147310.76827",
            "MinimumSwapFee": "736.553841",
            "anyToken": {
              "address": "0x49a42bb2edbd857f5bcf7f685ea068880a6c1f4b",
              "name": "ethbox Token",
              "symbol": "anyEBOX",
              "decimals": 18
            }
          }
        },
        "price": 0.00469705,
        "logoUrl": "https://assets.coingecko.com/coins/images/14528/large/ebox.png",
        "chainId": "1",
        "tokenid": "anyEBOX",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xa52bffad02b1fe3f86a543a4e81962d3b3bb01a7": {
        "address": "0xa52bffad02b1fe3f86a543a4e81962d3b3bb01a7",
        "anyToken": {
          "address": "0xa0eda2d19211d108772711a3698c69f79673aec8",
          "name": "Duckereum",
          "symbol": "anyDUCKER",
          "decimals": 18
        },
        "underlying": {
          "address": "0xa52bffad02b1fe3f86a543a4e81962d3b3bb01a7",
          "name": "Duckereum",
          "symbol": "DUCKER",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00343819,
        "logoUrl": "https://www.duckereum.com/img/duckereum-coin-128.png",
        "chainId": "1",
        "tokenid": "anyDUCKER",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xa87135285ae208e22068acdbff64b11ec73eaa5a": {
        "address": "0xa87135285ae208e22068acdbff64b11ec73eaa5a",
        "anyToken": {
          "address": "0x496cd9b62b192e04811f38d97b88733f969afd5d",
          "name": "Lunr",
          "symbol": "anyeLunr",
          "decimals": 4
        },
        "underlying": {
          "address": "0xa87135285ae208e22068acdbff64b11ec73eaa5a",
          "name": "Lunr",
          "symbol": "Lunr",
          "decimals": 4
        },
        "destChains": {
          "56": {
            "address": "0x37807d4fbeb84124347b8899dd99616090d3e304",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "35211267.605634",
            "MinimumSwap": "70.422535",
            "BigValueThreshold": "7042253.521127",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "7042.253521",
            "MinimumSwapFee": "35.211268",
            "anyToken": {
              "address": "0x37807d4fbeb84124347b8899dd99616090d3e304",
              "name": "Lunr",
              "symbol": "Lunr",
              "decimals": 4
            }
          }
        },
        "price": 0.142257,
        "logoUrl": "https://assets.coingecko.com/coins/images/19256/large/lunr.png",
        "chainId": "1",
        "tokenid": "anyeLunr",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xcc4304a31d09258b0029ea7fe63d032f52e44efe": {
        "address": "0xcc4304a31d09258b0029ea7fe63d032f52e44efe",
        "anyToken": {
          "address": "0x252d978ecbfea2009e1a842776dab8035a9c38a8",
          "name": "TrustSwap Token",
          "symbol": "anySWAP",
          "decimals": 18
        },
        "underlying": {
          "address": "0xcc4304a31d09258b0029ea7fe63d032f52e44efe",
          "name": "TrustSwapToken",
          "symbol": "SWAP",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.233745,
        "logoUrl": "https://assets.coingecko.com/coins/images/11795/large/Untitled_design-removebg-preview.png",
        "chainId": "1",
        "tokenid": "anySWAP",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x3496b523e5c00a4b4150d6721320cddb234c3079": {
        "address": "0x3496b523e5c00a4b4150d6721320cddb234c3079",
        "anyToken": {
          "address": "0xbcfbad9c58049eefca0f4c17130f560bbb41d444",
          "name": "NUM Token",
          "symbol": "anyNUM",
          "decimals": 18
        },
        "underlying": {
          "address": "0x3496b523e5c00a4b4150d6721320cddb234c3079",
          "name": "NUM Token",
          "symbol": "NUM",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xeceb87cf00dcbf2d4e2880223743ff087a995ad9",
            "underlying": {
              "address": "0xeceb87cf00dcbf2d4e2880223743ff087a995ad9",
              "name": "NUM Token [via ChainPort.io]",
              "symbol": "NUM",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "87459987.055922",
            "MinimumSwap": "174.919974",
            "BigValueThreshold": "17491997.411184",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "17491.997411",
            "MinimumSwapFee": "87.459987",
            "anyToken": {
              "address": "0x2a21bfa388693b3cd3de6045793baffc6c24dcda",
              "name": "NUM Token [via ChainPort.io]",
              "symbol": "anyNUM",
              "decimals": 18
            }
          }
        },
        "price": 0.04521084,
        "logoUrl": "https://assets.coingecko.com/coins/images/20495/large/5J3RAUO2_400x400.jpg",
        "chainId": "1",
        "tokenid": "anyNUM",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xb1f66997a5760428d3a87d68b90bfe0ae64121cc": {
        "address": "0xb1f66997a5760428d3a87d68b90bfe0ae64121cc",
        "anyToken": {
          "address": "0xefbe7ba6382733473c999088f2020b75c4678c76",
          "name": "LuaToken",
          "symbol": "anyLUA",
          "decimals": 18
        },
        "underlying": {
          "address": "0xb1f66997a5760428d3a87d68b90bfe0ae64121cc",
          "name": "LuaToken",
          "symbol": "LUA",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.01630453,
        "logoUrl": "https://assets.coingecko.com/coins/images/12627/large/Screenshot_2020-09-28_at_6.24.59_PM.jpg",
        "chainId": "1",
        "tokenid": "anyLUA",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x50d1c9771902476076ecfc8b2a83ad6b9355a4c9": {
        "address": "0x50d1c9771902476076ecfc8b2a83ad6b9355a4c9",
        "anyToken": {
          "address": "0x8bb9cac776555e0ac707024ed729e5aaceafbe72",
          "name": "FTX Token",
          "symbol": "anyFTT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x50d1c9771902476076ecfc8b2a83ad6b9355a4c9",
          "name": "FTT",
          "symbol": "FTX Token",
          "decimals": 18
        },
        "destChains": {},
        "price": 1.014,
        "logoUrl": "https://assets.coingecko.com/coins/images/9026/large/F.png",
        "chainId": "1",
        "tokenid": "anyFTT",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x476c5e26a75bd202a9683ffd34359c0cc15be0ff": {
        "address": "0x476c5e26a75bd202a9683ffd34359c0cc15be0ff",
        "anyToken": {
          "address": "0xabda031246bd1de3d7b683455506d3d74a0e1a5b",
          "name": "Serum",
          "symbol": "anySRM",
          "decimals": 6
        },
        "underlying": {
          "address": "0x476c5e26a75bd202a9683ffd34359c0cc15be0ff",
          "name": "Serum",
          "symbol": "SRM",
          "decimals": 6
        },
        "destChains": {},
        "price": 0.076171,
        "logoUrl": "https://assets.coingecko.com/coins/images/11970/large/serum-logo.png",
        "chainId": "1",
        "tokenid": "anySRM",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x56694577564fdd577a0abb20fe95c1e2756c2a11": {
        "address": "0x56694577564fdd577a0abb20fe95c1e2756c2a11",
        "anyToken": {
          "address": "0xa4d4b757eed23abbebd747da2c75e9288ff1785b",
          "name": "Wrapped AdaSwap",
          "symbol": "anyASW",
          "decimals": 18
        },
        "underlying": {
          "address": "0x56694577564fdd577a0abb20fe95c1e2756c2a11",
          "name": "Wrapped AdaSwap",
          "symbol": "ASW",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00003098,
        "logoUrl": "https://assets.coingecko.com/coins/images/24453/large/rA5cmPtX_400x400.jpg",
        "chainId": "1",
        "tokenid": "anyASW",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x3235b13708f178af6f110de7177ed5de10c1093d": {
        "address": "0x3235b13708f178af6f110de7177ed5de10c1093d",
        "anyToken": {
          "address": "0x9a058058e14838ef83d25df227c149aff7df8bd3",
          "name": "MNFT",
          "symbol": "anyMNFT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x3235b13708f178af6f110de7177ed5de10c1093d",
          "name": "MNFT",
          "symbol": "MNFT",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x3235b13708f178af6f110de7177ed5de10c1093d",
            "underlying": {
              "address": "0x3235b13708f178af6f110de7177ed5de10c1093d",
              "name": "MongolNFT",
              "symbol": "MNFT",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "258933195235.629208",
            "MinimumSwap": "517866.390471",
            "BigValueThreshold": "51786639047.125841",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "51786639.047126",
            "MinimumSwapFee": "258933.195236",
            "anyToken": {
              "address": "0xbad3fe9b36780e187455c57ba68ca1c2e43bbc9b",
              "name": "MongolNFT",
              "symbol": "anyMNFT",
              "decimals": 18
            }
          }
        },
        "price": 0.00001955,
        "logoUrl": "https://assets.coingecko.com/coins/images/23718/large/swI93LWg_400x400.jpg",
        "chainId": "1",
        "tokenid": "anyMNFT-Mongo",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xcf0c122c6b73ff809c693db761e7baebe62b6a2e": {
        "address": "0xcf0c122c6b73ff809c693db761e7baebe62b6a2e",
        "anyToken": {
          "address": "0xce3b8897be065315c8eab816a31153025ae428be",
          "name": "FLOKI",
          "symbol": "anyFLOKI",
          "decimals": 9
        },
        "underlying": {
          "address": "0xcf0c122c6b73ff809c693db761e7baebe62b6a2e",
          "name": "FLOKI",
          "symbol": "FLOKI",
          "decimals": 9
        },
        "destChains": {
          "56": {
            "address": "0xfb5b838b6cfeedc2873ab27866079ac55363d37e",
            "underlying": {
              "address": "0xfb5b838b6cfeedc2873ab27866079ac55363d37e",
              "name": "FLOKI",
              "symbol": "FLOKI",
              "decimals": 9
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "130072840790.842872",
            "MinimumSwap": "260145.681582",
            "BigValueThreshold": "26014568158.168574",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "26014568.158169",
            "MinimumSwapFee": "130072.840791",
            "anyToken": {
              "address": "0xb83003f7fe62870e2e9ed57323ed02630d971525",
              "name": "FLOKI",
              "symbol": "anyFLOKI",
              "decimals": 9
            }
          }
        },
        "price": 0.00000668,
        "logoUrl": "https://assets.coingecko.com/coins/images/16746/large/PNG_image.png",
        "chainId": "1",
        "tokenid": "anyFLOKI",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x4a621d9f1b19296d1c0f87637b3a8d4978e9bf82": {
        "address": "0x4a621d9f1b19296d1c0f87637b3a8d4978e9bf82",
        "anyToken": {
          "address": "0x701e67fa3121343c866dfe69ae98534265b65bfa",
          "name": "CyberFM Radio",
          "symbol": "anyCYFM",
          "decimals": 18
        },
        "underlying": {
          "address": "0x4a621d9f1b19296d1c0f87637b3a8d4978e9bf82",
          "name": "CyberFM Radio",
          "symbol": "CYFM",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x9001fd53504f7bf253296cffadf5b6030cd61abb",
            "underlying": {
              "address": "0x9001fd53504f7bf253296cffadf5b6030cd61abb",
              "name": "CyberFM Radio",
              "symbol": "CYFM",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "277746917009221197648",
            "MinimumSwap": "555493834018442.395294",
            "BigValueThreshold": "55549383401844239528",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "55549383401844239.527344",
            "MinimumSwapFee": "277746917009221.197647",
            "anyToken": {
              "address": "0xfb9db098a2574c2bbf45259e1028190f1e652eaa",
              "name": "CyberFM Radio",
              "symbol": "anyCYFM",
              "decimals": 18
            }
          }
        },
        "price": 2e-17,
        "logoUrl": "https://assets.coingecko.com/coins/images/5476/large/cyberfm.png",
        "chainId": "1",
        "tokenid": "anyCYFM",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b": {
        "address": "0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b",
        "anyToken": {
          "address": "0xcfa8f0aed0414a98f99f1ea29ddf23f6e1370c13",
          "name": "Convex Token",
          "symbol": "anyCVX",
          "decimals": 18
        },
        "underlying": {
          "address": "0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b",
          "name": "Convex Token",
          "symbol": "CVX",
          "decimals": 18
        },
        "destChains": {},
        "price": 4.5,
        "logoUrl": "https://assets.coingecko.com/coins/images/15585/large/convex.png",
        "chainId": "1",
        "tokenid": "anyCVX",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xe7ae6d0c56cacaf007b7e4d312f9af686a9e9a04": {
        "address": "0xe7ae6d0c56cacaf007b7e4d312f9af686a9e9a04",
        "anyToken": {
          "address": "0xd8e473bb0a7090c6a58a0e5ff2d0159b671dc4ab",
          "name": "Vabble",
          "symbol": "anyVAB",
          "decimals": 18
        },
        "underlying": {
          "address": "0xe7ae6d0c56cacaf007b7e4d312f9af686a9e9a04",
          "name": "Vabble",
          "symbol": "VAB",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00107954,
        "logoUrl": "https://assets.coingecko.com/coins/images/17508/large/vabble_tplogo_200_x_200.png",
        "chainId": "1",
        "tokenid": "anyVAB",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x1c7ede23b1361acc098a1e357c9085d131b34a01": {
        "address": "0x1c7ede23b1361acc098a1e357c9085d131b34a01",
        "anyToken": {
          "address": "0xaa3f69d6113f5be55ec65e0b3ea48f834e41e16d",
          "name": "Shine",
          "symbol": "anySHN",
          "decimals": 18
        },
        "underlying": {
          "address": "0x1c7ede23b1361acc098a1e357c9085d131b34a01",
          "name": "Shine",
          "symbol": "SHN",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00405584,
        "logoUrl": "https://assets.coingecko.com/coins/images/20555/large/SHN-Logo.png",
        "chainId": "1",
        "tokenid": "anySHN",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x3c4008eca800ec1283e4cf500e68d06bfabc00a8": {
        "address": "0x3c4008eca800ec1283e4cf500e68d06bfabc00a8",
        "anyToken": {
          "address": "0xbbfe0b60de96a189bf09079de86a2db7bf0c7883",
          "name": "History Dao Token",
          "symbol": "anyHAO",
          "decimals": 18
        },
        "underlying": {
          "address": "0x3c4008eca800ec1283e4cf500e68d06bfabc00a8",
          "name": "History Dao Token",
          "symbol": "HAO",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x22d224ce83103a8d218b1e6cc2a38bd94f60f066",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "423160415.882057",
            "MinimumSwap": "846.320832",
            "BigValueThreshold": "84632083.176411",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "84632.083176",
            "MinimumSwapFee": "423.160416",
            "anyToken": {
              "address": "0x22d224ce83103a8d218b1e6cc2a38bd94f60f066",
              "name": "History Dao Token",
              "symbol": "HAO",
              "decimals": 18
            }
          }
        },
        "price": 0.00301536,
        "logoUrl": "https://assets.coingecko.com/coins/images/27318/large/5961657012978_.pic.jpg",
        "chainId": "1",
        "tokenid": "anyHAO",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xde5ed76e7c05ec5e4572cfc88d1acea165109e44": {
        "address": "0xde5ed76e7c05ec5e4572cfc88d1acea165109e44",
        "anyToken": {
          "address": "0x5fd564518a71aab9b1d0ac6d5825bbbc46a5845e",
          "name": "DEUS",
          "symbol": "anyDEUS",
          "decimals": 18
        },
        "underlying": {
          "address": "0xde5ed76e7c05ec5e4572cfc88d1acea165109e44",
          "name": "DEUS",
          "symbol": "DEUS",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xde5ed76e7c05ec5e4572cfc88d1acea165109e44",
            "underlying": {
              "address": "0xde5ed76e7c05ec5e4572cfc88d1acea165109e44",
              "name": "DEUS",
              "symbol": "DEUS",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "56954.094999",
            "MinimumSwap": "0.113908",
            "BigValueThreshold": "11390.819",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "11.390819",
            "MinimumSwapFee": "0.056954",
            "anyToken": {
              "address": "0xc0dd739c4a190a45c91ed3ec587b1f3fc4d31ba6",
              "name": "DEUS",
              "symbol": "anyDEUS",
              "decimals": 18
            }
          }
        },
        "price": 38.67,
        "logoUrl": "https://assets.coingecko.com/coins/images/18778/large/DEUS-logo-200x200.png",
        "chainId": "1",
        "tokenid": "anyDEUS",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xafcdd4f666c84fed1d8bd825aa762e3714f652c9": {
        "address": "0xafcdd4f666c84fed1d8bd825aa762e3714f652c9",
        "anyToken": {
          "address": "0xf7fbaa0328c5faee1a0b2155065804f4077284e1",
          "name": "Vita Inu",
          "symbol": "anyVINU",
          "decimals": 18
        },
        "underlying": {
          "address": "0xafcdd4f666c84fed1d8bd825aa762e3714f652c9",
          "name": "Vita Inu",
          "symbol": "VINU",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xfebe8c1ed424dbf688551d4e2267e7a53698f0aa",
            "underlying": {
              "address": "0xfebe8c1ed424dbf688551d4e2267e7a53698f0aa",
              "name": "Vita Inu",
              "symbol": "VINU",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "268744961031980.65036",
            "MinimumSwap": "537489922.063961",
            "BigValueThreshold": "53748992206396.130074",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "53748992206.39613",
            "MinimumSwapFee": "268744961.031981",
            "anyToken": {
              "address": "0xe2be59436da627be05a4ea6ccf4a4ebdcbb24d84",
              "name": "Vita Inu",
              "symbol": "anyVINU",
              "decimals": 18
            }
          }
        },
        "price": 9.74e-9,
        "logoUrl": "https://assets.coingecko.com/coins/images/20594/large/vita-inu-head-wallet-icon-transparent.png",
        "chainId": "1",
        "tokenid": "anyVINU",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x8dbd43048e60e3c9a602de7f5f1f1c8a9c6ffee1": {
        "address": "0x8dbd43048e60e3c9a602de7f5f1f1c8a9c6ffee1",
        "anyToken": {
          "address": "0x0c8af3016eec474f79373be89f534073bb33fe4d",
          "name": "GoldMint",
          "symbol": "anyGLDM",
          "decimals": 18
        },
        "underlying": {
          "address": "0x8dbd43048e60e3c9a602de7f5f1f1c8a9c6ffee1",
          "name": "GoldMint",
          "symbol": "GLDM",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x71b0191635b30fb6412a2f8b721ca1e904eb40df",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "3053.17408",
            "MinimumSwap": "0.006106",
            "BigValueThreshold": "610.634816",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "0.610635",
            "MinimumSwapFee": "0.003053",
            "anyToken": {
              "address": "0x71b0191635b30fb6412a2f8b721ca1e904eb40df",
              "name": "GoldMint",
              "symbol": "GLDM",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://cdn.discordapp.com/attachments/1002628948410241024/1026554592110059571/GM_leaf.png",
        "chainId": "1",
        "tokenid": "anyGLDM",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x7cbcfd88c952a1f5eaa954945ebc7ed8f1015ec0": {
        "address": "0x7cbcfd88c952a1f5eaa954945ebc7ed8f1015ec0",
        "anyToken": {
          "address": "0x4187252a32a32e4d44c1bd15bda675dc92e42df5",
          "name": "Silver Mint",
          "symbol": "anySLVM",
          "decimals": 18
        },
        "underlying": {
          "address": "0x7cbcfd88c952a1f5eaa954945ebc7ed8f1015ec0",
          "name": "Silver Mint",
          "symbol": "SLVM",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x8fe6545381e88de4df2f22f8b6b74e0060654f8a",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "404478.384675",
            "MinimumSwap": "0.808957",
            "BigValueThreshold": "80895.676935",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "80.895677",
            "MinimumSwapFee": "0.404478",
            "anyToken": {
              "address": "0x8fe6545381e88de4df2f22f8b6b74e0060654f8a",
              "name": "Silver Mint",
              "symbol": "SLVM",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://cdn.discordapp.com/attachments/1015301882324987945/1023049902281982052/unknown.png",
        "chainId": "1",
        "tokenid": "anySLVM",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xe61776305003d700fbc8318da97806032a3b08ed": {
        "address": "0xe61776305003d700fbc8318da97806032a3b08ed",
        "anyToken": {
          "address": "0x9889799f43a2eb9b34fbdd83bb840eaa42462a77",
          "name": "GoldMint Shares",
          "symbol": "anySGLDM",
          "decimals": 18
        },
        "underlying": {
          "address": "0xe61776305003d700fbc8318da97806032a3b08ed",
          "name": "GoldMint Shares",
          "symbol": "SGLDM",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xecc559d2bcc83f3f2110416b4911e082729e8b56",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "4109814.236396",
            "MinimumSwap": "8.219628",
            "BigValueThreshold": "821962.847279",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "821.962847",
            "MinimumSwapFee": "4.109814",
            "anyToken": {
              "address": "0xecc559d2bcc83f3f2110416b4911e082729e8b56",
              "name": "GoldMint Shares",
              "symbol": "SGLDM",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://cdn.discordapp.com/attachments/958056651292819526/958123950490132600/gms3.png",
        "chainId": "1",
        "tokenid": "anySGLDM",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x6f66f3012e0210babd2384e31863c30f70356237": {
        "address": "0x6f66f3012e0210babd2384e31863c30f70356237",
        "anyToken": {
          "address": "0x9a046925f592513a9ca9ed214112e373f7971023",
          "name": "LasMeta",
          "symbol": "anyLASM",
          "decimals": 18
        },
        "underlying": {
          "address": "0x6f66f3012e0210babd2384e31863c30f70356237",
          "name": "LasMeta",
          "symbol": "LASM",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xbc2e674dfe0d885081f429b296d7ae2b784d1198",
            "underlying": {
              "address": "0xbc2e674dfe0d885081f429b296d7ae2b784d1198",
              "name": "LasMeta",
              "symbol": "LASM",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "80645161.290322",
            "MinimumSwap": "161.290322",
            "BigValueThreshold": "16129032.258064",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "16129.032258",
            "MinimumSwapFee": "80.645161",
            "anyToken": {
              "address": "0x552c8037a765e2dd62babdb8250380962244e75d",
              "name": "LasMeta",
              "symbol": "anyLASM",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://lasmeta.io/lasmeta-logo.png",
        "chainId": "1",
        "tokenid": "anyLASM",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x783c68814126b66b9242c4c6538ae47db5e33169": {
        "address": "0x783c68814126b66b9242c4c6538ae47db5e33169",
        "anyToken": {
          "address": "0x26eaf31489662587232990fc6981026d4175cd40",
          "name": "RODO",
          "symbol": "anyRODO",
          "decimals": 2
        },
        "underlying": {
          "address": "0x783c68814126b66b9242c4c6538ae47db5e33169",
          "name": "RODO",
          "symbol": "RODO",
          "decimals": 2
        },
        "destChains": {},
        "logoUrl": "https://rodotoken.com/wp-content/uploads/2022/10/RODO-TOKEN-LOGO-128x128-1.png",
        "chainId": "1",
        "tokenid": "anyRODO",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x286c0936c7eaf6651099ab5dab9ee5a6cb5d229d": {
        "address": "0x286c0936c7eaf6651099ab5dab9ee5a6cb5d229d",
        "anyToken": {
          "address": "0x63f366892b53ee0f0e31d6590ea191ae9a0a62e9",
          "name": "Kwikswap",
          "symbol": "anyKWIK",
          "decimals": 18
        },
        "underlying": {
          "address": "0x286c0936c7eaf6651099ab5dab9ee5a6cb5d229d",
          "name": "Kwikswap",
          "symbol": "KWIK",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00278364,
        "logoUrl": "https://s2.coinmarketcap.com/static/img/coins/64x64/10101.png",
        "chainId": "1",
        "tokenid": "anyKWIK",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xe2fc859c838f31c1450448f4fed92e3284ae49e9": {
        "address": "0xe2fc859c838f31c1450448f4fed92e3284ae49e9",
        "anyToken": {
          "address": "0x34290390c2fdedb968e7128af26a98e731b781d0",
          "name": "Jigen",
          "symbol": "anyJIG",
          "decimals": 18
        },
        "underlying": {
          "address": "0xe2fc859c838f31c1450448f4fed92e3284ae49e9",
          "name": "Jigen",
          "symbol": "JIG",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x1a122941ff2ef376f065e0404a0a9cecbfe94551",
            "underlying": {
              "address": "0x1a122941ff2ef376f065e0404a0a9cecbfe94551",
              "name": "Jigen",
              "symbol": "JIG",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "2906976744.186046",
            "MinimumSwap": "5813.953488",
            "BigValueThreshold": "581395348.837209",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "581395.348837",
            "MinimumSwapFee": "2906.976744",
            "anyToken": {
              "address": "0x07ee3dbf87c3c25994717bbee854ddc354f81e9d",
              "name": "Jigen",
              "symbol": "anyJIG",
              "decimals": 18
            }
          }
        },
        "price": 0.00223025,
        "logoUrl": "https://assets.coingecko.com/coins/images/21716/large/MbfJ2kSM_400x400.png",
        "chainId": "1",
        "tokenid": "anyJIG",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x5150956e082c748ca837a5dfa0a7c10ca4697f9c": {
        "address": "0x5150956e082c748ca837a5dfa0a7c10ca4697f9c",
        "anyToken": {
          "address": "0x5cf33b95b162d0ac497e4bf47d757ecb452d9062",
          "name": "Zeedex",
          "symbol": "anyZDEX",
          "decimals": 18
        },
        "underlying": {
          "address": "0x5150956e082c748ca837a5dfa0a7c10ca4697f9c",
          "name": "Zeedex",
          "symbol": "ZDEX",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.095054,
        "logoUrl": "https://assets.coingecko.com/coins/images/12412/large/Untitled-design-4.png",
        "chainId": "1",
        "tokenid": "anyZDEX",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x9528cceb678b90daf02ca5ca45622d5cbaf58a30": {
        "address": "0x9528cceb678b90daf02ca5ca45622d5cbaf58a30",
        "anyToken": {
          "address": "0xf545cd9ec67770748c3c2bdb4b7511a86f00af0a",
          "name": "GoCryptoMe",
          "symbol": "anyGCME",
          "decimals": 9
        },
        "underlying": {
          "address": "0x9528cceb678b90daf02ca5ca45622d5cbaf58a30",
          "name": "GoCryptoMe",
          "symbol": "GCME",
          "decimals": 9
        },
        "destChains": {
          "56": {
            "address": "0x9528cceb678b90daf02ca5ca45622d5cbaf58a30",
            "underlying": {
              "address": "0x9528cceb678b90daf02ca5ca45622d5cbaf58a30",
              "name": "Go Crypto Me",
              "symbol": "GCME",
              "decimals": 9
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "1116936555.769759",
            "MinimumSwap": "2233.873112",
            "BigValueThreshold": "223387311.153952",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "223387.311154",
            "MinimumSwapFee": "1116.936556",
            "anyToken": {
              "address": "0x6740e5fd93161af01ceaf18effcba489b5de0997",
              "name": "Go Crypto Me",
              "symbol": "anyGCME",
              "decimals": 9
            }
          }
        },
        "price": 0.00149882,
        "logoUrl": "https://assets.coingecko.com/coins/images/23946/large/WDBxWle.png",
        "chainId": "1",
        "tokenid": "anyGCME",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xd6123271f980d966b00ca4fca6c2c021f05e2e73": {
        "address": "0xd6123271f980d966b00ca4fca6c2c021f05e2e73",
        "anyToken": {
          "address": "0x5cdd7cd69cedb9b56b8ca47f844a0de16d8b5761",
          "name": "Anyswap Wrapped CHESS",
          "symbol": "anyCHESS",
          "decimals": 18
        },
        "underlying": {
          "address": "0xd6123271f980d966b00ca4fca6c2c021f05e2e73",
          "name": "Tranchess DAO Token",
          "symbol": "CHESS",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x20de22029ab63cf9a7cf5feb2b737ca1ee4c82a6",
            "underlying": {
              "address": "0x20de22029ab63cf9a7cf5feb2b737ca1ee4c82a6",
              "name": "Chess",
              "symbol": "CHESS",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "0",
            "liquidityType": "INIT",
            "MaximumSwap": "19537355.42357",
            "MinimumSwap": "39.074711",
            "BigValueThreshold": "3907471.084714",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "3907.471085",
            "MinimumSwapFee": "19.537355",
            "anyToken": {
              "address": "0x3c2b521be49aae9208f4f9766a63216afaced4d7",
              "name": "Anyswap Wrapped CHESS",
              "symbol": "anyCHESS",
              "decimals": 18
            }
          }
        },
        "price": 0.177997,
        "logoUrl": "https://assets.coingecko.com/coins/images/16964/large/logo_transparent_bg_200x200.png",
        "chainId": "1",
        "tokenid": "anyCHESS",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xb683d83a532e2cb7dfa5275eed3698436371cc9f": {
        "address": "0xb683d83a532e2cb7dfa5275eed3698436371cc9f",
        "anyToken": {
          "address": "0x79820e2b9c55574504b1ef5b606dc81c526f3cfa",
          "name": "BTU Protocol",
          "symbol": "anyBTU",
          "decimals": 18
        },
        "underlying": {
          "address": "0xb683d83a532e2cb7dfa5275eed3698436371cc9f",
          "name": "BTU Protocol",
          "symbol": "BTU",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.119982,
        "logoUrl": "https://assets.coingecko.com/coins/images/3697/large/btuprotocol.jpeg",
        "chainId": "1",
        "tokenid": "anyBTU",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x16594930d16f3970e1a4317c6016555cb2e7b7fc": {
        "address": "0x16594930d16f3970e1a4317c6016555cb2e7b7fc",
        "anyToken": {
          "address": "0xed28b1890fbb4aa9ded528c1034fed278ff68f5d",
          "name": "TokenBot",
          "symbol": "anyTKB",
          "decimals": 18
        },
        "underlying": {
          "address": "0x16594930d16f3970e1a4317c6016555cb2e7b7fc",
          "name": "TokenBot",
          "symbol": "TKB",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x5655592badf214bbd520187de0a766cd7bd7c712",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "6250000000",
            "MinimumSwap": "12500",
            "BigValueThreshold": "1250000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1250000",
            "MinimumSwapFee": "6250",
            "anyToken": {
              "address": "0x5655592badf214bbd520187de0a766cd7bd7c712",
              "name": "TokenBot",
              "symbol": "TKB",
              "decimals": 18
            }
          }
        },
        "price": 0.0011035,
        "logoUrl": "https://assets.coingecko.com/coins/images/27106/large/tokenbot-logo-icon.png",
        "chainId": "1",
        "tokenid": "anyTKB",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xda4dd9586d27202a338843dd6b9824d267006783": {
        "address": "0xda4dd9586d27202a338843dd6b9824d267006783",
        "anyToken": {
          "address": "0xa774e0bbb5dfb3973a083a756cbf28429d1dfe42",
          "name": "Echain Token",
          "symbol": "anyECT",
          "decimals": 9
        },
        "underlying": {
          "address": "0xda4dd9586d27202a338843dd6b9824d267006783",
          "name": "Echain Token",
          "symbol": "ECT",
          "decimals": 9
        },
        "destChains": {},
        "price": 0.0057702,
        "logoUrl": "https://assets.coingecko.com/coins/images/28133/large/1666808362379-8226c3c3451e049842cfe21d65cb91ad.png",
        "chainId": "1",
        "tokenid": "anyECT",
        "version": "UNDERLYINGV2",
        "router": "0x765277eebeca2e31912c9946eae1021199b39c61",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x7a73839bd0e5cded853cb01aa9773f8989381065": {
        "address": "0x7a73839bd0e5cded853cb01aa9773f8989381065",
        "anyToken": {
          "address": "0x5fe67350e9d2aab2570ff86b48509a18cfd7b08c",
          "name": "UpBots Token",
          "symbol": "anyUBXN",
          "decimals": 18
        },
        "underlying": {
          "address": "0x7a73839bd0e5cded853cb01aa9773f8989381065",
          "name": "UpBots Token",
          "symbol": "UBXN",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xc822bb8f72c212f0f9477ab064f3bdf116c193e6",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "3065040152.025991",
            "MinimumSwap": "6130.080304",
            "BigValueThreshold": "613008030.405198",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "613008.030405",
            "MinimumSwapFee": "3065.040152",
            "anyToken": {
              "address": "0xc822bb8f72c212f0f9477ab064f3bdf116c193e6",
              "name": "UpBots Token",
              "symbol": "UBXN",
              "decimals": 18
            }
          }
        },
        "price": 0.00229441,
        "logoUrl": "https://assets.coingecko.com/coins/images/12476/large/UBXT.png",
        "chainId": "1",
        "tokenid": "anyUBXN",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xba41ddf06b7ffd89d1267b5a93bfef2424eb2003": {
        "address": "0xba41ddf06b7ffd89d1267b5a93bfef2424eb2003",
        "anyToken": {
          "address": "0x70fb6418bbb2863e341286b72535bd4828ec863a",
          "name": "Mythos",
          "symbol": "anyMYTH",
          "decimals": 18
        },
        "underlying": {
          "address": "0xba41ddf06b7ffd89d1267b5a93bfef2424eb2003",
          "name": "Mythos",
          "symbol": "MYTH",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xeef36c49ee438526d4cc0945ebfded507113e7bc",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "5304668.320309",
            "MinimumSwap": "10.609337",
            "BigValueThreshold": "1060933.664062",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1060.933664",
            "MinimumSwapFee": "5.304668",
            "anyToken": {
              "address": "0xeef36c49ee438526d4cc0945ebfded507113e7bc",
              "name": "Mythos",
              "symbol": "MYTH",
              "decimals": 18
            }
          }
        },
        "price": 0.540918,
        "logoUrl": "https://assets.coingecko.com/coins/images/28045/large/Mythos_Logos_200x200.png",
        "chainId": "1",
        "tokenid": "anyMYTH",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x8a9c67fee641579deba04928c4bc45f66e26343a": {
        "address": "0x8a9c67fee641579deba04928c4bc45f66e26343a",
        "anyToken": {
          "address": "0xd145261dd80bc5388ea8f437d503897060410f1c",
          "name": "Jarvis Reward Token",
          "symbol": "anyJRT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x8a9c67fee641579deba04928c4bc45f66e26343a",
          "name": "Jarvis Reward Token",
          "symbol": "JRT",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x414f9e74ba3a9d0acce65182809492f41ac671e0",
            "underlying": {
              "address": "0x414f9e74ba3a9d0acce65182809492f41ac671e0",
              "name": "Jarvis Reward Token",
              "symbol": "JRT",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "339197607.707112",
            "MinimumSwap": "678.395215",
            "BigValueThreshold": "67839521.541422",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "67839.521541",
            "MinimumSwapFee": "339.197608",
            "anyToken": {
              "address": "0xee5d37a644b5bea2f7e884dc95acb63889c219bf",
              "name": "Jarvis Reward Token",
              "symbol": "anyJRT",
              "decimals": 18
            }
          }
        },
        "price": 0.00985828,
        "logoUrl": "https://assets.coingecko.com/coins/images/10390/large/cfeii0y.png",
        "chainId": "1",
        "tokenid": "anyJRT",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xef53462838000184f35f7d991452e5f25110b207": {
        "address": "0xef53462838000184f35f7d991452e5f25110b207",
        "anyToken": {
          "address": "0xac5f7b3220f8cc21abbfca952e30193a27db3a3a",
          "name": "Knit Finance",
          "symbol": "anyKFT",
          "decimals": 18
        },
        "underlying": {
          "address": "0xef53462838000184f35f7d991452e5f25110b207",
          "name": "KnitFinance",
          "symbol": "KFT",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x1b41a1ba7722e6431b1a782327dbe466fe1ee9f9",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "1694421287.353517",
            "MinimumSwap": "3388.842575",
            "BigValueThreshold": "338884257.470703",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "338884.257471",
            "MinimumSwapFee": "1694.421287",
            "anyToken": {
              "address": "0x1b41a1ba7722e6431b1a782327dbe466fe1ee9f9",
              "name": "KnitFinance",
              "symbol": "KFT",
              "decimals": 18
            }
          }
        },
        "price": 0.00519682,
        "logoUrl": "https://assets.coingecko.com/coins/images/15632/large/knit.jpg",
        "chainId": "1",
        "tokenid": "anyKFT",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x4fbb350052bca5417566f188eb2ebce5b19bc964": {
        "address": "0x4fbb350052bca5417566f188eb2ebce5b19bc964",
        "anyToken": {
          "address": "0x7b7cafa0d7e72fd10df4e6f855da9e2ca0c5f45d",
          "name": "Rigo Token",
          "symbol": "anyGRG",
          "decimals": 18
        },
        "underlying": {
          "address": "0x4fbb350052bca5417566f188eb2ebce5b19bc964",
          "name": "Rigo Token",
          "symbol": "GRG",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x3d473c3ef4cd4c909b020f48477a2ee2617a8e3c",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "29724041.994126",
            "MinimumSwap": "59.448084",
            "BigValueThreshold": "5944808.398825",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "5944.808399",
            "MinimumSwapFee": "29.724042",
            "anyToken": {
              "address": "0x3d473c3ef4cd4c909b020f48477a2ee2617a8e3c",
              "name": "Rigo Token",
              "symbol": "GRG",
              "decimals": 18
            }
          }
        },
        "price": 2.44,
        "logoUrl": "https://assets.coingecko.com/coins/images/1532/large/Symbol-RigoblockRGB.png",
        "chainId": "1",
        "tokenid": "anyGRG",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x136210a5c79d2435432e443f7155d9d83600ac70": {
        "address": "0x136210a5c79d2435432e443f7155d9d83600ac70",
        "anyToken": {
          "address": "0x03a9bdba596c93797f45e9d90cf1e3a3d8191ef0",
          "name": "Cowrie",
          "symbol": "anyCOWRIE",
          "decimals": 18
        },
        "underlying": {
          "address": "0x136210a5c79d2435432e443f7155d9d83600ac70",
          "name": "Cowrie",
          "symbol": "COWRIE",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xde51d1599339809cafb8194189ce67d5bdca9e9e",
            "underlying": {
              "address": "0xde51d1599339809cafb8194189ce67d5bdca9e9e",
              "name": "Cowrie",
              "symbol": "COWRIE",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "147058823.529412",
            "MinimumSwap": "294.117647",
            "BigValueThreshold": "29411764.705882",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "29411.764706",
            "MinimumSwapFee": "147.058824",
            "anyToken": {
              "address": "0xd085dbcaa60ba560d7c285cf53d410226eb8bec0",
              "name": "Cowrie",
              "symbol": "anyCOWRIE",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://mycowrie.org/assets/images/cowrie-icon-32x32.png",
        "chainId": "1",
        "tokenid": "anyCOWRIE",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x68257309fcdfe1e6edb592da97ac8215fe583908": {
        "address": "0x68257309fcdfe1e6edb592da97ac8215fe583908",
        "anyToken": {
          "address": "0x4492fa5e20899778259f852d2a3ff76e6d074621",
          "name": "Gorilla Inu | Apes Together Strong",
          "symbol": "anyGorilla Inu",
          "decimals": 9
        },
        "underlying": {
          "address": "0x68257309fcdfe1e6edb592da97ac8215fe583908",
          "name": "Gorilla Inu | Apes Together Strong",
          "symbol": "Gorilla Inu",
          "decimals": 9
        },
        "destChains": {
          "56": {
            "address": "0x36c7052fcfb3ab0d99041bf5bf8e4c46f87cf402",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "13544959785014398292",
            "MinimumSwap": "27089919570028.796585",
            "BigValueThreshold": "2708991957002879658.5",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "2708991957002879.658447",
            "MinimumSwapFee": "13544959785014.398293",
            "anyToken": {
              "address": "0x36c7052fcfb3ab0d99041bf5bf8e4c46f87cf402",
              "name": "Gorilla Inu | Apes Together Strong",
              "symbol": "Gorilla Inu",
              "decimals": 9
            }
          }
        },
        "price": 1.75252e-13,
        "logoUrl": "https://assets.coingecko.com/coins/images/19426/large/gorilla_logo.png",
        "chainId": "1",
        "tokenid": "anyGorilla",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x305de070488c8469dfac957226c9c900c4bfba22": {
        "address": "0x305de070488c8469dfac957226c9c900c4bfba22",
        "anyToken": {
          "address": "0x9a161f660053fe279e5c28d43622c480e8aea96a",
          "name": "MORE",
          "symbol": "anyMORE",
          "decimals": 8
        },
        "underlying": {
          "address": "0x305de070488c8469dfac957226c9c900c4bfba22",
          "name": "MORE",
          "symbol": "MORE",
          "decimals": 8
        },
        "destChains": {
          "56": {
            "address": "0xd9bec8af14648056c30a8d0c798aa6e1f787f431",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "494818752.839023",
            "MinimumSwap": "989.637506",
            "BigValueThreshold": "98963750.567805",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "98963.750568",
            "MinimumSwapFee": "494.818753",
            "anyToken": {
              "address": "0xd9bec8af14648056c30a8d0c798aa6e1f787f431",
              "name": "MORE",
              "symbol": "MORE",
              "decimals": 8
            }
          }
        },
        "price": 0.00214095,
        "logoUrl": "https://assets.coingecko.com/coins/images/742/large/1722.png",
        "chainId": "1",
        "tokenid": "anyMORE",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x456125cd98107ae0480ba566f1b716d48ba31453": {
        "address": "0x456125cd98107ae0480ba566f1b716d48ba31453",
        "anyToken": {
          "address": "0xff33523a99340161e4e456166c22be78d8675c07",
          "name": "Ultimate Champions Token",
          "symbol": "anyCHAMP",
          "decimals": 18
        },
        "underlying": {
          "address": "0x456125cd98107ae0480ba566f1b716d48ba31453",
          "name": "Ultimate Champions Token",
          "symbol": "CHAMP",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x7e9ab560d37e62883e882474b096643cab234b65",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "70549723.445084",
            "MinimumSwap": "141.099447",
            "BigValueThreshold": "14109944.689017",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "14109.944689",
            "MinimumSwapFee": "70.549723",
            "anyToken": {
              "address": "0x7e9ab560d37e62883e882474b096643cab234b65",
              "name": "Ultimate Champions Token",
              "symbol": "CHAMP",
              "decimals": 18
            }
          }
        },
        "price": 0.050298,
        "logoUrl": "https://assets.coingecko.com/coins/images/28091/large/champ.png",
        "chainId": "1",
        "tokenid": "anyCHAMP",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x953cd009a490176fceb3a26b9753e6f01645ff28": {
        "address": "0x953cd009a490176fceb3a26b9753e6f01645ff28",
        "anyToken": {
          "address": "0x6ed2b2ac055bd755c3a30fb9c039922859caa0ba",
          "name": "xDEUS",
          "symbol": "anyxDEUS",
          "decimals": 18
        },
        "underlying": {
          "address": "0x953cd009a490176fceb3a26b9753e6f01645ff28",
          "name": "xDEUS",
          "symbol": "xDEUS",
          "decimals": 18
        },
        "destChains": {},
        "logoUrl": "https://raw.githubusercontent.com/firebird-finance/firebird-assets/master/blockchains/fantom/assets/0x953Cd009a490176FcEB3a26b9753e6F01645ff28/logo.png",
        "chainId": "1",
        "tokenid": "anyxDEUS",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xc7ff1e126cc81e816915ff48c940ed9d4e6d05d6": {
        "address": "0xc7ff1e126cc81e816915ff48c940ed9d4e6d05d6",
        "anyToken": {
          "address": "0x0c5f149362ca17eac5d18e6912ab4f5aeabf88e6",
          "name": "Ijas Coin",
          "symbol": "anyIJC",
          "decimals": 18
        },
        "underlying": {
          "address": "0xc7ff1e126cc81e816915ff48c940ed9d4e6d05d6",
          "name": "Ijas Coin",
          "symbol": "IJC",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00005162,
        "logoUrl": "https://assets.coingecko.com/coins/images/14099/large/Ijascode-Flat-Logo-2-24-2021.png",
        "chainId": "1",
        "tokenid": "anyIJC",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xc382e04099a435439725bb40647e2b32dc136806": {
        "address": "0xc382e04099a435439725bb40647e2b32dc136806",
        "anyToken": {
          "address": "0x981e360161a37de663f232e6c800fc6a56fb536a",
          "name": "Cogecoin",
          "symbol": "anyCOGE",
          "decimals": 18
        },
        "underlying": {
          "address": "0xc382e04099a435439725bb40647e2b32dc136806",
          "name": "Cogecoin",
          "symbol": "COGE",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xc8e6af2ecae1841202ff53c0eed1928c590daa28",
            "underlying": {
              "address": "0xc8e6af2ecae1841202ff53c0eed1928c590daa28",
              "name": "Cogecoin",
              "symbol": "COGE",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "124084874053852.835342",
            "MinimumSwap": "248169748.107706",
            "BigValueThreshold": "24816974810770.567068",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "24816974810.770567",
            "MinimumSwapFee": "124084874.053853",
            "anyToken": {
              "address": "0xeaf05a8b9fa8ce439e563fd7ec8e68485215fb00",
              "name": "Cogecoin",
              "symbol": "anyCOGE",
              "decimals": 18
            }
          }
        },
        "price": 1.2407e-8,
        "logoUrl": "https://assets.coingecko.com/coins/images/16791/large/Dog-Logo_1x.png",
        "chainId": "1",
        "tokenid": "anyCOGE",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x37613d64258c0fe09d5e53eecb091da5b8fa8707": {
        "address": "0x37613d64258c0fe09d5e53eecb091da5b8fa8707",
        "anyToken": {
          "address": "0x5650c49d662cb83666ab0fad224453b603179d2a",
          "name": "Pi-Protocol",
          "symbol": "anyPIP",
          "decimals": 18
        },
        "underlying": {
          "address": "0x37613d64258c0fe09d5e53eecb091da5b8fa8707",
          "name": "Pi-Protocol",
          "symbol": "PIP",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x25c30340e6f9f6e521827cf03282943da00c0ece",
            "underlying": {
              "address": "0x25c30340e6f9f6e521827cf03282943da00c0ece",
              "name": "Pi-Protocol",
              "symbol": "PIP",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "5536669.361179",
            "MinimumSwap": "11.073339",
            "BigValueThreshold": "1107333.872236",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1107.333872",
            "MinimumSwapFee": "5.536669",
            "anyToken": {
              "address": "0x7c7ddfe33146d8b27bee97ae42611368b902f655",
              "name": "Pi-Protocol",
              "symbol": "anyPIP",
              "decimals": 18
            }
          }
        },
        "price": 0.435658,
        "logoUrl": "https://assets.coingecko.com/coins/images/27476/large/LOGO_%281%29.png",
        "chainId": "1",
        "tokenid": "anyPIP",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x8f006d1e1d9dc6c98996f50a4c810f17a47fbf19": {
        "address": "0x8f006d1e1d9dc6c98996f50a4c810f17a47fbf19",
        "anyToken": {
          "address": "0x5977d06d455b1c791c753b4ea8153f609017d46d",
          "name": "Pleasure Coin",
          "symbol": "anyNSFW",
          "decimals": 18
        },
        "underlying": {
          "address": "0x8f006d1e1d9dc6c98996f50a4c810f17a47fbf19",
          "name": "Pleasure Coin",
          "symbol": "NSFW",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xaa076b62efc6f357882e07665157a271ab46a063",
            "underlying": {
              "address": "0xaa076b62efc6f357882e07665157a271ab46a063",
              "name": "Pleasure Coin",
              "symbol": "NSFW",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "34616449736.914982",
            "MinimumSwap": "69232.899474",
            "BigValueThreshold": "6923289947.382996",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "6923289.947383",
            "MinimumSwapFee": "34616.449737",
            "anyToken": {
              "address": "0x7b1ac40fb90739b0c54235d47b46f8f528f8fee5",
              "name": "Pleasure Coin",
              "symbol": "anyNSFW",
              "decimals": 18
            }
          }
        },
        "price": 0.0001059,
        "logoUrl": "https://assets.coingecko.com/coins/images/15315/large/pleasurecoin-icon.png",
        "chainId": "1",
        "tokenid": "anyNSFW",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x846c66cf71c43f80403b51fe3906b3599d63336f": {
        "address": "0x846c66cf71c43f80403b51fe3906b3599d63336f",
        "anyToken": {
          "address": "0x3aefd7bca67e9825559efb70eb2eae5ecde8ee12",
          "name": "PumaPay",
          "symbol": "anyPMA",
          "decimals": 18
        },
        "underlying": {
          "address": "0x846c66cf71c43f80403b51fe3906b3599d63336f",
          "name": "PumaPay",
          "symbol": "PMA",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x43a167b15a6f24913a8b4d35488b36ac15d39200",
            "underlying": {
              "address": "0x43a167b15a6f24913a8b4d35488b36ac15d39200",
              "name": "PumaPay",
              "symbol": "PMA",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "48323185464.385812",
            "MinimumSwap": "96646.370929",
            "BigValueThreshold": "9664637092.877162",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "9664637.092877",
            "MinimumSwapFee": "48323.185464",
            "anyToken": {
              "address": "0x9ea24874d225eb5dfa3dffacef14ace9a6691fbf",
              "name": "PumaPay",
              "symbol": "anyPMA",
              "decimals": 18
            }
          }
        },
        "price": 0.00001241,
        "logoUrl": "https://assets.coingecko.com/coins/images/2307/large/pumapay_dark_rounded_256x256.png",
        "chainId": "1",
        "tokenid": "anyPMA",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x745407c86df8db893011912d3ab28e68b62e49b0": {
        "address": "0x745407c86df8db893011912d3ab28e68b62e49b0",
        "anyToken": {
          "address": "0x52c5d8d23b05c9bbcdf22369099350c2be4c5754",
          "name": "MahaDAO",
          "symbol": "anyMAHA",
          "decimals": 18
        },
        "underlying": {
          "address": "0x745407c86df8db893011912d3ab28e68b62e49b0",
          "name": "MahaDAO",
          "symbol": "MAHA",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xce86f7fcd3b40791f63b86c3ea3b8b355ce2685b",
            "underlying": {
              "address": "0xce86f7fcd3b40791f63b86c3ea3b8b355ce2685b",
              "name": "MahaDAO",
              "symbol": "MAHA",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "1500000",
            "MinimumSwap": "2.86",
            "BigValueThreshold": "1100000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "286",
            "MinimumSwapFee": "1.43",
            "anyToken": {
              "address": "0x514f696af215a33bc9856cd39bb4b3f7c04db690",
              "name": "MahaDAO",
              "symbol": "anyMAHA",
              "decimals": 18
            }
          }
        },
        "price": 0.506912,
        "logoUrl": "https://assets.coingecko.com/coins/images/13404/large/MAHA_Token.png",
        "chainId": "1",
        "tokenid": "anyMAHA",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x1bd55090b8878630e57fae6ebd11fd61d16dfc9f": {
        "address": "0x1bd55090b8878630e57fae6ebd11fd61d16dfc9f",
        "anyToken": {
          "address": "0x0acaabc390d7d7134eef4166f61e3e30b362f675",
          "name": "Archloot",
          "symbol": "anyALT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x1bd55090b8878630e57fae6ebd11fd61d16dfc9f",
          "name": "Archloot",
          "symbol": "ALT",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x1bd55090b8878630e57fae6ebd11fd61d16dfc9f",
            "underlying": {
              "address": "0x1bd55090b8878630e57fae6ebd11fd61d16dfc9f",
              "name": "Archloot",
              "symbol": "ALT",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "7104836.11985",
            "MinimumSwap": "14.209672",
            "BigValueThreshold": "1420967.22397",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1420.967224",
            "MinimumSwapFee": "7.104836",
            "anyToken": {
              "address": "0x65c2f753a687307aa9b17dd062cbe95bc0efdd86",
              "name": "Archloot",
              "symbol": "anyALT",
              "decimals": 18
            }
          }
        },
        "price": 0.399775,
        "logoUrl": "https://assets.coingecko.com/coins/images/28919/large/7.png",
        "chainId": "1",
        "tokenid": "anyALT",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xcaa9ed6d7502595b555113d4517668ae24038c8a": {
        "address": "0xcaa9ed6d7502595b555113d4517668ae24038c8a",
        "anyToken": {
          "address": "0x3198bb617c26b45014865ed9bb90aaf81966f65a",
          "name": "Marvin Inu",
          "symbol": "anyMARVIN",
          "decimals": 18
        },
        "underlying": {
          "address": "0xcaa9ed6d7502595b555113d4517668ae24038c8a",
          "name": "Marvin Inu",
          "symbol": "MARVIN",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x71ab195498b6dc1656abb4d9233f83ae5f19495b",
            "underlying": {
              "address": "0x71ab195498b6dc1656abb4d9233f83ae5f19495b",
              "name": "Marvin Inu",
              "symbol": "MARVIN",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "3289473684210.526316",
            "MinimumSwap": "6578947.368421",
            "BigValueThreshold": "657894736842.105263",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "657894736.842105",
            "MinimumSwapFee": "3289473.684211",
            "anyToken": {
              "address": "0xc6dddc1d9c306414dfd2b871e7dac73628513320",
              "name": "Marvin Inu",
              "symbol": "anyMARVIN",
              "decimals": 18
            }
          }
        },
        "price": 0.00000112,
        "logoUrl": "https://assets.coingecko.com/coins/images/22039/large/lVshyCp.png",
        "chainId": "1",
        "tokenid": "anyMARVIN",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x428dca9537116148616a5a3e44035af17238fe9d": {
        "address": "0x428dca9537116148616a5a3e44035af17238fe9d",
        "anyToken": {
          "address": "0x8ee0e43ace57f63a32e0cec573e7f40d6e3932a8",
          "name": "OxAI",
          "symbol": "anyOXAI",
          "decimals": 18
        },
        "underlying": {
          "address": "0x428dca9537116148616a5a3e44035af17238fe9d",
          "name": "OxAI",
          "symbol": "OXAI",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xff2f5e8e796b6739ac9d73b8fe916568abb871b5",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "446827524575.513852",
            "MinimumSwap": "893655.049151",
            "BigValueThreshold": "89365504915.10277",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "89365504.915103",
            "MinimumSwapFee": "446827.524575",
            "anyToken": {
              "address": "0xff2f5e8e796b6739ac9d73b8fe916568abb871b5",
              "name": "OxAI",
              "symbol": "OXAI",
              "decimals": 18
            }
          }
        },
        "price": 0.00000256,
        "logoUrl": "https://assets.coingecko.com/coins/images/28992/large/oxai-logo-200.png",
        "chainId": "1",
        "tokenid": "anyOXAI",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xb8a768cd332e4461fccfbdb1d0292ceffbb2bb8a": {
        "address": "0xb8a768cd332e4461fccfbdb1d0292ceffbb2bb8a",
        "anyToken": {
          "address": "0xb65de64caa720b03e7e681ece761bf09ae5ac5fe",
          "name": "COLLIE INU",
          "symbol": "anyCOLLIE",
          "decimals": 18
        },
        "underlying": {
          "address": "0xb8a768cd332e4461fccfbdb1d0292ceffbb2bb8a",
          "name": "COLLIE INU",
          "symbol": "COLLIE",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x31491c35c094a0336f4859dd94ab9466709dec45",
            "underlying": {
              "address": "0x31491c35c094a0336f4859dd94ab9466709dec45",
              "name": "COLLIE INU",
              "symbol": "COLLIE",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "4237288135593.220339",
            "MinimumSwap": "8474576.271186",
            "BigValueThreshold": "847457627118.644068",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "847457627.118644",
            "MinimumSwapFee": "4237288.135593",
            "anyToken": {
              "address": "0x4c915f7ccda02fa6545b20ca3c7fbdc141d007b5",
              "name": "COLLIE INU",
              "symbol": "anyCOLLIE",
              "decimals": 18
            }
          }
        },
        "price": 3.68625e-7,
        "logoUrl": "https://assets.coingecko.com/coins/images/27365/large/pfp2.jpg",
        "chainId": "1",
        "tokenid": "anyCOLLIE",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xde4ee8057785a7e8e800db58f9784845a5c2cbd6": {
        "address": "0xde4ee8057785a7e8e800db58f9784845a5c2cbd6",
        "anyToken": {
          "address": "0xeb368ae8720ef0ccb6dc1927a7c322065e524dc3",
          "name": "Dexe",
          "symbol": "anyDEXE",
          "decimals": 18
        },
        "underlying": {
          "address": "0xde4ee8057785a7e8e800db58f9784845a5c2cbd6",
          "name": "Dexe",
          "symbol": "DEXE",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x039cb485212f996a9dbb85a9a75d898f94d38da6",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "0",
            "liquidityType": "INIT",
            "MaximumSwap": "1706484.641638",
            "MinimumSwap": "3.412969",
            "BigValueThreshold": "341296.928328",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "341.296928",
            "MinimumSwapFee": "1.706485",
            "anyToken": {
              "address": "0x039cb485212f996a9dbb85a9a75d898f94d38da6",
              "name": "DeXe",
              "symbol": "DEXE",
              "decimals": 18
            }
          }
        },
        "price": 2.51,
        "logoUrl": "https://assets.coingecko.com/coins/images/12713/large/logo_%2814%29.png",
        "chainId": "1",
        "tokenid": "anyDEXE",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x0091371eaef2da68c8dd77975358c91e8570640f": {
        "address": "0x0091371eaef2da68c8dd77975358c91e8570640f",
        "anyToken": {
          "address": "0x39efdf70bab96cfccc4f5c39ca2fc6d0fdaf08ad",
          "name": "Deflationary",
          "symbol": "anyDEF",
          "decimals": 9
        },
        "underlying": {
          "address": "0x0091371eaef2da68c8dd77975358c91e8570640f",
          "name": "Deflationary",
          "symbol": "DEF",
          "decimals": 9
        },
        "destChains": {
          "56": {
            "address": "0x0091371eaef2da68c8dd77975358c91e8570640f",
            "underlying": {
              "address": "0x0091371eaef2da68c8dd77975358c91e8570640f",
              "name": "Deflationary",
              "symbol": "DEF",
              "decimals": 9
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "7142857142857.142857",
            "MinimumSwap": "14285714.285714",
            "BigValueThreshold": "1428571428571.428571",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1428571428.571428",
            "MinimumSwapFee": "7142857.142857",
            "anyToken": {
              "address": "0x33817a75d84dcbba9fe5c6e92ed5c1c5b3101cbe",
              "name": "Deflationary",
              "symbol": "anyDEF",
              "decimals": 9
            }
          }
        },
        "logoUrl": "https://i.ibb.co/q9652j9/Deflationary-DEF-Logo-PNG-128x128.png",
        "chainId": "1",
        "tokenid": "anyDEF",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x9469d013805bffb7d3debe5e7839237e535ec483": {
        "address": "0x9469d013805bffb7d3debe5e7839237e535ec483",
        "anyToken": {
          "address": "0x8885a46c22cfb9ed0a7ace6a3fcc48c974c5d5c7",
          "name": "Darwinia Network Native Token",
          "symbol": "anyRING",
          "decimals": 18
        },
        "underlying": {
          "address": "0x9469d013805bffb7d3debe5e7839237e535ec483",
          "name": "Darwinia Network Native Token",
          "symbol": "RING",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00360632,
        "logoUrl": "https://assets.coingecko.com/coins/images/9443/large/RING.png",
        "chainId": "1",
        "tokenid": "anyRING_Darwinia",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xd7d8f3b8bc8bc48d3acc37879eaba7b85889fa52": {
        "address": "0xd7d8f3b8bc8bc48d3acc37879eaba7b85889fa52",
        "anyToken": {
          "address": "0xb44690c61d373744fb42af1decca6b6b763ade12",
          "name": "CLearingHouse Token",
          "symbol": "anyCLH",
          "decimals": 18
        },
        "underlying": {
          "address": "0xd7d8f3b8bc8bc48d3acc37879eaba7b85889fa52",
          "name": "CLearingHouse Token",
          "symbol": "CLH",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xe25d77fedeeda321006bea62727cc3b67882b14e",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "975619274.334384",
            "MinimumSwap": "1951.238549",
            "BigValueThreshold": "195123854.866877",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "195123.854867",
            "MinimumSwapFee": "975.619274",
            "anyToken": {
              "address": "0xe25d77fedeeda321006bea62727cc3b67882b14e",
              "name": "CLearingHouse Token",
              "symbol": "CLH",
              "decimals": 18
            }
          }
        },
        "price": 0.004133,
        "logoUrl": "https://assets.coingecko.com/coins/images/22389/small/clh_small_logo_png.png",
        "chainId": "1",
        "tokenid": "anyCLH",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xad22f63404f7305e4713ccbd4f296f34770513f4": {
        "address": "0xad22f63404f7305e4713ccbd4f296f34770513f4",
        "anyToken": {
          "address": "0xa9c840f9780815aac7c108eb0ef2804de2300f70",
          "name": "Atomic Wallet Token",
          "symbol": "anyAWC",
          "decimals": 8
        },
        "underlying": {
          "address": "0xad22f63404f7305e4713ccbd4f296f34770513f4",
          "name": "Atomic Wallet Token",
          "symbol": "AWC",
          "decimals": 8
        },
        "destChains": {
          "56": {
            "address": "0x798af7725376765e7f3ca86d5e0cf1beaef19f34",
            "underlying": {
              "address": "0x798af7725376765e7f3ca86d5e0cf1beaef19f34",
              "name": "Atomic Wallet Token",
              "symbol": "AWC",
              "decimals": 8
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "9500501.626486",
            "MinimumSwap": "19.001003",
            "BigValueThreshold": "1900100.325297",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1900.100325",
            "MinimumSwapFee": "9.500502",
            "anyToken": {
              "address": "0xbd1263ed2bab8a8056543fb88785b6ec7f13dad8",
              "name": "Atomic Wallet Token",
              "symbol": "anyAWC",
              "decimals": 8
            }
          }
        },
        "price": 0.327951,
        "logoUrl": "https://assets.coingecko.com/coins/images/7430/small/Atomic_Wallet_Aeron_%281%29.png",
        "chainId": "1",
        "tokenid": "anyAWC",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x5d259e3fbcadef1abfea5582e456bc7f0aebc2a1": {
        "address": "0x5d259e3fbcadef1abfea5582e456bc7f0aebc2a1",
        "anyToken": {
          "address": "0x69a4d8074c06a315f952ef2763cef522f9273a01",
          "name": "Alpha Intelligence",
          "symbol": "any$AI",
          "decimals": 18
        },
        "underlying": {
          "address": "0x5d259e3fbcadef1abfea5582e456bc7f0aebc2a1",
          "name": "Alpha Intelligence",
          "symbol": "$AI",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xa991fa7fa94dfe2e59d58954bce0f0a8e082710f",
            "underlying": {
              "address": "0xa991fa7fa94dfe2e59d58954bce0f0a8e082710f",
              "name": "Alpha Intelligence",
              "symbol": "$AI",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "2504658665.117118",
            "MinimumSwap": "5009.31733",
            "BigValueThreshold": "500931733.023424",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "500931.733023",
            "MinimumSwapFee": "2504.658665",
            "anyToken": {
              "address": "0x0e0423358fce68a0d14d5a49c2b9bc78407dd666",
              "name": "Alpha Intelligence",
              "symbol": "any$AI",
              "decimals": 18
            }
          }
        },
        "price": 0.000958,
        "logoUrl": "https://assets.coingecko.com/coins/images/29127/large/alpha.png",
        "chainId": "1",
        "tokenid": "any$AI",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x97f2d7ba34ee770037ae3989c74926e3253886cd": {
        "address": "0x97f2d7ba34ee770037ae3989c74926e3253886cd",
        "anyToken": {
          "address": "0x497109016a5385a12a850325348dd9d2a50472f1",
          "name": "C9COIN ",
          "symbol": "anyC9C",
          "decimals": 18
        },
        "underlying": {
          "address": "0x97f2d7ba34ee770037ae3989c74926e3253886cd",
          "name": "C9COIN ",
          "symbol": "C9C",
          "decimals": 18
        },
        "destChains": {},
        "logoUrl": "https://www.crmcoins.com.br/c9c.png",
        "chainId": "1",
        "tokenid": "anyC9C",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20": {
        "address": "0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20",
        "anyToken": {
          "address": "0x1515bcb5489c6323de36a5bcd6b81d13a10a7a9a",
          "name": "DuckDaoDime",
          "symbol": "anyDDIM",
          "decimals": 18
        },
        "underlying": {
          "address": "0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20",
          "name": "DuckDaoDime",
          "symbol": "DDIM",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xc9132c76060f6b319764ea075973a650a1a53bc9",
            "underlying": {
              "address": "0xc9132c76060f6b319764ea075973a650a1a53bc9",
              "name": "DuckDaoDime",
              "symbol": "DDIM",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "1851851.851852",
            "MinimumSwap": "3.703704",
            "BigValueThreshold": "370370.37037",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "370.37037",
            "MinimumSwapFee": "1.851852",
            "anyToken": {
              "address": "0xb35d3d23552bb3883b8b31d5bb5df46ff6e63e62",
              "name": "DuckDaoDime",
              "symbol": "anyDDIM",
              "decimals": 18
            }
          }
        },
        "price": 2.02,
        "logoUrl": "https://assets.coingecko.com/coins/images/12146/large/token_DDIM-01.png",
        "chainId": "1",
        "tokenid": "anyDDIM",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xc0ba369c8db6eb3924965e5c4fd0b4c1b91e305f": {
        "address": "0xc0ba369c8db6eb3924965e5c4fd0b4c1b91e305f",
        "anyToken": {
          "address": "0x538af8044e591796c0ac068cc8d8ffc8017138af",
          "name": "DLP Duck Token",
          "symbol": "anyDUCK",
          "decimals": 18
        },
        "underlying": {
          "address": "0xc0ba369c8db6eb3924965e5c4fd0b4c1b91e305f",
          "name": "DLP Duck Token",
          "symbol": "DUCK",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x5d186e28934c6b0ff5fc2fece15d1f34f78cbd87",
            "underlying": {
              "address": "0x5d186e28934c6b0ff5fc2fece15d1f34f78cbd87",
              "name": "DLP Duck Token",
              "symbol": "DUCK",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "195261625.193748",
            "MinimumSwap": "390.52325",
            "BigValueThreshold": "39052325.03875",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "39052.325039",
            "MinimumSwapFee": "195.261625",
            "anyToken": {
              "address": "0x4a6fe8bd826b49b3c26d329dc0aec24877c7826f",
              "name": "DLP Duck Token",
              "symbol": "anyDUCK",
              "decimals": 18
            }
          }
        },
        "price": 0.03264984,
        "logoUrl": "https://assets.coingecko.com/coins/images/13440/large/DLP_Duck_Token.png",
        "chainId": "1",
        "tokenid": "anyDUCK",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xd04e772bc0d591fbd288f2e2a86afa3d3cb647f8": {
        "address": "0xd04e772bc0d591fbd288f2e2a86afa3d3cb647f8",
        "anyToken": {
          "address": "0xc7c3548bb17d4bbb779f39ae0e8061105ab09351",
          "name": "CryptoGPT Token",
          "symbol": "anyGPT",
          "decimals": 18
        },
        "underlying": {
          "address": "0xd04e772bc0d591fbd288f2e2a86afa3d3cb647f8",
          "name": "CryptoGPT Token",
          "symbol": "GPT",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x153c0c947177e631e3dfc594ba28750d3a921fb5",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "1000000000",
            "MinimumSwap": "2000",
            "BigValueThreshold": "200000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "200000",
            "MinimumSwapFee": "1000",
            "anyToken": {
              "address": "0x153c0c947177e631e3dfc594ba28750d3a921fb5",
              "name": "CryptoGPT Token",
              "symbol": "GPT",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://raw.githubusercontent.com/0xSylvia/Images/main/20230303.jpg",
        "chainId": "1",
        "tokenid": "anyGPT",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x2e85ae1c47602f7927bcabc2ff99c40aa222ae15": {
        "address": "0x2e85ae1c47602f7927bcabc2ff99c40aa222ae15",
        "anyToken": {
          "address": "0x52b9d0f46451bd2c610ae6ab1f5312a35a6159e3",
          "name": "Katana Inu",
          "symbol": "anyKATA",
          "decimals": 18
        },
        "underlying": {
          "address": "0x2e85ae1c47602f7927bcabc2ff99c40aa222ae15",
          "name": "Katana Inu",
          "symbol": "KATA",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x6d6ba21e4c4b29ca7bfa1c344ba1e35b8dae7205",
            "underlying": {
              "address": "0x6d6ba21e4c4b29ca7bfa1c344ba1e35b8dae7205",
              "name": "Katana Inu",
              "symbol": "KATA",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "8293937131.95654",
            "MinimumSwap": "16587.874264",
            "BigValueThreshold": "1658787426.391308",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1658787.426391",
            "MinimumSwapFee": "8293.937132",
            "anyToken": {
              "address": "0xbde62749a55cb4ae7999ef16509c78c219458c44",
              "name": "Katana Inu",
              "symbol": "anyKATA",
              "decimals": 18
            }
          }
        },
        "price": 0.00037799,
        "logoUrl": "https://assets.coingecko.com/coins/images/21872/large/Katana_Inu512.png",
        "chainId": "1",
        "tokenid": "anyKATA",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xfa98dac7763790f144063dd3ef0f36c081d249cc": {
        "address": "0xfa98dac7763790f144063dd3ef0f36c081d249cc",
        "anyToken": {
          "address": "0xa5b6834f4ed03c265ce8b625d5ac3995b50f947f",
          "name": "IXI",
          "symbol": "anyIXI",
          "decimals": 18
        },
        "underlying": {
          "address": "0xfa98dac7763790f144063dd3ef0f36c081d249cc",
          "name": "IXI",
          "symbol": "IXI",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x70cab1816dbe5f4d881d902e6a376333de66efdc",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "500000000",
            "MinimumSwap": "1000",
            "BigValueThreshold": "100000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "100000",
            "MinimumSwapFee": "500",
            "anyToken": {
              "address": "0x70cab1816dbe5f4d881d902e6a376333de66efdc",
              "name": "IXI",
              "symbol": "IXI",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://semesta.art/tokenicon/ixi128.png",
        "chainId": "1",
        "tokenid": "anyIXI",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x7da2641000cbb407c329310c461b2cb9c70c3046": {
        "address": "0x7da2641000cbb407c329310c461b2cb9c70c3046",
        "anyToken": {
          "address": "0x24f932df5dc4def776338b3d1279bbaf103d601f",
          "name": "AGI Token",
          "symbol": "anyAGI",
          "decimals": 18
        },
        "underlying": {
          "address": "0x7da2641000cbb407c329310c461b2cb9c70c3046",
          "name": "AGI Token",
          "symbol": "AGI",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x818835503f55283cd51a4399f595e295a9338753",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "151515151.515152",
            "MinimumSwap": "303.030303",
            "BigValueThreshold": "30303030.30303",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "30303.030303",
            "MinimumSwapFee": "151.515151",
            "anyToken": {
              "address": "0x818835503f55283cd51a4399f595e295a9338753",
              "name": "AGI Token",
              "symbol": "AGI",
              "decimals": 18
            }
          }
        },
        "price": 0.126792,
        "logoUrl": "https://assets.coingecko.com/coins/images/29299/large/AGI_logo_200.png",
        "chainId": "1",
        "tokenid": "anyAGI",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x7de91b204c1c737bcee6f000aaa6569cf7061cb7": {
        "address": "0x7de91b204c1c737bcee6f000aaa6569cf7061cb7",
        "anyToken": {
          "address": "0xb0cd94e139f180955e33cfb1b6153f6e90b877c4",
          "name": "Robonomics",
          "symbol": "anyXRT",
          "decimals": 9
        },
        "underlying": {
          "address": "0x7de91b204c1c737bcee6f000aaa6569cf7061cb7",
          "name": "Robonomics",
          "symbol": "XRT",
          "decimals": 9
        },
        "destChains": {},
        "price": 4.07,
        "logoUrl": "https://assets.coingecko.com/coins/images/7024/large/Robonomics-Network-logo.png",
        "chainId": "1",
        "tokenid": "anyXRT",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x4d4d883f920f7c0c36a1be71a02aa0cde2aa22d1": {
        "address": "0x4d4d883f920f7c0c36a1be71a02aa0cde2aa22d1",
        "anyToken": {
          "address": "0x40b85dde9784bbb4529bd58d5636811f67e4c3dd",
          "name": "OPTICASH",
          "symbol": "anyOPCH",
          "decimals": 18
        },
        "underlying": {
          "address": "0x4d4d883f920f7c0c36a1be71a02aa0cde2aa22d1",
          "name": "OPTICASH",
          "symbol": "OPCH",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x4d4d883f920f7c0c36a1be71a02aa0cde2aa22d1",
            "underlying": {
              "address": "0x4d4d883f920f7c0c36a1be71a02aa0cde2aa22d1",
              "name": "OPTICASH",
              "symbol": "OPCH",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "33333333.333333",
            "MinimumSwap": "66.666667",
            "BigValueThreshold": "6666666.666667",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "6666.666667",
            "MinimumSwapFee": "33.333333",
            "anyToken": {
              "address": "0x04234de8673eeadfafe8bff1497a4ded31321935",
              "name": "OPTICASH",
              "symbol": "anyOPCH",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://opticash.io/images/opticash_logo.jpg",
        "chainId": "1",
        "tokenid": "anyOPCH",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x02c3296c6eb50249f290ae596f2be9454bffadab": {
        "address": "0x02c3296c6eb50249f290ae596f2be9454bffadab",
        "anyToken": {
          "address": "0x8d59c725f558a6739285580290b4eab602e2e0e5",
          "name": "Rejuve Token",
          "symbol": "anyRJV",
          "decimals": 6
        },
        "underlying": {
          "address": "0x02c3296c6eb50249f290ae596f2be9454bffadab",
          "name": "Rejuve Token",
          "symbol": "RJV",
          "decimals": 6
        },
        "destChains": {
          "56": {
            "address": "0x1135883a1bc6776bf90c97845adc491922106dfb",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "43478260.869565",
            "MinimumSwap": "86.956522",
            "BigValueThreshold": "8695652.173913",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "8695.652174",
            "MinimumSwapFee": "43.478261",
            "anyToken": {
              "address": "0x1135883a1bc6776bf90c97845adc491922106dfb",
              "name": "Rejuve Token",
              "symbol": "RJV",
              "decimals": 6
            }
          }
        },
        "price": 0.03259147,
        "logoUrl": "https://assets.coingecko.com/coins/images/29366/large/2023_Rejuve_Logo_-_Square_-_Teal.jpg",
        "chainId": "1",
        "tokenid": "anyRJV",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x5806aa266013d733db093f8a74da733a081f989a": {
        "address": "0x5806aa266013d733db093f8a74da733a081f989a",
        "anyToken": {
          "address": "0x24251e786c71e622b75f67d3d08879f07d1fc387",
          "name": "The Wild West",
          "symbol": "anyWILD",
          "decimals": 18
        },
        "underlying": {
          "address": "0x5806aa266013d733db093f8a74da733a081f989a",
          "name": "The Wild West",
          "symbol": "WILD",
          "decimals": 18
        },
        "destChains": {},
        "logoUrl": "https://www.linkpicture.com/q/IMG_20230314_080030_511-1.png",
        "chainId": "1",
        "tokenid": "anyWILD",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x628ebc64a38269e031afbdd3c5ba857483b5d048": {
        "address": "0x628ebc64a38269e031afbdd3c5ba857483b5d048",
        "anyToken": {
          "address": "0xf1b54d6b2937d592d263a01ef07a3e7785e678db",
          "name": "Liquid Staked ETH",
          "symbol": "anyLSETH",
          "decimals": 18
        },
        "underlying": {
          "address": "0x628ebc64a38269e031afbdd3c5ba857483b5d048",
          "name": "Liquid Staked ETH",
          "symbol": "LSETH",
          "decimals": 18
        },
        "destChains": {},
        "price": 1828.72,
        "logoUrl": "https://assets.coingecko.com/coins/images/28856/large/LSETH_logo.png",
        "chainId": "1",
        "tokenid": "anyLSETH",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xd38e031f4529a07996aab977d2b79f0e00656c56": {
        "address": "0xd38e031f4529a07996aab977d2b79f0e00656c56",
        "anyToken": {
          "address": "0x5d42657ab9c48f6b34d692e9f25f71e7a09065a3",
          "name": "wTBT Pool",
          "symbol": "anywTBT",
          "decimals": 18
        },
        "underlying": {
          "address": "0xd38e031f4529a07996aab977d2b79f0e00656c56",
          "name": "wTBT Pool",
          "symbol": "wTBT",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x17fc1e52009a5450395a34f44d741567033152a5",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "5000000",
            "MinimumSwap": "10",
            "BigValueThreshold": "1000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1000",
            "MinimumSwapFee": "5",
            "anyToken": {
              "address": "0x17fc1e52009a5450395a34f44d741567033152a5",
              "name": "wTBT Pool",
              "symbol": "wTBT",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://raw.githubusercontent.com/TProtocol/Public/main/img/Token/token-wTBT-128x128.png",
        "chainId": "1",
        "tokenid": "anywTBT",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xf655c8567e0f213e6c634cd2a68d992152161dc6": {
        "address": "0xf655c8567e0f213e6c634cd2a68d992152161dc6",
        "anyToken": {
          "address": "0x8efbd67ca959f8b25ee5b75e12276bb553f3e1af",
          "name": "Impermax",
          "symbol": "anyIBEX",
          "decimals": 18
        },
        "underlying": {
          "address": "0xf655c8567e0f213e6c634cd2a68d992152161dc6",
          "name": "Impermax",
          "symbol": "IBEX",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.054684,
        "logoUrl": "https://assets.coingecko.com/coins/images/27606/large/IqwOmX-c_400x400.jpeg",
        "chainId": "1",
        "tokenid": "anyIBEX",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xe51b8ab09008285a0380dd2680cd9dd5e13924d3": {
        "address": "0xe51b8ab09008285a0380dd2680cd9dd5e13924d3",
        "anyToken": {
          "address": "0x347e430b7cd1235e216be58ffa13394e5009e6e2",
          "name": "BallSwap",
          "symbol": "anyBSP",
          "decimals": 18
        },
        "underlying": {
          "address": "0xe51b8ab09008285a0380dd2680cd9dd5e13924d3",
          "name": "BallSwap",
          "symbol": "BSP",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.0000405,
        "logoUrl": "https://assets.coingecko.com/coins/images/14050/large/bsp.png",
        "chainId": "1",
        "tokenid": "anyBSP",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x6b0b3a982b4634ac68dd83a4dbf02311ce324181": {
        "address": "0x6b0b3a982b4634ac68dd83a4dbf02311ce324181",
        "anyToken": {
          "address": "0xea136fc555e695ba96d22e10b7e2151c4c6b2a20",
          "name": "Artificial Liquid Intelligence Token",
          "symbol": "anyALI",
          "decimals": 18
        },
        "underlying": {
          "address": "0x6b0b3a982b4634ac68dd83a4dbf02311ce324181",
          "name": "Artificial Liquid Intelligence Token",
          "symbol": "ALI",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xfccf7b2caee328a02042ac19f1b3970ca683e806",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "0",
            "liquidityType": "INIT",
            "MaximumSwap": "135703328.639808",
            "MinimumSwap": "271.406657",
            "BigValueThreshold": "27140665.727962",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "27140.665728",
            "MinimumSwapFee": "135.703329",
            "anyToken": {
              "address": "0xfccf7b2caee328a02042ac19f1b3970ca683e806",
              "name": "Artificial Liquid Intelligence Token",
              "symbol": "ALI",
              "decimals": 18
            }
          }
        },
        "price": 0.01888657,
        "logoUrl": "https://assets.coingecko.com/coins/images/22062/large/alethea-logo-transparent-colored.png",
        "chainId": "1",
        "tokenid": "anyALI",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xc97d6c52f3add91fa1c5287a453d7444aecbca83": {
        "address": "0xc97d6c52f3add91fa1c5287a453d7444aecbca83",
        "anyToken": {
          "address": "0x34965b810cd68d8c8b65ea503128faab028dd9ae",
          "name": "DegenZoo",
          "symbol": "anyDZOO",
          "decimals": 18
        },
        "underlying": {
          "address": "0xc97d6c52f3add91fa1c5287a453d7444aecbca83",
          "name": "DegenZoo",
          "symbol": "DZOO",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x56d06a78ef8e95d6043341f24759e2834be6f97b",
            "underlying": {
              "address": "0x56d06a78ef8e95d6043341f24759e2834be6f97b",
              "name": "DegenZoo",
              "symbol": "wDZOO",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "139202984.957447",
            "MinimumSwap": "278.40597",
            "BigValueThreshold": "27840596.991489",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "25.056537",
            "MinimumSwapFee": "25.056537",
            "anyToken": {
              "address": "0x1268e30c7a8ce8b68d2e7666bd0848676eedf3df",
              "name": "DegenZoo",
              "symbol": "anywDZOO",
              "decimals": 18
            }
          }
        },
        "price": 0.01372801,
        "logoUrl": "https://assets.coingecko.com/coins/images/29224/large/FAGWW5fe_400x400.jpeg",
        "chainId": "1",
        "tokenid": "anyDZOO",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x0f9b80fc3c8b9123d0aef43df58ebdbc034a8901": {
        "address": "0x0f9b80fc3c8b9123d0aef43df58ebdbc034a8901",
        "anyToken": {
          "address": "0xf107f002a2a1fcb1173261db64799c75c9ee648f",
          "name": "NFTEarth",
          "symbol": "anyNFTE",
          "decimals": 18
        },
        "underlying": {
          "address": "0x0f9b80fc3c8b9123d0aef43df58ebdbc034a8901",
          "name": "NFTEarth",
          "symbol": "NFTE",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00098475,
        "logoUrl": "https://assets.coingecko.com/coins/images/29116/small/20230223_224134.jpg",
        "chainId": "1",
        "tokenid": "anyNFTE",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xea65976cac7bbd785b134ccee1479f97aab60566": {
        "address": "0xea65976cac7bbd785b134ccee1479f97aab60566",
        "anyToken": {
          "address": "0xedcb1993947ec064d039f47485620476313e7d84",
          "name": "MESS",
          "symbol": "anyMESS",
          "decimals": 18
        },
        "underlying": {
          "address": "0xea65976cac7bbd785b134ccee1479f97aab60566",
          "name": "MESS",
          "symbol": "MESS",
          "decimals": 18
        },
        "destChains": {},
        "logoUrl": "https://nftimg.mmmm.world/gamefi/img-material06.png",
        "chainId": "1",
        "tokenid": "anyMESS",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x577c45921407e8aab950b073070c392c7bd07cdb": {
        "address": "0x577c45921407e8aab950b073070c392c7bd07cdb",
        "anyToken": {
          "address": "0xfe4c11f7db2dde18f2952c52f37abbeb120ab728",
          "name": "KingKong Doge",
          "symbol": "anyKingKong",
          "decimals": 9
        },
        "underlying": {
          "address": "0x577c45921407e8aab950b073070c392c7bd07cdb",
          "name": "KingKong Doge",
          "symbol": "KingKong",
          "decimals": 9
        },
        "destChains": {
          "56": {
            "address": "0x577c45921407e8aab950b073070c392c7bd07cdb",
            "underlying": {
              "address": "0x577c45921407e8aab950b073070c392c7bd07cdb",
              "name": "KingKong Doge",
              "symbol": "KingKong",
              "decimals": 9
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "11325757575920598.025391",
            "MinimumSwap": "22651515151.841196",
            "BigValueThreshold": "2265151515184119.605225",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "2265151515184.119605",
            "MinimumSwapFee": "11325757575.920598",
            "anyToken": {
              "address": "0x7531e1144095a517299bd602f1ed6967cfe97f14",
              "name": "KingKong Doge",
              "symbol": "anyKingKong",
              "decimals": 9
            }
          }
        },
        "logoUrl": "https://kingkongdoge.io/200x200logo.png",
        "chainId": "1",
        "tokenid": "anyKingKong",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x02e7ac540409d32c90bfb51114003a9e1ff0249c": {
        "address": "0x02e7ac540409d32c90bfb51114003a9e1ff0249c",
        "anyToken": {
          "address": "0x5c1947f9d5ad8b686939d4f1345526795e9bcd74",
          "name": "JPG NFT Index",
          "symbol": "anyJPG",
          "decimals": 18
        },
        "underlying": {
          "address": "0x02e7ac540409d32c90bfb51114003a9e1ff0249c",
          "name": "JPG NFT Index",
          "symbol": "JPG",
          "decimals": 18
        },
        "destChains": {},
        "price": 29.09,
        "logoUrl": "https://assets.coingecko.com/coins/images/25071/small/JPG-token-logo-01.png",
        "chainId": "1",
        "tokenid": "anyJPG",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x788b6d2b37aa51d916f2837ae25b05f0e61339d1": {
        "address": "0x788b6d2b37aa51d916f2837ae25b05f0e61339d1",
        "anyToken": {
          "address": "0x9b40e4f31ab4eeea1167d98cdbeae77b907a2c21",
          "name": "Metavault DAO",
          "symbol": "anyMVD",
          "decimals": 9
        },
        "underlying": {
          "address": "0x788b6d2b37aa51d916f2837ae25b05f0e61339d1",
          "name": "Metavault DAO",
          "symbol": "MVD",
          "decimals": 9
        },
        "destChains": {},
        "price": 6.2,
        "logoUrl": "https://assets.coingecko.com/coins/images/23899/small/MVD_Coin-simple.png",
        "chainId": "1",
        "tokenid": "anyMVD",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x2c537e5624e4af88a7ae4060c022609376c8d0eb": {
        "address": "0x2c537e5624e4af88a7ae4060c022609376c8d0eb",
        "anyToken": {
          "address": "0x2836e79be3fa7ba94244123094abcf47a97c83f9",
          "name": "BiLira",
          "symbol": "anyTRYB",
          "decimals": 6
        },
        "underlying": {
          "address": "0x2c537e5624e4af88a7ae4060c022609376c8d0eb",
          "name": "BiLira",
          "symbol": "TRYb",
          "decimals": 6
        },
        "destChains": {},
        "price": 0.04775129,
        "logoUrl": "https://assets.coingecko.com/coins/images/10119/small/JBs9jiXO_400x400.jpg",
        "chainId": "1",
        "tokenid": "anyTRYB",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xe2d593ee1018c6beeadc3415316eef1084061ab1": {
        "address": "0xe2d593ee1018c6beeadc3415316eef1084061ab1",
        "anyToken": {
          "address": "0xa2c6ab7bb535c4f7d945fff7310ca1b1ca436b81",
          "name": "Nibble",
          "symbol": "anyNBBL",
          "decimals": 18
        },
        "underlying": {
          "address": "0xe2d593ee1018c6beeadc3415316eef1084061ab1",
          "name": "Nibble",
          "symbol": "NBBL",
          "decimals": 18
        },
        "destChains": {},
        "logoUrl": "https://assets.website-files.com/63dfb6e18dfea6052ebe8397/63dfb6e18dfea6dd8ebe84dd_8bit%2520logo-p-500.png",
        "chainId": "1",
        "tokenid": "anyNBBL",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x492798fb464e77cb3cda62b9a2c3c65162db198e": {
        "address": "0x492798fb464e77cb3cda62b9a2c3c65162db198e",
        "anyToken": {
          "address": "0xb09b65822df05eb5ef4d3fe71d26f2d82fbb2e9b",
          "name": "AmpliFi DAO",
          "symbol": "any$AGG",
          "decimals": 18
        },
        "underlying": {
          "address": "0x492798fb464e77cb3cda62b9a2c3c65162db198e",
          "name": "AmpliFi DAO",
          "symbol": "$AGG",
          "decimals": 18
        },
        "destChains": {},
        "price": null,
        "logoUrl": "https://assets.coingecko.com/coins/images/29137/small/original-icon-transparent.png",
        "chainId": "1",
        "tokenid": "any$AGG",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x88df592f8eb5d7bd38bfef7deb0fbc02cf3778a0": {
        "address": "0x88df592f8eb5d7bd38bfef7deb0fbc02cf3778a0",
        "anyToken": {
          "address": "0xb6762c9ceacd5ab4b644d74dd286dc983ef13eac",
          "name": "Tellor Tributes",
          "symbol": "anyTRB",
          "decimals": 18
        },
        "underlying": {
          "address": "0x88df592f8eb5d7bd38bfef7deb0fbc02cf3778a0",
          "name": "Tellor Tributes",
          "symbol": "TRB",
          "decimals": 18
        },
        "destChains": {},
        "price": 12.77,
        "logoUrl": "https://assets.coingecko.com/coins/images/9644/small/Blk_icon_current.png",
        "chainId": "1",
        "tokenid": "anyTRB",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x0a3bb08b3a15a19b4de82f8acfc862606fb69a2d": {
        "address": "0x0a3bb08b3a15a19b4de82f8acfc862606fb69a2d",
        "anyToken": {
          "address": "0xe32fb831f47d6333e63d66a902a150f953e6369f",
          "name": "iZUMi Bond USD",
          "symbol": "anyiUSD",
          "decimals": 18
        },
        "underlying": {
          "address": "0x0a3bb08b3a15a19b4de82f8acfc862606fb69a2d",
          "name": "iZUMi Bond USD",
          "symbol": "iUSD",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.998196,
        "logoUrl": "https://assets.coingecko.com/coins/images/25388/small/iusd-logo-symbol-10k%E5%A4%A7%E5%B0%8F.png",
        "chainId": "1",
        "tokenid": "anyiUSD",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x9ad37205d608b8b219e6a2573f922094cec5c200": {
        "address": "0x9ad37205d608b8b219e6a2573f922094cec5c200",
        "anyToken": {
          "address": "0xcfc52bc8c9ad2fb7683c7fc5c18d4f78c01e8479",
          "name": "izumi Token",
          "symbol": "anyiZi",
          "decimals": 18
        },
        "underlying": {
          "address": "0x9ad37205d608b8b219e6a2573f922094cec5c200",
          "name": "izumi Token",
          "symbol": "iZi",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.02367805,
        "logoUrl": "https://assets.coingecko.com/coins/images/21791/small/izumi-logo-symbol.png",
        "chainId": "1",
        "tokenid": "anyiZi",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xcf86f09accd244e3c81ec2bc335c53939ee0248e": {
        "address": "0xcf86f09accd244e3c81ec2bc335c53939ee0248e",
        "anyToken": {
          "address": "0x5ae3546bbab63334ad0368a34a6f0f68cec3bc6e",
          "name": "MemeCrafter",
          "symbol": "anyMCFT",
          "decimals": 18
        },
        "underlying": {
          "address": "0xcf86f09accd244e3c81ec2bc335c53939ee0248e",
          "name": "MemeCrafter",
          "symbol": "MCFT",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xbe694091bf56d540f51f7e18afb0eaccd13190dc",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "791765637371.338084",
            "MinimumSwap": "1583531.274743",
            "BigValueThreshold": "158353127474.267617",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "158353127.474268",
            "MinimumSwapFee": "791765.637371",
            "anyToken": {
              "address": "0xbe694091bf56d540f51f7e18afb0eaccd13190dc",
              "name": "MemeCrafter",
              "symbol": "MCFT",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://memecrafter.io/img/logo.png",
        "chainId": "1",
        "tokenid": "anyMCFT",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xea7b7dc089c9a4a916b5a7a37617f59fd54e37e4": {
        "address": "0xea7b7dc089c9a4a916b5a7a37617f59fd54e37e4",
        "anyToken": {
          "address": "0xa7694a3c4abd80e7540b718e536bf2b890ea0d95",
          "name": "HyperCycle Token",
          "symbol": "anyHyPC",
          "decimals": 6
        },
        "underlying": {
          "address": "0xea7b7dc089c9a4a916b5a7a37617f59fd54e37e4",
          "name": "HyperCycle Token",
          "symbol": "HyPC",
          "decimals": 6
        },
        "destChains": {
          "56": {
            "address": "0x7881cd2b5724431372f57c50e91611352557a606",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "50000000",
            "MinimumSwap": "100",
            "BigValueThreshold": "10000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "10000",
            "MinimumSwapFee": "50",
            "anyToken": {
              "address": "0x7881cd2b5724431372f57c50e91611352557a606",
              "name": "HyperCycle Token",
              "symbol": "HyPC",
              "decimals": 6
            }
          }
        },
        "price": 0.280077,
        "logoUrl": "https://assets.coingecko.com/coins/images/29917/small/HyperCycle-Logo-2022_icon_copy_%281%29.png",
        "chainId": "1",
        "tokenid": "anyHyPC",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x6982508145454ce325ddbe47a25d4ec3d2311933": {
        "address": "0x6982508145454ce325ddbe47a25d4ec3d2311933",
        "anyToken": {
          "address": "0xd6c74244212d19296f9926b325d92dd7748e1c24",
          "name": "Pepe",
          "symbol": "anyPEPE",
          "decimals": 18
        },
        "underlying": {
          "address": "0x6982508145454ce325ddbe47a25d4ec3d2311933",
          "name": "Pepe",
          "symbol": "PEPE",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00000149,
        "logoUrl": "https://assets.coingecko.com/coins/images/29850/small/pepe-token.jpeg",
        "chainId": "1",
        "tokenid": "anyPEPE",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x83e9f223e1edb3486f876ee888d76bfba26c475a": {
        "address": "0x83e9f223e1edb3486f876ee888d76bfba26c475a",
        "anyToken": {
          "address": "0x776d93423ad44290e1b4576a3981f4b2736dac13",
          "name": "BlockchainSpace",
          "symbol": "anyGUILD",
          "decimals": 18
        },
        "underlying": {
          "address": "0x83e9f223e1edb3486f876ee888d76bfba26c475a",
          "name": "BlockchainSpace",
          "symbol": "GUILD",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.0054036,
        "logoUrl": "https://assets.coingecko.com/coins/images/21271/small/BednjMw.png",
        "chainId": "1",
        "tokenid": "anyGUILD",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x3845badade8e6dff049820680d1f14bd3903a5d0": {
        "address": "0x3845badade8e6dff049820680d1f14bd3903a5d0",
        "anyToken": {
          "address": "0xb36cb81a7d5ab0ac9da1723e418ec2ebc7a4f9cb",
          "name": "SAND",
          "symbol": "anySAND",
          "decimals": 18
        },
        "underlying": {
          "address": "0x3845badade8e6dff049820680d1f14bd3903a5d0",
          "name": "SAND",
          "symbol": "SAND",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x007a8b366b3373166edd8c829fc08b161ce0a650",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "8702583.971233",
            "MinimumSwap": "17.405168",
            "BigValueThreshold": "1740516.794246",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1740.516794",
            "MinimumSwapFee": "8.702584",
            "anyToken": {
              "address": "0x007a8b366b3373166edd8c829fc08b161ce0a650",
              "name": "SAND",
              "symbol": "SAND",
              "decimals": 18
            }
          }
        },
        "price": 0.496337,
        "logoUrl": "https://assets.coingecko.com/coins/images/12129/small/sandbox_logo.jpg",
        "chainId": "1",
        "tokenid": "anySAND",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xd8fa690304d2b2824d918c0c7376e2823704557a": {
        "address": "0xd8fa690304d2b2824d918c0c7376e2823704557a",
        "anyToken": {
          "address": "0xaf5e31e1e4e1004722c63e61c2e477c148c229b1",
          "name": "SquidGrow",
          "symbol": "anySquidGrow",
          "decimals": 9
        },
        "underlying": {
          "address": "0xd8fa690304d2b2824d918c0c7376e2823704557a",
          "name": "SquidGrow",
          "symbol": "SquidGrow",
          "decimals": 9
        },
        "destChains": {
          "56": {
            "address": "0x88479186bac914e4313389a64881f5ed0153c765",
            "underlying": {
              "address": "0x88479186bac914e4313389a64881f5ed0153c765",
              "name": "SquidGrow",
              "symbol": "SquidGrow",
              "decimals": 19
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "482765279521096.842712",
            "MinimumSwap": "965530559.042194",
            "BigValueThreshold": "96553055904219.368546",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "96553055904.219369",
            "MinimumSwapFee": "482765279.521097",
            "anyToken": {
              "address": "0x0a81d2e65aceb02f36fa6cd68dcd25fb786273c9",
              "name": "SquidGrow",
              "symbol": "anySquidGrow",
              "decimals": 19
            }
          }
        },
        "price": 1.9242e-8,
        "logoUrl": "https://assets.coingecko.com/coins/images/26573/small/Squidgrow-Logo.png",
        "chainId": "1",
        "tokenid": "anySquidGrow",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x5de597849cf72c72f073e9085bdd0dadd8e6c199": {
        "address": "0x5de597849cf72c72f073e9085bdd0dadd8e6c199",
        "anyToken": {
          "address": "0xd98b21b20f4a8b33e6061006900ac395074792a0",
          "name": "FBX Token",
          "symbol": "anyFBX",
          "decimals": 18
        },
        "underlying": {
          "address": "0x5de597849cf72c72f073e9085bdd0dadd8e6c199",
          "name": "FBX Token",
          "symbol": "FBX",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x7ea445f373274eb66ffebb0e1afc544fbcc15286",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "0",
            "liquidityType": "INIT",
            "MaximumSwap": "714285714.285714",
            "MinimumSwap": "1428.571429",
            "BigValueThreshold": "142857142.857143",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "142857.142857",
            "MinimumSwapFee": "714.285714",
            "anyToken": {
              "address": "0x7ea445f373274eb66ffebb0e1afc544fbcc15286",
              "name": "eFBX",
              "symbol": "eFBX",
              "decimals": 18
            }
          }
        },
        "price": 0.00426965,
        "logoUrl": "https://assets.coingecko.com/coins/images/27087/small/fbx.png",
        "chainId": "1",
        "tokenid": "anyFBX",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x1ce270557c1f68cfb577b856766310bf8b47fd9c": {
        "address": "0x1ce270557c1f68cfb577b856766310bf8b47fd9c",
        "anyToken": {
          "address": "0x3b8e8fc5859a91c81094a6273298028d7442a865",
          "name": "MongCoin",
          "symbol": "any$MONG",
          "decimals": 18
        },
        "underlying": {
          "address": "0x1ce270557c1f68cfb577b856766310bf8b47fd9c",
          "name": "MongCoin",
          "symbol": "$MONG",
          "decimals": 18
        },
        "destChains": {},
        "price": 5.3717e-8,
        "logoUrl": "https://assets.coingecko.com/coins/images/30051/small/h3OCGNvn_400x400.jpg",
        "chainId": "1",
        "tokenid": "any$MONG",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xf05897cfe3ce9bbbfe0751cbe6b1b2c686848dcb": {
        "address": "0xf05897cfe3ce9bbbfe0751cbe6b1b2c686848dcb",
        "anyToken": {
          "address": "0x6ffd446cef7e60b7758e0ed836035738a8d18aa1",
          "name": "Catecoin",
          "symbol": "anyCATE",
          "decimals": 9
        },
        "underlying": {
          "address": "0xf05897cfe3ce9bbbfe0751cbe6b1b2c686848dcb",
          "name": "Catecoin",
          "symbol": "CATE",
          "decimals": 9
        },
        "destChains": {
          "56": {
            "address": "0xe4fae3faa8300810c835970b9187c268f55d998f",
            "underlying": {
              "address": "0xe4fae3faa8300810c835970b9187c268f55d998f",
              "name": "CateCoin",
              "symbol": "CATE",
              "decimals": 9
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "14645319648746.653544",
            "MinimumSwap": "29290639.297493",
            "BigValueThreshold": "2929063929749.330709",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "2929063929.749331",
            "MinimumSwapFee": "14645319.648747",
            "anyToken": {
              "address": "0x3d8015cc971627ee94445c40d6ce18336c24aff5",
              "name": "CateCoin",
              "symbol": "anyCATE",
              "decimals": 9
            }
          }
        },
        "price": 3.58241e-7,
        "logoUrl": "https://assets.coingecko.com/coins/images/15364/small/logo.png",
        "chainId": "1",
        "tokenid": "anyCATE",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xfc0b60e0df5dc9d4b72d957ca2d251cee308019a": {
        "address": "0xfc0b60e0df5dc9d4b72d957ca2d251cee308019a",
        "anyToken": {
          "address": "0x4e7627ef41c52ec1e02bdf8808d9d25e4c270768",
          "name": "Shattered Legion",
          "symbol": "anySLG",
          "decimals": 18
        },
        "underlying": {
          "address": "0xfc0b60e0df5dc9d4b72d957ca2d251cee308019a",
          "name": "Shattered Legion",
          "symbol": "SLG",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x2348b010fa9c0ce30bb042d54c298a3411361a01",
            "underlying": {
              "address": "0x2348b010fa9c0ce30bb042d54c298a3411361a01",
              "name": "Land Of Conquest SLG",
              "symbol": "SLG",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "201868983.79961",
            "MinimumSwap": "403.737967",
            "BigValueThreshold": "40373796.759922",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "40373.79676",
            "MinimumSwapFee": "201.868984",
            "anyToken": {
              "address": "0x62c2604d23c268d2a1dcb282c77e780382e7612e",
              "name": "Land Of Conquest SLG",
              "symbol": "anySLG",
              "decimals": 18
            }
          }
        },
        "price": 0.02393736,
        "logoUrl": "https://assets.coingecko.com/coins/images/26436/small/shattered_legion.png",
        "chainId": "1",
        "tokenid": "anySLG",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xe6f47303032a09c8c0f8ebb713c00e6ed345e8c3": {
        "address": "0xe6f47303032a09c8c0f8ebb713c00e6ed345e8c3",
        "anyToken": {
          "address": "0x9036398c00f8e021c2b1818855e2df20b0e17005",
          "name": "Risitas Coin",
          "symbol": "anyRISITA",
          "decimals": 18
        },
        "underlying": {
          "address": "0xe6f47303032a09c8c0f8ebb713c00e6ed345e8c3",
          "name": "Risitas Coin",
          "symbol": "RISITA",
          "decimals": 18
        },
        "destChains": {},
        "logoUrl": "https://i.ibb.co/hD1Tf8h/200x200.png",
        "chainId": "1",
        "tokenid": "anyRISITA",
        "version": "UNDERLYINGV2",
        "router": "0xF0457c4c99732b716e40d456aCB3Fc83c699b8ba",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      }
    },
    "56": {
      "0xc7d8d35eba58a0935ff2d5a33df105dd9f071731": {
        "address": "0xc7d8d35eba58a0935ff2d5a33df105dd9f071731",
        "anyToken": {
          "address": "0x634398cb81b76bfc75ebb434cf7c82036f9e7d78",
          "name": "Hedget",
          "symbol": "anyHGET",
          "decimals": 6
        },
        "underlying": {
          "address": "0xc7d8d35eba58a0935ff2d5a33df105dd9f071731",
          "name": "Hedget",
          "symbol": "HGET",
          "decimals": 6
        },
        "destChains": {
          "1": {
            "address": "0x7968bc6a03017ea2de509aaa816f163db0f35148",
            "underlying": {
              "address": "0x7968bc6a03017ea2de509aaa816f163db0f35148",
              "name": "Hedget",
              "symbol": "HGET",
              "decimals": 6
            },
            "swapfeeon": 1,
            "ContractVersion": "4",
            "liquidityType": "INIT",
            "MaximumSwap": "340000",
            "MinimumSwap": "25",
            "BigValueThreshold": "67000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "340",
            "MinimumSwapFee": "21",
            "anyToken": {
              "address": "0x818ec0a7fe18ff94269904fced6ae3dae6d6dc0b",
              "name": "Hedget",
              "symbol": "anyHGET",
              "decimals": 6
            }
          }
        },
        "price": 0.242332,
        "logoUrl": "https://assets.coingecko.com/coins/images/12453/large/Hedget.png",
        "chainId": "56",
        "tokenid": "anyHGET",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xf6565a97dc832d93dc83b75ee9aa5c7e8ecb0f9d": {
        "address": "0xf6565a97dc832d93dc83b75ee9aa5c7e8ecb0f9d",
        "anyToken": {
          "address": "0x94977c9888f3d2fafae290d33fab4a5a598ad764",
          "name": "HYVE",
          "symbol": "anyHYVE",
          "decimals": 18
        },
        "underlying": {
          "address": "0xf6565a97dc832d93dc83b75ee9aa5c7e8ecb0f9d",
          "name": "HYVE",
          "symbol": "HYVE",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xd794dd1cada4cf79c9eebaab8327a1b0507ef7d4",
            "underlying": {
              "address": "0xd794dd1cada4cf79c9eebaab8327a1b0507ef7d4",
              "name": "HYVE",
              "symbol": "HYVE",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "4",
            "liquidityType": "INIT",
            "MaximumSwap": "5800000",
            "MinimumSwap": "1960",
            "BigValueThreshold": "1200000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "24330",
            "MinimumSwapFee": "1950",
            "anyToken": {
              "address": "0x922d641a426dcffaef11680e5358f34d97d112e1",
              "name": "HYVE",
              "symbol": "anyHYVE",
              "decimals": 18
            }
          }
        },
        "price": 0.058524,
        "logoUrl": "https://assets.coingecko.com/coins/images/13072/large/MKHXNbf.png",
        "chainId": "56",
        "tokenid": "anyHYVE",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x47f46484a8d7573e07513b6e6b2bdc4f748ba294": {
        "address": "0x47f46484a8d7573e07513b6e6b2bdc4f748ba294",
        "anyToken": {
          "address": "0xbbc4a8d076f4b1888fec42581b6fc58d242cf2d5",
          "name": "XDEFIGovernanceToken",
          "symbol": "anyXDEX",
          "decimals": 18
        },
        "underlying": {
          "address": "0x47f46484a8d7573e07513b6e6b2bdc4f748ba294",
          "name": "XDEFIGovernanceToken",
          "symbol": "XDEX",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x000000000000d0151e748d25b766e77efe2a6c83",
            "underlying": {
              "address": "0x000000000000d0151e748d25b766e77efe2a6c83",
              "name": "XDEFIGovernanceToken",
              "symbol": "XDEX",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "4",
            "liquidityType": "INIT",
            "MaximumSwap": "25000000",
            "MinimumSwap": "1400",
            "BigValueThreshold": "5000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "25000",
            "MinimumSwapFee": "1356",
            "anyToken": {
              "address": "0xfa9343c3897324496a05fc75abed6bac29f8a40f",
              "name": "XDEFIGovernanceToken",
              "symbol": "anyXDEX",
              "decimals": 18
            }
          }
        },
        "price": 0.01581463,
        "logoUrl": "https://assets.coingecko.com/coins/images/14485/large/logo.png",
        "chainId": "56",
        "tokenid": "anyXDEX",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x067ede5097574b387ff30999e3a1775f3d7d569d": {
        "address": "0x067ede5097574b387ff30999e3a1775f3d7d569d",
        "anyToken": {
          "address": "0xe5cf1558a1470cb5c166c2e8651ed0f3c5fb8f42",
          "name": "Dopamine",
          "symbol": "anyDOPE",
          "decimals": 18
        },
        "underlying": {
          "address": "0x067ede5097574b387ff30999e3a1775f3d7d569d",
          "name": "Dopamine",
          "symbol": "DOPE",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x067ede5097574b387ff30999e3a1775f3d7d569d",
            "underlying": {
              "address": "0x067ede5097574b387ff30999e3a1775f3d7d569d",
              "name": "Dopamine",
              "symbol": "DOPE",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "4",
            "liquidityType": "INIT",
            "MaximumSwap": "20000000",
            "MinimumSwap": "600",
            "BigValueThreshold": "4000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "30000",
            "MinimumSwapFee": "300",
            "anyToken": {
              "address": "0xefaeee334f0fd1712f9a8cc375f427d9cdd40d73",
              "name": "Dopamine",
              "symbol": "anyDOPE",
              "decimals": 18
            }
          }
        },
        "price": 0.00292274,
        "logoUrl": "https://assets.coingecko.com/coins/images/295/large/dopecoin.png",
        "chainId": "56",
        "tokenid": "anyDOPE",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x8da443f84fea710266c8eb6bc34b71702d033ef2": {
        "address": "0x8da443f84fea710266c8eb6bc34b71702d033ef2",
        "anyToken": {
          "address": "0x4b6f0494b08d6f387b392cb9f56539b238de3367",
          "name": "CartesiToken",
          "symbol": "anyCTSI",
          "decimals": 18
        },
        "underlying": {
          "address": "0x8da443f84fea710266c8eb6bc34b71702d033ef2",
          "name": "CartesiToken",
          "symbol": "CTSI",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x491604c0fdf08347dd1fa4ee062a822a5dd06b5d",
            "underlying": {
              "address": "0x491604c0fdf08347dd1fa4ee062a822a5dd06b5d",
              "name": "Cartesi Token",
              "symbol": "CTSI",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "2600000",
            "MinimumSwap": "110",
            "BigValueThreshold": "510000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "2600",
            "MinimumSwapFee": "108",
            "anyToken": {
              "address": "0xe5cf1558a1470cb5c166c2e8651ed0f3c5fb8f42",
              "name": "CartesiToken",
              "symbol": "anyCTSI",
              "decimals": 18
            }
          }
        },
        "price": 0.175235,
        "logoUrl": "https://assets.coingecko.com/coins/images/11038/large/cartesi.png",
        "chainId": "56",
        "tokenid": "anyCTSI",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xaec945e04baf28b135fa7c640f624f8d90f1c3a6": {
        "address": "0xaec945e04baf28b135fa7c640f624f8d90f1c3a6",
        "anyToken": {
          "address": "0xa8752333f6a6fe47323a4edac3d09bb1048a0e23",
          "name": "Coin98",
          "symbol": "anyC98",
          "decimals": 18
        },
        "underlying": {
          "address": "0xaec945e04baf28b135fa7c640f624f8d90f1c3a6",
          "name": "Coin98",
          "symbol": "C98",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xae12c5930881c53715b369cec7606b70d8eb229f",
            "underlying": {
              "address": "0xae12c5930881c53715b369cec7606b70d8eb229f",
              "name": "Coin98",
              "symbol": "C98",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "840000",
            "MinimumSwap": "25",
            "BigValueThreshold": "170000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "840",
            "MinimumSwapFee": "22",
            "anyToken": {
              "address": "0x3d632d9e1a60a0880dd45e61f279d919b5748377",
              "name": "Coin98",
              "symbol": "anyC98",
              "decimals": 18
            }
          }
        },
        "price": 0.191205,
        "logoUrl": "https://assets.coingecko.com/coins/images/17117/large/logo.png",
        "chainId": "56",
        "tokenid": "anyC98",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xd632bd021a07af70592ce1e18717ab9aa126decb": {
        "address": "0xd632bd021a07af70592ce1e18717ab9aa126decb",
        "anyToken": {
          "address": "0x56501b0b12ee9518c2991451bbc8d7f9267949d2",
          "name": "Kangal",
          "symbol": "anybKANGAL",
          "decimals": 18
        },
        "underlying": {
          "address": "0xd632bd021a07af70592ce1e18717ab9aa126decb",
          "name": "Kangal",
          "symbol": "bKANGAL",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x6e765d26388a17a6e86c49a8e41df3f58abcd337",
            "underlying": {
              "address": "0x6e765d26388a17a6e86c49a8e41df3f58abcd337",
              "name": "Kangal",
              "symbol": "KANGAL",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "350000000000",
            "MinimumSwap": "850000",
            "BigValueThreshold": "70000000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "10000000",
            "MinimumSwapFee": "800000",
            "anyToken": {
              "address": "0x7f8bc696bebbbd29255f871cbef55b74e8f10e57",
              "name": "Kangal",
              "symbol": "anyKANGAL",
              "decimals": 18
            }
          }
        },
        "price": 0.00000228,
        "logoUrl": "https://assets.coingecko.com/coins/images/14241/large/logo-200.png",
        "chainId": "56",
        "tokenid": "anyKANGAL",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x3764bc0de9b6a68c67929130aaec16b6060cab8c": {
        "address": "0x3764bc0de9b6a68c67929130aaec16b6060cab8c",
        "anyToken": {
          "address": "0x6e283470cb5f0c7315c6e165eec4cc39965e5ceb",
          "name": "XIDOFINANCE",
          "symbol": "anyXIDO",
          "decimals": 18
        },
        "underlying": {
          "address": "0x3764bc0de9b6a68c67929130aaec16b6060cab8c",
          "name": "XIDOFINANCE",
          "symbol": "XIDO",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xf6650117017ffd48b725b4ec5a00b414097108a7",
            "underlying": {
              "address": "0xf6650117017ffd48b725b4ec5a00b414097108a7",
              "name": "XIDOFINANCE",
              "symbol": "XIDO",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "81000",
            "MinimumSwap": "0.48",
            "BigValueThreshold": "16100",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "16",
            "MinimumSwapFee": "0.32",
            "anyToken": {
              "address": "0xf7428ffcb2581a2804998efbb036a43255c8a8d3",
              "name": "XIDOFINANCE",
              "symbol": "anyXIDO",
              "decimals": 18
            }
          }
        },
        "price": 2.23,
        "logoUrl": "https://assets.coingecko.com/coins/images/16161/large/KJw4clj.png",
        "chainId": "56",
        "tokenid": "anyXIDO",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xb49b7e0742ecb4240ffe91661d2a580677460b6a": {
        "address": "0xb49b7e0742ecb4240ffe91661d2a580677460b6a",
        "anyToken": {
          "address": "0x2244faab5a2a633cb7f6e3d35e7db8ec0136d3e2",
          "name": "PeriFinanceToken",
          "symbol": "anyPERI",
          "decimals": 18
        },
        "underlying": {
          "address": "0xb49b7e0742ecb4240ffe91661d2a580677460b6a",
          "name": "PeriFinanceToken",
          "symbol": "PERI",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x5d30ad9c6374bf925d0a75454fa327aacf778492",
            "underlying": {
              "address": "0x5d30ad9c6374bf925d0a75454fa327aacf778492",
              "name": "PeriFinanceToken",
              "symbol": "PERI",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "1400000",
            "MinimumSwap": "70",
            "BigValueThreshold": "272000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "800",
            "MinimumSwapFee": "64",
            "anyToken": {
              "address": "0x9ea48018587fdf4b5857940171d3d32465b0b761",
              "name": "PeriFinanceToken",
              "symbol": "anyPERI",
              "decimals": 18
            }
          }
        },
        "price": 0.061164,
        "logoUrl": "https://assets.coingecko.com/coins/images/15313/large/6xVEMS1.png",
        "chainId": "56",
        "tokenid": "anyPERI",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x9b71b5511998e0798625b8fa74e86d8192de78c1": {
        "address": "0x9b71b5511998e0798625b8fa74e86d8192de78c1",
        "anyToken": {
          "address": "0x9833c643f387ecfb76aa8114546ad524703c66fb",
          "name": "Kripton",
          "symbol": "anyLPK",
          "decimals": 18
        },
        "underlying": {
          "address": "0x9b71b5511998e0798625b8fa74e86d8192de78c1",
          "name": "Kripton",
          "symbol": "LPK",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x2cc71c048a804da930e28e93f3211dc03c702995",
            "underlying": {
              "address": "0x2cc71c048a804da930e28e93f3211dc03c702995",
              "name": "Kripton",
              "symbol": "LPK",
              "decimals": 8
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "8400000000",
            "MinimumSwap": "450000",
            "BigValueThreshold": "1700000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "5000000",
            "MinimumSwapFee": "400000",
            "anyToken": {
              "address": "0x38389eb214c4ac1cdda7a7582ab01e8a9bb548ba",
              "name": "Kripton",
              "symbol": "anyLPK",
              "decimals": 8
            }
          }
        },
        "price": 0.000039,
        "logoUrl": "https://assets.coingecko.com/coins/images/4880/large/l-pesa.jpg",
        "chainId": "56",
        "tokenid": "anyLPK",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x002d8563759f5e1eaf8784181f3973288f6856e4": {
        "address": "0x002d8563759f5e1eaf8784181f3973288f6856e4",
        "anyToken": {
          "address": "0x6f1bc0967945465539877b39ba48373b0219248f",
          "name": "DemodyfiToken",
          "symbol": "anyDMOD",
          "decimals": 18
        },
        "underlying": {
          "address": "0x002d8563759f5e1eaf8784181f3973288f6856e4",
          "name": "DemodyfiToken",
          "symbol": "DMOD",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x5f6c5c2fb289db2228d159c69621215e354218d7",
            "underlying": {
              "address": "0x5f6c5c2fb289db2228d159c69621215e354218d7",
              "name": "DemodyfiToken",
              "symbol": "DMOD",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "26000000",
            "MinimumSwap": "500",
            "BigValueThreshold": "5200000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "5200",
            "MinimumSwapFee": "460",
            "anyToken": {
              "address": "0xd4143e8db48a8f73afcdf13d7b3305f28da38116",
              "name": "DemodyfiToken",
              "symbol": "anyDMOD",
              "decimals": 18
            }
          }
        },
        "price": 0.00380089,
        "logoUrl": "https://assets.coingecko.com/coins/images/16262/large/Logo_coingecko_%281%29.png",
        "chainId": "56",
        "tokenid": "anyDMOD",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x6911f552842236bd9e8ea8ddbb3fb414e2c5fa9d": {
        "address": "0x6911f552842236bd9e8ea8ddbb3fb414e2c5fa9d",
        "anyToken": {
          "address": "0xe408849d21646a42fd5e36cc520b26e7cdd62370",
          "name": "SynapseNetwork",
          "symbol": "anySNP",
          "decimals": 18
        },
        "underlying": {
          "address": "0x6911f552842236bd9e8ea8ddbb3fb414e2c5fa9d",
          "name": "SynapseNetwork",
          "symbol": "SNP",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x6911f552842236bd9e8ea8ddbb3fb414e2c5fa9d",
            "underlying": {
              "address": "0x6911f552842236bd9e8ea8ddbb3fb414e2c5fa9d",
              "name": "SynapseNetwork",
              "symbol": "SNP",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "8000000",
            "MinimumSwap": "180",
            "BigValueThreshold": "1600000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "2200",
            "MinimumSwapFee": "173",
            "anyToken": {
              "address": "0x7d09a42045359aa85488bc07d0ada83e22d50017",
              "name": "SynapseNetwork",
              "symbol": "anySNP",
              "decimals": 18
            }
          }
        },
        "price": 0.01028263,
        "logoUrl": "https://assets.coingecko.com/coins/images/17962/large/Webp-net-resizeimage_%282%29.png",
        "chainId": "56",
        "tokenid": "anySNP",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xe20b9e246db5a0d21bf9209e4858bc9a3ff7a034": {
        "address": "0xe20b9e246db5a0d21bf9209e4858bc9a3ff7a034",
        "anyToken": {
          "address": "0xf99fc9f2d4b9f6cc4d6e56b13c5ae7e0030fb406",
          "name": "WrappedBanano",
          "symbol": "anywBAN",
          "decimals": 18
        },
        "underlying": {
          "address": "0xe20b9e246db5a0d21bf9209e4858bc9a3ff7a034",
          "name": "WrappedBanano",
          "symbol": "wBAN",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00486781,
        "logoUrl": "https://assets.coingecko.com/coins/images/6226/large/banano-transparent.png",
        "chainId": "56",
        "tokenid": "anywBAN",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x0cbe5c4f318035b866aacfaf7d018fb4c5f920f3": {
        "address": "0x0cbe5c4f318035b866aacfaf7d018fb4c5f920f3",
        "anyToken": {
          "address": "0x158335c10d3eee1c5db5a302ab972022f3e59040",
          "name": "Ledgity",
          "symbol": "anyLTY",
          "decimals": 18
        },
        "underlying": {
          "address": "0x0cbe5c4f318035b866aacfaf7d018fb4c5f920f3",
          "name": "Ledgity",
          "symbol": "LTY",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x85ffb35957203dfd12061eaecd708db623bd567c",
            "underlying": {
              "address": "0x85ffb35957203dfd12061eaecd708db623bd567c",
              "name": "Ledgity",
              "symbol": "LTY",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "520000000",
            "MinimumSwap": "2600",
            "BigValueThreshold": "110000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "102200",
            "MinimumSwapFee": "2080",
            "anyToken": {
              "address": "0x5d47baba0d66083c52009271faf3f50dcc01023c",
              "name": "Ledgity",
              "symbol": "anyLTY",
              "decimals": 18
            }
          }
        },
        "price": 0.00083093,
        "logoUrl": "https://assets.coingecko.com/coins/images/17939/large/ledgity.PNG",
        "chainId": "56",
        "tokenid": "anyLTY",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xd21d5467c341dc697b384cf4e4be56394cae5d0b": {
        "address": "0xd21d5467c341dc697b384cf4e4be56394cae5d0b",
        "anyToken": {
          "address": "0xf3f64ad6af423be76a06908141217cfeb6f718c6",
          "name": "BitcoinPlatinums",
          "symbol": "anyBCP",
          "decimals": 8
        },
        "underlying": {
          "address": "0xd21d5467c341dc697b384cf4e4be56394cae5d0b",
          "name": "BitcoinPlatinums",
          "symbol": "BCP",
          "decimals": 8
        },
        "destChains": {
          "1": {
            "address": "0xd26fb114401ec86887cd09f62eccd95fcf20b571",
            "underlying": {
              "address": "0xd26fb114401ec86887cd09f62eccd95fcf20b571",
              "name": "bitcoinplatinums",
              "symbol": "BCP",
              "decimals": 8
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "12000",
            "MinimumSwap": "0.12",
            "BigValueThreshold": "2400",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "2.4",
            "MinimumSwapFee": "0.096",
            "anyToken": {
              "address": "0x97cd1cfe2ed5712660bb6c14053c0ecb031bff7d",
              "name": "bitcoinplatinums",
              "symbol": "anyBCP",
              "decimals": 8
            }
          }
        },
        "price": 2.33695e-7,
        "logoUrl": "https://assets.coingecko.com/coins/images/8395/large/DzEn-8rWkAALlqK_%281%29.jpg",
        "chainId": "56",
        "tokenid": "anyBCP",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x9ba6a67a6f3b21705a46b380a1b97373a33da311": {
        "address": "0x9ba6a67a6f3b21705a46b380a1b97373a33da311",
        "anyToken": {
          "address": "0xd95f99d6e5527eeb35eba9e024900ee7f8eaeafc",
          "name": "Chainport.io-PegFearNFTs",
          "symbol": "anyFEAR",
          "decimals": 18
        },
        "underlying": {
          "address": "0x9ba6a67a6f3b21705a46b380a1b97373a33da311",
          "name": "Chainport.io-PegFearNFTs",
          "symbol": "FEAR",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x88a9a52f944315d5b4e917b9689e65445c401e83",
            "underlying": {
              "address": "0x88a9a52f944315d5b4e917b9689e65445c401e83",
              "name": "FearNFTs",
              "symbol": "FEAR",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "5520000",
            "MinimumSwap": "65",
            "BigValueThreshold": "1102000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1102",
            "MinimumSwapFee": "60.2",
            "anyToken": {
              "address": "0x3bd2dfd03bc7c3011ed7fb8c4d0949b382726cee",
              "name": "FearNFTs",
              "symbol": "anyFEAR",
              "decimals": 18
            }
          }
        },
        "price": 0.11102,
        "logoUrl": "https://assets.coingecko.com/coins/images/15825/large/fear-logo-400-400.png",
        "chainId": "56",
        "tokenid": "anyFEAR",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xc342774492b54ce5f8ac662113ed702fc1b34972": {
        "address": "0xc342774492b54ce5f8ac662113ed702fc1b34972",
        "anyToken": {
          "address": "0x49369aeee769bd6043726b0cd5f0bd53d843bc32",
          "name": "BinanceGeoDBCoin",
          "symbol": "anyGEO",
          "decimals": 18
        },
        "underlying": {
          "address": "0xc342774492b54ce5f8ac662113ed702fc1b34972",
          "name": "BinanceGeoDBCoin",
          "symbol": "BGEO",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x147faf8de9d8d8daae129b187f0d02d819126750",
            "underlying": {
              "address": "0x147faf8de9d8d8daae129b187f0d02d819126750",
              "name": "GeoDBCoin",
              "symbol": "GEO",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "75000000",
            "MinimumSwap": "1800",
            "BigValueThreshold": "15000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "15000",
            "MinimumSwapFee": "1703",
            "anyToken": {
              "address": "0x6b26780e74cfc64b88c9e1ebc33ffae29c1679ea",
              "name": "GeoDBCoin",
              "symbol": "anyGEO",
              "decimals": 18
            }
          }
        },
        "price": 0.00249037,
        "logoUrl": "https://assets.coingecko.com/coins/images/11130/large/geodb.png",
        "chainId": "56",
        "tokenid": "anyGEO",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xc53c65c4a925039cc149fa99fd011490d40270a3": {
        "address": "0xc53c65c4a925039cc149fa99fd011490d40270a3",
        "anyToken": {
          "address": "0xd8485513dd9947aa3287d90fd3804d3df52d0da1",
          "name": "AtmosphereCCG",
          "symbol": "anyATMSSFT",
          "decimals": 18
        },
        "underlying": {
          "address": "0xc53c65c4a925039cc149fa99fd011490d40270a3",
          "name": "AtmosphereCCG",
          "symbol": "ATMSSFT",
          "decimals": 18
        },
        "destChains": {},
        "price": 1.7376e-8,
        "logoUrl": "https://raw.githubusercontent.com/AtmosSoftGameFiApps/Logos/main/atmossoftlogo128x128.png",
        "chainId": "56",
        "tokenid": "anyATMSSFT",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xa7840988974dd20a78b9f21d95366c46c7637996": {
        "address": "0xa7840988974dd20a78b9f21d95366c46c7637996",
        "anyToken": {
          "address": "0x5ec0d8751be5e7b1779430e62b8f61225a947b9c",
          "name": "EarnDefiCoin",
          "symbol": "anyEDC",
          "decimals": 9
        },
        "underlying": {
          "address": "0xa7840988974dd20a78b9f21d95366c46c7637996",
          "name": "EarnDefiCoin",
          "symbol": "EDC",
          "decimals": 9
        },
        "destChains": {},
        "price": 1.51,
        "logoUrl": "https://assets.coingecko.com/coins/images/15157/large/Wechat-IMG33-1.png",
        "chainId": "56",
        "tokenid": "anyEDC",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x885c5fb8f0e67b2b0cf3a437e6cc6ebc0f9f9014": {
        "address": "0x885c5fb8f0e67b2b0cf3a437e6cc6ebc0f9f9014",
        "anyToken": {
          "address": "0x92fe6753ba36ba74200f3f2c9a3b5a58ec02d049",
          "name": "GemGuardian",
          "symbol": "anyGEMG",
          "decimals": 18
        },
        "underlying": {
          "address": "0x885c5fb8f0e67b2b0cf3a437e6cc6ebc0f9f9014",
          "name": "GemGuardian",
          "symbol": "GEMG",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00898941,
        "logoUrl": "https://assets.coingecko.com/coins/images/18614/large/gemg.PNG",
        "chainId": "56",
        "tokenid": "anyGEMG",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x9a78649501bbaac285ea4187299471b7ad4abd35": {
        "address": "0x9a78649501bbaac285ea4187299471b7ad4abd35",
        "anyToken": {
          "address": "0xf2e28bb41ad0172217d0d219d9beda478467b9ca",
          "name": "DinosaurEggsToken",
          "symbol": "anyDSG",
          "decimals": 18
        },
        "underlying": {
          "address": "0x9a78649501bbaac285ea4187299471b7ad4abd35",
          "name": "DinosaurEggsToken",
          "symbol": "DSG",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00069132,
        "logoUrl": "https://assets.coingecko.com/coins/images/18893/large/dsg.PNG",
        "chainId": "56",
        "tokenid": "anyDSG",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x19a4866a85c652eb4a2ed44c42e4cb2863a62d51": {
        "address": "0x19a4866a85c652eb4a2ed44c42e4cb2863a62d51",
        "anyToken": {
          "address": "0xa0eda2d19211d108772711a3698c69f79673aec8",
          "name": "Hodooi.comToken",
          "symbol": "anyHOD",
          "decimals": 18
        },
        "underlying": {
          "address": "0x19a4866a85c652eb4a2ed44c42e4cb2863a62d51",
          "name": "Hodooi.comToken",
          "symbol": "HOD",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xce16a802725438af9b4dcac00e7791e3d890e3b4",
            "underlying": {
              "address": "0xce16a802725438af9b4dcac00e7791e3d890e3b4",
              "name": "Hodooi.com",
              "symbol": "HOD",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "120000000",
            "MinimumSwap": "2000",
            "BigValueThreshold": "24000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "24000",
            "MinimumSwapFee": "1910",
            "anyToken": {
              "address": "0x8cd309e14575203535ef120b5b0ab4dded0c2073",
              "name": "Hodooi.com",
              "symbol": "anyHOD",
              "decimals": 18
            }
          }
        },
        "price": 0.00243978,
        "logoUrl": "https://assets.coingecko.com/coins/images/16301/large/HoDooi-Logo-V2-White-02.png",
        "chainId": "56",
        "tokenid": "anyHOD",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x70905594023cb2f37f3103fdc70315ad1601d6ef": {
        "address": "0x70905594023cb2f37f3103fdc70315ad1601d6ef",
        "anyToken": {
          "address": "0xa2b0217943f826ba3ce0753316e0d78fc50fd581",
          "name": "Polaris",
          "symbol": "anyPOLAR",
          "decimals": 18
        },
        "underlying": {
          "address": "0x70905594023cb2f37f3103fdc70315ad1601d6ef",
          "name": "Polaris",
          "symbol": "POLARv3",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00039803,
        "logoUrl": "https://assets.coingecko.com/coins/images/14606/large/Polaris.png",
        "chainId": "56",
        "tokenid": "anyPOLAR",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x4b6000f9163de2e3f0a01ec37e06e1469dbbce9d": {
        "address": "0x4b6000f9163de2e3f0a01ec37e06e1469dbbce9d",
        "anyToken": {
          "address": "0xe1168753035cfb5bf8841bef92355c583e5b704b",
          "name": "KeyFi Token",
          "symbol": "anyKEYFI",
          "decimals": 18
        },
        "underlying": {
          "address": "0x4b6000f9163de2e3f0a01ec37e06e1469dbbce9d",
          "name": "KeyFi Token",
          "symbol": "KEYFI",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xb8647e90c0645152fccf4d9abb6b59eb4aa99052",
            "underlying": {
              "address": "0xb8647e90c0645152fccf4d9abb6b59eb4aa99052",
              "name": "KeyFi Token",
              "symbol": "KEYFI",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "6400000",
            "MinimumSwap": "115",
            "BigValueThreshold": "1300000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1273",
            "MinimumSwapFee": "102",
            "anyToken": {
              "address": "0xafb2780cbb58b2af27023eb2a0e60c8ca0eee9bb",
              "name": "KeyFi Token",
              "symbol": "anyKEYFI",
              "decimals": 18
            }
          }
        },
        "price": 0.04439985,
        "logoUrl": "https://assets.coingecko.com/coins/images/15098/large/keyfi_logo.jpg",
        "chainId": "56",
        "tokenid": "anyKEYFI",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x04f73a09e2eb410205be256054794fb452f0d245": {
        "address": "0x04f73a09e2eb410205be256054794fb452f0d245",
        "anyToken": {
          "address": "0xb969792e669b92e2e6d33441a0c6caf3aee1d01d",
          "name": "DxSale.Network",
          "symbol": "anySALE",
          "decimals": 18
        },
        "underlying": {
          "address": "0x04f73a09e2eb410205be256054794fb452f0d245",
          "name": "DxSale.Network",
          "symbol": "SALE",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xf063fe1ab7a291c5d06a86e14730b00bf24cb589",
            "underlying": {
              "address": "0xf063fe1ab7a291c5d06a86e14730b00bf24cb589",
              "name": "DxSale.Network",
              "symbol": "SALE",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "7100000",
            "MinimumSwap": "127",
            "BigValueThreshold": "1500000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1410",
            "MinimumSwapFee": "113",
            "anyToken": {
              "address": "0x8323fcf06d58f49533da60906d731c6a56626fb2",
              "name": "DxSale.Network",
              "symbol": "anySALE",
              "decimals": 18
            }
          }
        },
        "price": 0.127928,
        "logoUrl": "https://assets.coingecko.com/coins/images/12250/large/dx-light.png",
        "chainId": "56",
        "tokenid": "anySALE",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x27a339d9b59b21390d7209b78a839868e319301b": {
        "address": "0x27a339d9b59b21390d7209b78a839868e319301b",
        "anyToken": {
          "address": "0xc3a134d42d93f3168931c0e4ac3ed8ab7096267f",
          "name": "OpenWorld",
          "symbol": "anyOPEN",
          "decimals": 18
        },
        "underlying": {
          "address": "0x27a339d9b59b21390d7209b78a839868e319301b",
          "name": "Openworld",
          "symbol": "OPEN",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.0200907,
        "logoUrl": "https://assets.coingecko.com/coins/images/19416/large/open-world-icon-logo-favicon.png",
        "chainId": "56",
        "tokenid": "anyOPEN",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xc748673057861a797275cd8a068abb95a902e8de": {
        "address": "0xc748673057861a797275cd8a068abb95a902e8de",
        "anyToken": {
          "address": "0xf9d051603fa3a69967e93c5b506ccf0292ccd849",
          "name": "Baby Doge Coin",
          "symbol": "anyBabyDoge",
          "decimals": 9
        },
        "underlying": {
          "address": "0xc748673057861a797275cd8a068abb95a902e8de",
          "name": "BabyDogeCoin",
          "symbol": "BabyDoge",
          "decimals": 9
        },
        "destChains": {
          "1": {
            "address": "0xac57de9c1a09fec648e93eb98875b212db0d460b",
            "underlying": {
              "address": "0xac57de9c1a09fec648e93eb98875b212db0d460b",
              "name": "Baby Doge Coin",
              "symbol": "BabyDoge",
              "decimals": 9
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "1720000000000000",
            "MinimumSwap": "30000000000",
            "BigValueThreshold": "343000000000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "343000000000",
            "MinimumSwapFee": "27500000000",
            "anyToken": {
              "address": "0x8b92ea35171e29948cc9e49c52ac8db0549b7d6b",
              "name": "Baby Doge Coin",
              "symbol": "anyBabyDoge",
              "decimals": 9
            }
          }
        },
        "price": 1.945e-9,
        "logoUrl": "https://assets.coingecko.com/coins/images/16125/large/Baby_Doge.png",
        "chainId": "56",
        "tokenid": "anyBabyDoge",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xfe56d5892bdffc7bf58f2e84be1b2c32d21c308b": {
        "address": "0xfe56d5892bdffc7bf58f2e84be1b2c32d21c308b",
        "anyToken": {
          "address": "0x5650c49d662cb83666ab0fad224453b603179d2a",
          "name": "Kyber Network Crystal",
          "symbol": "anyKNC",
          "decimals": 18
        },
        "underlying": {
          "address": "0xfe56d5892bdffc7bf58f2e84be1b2c32d21c308b",
          "name": "Kyber Network Crystal",
          "symbol": "KNC",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xdefa4e8a7bcba345f687a2f1456f5edd9ce97202",
            "underlying": {
              "address": "0xdefa4e8a7bcba345f687a2f1456f5edd9ce97202",
              "name": "Kyber Network Crystal v2",
              "symbol": "KNC",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "1113585.75",
            "MinimumSwap": "20.04",
            "BigValueThreshold": "222717.15",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "222.72",
            "MinimumSwapFee": "17.817",
            "anyToken": {
              "address": "0x7beb05cf5681f402e762f8569c2fc138a2172978",
              "name": "Kyber Network Crystal v2",
              "symbol": "anyKNC",
              "decimals": 18
            }
          }
        },
        "price": 0.618245,
        "logoUrl": "https://assets.coingecko.com/coins/images/14899/large/RwdVsGcw_400x400.jpg",
        "chainId": "56",
        "tokenid": "anyKNC",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x794baab6b878467f93ef17e2f2851ce04e3e34c8": {
        "address": "0x794baab6b878467f93ef17e2f2851ce04e3e34c8",
        "anyToken": {
          "address": "0x0acaabc390d7d7134eef4166f61e3e30b362f675",
          "name": "YIN Finance",
          "symbol": "anyYIN",
          "decimals": 18
        },
        "underlying": {
          "address": "0x794baab6b878467f93ef17e2f2851ce04e3e34c8",
          "name": "YIN Finance",
          "symbol": "YIN",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x794baab6b878467f93ef17e2f2851ce04e3e34c8",
            "underlying": {
              "address": "0x794baab6b878467f93ef17e2f2851ce04e3e34c8",
              "name": "YIN Finance",
              "symbol": "YIN",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "6200000",
            "MinimumSwap": "111",
            "BigValueThreshold": "1300000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1230",
            "MinimumSwapFee": "98.5",
            "anyToken": {
              "address": "0x52dc835d5a36fdf9e6a84603cfef82298645635c",
              "name": "YIN Finance",
              "symbol": "anyYIN",
              "decimals": 18
            }
          }
        },
        "price": 0.01386825,
        "logoUrl": "https://assets.coingecko.com/coins/images/18272/large/e37387ae6ee756fd.jpg",
        "chainId": "56",
        "tokenid": "anyYIN",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x22648c12acd87912ea1710357b1302c6a4154ebc": {
        "address": "0x22648c12acd87912ea1710357b1302c6a4154ebc",
        "anyToken": {
          "address": "0xfe4c11f7db2dde18f2952c52f37abbeb120ab728",
          "name": "Wrapped CHI",
          "symbol": "anyWCHI",
          "decimals": 8
        },
        "underlying": {
          "address": "0x22648c12acd87912ea1710357b1302c6a4154ebc",
          "name": "WrappedCHI",
          "symbol": "WCHI",
          "decimals": 8
        },
        "destChains": {},
        "price": 0.06807,
        "logoUrl": "https://assets.coingecko.com/coins/images/2091/large/xaya_logo-1.png",
        "chainId": "56",
        "tokenid": "anyWCHI",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x8690cb98496ef0f8c6417d78b5e0e29907668808": {
        "address": "0x8690cb98496ef0f8c6417d78b5e0e29907668808",
        "anyToken": {
          "address": "0x2630c7d2104b92721357b3735412ce647a28ed8a",
          "name": "Wraith Protocol",
          "symbol": "anyWRAITH",
          "decimals": 9
        },
        "underlying": {
          "address": "0x8690cb98496ef0f8c6417d78b5e0e29907668808",
          "name": "Wraith Protocol",
          "symbol": "WRAITH",
          "decimals": 9
        },
        "destChains": {},
        "price": 2.542e-9,
        "logoUrl": "https://assets.coingecko.com/coins/images/19341/large/CG_%282%29.png",
        "chainId": "56",
        "tokenid": "anyWRAITH",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xbc420bc2c015d1579f77e4a5c68270b75f2ddb9d": {
        "address": "0xbc420bc2c015d1579f77e4a5c68270b75f2ddb9d",
        "anyToken": {
          "address": "0x2ba9288c577c04cd1a5770810a9d4dcbb5ecb464",
          "name": "CherrySwapToken",
          "symbol": "anyCHE",
          "decimals": 18
        },
        "underlying": {
          "address": "0xbc420bc2c015d1579f77e4a5c68270b75f2ddb9d",
          "name": "CherrySwap Token",
          "symbol": "CHE",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.02913798,
        "logoUrl": "https://assets.coingecko.com/coins/images/17502/large/cherry.PNG",
        "chainId": "56",
        "tokenid": "anyCHE",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x7242dbed15630a29ea5347898fa15ff8d5eb3593": {
        "address": "0x7242dbed15630a29ea5347898fa15ff8d5eb3593",
        "anyToken": {
          "address": "0x03ee4919bf3cfb9b0362e17f739f8c2973616a86",
          "name": "Health Potion",
          "symbol": "anyHEP",
          "decimals": 0
        },
        "underlying": {
          "address": "0x7242dbed15630a29ea5347898fa15ff8d5eb3593",
          "name": "Health Potion",
          "symbol": "HEP",
          "decimals": 0
        },
        "destChains": {},
        "price": 0.00013219,
        "logoUrl": "https://assets.coingecko.com/coins/images/18705/large/0xfd83168291312a0800f44610974350c569d12e42.png",
        "chainId": "56",
        "tokenid": "anyHEP",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xbac1df744df160877cdc45e13d0394c06bc388ff": {
        "address": "0xbac1df744df160877cdc45e13d0394c06bc388ff",
        "anyToken": {
          "address": "0x54511c749f5af298fc7e5ffc9779280f104028e3",
          "name": "NFTmall GEM Token",
          "symbol": "anyGEM",
          "decimals": 18
        },
        "underlying": {
          "address": "0xbac1df744df160877cdc45e13d0394c06bc388ff",
          "name": "NFTmall GEM Token",
          "symbol": "GEM",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x9b17baadf0f21f03e35249e0e59723f34994f806",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "41000000",
            "MinimumSwap": "736",
            "BigValueThreshold": "8200000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "8176",
            "MinimumSwapFee": "654",
            "anyToken": {
              "address": "0x9b17baadf0f21f03e35249e0e59723f34994f806",
              "name": "NFTmall GEM Token",
              "symbol": "GEM",
              "decimals": 18
            }
          }
        },
        "price": 0.00762226,
        "logoUrl": "https://assets.coingecko.com/coins/images/16217/thumb/Icon-1000x1000.png",
        "chainId": "56",
        "tokenid": "anyGEM",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x61d5822dd7b3ed495108733e6550d4529480c8f6": {
        "address": "0x61d5822dd7b3ed495108733e6550d4529480c8f6",
        "anyToken": {
          "address": "0xe77b2e0347cc910d7ad9dc1a8f97108c825cf81f",
          "name": "Pancake GAMES",
          "symbol": "anyGCAKE",
          "decimals": 18
        },
        "underlying": {
          "address": "0x61d5822dd7b3ed495108733e6550d4529480c8f6",
          "name": "Pancake GAMES",
          "symbol": "GCAKE",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x5f944b0c4315cb7c3a846b025ab4045da44abf6c",
            "underlying": {
              "address": "0x5f944b0c4315cb7c3a846b025ab4045da44abf6c",
              "name": "PANCAKE GAMES",
              "symbol": "GCAKE",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "400000000000",
            "MinimumSwap": "6100000",
            "BigValueThreshold": "68000000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "68000000",
            "MinimumSwapFee": "5500000",
            "anyToken": {
              "address": "0x015cea338ce68bd912b3c704620c6000ee9f4ab9",
              "name": "PANCAKE GAMES",
              "symbol": "anyGCAKE",
              "decimals": 18
            }
          }
        },
        "price": 4.69397e-7,
        "logoUrl": "https://assets.coingecko.com/coins/images/20217/large/6oc-L2UC_400x400.png",
        "chainId": "56",
        "tokenid": "anyGCAKE",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x4691937a7508860f876c9c0a2a617e7d9e945d4b": {
        "address": "0x4691937a7508860f876c9c0a2a617e7d9e945d4b",
        "anyToken": {
          "address": "0x5022a3772357a2bba192a4d93a918446492baa94",
          "name": "Wootrade Network",
          "symbol": "anyWOO",
          "decimals": 18
        },
        "underlying": {
          "address": "0x4691937a7508860f876c9c0a2a617e7d9e945d4b",
          "name": "Wootrade Network",
          "symbol": "WOO",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x4691937a7508860f876c9c0a2a617e7d9e945d4b",
            "underlying": {
              "address": "0x4691937a7508860f876c9c0a2a617e7d9e945d4b",
              "name": "WootradeNetwork",
              "symbol": "WOO",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "5000000",
            "MinimumSwap": "87",
            "BigValueThreshold": "1000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "962",
            "MinimumSwapFee": "77",
            "anyToken": {
              "address": "0x95555e4e4cb2c094914af53598eff14b9340881f",
              "name": "Wootrade Network",
              "symbol": "anyWOO",
              "decimals": 18
            }
          }
        },
        "price": 0.20889,
        "logoUrl": "https://assets.coingecko.com/coins/images/12921/large/w2UiemF__400x400.jpg",
        "chainId": "56",
        "tokenid": "anyWOO",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x8729438eb15e2c8b576fcc6aecda6a148776c0f5": {
        "address": "0x8729438eb15e2c8b576fcc6aecda6a148776c0f5",
        "anyToken": {
          "address": "0x3c48d39479c4e34657aa141543c56bf340967de8",
          "name": "BENQI",
          "symbol": "anyQI",
          "decimals": 18
        },
        "underlying": {
          "address": "0x8729438eb15e2c8b576fcc6aecda6a148776c0f5",
          "name": "BENQI",
          "symbol": "QI",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.0072205,
        "logoUrl": "https://assets.coingecko.com/coins/images/16362/large/p0f8Wjvn_400x400.jpg",
        "chainId": "56",
        "tokenid": "anyQI2",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x4ef06d1a55962f29d362c53c864a4f0c791dcb9e": {
        "address": "0x4ef06d1a55962f29d362c53c864a4f0c791dcb9e",
        "anyToken": {
          "address": "0x5003c91913944f9a0ae82c729508808b3f7c7c7e",
          "name": "Myōbu",
          "symbol": "anyMYOBU",
          "decimals": 9
        },
        "underlying": {
          "address": "0x4ef06d1a55962f29d362c53c864a4f0c791dcb9e",
          "name": "Myōbu",
          "symbol": "MYOBU",
          "decimals": 9
        },
        "destChains": {
          "1": {
            "address": "0xdfdd3459d4f87234751696840092ee20c970fb07",
            "underlying": {
              "address": "0xdfdd3459d4f87234751696840092ee20c970fb07",
              "name": "Myōbu",
              "symbol": "MYOBU",
              "decimals": 9
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "290000000000",
            "MinimumSwap": "5137000",
            "BigValueThreshold": "58000000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "57080000",
            "MinimumSwapFee": "4567000",
            "anyToken": {
              "address": "0x34f380a4e3389e99c0369264453523bbe5af7fab",
              "name": "Myōbu",
              "symbol": "anyMYOBU",
              "decimals": 9
            }
          }
        },
        "price": 1.11721e-7,
        "logoUrl": "https://assets.coingecko.com/coins/images/16122/small/myobu.png",
        "chainId": "56",
        "tokenid": "anyMYOBU",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x4374f26f0148a6331905edf4cd33b89d8eed78d1": {
        "address": "0x4374f26f0148a6331905edf4cd33b89d8eed78d1",
        "anyToken": {
          "address": "0x6c01361d8dbaf43b81b52da3efae7dab1b8fffe9",
          "name": "Yoshi.exchange",
          "symbol": "anyYOSHI",
          "decimals": 18
        },
        "underlying": {
          "address": "0x4374f26f0148a6331905edf4cd33b89d8eed78d1",
          "name": "Yoshi.exchange",
          "symbol": "YOSHI",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x4374f26f0148a6331905edf4cd33b89d8eed78d1",
            "underlying": {
              "address": "0x4374f26f0148a6331905edf4cd33b89d8eed78d1",
              "name": "Yoshi.exchange",
              "symbol": "YOSHI",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "3184713.38",
            "MinimumSwap": "57.32",
            "BigValueThreshold": "636942.68",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "636.94",
            "MinimumSwapFee": "25.48",
            "anyToken": {
              "address": "0xf75565b89ba076b8fc7b9708d14855fd3da89e97",
              "name": "Yoshi.exchange",
              "symbol": "anyYOSHI",
              "decimals": 18
            }
          }
        },
        "price": 0.080424,
        "logoUrl": "https://assets.coingecko.com/coins/images/19355/small/YOSHI_200.png",
        "chainId": "56",
        "tokenid": "anyYOSHI",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xd399359683c1cd5267f611261ede08f22ce9729f": {
        "address": "0xd399359683c1cd5267f611261ede08f22ce9729f",
        "anyToken": {
          "address": "0x98d939325313ae0129c377b3eabdf39188b38760",
          "name": "Mainstream For The Underground",
          "symbol": "anyMFTU",
          "decimals": 18
        },
        "underlying": {
          "address": "0xd399359683c1cd5267f611261ede08f22ce9729f",
          "name": "Mainstream For The Underground",
          "symbol": "MFTU",
          "decimals": 18
        },
        "destChains": {},
        "price": 1e-17,
        "logoUrl": "https://assets.coingecko.com/coins/images/5519/large/Mainstream_for_the_underground.png",
        "chainId": "56",
        "tokenid": "anyMFTU",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x8fb1a59ca2d57b51e5971a85277efe72c4492983": {
        "address": "0x8fb1a59ca2d57b51e5971a85277efe72c4492983",
        "anyToken": {
          "address": "0x0dbc3e02d8ef0c4c1f7e429c5a3a9aaeedf18a75",
          "name": "Diamonds Are Forever",
          "symbol": "anyDAF",
          "decimals": 6
        },
        "underlying": {
          "address": "0x8fb1a59ca2d57b51e5971a85277efe72c4492983",
          "name": "Diamonds Are Forever",
          "symbol": "DAF",
          "decimals": 6
        },
        "destChains": {},
        "price": 0.00039305,
        "logoUrl": "https://assets.coingecko.com/coins/images/17378/large/dafin.PNG",
        "chainId": "56",
        "tokenid": "anyDAF",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x19a6da6e382b85f827088092a3dbe864d9ccba73": {
        "address": "0x19a6da6e382b85f827088092a3dbe864d9ccba73",
        "anyToken": {
          "address": "0xae555cd91c93b1ac8940b8e2e845000c8781c468",
          "name": "Bison",
          "symbol": "anyBISON",
          "decimals": 18
        },
        "underlying": {
          "address": "0x19a6da6e382b85f827088092a3dbe864d9ccba73",
          "name": "Bison",
          "symbol": "BISON",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.02108227,
        "logoUrl": "https://assets.coingecko.com/coins/images/17198/large/bzkeIcC.png",
        "chainId": "56",
        "tokenid": "anyBISON",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x0856978f7ffff0a2471b4520e3521c4b3343e36f": {
        "address": "0x0856978f7ffff0a2471b4520e3521c4b3343e36f",
        "anyToken": {
          "address": "0x051048fda2c88e1bed3af811fa3dcd10ddd350a0",
          "name": "Binance-Peg IDEX Token",
          "symbol": "anyIDEX",
          "decimals": 18
        },
        "underlying": {
          "address": "0x0856978f7ffff0a2471b4520e3521c4b3343e36f",
          "name": "IDEX Token ",
          "symbol": "IDEX",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.081441,
        "logoUrl": "https://assets.coingecko.com/coins/images/2565/large/logomark-purple-286x286.png",
        "chainId": "56",
        "tokenid": "anyIDEX",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x181de8c57c4f25eba9fd27757bbd11cc66a55d31": {
        "address": "0x181de8c57c4f25eba9fd27757bbd11cc66a55d31",
        "anyToken": {
          "address": "0x323ba4181ed3d7a7e267330c27c176a006f91313",
          "name": "BelugaToken",
          "symbol": "anyBELUGA",
          "decimals": 18
        },
        "underlying": {
          "address": "0x181de8c57c4f25eba9fd27757bbd11cc66a55d31",
          "name": "BelugaToken",
          "symbol": "BELUGA",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xc857852ad17b116a42638b034182324f725b1e82",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "0",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "64135.454079",
            "MinimumSwap": "1.154438",
            "BigValueThreshold": "12827.090816",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "12.827091",
            "MinimumSwapFee": "1.026167",
            "anyToken": {
              "address": "0xc857852ad17b116a42638b034182324f725b1e82",
              "name": "Beluga.fi",
              "symbol": "BELUGA",
              "decimals": 18
            }
          }
        },
        "price": 30.09,
        "logoUrl": "https://assets.coingecko.com/coins/images/13790/large/brand-logo-v2.23e5d279.png",
        "chainId": "56",
        "tokenid": "anyBELUGA",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xa3499dd7dbbbd93cb0f8303f8a8ace8d02508e73": {
        "address": "0xa3499dd7dbbbd93cb0f8303f8a8ace8d02508e73",
        "anyToken": {
          "address": "0xccb24022c573b6c3877bf9eb19716c037b11d9eb",
          "name": "Lovelace",
          "symbol": "anyLACE",
          "decimals": 18
        },
        "underlying": {
          "address": "0xa3499dd7dbbbd93cb0f8303f8a8ace8d02508e73",
          "name": "Lovelace",
          "symbol": "LACE",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xc789f877fbb6aa4457ee5531cceb76da6d3d1e3f",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "5500000",
            "MinimumSwap": "93",
            "BigValueThreshold": "1100000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1031",
            "MinimumSwapFee": "82.5",
            "anyToken": {
              "address": "0xc789f877fbb6aa4457ee5531cceb76da6d3d1e3f",
              "name": "Lovelace",
              "symbol": "LACE",
              "decimals": 18
            }
          }
        },
        "price": 0.00183719,
        "logoUrl": "https://assets.coingecko.com/coins/images/20801/large/voOmcwrV_400x400.jpg",
        "chainId": "56",
        "tokenid": "anyLACE",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xce86f7fcd3b40791f63b86c3ea3b8b355ce2685b": {
        "address": "0xce86f7fcd3b40791f63b86c3ea3b8b355ce2685b",
        "anyToken": {
          "address": "0x514f696af215a33bc9856cd39bb4b3f7c04db690",
          "name": "MahaDAO",
          "symbol": "anyMAHA",
          "decimals": 18
        },
        "underlying": {
          "address": "0xce86f7fcd3b40791f63b86c3ea3b8b355ce2685b",
          "name": "MahaDAO",
          "symbol": "MAHA",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x745407c86df8db893011912d3ab28e68b62e49b0",
            "underlying": {
              "address": "0x745407c86df8db893011912d3ab28e68b62e49b0",
              "name": "MahaDAO",
              "symbol": "MAHA",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "6951859.761523",
            "MinimumSwap": "69.518598",
            "BigValueThreshold": "1390371.952305",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1390.371952",
            "MinimumSwapFee": "55.614878",
            "anyToken": {
              "address": "0x52c5d8d23b05c9bbcdf22369099350c2be4c5754",
              "name": "MahaDAO",
              "symbol": "anyMAHA",
              "decimals": 18
            }
          }
        },
        "price": 0.506912,
        "logoUrl": "https://assets.coingecko.com/coins/images/13404/large/MAHA_Token.png",
        "chainId": "56",
        "tokenid": "anyMAHA",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xf2c96e402c9199682d5ded26d3771c6b192c01af": {
        "address": "0xf2c96e402c9199682d5ded26d3771c6b192c01af",
        "anyToken": {
          "address": "0x3da9769665849bd67139cf67735445deea16340d",
          "name": "Scallop",
          "symbol": "anySCLP",
          "decimals": 18
        },
        "underlying": {
          "address": "0xf2c96e402c9199682d5ded26d3771c6b192c01af",
          "name": "Scallop",
          "symbol": "SCLP",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x3f6d1649a1366b0e82173d33e365953f9f1cc84c",
            "underlying": {
              "address": "0x3f6d1649a1366b0e82173d33e365953f9f1cc84c",
              "name": "ScallopX",
              "symbol": "SCLP",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "3200000",
            "MinimumSwap": "57",
            "BigValueThreshold": "630000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "630",
            "MinimumSwapFee": "50.4",
            "anyToken": {
              "address": "0xa4fffc757e8c4f24e7b209c033c123d20983ad40",
              "name": "ScallopX",
              "symbol": "anySCLP",
              "decimals": 18
            }
          }
        },
        "price": 0.178993,
        "logoUrl": "https://assets.coingecko.com/coins/images/19059/large/scallop.PNG",
        "chainId": "56",
        "tokenid": "anySCLP",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x0e5f989ce525acc4ee45506af91964f7f4c9f2e9": {
        "address": "0x0e5f989ce525acc4ee45506af91964f7f4c9f2e9",
        "anyToken": {
          "address": "0x91648237a47585242f1f8ad10e84dd03fa95ec4e",
          "name": "RYOSHI TOKEN",
          "symbol": "anyRYOSHI",
          "decimals": 9
        },
        "underlying": {
          "address": "0x0e5f989ce525acc4ee45506af91964f7f4c9f2e9",
          "name": "RYOSHI TOKEN",
          "symbol": "RYOSHI",
          "decimals": 9
        },
        "destChains": {
          "1": {
            "address": "0x9ac59862934ebc36072d4d8ada37c62373a13856",
            "underlying": {
              "address": "0x9ac59862934ebc36072d4d8ada37c62373a13856",
              "name": "RYOSHI TOKEN",
              "symbol": "RYOSHI",
              "decimals": 9
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "140000000000000",
            "MinimumSwap": "2500000000",
            "BigValueThreshold": "28000000000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "27200000000",
            "MinimumSwapFee": "2200000000",
            "anyToken": {
              "address": "0x758d08864fb6cce3062667225ca10b8f00496cc2",
              "name": "RYOSHI TOKEN",
              "symbol": "anyRYOSHI",
              "decimals": 9
            }
          }
        },
        "price": 4.83886e-10,
        "logoUrl": "https://assets.coingecko.com/coins/images/16394/large/RyoshiLogo.png.jpg",
        "chainId": "56",
        "tokenid": "anyRYOSHI",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xd8cb4c2369db13c94c90c7fd3bebc9757900ee6b": {
        "address": "0xd8cb4c2369db13c94c90c7fd3bebc9757900ee6b",
        "anyToken": {
          "address": "0x2bfdf2adc0e8f738c4a1bca25c5c1d36072eba31",
          "name": "NapoleonX Token",
          "symbol": "anyNPXB",
          "decimals": 18
        },
        "underlying": {
          "address": "0xd8cb4c2369db13c94c90c7fd3bebc9757900ee6b",
          "name": "NapoleonX Token",
          "symbol": "NPXB",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x28b5e12cce51f15594b0b91d5b5adaa70f684a02",
            "underlying": {
              "address": "0x28b5e12cce51f15594b0b91d5b5adaa70f684a02",
              "name": "NapoleonX Token",
              "symbol": "NPX",
              "decimals": 2
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "35000000",
            "MinimumSwap": "603",
            "BigValueThreshold": "7000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "6692",
            "MinimumSwapFee": "536",
            "anyToken": {
              "address": "0x40d4c6ceca870a0439dc0232d40cf8be8b425baf",
              "name": "NapoleonX",
              "symbol": "anyNPX",
              "decimals": 2
            }
          }
        },
        "price": 0.01387195,
        "logoUrl": "https://assets.coingecko.com/coins/images/1471/large/napoleon-x.jpg",
        "chainId": "56",
        "tokenid": "anyNPX",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x12bb890508c125661e03b09ec06e404bc9289040": {
        "address": "0x12bb890508c125661e03b09ec06e404bc9289040",
        "anyToken": {
          "address": "0xe6de9f70d5a4ec9da52ce35f449794eba826de72",
          "name": "Radio Caca V2",
          "symbol": "anyRACA",
          "decimals": 18
        },
        "underlying": {
          "address": "0x12bb890508c125661e03b09ec06e404bc9289040",
          "name": "Radio Caca V2",
          "symbol": "RACA",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x12bb890508c125661e03b09ec06e404bc9289040",
            "underlying": {
              "address": "0x12bb890508c125661e03b09ec06e404bc9289040",
              "name": "Radio Caca V2",
              "symbol": "RACA",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "1300000000",
            "MinimumSwap": "22548",
            "BigValueThreshold": "260000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "250530",
            "MinimumSwapFee": "20043",
            "anyToken": {
              "address": "0x16aba2d28329620f31d44748ec82fa08daa50b86",
              "name": "Radio Caca V2",
              "symbol": "anyRACA",
              "decimals": 18
            }
          }
        },
        "price": 0.00015299,
        "logoUrl": "https://assets.coingecko.com/coins/images/17841/large/ez44_BSs_400x400.jpg",
        "chainId": "56",
        "tokenid": "anyRACA",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x51c5807dd8398aedfcc91e6483417838b41eaeb8": {
        "address": "0x51c5807dd8398aedfcc91e6483417838b41eaeb8",
        "anyToken": {
          "address": "0xfa6ddbae80dfbf91512fbbedd8a06bb9b25d6988",
          "name": "KingFund",
          "symbol": "anyKING",
          "decimals": 18
        },
        "underlying": {
          "address": "0x51c5807dd8398aedfcc91e6483417838b41eaeb8",
          "name": "KingFund",
          "symbol": "KING",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.04098869,
        "logoUrl": "https://assets.coingecko.com/coins/images/19294/large/qrMmmKLS_400x400.jpg",
        "chainId": "56",
        "tokenid": "anyKING",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xca3f508b8e4dd382ee878a314789373d80a5190a": {
        "address": "0xca3f508b8e4dd382ee878a314789373d80a5190a",
        "anyToken": {
          "address": "0x1ab7de6ac4ef91ea4f10fabe444b9a2e727ec89b",
          "name": "beefy.finance",
          "symbol": "anyBIFI",
          "decimals": 18
        },
        "underlying": {
          "address": "0xca3f508b8e4dd382ee878a314789373d80a5190a",
          "name": "beefy.finance",
          "symbol": "BIFI",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x5870700f1272a1adbb87c3140bd770880a95e55d",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "11403.808872",
            "MinimumSwap": "0.114038",
            "BigValueThreshold": "2280.761774",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "2.280762",
            "MinimumSwapFee": "0.09123",
            "anyToken": {
              "address": "0x5870700f1272a1adbb87c3140bd770880a95e55d",
              "name": "beefy.finance",
              "symbol": "BIFI",
              "decimals": 18
            }
          },
          "1313161554": {
            "address": "0x218c3c3d49d0e7b37aff0d8bb079de36ae61a4c0",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "3500",
            "MinimumSwap": "0.007",
            "BigValueThreshold": "700",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "0.7",
            "MinimumSwapFee": "0.0035",
            "anyToken": {
              "address": "0x218c3c3d49d0e7b37aff0d8bb079de36ae61a4c0",
              "name": "beefy.finance",
              "symbol": "BIFI",
              "decimals": 18
            }
          }
        },
        "price": 432.91,
        "logoUrl": "https://assets.coingecko.com/coins/images/12704/large/token.png",
        "chainId": "56",
        "tokenid": "anyBIFI",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xa803778ab953d3ffe4fbd20cfa0042ecefe8319d": {
        "address": "0xa803778ab953d3ffe4fbd20cfa0042ecefe8319d",
        "anyToken": {
          "address": "0x9adbbc5410a30f3d71473efe7ed5e27cb6c02e1c",
          "name": "Totem Earth Systems",
          "symbol": "anyCTZN",
          "decimals": 18
        },
        "underlying": {
          "address": "0xa803778ab953d3ffe4fbd20cfa0042ecefe8319d",
          "name": "Totem Earth Systems",
          "symbol": "CTZN",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xa803778ab953d3ffe4fbd20cfa0042ecefe8319d",
            "underlying": {
              "address": "0xa803778ab953d3ffe4fbd20cfa0042ecefe8319d",
              "name": "Totem Earth Systems",
              "symbol": "CTZN",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "36000000",
            "MinimumSwap": "632",
            "BigValueThreshold": "7100000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "7018",
            "MinimumSwapFee": "562",
            "anyToken": {
              "address": "0x2eaa12c0c76ea8192d82b63f8dbbb7ec2a270295",
              "name": "Totem Earth Systems",
              "symbol": "anyCTZN",
              "decimals": 18
            }
          }
        },
        "price": 0.00047217,
        "logoUrl": "https://assets.coingecko.com/coins/images/21558/large/2021-12-19_10.41.00.jpg",
        "chainId": "56",
        "tokenid": "anyCTZN",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x4b8285ab433d8f69cb48d5ad62b415ed1a221e4f": {
        "address": "0x4b8285ab433d8f69cb48d5ad62b415ed1a221e4f",
        "anyToken": {
          "address": "0xe409679a90aba847922682798757c8be8dc54c15",
          "name": "MagicCraft",
          "symbol": "anyMCRT",
          "decimals": 9
        },
        "underlying": {
          "address": "0x4b8285ab433d8f69cb48d5ad62b415ed1a221e4f",
          "name": "MagicCraft",
          "symbol": "MCRT",
          "decimals": 9
        },
        "destChains": {
          "1": {
            "address": "0xde16ce60804a881e9f8c4ebb3824646edecd478d",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "1435424555.520786",
            "MinimumSwap": "25837.641999",
            "BigValueThreshold": "287084911.104157",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "287084.911104",
            "MinimumSwapFee": "22966.792888",
            "anyToken": {
              "address": "0xde16ce60804a881e9f8c4ebb3824646edecd478d",
              "name": "MagicCraft",
              "symbol": "MCRT",
              "decimals": 9
            }
          }
        },
        "price": 0.00356737,
        "logoUrl": "https://assets.coingecko.com/coins/images/21318/large/mcrt.png",
        "chainId": "56",
        "tokenid": "anyMCRT",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x3f56e0c36d275367b8c502090edf38289b3dea0d": {
        "address": "0x3f56e0c36d275367b8c502090edf38289b3dea0d",
        "anyToken": {
          "address": "0xc412ecccaa35621cfcbada4ce203e3ef78c4114a",
          "name": "Mai Stablecoin",
          "symbol": "anyMAI",
          "decimals": 18
        },
        "underlying": {
          "address": "0x3f56e0c36d275367b8c502090edf38289b3dea0d",
          "name": "Mai Stablecoin",
          "symbol": "MAI",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x8d6cebd76f18e1558d4db88138e2defb3909fad6",
            "underlying": {
              "address": "0x8d6cebd76f18e1558d4db88138e2defb3909fad6",
              "name": "Mai Stablecoin",
              "symbol": "MAI",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "5000000",
            "MinimumSwap": "12",
            "BigValueThreshold": "750000",
            "SwapFeeRatePerMillion": 0.02,
            "MaximumSwapFee": "1000",
            "MinimumSwapFee": "9.9",
            "anyToken": {
              "address": "0x4b641f607570b9053035780615f5b56a91f38f90",
              "name": "Mai Stablecoin",
              "symbol": "anyMAI",
              "decimals": 18
            }
          },
          "1313161554": {
            "address": "0xdfa46478f9e5ea86d57387849598dbfb2e964b02",
            "underlying": {
              "address": "0xdfa46478f9e5ea86d57387849598dbfb2e964b02",
              "name": "Mai Stablecoin",
              "symbol": "MAI",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "5000000",
            "MinimumSwap": "12",
            "BigValueThreshold": "750000",
            "SwapFeeRatePerMillion": 0.02,
            "MaximumSwapFee": "1000",
            "MinimumSwapFee": "0.9",
            "anyToken": {
              "address": "0xc9baa8cfdde8e328787e29b4b078abf2dadc2055",
              "name": "Mai Stablecoin",
              "symbol": "MAI",
              "decimals": 18
            }
          }
        },
        "price": 0.995532,
        "logoUrl": "https://assets.coingecko.com/coins/images/15264/large/mimatic-red.png",
        "chainId": "56",
        "tokenid": "anyMAI",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xb067c1dd69d41ffa29f959901c91aa7731cc4e26": {
        "address": "0xb067c1dd69d41ffa29f959901c91aa7731cc4e26",
        "anyToken": {
          "address": "0x447c1c18979e71161eda8c4d0a0b9cb2d0d26ce0",
          "name": "WolfSafePoorPeople",
          "symbol": "anymWSPP",
          "decimals": 18
        },
        "underlying": {
          "address": "0xb067c1dd69d41ffa29f959901c91aa7731cc4e26",
          "name": "Multichain WSPP",
          "symbol": "mWSPP",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00001121,
        "logoUrl": "https://assets.coingecko.com/coins/images/19514/large/wspplogo.png",
        "chainId": "56",
        "tokenid": "anyWSPP",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x7777777777697cfeecf846a76326da79cc606517": {
        "address": "0x7777777777697cfeecf846a76326da79cc606517",
        "anyToken": {
          "address": "0xc20ff003662d9b91b4139ffa6b7c9d69968bad2c",
          "name": "xSigma",
          "symbol": "anySIG",
          "decimals": 18
        },
        "underlying": {
          "address": "0x7777777777697cfeecf846a76326da79cc606517",
          "name": "xSigma",
          "symbol": "SIG",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x7777777777697cfeecf846a76326da79cc606517",
            "underlying": {
              "address": "0x7777777777697cfeecf846a76326da79cc606517",
              "name": "xSigma",
              "symbol": "SIG",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "37000000",
            "MinimumSwap": "659",
            "BigValueThreshold": "7400000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "7320",
            "MinimumSwapFee": "586",
            "anyToken": {
              "address": "0xd5ebd23d5eb968c2efba2b03f27ee61718609a71",
              "name": "xSigma",
              "symbol": "anySIG",
              "decimals": 18
            }
          }
        },
        "price": 0.00463995,
        "logoUrl": "https://assets.coingecko.com/coins/images/14090/large/logo_128.png",
        "chainId": "56",
        "tokenid": "anySIG",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x0feadcc3824e7f3c12f40e324a60c23ca51627fc": {
        "address": "0x0feadcc3824e7f3c12f40e324a60c23ca51627fc",
        "anyToken": {
          "address": "0x378dacb12e3dccca598c37325a2b32c2dc3a4ae4",
          "name": "WardenSwap Token",
          "symbol": "anyWAD",
          "decimals": 18
        },
        "underlying": {
          "address": "0x0feadcc3824e7f3c12f40e324a60c23ca51627fc",
          "name": "WardenSwap Token",
          "symbol": "WAD",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x0b6f3c17e1626a7cbfa4302ce4e3c45522d23a83",
            "underlying": {
              "address": "0x0b6f3c17e1626a7cbfa4302ce4e3c45522d23a83",
              "name": "WardenSwap",
              "symbol": "WAD",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "12000000",
            "MinimumSwap": "215",
            "BigValueThreshold": "2400000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "2370",
            "MinimumSwapFee": "190",
            "anyToken": {
              "address": "0x40df1ae6074c35047bff66675488aa2f9f6384f3",
              "name": "WardenSwap",
              "symbol": "anyWAD",
              "decimals": 18
            }
          }
        },
        "price": 0.01126109,
        "logoUrl": "https://assets.coingecko.com/coins/images/16456/large/WAD.png",
        "chainId": "56",
        "tokenid": "anyWAD",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x9133049fb1fddc110c92bf5b7df635abb70c89dc": {
        "address": "0x9133049fb1fddc110c92bf5b7df635abb70c89dc",
        "anyToken": {
          "address": "0xb097e83211d896650ed0104da3309d3654416bc0",
          "name": "Pink Token",
          "symbol": "anyPINK",
          "decimals": 18
        },
        "underlying": {
          "address": "0x9133049fb1fddc110c92bf5b7df635abb70c89dc",
          "name": "Pink Token",
          "symbol": "PINK",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00159408,
        "logoUrl": "https://assets.coingecko.com/coins/images/16446/large/dot_finance.PNG",
        "chainId": "56",
        "tokenid": "anyPINK",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x047a02a57501a813975b2d347278fdd3df671e86": {
        "address": "0x047a02a57501a813975b2d347278fdd3df671e86",
        "anyToken": {
          "address": "0x2ec59b2105be94d2d94bdd55c447810edd495d3d",
          "name": "2022MOON",
          "symbol": "any2022M",
          "decimals": 18
        },
        "underlying": {
          "address": "0x047a02a57501a813975b2d347278fdd3df671e86",
          "name": "2022MOON",
          "symbol": "2022M",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xd9adb7536e90660f601c5bfb15cb49bfa78ca0a6",
            "underlying": {
              "address": "0xd9adb7536e90660f601c5bfb15cb49bfa78ca0a6",
              "name": "2022MOON",
              "symbol": "2022M",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "230000000000000",
            "MinimumSwap": "4100000000",
            "BigValueThreshold": "46000000000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "46000000000",
            "MinimumSwapFee": "3650000000",
            "anyToken": {
              "address": "0x986a4ea3679afe15b5963a6ec3437be859279bc1",
              "name": "2022MOON",
              "symbol": "any2022M",
              "decimals": 18
            }
          }
        },
        "price": 1.602e-9,
        "logoUrl": "https://assets.coingecko.com/coins/images/20473/large/2022m.png",
        "chainId": "56",
        "tokenid": "any2022M",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x5f99acf13caff815dd9cb4a415c0fb34e9f4545b": {
        "address": "0x5f99acf13caff815dd9cb4a415c0fb34e9f4545b",
        "anyToken": {
          "address": "0x2291fb9abafaad7d701f2cc26f4e89ae2ecb2b8f",
          "name": "TEAsWAP.ART",
          "symbol": "anyTSA",
          "decimals": 18
        },
        "underlying": {
          "address": "0x5f99acf13caff815dd9cb4a415c0fb34e9f4545b",
          "name": "TEAsWAP.ART",
          "symbol": "TSA",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00024991,
        "logoUrl": "https://assets.coingecko.com/coins/images/17826/large/tsa.PNG",
        "chainId": "56",
        "tokenid": "anyTSA",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xf307910a4c7bbc79691fd374889b36d8531b08e3": {
        "address": "0xf307910a4c7bbc79691fd374889b36d8531b08e3",
        "anyToken": {
          "address": "0x14834532cd1aaaca7d271a4d419dcbda0b64f630",
          "name": "Ankr",
          "symbol": "anyANKR",
          "decimals": 18
        },
        "underlying": {
          "address": "0xf307910a4c7bbc79691fd374889b36d8531b08e3",
          "name": "Ankr",
          "symbol": "ANKR",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x8290333cef9e6d528dd5618fb97a76f268f3edd4",
            "underlying": {
              "address": "0x8290333cef9e6d528dd5618fb97a76f268f3edd4",
              "name": "Ankr Network",
              "symbol": "ANKR",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "46000000",
            "MinimumSwap": "822",
            "BigValueThreshold": "9200000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "9130",
            "MinimumSwapFee": "731",
            "anyToken": {
              "address": "0x6362496bef53458b20548a35a2101214ee2be3e0",
              "name": "Ankr Network",
              "symbol": "anyANKR",
              "decimals": 18
            }
          }
        },
        "price": 0.02533028,
        "logoUrl": "https://assets.coingecko.com/coins/images/4324/large/U85xTl2.png",
        "chainId": "56",
        "tokenid": "anyANKR",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xe211299dce465083f5b70f119d6620cb29b9bcac": {
        "address": "0xe211299dce465083f5b70f119d6620cb29b9bcac",
        "anyToken": {
          "address": "0xe06d45e4524b3191f69a01808f911555d8771341",
          "name": "Ape-X",
          "symbol": "anyAPE-X",
          "decimals": 9
        },
        "underlying": {
          "address": "0xe211299dce465083f5b70f119d6620cb29b9bcac",
          "name": "Ape-X",
          "symbol": "APE-X",
          "decimals": 9
        },
        "destChains": {},
        "price": 2.19904e-7,
        "logoUrl": "https://assets.coingecko.com/coins/images/17991/large/apexCGlogo.jpg",
        "chainId": "56",
        "tokenid": "anyAPE-X",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xb955b4cab9aa3b49e23aeb5204ebc5ff6678e86d": {
        "address": "0xb955b4cab9aa3b49e23aeb5204ebc5ff6678e86d",
        "anyToken": {
          "address": "0x51634caff769b4a04d9b40e06198a4c451f896b5",
          "name": "Asian Fintech",
          "symbol": "anyAfin",
          "decimals": 18
        },
        "underlying": {
          "address": "0xb955b4cab9aa3b49e23aeb5204ebc5ff6678e86d",
          "name": "Asian Fintech",
          "symbol": "Afin",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xee9e5eff401ee921b138490d00ca8d1f13f67a72",
            "underlying": {
              "address": "0xee9e5eff401ee921b138490d00ca8d1f13f67a72",
              "name": "Asian Fintech",
              "symbol": "Afin",
              "decimals": 8
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "50000000",
            "MinimumSwap": "900",
            "BigValueThreshold": "10000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "10000",
            "MinimumSwapFee": "800",
            "anyToken": {
              "address": "0x6fefd97f328342a8a840546a55fdcfee7542f9a8",
              "name": "Asian Fintech",
              "symbol": "anyAfin",
              "decimals": 8
            }
          }
        },
        "price": 0.00090756,
        "logoUrl": "https://assets.coingecko.com/coins/images/7519/large/Afinlogo-200x200.png",
        "chainId": "56",
        "tokenid": "anyAfin",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xaf6162dc717cfc8818efc8d6f46a41cf7042fcba": {
        "address": "0xaf6162dc717cfc8818efc8d6f46a41cf7042fcba",
        "anyToken": {
          "address": "0xc40ef4f38a3235f21987f9f13431983cd3025e58",
          "name": "Universal Store of Value",
          "symbol": "anyUSV",
          "decimals": 9
        },
        "underlying": {
          "address": "0xaf6162dc717cfc8818efc8d6f46a41cf7042fcba",
          "name": "Universal Store of Value",
          "symbol": "USV",
          "decimals": 9
        },
        "destChains": {
          "1": {
            "address": "0x88536c9b2c4701b8db824e6a16829d5b5eb84440",
            "underlying": {
              "address": "0x88536c9b2c4701b8db824e6a16829d5b5eb84440",
              "name": "Universal Store of Value",
              "symbol": "USV",
              "decimals": 9
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "6500",
            "MinimumSwap": "0.12",
            "BigValueThreshold": "1300",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1.3",
            "MinimumSwapFee": "0.11",
            "anyToken": {
              "address": "0x790cfdc6ab2e0ee45a433aac5434f183be1f6a20",
              "name": "Universal Store of Value",
              "symbol": "anyUSV",
              "decimals": 9
            }
          }
        },
        "price": 12.47,
        "logoUrl": "https://assets.coingecko.com/coins/images/22066/small/7iUyjg5t.png",
        "chainId": "56",
        "tokenid": "anyUSV",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x8a65b987d9813f0a97446eda0de918b2573ae406": {
        "address": "0x8a65b987d9813f0a97446eda0de918b2573ae406",
        "anyToken": {
          "address": "0x619f98fcf9a3f5fecee753fa9f4e3ce39ef43caa",
          "name": "FomoETH",
          "symbol": "anyFomoETH",
          "decimals": 9
        },
        "underlying": {
          "address": "0x8a65b987d9813f0a97446eda0de918b2573ae406",
          "name": "FomoETH",
          "symbol": "FomoETH",
          "decimals": 9
        },
        "destChains": {
          "1": {
            "address": "0x8a65b987d9813f0a97446eda0de918b2573ae406",
            "underlying": {
              "address": "0x8a65b987d9813f0a97446eda0de918b2573ae406",
              "name": "FomoETH",
              "symbol": "FomoETH",
              "decimals": 9
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "3100000000000",
            "MinimumSwap": "54878049",
            "BigValueThreshold": "610000000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "610000000",
            "MinimumSwapFee": "48780488",
            "anyToken": {
              "address": "0x5d5530eb3147152fe78d5c4bfeede054c8d1442a",
              "name": "FomoETH",
              "symbol": "anyFomoETH",
              "decimals": 9
            }
          }
        },
        "price": 8.8315e-8,
        "logoUrl": "https://assets.coingecko.com/coins/images/21934/large/qSCAqd6m_400x400.jpg",
        "chainId": "56",
        "tokenid": "anyFomoETH",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x0b15ddf19d47e6a86a56148fb4afffc6929bcb89": {
        "address": "0x0b15ddf19d47e6a86a56148fb4afffc6929bcb89",
        "anyToken": {
          "address": "0x35bc8f36ab08fc1b484d4c921a6f3b3c75e6d15d",
          "name": "Anyswap Adapter Impossible Decentralized Access Token",
          "symbol": "AnyIDIA",
          "decimals": 18
        },
        "underlying": {
          "address": "0x0b15ddf19d47e6a86a56148fb4afffc6929bcb89",
          "name": "ImpossibleDecentralizedIncubat",
          "symbol": "IDIA",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xd5b87813a5ecb2eac24b6b3f2d4b8b69f583af4e",
            "underlying": {
              "address": "0xd5b87813a5ecb2eac24b6b3f2d4b8b69f583af4e",
              "name": "Impossible Decentralized Incubator Access Token",
              "symbol": "IDIA",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "0",
            "liquidityType": "INIT",
            "MaximumSwap": "13817422.11",
            "MinimumSwap": "248.71",
            "BigValueThreshold": "2763484.42",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "2763.48",
            "MinimumSwapFee": "221.078",
            "anyToken": {
              "address": "0xd91903d548f19c0fc0a6b9ed09d2f72b4dfe7144",
              "name": "Anyswap Adapter Impossible Decentralized Incubator Access Token",
              "symbol": "AnyIDIA",
              "decimals": 18
            }
          },
          "1313161554": {
            "address": "0x2efedebd6e29963511589731a33311196f00eacb",
            "underlying": {
              "address": "0x2efedebd6e29963511589731a33311196f00eacb",
              "name": "Impossible Decentralized Incubator Access Token",
              "symbol": "IDIA",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "0",
            "liquidityType": "INIT",
            "MaximumSwap": "13817422.11",
            "MinimumSwap": "27.634",
            "BigValueThreshold": "2763484.42",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "2763.48",
            "MinimumSwapFee": "13.817",
            "anyToken": {
              "address": "0x559f7afc3312ec94a8cc0dd6275716c68d345787",
              "name": "Anyswap Adapter Impossible Decentralized Access Token",
              "symbol": "AnyIDIA",
              "decimals": 18
            }
          }
        },
        "price": 0.03236612,
        "logoUrl": "https://assets.coingecko.com/coins/images/17803/large/IDIA.png",
        "chainId": "56",
        "tokenid": "anyIDIAv2",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xe8377a076adabb3f9838afb77bee96eac101ffb1": {
        "address": "0xe8377a076adabb3f9838afb77bee96eac101ffb1",
        "anyToken": {
          "address": "0x6da1dce036e5ca4318fbc7e7fc4234020ef8841e",
          "name": "MetaSoccer Universe",
          "symbol": "anyMSU",
          "decimals": 18
        },
        "underlying": {
          "address": "0xe8377a076adabb3f9838afb77bee96eac101ffb1",
          "name": "MetaSoccer Universe",
          "symbol": "MSU",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00440952,
        "logoUrl": "https://assets.coingecko.com/coins/images/21670/large/Om_U3jQg_400x400.jpg",
        "chainId": "56",
        "tokenid": "anyMSU",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xb6d48fcef36e19681ee29896b19c1b6cbd1eab1b": {
        "address": "0xb6d48fcef36e19681ee29896b19c1b6cbd1eab1b",
        "anyToken": {
          "address": "0xc19b327b51227550a28e09a94bce23ea1e5abe00",
          "name": "Fanadise",
          "symbol": "anyFAN",
          "decimals": 18
        },
        "underlying": {
          "address": "0xb6d48fcef36e19681ee29896b19c1b6cbd1eab1b",
          "name": "Fanadise",
          "symbol": "FAN",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00015165,
        "logoUrl": "https://assets.coingecko.com/coins/images/17417/large/logo_fanadise_new_200x200.png",
        "chainId": "56",
        "tokenid": "anyFAN",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x016cf83732f1468150d87dcc5bdf67730b3934d3": {
        "address": "0x016cf83732f1468150d87dcc5bdf67730b3934d3",
        "anyToken": {
          "address": "0xd0975664b2c276520722560ef7bda3e6ad4a734b",
          "name": "AirNFT Token",
          "symbol": "anyAIRT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x016cf83732f1468150d87dcc5bdf67730b3934d3",
          "name": "AirNFT Token",
          "symbol": "AIRT",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00261274,
        "logoUrl": "https://assets.coingecko.com/coins/images/18370/large/AIRT-Logo.png",
        "chainId": "56",
        "tokenid": "anyAIRT",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x8623e66bea0dce41b6d47f9c44e806a115babae0": {
        "address": "0x8623e66bea0dce41b6d47f9c44e806a115babae0",
        "anyToken": {
          "address": "0x860ea5712db042de011c4ffb2789bdcb2bff9828",
          "name": "NFTY Token",
          "symbol": "anyNFTY",
          "decimals": 18
        },
        "underlying": {
          "address": "0x8623e66bea0dce41b6d47f9c44e806a115babae0",
          "name": "NFTY Token",
          "symbol": "NFTY",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x3085154623f51b00dedfc6ceeb5197277a66b17b",
            "underlying": {
              "address": "0x3085154623f51b00dedfc6ceeb5197277a66b17b",
              "name": "NFTY Token",
              "symbol": "NFTY",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "9400000",
            "MinimumSwap": "180",
            "BigValueThreshold": "1900000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1870",
            "MinimumSwapFee": "160",
            "anyToken": {
              "address": "0x9f47f313acfd4bdc52f4373b493eae7d5ac5b765",
              "name": "NFTY Token",
              "symbol": "anyNFTY",
              "decimals": 18
            }
          }
        },
        "price": 0.0020087,
        "logoUrl": "https://assets.coingecko.com/coins/images/18584/large/nfty_logo.png",
        "chainId": "56",
        "tokenid": "anyNFTY",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x409e215738e31d8ab252016369c2dd9c2008fee0": {
        "address": "0x409e215738e31d8ab252016369c2dd9c2008fee0",
        "anyToken": {
          "address": "0xc90c592677a58e3af3af0e36635be22b76d92d45",
          "name": "Pawthereum",
          "symbol": "anyPAWTH",
          "decimals": 9
        },
        "underlying": {
          "address": "0x409e215738e31d8ab252016369c2dd9c2008fee0",
          "name": "Pawthereum",
          "symbol": "PAWTH",
          "decimals": 9
        },
        "destChains": {
          "1": {
            "address": "0xaecc217a749c2405b5ebc9857a16d58bdc1c367f",
            "underlying": {
              "address": "0xaecc217a749c2405b5ebc9857a16d58bdc1c367f",
              "name": "Pawthereum",
              "symbol": "PAWTH",
              "decimals": 9
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "600000000",
            "MinimumSwap": "10333",
            "BigValueThreshold": "120000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "114809",
            "MinimumSwapFee": "9185",
            "anyToken": {
              "address": "0xdfed31e640b7280f76f046a97179e5e369d209b5",
              "name": "Pawthereum",
              "symbol": "anyPAWTH",
              "decimals": 9
            }
          }
        },
        "price": 0.00089842,
        "logoUrl": "https://assets.coingecko.com/coins/images/19275/large/pawth.png",
        "chainId": "56",
        "tokenid": "anyPAWTH",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd": {
        "address": "0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd",
        "anyToken": {
          "address": "0x83fc51a3a35d3e2a2c42003df964294062f505a2",
          "name": "Binance-Peg ChainLink Token",
          "symbol": "anyLINK",
          "decimals": 18
        },
        "underlying": {
          "address": "0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd",
          "name": "ChainLink Token",
          "symbol": "LINK",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x514910771af9ca656af840dff83e8264ecf986ca",
            "underlying": {
              "address": "0x514910771af9ca656af840dff83e8264ecf986ca",
              "name": "ChainLinkToken",
              "symbol": "LINK",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "300000",
            "MinimumSwap": "5.3",
            "BigValueThreshold": "60000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "60",
            "MinimumSwapFee": "4.8",
            "anyToken": {
              "address": "0x8dfdc61c7c7551d0deec950a2822eb59cddb8f59",
              "name": "ChainLink Token",
              "symbol": "anyLINK",
              "decimals": 18
            }
          }
        },
        "price": 6.36,
        "logoUrl": "https://assets.coingecko.com/coins/images/877/large/chainlink-new-logo.png",
        "chainId": "56",
        "tokenid": "anyLINK",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x14016e85a25aeb13065688cafb43044c2ef86784": {
        "address": "0x14016e85a25aeb13065688cafb43044c2ef86784",
        "anyToken": {
          "address": "0x559e9fc6a4d28d4b514f076724cb62f07ace862a",
          "name": "TrueUSD",
          "symbol": "anyTUSD",
          "decimals": 18
        },
        "underlying": {
          "address": "0x14016e85a25aeb13065688cafb43044c2ef86784",
          "name": "TrueUSD",
          "symbol": "TUSD",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x0000000000085d4780b73119b644ae5ecd22b376",
            "underlying": {
              "address": "0x0000000000085d4780b73119b644ae5ecd22b376",
              "name": "TrueUSD",
              "symbol": "TUSD",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "5000000",
            "MinimumSwap": "90",
            "BigValueThreshold": "1000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1000",
            "MinimumSwapFee": "80",
            "anyToken": {
              "address": "0xf751575ed3390f6c02b4358f9e165e7b44877032",
              "name": "TrueUSD",
              "symbol": "anyTUSD",
              "decimals": 18
            }
          }
        },
        "price": 0.999858,
        "logoUrl": "https://assets.coingecko.com/coins/images/3449/large/tusd.png",
        "chainId": "56",
        "tokenid": "anyTUSD",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x463e737d8f740395abf44f7aac2d9531d8d539e9": {
        "address": "0x463e737d8f740395abf44f7aac2d9531d8d539e9",
        "anyToken": {
          "address": "0xadfc9a631157b59a65eb337fed810dab8879a5fd",
          "name": "Toad Network",
          "symbol": "anyTOAD",
          "decimals": 18
        },
        "underlying": {
          "address": "0x463e737d8f740395abf44f7aac2d9531d8d539e9",
          "name": "Toad Network",
          "symbol": "TOAD",
          "decimals": 18
        },
        "destChains": {},
        "price": 4,
        "logoUrl": "https://assets.coingecko.com/coins/images/15693/large/toad.png",
        "chainId": "56",
        "tokenid": "anyTOAD",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x23f07a1c03e7c6d0c88e0e05e79b6e3511073fd5": {
        "address": "0x23f07a1c03e7c6d0c88e0e05e79b6e3511073fd5",
        "anyToken": {
          "address": "0x1ad8b8b151b7d408c757ed0d583e9b7c2f78ce19",
          "name": "Crypto Development Services",
          "symbol": "anyCDS",
          "decimals": 8
        },
        "underlying": {
          "address": "0x23f07a1c03e7c6d0c88e0e05e79b6e3511073fd5",
          "name": "Crypto Development Services",
          "symbol": "CDS",
          "decimals": 8
        },
        "destChains": {},
        "price": 1.31,
        "logoUrl": "https://assets.coingecko.com/coins/images/21304/large/JhUZ3Rk.png",
        "chainId": "56",
        "tokenid": "anyCDS",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xac51066d7bec65dc4589368da368b212745d63e8": {
        "address": "0xac51066d7bec65dc4589368da368b212745d63e8",
        "anyToken": {
          "address": "0x84a5d1d7b78810512357c1ebd252447acc91d77e",
          "name": "ALICE",
          "symbol": "anyALICE",
          "decimals": 6
        },
        "underlying": {
          "address": "0xac51066d7bec65dc4589368da368b212745d63e8",
          "name": "ALICE",
          "symbol": "ALICE",
          "decimals": 6
        },
        "destChains": {
          "1": {
            "address": "0xac51066d7bec65dc4589368da368b212745d63e8",
            "underlying": {
              "address": "0xac51066d7bec65dc4589368da368b212745d63e8",
              "name": "ALICE",
              "symbol": "ALICE",
              "decimals": 6
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "3246753.246753",
            "MinimumSwap": "32.467532",
            "BigValueThreshold": "649350.649351",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "649.350649",
            "MinimumSwapFee": "25.974026",
            "anyToken": {
              "address": "0x3915c77dc839d97e875613a5b64179acc1da97df",
              "name": "ALICE",
              "symbol": "anyALICE",
              "decimals": 6
            }
          }
        },
        "price": 1.3,
        "logoUrl": "https://assets.coingecko.com/coins/images/14375/large/alice_logo.jpg",
        "chainId": "56",
        "tokenid": "anyALICE",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x767b28a30e3a15dcece7bff7a020adfde9d19cf8": {
        "address": "0x767b28a30e3a15dcece7bff7a020adfde9d19cf8",
        "anyToken": {
          "address": "0x40642f7f80138913ca239306aa74f1acaef6b0e8",
          "name": "Wrapped Metrix",
          "symbol": "anyMRXb",
          "decimals": 8
        },
        "underlying": {
          "address": "0x767b28a30e3a15dcece7bff7a020adfde9d19cf8",
          "name": "Wrapped Metrix",
          "symbol": "MRXb",
          "decimals": 8
        },
        "destChains": {
          "1": {
            "address": "0xd38b1159c8aee064af2d869afa1c2c1632da8b97",
            "underlying": {
              "address": "0xd38b1159c8aee064af2d869afa1c2c1632da8b97",
              "name": "Wrapped Metrix",
              "symbol": "MRXe",
              "decimals": 8
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "20000000000",
            "MinimumSwap": "326833",
            "BigValueThreshold": "3700000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "3632000",
            "MinimumSwapFee": "290520",
            "anyToken": {
              "address": "0x1608278e54fb9e070cb109234d111ff3a359612b",
              "name": "Wrapped Metrix",
              "symbol": "anyMRXe",
              "decimals": 8
            }
          }
        },
        "price": 0.00004409,
        "logoUrl": "https://assets.coingecko.com/coins/images/20763/large/Copy_of_Metrix_Logo_Final_Cut.png",
        "chainId": "56",
        "tokenid": "anyMRXe",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x471f883bbd2c705f418ba3d6667ef05342c4ee05": {
        "address": "0x471f883bbd2c705f418ba3d6667ef05342c4ee05",
        "anyToken": {
          "address": "0x400e3a1ba43d272e576c237e51d0e1ef3253f153",
          "name": "SpongeBob Square",
          "symbol": "anySPONGS",
          "decimals": 9
        },
        "underlying": {
          "address": "0x471f883bbd2c705f418ba3d6667ef05342c4ee05",
          "name": "SpongeBob Square",
          "symbol": "SPONGS",
          "decimals": 9
        },
        "destChains": {
          "1": {
            "address": "0x99bb54f7a11eb8af1d486fe644ebed304f52f85a",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "5800000000000000",
            "MinimumSwap": "103000000000",
            "BigValueThreshold": "1200000000000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1200000000000",
            "MinimumSwapFee": "91300000000",
            "anyToken": {
              "address": "0x99bb54f7a11eb8af1d486fe644ebed304f52f85a",
              "name": "SpongeBob Square",
              "symbol": "SPONGS",
              "decimals": 9
            }
          }
        },
        "price": 1.26299e-10,
        "logoUrl": "https://assets.coingecko.com/coins/images/22772/large/Spnge.png",
        "chainId": "56",
        "tokenid": "anySPONGS",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x36953b5ec00a13edceceb3af258d034913d2a79d": {
        "address": "0x36953b5ec00a13edceceb3af258d034913d2a79d",
        "anyToken": {
          "address": "0x385ff2b2fc61164604c5bdc708ccff611fe9c42d",
          "name": "MANUFACTORY",
          "symbol": "anyMNFT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x36953b5ec00a13edceceb3af258d034913d2a79d",
          "name": "MANUFACTORY",
          "symbol": "MNFT",
          "decimals": 18
        },
        "destChains": {
          "1313161554": {
            "address": "0xd126b48c072f4668e944a8895bc74044d5f2e85b",
            "underlying": {
              "address": "0xd126b48c072f4668e944a8895bc74044d5f2e85b",
              "name": "MANUFACTORY",
              "symbol": "MNFT",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "84000000",
            "MinimumSwap": "167",
            "BigValueThreshold": "17000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "16667",
            "MinimumSwapFee": "84",
            "anyToken": {
              "address": "0x97513e975a7fa9072c72c92d8000b0db90b163c5",
              "name": "MANUFACTORY",
              "symbol": "MNFT",
              "decimals": 18
            }
          }
        },
        "price": 0.00140001,
        "logoUrl": "https://assets.coingecko.com/coins/images/21677/large/logo1_%288%29.png",
        "chainId": "56",
        "tokenid": "anyMNFT",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x61ed1c66239d29cc93c8597c6167159e8f69a823": {
        "address": "0x61ed1c66239d29cc93c8597c6167159e8f69a823",
        "anyToken": {
          "address": "0x5329b989b69f3c46b5e6868619ee390757b7c5bb",
          "name": "Reference System for DeFi",
          "symbol": "anyRSD",
          "decimals": 18
        },
        "underlying": {
          "address": "0x61ed1c66239d29cc93c8597c6167159e8f69a823",
          "name": "Reference System for DeFi",
          "symbol": "RSD",
          "decimals": 18
        },
        "destChains": {},
        "logoUrl": "https://rsd.cash/logo.svg",
        "chainId": "56",
        "tokenid": "anyRSD",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xb2ea51baa12c461327d12a2069d47b30e680b69d": {
        "address": "0xb2ea51baa12c461327d12a2069d47b30e680b69d",
        "anyToken": {
          "address": "0x26414054e097156c58b0294a9189a34c06bb0ecb",
          "name": "Space Crown",
          "symbol": "anySMCW",
          "decimals": 18
        },
        "underlying": {
          "address": "0xb2ea51baa12c461327d12a2069d47b30e680b69d",
          "name": "Space Crown",
          "symbol": "SMCW",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xb2ea51baa12c461327d12a2069d47b30e680b69d",
            "underlying": {
              "address": "0xb2ea51baa12c461327d12a2069d47b30e680b69d",
              "name": "Space Crown",
              "symbol": "SMCW",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "31250000",
            "MinimumSwap": "563",
            "BigValueThreshold": "6250000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "6250",
            "MinimumSwapFee": "500",
            "anyToken": {
              "address": "0xcb56e96615bb22bf4d78390ac79f4b5e9f582ccf",
              "name": "Space Crown",
              "symbol": "anySMCW",
              "decimals": 18
            }
          }
        },
        "chainId": "56",
        "tokenid": "anySMCW",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x67d66e8ec1fd25d98b3ccd3b19b7dc4b4b7fc493": {
        "address": "0x67d66e8ec1fd25d98b3ccd3b19b7dc4b4b7fc493",
        "anyToken": {
          "address": "0x657c620fee04a225e57822606c357d21663d507c",
          "name": "Feeder.finance",
          "symbol": "anyFEED",
          "decimals": 18
        },
        "underlying": {
          "address": "0x67d66e8ec1fd25d98b3ccd3b19b7dc4b4b7fc493",
          "name": "Feeder.finance",
          "symbol": "FEED",
          "decimals": 18
        },
        "destChains": {
          "1313161554": {
            "address": "0xe6801928061cdbe32ac5ad0634427e140efd05f9",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "87000000",
            "MinimumSwap": "174",
            "BigValueThreshold": "18000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "17400",
            "MinimumSwapFee": "87",
            "anyToken": {
              "address": "0xe6801928061cdbe32ac5ad0634427e140efd05f9",
              "name": "Feeder.finance",
              "symbol": "FEED",
              "decimals": 18
            }
          }
        },
        "price": 0.00042966,
        "logoUrl": "https://assets.coingecko.com/coins/images/15151/large/feeder_finance_logo.png",
        "chainId": "56",
        "tokenid": "anyFEED",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x0a356f512f6fce740111ee04ab1699017a908680": {
        "address": "0x0a356f512f6fce740111ee04ab1699017a908680",
        "anyToken": {
          "address": "0x3d2e9d762413cec5bf862fdb0085315dd2c4c09e",
          "name": "UNIFARM Token",
          "symbol": "anyUFARM",
          "decimals": 18
        },
        "underlying": {
          "address": "0x0a356f512f6fce740111ee04ab1699017a908680",
          "name": "UNIFARM Token",
          "symbol": "UFARM",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x40986a85b4cfcdb054a6cbfb1210194fee51af88",
            "underlying": {
              "address": "0x40986a85b4cfcdb054a6cbfb1210194fee51af88",
              "name": "UNIFARM Token",
              "symbol": "UFARM",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "410000000",
            "MinimumSwap": "7272",
            "BigValueThreshold": "81000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "80806",
            "MinimumSwapFee": "6465",
            "anyToken": {
              "address": "0xbdba76fa2659c33ffcc2b0bc134c3a2c8a3aa94d",
              "name": "UNIFARM Token",
              "symbol": "anyUFARM",
              "decimals": 18
            }
          }
        },
        "price": 0.00100463,
        "logoUrl": "https://assets.coingecko.com/coins/images/15247/large/ufarm.jpeg",
        "chainId": "56",
        "tokenid": "anyUFARM",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x0fe9778c005a5a6115cbe12b0568a2d50b765a51": {
        "address": "0x0fe9778c005a5a6115cbe12b0568a2d50b765a51",
        "anyToken": {
          "address": "0x41a072b1c8d716721e407640e5b1fdcc714239ab",
          "name": "Feisty Doge NFT",
          "symbol": "anyNFD",
          "decimals": 18
        },
        "underlying": {
          "address": "0x0fe9778c005a5a6115cbe12b0568a2d50b765a51",
          "name": "Feisty Doge NFT",
          "symbol": "NFD",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xdfdb7f72c1f195c5951a234e8db9806eb0635346",
            "underlying": {
              "address": "0xdfdb7f72c1f195c5951a234e8db9806eb0635346",
              "name": "Feisty Doge NFT",
              "symbol": "NFD",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "50000000000",
            "MinimumSwap": "890560",
            "BigValueThreshold": "10000000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "9895112",
            "MinimumSwapFee": "791610",
            "anyToken": {
              "address": "0xe008ff5483d5c0214911ba6cbdaccf822436d165",
              "name": "Feisty Doge NFT",
              "symbol": "anyNFD",
              "decimals": 18
            }
          },
          "1313161554": {
            "address": "0x90eb16621274fb47a071001fbbf7550948874cb5",
            "underlying": {
              "address": "0x90eb16621274fb47a071001fbbf7550948874cb5",
              "name": "Feisty Doge NFT",
              "symbol": "NFD",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "50000000000",
            "MinimumSwap": "98952",
            "BigValueThreshold": "10000000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "9895112",
            "MinimumSwapFee": "49476",
            "anyToken": {
              "address": "0xd6070ae98b8069de6b494332d1a1a81b6179d960",
              "name": "Feisty Doge NFT",
              "symbol": "NFD",
              "decimals": 18
            }
          }
        },
        "price": 0.00002404,
        "logoUrl": "https://assets.coingecko.com/coins/images/17834/large/doge-fractionalized.png",
        "chainId": "56",
        "tokenid": "anyNFD",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xa1428370f540b4c4e319224165ecae513a391f77": {
        "address": "0xa1428370f540b4c4e319224165ecae513a391f77",
        "anyToken": {
          "address": "0x204d3d2bbbf39a7bb85a00dd45fb0d2fe57a660b",
          "name": "Marlin POND",
          "symbol": "anyPOND",
          "decimals": 18
        },
        "underlying": {
          "address": "0xa1428370f540b4c4e319224165ecae513a391f77",
          "name": "Marlin POND",
          "symbol": "POND",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x57b946008913b82e4df85f501cbaed910e58d26c",
            "underlying": {
              "address": "0x57b946008913b82e4df85f501cbaed910e58d26c",
              "name": "Marlin POND",
              "symbol": "POND",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "130000000",
            "MinimumSwap": "2165",
            "BigValueThreshold": "25000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "24050",
            "MinimumSwapFee": "1924",
            "anyToken": {
              "address": "0xb53ec4ace420a62cfb75afdeba600d284777cd65",
              "name": "Marlin POND",
              "symbol": "anyPOND",
              "decimals": 18
            }
          }
        },
        "price": 0.008385,
        "logoUrl": "https://assets.coingecko.com/coins/images/8903/large/POND_200x200.png",
        "chainId": "56",
        "tokenid": "anyPOND",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xe561ebd0d7f9b2bd81da6e7da655030dcb0a926b": {
        "address": "0xe561ebd0d7f9b2bd81da6e7da655030dcb0a926b",
        "anyToken": {
          "address": "0x3a218d024f452caac91fcfa39ba524e0bdfe9ec0",
          "name": "AlphaDEX",
          "symbol": "anyROAR",
          "decimals": 18
        },
        "underlying": {
          "address": "0xe561ebd0d7f9b2bd81da6e7da655030dcb0a926b",
          "name": "AlphaDEX",
          "symbol": "ROAR",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00535459,
        "logoUrl": "https://s2.coinmarketcap.com/static/img/coins/64x64/17566.png",
        "chainId": "56",
        "tokenid": "anyROAR",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x09a6c44c3947b69e2b45f4d51b67e6a39acfb506": {
        "address": "0x09a6c44c3947b69e2b45f4d51b67e6a39acfb506",
        "anyToken": {
          "address": "0xe529797535426a042a79aa555334f444565d118e",
          "name": "UniCrypt on xDai on BSC",
          "symbol": "anyUNCX",
          "decimals": 18
        },
        "underlying": {
          "address": "0x09a6c44c3947b69e2b45f4d51b67e6a39acfb506",
          "name": "UniCrypt on xDai on BSC",
          "symbol": "UNCX",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xadb2437e6f65682b85f814fbc12fec0508a7b1d0",
            "underlying": {
              "address": "0xadb2437e6f65682b85f814fbc12fec0508a7b1d0",
              "name": "UniCrypt",
              "symbol": "UNCX",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "12755.752845",
            "MinimumSwap": "0.127557",
            "BigValueThreshold": "2551.150569",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "2.551151",
            "MinimumSwapFee": "0.102046",
            "anyToken": {
              "address": "0xd9a807e9d2f61b0098b4c3f79b2dfb9bc2e181ae",
              "name": "UniCrypt",
              "symbol": "anyUNCX",
              "decimals": 18
            }
          }
        },
        "price": 238.26,
        "logoUrl": "https://assets.coingecko.com/coins/images/12871/large/unicrypt_logo.png",
        "chainId": "56",
        "tokenid": "anyUNCX",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x0e8d5504bf54d9e44260f8d153ecd5412130cabb": {
        "address": "0x0e8d5504bf54d9e44260f8d153ecd5412130cabb",
        "anyToken": {
          "address": "0xbb244fc91e86c5a4b9d31b2935c5bc57c034bfa1",
          "name": "UNCL on xDai on BSC",
          "symbol": "anyUNCL",
          "decimals": 18
        },
        "underlying": {
          "address": "0x0e8d5504bf54d9e44260f8d153ecd5412130cabb",
          "name": "UNCL on xDai on BSC",
          "symbol": "UNCL",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x2f4eb47a1b1f4488c71fc10e39a4aa56af33dd49",
            "underlying": {
              "address": "0x2f4eb47a1b1f4488c71fc10e39a4aa56af33dd49",
              "name": "UNCL",
              "symbol": "UNCL",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "150000",
            "MinimumSwap": "2.7",
            "BigValueThreshold": "30000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "30",
            "MinimumSwapFee": "2.4",
            "anyToken": {
              "address": "0xcb69f7ac645f5e09310b91445277a53f7fcb78cf",
              "name": "UNCL",
              "symbol": "anyUNCL",
              "decimals": 18
            }
          }
        },
        "price": 3.37,
        "logoUrl": "https://assets.coingecko.com/coins/images/13102/large/uncl_logo.png",
        "chainId": "56",
        "tokenid": "anyUNCL",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xe22b9152914986e4020a00ab6ef510085c26c208": {
        "address": "0xe22b9152914986e4020a00ab6ef510085c26c208",
        "anyToken": {
          "address": "0xf35870b6fd9a77d47364d357dd0b16a5e5c956da",
          "name": "Konomi",
          "symbol": "anyKONO",
          "decimals": 18
        },
        "underlying": {
          "address": "0xe22b9152914986e4020a00ab6ef510085c26c208",
          "name": "Konomi",
          "symbol": "KONO",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x850aab69f0e0171a9a49db8be3e71351c8247df4",
            "underlying": {
              "address": "0x850aab69f0e0171a9a49db8be3e71351c8247df4",
              "name": "Konomi",
              "symbol": "KONO",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "40000000",
            "MinimumSwap": "807",
            "BigValueThreshold": "8000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "7856",
            "MinimumSwapFee": "630",
            "anyToken": {
              "address": "0xa8752333f6a6fe47323a4edac3d09bb1048a0e23",
              "name": "Konomi",
              "symbol": "anyKONO",
              "decimals": 18
            }
          }
        },
        "price": 0.02277413,
        "logoUrl": "https://assets.coingecko.com/coins/images/14406/large/konomi.jpg",
        "chainId": "56",
        "tokenid": "anyKONO",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x0dea5ac2898e6aa637ece0db750fd6d35e460392": {
        "address": "0x0dea5ac2898e6aa637ece0db750fd6d35e460392",
        "anyToken": {
          "address": "0x231f197d0e3e912deccd93c076ad92bddde70d61",
          "name": "Unvaxxed Sperm",
          "symbol": "anynuBTC",
          "decimals": 9
        },
        "underlying": {
          "address": "0x0dea5ac2898e6aa637ece0db750fd6d35e460392",
          "name": "Unvaxxed Sperm",
          "symbol": "nuBTC",
          "decimals": 9
        },
        "destChains": {
          "1": {
            "address": "0xb2979ab4705fa0621fcab059748b4e77dd76b78e",
            "underlying": {
              "address": "0xb2979ab4705fa0621fcab059748b4e77dd76b78e",
              "name": "Unvaxxed Sperm",
              "symbol": "nuBTC",
              "decimals": 9
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "6500000000000",
            "MinimumSwap": "116800000",
            "BigValueThreshold": "1300000000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1300000000",
            "MinimumSwapFee": "104000000",
            "anyToken": {
              "address": "0x1748e1a07e82762660b4e57838b570dcb73bf75d",
              "name": "Unvaxxed Sperm",
              "symbol": "anynuBTC",
              "decimals": 9
            }
          }
        },
        "logoUrl": "https://s2.coinmarketcap.com/static/img/coins/64x64/15344.png",
        "chainId": "56",
        "tokenid": "anynuBTC",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xddc0dbd7dc799ae53a98a60b54999cb6ebb3abf0": {
        "address": "0xddc0dbd7dc799ae53a98a60b54999cb6ebb3abf0",
        "anyToken": {
          "address": "0x1dd20779c8facd5a60680c3f423137ca18155e47",
          "name": "SafeBLAST",
          "symbol": "anyBLAST",
          "decimals": 9
        },
        "underlying": {
          "address": "0xddc0dbd7dc799ae53a98a60b54999cb6ebb3abf0",
          "name": "SafeBLAST",
          "symbol": "BLAST",
          "decimals": 9
        },
        "destChains": {
          "1": {
            "address": "0x614d7f40701132e25fe6fc17801fbd34212d2eda",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "850000000000000",
            "MinimumSwap": "15300000000",
            "BigValueThreshold": "170000000000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "170000000000",
            "MinimumSwapFee": "13600000000",
            "anyToken": {
              "address": "0x614d7f40701132e25fe6fc17801fbd34212d2eda",
              "name": "SafeBLAST",
              "symbol": "BLAST",
              "decimals": 9
            }
          }
        },
        "price": 3.176e-9,
        "logoUrl": "https://assets.coingecko.com/coins/images/15686/large/safeblast.png",
        "chainId": "56",
        "tokenid": "anyBLAST",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x8f0528ce5ef7b51152a59745befdd91d97091d2f": {
        "address": "0x8f0528ce5ef7b51152a59745befdd91d97091d2f",
        "anyToken": {
          "address": "0x3222b546981ca597842cb271138e26ea1afab44a",
          "name": "AlpacaToken",
          "symbol": "anyALPACA",
          "decimals": 18
        },
        "underlying": {
          "address": "0x8f0528ce5ef7b51152a59745befdd91d97091d2f",
          "name": "AlpacaToken",
          "symbol": "ALPACA",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.203568,
        "logoUrl": "https://assets.coingecko.com/coins/images/14165/large/Logo200.png",
        "chainId": "56",
        "tokenid": "anyALPACA",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x1deb45c74e0192d9272adf54e9a7519c48c2bd81": {
        "address": "0x1deb45c74e0192d9272adf54e9a7519c48c2bd81",
        "anyToken": {
          "address": "0xf0a8a368989e1936d5a94d5fb1cb2cd94a7d8e2d",
          "name": "Aurum",
          "symbol": "anyAUR",
          "decimals": 18
        },
        "underlying": {
          "address": "0x1deb45c74e0192d9272adf54e9a7519c48c2bd81",
          "name": "Aurum",
          "symbol": "AUR",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00013207,
        "logoUrl": "https://assets.coingecko.com/coins/images/17189/large/200x200-CMC-PNG-logo.png",
        "chainId": "56",
        "tokenid": "anyAUR",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xd4fbc57b6233f268e7fba3b66e62719d74deecbc": {
        "address": "0xd4fbc57b6233f268e7fba3b66e62719d74deecbc",
        "anyToken": {
          "address": "0x22e7f79c547d676baf561032bf64d51d6ceb5f3f",
          "name": "Modefi",
          "symbol": "anyMOD",
          "decimals": 18
        },
        "underlying": {
          "address": "0xd4fbc57b6233f268e7fba3b66e62719d74deecbc",
          "name": "Modefi",
          "symbol": "MOD",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xea1ea0972fa092dd463f2968f9bb51cc4c981d71",
            "underlying": {
              "address": "0xea1ea0972fa092dd463f2968f9bb51cc4c981d71",
              "name": "Modefi",
              "symbol": "MOD",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "8600000",
            "MinimumSwap": "153",
            "BigValueThreshold": "1800000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1705",
            "MinimumSwapFee": "137",
            "anyToken": {
              "address": "0xfc2afd7ebf2e0ca69340cd9f466177e23812cf5a",
              "name": "Modefi",
              "symbol": "anyMOD",
              "decimals": 18
            }
          }
        },
        "price": 0.230006,
        "logoUrl": "https://assets.coingecko.com/coins/images/13980/large/modefi_logo.png",
        "chainId": "56",
        "tokenid": "anyMOD",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x0c9b7103e16f171f60448e039f48d3b50241fcbc": {
        "address": "0x0c9b7103e16f171f60448e039f48d3b50241fcbc",
        "anyToken": {
          "address": "0x51138ef0dc9de2a03aaafa95f69924302b49a5fb",
          "name": "Everex",
          "symbol": "anyEVX",
          "decimals": 18
        },
        "underlying": {
          "address": "0x0c9b7103e16f171f60448e039f48d3b50241fcbc",
          "name": "Everex",
          "symbol": "EVX",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xf3db5fa2c66b7af3eb0c0b782510816cbe4813b8",
            "underlying": {
              "address": "0xf3db5fa2c66b7af3eb0c0b782510816cbe4813b8",
              "name": "Everex",
              "symbol": "EVX",
              "decimals": 4
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "110000000",
            "MinimumSwap": "1932",
            "BigValueThreshold": "22000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "21500",
            "MinimumSwapFee": "1717",
            "anyToken": {
              "address": "0x95dd59343a893637be1c3228060ee6afbf6f0730",
              "name": "Everex",
              "symbol": "anyEVX",
              "decimals": 4
            }
          }
        },
        "price": 0.01123141,
        "logoUrl": "https://assets.coingecko.com/coins/images/997/large/everex.png",
        "chainId": "56",
        "tokenid": "anyEVX",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xe369fec23380f9f14ffd07a1dc4b7c1a9fdd81c9": {
        "address": "0xe369fec23380f9f14ffd07a1dc4b7c1a9fdd81c9",
        "anyToken": {
          "address": "0xbc70a08ece842698dd89dd7fc8767fc962e4533b",
          "name": "Froyo",
          "symbol": "anyFroyo",
          "decimals": 18
        },
        "underlying": {
          "address": "0xe369fec23380f9f14ffd07a1dc4b7c1a9fdd81c9",
          "name": "Froyo",
          "symbol": "Froyo",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xcf0bcf85082e3cfe591bd2451bc4b46faa34c7de",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "61000000",
            "MinimumSwap": "1088",
            "BigValueThreshold": "13000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "12100",
            "MinimumSwapFee": "970",
            "anyToken": {
              "address": "0xcf0bcf85082e3cfe591bd2451bc4b46faa34c7de",
              "name": "Froyo",
              "symbol": "Froyo",
              "decimals": 18
            }
          }
        },
        "price": 0.00183342,
        "logoUrl": "https://assets.coingecko.com/coins/images/22386/large/95039059.png",
        "chainId": "56",
        "tokenid": "anyFroyo",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x8ad8e9b85787ddd0d31b32ecf655e93bfc0747ef": {
        "address": "0x8ad8e9b85787ddd0d31b32ecf655e93bfc0747ef",
        "anyToken": {
          "address": "0x8c4e06c8d4297448e768f91947e0643b31db08d3",
          "name": "SOMBRA",
          "symbol": "anySMBR",
          "decimals": 9
        },
        "underlying": {
          "address": "0x8ad8e9b85787ddd0d31b32ecf655e93bfc0747ef",
          "name": "SOMBRA",
          "symbol": "SMBR",
          "decimals": 9
        },
        "destChains": {
          "1": {
            "address": "0x16b3e050e9e2f0ac4f1bea1b3e4fdc43d7f062dd",
            "underlying": {
              "address": "0x16b3e050e9e2f0ac4f1bea1b3e4fdc43d7f062dd",
              "name": "SOMBRA",
              "symbol": "SMBR",
              "decimals": 9
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "84620982.62",
            "MinimumSwap": "1523.18",
            "BigValueThreshold": "16924196.52",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "16924.2",
            "MinimumSwapFee": "676.97",
            "anyToken": {
              "address": "0xf887906e130349a624ffa3cf1fa5b56f48b11c08",
              "name": "SOMBRA",
              "symbol": "anySMBR",
              "decimals": 9
            }
          }
        },
        "price": 0.02451833,
        "logoUrl": "https://assets.coingecko.com/coins/images/17884/large/sombra-200.png",
        "chainId": "56",
        "tokenid": "anySMBR",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x887d9c01fff04022da9c6d64a65a481a9e5d1fca": {
        "address": "0x887d9c01fff04022da9c6d64a65a481a9e5d1fca",
        "anyToken": {
          "address": "0xe5b834d5086564de95ec6ce390605186a7732439",
          "name": "Education",
          "symbol": "anyLEDU",
          "decimals": 8
        },
        "underlying": {
          "address": "0x887d9c01fff04022da9c6d64a65a481a9e5d1fca",
          "name": "Education",
          "symbol": "LEDU",
          "decimals": 8
        },
        "destChains": {
          "1": {
            "address": "0xc741f06082aa47f93729070ad0dd95e223bda091",
            "underlying": {
              "address": "0xc741f06082aa47f93729070ad0dd95e223bda091",
              "name": "Education",
              "symbol": "LEDU",
              "decimals": 8
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "600000000",
            "MinimumSwap": "10120",
            "BigValueThreshold": "120000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "112440",
            "MinimumSwapFee": "8996",
            "anyToken": {
              "address": "0xa6e822e865fbe37d6ebc6d721947afbbd9f95c19",
              "name": "Education",
              "symbol": "anyLEDU",
              "decimals": 8
            }
          }
        },
        "price": 0.001171,
        "logoUrl": "https://assets.coingecko.com/coins/images/3451/large/LEDU-education-ecosystem.png",
        "chainId": "56",
        "tokenid": "anyLEDU",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xc5326b32e8baef125acd68f8bc646fd646104f1c": {
        "address": "0xc5326b32e8baef125acd68f8bc646fd646104f1c",
        "anyToken": {
          "address": "0xeb2f197b3467b02dd8f36b09b2d179c250352ff3",
          "name": "ZAP TOKEN",
          "symbol": "anyZAP",
          "decimals": 18
        },
        "underlying": {
          "address": "0xc5326b32e8baef125acd68f8bc646fd646104f1c",
          "name": "ZAP TOKEN",
          "symbol": "ZAP",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x6781a0f84c7e9e846dcb84a9a5bd49333067b104",
            "underlying": {
              "address": "0x6781a0f84c7e9e846dcb84a9a5bd49333067b104",
              "name": "ZAP TOKEN",
              "symbol": "ZAP",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "420000000",
            "MinimumSwap": "7449",
            "BigValueThreshold": "83000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "82762",
            "MinimumSwapFee": "6621",
            "anyToken": {
              "address": "0x2ad402655243203fcfa7dcb62f8a08cc2ba88ae0",
              "name": "ZAP TOKEN",
              "symbol": "anyZAP",
              "decimals": 18
            }
          }
        },
        "price": 0.00234197,
        "logoUrl": "https://assets.coingecko.com/coins/images/2180/large/zap.png",
        "chainId": "56",
        "tokenid": "anyZAP",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xea89199344a492853502a7a699cc4230854451b8": {
        "address": "0xea89199344a492853502a7a699cc4230854451b8",
        "anyToken": {
          "address": "0xcf3ddd04360811187bdc158dcc622d817384fe9f",
          "name": "Onino",
          "symbol": "anyONI",
          "decimals": 18
        },
        "underlying": {
          "address": "0xea89199344a492853502a7a699cc4230854451b8",
          "name": "Onino",
          "symbol": "ONI",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x411f3e09c66b30e7facfec45cd823b2e19dfad2d",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "23000000",
            "MinimumSwap": "408",
            "BigValueThreshold": "4600000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "4531",
            "MinimumSwapFee": "363",
            "anyToken": {
              "address": "0x411f3e09c66b30e7facfec45cd823b2e19dfad2d",
              "name": "Onino",
              "symbol": "ONI",
              "decimals": 18
            }
          }
        },
        "price": 0.063081,
        "logoUrl": "https://assets.coingecko.com/coins/images/9405/large/Oni_Round.png",
        "chainId": "56",
        "tokenid": "anyONI",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x74f996a2ed8b1370c2f12ce9d040a1d9c9254e6e": {
        "address": "0x74f996a2ed8b1370c2f12ce9d040a1d9c9254e6e",
        "anyToken": {
          "address": "0x6aeec4b23aa51442e613e5023dafa5c9de2dfe95",
          "name": "Blocksport Token",
          "symbol": "anyBSPT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x74f996a2ed8b1370c2f12ce9d040a1d9c9254e6e",
          "name": "Blocksport Token",
          "symbol": "BSPT",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xa350da05405cc204e551c4eed19c3039646528d5",
            "underlying": {
              "address": "0xa350da05405cc204e551c4eed19c3039646528d5",
              "name": "Blocksport Token",
              "symbol": "BSPT",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "100000000",
            "MinimumSwap": "1800",
            "BigValueThreshold": "20000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "20000",
            "MinimumSwapFee": "1600",
            "anyToken": {
              "address": "0xe84cea9df2d6a6010c0bd74b803f6372534e75e9",
              "name": "Blocksport Token",
              "symbol": "anyBSPT",
              "decimals": 18
            }
          }
        },
        "price": 0.0011196,
        "logoUrl": "https://blocksport.io/wp-content/uploads/2022/02/Logo_black2_cube.png",
        "chainId": "56",
        "tokenid": "anyBSPT",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x194d1d62d8d798fcc81a6435e6d13adf8bcc2966": {
        "address": "0x194d1d62d8d798fcc81a6435e6d13adf8bcc2966",
        "anyToken": {
          "address": "0xfb4ac62d4c6ad358ce679e61281f5eb5a20dd063",
          "name": "Templar Money",
          "symbol": "anyTM",
          "decimals": 18
        },
        "underlying": {
          "address": "0x194d1d62d8d798fcc81a6435e6d13adf8bcc2966",
          "name": "Templar Money",
          "symbol": "TM",
          "decimals": 18
        },
        "destChains": {},
        "price": 1.75,
        "logoUrl": "https://templar.finance/images/tokens/TM.png",
        "chainId": "56",
        "tokenid": "anyTM",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x9aab0a9b3a2f7cf669f1385c48e0a063b93834bb": {
        "address": "0x9aab0a9b3a2f7cf669f1385c48e0a063b93834bb",
        "anyToken": {
          "address": "0x1441e091e1247e6e6990ccb2c27169204fb04aa9",
          "name": "TTX METAVERSE",
          "symbol": "anyXMETA",
          "decimals": 18
        },
        "underlying": {
          "address": "0x9aab0a9b3a2f7cf669f1385c48e0a063b93834bb",
          "name": "TTX METAVERSE",
          "symbol": "XMETA",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x591127253e40d4f63bf29ccf3d81fd062a149c8c",
            "underlying": {
              "address": "0x591127253e40d4f63bf29ccf3d81fd062a149c8c",
              "name": "TTX METAVERSE",
              "symbol": "XMETA",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "1700000000",
            "MinimumSwap": "28893",
            "BigValueThreshold": "330000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "321028",
            "MinimumSwapFee": "25683",
            "anyToken": {
              "address": "0xe613a914bbb433855378183c3ab13003285da40a",
              "name": "TTX METAVERSE",
              "symbol": "anyXMETA",
              "decimals": 18
            }
          }
        },
        "price": 2.16226e-7,
        "logoUrl": "https://assets.coingecko.com/coins/images/23332/small/xmeta.png",
        "chainId": "56",
        "tokenid": "anyXMETA",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x5ecfcced226ba9fccd8663e7b3263cbd8c84edb5": {
        "address": "0x5ecfcced226ba9fccd8663e7b3263cbd8c84edb5",
        "anyToken": {
          "address": "0x6c76545a0da5ae50a081dd1b8ae35daaa00b1352",
          "name": "Xtremcoin",
          "symbol": "anyXTR",
          "decimals": 8
        },
        "underlying": {
          "address": "0x5ecfcced226ba9fccd8663e7b3263cbd8c84edb5",
          "name": "Xtremcoin",
          "symbol": "XTR",
          "decimals": 8
        },
        "destChains": {
          "1": {
            "address": "0x9ee45adbb2f2083ab5cd9bc888c77a662dbd55fe",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "6800000",
            "MinimumSwap": "122",
            "BigValueThreshold": "1400000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1357",
            "MinimumSwapFee": "109",
            "anyToken": {
              "address": "0x9ee45adbb2f2083ab5cd9bc888c77a662dbd55fe",
              "name": "Xtremcoin",
              "symbol": "XTR",
              "decimals": 8
            }
          }
        },
        "price": 0.075944,
        "logoUrl": "https://assets.coingecko.com/coins/images/21281/large/xtr.png",
        "chainId": "56",
        "tokenid": "anyXTR",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x5f588efaf8eb57e3837486e834fc5a4e07768d98": {
        "address": "0x5f588efaf8eb57e3837486e834fc5a4e07768d98",
        "anyToken": {
          "address": "0x2cbff5a1b0c34791fb96d89467798b4e6f755e34",
          "name": "Binance Wrapped MVL ",
          "symbol": "anybMVL",
          "decimals": 18
        },
        "underlying": {
          "address": "0x5f588efaf8eb57e3837486e834fc5a4e07768d98",
          "name": "Binance Wrapped MVL",
          "symbol": "bMVL",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xa849eaae994fb86afa73382e9bd88c2b6b18dc71",
            "underlying": {
              "address": "0xa849eaae994fb86afa73382e9bd88c2b6b18dc71",
              "name": "Mass Vehicle Ledger Token",
              "symbol": "MVL",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "560000000",
            "MinimumSwap": "9984",
            "BigValueThreshold": "120000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "111000",
            "MinimumSwapFee": "8874",
            "anyToken": {
              "address": "0x02a2b736f9150d36c0919f3acee8ba2a92fbbb40",
              "name": "Mass Vehicle Ledger Token",
              "symbol": "anyMVL",
              "decimals": 18
            }
          }
        },
        "price": 0.00332793,
        "logoUrl": "https://assets.coingecko.com/coins/images/3476/large/mass-vehicle-ledger.png",
        "chainId": "56",
        "tokenid": "anyMVL",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x95a1199eba84ac5f19546519e287d43d2f0e1b41": {
        "address": "0x95a1199eba84ac5f19546519e287d43d2f0e1b41",
        "anyToken": {
          "address": "0x2fb886aaf51764ae175f80e49cd10e90d446e8a9",
          "name": "Rabbit Coin",
          "symbol": "anyRABBIT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x95a1199eba84ac5f19546519e287d43d2f0e1b41",
          "name": "Rabbit Coin",
          "symbol": "RABBIT",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00127156,
        "logoUrl": "https://assets.coingecko.com/coins/images/16240/large/Rabbit_Finance_Logo1.png",
        "chainId": "56",
        "tokenid": "anyRABBIT",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xdad3abce6fb87fa0355203b692723a7ee8aa9d63": {
        "address": "0xdad3abce6fb87fa0355203b692723a7ee8aa9d63",
        "anyToken": {
          "address": "0x46dcb8fb3022652b1980f1ffaeaf2bb2104be09c",
          "name": "Plunge",
          "symbol": "anyPLG",
          "decimals": 18
        },
        "underlying": {
          "address": "0xdad3abce6fb87fa0355203b692723a7ee8aa9d63",
          "name": "Plunge",
          "symbol": "PLG",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00019186,
        "logoUrl": "https://assets.coingecko.com/coins/images/21552/large/vdlZ53J.png",
        "chainId": "56",
        "tokenid": "anyPLG",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xc6dddb5bc6e61e0841c54f3e723ae1f3a807260b": {
        "address": "0xc6dddb5bc6e61e0841c54f3e723ae1f3a807260b",
        "anyToken": {
          "address": "0xb2c7a198be3345d554043f6b875e254cb2034219",
          "name": "Aurox Token",
          "symbol": "anyURUS",
          "decimals": 18
        },
        "underlying": {
          "address": "0xc6dddb5bc6e61e0841c54f3e723ae1f3a807260b",
          "name": "Aurox Token",
          "symbol": "URUS",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xc6dddb5bc6e61e0841c54f3e723ae1f3a807260b",
            "underlying": {
              "address": "0xc6dddb5bc6e61e0841c54f3e723ae1f3a807260b",
              "name": "Aurox Token",
              "symbol": "URUS",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "68000",
            "MinimumSwap": "1.2",
            "BigValueThreshold": "14000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "13.5",
            "MinimumSwapFee": "1.1",
            "anyToken": {
              "address": "0x782617249085aa28a367feb49cf811434660cee5",
              "name": "Aurox Token",
              "symbol": "anyURUS",
              "decimals": 18
            }
          }
        },
        "price": 15.62,
        "logoUrl": "https://assets.coingecko.com/coins/images/14122/large/urus.PNG",
        "chainId": "56",
        "tokenid": "anyURUS",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xbe1a001fe942f96eea22ba08783140b9dcc09d28": {
        "address": "0xbe1a001fe942f96eea22ba08783140b9dcc09d28",
        "anyToken": {
          "address": "0x32df1bc949d51bec5ff63cfd1d1fd9a11751c8b0",
          "name": "Beta Token",
          "symbol": "anyBETA",
          "decimals": 18
        },
        "underlying": {
          "address": "0xbe1a001fe942f96eea22ba08783140b9dcc09d28",
          "name": "Beta Token",
          "symbol": "BETA",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.092823,
        "logoUrl": "https://assets.coingecko.com/coins/images/18715/large/beta_finance.jpg",
        "chainId": "56",
        "tokenid": "anyBETA",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x50dfd52c9f6961bf94d1d5489ae4b3e37d2f1fe7": {
        "address": "0x50dfd52c9f6961bf94d1d5489ae4b3e37d2f1fe7",
        "anyToken": {
          "address": "0xcc41555e193d56b2b5c07db69418d90dfaf20c08",
          "name": "OnX.finance",
          "symbol": "anyONX",
          "decimals": 18
        },
        "underlying": {
          "address": "0x50dfd52c9f6961bf94d1d5489ae4b3e37d2f1fe7",
          "name": "OnX.finance",
          "symbol": "ONX",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xe0ad1806fd3e7edf6ff52fdb822432e847411033",
            "underlying": {
              "address": "0xe0ad1806fd3e7edf6ff52fdb822432e847411033",
              "name": "OnX.finance",
              "symbol": "ONX",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "17000000",
            "MinimumSwap": "300",
            "BigValueThreshold": "3400000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "3334",
            "MinimumSwapFee": "267",
            "anyToken": {
              "address": "0x3b9e3b5c616a1a038fdc190758bbe9bab6c7a857",
              "name": "OnX.finance",
              "symbol": "anyONX",
              "decimals": 18
            }
          }
        },
        "price": 0.02598584,
        "logoUrl": "https://assets.coingecko.com/coins/images/13445/large/onxlogo-1.png",
        "chainId": "56",
        "tokenid": "anyONX",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x81a4c8438b77221f192d8d25252afac62fecd58f": {
        "address": "0x81a4c8438b77221f192d8d25252afac62fecd58f",
        "anyToken": {
          "address": "0xe60988bfb3c4669fca76fc466d6cffafe11d2b6e",
          "name": "anyBitANT",
          "symbol": "anyBitANT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x81a4c8438b77221f192d8d25252afac62fecd58f",
          "name": "BitANT",
          "symbol": "BitANT",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x15ee120fd69bec86c1d38502299af7366a41d1a6",
            "underlying": {
              "address": "0x15ee120fd69bec86c1d38502299af7366a41d1a6",
              "name": "BitANT",
              "symbol": "BitANT",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "7600000000",
            "MinimumSwap": "135622",
            "BigValueThreshold": "1600000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1506910",
            "MinimumSwapFee": "120553",
            "anyToken": {
              "address": "0x57e8283743b169855248c1de250b921336096677",
              "name": "anyBitANT",
              "symbol": "anyBitANT",
              "decimals": 18
            }
          }
        },
        "price": 0.00002594,
        "logoUrl": "https://assets.coingecko.com/coins/images/19055/large/BitANT.png",
        "chainId": "56",
        "tokenid": "anyBitANT",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x23b8683ff98f9e4781552dfe6f12aa32814924e8": {
        "address": "0x23b8683ff98f9e4781552dfe6f12aa32814924e8",
        "anyToken": {
          "address": "0x1ad411be31cba244d0ff981a8c50cdd92002afd9",
          "name": "Jarvis Synthetic Euro",
          "symbol": "anyjEUR",
          "decimals": 18
        },
        "underlying": {
          "address": "0x23b8683ff98f9e4781552dfe6f12aa32814924e8",
          "name": "Jarvis Synthetic Euro",
          "symbol": "jEUR",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x0f17bc9a994b87b5225cfb6a2cd4d667adb4f20b",
            "underlying": {
              "address": "0x0f17bc9a994b87b5225cfb6a2cd4d667adb4f20b",
              "name": "JarvisSyntheticEuro",
              "symbol": "jEUR",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "4400000",
            "MinimumSwap": "43.1",
            "BigValueThreshold": "870000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "862",
            "MinimumSwapFee": "34.5",
            "anyToken": {
              "address": "0xa71353bb71dda105d383b02fc2dd172c4d39ef8b",
              "name": "JarvisSyntheticEuro",
              "symbol": "anyjEUR",
              "decimals": 18
            }
          }
        },
        "price": 1.076,
        "logoUrl": "https://assets.coingecko.com/coins/images/15725/large/jEUR.png",
        "chainId": "56",
        "tokenid": "anyjEUR",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x426c72701833fddbdfc06c944737c6031645c708": {
        "address": "0x426c72701833fddbdfc06c944737c6031645c708",
        "anyToken": {
          "address": "0x4699fb07df635bae3fa370d9f5f69b9857d49990",
          "name": "DEFINA TOKEN",
          "symbol": "anyFINA",
          "decimals": 18
        },
        "underlying": {
          "address": "0x426c72701833fddbdfc06c944737c6031645c708",
          "name": "DEFINA TOKEN",
          "symbol": "FINA",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.02094134,
        "logoUrl": "https://assets.coingecko.com/coins/images/18970/large/favicon.png",
        "chainId": "56",
        "tokenid": "anyFINA",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x886640149e31e1430fa74cc39725431eb82ddfb2": {
        "address": "0x886640149e31e1430fa74cc39725431eb82ddfb2",
        "anyToken": {
          "address": "0xc36d14c0be40dc9ab88760d2112cc5a69ff8b3c7",
          "name": "Forward",
          "symbol": "any$FORWARD",
          "decimals": 18
        },
        "underlying": {
          "address": "0x886640149e31e1430fa74cc39725431eb82ddfb2",
          "name": "Forward",
          "symbol": "$FORWARD",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x01824357d7d7eaf4677bc17786abd26cbdec9ad7",
            "underlying": {
              "address": "0x01824357d7d7eaf4677bc17786abd26cbdec9ad7",
              "name": "Forward",
              "symbol": "$FORWARD",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "1000000000",
            "MinimumSwap": "18000",
            "BigValueThreshold": "200000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "200000",
            "MinimumSwapFee": "16000",
            "anyToken": {
              "address": "0xb25e20de2f2ebb4cffd4d16a55c7b395e8a94762",
              "name": "Forward",
              "symbol": "any$FORWARD",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://forwardprotocol.io/FORWARD_Symbol_Purple.png",
        "chainId": "56",
        "tokenid": "anyFORWARD",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x3708dea52a5846fd16d0060aab01c87bb5932b02": {
        "address": "0x3708dea52a5846fd16d0060aab01c87bb5932b02",
        "anyToken": {
          "address": "0x977b4fec686ad3d37dfc7c54336a26113d4c1393",
          "name": "ATEM",
          "symbol": "anyATEM",
          "decimals": 18
        },
        "underlying": {
          "address": "0x3708dea52a5846fd16d0060aab01c87bb5932b02",
          "name": "ATEM",
          "symbol": "ATEM",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x3708dea52a5846fd16d0060aab01c87bb5932b02",
            "underlying": {
              "address": "0x3708dea52a5846fd16d0060aab01c87bb5932b02",
              "name": "ATEM",
              "symbol": "ATEM",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "1000000",
            "MinimumSwap": "18",
            "BigValueThreshold": "200000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "200",
            "MinimumSwapFee": "16",
            "anyToken": {
              "address": "0xbaa75208d0ec8dde89c036dd71e897c8df903f11",
              "name": "ATEM",
              "symbol": "anyATEM",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://vwp923728.kagoyacloud.com/wp-content/uploads/2022/02/atem.png",
        "chainId": "56",
        "tokenid": "anyATEM",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xcd40f2670cf58720b694968698a5514e924f742d": {
        "address": "0xcd40f2670cf58720b694968698a5514e924f742d",
        "anyToken": {
          "address": "0x4ea6f39c719d3a77ce2e5b913312cf2999e6d19d",
          "name": "OddzToken",
          "symbol": "anyODDZ",
          "decimals": 18
        },
        "underlying": {
          "address": "0xcd40f2670cf58720b694968698a5514e924f742d",
          "name": "OddzToken",
          "symbol": "ODDZ",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xcd2828fc4d8e8a0ede91bb38cf64b1a81de65bf6",
            "underlying": {
              "address": "0xcd2828fc4d8e8a0ede91bb38cf64b1a81de65bf6",
              "name": "OddzToken",
              "symbol": "ODDZ",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "40586721.65",
            "MinimumSwap": "730.56",
            "BigValueThreshold": "8117344.33",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "8117.34",
            "MinimumSwapFee": "649.39",
            "anyToken": {
              "address": "0xa097c96acc9587d140ad8aeaac13d9db2c6cc07f",
              "name": "OddzToken",
              "symbol": "anyODDZ",
              "decimals": 18
            }
          }
        },
        "price": 0.01326685,
        "logoUrl": "https://assets.coingecko.com/coins/images/14421/large/NewLogo.png",
        "chainId": "56",
        "tokenid": "anyODDZ",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x154a9f9cbd3449ad22fdae23044319d6ef2a1fab": {
        "address": "0x154a9f9cbd3449ad22fdae23044319d6ef2a1fab",
        "anyToken": {
          "address": "0xb027c02aff109a545e4ce4fdc08b9597030c4ef6",
          "name": "OddzToken",
          "symbol": "anySKILL",
          "decimals": 18
        },
        "underlying": {
          "address": "0x154a9f9cbd3449ad22fdae23044319d6ef2a1fab",
          "name": "CryptoBladesSkillToken",
          "symbol": "SKILL",
          "decimals": 18
        },
        "destChains": {
          "1313161554": {
            "address": "0xe723111a6ac865eb6e2d62e87432bdc6e2c4a86e",
            "underlying": {
              "address": "0xe723111a6ac865eb6e2d62e87432bdc6e2c4a86e",
              "name": "Skill Token",
              "symbol": "SKILL",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "1089324.62",
            "MinimumSwap": "2.18",
            "BigValueThreshold": "217864.92",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "217.86",
            "MinimumSwapFee": "1.09",
            "anyToken": {
              "address": "0x4792c1ecb969b036eb51330c63bd27899a13d84e",
              "name": "Skill Token",
              "symbol": "SKILL",
              "decimals": 18
            }
          }
        },
        "price": 0.522966,
        "logoUrl": "https://assets.coingecko.com/coins/images/15334/large/cryptoblade.PNG",
        "chainId": "56",
        "tokenid": "anySKILL",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x27de370fe0498307e91047c9a60051d53b92114a": {
        "address": "0x27de370fe0498307e91047c9a60051d53b92114a",
        "anyToken": {
          "address": "0xed77bc3dad55f320f8807586c2aef9285c1a5ed2",
          "name": "GEM",
          "symbol": "anyGEM",
          "decimals": 18
        },
        "underlying": {
          "address": "0x27de370fe0498307e91047c9a60051d53b92114a",
          "name": "GEM",
          "symbol": "GEM",
          "decimals": 18
        },
        "destChains": {},
        "chainId": "56",
        "tokenid": "anyGEM2",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xf0c918b2a27746afc863d32a9a07b5cad3a0ef42": {
        "address": "0xf0c918b2a27746afc863d32a9a07b5cad3a0ef42",
        "anyToken": {
          "address": "0xce1ab3678e56b4a03d14a66c7ee23c055fdaea16",
          "name": "GBOND",
          "symbol": "anyGBOND",
          "decimals": 18
        },
        "underlying": {
          "address": "0xf0c918b2a27746afc863d32a9a07b5cad3a0ef42",
          "name": "GBOND",
          "symbol": "GBOND",
          "decimals": 18
        },
        "destChains": {},
        "chainId": "56",
        "tokenid": "anyGBOND",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xa296ad1c47fe6bdc133f39555c1d1177bd51fbc5": {
        "address": "0xa296ad1c47fe6bdc133f39555c1d1177bd51fbc5",
        "anyToken": {
          "address": "0x99ba071bbf4593c239d5633106d15696810840e7",
          "name": "iBuffer Token",
          "symbol": "anyiBFR",
          "decimals": 18
        },
        "underlying": {
          "address": "0xa296ad1c47fe6bdc133f39555c1d1177bd51fbc5",
          "name": "iBufferToken",
          "symbol": "iBFR",
          "decimals": 18
        },
        "destChains": {
          "1313161554": {
            "address": "0xbbc4a8d076f4b1888fec42581b6fc58d242cf2d5",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "65789473.68",
            "MinimumSwap": "131.58",
            "BigValueThreshold": "13157894.74",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "13157.89",
            "MinimumSwapFee": "65.79",
            "anyToken": {
              "address": "0xbbc4a8d076f4b1888fec42581b6fc58d242cf2d5",
              "name": "iBuffer Token",
              "symbol": "iBFR",
              "decimals": 18
            }
          }
        },
        "price": 0.109712,
        "logoUrl": "https://assets.coingecko.com/coins/images/18540/large/buffer.png",
        "chainId": "56",
        "tokenid": "anyiBFR",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xc9e8c581d67fe5cc6217b2fa1b2d4d9cecb60fb2": {
        "address": "0xc9e8c581d67fe5cc6217b2fa1b2d4d9cecb60fb2",
        "anyToken": {
          "address": "0xa802e06cf47a4bc6a8c99f525be1400d6cc29301",
          "name": "SGEM",
          "symbol": "anySGEM",
          "decimals": 18
        },
        "underlying": {
          "address": "0xc9e8c581d67fe5cc6217b2fa1b2d4d9cecb60fb2",
          "name": "SGEM",
          "symbol": "SGEM",
          "decimals": 18
        },
        "destChains": {},
        "chainId": "56",
        "tokenid": "anySGEM",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xa97b64afbb6d6811696caafd323ffc9ea983a7bb": {
        "address": "0xa97b64afbb6d6811696caafd323ffc9ea983a7bb",
        "anyToken": {
          "address": "0xc05b9aba543dc4f1c19cdd73753d77f8cc75097d",
          "name": "MemeForce",
          "symbol": "any$MF",
          "decimals": 18
        },
        "underlying": {
          "address": "0xa97b64afbb6d6811696caafd323ffc9ea983a7bb",
          "name": "MemeForce",
          "symbol": "$MF",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x5c2fce5a43a56fc158a5a86cac4fcc4fbdc577f4",
            "underlying": {
              "address": "0x5c2fce5a43a56fc158a5a86cac4fcc4fbdc577f4",
              "name": "MemeForce",
              "symbol": "$MF",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "9554748710108.92",
            "MinimumSwap": "171985476.78",
            "BigValueThreshold": "1910949742021.78",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1910949742.02",
            "MinimumSwapFee": "152875979.36",
            "anyToken": {
              "address": "0x0802d66f029c46e042b74d543fc43b6705ccb4ba",
              "name": "MemeForce",
              "symbol": "any$MF",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://cdn.sanity.io/images/gz1p1grm/production/40d8f8066a137a2533793ab1abb6452ca25d48cb-192x192.png",
        "chainId": "56",
        "tokenid": "anyMF",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x90ed8f1dc86388f14b64ba8fb4bbd23099f18240": {
        "address": "0x90ed8f1dc86388f14b64ba8fb4bbd23099f18240",
        "anyToken": {
          "address": "0xd41ed5867f6b82ca64d8cb3eeba9315891c0b7c9",
          "name": "Singularity Dao",
          "symbol": "anySDAO",
          "decimals": 18
        },
        "underlying": {
          "address": "0x90ed8f1dc86388f14b64ba8fb4bbd23099f18240",
          "name": "Singularity Dao",
          "symbol": "SDAO",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x993864e43caa7f7f12953ad6feb1d1ca635b875f",
            "underlying": {
              "address": "0x993864e43caa7f7f12953ad6feb1d1ca635b875f",
              "name": "Singularity Dao",
              "symbol": "SDAO",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "6944444.44",
            "MinimumSwap": "125",
            "BigValueThreshold": "1388888.89",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1388.89",
            "MinimumSwapFee": "111.11",
            "anyToken": {
              "address": "0xde58658a05a8ce87bb8ab96a05a4c4544938e28f",
              "name": "Singularity Dao",
              "symbol": "anySDAO",
              "decimals": 18
            }
          }
        },
        "price": 0.347458,
        "logoUrl": "https://singularitydao.ai/image/token/SDAO.svg",
        "chainId": "56",
        "tokenid": "anySDAO",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x30807d3b851a31d62415b8bb7af7dca59390434a": {
        "address": "0x30807d3b851a31d62415b8bb7af7dca59390434a",
        "anyToken": {
          "address": "0xb139ed4143bceb793346020453ab1f9d886bd294",
          "name": "RadioShack Token",
          "symbol": "anyRADIO",
          "decimals": 18
        },
        "underlying": {
          "address": "0x30807d3b851a31d62415b8bb7af7dca59390434a",
          "name": "RadioShack Token",
          "symbol": "RADIO",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x7a5d3a9dcd33cb8d527f7b5f96eb4fef43d55636",
            "underlying": {
              "address": "0x7a5d3a9dcd33cb8d527f7b5f96eb4fef43d55636",
              "name": "RadioShack Token",
              "symbol": "RADIO",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "166666666.67",
            "MinimumSwap": "3000",
            "BigValueThreshold": "33333333.33",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "33333.33",
            "MinimumSwapFee": "1333.33",
            "anyToken": {
              "address": "0x05f2972cd67705e7f2dcbffd0daa3f939b61020b",
              "name": "RadioShack Token",
              "symbol": "anyRADIO",
              "decimals": 18
            }
          }
        },
        "price": 0.00057218,
        "logoUrl": "https://i.ibb.co/Mhf5JL7/android-chrome-256x256.png",
        "chainId": "56",
        "tokenid": "anyRADIO",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x3b29e11fada25ec959d732684e783a4069f26cec": {
        "address": "0x3b29e11fada25ec959d732684e783a4069f26cec",
        "anyToken": {
          "address": "0x1fd377178511e9c74e055aa3789cfb64fc7ca07b",
          "name": "5table Token",
          "symbol": "any5TABLE",
          "decimals": 18
        },
        "underlying": {
          "address": "0x3b29e11fada25ec959d732684e783a4069f26cec",
          "name": "5table Token",
          "symbol": "5TABLE",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.03213553,
        "logoUrl": "https://assets.coingecko.com/coins/images/23497/large/3GeLpi31_400x400.jpg",
        "chainId": "56",
        "tokenid": "any5TABLE",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x4ba0057f784858a48fe351445c672ff2a3d43515": {
        "address": "0x4ba0057f784858a48fe351445c672ff2a3d43515",
        "anyToken": {
          "address": "0xcf0e74d4256d3ea96dd294ff194a1915595e74d6",
          "name": "Kalmar Token",
          "symbol": "anyKALM",
          "decimals": 18
        },
        "underlying": {
          "address": "0x4ba0057f784858a48fe351445c672ff2a3d43515",
          "name": "Kalmar Token",
          "symbol": "KALM",
          "decimals": 18
        },
        "destChains": {},
        "price": 1.61,
        "logoUrl": "https://assets.coingecko.com/coins/images/15849/large/kyljoFN.png",
        "chainId": "56",
        "tokenid": "anyKALM",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x3fcca8648651e5b974dd6d3e50f61567779772a8": {
        "address": "0x3fcca8648651e5b974dd6d3e50f61567779772a8",
        "anyToken": {
          "address": "0x865109a3eb981b2be9f66cbbc78653ba09e79128",
          "name": "Moonpot",
          "symbol": "anyPOTS",
          "decimals": 18
        },
        "underlying": {
          "address": "0x3fcca8648651e5b974dd6d3e50f61567779772a8",
          "name": "Moonpot",
          "symbol": "POTS",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00279447,
        "logoUrl": "https://assets.coingecko.com/coins/images/17517/large/moonpot.PNG",
        "chainId": "56",
        "tokenid": "anyPOTS",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x7269d98af4aa705e0b1a5d8512fadb4d45817d5a": {
        "address": "0x7269d98af4aa705e0b1a5d8512fadb4d45817d5a",
        "anyToken": {
          "address": "0x2e6db117182be2d2bb880a610d4abfe4ca4cc544",
          "name": "Shirtum",
          "symbol": "anySHI",
          "decimals": 18
        },
        "underlying": {
          "address": "0x7269d98af4aa705e0b1a5d8512fadb4d45817d5a",
          "name": "Shirtum",
          "symbol": "SHI",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xad996a45fd2373ed0b10efa4a8ecb9de445a4302",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "63938618.92",
            "MinimumSwap": "1150.9",
            "BigValueThreshold": "12787723.78",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "12787.72",
            "MinimumSwapFee": "1023.02",
            "anyToken": {
              "address": "0xad996a45fd2373ed0b10efa4a8ecb9de445a4302",
              "name": "Shirtum",
              "symbol": "SHI",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://shirtum.com/wp-content/uploads/2022/05/ShirtumLogotype.svg",
        "chainId": "56",
        "tokenid": "anySHI",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xf8fc63200e181439823251020d691312fdcf5090": {
        "address": "0xf8fc63200e181439823251020d691312fdcf5090",
        "anyToken": {
          "address": "0x4b6e3a07335ab6558b7c5251601a18096944f665",
          "name": "ExzoCoin 2.0",
          "symbol": "anyEXZO",
          "decimals": 9
        },
        "underlying": {
          "address": "0xf8fc63200e181439823251020d691312fdcf5090",
          "name": "ExzoCoin 2.0",
          "symbol": "EXZO",
          "decimals": 9
        },
        "destChains": {
          "1": {
            "address": "0x56501b0b12ee9518c2991451bbc8d7f9267949d2",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "25000000000",
            "MinimumSwap": "450000",
            "BigValueThreshold": "5000000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "5000000",
            "MinimumSwapFee": "400000",
            "anyToken": {
              "address": "0x56501b0b12ee9518c2991451bbc8d7f9267949d2",
              "name": "ExzoCoin 2.0",
              "symbol": "EXZO",
              "decimals": 9
            }
          }
        },
        "price": 0.00002037,
        "logoUrl": "https://assets.coingecko.com/coins/images/16279/large/cropped-exzocoin-favicon-cryptocurrency.png",
        "chainId": "56",
        "tokenid": "anyEXZO",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x9c71bb500dae9782965d660ef33c1e7c4a3d1f8a": {
        "address": "0x9c71bb500dae9782965d660ef33c1e7c4a3d1f8a",
        "anyToken": {
          "address": "0x1024fb39d9938d3b028e940b95c84a326cd57a58",
          "name": "Protocol X",
          "symbol": "anyPX",
          "decimals": 18
        },
        "underlying": {
          "address": "0x9c71bb500dae9782965d660ef33c1e7c4a3d1f8a",
          "name": "Protocol X",
          "symbol": "PX",
          "decimals": 18
        },
        "destChains": {},
        "chainId": "56",
        "tokenid": "anyPX",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xa1faa113cbe53436df28ff0aee54275c13b40975": {
        "address": "0xa1faa113cbe53436df28ff0aee54275c13b40975",
        "anyToken": {
          "address": "0x64b84d2eab43109220c84e0b163fb073fe125223",
          "name": "AlphaToken",
          "symbol": "anyALPHA",
          "decimals": 18
        },
        "underlying": {
          "address": "0xa1faa113cbe53436df28ff0aee54275c13b40975",
          "name": "AlphaToken",
          "symbol": "ALPHA",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xa1faa113cbe53436df28ff0aee54275c13b40975",
            "underlying": {
              "address": "0xa1faa113cbe53436df28ff0aee54275c13b40975",
              "name": "AlphaToken",
              "symbol": "ALPHA",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "11384179.63",
            "MinimumSwap": "204.91",
            "BigValueThreshold": "2276835.93",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "2276.83",
            "MinimumSwapFee": "182.146",
            "anyToken": {
              "address": "0xb1d6bc439f5d3bfbd828da3d0848b0f3658c9dc6",
              "name": "AlphaToken",
              "symbol": "anyALPHA",
              "decimals": 18
            }
          }
        },
        "price": 0.113617,
        "logoUrl": "https://assets.coingecko.com/coins/images/12738/large/AlphaToken_256x256.png",
        "chainId": "56",
        "tokenid": "anyALPHA",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x4dcd4700b38ce6562730c27da557f6de819b347b": {
        "address": "0x4dcd4700b38ce6562730c27da557f6de819b347b",
        "anyToken": {
          "address": "0x59d66751eff67d7150196b4086afcc0313163026",
          "name": "citizen finance",
          "symbol": "anyCIFI",
          "decimals": 18
        },
        "underlying": {
          "address": "0x4dcd4700b38ce6562730c27da557f6de819b347b",
          "name": "citizen finance",
          "symbol": "CIFI",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.03173272,
        "logoUrl": "https://assets.coingecko.com/coins/images/24255/large/cifi.png",
        "chainId": "56",
        "tokenid": "anyCIFI",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x25b9d4b9535920194c359d2879db6a1382c2ff26": {
        "address": "0x25b9d4b9535920194c359d2879db6a1382c2ff26",
        "anyToken": {
          "address": "0x9d709ca51507730dfb8379a38c15f7f3d5a3710e",
          "name": "Teneo",
          "symbol": "anyTEN",
          "decimals": 18
        },
        "underlying": {
          "address": "0x25b9d4b9535920194c359d2879db6a1382c2ff26",
          "name": "Teneo",
          "symbol": "TEN",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00161264,
        "logoUrl": "https://assets.coingecko.com/coins/images/23856/large/18320.png",
        "chainId": "56",
        "tokenid": "anyTEN",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x7e35d0e9180bf3a1fc47b0d110be7a21a10b41fe": {
        "address": "0x7e35d0e9180bf3a1fc47b0d110be7a21a10b41fe",
        "anyToken": {
          "address": "0x2f4a4fdcf8c77d63c2c967c07a61bdf8992c3c50",
          "name": "OVR",
          "symbol": "anyOVR",
          "decimals": 18
        },
        "underlying": {
          "address": "0x7e35d0e9180bf3a1fc47b0d110be7a21a10b41fe",
          "name": "OVR",
          "symbol": "OVR",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.516179,
        "logoUrl": "https://assets.coingecko.com/coins/images/13429/large/ovr_logo.png",
        "chainId": "56",
        "tokenid": "anyOVR",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xffc71bb355770b5abcc33ff3e652f63a1dff442e": {
        "address": "0xffc71bb355770b5abcc33ff3e652f63a1dff442e",
        "anyToken": {
          "address": "0x768b63c11d66a1d9cb2a9a1779f25ef275f76647",
          "name": "Vision",
          "symbol": "anyVSN",
          "decimals": 18
        },
        "underlying": {
          "address": "0xffc71bb355770b5abcc33ff3e652f63a1dff442e",
          "name": "Vision",
          "symbol": "VSN",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.01958686,
        "logoUrl": "https://assets.coingecko.com/coins/images/12253/large/vision_icon_200.png",
        "chainId": "56",
        "tokenid": "anyVSN",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xfd81ef21ea7cf1dc00e9c6dd261b4f3be0341d5c": {
        "address": "0xfd81ef21ea7cf1dc00e9c6dd261b4f3be0341d5c",
        "anyToken": {
          "address": "0x33e4cd013fcad9de00a1b12e8ae9dfea2342e4eb",
          "name": "dibs.money",
          "symbol": "anyDIBS",
          "decimals": 18
        },
        "underlying": {
          "address": "0xfd81ef21ea7cf1dc00e9c6dd261b4f3be0341d5c",
          "name": "dibs.money",
          "symbol": "DIBS",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.04209774,
        "logoUrl": "https://assets.coingecko.com/coins/images/22184/large/Group_764_4.png",
        "chainId": "56",
        "tokenid": "anyDIBS",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x44754455564474a89358b2c2265883df993b12f0": {
        "address": "0x44754455564474a89358b2c2265883df993b12f0",
        "anyToken": {
          "address": "0x3ca1f50e8178a8a21cc919e617f8fad98a048ce9",
          "name": "ZeroSwapToken",
          "symbol": "anyZEE",
          "decimals": 18
        },
        "underlying": {
          "address": "0x44754455564474a89358b2c2265883df993b12f0",
          "name": "ZeroSwapToken",
          "symbol": "ZEE",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.02073405,
        "logoUrl": "https://assets.coingecko.com/coins/images/12861/large/zeroswap.jpg",
        "chainId": "56",
        "tokenid": "anyZEE",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x95ee03e1e2c5c4877f9a298f1c0d6c98698fab7b": {
        "address": "0x95ee03e1e2c5c4877f9a298f1c0d6c98698fab7b",
        "anyToken": {
          "address": "0x1f9ce5ac8befa74bfa614ae22ffc0fdd1e06827e",
          "name": "Duet Governance Token",
          "symbol": "anyDUET",
          "decimals": 18
        },
        "underlying": {
          "address": "0x95ee03e1e2c5c4877f9a298f1c0d6c98698fab7b",
          "name": "Duet Governance Token",
          "symbol": "DUET",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xe8521b61f64fc45a0bc3db36d2a524fe61a69b52",
            "underlying": {
              "address": "0xe8521b61f64fc45a0bc3db36d2a524fe61a69b52",
              "name": "Duet Governance Token",
              "symbol": "DUET",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "15250411.76",
            "MinimumSwap": "274.51",
            "BigValueThreshold": "3050082.35",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "3050.08",
            "MinimumSwapFee": "244.01",
            "anyToken": {
              "address": "0xb808d767ddf0f61ca62331c1bbbebe0530b41079",
              "name": "Duet Governance Token",
              "symbol": "anyDUET",
              "decimals": 18
            }
          }
        },
        "price": 0.00125259,
        "logoUrl": "https://assets.coingecko.com/coins/images/16164/large/Duet.jpg",
        "chainId": "56",
        "tokenid": "anyDUET",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x80d04e44955aa9c3f24041b2a824a20a88e735a8": {
        "address": "0x80d04e44955aa9c3f24041b2a824a20a88e735a8",
        "anyToken": {
          "address": "0x9b3a299a3db37c662ab9d39cbfedacb81c0e09e3",
          "name": "Multiverse Capital (MVC.finance)",
          "symbol": "anyMVC",
          "decimals": 18
        },
        "underlying": {
          "address": "0x80d04e44955aa9c3f24041b2a824a20a88e735a8",
          "name": "Multiverse Capital (MVC.finance)",
          "symbol": "MVC",
          "decimals": 18
        },
        "destChains": {},
        "price": 9.2159e-8,
        "logoUrl": "https://assets.coingecko.com/coins/images/21172/large/mvc.PNG",
        "chainId": "56",
        "tokenid": "anyMVC",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xf0dcf7ac48f8c745f2920d03dff83f879b80d438": {
        "address": "0xf0dcf7ac48f8c745f2920d03dff83f879b80d438",
        "anyToken": {
          "address": "0x9c8a7a2b154e3999c7c3774b662dcdd6580b3722",
          "name": "Gami Token",
          "symbol": "anyGAMI",
          "decimals": 18
        },
        "underlying": {
          "address": "0xf0dcf7ac48f8c745f2920d03dff83f879b80d438",
          "name": "Gami Token",
          "symbol": "GAMI",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00254211,
        "logoUrl": "https://assets.coingecko.com/coins/images/24482/large/IMG_20220319_170534_629.jpg",
        "chainId": "56",
        "tokenid": "anyGAMI",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xca830317146bfdde71e7c0b880e2ec1f66e273ee": {
        "address": "0xca830317146bfdde71e7c0b880e2ec1f66e273ee",
        "anyToken": {
          "address": "0xe2476ec3a5954e717a1ed3b35296011af07da71a",
          "name": "PolyGod",
          "symbol": "anyGULL",
          "decimals": 18
        },
        "underlying": {
          "address": "0xca830317146bfdde71e7c0b880e2ec1f66e273ee",
          "name": "PolyGod",
          "symbol": "GULL",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00459978,
        "logoUrl": "https://assets.coingecko.com/coins/images/20590/large/polygod.PNG",
        "chainId": "56",
        "tokenid": "anyGULL",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xfbcf80ed90856af0d6d9655f746331763efdb22c": {
        "address": "0xfbcf80ed90856af0d6d9655f746331763efdb22c",
        "anyToken": {
          "address": "0xd6403c6318a87bc7dd5ba242e120f3ca878df98f",
          "name": "NEXTYPE",
          "symbol": "anyNT",
          "decimals": 18
        },
        "underlying": {
          "address": "0xfbcf80ed90856af0d6d9655f746331763efdb22c",
          "name": "NEXTYPE",
          "symbol": "NT",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00091946,
        "logoUrl": "https://assets.coingecko.com/coins/images/17415/large/nextype.PNG",
        "chainId": "56",
        "tokenid": "anyNT",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x3c5e3d85dfe23302f9439dee89ee4ae3d57f619c": {
        "address": "0x3c5e3d85dfe23302f9439dee89ee4ae3d57f619c",
        "anyToken": {
          "address": "0xd8dbc29c651e0571d8c1e1b5f9c1d68d5fa4d752",
          "name": "CK Finance",
          "symbol": "anyCK",
          "decimals": 9
        },
        "underlying": {
          "address": "0x3c5e3d85dfe23302f9439dee89ee4ae3d57f619c",
          "name": "CK Finance",
          "symbol": "CK",
          "decimals": 9
        },
        "destChains": {},
        "logoUrl": "https://i0.wp.com/ck.finance/wp-content/uploads/2022/01/ck-coin-black.png",
        "chainId": "56",
        "tokenid": "anyCK",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x195de011a1f5bf44b64a9474c62da964f68cd34f": {
        "address": "0x195de011a1f5bf44b64a9474c62da964f68cd34f",
        "anyToken": {
          "address": "0xc55d3a143e16e509358ccb09c00aed072efd48e0",
          "name": "BlazarBits",
          "symbol": "anybBzB",
          "decimals": 18
        },
        "underlying": {
          "address": "0x195de011a1f5bf44b64a9474c62da964f68cd34f",
          "name": "BlazarBits",
          "symbol": "bBzB",
          "decimals": 18
        },
        "destChains": {},
        "logoUrl": "https://blazarbits.co/img/zW57k-X7oCh-l95uK-xfbFP-UNW5U.png",
        "chainId": "56",
        "tokenid": "anyBzB",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xfeea0bdd3d07eb6fe305938878c0cadbfa169042": {
        "address": "0xfeea0bdd3d07eb6fe305938878c0cadbfa169042",
        "anyToken": {
          "address": "0xd6e6513f1c449fbaf3b527456a3f7ecc729b63cd",
          "name": "8PAY Network",
          "symbol": "any8PAY",
          "decimals": 18
        },
        "underlying": {
          "address": "0xfeea0bdd3d07eb6fe305938878c0cadbfa169042",
          "name": "8PAY Network",
          "symbol": "8PAY",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xfeea0bdd3d07eb6fe305938878c0cadbfa169042",
            "underlying": {
              "address": "0xfeea0bdd3d07eb6fe305938878c0cadbfa169042",
              "name": "8PAY Network",
              "symbol": "8PAY",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "183901011.23",
            "MinimumSwap": "3310.22",
            "BigValueThreshold": "36780202.25",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "36780.2",
            "MinimumSwapFee": "1471.21",
            "anyToken": {
              "address": "0x77c62e549ca46ef8dd5edc052b1edc783f60a400",
              "name": "8PAY Network",
              "symbol": "any8PAY",
              "decimals": 18
            }
          }
        },
        "price": 0.01289602,
        "logoUrl": "https://assets.coingecko.com/coins/images/14667/large/8pay.jpeg",
        "chainId": "56",
        "tokenid": "any8PAY",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x632fbf85f77978437073a8ce5ceec29e3209514c": {
        "address": "0x632fbf85f77978437073a8ce5ceec29e3209514c",
        "anyToken": {
          "address": "0xa83ebae74ac8f256dd3fdfea409b98eb44c7c52b",
          "name": "Virtual Unit",
          "symbol": "anyvUNIT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x632fbf85f77978437073a8ce5ceec29e3209514c",
          "name": "Virtual Unit",
          "symbol": "vUNIT",
          "decimals": 18
        },
        "destChains": {},
        "logoUrl": "https://user-images.githubusercontent.com/57688920/112673530-e3da8980-8e75-11eb-99fc-3788ad5e8f79.png",
        "chainId": "56",
        "tokenid": "anyvUNIT",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x4ef285c8cbe52267c022c39da98b97ca4b7e2ff9": {
        "address": "0x4ef285c8cbe52267c022c39da98b97ca4b7e2ff9",
        "anyToken": {
          "address": "0xe44108ca708a5016131f5fe82581e789cb4eaf96",
          "name": "pTokens ORE [via ChainPort.io]",
          "symbol": "anyORE",
          "decimals": 18
        },
        "underlying": {
          "address": "0x4ef285c8cbe52267c022c39da98b97ca4b7e2ff9",
          "name": "pTokens ORE [via ChainPort.io]",
          "symbol": "ORE",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x4f640f2529ee0cf119a2881485845fa8e61a782a",
            "underlying": {
              "address": "0x4f640f2529ee0cf119a2881485845fa8e61a782a",
              "name": "pTokens ORE",
              "symbol": "ORE",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "127888031.47",
            "MinimumSwap": "2301.98",
            "BigValueThreshold": "25577606.29",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "25577.61",
            "MinimumSwapFee": "1023.1",
            "anyToken": {
              "address": "0xef5ce7411b389e004a73b37acfc51a8218322a6c",
              "name": "pTokens ORE",
              "symbol": "anyORE",
              "decimals": 18
            }
          }
        },
        "price": 0.00350657,
        "logoUrl": "https://assets.coingecko.com/coins/images/18917/large/ORE_FullColor.png",
        "chainId": "56",
        "tokenid": "anyORE",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x8c18ffd66d943c9b0ad3dc40e2d64638f1e6e1ab": {
        "address": "0x8c18ffd66d943c9b0ad3dc40e2d64638f1e6e1ab",
        "anyToken": {
          "address": "0xcc1f1cbf22293cd906f9e7c4419fbbcde9bd8148",
          "name": "HerityNetwork",
          "symbol": "anyHER",
          "decimals": 9
        },
        "underlying": {
          "address": "0x8c18ffd66d943c9b0ad3dc40e2d64638f1e6e1ab",
          "name": "HerityNetwork",
          "symbol": "HER",
          "decimals": 9
        },
        "destChains": {},
        "price": 0.00669645,
        "logoUrl": "https://assets.coingecko.com/coins/images/22724/large/Herity-logo.png",
        "chainId": "56",
        "tokenid": "anyHER",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x6b1c8765c7eff0b60706b0ae489eb9bb9667465a": {
        "address": "0x6b1c8765c7eff0b60706b0ae489eb9bb9667465a",
        "anyToken": {
          "address": "0x1a8d54beed300e99e41dfc806d522eba5aefa034",
          "name": "Signata",
          "symbol": "anySATA",
          "decimals": 18
        },
        "underlying": {
          "address": "0x6b1c8765c7eff0b60706b0ae489eb9bb9667465a",
          "name": "Signata",
          "symbol": "SATA",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x3ebb4a4e91ad83be51f8d596533818b246f4bee1",
            "underlying": {
              "address": "0x3ebb4a4e91ad83be51f8d596533818b246f4bee1",
              "name": "Signata",
              "symbol": "SATA",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "24648269.2",
            "MinimumSwap": "443.67",
            "BigValueThreshold": "4929653.84",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "4929.65",
            "MinimumSwapFee": "197.19",
            "anyToken": {
              "address": "0xbbb63f49fe75cd82513c4a3da2ec80dd36a8448f",
              "name": "Signata",
              "symbol": "anySATA",
              "decimals": 18
            }
          }
        },
        "price": 0.010985,
        "logoUrl": "https://assets.coingecko.com/coins/images/14704/large/logo.png",
        "chainId": "56",
        "tokenid": "anySATA",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x3581a7b7be2ed2edf98710910fd05b0e8545f1db": {
        "address": "0x3581a7b7be2ed2edf98710910fd05b0e8545f1db",
        "anyToken": {
          "address": "0xc232e3741660f097515fc46c3d65a9f56adda6fb",
          "name": "CorgiToken",
          "symbol": "anyCOR",
          "decimals": 18
        },
        "underlying": {
          "address": "0x3581a7b7be2ed2edf98710910fd05b0e8545f1db",
          "name": "CorgiToken",
          "symbol": "COR",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00393893,
        "logoUrl": "https://assets.coingecko.com/coins/images/19326/large/bitcor.png",
        "chainId": "56",
        "tokenid": "anyCOR",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x3e63e9c8f2297e3c027f8444b4591e2583d8780b": {
        "address": "0x3e63e9c8f2297e3c027f8444b4591e2583d8780b",
        "anyToken": {
          "address": "0x989a6de580b9e918017f02fe7180e6f94805d2ab",
          "name": "PLOT",
          "symbol": "anyPLOT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x3e63e9c8f2297e3c027f8444b4591e2583d8780b",
          "name": "PLOT",
          "symbol": "PLOT",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00034972,
        "logoUrl": "https://assets.coingecko.com/coins/images/24495/large/3MgvCVi.jpeg",
        "chainId": "56",
        "tokenid": "anyPLOT",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x54f85cdb537d5a5ebc76f55b13c6dbc3b6828d57": {
        "address": "0x54f85cdb537d5a5ebc76f55b13c6dbc3b6828d57",
        "anyToken": {
          "address": "0x1f38620f555a4725c2e27d34a175e4f97a32b3ac",
          "name": "Harmony Launcher",
          "symbol": "anyHARL",
          "decimals": 18
        },
        "underlying": {
          "address": "0x54f85cdb537d5a5ebc76f55b13c6dbc3b6828d57",
          "name": "Harmony Launcher",
          "symbol": "HARL",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00024456,
        "logoUrl": "https://assets.coingecko.com/coins/images/21472/large/harmony_launcher.PNG",
        "chainId": "56",
        "tokenid": "anyHARL",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x0231f91e02debd20345ae8ab7d71a41f8e140ce7": {
        "address": "0x0231f91e02debd20345ae8ab7d71a41f8e140ce7",
        "anyToken": {
          "address": "0xd31228d81b2b295e18ea1ad4cd4e25da0afe1e4c",
          "name": "BSC Wrapped Jupiter",
          "symbol": "anybwJUP",
          "decimals": 18
        },
        "underlying": {
          "address": "0x0231f91e02debd20345ae8ab7d71a41f8e140ce7",
          "name": "BSC Wrapped Jupiter",
          "symbol": "bwJUP",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x4b1e80cac91e2216eeb63e29b957eb91ae9c2be8",
            "underlying": {
              "address": "0x4b1e80cac91e2216eeb63e29b957eb91ae9c2be8",
              "name": "Jupiter",
              "symbol": "JUP",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "323812175.98",
            "MinimumSwap": "5828.62",
            "BigValueThreshold": "64762435.2",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "64762.43",
            "MinimumSwapFee": "5180.994",
            "anyToken": {
              "address": "0xa1ae26219565370fcfea073249309d117d805c39",
              "name": "Jupiter",
              "symbol": "anyJUP",
              "decimals": 18
            }
          }
        },
        "price": 0.00741294,
        "logoUrl": "https://assets.coingecko.com/coins/images/10351/large/logo512.png",
        "chainId": "56",
        "tokenid": "anyJUP",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x5c4bcc4dbaeabc7659f6435bce4e659314ebad87": {
        "address": "0x5c4bcc4dbaeabc7659f6435bce4e659314ebad87",
        "anyToken": {
          "address": "0x0aa473bdf86233b7f9224ffaead25b1ed182279c",
          "name": "NuNet Utility Token",
          "symbol": "anyNTX",
          "decimals": 6
        },
        "underlying": {
          "address": "0x5c4bcc4dbaeabc7659f6435bce4e659314ebad87",
          "name": "NuNet Utility Token",
          "symbol": "NTX",
          "decimals": 6
        },
        "destChains": {
          "1": {
            "address": "0xf0d33beda4d734c72684b5f9abbebf715d0a7935",
            "underlying": {
              "address": "0xf0d33beda4d734c72684b5f9abbebf715d0a7935",
              "name": "NuNet Utility Token",
              "symbol": "NTX",
              "decimals": 6
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "61050061.050061",
            "MinimumSwap": "610.500611",
            "BigValueThreshold": "12210012.210012",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "12210.01221",
            "MinimumSwapFee": "488.400488",
            "anyToken": {
              "address": "0x7761a5e95c96ff0d68daf5ef2f94741229b36b50",
              "name": "NuNet Utility Token",
              "symbol": "anyNTX",
              "decimals": 6
            }
          }
        },
        "price": 0.04231665,
        "logoUrl": "https://s2.coinmarketcap.com/static/img/coins/200x200/13198.png",
        "chainId": "56",
        "tokenid": "anyNTX",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xd52669712f253cd6b2fe8a8638f66ed726cb770c": {
        "address": "0xd52669712f253cd6b2fe8a8638f66ed726cb770c",
        "anyToken": {
          "address": "0x250c30a63374a613ed14a0e4d7bd7d14abab8fbf",
          "name": "Curate",
          "symbol": "anyXCUR",
          "decimals": 8
        },
        "underlying": {
          "address": "0xd52669712f253cd6b2fe8a8638f66ed726cb770c",
          "name": "Curate",
          "symbol": "XCUR",
          "decimals": 8
        },
        "destChains": {
          "1": {
            "address": "0xe1c7e30c42c24582888c758984f6e382096786bd",
            "underlying": {
              "address": "0xe1c7e30c42c24582888c758984f6e382096786bd",
              "name": "Curate",
              "symbol": "XCUR",
              "decimals": 8
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "4098360.65",
            "MinimumSwap": "73.77",
            "BigValueThreshold": "819672.13",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "819.67",
            "MinimumSwapFee": "65.573",
            "anyToken": {
              "address": "0xdb12c7e30dc2a2c421724d07c7a09147bd9f61bb",
              "name": "Curate",
              "symbol": "anyXCUR",
              "decimals": 8
            }
          }
        },
        "price": 0.02289074,
        "logoUrl": "https://assets.coingecko.com/coins/images/13327/large/400x400_%281%29_%283%29_%282%29.png",
        "chainId": "56",
        "tokenid": "anyXCUR",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x4b5decb9327b4d511a58137a1ade61434aacdd43": {
        "address": "0x4b5decb9327b4d511a58137a1ade61434aacdd43",
        "anyToken": {
          "address": "0x6362c3ac9713008b79deb0ee361f1f6f57037694",
          "name": "Poken",
          "symbol": "anyPKN",
          "decimals": 18
        },
        "underlying": {
          "address": "0x4b5decb9327b4d511a58137a1ade61434aacdd43",
          "name": "Poken",
          "symbol": "PKN",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xdf09a216fac5adc3e640db418c0b956076509503",
            "underlying": {
              "address": "0xdf09a216fac5adc3e640db418c0b956076509503",
              "name": "Poken",
              "symbol": "PKN",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "189748063.9",
            "MinimumSwap": "3415.47",
            "BigValueThreshold": "37949612.78",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "37949.61",
            "MinimumSwapFee": "3035.969",
            "anyToken": {
              "address": "0x623332a33ae3a8fc9b121322c72550decc0ed81c",
              "name": "Poken",
              "symbol": "anyPKN",
              "decimals": 18
            }
          }
        },
        "price": 0.00121298,
        "logoUrl": "https://assets.coingecko.com/coins/images/21574/large/G10VNBAR_400x400.jpg",
        "chainId": "56",
        "tokenid": "anyPKN",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xd1102332a213e21faf78b69c03572031f3552c33": {
        "address": "0xd1102332a213e21faf78b69c03572031f3552c33",
        "anyToken": {
          "address": "0xbd87fa704d5ab65e9a189d6e0dbaade51643adf0",
          "name": "Bat True Dollar",
          "symbol": "anyBTD",
          "decimals": 18
        },
        "underlying": {
          "address": "0xd1102332a213e21faf78b69c03572031f3552c33",
          "name": "BatTrueDollar",
          "symbol": "BTD",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xfbdd194376de19a88118e84e279b977f165d01b8",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "160990545.97",
            "MinimumSwap": "2897.83",
            "BigValueThreshold": "32198109.19",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "32198.11",
            "MinimumSwapFee": "2575.848",
            "anyToken": {
              "address": "0xfbdd194376de19a88118e84e279b977f165d01b8",
              "name": "BatTrueDollar",
              "symbol": "BTD",
              "decimals": 18
            }
          }
        },
        "price": 0.00859408,
        "logoUrl": "https://assets.coingecko.com/coins/images/13624/large/PM7Wwm6O.png",
        "chainId": "56",
        "tokenid": "anyBTD",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x1354e1c028ad93ed9992ee3bfd3ee5608489439c": {
        "address": "0x1354e1c028ad93ed9992ee3bfd3ee5608489439c",
        "anyToken": {
          "address": "0x8c1d1ae5d02629e6b8bf4da1b8ced34346cb8a9f",
          "name": "Truefeedback Token",
          "symbol": "anyTFBX",
          "decimals": 18
        },
        "underlying": {
          "address": "0x1354e1c028ad93ed9992ee3bfd3ee5608489439c",
          "name": "Truefeedback Token",
          "symbol": "TFBX",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x4057db5bd9f67a566aa10e5587b1a964affc6a16",
            "underlying": {
              "address": "0x4057db5bd9f67a566aa10e5587b1a964affc6a16",
              "name": "Truefeedback",
              "symbol": "TFBX",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "2449167527.96",
            "MinimumSwap": "44085.02",
            "BigValueThreshold": "489833505.59",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "489833.5",
            "MinimumSwapFee": "39186.68",
            "anyToken": {
              "address": "0xe5130d3dbfac6ae7d73a24d719762df74d8e4c27",
              "name": "Truefeedback",
              "symbol": "anyTFBX",
              "decimals": 18
            }
          }
        },
        "price": 0.0002187,
        "logoUrl": "https://assets.coingecko.com/coins/images/8842/large/5rd7a55q_400x400.png",
        "chainId": "56",
        "tokenid": "anyTFBX",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xd9025e25bb6cf39f8c926a704039d2dd51088063": {
        "address": "0xd9025e25bb6cf39f8c926a704039d2dd51088063",
        "anyToken": {
          "address": "0xeac7ec051a0854cfc2bb543c96fad879de545b90",
          "name": "Coinary Token",
          "symbol": "anyCYT",
          "decimals": 18
        },
        "underlying": {
          "address": "0xd9025e25bb6cf39f8c926a704039d2dd51088063",
          "name": "Coinary Token",
          "symbol": "CYT",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00323431,
        "logoUrl": "https://assets.coingecko.com/coins/images/17622/large/CYT-LOGO-1.png",
        "chainId": "56",
        "tokenid": "anyCYT",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x33b48893b8f119fb45f431b36f830a9584804201": {
        "address": "0x33b48893b8f119fb45f431b36f830a9584804201",
        "anyToken": {
          "address": "0x2ffb752b867415b57f8bc07ce4f70cac26b7300d",
          "name": "Cowboy Snake",
          "symbol": "anyCOWS",
          "decimals": 18
        },
        "underlying": {
          "address": "0x33b48893b8f119fb45f431b36f830a9584804201",
          "name": "Cowboy Snake",
          "symbol": "COWS",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00064314,
        "logoUrl": "https://assets.coingecko.com/coins/images/21876/large/cowboy_snake.PNG",
        "chainId": "56",
        "tokenid": "anyCOWS",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xf9a2d40589271be17612a3f57a9028a568f56e3d": {
        "address": "0xf9a2d40589271be17612a3f57a9028a568f56e3d",
        "anyToken": {
          "address": "0x4615e03cb458e08ed3a7996b2e0f61e6f59864bc",
          "name": "DoKEN",
          "symbol": "anyDoKEN",
          "decimals": 18
        },
        "underlying": {
          "address": "0xf9a2d40589271be17612a3f57a9028a568f56e3d",
          "name": "DoKEN",
          "symbol": "DoKEN",
          "decimals": 18
        },
        "destChains": {},
        "price": 4.605e-8,
        "logoUrl": "https://assets.coingecko.com/coins/images/20283/large/Qu5sof9.png",
        "chainId": "56",
        "tokenid": "anyDoKEN",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x1785113910847770290f5f840b4c74fc46451201": {
        "address": "0x1785113910847770290f5f840b4c74fc46451201",
        "anyToken": {
          "address": "0x4fee8628787d450154b4efef48d8e495201aa0f3",
          "name": "FABWELT",
          "symbol": "anyWELT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x1785113910847770290f5f840b4c74fc46451201",
          "name": "FABWELT",
          "symbol": "WELT",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00459317,
        "logoUrl": "https://assets.coingecko.com/coins/images/20505/large/welt.PNG",
        "chainId": "56",
        "tokenid": "anyWELT",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x4317708ad04d36afdb0e7a5d62154d896b01b392": {
        "address": "0x4317708ad04d36afdb0e7a5d62154d896b01b392",
        "anyToken": {
          "address": "0x14943e8bdf07049470b6a001f9b09ddad0c0065b",
          "name": "FLOKIFOMO",
          "symbol": "anyFLOKIFM",
          "decimals": 9
        },
        "underlying": {
          "address": "0x4317708ad04d36afdb0e7a5d62154d896b01b392",
          "name": "FLOKIFOMO",
          "symbol": "FLOKIFM",
          "decimals": 9
        },
        "destChains": {},
        "price": 0,
        "logoUrl": "",
        "chainId": "56",
        "tokenid": "anyFLOKIFM",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x2c717059b366714d267039af8f59125cadce6d8c": {
        "address": "0x2c717059b366714d267039af8f59125cadce6d8c",
        "anyToken": {
          "address": "0x70d9b7457c713019f5b9c99bf73fd42084555630",
          "name": "MetaShooter",
          "symbol": "anyMHUNT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x2c717059b366714d267039af8f59125cadce6d8c",
          "name": "MetaShooter",
          "symbol": "MHUNT",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xf460d98a3517b45edd8063dd3847de92a8038aa2",
            "underlying": {
              "address": "0xf460d98a3517b45edd8063dd3847de92a8038aa2",
              "name": "MetaShooter",
              "symbol": "MHUNT",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "128323020.867633",
            "MinimumSwap": "2309.814376",
            "BigValueThreshold": "25664604.173527",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "25664.604173",
            "MinimumSwapFee": "2053.168334",
            "anyToken": {
              "address": "0xc8f884783ea40116ac7ee1893858c21d9d438b6c",
              "name": "MetaShooter",
              "symbol": "anyMHUNT",
              "decimals": 18
            }
          }
        },
        "price": 0.00933822,
        "logoUrl": "https://assets.coingecko.com/coins/images/24985/large/200x200.png",
        "chainId": "56",
        "tokenid": "anyMHUNT",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x603c7f932ed1fc6575303d8fb018fdcbb0f39a95": {
        "address": "0x603c7f932ed1fc6575303d8fb018fdcbb0f39a95",
        "anyToken": {
          "address": "0xb52da8102e715d5e220aae2ef58e9f978fcdeb3f",
          "name": "ApeSwapFinance Banana",
          "symbol": "anyBANANA",
          "decimals": 18
        },
        "underlying": {
          "address": "0x603c7f932ed1fc6575303d8fb018fdcbb0f39a95",
          "name": "ApeSwapFinanceBanana",
          "symbol": "BANANA",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x92df60c51c710a1b1c20e42d85e221f3a1bfc7f2",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "13542501.79",
            "MinimumSwap": "243.76",
            "BigValueThreshold": "2708500.36",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "2708.5",
            "MinimumSwapFee": "216.68",
            "anyToken": {
              "address": "0x92df60c51c710a1b1c20e42d85e221f3a1bfc7f2",
              "name": "ApeSwapFinance Banana",
              "symbol": "BANANA",
              "decimals": 18
            }
          }
        },
        "price": 0.02581441,
        "logoUrl": "https://assets.coingecko.com/coins/images/14870/large/banana.png",
        "chainId": "56",
        "tokenid": "anyBANANA",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x87bade473ea0513d4aa7085484aeaa6cb6ebe7e3": {
        "address": "0x87bade473ea0513d4aa7085484aeaa6cb6ebe7e3",
        "anyToken": {
          "address": "0x1e06229b037ec6bfeb48fc4d3b473e6c91bb99b7",
          "name": "Mor Stablecoin",
          "symbol": "anyMOR",
          "decimals": 18
        },
        "underlying": {
          "address": "0x87bade473ea0513d4aa7085484aeaa6cb6ebe7e3",
          "name": "Mor Stablecoin",
          "symbol": "MOR",
          "decimals": 18
        },
        "destChains": {},
        "price": 1.018,
        "logoUrl": "https://assets.coingecko.com/coins/images/18549/large/MOR_logo_icon_black_background_round_200_x_200-01.png",
        "chainId": "56",
        "tokenid": "anyMOR",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x01fb70ea8acfdd5435c8e8bd1531d96d57ced0ec": {
        "address": "0x01fb70ea8acfdd5435c8e8bd1531d96d57ced0ec",
        "anyToken": {
          "address": "0x6cee1e8763589d77746e7a0ec84f9815402facd7",
          "name": "SmartElectrum",
          "symbol": "anySELECT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x01fb70ea8acfdd5435c8e8bd1531d96d57ced0ec",
          "name": "SmartElectrum",
          "symbol": "SELECT",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x01fb70ea8acfdd5435c8e8bd1531d96d57ced0ec",
            "underlying": {
              "address": "0x01fb70ea8acfdd5435c8e8bd1531d96d57ced0ec",
              "name": "SmartElectrum",
              "symbol": "SELECT",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "562176748.37",
            "MinimumSwap": "10119.18",
            "BigValueThreshold": "112435349.67",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "112435.35",
            "MinimumSwapFee": "8994.827",
            "anyToken": {
              "address": "0x09b809fbb0a1fa04916fb47b24dbc33529fd0c73",
              "name": "SmartElectrum",
              "symbol": "anySELECT",
              "decimals": 18
            }
          }
        },
        "price": 0.00040079,
        "logoUrl": "https://coinpaprika.com/coin/select-smart-electrum/logo.png",
        "chainId": "56",
        "tokenid": "anySELECT",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x1d3437e570e93581bd94b2fd8fbf202d4a65654a": {
        "address": "0x1d3437e570e93581bd94b2fd8fbf202d4a65654a",
        "anyToken": {
          "address": "0xd7008fe6577a8c4c4c995359e157480e36b8c710",
          "name": "NanoByte Token",
          "symbol": "anyNBT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x1d3437e570e93581bd94b2fd8fbf202d4a65654a",
          "name": "NanoByte Token",
          "symbol": "NBT",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x446f2a8a39cc730ef378be759a3c57f1a3fe824c",
            "underlying": {
              "address": "0x446f2a8a39cc730ef378be759a3c57f1a3fe824c",
              "name": "NanoByte Token",
              "symbol": "NBT",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "326487329.35",
            "MinimumSwap": "5876.77",
            "BigValueThreshold": "65297465.87",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "65297.46",
            "MinimumSwapFee": "5223.797",
            "anyToken": {
              "address": "0xcea59dce6a6d73a24e6d6944cfabc330814c098a",
              "name": "NanoByte Token",
              "symbol": "anyNBT",
              "decimals": 18
            }
          }
        },
        "price": 0.0028294,
        "logoUrl": "https://assets.coingecko.com/coins/images/23698/large/WpcmdLW.png",
        "chainId": "56",
        "tokenid": "anyNBT",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x82030cdbd9e4b7c5bb0b811a61da6360d69449cc": {
        "address": "0x82030cdbd9e4b7c5bb0b811a61da6360d69449cc",
        "anyToken": {
          "address": "0xe3f1d843dde0748fa370879536cb6877a7ff9db3",
          "name": "FevrToken",
          "symbol": "anyFEVR",
          "decimals": 18
        },
        "underlying": {
          "address": "0x82030cdbd9e4b7c5bb0b811a61da6360d69449cc",
          "name": "FevrToken",
          "symbol": "FEVR",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x9fb83c0635de2e815fd1c21b3a292277540c2e8d",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "3063350079.65",
            "MinimumSwap": "55140.3",
            "BigValueThreshold": "612670015.93",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "612670.01",
            "MinimumSwapFee": "49013.601",
            "anyToken": {
              "address": "0x9fb83c0635de2e815fd1c21b3a292277540c2e8d",
              "name": "FevrToken",
              "symbol": "FEVR",
              "decimals": 18
            }
          }
        },
        "price": 0.00064087,
        "logoUrl": "https://assets.coingecko.com/coins/images/17136/large/Fevr-Token.png",
        "chainId": "56",
        "tokenid": "anyFEVR",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x3b808db06074e1bae5dfe0d970dc7b891ee26cac": {
        "address": "0x3b808db06074e1bae5dfe0d970dc7b891ee26cac",
        "anyToken": {
          "address": "0xdef06a9048a753efc1d614519632a2e031ce2ce7",
          "name": "ZeroOne",
          "symbol": "anyZO",
          "decimals": 18
        },
        "underlying": {
          "address": "0x3b808db06074e1bae5dfe0d970dc7b891ee26cac",
          "name": "ZeroOne",
          "symbol": "ZO",
          "decimals": 18
        },
        "destChains": {},
        "logoUrl": "https://img.cdn.whoops.world/icons/coin/zo.png",
        "chainId": "56",
        "tokenid": "anyZO",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xe6906717f129427eebade5406de68cadd57aa0c0": {
        "address": "0xe6906717f129427eebade5406de68cadd57aa0c0",
        "anyToken": {
          "address": "0x85d4c747da02ec4fc8d6b8da6f2a59ea91f7a460",
          "name": "Meta Interstellar Token",
          "symbol": "anyMIT",
          "decimals": 18
        },
        "underlying": {
          "address": "0xe6906717f129427eebade5406de68cadd57aa0c0",
          "name": "Meta Interstellar Token",
          "symbol": "MIT",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xb546c4a4fbfb0ae97b589e6887d198d11e9f375e",
            "underlying": {
              "address": "0xb546c4a4fbfb0ae97b589e6887d198d11e9f375e",
              "name": "Meta Interstellar Token",
              "symbol": "MIT",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "5667771.13",
            "MinimumSwap": "102.02",
            "BigValueThreshold": "1133554.23",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1133.55",
            "MinimumSwapFee": "90.684",
            "anyToken": {
              "address": "0x0b23341fa1da0171f52aa8ef85f3946b44d35ac0",
              "name": "Meta Interstellar Token",
              "symbol": "anyMIT",
              "decimals": 18
            }
          }
        },
        "price": 0.075643,
        "logoUrl": "https://assets.coingecko.com/coins/images/23003/large/gJ21fw3N_400x400.jpg",
        "chainId": "56",
        "tokenid": "anyMIT",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x2c094f5a7d1146bb93850f629501eb749f6ed491": {
        "address": "0x2c094f5a7d1146bb93850f629501eb749f6ed491",
        "anyToken": {
          "address": "0x5eff9315e6b24e3dc268f65e93bac8af28d03063",
          "name": "Crox Token",
          "symbol": "anyCROX",
          "decimals": 18
        },
        "underlying": {
          "address": "0x2c094f5a7d1146bb93850f629501eb749f6ed491",
          "name": "Crox Token",
          "symbol": "CROX",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00754292,
        "logoUrl": "https://assets.coingecko.com/coins/images/15561/large/crox-icon-200x200.png",
        "chainId": "56",
        "tokenid": "anyCROX",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xe74d730c3ddeada91eadd74e0ef49dc6f9b56603": {
        "address": "0xe74d730c3ddeada91eadd74e0ef49dc6f9b56603",
        "anyToken": {
          "address": "0xcb93bf5c6c1d84a6f8fe163a64a56b9969a23329",
          "name": "Organix Network Token",
          "symbol": "anyOGX",
          "decimals": 18
        },
        "underlying": {
          "address": "0xe74d730c3ddeada91eadd74e0ef49dc6f9b56603",
          "name": "Organix Network Token",
          "symbol": "OGX",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00184413,
        "logoUrl": "https://assets.coingecko.com/coins/images/12269/large/uvdOryl3j5LF89B.png",
        "chainId": "56",
        "tokenid": "anyOGX",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x854a63b35b70a7becbed508ff0b6ff5038d0c917": {
        "address": "0x854a63b35b70a7becbed508ff0b6ff5038d0c917",
        "anyToken": {
          "address": "0xf207dbe40068c4f071e731ad1720f1c763fb42d1",
          "name": "Minato",
          "symbol": "anyMNTO",
          "decimals": 18
        },
        "underlying": {
          "address": "0x854a63b35b70a7becbed508ff0b6ff5038d0c917",
          "name": "Minato",
          "symbol": "MNTO",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x97a9bac06f90940bce9caec2b880ff17707519e4",
            "underlying": {
              "address": "0x97a9bac06f90940bce9caec2b880ff17707519e4",
              "name": "Minato",
              "symbol": "MNTO",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "459136.82",
            "MinimumSwap": "8.26",
            "BigValueThreshold": "91827.36",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "91.83",
            "MinimumSwapFee": "7.346",
            "anyToken": {
              "address": "0xb0fdcdd7e920a036331abe9ffc7313322c0abba0",
              "name": "Minato",
              "symbol": "anyMNTO",
              "decimals": 18
            }
          }
        },
        "price": 3.04,
        "logoUrl": "https://assets.coingecko.com/coins/images/24622/large/MNTO_200x200.png",
        "chainId": "56",
        "tokenid": "anyMNTO",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x47e3d11ba6fbbb317f92d542ba875562132e47c9": {
        "address": "0x47e3d11ba6fbbb317f92d542ba875562132e47c9",
        "anyToken": {
          "address": "0xb247a33e8201586a06f564b603759df7990e744d",
          "name": "HADO",
          "symbol": "anyHDO",
          "decimals": 9
        },
        "underlying": {
          "address": "0x47e3d11ba6fbbb317f92d542ba875562132e47c9",
          "name": "HADO",
          "symbol": "HDO",
          "decimals": 9
        },
        "destChains": {},
        "price": 0.00265462,
        "logoUrl": "https://assets.coingecko.com/coins/images/21392/large/hado.png",
        "chainId": "56",
        "tokenid": "anyHDO",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xddc3d26baa9d2d979f5e2e42515478bf18f354d5": {
        "address": "0xddc3d26baa9d2d979f5e2e42515478bf18f354d5",
        "anyToken": {
          "address": "0x02a5ad4597f7a090148ed209e022555ec2afdbc7",
          "name": "QiDao",
          "symbol": "anyQI",
          "decimals": 18
        },
        "underlying": {
          "address": "0xddc3d26baa9d2d979f5e2e42515478bf18f354d5",
          "name": "QiDao",
          "symbol": "QI",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x559b7bfc48a5274754b08819f75c5f27af53d53b",
            "underlying": {
              "address": "0x559b7bfc48a5274754b08819f75c5f27af53d53b",
              "name": "QiDao",
              "symbol": "QI",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "20408663.0693",
            "MinimumSwap": "367.355935",
            "BigValueThreshold": "4081732.61386",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "4081.732614",
            "MinimumSwapFee": "326.538609",
            "anyToken": {
              "address": "0xa01a715a1465150060ec881fdfbf02186072b5e8",
              "name": "QiDao",
              "symbol": "anyQI",
              "decimals": 18
            }
          }
        },
        "price": 0.051458,
        "logoUrl": "https://assets.coingecko.com/coins/images/15329/large/qi.png",
        "chainId": "56",
        "tokenid": "anyQI",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xa4c6f8e1be7418703934906057648fa92a6ddc34": {
        "address": "0xa4c6f8e1be7418703934906057648fa92a6ddc34",
        "anyToken": {
          "address": "0xea5b9e2310abf54f4857455c3c94f5d5a4ad7190",
          "name": "Wrapped sHUMP",
          "symbol": "anywsHUMP",
          "decimals": 18
        },
        "underlying": {
          "address": "0xa4c6f8e1be7418703934906057648fa92a6ddc34",
          "name": "Wrapped sHUMP",
          "symbol": "wsHUMP",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x0efa5328fefce96c8d10661bd97403764d477853",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "1207729.47",
            "MinimumSwap": "21.74",
            "BigValueThreshold": "241545.89",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "241.54",
            "MinimumSwapFee": "19.323",
            "anyToken": {
              "address": "0x0efa5328fefce96c8d10661bd97403764d477853",
              "name": "Wrapped sHUMP",
              "symbol": "wsHUMP",
              "decimals": 18
            }
          },
          "1313161554": {
            "address": "0x9610b01aaa57ec026001f7ec5cface51bfea0ba6",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "1207729.47",
            "MinimumSwap": "2.415",
            "BigValueThreshold": "241545.89",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "241.54",
            "MinimumSwapFee": "1.207",
            "anyToken": {
              "address": "0x9610b01aaa57ec026001f7ec5cface51bfea0ba6",
              "name": "Wrapped sHUMP",
              "symbol": "wsHUMP",
              "decimals": 18
            }
          }
        },
        "price": 2.04,
        "logoUrl": "https://assets.coingecko.com/coins/images/22236/large/OZnSMRiS_400x400.jpg",
        "chainId": "56",
        "tokenid": "anywsHUMP",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x95f86c8eb9bdea0ea52659e6801ad8e7ca2b9283": {
        "address": "0x95f86c8eb9bdea0ea52659e6801ad8e7ca2b9283",
        "anyToken": {
          "address": "0xa249d7844dad40908afd8c54a9a41194c363aea7",
          "name": "Brokoli Seed",
          "symbol": "anySEED",
          "decimals": 18
        },
        "underlying": {
          "address": "0x95f86c8eb9bdea0ea52659e6801ad8e7ca2b9283",
          "name": "Brokoli Seed",
          "symbol": "SEED",
          "decimals": 18
        },
        "destChains": {},
        "logoUrl": "https://i.ibb.co/TY4Ypwt/seed-logo-01.png",
        "chainId": "56",
        "tokenid": "anySEED",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x5fb4968fc85868df3ad2d6e59883a10570f01d18": {
        "address": "0x5fb4968fc85868df3ad2d6e59883a10570f01d18",
        "anyToken": {
          "address": "0x036bae7f92fc429725871d44b1a4dcda21691f50",
          "name": "ShareToken",
          "symbol": "anySHR",
          "decimals": 18
        },
        "underlying": {
          "address": "0x5fb4968fc85868df3ad2d6e59883a10570f01d18",
          "name": "ShareToken",
          "symbol": "SHR",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xd98f75b1a3261dab9eed4956c93f33749027a964",
            "underlying": {
              "address": "0xd98f75b1a3261dab9eed4956c93f33749027a964",
              "name": "ShareToken",
              "symbol": "SHR",
              "decimals": 2
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "747350641.97",
            "MinimumSwap": "13452.31",
            "BigValueThreshold": "149470128.39",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "149470.13",
            "MinimumSwapFee": "11957.61",
            "anyToken": {
              "address": "0xc5c71cd0b734dae8c6eba9d79c3db693d112dda1",
              "name": "ShareToken",
              "symbol": "anySHR",
              "decimals": 2
            }
          }
        },
        "price": 0.00226752,
        "logoUrl": "https://assets.coingecko.com/coins/images/3609/large/74586729_2443914875881351_2785018663453851648_n.png",
        "chainId": "56",
        "tokenid": "anySHR",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x56aa0237244c67b9a854b4efe8479cca0b105289": {
        "address": "0x56aa0237244c67b9a854b4efe8479cca0b105289",
        "anyToken": {
          "address": "0x7a0b11230050817c0d7631e206a0f547f9348de7",
          "name": "WalletNow",
          "symbol": "anyWNOW",
          "decimals": 18
        },
        "underlying": {
          "address": "0x56aa0237244c67b9a854b4efe8479cca0b105289",
          "name": "WalletNow",
          "symbol": "WNOW",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.01303921,
        "logoUrl": "https://assets.coingecko.com/coins/images/20149/large/walletnow.PNG",
        "chainId": "56",
        "tokenid": "anyWNOW",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x6451c6484d23889003c20be51819d6aa7dbd2b35": {
        "address": "0x6451c6484d23889003c20be51819d6aa7dbd2b35",
        "anyToken": {
          "address": "0xb0e94feadc03f489c4503101ea06ea9c5eeaf7a4",
          "name": "PolysportsToken",
          "symbol": "anyPS1",
          "decimals": 18
        },
        "underlying": {
          "address": "0x6451c6484d23889003c20be51819d6aa7dbd2b35",
          "name": "PolysportsToken",
          "symbol": "PS1",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00132656,
        "logoUrl": "https://assets.coingecko.com/coins/images/25070/large/L-T2x_cG_400x400.jpg",
        "chainId": "56",
        "tokenid": "anyPS1",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xcb73918ac58d0c90d71c7992637c61094c15305b": {
        "address": "0xcb73918ac58d0c90d71c7992637c61094c15305b",
        "anyToken": {
          "address": "0x0ebddb1ef6d508b89bfd62b26d162c13f05be477",
          "name": "Scorefam",
          "symbol": "anySFT",
          "decimals": 8
        },
        "underlying": {
          "address": "0xcb73918ac58d0c90d71c7992637c61094c15305b",
          "name": "Scorefam",
          "symbol": "SFT",
          "decimals": 8
        },
        "destChains": {
          "1": {
            "address": "0x0aabcc65ef352ad84b1326df188c95b6ab856c1c",
            "underlying": {
              "address": "0x0aabcc65ef352ad84b1326df188c95b6ab856c1c",
              "name": "Scorefam",
              "symbol": "SFT",
              "decimals": 8
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "139236981.34",
            "MinimumSwap": "2506.26",
            "BigValueThreshold": "27847396.27",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "27847.4",
            "MinimumSwapFee": "2227.791",
            "anyToken": {
              "address": "0x6574e2c013171cd50a6d34e588906047a0d12f2c",
              "name": "Scorefam",
              "symbol": "anySFT",
              "decimals": 8
            }
          },
          "1313161554": {
            "address": "0xfc56694ab428e7b4a03b8299b502d4598d945217",
            "underlying": {
              "address": "0xfc56694ab428e7b4a03b8299b502d4598d945217",
              "name": "Scorefam",
              "symbol": "SFT",
              "decimals": 8
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "139236981.34",
            "MinimumSwap": "278.473",
            "BigValueThreshold": "27847396.27",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "27847.4",
            "MinimumSwapFee": "139.236",
            "anyToken": {
              "address": "0x86b3f23b6e90f5bbfac59b5b2661134ef8ffd255",
              "name": "Scorefam",
              "symbol": "anySFT",
              "decimals": 8
            }
          }
        },
        "logoUrl": "https://s2.coinmarketcap.com/static/img/coins/64x64/19914.png",
        "chainId": "56",
        "tokenid": "anySFT",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x81e07cff8a9331ef2a837b15a3560fb186bf5e8d": {
        "address": "0x81e07cff8a9331ef2a837b15a3560fb186bf5e8d",
        "anyToken": {
          "address": "0xea565ecfddb298f88186692429173781ac176d53",
          "name": "DAPPSY",
          "symbol": "anyAPP",
          "decimals": 8
        },
        "underlying": {
          "address": "0x81e07cff8a9331ef2a837b15a3560fb186bf5e8d",
          "name": "DAPPSY",
          "symbol": "APP",
          "decimals": 8
        },
        "destChains": {
          "1": {
            "address": "0xd9f942e36b4cac550daa0cb31ef09efb1d1505f3",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "1065775394.23",
            "MinimumSwap": "19183.96",
            "BigValueThreshold": "213155078.85",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "213155.08",
            "MinimumSwapFee": "17052.406",
            "anyToken": {
              "address": "0xd9f942e36b4cac550daa0cb31ef09efb1d1505f3",
              "name": "DAPPSY",
              "symbol": "APP",
              "decimals": 8
            }
          }
        },
        "price": 0.00017484,
        "logoUrl": "https://i.ibb.co/2dHWN5W/dappsy-anyswap.png",
        "chainId": "56",
        "tokenid": "anyAPP",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xc417b45e6090bd4201d9400b48f84c9f34f4d0a5": {
        "address": "0xc417b45e6090bd4201d9400b48f84c9f34f4d0a5",
        "anyToken": {
          "address": "0x9a8e7727b9733b194339dfd8f923b45b60d0fc3a",
          "name": "Premia",
          "symbol": "anyPREMIA",
          "decimals": 18
        },
        "underlying": {
          "address": "0xc417b45e6090bd4201d9400b48f84c9f34f4d0a5",
          "name": "Premia",
          "symbol": "PREMIA",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x6399c842dd2be3de30bf99bc7d1bbf6fa3650e70",
            "underlying": {
              "address": "0x6399c842dd2be3de30bf99bc7d1bbf6fa3650e70",
              "name": "premia",
              "symbol": "premia",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "5978058.14",
            "MinimumSwap": "107.61",
            "BigValueThreshold": "1195611.63",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1195.61",
            "MinimumSwapFee": "95.648",
            "anyToken": {
              "address": "0x4b27cd6e6a5e83d236ead376d256fe2f9e9f0d2e",
              "name": "Premia",
              "symbol": "anyPREMIA",
              "decimals": 18
            }
          }
        },
        "price": 0.626461,
        "logoUrl": "https://assets.coingecko.com/coins/images/13962/large/apple-touch-icon.png",
        "chainId": "56",
        "tokenid": "anyPREMIA",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x1d6cbdc6b29c6afbae65444a1f65ba9252b8ca83": {
        "address": "0x1d6cbdc6b29c6afbae65444a1f65ba9252b8ca83",
        "anyToken": {
          "address": "0x80d209227cf0a64e1fcbe62c7a80b8e691f0ef4d",
          "name": "TOR",
          "symbol": "anyTOR",
          "decimals": 18
        },
        "underlying": {
          "address": "0x1d6cbdc6b29c6afbae65444a1f65ba9252b8ca83",
          "name": "TOR",
          "symbol": "TOR",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x6b37374fe7980ae33fc87b0d66a490ec6903e87a",
            "underlying": {
              "address": "0x6b37374fe7980ae33fc87b0d66a490ec6903e87a",
              "name": "TOR",
              "symbol": "TOR",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "5008584.71",
            "MinimumSwap": "90.15",
            "BigValueThreshold": "1001716.94",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1001.72",
            "MinimumSwapFee": "80.137",
            "anyToken": {
              "address": "0xf9cfbdd3120f59f261f0db3610d683fe0337eb20",
              "name": "TOR",
              "symbol": "anyTOR",
              "decimals": 18
            }
          }
        },
        "price": 0.99775,
        "logoUrl": "https://assets.coingecko.com/coins/images/23609/large/tor.png",
        "chainId": "56",
        "tokenid": "anyTOR",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x1c6bc8e962427deb4106ae06a7fa2d715687395c": {
        "address": "0x1c6bc8e962427deb4106ae06a7fa2d715687395c",
        "anyToken": {
          "address": "0x7abba96651d668fd8e44d7cd7872f5b794b5e93b",
          "name": "Charge",
          "symbol": "anyCharge",
          "decimals": 18
        },
        "underlying": {
          "address": "0x1c6bc8e962427deb4106ae06a7fa2d715687395c",
          "name": "Charge",
          "symbol": "Charge",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.337119,
        "logoUrl": "https://assets.coingecko.com/coins/images/21405/large/afuIh6o9_400x400.jpg",
        "chainId": "56",
        "tokenid": "anyCharge",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x7be9e596896b64c88e39b7e88f8dcedda79845c0": {
        "address": "0x7be9e596896b64c88e39b7e88f8dcedda79845c0",
        "anyToken": {
          "address": "0x693e3f585f7d6e57648c31967f34585fa3e419f1",
          "name": "BOHR",
          "symbol": "anyBR",
          "decimals": 6
        },
        "underlying": {
          "address": "0x7be9e596896b64c88e39b7e88f8dcedda79845c0",
          "name": "BOHR",
          "symbol": "BR",
          "decimals": 6
        },
        "destChains": {
          "1": {
            "address": "0xa7d838bfc461b777d14b05823063d2118f5d91ac",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "34319445.4",
            "MinimumSwap": "617.75",
            "BigValueThreshold": "6863889.08",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "6863.89",
            "MinimumSwapFee": "549.111",
            "anyToken": {
              "address": "0xa7d838bfc461b777d14b05823063d2118f5d91ac",
              "name": "BOHR",
              "symbol": "BR",
              "decimals": 6
            }
          }
        },
        "price": 0.02323373,
        "logoUrl": "https://assets.coingecko.com/coins/images/25451/large/jMTfKKWx_400x400.jpg",
        "chainId": "56",
        "tokenid": "anyBR",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xbdc3b3639f7aa19e623a4d603a3fb7ab20115a91": {
        "address": "0xbdc3b3639f7aa19e623a4d603a3fb7ab20115a91",
        "anyToken": {
          "address": "0x9d8be3c08c97e92f76a546ca217836b0dd56aa78",
          "name": "Coin of the champions",
          "symbol": "anyCOC",
          "decimals": 18
        },
        "underlying": {
          "address": "0xbdc3b3639f7aa19e623a4d603a3fb7ab20115a91",
          "name": "Coin of the champions",
          "symbol": "COC",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xc4bb7277a74678f053259cb1f96140347efbfd46",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "20272872868814.24",
            "MinimumSwap": "364911711.64",
            "BigValueThreshold": "4054574573762.85",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "4054574573.76",
            "MinimumSwapFee": "324365965.901",
            "anyToken": {
              "address": "0xc4bb7277a74678f053259cb1f96140347efbfd46",
              "name": "Coin of the champions",
              "symbol": "COC",
              "decimals": 18
            }
          }
        },
        "price": 1.0715e-8,
        "logoUrl": "https://assets.coingecko.com/coins/images/18478/large/COC-Yellow-Transparent-1.png",
        "chainId": "56",
        "tokenid": "anyCOC",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xc04a23149efdf9a63697f3eb60705147e9f07ffd": {
        "address": "0xc04a23149efdf9a63697f3eb60705147e9f07ffd",
        "anyToken": {
          "address": "0x795a7df2f22bfc2633a04799915b5fe54e7d9e65",
          "name": "GemUni",
          "symbol": "anyGENI",
          "decimals": 18
        },
        "underlying": {
          "address": "0xc04a23149efdf9a63697f3eb60705147e9f07ffd",
          "name": "GemUni",
          "symbol": "GENI",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00213526,
        "logoUrl": "https://assets.coingecko.com/coins/images/23697/large/GemUni_Logo_%28200x200%29.png",
        "chainId": "56",
        "tokenid": "anyGENI",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xc64c9b30c981fc2ee4e13d0ca3f08258e725fd24": {
        "address": "0xc64c9b30c981fc2ee4e13d0ca3f08258e725fd24",
        "anyToken": {
          "address": "0x4251c70de644de7f9262d335244f8c4b9c139a0f",
          "name": "Polar Sync",
          "symbol": "anyPOLAR",
          "decimals": 18
        },
        "underlying": {
          "address": "0xc64c9b30c981fc2ee4e13d0ca3f08258e725fd24",
          "name": "Polar Sync",
          "symbol": "POLAR",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x6cd6cb131764c704ba9167c29930fbdc38901ab7",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "113474662.24",
            "MinimumSwap": "2042.54",
            "BigValueThreshold": "22694932.45",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "22694.93",
            "MinimumSwapFee": "1815.594",
            "anyToken": {
              "address": "0x6cd6cb131764c704ba9167c29930fbdc38901ab7",
              "name": "Polar Sync",
              "symbol": "POLAR",
              "decimals": 18
            }
          }
        },
        "price": 0.01828032,
        "logoUrl": "https://assets.coingecko.com/coins/images/18102/large/polar-sync-logo-200.png",
        "chainId": "56",
        "tokenid": "anyPOLAR-Sync",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xf6134e74b7a4ee23a888436e53e77f83e62e8df8": {
        "address": "0xf6134e74b7a4ee23a888436e53e77f83e62e8df8",
        "anyToken": {
          "address": "0x35addb6e6a081da64e2014e77d2963804b0ce55f",
          "name": "dYEL Index Token",
          "symbol": "anydYel",
          "decimals": 18
        },
        "underlying": {
          "address": "0xf6134e74b7a4ee23a888436e53e77f83e62e8df8",
          "name": "dYEL Index Token",
          "symbol": "dYel",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xf6134e74b7a4ee23a888436e53e77f83e62e8df8",
            "underlying": {
              "address": "0xf6134e74b7a4ee23a888436e53e77f83e62e8df8",
              "name": "dYEL Index Token",
              "symbol": "dYel",
              "decimals": 6
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "100000",
            "MinimumSwap": "1.8",
            "BigValueThreshold": "20000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "20",
            "MinimumSwapFee": "1.6",
            "anyToken": {
              "address": "0xd2c244d5c3b530b9310c34962bf9b48c08dc0bcb",
              "name": "dYEL Index Token",
              "symbol": "anydYel",
              "decimals": 6
            }
          }
        },
        "logoUrl": "https://raw.githubusercontent.com/YieldEnhancementLabs/assets/main/logo/dyel/circle_200.png",
        "chainId": "56",
        "tokenid": "anydYel",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xafaeb84415c1cd2bc99cd1f5f0b3090bae1beb6c": {
        "address": "0xafaeb84415c1cd2bc99cd1f5f0b3090bae1beb6c",
        "anyToken": {
          "address": "0xbc690879d762ca00bcfa5e9e6f4b7011485c29c9",
          "name": "BIG Token",
          "symbol": "anyBIG",
          "decimals": 9
        },
        "underlying": {
          "address": "0xafaeb84415c1cd2bc99cd1f5f0b3090bae1beb6c",
          "name": "BIG Token",
          "symbol": "BIG",
          "decimals": 9
        },
        "destChains": {
          "1": {
            "address": "0xafaeb84415c1cd2bc99cd1f5f0b3090bae1beb6c",
            "underlying": {
              "address": "0xafaeb84415c1cd2bc99cd1f5f0b3090bae1beb6c",
              "name": "BIG Token",
              "symbol": "BIG",
              "decimals": 9
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "10000",
            "MinimumSwap": "0.18",
            "BigValueThreshold": "2000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "2",
            "MinimumSwapFee": "0.16",
            "anyToken": {
              "address": "0x2127b96a05f9bf9095913d1e8b7bdb203a683a9f",
              "name": "BIG Token",
              "symbol": "anyBIG",
              "decimals": 9
            }
          }
        },
        "logoUrl": "https://raw.githubusercontent.com/YieldEnhancementLabs/assets/main/logo/dyel/big/circle_200.png",
        "chainId": "56",
        "tokenid": "anyBIG",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xac472d0eed2b8a2f57a6e304ea7ebd8e88d1d36f": {
        "address": "0xac472d0eed2b8a2f57a6e304ea7ebd8e88d1d36f",
        "anyToken": {
          "address": "0x4c3a7c3bcc3d5bdf19b1e0d7d3a164b7cbd598ea",
          "name": "Anime",
          "symbol": "anyANI",
          "decimals": 18
        },
        "underlying": {
          "address": "0xac472d0eed2b8a2f57a6e304ea7ebd8e88d1d36f",
          "name": "Anime",
          "symbol": "ANI",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xe7c9c6bc87b86f9e5b57072f907ee6460b593924",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "4329229224.03",
            "MinimumSwap": "77926.13",
            "BigValueThreshold": "865845844.8",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "865845.84",
            "MinimumSwapFee": "69267.667",
            "anyToken": {
              "address": "0xe7c9c6bc87b86f9e5b57072f907ee6460b593924",
              "name": "Anime",
              "symbol": "ANI",
              "decimals": 18
            }
          }
        },
        "price": 0.00061596,
        "logoUrl": "https://assets.coingecko.com/coins/images/13792/large/ani.png",
        "chainId": "56",
        "tokenid": "anyANI",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x1a9b49e9f075c37fe5f86c916bac9deb33556d7e": {
        "address": "0x1a9b49e9f075c37fe5f86c916bac9deb33556d7e",
        "anyToken": {
          "address": "0xa778505c0c3a71da2820332eda82005b2c13b27b",
          "name": "ASPOToken",
          "symbol": "anyASPO",
          "decimals": 18
        },
        "underlying": {
          "address": "0x1a9b49e9f075c37fe5f86c916bac9deb33556d7e",
          "name": "ASPOToken",
          "symbol": "ASPO",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00233385,
        "logoUrl": "https://assets.coingecko.com/coins/images/20329/large/12599.png",
        "chainId": "56",
        "tokenid": "anyASPO",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xe0cca86b254005889ac3a81e737f56a14f4a38f5": {
        "address": "0xe0cca86b254005889ac3a81e737f56a14f4a38f5",
        "anyToken": {
          "address": "0xbdf5680cc6b9e7355d24575e59e764b21d6cf7bf",
          "name": "Alta Finance",
          "symbol": "anyALTA",
          "decimals": 18
        },
        "underlying": {
          "address": "0xe0cca86b254005889ac3a81e737f56a14f4a38f5",
          "name": "Alta Finance",
          "symbol": "ALTA",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xe0cca86b254005889ac3a81e737f56a14f4a38f5",
            "underlying": {
              "address": "0xe0cca86b254005889ac3a81e737f56a14f4a38f5",
              "name": "Alta Finance",
              "symbol": "ALTA",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "23887898.87",
            "MinimumSwap": "429.98",
            "BigValueThreshold": "4777579.77",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "4777.58",
            "MinimumSwapFee": "382.206",
            "anyToken": {
              "address": "0xe408849d21646a42fd5e36cc520b26e7cdd62370",
              "name": "Alta Finance",
              "symbol": "anyALTA",
              "decimals": 18
            }
          }
        },
        "price": 1.28541e-7,
        "logoUrl": "https://assets.coingecko.com/coins/images/18713/large/AFN-token-Altafin-200.png",
        "chainId": "56",
        "tokenid": "anyALTA",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x4ee438be38f8682abb089f2bfea48851c5e71eaf": {
        "address": "0x4ee438be38f8682abb089f2bfea48851c5e71eaf",
        "anyToken": {
          "address": "0x26519efc30494c20f435819910062a607e0630a6",
          "name": "Cryptonovae",
          "symbol": "anyYAE",
          "decimals": 18
        },
        "underlying": {
          "address": "0x4ee438be38f8682abb089f2bfea48851c5e71eaf",
          "name": "Cryptonovae",
          "symbol": "YAE",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x4ee438be38f8682abb089f2bfea48851c5e71eaf",
            "underlying": {
              "address": "0x4ee438be38f8682abb089f2bfea48851c5e71eaf",
              "name": "Cryptonovae",
              "symbol": "YAE",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "142857142.857143",
            "MinimumSwap": "2571.428571",
            "BigValueThreshold": "28571428.571428",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "28571.428571",
            "MinimumSwapFee": "2285.714286",
            "anyToken": {
              "address": "0x419fa2e21092d834e3b02bd0802dee329c84268a",
              "name": "Cryptonovae",
              "symbol": "anyYAE",
              "decimals": 18
            }
          }
        },
        "price": 0.00551022,
        "logoUrl": "https://assets.coingecko.com/coins/images/14693/large/yae.png",
        "chainId": "56",
        "tokenid": "anyYAE",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x448bee2d93be708b54ee6353a7cc35c4933f1156": {
        "address": "0x448bee2d93be708b54ee6353a7cc35c4933f1156",
        "anyToken": {
          "address": "0xc33211c3618a3f2b2a70152185cea469d2dab6d4",
          "name": "Smart Advertising Transaction Token",
          "symbol": "anySATT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x448bee2d93be708b54ee6353a7cc35c4933f1156",
          "name": "Smart Advertising Transaction Token",
          "symbol": "SATT",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xdf49c9f599a0a9049d97cff34d0c30e468987389",
            "underlying": {
              "address": "0xdf49c9f599a0a9049d97cff34d0c30e468987389",
              "name": "Smart Advertising Transaction Token",
              "symbol": "SATT",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "4040678711.86",
            "MinimumSwap": "72732.22",
            "BigValueThreshold": "808135742.37",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "808135.74",
            "MinimumSwapFee": "64650.859",
            "anyToken": {
              "address": "0x702d161ed480e4a367a5810a6086074b791cf6a0",
              "name": "Smart Advertising Transaction Token",
              "symbol": "SATT",
              "decimals": 18
            }
          }
        },
        "price": 0.00011903,
        "logoUrl": "https://assets.coingecko.com/coins/images/4070/large/r3s9XKk.png",
        "chainId": "56",
        "tokenid": "anySATT",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xd7d23d89c510f306e4037385ebbefc6dd6c41e61": {
        "address": "0xd7d23d89c510f306e4037385ebbefc6dd6c41e61",
        "anyToken": {
          "address": "0x5fac4f1ac9f8a4233e4ca6a332e6a5d0266edc0b",
          "name": "DefiLaunch Token",
          "symbol": "anyDLAUNCH",
          "decimals": 18
        },
        "underlying": {
          "address": "0xd7d23d89c510f306e4037385ebbefc6dd6c41e61",
          "name": "DefiLaunch Token",
          "symbol": "DLAUNCH",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00649204,
        "logoUrl": "https://assets.coingecko.com/coins/images/19971/large/dlaunch.png",
        "chainId": "56",
        "tokenid": "anyDLAUNCH",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x42586ef4495bb512a86cf7496f6ef85ae7d69a64": {
        "address": "0x42586ef4495bb512a86cf7496f6ef85ae7d69a64",
        "anyToken": {
          "address": "0x250e8703097f33d4e098fbf633040c0fb83231a8",
          "name": "Spice",
          "symbol": "anySPICE",
          "decimals": 18
        },
        "underlying": {
          "address": "0x42586ef4495bb512a86cf7496f6ef85ae7d69a64",
          "name": "Spice",
          "symbol": "SPICE",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x18a1ea69a50a85752b7bc204a2c45a95ce6e429d",
            "underlying": {
              "address": "0x18a1ea69a50a85752b7bc204a2c45a95ce6e429d",
              "name": "Spice",
              "symbol": "SPICE",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "53175965.92",
            "MinimumSwap": "957.17",
            "BigValueThreshold": "10635193.18",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "10635.19",
            "MinimumSwapFee": "850.815",
            "anyToken": {
              "address": "0x41471fbf66dafb95b682afaf1426bee11f25e10a",
              "name": "Spice",
              "symbol": "anySPICE",
              "decimals": 18
            }
          }
        },
        "price": 0.00036746,
        "logoUrl": "https://assets.coingecko.com/coins/images/25770/large/SPICE.png",
        "chainId": "56",
        "tokenid": "anySPICE",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xde7d1ce109236b12809c45b23d22f30dba0ef424": {
        "address": "0xde7d1ce109236b12809c45b23d22f30dba0ef424",
        "anyToken": {
          "address": "0x696e96f08f9d046b0125be299bf900f645d79acd",
          "name": "Spice USD",
          "symbol": "anyUSDS",
          "decimals": 18
        },
        "underlying": {
          "address": "0xde7d1ce109236b12809c45b23d22f30dba0ef424",
          "name": "Spice USD",
          "symbol": "USDS",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x45fdb1b92a649fb6a64ef1511d3ba5bf60044838",
            "underlying": {
              "address": "0x45fdb1b92a649fb6a64ef1511d3ba5bf60044838",
              "name": "Spice USD",
              "symbol": "USDS",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "5000000",
            "MinimumSwap": "90",
            "BigValueThreshold": "1000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1000",
            "MinimumSwapFee": "80",
            "anyToken": {
              "address": "0xfedadce4361658ad34410f02de20af217b0a9048",
              "name": "Spice USD",
              "symbol": "anyUSDS",
              "decimals": 18
            }
          }
        },
        "price": 0.129638,
        "logoUrl": "https://assets.coingecko.com/coins/images/25697/large/USDS.png",
        "chainId": "56",
        "tokenid": "anyUSDS",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x6458df5d764284346c19d88a104fd3d692471499": {
        "address": "0x6458df5d764284346c19d88a104fd3d692471499",
        "anyToken": {
          "address": "0xfb32f9581148e588bf92a91a15fdcbc65a68e4c9",
          "name": "Inflation Adjusted Spice USD",
          "symbol": "anyiUSDS",
          "decimals": 18
        },
        "underlying": {
          "address": "0x6458df5d764284346c19d88a104fd3d692471499",
          "name": "Inflation Adjusted Spice USD",
          "symbol": "iUSDS",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xf9c2b386ff5df088ac717ab0010587bad3bc1ab1",
            "underlying": {
              "address": "0xf9c2b386ff5df088ac717ab0010587bad3bc1ab1",
              "name": "Inflation Adjusted Spice USD",
              "symbol": "iUSDS",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "5000000",
            "MinimumSwap": "90",
            "BigValueThreshold": "1000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1000",
            "MinimumSwapFee": "80",
            "anyToken": {
              "address": "0x83102ec9b8a4dbf2e6aa41f6e7c8b5863b800681",
              "name": "Inflation Adjusted Spice USD",
              "symbol": "anyiUSDS",
              "decimals": 18
            }
          }
        },
        "price": 0.260297,
        "logoUrl": "https://assets.coingecko.com/coins/images/25698/large/iUSDS2.png",
        "chainId": "56",
        "tokenid": "anyiUSDS",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x273971059e0082aac306a78acc67ac01551b565f": {
        "address": "0x273971059e0082aac306a78acc67ac01551b565f",
        "anyToken": {
          "address": "0x4cff6d3ab6f0cee7186e610760b6f2549e17b2bc",
          "name": "MEME ELON DOGE FLOKI",
          "symbol": "anyMEMELON",
          "decimals": 18
        },
        "underlying": {
          "address": "0x273971059e0082aac306a78acc67ac01551b565f",
          "name": "MEME ELON DOGE FLOKI",
          "symbol": "MEMELON",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x7683f14614a1f68ea71474680e80b9bd93db74d1",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "557413600891.861761",
            "MinimumSwap": "10033444.816053",
            "BigValueThreshold": "111482720178.372352",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "111482720.178372",
            "MinimumSwapFee": "8918617.61427",
            "anyToken": {
              "address": "0x7683f14614a1f68ea71474680e80b9bd93db74d1",
              "name": "MEME ELON DOGE FLOKI",
              "symbol": "MEMELON",
              "decimals": 18
            }
          }
        },
        "price": 0.00000627,
        "logoUrl": "https://assets.coingecko.com/coins/images/25587/large/Design_01.png",
        "chainId": "56",
        "tokenid": "anyMEMELON",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xa701ec6b9c1883fcf727fed7e41fe925a1b1e91c": {
        "address": "0xa701ec6b9c1883fcf727fed7e41fe925a1b1e91c",
        "anyToken": {
          "address": "0x55bfa96df825fa4ffbb8288ce751e09389b1a48a",
          "name": "SAFE ZONE V2",
          "symbol": "anySAFU",
          "decimals": 9
        },
        "underlying": {
          "address": "0xa701ec6b9c1883fcf727fed7e41fe925a1b1e91c",
          "name": "SAFE ZONE V2",
          "symbol": "SAFU",
          "decimals": 9
        },
        "destChains": {
          "1": {
            "address": "0x8d1e50bc4f5399f6012fd24a768a67f30630330a",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "0",
            "liquidityType": "INIT",
            "MaximumSwap": "305270805731.76",
            "MinimumSwap": "5494874.5",
            "BigValueThreshold": "61054161146.35",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "61054161.15",
            "MinimumSwapFee": "4884332.891",
            "anyToken": {
              "address": "0x8d1e50bc4f5399f6012fd24a768a67f30630330a",
              "name": "SafeZone",
              "symbol": "SAFU",
              "decimals": 19
            }
          }
        },
        "logoUrl": "https://www.bscscan.com/token/images/safetokens_32.png",
        "chainId": "56",
        "tokenid": "anySAFU",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x3e24bbb2c9a0f2faecfdbdca20bba6f35b73c4cb": {
        "address": "0x3e24bbb2c9a0f2faecfdbdca20bba6f35b73c4cb",
        "anyToken": {
          "address": "0x2b6864600d470d2b743b1a6693cb486121889942",
          "name": "DELOT.IO",
          "symbol": "anyDELOT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x3e24bbb2c9a0f2faecfdbdca20bba6f35b73c4cb",
          "name": "DELOT.IO",
          "symbol": "DELOT",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00013586,
        "logoUrl": "https://assets.coingecko.com/coins/images/25561/large/Logo_200.png",
        "chainId": "56",
        "tokenid": "anyDELOT",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x638eebe886b0e9e7c6929e69490064a6c94d204d": {
        "address": "0x638eebe886b0e9e7c6929e69490064a6c94d204d",
        "anyToken": {
          "address": "0xe98803e5ce78cf8aad43267d9852a4057423cb1d",
          "name": "Hector",
          "symbol": "anyHEC",
          "decimals": 9
        },
        "underlying": {
          "address": "0x638eebe886b0e9e7c6929e69490064a6c94d204d",
          "name": "Hector",
          "symbol": "HEC",
          "decimals": 9
        },
        "destChains": {
          "1": {
            "address": "0x29b3d220f0f1e37b342cf7c48c1164bf5bf79efa",
            "underlying": {
              "address": "0x29b3d220f0f1e37b342cf7c48c1164bf5bf79efa",
              "name": "Hector",
              "symbol": "HEC",
              "decimals": 9
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "615006.150061",
            "MinimumSwap": "11.070111",
            "BigValueThreshold": "123001.230012",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "123.00123",
            "MinimumSwapFee": "9.840098",
            "anyToken": {
              "address": "0xd76b758a552f763cd496f1fb06a8f56364122675",
              "name": "Hector",
              "symbol": "anyHEC",
              "decimals": 9
            }
          }
        },
        "price": 4.56,
        "logoUrl": "https://assets.coingecko.com/coins/images/19832/large/logo-final.png",
        "chainId": "56",
        "tokenid": "anyHEC",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x3019bf2a2ef8040c242c9a4c5c4bd4c81678b2a1": {
        "address": "0x3019bf2a2ef8040c242c9a4c5c4bd4c81678b2a1",
        "anyToken": {
          "address": "0xe9930602f0f27bb72be520513e111b33cbacd084",
          "name": "Green Metaverse Token",
          "symbol": "anyGMT",
          "decimals": 8
        },
        "underlying": {
          "address": "0x3019bf2a2ef8040c242c9a4c5c4bd4c81678b2a1",
          "name": "Green Metaverse Token",
          "symbol": "GMT",
          "decimals": 8
        },
        "destChains": {},
        "price": 0.283823,
        "logoUrl": "https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/7i5KKsX2weiTkry7jA4ZwSuXGhs5eJBEjY8vVxR4pfRx/logo.png",
        "chainId": "56",
        "tokenid": "anyGMT",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xe79a1163a95734ccfbd006cbaaba954f3e846beb": {
        "address": "0xe79a1163a95734ccfbd006cbaaba954f3e846beb",
        "anyToken": {
          "address": "0x01d6370230ae0deb59bca3742ccc7de018a8b5b4",
          "name": "Shack Token",
          "symbol": "anySHACK",
          "decimals": 18
        },
        "underlying": {
          "address": "0xe79a1163a95734ccfbd006cbaaba954f3e846beb",
          "name": "Shack Token",
          "symbol": "SHACK",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x5f018e73c185ab23647c82bd039e762813877f0e",
            "underlying": {
              "address": "0x5f018e73c185ab23647c82bd039e762813877f0e",
              "name": "Shack Token",
              "symbol": "SHACK",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "1330852624.042119",
            "MinimumSwap": "23955.347233",
            "BigValueThreshold": "266170524.808424",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "266170.524808",
            "MinimumSwapFee": "21293.641985",
            "anyToken": {
              "address": "0x8497842420cfdbc97896c2353d75d89fc8d5be5d",
              "name": "Shack Token",
              "symbol": "anySHACK",
              "decimals": 18
            }
          }
        },
        "price": 0.00014996,
        "logoUrl": "https://assets.coingecko.com/coins/images/25699/large/shack_no_bg_no_pad3.png",
        "chainId": "56",
        "tokenid": "anySHACK",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x6aa217312960a21adbde1478dc8cbcf828110a67": {
        "address": "0x6aa217312960a21adbde1478dc8cbcf828110a67",
        "anyToken": {
          "address": "0x0f231ae1f3ab499fdb0ada397e344497cd0d73c1",
          "name": "Spintop",
          "symbol": "anySPIN",
          "decimals": 18
        },
        "underlying": {
          "address": "0x6aa217312960a21adbde1478dc8cbcf828110a67",
          "name": "Spintop",
          "symbol": "SPIN",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00801939,
        "logoUrl": "https://assets.coingecko.com/coins/images/21209/large/51683048395_1cb5de34ca_o.png",
        "chainId": "56",
        "tokenid": "anySPIN",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x8d0f27b2b0c7376d25608ae83acb92e3b695c941": {
        "address": "0x8d0f27b2b0c7376d25608ae83acb92e3b695c941",
        "anyToken": {
          "address": "0x7440c40d76da976c7cda8552630c1b24f23e6872",
          "name": "Croc Finance",
          "symbol": "anyCrocFi",
          "decimals": 18
        },
        "underlying": {
          "address": "0x8d0f27b2b0c7376d25608ae83acb92e3b695c941",
          "name": "Croc Finance",
          "symbol": "CrocFi",
          "decimals": 18
        },
        "destChains": {},
        "logoUrl": "https://hosting.photobucket.com/images/i/croctoken/tokenimage.jpg",
        "chainId": "56",
        "tokenid": "anyCrocFi",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xe17fbdf671f3cce0f354cacbd27e03f4245a3ffe": {
        "address": "0xe17fbdf671f3cce0f354cacbd27e03f4245a3ffe",
        "anyToken": {
          "address": "0xf532c0174e30823acaaf01c2652862e25f268264",
          "name": "Rikkei Finance",
          "symbol": "anyRIFI",
          "decimals": 18
        },
        "underlying": {
          "address": "0xe17fbdf671f3cce0f354cacbd27e03f4245a3ffe",
          "name": "Rikkei Finance",
          "symbol": "RIFI",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00484083,
        "logoUrl": "https://assets.coingecko.com/coins/images/21309/large/rikkei-finance.jpeg",
        "chainId": "56",
        "tokenid": "anyRIFI",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x26d3163b165be95137cee97241e716b2791a7572": {
        "address": "0x26d3163b165be95137cee97241e716b2791a7572",
        "anyToken": {
          "address": "0xda830e0d109e29c8460aa4e4512a181030cec521",
          "name": "DSHARE",
          "symbol": "anyDSHARE",
          "decimals": 18
        },
        "underlying": {
          "address": "0x26d3163b165be95137cee97241e716b2791a7572",
          "name": "DSHARE",
          "symbol": "DSHARE",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.01358261,
        "logoUrl": "https://assets.coingecko.com/coins/images/22194/small/dshares.png",
        "chainId": "56",
        "tokenid": "anyDSHARE-2",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x7deb9906bd1d77b410a56e5c23c36340bd60c983": {
        "address": "0x7deb9906bd1d77b410a56e5c23c36340bd60c983",
        "anyToken": {
          "address": "0xec38d4b0b41a52f3ec05ce02cb0c3fcb80305b9e",
          "name": "Static",
          "symbol": "anyStatic",
          "decimals": 18
        },
        "underlying": {
          "address": "0x7deb9906bd1d77b410a56e5c23c36340bd60c983",
          "name": "Static",
          "symbol": "Static",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.04857638,
        "logoUrl": "https://assets.coingecko.com/coins/images/21404/large/1_Ve6PPOEmEu1LRjg5loJkkQ.png",
        "chainId": "56",
        "tokenid": "anyStatic",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x8d2aa7b23abe16e7eca845f64c65a314d4aba35a": {
        "address": "0x8d2aa7b23abe16e7eca845f64c65a314d4aba35a",
        "anyToken": {
          "address": "0x6ecd502545a0c7691b5371ab0ab07840061c2c5d",
          "name": "Dibs USD",
          "symbol": "anyUSDibs",
          "decimals": 18
        },
        "underlying": {
          "address": "0x8d2aa7b23abe16e7eca845f64c65a314d4aba35a",
          "name": "Dibs USD",
          "symbol": "USDibs",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.092332,
        "logoUrl": "https://i.ibb.co/vPj6PvY/Artboard-Copy.png",
        "chainId": "56",
        "tokenid": "anyUSDibs",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xec143f87e8c2166f0405158677b84a10c045479a": {
        "address": "0xec143f87e8c2166f0405158677b84a10c045479a",
        "anyToken": {
          "address": "0x14a92e19df812134a82fd12527612b2143742d4b",
          "name": "Palmare",
          "symbol": "anyPAL",
          "decimals": 18
        },
        "underlying": {
          "address": "0xec143f87e8c2166f0405158677b84a10c045479a",
          "name": "Palmare",
          "symbol": "PAL",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xd95f99d6e5527eeb35eba9e024900ee7f8eaeafc",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "37500937.523438",
            "MinimumSwap": "675.016875",
            "BigValueThreshold": "7500187.504688",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "7500.187505",
            "MinimumSwapFee": "600.015",
            "anyToken": {
              "address": "0xd95f99d6e5527eeb35eba9e024900ee7f8eaeafc",
              "name": "Palmare",
              "symbol": "PAL",
              "decimals": 18
            }
          }
        },
        "price": null,
        "logoUrl": "https://palmare.io/other/logo-palmare-200w.png",
        "chainId": "56",
        "tokenid": "anyPAL",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xa0c324b15efef0dc13163aaf60470ede64d17b83": {
        "address": "0xa0c324b15efef0dc13163aaf60470ede64d17b83",
        "anyToken": {
          "address": "0xcc658cdfda5244b1be85d5fe9156cde4324ac023",
          "name": "REX Coin",
          "symbol": "anyREX",
          "decimals": 18
        },
        "underlying": {
          "address": "0xa0c324b15efef0dc13163aaf60470ede64d17b83",
          "name": "REX Coin",
          "symbol": "REX",
          "decimals": 18
        },
        "destChains": {},
        "logoUrl": "https://i.postimg.cc/zDTJMmqv/Logo-2.png",
        "chainId": "56",
        "tokenid": "anyREX",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xc40289e08bb3eb14a26c9aec9f2eeacb9fdab297": {
        "address": "0xc40289e08bb3eb14a26c9aec9f2eeacb9fdab297",
        "anyToken": {
          "address": "0xf133ed3095a6c3167f140ab26fc1ad6b10096ab1",
          "name": "Mandala Exchange Token",
          "symbol": "anyMDX",
          "decimals": 18
        },
        "underlying": {
          "address": "0xc40289e08bb3eb14a26c9aec9f2eeacb9fdab297",
          "name": "Mandala Exchange Token",
          "symbol": "MDX",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x947aeb02304391f8fbe5b25d7d98d649b57b1788",
            "underlying": {
              "address": "0x947aeb02304391f8fbe5b25d7d98d649b57b1788",
              "name": "MANDALA EXCHANGE TOKEN",
              "symbol": "MDX",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "438596.491228",
            "MinimumSwap": "7.894737",
            "BigValueThreshold": "87719.298246",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "87.719298",
            "MinimumSwapFee": "7.017544",
            "anyToken": {
              "address": "0xde22e15c6c21b6a8a1266b171ff7f3905c4b1109",
              "name": "MANDALA EXCHANGE TOKEN",
              "symbol": "anyMDX",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://mandala.exchange/wp-content/uploads/2022/07/logo-200x200-1.png",
        "chainId": "56",
        "tokenid": "anyMDX",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x75f53011f6d51c60e6dcbf54a8b1bcb54f07f0c9": {
        "address": "0x75f53011f6d51c60e6dcbf54a8b1bcb54f07f0c9",
        "anyToken": {
          "address": "0xc780beb413dc5cbf23b016ca835af56e7711a060",
          "name": "Glimpse",
          "symbol": "anyGLMS",
          "decimals": 18
        },
        "underlying": {
          "address": "0x75f53011f6d51c60e6dcbf54a8b1bcb54f07f0c9",
          "name": "Glimpse",
          "symbol": "GLMS",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00321305,
        "logoUrl": "https://assets.coingecko.com/coins/images/18199/large/glm.PNG",
        "chainId": "56",
        "tokenid": "anyGLMS",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x27b2d695ef01d10ee96582a23db201b0aa338639": {
        "address": "0x27b2d695ef01d10ee96582a23db201b0aa338639",
        "anyToken": {
          "address": "0x268074fa5255109f92b219f795adb75016f2f1ba",
          "name": "Wrapped  GICT",
          "symbol": "anyWGICT",
          "decimals": 8
        },
        "underlying": {
          "address": "0x27b2d695ef01d10ee96582a23db201b0aa338639",
          "name": "Wrapped  GICT",
          "symbol": "WGICT",
          "decimals": 8
        },
        "destChains": {},
        "price": 0.967319,
        "logoUrl": "https://assets.coingecko.com/coins/images/15759/large/gictrade.PNG",
        "chainId": "56",
        "tokenid": "anyWGICT",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x83b27de2fca046fa63a11c7ce7743de33ec58822": {
        "address": "0x83b27de2fca046fa63a11c7ce7743de33ec58822",
        "anyToken": {
          "address": "0xee6c005fd7fe5949f2326531eccbdea7d2ee86cf",
          "name": "Build Token",
          "symbol": "anyBUILD",
          "decimals": 18
        },
        "underlying": {
          "address": "0x83b27de2fca046fa63a11c7ce7743de33ec58822",
          "name": "Build Token",
          "symbol": "BUILD",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x57b59f981730c6257df57cf6f0d98283749a9eeb",
            "underlying": {
              "address": "0x57b59f981730c6257df57cf6f0d98283749a9eeb",
              "name": "Build Token",
              "symbol": "BUILD",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "4347826086.956522",
            "MinimumSwap": "78260.869565",
            "BigValueThreshold": "869565217.391304",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "869565.217391",
            "MinimumSwapFee": "69565.217391",
            "anyToken": {
              "address": "0x6562e5791da22950c959b8c2febcfbca15ae520c",
              "name": "Build Token",
              "symbol": "anyBUILD",
              "decimals": 18
            }
          }
        },
        "price": 0.00007998,
        "logoUrl": "https://assets.coingecko.com/coins/images/26533/large/BUILD.png",
        "chainId": "56",
        "tokenid": "anyBUILD",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x85dab10c3ba20148ca60c2eb955e1f8ffe9eaa79": {
        "address": "0x85dab10c3ba20148ca60c2eb955e1f8ffe9eaa79",
        "anyToken": {
          "address": "0x41a4c52925cae8ec45292113b5934e902f920fcd",
          "name": "ARTH Valuecoin (BSC)",
          "symbol": "anyARTH.bsc",
          "decimals": 18
        },
        "underlying": {
          "address": "0x85dab10c3ba20148ca60c2eb955e1f8ffe9eaa79",
          "name": "ARTH Valuecoin (BSC)",
          "symbol": "ARTH.bsc",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x8cc0f052fff7ead7f2edcccac895502e884a8a71",
            "underlying": {
              "address": "0x8cc0f052fff7ead7f2edcccac895502e884a8a71",
              "name": "ARTH Valuecoin",
              "symbol": "ARTH",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "2427184.466019",
            "MinimumSwap": "43.68932",
            "BigValueThreshold": "485436.893204",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "485.436893",
            "MinimumSwapFee": "38.834951",
            "anyToken": {
              "address": "0xede1b2f557942c9132c0ea1b7f20a63f711982d4",
              "name": "ARTH Valuecoin",
              "symbol": "anyARTH",
              "decimals": 18
            }
          }
        },
        "price": 2.15,
        "logoUrl": "https://i.imgur.com/8OvswDK.png",
        "chainId": "56",
        "tokenid": "anyARTH",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xdd531f921e78fe90ab7c509fb4beb0ceb1a26244": {
        "address": "0xdd531f921e78fe90ab7c509fb4beb0ceb1a26244",
        "anyToken": {
          "address": "0xab24f8e6b7f759a1abe727a9c06de8f70da42504",
          "name": "JellyBeanCash",
          "symbol": "anyJellyBean",
          "decimals": 18
        },
        "underlying": {
          "address": "0xdd531f921e78fe90ab7c509fb4beb0ceb1a26244",
          "name": "JellyBeanCash",
          "symbol": "JellyBean",
          "decimals": 18
        },
        "destChains": {},
        "price": null,
        "logoUrl": "https://assets.coingecko.com/coins/images/26605/large/jellybeancash.png",
        "chainId": "56",
        "tokenid": "anyJellyBean",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x32f1518baace69e85b9e5ff844ebd617c52573ac": {
        "address": "0x32f1518baace69e85b9e5ff844ebd617c52573ac",
        "anyToken": {
          "address": "0xef5c4f92209a5cb59d7b3f949f1bafbe7d844342",
          "name": "Dexsport Protocol Native Token",
          "symbol": "anyDESU",
          "decimals": 18
        },
        "underlying": {
          "address": "0x32f1518baace69e85b9e5ff844ebd617c52573ac",
          "name": "Dexsport Protocol Native Token",
          "symbol": "DESU",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00678622,
        "logoUrl": "https://assets.coingecko.com/coins/images/20583/large/desu.png",
        "chainId": "56",
        "tokenid": "anyDESU",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x078053f10acd423e9357d80c5828ddf69d2bcd36": {
        "address": "0x078053f10acd423e9357d80c5828ddf69d2bcd36",
        "anyToken": {
          "address": "0x6ef583d55ab552a4dc7fc4ad9683d75f15211551",
          "name": "MULTIVERSE",
          "symbol": "anyMV",
          "decimals": 18
        },
        "underlying": {
          "address": "0x078053f10acd423e9357d80c5828ddf69d2bcd36",
          "name": "MULTIVERSE",
          "symbol": "MV",
          "decimals": 18
        },
        "destChains": {},
        "logoUrl": "https://i.ibb.co/vzD48D9/Photo-Room-20220702-203635-2.png",
        "chainId": "56",
        "tokenid": "anyMV",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xd10fe9d371c22416df34340287cd5d9029842fc3": {
        "address": "0xd10fe9d371c22416df34340287cd5d9029842fc3",
        "anyToken": {
          "address": "0xcf21f436e86a978863aca38e845f00af61c5ad09",
          "name": "Galaxy Heroes",
          "symbol": "anyGHC",
          "decimals": 18
        },
        "underlying": {
          "address": "0xd10fe9d371c22416df34340287cd5d9029842fc3",
          "name": "GalaxyHeroes",
          "symbol": "GHC",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x8c77057c3343b7dcc97ca21da274730396162a98",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "307087581378209.07",
            "MinimumSwap": "5527576464.81",
            "BigValueThreshold": "61417516275641.81",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "61417516275.64",
            "MinimumSwapFee": "4913401302.051",
            "anyToken": {
              "address": "0x8c77057c3343b7dcc97ca21da274730396162a98",
              "name": "Galaxy Heroes",
              "symbol": "GHC",
              "decimals": 18
            }
          }
        },
        "price": 4.813e-9,
        "logoUrl": "https://assets.coingecko.com/coins/images/25200/large/wB-aTZWY_400x400.jpg",
        "chainId": "56",
        "tokenid": "anyGHC",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xfd9b1448a8874b03e6e8476049db259a82569a41": {
        "address": "0xfd9b1448a8874b03e6e8476049db259a82569a41",
        "anyToken": {
          "address": "0xa387d1ebd7c6fc182a370fbd1f0cce0da1a865d9",
          "name": "Helix",
          "symbol": "anyHELIX",
          "decimals": 18
        },
        "underlying": {
          "address": "0xfd9b1448a8874b03e6e8476049db259a82569a41",
          "name": "Helix",
          "symbol": "HELIX",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x231cc03e6d8b7368ec2abfafb5f73d216c8af980",
            "underlying": {
              "address": "0x231cc03e6d8b7368ec2abfafb5f73d216c8af980",
              "name": "Helix",
              "symbol": "HELIX",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "58823529.411765",
            "MinimumSwap": "1058.823529",
            "BigValueThreshold": "11764705.882353",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "11764.705882",
            "MinimumSwapFee": "941.17647",
            "anyToken": {
              "address": "0x152c0f9c32c393961e9803a9467b2194e1c00b21",
              "name": "Helix",
              "symbol": "anyHELIX",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://helix.finance/helix-icon-128.png",
        "chainId": "56",
        "tokenid": "anyHELIX",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xadca52302e0a6c2d5d68edcdb4ac75deb5466884": {
        "address": "0xadca52302e0a6c2d5d68edcdb4ac75deb5466884",
        "anyToken": {
          "address": "0x9529366ca0d697af36e25a094ada8d2515d51f64",
          "name": "GAMER ",
          "symbol": "anyGMR",
          "decimals": 18
        },
        "underlying": {
          "address": "0xadca52302e0a6c2d5d68edcdb4ac75deb5466884",
          "name": "GAMER",
          "symbol": "GMR",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xde0518903b3a0e7904b08547f73d4350be7eb798",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "224169307.007488",
            "MinimumSwap": "4035.047526",
            "BigValueThreshold": "44833861.401497",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "44833.861401",
            "MinimumSwapFee": "3586.708912",
            "anyToken": {
              "address": "0xde0518903b3a0e7904b08547f73d4350be7eb798",
              "name": "GAMER ",
              "symbol": "GMR",
              "decimals": 18
            }
          }
        },
        "price": 0.01215825,
        "logoUrl": "https://assets.coingecko.com/coins/images/21288/small/ezgif-1-7f6a016717.jpg",
        "chainId": "56",
        "tokenid": "anyGMR",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x555581c3124a07d0121b1e27a7abe8bc09288097": {
        "address": "0x555581c3124a07d0121b1e27a7abe8bc09288097",
        "anyToken": {
          "address": "0x069b7f195e8dae15a70bbc1d7d9f3a7a8a942039",
          "name": "RacewayX",
          "symbol": "anyRWX",
          "decimals": 18
        },
        "underlying": {
          "address": "0x555581c3124a07d0121b1e27a7abe8bc09288097",
          "name": "RacewayX",
          "symbol": "RWX",
          "decimals": 18
        },
        "destChains": {},
        "logoUrl": "https://racewayx.com/wp-content/uploads/2022/04/Dark-Mascot.png",
        "chainId": "56",
        "tokenid": "anyRWX",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xd73f32833b6d5d9c8070c23e599e283a3039823c": {
        "address": "0xd73f32833b6d5d9c8070c23e599e283a3039823c",
        "anyToken": {
          "address": "0xb506c06ad11faf466f668a6cb4d1f538838e3b8e",
          "name": "Waterfall Governance Token",
          "symbol": "anyWTF",
          "decimals": 18
        },
        "underlying": {
          "address": "0xd73f32833b6d5d9c8070c23e599e283a3039823c",
          "name": "Waterfall Governance Token",
          "symbol": "WTF",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x23da57c5f99ca7dea8d38b15419c7003ee85d76c",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "75280797.374206",
            "MinimumSwap": "1355.054353",
            "BigValueThreshold": "15056159.474841",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "15056.159475",
            "MinimumSwapFee": "1204.492758",
            "anyToken": {
              "address": "0x23da57c5f99ca7dea8d38b15419c7003ee85d76c",
              "name": "Waterfall Governance Token",
              "symbol": "WTF",
              "decimals": 18
            }
          }
        },
        "price": 0.00072016,
        "logoUrl": "https://assets.coingecko.com/coins/images/19189/large/wtf_icon_avatar_200x200.png",
        "chainId": "56",
        "tokenid": "anyWTF",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x9b44df3318972be845d83f961735609137c4c23c": {
        "address": "0x9b44df3318972be845d83f961735609137c4c23c",
        "anyToken": {
          "address": "0x5b641728c9f1e544fb3c9f16a19aa7916f75fd44",
          "name": "Propel",
          "symbol": "anyPROPEL",
          "decimals": 18
        },
        "underlying": {
          "address": "0x9b44df3318972be845d83f961735609137c4c23c",
          "name": "Propel",
          "symbol": "PROPEL",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00000413,
        "logoUrl": "https://assets.coingecko.com/coins/images/8794/large/-RNl00DU_400x400.jpg",
        "chainId": "56",
        "tokenid": "anyPROPEL",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xdf3662a2b4e308146f90e2668c0d9e38ababdfe4": {
        "address": "0xdf3662a2b4e308146f90e2668c0d9e38ababdfe4",
        "anyToken": {
          "address": "0x337957324abb649c767073484136f6a9eb5c13a1",
          "name": "Kash",
          "symbol": "anyKash",
          "decimals": 18
        },
        "underlying": {
          "address": "0xdf3662a2b4e308146f90e2668c0d9e38ababdfe4",
          "name": "Kash",
          "symbol": "Kash",
          "decimals": 18
        },
        "destChains": {},
        "logoUrl": "https://res.cloudinary.com/coinproof/image/upload/v1659977125/da-game_pdtbnn.png",
        "chainId": "56",
        "tokenid": "anyKash",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x6fd7c98458a943f469e1cf4ea85b173f5cd342f4": {
        "address": "0x6fd7c98458a943f469e1cf4ea85b173f5cd342f4",
        "anyToken": {
          "address": "0x60e29a5e0c1d84eb48fadd862ab7fcd550dafa09",
          "name": "Billion Happiness",
          "symbol": "anyBHC",
          "decimals": 18
        },
        "underlying": {
          "address": "0x6fd7c98458a943f469e1cf4ea85b173f5cd342f4",
          "name": "BillionHappiness",
          "symbol": "BHC",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x7837fd820ba38f95c54d6dac4ca3751b81511357",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "104036.620891",
            "MinimumSwap": "1.872659",
            "BigValueThreshold": "20807.324178",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "20.807324",
            "MinimumSwapFee": "1.664586",
            "anyToken": {
              "address": "0x7837fd820ba38f95c54d6dac4ca3751b81511357",
              "name": "Billion Happiness",
              "symbol": "BHC",
              "decimals": 18
            }
          }
        },
        "price": 13.55,
        "logoUrl": "https://assets.coingecko.com/coins/images/12803/large/BHC_BLACK_TRANSPARENT.png",
        "chainId": "56",
        "tokenid": "anyBHC",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x92a42db88ed0f02c71d439e55962ca7cab0168b5": {
        "address": "0x92a42db88ed0f02c71d439e55962ca7cab0168b5",
        "anyToken": {
          "address": "0x068002c95f033ed7ac19f32638a85a6f971ba11f",
          "name": "Tardigrades.Finance",
          "symbol": "anyTRDG",
          "decimals": 9
        },
        "underlying": {
          "address": "0x92a42db88ed0f02c71d439e55962ca7cab0168b5",
          "name": "Tardigrades.Finance",
          "symbol": "TRDG",
          "decimals": 9
        },
        "destChains": {
          "1": {
            "address": "0x92a42db88ed0f02c71d439e55962ca7cab0168b5",
            "underlying": {
              "address": "0x92a42db88ed0f02c71d439e55962ca7cab0168b5",
              "name": "Tardigrades.Finance",
              "symbol": "TRDG",
              "decimals": 9
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "1497005988023952095.75",
            "MinimumSwap": "26946107784431.137724",
            "BigValueThreshold": "299401197604790419.15625",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "299401197604790.419159",
            "MinimumSwapFee": "23952095808383.233532",
            "anyToken": {
              "address": "0x0f65f65792d4b286b6f2ff373ee1c1631f71c635",
              "name": "Tardigrades.Finance",
              "symbol": "anyTRDG",
              "decimals": 9
            }
          }
        },
        "price": 2.326e-12,
        "logoUrl": "https://assets.coingecko.com/coins/images/14371/large/trdg.png",
        "chainId": "56",
        "tokenid": "anyTRDG",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xebcef8cca798bf898a47b21f8fb6efc4b89cb9ea": {
        "address": "0xebcef8cca798bf898a47b21f8fb6efc4b89cb9ea",
        "anyToken": {
          "address": "0xfc0666627a07d7f324824df515628f43098316a3",
          "name": "Dexance",
          "symbol": "anyDXN",
          "decimals": 18
        },
        "underlying": {
          "address": "0xebcef8cca798bf898a47b21f8fb6efc4b89cb9ea",
          "name": "Dexance",
          "symbol": "DXN",
          "decimals": 18
        },
        "destChains": {},
        "logoUrl": "https://i.imgur.com/XFO3SiL.png",
        "chainId": "56",
        "tokenid": "anyDXN",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x409f1b7dd13d0dec4faf91db72325ba07e46caa1": {
        "address": "0x409f1b7dd13d0dec4faf91db72325ba07e46caa1",
        "anyToken": {
          "address": "0x25cf8524de30ee979afc3a1f185eb6868629ece4",
          "name": "DaoX",
          "symbol": "anyDaoX",
          "decimals": 18
        },
        "underlying": {
          "address": "0x409f1b7dd13d0dec4faf91db72325ba07e46caa1",
          "name": "DaoX",
          "symbol": "DaoX",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xd8485513dd9947aa3287d90fd3804d3df52d0da1",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "166666666.666667",
            "MinimumSwap": "3000",
            "BigValueThreshold": "33333333.333333",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "33333.333333",
            "MinimumSwapFee": "2666.666667",
            "anyToken": {
              "address": "0xd8485513dd9947aa3287d90fd3804d3df52d0da1",
              "name": "DaoX",
              "symbol": "DaoX",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://i.ibb.co/xC6VRXy/LOGO-LARGE-WHITE-1.png",
        "chainId": "56",
        "tokenid": "anyDaoX",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x33840024177a7daca3468912363bed8b425015c5": {
        "address": "0x33840024177a7daca3468912363bed8b425015c5",
        "anyToken": {
          "address": "0x49a42bb2edbd857f5bcf7f685ea068880a6c1f4b",
          "name": "ethbox Token",
          "symbol": "anyEBOX",
          "decimals": 18
        },
        "underlying": {
          "address": "0x33840024177a7daca3468912363bed8b425015c5",
          "name": "ethbox Token",
          "symbol": "EBOX",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x33840024177a7daca3468912363bed8b425015c5",
            "underlying": {
              "address": "0x33840024177a7daca3468912363bed8b425015c5",
              "name": "ethbox Token",
              "symbol": "EBOX",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "736553841.349249",
            "MinimumSwap": "13257.969144",
            "BigValueThreshold": "147310768.26985",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "147310.76827",
            "MinimumSwapFee": "11784.861461",
            "anyToken": {
              "address": "0xb2004d3299eaad78951ba8502cc1840655061483",
              "name": "ethbox Token",
              "symbol": "anyEBOX",
              "decimals": 18
            }
          }
        },
        "price": 0.00469705,
        "logoUrl": "https://assets.coingecko.com/coins/images/14528/large/ebox.png",
        "chainId": "56",
        "tokenid": "anyEBOX",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x64619f611248256f7f4b72fe83872f89d5d60d64": {
        "address": "0x64619f611248256f7f4b72fe83872f89d5d60d64",
        "anyToken": {
          "address": "0x951fcfb095a45b34c5fd9f7d9af4a232eff62b8d",
          "name": "QUINT",
          "symbol": "anyQUINT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x64619f611248256f7f4b72fe83872f89d5d60d64",
          "name": "QUINT",
          "symbol": "QUINT",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xa6ebe316317de53724967c5bf462e007e9bdf761",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "3355704.697987",
            "MinimumSwap": "60.402685",
            "BigValueThreshold": "671140.939597",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "671.140939",
            "MinimumSwapFee": "53.691275",
            "anyToken": {
              "address": "0xa6ebe316317de53724967c5bf462e007e9bdf761",
              "name": "QUINT",
              "symbol": "QUINT",
              "decimals": 18
            }
          }
        },
        "price": 0.998035,
        "logoUrl": "https://assets.coingecko.com/coins/images/25194/large/logo-200x200.png",
        "chainId": "56",
        "tokenid": "anyQUINT",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x86028c1c730943ab56ebb7d6f39e20ad22121004": {
        "address": "0x86028c1c730943ab56ebb7d6f39e20ad22121004",
        "anyToken": {
          "address": "0x09d3829bb51ba759a879777a8d0040efba1fa165",
          "name": "Crypto 4 A Cause Fund",
          "symbol": "anyC4C",
          "decimals": 18
        },
        "underlying": {
          "address": "0x86028c1c730943ab56ebb7d6f39e20ad22121004",
          "name": "Crypto 4 A Cause Fund",
          "symbol": "C4C",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x8e347e33d991a51f5b654245c054bc5a6bc60ce1",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "1923076923.076923",
            "MinimumSwap": "34615.384615",
            "BigValueThreshold": "384615384.615385",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "384615.384615",
            "MinimumSwapFee": "30769.230769",
            "anyToken": {
              "address": "0x8e347e33d991a51f5b654245c054bc5a6bc60ce1",
              "name": "Crypto 4 A Cause Fund",
              "symbol": "C4C",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://i.ibb.co/JpszQwm/c4c-token.png",
        "chainId": "56",
        "tokenid": "anyC4C",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xdfe29afdf5a7d0bb92a01a56adabfa87d652e0e7": {
        "address": "0xdfe29afdf5a7d0bb92a01a56adabfa87d652e0e7",
        "anyToken": {
          "address": "0xf5c5033b9f9609a067581f014211d9f30f8c024d",
          "name": "Optimus",
          "symbol": "anyOPT",
          "decimals": 9
        },
        "underlying": {
          "address": "0xdfe29afdf5a7d0bb92a01a56adabfa87d652e0e7",
          "name": "Optimus",
          "symbol": "OPT",
          "decimals": 9
        },
        "destChains": {
          "1": {
            "address": "0xa85d8c972e1d54136e4bbed3d108db6e108e98f9",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "4816955684007707.128906",
            "MinimumSwap": "86705202312.138728",
            "BigValueThreshold": "963391136801541.425842",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "963391136801.541426",
            "MinimumSwapFee": "77071290944.123314",
            "anyToken": {
              "address": "0xa85d8c972e1d54136e4bbed3d108db6e108e98f9",
              "name": "Optimus",
              "symbol": "OPT",
              "decimals": 9
            }
          }
        },
        "price": 1.53395e-10,
        "logoUrl": "https://assets.coingecko.com/coins/images/26318/large/OPT_Transparent.png",
        "chainId": "56",
        "tokenid": "anyOPT",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xf7844cb890f4c339c497aeab599abdc3c874b67a": {
        "address": "0xf7844cb890f4c339c497aeab599abdc3c874b67a",
        "anyToken": {
          "address": "0xb2ea25cd1912fd85f815088ea5f89f19f708ec62",
          "name": "NFTArt.Finance",
          "symbol": "anyNFTART",
          "decimals": 9
        },
        "underlying": {
          "address": "0xf7844cb890f4c339c497aeab599abdc3c874b67a",
          "name": "NFTArt.Finance",
          "symbol": "NFTART",
          "decimals": 9
        },
        "destChains": {},
        "price": 5.4359e-11,
        "logoUrl": "https://assets.coingecko.com/coins/images/15027/large/nft-art-coingecko-logo.png",
        "chainId": "56",
        "tokenid": "anyNFTART",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x1fd991fb6c3102873ba68a4e6e6a87b3a5c10271": {
        "address": "0x1fd991fb6c3102873ba68a4e6e6a87b3a5c10271",
        "anyToken": {
          "address": "0xaa6c3d37760039264186d919d7a64a93cd3a6984",
          "name": "Atlantis",
          "symbol": "anyATL",
          "decimals": 18
        },
        "underlying": {
          "address": "0x1fd991fb6c3102873ba68a4e6e6a87b3a5c10271",
          "name": "Atlantis",
          "symbol": "ATL",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xa5342d72d04c133180f376753f90a4b2eee29bb3",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "29621028.560596",
            "MinimumSwap": "533.178514",
            "BigValueThreshold": "5924205.712119",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "5924.205712",
            "MinimumSwapFee": "473.936457",
            "anyToken": {
              "address": "0xa5342d72d04c133180f376753f90a4b2eee29bb3",
              "name": "Atlantis",
              "symbol": "ATL",
              "decimals": 18
            }
          }
        },
        "price": 0.02263993,
        "logoUrl": "https://assets.coingecko.com/coins/images/19362/large/atl.png",
        "chainId": "56",
        "tokenid": "anyATL",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xeceb87cf00dcbf2d4e2880223743ff087a995ad9": {
        "address": "0xeceb87cf00dcbf2d4e2880223743ff087a995ad9",
        "anyToken": {
          "address": "0x2a21bfa388693b3cd3de6045793baffc6c24dcda",
          "name": "NUM Token [via ChainPort.io]",
          "symbol": "anyNUM",
          "decimals": 18
        },
        "underlying": {
          "address": "0xeceb87cf00dcbf2d4e2880223743ff087a995ad9",
          "name": "NUM Token [via ChainPort.io]",
          "symbol": "NUM",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x3496b523e5c00a4b4150d6721320cddb234c3079",
            "underlying": {
              "address": "0x3496b523e5c00a4b4150d6721320cddb234c3079",
              "name": "NUM Token",
              "symbol": "NUM",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "87459987.055922",
            "MinimumSwap": "1574.279767",
            "BigValueThreshold": "17491997.411184",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "17491.997411",
            "MinimumSwapFee": "1399.359793",
            "anyToken": {
              "address": "0xbcfbad9c58049eefca0f4c17130f560bbb41d444",
              "name": "NUM Token",
              "symbol": "anyNUM",
              "decimals": 18
            }
          }
        },
        "price": 0.04521084,
        "logoUrl": "https://assets.coingecko.com/coins/images/20495/large/5J3RAUO2_400x400.jpg",
        "chainId": "56",
        "tokenid": "anyNUM",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x4197c6ef3879a08cd51e5560da5064b773aa1d29": {
        "address": "0x4197c6ef3879a08cd51e5560da5064b773aa1d29",
        "anyToken": {
          "address": "0xd2435625c901dc9b4f76d4af3d8e1d353aa7c428",
          "name": "ACryptoS",
          "symbol": "anyACS",
          "decimals": 18
        },
        "underlying": {
          "address": "0x4197c6ef3879a08cd51e5560da5064b773aa1d29",
          "name": "ACryptoS",
          "symbol": "ACS",
          "decimals": 18
        },
        "destChains": {},
        "price": 1.64,
        "logoUrl": "https://assets.coingecko.com/coins/images/13276/large/ACS_logo.png",
        "chainId": "56",
        "tokenid": "anyACS",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x6a684b3578f5b07c0aa02fafc33ed248ae0c2db2": {
        "address": "0x6a684b3578f5b07c0aa02fafc33ed248ae0c2db2",
        "anyToken": {
          "address": "0x9922879913c0b6c1860d45a3b9d3a6c44e3d183f",
          "name": "Tech Trees Coin",
          "symbol": "anyTTC",
          "decimals": 18
        },
        "underlying": {
          "address": "0x6a684b3578f5b07c0aa02fafc33ed248ae0c2db2",
          "name": "Tech Trees Coin",
          "symbol": "TTC",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xaf3ccfd9b59b36628cc2f659a09d6440795b2520",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "15119443604.475355",
            "MinimumSwap": "272149.984881",
            "BigValueThreshold": "3023888720.895071",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "3023888.720895",
            "MinimumSwapFee": "241911.097672",
            "anyToken": {
              "address": "0xaf3ccfd9b59b36628cc2f659a09d6440795b2520",
              "name": "Tech Trees Coin",
              "symbol": "TTC",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://i.postimg.cc/26hL6Lwd/TTC.png",
        "chainId": "56",
        "tokenid": "anyTTC",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x28ce223853d123b52c74439b10b43366d73fd3b5": {
        "address": "0x28ce223853d123b52c74439b10b43366d73fd3b5",
        "anyToken": {
          "address": "0x958d48293b4df8f9722273bf1ca90cc2236e1b6d",
          "name": "FAME MMA",
          "symbol": "anyFAME",
          "decimals": 18
        },
        "underlying": {
          "address": "0x28ce223853d123b52c74439b10b43366d73fd3b5",
          "name": "FAME MMA",
          "symbol": "FAME",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00124009,
        "logoUrl": "https://assets.coingecko.com/coins/images/25267/large/FJTwuXxE_400x400.jpg",
        "chainId": "56",
        "tokenid": "anyFAME",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x3235b13708f178af6f110de7177ed5de10c1093d": {
        "address": "0x3235b13708f178af6f110de7177ed5de10c1093d",
        "anyToken": {
          "address": "0xbad3fe9b36780e187455c57ba68ca1c2e43bbc9b",
          "name": "MongolNFT",
          "symbol": "anyMNFT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x3235b13708f178af6f110de7177ed5de10c1093d",
          "name": "MongolNFT",
          "symbol": "MNFT",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x3235b13708f178af6f110de7177ed5de10c1093d",
            "underlying": {
              "address": "0x3235b13708f178af6f110de7177ed5de10c1093d",
              "name": "MNFT",
              "symbol": "MNFT",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "258933195235.629208",
            "MinimumSwap": "4660797.514241",
            "BigValueThreshold": "51786639047.125841",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "51786639.047126",
            "MinimumSwapFee": "4142931.12377",
            "anyToken": {
              "address": "0x9a058058e14838ef83d25df227c149aff7df8bd3",
              "name": "MNFT",
              "symbol": "anyMNFT",
              "decimals": 18
            }
          }
        },
        "price": 0.00001955,
        "logoUrl": "https://assets.coingecko.com/coins/images/23718/large/swI93LWg_400x400.jpg",
        "chainId": "56",
        "tokenid": "anyMNFT-Mongo",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xb192d5fc358d35194282a1a06814aba006198010": {
        "address": "0xb192d5fc358d35194282a1a06814aba006198010",
        "anyToken": {
          "address": "0x886f85a6da6c7806125004b2e1fd53ec82398bea",
          "name": "myMessage",
          "symbol": "anyMESA",
          "decimals": 18
        },
        "underlying": {
          "address": "0xb192d5fc358d35194282a1a06814aba006198010",
          "name": "myMessage",
          "symbol": "MESA",
          "decimals": 18
        },
        "destChains": {},
        "price": 2.3039e-8,
        "logoUrl": "https://assets.coingecko.com/coins/images/21726/large/mymessage.PNG",
        "chainId": "56",
        "tokenid": "anyMESA",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xfb5b838b6cfeedc2873ab27866079ac55363d37e": {
        "address": "0xfb5b838b6cfeedc2873ab27866079ac55363d37e",
        "anyToken": {
          "address": "0xb83003f7fe62870e2e9ed57323ed02630d971525",
          "name": "FLOKI",
          "symbol": "anyFLOKI",
          "decimals": 9
        },
        "underlying": {
          "address": "0xfb5b838b6cfeedc2873ab27866079ac55363d37e",
          "name": "FLOKI",
          "symbol": "FLOKI",
          "decimals": 9
        },
        "destChains": {
          "1": {
            "address": "0xcf0c122c6b73ff809c693db761e7baebe62b6a2e",
            "underlying": {
              "address": "0xcf0c122c6b73ff809c693db761e7baebe62b6a2e",
              "name": "FLOKI",
              "symbol": "FLOKI",
              "decimals": 9
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "130072840790.842872",
            "MinimumSwap": "1300728.407908",
            "BigValueThreshold": "26014568158.168574",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "26014568.158169",
            "MinimumSwapFee": "1040582.726327",
            "anyToken": {
              "address": "0xce3b8897be065315c8eab816a31153025ae428be",
              "name": "FLOKI",
              "symbol": "anyFLOKI",
              "decimals": 9
            }
          }
        },
        "price": 0.00000668,
        "logoUrl": "https://assets.coingecko.com/coins/images/16746/large/PNG_image.png",
        "chainId": "56",
        "tokenid": "anyFLOKI",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x9001fd53504f7bf253296cffadf5b6030cd61abb": {
        "address": "0x9001fd53504f7bf253296cffadf5b6030cd61abb",
        "anyToken": {
          "address": "0xfb9db098a2574c2bbf45259e1028190f1e652eaa",
          "name": "CyberFM Radio",
          "symbol": "anyCYFM",
          "decimals": 18
        },
        "underlying": {
          "address": "0x9001fd53504f7bf253296cffadf5b6030cd61abb",
          "name": "CyberFM Radio",
          "symbol": "CYFM",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x4a621d9f1b19296d1c0f87637b3a8d4978e9bf82",
            "underlying": {
              "address": "0x4a621d9f1b19296d1c0f87637b3a8d4978e9bf82",
              "name": "CyberFM Radio",
              "symbol": "CYFM",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "277746917009221197648",
            "MinimumSwap": "4999444506165981.557617",
            "BigValueThreshold": "55549383401844239528",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "55549383401844239.527344",
            "MinimumSwapFee": "4443950672147539.162354",
            "anyToken": {
              "address": "0x701e67fa3121343c866dfe69ae98534265b65bfa",
              "name": "CyberFM Radio",
              "symbol": "anyCYFM",
              "decimals": 18
            }
          }
        },
        "price": 2e-17,
        "logoUrl": "https://assets.coingecko.com/coins/images/5476/large/cyberfm.png",
        "chainId": "56",
        "tokenid": "anyCYFM",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xf606bd19b1e61574ed625d9ea96c841d4e247a32": {
        "address": "0xf606bd19b1e61574ed625d9ea96c841d4e247a32",
        "anyToken": {
          "address": "0xcdd28a3033a6dc1472a1403156b426905bf127ba",
          "name": "Guardian",
          "symbol": "anyGUARD",
          "decimals": 18
        },
        "underlying": {
          "address": "0xf606bd19b1e61574ed625d9ea96c841d4e247a32",
          "name": "Guardian",
          "symbol": "GUARD",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.295293,
        "logoUrl": "https://assets.coingecko.com/coins/images/17995/small/LS_wolfDen_logo.0025_Light_200x200.png",
        "chainId": "56",
        "tokenid": "anyGUARD",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xa6d662ddb759f2a3c4240bca2e1cc86d383f9e71": {
        "address": "0xa6d662ddb759f2a3c4240bca2e1cc86d383f9e71",
        "anyToken": {
          "address": "0xf276f8a9ddc7ef09ec1aac4565ec4da431626a76",
          "name": "Shopdi Token",
          "symbol": "anySHOD",
          "decimals": 18
        },
        "underlying": {
          "address": "0xa6d662ddb759f2a3c4240bca2e1cc86d383f9e71",
          "name": "Shopdi Token",
          "symbol": "SHOD",
          "decimals": 18
        },
        "destChains": {},
        "logoUrl": "https://s3.shopdi.io/logo.png",
        "chainId": "56",
        "tokenid": "anySHOD",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x4f60ad2c684296458b12053c0ef402e162971e00": {
        "address": "0x4f60ad2c684296458b12053c0ef402e162971e00",
        "anyToken": {
          "address": "0xc39fd0625684f5ae0cd8b3da491c377a1da45721",
          "name": "InterCrone",
          "symbol": "anyICR",
          "decimals": 8
        },
        "underlying": {
          "address": "0x4f60ad2c684296458b12053c0ef402e162971e00",
          "name": "InterCrone",
          "symbol": "ICR",
          "decimals": 8
        },
        "destChains": {},
        "price": 0.00457027,
        "logoUrl": "https://assets.coingecko.com/coins/images/5419/large/icr.png",
        "chainId": "56",
        "tokenid": "anyICR",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x6612535d85249736821b3c95319f2faf383f37cc": {
        "address": "0x6612535d85249736821b3c95319f2faf383f37cc",
        "anyToken": {
          "address": "0xef5244ea102a4209e5d3f506cd480ba08e18d62d",
          "name": "DAOMERGE",
          "symbol": "anyDMG",
          "decimals": 18
        },
        "underlying": {
          "address": "0x6612535d85249736821b3c95319f2faf383f37cc",
          "name": "DAOMERGE",
          "symbol": "DMG",
          "decimals": 18
        },
        "destChains": {},
        "logoUrl": "https://daomerge.live/static/media/logo.4013a68f409b4e9ae7ae.png",
        "chainId": "56",
        "tokenid": "anyDMG",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xde5ed76e7c05ec5e4572cfc88d1acea165109e44": {
        "address": "0xde5ed76e7c05ec5e4572cfc88d1acea165109e44",
        "anyToken": {
          "address": "0xc0dd739c4a190a45c91ed3ec587b1f3fc4d31ba6",
          "name": "DEUS",
          "symbol": "anyDEUS",
          "decimals": 18
        },
        "underlying": {
          "address": "0xde5ed76e7c05ec5e4572cfc88d1acea165109e44",
          "name": "DEUS",
          "symbol": "DEUS",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xde5ed76e7c05ec5e4572cfc88d1acea165109e44",
            "underlying": {
              "address": "0xde5ed76e7c05ec5e4572cfc88d1acea165109e44",
              "name": "DEUS",
              "symbol": "DEUS",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "56954.094999",
            "MinimumSwap": "0.569541",
            "BigValueThreshold": "11390.819",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "11.390819",
            "MinimumSwapFee": "0.455633",
            "anyToken": {
              "address": "0x5fd564518a71aab9b1d0ac6d5825bbbc46a5845e",
              "name": "DEUS",
              "symbol": "anyDEUS",
              "decimals": 18
            }
          }
        },
        "price": 38.67,
        "logoUrl": "https://assets.coingecko.com/coins/images/18778/large/DEUS-logo-200x200.png",
        "chainId": "56",
        "tokenid": "anyDEUS",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xfebe8c1ed424dbf688551d4e2267e7a53698f0aa": {
        "address": "0xfebe8c1ed424dbf688551d4e2267e7a53698f0aa",
        "anyToken": {
          "address": "0xe2be59436da627be05a4ea6ccf4a4ebdcbb24d84",
          "name": "Vita Inu",
          "symbol": "anyVINU",
          "decimals": 18
        },
        "underlying": {
          "address": "0xfebe8c1ed424dbf688551d4e2267e7a53698f0aa",
          "name": "Vita Inu",
          "symbol": "VINU",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xafcdd4f666c84fed1d8bd825aa762e3714f652c9",
            "underlying": {
              "address": "0xafcdd4f666c84fed1d8bd825aa762e3714f652c9",
              "name": "Vita Inu",
              "symbol": "VINU",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "268744961031980.65036",
            "MinimumSwap": "4837409298.575652",
            "BigValueThreshold": "53748992206396.130074",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "53748992206.39613",
            "MinimumSwapFee": "4299919376.51169",
            "anyToken": {
              "address": "0xf7fbaa0328c5faee1a0b2155065804f4077284e1",
              "name": "Vita Inu",
              "symbol": "anyVINU",
              "decimals": 18
            }
          }
        },
        "price": 9.74e-9,
        "logoUrl": "https://assets.coingecko.com/coins/images/20594/large/vita-inu-head-wallet-icon-transparent.png",
        "chainId": "56",
        "tokenid": "anyVINU",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xb8c3e8ff71513afc8cfb2dddc5a994a501db1916": {
        "address": "0xb8c3e8ff71513afc8cfb2dddc5a994a501db1916",
        "anyToken": {
          "address": "0x6f0210a6a52af56068e370bd7e071431f8e7be31",
          "name": "YES||NO",
          "symbol": "anyYON",
          "decimals": 18
        },
        "underlying": {
          "address": "0xb8c3e8ff71513afc8cfb2dddc5a994a501db1916",
          "name": "YES||NO",
          "symbol": "YON",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00104371,
        "logoUrl": "https://assets.coingecko.com/coins/images/21214/large/K91jws5t_400x400.png",
        "chainId": "56",
        "tokenid": "anyYON",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xbc2e674dfe0d885081f429b296d7ae2b784d1198": {
        "address": "0xbc2e674dfe0d885081f429b296d7ae2b784d1198",
        "anyToken": {
          "address": "0x552c8037a765e2dd62babdb8250380962244e75d",
          "name": "LasMeta",
          "symbol": "anyLASM",
          "decimals": 18
        },
        "underlying": {
          "address": "0xbc2e674dfe0d885081f429b296d7ae2b784d1198",
          "name": "LasMeta",
          "symbol": "LASM",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x6f66f3012e0210babd2384e31863c30f70356237",
            "underlying": {
              "address": "0x6f66f3012e0210babd2384e31863c30f70356237",
              "name": "LasMeta",
              "symbol": "LASM",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "80645161.290322",
            "MinimumSwap": "1451.612903",
            "BigValueThreshold": "16129032.258064",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "16129.032258",
            "MinimumSwapFee": "1290.322581",
            "anyToken": {
              "address": "0x9a046925f592513a9ca9ed214112e373f7971023",
              "name": "LasMeta",
              "symbol": "anyLASM",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://lasmeta.io/lasmeta-logo.png",
        "chainId": "56",
        "tokenid": "anyLASM",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x2df28d35ebce1cb05ade0e341e62052dc3d4bbc5": {
        "address": "0x2df28d35ebce1cb05ade0e341e62052dc3d4bbc5",
        "anyToken": {
          "address": "0x946f3df8537511ee59385ae1a6fdebf5d0d20d3d",
          "name": "Moonseen Rose Token",
          "symbol": "anyMSRT",
          "decimals": 8
        },
        "underlying": {
          "address": "0x2df28d35ebce1cb05ade0e341e62052dc3d4bbc5",
          "name": "Moonseen Rose Token",
          "symbol": "MSRT",
          "decimals": 8
        },
        "destChains": {
          "1": {
            "address": "0xc1f1699fe47bd5512e6dd8353db43b8186b67fd4",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "21937040693210.485905",
            "MinimumSwap": "394866732.477789",
            "BigValueThreshold": "4387408138642.097181",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "4387408138.642097",
            "MinimumSwapFee": "350992651.091368",
            "anyToken": {
              "address": "0xc1f1699fe47bd5512e6dd8353db43b8186b67fd4",
              "name": "Moonseen Rose Token",
              "symbol": "MSRT",
              "decimals": 8
            }
          }
        },
        "logoUrl": "https://moonseenrose.com/wp-content/uploads/2022/09/cropped-msrt_logo1.png",
        "chainId": "56",
        "tokenid": "anyMSRT",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x7c73967dc8c804ea028247f5a953052f0cd5fd58": {
        "address": "0x7c73967dc8c804ea028247f5a953052f0cd5fd58",
        "anyToken": {
          "address": "0x9a293f938ffc319ccffdec21df1930dfc8f5c3f0",
          "name": "CyBloc Battery Token",
          "symbol": "anyCBT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x7c73967dc8c804ea028247f5a953052f0cd5fd58",
          "name": "CyBloc Battery Token",
          "symbol": "CBT",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00014773,
        "logoUrl": "https://assets.coingecko.com/coins/images/24167/large/CBT_200x200.png",
        "chainId": "56",
        "tokenid": "anyCBT",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x1a122941ff2ef376f065e0404a0a9cecbfe94551": {
        "address": "0x1a122941ff2ef376f065e0404a0a9cecbfe94551",
        "anyToken": {
          "address": "0x07ee3dbf87c3c25994717bbee854ddc354f81e9d",
          "name": "Jigen",
          "symbol": "anyJIG",
          "decimals": 18
        },
        "underlying": {
          "address": "0x1a122941ff2ef376f065e0404a0a9cecbfe94551",
          "name": "Jigen",
          "symbol": "JIG",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xe2fc859c838f31c1450448f4fed92e3284ae49e9",
            "underlying": {
              "address": "0xe2fc859c838f31c1450448f4fed92e3284ae49e9",
              "name": "Jigen",
              "symbol": "JIG",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "2906976744.186046",
            "MinimumSwap": "29069.767442",
            "BigValueThreshold": "581395348.837209",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "581395.348837",
            "MinimumSwapFee": "23255.813953",
            "anyToken": {
              "address": "0x34290390c2fdedb968e7128af26a98e731b781d0",
              "name": "Jigen",
              "symbol": "anyJIG",
              "decimals": 18
            }
          }
        },
        "price": 0.00223025,
        "logoUrl": "https://assets.coingecko.com/coins/images/21716/large/MbfJ2kSM_400x400.png",
        "chainId": "56",
        "tokenid": "anyJIG",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x9528cceb678b90daf02ca5ca45622d5cbaf58a30": {
        "address": "0x9528cceb678b90daf02ca5ca45622d5cbaf58a30",
        "anyToken": {
          "address": "0x6740e5fd93161af01ceaf18effcba489b5de0997",
          "name": "Go Crypto Me",
          "symbol": "anyGCME",
          "decimals": 9
        },
        "underlying": {
          "address": "0x9528cceb678b90daf02ca5ca45622d5cbaf58a30",
          "name": "Go Crypto Me",
          "symbol": "GCME",
          "decimals": 9
        },
        "destChains": {
          "1": {
            "address": "0x9528cceb678b90daf02ca5ca45622d5cbaf58a30",
            "underlying": {
              "address": "0x9528cceb678b90daf02ca5ca45622d5cbaf58a30",
              "name": "GoCryptoMe",
              "symbol": "GCME",
              "decimals": 9
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "1116936555.769759",
            "MinimumSwap": "20104.858004",
            "BigValueThreshold": "223387311.153952",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "223387.311154",
            "MinimumSwapFee": "17870.984892",
            "anyToken": {
              "address": "0xf545cd9ec67770748c3c2bdb4b7511a86f00af0a",
              "name": "GoCryptoMe",
              "symbol": "anyGCME",
              "decimals": 9
            }
          }
        },
        "price": 0.00149882,
        "logoUrl": "https://assets.coingecko.com/coins/images/23946/large/WDBxWle.png",
        "chainId": "56",
        "tokenid": "anyGCME",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xfaaa87943bfca6d97434be3d26c589647fea4375": {
        "address": "0xfaaa87943bfca6d97434be3d26c589647fea4375",
        "anyToken": {
          "address": "0xc0dad366ebee605f9774823404f84e43a6092531",
          "name": "ACEToken",
          "symbol": "anyACE",
          "decimals": 18
        },
        "underlying": {
          "address": "0xfaaa87943bfca6d97434be3d26c589647fea4375",
          "name": "ACEToken",
          "symbol": "ACE",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x5e492b3b79df8037a83771d905d057ef1557b72a",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "647668393782.38342",
            "MinimumSwap": "11658031.088083",
            "BigValueThreshold": "129533678756.476684",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "129533678.756477",
            "MinimumSwapFee": "10362694.300518",
            "anyToken": {
              "address": "0x5e492b3b79df8037a83771d905d057ef1557b72a",
              "name": "ACEToken",
              "symbol": "ACE",
              "decimals": 18
            }
          }
        },
        "price": 8.64758e-7,
        "logoUrl": "https://assets.coingecko.com/coins/images/23990/large/ace.png",
        "chainId": "56",
        "tokenid": "anyACEToken",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x2f725cb7b6827bb4b02db1369b1e4c6a33e5633d": {
        "address": "0x2f725cb7b6827bb4b02db1369b1e4c6a33e5633d",
        "anyToken": {
          "address": "0xfe9fe45f26c763df220f15b1edf049b881af3a5a",
          "name": "Neorbit",
          "symbol": "anyNRB",
          "decimals": 9
        },
        "underlying": {
          "address": "0x2f725cb7b6827bb4b02db1369b1e4c6a33e5633d",
          "name": "Neorbit",
          "symbol": "NRB",
          "decimals": 9
        },
        "destChains": {},
        "price": 0.00009965,
        "logoUrl": "https://assets.coingecko.com/coins/images/28042/large/neorbit_logo_cg.png",
        "chainId": "56",
        "tokenid": "anyNRB",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x84f4f7cdb4574c9556a494dab18ffc1d1d22316c": {
        "address": "0x84f4f7cdb4574c9556a494dab18ffc1d1d22316c",
        "anyToken": {
          "address": "0x57aac97909756cd55bdfb6104dbc80071028d612",
          "name": "KING SHIBA",
          "symbol": "anyKINGSHIB",
          "decimals": 9
        },
        "underlying": {
          "address": "0x84f4f7cdb4574c9556a494dab18ffc1d1d22316c",
          "name": "KING SHIBA",
          "symbol": "KINGSHIB",
          "decimals": 9
        },
        "destChains": {},
        "price": 0.00323985,
        "logoUrl": "https://assets.coingecko.com/coins/images/19215/large/kingshib.png",
        "chainId": "56",
        "tokenid": "anyKINGSHIB",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xd9780513292477c4039dfda1cfcd89ff111e9da5": {
        "address": "0xd9780513292477c4039dfda1cfcd89ff111e9da5",
        "anyToken": {
          "address": "0xa85bf4a53e288c658367d007f267ab2ef63d7050",
          "name": "Tegro",
          "symbol": "anyTGR",
          "decimals": 18
        },
        "underlying": {
          "address": "0xd9780513292477c4039dfda1cfcd89ff111e9da5",
          "name": "Tegro",
          "symbol": "TGR",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xc7026a20a640bc71b9074f7aed52a00cd9147091",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "30764876.355962",
            "MinimumSwap": "553.767774",
            "BigValueThreshold": "6152975.271192",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "6152.975271",
            "MinimumSwapFee": "492.238022",
            "anyToken": {
              "address": "0xc7026a20a640bc71b9074f7aed52a00cd9147091",
              "name": "Tegro",
              "symbol": "TGR",
              "decimals": 18
            }
          }
        },
        "price": 0.139045,
        "logoUrl": "https://assets.coingecko.com/coins/images/26564/large/200x200.png",
        "chainId": "56",
        "tokenid": "anyTGR",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xc75aa1fa199eac5adabc832ea4522cff6dfd521a": {
        "address": "0xc75aa1fa199eac5adabc832ea4522cff6dfd521a",
        "anyToken": {
          "address": "0xf5c246975936a0b2fd8c364cc77d77eb7fe0973e",
          "name": "HedgePay",
          "symbol": "anyHPAY",
          "decimals": 18
        },
        "underlying": {
          "address": "0xc75aa1fa199eac5adabc832ea4522cff6dfd521a",
          "name": "HedgePay",
          "symbol": "HPAY",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x6d46c52805a4f94ef31082634ba75118df9f92e0",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "0",
            "liquidityType": "INIT",
            "MaximumSwap": "5978000956.480153",
            "MinimumSwap": "107604.017217",
            "BigValueThreshold": "1195600191.296031",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1195600.191296",
            "MinimumSwapFee": "95648.015304",
            "anyToken": {
              "address": "0x6d46c52805a4f94ef31082634ba75118df9f92e0",
              "name": "HedgePay",
              "symbol": "HPAY",
              "decimals": 18
            }
          }
        },
        "price": 0.00063339,
        "logoUrl": "https://assets.coingecko.com/coins/images/27725/large/200x200CG.png",
        "chainId": "56",
        "tokenid": "anyHPAY",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xa752df1de29cddba6f1142db2a75d407092cce4b": {
        "address": "0xa752df1de29cddba6f1142db2a75d407092cce4b",
        "anyToken": {
          "address": "0x59452d1e7f2e483a43fc32b2e1357a367bfb8d0a",
          "name": "Nort Token",
          "symbol": "anyNT",
          "decimals": 18
        },
        "underlying": {
          "address": "0xa752df1de29cddba6f1142db2a75d407092cce4b",
          "name": "Nort Token",
          "symbol": "NT",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xf31789fd16fb4ec64cb68cb52166e920d6929452",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "454545454.545455",
            "MinimumSwap": "8181.818182",
            "BigValueThreshold": "90909090.909091",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "90909.090909",
            "MinimumSwapFee": "7272.727273",
            "anyToken": {
              "address": "0xf31789fd16fb4ec64cb68cb52166e920d6929452",
              "name": "Nort Token",
              "symbol": "NT",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://nortswap.finance/logo.png",
        "chainId": "56",
        "tokenid": "anyNort",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x414f9e74ba3a9d0acce65182809492f41ac671e0": {
        "address": "0x414f9e74ba3a9d0acce65182809492f41ac671e0",
        "anyToken": {
          "address": "0xee5d37a644b5bea2f7e884dc95acb63889c219bf",
          "name": "Jarvis Reward Token",
          "symbol": "anyJRT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x414f9e74ba3a9d0acce65182809492f41ac671e0",
          "name": "Jarvis Reward Token",
          "symbol": "JRT",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x8a9c67fee641579deba04928c4bc45f66e26343a",
            "underlying": {
              "address": "0x8a9c67fee641579deba04928c4bc45f66e26343a",
              "name": "Jarvis Reward Token",
              "symbol": "JRT",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "339197607.707112",
            "MinimumSwap": "3391.976077",
            "BigValueThreshold": "67839521.541422",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "67839.521541",
            "MinimumSwapFee": "2713.580862",
            "anyToken": {
              "address": "0xd145261dd80bc5388ea8f437d503897060410f1c",
              "name": "Jarvis Reward Token",
              "symbol": "anyJRT",
              "decimals": 18
            }
          }
        },
        "price": 0.00985828,
        "logoUrl": "https://assets.coingecko.com/coins/images/10390/large/cfeii0y.png",
        "chainId": "56",
        "tokenid": "anyJRT",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xafd9a60f8a91572e99cdeabfa062146afa599ffa": {
        "address": "0xafd9a60f8a91572e99cdeabfa062146afa599ffa",
        "anyToken": {
          "address": "0x87894d1ea6b86d2bfa772518fa45f57e25483d0e",
          "name": "Brana",
          "symbol": "anyBRANA",
          "decimals": 18
        },
        "underlying": {
          "address": "0xafd9a60f8a91572e99cdeabfa062146afa599ffa",
          "name": "Brana",
          "symbol": "BRANA",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.004008,
        "logoUrl": "https://assets.coingecko.com/coins/images/27150/large/BRANA_LOGO.png",
        "chainId": "56",
        "tokenid": "anyBRANA",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xe0f463832295adf63eb6ca053413a3f9cd8bf685": {
        "address": "0xe0f463832295adf63eb6ca053413a3f9cd8bf685",
        "anyToken": {
          "address": "0x7a692f99dd5d731d4d38531b08eab7709a8ec839",
          "name": "Snowflake",
          "symbol": "anySNOW",
          "decimals": 18
        },
        "underlying": {
          "address": "0xe0f463832295adf63eb6ca053413a3f9cd8bf685",
          "name": "Snowflake",
          "symbol": "SNOW",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00023762,
        "logoUrl": "https://assets.coingecko.com/coins/images/28228/large/logo200.png",
        "chainId": "56",
        "tokenid": "anySNOW",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x444ddc9ab6e938511fdd56f89ec334d38cadee0f": {
        "address": "0x444ddc9ab6e938511fdd56f89ec334d38cadee0f",
        "anyToken": {
          "address": "0x4794ad21c56fef082f5a26ec5980159d885e264d",
          "name": "RxcDnaToken",
          "symbol": "anyDNA",
          "decimals": 9
        },
        "underlying": {
          "address": "0x444ddc9ab6e938511fdd56f89ec334d38cadee0f",
          "name": "RxcDnaToken",
          "symbol": "DNA",
          "decimals": 9
        },
        "destChains": {},
        "price": 0.03807712,
        "logoUrl": "https://assets.coingecko.com/coins/images/24892/large/dna-icon.png",
        "chainId": "56",
        "tokenid": "anyDNA",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xde51d1599339809cafb8194189ce67d5bdca9e9e": {
        "address": "0xde51d1599339809cafb8194189ce67d5bdca9e9e",
        "anyToken": {
          "address": "0xd085dbcaa60ba560d7c285cf53d410226eb8bec0",
          "name": "Cowrie",
          "symbol": "anyCOWRIE",
          "decimals": 18
        },
        "underlying": {
          "address": "0xde51d1599339809cafb8194189ce67d5bdca9e9e",
          "name": "Cowrie",
          "symbol": "COWRIE",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x136210a5c79d2435432e443f7155d9d83600ac70",
            "underlying": {
              "address": "0x136210a5c79d2435432e443f7155d9d83600ac70",
              "name": "Cowrie",
              "symbol": "COWRIE",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "147058823.529412",
            "MinimumSwap": "1470.588235",
            "BigValueThreshold": "29411764.705882",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "29411.764706",
            "MinimumSwapFee": "1176.470588",
            "anyToken": {
              "address": "0x03a9bdba596c93797f45e9d90cf1e3a3d8191ef0",
              "name": "Cowrie",
              "symbol": "anyCOWRIE",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://mycowrie.org/assets/images/cowrie-icon-32x32.png",
        "chainId": "56",
        "tokenid": "anyCOWRIE",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x3a549866a592c81719f3b714a356a8879e20f5d0": {
        "address": "0x3a549866a592c81719f3b714a356a8879e20f5d0",
        "anyToken": {
          "address": "0x1e2af74d6af300c08345cda036baeea9703c0114",
          "name": "ULE",
          "symbol": "anyULE",
          "decimals": 18
        },
        "underlying": {
          "address": "0x3a549866a592c81719f3b714a356a8879e20f5d0",
          "name": "ULE",
          "symbol": "ULE",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.04493353,
        "logoUrl": "https://assets.coingecko.com/coins/images/26951/large/20220819_225616_0000.png",
        "chainId": "56",
        "tokenid": "anyULE",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x27dcc73cbbbe57d006303316dd3e91a0d5d58eea": {
        "address": "0x27dcc73cbbbe57d006303316dd3e91a0d5d58eea",
        "anyToken": {
          "address": "0x12ab77f974f7c9806639451fb47d88b504c80dd7",
          "name": "Shiba World Cup",
          "symbol": "anySWC",
          "decimals": 18
        },
        "underlying": {
          "address": "0x27dcc73cbbbe57d006303316dd3e91a0d5d58eea",
          "name": "Shiba World Cup",
          "symbol": "SWC",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.0000829,
        "logoUrl": "https://assets.coingecko.com/coins/images/28054/large/logo.jpg",
        "chainId": "56",
        "tokenid": "anySWC",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xdea12c8c23994ea2d88ed99ee1bdc0ff56f7f9d1": {
        "address": "0xdea12c8c23994ea2d88ed99ee1bdc0ff56f7f9d1",
        "anyToken": {
          "address": "0xfd6aab8d2c8d738f310520c1b48947f1132977af",
          "name": "L3USD",
          "symbol": "anyL3USD",
          "decimals": 18
        },
        "underlying": {
          "address": "0xdea12c8c23994ea2d88ed99ee1bdc0ff56f7f9d1",
          "name": "L3USD",
          "symbol": "L3USD",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.996043,
        "logoUrl": "https://assets.coingecko.com/coins/images/26937/large/L3USD.png",
        "chainId": "56",
        "tokenid": "anyL3USD",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x3ad9594151886ce8538c1ff615efa2385a8c3a88": {
        "address": "0x3ad9594151886ce8538c1ff615efa2385a8c3a88",
        "anyToken": {
          "address": "0x9aaaf68116d64356f7220dcd641b72ab01d8c784",
          "name": "SafeMars",
          "symbol": "anySAFEMARS",
          "decimals": 9
        },
        "underlying": {
          "address": "0x3ad9594151886ce8538c1ff615efa2385a8c3a88",
          "name": "SafeMars",
          "symbol": "SAFEMARS",
          "decimals": 9
        },
        "destChains": {},
        "price": 8.429e-9,
        "logoUrl": "https://assets.coingecko.com/coins/images/14451/large/MARTIAN.",
        "chainId": "56",
        "tokenid": "anySAFEMARS",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x7b8779e01d117ec7e220f8299a6f93672e8eae23": {
        "address": "0x7b8779e01d117ec7e220f8299a6f93672e8eae23",
        "anyToken": {
          "address": "0xe139c963083ad98cff990f24aff0fd559dbd5732",
          "name": "IMOV",
          "symbol": "anyIMT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x7b8779e01d117ec7e220f8299a6f93672e8eae23",
          "name": "IMOV",
          "symbol": "IMT",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00930098,
        "logoUrl": "https://assets.coingecko.com/coins/images/26558/large/IMOV.png",
        "chainId": "56",
        "tokenid": "anyIMT",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x37d39950f9c753d62529dbf68fcb4dca4004fbfd": {
        "address": "0x37d39950f9c753d62529dbf68fcb4dca4004fbfd",
        "anyToken": {
          "address": "0xe6b3d8361aed08431b7bbb7231aa1ee6ede5dcf5",
          "name": "Falcon",
          "symbol": "anyFLN",
          "decimals": 18
        },
        "underlying": {
          "address": "0x37d39950f9c753d62529dbf68fcb4dca4004fbfd",
          "name": "Falcon",
          "symbol": "FLN",
          "decimals": 18
        },
        "destChains": {},
        "logoUrl": "https://photos.pinksale.finance/file/pinksale-logo-upload/1669113181625-88cf6411037f5c8aeb5cebd14b4a4bfd.PNG",
        "chainId": "56",
        "tokenid": "anyFLN",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x81aa4d3ad2a86e7a2cd44630c36ccaacd6b30568": {
        "address": "0x81aa4d3ad2a86e7a2cd44630c36ccaacd6b30568",
        "anyToken": {
          "address": "0x89d6d9982476e19499dbd7b69b070af0d0396cb3",
          "name": "BLUEART TOKEN",
          "symbol": "anyBLA",
          "decimals": 9
        },
        "underlying": {
          "address": "0x81aa4d3ad2a86e7a2cd44630c36ccaacd6b30568",
          "name": "BLUEART TOKEN",
          "symbol": "BLA",
          "decimals": 9
        },
        "destChains": {
          "1": {
            "address": "0x80bf736b99954e7dd55e57b97a4330470812cf53",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "0",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "213271638.11386",
            "MinimumSwap": "2132.716381",
            "BigValueThreshold": "42654327.622772",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "42654.327623",
            "MinimumSwapFee": "1706.173105",
            "anyToken": {
              "address": "0x80bf736b99954e7dd55e57b97a4330470812cf53",
              "name": "BLUEART TOKEN",
              "symbol": "BLA",
              "decimals": 9
            }
          }
        },
        "price": 0.01291606,
        "logoUrl": "https://assets.coingecko.com/coins/images/28040/large/200x200_blueart_logo.png",
        "chainId": "56",
        "tokenid": "anyBLA",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xeda3866f07566d9379a91a07f8d62e19c03183e0": {
        "address": "0xeda3866f07566d9379a91a07f8d62e19c03183e0",
        "anyToken": {
          "address": "0x15617146e5f12d88700095dcf1be3164fbf15cc9",
          "name": "HashBit-Peg HBIT Token",
          "symbol": "anyHBIT",
          "decimals": 18
        },
        "underlying": {
          "address": "0xeda3866f07566d9379a91a07f8d62e19c03183e0",
          "name": "HashBit-Peg HBIT Token",
          "symbol": "HBIT",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00001618,
        "logoUrl": "https://assets.coingecko.com/coins/images/16375/large/HBIT_COIN_LOGO_200.png",
        "chainId": "56",
        "tokenid": "anyHBIT",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xc8e6af2ecae1841202ff53c0eed1928c590daa28": {
        "address": "0xc8e6af2ecae1841202ff53c0eed1928c590daa28",
        "anyToken": {
          "address": "0xeaf05a8b9fa8ce439e563fd7ec8e68485215fb00",
          "name": "Cogecoin",
          "symbol": "anyCOGE",
          "decimals": 18
        },
        "underlying": {
          "address": "0xc8e6af2ecae1841202ff53c0eed1928c590daa28",
          "name": "Cogecoin",
          "symbol": "COGE",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xc382e04099a435439725bb40647e2b32dc136806",
            "underlying": {
              "address": "0xc382e04099a435439725bb40647e2b32dc136806",
              "name": "Cogecoin",
              "symbol": "COGE",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "124084874053852.835342",
            "MinimumSwap": "1240848740.538528",
            "BigValueThreshold": "24816974810770.567068",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "24816974810.770567",
            "MinimumSwapFee": "992678992.430823",
            "anyToken": {
              "address": "0x981e360161a37de663f232e6c800fc6a56fb536a",
              "name": "Cogecoin",
              "symbol": "anyCOGE",
              "decimals": 18
            }
          }
        },
        "price": 1.2407e-8,
        "logoUrl": "https://assets.coingecko.com/coins/images/16791/large/Dog-Logo_1x.png",
        "chainId": "56",
        "tokenid": "anyCOGE",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x510975eda48a97e0ca228dd04d1217292487bea6": {
        "address": "0x510975eda48a97e0ca228dd04d1217292487bea6",
        "anyToken": {
          "address": "0x9db9ea9780b2785d6a7549521592301eb4279ec4",
          "name": "XENO Governance Token",
          "symbol": "anyGXE",
          "decimals": 18
        },
        "underlying": {
          "address": "0x510975eda48a97e0ca228dd04d1217292487bea6",
          "name": "XENO Governance Token",
          "symbol": "GXE",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x510975eda48a97e0ca228dd04d1217292487bea6",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "0",
            "liquidityType": "INIT",
            "MaximumSwap": "72790799.242976",
            "MinimumSwap": "727.907992",
            "BigValueThreshold": "14558159.848595",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "14558.159848",
            "MinimumSwapFee": "582.326394",
            "anyToken": {
              "address": "0x510975eda48a97e0ca228dd04d1217292487bea6",
              "name": "XENO Governance Token",
              "symbol": "GXE",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://dem5g0y2eb1n5.cloudfront.net/icon/XENO_icon_200-200_230105.png",
        "chainId": "56",
        "tokenid": "anyGXE",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x8029d0953eea9e27c47c3c539fd97afa7b10a312": {
        "address": "0x8029d0953eea9e27c47c3c539fd97afa7b10a312",
        "anyToken": {
          "address": "0x7d2cec1485e0ca13bda682cbf759b8f8a909ead2",
          "name": "Coin AI",
          "symbol": "anyC",
          "decimals": 9
        },
        "underlying": {
          "address": "0x8029d0953eea9e27c47c3c539fd97afa7b10a312",
          "name": "Coin AI",
          "symbol": "C",
          "decimals": 9
        },
        "destChains": {
          "1": {
            "address": "0x8029d0953eea9e27c47c3c539fd97afa7b10a312",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "0",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "40329410625.993112",
            "MinimumSwap": "403294.10626",
            "BigValueThreshold": "8065882125.198622",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "8065882.125199",
            "MinimumSwapFee": "322635.285008",
            "anyToken": {
              "address": "0x8029d0953eea9e27c47c3c539fd97afa7b10a312",
              "name": "Coin AI",
              "symbol": "C",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://pbs.twimg.com/profile_images/1606209466403520512/vdyrzfcn_400x400.jpg",
        "chainId": "56",
        "tokenid": "anyC",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x25c30340e6f9f6e521827cf03282943da00c0ece": {
        "address": "0x25c30340e6f9f6e521827cf03282943da00c0ece",
        "anyToken": {
          "address": "0x7c7ddfe33146d8b27bee97ae42611368b902f655",
          "name": "Pi-Protocol",
          "symbol": "anyPIP",
          "decimals": 18
        },
        "underlying": {
          "address": "0x25c30340e6f9f6e521827cf03282943da00c0ece",
          "name": "Pi-Protocol",
          "symbol": "PIP",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x37613d64258c0fe09d5e53eecb091da5b8fa8707",
            "underlying": {
              "address": "0x37613d64258c0fe09d5e53eecb091da5b8fa8707",
              "name": "Pi-Protocol",
              "symbol": "PIP",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "5536669.361179",
            "MinimumSwap": "55.366694",
            "BigValueThreshold": "1107333.872236",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1107.333872",
            "MinimumSwapFee": "44.293355",
            "anyToken": {
              "address": "0x5650c49d662cb83666ab0fad224453b603179d2a",
              "name": "Pi-Protocol",
              "symbol": "anyPIP",
              "decimals": 18
            }
          }
        },
        "price": 0.435658,
        "logoUrl": "https://assets.coingecko.com/coins/images/27476/large/LOGO_%281%29.png",
        "chainId": "56",
        "tokenid": "anyPIP",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x7c869b5a294b1314e985283d01c702b62224a05f": {
        "address": "0x7c869b5a294b1314e985283d01c702b62224a05f",
        "anyToken": {
          "address": "0x81e16632d96b16b0d52e8465af49a8cd08ad2380",
          "name": "Jarvis Synthetic Swiss Franc",
          "symbol": "anyjCHF",
          "decimals": 18
        },
        "underlying": {
          "address": "0x7c869b5a294b1314e985283d01c702b62224a05f",
          "name": "Jarvis Synthetic Swiss Franc",
          "symbol": "jCHF",
          "decimals": 18
        },
        "destChains": {},
        "price": 1.11,
        "logoUrl": "https://assets.coingecko.com/coins/images/15727/large/jCHF.png",
        "chainId": "56",
        "tokenid": "anyjCHF",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x048e9b1ddf9ebbb224812372280e94ccac443f9e": {
        "address": "0x048e9b1ddf9ebbb224812372280e94ccac443f9e",
        "anyToken": {
          "address": "0xd624e3268c91cab1e3f635999fef9b0040cf1567",
          "name": "Jarvis Synthetic British Pound",
          "symbol": "anyjGBP",
          "decimals": 18
        },
        "underlying": {
          "address": "0x048e9b1ddf9ebbb224812372280e94ccac443f9e",
          "name": "Jarvis Synthetic British Pound",
          "symbol": "jGBP",
          "decimals": 18
        },
        "destChains": {},
        "price": 1.26,
        "logoUrl": "https://assets.coingecko.com/coins/images/15726/large/jGBP.png",
        "chainId": "56",
        "tokenid": "anyjGBP",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x316622977073bbc3df32e7d2a9b3c77596a0a603": {
        "address": "0x316622977073bbc3df32e7d2a9b3c77596a0a603",
        "anyToken": {
          "address": "0x96d7c52e9430ac66b08c41fb105d5ed3d0cdb3a7",
          "name": "Jarvis Synthetic Brazilian Real",
          "symbol": "anyjBRL",
          "decimals": 18
        },
        "underlying": {
          "address": "0x316622977073bbc3df32e7d2a9b3c77596a0a603",
          "name": "Jarvis Synthetic Brazilian Real",
          "symbol": "jBRL",
          "decimals": 18
        },
        "destChains": {},
        "logoUrl": "https://raw.githubusercontent.com/balancer-labs/assets/refactor-for-multichain/assets/0xf2f77fe7b8e66571e0fca7104c4d670bf1c8d722.png",
        "chainId": "56",
        "tokenid": "anyjBRL",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xaa076b62efc6f357882e07665157a271ab46a063": {
        "address": "0xaa076b62efc6f357882e07665157a271ab46a063",
        "anyToken": {
          "address": "0x7b1ac40fb90739b0c54235d47b46f8f528f8fee5",
          "name": "Pleasure Coin",
          "symbol": "anyNSFW",
          "decimals": 18
        },
        "underlying": {
          "address": "0xaa076b62efc6f357882e07665157a271ab46a063",
          "name": "Pleasure Coin",
          "symbol": "NSFW",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x8f006d1e1d9dc6c98996f50a4c810f17a47fbf19",
            "underlying": {
              "address": "0x8f006d1e1d9dc6c98996f50a4c810f17a47fbf19",
              "name": "Pleasure Coin",
              "symbol": "NSFW",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "34616449736.914982",
            "MinimumSwap": "346164.497369",
            "BigValueThreshold": "6923289947.382996",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "6923289.947383",
            "MinimumSwapFee": "276931.597895",
            "anyToken": {
              "address": "0x5977d06d455b1c791c753b4ea8153f609017d46d",
              "name": "Pleasure Coin",
              "symbol": "anyNSFW",
              "decimals": 18
            }
          }
        },
        "price": 0.0001059,
        "logoUrl": "https://assets.coingecko.com/coins/images/15315/large/pleasurecoin-icon.png",
        "chainId": "56",
        "tokenid": "anyNSFW",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x43a167b15a6f24913a8b4d35488b36ac15d39200": {
        "address": "0x43a167b15a6f24913a8b4d35488b36ac15d39200",
        "anyToken": {
          "address": "0x9ea24874d225eb5dfa3dffacef14ace9a6691fbf",
          "name": "PumaPay",
          "symbol": "anyPMA",
          "decimals": 18
        },
        "underlying": {
          "address": "0x43a167b15a6f24913a8b4d35488b36ac15d39200",
          "name": "PumaPay",
          "symbol": "PMA",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x846c66cf71c43f80403b51fe3906b3599d63336f",
            "underlying": {
              "address": "0x846c66cf71c43f80403b51fe3906b3599d63336f",
              "name": "PumaPay",
              "symbol": "PMA",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "48323185464.385812",
            "MinimumSwap": "483231.854644",
            "BigValueThreshold": "9664637092.877162",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "9664637.092877",
            "MinimumSwapFee": "386585.483715",
            "anyToken": {
              "address": "0x3aefd7bca67e9825559efb70eb2eae5ecde8ee12",
              "name": "PumaPay",
              "symbol": "anyPMA",
              "decimals": 18
            }
          }
        },
        "price": 0.00001241,
        "logoUrl": "https://assets.coingecko.com/coins/images/2307/large/pumapay_dark_rounded_256x256.png",
        "chainId": "56",
        "tokenid": "anyPMA",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x1bd55090b8878630e57fae6ebd11fd61d16dfc9f": {
        "address": "0x1bd55090b8878630e57fae6ebd11fd61d16dfc9f",
        "anyToken": {
          "address": "0x65c2f753a687307aa9b17dd062cbe95bc0efdd86",
          "name": "Archloot",
          "symbol": "anyALT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x1bd55090b8878630e57fae6ebd11fd61d16dfc9f",
          "name": "Archloot",
          "symbol": "ALT",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x1bd55090b8878630e57fae6ebd11fd61d16dfc9f",
            "underlying": {
              "address": "0x1bd55090b8878630e57fae6ebd11fd61d16dfc9f",
              "name": "Archloot",
              "symbol": "ALT",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "7104836.11985",
            "MinimumSwap": "71.048361",
            "BigValueThreshold": "1420967.22397",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1420.967224",
            "MinimumSwapFee": "56.838689",
            "anyToken": {
              "address": "0x0acaabc390d7d7134eef4166f61e3e30b362f675",
              "name": "Archloot",
              "symbol": "anyALT",
              "decimals": 18
            }
          }
        },
        "price": 0.399775,
        "logoUrl": "https://assets.coingecko.com/coins/images/28919/large/7.png",
        "chainId": "56",
        "tokenid": "anyALT",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x71ab195498b6dc1656abb4d9233f83ae5f19495b": {
        "address": "0x71ab195498b6dc1656abb4d9233f83ae5f19495b",
        "anyToken": {
          "address": "0xc6dddc1d9c306414dfd2b871e7dac73628513320",
          "name": "Marvin Inu",
          "symbol": "anyMARVIN",
          "decimals": 18
        },
        "underlying": {
          "address": "0x71ab195498b6dc1656abb4d9233f83ae5f19495b",
          "name": "Marvin Inu",
          "symbol": "MARVIN",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xcaa9ed6d7502595b555113d4517668ae24038c8a",
            "underlying": {
              "address": "0xcaa9ed6d7502595b555113d4517668ae24038c8a",
              "name": "Marvin Inu",
              "symbol": "MARVIN",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "3289473684210.526316",
            "MinimumSwap": "32894736.842105",
            "BigValueThreshold": "657894736842.105263",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "657894736.842105",
            "MinimumSwapFee": "26315789.473684",
            "anyToken": {
              "address": "0x3198bb617c26b45014865ed9bb90aaf81966f65a",
              "name": "Marvin Inu",
              "symbol": "anyMARVIN",
              "decimals": 18
            }
          }
        },
        "price": 0.00000112,
        "logoUrl": "https://assets.coingecko.com/coins/images/22039/large/lVshyCp.png",
        "chainId": "56",
        "tokenid": "anyMARVIN",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x31491c35c094a0336f4859dd94ab9466709dec45": {
        "address": "0x31491c35c094a0336f4859dd94ab9466709dec45",
        "anyToken": {
          "address": "0x4c915f7ccda02fa6545b20ca3c7fbdc141d007b5",
          "name": "COLLIE INU",
          "symbol": "anyCOLLIE",
          "decimals": 18
        },
        "underlying": {
          "address": "0x31491c35c094a0336f4859dd94ab9466709dec45",
          "name": "COLLIE INU",
          "symbol": "COLLIE",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xb8a768cd332e4461fccfbdb1d0292ceffbb2bb8a",
            "underlying": {
              "address": "0xb8a768cd332e4461fccfbdb1d0292ceffbb2bb8a",
              "name": "COLLIE INU",
              "symbol": "COLLIE",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "4237288135593.220339",
            "MinimumSwap": "42372881.355932",
            "BigValueThreshold": "847457627118.644068",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "847457627.118644",
            "MinimumSwapFee": "33898305.084746",
            "anyToken": {
              "address": "0xb65de64caa720b03e7e681ece761bf09ae5ac5fe",
              "name": "COLLIE INU",
              "symbol": "anyCOLLIE",
              "decimals": 18
            }
          }
        },
        "price": 3.68625e-7,
        "logoUrl": "https://assets.coingecko.com/coins/images/27365/large/pfp2.jpg",
        "chainId": "56",
        "tokenid": "anyCOLLIE",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x9562ca0c2b05d089063f562fc3ecc95e4424ad02": {
        "address": "0x9562ca0c2b05d089063f562fc3ecc95e4424ad02",
        "anyToken": {
          "address": "0xa8ca6a024ad56563c0846cda1c1c5c98fd186f1c",
          "name": "SHIELD TOKEN",
          "symbol": "anySHDB",
          "decimals": 18
        },
        "underlying": {
          "address": "0x9562ca0c2b05d089063f562fc3ecc95e4424ad02",
          "name": "SHIELD TOKEN",
          "symbol": "SHDB",
          "decimals": 18
        },
        "destChains": {},
        "price": 4.86,
        "logoUrl": "https://assets.coingecko.com/coins/images/28716/large/shdb_200x200.png",
        "chainId": "56",
        "tokenid": "anySHDB",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x108d2f6c4d63fd158cd82a0c94cf636905cdf805": {
        "address": "0x108d2f6c4d63fd158cd82a0c94cf636905cdf805",
        "anyToken": {
          "address": "0xe81538a7781ecf58f03510a1aa0cae093f96bc17",
          "name": "EightLabs",
          "symbol": "any$8Labs",
          "decimals": 18
        },
        "underlying": {
          "address": "0x108d2f6c4d63fd158cd82a0c94cf636905cdf805",
          "name": "EightLabs",
          "symbol": "$8Labs",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x23b150bf9916f2890a4455812c4990086e234e47",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "66524747205.960617",
            "MinimumSwap": "665247.47206",
            "BigValueThreshold": "13304949441.192123",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "13304949.441192",
            "MinimumSwapFee": "532197.977648",
            "anyToken": {
              "address": "0x23b150bf9916f2890a4455812c4990086e234e47",
              "name": "EightLabs",
              "symbol": "$8Labs",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://eightlabs.space/static/media/illustration-5.b178640ce592de478c2f.png",
        "chainId": "56",
        "tokenid": "any$8Labs",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xd0aa796e2160ed260c668e90ac5f237b4ebd4b0d": {
        "address": "0xd0aa796e2160ed260c668e90ac5f237b4ebd4b0d",
        "anyToken": {
          "address": "0x04779424befa4a76be338e53cdc783b60c784f37",
          "name": "Waifu",
          "symbol": "anyWaifu",
          "decimals": 18
        },
        "underlying": {
          "address": "0xd0aa796e2160ed260c668e90ac5f237b4ebd4b0d",
          "name": "Waifu",
          "symbol": "Waifu",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00108003,
        "logoUrl": "https://assets.coingecko.com/coins/images/28181/large/200.png",
        "chainId": "56",
        "tokenid": "anyWaifu",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x9e1170c12fddd3b00fec42ddf4c942565d9be577": {
        "address": "0x9e1170c12fddd3b00fec42ddf4c942565d9be577",
        "anyToken": {
          "address": "0x8d0def48048785645869f3e8ca7414e1b86f80c4",
          "name": "Space Token",
          "symbol": "anySPACE",
          "decimals": 18
        },
        "underlying": {
          "address": "0x9e1170c12fddd3b00fec42ddf4c942565d9be577",
          "name": "Space Token",
          "symbol": "SPACE",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.02129178,
        "logoUrl": "https://assets.coingecko.com/coins/images/20676/large/jYw3kgsY_400x400.png",
        "chainId": "56",
        "tokenid": "anySPACE",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x0091371eaef2da68c8dd77975358c91e8570640f": {
        "address": "0x0091371eaef2da68c8dd77975358c91e8570640f",
        "anyToken": {
          "address": "0x33817a75d84dcbba9fe5c6e92ed5c1c5b3101cbe",
          "name": "Deflationary",
          "symbol": "anyDEF",
          "decimals": 9
        },
        "underlying": {
          "address": "0x0091371eaef2da68c8dd77975358c91e8570640f",
          "name": "Deflationary",
          "symbol": "DEF",
          "decimals": 9
        },
        "destChains": {
          "1": {
            "address": "0x0091371eaef2da68c8dd77975358c91e8570640f",
            "underlying": {
              "address": "0x0091371eaef2da68c8dd77975358c91e8570640f",
              "name": "Deflationary",
              "symbol": "DEF",
              "decimals": 9
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "7142857142857.142857",
            "MinimumSwap": "71428571.428571",
            "BigValueThreshold": "1428571428571.428571",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1428571428.571428",
            "MinimumSwapFee": "57142857.142857",
            "anyToken": {
              "address": "0x39efdf70bab96cfccc4f5c39ca2fc6d0fdaf08ad",
              "name": "Deflationary",
              "symbol": "anyDEF",
              "decimals": 9
            }
          }
        },
        "logoUrl": "https://i.ibb.co/q9652j9/Deflationary-DEF-Logo-PNG-128x128.png",
        "chainId": "56",
        "tokenid": "anyDEF",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x798af7725376765e7f3ca86d5e0cf1beaef19f34": {
        "address": "0x798af7725376765e7f3ca86d5e0cf1beaef19f34",
        "anyToken": {
          "address": "0xbd1263ed2bab8a8056543fb88785b6ec7f13dad8",
          "name": "Atomic Wallet Token",
          "symbol": "anyAWC",
          "decimals": 8
        },
        "underlying": {
          "address": "0x798af7725376765e7f3ca86d5e0cf1beaef19f34",
          "name": "Atomic Wallet Token",
          "symbol": "AWC",
          "decimals": 8
        },
        "destChains": {
          "1": {
            "address": "0xad22f63404f7305e4713ccbd4f296f34770513f4",
            "underlying": {
              "address": "0xad22f63404f7305e4713ccbd4f296f34770513f4",
              "name": "Atomic Wallet Token",
              "symbol": "AWC",
              "decimals": 8
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "9500501.626486",
            "MinimumSwap": "95.005016",
            "BigValueThreshold": "1900100.325297",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1900.100325",
            "MinimumSwapFee": "76.004013",
            "anyToken": {
              "address": "0xa9c840f9780815aac7c108eb0ef2804de2300f70",
              "name": "Atomic Wallet Token",
              "symbol": "anyAWC",
              "decimals": 8
            }
          }
        },
        "price": 0.327951,
        "logoUrl": "https://assets.coingecko.com/coins/images/7430/small/Atomic_Wallet_Aeron_%281%29.png",
        "chainId": "56",
        "tokenid": "anyAWC",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x2e93575c72b0aee56071536adf291eea91019c32": {
        "address": "0x2e93575c72b0aee56071536adf291eea91019c32",
        "anyToken": {
          "address": "0x97e236a2175db0e5c68757b4c34f202267fc28a7",
          "name": "Inuyama",
          "symbol": "anyYAMA",
          "decimals": 9
        },
        "underlying": {
          "address": "0x2e93575c72b0aee56071536adf291eea91019c32",
          "name": "Inuyama",
          "symbol": "YAMA",
          "decimals": 9
        },
        "destChains": {},
        "logoUrl": "https://i.ibb.co/jZT7Yj3/7-E55-C731-EBF2-4-B57-B5-C6-885-E4-AAF95-F3-1.png",
        "chainId": "56",
        "tokenid": "anyYAMA",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xa991fa7fa94dfe2e59d58954bce0f0a8e082710f": {
        "address": "0xa991fa7fa94dfe2e59d58954bce0f0a8e082710f",
        "anyToken": {
          "address": "0x0e0423358fce68a0d14d5a49c2b9bc78407dd666",
          "name": "Alpha Intelligence",
          "symbol": "any$AI",
          "decimals": 18
        },
        "underlying": {
          "address": "0xa991fa7fa94dfe2e59d58954bce0f0a8e082710f",
          "name": "Alpha Intelligence",
          "symbol": "$AI",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x5d259e3fbcadef1abfea5582e456bc7f0aebc2a1",
            "underlying": {
              "address": "0x5d259e3fbcadef1abfea5582e456bc7f0aebc2a1",
              "name": "Alpha Intelligence",
              "symbol": "$AI",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "2504658665.117118",
            "MinimumSwap": "25046.586651",
            "BigValueThreshold": "500931733.023424",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "500931.733023",
            "MinimumSwapFee": "20037.269321",
            "anyToken": {
              "address": "0x69a4d8074c06a315f952ef2763cef522f9273a01",
              "name": "Alpha Intelligence",
              "symbol": "any$AI",
              "decimals": 18
            }
          }
        },
        "price": 0.000958,
        "logoUrl": "https://assets.coingecko.com/coins/images/29127/large/alpha.png",
        "chainId": "56",
        "tokenid": "any$AI",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xc9132c76060f6b319764ea075973a650a1a53bc9": {
        "address": "0xc9132c76060f6b319764ea075973a650a1a53bc9",
        "anyToken": {
          "address": "0xb35d3d23552bb3883b8b31d5bb5df46ff6e63e62",
          "name": "DuckDaoDime",
          "symbol": "anyDDIM",
          "decimals": 18
        },
        "underlying": {
          "address": "0xc9132c76060f6b319764ea075973a650a1a53bc9",
          "name": "DuckDaoDime",
          "symbol": "DDIM",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20",
            "underlying": {
              "address": "0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20",
              "name": "DuckDaoDime",
              "symbol": "DDIM",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "1851851.851852",
            "MinimumSwap": "18.518519",
            "BigValueThreshold": "370370.37037",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "370.37037",
            "MinimumSwapFee": "14.814815",
            "anyToken": {
              "address": "0x1515bcb5489c6323de36a5bcd6b81d13a10a7a9a",
              "name": "DuckDaoDime",
              "symbol": "anyDDIM",
              "decimals": 18
            }
          }
        },
        "price": 2.02,
        "logoUrl": "https://assets.coingecko.com/coins/images/12146/large/token_DDIM-01.png",
        "chainId": "56",
        "tokenid": "anyDDIM",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x5d186e28934c6b0ff5fc2fece15d1f34f78cbd87": {
        "address": "0x5d186e28934c6b0ff5fc2fece15d1f34f78cbd87",
        "anyToken": {
          "address": "0x4a6fe8bd826b49b3c26d329dc0aec24877c7826f",
          "name": "DLP Duck Token",
          "symbol": "anyDUCK",
          "decimals": 18
        },
        "underlying": {
          "address": "0x5d186e28934c6b0ff5fc2fece15d1f34f78cbd87",
          "name": "DLP Duck Token",
          "symbol": "DUCK",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xc0ba369c8db6eb3924965e5c4fd0b4c1b91e305f",
            "underlying": {
              "address": "0xc0ba369c8db6eb3924965e5c4fd0b4c1b91e305f",
              "name": "DLP Duck Token",
              "symbol": "DUCK",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "195261625.193748",
            "MinimumSwap": "1952.616252",
            "BigValueThreshold": "39052325.03875",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "39052.325039",
            "MinimumSwapFee": "1562.093001",
            "anyToken": {
              "address": "0x538af8044e591796c0ac068cc8d8ffc8017138af",
              "name": "DLP Duck Token",
              "symbol": "anyDUCK",
              "decimals": 18
            }
          }
        },
        "price": 0.03264984,
        "logoUrl": "https://assets.coingecko.com/coins/images/13440/large/DLP_Duck_Token.png",
        "chainId": "56",
        "tokenid": "anyDUCK",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x6d6ba21e4c4b29ca7bfa1c344ba1e35b8dae7205": {
        "address": "0x6d6ba21e4c4b29ca7bfa1c344ba1e35b8dae7205",
        "anyToken": {
          "address": "0xbde62749a55cb4ae7999ef16509c78c219458c44",
          "name": "Katana Inu",
          "symbol": "anyKATA",
          "decimals": 18
        },
        "underlying": {
          "address": "0x6d6ba21e4c4b29ca7bfa1c344ba1e35b8dae7205",
          "name": "Katana Inu",
          "symbol": "KATA",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x2e85ae1c47602f7927bcabc2ff99c40aa222ae15",
            "underlying": {
              "address": "0x2e85ae1c47602f7927bcabc2ff99c40aa222ae15",
              "name": "Katana Inu",
              "symbol": "KATA",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "8293937131.95654",
            "MinimumSwap": "82939.371319",
            "BigValueThreshold": "1658787426.391308",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1658787.426391",
            "MinimumSwapFee": "66351.497056",
            "anyToken": {
              "address": "0x52b9d0f46451bd2c610ae6ab1f5312a35a6159e3",
              "name": "Katana Inu",
              "symbol": "anyKATA",
              "decimals": 18
            }
          }
        },
        "price": 0.00037799,
        "logoUrl": "https://assets.coingecko.com/coins/images/21872/large/Katana_Inu512.png",
        "chainId": "56",
        "tokenid": "anyKATA",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x5569edd2e1535be2003470b2663f2ff77e83d27e": {
        "address": "0x5569edd2e1535be2003470b2663f2ff77e83d27e",
        "anyToken": {
          "address": "0x021d2ff3aa5779b3b028d026397de4cda8c9a1d3",
          "name": "KeyOfLife - Multichain Store Of Value",
          "symbol": "anyKOL",
          "decimals": 18
        },
        "underlying": {
          "address": "0x5569edd2e1535be2003470b2663f2ff77e83d27e",
          "name": "KeyOfLife - Multichain Store Of Value",
          "symbol": "KOL",
          "decimals": 18
        },
        "destChains": {},
        "logoUrl": "https://storage.googleapis.com/coin-assets/public/coins/KOL.png",
        "chainId": "56",
        "tokenid": "anyKOL",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x4d4d883f920f7c0c36a1be71a02aa0cde2aa22d1": {
        "address": "0x4d4d883f920f7c0c36a1be71a02aa0cde2aa22d1",
        "anyToken": {
          "address": "0x04234de8673eeadfafe8bff1497a4ded31321935",
          "name": "OPTICASH",
          "symbol": "anyOPCH",
          "decimals": 18
        },
        "underlying": {
          "address": "0x4d4d883f920f7c0c36a1be71a02aa0cde2aa22d1",
          "name": "OPTICASH",
          "symbol": "OPCH",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x4d4d883f920f7c0c36a1be71a02aa0cde2aa22d1",
            "underlying": {
              "address": "0x4d4d883f920f7c0c36a1be71a02aa0cde2aa22d1",
              "name": "OPTICASH",
              "symbol": "OPCH",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "33333333.333333",
            "MinimumSwap": "333.333333",
            "BigValueThreshold": "6666666.666667",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "6666.666667",
            "MinimumSwapFee": "266.666667",
            "anyToken": {
              "address": "0x40b85dde9784bbb4529bd58d5636811f67e4c3dd",
              "name": "OPTICASH",
              "symbol": "anyOPCH",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://opticash.io/images/opticash_logo.jpg",
        "chainId": "56",
        "tokenid": "anyOPCH",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x3a806a3315e35b3f5f46111adb6e2baf4b14a70d": {
        "address": "0x3a806a3315e35b3f5f46111adb6e2baf4b14a70d",
        "anyToken": {
          "address": "0x5c1c19b9889dea8ed409203f55b48a68f76a44ca",
          "name": "Libera.Financial",
          "symbol": "anyLIBERA",
          "decimals": 18
        },
        "underlying": {
          "address": "0x3a806a3315e35b3f5f46111adb6e2baf4b14a70d",
          "name": "Libera.Financial",
          "symbol": "LIBERA",
          "decimals": 18
        },
        "destChains": {},
        "price": 1.25,
        "logoUrl": "https://assets.coingecko.com/coins/images/26194/large/20791.png",
        "chainId": "56",
        "tokenid": "anyLIBERA",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x684802262d614d0cd0c9571672f03dd9e85d7824": {
        "address": "0x684802262d614d0cd0c9571672f03dd9e85d7824",
        "anyToken": {
          "address": "0x1eb9d2335122ba30bcd871d933c3dfb02c3c4705",
          "name": "Archly",
          "symbol": "anyArc",
          "decimals": 18
        },
        "underlying": {
          "address": "0x684802262d614d0cd0c9571672f03dd9e85d7824",
          "name": "Archly",
          "symbol": "Arc",
          "decimals": 18
        },
        "destChains": {},
        "logoUrl": "https://docs.archly.fi/arc-logo-circle-128.png",
        "chainId": "56",
        "tokenid": "anyArc",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xd88ca08d8eec1e9e09562213ae83a7853ebb5d28": {
        "address": "0xd88ca08d8eec1e9e09562213ae83a7853ebb5d28",
        "anyToken": {
          "address": "0x85459b509956fbddb941a5f9f1774571564c576c",
          "name": "xWIN Token",
          "symbol": "anyXWIN",
          "decimals": 18
        },
        "underlying": {
          "address": "0xd88ca08d8eec1e9e09562213ae83a7853ebb5d28",
          "name": "xWIN Token",
          "symbol": "XWIN",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x6b920645dd0aed96e253c18b65d190252e82e0b0",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "15637314.385078",
            "MinimumSwap": "156.373144",
            "BigValueThreshold": "3127462.877016",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "3127.462877",
            "MinimumSwapFee": "125.098515",
            "anyToken": {
              "address": "0x6b920645dd0aed96e253c18b65d190252e82e0b0",
              "name": "xWIN Token",
              "symbol": "XWIN",
              "decimals": 18
            }
          }
        },
        "price": 0.262807,
        "logoUrl": "https://assets.coingecko.com/coins/images/15400/large/200x200_%28transparent_background%29.png",
        "chainId": "56",
        "tokenid": "anyXWIN",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x56d06a78ef8e95d6043341f24759e2834be6f97b": {
        "address": "0x56d06a78ef8e95d6043341f24759e2834be6f97b",
        "anyToken": {
          "address": "0x1268e30c7a8ce8b68d2e7666bd0848676eedf3df",
          "name": "DegenZoo",
          "symbol": "anywDZOO",
          "decimals": 18
        },
        "underlying": {
          "address": "0x56d06a78ef8e95d6043341f24759e2834be6f97b",
          "name": "DegenZoo",
          "symbol": "wDZOO",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xc97d6c52f3add91fa1c5287a453d7444aecbca83",
            "underlying": {
              "address": "0xc97d6c52f3add91fa1c5287a453d7444aecbca83",
              "name": "DegenZoo",
              "symbol": "DZOO",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "139202984.957447",
            "MinimumSwap": "1392.029849",
            "BigValueThreshold": "27840596.991489",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "556.81194",
            "MinimumSwapFee": "556.81194",
            "anyToken": {
              "address": "0x34965b810cd68d8c8b65ea503128faab028dd9ae",
              "name": "DegenZoo",
              "symbol": "anyDZOO",
              "decimals": 18
            }
          }
        },
        "price": 0.01372801,
        "logoUrl": "https://assets.coingecko.com/coins/images/29224/large/FAGWW5fe_400x400.jpeg",
        "chainId": "56",
        "tokenid": "anyDZOO",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x6ad9e9c098a45b2b41b519119c31c3dcb02accb2": {
        "address": "0x6ad9e9c098a45b2b41b519119c31c3dcb02accb2",
        "anyToken": {
          "address": "0x5aa6c109bb35ad2ae2f79fcd4802080e558a123e",
          "name": "PLAYZAP",
          "symbol": "anyPZP",
          "decimals": 18
        },
        "underlying": {
          "address": "0x6ad9e9c098a45b2b41b519119c31c3dcb02accb2",
          "name": "PLAYZAP",
          "symbol": "PZP",
          "decimals": 18
        },
        "destChains": {},
        "logoUrl": "https://raw.githubusercontent.com/0xSylvia/Images/main/photo_2023-03-24_10-42-57.jpg",
        "chainId": "56",
        "tokenid": "anyPZP",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x577c45921407e8aab950b073070c392c7bd07cdb": {
        "address": "0x577c45921407e8aab950b073070c392c7bd07cdb",
        "anyToken": {
          "address": "0x7531e1144095a517299bd602f1ed6967cfe97f14",
          "name": "KingKong Doge",
          "symbol": "anyKingKong",
          "decimals": 9
        },
        "underlying": {
          "address": "0x577c45921407e8aab950b073070c392c7bd07cdb",
          "name": "KingKong Doge",
          "symbol": "KingKong",
          "decimals": 9
        },
        "destChains": {
          "1": {
            "address": "0x577c45921407e8aab950b073070c392c7bd07cdb",
            "underlying": {
              "address": "0x577c45921407e8aab950b073070c392c7bd07cdb",
              "name": "KingKong Doge",
              "symbol": "KingKong",
              "decimals": 9
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "11325757575920598.025391",
            "MinimumSwap": "113257575759.20598",
            "BigValueThreshold": "2265151515184119.605225",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "2265151515184.119605",
            "MinimumSwapFee": "90606060607.364784",
            "anyToken": {
              "address": "0xfe4c11f7db2dde18f2952c52f37abbeb120ab728",
              "name": "KingKong Doge",
              "symbol": "anyKingKong",
              "decimals": 9
            }
          }
        },
        "logoUrl": "https://kingkongdoge.io/200x200logo.png",
        "chainId": "56",
        "tokenid": "anyKingKong",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x477bc8d23c634c154061869478bce96be6045d12": {
        "address": "0x477bc8d23c634c154061869478bce96be6045d12",
        "anyToken": {
          "address": "0x6cd39ac9988bb9c190e6ffc19214253f95b45d25",
          "name": "SeedifyFund",
          "symbol": "anySFUND",
          "decimals": 18
        },
        "underlying": {
          "address": "0x477bc8d23c634c154061869478bce96be6045d12",
          "name": "SeedifyFund",
          "symbol": "SFUND",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x45b51c1302e15036b8306c1e3107f9da1f8099e8",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "4672897.196262",
            "MinimumSwap": "46.728972",
            "BigValueThreshold": "934579.439252",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "934.579439",
            "MinimumSwapFee": "37.383178",
            "anyToken": {
              "address": "0x45b51c1302e15036b8306c1e3107f9da1f8099e8",
              "name": "SeedifyFund",
              "symbol": "SFUND",
              "decimals": 18
            }
          }
        },
        "price": 1.026,
        "logoUrl": "https://assets.coingecko.com/coins/images/14614/small/Favicon_Icon.png",
        "chainId": "56",
        "tokenid": "anySFUND",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xe356337a72d4990a3cfd4d13367659f14f304545": {
        "address": "0xe356337a72d4990a3cfd4d13367659f14f304545",
        "anyToken": {
          "address": "0x4153e7127488cfc999419adb340cb56c880d9464",
          "name": "Stroke-Prevention GenomicDAO",
          "symbol": "anyPCSP",
          "decimals": 18
        },
        "underlying": {
          "address": "0xe356337a72d4990a3cfd4d13367659f14f304545",
          "name": "Stroke-Prevention GenomicDAO",
          "symbol": "PCSP",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00459497,
        "logoUrl": "https://assets.coingecko.com/coins/images/29200/small/GenomicDao_logo.png",
        "chainId": "56",
        "tokenid": "anyPCSP",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x550d7984b7adfff88815e5528e12e322df6d3b9b": {
        "address": "0x550d7984b7adfff88815e5528e12e322df6d3b9b",
        "anyToken": {
          "address": "0xad677ec253923a04ce359a0568d1040487d53e36",
          "name": "PandAI Token",
          "symbol": "anyPANDAI",
          "decimals": 6
        },
        "underlying": {
          "address": "0x550d7984b7adfff88815e5528e12e322df6d3b9b",
          "name": "PandAI Token",
          "symbol": "PANDAI",
          "decimals": 6
        },
        "destChains": {
          "1": {
            "address": "0x971d0ff07adf0d99b9a95ea227e10ab7ba8d3950",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "63983620193230.532982",
            "MinimumSwap": "639836201.932305",
            "BigValueThreshold": "12796724038646.106597",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "12796724038.646107",
            "MinimumSwapFee": "511868961.545844",
            "anyToken": {
              "address": "0x971d0ff07adf0d99b9a95ea227e10ab7ba8d3950",
              "name": "PandAI Token",
              "symbol": "PANDAI",
              "decimals": 6
            }
          }
        },
        "price": 2.5687e-8,
        "logoUrl": "https://assets.coingecko.com/coins/images/29203/small/%C5%AFlll.jpeg",
        "chainId": "56",
        "tokenid": "anyPANDAI",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x0f8f39b92776d9136408280c7209bebe4351123b": {
        "address": "0x0f8f39b92776d9136408280c7209bebe4351123b",
        "anyToken": {
          "address": "0xe74ffef0994bb9ca11c5bcc0b7da601baf45def5",
          "name": "TIME Token",
          "symbol": "anyTIME",
          "decimals": 18
        },
        "underlying": {
          "address": "0x0f8f39b92776d9136408280c7209bebe4351123b",
          "name": "TIME Token",
          "symbol": "TIME",
          "decimals": 18
        },
        "destChains": {},
        "logoUrl": "https://bafybeid7an2dzhrxxicjcbhrnnxr374n22blotvindnxdejl7swxnbmtvq.ipfs.w3s.link/timetoken_128x128.png",
        "chainId": "56",
        "tokenid": "anyTIME_token",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xce1b3e5087e8215876af976032382dd338cf8401": {
        "address": "0xce1b3e5087e8215876af976032382dd338cf8401",
        "anyToken": {
          "address": "0x1a812d8b84d97117e5983bfa84273dfcccece98a",
          "name": "Thoreumv4 - Thoreum.AI",
          "symbol": "anyTHOREUM",
          "decimals": 18
        },
        "underlying": {
          "address": "0xce1b3e5087e8215876af976032382dd338cf8401",
          "name": "Thoreumv4 - Thoreum.AI",
          "symbol": "THOREUM",
          "decimals": 18
        },
        "destChains": {},
        "price": 35.42,
        "logoUrl": "https://assets.coingecko.com/coins/images/22759/small/Thoreum_V3_logo_200x200.png",
        "chainId": "56",
        "tokenid": "anyTHOREUM",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x20de22029ab63cf9a7cf5feb2b737ca1ee4c82a6": {
        "address": "0x20de22029ab63cf9a7cf5feb2b737ca1ee4c82a6",
        "anyToken": {
          "address": "0x3c2b521be49aae9208f4f9766a63216afaced4d7",
          "name": "Anyswap Wrapped CHESS",
          "symbol": "anyCHESS",
          "decimals": 18
        },
        "underlying": {
          "address": "0x20de22029ab63cf9a7cf5feb2b737ca1ee4c82a6",
          "name": "Chess",
          "symbol": "CHESS",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xd6123271f980d966b00ca4fca6c2c021f05e2e73",
            "underlying": {
              "address": "0xd6123271f980d966b00ca4fca6c2c021f05e2e73",
              "name": "Tranchess DAO Token",
              "symbol": "CHESS",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "0",
            "liquidityType": "INIT",
            "MaximumSwap": "19537355.42357",
            "MinimumSwap": "351.672398",
            "BigValueThreshold": "3907471.084714",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "3907.471085",
            "MinimumSwapFee": "312.597687",
            "anyToken": {
              "address": "0x5cdd7cd69cedb9b56b8ca47f844a0de16d8b5761",
              "name": "Anyswap Wrapped CHESS",
              "symbol": "anyCHESS",
              "decimals": 18
            }
          }
        },
        "price": 0.177997,
        "logoUrl": "https://assets.coingecko.com/coins/images/16964/large/logo_transparent_bg_200x200.png",
        "chainId": "56",
        "tokenid": "anyCHESS",
        "version": "UNDERLYINGV2",
        "router": "0xabd380327fe66724ffda91a87c772fb8d00be488",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x738ea75b01d8db931b4374c6ebd3de82d7d3a272": {
        "address": "0x738ea75b01d8db931b4374c6ebd3de82d7d3a272",
        "anyToken": {
          "address": "0xad5edc1a508a93f923b1c2ad9852f4d6876c7329",
          "name": "DUSD",
          "symbol": "anyDUSD",
          "decimals": 18
        },
        "underlying": {
          "address": "0x738ea75b01d8db931b4374c6ebd3de82d7d3a272",
          "name": "DUSD",
          "symbol": "DUSD",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xc4aa76d11b70d82025e7ec07620c928cdbe2a93a",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "250000000",
            "MinimumSwap": "2500",
            "BigValueThreshold": "50000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "50000",
            "MinimumSwapFee": "2000",
            "anyToken": {
              "address": "0xc4aa76d11b70d82025e7ec07620c928cdbe2a93a",
              "name": "DUSD",
              "symbol": "DUSD",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://raw.githubusercontent.com/0xSylvia/Images/main/LOGO%20200X200.png",
        "chainId": "56",
        "tokenid": "anyDUSD",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xbdeae1ca48894a1759a8374d63925f21f2ee2639": {
        "address": "0xbdeae1ca48894a1759a8374d63925f21f2ee2639",
        "anyToken": {
          "address": "0xa00387afe97f41ac28a399306a427ef60037cac3",
          "name": "EDU Coin",
          "symbol": "anyEDU",
          "decimals": 18
        },
        "underlying": {
          "address": "0xbdeae1ca48894a1759a8374d63925f21f2ee2639",
          "name": "EDU Coin",
          "symbol": "EDU",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x26aad156ba8efa501b32b42ffcdc8413f90e9c99",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "4201680.672269",
            "MinimumSwap": "42.016807",
            "BigValueThreshold": "840336.134454",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "840.336134",
            "MinimumSwapFee": "33.613445",
            "anyToken": {
              "address": "0x26aad156ba8efa501b32b42ffcdc8413f90e9c99",
              "name": "EDU Coin",
              "symbol": "EDU",
              "decimals": 18
            }
          }
        },
        "price": 1.12,
        "logoUrl": "https://assets.coingecko.com/coins/images/29948/small/EDU_Logo.png",
        "chainId": "56",
        "tokenid": "anyEDU",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x88479186bac914e4313389a64881f5ed0153c765": {
        "address": "0x88479186bac914e4313389a64881f5ed0153c765",
        "anyToken": {
          "address": "0x0a81d2e65aceb02f36fa6cd68dcd25fb786273c9",
          "name": "SquidGrow",
          "symbol": "anySquidGrow",
          "decimals": 19
        },
        "underlying": {
          "address": "0x88479186bac914e4313389a64881f5ed0153c765",
          "name": "SquidGrow",
          "symbol": "SquidGrow",
          "decimals": 19
        },
        "destChains": {
          "1": {
            "address": "0xd8fa690304d2b2824d918c0c7376e2823704557a",
            "underlying": {
              "address": "0xd8fa690304d2b2824d918c0c7376e2823704557a",
              "name": "SquidGrow",
              "symbol": "SquidGrow",
              "decimals": 9
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "482765279521096.842712",
            "MinimumSwap": "4827652795.210968",
            "BigValueThreshold": "96553055904219.368546",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "96553055904.219369",
            "MinimumSwapFee": "3862122236.168775",
            "anyToken": {
              "address": "0xaf5e31e1e4e1004722c63e61c2e477c148c229b1",
              "name": "SquidGrow",
              "symbol": "anySquidGrow",
              "decimals": 9
            }
          }
        },
        "price": 1.9242e-8,
        "logoUrl": "https://assets.coingecko.com/coins/images/26573/small/Squidgrow-Logo.png",
        "chainId": "56",
        "tokenid": "anySquidGrow",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x9158e70119d661ba0caeb2b392edd9565cac82b7": {
        "address": "0x9158e70119d661ba0caeb2b392edd9565cac82b7",
        "anyToken": {
          "address": "0xffcd6fbfb13e0b7198015ffc7dcfd9815f7837d0",
          "name": "ArtToken",
          "symbol": "anyARTT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x9158e70119d661ba0caeb2b392edd9565cac82b7",
          "name": "ArtToken",
          "symbol": "ARTT",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x374c1135911602a13ee041e6e6e848a14fa62320",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "217580504.786771",
            "MinimumSwap": "2175.805048",
            "BigValueThreshold": "43516100.957354",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "43516.100957",
            "MinimumSwapFee": "1740.644038",
            "anyToken": {
              "address": "0x374c1135911602a13ee041e6e6e848a14fa62320",
              "name": "ArtToken",
              "symbol": "ARTT",
              "decimals": 18
            }
          }
        },
        "logoUrl": "https://artt.network/wp-content/uploads/2022/08/artt-logo-240x66-1.png",
        "chainId": "56",
        "tokenid": "anyARTT",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xe4fae3faa8300810c835970b9187c268f55d998f": {
        "address": "0xe4fae3faa8300810c835970b9187c268f55d998f",
        "anyToken": {
          "address": "0x3d8015cc971627ee94445c40d6ce18336c24aff5",
          "name": "CateCoin",
          "symbol": "anyCATE",
          "decimals": 9
        },
        "underlying": {
          "address": "0xe4fae3faa8300810c835970b9187c268f55d998f",
          "name": "CateCoin",
          "symbol": "CATE",
          "decimals": 9
        },
        "destChains": {
          "1": {
            "address": "0xf05897cfe3ce9bbbfe0751cbe6b1b2c686848dcb",
            "underlying": {
              "address": "0xf05897cfe3ce9bbbfe0751cbe6b1b2c686848dcb",
              "name": "Catecoin",
              "symbol": "CATE",
              "decimals": 9
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "14645319648746.653544",
            "MinimumSwap": "146453196.487466",
            "BigValueThreshold": "2929063929749.330709",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "2929063929.749331",
            "MinimumSwapFee": "117162557.189973",
            "anyToken": {
              "address": "0x6ffd446cef7e60b7758e0ed836035738a8d18aa1",
              "name": "Catecoin",
              "symbol": "anyCATE",
              "decimals": 9
            }
          }
        },
        "price": 3.58241e-7,
        "logoUrl": "https://assets.coingecko.com/coins/images/15364/small/logo.png",
        "chainId": "56",
        "tokenid": "anyCATE",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x2348b010fa9c0ce30bb042d54c298a3411361a01": {
        "address": "0x2348b010fa9c0ce30bb042d54c298a3411361a01",
        "anyToken": {
          "address": "0x62c2604d23c268d2a1dcb282c77e780382e7612e",
          "name": "Land Of Conquest SLG",
          "symbol": "anySLG",
          "decimals": 18
        },
        "underlying": {
          "address": "0x2348b010fa9c0ce30bb042d54c298a3411361a01",
          "name": "Land Of Conquest SLG",
          "symbol": "SLG",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xfc0b60e0df5dc9d4b72d957ca2d251cee308019a",
            "underlying": {
              "address": "0xfc0b60e0df5dc9d4b72d957ca2d251cee308019a",
              "name": "Shattered Legion",
              "symbol": "SLG",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "201868983.79961",
            "MinimumSwap": "2018.689838",
            "BigValueThreshold": "40373796.759922",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "40373.79676",
            "MinimumSwapFee": "1614.95187",
            "anyToken": {
              "address": "0x4e7627ef41c52ec1e02bdf8808d9d25e4c270768",
              "name": "Shattered Legion",
              "symbol": "anySLG",
              "decimals": 18
            }
          }
        },
        "price": 0.02393736,
        "logoUrl": "https://assets.coingecko.com/coins/images/26436/small/shattered_legion.png",
        "chainId": "56",
        "tokenid": "anySLG",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xa7bd657c5838472ddf85ff0797a2e6fce8fd4833": {
        "address": "0xa7bd657c5838472ddf85ff0797a2e6fce8fd4833",
        "anyToken": {
          "address": "0xa98a1e1d5f8032944fabdb33464cb8a74ca356a3",
          "name": "Arbipad",
          "symbol": "anyARBI",
          "decimals": 18
        },
        "underlying": {
          "address": "0xa7bd657c5838472ddf85ff0797a2e6fce8fd4833",
          "name": "Arbipad",
          "symbol": "ARBI",
          "decimals": 18
        },
        "destChains": {},
        "logoUrl": "https://raw.githubusercontent.com/0xSylvia/Images/main/ARBIPAD.png",
        "chainId": "56",
        "tokenid": "anyARBI",
        "version": "UNDERLYINGV2",
        "router": "0x58892974758A4013377A45fad698D2FF1F08d98E",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      }
    },
    "1313161554": {
      "0xdfa46478f9e5ea86d57387849598dbfb2e964b02": {
        "address": "0xdfa46478f9e5ea86d57387849598dbfb2e964b02",
        "anyToken": {
          "address": "0xc9baa8cfdde8e328787e29b4b078abf2dadc2055",
          "name": "Mai Stablecoin",
          "symbol": "MAI",
          "decimals": 18
        },
        "underlying": {
          "address": "0xdfa46478f9e5ea86d57387849598dbfb2e964b02",
          "name": "Mai Stablecoin",
          "symbol": "MAI",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x8d6cebd76f18e1558d4db88138e2defb3909fad6",
            "underlying": {
              "address": "0x8d6cebd76f18e1558d4db88138e2defb3909fad6",
              "name": "Mai Stablecoin",
              "symbol": "MAI",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "5000000",
            "MinimumSwap": "12",
            "BigValueThreshold": "750000",
            "SwapFeeRatePerMillion": 0.02,
            "MaximumSwapFee": "1000",
            "MinimumSwapFee": "9.9",
            "anyToken": {
              "address": "0x4b641f607570b9053035780615f5b56a91f38f90",
              "name": "Mai Stablecoin",
              "symbol": "anyMAI",
              "decimals": 18
            }
          },
          "56": {
            "address": "0x3f56e0c36d275367b8c502090edf38289b3dea0d",
            "underlying": {
              "address": "0x3f56e0c36d275367b8c502090edf38289b3dea0d",
              "name": "Mai Stablecoin",
              "symbol": "MAI",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "5000000",
            "MinimumSwap": "12",
            "BigValueThreshold": "750000",
            "SwapFeeRatePerMillion": 0.02,
            "MaximumSwapFee": "1000",
            "MinimumSwapFee": "0.9",
            "anyToken": {
              "address": "0xc412ecccaa35621cfcbada4ce203e3ef78c4114a",
              "name": "Mai Stablecoin",
              "symbol": "anyMAI",
              "decimals": 18
            }
          }
        },
        "price": 0.995532,
        "logoUrl": "https://assets.coingecko.com/coins/images/15264/large/mimatic-red.png",
        "chainId": "1313161554",
        "tokenid": "anyMAI",
        "version": "UNDERLYINGV2",
        "router": "0xbfc044a234e45412ecfec2cd6aae2dd0c083a7cd",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xe4b9e004389d91e4134a28f19bd833cba1d994b6": {
        "address": "0xe4b9e004389d91e4134a28f19bd833cba1d994b6",
        "anyToken": {
          "address": "0xb12c13e66ade1f72f71834f2fc5082db8c091358",
          "name": "Frax",
          "symbol": "FRAX",
          "decimals": 18
        },
        "underlying": {
          "address": "0xe4b9e004389d91e4134a28f19bd833cba1d994b6",
          "name": "Frax",
          "symbol": "FRAX",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x853d955acef822db058eb8505911ed77f175b99e",
            "underlying": {
              "address": "0x853d955acef822db058eb8505911ed77f175b99e",
              "name": "Frax",
              "symbol": "FRAX",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "5000000",
            "MinimumSwap": "50",
            "BigValueThreshold": "1000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1000",
            "MinimumSwapFee": "40",
            "anyToken": {
              "address": "0x4f60a160d8c2dddaafe16fcc57566db84d674bd6",
              "name": "Frax",
              "symbol": "anyFRAX",
              "decimals": 18
            }
          }
        },
        "price": 0.999069,
        "logoUrl": "https://assets.coingecko.com/coins/images/13422/large/frax_logo.png",
        "chainId": "1313161554",
        "tokenid": "anyFRAX",
        "version": "UNDERLYINGV2",
        "router": "0xbfc044a234e45412ecfec2cd6aae2dd0c083a7cd",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xbb8831701e68b99616bf940b7dafbeb4cdb23e0b": {
        "address": "0xbb8831701e68b99616bf940b7dafbeb4cdb23e0b",
        "anyToken": {
          "address": "0x735abe48e8782948a37c7765ecb76b98cde97b0f",
          "name": "Frax Share",
          "symbol": "FXS",
          "decimals": 18
        },
        "underlying": {
          "address": "0xbb8831701e68b99616bf940b7dafbeb4cdb23e0b",
          "name": "Frax Share",
          "symbol": "FXS",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x3432b6a60d23ca0dfca7761b7ab56459d9c964d0",
            "underlying": {
              "address": "0x3432b6a60d23ca0dfca7761b7ab56459d9c964d0",
              "name": "Frax Share",
              "symbol": "FXS",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "250000",
            "MinimumSwap": "4.5",
            "BigValueThreshold": "50000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "50",
            "MinimumSwapFee": "4",
            "anyToken": {
              "address": "0x685b63cfe0179b3efb70a01dcb1d648549aa192d",
              "name": "Frax Share",
              "symbol": "anyFXS",
              "decimals": 18
            }
          }
        },
        "price": 6.89,
        "logoUrl": "https://assets.coingecko.com/coins/images/13423/large/frax_share.png",
        "chainId": "1313161554",
        "tokenid": "anyFXS",
        "version": "UNDERLYINGV2",
        "router": "0xbfc044a234e45412ecfec2cd6aae2dd0c083a7cd",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xd126b48c072f4668e944a8895bc74044d5f2e85b": {
        "address": "0xd126b48c072f4668e944a8895bc74044d5f2e85b",
        "anyToken": {
          "address": "0x97513e975a7fa9072c72c92d8000b0db90b163c5",
          "name": "MANUFACTORY",
          "symbol": "MNFT",
          "decimals": 18
        },
        "underlying": {
          "address": "0xd126b48c072f4668e944a8895bc74044d5f2e85b",
          "name": "MANUFACTORY",
          "symbol": "MNFT",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x36953b5ec00a13edceceb3af258d034913d2a79d",
            "underlying": {
              "address": "0x36953b5ec00a13edceceb3af258d034913d2a79d",
              "name": "MANUFACTORY",
              "symbol": "MNFT",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "84000000",
            "MinimumSwap": "167",
            "BigValueThreshold": "17000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "16667",
            "MinimumSwapFee": "84",
            "anyToken": {
              "address": "0x385ff2b2fc61164604c5bdc708ccff611fe9c42d",
              "name": "MANUFACTORY",
              "symbol": "anyMNFT",
              "decimals": 18
            }
          }
        },
        "price": 0.00140001,
        "logoUrl": "https://assets.coingecko.com/coins/images/21677/large/logo1_%288%29.png",
        "chainId": "1313161554",
        "tokenid": "anyMNFT",
        "version": "UNDERLYINGV2",
        "router": "0xbfc044a234e45412ecfec2cd6aae2dd0c083a7cd",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x90eb16621274fb47a071001fbbf7550948874cb5": {
        "address": "0x90eb16621274fb47a071001fbbf7550948874cb5",
        "anyToken": {
          "address": "0xd6070ae98b8069de6b494332d1a1a81b6179d960",
          "name": "Feisty Doge NFT",
          "symbol": "NFD",
          "decimals": 18
        },
        "underlying": {
          "address": "0x90eb16621274fb47a071001fbbf7550948874cb5",
          "name": "Feisty Doge NFT",
          "symbol": "NFD",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xdfdb7f72c1f195c5951a234e8db9806eb0635346",
            "underlying": {
              "address": "0xdfdb7f72c1f195c5951a234e8db9806eb0635346",
              "name": "Feisty Doge NFT",
              "symbol": "NFD",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "50000000000",
            "MinimumSwap": "890560",
            "BigValueThreshold": "10000000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "9895112",
            "MinimumSwapFee": "791610",
            "anyToken": {
              "address": "0xe008ff5483d5c0214911ba6cbdaccf822436d165",
              "name": "Feisty Doge NFT",
              "symbol": "anyNFD",
              "decimals": 18
            }
          },
          "56": {
            "address": "0x0fe9778c005a5a6115cbe12b0568a2d50b765a51",
            "underlying": {
              "address": "0x0fe9778c005a5a6115cbe12b0568a2d50b765a51",
              "name": "Feisty Doge NFT",
              "symbol": "NFD",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "50000000000",
            "MinimumSwap": "98952",
            "BigValueThreshold": "10000000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "9895112",
            "MinimumSwapFee": "49476",
            "anyToken": {
              "address": "0x41a072b1c8d716721e407640e5b1fdcc714239ab",
              "name": "Feisty Doge NFT",
              "symbol": "anyNFD",
              "decimals": 18
            }
          }
        },
        "price": 0.00002404,
        "logoUrl": "https://assets.coingecko.com/coins/images/17834/large/doge-fractionalized.png",
        "chainId": "1313161554",
        "tokenid": "anyNFD",
        "version": "UNDERLYINGV2",
        "router": "0xbfc044a234e45412ecfec2cd6aae2dd0c083a7cd",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xe723111a6ac865eb6e2d62e87432bdc6e2c4a86e": {
        "address": "0xe723111a6ac865eb6e2d62e87432bdc6e2c4a86e",
        "anyToken": {
          "address": "0x4792c1ecb969b036eb51330c63bd27899a13d84e",
          "name": "Skill Token",
          "symbol": "SKILL",
          "decimals": 18
        },
        "underlying": {
          "address": "0xe723111a6ac865eb6e2d62e87432bdc6e2c4a86e",
          "name": "Skill Token",
          "symbol": "SKILL",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x154a9f9cbd3449ad22fdae23044319d6ef2a1fab",
            "underlying": {
              "address": "0x154a9f9cbd3449ad22fdae23044319d6ef2a1fab",
              "name": "CryptoBladesSkillToken",
              "symbol": "SKILL",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "1089324.62",
            "MinimumSwap": "2.18",
            "BigValueThreshold": "217864.92",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "217.86",
            "MinimumSwapFee": "1.09",
            "anyToken": {
              "address": "0xb027c02aff109a545e4ce4fdc08b9597030c4ef6",
              "name": "OddzToken",
              "symbol": "anySKILL",
              "decimals": 18
            }
          }
        },
        "price": 0.522966,
        "logoUrl": "https://assets.coingecko.com/coins/images/15334/large/cryptoblade.PNG",
        "chainId": "1313161554",
        "tokenid": "anySKILL",
        "version": "UNDERLYINGV2",
        "router": "0xbfc044a234e45412ecfec2cd6aae2dd0c083a7cd",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x2efedebd6e29963511589731a33311196f00eacb": {
        "address": "0x2efedebd6e29963511589731a33311196f00eacb",
        "anyToken": {
          "address": "0x559f7afc3312ec94a8cc0dd6275716c68d345787",
          "name": "Anyswap Adapter Impossible Decentralized Access Token",
          "symbol": "AnyIDIA",
          "decimals": 18
        },
        "underlying": {
          "address": "0x2efedebd6e29963511589731a33311196f00eacb",
          "name": "Impossible Decentralized Incubator Access Token",
          "symbol": "IDIA",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xd5b87813a5ecb2eac24b6b3f2d4b8b69f583af4e",
            "underlying": {
              "address": "0xd5b87813a5ecb2eac24b6b3f2d4b8b69f583af4e",
              "name": "Impossible Decentralized Incubator Access Token",
              "symbol": "IDIA",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "0",
            "liquidityType": "INIT",
            "MaximumSwap": "13817422.11",
            "MinimumSwap": "248.71",
            "BigValueThreshold": "2763484.42",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "2763.48",
            "MinimumSwapFee": "221.078",
            "anyToken": {
              "address": "0xd91903d548f19c0fc0a6b9ed09d2f72b4dfe7144",
              "name": "Anyswap Adapter Impossible Decentralized Incubator Access Token",
              "symbol": "AnyIDIA",
              "decimals": 18
            }
          },
          "56": {
            "address": "0x0b15ddf19d47e6a86a56148fb4afffc6929bcb89",
            "underlying": {
              "address": "0x0b15ddf19d47e6a86a56148fb4afffc6929bcb89",
              "name": "ImpossibleDecentralizedIncubat",
              "symbol": "IDIA",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "0",
            "liquidityType": "INIT",
            "MaximumSwap": "13817422.11",
            "MinimumSwap": "27.634",
            "BigValueThreshold": "2763484.42",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "2763.48",
            "MinimumSwapFee": "13.817",
            "anyToken": {
              "address": "0x35bc8f36ab08fc1b484d4c921a6f3b3c75e6d15d",
              "name": "Anyswap Adapter Impossible Decentralized Access Token",
              "symbol": "AnyIDIA",
              "decimals": 18
            }
          }
        },
        "price": 0.03236612,
        "logoUrl": "https://assets.coingecko.com/coins/images/17803/large/IDIA.png",
        "chainId": "1313161554",
        "tokenid": "anyIDIAv2",
        "version": "UNDERLYINGV2",
        "router": "0xbfc044a234e45412ecfec2cd6aae2dd0c083a7cd",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xfc56694ab428e7b4a03b8299b502d4598d945217": {
        "address": "0xfc56694ab428e7b4a03b8299b502d4598d945217",
        "anyToken": {
          "address": "0x86b3f23b6e90f5bbfac59b5b2661134ef8ffd255",
          "name": "Scorefam",
          "symbol": "anySFT",
          "decimals": 8
        },
        "underlying": {
          "address": "0xfc56694ab428e7b4a03b8299b502d4598d945217",
          "name": "Scorefam",
          "symbol": "SFT",
          "decimals": 8
        },
        "destChains": {
          "1": {
            "address": "0x0aabcc65ef352ad84b1326df188c95b6ab856c1c",
            "underlying": {
              "address": "0x0aabcc65ef352ad84b1326df188c95b6ab856c1c",
              "name": "Scorefam",
              "symbol": "SFT",
              "decimals": 8
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "139236981.34",
            "MinimumSwap": "2506.26",
            "BigValueThreshold": "27847396.27",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "27847.4",
            "MinimumSwapFee": "2227.791",
            "anyToken": {
              "address": "0x6574e2c013171cd50a6d34e588906047a0d12f2c",
              "name": "Scorefam",
              "symbol": "anySFT",
              "decimals": 8
            }
          },
          "56": {
            "address": "0xcb73918ac58d0c90d71c7992637c61094c15305b",
            "underlying": {
              "address": "0xcb73918ac58d0c90d71c7992637c61094c15305b",
              "name": "Scorefam",
              "symbol": "SFT",
              "decimals": 8
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "139236981.34",
            "MinimumSwap": "278.473",
            "BigValueThreshold": "27847396.27",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "27847.4",
            "MinimumSwapFee": "139.236",
            "anyToken": {
              "address": "0x0ebddb1ef6d508b89bfd62b26d162c13f05be477",
              "name": "Scorefam",
              "symbol": "anySFT",
              "decimals": 8
            }
          }
        },
        "logoUrl": "https://s2.coinmarketcap.com/static/img/coins/64x64/19914.png",
        "chainId": "1313161554",
        "tokenid": "anySFT",
        "version": "UNDERLYINGV2",
        "router": "0xbfc044a234e45412ecfec2cd6aae2dd0c083a7cd",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x513c3200f227ebb62e3b3d00b7a83779643a71cf": {
        "address": "0x513c3200f227ebb62e3b3d00b7a83779643a71cf",
        "anyToken": {
          "address": "0x667fd83e24ca1d935d36717d305d54fa0cac991c",
          "name": "Uplift",
          "symbol": "anyLIFT",
          "decimals": 18
        },
        "underlying": {
          "address": "0x513c3200f227ebb62e3b3d00b7a83779643a71cf",
          "name": "Uplift",
          "symbol": "LIFT",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x513c3200f227ebb62e3b3d00b7a83779643a71cf",
            "underlying": {
              "address": "0x513c3200f227ebb62e3b3d00b7a83779643a71cf",
              "name": "Uplift",
              "symbol": "LIFT",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "140541974.82837",
            "MinimumSwap": "2529.755547",
            "BigValueThreshold": "28108394.965674",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "28108.394966",
            "MinimumSwapFee": "2248.671597",
            "anyToken": {
              "address": "0x495b56e08e20c0b6924cd4cadc9bf4146a64bb52",
              "name": "Uplift",
              "symbol": "anyLIFT",
              "decimals": 18
            }
          }
        },
        "price": 0.02561364,
        "logoUrl": "https://assets.coingecko.com/coins/images/20666/large/logo-200x200.png",
        "chainId": "1313161554",
        "tokenid": "anyLIFT",
        "version": "UNDERLYINGV2",
        "router": "0xbfc044a234e45412ecfec2cd6aae2dd0c083a7cd",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      }
    }
  },
  "NATIVE": {
    "1": {
      "0x7825e833d495f3d1c28872415a4aee339d26ac88": {
        "address": "0x7825e833d495f3d1c28872415a4aee339d26ac88",
        "anyToken": {
          "address": "0xcaf5191fc480f43e4df80106c7695eca56e48b18",
          "name": "pTokens TLOS",
          "symbol": "anyTLOS",
          "decimals": 18
        },
        "underlying": {
          "address": "0x7825e833d495f3d1c28872415a4aee339d26ac88",
          "name": "pTokens TLOS",
          "symbol": "TLOS",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xb6c53431608e626ac81a9776ac3e999c5556717c",
            "underlying": {
              "address": "0xb6c53431608e626ac81a9776ac3e999c5556717c",
              "name": "pTokens TLOS",
              "symbol": "TLOS",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "8800000",
            "MinimumSwap": "18",
            "BigValueThreshold": "1800000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1755",
            "MinimumSwapFee": "9",
            "anyToken": {
              "address": "0x7f102dbb31b41e359a05b2291bb71d8efcdaeacd",
              "name": "pTokens TLOS",
              "symbol": "anyTLOS",
              "decimals": 18
            }
          }
        },
        "price": 0.204591,
        "logoUrl": "https://assets.coingecko.com/coins/images/7588/large/TLOS_200.png",
        "chainId": "1",
        "tokenid": "anyTLOS",
        "version": "NATIVE",
        "router": "0xe95fd76cf16008c12ff3b3a937cb16cd9cc20284",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x4e15361fd6b4bb609fa63c81a2be19d873717870": {
        "address": "0x4e15361fd6b4bb609fa63c81a2be19d873717870",
        "anyToken": {
          "address": "0xb01371072fdcb9b4433b855e16a682b461f94ab3",
          "name": "Fantom Token",
          "symbol": "anyFTM",
          "decimals": 18
        },
        "underlying": {
          "address": "0x4e15361fd6b4bb609fa63c81a2be19d873717870",
          "name": "FantomToken",
          "symbol": "FTM",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xad29abb318791d579433d831ed122afeaf29dcfe",
            "underlying": {
              "address": "0xad29abb318791d579433d831ed122afeaf29dcfe",
              "name": "Fantom",
              "symbol": "FTM",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "2500000",
            "MinimumSwap": "4.8",
            "BigValueThreshold": "500000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "481",
            "MinimumSwapFee": "2.4",
            "anyToken": {
              "address": "0xd3a33b8222ba7b25a0ea2a6ddcda237c154046af",
              "name": "Fantom",
              "symbol": "anyFTM",
              "decimals": 18
            }
          },
          "1313161554": {
            "address": "0xb44a9b6905af7c801311e8f4e76932ee959c663c",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "2500000",
            "MinimumSwap": "4.8",
            "BigValueThreshold": "500000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "481",
            "MinimumSwapFee": "2.4",
            "anyToken": {
              "address": "0xb44a9b6905af7c801311e8f4e76932ee959c663c",
              "name": "Fantom",
              "symbol": "FTM",
              "decimals": 18
            }
          }
        },
        "price": 0.357242,
        "logoUrl": "https://assets.coingecko.com/coins/images/4001/large/Fantom.png",
        "chainId": "1",
        "tokenid": "anyFTM",
        "version": "NATIVE",
        "router": "0xe95fd76cf16008c12ff3b3a937cb16cd9cc20284",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x65ef703f5594d2573eb71aaf55bc0cb548492df4": {
        "address": "0x65ef703f5594d2573eb71aaf55bc0cb548492df4",
        "anyToken": {
          "address": "0x9fb9a33956351cf4fa040f65a13b835a3c8764e3",
          "name": "Multichain",
          "symbol": "anyMULTI",
          "decimals": 18
        },
        "underlying": {
          "address": "0x65ef703f5594d2573eb71aaf55bc0cb548492df4",
          "name": "Multichain",
          "symbol": "MULTI",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x9fb9a33956351cf4fa040f65a13b835a3c8764e3",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "1200000",
            "MinimumSwap": "2",
            "BigValueThreshold": "300000",
            "SwapFeeRatePerMillion": 0,
            "MaximumSwapFee": "0",
            "MinimumSwapFee": "0",
            "anyToken": {
              "address": "0x9fb9a33956351cf4fa040f65a13b835a3c8764e3",
              "name": "Multichain",
              "symbol": "MULTI",
              "decimals": 18
            }
          }
        },
        "price": 6.47,
        "logoUrl": "https://assets.coingecko.com/coins/images/22087/large/1_Wyot-SDGZuxbjdkaOeT2-A.png",
        "chainId": "1",
        "tokenid": "anyMULTI",
        "version": "NATIVE",
        "router": "0xe95fd76cf16008c12ff3b3a937cb16cd9cc20284",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0": {
        "address": "0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0",
        "anyToken": {
          "address": "0x1cb1284cf62c3e593a8f49eef3db37ad20467bed",
          "name": "Matic Token",
          "symbol": "anyMATIC",
          "decimals": 18
        },
        "underlying": {
          "address": "0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0",
          "name": "Matic Token",
          "symbol": "MATIC",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xcc42724c6683b7e57334c4e856f4c9965ed682bd",
            "underlying": {
              "address": "0xcc42724c6683b7e57334c4e856f4c9965ed682bd",
              "name": "Matic Token",
              "symbol": "MATIC",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "2500000",
            "MinimumSwap": "3.6",
            "BigValueThreshold": "500000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "500",
            "MinimumSwapFee": "1.8",
            "anyToken": {
              "address": "0xbf731bfa03e0095a2039e7e4c3b466efb7f3ec4e",
              "name": "Matic Token",
              "symbol": "anyMATIC",
              "decimals": 18
            }
          },
          "1313161554": {
            "address": "0x6ab6d61428fde76768d7b45d8bfeec19c6ef91a8",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "2500000",
            "MinimumSwap": "5",
            "BigValueThreshold": "500000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "500",
            "MinimumSwapFee": "2.5",
            "anyToken": {
              "address": "0x6ab6d61428fde76768d7b45d8bfeec19c6ef91a8",
              "name": "Matic",
              "symbol": "MATIC",
              "decimals": 18
            }
          }
        },
        "price": 0.872361,
        "logoUrl": "https://assets.coingecko.com/coins/images/4713/large/matic-token-icon.png",
        "chainId": "1",
        "tokenid": "anyMATIC",
        "version": "NATIVE",
        "router": "0xe95fd76cf16008c12ff3b3a937cb16cd9cc20284",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x970b9bb2c0444f5e81e9d0efb84c8ccdcdcaf84d": {
        "address": "0x970b9bb2c0444f5e81e9d0efb84c8ccdcdcaf84d",
        "anyToken": {
          "address": "0xe6d9c0acf30194e2a5ae9c1c8342ac49e98a4b0a",
          "name": "Fuse Token",
          "symbol": "anyFUSE",
          "decimals": 18
        },
        "underlying": {
          "address": "0x970b9bb2c0444f5e81e9d0efb84c8ccdcdcaf84d",
          "name": "Fuse Token",
          "symbol": "FUSE",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x5857c96dae9cf8511b08cb07f85753c472d36ea3",
            "underlying": {
              "address": "0x5857c96dae9cf8511b08cb07f85753c472d36ea3",
              "name": "Fuse Token on BSC",
              "symbol": "FUSE",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "7800000",
            "MinimumSwap": "16",
            "BigValueThreshold": "1600000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1554",
            "MinimumSwapFee": "8",
            "anyToken": {
              "address": "0x43242138833e8d360e84920462a483eb9e35c8b4",
              "name": "Fuse Token on BSC",
              "symbol": "anyFUSE",
              "decimals": 18
            }
          }
        },
        "price": 0.067502,
        "logoUrl": "https://assets.coingecko.com/coins/images/10347/large/vUXKHEe.png",
        "chainId": "1",
        "tokenid": "anyFUSE",
        "version": "NATIVE",
        "router": "0xe95fd76cf16008c12ff3b3a937cb16cd9cc20284",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x4fabb145d64652a948d72533023f6e7a623c7c53": {
        "address": "0x4fabb145d64652a948d72533023f6e7a623c7c53",
        "anyToken": {
          "address": "0xd13eb71515dc48a8a367d12f844e5737bab415df",
          "name": "Binance USD",
          "symbol": "anyBUSD",
          "decimals": 18
        },
        "underlying": {
          "address": "0x4fabb145d64652a948d72533023f6e7a623c7c53",
          "name": "BinanceUSD",
          "symbol": "BUSD",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xe9e7cea3dedca5984780bafc599bd69add087d56",
            "underlying": {
              "address": "0xe9e7cea3dedca5984780bafc599bd69add087d56",
              "name": "Binance-Peg BUSD",
              "symbol": "BUSD",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "5000000",
            "MinimumSwap": "10",
            "BigValueThreshold": "1000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1000",
            "MinimumSwapFee": "5",
            "anyToken": {
              "address": "0xab7efd5333f5a636488cda6f8c1b5a128977ab93",
              "name": "Binance-Peg BUSD Token",
              "symbol": "anyBUSD",
              "decimals": 18
            }
          },
          "1313161554": {
            "address": "0x5d9ab5522c64e1f6ef5e3627eccc093f56167818",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "5000000",
            "MinimumSwap": "10",
            "BigValueThreshold": "1000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1000",
            "MinimumSwapFee": "5",
            "anyToken": {
              "address": "0x5d9ab5522c64e1f6ef5e3627eccc093f56167818",
              "name": "Binance-Peg BUSD Token",
              "symbol": "BUSD",
              "decimals": 18
            }
          }
        },
        "price": 1,
        "logoUrl": "https://assets.coingecko.com/coins/images/9576/large/BUSD.png",
        "chainId": "1",
        "tokenid": "anyBUSD",
        "version": "NATIVE",
        "router": "0xe95fd76cf16008c12ff3b3a937cb16cd9cc20284",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x0e5c8c387c5eba2ecbc137ad012aed5fe729e251": {
        "address": "0x0e5c8c387c5eba2ecbc137ad012aed5fe729e251",
        "anyToken": {
          "address": "0x84e9a6f9d240fdd33801f7135908bfa16866939a",
          "name": "Rangers Protocol Gas",
          "symbol": "anyRPG",
          "decimals": 18
        },
        "underlying": {
          "address": "0x0e5c8c387c5eba2ecbc137ad012aed5fe729e251",
          "name": "Rangers Protocol Gas",
          "symbol": "RPG",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xc2098a8938119a52b1f7661893c0153a6cb116d5",
            "underlying": {
              "address": "0xc2098a8938119a52b1f7661893c0153a6cb116d5",
              "name": "Rangers Protocol Gas",
              "symbol": "RPG",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "3000000",
            "MinimumSwap": "5.8",
            "BigValueThreshold": "600000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "572",
            "MinimumSwapFee": "2.9",
            "anyToken": {
              "address": "0xaf2d1c5374ee99b167dd8567f2819c7567f1f1a0",
              "name": "Rangers Protocol Gas",
              "symbol": "anyRPG",
              "decimals": 18
            }
          }
        },
        "price": 0.812894,
        "logoUrl": "https://assets.coingecko.com/coins/images/18791/small/tO8MlqiM_400x400.png",
        "chainId": "1",
        "tokenid": "anyRPG",
        "version": "NATIVE",
        "router": "0xe95fd76cf16008c12ff3b3a937cb16cd9cc20284",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x8c543aed163909142695f2d2acd0d55791a9edb9": {
        "address": "0x8c543aed163909142695f2d2acd0d55791a9edb9",
        "anyToken": {
          "address": "0x15a3fe3e6b8a5c01b1bfe72c76660c897368eec0",
          "name": "VLX",
          "symbol": "anyVLX",
          "decimals": 18
        },
        "underlying": {
          "address": "0x8c543aed163909142695f2d2acd0d55791a9edb9",
          "name": "VLX",
          "symbol": "VLX",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0xe9c803f48dffe50180bd5b01dc04da939e3445fc",
            "underlying": {
              "address": "0xe9c803f48dffe50180bd5b01dc04da939e3445fc",
              "name": "Velas",
              "symbol": "VLX",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "121345233.255875",
            "MinimumSwap": "242.690466",
            "BigValueThreshold": "24269046.651175",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "24269.046651",
            "MinimumSwapFee": "121.345233",
            "anyToken": {
              "address": "0xa8fced5c6b791ca66faa05ceea6636d5382572fc",
              "name": "Velas",
              "symbol": "anyVLX",
              "decimals": 18
            }
          }
        },
        "price": 0.01268251,
        "logoUrl": "https://assets.coingecko.com/coins/images/23900/large/AJADWZpI_400x400.png",
        "chainId": "1",
        "tokenid": "anyVLX",
        "version": "NATIVE",
        "router": "0xe95fd76cf16008c12ff3b3a937cb16cd9cc20284",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x05d3606d5c81eb9b7b18530995ec9b29da05faba": {
        "address": "0x05d3606d5c81eb9b7b18530995ec9b29da05faba",
        "anyToken": {
          "address": "0x80fd8e18cc59177b4dbd2fae9c0efb8bf87edc1f",
          "name": "TomoChain",
          "symbol": "TOMOE",
          "decimals": 18
        },
        "underlying": {
          "address": "0x05d3606d5c81eb9b7b18530995ec9b29da05faba",
          "name": "TomoChain",
          "symbol": "TOMOE",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x9a6d5c2e0376572f214a35f832740e412932d277",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "8474576.271186",
            "MinimumSwap": "16.949152",
            "BigValueThreshold": "1694915.254237",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1694.915254",
            "MinimumSwapFee": "8.474576",
            "anyToken": {
              "address": "0x9a6d5c2e0376572f214a35f832740e412932d277",
              "name": "TomoChain",
              "symbol": "TOMOE",
              "decimals": 18
            }
          }
        },
        "price": 1.31,
        "logoUrl": "https://assets.coingecko.com/coins/images/12646/large/tomoe_logo.png",
        "chainId": "1",
        "tokenid": "anyTOMO",
        "version": "NATIVE",
        "router": "0xe8231f65733DD9e1BA8898bd1C31e7254e393486",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xb50721bcf8d664c30412cfbc6cf7a15145234ad1": {
        "address": "0xb50721bcf8d664c30412cfbc6cf7a15145234ad1",
        "anyToken": {
          "address": "0x5a68f06ef5e3f3b65ac466e74f4c61c3ab4d171b",
          "name": "Arbitrum",
          "symbol": "anyARB",
          "decimals": 18
        },
        "underlying": {
          "address": "0xb50721bcf8d664c30412cfbc6cf7a15145234ad1",
          "name": "Arbitrum",
          "symbol": "ARB",
          "decimals": 18
        },
        "destChains": {},
        "price": 1.14,
        "logoUrl": "https://assets.coingecko.com/coins/images/29463/large/arb.jpeg",
        "chainId": "1",
        "tokenid": "anyARB",
        "version": "NATIVE",
        "router": "0xe8231f65733DD9e1BA8898bd1C31e7254e393486",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xa1f82e14bc09a1b42710df1a8a999b62f294e592": {
        "address": "0xa1f82e14bc09a1b42710df1a8a999b62f294e592",
        "anyToken": {
          "address": "0x2a7c71cef3f28ab1097da4686c817c8c6d148c72",
          "name": "ethereum Conflux",
          "symbol": "anyeCFX",
          "decimals": 18
        },
        "underlying": {
          "address": "0xa1f82e14bc09a1b42710df1a8a999b62f294e592",
          "name": "ethereum Conflux",
          "symbol": "eCFX",
          "decimals": 18
        },
        "destChains": {
          "56": {
            "address": "0x045c4324039da91c52c55df5d785385aab073dcf",
            "underlying": {
              "address": "0x045c4324039da91c52c55df5d785385aab073dcf",
              "name": "BSC Conflux",
              "symbol": "bCFX",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "40000000",
            "MinimumSwap": "80",
            "BigValueThreshold": "8000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "7825",
            "MinimumSwapFee": "10",
            "anyToken": {
              "address": "0x994cd2bfdeba7663fb561948ae85882ab9e4f20c",
              "name": "BSC Conflux",
              "symbol": "anybCFX",
              "decimals": 18
            }
          }
        },
        "price": 0.311815,
        "logoUrl": "https://assets.coingecko.com/coins/images/13079/large/3vuYMbjN.png",
        "chainId": "1",
        "tokenid": "anyCFX",
        "version": "NATIVE",
        "router": "0xe8231f65733DD9e1BA8898bd1C31e7254e393486",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      }
    },
    "56": {
      "0xe9e7cea3dedca5984780bafc599bd69add087d56": {
        "address": "0xe9e7cea3dedca5984780bafc599bd69add087d56",
        "anyToken": {
          "address": "0xab7efd5333f5a636488cda6f8c1b5a128977ab93",
          "name": "Binance-Peg BUSD Token",
          "symbol": "anyBUSD",
          "decimals": 18
        },
        "underlying": {
          "address": "0xe9e7cea3dedca5984780bafc599bd69add087d56",
          "name": "Binance-Peg BUSD",
          "symbol": "BUSD",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x4fabb145d64652a948d72533023f6e7a623c7c53",
            "underlying": {
              "address": "0x4fabb145d64652a948d72533023f6e7a623c7c53",
              "name": "BinanceUSD",
              "symbol": "BUSD",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "5000000",
            "MinimumSwap": "80",
            "BigValueThreshold": "1000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1000",
            "MinimumSwapFee": "40",
            "anyToken": {
              "address": "0xd13eb71515dc48a8a367d12f844e5737bab415df",
              "name": "Binance USD",
              "symbol": "anyBUSD",
              "decimals": 18
            }
          },
          "1313161554": {
            "address": "0x5d9ab5522c64e1f6ef5e3627eccc093f56167818",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "5000000",
            "MinimumSwap": "10",
            "BigValueThreshold": "1000000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1000",
            "MinimumSwapFee": "5",
            "anyToken": {
              "address": "0x5d9ab5522c64e1f6ef5e3627eccc093f56167818",
              "name": "Binance-Peg BUSD Token",
              "symbol": "BUSD",
              "decimals": 18
            }
          }
        },
        "price": 1,
        "logoUrl": "https://assets.coingecko.com/coins/images/9576/large/BUSD.png",
        "chainId": "56",
        "tokenid": "anyBUSD",
        "version": "NATIVE",
        "router": "0xf9736ec3926703e85c843fc972bd89a7f8e827c0",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x98936bde1cf1bff1e7a8012cee5e2583851f2067": {
        "address": "0x98936bde1cf1bff1e7a8012cee5e2583851f2067",
        "anyToken": {
          "address": "0x6043c1600cf0a9c66fc0626b36b4e1e4d59098ba",
          "name": "Annex",
          "symbol": "anyANN",
          "decimals": 18
        },
        "underlying": {
          "address": "0x98936bde1cf1bff1e7a8012cee5e2583851f2067",
          "name": "Annex",
          "symbol": "ANN",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00350338,
        "logoUrl": "https://assets.coingecko.com/coins/images/18180/large/ANN_logo_200x200.png",
        "chainId": "56",
        "tokenid": "anyANN",
        "version": "NATIVE",
        "router": "0xf9736ec3926703e85c843fc972bd89a7f8e827c0",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xa184088a740c695e156f91f5cc086a06bb78b827": {
        "address": "0xa184088a740c695e156f91f5cc086a06bb78b827",
        "anyToken": {
          "address": "0xdae0e692805350d738202e0a7d8136da3e9078d9",
          "name": "AUTOv2",
          "symbol": "anyAUTO",
          "decimals": 18
        },
        "underlying": {
          "address": "0xa184088a740c695e156f91f5cc086a06bb78b827",
          "name": "AUTOv2",
          "symbol": "AUTO",
          "decimals": 18
        },
        "destChains": {},
        "price": 23.36,
        "logoUrl": "https://assets.coingecko.com/coins/images/13751/large/autofarm_icon_200x200.png",
        "chainId": "56",
        "tokenid": "anyAUTO",
        "version": "NATIVE",
        "router": "0xf9736ec3926703e85c843fc972bd89a7f8e827c0",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xb6c53431608e626ac81a9776ac3e999c5556717c": {
        "address": "0xb6c53431608e626ac81a9776ac3e999c5556717c",
        "anyToken": {
          "address": "0x7f102dbb31b41e359a05b2291bb71d8efcdaeacd",
          "name": "pTokens TLOS",
          "symbol": "anyTLOS",
          "decimals": 18
        },
        "underlying": {
          "address": "0xb6c53431608e626ac81a9776ac3e999c5556717c",
          "name": "pTokens TLOS",
          "symbol": "TLOS",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x7825e833d495f3d1c28872415a4aee339d26ac88",
            "underlying": {
              "address": "0x7825e833d495f3d1c28872415a4aee339d26ac88",
              "name": "pTokens TLOS",
              "symbol": "TLOS",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "8800000",
            "MinimumSwap": "158",
            "BigValueThreshold": "1800000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1755",
            "MinimumSwapFee": "141",
            "anyToken": {
              "address": "0xcaf5191fc480f43e4df80106c7695eca56e48b18",
              "name": "pTokens TLOS",
              "symbol": "anyTLOS",
              "decimals": 18
            }
          }
        },
        "price": 0.204591,
        "logoUrl": "https://assets.coingecko.com/coins/images/7588/large/TLOS_200.png",
        "chainId": "56",
        "tokenid": "anyTLOS",
        "version": "NATIVE",
        "router": "0xf9736ec3926703e85c843fc972bd89a7f8e827c0",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xc7981767f644c7f8e483dabdc413e8a371b83079": {
        "address": "0xc7981767f644c7f8e483dabdc413e8a371b83079",
        "anyToken": {
          "address": "0x4b106b91c5fe4ae933cda197b9caf91a07bdae15",
          "name": "Liquidus",
          "symbol": "anyLIQ",
          "decimals": 18
        },
        "underlying": {
          "address": "0xc7981767f644c7f8e483dabdc413e8a371b83079",
          "name": "Liquidus",
          "symbol": "LIQ",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x5f69b7ab8f7cab199a310fd5a27b43fef44ddcc0",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "2700000",
            "MinimumSwap": "48",
            "BigValueThreshold": "540000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "532",
            "MinimumSwapFee": "43",
            "anyToken": {
              "address": "0x5f69b7ab8f7cab199a310fd5a27b43fef44ddcc0",
              "name": "Liquidus",
              "symbol": "LIQ",
              "decimals": 18
            }
          }
        },
        "price": 0.080789,
        "logoUrl": "https://assets.coingecko.com/coins/images/18749/large/liq.png",
        "chainId": "56",
        "tokenid": "anyLIQ",
        "version": "NATIVE",
        "router": "0xf9736ec3926703e85c843fc972bd89a7f8e827c0",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xad29abb318791d579433d831ed122afeaf29dcfe": {
        "address": "0xad29abb318791d579433d831ed122afeaf29dcfe",
        "anyToken": {
          "address": "0xd3a33b8222ba7b25a0ea2a6ddcda237c154046af",
          "name": "Fantom",
          "symbol": "anyFTM",
          "decimals": 18
        },
        "underlying": {
          "address": "0xad29abb318791d579433d831ed122afeaf29dcfe",
          "name": "Fantom",
          "symbol": "FTM",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x4e15361fd6b4bb609fa63c81a2be19d873717870",
            "underlying": {
              "address": "0x4e15361fd6b4bb609fa63c81a2be19d873717870",
              "name": "FantomToken",
              "symbol": "FTM",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "2500000",
            "MinimumSwap": "60",
            "BigValueThreshold": "500000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "666",
            "MinimumSwapFee": "53.5",
            "anyToken": {
              "address": "0xb01371072fdcb9b4433b855e16a682b461f94ab3",
              "name": "Fantom Token",
              "symbol": "anyFTM",
              "decimals": 18
            }
          },
          "1313161554": {
            "address": "0xb44a9b6905af7c801311e8f4e76932ee959c663c",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "2500000",
            "MinimumSwap": "4.8",
            "BigValueThreshold": "500000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "481",
            "MinimumSwapFee": "2.4",
            "anyToken": {
              "address": "0xb44a9b6905af7c801311e8f4e76932ee959c663c",
              "name": "Fantom",
              "symbol": "FTM",
              "decimals": 18
            }
          }
        },
        "price": 0.357242,
        "logoUrl": "https://assets.coingecko.com/coins/images/4001/large/Fantom.png",
        "chainId": "56",
        "tokenid": "anyFTM",
        "version": "NATIVE",
        "router": "0xf9736ec3926703e85c843fc972bd89a7f8e827c0",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xcc42724c6683b7e57334c4e856f4c9965ed682bd": {
        "address": "0xcc42724c6683b7e57334c4e856f4c9965ed682bd",
        "anyToken": {
          "address": "0xbf731bfa03e0095a2039e7e4c3b466efb7f3ec4e",
          "name": "Matic Token",
          "symbol": "anyMATIC",
          "decimals": 18
        },
        "underlying": {
          "address": "0xcc42724c6683b7e57334c4e856f4c9965ed682bd",
          "name": "Matic Token",
          "symbol": "MATIC",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0",
            "underlying": {
              "address": "0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0",
              "name": "Matic Token",
              "symbol": "MATIC",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "2500000",
            "MinimumSwap": "36.7",
            "BigValueThreshold": "500000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "500",
            "MinimumSwapFee": "28.2",
            "anyToken": {
              "address": "0x1cb1284cf62c3e593a8f49eef3db37ad20467bed",
              "name": "Matic Token",
              "symbol": "anyMATIC",
              "decimals": 18
            }
          },
          "1313161554": {
            "address": "0x6ab6d61428fde76768d7b45d8bfeec19c6ef91a8",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "2500000",
            "MinimumSwap": "5",
            "BigValueThreshold": "500000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "500",
            "MinimumSwapFee": "2.5",
            "anyToken": {
              "address": "0x6ab6d61428fde76768d7b45d8bfeec19c6ef91a8",
              "name": "Matic",
              "symbol": "MATIC",
              "decimals": 18
            }
          }
        },
        "price": 0.872361,
        "logoUrl": "https://assets.coingecko.com/coins/images/4713/large/matic-token-icon.png",
        "chainId": "56",
        "tokenid": "anyMATIC",
        "version": "NATIVE",
        "router": "0xf9736ec3926703e85c843fc972bd89a7f8e827c0",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x1ce0c2827e2ef14d5c4f29a091d735a204794041": {
        "address": "0x1ce0c2827e2ef14d5c4f29a091d735a204794041",
        "anyToken": {
          "address": "0x3ac92ff3c5bf439a87b26741ac6db1793ba1b025",
          "name": "Binance-Peg Avalanche Token",
          "symbol": "anyAVAX",
          "decimals": 18
        },
        "underlying": {
          "address": "0x1ce0c2827e2ef14d5c4f29a091d735a204794041",
          "name": "Avalanche",
          "symbol": "AVAX",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x8965349fb649a33a30cbfda057d8ec2c48abe2a2",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "5",
            "liquidityType": "INIT",
            "MaximumSwap": "80000",
            "MinimumSwap": "0.9",
            "BigValueThreshold": "16000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "16",
            "MinimumSwapFee": "0.8",
            "anyToken": {
              "address": "0x8965349fb649a33a30cbfda057d8ec2c48abe2a2",
              "name": "Avalanche",
              "symbol": "AVAX",
              "decimals": 18
            }
          },
          "1313161554": {
            "address": "0x80a16016cc4a2e6a2caca8a4a498b1699ff0f844",
            "underlying": false,
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "80000",
            "MinimumSwap": "0.16",
            "BigValueThreshold": "16000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "16",
            "MinimumSwapFee": "0.08",
            "anyToken": {
              "address": "0x80a16016cc4a2e6a2caca8a4a498b1699ff0f844",
              "name": "Avalanche",
              "symbol": "AVAX",
              "decimals": 18
            }
          }
        },
        "price": 14.4,
        "logoUrl": "https://assets.coingecko.com/coins/images/12559/large/coin-round-red.png",
        "chainId": "56",
        "tokenid": "anyAVAX",
        "version": "NATIVE",
        "router": "0xf9736ec3926703e85c843fc972bd89a7f8e827c0",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x5857c96dae9cf8511b08cb07f85753c472d36ea3": {
        "address": "0x5857c96dae9cf8511b08cb07f85753c472d36ea3",
        "anyToken": {
          "address": "0x43242138833e8d360e84920462a483eb9e35c8b4",
          "name": "Fuse Token on BSC",
          "symbol": "anyFUSE",
          "decimals": 18
        },
        "underlying": {
          "address": "0x5857c96dae9cf8511b08cb07f85753c472d36ea3",
          "name": "Fuse Token on BSC",
          "symbol": "FUSE",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x970b9bb2c0444f5e81e9d0efb84c8ccdcdcaf84d",
            "underlying": {
              "address": "0x970b9bb2c0444f5e81e9d0efb84c8ccdcdcaf84d",
              "name": "Fuse Token",
              "symbol": "FUSE",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "INIT",
            "MaximumSwap": "7800000",
            "MinimumSwap": "140",
            "BigValueThreshold": "1600000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "1554",
            "MinimumSwapFee": "125",
            "anyToken": {
              "address": "0xe6d9c0acf30194e2a5ae9c1c8342ac49e98a4b0a",
              "name": "Fuse Token",
              "symbol": "anyFUSE",
              "decimals": 18
            }
          }
        },
        "price": 0.067502,
        "logoUrl": "https://assets.coingecko.com/coins/images/10347/large/vUXKHEe.png",
        "chainId": "56",
        "tokenid": "anyFUSE",
        "version": "NATIVE",
        "router": "0xf9736ec3926703e85c843fc972bd89a7f8e827c0",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x045c4324039da91c52c55df5d785385aab073dcf": {
        "address": "0x045c4324039da91c52c55df5d785385aab073dcf",
        "anyToken": {
          "address": "0x994cd2bfdeba7663fb561948ae85882ab9e4f20c",
          "name": "BSC Conflux",
          "symbol": "anybCFX",
          "decimals": 18
        },
        "underlying": {
          "address": "0x045c4324039da91c52c55df5d785385aab073dcf",
          "name": "BSC Conflux",
          "symbol": "bCFX",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0xa1f82e14bc09a1b42710df1a8a999b62f294e592",
            "underlying": {
              "address": "0xa1f82e14bc09a1b42710df1a8a999b62f294e592",
              "name": "ethereum Conflux",
              "symbol": "eCFX",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "12976598.003161",
            "MinimumSwap": "129.76598",
            "BigValueThreshold": "2595319.600632",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "2595.319601",
            "MinimumSwapFee": "103.812784",
            "anyToken": {
              "address": "0x2a7c71cef3f28ab1097da4686c817c8c6d148c72",
              "name": "ethereum Conflux",
              "symbol": "anyeCFX",
              "decimals": 18
            }
          }
        },
        "price": 0.311815,
        "logoUrl": "https://assets.coingecko.com/coins/images/13079/large/3vuYMbjN.png",
        "chainId": "56",
        "tokenid": "anyCFX",
        "version": "NATIVE",
        "router": "0xf9736ec3926703e85c843fc972bd89a7f8e827c0",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x09e889bb4d5b474f561db0491c38702f367a4e4d": {
        "address": "0x09e889bb4d5b474f561db0491c38702f367a4e4d",
        "anyToken": {
          "address": "0x845ab325e3e4ec379c68047313d66bbd631e59a9",
          "name": "Clover",
          "symbol": "anyCLV",
          "decimals": 18
        },
        "underlying": {
          "address": "0x09e889bb4d5b474f561db0491c38702f367a4e4d",
          "name": "Clover",
          "symbol": "CLV",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.04942343,
        "logoUrl": "https://assets.coingecko.com/coins/images/15278/large/photo_2022-03-24_10-22-33.jpg",
        "chainId": "56",
        "tokenid": "anyCLV",
        "version": "NATIVE",
        "router": "0xf9736ec3926703e85c843fc972bd89a7f8e827c0",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x39ae8eefb05138f418bb27659c21632dc1ddab10": {
        "address": "0x39ae8eefb05138f418bb27659c21632dc1ddab10",
        "anyToken": {
          "address": "0x01a4229adc327220209a6d9a4842da27098c6ed1",
          "name": "KardiaChain Token",
          "symbol": "anyKAI",
          "decimals": 18
        },
        "underlying": {
          "address": "0x39ae8eefb05138f418bb27659c21632dc1ddab10",
          "name": "KardiaChain Token",
          "symbol": "KAI",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.00461501,
        "logoUrl": "https://assets.coingecko.com/coins/images/7942/large/kai.png",
        "chainId": "56",
        "tokenid": "anyKAI",
        "version": "NATIVE",
        "router": "0xf9736ec3926703e85c843fc972bd89a7f8e827c0",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xba2ae424d960c26247dd6c32edc70b295c744c43": {
        "address": "0xba2ae424d960c26247dd6c32edc70b295c744c43",
        "anyToken": {
          "address": "0x57f3fee2cfa3769fd25e3774eb514face7c70beb",
          "name": "Dogecoin",
          "symbol": "anyDOGE",
          "decimals": 8
        },
        "underlying": {
          "address": "0xba2ae424d960c26247dd6c32edc70b295c744c43",
          "name": "Dogecoin",
          "symbol": "DOGE",
          "decimals": 8
        },
        "destChains": {},
        "price": 0.071418,
        "logoUrl": "https://assets.coingecko.com/coins/images/5/large/dogecoin.png",
        "chainId": "56",
        "tokenid": "anyDOGE",
        "version": "NATIVE",
        "router": "0xf9736ec3926703e85c843fc972bd89a7f8e827c0",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xc2098a8938119a52b1f7661893c0153a6cb116d5": {
        "address": "0xc2098a8938119a52b1f7661893c0153a6cb116d5",
        "anyToken": {
          "address": "0xaf2d1c5374ee99b167dd8567f2819c7567f1f1a0",
          "name": "Rangers Protocol Gas",
          "symbol": "anyRPG",
          "decimals": 18
        },
        "underlying": {
          "address": "0xc2098a8938119a52b1f7661893c0153a6cb116d5",
          "name": "Rangers Protocol Gas",
          "symbol": "RPG",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x0e5c8c387c5eba2ecbc137ad012aed5fe729e251",
            "underlying": {
              "address": "0x0e5c8c387c5eba2ecbc137ad012aed5fe729e251",
              "name": "Rangers Protocol Gas",
              "symbol": "RPG",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "3000000",
            "MinimumSwap": "52",
            "BigValueThreshold": "600000",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "572",
            "MinimumSwapFee": "46",
            "anyToken": {
              "address": "0x84e9a6f9d240fdd33801f7135908bfa16866939a",
              "name": "Rangers Protocol Gas",
              "symbol": "anyRPG",
              "decimals": 18
            }
          }
        },
        "price": 0.812894,
        "logoUrl": "https://assets.coingecko.com/coins/images/18791/small/tO8MlqiM_400x400.png",
        "chainId": "56",
        "tokenid": "anyRPG",
        "version": "NATIVE",
        "router": "0xf9736ec3926703e85c843fc972bd89a7f8e827c0",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x3d6545b08693dae087e957cb1180ee38b9e3c25e": {
        "address": "0x3d6545b08693dae087e957cb1180ee38b9e3c25e",
        "anyToken": {
          "address": "0x46a531fe4bf0728b00a5ce09291091e630e83431",
          "name": "Ethereum Classic",
          "symbol": "ETC",
          "decimals": 18
        },
        "underlying": {
          "address": "0x3d6545b08693dae087e957cb1180ee38b9e3c25e",
          "name": "Ethereum Classic",
          "symbol": "ETC",
          "decimals": 18
        },
        "destChains": {},
        "price": 18.03,
        "logoUrl": "https://assets.coingecko.com/coins/images/453/large/ethereum-classic-logo.png",
        "chainId": "56",
        "tokenid": "anyWETC",
        "version": "NATIVE",
        "router": "0xf9736ec3926703e85c843fc972bd89a7f8e827c0",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0x3ee2200efb3400fabb9aacf31297cbdd1d435d47": {
        "address": "0x3ee2200efb3400fabb9aacf31297cbdd1d435d47",
        "anyToken": {
          "address": "0xab883fca554233129e927fd398a8f2083713c234",
          "name": "Cardano Token",
          "symbol": "anyADA",
          "decimals": 18
        },
        "underlying": {
          "address": "0x3ee2200efb3400fabb9aacf31297cbdd1d435d47",
          "name": "Cardano Token",
          "symbol": "ADA",
          "decimals": 18
        },
        "destChains": {},
        "price": 0.367211,
        "logoUrl": "https://assets.coingecko.com/coins/images/975/large/cardano.png",
        "chainId": "56",
        "tokenid": "anyADA",
        "version": "NATIVE",
        "router": "0xf9736ec3926703e85c843fc972bd89a7f8e827c0",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      },
      "0xe9c803f48dffe50180bd5b01dc04da939e3445fc": {
        "address": "0xe9c803f48dffe50180bd5b01dc04da939e3445fc",
        "anyToken": {
          "address": "0xa8fced5c6b791ca66faa05ceea6636d5382572fc",
          "name": "Velas",
          "symbol": "anyVLX",
          "decimals": 18
        },
        "underlying": {
          "address": "0xe9c803f48dffe50180bd5b01dc04da939e3445fc",
          "name": "Velas",
          "symbol": "VLX",
          "decimals": 18
        },
        "destChains": {
          "1": {
            "address": "0x8c543aed163909142695f2d2acd0d55791a9edb9",
            "underlying": {
              "address": "0x8c543aed163909142695f2d2acd0d55791a9edb9",
              "name": "VLX",
              "symbol": "VLX",
              "decimals": 18
            },
            "swapfeeon": 1,
            "ContractVersion": "6",
            "liquidityType": "NEED_POOL",
            "MaximumSwap": "121345233.255875",
            "MinimumSwap": "2184.214199",
            "BigValueThreshold": "24269046.651175",
            "SwapFeeRatePerMillion": 0.1,
            "MaximumSwapFee": "24269.046651",
            "MinimumSwapFee": "1941.523732",
            "anyToken": {
              "address": "0x15a3fe3e6b8a5c01b1bfe72c76660c897368eec0",
              "name": "VLX",
              "symbol": "anyVLX",
              "decimals": 18
            }
          }
        },
        "price": 0.01268251,
        "logoUrl": "https://assets.coingecko.com/coins/images/23900/large/AJADWZpI_400x400.png",
        "chainId": "56",
        "tokenid": "anyVLX",
        "version": "NATIVE",
        "router": "0xf9736ec3926703e85c843fc972bd89a7f8e827c0",
        "routerABI": "anySwapOutUnderlying(anytoken,toAddress,amount,toChainID)"
      }
    },
    "1313161554": {}
  }
}
'''
'''--- src/modules/bridge/routes.ts ---
import { Express, Router } from "express";
import { BridgeController } from "./controllers/bridge.controller";

export class Routes {
  private controller: BridgeController;

  constructor(router: Router, controller: BridgeController) {
    this.controller = controller;
    this.configureRoutes(router);
  }

  private configureRoutes(router: Router) {
    /**
     * @swagger
     * /get-fee-bridge/:
     *    post:
     *      tags:
     *        - Bridge
     *      summary: Obtener fee de un bridge segun la blockchain.
     *      description: Manda campos requeridos para obtener un fee en USD.
     *      requestBody:
     *          content:
     *            application/json:
     *              schema:
     *                type: "object"
     *                required: [chainTo, amount, coin, chainFrom]
     *                properties: {
     *                  chainFrom: {
     *                    type: "string"
     *                  },
     *                  chainTo: {
     *                    type: "string"
     *                  },
     *                  coin: {
     *                    type: "string"
     *                  },
     *                  amount: {
     *                    type: "string"
     *                  },
     *                }
     *      responses:
     *        '200':
     *          description: Devuelve el fee que se cobraria por hacer un bridge.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Internal Server Error.
     */
    router.post("/get-fee-bridge/", this.controller.getFeeBridge);

    router.post("/get-limit-bridge/", this.controller.getFeeLimitBridge);

    /**
     * @swagger
     * /get-tokens-bridge/:
     *    post:
     *      tags:
     *        - Bridge
     *      summary: Obtener lista de tokens a los que puedes enviar segun el Chain.
     *      description: Envia una blockchain y obten a que otras chain puedes enviar.
     *      requestBody:
     *          content:
     *            application/json:
     *              schema:
     *                type: "object"
     *                required: [coin, blockchain]
     *                properties: {
     *                  blockchain: {
     *                    type: "string"
     *                  },
     *                  coin: {
     *                    type: "string"
     *                  }
     *                }
     *      responses:
     *        '200':
     *          description: Devuelve el array de tokens.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Internal Server Error.
     */
    router.post("/get-tokens-bridge/", this.controller.getAddressesBridge);

    /**
     * @swagger
     * /send-bridge/:
     *    post:
     *      tags:
     *        - Bridge
     *      summary: Obtener lista de tokens a los que puedes enviar segun el Chain.
     *      description: Envia una blockchain y obten a que otras chain puedes enviar.
     *      requestBody:
     *          content:
     *            application/json:
     *              schema:
     *                type: "object"
     *                required: [defixId, pkEncrypt, toAddress, coin, amount, fromChain, toChain]
     *                properties: {
     *                  defixId: {
     *                    type: "string"
     *                  },
     *                  pkEncrypt: {
     *                    type: "string"
     *                  },
     *                  toAddress: {
     *                    type: "string"
     *                  },
     *                  coin: {
     *                    type: "string"
     *                  },
     *                  amount: {
     *                    type: "string"
     *                  },
     *                  fromChain: {
     *                    type: "string"
     *                  },
     *                  toChain: {
     *                    type: "string"
     *                  }
     *                }
     *      responses:
     *        '200':
     *          description: Devuelve result.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Internal Server Error.
     */
    router.post("/send-bridge/", this.controller.sendBridge);
  }
}

'''
'''--- src/modules/bridge/services/bridge.service.ts ---
import { Request, Response } from "express";
// const fetch = require("node-fetch");
import fetch from "cross-fetch";
import path from "path";
import { ethers } from "ethers";
import abi from "./../anyswapV3Router.json";
import abiToken from "./../abi.json";
import { CryptoShared } from "../../../shared/crypto/crypto.shared";
import { AddressService } from "../../address/services/address.service";
import rawJson from "./../purifiedBridgeInfo.json";
import { TransactionHistoryService } from "../../transactionHistory/services/transactionHistory.service";
import { UtilsShared } from "../../../shared/utils/utils.shared";
import axios from "axios";

// URL for Binance Smart Chain provider
const bscProviderUrl = "https://bsc-dataseed.binance.org/";
// URL for Ethereum
const ethProviderUrl = `https://mainnet.infura.io/v3/${process.env.INFURA_PROJECT_ID}`;
// URL for Aurora provider
const auroraProviderUrl = "https://mainnet.aurora.dev";

const jsonFragment = rawJson;

// list containing 'mainstream coins' ETH, WBTC, USDC, USDT, DAI, MIM and MAI
const mainstreamCoin = ["ETH", "WBTC", "USDC", "USDT", "DAI", "MIM", "MAI"];
export class BridgeService extends TransactionHistoryService {
  private addressService: AddressService;

  constructor() {
    super();
    this.addressService = new AddressService();
  }

  public getFeeBridge = async (chainTo: string, amount: string, coin: string, chainFrom: string) => {
    let toChain;
    if (chainTo === "ETH") {
      toChain = "ETH";
    } else if (chainTo === "BNB") {
      toChain = "BSC";
    } else if (chainTo === "NEAR") {
      toChain = "AURORA";
    }

    let fromChain;
    if (chainFrom === "ETH") {
      fromChain = "ETH";
    } else if (chainFrom === "BNB") {
      fromChain = "BSC";
    } else if (chainFrom === "NEAR") {
      fromChain = "AURORA";
    }

    if (!toChain || !fromChain) throw new Error("Error no chaind");

    const resp: any = await calculateBridgeFees(toChain, amount, coin, fromChain);

    return resp;
  };

  public getFeeLimitBridge = async (coin: string, chainFrom: string) => {
    let fromChain;
    if (chainFrom === "ETH") {
      fromChain = "ETH";
    } else if (chainFrom === "BNB") {
      fromChain = "BSC";
    } else if (chainFrom === "NEAR") {
      fromChain = "AURORA";
    }

    if (!fromChain) throw new Error("Error no chaind");

    const resp: any = await calculateBridgeLimits(coin, fromChain);

    return resp;
  };

  public getAddressesBridge = async (coin: string, blockchain: string) => {
    let chainId;
    if (blockchain === "ETH") {
      chainId = "1";
    } else if (blockchain === "BNB") {
      chainId = "56";
    } else if (blockchain === "NEAR") {
      chainId = "1313161554";
    }

    if (!chainId) return [];

    const result = getTokensBridge(chainId, coin);

    const result2 = getAddresses(chainId, coin);
    console.log(result2);

    return result;
  };

  public sendBridge = async (userAddress: string, key: string, coin: string, fromChain: string, toChain: string, amount: string, defixId: string) => {
    let fromAddress;

    if (defixId.includes(".defix3")) {
      fromAddress = (await this.addressService.getAddressByDefixId(defixId, fromChain))?.address;
    } else {
      fromAddress = defixId;
    }

    if (!fromAddress) throw new Error(`Invalid data.`);

    let chainId;
    console.log("AQUI VA 1");
    if (fromChain === "ETH") {
      chainId = "1";
    } else if (fromChain === "BNB") {
      chainId = "56";
    } else if (fromChain === "NEAR") {
      chainId = "1313161554";
    }

    let chainTo;
    if (toChain === "ETH") {
      chainTo = "1";
    } else if (toChain === "BNB") {
      chainTo = "56";
    } else if (toChain === "NEAR") {
      chainTo = "1313161554";
    }

    if (!chainId || !chainTo) return;

    console.log("AQUI VA 2");

    const addressesResult: any = await getAddresses(chainId, coin);
    const tokenAddressContract: any = await getTokenChainID(chainId, coin);
    console.log(addressesResult);
    console.log(tokenAddressContract);
    const tokenAddress = addressesResult.token;
    const contractAddress = addressesResult.router;
    const decimals = addressesResult.decimals;
    const decimaledAmount = ethers.utils.parseUnits(amount, decimals);
    const etheredChainId = ethers.BigNumber.from(Number(chainTo));

    console.log("AQUI VA 3");
    console.log(chainId);
    let providerUrl;
    if (chainId === "1") {
      providerUrl = ethProviderUrl;
    } else if (chainId === "56") {
      providerUrl = bscProviderUrl;
    } else if (chainId === "1313161554") {
      providerUrl = auroraProviderUrl;
    }
    const provider = new ethers.providers.JsonRpcProvider(providerUrl);
    const contract = new ethers.Contract(contractAddress, abi, provider);

    console.log(tokenAddress);

    console.log(providerUrl);
    console.log(provider);

    const contractToken = new ethers.Contract(tokenAddressContract, abiToken, provider);

    console.log(contractAddress, decimaledAmount);

    const signer = new ethers.Wallet(key, provider);

    console.log("BRR AQUI VA");

    const allowance = await contractToken.allowance(fromAddress, contractAddress);

    if (allowance > decimaledAmount) {
      const gasPrice = await signer.getGasPrice();

      const gasLimit = await contractToken.estimateGas.approve(contractAddress, decimaledAmount);

      const approve = await contractToken.connect(signer).approve(contractAddress, decimaledAmount, {
        gasLimit: gasLimit,
        gasPrice: gasPrice,
      });

      console.log("APPROVE", approve);

      await approve.wait();
    }

    console.log("EMPIEZA SWAP OUT");

    const respTx = await swapOut(tokenAddress, decimaledAmount, userAddress, key, etheredChainId, provider, contract);

    const chain = fromChain + "/" + toChain;

    const transactionHistory: any = await this.createTransactionHistory({
      fromDefix: defixId,
      toDefix: userAddress,
      fromAddress: fromAddress,
      toAddress: userAddress,
      coin,
      blockchain: chain,
      amount: amount,
      hash: respTx.hash,
      typeTxn: "BRIDGE",
    });

    // transactionHistory.block = swapResult.block;
    transactionHistory.linkTxn = UtilsShared.getLinkTransaction(fromChain, respTx.hash);

    return transactionHistory;
  };
}

/*
 ******************** FUNCION PARA OBTENER ADDRESSES ********************
 */

async function swapIn(
  txhash: string,
  token: string,
  account: string,
  amount: string,
  key: string,
  fromChainID: ethers.BigNumber,
  provider: ethers.providers.JsonRpcProvider,
  contract: ethers.Contract
): Promise<any> {
  const signer = new ethers.Wallet(key, provider);
  const tx = await contract.connect(signer).anySwapInUnderlying(txhash, token, account, amount, fromChainID);
  await tx.wait(); // Wait for the transaction to be mined
  console.log("Swapin transaction complete:", tx.hash);
}

async function swapOut(
  token: string,
  amount: ethers.BigNumber,
  bindaddr: string,
  key: string,
  toChainID: ethers.BigNumber,
  provider: ethers.providers.JsonRpcProvider,
  contract: ethers.Contract
): Promise<any> {
  console.log("AQUI VA 5");
  console.log(key, provider);
  const signer = new ethers.Wallet(key, provider);
  console.log("AQUI VA 6");
  console.log(token, bindaddr, amount, toChainID);
  const tx = await contract.connect(signer).anySwapOutUnderlying(token, bindaddr, amount, toChainID, {
    gasLimit: 150000,
  });
  console.log(tx);
  console.log("AQUI VA 7");
  await tx.wait(); // Wait for the transaction to be mined

  console.log("AQUI VA 8");
  console.log("Swapout transaction complete:", tx.hash);

  if (!tx.hash) throw new Error(`Failed to tx hash`);

  // console.log(resu);

  return tx;
}

/*
 ******************** FUNCION PARA OBTENER ADDRESSES ********************
 */

async function getTokensBridge(chainId: string, anyTokenName: string) {
  // const response: any = axios.get("https://bridgeapi.multichain.org/v4/tokenlistv4/1");
  // const json: any = response.data;
  const json: any = jsonFragment;

  const tokensBridge: any = [];

  for (let contractType in json) {
    const obj = json[contractType];
    for (let startingChain in obj) {
      if (startingChain === chainId) {
        for (let address in obj[startingChain]) {
          const token = obj[startingChain][address]["underlying"];
          if (token.symbol === anyTokenName) {
            for (let chain of Object.keys(obj[startingChain][address]["destChains"])) {
              let tokenItem = obj[startingChain][address]["destChains"][chain];
              if (chain === "1") {
                tokenItem.blockchainCoin = "ETH";
                tokenItem.blockchain = "Ethereum";
              } else if (chain === "56") {
                tokenItem.blockchain = "Binance Smart Chain";
                tokenItem.blockchainCoin = "BNB";
              }
              // else if (chain === "1313161554") {
              //   tokenItem.blockchain = "Aurora";
              //   tokenItem.blockchainCoin = "AURORA";
              // }
              if (tokenItem.blockchain) {
                tokensBridge.push(tokenItem);
              }
            }
            return tokensBridge;
          }
        }
      }
    }
  }

  return tokensBridge;
}

function getTokenChainID(chainId: string, anyTokenName: string) {
  // const response: any = axios.get("https://bridgeapi.multichain.org/v4/tokenlistv4/1");
  // const json: any = response.data;
  const json: any = jsonFragment;

  for (let contractType in json) {
    const obj = json[contractType];
    for (let startingChain in obj) {
      if (startingChain === chainId) {
        for (let address in obj[startingChain]) {
          const token = obj[startingChain][address]["underlying"];
          if (token.symbol === anyTokenName) {
            return obj[startingChain][address].address;
          }
        }
      }
    }
  }
  return null;
}

function getAddresses(chainId: string, anyTokenName: string) {
  // const response: any = axios.get("https://bridgeapi.multichain.org/v4/tokenlistv4/1");
  // const json: any = response.data;
  const json: any = jsonFragment;

  for (let contractType in json) {
    const obj = json[contractType];
    for (let startingChain in obj) {
      if (startingChain === chainId) {
        for (let address in obj[startingChain]) {
          const token = obj[startingChain][address]["underlying"];
          if (token.symbol === anyTokenName) {
            return {
              router: obj[startingChain][address]["router"],
              token: obj[startingChain][address]["anyToken"]["address"],
              decimals: obj[startingChain][address]["anyToken"]["decimals"],
            };
          }
        }
      }
    }
  }
}

/*
 ******************** FUNCION PARA CALCULAR FEE ********************
 */

function calculateBridgeLimits(token: string, chain: string) {
  const altcoinMinFee = 5; // Minimum cross-chain fee for altcoins
  const altcoinMaxFee = 1000; // Maximum cross-chain fee for altcoins
  const altcoinMinAmount = 10; // Minimum cross-chain amount for altcoins
  const altcoinMaxAmount = 5000000; // Maximum cross-chain amount for altcoins
  const altcoinMaxAmountDelay = 12; // Maximum delay for cross-chain amount larger than $1M for altcoins (in hours)

  const altcoinEthMinFee = 80; // Minimum cross-chain fee for altcoins
  const altcoinEthMaxFee = 1000; // Maximum cross-chain fee for altcoins
  const altcoinEthMinAmount = 90; // Minimum cross-chain amount for altcoins
  const altcoinEthMaxAmount = 5000000; // Maximum cross-chain amount for altcoins
  const altcoinEthMaxAmountDelay = 12; // Maximum delay for cross-chain amount larger than $1M for altcoins (in hours)

  const ethMinFee = 40; // Minimum cross-chain fee to ETH for mainstream tokens
  const ethMaxFee = 1000; // Maximum cross-chain fee to ETH for mainstream tokens
  const ethMinAmount = 12; // Minimum cross-chain amount to ETH for mainstream tokens
  const ethMaxAmount = 20000000; // Maximum cross-chain amount to ETH for mainstream tokens
  const ethMaxAmountDelay = 12; // Maximum delay for cross-chain amount larger than $5M to ETH (in hours)

  const nonEthMinFee = 0.9; // Minimum cross-chain fee to non-ETH chains for mainstream tokens
  const nonEthMaxFee = 1.9; // Maximum cross-chain fee to non-ETH chains for mainstream tokens
  const nonEthMinAmount = 12; // Minimum cross-chain amount to non-ETH chains for mainstream tokens
  const nonEthMaxAmount = 20000000; // Maximum cross-chain amount to non-ETH chains for mainstream tokens
  const nonEthMaxAmountDelay = 12; // Maximum delay for cross-chain amount larger than $5M to non-ETH chains (in hours)

  let minAmount, maxAmount, minFee, maxFee, maxDelay;

  if (chain === "ETH") {
    if (mainstreamCoin.includes(token)) {
      minAmount = ethMinAmount;
      maxAmount = ethMaxAmount;
      minFee = ethMinFee;
      maxFee = ethMaxFee;
      maxDelay = maxAmount > 5000000 ? ethMaxAmountDelay : 0;
    } else {
      minAmount = altcoinEthMinAmount;
      maxAmount = altcoinEthMaxAmount;
      minFee = altcoinEthMinFee;
      maxFee = altcoinEthMaxFee;
      maxDelay = maxAmount > 1000000 ? altcoinEthMaxAmountDelay : 0;
    }
  } else {
    if (mainstreamCoin.includes(token)) {
      minAmount = nonEthMinAmount;
      maxAmount = nonEthMaxAmount;
      minFee = nonEthMinFee;
      maxFee = nonEthMaxFee;
      maxDelay = maxAmount > 5000000 ? nonEthMaxAmountDelay : 0;
    } else {
      minAmount = altcoinMinAmount;
      maxAmount = altcoinMaxAmount;
      minFee = altcoinMinFee;
      maxFee = altcoinMaxFee;
      maxDelay = maxAmount > 1000000 ? altcoinMaxAmountDelay : 0;
    }
  }

  return {
    minAmount,
    maxAmount,
    minFee,
    maxFee,
    maxDelay,
  };
}

// chainTo and chainFrom: 'ETH', 'BSC', 'AURORA'

// @param {number} amount - amount to swapout in dollars
// @param {boolean} isToETH - true if swapout to ETH
// @returns {number, number} - fee in dollars and cappedAmount to swapout
function calculateAltcoinBridgeFee(amount: any, isToETH: any) {
  const ethCrossChainFeePercentage = 0.001;
  const ethMinimumFee = 80;
  const ethMaximumFee = 1000;
  const nonEthCrossChainFeePercentage = 0.001;
  const minimumFee = 5;
  const maximumFee = 1000;
  const minimumAmountToEth = 90;
  const minimumAmount = 10;
  const maximumAmount = 5000000;

  let fee;
  let cappedFee;
  let cappedAmount;

  if (isToETH) {
    fee = amount * ethCrossChainFeePercentage;
    cappedFee = Math.max(Math.min(fee, ethMaximumFee), ethMinimumFee);
    cappedAmount = Math.max(Math.min(amount, maximumAmount), minimumAmountToEth);
  } else {
    fee = amount * nonEthCrossChainFeePercentage;
    cappedFee = Math.max(Math.min(fee, maximumFee), minimumFee);
    cappedAmount = Math.max(Math.min(amount, maximumAmount), minimumAmount);
  }

  return {
    fee: cappedFee,
    amount: cappedAmount,
  };
}

// @param {number} amount - amount to swapout in dollars
// @param {boolean} isToETH - true if swapout to ETH
// @returns {number, number} - fee in dollars and cappedAmount to swapout
function calculateMainstreamTokenBridgeFee(amount: any, isToETH: any) {
  const ethCrossChainFeePercentage = 0.001;
  const ethMinimumFee = 40;
  const ethMaximumFee = 1000;
  const nonEthCrossChainFee = 1.9;
  const minimumAmount = 12;
  const maximumAmount = 20000000;

  let fee;

  if (isToETH) {
    fee = amount * ethCrossChainFeePercentage;
    fee = Math.max(Math.min(fee, ethMaximumFee), ethMinimumFee);

    return {
      fee: fee,
      amount: Math.max(Math.min(amount, maximumAmount), minimumAmount),
    };
  } else {
    fee = nonEthCrossChainFee;
    return {
      fee: fee,
      amount: Math.max(Math.min(amount, maximumAmount), minimumAmount),
    };
  }
}

// api call to get bnb price in dollars
// @returns {number} - bnb price in dollars
const getBnbPrice = async () => {
  const response = await fetch("https://api.coingecko.com/api/v3/simple/price?ids=binancecoin&vs_currencies=usd");
  const data: any = await response.json();
  const bnbPrice = data.binancecoin.usd;
  return bnbPrice;
};

// call to get transaction fees in bnb
// @returns {number} - transaction fees in bnb
const getBnbGasPrice = async () => {
  const response = await fetch("https://api.bscscan.com/api?module=gastracker&action=gasoracle&apikey=2D1NSZW8VQYMNKZKKF9QVTFKPCWQXTUWM3");
  const data: any = await response.json();
  const transactionFees = data.result.ProposeGasPrice;
  return transactionFees;
};

// @param {number} bnbPrice - current bnb price in dollars
// @param {number} transactionFees - current transaction fees in bnb
// @returns {number} - fee in dollars
const calculateBnbSwapoutFee = async (bnbPrice: any, transactionFees: any) => {
  // gas limit for anyswap swapout transactions
  const gasLimit = 100000;
  const gweiToEth = 1000000000;
  const fee = (transactionFees * gasLimit * bnbPrice) / gweiToEth;
  return fee;
};

// api call to get gasPrice in gwei
// @returns {number} - gas price in gwei
const getEthGasPrice = async () => {
  const response = await fetch("https://ethgasstation.info/json/ethgasAPI.json");
  const data: any = await response.json();
  const gasPrice = data.fast / 10;
  return gasPrice;
};

// api call to get eth price in dollars
// @returns {number} - eth price in dollars
const getEthPrice = async () => {
  const response = await fetch("https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd");
  const data: any = await response.json();
  const ethPrice = data.ethereum.usd;
  return ethPrice;
};

// @param {number} gasPrice - current gas price in gwei
// @param {number} ethPrice - current eth price in dollars
// @returns {number} - fee in dollars
const calculateEthSwapoutFee = async (gasPrice: any, ethPrice: any) => {
  // gas limit for swapout transactions
  const gasLimit = 10000;
  // conversion rate from gwei to eth
  const gweiToEth = 1000000000;
  const fee = (gasPrice * gasLimit * ethPrice) / gweiToEth;
  return fee;
};

// aurora doesn't have fee market, charges 0.00001 ETH for swapout
const calculateAuroraSwapoutFee = async (ethPrice: any) => {
  const fee = 0.00001;
  return fee * ethPrice;
};

// calculate total fee for swapout
// @param {string} chainTo - chain to swapout to
// @param {number} amount - amount to swapout in dollars
// @param {string} token - token to swapout
// @param {string} chainFrom - chain to swapout from
// @returns {number, number} - {token fee, gas fee}
const calculateBridgeFees = async (chainTo: any, amount: any, token: any, chainFrom: any) => {
  let swapoutFee;
  if (chainFrom == "AURORA") {
    swapoutFee = await calculateAuroraSwapoutFee(await getEthPrice());
  } else if (chainFrom == "BSC") {
    swapoutFee = await calculateBnbSwapoutFee(await getBnbPrice(), await getBnbGasPrice());
  } else if (chainFrom == "ETH") {
    swapoutFee = await calculateEthSwapoutFee(await getEthGasPrice(), await getEthPrice());
  }
  if (mainstreamCoin.includes(token)) {
    const { fee } = calculateMainstreamTokenBridgeFee(amount, chainTo === "ETH");
    return { fee, swapoutFee };
  } else if (!mainstreamCoin.includes(token)) {
    const { fee } = calculateAltcoinBridgeFee(amount, chainTo === "ETH");
    return { fee, swapoutFee };
  }
};

'''
'''--- src/modules/frequent/controllers/frequent.controller.ts ---
import { Request, Response } from "express";
import { FrequentService } from "../services/frequent.service";

export class FrequentController {
  private frequentService: FrequentService;

  constructor() {
    this.frequentService = new FrequentService();
  }

  public getAllFrequent = async (req: Request, res: Response) => {
    try {
      const { defixId } = req.body;
      const frequentAll = this.frequentService.getAllFrequentByDefixId(defixId);
      return res.send(frequentAll);
    } catch (error: any) {
      return res.status(500).send({ message: error.message });
    }
  };

  public deleteFrequent = async (req: Request, res: Response) => {
    try {
      const { id } = req.body;
      const resultDelete = await this.frequentService.deleteFrequentById(id);
      if (resultDelete.affected === 0) return res.status(400).send({ message: "Frequent not found" });
      return res.status(204).send();
    } catch (error: any) {
      return res.status(500).send({ message: error.message });
    }
  };
}

'''
'''--- src/modules/frequent/entities/frequent.entity.ts ---
import { Entity, Column, PrimaryGeneratedColumn, BaseEntity, ManyToOne } from "typeorm";
import { UserEntity } from "../../users/entities/user.entity";

@Entity({ name: "frequent" })
export class FrequentEntity extends BaseEntity {
  @PrimaryGeneratedColumn("uuid")
  id!: string;

  @ManyToOne(() => UserEntity)
  user!: UserEntity;

  @Column({
    name: "frequent_user",
    nullable: true,
  })
  frequentUser!: string;

  @Column({
    name: "type_transaction",
    nullable: true,
  })
  typeTxn!: string;
}

'''
'''--- src/modules/frequent/init.ts ---
import { Express, Router } from "express";
import { FrequentController } from "./controllers/frequent.controller";
import { Routes } from "./routes";

export class FrequentModule {
  public routes: Routes;

  constructor(router: Router) {
    this.routes = new Routes(router, new FrequentController());
  }
}

'''
'''--- src/modules/frequent/routes.ts ---
import { Express, Router } from "express";
import { FrequentController } from "./controllers/frequent.controller";

export class Routes {
  private controller: FrequentController;

  constructor(router: Router, controller: FrequentController) {
    this.controller = controller;
    this.configureRoutes(router);
  }

  private configureRoutes(router: Router) {
    /**
     * @swagger
     * /get-frequent/:
     *    post:
     *      tags:
     *        - Frequent
     *      summary: Obtener lista de usuarios frequentes.
     *      description: Obtener lista de usuarios frequentes de un usuario.
     *      requestBody:
     *          content:
     *            application/json:
     *              schema:
     *                type: "object"
     *                required: [defixId]
     *                properties: {
     *                  defixId: {
     *                    type: "string"
     *                  }
     *                }
     *      responses:
     *        '200':
     *          description: Devuelve array de usuarios.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Internal Server Error.
     */
    router.post("/get-frequent/", this.controller.getAllFrequent);

    /**
     * @swagger
     * /delete-frequent/:
     *    post:
     *      tags:
     *        - Frequent
     *      summary: Eliminar user frequent.
     *      description: Elimina un usuario de tu lista de frequentes.
     *      requestBody:
     *          content:
     *            application/json:
     *              schema:
     *                type: "object"
     *                required: [id]
     *                properties: {
     *                  id: {
     *                    type: number
     *                  }
     *                }
     *      responses:
     *        '204':
     *          description: Eliminado con exito.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Internal Server Error.
     */
    router.post("/delete-frequent/", this.controller.deleteFrequent);
  }
}

'''
'''--- src/modules/frequent/services/frequent.service.ts ---
import { UtilsShared } from "../../../shared/utils/utils.shared";
import { UserEntity } from "../../users/entities/user.entity";
import { UserService } from "../../users/services/user.service";
import { FrequentEntity } from "../entities/frequent.entity";

export class FrequentService extends UserService {
  public createFrequent = async (user: string, frequentUser: string, typeTxn: string) => {
    try {
      const userFrequent = await this.getFrequentByDefixId(user, frequentUser, typeTxn);
      if (userFrequent) throw new Error(`User frequent already exists.`);

      const userDefix = await this.getUserByDefixId(user);
      if (!userDefix) throw new Error(`User does not exists.`);

      const frequent = new FrequentEntity();

      frequent.user = userDefix;
      frequent.frequentUser = frequentUser;
      frequent.typeTxn = typeTxn;

      return await frequent.save();
    } catch (err: any) {
      console.log(`Failed to create frequent user: ${err.message}`);
      return;
      // throw new Error(`Failed to create frequent user: ${err.message}`);
    }
  };

  public getFrequentByDefixId = async (defixId: string, frequentUser: string, typeTxn: string) => {
    try {
      const frequent = await FrequentEntity.findOneBy({
        user: { defixId },
        frequentUser,
        typeTxn,
      });
      return frequent;
    } catch (err) {
      throw new Error(`Failed to get address: ${err}`);
    }
  };

  public getAllFrequentByDefixId = async (defixId: string) => {
    try {
      const frequentAll = await FrequentEntity.find({
        where: { user: { defixId: defixId } },
      });
      return frequentAll;
    } catch (err) {
      throw new Error(`Failed to get address: ${err}`);
    }
  };

  public deleteFrequentById = async (id: string) => {
    try {
      return await FrequentEntity.delete({ id });
    } catch (err) {
      throw new Error(`Failed to get address: ${err}`);
    }
  };
}

'''
'''--- src/modules/general/controllers/general.controller.ts ---
import { Request, Response } from "express";
import { GeneralService } from "../services/general.service";

export class GeneralController {
  private generalService: GeneralService;

  constructor() {
    this.generalService = new GeneralService();
  }
  public getCryptos = async (req: Request, res: Response) => {
    try {
      const cryptos = await this.generalService.getCryptos();
      res.send(cryptos);
    } catch (error: any) {
      return res.status(500).send({ message: error.message });
    }
  };
  public getCryptosSwap = async (req: Request, res: Response) => {
    try {
      const cryptos = await this.generalService.getCryptosSwap();
      res.send(cryptos);
    } catch (error: any) {
      return res.status(500).send({ message: error.message });
    }
  };
  public getCryptosLimit = async (req: Request, res: Response) => {
    try {
      const cryptos = await this.generalService.getCryptosLimit();
      res.send(cryptos);
    } catch (error: any) {
      return res.status(500).send({ message: error.message });
    }
  };
  public getCryptosBridge = async (req: Request, res: Response) => {
    try {
      const cryptos = await this.generalService.getCryptosBridge();
      res.send(cryptos);
    } catch (error: any) {
      return res.status(500).send({ message: error.message });
    }
  };
}

'''
'''--- src/modules/general/init.ts ---
import { Express, Router } from "express";
import { GeneralController } from "./controllers/general.controller";
import { Routes } from "./routes";

export class GeneralModule {
  public routes: Routes;

  constructor(router: Router) {
    this.routes = new Routes(router, new GeneralController());
  }
}

'''
'''--- src/modules/general/routes.ts ---
import { Express, Router } from "express";
import { GeneralController } from "./controllers/general.controller";
import { SharedMiddleware } from "../../shared/middlewares/shared.middleware";

export class Routes {
  private controller: GeneralController;
  private middleware: SharedMiddleware;

  constructor(router: Router, controller: GeneralController) {
    this.controller = controller;
    this.middleware = new SharedMiddleware();
    this.configureRoutes(router);
  }

  private configureRoutes(router: Router) {
    /**
     * Post track
     * @swagger
     * /get-cryptos:
     *    get:
     *      tags:
     *        - General
     *      summary: Obtiene las Cryptos y Tokens permitidos en Defix3.
     *      description: Te da un array con las cryptos y tokens.
     *      responses:
     *        '200':
     *          description: Array con las cryptos y tokens.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Internal Server Error.
     */
    router.get("/get-cryptos", this.controller.getCryptos);

    /**
     * Post track
     * @swagger
     * /get-cryptos-swap:
     *    get:
     *      tags:
     *        - General
     *      summary: Obtiene las Cryptos y Tokens permitidos en Defix3.
     *      description: Te da un array con las cryptos y tokens.
     *      responses:
     *        '200':
     *          description: Array con las cryptos y tokens.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Internal Server Error.
     */
    router.get("/get-cryptos-swap", this.controller.getCryptosSwap);

    /**
     * Post track
     * @swagger
     * /get-cryptos-limit:
     *    get:
     *      tags:
     *        - General
     *      summary: Obtiene las Cryptos y Tokens permitidos en Defix3.
     *      description: Te da un array con las cryptos y tokens.
     *      responses:
     *        '200':
     *          description: Array con las cryptos y tokens.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Internal Server Error.
     */
    router.get("/get-cryptos-limit", this.controller.getCryptosLimit);

    /**
     * Post track
     * @swagger
     * /get-cryptos-bridge:
     *    get:
     *      tags:
     *        - General
     *      summary: Obtiene las Cryptos y Tokens permitidos en Defix3.
     *      description: Te da un array con las cryptos y tokens.
     *      responses:
     *        '200':
     *          description: Array con las cryptos y tokens.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Internal Server Error.
     */
    router.get("/get-cryptos-bridge", this.controller.getCryptosBridge);
  }
}

'''
'''--- src/modules/general/services/general.service.ts ---
import dbConnect from "../../../config/postgres";
import { UtilsShared } from "../../../shared/utils/utils.shared";

export class GeneralService {
  public getCryptos = async () => {
    try {
      return await UtilsShared.getCryptos();
    } catch (err) {
      throw new Error(`Failed to get cryptos: ${err}`);
    }
  };
  public getCryptosSwap = async () => {
    try {
      const conexion = await dbConnect();
      const cryptocurrencys = await conexion.query("select * from backend_cryptocurrency where swap=true");

      const cryptos = [];

      for (let cryptocurrency of cryptocurrencys.rows) {
        const tokens = await conexion.query("select * from backend_token where cryptocurrency_id = $1", [cryptocurrency.id]);
        cryptocurrency.tokens = tokens.rows;
        cryptos.push(cryptocurrency);
      }

      return cryptos;
    } catch (err) {
      throw new Error(`Failed to get cryptos: ${err}`);
    }
  };
  public getCryptosLimit = async () => {
    try {
      const conexion = await dbConnect();
      const cryptocurrencys = await conexion.query("select * from backend_cryptocurrency where limit_order=true");

      const cryptos = [];

      for (let cryptocurrency of cryptocurrencys.rows) {
        const tokens = await conexion.query("select * from backend_token where cryptocurrency_id = $1", [cryptocurrency.id]);
        cryptocurrency.tokens = tokens.rows;
        cryptos.push(cryptocurrency);
      }

      return cryptos;
    } catch (err) {
      throw new Error(`Failed to get cryptos: ${err}`);
    }
  };
  public getCryptosBridge = async () => {
    try {
      const conexion = await dbConnect();
      const cryptocurrencys = await conexion.query("select * from backend_cryptocurrency where bridge=true");

      const cryptos = [];

      for (let cryptocurrency of cryptocurrencys.rows) {
        const tokens = await conexion.query("select * from backend_token where cryptocurrency_id = $1", [cryptocurrency.id]);
        cryptocurrency.tokens = tokens.rows;
        cryptos.push(cryptocurrency);
      }

      return cryptos;
    } catch (err) {
      throw new Error(`Failed to get cryptos: ${err}`);
    }
  };
}

'''
'''--- src/modules/hiddenTokens/controllers/hiddenTokens.controller.ts ---
import { Request, Response } from "express";
import { HiddenTokensService } from "../services/hiddenTokens.service";

export class HiddenTokensController {
  private hiddenTokensService: HiddenTokensService;

  constructor() {
    this.hiddenTokensService = new HiddenTokensService();
  }

  public getTokensByDefixId = async (req: Request, res: Response) => {
    try {
      const { defixId } = req.body;
      const cryptos = await this.hiddenTokensService.getTokensByDefixId(defixId);
      res.send(cryptos);
    } catch (error: any) {
      return res.status(500).send({ message: error.message });
    }
  };

  public changeHiddenToken = async (req: Request, res: Response) => {
    try {
      const { defixId, tokenId, active } = req.body;
      const hiddenToken = await this.hiddenTokensService.getHiddenTokenById(defixId, tokenId);
      if (active && !hiddenToken) {
        const response = await this.hiddenTokensService.createHiddenToken(defixId, tokenId);
        res.send(response);
      } else if (!active && hiddenToken) {
        const response = await this.hiddenTokensService.deleteHiddenToken(hiddenToken.id);
        res.send(response);
      } else {
        return res.status(200).send();
      }
    } catch (error: any) {
      return res.status(500).send({ message: error.message });
    }
  };
}

'''
'''--- src/modules/hiddenTokens/entities/hiddenTokensLimit.entity.ts ---
import { Entity, Column, PrimaryGeneratedColumn, BaseEntity, ManyToOne } from "typeorm";
import { UserEntity } from "../../users/entities/user.entity";

@Entity({ name: "hidden_tokens_limit" })
export class HiddenTokensLimitEntity extends BaseEntity {
  @PrimaryGeneratedColumn("uuid")
  id!: string;

  @Column({
    nullable: false,
  })
  user!: string;

  @Column({
    name: "token_id",
    nullable: false,
  })
  tokenId!: number;
}

'''
'''--- src/modules/hiddenTokens/init.ts ---
import { Express, Router } from "express";
import { HiddenTokensController } from "./controllers/hiddenTokens.controller";
import { Routes } from "./routes";

export class HiddenTokensModule {
  public routes: Routes;

  constructor(router: Router) {
    this.routes = new Routes(router, new HiddenTokensController());
  }
}

'''
'''--- src/modules/hiddenTokens/routes.ts ---
import { Express, Router } from "express";
import { HiddenTokensController } from "./controllers/hiddenTokens.controller";

export class Routes {
  private controller: HiddenTokensController;

  constructor(router: Router, controller: HiddenTokensController) {
    this.controller = controller;
    this.configureRoutes(router);
  }

  private configureRoutes(router: Router) {
    /**
     * Post track
     * @swagger
     * /get-hidden-tokens/:
     *    post:
     *      tags:
     *        - LimitOrder
     *      summary: Traer la lista de tokens preferencia del usuario.
     *      description: Responde array de tokens.
     *      requestBody:
     *          content:
     *            application/json:
     *              schema:
     *                type: "object"
     *                required: ["defixId"]
     *                properties: {
     *                  defixId: {
     *                    type: "string"
     *                  }
     *                }
     *      responses:
     *        '200':
     *          description: Responde un array.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Bad Request.
     */
    router.post("/get-hidden-tokens/", this.controller.getTokensByDefixId);

    /**
     * Post track
     * @swagger
     * /change-hidden-token/:
     *    post:
     *      tags:
     *        - LimitOrder
     *      summary: Agrega o elimina el token de la lista de tokens a ocultar.
     *      description: Manda active = true para ocultar el token, false para eliminarlo.
     *      requestBody:
     *          content:
     *            application/json:
     *              schema:
     *                type: "object"
     *                required: ["defixId", "tokenId", "active"]
     *                properties: {
     *                  defixId: {
     *                    type: "string"
     *                  },
     *                  tokenId: {
     *                    type: "number"
     *                  },
     *                  active: {
     *                    type: "boolean"
     *                  }
     *                }
     *      responses:
     *        '200':
     *          description: Success.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Internal Server Error.
     */
    router.post("/change-hidden-token/", this.controller.changeHiddenToken);
  }
}

'''
'''--- src/modules/hiddenTokens/services/hiddenTokens.service.ts ---
import { UtilsShared } from "../../../shared/utils/utils.shared";
import { GeneralService } from "../../general/services/general.service";
import { UserEntity } from "../../users/entities/user.entity";
import { HiddenTokensLimitEntity } from "../entities/hiddenTokensLimit.entity";

export class HiddenTokensService {
  private generalService: GeneralService;

  constructor() {
    this.generalService = new GeneralService();
  }

  public getTokensByDefixId = async (defixId: string) => {
    try {
      const cryptos = await this.generalService.getCryptos();

      const datos = [];

      const tokensHidden = await this.getHiddenTokensByDefixId(defixId);

      console.log(tokensHidden);

      for (let crypto of cryptos) {
        if (crypto.limit_order) {
          for (let token of crypto.tokens) {
            if (tokensHidden.find((element) => element.tokenId === Number(token.id))) {
              token.active = false;
            } else {
              token.active = true;
            }
            token.blockchain = crypto.blockchain;
            token.blockchain_coin = crypto.coin;
            datos.push(token);
          }
        }
      }
      return datos;
    } catch (err) {
      throw new Error(`Failed to get address: ${err}`);
    }
  };

  public createHiddenToken = async (defixId: string, tokenId: number) => {
    try {
      const hiddenToken = new HiddenTokensLimitEntity();

      hiddenToken.user = defixId;
      hiddenToken.tokenId = tokenId;

      const hiddenTokenSaved = await hiddenToken.save();

      return hiddenTokenSaved;
    } catch (err) {
      throw new Error(`Failed to create hiddenToken: ${err}`);
    }
  };

  public deleteHiddenToken = async (id: string) => {
    try {
      return await HiddenTokensLimitEntity.delete({ id });
    } catch (err) {
      throw new Error(`Failed to get address: ${err}`);
    }
  };

  public getHiddenTokensByDefixId = async (defixId: string) => {
    const hiddenTokens = await HiddenTokensLimitEntity.find({
      where: { user: defixId },
    });

    return hiddenTokens;
  };

  public getHiddenTokenById = async (user: string, tokenId: number) => {
    return await HiddenTokensLimitEntity.findOneBy({ user, tokenId });
  };
}

'''
'''--- src/modules/limitOrder/controllers/limitOrder.controller.ts ---
import { Request, Response } from "express";
import { LimitOrderService } from "../services/limitOrder.service";
import { CryptoShared } from "../../../shared/crypto/crypto.shared";
import { MailShared } from "../../../shared/email/email.shared";
import { UtilsShared } from "../../../shared/utils/utils.shared";

export class LimitOrderController {
  private limitOrderService: LimitOrderService;
  private mailService: MailShared;

  constructor() {
    this.limitOrderService = new LimitOrderService();
    this.mailService = new MailShared();
  }

  public sendLimitOrder = async (req: Request, res: Response) => {
    try {
      const { defixId, pkEncrypt, fromCoin, toCoin, srcAmount, destAmount, blockchain } = req.body;

      if (!defixId || !pkEncrypt || !fromCoin || !toCoin || !srcAmount || !destAmount || !blockchain)
        return res.status(400).send({ message: "Invalid data." });

      const privateKey = CryptoShared.decrypt(pkEncrypt);

      if (!privateKey) return res.status(400).send({ message: "privateKey invalid." });

      const address = await UtilsShared.getAddressUser(defixId, blockchain);

      if (!address) return res.status(400).send({ message: "Address invalid." });

      const limitOrder = await this.limitOrderService.sendLimitOrder(fromCoin, toCoin, srcAmount, destAmount, blockchain, address, privateKey);

      res.json(limitOrder);
    } catch (error: any) {
      return res.status(500).send({ message: error.message });
    }
  };

  public cancelLimitOrder = async (req: Request, res: Response) => {
    try {
      const { defixId, pkEncrypt, orderHash, blockchain } = req.body;

      if (!defixId || !pkEncrypt || !blockchain || !orderHash) return res.status(400).send({ message: "Invalid data." });

      const privateKey = CryptoShared.decrypt(pkEncrypt);

      if (!privateKey) return res.status(400).send({ message: "privateKey invalid." });

      const address = await UtilsShared.getAddressUser(defixId, blockchain);

      if (!address) return res.status(400).send({ message: "Address invalid." });

      const limitOrder = await this.limitOrderService.cancelLimitOrder(blockchain, orderHash, privateKey);

      res.json(limitOrder);
    } catch (error: any) {
      return res.status(500).send({ message: error.message });
    }
  };

  public getAllLimitOrder = async (req: Request, res: Response) => {
    try {
      const { defixId } = req.body;

      if (!defixId) return res.status(400).send({ message: "Invalid data." });

      const address = await UtilsShared.getAddressUser(defixId, "ETH");

      if (!address) return res.status(400).send({ message: "Address invalid." });

      const orders = await this.limitOrderService.getAllLimitOrder("ETH", address);

      res.json(orders);
    } catch (error: any) {
      return res.status(500).send({ message: error.message });
    }
  };

  public getOrderBook = async (req: Request, res: Response) => {
    try {
      const { fromCoin, toCoin } = req.body;

      if (!fromCoin || !toCoin) return res.status(400).send({ message: "Invalid data." });

      let fromToken: any = await UtilsShared.getTokenContract(fromCoin, "ETH");

      let toToken: any = await UtilsShared.getTokenContract(toCoin, "ETH");

      if (!fromToken || !toToken) return res.status(400).send({ message: "Tokens invalid." });

      const orders = await this.limitOrderService.getOrderBook("ETH", fromToken.contract, toToken.contract);

      res.json(orders);
    } catch (error: any) {
      return res.status(500).send({ message: error.message });
    }
  };
}

'''
'''--- src/modules/limitOrder/init.ts ---
import { Express, Router } from "express";
import { LimitOrderController } from "./controllers/limitOrder.controller";
import { Routes } from "./routes";

export class LimitOrderModule {
  public routes: Routes;

  constructor(router: Router) {
    this.routes = new Routes(router, new LimitOrderController());
  }
}

'''
'''--- src/modules/limitOrder/routes.ts ---
import { Express, Router } from "express";
import { LimitOrderController } from "./controllers/limitOrder.controller";
import { TwoFAMiddleware } from "../../shared/middlewares/twoFA.middleware";

export class Routes {
  private controller: LimitOrderController;
  private middleware2fa: TwoFAMiddleware;

  constructor(router: Router, controller: LimitOrderController) {
    this.controller = controller;
    this.middleware2fa = new TwoFAMiddleware();
    this.configureRoutes(router);
  }

  private configureRoutes(router: Router) {
    /**
     * @swagger
     * /send-limit-order/:
     *    post:
     *      tags:
     *        - LimitOrder
     *      summary: Envia el limit order, Tasa de cambio, hash y monto recibido..
     *      description: Manda campos requeridos para hacer un order limit.
     *      requestBody:
     *          content:
     *            application/json:
     *              schema:
     *                type: "object"
     *                required: [fromCoin, toCoin, amount, blockchain]
     *                properties: {
     *                  defixId: {
     *                    type: "string"
     *                  },
     *                  pkEncrypt: {
     *                    type: "string"
     *                  },
     *                  fromCoin: {
     *                    type: "string"
     *                  },
     *                  toCoin: {
     *                    type: "string"
     *                  },
     *                  srcAmount: {
     *                    type: "number"
     *                  },
     *                  destAmount: {
     *                    type: "number"
     *                  },
     *                  blockchain: {
     *                    type: "string"
     *                  }
     *                }
     *      responses:
     *        '200':
     *          description: Devuelve la transaccion del Order Limit.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Internal Server Error.
     */
    router.post("/send-limit-order/", this.controller.sendLimitOrder);

    /**
     * @swagger
     * /cancel-limit-order/:
     *    post:
     *      tags:
     *        - LimitOrder
     *      summary: Envia el hash del order limit para cancelarlo
     *      description: Manda campos requeridos para cancelar un order limit.
     *      requestBody:
     *          content:
     *            application/json:
     *              schema:
     *                type: "object"
     *                required: [fromCoin, toCoin, amount, blockchain]
     *                properties: {
     *                  defixId: {
     *                    type: "string"
     *                  },
     *                  pkEncrypt: {
     *                    type: "string"
     *                  },
     *                  orderHash: {
     *                    type: "string"
     *                  },
     *                  blockchain: {
     *                    type: "string"
     *                  }
     *                }
     *      responses:
     *        '200':
     *          description: Order Limit cancelado.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Internal Server Error.
     */
    router.post("/cancel-limit-order/", this.controller.cancelLimitOrder);

    /**
     * @swagger
     * /get-limit-orders/:
     *    post:
     *      tags:
     *        - LimitOrder
     *      summary: Obtiene los limit orders del usuario
     *      description: Manda campos requeridos para obetener los limit orders.
     *      requestBody:
     *          content:
     *            application/json:
     *              schema:
     *                type: "object"
     *                required: [fromCoin, toCoin, amount]
     *                properties: {
     *                  defixId: {
     *                    type: "string"
     *                  }
     *                }
     *      responses:
     *        '200':
     *          description: Order Limit cancelado.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Internal Server Error.
     */
    router.post("/get-limit-orders/", this.controller.getAllLimitOrder);

    /**
     * @swagger
     * /get-order-book/:
     *    post:
     *      tags:
     *        - LimitOrder
     *      summary: Obtiene los limit orders de una moneda a otra.
     *      description: Manda campos requeridos para obetener los limit orders.
     *      requestBody:
     *          content:
     *            application/json:
     *              schema:
     *                type: "object"
     *                required: [fromCoin, toCoin, amount]
     *                properties: {
     *                  fromCoin: {
     *                    type: "string"
     *                  },
     *                  toCoin: {
     *                    type: "string"
     *                  }
     *                }
     *      responses:
     *        '200':
     *          description: Order Limits.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Internal Server Error.
     */
    router.post("/get-order-book/", this.controller.getOrderBook);
  }
}

'''
'''--- src/modules/limitOrder/services/limitOrder.service.ts ---
import { TransactionHistoryService } from "../../transactionHistory/services/transactionHistory.service";
import { blockchainService } from "../../../blockchain";
import { UtilsShared } from "../../../shared/utils/utils.shared";
import axios from "axios";

export class LimitOrderService extends TransactionHistoryService {
  constructor() {
    super();
  }

  public sendLimitOrder = async (
    fromCoin: string,
    toCoin: string,
    srcAmount: number,
    destAmount: number,
    blockchain: string,
    address: string,
    privateKey: string
  ) => {
    try {
      if (blockchain !== "ETH") {
        throw new Error(`Invalid blockchain.`);
      }

      const orderResult = await blockchainService[blockchain.toLowerCase() as keyof typeof blockchainService].sendLimitOrder(
        fromCoin,
        toCoin,
        srcAmount,
        destAmount,
        blockchain,
        address,
        privateKey
      );

      if (!orderResult) {
        throw new Error(`Internal error send limit order.`);
      }

      return orderResult;
    } catch (error: any) {
      throw new Error(`Failed to send order limit, ${error.message}`);
    }
  };

  public cancelLimitOrder = async (blockchain: string, orderHash: string, privateKey: string) => {
    try {
      if (blockchain !== "ETH") {
        throw new Error(`Invalid blockchain.`);
      }

      const orderResult = await blockchainService[blockchain.toLowerCase() as keyof typeof blockchainService].cancelLimitOrder(orderHash, privateKey);

      if (!orderResult) {
        throw new Error(`Internal error swap preview.`);
      }

      return orderResult;
    } catch (error: any) {
      throw new Error(`Failed to send order limit, ${error.message}`);
    }
  };

  public getAllLimitOrder = async (blockchain: string, address: string) => {
    try {
      if (blockchain !== "ETH") {
        throw new Error(`Invalid blockchain.`);
      }

      const ordersResult = await blockchainService[blockchain.toLowerCase() as keyof typeof blockchainService].getAllLimitOrder(address);

      if (!ordersResult) {
        throw new Error(`Internal error swap preview.`);
      }

      return ordersResult;
    } catch (error: any) {
      throw new Error(`Failed to get all order limit, ${error.message}`);
    }
  };

  public getOrderBook = async (blockchain: string, fromToken: string, toToken: string) => {
    try {
      if (blockchain !== "ETH") {
        throw new Error(`Invalid blockchain.`);
      }

      const ordersResult = await blockchainService[blockchain.toLowerCase() as keyof typeof blockchainService].getOrderBookCoinToCoin(
        fromToken,
        toToken
      );

      if (!ordersResult) {
        throw new Error(`Internal error order book.`);
      }

      return ordersResult;
    } catch (error: any) {
      throw new Error(`Failed to get order book, ${error.message}`);
    }
  };
}

'''
'''--- src/modules/subscription/controllers/subscription.controller.ts ---
import { Request, Response } from "express";
import { SubscriptionService } from "../services/subscription.service";

export class SubscriptionController {
  private subscriptionService: SubscriptionService;

  constructor() {
    this.subscriptionService = new SubscriptionService();
  }

  public setEmailSubscription = async (req: Request, res: Response) => {
    try {
      const { email } = req.body;
      if (!email) return res.status(400).send({ message: "Invalid data." });
      const resp = await this.subscriptionService.createSubscription(email);
      return res.send(resp);
    } catch (error: any) {
      return res.status(500).send({ message: error.message });
    }
  };
}

'''
'''--- src/modules/subscription/entities/subscription.entity.ts ---
import { Entity, Column, PrimaryGeneratedColumn, BaseEntity, ManyToOne, CreateDateColumn, UpdateDateColumn } from "typeorm";

@Entity({ name: "subscriptions" })
export class SubscriptionEntity extends BaseEntity {
  @PrimaryGeneratedColumn("uuid")
  id!: string;

  @Column({
    nullable: false,
    unique: true,
  })
  email!: string;

  @CreateDateColumn({
    name: "created_at",
  })
  createdAt!: Date;

  @UpdateDateColumn({
    name: "updated_at",
  })
  updatedAt!: Date;
}

'''
'''--- src/modules/subscription/init.ts ---
import { Express, Router } from "express";
import { SubscriptionController } from "./controllers/subscription.controller";
import { Routes } from "./routes";

export class SubscriptionModule {
  public routes: Routes;

  constructor(router: Router) {
    this.routes = new Routes(router, new SubscriptionController());
  }
}

'''
'''--- src/modules/subscription/routes.ts ---
import { Express, Router } from "express";
import { SubscriptionController } from "./controllers/subscription.controller";

export class Routes {
  private controller: SubscriptionController;

  constructor(router: Router, controller: SubscriptionController) {
    this.controller = controller;
    this.configureRoutes(router);
  }

  private configureRoutes(router: Router) {
    /**
     * Post track
     * @swagger
     * /create-subscription/:
     *    post:
     *      tags:
     *        - Subscription
     *      summary: Enviar correo para subscribirse a Defix3.
     *      description: Registrar correo.
     *      requestBody:
     *          content:
     *            application/json:
     *              schema:
     *                type: "object"
     *                required: [email]
     *                properties: {
     *                  email: {
     *                    type: "string"
     *                  }
     *                }
     *      responses:
     *        '200':
     *          description: Success.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Internal Server Error.
     */
    router.post("/create-subscription/", this.controller.setEmailSubscription);
  }
}

'''
'''--- src/modules/subscription/services/subscription.service.ts ---
import { UtilsShared } from "../../../shared/utils/utils.shared";
import { SubscriptionEntity } from "../entities/subscription.entity";

export class SubscriptionService {
  public createSubscription = async (email: string) => {
    try {
      const subscription = new SubscriptionEntity();

      if (!(await UtilsShared.validateEmail(email))) throw new Error(`Invalid email`);

      subscription.email = email;

      return await subscription.save();
    } catch (err) {
      throw new Error(`Failed to create subscription: ${err}`);
    }
  };
}

'''
'''--- src/modules/swap/controllers/swap.controller.ts ---
import { Request, Response } from "express";
import { SwapService } from "../services/swap.service";
import { CryptoShared } from "../../../shared/crypto/crypto.shared";
import { MailShared } from "../../../shared/email/email.shared";
import { UtilsShared } from "../../../shared/utils/utils.shared";

export class SwapController {
  private swapService: SwapService;
  private mailService: MailShared;

  constructor() {
    this.swapService = new SwapService();
    this.mailService = new MailShared();
  }

  public getPreviewSwap = async (req: Request, res: Response) => {
    try {
      const { fromCoin, toCoin, amount, blockchain, address } = req.body;

      if (!fromCoin || !toCoin || !amount || !blockchain) return res.status(400).send({ message: "Invalid data." });

      const previewData = await this.swapService.getPreviewSwap(fromCoin, toCoin, amount, blockchain, address);
      res.send(previewData);
    } catch (error: any) {
      console.log(error);
      return res.status(500).send({ message: error.message });
    }
  };

  public sendSwap = async (req: Request, res: Response) => {
    try {
      const { defixId, fromCoin, toCoin, pkEncrypt, priceRoute, blockchain, language } = req.body;

      let lang = language;
      if (lang !== "en" && lang !== "es") {
        lang = "en";
      }

      if (!fromCoin || !toCoin || !defixId || !priceRoute || !pkEncrypt || !blockchain) return res.status(400).send({ message: "Invalid data." });

      const privateKey = CryptoShared.decrypt(pkEncrypt);

      if (!privateKey) return res.status(400).send({ message: "privateKey invalid." });

      const address = await UtilsShared.getAddressUser(defixId, blockchain);

      if (!address) return res.status(400).send({ message: "Address invalid." });

      const swapResult = await this.swapService.sendSwap(defixId, fromCoin, toCoin, priceRoute, privateKey, blockchain, address);

      this.mailService.emailSuccessSwap(
        defixId,
        fromCoin,
        swapResult.amount,
        toCoin,
        swapResult.destAmount,
        blockchain,
        swapResult.hash,
        swapResult.createdAt,
        lang
      );

      res.send(swapResult);
    } catch (error: any) {
      console.log(error);
      return res.status(500).send({ message: error.message });
    }
  };
}

'''
'''--- src/modules/swap/init.ts ---
import { Express, Router } from "express";
import { SwapController } from "./controllers/swap.controller";
import { Routes } from "./routes";

export class SwapModule {
  public routes: Routes;

  constructor(router: Router) {
    this.routes = new Routes(router, new SwapController());
  }
}

'''
'''--- src/modules/swap/routes.ts ---
import { Express, Router } from "express";
import { SwapController } from "./controllers/swap.controller";
import { TwoFAMiddleware } from "../../shared/middlewares/twoFA.middleware";

export class Routes {
  private controller: SwapController;
  private middleware2fa: TwoFAMiddleware;

  constructor(router: Router, controller: SwapController) {
    this.controller = controller;
    this.middleware2fa = new TwoFAMiddleware();
    this.configureRoutes(router);
  }

  private configureRoutes(router: Router) {
    /**
     * @swagger
     * /get-preview-swap/:
     *    post:
     *      tags:
     *        - Swap
     *      summary: Obtiene el Preview del swap, Tasa de cambio, hash y monto recibido..
     *      description: Manda campos requeridos para obtener el priceRoute.
     *      requestBody:
     *          content:
     *            application/json:
     *              schema:
     *                type: "object"
     *                required: [fromCoin, toCoin, amount, blockchain]
     *                properties: {
     *                  fromCoin: {
     *                    type: "string"
     *                  },
     *                  toCoin: {
     *                    type: "string"
     *                  },
     *                  amount: {
     *                    type: "number"
     *                  },
     *                  blockchain: {
     *                    type: "string"
     *                  },
     *                  address: {
     *                    type: "string"
     *                  }
     *                }
     *      responses:
     *        '200':
     *          description: Devuelve el preview o priceRoute del swap a realizar.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Internal Server Error.
     */
    router.post("/get-preview-swap/", this.controller.getPreviewSwap);

    /**
     * @swagger
     * /send-swap/:
     *    post:
     *      tags:
     *        - Swap
     *      summary: Realiza el swap
     *      description: Manda el priceRoute obtenido anteriormente para hacer el swap.
     *      requestBody:
     *          content:
     *            application/json:
     *              schema:
     *                type: "object"
     *                required: [defixId, fromCoin, toCoin, pkEncrypt, priceRoute, blockchain]
     *                properties: {
     *                  defixId: {
     *                    type: "string"
     *                  },
     *                  fromCoin: {
     *                    type: "string"
     *                  },
     *                  toCoin: {
     *                    type: "string"
     *                  },
     *                  pkEncrypt: {
     *                    type: "string"
     *                  },
     *                  priceRoute: {
     *                    type: "object"
     *                  },
     *                  blockchain: {
     *                    type: "string"
     *                  },
     *                  code2fa: {
     *                    type: "string"
     *                  },
     *                  language: {
     *                    type: "string"
     *                  },
     *                }
     *      responses:
     *        '200':
     *          description: Devuelve la transaccion del swap.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Internal Server Error.
     */
    router.post("/send-swap/", this.middleware2fa.validateTwoFA, this.controller.sendSwap);
  }
}

'''
'''--- src/modules/swap/services/swap.service.ts ---
import { UtilsShared } from "../../../shared/utils/utils.shared";
import { AddressService } from "../../address/services/address.service";
import { TransactionHistoryService } from "../../transactionHistory/services/transactionHistory.service";
import { blockchainService } from "../../../blockchain";

export class SwapService extends TransactionHistoryService {
  constructor() {
    super();
  }

  public getPreviewSwap = async (fromCoin: string, toCoin: string, amount: number, blockchain: string, address: string) => {
    try {
      if (!Object.keys(blockchainService).includes(blockchain.toLowerCase())) {
        throw new Error(`Invalid blockchain.`);
      }

      const swapResult = await blockchainService[blockchain.toLowerCase() as keyof typeof blockchainService].previewSwap(
        fromCoin,
        toCoin,
        amount,
        blockchain,
        address
      );
      console.log("Brrr");
      console.log(swapResult);

      if (!swapResult) {
        throw new Error(`Internal error swap preview.`);
      }

      return swapResult;
    } catch (err) {
      throw new Error(`Failed to get preview swap, ${err}`);
    }
  };

  public sendSwap = async (
    defixId: string,
    fromCoin: string,
    toCoin: string,
    priceRoute: any,
    privateKey: string,
    blockchain: string,
    address: string
  ) => {
    try {
      if (!Object.keys(blockchainService).includes(blockchain.toLowerCase())) {
        throw new Error(`Invalid blockchain.`);
      }

      const swapResult = await blockchainService[blockchain.toLowerCase() as keyof typeof blockchainService].sendSwap(
        priceRoute,
        privateKey,
        address
      );

      if (!swapResult) throw new Error(`Transaction hash.`);

      const coin = fromCoin + "/" + toCoin;

      const transactionHistory: any = await this.createTransactionHistory({
        fromDefix: defixId,
        toDefix: defixId,
        fromAddress: address,
        toAddress: address,
        coin,
        blockchain,
        amount: swapResult.srcAmount,
        hash: swapResult.transactionHash,
        typeTxn: "SWAP",
      });

      transactionHistory.block = swapResult.block;
      transactionHistory.destAmount = swapResult.destAmount;
      transactionHistory.linkTxn = UtilsShared.getLinkTransaction(blockchain, swapResult.transactionHash);

      return transactionHistory;
    } catch (err) {
      throw new Error(`Failed to send swap, ${err}`);
    }
  };
}

'''
'''--- src/modules/transactionHistory/controllers/transactionHistory.controller.ts ---
import { Request, Response } from "express";
import { TransactionHistoryService } from "../services/transactionHistory.service";

export class TransactionHistoryController {
  private transactionHistory: TransactionHistoryService;

  constructor() {
    this.transactionHistory = new TransactionHistoryService();
  }

  public getTransactionHistory = async (req: Request, res: Response) => {
    try {
      const { defixId, blockchain, coin, hash, typeTxn } = req.body;
      const transactions = await this.transactionHistory.getTransactionHistory(defixId, coin, blockchain, hash, typeTxn);
      res.send(transactions);
    } catch (error: any) {
      return res.status(500).send({ message: error.message });
    }
  };
}

'''
'''--- src/modules/transactionHistory/entities/transactionHistory.entity.ts ---
import { Entity, Column, PrimaryGeneratedColumn, BaseEntity, ManyToOne, CreateDateColumn } from "typeorm";
import { UserEntity } from "../../users/entities/user.entity";

@Entity({ name: "transaction_history" })
export class TransactionHistoryEntity extends BaseEntity {
  @PrimaryGeneratedColumn("uuid")
  id!: string;

  @Column({
    name: "from_defix",
    nullable: false,
  })
  fromDefix!: string;

  @Column({
    name: "to_defix",
    nullable: false,
  })
  toDefix!: string;

  @Column({
    name: "from_address",
    nullable: false,
  })
  fromAddress!: string;

  @Column({
    name: "to_address",
    nullable: false,
  })
  toAddress!: string;

  @Column({
    nullable: false,
  })
  blockchain!: string;

  @Column({
    nullable: false,
  })
  coin!: string;

  @Column({
    nullable: false,
    type: "float",
  })
  amount!: number;

  @Column({
    nullable: false,
  })
  hash!: string;

  @Column({
    name: "type_txn",
    nullable: false,
  })
  typeTxn!: string;

  @CreateDateColumn({
    name: "created_at",
  })
  createdAt!: Date;
}

'''
'''--- src/modules/transactionHistory/init.ts ---
import { Express, Router } from "express";
import { TransactionHistoryController } from "./controllers/transactionHistory.controller";
import { Routes } from "./routes";

export class TransactionHistoryModule {
  public routes: Routes;

  constructor(router: Router) {
    this.routes = new Routes(router, new TransactionHistoryController());
  }
}

'''
'''--- src/modules/transactionHistory/routes.ts ---
import { Express, Router } from "express";
import { TransactionHistoryController } from "./controllers/transactionHistory.controller";

export class Routes {
  private controller: TransactionHistoryController;

  constructor(router: Router, controller: TransactionHistoryController) {
    this.controller = controller;
    this.configureRoutes(router);
  }

  private configureRoutes(router: Router) {
    /**
     * @swagger
     * /transaction-history/:
     *    post:
     *      tags:
     *        - TransactionHistory
     *      summary: Historico de transacciones.
     *      description: Obtener historico de transacciones de un usuario.
     *      requestBody:
     *          content:
     *            application/json:
     *              schema:
     *                type: "object"
     *                required: [defixId]
     *                properties: {
     *                  defixId: {
     *                    type: "string"
     *                  },
     *                  blockchain: {
     *                    type: "string"
     *                  },
     *                  coin: {
     *                    type: "string"
     *                  },
     *                  hash: {
     *                    type: "string"
     *                  },
     *                  typeTxn: {
     *                    type: "string"
     *                  },
     *                }
     *      responses:
     *        '200':
     *          description: Devuelve array de transacciones.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Internal Server Error.
     */
    router.post("/transaction-history/", this.controller.getTransactionHistory);
  }
}

'''
'''--- src/modules/transactionHistory/services/transactionHistory.service.ts ---
import { UtilsShared } from "../../../shared/utils/utils.shared";
import { UserEntity } from "../../users/entities/user.entity";
import { TransactionHistoryEntity } from "../entities/transactionHistory.entity";

export class TransactionHistoryService {
  public createTransactionHistory = async ({ fromDefix, toDefix, fromAddress, toAddress, blockchain, coin, amount, hash, typeTxn }: any) => {
    try {
      const transactionHistory = new TransactionHistoryEntity();

      transactionHistory.fromDefix = fromDefix;
      transactionHistory.toDefix = toDefix;
      transactionHistory.fromAddress = fromAddress;
      transactionHistory.toAddress = toAddress;
      transactionHistory.blockchain = blockchain;
      transactionHistory.coin = coin;
      transactionHistory.amount = amount;
      transactionHistory.hash = hash;
      transactionHistory.typeTxn = typeTxn;

      return await transactionHistory.save();
    } catch (err) {
      throw new Error(`Failed to create address: ${err}`);
    }
  };

  public getTransactionHistory = async (
    defixId: string,
    coin: string | null = null,
    blockchain: string | null = null,
    hash: string | null = null,
    typeTxn: string | null = null,
    year: string | null = null
  ) => {
    try {
      const transactions = await TransactionHistoryEntity.createQueryBuilder("transaction")
        .where(
          "(transaction.fromDefix = :defixId OR transaction.toDefix = :defixId) \
          AND (transaction.coin = :coin IS NULL OR transaction.coin = :coin) \
          AND (transaction.blockchain = :blockchain IS NULL OR transaction.blockchain = :blockchain) \
          AND (transaction.hash = :hash IS NULL OR transaction.hash = :hash) \
          AND (transaction.typeTxn = :typeTxn IS NULL OR transaction.typeTxn = :typeTxn)",
          {
            defixId,
            coin,
            blockchain,
            hash,
            typeTxn,
          }
        )
        .getMany();

      return transactions;
    } catch (err) {
      console.log(err);
      throw new Error(`Failed to get address: ${err}`);
    }
  };
}

'''
'''--- src/modules/transfer/controllers/transfer.controller.ts ---
import { Request, Response } from "express";
import { TransferService } from "../services/transfer.service";
import { CryptoShared } from "../../../shared/crypto/crypto.shared";
import { MailShared } from "../../../shared/email/email.shared";

export class TransferController {
  private transferService: TransferService;
  private mailService: MailShared;

  constructor() {
    this.transferService = new TransferService();
    this.mailService = new MailShared();
  }

  public getFeeTransfer = async (req: Request, res: Response) => {
    try {
      const { coin, blockchain, amount, address } = req.body;

      if (!coin || !blockchain) return res.status(400).send({ message: "Invalid data." });

      const previewData = await this.transferService.getFeeTransfer(coin, blockchain, amount, address);
      res.send(previewData);
    } catch (error: any) {
      return res.status(500).send({ message: error.message });
    }
  };

  public sendTransfer = async (req: Request, res: Response) => {
    try {
      const { defixId, pkEncrypt, toAddress, coin, amount, blockchain, language } = req.body;

      let lang = language;
      if (lang !== "en" && lang !== "es") {
        lang = "en";
      }

      if (!defixId || !pkEncrypt || !toAddress || !coin || !amount || !blockchain) return res.status(400).send({ message: "Invalid data." });

      const privateKey = CryptoShared.decrypt(pkEncrypt);

      if (!privateKey) return res.status(400).send({ message: "privateKey invalid." });

      const transaction = await this.transferService.sendTransfer(defixId, privateKey, toAddress, coin, amount, blockchain);

      this.mailService.emailSuccessWithdrawal(defixId, toAddress, amount, coin, blockchain, transaction.hash, lang);
      this.mailService.emailReceivedPayment(defixId, toAddress, amount, coin, blockchain, transaction.hash, lang);

      res.send(transaction);
    } catch (error: any) {
      console.log(error.message);
      return res.status(500).send({ message: error.message });
    }
  };
}

'''
'''--- src/modules/transfer/init.ts ---
import { Express, Router } from "express";
import { TransferController } from "./controllers/transfer.controller";
import { Routes } from "./routes";

export class TransferModule {
  public routes: Routes;

  constructor(router: Router) {
    this.routes = new Routes(router, new TransferController());
  }
}

'''
'''--- src/modules/transfer/routes.ts ---
import { Express, Router } from "express";
import { TransferController } from "./controllers/transfer.controller";
import { TwoFAMiddleware } from "../../shared/middlewares/twoFA.middleware";

export class Routes {
  private controller: TransferController;
  private middleware2fa: TwoFAMiddleware;

  constructor(router: Router, controller: TransferController) {
    this.controller = controller;
    this.middleware2fa = new TwoFAMiddleware();
    this.configureRoutes(router);
  }

  private configureRoutes(router: Router) {
    /**
     * @swagger
     * /get-fee-transfer/:
     *    post:
     *      tags:
     *        - Transfer
     *      summary: Obtiene el fee de la transferencia..
     *      description: Manda campos requeridos para obtener el fee.
     *      requestBody:
     *          content:
     *            application/json:
     *              schema:
     *                type: "object"
     *                required: [coin, blockchain]
     *                properties: {
     *                  coin: {
     *                    type: "string"
     *                  },
     *                  blockchain: {
     *                    type: "string"
     *                  },
     *                  amount: {
     *                    type: "number"
     *                  },
     *                  address: {
     *                    type: "string"
     *                  }
     *                }
     *      responses:
     *        '200':
     *          description: Devuelve el preview de la transfer.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Internal Server Error.
     */
    router.post("/get-fee-transfer/", this.controller.getFeeTransfer);

    /**
     * @swagger
     * /send-transfer/:
     *    post:
     *      tags:
     *        - Transfer
     *      summary: Hacer transferencia.
     *      description: Manda campos requeridos para hacer una transaction.
     *      requestBody:
     *          content:
     *            application/json:
     *              schema:
     *                type: "object"
     *                required: [defixId, pkEncrypt, toAddress, coin, amount, blockchain]
     *                properties: {
     *                  defixId: {
     *                    type: "string"
     *                  },
     *                  pkEncrypt: {
     *                    type: "string"
     *                  },
     *                  toAddress: {
     *                    type: "string"
     *                  },
     *                  coin: {
     *                    type: "string"
     *                  },
     *                  amount: {
     *                    type: "number"
     *                  },
     *                  blockchain: {
     *                    type: "string"
     *                  },
     *                  code2fa: {
     *                    type: "string"
     *                  },
     *                  language: {
     *                    type: "string"
     *                  },
     *                }
     *      responses:
     *        '200':
     *          description: Devuelve la transaccion realizada.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Internal Server Error.
     */
    router.post("/send-transfer/", this.middleware2fa.validateTwoFA, this.controller.sendTransfer);
  }
}

'''
'''--- src/modules/transfer/services/transfer.service.ts ---
import { UtilsShared } from "../../../shared/utils/utils.shared";
import { AddressService } from "../../address/services/address.service";
import { TransactionHistoryService } from "../../transactionHistory/services/transactionHistory.service";
import { blockchainService } from "../../../blockchain";
import { TransactionHistoryEntity } from "../../transactionHistory/entities/transactionHistory.entity";
import { FrequentService } from "../../frequent/services/frequent.service";

export class TransferService extends TransactionHistoryService {
  private addressService: AddressService;
  private frequentService: FrequentService;

  constructor() {
    super();
    this.addressService = new AddressService();
    this.frequentService = new FrequentService();
  }

  public getFeeTransfer = async (coin: string, blockchain: string, amount: number | undefined, address: string | undefined) => {
    try {
      if (!Object.keys(blockchainService).includes(blockchain.toLowerCase())) {
        throw new Error(`Invalid blockchain.`);
      }

      const feeTransfer = await blockchainService[blockchain.toLowerCase() as keyof typeof blockchainService].getFeeTransaction(
        coin,
        blockchain,
        "TRANSFER",
        amount,
        address
      );

      if (!feeTransfer) {
        throw new Error(`Internal error fee preview.`);
      }

      return feeTransfer;
    } catch (err) {
      throw new Error(`Failed to get fee transfer, ${err}`);
    }
  };

  public sendTransfer = async (fromDefix: string, privateKey: string, toDefix: string, coin: string, amount: number, blockchain: string) => {
    try {
      let transactionHash: string | undefined, fromAddress, toAddress, tipoEnvio;

      if (fromDefix.includes(".defix3")) {
        fromAddress = (await this.addressService.getAddressByDefixId(fromDefix, blockchain))?.address;
      } else {
        fromAddress = fromDefix;
      }

      if (toDefix.includes(".defix3")) {
        toAddress = (await this.addressService.getAddressByDefixId(toDefix, blockchain))?.address;
        tipoEnvio = "user";
      } else {
        toAddress = toDefix;
        tipoEnvio = "wallet";
      }

      if (!fromAddress || !toAddress) throw new Error(`Invalid data.`);

      if (Object.keys(blockchainService).includes(coin.toLowerCase())) {
        transactionHash = await blockchainService[coin.toLowerCase() as keyof typeof blockchainService].sendTransfer(
          fromAddress,
          privateKey,
          toAddress,
          amount,
          coin
        );
      } else {
        if (!Object.keys(blockchainService).includes(blockchain.toLowerCase())) {
          throw new Error(`Invalid data.`);
        }
        const srcContract = await UtilsShared.getTokenContract(coin, blockchain);

        console.log(srcContract);

        if (!srcContract) throw new Error(`Failed to get token contract.`);

        transactionHash = await blockchainService[blockchain.toLowerCase() as keyof typeof blockchainService].sendTransferToken(
          fromAddress,
          privateKey,
          toAddress,
          amount,
          srcContract
        );
      }

      if (!transactionHash) throw new Error(`Transaction hash.`);

      const transaction = await this.createTransactionHistory({
        fromDefix,
        toDefix,
        fromAddress,
        toAddress,
        blockchain,
        coin,
        amount,
        hash: transactionHash,
        typeTxn: "TRANSFER",
      });

      await this.frequentService.createFrequent(fromDefix, toDefix, "TRANSFER");
      return transaction;
      // const resSend = await getEmailFlagFN(fromDefix, "SEND");
      // const resReceive = await getEmailFlagFN(toDefix, "RECEIVE");
      // const item = {
      //   monto: amount,
      //   moneda: coin,
      //   receptor: toDefix,
      //   emisor: fromDefix,
      //   tipoEnvio: tipoEnvio,
      // };
      // EnvioCorreo(resSend, resReceive, "envio", item);
    } catch (err) {
      throw new Error(`Failed to send transfer, ${err}`);
    }
  };
}

'''
'''--- src/modules/users/controllers/twoFA.controller.ts ---
import { Request, Response } from "express";
import { TwoFAService } from "../services/twoFA.service";

export class TwoFAController {
  private twoFAService: TwoFAService;

  constructor() {
    this.twoFAService = new TwoFAService();
  }

  public generateTwoFA = async (req: Request, res: Response) => {
    try {
      const { defixId } = req.body;

      const response = await this.twoFAService.generateTwoFA(defixId);

      return res.send(response);
    } catch (error: any) {
      return res.status(500).send({ message: error.message });
    }
  };

  public activateTwoFA = async (req: Request, res: Response) => {
    try {
      const { defixId, code2fa } = req.body;

      if (!code2fa) return res.status(400).send({ message: "Invalid data." });

      await this.twoFAService.activateTwoFA(defixId, code2fa);

      return res.status(204).send();
    } catch (error: any) {
      return res.status(500).send({ message: error.message });
    }
  };

  public deactivateTwoFA = async (req: Request, res: Response) => {
    try {
      const { defixId, code2fa } = req.body;

      if (!code2fa) return res.status(400).send({ message: "Invalid data." });

      await this.twoFAService.deactivateTwoFA(defixId, code2fa);

      return res.status(204).send();
    } catch (error: any) {
      return res.status(500).send({ message: error.message });
    }
  };

  public statusTwoFA = async (req: Request, res: Response) => {
    try {
      const { defixId } = req.body;

      const response = await this.twoFAService.statusTwoFA(defixId);

      return res.send(response);
    } catch (error: any) {
      return res.status(500).send({ message: error.message });
    }
  };
}

'''
'''--- src/modules/users/controllers/user.controller.ts ---
import { Request, Response } from "express";
import { UserService } from "../services/user.service";
import { UserEntity } from "../entities/user.entity";
import multer from "multer";

export class UserController {
  private userService: UserService;

  constructor() {
    this.userService = new UserService();
  }

  public validateDefixId = async (req: Request, res: Response) => {
    try {
      const { defixId } = req.body;

      const user = await this.userService.getUserByDefixId(defixId);

      if (!user) return res.send(false);

      return res.send(true);
    } catch (error: any) {
      return res.status(500).send({ message: error.message });
    }
  };

  public validateEmail = async (req: Request, res: Response) => {
    try {
      const { defixId, email } = req.body;

      const user = await this.userService.getUserByEmail(email);

      if (!user) return res.send(false);

      if (user.defixId === defixId) return res.send(false);

      return res.send(true);
    } catch (error: any) {
      return res.status(500).send({ message: error.message });
    }
  };

  public getUsers = async (req: Request, res: Response) => {
    try {
      const users = await this.userService.getUsers();
      res.send(users);
    } catch (error: any) {
      return res.status(500).send({ message: error.message });
    }
  };

  public getUserData = async (req: Request, res: Response) => {
    try {
      const { defixId } = req.body;
      const user = await this.userService.getUserDataByDefixId(defixId);
      if (!user) return res.status(400).send({ message: "User not exists." });
      res.send(user);
    } catch (error: any) {
      return res.status(500).send({ message: error.message });
    }
  };

  public updateUser = async (req: Request, res: Response) => {
    try {
      const { defixId } = req.body;

      console.log(defixId);

      if (req.file) {
        req.body.avatar = req.file.filename;
      }

      await this.validateFlags(req);

      const updatedUser = await this.userService.updateUser(defixId, req.body);
      res.send(updatedUser);
    } catch (error: any) {
      return res.status(500).send({ message: error.message });
    }
  };

  private validateFlags = async (req: Request) => {
    if (typeof req.body.flagSign === "string") {
      if (req.body.flagSign.toLowerCase() === "true") req.body.flagSign = true;
      else if (req.body.flagSign.toLowerCase() === "false") {
        req.body.flagSign = false;
      }
    }

    if (typeof req.body.flagNews === "string") {
      if (req.body.flagNews.toLowerCase() === "true") req.body.flagNews = true;
      else if (req.body.flagNews.toLowerCase() === "false") {
        req.body.flagNews = false;
      }
    }

    if (typeof req.body.flagDeposit === "string") {
      if (req.body.flagDeposit.toLowerCase() === "true") req.body.flagDeposit = true;
      else if (req.body.flagDeposit.toLowerCase() === "false") {
        req.body.flagDeposit = false;
      }
    }

    if (typeof req.body.flagWithdraw === "string") {
      if (req.body.flagWithdraw.toLowerCase() === "true") req.body.flagWithdraw = true;
      else if (req.body.flagWithdraw.toLowerCase() === "false") {
        req.body.flagWithdraw = false;
      }
    }

    if (typeof req.body.flagEvolution === "string") {
      if (req.body.flagEvolution.toLowerCase() === "true") req.body.flagEvolution = true;
      else if (req.body.flagEvolution.toLowerCase() === "false") {
        req.body.flagEvolution = false;
      }
    }
  };
}

'''
'''--- src/modules/users/entities/user.entity.ts ---
import { Entity, Column, PrimaryGeneratedColumn, BaseEntity, CreateDateColumn, UpdateDateColumn } from "typeorm";

@Entity({ name: "users" })
export class UserEntity extends BaseEntity {
  @PrimaryGeneratedColumn("uuid")
  id!: string;

  @Column({
    name: "defix_id",
    nullable: false,
    unique: true,
  })
  defixId!: string;

  @Column({
    nullable: true,
    unique: true,
  })
  email!: string;

  @Column({
    name: "import_id",
    nullable: false,
    unique: true,
  })
  importId!: string;

  @Column({
    nullable: true,
  })
  name!: string;

  @Column({
    nullable: true,
  })
  lastname!: string;

  @Column({
    nullable: true,
  })
  avatar!: string;

  @Column({
    name: "close_sessions",
    nullable: true,
    default: false,
  })
  closeSessions!: boolean;

  @Column({
    nullable: true,
    default: false,
  })
  twofa!: boolean;

  @Column({
    name: "legal_document",
    nullable: true,
    unique: true,
  })
  legalDocument!: string;

  @Column({
    name: "type_document",
    nullable: true,
  })
  typeDocument!: string;

  @Column({
    nullable: true,
  })
  secret!: string;

  @Column({
    name: "flag_news",
    nullable: true,
  })
  flagNews!: boolean;

  @Column({
    name: "flag_deposit",
    nullable: true,
  })
  flagDeposit!: boolean;

  @Column({
    name: "flag_sign",
    nullable: true,
  })
  flagSign!: boolean;

  @Column({
    name: "flag_withdrawal",
    nullable: true,
  })
  flagWithdraw!: boolean;

  @Column({
    name: "flag_evolution",
    nullable: true,
  })
  flagEvolution!: boolean;

  @Column({
    default: "en",
    nullable: true,
  })
  language!: string;

  @CreateDateColumn({
    name: "created_at",
  })
  createdAt!: Date;

  @UpdateDateColumn({
    name: "updated_at",
  })
  updatedAt!: Date;
}

'''
'''--- src/modules/users/init.ts ---
import { Express, Router } from "express";
import { UserController } from "./controllers/user.controller";
import { RoutesUser } from "./routes.user";
import { RoutesTwoFA } from "./routes.twoFA";
import { TwoFAController } from "./controllers/twoFA.controller";

export class UsersModule {
  public routes: RoutesUser;
  public routesTwoFA: RoutesTwoFA;

  constructor(router: Router) {
    this.routes = new RoutesUser(router, new UserController());
    this.routesTwoFA = new RoutesTwoFA(router, new TwoFAController());
  }
}

'''
'''--- src/modules/users/routes.twoFA.ts ---
import { Express, Router } from "express";
import { SharedMiddleware } from "../../shared/middlewares/shared.middleware";
import { TwoFAController } from "./controllers/twoFA.controller";
export class RoutesTwoFA {
  private controller: TwoFAController;
  private middleware: SharedMiddleware;

  constructor(router: Router, controller: TwoFAController) {
    this.controller = controller;
    this.middleware = new SharedMiddleware();
    this.configureRoutes(router);
  }

  private configureRoutes(router: Router) {
    /**
     * Post track
     * @swagger
     * /generate-2fa/:
     *    post:
     *      tags:
     *        - 2FA
     *      summary: Generar 2FA.
     *      description: Mandar defixId y seedPhrase encriptado para generar un 2fa para el usuario.
     *      requestBody:
     *          content:
     *            application/json:
     *              schema:
     *                type: "object"
     *                required: [defixId, seedPhrase]
     *                properties: {
     *                  defixId: {
     *                    type: "string"
     *                  },
     *                }
     *      responses:
     *        '200':
     *          description: Devuelve el qr y el codigo 2fa.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Internal Server Error.
     */
    router.post(
      "/generate-2fa/",
      this.middleware.defixIdValid,
      this.controller.generateTwoFA
    );

    /**
     * Post track
     * @swagger
     * /activate-2fa/:
     *    post:
     *      tags:
     *        - 2FA
     *      summary: Activar 2FA.
     *      description: Activa el 2fa en la base de datos del usuario.
     *      requestBody:
     *          content:
     *            application/json:
     *              schema:
     *                type: "object"
     *                required: [defixId, seedPhrase, code2fa]
     *                properties: {
     *                  defixId: {
     *                    type: "string"
     *                  },
     *                  code2fa: {
     *                    type: "string"
     *                  }
     *                }
     *      responses:
     *        '204':
     *          description: Success.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Internal Server Error.
     */
    router.post(
      "/activate-2fa/",
      this.middleware.defixIdValid,
      this.controller.activateTwoFA
    );

    /**
     * Post track
     * @swagger
     * /deactivate-2fa/:
     *    post:
     *      tags:
     *        - 2FA
     *      summary: Desactivar 2FA.
     *      description: Desactiva el 2fa en la base de datos del usuario.
     *      requestBody:
     *          content:
     *            application/json:
     *              schema:
     *                type: "object"
     *                required: [defixId, code2fa]
     *                properties: {
     *                  defixId: {
     *                    type: "string"
     *                  },
     *                  code2fa: {
     *                    type: "string"
     *                  }
     *                }
     *      responses:
     *        '204':
     *          description: Success.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Internal Server Error.
     */
    router.post(
      "/deactivate-2fa/",
      this.middleware.defixIdValid,
      this.controller.deactivateTwoFA
    );

    /**
     * Post track
     * @swagger
     * /status-2fa/:
     *    post:
     *      tags:
     *        - 2FA
     *      summary: Status 2FA.
     *      description: Te da un Status del 2FA del usuario.
     *      requestBody:
     *          content:
     *            application/json:
     *              schema:
     *                type: "object"
     *                required: [defixId]
     *                properties: {
     *                  defixId: {
     *                    type: "string"
     *                  }
     *                }
     *      responses:
     *        '200':
     *          description: Devuelve un boolean si el 2FA esta activo o no.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Internal Server Error.
     */
    router.post(
      "/status-2fa/",
      this.middleware.defixIdValid,
      this.controller.statusTwoFA
    );
  }
}

'''
'''--- src/modules/users/routes.user.ts ---
import { Express, Router } from "express";
import { UserController } from "./controllers/user.controller";
import { SharedMiddleware } from "../../shared/middlewares/shared.middleware";
import MulterConfig from "../../config/multer";
export class RoutesUser {
  private controller: UserController;
  private middleware: SharedMiddleware;
  private multerConfig: MulterConfig;

  constructor(router: Router, controller: UserController) {
    this.controller = controller;
    this.middleware = new SharedMiddleware();
    this.multerConfig = new MulterConfig();
    this.configureRoutes(router);
  }

  private configureRoutes(router: Router) {
    /**
     * Post track
     * @swagger
     * /validate-defix3/:
     *    post:
     *      tags:
     *        - User
     *      summary: Validar si un usuario defix3 existe.
     *      description: Response un Boolean si el usuario existe o no.
     *      requestBody:
     *          content:
     *            application/json:
     *              schema:
     *                type: "object"
     *                required: ["defixId"]
     *                properties: {
     *                  defixId: {
     *                    type: "string"
     *                  }
     *                }
     *      responses:
     *        '200':
     *          description: Responde un boolean.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Bad Request.
     */
    router.post("/validate-defix3/", this.middleware.defixIdAvailable, this.controller.validateDefixId);

    /**
     * Post track
     * @swagger
     * /validate-email/:
     *    post:
     *      tags:
     *        - User
     *      summary: Validar si un email existe.
     *      description: Response un Boolean si el email existe o no.
     *      requestBody:
     *          content:
     *            application/json:
     *              schema:
     *                type: "object"
     *                required: ["email"]
     *                properties: {
     *                  email: {
     *                    type: "string"
     *                  }
     *                }
     *      responses:
     *        '200':
     *          description: Responde un boolean.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Bad Request.
     */
    router.post("/validate-email/", this.controller.validateEmail);

    /**
     * Post track
     * @swagger
     * /get-users:
     *    get:
     *      tags:
     *        - User
     *      summary: Lista los username de los usuarios registrados.
     *      description: Responde solo el defixId de los usuarios.
     *      responses:
     *        '200':
     *          description: Responde un Array con la lista de usuarios.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Bad Request.
     */
    router.get("/get-users", this.controller.getUsers);

    /**
     * Post track
     * @swagger
     * /get-user-data/:
     *    post:
     *      tags:
     *        - User
     *      summary: Obtiene la data de configuracion del usuario.
     *      description: Obtiene data del defixId enviado.
     *      requestBody:
     *          content:
     *            application/json:
     *              schema:
     *                type: "object"
     *                required: [defixId]
     *                properties: {
     *                  defixId: {
     *                    type: "string"
     *                  }
     *                }
     *      responses:
     *        '200':
     *          description: Responde objeto con la data.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Bad Request.
     */
    router.post("/get-user-data/", this.middleware.defixIdValid, this.controller.getUserData);

    /**
     * Post track
     * @swagger
     * /update-user/:
     *    patch:
     *      tags:
     *        - User
     *      summary: Actualizar data del usuario.
     *      description: Manda data para actualizar el usuario.
     *      requestBody:
     *          content:
     *            application/json:
     *              schema:
     *                type: "object"
     *                required: [defixId]
     *                properties: {
     *                  defixId: {
     *                    type: "string"
     *                  },
     *                }
     *      responses:
     *        '200':
     *          description: Buena respuesta.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Internal server error.
     */
    router.patch("/update-user/", this.multerConfig.upload().single("avatar"), this.controller.updateUser);
  }
}

'''
'''--- src/modules/users/services/twoFA.service.ts ---
import dataSource from "../../../config/dataSource";
import { UtilsShared } from "../../../shared/utils/utils.shared";
import { UserEntity } from "../entities/user.entity";
import { UserService } from "./user.service";
import { authenticator } from "otplib";
import QRCode from "qrcode";

export class TwoFAService extends UserService {
  constructor() {
    super();
  }

  public generateTwoFA = async (defixId: string) => {
    try {
      const user = await this.getUserByDefixId(defixId);

      if (!user) throw new Error(`User not exists.`);

      // if (user.twofa) throw new Error(`2fa is already active.`);

      let secret;

      if (!user.secret) {
        secret = authenticator.generateSecret();

        const userUpdated = await this.updateUser(defixId, { secret });

        if (userUpdated.affected === 0) throw new Error(`Failed to update user.`);
      } else {
        secret = user.secret;
      }

      const codeAuth = authenticator.keyuri(defixId, "Defix3 App", secret);

      // const qr = await QRCode.toDataURL(codigo);

      console.log("QR", await QRCode.toDataURL(codeAuth));

      return { codeAuth, secret };
    } catch (err) {
      throw new Error(`Failed to generate 2fa, ${err}`);
    }
  };

  public activateTwoFA = async (defixId: string, code2fa: string) => {
    try {
      const user = await this.getUserByDefixId(defixId);

      if (!user) throw new Error(`User not exists.`);

      if (!user.secret) throw new Error(`The user does not have the secret.`);

      const auth = authenticator.check(code2fa, user.secret);

      if (!auth) throw new Error(`Error code 2fa.`);

      const userUpdated = await this.updateUser(defixId, { twofa: true });
      if (userUpdated.affected === 0) throw new Error(`Failed to update user.`);

      return;
    } catch (err) {
      throw new Error(`Failed to activate 2fa, ${err}`);
    }
  };

  public deactivateTwoFA = async (defixId: string, code2fa: string) => {
    try {
      const user = await this.getUserByDefixId(defixId);

      if (!user) throw new Error(`User not exists.`);

      if (!user.secret) throw new Error(`The user does not have the secret.`);

      const auth = authenticator.check(code2fa, user.secret);

      if (!auth) throw new Error(`Error code 2fa.`);

      const userUpdated = await this.updateUser(defixId, {
        twofa: false,
        secret: null,
      });
      if (userUpdated.affected === 0) throw new Error(`Failed to update user.`);

      return;
    } catch (err) {
      throw new Error(`Failed to deactivate 2fa, ${err}`);
    }
  };

  public checkTwoFA = async (code2fa: string, secret: string) => {
    try {
      const auth = authenticator.check(code2fa, secret);

      return auth;
    } catch (err) {
      throw new Error(`Failed to validate 2fa, ${err}`);
    }
  };

  public statusTwoFA = async (defixId: string) => {
    try {
      const user = await this.getUserByDefixId(defixId);

      if (!user) throw new Error(`User not exists.`);

      return user.twofa;
    } catch (err) {
      throw new Error(`Failed to generate 2fa, ${err}`);
    }
  };
}

'''
'''--- src/modules/users/services/user.service.ts ---
import dataSource from "../../../config/dataSource";
import { UtilsShared } from "../../../shared/utils/utils.shared";
import { UserEntity } from "../entities/user.entity";

export class UserService {
  public createUser = async (defixId: string, importId: string, language: string) => {
    try {
      const user = new UserEntity();

      user.defixId = defixId;
      user.importId = importId;
      user.language = language;
      // email ? (user.email = email) : undefined;

      const userSaved = await user.save();

      return userSaved;
    } catch (err) {
      throw new Error(`Failed to create user: ${err}`);
    }
  };

  public getUserByImportId = async (importId: string) => {
    return await UserEntity.findOneBy({ importId });
  };

  public getUserByDefixId = async (defixId: string) => {
    return await UserEntity.findOneBy({ defixId });
  };

  public getUserByEmail = async (email: string) => {
    return await UserEntity.findOneBy({ email });
  };

  public getUsers = async () => {
    return await UserEntity.find({ select: ["defixId", "id"] });
  };

  public getUserDataByDefixId = async (defixId: string) => {
    const userData = await UserEntity.createQueryBuilder("user")
      .select([
        "user.defixId",
        "user.email",
        "user.flagNews",
        "user.flagDeposit",
        "user.flagWithdraw",
        "user.flagSign",
        "user.flagEvolution",
        "user.name",
        "user.lastname",
        "user.avatar",
        "user.legalDocument",
        "user.typeDocument",
        "user.closeSessions",
      ])
      .where("user.defixId = :defixId", { defixId: defixId })
      .getOne();

    return userData;
  };

  public updateUser = async (defixId: string, body: any) => {
    const result = await UserEntity.update({ defixId: defixId }, body);

    if (result.affected === 0) throw new Error(`Failed to updated user.`);

    return result;
  };
}

'''
'''--- src/modules/wallets/controllers/wallet.controller.ts ---
import { Request, Response } from "express";
import { WalletService } from "../services/wallet.service";
import { CryptoShared } from "../../../shared/crypto/crypto.shared";
import { UtilsShared } from "../../../shared/utils/utils.shared";
import { MailShared } from "../../../shared/email/email.shared";

export class WalletController {
  private walletService: WalletService;
  private mailService: MailShared;

  constructor() {
    this.walletService = new WalletService();
    this.mailService = new MailShared();
  }

  public createWalletDefix = async (req: Request, res: Response) => {
    try {
      const { defixId, seedPhrase, email, language } = req.body;
      let lang = language;

      if (!defixId || !seedPhrase) return res.status(400).send({ message: "Invalid data." });

      const mnemonic = CryptoShared.decrypt(seedPhrase);

      if (!mnemonic) return res.status(400).send({ message: "Seed Phrase invalid." });

      if (lang !== "en" && lang !== "es") {
        lang = "en";
      }

      const defixID: string = defixId.toLowerCase();

      const wallet = await this.walletService.createWalletDefix(defixID, mnemonic, lang);

      if (!wallet) return res.status(400).send({ message: "Internal server error." });

      if (await UtilsShared.validateEmail(email)) {
        this.mailService.sendMailPhrase(mnemonic, defixID, email, lang);
      }
      return res.send(wallet);
    } catch (error: any) {
      return res.status(500).send({ message: error.message });
    }
  };

  public importWalletDefix = async (req: Request, res: Response) => {
    try {
      const { seedPhrase, language } = req.body;

      let lang = language;

      if (lang !== "en" && lang !== "es") {
        lang = "en";
      }

      if (!seedPhrase) return res.status(400).send({ message: "Invalid data." });

      const mnemonic = CryptoShared.decrypt(seedPhrase);

      if (!mnemonic) return res.status(400).send({ message: "Seed Phrase invalid." });

      const wallet = await this.walletService.importWalletDefix(mnemonic, lang);

      return res.send(wallet);
    } catch (error: any) {
      return res.status(500).send({ message: error.message });
    }
  };

  public importFromPrivateKey = async (req: Request, res: Response) => {
    try {
      const { pkEncrypt } = req.body;
      if (!pkEncrypt) return res.status(400).send({ message: "Invalid data." });

      const privateKey = CryptoShared.decrypt(pkEncrypt);

      if (!privateKey) return res.status(400).send({ message: "Invalid data." });

      const wallet = await this.walletService.importFromPrivateKey(privateKey);

      return res.send(wallet);
    } catch (error: any) {
      return res.status(500).send({ message: error.message });
    }
  };

  public validateAddress = async (req: Request, res: Response) => {
    try {
      const { address, blockchain } = req.body;
      if (!address || !blockchain) return res.status(400).send({ message: "Invalid data." });

      res.send(await this.walletService.validateAddress(address, blockchain));
    } catch (error: any) {
      return res.status(500).send({ message: error.message });
    }
  };

  public importFromJson = async (req: Request, res: Response) => {
    try {
      const { data } = req.body;
      if (!data) return res.status(400).send({ message: "Invalid data." });

      const { ciphertext, typeLog, dateTime } = JSON.parse(data);
      if (!ciphertext || !typeLog || !dateTime) return res.status(400).send({ message: "Invalid variables." });

      const dataImport = {
        ciphertext,
        typeLog,
        dateTime,
      };

      const wallet = await this.walletService.importFromJson(dataImport);

      return res.send(wallet);
    } catch (error: any) {
      return res.status(500).send({ message: error.message });
    }
  };

  public exportWalletJson = async (req: Request, res: Response) => {
    try {
      const { ciphertext, typeLog } = req.body;
      const ciphertextMain = CryptoShared.decrypt(ciphertext);

      if (!ciphertextMain) return res.status(400).send({ message: "Invalid data." });

      if (!ciphertextMain && (typeLog !== "MNEMONIC" || typeLog !== "PRIVATE_KEY")) return res.status(400).send({ message: "Invalid data." });
      res.send(JSON.stringify(await this.walletService.exportWalletJson(ciphertextMain, typeLog)));
    } catch (error: any) {
      return res.status(500).send({ message: error.message });
    }
  };
}

'''
'''--- src/modules/wallets/init.ts ---
import { Express, Router } from "express";
import { WalletController } from "./controllers/wallet.controller";
import { Routes } from "./routes";

export class WalletsModule {
  public routes: Routes;

  constructor(router: Router) {
    this.routes = new Routes(router, new WalletController());
  }
}

'''
'''--- src/modules/wallets/interfaces/credential.interface.ts ---
export interface CredentialInterface {
  name: string;
  address: string;
  privateKey: string;
}

'''
'''--- src/modules/wallets/interfaces/wallet.interface.ts ---
import { CredentialInterface } from "../interfaces/credential.interface";

export interface WalletInterface {
  defixId: string;
  credentials: Array<CredentialInterface>;
}

'''
'''--- src/modules/wallets/routes.ts ---
import { Express, Router } from "express";
import { WalletController } from "./controllers/wallet.controller";
import { SharedMiddleware } from "../../shared/middlewares/shared.middleware";

export class Routes {
  private controller: WalletController;
  private middleware: SharedMiddleware;

  constructor(router: Router, controller: WalletController) {
    this.controller = controller;
    this.middleware = new SharedMiddleware();
    this.configureRoutes(router);
  }

  private configureRoutes(router: Router) {
    /**
     * Post track
     * @swagger
     * /create-wallet/:
     *    post:
     *      tags:
     *        - Wallet
     *      summary: Crear wallet Defix3
     *      description: Te registra y crea una wallet Defix3 con todos los address de las blockchains admitidas.
     *      requestBody:
     *          content:
     *            application/json:
     *              schema:
     *                type: "object"
     *                required: [defixId, seedPhrase]
     *                properties: {
     *                  defixId: {
     *                    type: "string"
     *                  },
     *                  seedPhrase: {
     *                    type: "string"
     *                  },
     *                  email: {
     *                    type: "string"
     *                  },
     *                  language: {
     *                    type: "string"
     *                  },
     *                }
     *      responses:
     *        '200':
     *          description: Responde un Json con todas las credenciales y address de la wallet.
     *        '204':
     *          description: Bad Request.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Bad Request.
     */
    router.post("/create-wallet/", this.middleware.defixIdAvailable, this.controller.createWalletDefix);

    /**
     * Post track
     * @swagger
     * /import-wallet/:
     *    post:
     *      tags:
     *        - Wallet
     *      summary: Iniciar Sesion con wallet Defix3
     *      description: Ingresa el seedPhrase y te devuelve el username defix3 y las credenciales de la wallet.
     *      requestBody:
     *          content:
     *            application/json:
     *              schema:
     *                type: "object"
     *                required: [seedPhrase]
     *                properties: {
     *                  seedPhrase: {
     *                    type: "string"
     *                  }
     *                }
     *      responses:
     *        '200':
     *          description: Al igual que create, responde un Json con todas las credenciales y address de la wallet.
     *        '204':
     *          description: Bad Request.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Internal server error.
     */
    router.post("/import-wallet/", this.controller.importWalletDefix);

    /**
     * Post track
     * @swagger
     * /import-from-pk/:
     *    post:
     *      tags:
     *        - Wallet
     *      summary: Inicicar sesion con private key
     *      description: Si colocas una private key te devuelve la credencial de la blockchain
     *      requestBody:
     *          content:
     *            application/json:
     *              schema:
     *                type: "object"
     *                required: ["pkEncrypt"]
     *                properties: {
     *                  pkEncrypt: {
     *                    type: "string"
     *                  }
     *                }
     *      responses:
     *        '200':
     *          description: Te response la credencial de la blockchain
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Internal server error.
     */
    router.post("/import-from-pk/", this.controller.importFromPrivateKey);

    /**
     * Post track
     * @swagger
     * /validate-address/:
     *    post:
     *      tags:
     *        - Wallet
     *      summary: Validar si un address es valido.
     *      description: Valida si el address existe en la blockchain segun el coin, "BTC", "ETH", "NEAR" ...
     *      requestBody:
     *          content:
     *            application/json:
     *              schema:
     *                type: "object"
     *                required: [address, blockchain]
     *                properties: {
     *                  address: {
     *                    type: "string"
     *                  },
     *                  blockchain: {
     *                    type: "string"
     *                  }
     *                }
     *      responses:
     *        '200':
     *          description: Responde un boolean.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Internal server error.
     */
    router.post("/validate-address/", this.controller.validateAddress);

    /**
     * Post track
     * @swagger
     * /import-from-json/:
     *    post:
     *      tags:
     *        - Wallet
     *      summary: Inicicar sesion con json
     *      description: Manda los parametros del json y se logueara ya sea con seed phrase o private key
     *      requestBody:
     *          content:
     *            application/json:
     *              schema:
     *                type: "object"
     *                required: [ciphertext, typeLog, dateTime]
     *                properties: {
     *                  ciphertext: {
     *                    type: "string"
     *                  },
     *                  typeLog: {
     *                    type: "string"
     *                  },
     *                  dateTime: {
     *                    type: "number"
     *                  }
     *                }
     *      responses:
     *        '200':
     *          description: Te response ya las credentials que tenia el json o la cuenta completa.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Internal server error.
     */
    router.post("/import-from-json/", this.controller.importFromJson);

    /**
     * Post track
     * @swagger
     * /export-wallet-json/:
     *    post:
     *      tags:
     *        - Wallet
     *      summary: Exportar cuenta defix o crendenciales.
     *      description: Encripta los datos ya sea de la cuenta o crendenciales
     *      requestBody:
     *          content:
     *            application/json:
     *              schema:
     *                type: "object"
     *                required: [ciphertext, typeLog]
     *                properties: {
     *                  ciphertext: {
     *                    type: "string"
     *                  },
     *                  typeLog: {
     *                    type: "string"
     *                  }
     *                }
     *      responses:
     *        '200':
     *          description: Responde json con las encriptaciones.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Internal server error.
     */
    router.post("/export-wallet-json/", this.controller.exportWalletJson);
  }
}

'''
'''--- src/modules/wallets/services/wallet.service.ts ---
import { UtilsShared } from "../../../shared/utils/utils.shared";
import { CredentialInterface } from "../interfaces/credential.interface";
import { WalletInterface } from "../interfaces/wallet.interface";
import { UserService } from "../../users/services/user.service";
import { blockchainService } from "../../../blockchain";
import { UserEntity } from "../../users/entities/user.entity";
import { AddressService } from "../../address/services/address.service";
import { CryptoShared } from "../../../shared/crypto/crypto.shared";

export class WalletService {
  private userService: UserService;
  private addressService: AddressService;

  constructor() {
    this.userService = new UserService();
    this.addressService = new AddressService();
  }

  public createWalletDefix = async (defixId: string, mnemonic: string, language: string = "en") => {
    try {
      const credentials: CredentialInterface[] = [];
      for (const service of Object.values(blockchainService)) {
        credentials.push(await service.fromMnemonic(mnemonic));
      }

      const wallet: WalletInterface = {
        defixId: defixId,
        credentials: credentials,
      };

      await this.saveWalletDefix(mnemonic, wallet, language);

      return wallet;
    } catch (err) {
      console.log(err);
      throw new Error(`Failed to create wallet: ${err}`);
    }
  };

  public importWalletDefix = async (mnemonic: string, language: string) => {
    try {
      const importId = await UtilsShared.getIdNear(mnemonic);

      const user = await this.userService.getUserByImportId(importId);

      if (!user) throw new Error("Wallet does not exist in Defix3");

      const defixId = user.defixId;

      const credentials: CredentialInterface[] = [];
      for (const service of Object.values(blockchainService)) {
        credentials.push(await service.fromMnemonic(mnemonic));
      }

      const wallet: WalletInterface = {
        defixId: defixId,
        credentials: credentials,
      };

      this.validateWalletsUser(user, wallet);

      await this.userService.updateUser(user.defixId, { language: language || user.language });

      return wallet;
    } catch (err) {
      throw new Error(`Failed to import wallet: ${err}`);
    }
  };

  public importFromPrivateKey = async (privateKey: string) => {
    try {
      const credentials: CredentialInterface[] = [];
      for (const service of Object.values(blockchainService)) {
        const credential = await service.fromPrivateKey(privateKey);
        if (credential) {
          credentials.push(credential);
        }
      }

      if (credentials.length === 0) throw new Error(`Failed private key`);

      const wallet: WalletInterface = {
        defixId: credentials[0].address,
        credentials: credentials,
      };

      return wallet;
    } catch (err) {
      throw new Error(`Failed to import wallet: ${err}`);
    }
  };

  public importFromJson = async (dataImport: any) => {
    try {
      const credentials: CredentialInterface[] = [];
      let defixId: any;
      if (CryptoShared.decryptAES(dataImport.typeLog) === "MNEMONIC") {
        const mnemonic = CryptoShared.decryptAES(dataImport.ciphertext);
        const importId = await UtilsShared.getIdNear(mnemonic);

        const user = await this.userService.getUserByImportId(importId);

        if (!user) throw new Error("Wallet does not exist in Defix3");

        defixId = user.defixId;

        for (const service of Object.values(blockchainService)) {
          credentials.push(await service.fromMnemonic(mnemonic));
        }
      } else if (CryptoShared.decryptAES(dataImport.typeLog) === "PRIVATE_KEY") {
        for (const service of Object.values(blockchainService)) {
          const credential = await service.fromPrivateKey(CryptoShared.decryptAES(dataImport.ciphertext));
          if (credential) {
            credentials.push(credential);
          }
        }
        defixId = credentials[0].address;
      } else {
        throw new Error(`Invalid mnemonic and private key`);
      }
      const wallet: WalletInterface = {
        defixId: defixId,
        credentials: credentials,
      };
      return wallet;
    } catch (err) {
      throw new Error(`Failed to export wallet: ${err}`);
    }
  };

  public exportWalletJson = async (ciphertext: string, typeLog: string) => {
    try {
      const data = {
        ciphertext: CryptoShared.encryptAES(ciphertext),
        typeLog: CryptoShared.encryptAES(typeLog),
        dateTime: Date.now(),
      };

      return data;
    } catch (err) {
      throw new Error(`Failed to export wallet: ${err}`);
    }
  };

  public validateAddress = async (address: string, coin: string) => {
    try {
      if (address.includes(".defix3")) {
        const user = await this.userService.getUserByDefixId(address);
        if (!user) return false;
        return true;
      } else {
        return blockchainService[coin.toLowerCase() as keyof typeof blockchainService].isAddress(address);
      }
      throw new Error(`Invalid coin`);
    } catch (err) {
      throw new Error(`Failed to validate address: ${err}`);
    }
  };

  /**
   * Utils for WalletService
   */
  private saveWalletDefix = async (mnemonic: string, wallet: WalletInterface, language: string = "en") => {
    try {
      const importId = await UtilsShared.getIdNear(mnemonic);

      const user = await this.userService.createUser(wallet.defixId, importId, language);

      if (!user) throw new Error("Wallet does not exist in Defix3");

      for (let credential of wallet.credentials) {
        this.addressService.createAddress(user, credential.name, credential.address);
      }

      return user;
    } catch (err) {
      throw new Error(`Failed to save wallet addresses: ${err}`);
    }
  };

  private validateWalletsUser = async (user: UserEntity, wallet: WalletInterface) => {
    try {
      const walletsUser = await this.addressService.getAddressesByDefixId(user.defixId);

      for (let credential of wallet.credentials) {
        if (!walletsUser.find((element) => element.blockchain === credential.name)) {
          this.addressService.createAddress(user, credential.name, credential.address);
        }
      }
    } catch (err) {
      throw new Error(`Failed to validate wallet address: ${err}`);
    }
  };
}

'''
'''--- src/modules/withdraw/controllers/withdraw.controller.ts ---
import { Request, Response } from "express";
import { WithdrawService } from "../services/withdraw.service";
import { CryptoShared } from "../../../shared/crypto/crypto.shared";
import { MailShared } from "../../../shared/email/email.shared";

export class WithdrawController {
  private withdrawService: WithdrawService;
  private mailService: MailShared;

  constructor() {
    this.withdrawService = new WithdrawService();
    this.mailService = new MailShared();
  }

  public getFeeWithdraw = async (req: Request, res: Response) => {
    try {
      const { coin, blockchain, amount, address } = req.body;

      if (!coin || !blockchain) return res.status(400).send({ message: "Invalid data." });

      const previewData = await this.withdrawService.getFeeWithdraw(coin, blockchain, amount, address);
      res.send(previewData);
    } catch (error: any) {
      return res.status(500).send({ message: error.message });
    }
  };

  public sendWithdraw = async (req: Request, res: Response) => {
    try {
      const { defixId, pkEncrypt, toAddress, coin, amount, blockchain, language } = req.body;

      let lang = language;
      if (lang !== "en" && lang !== "es") {
        lang = "en";
      }

      if (!defixId || !pkEncrypt || !toAddress || !coin || !amount || !blockchain) return res.status(400).send({ message: "Invalid data." });

      const privateKey = CryptoShared.decrypt(pkEncrypt);

      if (!privateKey) return res.status(400).send({ message: "privateKey invalid." });

      const withdrawal = await this.withdrawService.sendWithdraw(defixId, privateKey, toAddress, coin, amount, blockchain);

      this.mailService.emailSuccessWithdrawal(defixId, toAddress, amount, coin, blockchain, withdrawal.hash, lang);
      this.mailService.emailReceivedPayment(defixId, toAddress, amount, coin, blockchain, withdrawal.hash, lang);

      res.send(withdrawal);
    } catch (error: any) {
      return res.status(500).send({ message: error.message });
    }
  };
}

'''
'''--- src/modules/withdraw/init.ts ---
import { Express, Router } from "express";
import { WithdrawController } from "./controllers/withdraw.controller";
import { Routes } from "./routes";

export class WithdrawModule {
  public routes: Routes;

  constructor(router: Router) {
    this.routes = new Routes(router, new WithdrawController());
  }
}

'''
'''--- src/modules/withdraw/routes.ts ---
import { Express, Router } from "express";
import { WithdrawController } from "./controllers/withdraw.controller";
import { TwoFAMiddleware } from "../../shared/middlewares/twoFA.middleware";

export class Routes {
  private controller: WithdrawController;
  private middleware2fa: TwoFAMiddleware;

  constructor(router: Router, controller: WithdrawController) {
    this.controller = controller;
    this.middleware2fa = new TwoFAMiddleware();
    this.configureRoutes(router);
  }

  private configureRoutes(router: Router) {
    /**
     * @swagger
     * /get-fee-withdraw/:
     *    post:
     *      tags:
     *        - Withdraw
     *      summary: Obtiene el fee del withdraw..
     *      description: Manda campos requeridos para obtener el fee.
     *      requestBody:
     *          content:
     *            application/json:
     *              schema:
     *                type: "object"
     *                required: [coin, blockchain]
     *                properties: {
     *                  coin: {
     *                    type: "string"
     *                  },
     *                  blockchain: {
     *                    type: "string"
     *                  },
     *                  amount: {
     *                    type: "number"
     *                  },
     *                  address: {
     *                    type: "string"
     *                  }
     *                }
     *      responses:
     *        '200':
     *          description: Devuelve el preview del withdraw.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Bad Request.
     */
    router.post("/get-fee-withdraw/", this.controller.getFeeWithdraw);

    /**
     * @swagger
     * /send-withdraw/:
     *    post:
     *      tags:
     *        - Withdraw
     *      summary: Hacer un retiro.
     *      description: Manda campos requeridos para hacer una transaction.
     *      requestBody:
     *          content:
     *            application/json:
     *              schema:
     *                type: "object"
     *                required: [defixId, pkEncrypt, toAddress, coin, amount, blockchain]
     *                properties: {
     *                  defixId: {
     *                    type: "string"
     *                  },
     *                  pkEncrypt: {
     *                    type: "string"
     *                  },
     *                  toAddress: {
     *                    type: "string"
     *                  },
     *                  coin: {
     *                    type: "string"
     *                  },
     *                  amount: {
     *                    type: "number"
     *                  },
     *                  blockchain: {
     *                    type: "string"
     *                  },
     *                  code2fa: {
     *                    type: "string"
     *                  },
     *                  language: {
     *                    type: "string"
     *                  }
     *                }
     *      responses:
     *        '200':
     *          description: Devuelve la transaccion realizada.
     *        '400':
     *          description: Bad Request.
     *        '500':
     *          description: Internal Server Error.
     */
    router.post("/send-withdraw/", this.middleware2fa.validateTwoFA, this.controller.sendWithdraw);
  }
}

'''
'''--- src/modules/withdraw/services/withdraw.service.ts ---
import { UtilsShared } from "../../../shared/utils/utils.shared";
import { AddressService } from "../../address/services/address.service";
import { TransactionHistoryService } from "../../transactionHistory/services/transactionHistory.service";
import { blockchainService } from "../../../blockchain";
import { FrequentService } from "../../frequent/services/frequent.service";

export class WithdrawService extends TransactionHistoryService {
  private addressService: AddressService;
  private frequentService: FrequentService;

  constructor() {
    super();
    this.addressService = new AddressService();
    this.frequentService = new FrequentService();
  }

  public getFeeWithdraw = async (coin: string, blockchain: string, amount: number | undefined, address: string | undefined) => {
    try {
      if (!Object.keys(blockchainService).includes(blockchain.toLowerCase())) {
        throw new Error(`Invalid blockchain.`);
      }

      const feeTransfer = await blockchainService[blockchain.toLowerCase() as keyof typeof blockchainService].getFeeTransaction(
        coin,
        blockchain,
        "WITHDRAW",
        amount,
        address
      );

      if (!feeTransfer) {
        throw new Error(`Internal error fee preview.`);
      }

      return feeTransfer;
    } catch (err) {
      throw new Error(`Failed to get fee transfer, ${err}`);
    }
  };

  public sendWithdraw = async (fromDefix: string, privateKey: string, toAddress: string, coin: string, amount: number, blockchain: string) => {
    try {
      let transactionHash: string | undefined, fromAddress;

      if (fromDefix.includes(".defix3")) {
        fromAddress = (await this.addressService.getAddressByDefixId(fromDefix, blockchain))?.address;
      } else {
        fromAddress = fromDefix;
      }

      if (!fromAddress || !toAddress) throw new Error(`Invalid data.`);

      if (Object.keys(blockchainService).includes(coin.toLowerCase())) {
        transactionHash = await blockchainService[coin.toLowerCase() as keyof typeof blockchainService].sendTransfer(
          fromAddress,
          privateKey,
          toAddress,
          amount,
          coin
        );
      } else {
        if (!Object.keys(blockchainService).includes(blockchain.toLowerCase())) {
          throw new Error(`Invalid data.`);
        }
        const srcContract = await UtilsShared.getTokenContract(coin, blockchain);

        if (!srcContract) throw new Error(`Failed to get token contract.`);

        transactionHash = await blockchainService[blockchain.toLowerCase() as keyof typeof blockchainService].sendTransferToken(
          fromAddress,
          privateKey,
          toAddress,
          amount,
          srcContract
        );
      }

      if (!transactionHash) throw new Error(`Transaction hash.`);

      const transaction = await this.createTransactionHistory({
        fromDefix,
        toDefix: toAddress,
        fromAddress,
        toAddress,
        blockchain,
        coin,
        amount,
        hash: transactionHash,
        typeTxn: "WITHDRAW",
      });

      await this.frequentService.createFrequent(fromDefix, toAddress, "WITHDRAW");
      return transaction;
    } catch (err) {
      throw new Error(`Failed to send transfer, ${err}`);
    }
  };
}

'''
'''--- src/process/index.ts ---
import { fork } from "child_process";
import { readdirSync } from "fs";
import { Server, Socket, ServerOptions } from "socket.io";
import serialize from "serialize-javascript";
import * as http from "http";
import NodeCache from "node-cache";
import { CacheConfig } from "../config/cacheConfig";

const PATH_ROUTER = `${__dirname}`;

const cleanFileName = (fileName: string) => {
  let file;
  if (fileName.includes(".ts")) {
    file = fileName.split(".ts").shift();
  } else {
    file = fileName.split(".js").shift();
  }
  return file;
};

const Process = (routeDemon: string, io: Server) => {
  console.log("Starting demon...");
  const demon = fork(routeDemon);

  demon.on("message", (message) => {
    io.emit("getRanking", message);
    // nodeCache.set("getRanking", message);
    CacheConfig.nodeCache.set("getRanking", message);
  });

  demon.on("exit", () => {
    console.log("Demon died. Restarting demon " + routeDemon);
    Process(routeDemon, io);
  });
};

const startProcess = (io: Server) => {
  readdirSync(PATH_ROUTER).filter((fileName) => {
    const cleanName = cleanFileName(fileName);
    if (cleanName !== "index") {
      Process(PATH_ROUTER + "/" + cleanName, io);
    }
  });
};

export { startProcess };

'''
'''--- src/process/ranking.process.ts ---
import axios from "axios";
const process = require("process");

const ProcessFn = async () => {
  try {
    const response = await axios.get(
      "https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=weth%2Cnear%2Cwbnb%2Ctron%2Cwrapped-tron%2Cbinance-usd%2Cbitcoin%2Cethereum%2Ctether%2Cbinancecoin%2Cwrapped-bitcoin%2Cusd-coin%2Cdai&order=market_cap_desc&per_page=50&page=1&sparkline=false&price_change_percentage=1h%2C24h%2C7d"
    );

    if (response.data) {
      if (response.data.length > 0) {
        // console.log(response.data[0]);
        process.send(response.data);
      }
    }
  } catch (error) {
    // console.log("err")
  }
};

const startProcess = () => {
  ProcessFn();
  setInterval(async () => {
    ProcessFn();
  }, 60000);
};

startProcess();

'''
'''--- src/server.ts ---
import "dotenv/config";
import "reflect-metadata";
import AppDataSource from "./config/dataSource";
import * as http from "http";
import * as https from "https";
import dbConnect from "./config/postgres";
import App from "./app";
import socketIo from "socket.io";
// import NodeCache from "node-cache";
import { startProcess } from "./process/index";
import { CacheConfig } from "./config/cacheConfig";
// const nodeCache = new NodeCache();
const fs = require("fs");

import * as glob from "glob";

import AdminJS from "adminjs";
import AdminJSExpress from "@adminjs/express";
import path from "path";
import * as AdminJSTypeorm from "@adminjs/typeorm";

class Server {
  private app = App;
  private port: number = Number(process.env.PORT) || 3000;
  private server!: http.Server | https.Server;
  public io!: socketIo.Server;

  constructor() {
    this.initTypeORM();
    this.connectDatabase();
    this.listen();
    this.initWebSockets();
  }

  private initTypeORM() {
    AppDataSource.initialize()
      .then(async () => {
        console.log("TypeORM Ready");
        this.initAdminJs();
      })
      .catch((err: any) => {
        console.error(err);
      });
  }

  private initAdminJs() {
    AdminJS.registerAdapter({
      Resource: AdminJSTypeorm.Resource,
      Database: AdminJSTypeorm.Database,
    });

    const entityFiles = glob.sync(path.join(__dirname, "modules", "**", "*.entity.{ts,js}"));

    const entities = entityFiles.map((file) => {
      const entityModule = require(file);
      const entity = Object.values(entityModule)[0];
      return entity;
    });

    const adminOptions = {
      resources: entities,
      branding: {
        companyName: "Admin DeFix3",
        softwareBrothers: false,
        // logo: false, // OR false to hide the default one
      },
    };

    const admin = new AdminJS(adminOptions);

    const DEFAULT_ADMIN = {
      email: process.env.EMAIL_ADMINJS,
      password: process.env.PASSWORD_ADMINJS,
    };

    const secret = process.env.SECRET_ADMINJS;

    const authenticate = async (email: string, password: string) => {
      console.log(email, password);
      if (email === DEFAULT_ADMIN.email && password === DEFAULT_ADMIN.password) {
        return { email: DEFAULT_ADMIN.email };
      }
    };

    const adminRouter = AdminJSExpress.buildAuthenticatedRouter(
      admin,
      {
        authenticate,
        cookiePassword: "very_secret_secret",
      },
      null,
      {
        resave: true,
        saveUninitialized: true,
        secret,
      }
    );

    this.app.use(admin.options.rootPath, adminRouter);
  }

  private connectDatabase() {
    dbConnect().then(() => console.log("connection DB Ready"));
  }

  private initWebSockets() {
    this.io = new socketIo.Server(this.server, {
      cors: {
        origin: "*",
      },
    });

    this.io.on("connection", (socket: socketIo.Socket) => {
      console.log("User APP " + socket.id + " connected");

      if (CacheConfig.nodeCache.has("getRanking")) {
        const data = CacheConfig.nodeCache.get("getRanking");
        // const data = nodeCache.get("getRanking");
        this.io.emit("getRanking", data);
      }
    });

    startProcess(this.io);
  }

  public listen() {
    if (process.env.NODE_ENV === "production") {
      const credentials = {
        key: fs.readFileSync("/etc/letsencrypt/live/defix3.com/privkey.pem", "utf8"),
        cert: fs.readFileSync("/etc/letsencrypt/live/defix3.com/cert.pem", "utf8"),
        ca: fs.readFileSync("/etc/letsencrypt/live/defix3.com/chain.pem", "utf8"),
      };
      this.server = https.createServer(credentials, this.app);
    } else {
      this.server = http.createServer(this.app);
    }
    this.server.listen(this.port, () => {
      console.log(`Server listening on port ${this.port}`);
    });
  }
}

new Server();

'''
'''--- src/shared/crypto/crypto.shared.ts ---
import crypto from "crypto";
import cryptoJs from "crypto-js";

export class CryptoShared {
  static decrypt(text: string) {
    try {
      return text;
      const cipheredBytes = Buffer.from(text, "base64");
      const decoded = crypto
        .privateDecrypt(
          {
            key: process.env.PRIVATE_KEY as string,
            passphrase: process.env.PASSWORD_CRYPTO,
            padding: crypto.constants.RSA_PKCS1_OAEP_PADDING,
          },
          cipheredBytes
        )
        .toString();
      return decoded;
    } catch (error) {
      console.log(error);
      return false;
    }
  }

  static encryptRSA(text: string) {
    try {
      const encrypted = crypto.publicEncrypt(
        {
          key: process.env.PUBLIC_KEY as string,
          padding: crypto.constants.RSA_PKCS1_OAEP_PADDING,
        },
        Buffer.from(text)
      );
      return encrypted.toString("base64");
    } catch (error) {
      console.log(error);
      return false;
    }
  }

  static encryptAES(text: string) {
    const ciphertext = cryptoJs.AES.encrypt(text, process.env.PRIVATE_KEY as string).toString();
    return ciphertext;
  }

  static decryptAES(text: string) {
    var bytes = cryptoJs.AES.decrypt(text, process.env.PRIVATE_KEY as string);
    var originalText = bytes.toString(cryptoJs.enc.Utf8);
    return originalText;
  }
}

'''
'''--- src/shared/email/email.shared.ts ---
import nodemailer from "nodemailer";
import path from "path";
import hbs, { NodemailerExpressHandlebarsOptions } from "nodemailer-express-handlebars";
import { UserService } from "../../modules/users/services/user.service";
import { UtilsShared } from "../utils/utils.shared";

export class MailShared {
  private transporter!: nodemailer.Transporter;
  private userService: UserService;

  constructor() {
    this.configNodemailer();
    this.userService = new UserService();
  }

  private configNodemailer = () => {
    this.transporter = nodemailer.createTransport({
      service: "gmail",
      auth: {
        user: process.env.USER_MAIL,
        pass: process.env.PASS_MAIL,
      },
    });
  };

  public sendMailPhrase = (phrase: string, userdefix: string, to: string, language: string = "en") => {
    let from = process.env.USER_MAIL;

    // point to the template folder
    const handlebarOptions: NodemailerExpressHandlebarsOptions = {
      viewEngine: {
        // partialsDir: path.join(__dirname, "/viewsEmail"),
        partialsDir: path.resolve(`./viewsEmail/${language}/`),
        defaultLayout: false,
      },
      // viewPath: path.join(__dirname, "/viewsEmail"),
      viewPath: path.resolve(`./viewsEmail/${language}/`),
    };

    // use a template file with nodemailer
    this.transporter.use("compile", hbs(handlebarOptions));
    const mailOptions = {
      from: from,
      to: to,
      subject: "Secret phrase for fix3 account recovery.",
      template: "phraseEmail", // the name of the template file i.e email.handlebars
      context: {
        userdefix: userdefix,
        phrase: phrase,
      },
    };

    this.transporter.sendMail(mailOptions);
  };

  public emailSuccessWithdrawal = async (
    defixId: string,
    toDefix: string,
    amount: string,
    token: string,
    blockchain: string,
    invoice: string,
    language: string = "en"
  ) => {
    let from = process.env.USER_MAIL;

    const fromUser = await this.userService.getUserByDefixId(defixId);

    if (!fromUser) return;

    if (!fromUser.flagWithdraw) return;

    // point to the template folder
    const handlebarOptions: NodemailerExpressHandlebarsOptions = {
      viewEngine: {
        partialsDir: path.resolve(`./viewsEmail/${language}/`),
        defaultLayout: false,
      },
      viewPath: path.resolve(`./viewsEmail/${language}/`),
    };

    // use a template file with nodemailer
    this.transporter.use("compile", hbs(handlebarOptions));
    const mailOptions = {
      from: from,
      to: fromUser.email,
      subject: "SUCCESSFUL WITHDRAWAL",
      template: "successWithdrawal", // the name of the template file i.e email.handlebars
      context: {
        user: defixId,
        amount,
        token,
        blockchain,
        wallet: toDefix,
        network: process.env.NETWORK,
        invoice,
        linkTx: UtilsShared.getLinkTransaction(blockchain, invoice),
      },
    };

    this.transporter.sendMail(mailOptions, function (error, info) {
      return;
    });
  };

  public emailReceivedPayment = async (
    defixId: string,
    toDefix: string,
    amount: string,
    token: string,
    blockchain: string,
    invoice: string,
    language: string = "en"
  ) => {
    let from = process.env.USER_MAIL;

    const toUser = await this.userService.getUserByDefixId(toDefix);

    if (!toUser) return;

    if (!toUser.flagDeposit) return;

    // point to the template folder
    const handlebarOptions: NodemailerExpressHandlebarsOptions = {
      viewEngine: {
        partialsDir: path.resolve(`./viewsEmail/${language}/`),
        defaultLayout: false,
      },
      viewPath: path.resolve(`./viewsEmail/${language}/`),
    };

    // use a template file with nodemailer
    this.transporter.use("compile", hbs(handlebarOptions));
    const mailOptions = {
      from: from,
      to: toUser.email,
      subject: "RECEIVED PAYMENT",
      template: "receivedPayment", // the name of the template file i.e email.handlebars
      context: {
        user: toUser.defixId,
        amount,
        token,
        wallet: defixId,
        blockchain,
        network: process.env.NETWORK,
        invoice,
        linkTx: UtilsShared.getLinkTransaction(blockchain, invoice),
      },
    };

    this.transporter.sendMail(mailOptions, function (error, info) {
      return;
    });
  };

  public emailSuccessSwap = async (
    defixId: string,
    fromToken: string,
    srcAmount: string,
    toToken: string,
    destAmount: string,
    blockchain: string,
    hash: string,
    dateTime: string,
    language: string = "en"
  ) => {
    let from = process.env.USER_MAIL;

    const fromUser = await this.userService.getUserByDefixId(defixId);

    if (!fromUser) return;

    if (!fromUser.flagSign) return;

    // point to the template folder
    const handlebarOptions: NodemailerExpressHandlebarsOptions = {
      viewEngine: {
        partialsDir: path.resolve(`./viewsEmail/${language}/`),
        defaultLayout: false,
      },
      viewPath: path.resolve(`./viewsEmail/${language}/`),
    };

    const isoDate = dateTime;
    const date = new Date(isoDate);

    const year = date.getFullYear();
    const month = ("0" + (date.getMonth() + 1)).slice(-2);
    const day = ("0" + date.getDate()).slice(-2);
    const hour = ("0" + date.getHours()).slice(-2);
    const minute = ("0" + date.getMinutes()).slice(-2);
    const second = ("0" + date.getSeconds()).slice(-2);

    const formattedDate = `${day}/${month}/${year} ${hour}:${minute}:${second}`;

    // use a template file with nodemailer
    this.transporter.use("compile", hbs(handlebarOptions));
    const mailOptions = {
      from: from,
      to: fromUser.email,
      subject: "FUNDS TRADED",
      template: "successSwap", // the name of the template file i.e email.handlebars
      context: {
        user: defixId,
        token1: fromToken,
        spend: srcAmount,
        token2: toToken,
        received: destAmount,
        PRICE: Number(destAmount) / Number(srcAmount),
        date_time: formattedDate,
        blockchain: blockchain,
        linkTx: UtilsShared.getLinkTransaction(blockchain, hash),
      },
    };

    this.transporter.sendMail(mailOptions, function (error, info) {
      return;
    });
  };
}

'''
'''--- src/shared/middlewares/middleware.shared.ts ---
import { NextFunction, Request, Response } from "express";
import { UserEntity } from "../../modules/users/entities/user.entity";

export class SharedMiddleware {
  async defixIdAvailable(req: Request, res: Response, next: NextFunction) {
    try {
      const { defixId } = req.body;
      if (!defixId || !defixId.includes(".defix3") || defixId.includes(" ")) return res.status(400).send({ message: "Error DefixId." });
      const user = await UserEntity.findOneBy({ defixId: defixId });

      if (user) {
        return res.status(400).send({ message: "User already exists." });
      }

      next();
    } catch (err) {
      res.status(500).send({ message: "Internal server error." });
    }
  }

  async defixIdValid(req: Request, res: Response, next: NextFunction) {
    try {
      const { defixId } = req.body;
      if (!defixId || !defixId.includes(".defix3") || defixId.includes(" ")) return res.status(400).send({ message: "Error DefixId." });
      const user = await UserEntity.findOneBy({ defixId: defixId });

      if (!user) {
        return res.status(400).send({ message: "User not found." });
      }

      next();
    } catch (err) {
      res.status(500).send({ message: "Internal server error in Valid." });
    }
  }
}

'''
'''--- src/shared/middlewares/shared.middleware.ts ---
import { NextFunction, Request, Response } from "express";
import { UserEntity } from "../../modules/users/entities/user.entity";

export class SharedMiddleware {
  async defixIdAvailable(req: Request, res: Response, next: NextFunction) {
    try {
      const { defixId } = req.body;
      if (!defixId || !defixId.includes(".defix3") || defixId.includes(" ")) return res.status(400).send({ message: "Error DefixId." });
      const user = await UserEntity.findOneBy({ defixId: defixId });

      if (user) {
        return res.status(400).send({ message: "User already exists." });
      }

      next();
    } catch (err) {
      res.status(500).send({ message: "Internal server error." });
    }
  }

  async defixIdValid(req: Request, res: Response, next: NextFunction) {
    try {
      const { defixId } = req.body;
      console.log(defixId);
      if (!defixId || !defixId.includes(".defix3") || defixId.includes(" ")) return res.status(400).send({ message: "Error DefixId." });
      const user = await UserEntity.findOneBy({ defixId: defixId });

      if (!user) {
        return res.status(400).send({ message: "User not found." });
      }

      next();
    } catch (err) {
      res.status(500).send({ message: "Internal server error in Valid." });
    }
  }
}

'''
'''--- src/shared/middlewares/twoFA.middleware.ts ---
import { NextFunction, Request, Response } from "express";
import { UserService } from "../../modules/users/services/user.service";
import { TwoFAService } from "../../modules/users/services/twoFA.service";

export class TwoFAMiddleware {
  private twoFAService: TwoFAService;

  constructor() {
    this.twoFAService = new TwoFAService();
  }

  public validateTwoFA = async (req: Request, res: Response, next: NextFunction) => {
    try {
      const { defixId, code2fa } = req.body;

      if (defixId && !defixId.includes(".defix3")) {
        return next();
      }

      const user = await this.twoFAService.getUserByDefixId(defixId);

      if (!user) return res.status(404).send({ message: `User not exists.` });

      if (!user.twofa) return next();

      if (!code2fa) return res.status(404).send({ message: `Invalid data, Error: code2fa.` });

      const auth = await this.twoFAService.checkTwoFA(code2fa, user.secret);

      if (!auth) return res.status(401).send({ message: "code 2fa invalid" });

      return next();
    } catch (error: any) {
      return res.status(500).send({ message: error.message });
    }
  };
}

'''
'''--- src/shared/utils/utils.shared.ts ---
import axios from "axios";
import dbConnect from "../../config/postgres";
import { AddressEntity } from "../../modules/address/entities/address.entity";

const nearSEED = require("near-seed-phrase");

const NETWORK = process.env.NETWORK || "testnet";

export class UtilsShared {
  static getTokenContract = async (token: string, blockchain: string) => {
    try {
      const conexion = await dbConnect();
      const response = await conexion.query(
        "SELECT *\
        FROM backend_token a\
        inner join backend_cryptocurrency b on b.id = a.cryptocurrency_id\
        where a.coin = $1 and b.coin = $2",
        [token, blockchain]
      );

      if (response.rows.length === 0) return false;

      return response.rows[0];
    } catch (error) {
      throw new Error(`Failed to get token contract.`);
    }
  };

  static getComision = async (coin: string) => {
    try {
      const url = process.env.URL_DJANGO + "api/v1/get-comision/" + coin;
      const result = axios
        .get(url)
        .then(function (response) {
          return response.data;
        })
        .catch(function (err) {
          throw new Error(`Failed to get comision api. ${err.message}}`);
        });
      return result;
    } catch (error: any) {
      throw new Error(`Failed to get comision fn. ${error.message}`);
    }
  };

  static getAddressUser = async (defixId: string, blockchain: string) => {
    try {
      const address = await AddressEntity.findOneBy({
        user: { defixId: defixId },
        blockchain: blockchain,
      });

      if (!address) return false;

      return address.address;
    } catch (error) {
      return false;
    }
  };

  static getCryptos = async () => {
    try {
      const conexion = await dbConnect();
      const cryptocurrencys = await conexion.query("select * from backend_cryptocurrency");

      const cryptos = [];

      for (let cryptocurrency of cryptocurrencys.rows) {
        const tokens = await conexion.query("select * from backend_token where cryptocurrency_id = $1", [cryptocurrency.id]);
        cryptocurrency.tokens = tokens.rows;
        cryptos.push(cryptocurrency);
      }

      return cryptos;
    } catch (error) {
      console.log(error);
      return [];
    }
  };

  static validateEmail = (email: string) => {
    const regex = /\S+@\S+\.\S+/;
    return regex.test(email);
  };

  static getIdNear = async (mnemonic: string) => {
    const walletSeed = await nearSEED.parseSeedPhrase(mnemonic);
    const split = String(walletSeed.publicKey).split(":");
    const id = String(split[1]);
    return id;
  };

  static getAddressVault = (coin: string) => {
    switch (coin) {
      case "BTC":
        return process.env.VAULT_BTC;
      case "NEAR":
        return process.env.VAULT_NEAR;
      case "ETH":
        return process.env.VAULT_ETH;
      case "TRX":
        return process.env.VAULT_TRON;
      case "BNB":
        return process.env.VAULT_BNB;
      default:
        throw new Error(`Unconfigured environment '${coin}'`);
    }
  };

  static getLinkTransaction = (blockchain: string, transactionHash: string) => {
    switch (blockchain) {
      case "BTC":
        if (process.env.NETWORK === "mainnet") {
          return `https://live.blockcypher.com/btc/tx/${transactionHash}`;
        } else {
          return `https://live.blockcypher.com/btc-testnet/tx/${transactionHash}`;
        }
      case "NEAR":
        if (process.env.NETWORK === "mainnet") {
          return `https://explorer.near.org/transactions/${transactionHash}`;
        } else {
          return `https://explorer.testnet.near.org/transactions/${transactionHash}`;
        }
      case "ETH":
        if (process.env.NETWORK === "mainnet") {
          return `https://etherscan.io/tx/${transactionHash}`;
        } else {
          return `https://${process.env.ETHERSCAN}.etherscan.io/tx/${transactionHash}`;
        }
      case "TRX":
        if (process.env.NETWORK === "mainnet") {
          return `https://tronscan.org/#/transaction/${transactionHash}`;
        } else {
          return `https://shasta.tronscan.org/#/transaction/${transactionHash}`;
        }
      case "BNB":
        if (process.env.NETWORK === "mainnet") {
          return `https://bscscan.com/tx/${transactionHash}`;
        } else {
          return `https://testnet.bscscan.com/tx/${transactionHash}`;
        }
      default:
        throw new Error(`Error blockchain '${blockchain}'`);
    }
  };
}

'''
'''--- tsconfig.json ---
{
  "compilerOptions": {
    "target": "es2017",
    "module": "commonjs",
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    "strict": true,
    "skipLibCheck": true,
    "outDir": "./dist",
    "resolveJsonModule": true,
    "experimentalDecorators": true,
    "emitDecoratorMetadata": true
  }
}

'''