*GitHub Repository "HassanHarby2000/friendbook-as"*

'''--- README.md ---
# friendbook
الكود الخاص بمشروع كتاب الأصدقاء 

## طريقة الاستخدام

1. انسخ هذا المشروع clone على جهازك الشخصي فى أى مكان.
2. فى شاشة الأوامر terminal /  command line interface  افتح المجلد وقم بتثبيت المكتبات التي يحتاجها المشروع للتشغيل عن طريق الأمر: 

 ```
yarn
```
 
3. لبناء واستخراج ملف wasm من الكود استعداداً لرفعه، استخدم الأمر التالي:

 ```
 yarn build:release
```

استخدم الأمر التالي، ستجد بعد تنفيذ هذا الأمر ملف `friendbook.wasm` تم انشاءه فى هذا المسار`build/release` 

4. لرفع الملف السابق على البلوك تشين قم بكتابة الأمر:
```
near dev-deploy ./build/release/friendbook.wasm
```

  
5. هذا مثال لناتج تنفيذ الأمر السابق:

<img width="1295" alt="Screen Shot 2022-03-03 at 5 29 42 PM" src="https://user-images.githubusercontent.com/58190902/156587143-ab38c8c7-a839-480d-853d-526d96a943b6.png">

6.  يمكنك استخدام الدالة (function)`writeSomething` لكتابة رسالة وإضافة نص الرسالة والشخص المُرسل إليه 

```
near call dev-1646314780524-36067631587978 writeSomething '{"message":"Hello", "toWho":"three.testnet"}' --accountId four.testnet
```

7.  عند تمام العملية سوف تظهر لك النتائج التالية: 

<img width="1103" alt="Screen Shot 2022-03-03 at 5 48 35 PM" src="https://user-images.githubusercontent.com/58190902/156601310-e09d2dc0-ea94-481b-b643-3be7d89b8d64.png">

8.  يمكنك استخدام الدالة (function)`listWritings` لمشاهدة جميع الرسائل التي تمت إضافتها: 
```
near view dev-1646314780524-36067631587978 listWritings
```

9.  عند تمام العملية سوف تظهر لك النتائج التالية:
<img width="1498" alt="Screen Shot 2022-03-03 at 6 57 11 PM" src="https://user-images.githubusercontent.com/58190902/156601916-fabcee0d-2635-4740-a663-c7ab221d9244.png">

ملحوظة: يمكنك رفع ملف الwasm على حساب مخصص. تجد الخطوات فى هذا [الرابط]( https://www.youtube.com/watch?v=Yuid1QH_NWg&list=PLYH8jWLZAVt62bVY0aEnMquZn-jpTZPhQ&index=11)

## مزيد من التفاصيل مع الشرح و التطبيق هنا:

[![IMAGE ALT TEXT HERE](https://img.youtube.com/vi/PrPqBi_lSUc/0.jpg)](https://www.youtube.com/watch?v=PrPqBi_lSUc)ا

'''
'''--- __tests__/as-pect.d.ts ---
/// <reference types="@as-pect/assembly/types/as-pect" />
'''
'''--- __tests__/index.unit.spec.ts ---
//import sayHello from "../assembly/index
//لاستدعاء الفنكش
//sayHello
// من الملف
//index
import { sayHello } from "../assembly/index";

//describe
//لوصف مجموعة اختيارات بإسم  يظهر فى النتائج بعد ذلك
describe("Contract", () => {
  //it
  //أحد طرق وصف اختبار مثلما نقول هذا الإختبار يجب أن
  it("should print the statement 'hello from the blockchain world!' ", () => {
    //expect
    //نتوقع نتيجة استدعاء الفنكشن أن تكون مساوية للجملة
    expect(sayHello()).toStrictEqual("hello from the blockchain world!");
  });
});

'''
'''--- as-pect.config.js ---
module.exports = require("near-sdk-as/imports");
module.exports.include.push("**/*.unit.spec.ts");

'''
'''--- asconfig.json ---
{
  "extends": "near-sdk-as/asconfig.json"
}

'''
'''--- assembly/as_types.d.ts ---
/// <reference types="near-sdk-as/assembly/as_types" />

'''
'''--- assembly/index.ts ---
import { Context, PersistentVector } from "near-sdk-as";
import { Writing } from "./models";

@nearBindgen
export class Contract {
  writingList: PersistentVector<Writing> = new PersistentVector<Writing>("w");

  @mutateState()
  writeSomething(message: string, toWho: string): Writing {
    let sender: string = Context.sender;

    let writing: Writing = new Writing(message, sender, toWho);
    this.writingList.push(writing);
    return writing;
  }

  listWritings(): Array<Writing> {
    let writings = new Array<Writing>(this.writingList.length);
    for (let i = 0; i < this.writingList.length; i++) {
      writings[i] = this.writingList[i];
    }
    return writings;
  }
}

'''
'''--- assembly/models.ts ---
@nearBindgen
export class Writing {
  message: string;
  sender: string;
  receiver: string;

  constructor(message: string, sender: string, receiver: string) {
    this.message = message;
    this.sender = sender;
    this.receiver = receiver;
  }
}

'''
'''--- assembly/tsconfig.json ---
{
  "extends": "../node_modules/assemblyscript/std/assembly.json",
  "include": ["./**/*.ts"]
}

'''
'''--- package.json ---
{
  "name": "friendbook",
  "version": "0.0.1",
  "description": "Start with a basic project",
  "scripts": {
    "dev": "watch -d -n 1 'clear && yarn test'",
    "test": "yarn asp -f unit.spec",
    "clean": "rm -rf ./build && rm -rf ./neardev",
    "build": "asb --target debug",
    "build:release": "asb",
    "asp": "asp --verbose --nologo"
  },
  "keywords": [],
  "author": "hello@world-near.org",
  "license": "ISC",
  "devDependencies": {
    "@types/jest": "^27.4.0",
    "near-sdk-as": "^3.1.0"
  }
}

'''