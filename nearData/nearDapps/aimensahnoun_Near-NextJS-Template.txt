*GitHub Repository "aimensahnoun/Near-NextJS-Template"*

'''--- as-pect.config.js ---
module.exports = require("near-sdk-as/imports");
module.exports.include.push("**/*.unit.spec.ts");

'''
'''--- near/near-setup.js ---
import {
  keyStores,
  Near,
  WalletConnection,
  utils as nearUtils,
} from "near-api-js";

export const CONTRACT_ID = "dev-1643583533233-86904103016460";

export const initNear = () => {
  //Testnet config
  const near = new Near({
    networkId: "testnet",
      keyStore: new keyStores.BrowserLocalStorageKeyStore(),
      nodeUrl: "https://rpc.testnet.near.org",
    walletUrl: "https://wallet.testnet.near.org",
  });

  //Wallet init
  wallet = new WalletConnection(near, "Near Dapp");
};

//Loaded after the being server to the client
//Due to keystore needing access to the window object
export let wallet = null;
export let contract = null;
export const utils = nearUtils;

//Methods

export const signIn = () => {
  wallet.requestSignIn(CONTRACT_ID);
};

export const signOut = () => {
  wallet.signOut();
};

//Function for view methods
export const viewFunction = async (functionName, args = {}) => {
  const result = await wallet
    .account()
    .viewFunction(CONTRACT_ID, functionName, args);

  return result;
};

//Function for call method
export const callFunction = async (functionName, args = {}, deposit = "0") => {
  const result = await wallet.account().functionCall({
    contractId: CONTRACT_ID,
    methodName: functionName,
    args: args,
    attachedDeposit: utils.format.parseNearAmount(deposit),
  });
  return result;
}
'''
'''--- next.config.js ---
module.exports = {
  reactStrictMode: true,
}

'''
'''--- pages/_app.js ---
import "../styles/globals.css";

//React imports
import { useEffect, useState } from "react";
import ClipLoader from "react-spinners/ClipLoader";

//Near imports
import { initNear } from "../near/near-setup";

function MyApp({ Component, pageProps }) {
  const [isLoading, setIsLoading] = useState(true);

  //Loading the NEAR API and setting up the wallet and contract
  //At the start of the app
  useEffect(() => {
    initNear();
    setIsLoading(false);
  }, []);

  return isLoading ? (
    <div className="center-div">
      <ClipLoader color={"#000"} loading={true} size={50} />
    </div>
  ) : (
    <Component {...pageProps} />
  );
}

export default MyApp;

'''
'''--- pages/api/hello.js ---
// Next.js API route support: https://nextjs.org/docs/api-routes/introduction

export default function handler(req, res) {
  res.status(200).json({ name: 'John Doe' })
}

'''
'''--- pages/index.js ---
//Next JS imports
import Head from "next/head";

//React import
import { useState, useEffect } from "react";

//Near imports
import { signIn, signOut, wallet } from "../near/near-setup";

export default function Home() {
  const [user, setUser] = useState(null);

  useEffect(() => {
    if (wallet.getAccountId()) {
      setUser(wallet.getAccountId());
    }
  }, []);

  return (
    <div>
      <Head>
        <title>Next JS-Near Template</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="main-div">
        {!user ? (
          <>
            <h4>This is a Near Api template for Next JS</h4>
            <button
              className="button"
              onClick={() => {
                signIn();
              }}
            >
              Sign In
            </button>
          </>
        ) : (
          <>
            <h4>Welcome {user}</h4>
            <button
              className="button"
              onClick={() => {
                signOut();
                setUser(null);
              }}
            >
              Sign out
            </button>
          </>
        )}
      </div>
    </div>
  );
}

'''