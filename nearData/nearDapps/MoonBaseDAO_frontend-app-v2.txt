*GitHub Repository "MoonBaseDAO/frontend-app-v2"*

'''--- .eslintrc.json ---
{
  "extends": "next/core-web-vitals"
}

'''
'''--- README.md ---
# moonbase.app
a web3 crm with focus on dao tooling

![](https://cdn.discordapp.com/attachments/1047007258237743165/1075859521462866011/image.png)

# Getting Started

```bash
    yarn install 
    yarn dev
```    
This will start the app at port ***localhost:3000***

'''
'''--- next.config.js ---
/** @type {import('next').NextConfig} */
const nextConfig = {
  // reactStrictMode: true,
  images: {
    domains: ['randomuser.me'],
  },
}

module.exports = nextConfig

'''
'''--- package.json ---
{
  "name": "frontend",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "@headlessui/react": "^1.7.10",
    "@heroicons/react": "^2.0.15",
    "@next/font": "13.1.6",
    "@types/node": "18.13.0",
    "@types/react": "18.0.28",
    "@types/react-dom": "18.0.10",
    "chart.js": "^4.2.1",
    "eslint": "8.34.0",
    "eslint-config-next": "13.1.6",
    "near-api-js": "^1.1.0",
    "next": "13.1.6",
    "react": "18.2.0",
    "react-beautiful-dnd": "^13.1.1",
    "react-chartjs-2": "^5.2.0",
    "react-dom": "18.2.0",
    "typescript": "4.9.5",
    "zustand": "^4.3.6"
  },
  "devDependencies": {
    "@tailwindcss/forms": "^0.5.3",
    "@types/react-beautiful-dnd": "^13.1.3",
    "autoprefixer": "^10.4.13",
    "postcss": "^8.4.21",
    "tailwindcss": "^3.2.6"
  }
}

'''
'''--- postcss.config.js ---
module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}

'''
'''--- public/next.svg ---
<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 394 80"><path fill="#000" d="M262 0h68.5v12.7h-27.2v66.6h-13.6V12.7H262V0ZM149 0v12.7H94v20.4h44.3v12.6H94v21h55v12.6H80.5V0h68.7zm34.3 0h-17.8l63.8 79.4h17.9l-32-39.7 32-39.6h-17.9l-23 28.6-23-28.6zm18.3 56.7-9-11-27.1 33.7h17.8l18.3-22.7z"/><path fill="#000" d="M81 79.3 17 0H0v79.3h13.6V17l50.2 62.3H81Zm252.6-.4c-1 0-1.8-.4-2.5-1s-1.1-1.6-1.1-2.6.3-1.8 1-2.5 1.6-1 2.6-1 1.8.3 2.5 1a3.4 3.4 0 0 1 .6 4.3 3.7 3.7 0 0 1-3 1.8zm23.2-33.5h6v23.3c0 2.1-.4 4-1.3 5.5a9.1 9.1 0 0 1-3.8 3.5c-1.6.8-3.5 1.3-5.7 1.3-2 0-3.7-.4-5.3-1s-2.8-1.8-3.7-3.2c-.9-1.3-1.4-3-1.4-5h6c.1.8.3 1.6.7 2.2s1 1.2 1.6 1.5c.7.4 1.5.5 2.4.5 1 0 1.8-.2 2.4-.6a4 4 0 0 0 1.6-1.8c.3-.8.5-1.8.5-3V45.5zm30.9 9.1a4.4 4.4 0 0 0-2-3.3 7.5 7.5 0 0 0-4.3-1.1c-1.3 0-2.4.2-3.3.5-.9.4-1.6 1-2 1.6a3.5 3.5 0 0 0-.3 4c.3.5.7.9 1.3 1.2l1.8 1 2 .5 3.2.8c1.3.3 2.5.7 3.7 1.2a13 13 0 0 1 3.2 1.8 8.1 8.1 0 0 1 3 6.5c0 2-.5 3.7-1.5 5.1a10 10 0 0 1-4.4 3.5c-1.8.8-4.1 1.2-6.8 1.2-2.6 0-4.9-.4-6.8-1.2-2-.8-3.4-2-4.5-3.5a10 10 0 0 1-1.7-5.6h6a5 5 0 0 0 3.5 4.6c1 .4 2.2.6 3.4.6 1.3 0 2.5-.2 3.5-.6 1-.4 1.8-1 2.4-1.7a4 4 0 0 0 .8-2.4c0-.9-.2-1.6-.7-2.2a11 11 0 0 0-2.1-1.4l-3.2-1-3.8-1c-2.8-.7-5-1.7-6.6-3.2a7.2 7.2 0 0 1-2.4-5.7 8 8 0 0 1 1.7-5 10 10 0 0 1 4.3-3.5c2-.8 4-1.2 6.4-1.2 2.3 0 4.4.4 6.2 1.2 1.8.8 3.2 2 4.3 3.4 1 1.4 1.5 3 1.5 5h-5.8z"/></svg>
'''
'''--- public/thirteen.svg ---
<svg xmlns="http://www.w3.org/2000/svg" width="40" height="31" fill="none"><g opacity=".9"><path fill="url(#a)" d="M13 .4v29.3H7V6.3h-.2L0 10.5V5L7.2.4H13Z"/><path fill="url(#b)" d="M28.8 30.1c-2.2 0-4-.3-5.7-1-1.7-.8-3-1.8-4-3.1a7.7 7.7 0 0 1-1.4-4.6h6.2c0 .8.3 1.4.7 2 .4.5 1 .9 1.7 1.2.7.3 1.6.4 2.5.4 1 0 1.7-.2 2.5-.5.7-.3 1.3-.8 1.7-1.4.4-.6.6-1.2.6-2s-.2-1.5-.7-2.1c-.4-.6-1-1-1.8-1.4-.8-.4-1.8-.5-2.9-.5h-2.7v-4.6h2.7a6 6 0 0 0 2.5-.5 4 4 0 0 0 1.7-1.3c.4-.6.6-1.3.6-2a3.5 3.5 0 0 0-2-3.3 5.6 5.6 0 0 0-4.5 0 4 4 0 0 0-1.7 1.2c-.4.6-.6 1.2-.6 2h-6c0-1.7.6-3.2 1.5-4.5 1-1.3 2.2-2.3 3.8-3C25 .4 26.8 0 28.8 0s3.8.4 5.3 1.1c1.5.7 2.7 1.7 3.6 3a7.2 7.2 0 0 1 1.2 4.2c0 1.6-.5 3-1.5 4a7 7 0 0 1-4 2.2v.2c2.2.3 3.8 1 5 2.2a6.4 6.4 0 0 1 1.6 4.6c0 1.7-.5 3.1-1.4 4.4a9.7 9.7 0 0 1-4 3.1c-1.7.8-3.7 1.1-5.8 1.1Z"/></g><defs><linearGradient id="a" x1="20" x2="20" y1="0" y2="30.1" gradientUnits="userSpaceOnUse"><stop/><stop offset="1" stop-color="#3D3D3D"/></linearGradient><linearGradient id="b" x1="20" x2="20" y1="0" y2="30.1" gradientUnits="userSpaceOnUse"><stop/><stop offset="1" stop-color="#3D3D3D"/></linearGradient></defs></svg>
'''
'''--- public/vercel.svg ---
<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 283 64"><path fill="black" d="M141 16c-11 0-19 7-19 18s9 18 20 18c7 0 13-3 16-7l-7-5c-2 3-6 4-9 4-5 0-9-3-10-7h28v-3c0-11-8-18-19-18zm-9 15c1-4 4-7 9-7s8 3 9 7h-18zm117-15c-11 0-19 7-19 18s9 18 20 18c6 0 12-3 16-7l-8-5c-2 3-5 4-8 4-5 0-9-3-11-7h28l1-3c0-11-8-18-19-18zm-10 15c2-4 5-7 10-7s8 3 9 7h-19zm-39 3c0 6 4 10 10 10 4 0 7-2 9-5l8 5c-3 5-9 8-17 8-11 0-19-7-19-18s8-18 19-18c8 0 14 3 17 8l-8 5c-2-3-5-5-9-5-6 0-10 4-10 10zm83-29v46h-9V5h9zM37 0l37 64H0L37 0zm92 5-27 48L74 5h10l18 30 17-30h10zm59 12v10l-3-1c-6 0-10 4-10 10v15h-9V17h9v9c0-5 6-9 13-9z"/></svg>
'''
'''--- src/components/account-dropdown/desktop/index.ts ---
export * from './desktop';
'''
'''--- src/components/account-dropdown/mobile/index.ts ---
export * from './mobile';
'''
'''--- src/components/discover/categories/index.ts ---
export * from "./categories";
'''
'''--- src/components/discover/dao-table/index.ts ---
export * from "./dao-table";
'''
'''--- src/components/myorg/cardData.ts ---
export const cardData = [
	{
		title: "Arbitration",
		counts: 0,
		percentage: 50
	}, {
		title: "Bounties",
		counts: 1,
		percentage: 70
	}, {
		title: "Proposals",
		counts: 2,
		percentage: 40
	}, {
		title: "Membership",
		counts: 3,
		percentage: 30
	}
]
'''
'''--- src/config/near.ts ---
const CONTRACT_NAME = 'sputnikv2.testnet';

export const getConfig = (env: string) => {
  switch (env) {
    case 'production':
    case 'mainnet':
      return {
        networkId: 'mainnet',
        nodeUrl: 'https://rpc.mainnet.near.org',
        contractName: 'sputnik-dao.near',
        walletUrl: 'https://wallet.near.org',
        helperUrl: 'https://helper.mainnet.near.org',
        explorerUrl: 'https://explorer.mainnet.near.org',
        pk: '2gtDEwdLuUBawzFLAnCS9gUso3Ph76bRzMpVrtb66f3J',
        tokenFactory: 'tkn.near',
        roketoContractAddress: 'roketodapp.near',
        nearSocialContractName: 'social.near'
      };
    case 'development':
    case 'testnet':
      return {
        networkId: 'testnet',
        nodeUrl: 'https://rpc.testnet.near.org',
        contractName: CONTRACT_NAME,
        walletUrl: 'https://wallet.testnet.near.org',
        helperUrl: 'https://helper.testnet.near.org',
        explorerUrl: 'https://explorer.testnet.near.org',
        pk: 'G8JpvUhKqfr89puEKgbBqUxQzCMfJfPSRvKw4EJoiZpZ',
        tokenFactory: 'tokenfactory.testnet',
        roketoContractAddress: 'dev-1635510732093-17387698050424',
        nearSocialContractName: 'v1.social08.testnet'
      };
    case 'betanet':
      return {
        networkId: 'betanet',
        nodeUrl: 'https://rpc.betanet.near.org',
        contractName: CONTRACT_NAME,
        walletUrl: 'https://wallet.betanet.near.org',
        helperUrl: 'https://helper.betanet.near.org',
        explorerUrl: 'https://explorer.betanet.near.org',
        pk: 'G8JpvUhKqfr89puEKgbBqUxQzCMfJfPSRvKw4EJoiZpZ',
        tokenFactory: 'tokenfactory.testnet',
        roketoContractAddress: 'dev-1635510732093-17387698050424',
        nearSocialContractName: 'v1.social08.testnet'
      };
    case 'local':
      return {
        networkId: 'local',
        nodeUrl: 'http://localhost:3030',
        keyPath: `${process.env.HOME}/.near/validator_key.json`,
        walletUrl: 'http://localhost:4000/wallet',
        contractName: CONTRACT_NAME,
        pk: null
      };
    case 'test':
    case 'ci':
      return {
        networkId: 'shared-test',
        nodeUrl: 'https://rpc.ci-testnet.near.org',
        contractName: CONTRACT_NAME,
        masterAccount: 'test.near'
      };
    case 'ci-betanet':
      return {
        networkId: 'shared-test-staging',
        nodeUrl: 'https://rpc.ci-betanet.near.org',
        contractName: CONTRACT_NAME,
        masterAccount: 'test.near'
      };
    default:
      throw Error(`Unconfigured environment '${env}'. Can be configured in src/config.js.`);
  }
}

'''
'''--- src/constants/wallet.ts ---
export const WALLET = {
  NETWORK_ID: process.env.NETWORK_ID ? process.env.NETWORK_ID : "testnet",
  NODE_URL: process.env.NODE_URL ? process.env.NODE_URL : "https://rpc.testnet.near.org",
  WALLET_URL: process.env.WALLET_URL ? process.env.WALLET_URL : "https://wallet.testnet.near.org",
  CONTRACT_ID: process.env.CONTRACT_ID ? process.env.CONTRACT_ID : "dev-1643583533233-86904103016460",
};

'''
'''--- src/hooks/useApi.ts ---
import { useEffect, useState } from "react";

const useApi = (url: string) => {
  const [loading, setLoading] = useState(true);
  const [data, setData] = useState<any>(null);

  const fetchApi = () => {
    fetch(url) 
      .then((response) => {
        return response.json();
      })
      .then((json) => {
        console.log(json);
        setLoading(false);
        setData(json);
      });
  };

  useEffect(() => {
    fetchApi();
  }, []);

  return { loading, data };
};

export default useApi;
'''
'''--- src/hooks/useContract.ts ---
import { Contract } from "near-api-js";
import { useRef } from "react";

export const useContract = (factoryContract: any) => {

  const getDaoList = async (start: number, limit: number) => {
    if(!factoryContract) return [];

    const daos = await factoryContract.get_daos({ from_index: start, limit: limit });
    return daos;
  }

  return [getDaoList];
}
'''
'''--- src/hooks/useDaoContract.ts ---

export const useDaoContract = (daoContract: any) => {
  const getDaoConfig = async () => {
    if (!daoContract) return {};
    const config = await daoContract.get_config();
    return config;
  }
  return [getDaoConfig];
}
'''
'''--- src/hooks/useNear.ts ---
import { getConfig } from "@/config/near";
import { initSDK, wallet, signOut, signIn } from "@/near-api/near";
import { Contract } from "near-api-js";
import { useRouter } from "next/router";
import { useEffect, useRef, useState } from "react"

declare global {
  interface Window {
    accountId: string;
    factoryContract: any;
  }
}

const nearConfig = getConfig(process.env.NODE_ENV || 'development');

interface NearHookInterface {
  factoryContract: any
  isConnected: boolean
  isPending: boolean
  accountId: string | null,
  getDaoContract: (addr: string) => any
  handleConnect: (type: string) => void
}

export const useNear = (): NearHookInterface => {
  const router = useRouter();
  const [isPending, setPending] = useState<boolean>(false);
  const [isConnected, setConnected] = useState<boolean>(false);
  const [accountId, setAccountId] = useState<string | null>(null);
  const [factoryContract, setFactoryContract] = useState<any>(null);
  const [daoContract, setDaoContract] = useState<any>(null);

  useEffect(() => {
    initSDK();
    if (wallet?.getAccountId()) {
      setConnected(true);
      setAccountId(wallet?.getAccountId());
      initContracts();
    }
  }, []);

  const initContracts = async () => {
    if (!wallet?.getAccountId) return;

    const contract = await new Contract(
      wallet?.account(),
      nearConfig.contractName,
      {
        viewMethods: ['get_dao_list', 'get_number_daos', 'get_daos'],
        changeMethods: ['create']
      }
    );

    setFactoryContract(contract);
  }

  const getDaoContract = (addr: string) => {
    if (!wallet?.getAccountId) return;

    const daoContract = new Contract(wallet?.account(), addr, {
      viewMethods: [
        'get_config',
        'get_policy',
        'get_staking_contract',
        'get_available_amount',
        'delegation_total_supply',
        'get_proposals',
        'get_last_proposal_id',
        'get_proposal',
        'get_bounty',
        'get_bounties',
        'get_last_bounty_id',
        'get_bounty_claims',
        'get_bounty_number_of_claims',
        'delegation_balance_of',
        'has_blob'
      ],
      changeMethods: ['add_proposal', 'act_proposal']
    });
    return daoContract;
  }

  const connectWithNear = async () => {
    if (isConnected) {
      await signOut();
      setConnected(false);
      setAccountId(null);
      router.replace('/');
    }
    else {
      await signIn();
      setPending(true);
    }
  }

  const handleConnect = (key: any) => {
    const keyString = key as string;
    if (keyString == "Near")
      connectWithNear();
  }

  return { factoryContract, isConnected, isPending, accountId, handleConnect, getDaoContract };
}
'''
'''--- src/interface/card.ts ---
import { UserInterface } from "./user";

export interface CardInterface {
  id: string;
  title: string;
  priority: number;
  chat: number;
  attachment: number;
  assignees: UserInterface[];
}
'''
'''--- src/interface/sidebar.ts ---
import { Dispatch, SetStateAction } from "react";

export interface SidebarProps {
  sidebarOpen: boolean;
  setSidebarOpen: Dispatch<SetStateAction<boolean>>;
}
'''
'''--- src/interface/user.ts ---
export interface UserInterface {
  avt: string;
}
'''
'''--- src/layouts/sidebar/desktop/index.ts ---
export * from './desktop';
'''
'''--- src/layouts/sidebar/index.ts ---
export * from "./sidebar";
'''
'''--- src/layouts/sidebar/mobile/index.ts ---
export * from './mobile';
'''
'''--- src/layouts/topbar/index.ts ---
export * from './topbar';

'''
'''--- src/mock/navigations.ts ---
import { BriefcaseIcon, CurrencyDollarIcon, GlobeAltIcon } from '@heroicons/react/20/solid';
import { Bars4Icon, BoltIcon, CalendarDaysIcon, ChatBubbleLeftRightIcon, ClockIcon, HomeIcon, InboxIcon, StarIcon, TrashIcon, UserGroupIcon } from '@heroicons/react/24/outline';

export const taskNavigations = [
  { name: 'Tasks', href: '/tasks', icon: InboxIcon, current: false },
  { name: 'Today', href: '#', icon: CalendarDaysIcon, current: false },
  { name: 'Upcoming', href: '#', icon: BoltIcon, current: false },
  { name: 'Important', href: '#', icon: StarIcon, current: false },
  { name: 'Meetings', href: '#', icon: UserGroupIcon, current: false },
  { name: 'Trash', href: '#', icon: TrashIcon, current: false },
];

export const userNavigations = [
  { name: 'My Org', href: '/myorg', icon: GlobeAltIcon, current: false },
  { name: 'Discover', href: '/discover', icon: BriefcaseIcon, current: false },
  { name: 'Bounties', href: '#', icon: CurrencyDollarIcon, current: false },
  { name: 'Chat', href: '#', icon: ChatBubbleLeftRightIcon, current: false },
]
'''
'''--- src/mock/projects.ts ---

export const projects = [
  {
    id: 1,
    title: 'SpaceRanch',
    initials: 'GA',
    team: 'DAOs',
    members: [
      {
        name: 'Dries Vincent',
        handle: 'driesvincent',
        imageUrl:
          'https://images.unsplash.com/photo-1506794778202-cad84cf45f1d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80',
      },
      {
        name: 'Lindsay Walton',
        handle: 'lindsaywalton',
        imageUrl:
          'https://images.unsplash.com/photo-1517841905240-472988babdf9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80',
      },
      {
        name: 'Courtney Henry',
        handle: 'courtneyhenry',
        imageUrl:
          'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80',
      },
      {
        name: 'Tom Cook',
        handle: 'tomcook',
        imageUrl:
          'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80',
      },
    ],
    totalMembers: 12,
    lastUpdated: 'March 17, 2020',
    pinned: true,
    bgColorClass: 'bg-pink-600',
  },
  {
    id: 2,
    title: 'TwinHead',
    initials: 'GA',
    team: 'DAOs',
    members: [
      {
        name: 'Courtney Henry',
        handle: 'courtneyhenry',
        imageUrl:
          'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80',
      },
      {
        name: 'Tom Cook',
        handle: 'tomcook',
        imageUrl:
          'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80',
      },
    ],
    totalMembers: 12,
    lastUpdated: 'December 17, 2018',
    pinned: true,
    bgColorClass: 'bg-green-600',
  },
  {
    id: 3,
    title: 'Space World',
    initials: 'GA',
    team: 'DAOs',
    members: [
      {
        name: 'Courtney Henry',
        handle: 'courtneyhenry',
        imageUrl:
          'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80',
      },
      {
        name: 'Tom Cook',
        handle: 'tomcook',
        imageUrl:
          'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80',
      },
    ],
    totalMembers: 5,
    lastUpdated: 'April 12, 2020',
    pinned: true,
    bgColorClass: 'bg-blue-600',
  },
  {
    id: 4,
    title: 'AthleteX',
    initials: 'GA',
    team: 'DAOs',
    members: [
      {
        name: 'Courtney Henry',
        handle: 'courtneyhenry',
        imageUrl:
          'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80',
      },
    ],
    totalMembers: 5,
    lastUpdated: 'March 17, 2022',
    pinned: true,
    bgColorClass: 'bg-red-600',
  },
];

export const pinnedProjects = projects.filter((project) => project.pinned);
'''
'''--- src/mock/tasks.ts ---
export default [
  {
    "name": "Backlog",
    "items": [
      {
        "id": "1",
        "priority": 0,
        "title": "Company website redesign.",
        "chat": 1,
        "attachment": 2,
        "assignees": [
          {
            "avt": "https://randomuser.me/api/portraits/men/75.jpg"
          }
        ]
      },
      {
        "id": "2",
        "priority": 2,
        "title": "Mobile app login process prototype.",
        "chat": 10,
        "attachment": 4,
        "assignees": [
          {
            "avt": "https://randomuser.me/api/portraits/men/67.jpg"
          }
        ]
      }
    ]
  },
  {
    "name": "In Progress",
    "items": [
      {
        "id": "3",
        "priority": 1,
        "title": "Research and strategy for upcoming project.",
        "chat": 0,
        "attachment": 3,
        "assignees": [
          {
            "avt": "https://randomuser.me/api/portraits/men/79.jpg"
          }
        ]
      }
    ]
  },
  {
    "name": "In Review",
    "items": [
      {
        "id": "4",
        "priority": 2,
        "title": "Dashboard layout redesign.",
        "chat": 13,
        "attachment": 2,
        "assignees": [
          {
            "avt": "https://randomuser.me/api/portraits/men/75.jpg"
          }
        ]
      },
      {
        "id": "5",
        "priority": 0,
        "title": "Social media posts",
        "chat": 0,
        "attachment": 0,
        "assignees": [
          {
            "avt": "https://randomuser.me/api/portraits/men/68.jpg"
          }
        ]
      }
    ]
  },
  {
    "name": "Completed",
    "items": [
      {
        "id": "6",
        "priority": 0,
        "title": "Review client spec document and give feedback.",
        "chat": 13,
        "attachment": 2,
        "assignees": [
          {
            "avt": "https://randomuser.me/api/portraits/men/75.jpg"
          }
        ]
      },
      {
        "id": "7",
        "priority": 1,
        "title": "Navigation designs",
        "chat": 0,
        "attachment": 0,
        "assignees": [
          {
            "avt": "https://randomuser.me/api/portraits/men/68.jpg"
          }
        ]
      },
      {
        "id": "8",
        "priority": 2,
        "title": "Create style guide based on previous feedback",
        "chat": 5,
        "attachment": 2,
        "assignees": [
          {
            "avt": "https://randomuser.me/api/portraits/men/64.jpg"
          }
        ]
      }
    ]
  }
]

'''
'''--- src/mock/teams.ts ---
export const teams = [
  { name: 'Engineering', href: '#', bgColorClass: 'bg-indigo-500' },
  { name: 'Human Resources', href: '#', bgColorClass: 'bg-green-500' },
  { name: 'Customer Success', href: '#', bgColorClass: 'bg-yellow-500' },
]
'''
'''--- src/near-api/near.ts ---
import { Contract, Near, WalletConnection, keyStores, utils } from "near-api-js";
import { WALLET } from "@/constants/wallet";

let near: Near | null = null;
export let wallet: WalletConnection | null = null;

export const initSDK = async () => {
  if(near != null) return;
  near = new Near({
    networkId: WALLET.NETWORK_ID,
    keyStore: new keyStores.BrowserLocalStorageKeyStore(),
    nodeUrl: WALLET.NODE_URL,
    walletUrl: WALLET.WALLET_URL,
  });

  wallet = new WalletConnection(near, "MoonBase");
}

export const signIn = async () => {
  await wallet?.requestSignIn({ contractId: WALLET.CONTRACT_ID });
};

export const signOut = () => {
  wallet?.signOut();
}

export const view = async (name: string, args = {}) => {
  const result = await wallet?.account().viewFunction(WALLET.CONTRACT_ID, name, args);
  return result;
};

export const call = async (name: string, args = {}, deposit = "0") => {
  const result = await wallet?.account().functionCall({
    contractId: WALLET.CONTRACT_ID,
    methodName: name,
    args: args,
    attachedDeposit: utils.format.parseNearAmount(deposit),
  });
  return result;
}
'''
'''--- src/pages/api/hello.ts ---
// Next.js API route support: https://nextjs.org/docs/api-routes/introduction
import type { NextApiRequest, NextApiResponse } from 'next'

type Data = {
  name: string
}

export default function handler(
  req: NextApiRequest,
  res: NextApiResponse<Data>
) {
  res.status(200).json({ name: 'John Doe' })
}

'''
'''--- src/store/slices/todoSlice.ts ---
import { StateCreator } from "zustand";
import ITodo from "../types/ITodo";

// add 
const createTodoSlice: StateCreator<ITodo> = (set, get)=>({
    todos: ['create','next js app','using typescript'],
    addTodo(todo: string){
        set(state => ({todos:[...state.todos, todo]}) )
    }
})

export default createTodoSlice;
'''
'''--- src/store/types/ITodo.ts ---
interface ITodo{
  todos: Array<string>,
  addTodo: (todo: string)=> void
}

export default ITodo;
'''
'''--- src/store/useStore.ts ---
import create from 'zustand'
import ITodo from './types/ITodo'
import createTodoSlice from './slices/todoSlice'

const useStore = create<ITodo>()((...a) =>({
    ...createTodoSlice(...a)
}))

export default useStore;
'''
'''--- src/styles/Home.module.css ---
.main {
  max-height: 80vh;
  margin: 2rem;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
'''
'''--- src/styles/globals.css ---
@tailwind base;
@tailwind components;
@tailwind utilities;

.container {
  padding: 20px;
}

.list-grid {
  display: grid;
  grid-template-columns: minmax(300px, 1fr) minmax(300px, 1fr) minmax(
      300px,
      1fr
    );
  grid-gap: 8px;
  /* grid-auto-columns: minmax(200px, 1fr) minmax(200px, 1fr) minmax(200px, 1fr); */
}

.droppable {
  padding: 10px;
  border-radius: 6px;
  background: #d4d4d4;
}

.drag-item {
  padding: 10px;
  border-radius: 6px;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
  background: white;
  margin: 0 0 8px 0;
  display: grid;
  grid-gap: 20px;
  flex-direction: column;
}

'''
'''--- src/utils/index.ts ---

export const classNames = (...classes: any) => {
  return classes.filter(Boolean).join(' ')
}

export const getDaoId = (daoAddr: string) => {
  if(!daoAddr) return "";
  const names = daoAddr.split('.');
  return names[0];
}
'''
'''--- tailwind.config.js ---
/** @type {import('tailwindcss').Config} */
const defaultTheme = require('tailwindcss/defaultTheme')

module.exports = {
  content: [
    "./src/**/*.{js,ts,jsx,tsx}",
  ],
  theme: {
    extend: {
      fontFamily: {
        sans: ['Inter var', ...defaultTheme.fontFamily.sans],
      },
    },
  },
  plugins: [
    require('@tailwindcss/forms'),
  ],
}
'''
'''--- tsconfig.json ---
{
  "compilerOptions": {
    "target": "es5",
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "forceConsistentCasingInFileNames": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "baseUrl": ".",
    "paths": {
      "@/*": ["./src/*"]
    }
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx"],
  "exclude": ["node_modules"]
}

'''