*GitHub Repository "freewind-demos/typescript-react-near-api-js-login-run-contract-demo"*

'''--- README.md ---
TypeScript React "near-api-js" Login Run Contract Demo
=================================

直接使用`near-api-js`而非`wallet-selector`进行登录并执行 function call（包括change function)

多次connectToNear以及创建WalletConnection对象，信息都是从`localStorage`中取的，可以当作同一个对象使用，不会产生格外连接。

每次SignIn只能指定一个contract。如果登录到新的contract，之前的登录就无效了。如果操作其change method，每次都需要 approve

```
npm install
```

## Deploy contract

已经操作过，不需要再操作

```
near login
npm run deploy-contract
npm run deploy-contract
```

## Run frontend

```
npm start
```

'''
'''--- package.json ---
{
  "scripts": {
    "start": "webpack server --open"
  },
  "dependencies": {
    "react": "17.0.2",
    "react-dom": "17.0.2",
    "ts-node": "10.4.0"
  },
  "devDependencies": {
    "@near-wallet-selector/core": "5.0.0",
    "@near-wallet-selector/modal-ui": "5.0.0",
    "@near-wallet-selector/my-near-wallet": "5.0.0",
    "@types/html-webpack-plugin": "3.2.6",
    "@types/node": "17.0.13",
    "@types/react": "17.0.38",
    "@types/react-dom": "17.0.11",
    "@types/webpack": "5.28.0",
    "@types/webpack-bundle-analyzer": "4.4.1",
    "ahooks": "3.7.0",
    "buffer": "6.0.3",
    "css-loader": "6.5.1",
    "file-loader": "6.2.0",
    "html-webpack-plugin": "5.5.0",
    "near-api-js": "0.45.1",
    "process": "0.11.10",
    "rxjs": "7.5.6",
    "source-map-loader": "3.0.1",
    "stream-browserify": "3.0.0",
    "strip-ansi": "7.0.1",
    "style-loader": "3.3.1",
    "ts-loader": "9.2.6",
    "typescript": "5.3.3",
    "webpack": "5.67.0",
    "webpack-bundle-analyzer": "4.5.0",
    "webpack-cli": "4.10.0",
    "webpack-dev-server": "4.7.3"
  }
}

'''
'''--- tsconfig.json ---
{
  "compilerOptions": {
    "strict": true,
    "target": "es6",
    "module": "commonjs",
    "jsx": "react",
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true
  },
  "exclude": [
    "node_modules"
  ]
}

'''
'''--- webpack.config.ts ---
import webpack,{Configuration} from 'webpack';
import HtmlWebpackPlugin from 'html-webpack-plugin';
import path from 'path';

const config: Configuration = {
    mode: 'development',
    entry: './src/entry.tsx',
    devtool: 'inline-source-map',
    output: {
        path: path.resolve(__dirname, 'dist'),
        filename: 'bundle.js'
    },
    resolve: {
        fallback: {
            "stream": require.resolve("stream-browserify"),
            "buffer": require.resolve("buffer")
        },
        extensions: ['.ts', '.tsx', '.js']
    },
    module: {
        rules: [{
            test: /\.css$/,
            use: ['style-loader', 'css-loader']
        }, {
            test: /\.tsx?$/,
            loader: 'ts-loader',
            exclude: /node_modules/
        }, {
            test: /\.png$/,
            loader: 'file-loader',
        }]
    },
    plugins: [
        // https://stackoverflow.com/a/68723223/342235

        // Work around for Buffer is undefined:
        // https://github.com/webpack/changelog-v5/issues/10
        new webpack.ProvidePlugin({
            Buffer: ['buffer', 'Buffer'],
        }),
        new webpack.ProvidePlugin({
            process: 'process/browser',
        }),
        new HtmlWebpackPlugin()
    ]
}

export default config;

'''