*GitHub Repository "martyr00/NFT_near"*

'''--- .idea/modules.xml ---
<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ProjectModuleManager">
    <modules>
      <module fileurl="file://$PROJECT_DIR$/.idea/NFT Front end.iml" filepath="$PROJECT_DIR$/.idea/NFT Front end.iml" />
    </modules>
  </component>
</project>
'''
'''--- Codebase/README.md ---
Near Test

'''
'''--- Codebase/package.json ---
{
  "name": "nft-frontend",
  "description": "nft frontend",
  "version": "0.0.1",
  "license": "(MIT AND Apache-2.0)",
  "scripts": {
    "start": "parcel src/index.html"
  },
  "devDependencies": {
    "parcel-bundler": "1.12.5"
  },
  "dependencies": {
    "near-api-js": "0.43.1",
    "regenerator-runtime": "0.13.9"
  }
}

'''
'''--- Codebase/src/index.html ---
<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css" integrity="sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS" crossorigin="anonymous">
	<link href="https://fonts.googleapis.com/css?family=Arvo&display=swap" rel="stylesheet">
	<style>
		h1 {
			margin-top: 3em;
			margin-bottom: 1em;
		}
		.scene {
			height: 350px;
		}
		.gameboy {
			position: relative;
			width: 400px;
			margin: auto;
		}
	</style>
</head>
<body style="background: #eef2fe; font-family: 'Arvo', serif;">
<div class="container">
	<h1>NFT FrontEnd</h1>

	<div class="sign-in" style="display: none;">
		<p>You'll need to sign in to call contract methods:</p>
		<button class="btn btn-primary" style="background-color: #0072CE;">Sign In</button>
	</div>

	<div class="after-sign-in" style="display: none;">
		<div class="scene">
			<div class="gameboy">
				<img src="" alt="" id="image" width="400" height="300"/>
			</div>
		</div>
		<div class="sign-out">
			<button class="btn btn-primary" style="background-color: #0072CE;">Sign Out</button>
		</div>
	</div>
</div>
<script src="./main.js"></script>
</body>
</html>

'''
'''--- Codebase/src/main.js ---
import 'regenerator-runtime/runtime';
import * as nearAPI from 'near-api-js';

const CONTRACT_NAME = 'martyr.testnet';

const nearConfig = {
	networkId: 'testnet',
	nodeUrl: 'https://rpc.testnet.near.org',
	contractName: CONTRACT_NAME,
	walletUrl: 'https://wallet.testnet.near.org',
	helperUrl: 'https://helper.testnet.near.org'
};

async function connect() {
  window.near = await nearAPI.connect({
    deps: {
      keyStore: new nearAPI.keyStores.BrowserLocalStorageKeyStore()
    },
    ...nearConfig
  });

  window.walletConnection = new nearAPI.WalletConnection(window.near);

  window.contract = await new nearAPI.Contract(window.walletConnection.account(), nearConfig.contractName, {
    viewMethods: ['nft_tokens_for_owner'],
    sender: window.walletConnection.getAccountId()
  });
}

function updateUI() {
  if (!window.walletConnection.getAccountId()) {
    Array.from(document.querySelectorAll('.sign-in')).map(it => it.style = 'display: block;');
  } else {
    Array.from(document.querySelectorAll('.after-sign-in')).map(it => it.style = 'display: block;');
	
    contract.nft_tokens_for_owner({ account_id: nearConfig.contractName }).then((data) => {
        console.log(data);
        document.getElementById('image').setAttribute('src', data[0].metadata.media)
	}).catch(console.error);
  }
}

document.querySelector('.sign-in .btn').addEventListener('click', () => {
  walletConnection.requestSignIn(nearConfig.contractName, 'NFT FrontEnd UmNiK');
});

document.querySelector('.sign-out .btn').addEventListener('click', () => {
  walletConnection.signOut();
  window.location.replace(window.location.origin + window.location.pathname);
});

window.nearInitPromise = connect()
    .then(updateUI)
    .catch(console.error);

'''