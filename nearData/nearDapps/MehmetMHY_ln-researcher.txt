*GitHub Repository "MehmetMHY/ln-researcher"*

'''--- README.md ---
<h1 align="center">Labeler NearBy - Researcher</h1>
<p align="center">
  <img width="200" src="./assets/repoImgs/ln-logo.png">
</p>

## ⚠️ WARNING:
(12-29-2022) This project is not fully completed and still needs thorough testing before going live

## What is the Labeler NearBy project?
- Labeler NearBy (ln) is a decentralized platform where machine learning researchers can outsource data labeling to labelers around the world. This is done by using ln-researcher, ln-labeler, and NEAR smart contract(s).
- The ultimate goal of this project is to provide an ecosystem for machine learning researchers to have their data labeled by labelers around the world.
- Labeler NearBy consists of the following projects:
  - ln-researcher : https://github.com/MehmetMHY/ln-researcher
  - ln-labeler : https://github.com/dylan-eck/ln-labeler

## Project Layout:
- assets : contains assets for the repo, such as documents and images
- config : contains the project config file(s)
- controllers : contains all functions used by the API
- middlewares : contains all middleware software
  - cli : contains functions for project's cli (very under developmented at the moment)
  - database : contains functions for talking with the project database (Postgusql)
  - db_manager : contains functions used by the manager
  - smart_contract : contains smart contract code, code that builds & deploys the smart contract, as well as functions that talk with te smart contract.
- models : contains all schemas used for this projects
- routes : contains the routes/endpoints for the project's API
- utils : contains general functions used thoughout the project
- app.js : main script for running the project's API
- manager.js : main script for runnign the project's manager 
- .env.development : all environment variable for a development deployment
- .env.production : all environment vartables for a production deployment

## About:
- The reseacher can host their data though ln-researcher ([this-repo](https://github.com/MehmetMHY/ln-researcher)) and allow labelers using ln-labeler ([here](https://github.com/dylan-eck/ln-labeler)) to label the data provided by the researcher. In exchange for their work, the labeler will get rewarded with NEAR. This exchange of jobs and labels is handled my smart contracts hosted on the NEAR protocal blockchain.
- Currently, there is only one smart contract used for ln-researcher, and this contract is deployed by the researcher. This smart contract's main purpose is the provide data labeling jobs to real people (by taking and sending back funds from the NEAR user), determine the best label by using a voting system (Schulze method), and make sure the labeler that provides the best label(s) gets paid. The smart contract acts as both a payment system as well as a judge of shorts that makes sure a labeler gets paided and that a researcher gets their data labeled; everyone does their job.
- The Labeler NearBy project was started for the [2022 NEAR Metabuild III hackathon](https://metabuild.devpost.com/). But, if there is enough demand, the goal is to expand this project into something bigger than just a hackathon project.
- Currently this project only focuses on labeling image data using squal and polyges labeling but the goal is to expend it to label many other types of data.
- All smart contracts for this project will be deployed to testnet until further notice. The code base is still needs time to mature and the code needs to get audited.

## Project's Components:
- Database : A Postgresql database that holds data about the image, it's labels, and any other information from the smart contract. This database is mainly used by the API and the Manager.
- API : The API that the labeler can use to access the researcher's data (images). This API was designed to be secure and make it such that only the assigned labeler, using NEAR, can access/view the image. This is done by using encrpytion, RSA Keys, a NEAR smart contract, as well as the certain data stored in the database. 
- Manager : The manager is a component that manages both the local database (Postgresql) as well as the data stored in the smart contract. It makes sure the local database is in sync with the smart contract's data and it manages what jobs get added and/or removed from the smart contract.
- Smart Contract : Read the details below for information about the smart contract for this project.
- CLI : A command line interface for this project (very under developmented at the moment)

## How To Setup:
- ⚠️ Please Read: This code is not finished and has a long ways to go. But this is currently how this project gets built for testing and development.
0. Ideally be on a Macbook or Linux system. This project is not designed for Windows at the moment.
1. Make sure to have the following installed:
- NodeJS : https://nodejs.org/en/
- Yarn : https://classic.yarnpkg.com/lang/en/docs/install/#mac-stable
- NPM : https://docs.npmjs.com/downloading-and-installing-node-js-and-npm
- Docker : https://docs.docker.com/get-docker/
2. Install the following global packages:
  ```
  npm i near-cli -g
  npm install -g pino-pretty
  ```
3. Log into your NEAR account (testnet):
  ```
  near login
  ```
4. Clone this rep: https://github.com/MehmetMHY/ln-researcher
5. Go to the directory for the ln-researcher you just cloned in step #2 using cd. The rest of the steps assume your at <your_path>/ln-researcher/
6. Run yarn:
  ```
  yarn
  ```
7. Go to the project's smart contract directory:
  ```
  cd middlewares/smart_contract/contracts
  ```
8. Run Npm in the contracts directory (in the smart contract directory):
  ```
  npm install
  ```
9. Build & deploy the smart contract (in the smart contract directory):
  ```
  # this will create & deploy a smart contract then print the name of that smart contract. SAVE THAT smart contract name for later step(s):
  npm run deploy
  ```
10. Setup the database:
  - To do this, read the following documentation located in this repo: https://github.com/MehmetMHY/ln-researcher/blob/main/assets/docs/postgus-setup.md
11. After everything is setup got back to the repo's root directory and go into the config directory:
  ```
  cd - 
  cd config/
  ```
12. From here, check out the [config.json](https://github.com/MehmetMHY/ln-researcher/blob/main/config/config.json). Modify the values in this json for your setup and save your changes. The main key-values to look into are the following:
  - logfile : the path to a file that the logger will use for logging
  - smartContract.mainAccount : the username of the near account you added
  - smartContract.scAccount : the name/username of the near smart contract you created in step #9
  - smartContract.maxJobsPerRound : the max number of jobs you want the smart contract to hold (be careful with this value).
  - smartContract.paymentPerImageNEAR : how much near your willing to pay per jon (be careful and fair with this value).
  - dataDirPath : directory path to your directory of images you want to label.
  - whatToLabel : the tags for you labels (array of strings)
  - labelDescriptionPath: file path to description text which should contain a descript and/or steps of how you want your labeler to label your images.
  - managerPauseTimeSeconds: how many seconds the manager should pause/rest before a new cycle of checking/sync data from the smart contract and the local (postgus) database.
13. Now, build the local database. To do this, run the following command:
  ```
  yarn addDB
  ```
14. Now, everything should be setting and you should be able to use thse other commands:
  ```
  # view the logs produced by all the scripts in this project
  yarn logs

  # run the API
  yarn devRunAPI

  # run the manager
  yarn devRunManager
  ```
15. After all of this, you can also checkout ln-labeler: https://github.com/dylan-eck/ln-labeler

## Credits:
- This project uses the layout discussed on this amazing article: https://dev.to/nermineslimane/how-to-structure-your-express-and-nodejs-project-3bl
- Citing code correctly: https://integrity.mit.edu/handbook/writing-code
- All the links to the sources that helped me build this project:
  - https://github.com/MehmetMHY/ln-researcher/blob/main/assets/docs/sources.txt

'''
'''--- app.js ---
const express = require('express')

const healthRoutes = require("./routes/health")
const imageRoutes = require("./routes/image")

const app = express()
app.use(express.json())

app.use("/health", healthRoutes)
app.use("/image", imageRoutes)

// run server
const port = process.env.PORT || 3000
app.listen(port, () => {
  console.log(`Example app listening on port ${port}. Check out http://localhost:${port} if you running this API locally.`)
})

'''
'''--- assets/devpost/metaBuild3/README.md ---
# Labeler NearBy
- Hackathon: [NEAR MetaBUILD III](https://metabuild.devpost.com/)
- Official Submission: https://devpost.com/software/labeler-nearby
- Submission Date: November 2023
- Authors:
  - Mehmet Yilmaz
  - Dylan Eck

## Description

A decentralized platform where machine learning researchers  can outsource data labeling to labelers around the world.

<p align="center">
  <a href="https://www.youtube.com/watch?v=KfaUDbWIvr8" title="Submission Video">
    <img src="./thumbnail.png" width="500">
  </a>
</p>
<p align="center"><em><strong>click the image to view the submission video (YouTube)</strong></em></p>

<p><em><strong>
⚠️ Note: Due to the small size of our team, we were not able to implement everything that we wanted to. Some things described in this write up are still a work in progress and as such may not be fully present in the code submitted
</strong></em></p>

## Inspiration

During my (Mehmet) time as an undergraduate I was competing in a competition called AgBot. The goal of the competition was to make a robot that could fertilize Maize plants as well as kill off any weeds around a Maize plant. The Maize plant is a plant that produced corn and in the competition these Maize plants were really early in their development phase. Ultimately, me and my team for that competition did not win that competition but well helping to develop the robot, I ran into an issue. I wanted to use machine learning and computer vision to train a model that could identify maize plants such that the robot could know where a Maize plant and/or weed plant was located in the real world. So I gathered over one thousand images of maize plants during their early development stage then quickly learned that I had to label all those images such that the model could learn from the data. The issue with this was that it was going to take a lot of time to do this and as a busy undergraduate in engineering, as well as bad procrastination habits, I never got the time to label those images and eventually never got to it. But I always wondered if there could be a service that labeled machine learning data for you but at a reasonable price.

A few years later, I discovered services like Scale AI and Amazon SageMaker Data Labeling that provided such a service. These companies are worth millions and/or billions by providing such a service. But my concern with these services was how they are all centralized which allows them to take a larger cut of the profit made by their service. Because of this, most likely, they provide a smaller return of the profit to the people who label that data in countries where lower pay is acceptable. So the idea of having a verison of Scale AI but decentralized was something I considered for a over two years but what stopped me from pursuing such a project was high transaction fees in popular cryptocurrencies like Ethereum and the fact that I did not really find anyone who attempted such a project.

That all changed with this hackathon, where I discovered NEAR. NEAR had low transaction fees and on top of that, there was a popular project called NEAR Crowd which gets tens of thousands of transactions a day which convinced me that this project of a decentralized data labeling platform would be possible. 

We were really inspired by the works of Scale AI and NEAR Crowd. Our desire for this hackathon was to solve some of the problems that we saw with these two existing services. The biggest problem that we see with Scale AI is that data laborers receive very little money for their work after Scale AI takes their cut of the revenue. Near is very similar to our project, however the usage of Near Crowd is limited due to its invite only nature.
## What it does and/or was suppose to do

The ultimate goal of this project is to provide an ecosystem for machine learning researchers to have their data labeled by labelers around the world. To achieve this goal, two tools are provided:
- ln-researcher: A tool for hosting data (just images for now)
- ln-labeler: A tool for labeling data.

To see the overall layout of this project, checkout the diagram [HERE](https://raw.githubusercontent.com/MehmetMHY/ln-researcher/main/assets/repoImgs/layout.png):
![layout](https://github.com/MehmetMHY/ln-researcher/blob/main/assets/repoImgs/layout.png?raw=true)

Ln-researcher (LNR) is what the researcher would use and consists of mainly four components:

- Researcher’s Smart Contract : This is a smart contract (sc) deployed by the researcher. This sc hosts jobs corresponding to images the researcher wants labeled. The labeler will use this sc to determine what image they will label. When requesting jobs from the sc, labelers are required to attach NEAR to the transaction. This NEAR is immediately returned to the labeler, its inclusion merely serves to discourage the creation of fake accounts. Labelers are also required to submit an RSA public key obtained from the frontend labeling tool. This key is used to validate users when requesting images from the researcher database and ensure that images can only be viewed by assigned valid labelers.  Each image is labeled multiple times. Currently the number of labels per image is set to three. Once the image has been labeled the required number of times, the labels are given to reviewers to review. Currently the labels for each image are reviewed by three reviewers. Reviewing consists of ranking each set of labels based on quality. Once all required reviews have been completed, the Schulze Method is used to determine which set of labels to use for the image. The smart contract then distributes among all reviewers and the top-ranked labeler.

- Image/Data API: This is an API that allows the researcher to host their images on the internet for the labeler to access. Sense images are too large for smart contracts to store, we found it best that the researcher self hosts their images. But, this API has a layer of security such that only those who are allowed to label an image can label that image. The API has an endpoint called image/. This endpoint is a POST endpoint that requires a body containing the following: id, username, and signature. The id key-value is the id associated with the image and this value is provided as part of the job by the smart contract. The username is the NEAR username of the person assigned the job. And the signature key-value is a signature generated using the private RSA key, assigned to the user from the front end, and the user’s NEAR username as a string. When this request is made, the API checks to make sure the specified image ID exists. Then it checks to see if the username provided is the user assigned to the image. After that, it checks the local database to see if the provided signature was used in the past; if not, the signature is checked with the user’s public key, which is stored in the smart contract, and if the signature is valid, then the image starts getting encrypted. Then the image gets encrypted by a randomly generated hex key. This hex key is then encrypted with that user’s RSA public key. After this, the encrypted key and the image’s labeling description is attached as part of the response’s headers and the image, which is an encrypted string at this point, is returned as part of the response. The frontend, would then load this response, decrypt the key with the user’s assigned RSA private key. Using this decrypted key, the frontend would then decrypt the image and with that the user can view the image for labeling. All of this in turn, allows the image to be accessed only by those assigned with the task of labeling that image. We are not security expects, but this does seem like a secure way to host the images on the internet. 

- Local Database: This is a local database used by ln-researcher. It is used to keep track of jobs, labels, and associate images with an id. It’s also used to store other information that is useful for other components of this project; such as the API component. Its additional usage is to “backup” data that is also stored in the smart contract. The smart contract, over time, gets all its complete jobs whipped from its local storage (json). This is to save storage space in the smart contract and avoid paying high fees over time.

- Manager: This component is used to manage jobs in the smart contract. It runs every couple seconds to do the following. It checks to make sure the local database is in sync with the smart contract’s database (json). It adds jobs and funds to the smart contract. Not only that, but it checks to see if any jobs are taking too long. If a job has not been completed in 1 hour, the manager makes the smart contract remove the assigner user for that job and instead re-opens the job for someone else to do. And finally, the manager tools for any completed jobs. It then saves the completed jobs, mainly the final labels, to the local database. After all this is successfully done, the manager makes the smart contract remove the complete jobs from the smart contract’s local database (json). After removing the completed jobs, the smart contract adds new jobs, if there are still images left for labeling.

Ln-labeler is a web-app that labelers use to find and complete jobs. It consists of three main components:
- Frontend: Provides a graphical user interface for finding jobs, labeling images, and reviewing labels created by others. The web-app provides a graphical user interface with tools for performing all labeler actions removing the need for labelers to interact directly with either the researcher smart contract or researcher database. 
- NEAR integration: Labelers are authenticated by signing in with their NEAR wallet. The NEAR JavaScript API is then used to interact with the researcher smart contract to request and submit jobs. The user does not directly call smart contract functions, they interact with the GUI and the associated smart contract calls are performed by the web-app.
- Ln-researcher integration: After authenticating using NEAR, the web-app generates an RSA key pair for the labeler. This key pair is used to validate the user when the-web app requests images from the researcher database. It is also used to ensure that only valid labelers who have been assigned a job can view the associated image. Images are fetched automatically by the web-app after a job has been assigned by the smart contract. The received image is then loaded into either the labeling or reviewing interface depending on which kind of job was assigned.

## What does not work at the moment

Due to us underestimating the complexity and difficulty of this project, we sadly ran out of time to implement everything we wanted to implement. To see what is missing you can refer to the diagram above. In the diagram, squares/features are colored either green, yellow, or red. Green means the feature was implemented. Yellow means the feature was mostly implemented but still has issues. And red means the feature was not implemented.

Features we failed to implement on time or did not fully implement:
- Connections between the frontend, researcher smart contract and researcher database.
- Frontend reviewing workspace  
- Frontend job selection page
- Containerization of ln-researcher using docker

## How we built it

Labeler Nearby consists of three main components, the researcher data hosting server, the researcher smart contract, and the front end. 

Ln-researcher was building using Node.js, JavaScript, and PostgreSQL. The project used the following npm packages: ajv, axios, express.js, jest, moment, near-api-js, nodemon, pg, pino, and uuid.

The smart contract used by ln-researcher and ln-labeler was built using Typescript. And used the following npm packages: near-api-js, near-cli, and near-sdk-js.

The front end was put together using Next.js as the underlying framework. OpenSeadragon and Annotorious were used to provide the labeling functionality. The NEAR JavaScript API was used to handle interaction with smart contracts. The layout and styling of the rest of the front end was accomplished using plain html and css.

## Challenges we ran into

The biggest challenge that we ran into was underestimating the amount of work that it would take to bring our idea to completion. We did spend a lot of time at the beginning of the hackathon brainstorming and planning what we were going to do. We pivoted a couple times early on to ideas that we at the time felt would be easier to implement. However, due to our general lack of experience in web development and blockchain technology, our assessments of the scale and difficulty of implementing our ideas were inaccurate.

Another challenge was that the way that the smart contract was set up made it quite difficult and tedious to test certain functionality. This became an especially big problem later in the hackathon because we didn’t leave enough time to integrate everything. Because we didn’t have time to integrate everything we couldn’t deploy a live demo or record a proper demo video.

## Accomplishments that we're proud of

Although the styling of the front end is not completely finished, we do think that it looks fairly decent in its current state. 

We are also proud that we were able to successfully implement the encryption and verification system used when retrieving images from the researcher. The API component for ln-researcher is something we are really proud of. 
## What we learned

One of the most important things we learned is that, even in hackathons as long as this one, good time management is essential when attempting to complete projects at the scale of the project that we attempted. We also learned a lot about web development and NEAR development through encountering and solving many small problems while implementing our project.

## What's next for Labeler NearBy

Unfortunately, we were unable to finish our prototype implementation during the hackathon. Because of this, we were unable to deploy a live demo or create a video demonstrating the full functionality of Labeler NearBy. Moving forward, our next step would be to finish the initial prototype implementation so that we can get a feel for and demonstrate intended functionality. After that, assuming there is interest, we would go back over the prototype and clean it up, make it bullet proof, and turn it into an actual product. We feel that this concept has real potential to be beneficial, especially for those living in areas where it is difficult to find steady, gainful employment.

## Built With:

annotorious, express.js, javascript, near-api-js, near-sdk-js, nextjs, node.js, openseadragon, & postgresql

## Try it out:
- https://github.com/MehmetMHY/ln-researcher
- https://github.com/dylan-eck/ln-labeler

'''
'''--- assets/docs/logging.md ---
# Logging For This Project

## About:
- The NPM package 'Pino' is what this project will use as it's logger.
- All logs will be saved to a file which is configured in: config/config.json.
- The main logging function can be found at: utils/logger.js

## Sources:
- https://github.com/pinojs/pino
- https://github.com/pinojs/pino-pretty

## How To View Logs:
1. Make sure pino-pretty is installed (globally)
2. Run this command (modify the path value):
    ```
    cat <log_file_path>/lb_researcher.log | pino-pretty
    ```

'''
'''--- assets/docs/postgus-setup.md ---
## Notes On Setting Up Postgres For LN-researcher

## About:
- The ln-researcher/ project uses Postgres as it's database which needs some initial setup before it can work with the rest of the code.
- (10-22-2022) The goal is to automate this using a Dockerfile. But for now, refer to these notes.

## Initial Setup:
- Ideally, do all these steps/setups on a system that runs MacOS or Linux.
- Make sure Docker is installed:
    - https://docs.docker.com/engine/install/
    - (optional) https://www.docker.com/products/docker-desktop/
- (optional) Check out Postgres's Docker Hub page:
    - https://hub.docker.com/_/postgres
- I recommend using Docker Desktop for easily starting and ending the Postgres docker container.

## Setup and get running Postgres Database For LN-Researcher:
```
# pull offiical docker image for postgres:
docker pull postgres

# install, setup, and run postgres docker container:
docker run --name ln-researcher-db -e POSTGRES_PASSWORD=password -d -p 5432:5432 postgres

# list all running docker container (grab the CONTAINER ID):
docker ps

# exec into docker container though bash:
docker exec -it 678c1fcf608b bash            

# [inside container] go into postgres terminal
psql -U postgres

# [inside postgres] create a database called "data":
postgres=# CREATE DATABASE data;

# [inside postgres] exist postgres terminal:
postgres=# \q

# [inside container] go into postgres terminal for database "data":
root@678c1fcf608b:/# psql --username postgres --dbname data

# [inside "data" postgres] create table "images" for database "data":
data=# CREATE TABLE images( data JSONB );

# [inside "data" postgres] exist "data" postgres terminal:
data=# \q

# [inside container] exist docker container terminal:
root@678c1fcf608b:/# exit
```

## Disable/Turn-Off the Postgres Database For LN-Researcher:
```
# stop running docker container:
docker stop 678c1fcf608b
```

'''
'''--- assets/docs/sources.txt ---
https://expressjs.com/en/starter/hello-world.html
https://www.sohamkamani.com/nodejs/rsa-encryption/
https://gist.github.com/prof3ssorSt3v3/96e6b29cd5baf4aeaad29a93fd3c7ed5
https://bloop.ai/search/how-to-use-crypto-js-library-rabbit-decrypt-in-javascript
https://www.geeksforgeeks.org/node-js-crypto-generatekeypairsync-method/
https://codeforgeek.com/handle-get-post-request-express-4/
https://www.youtube.com/watch?v=pKd0Rpw7O48
https://dev.to/nermineslimane/how-to-structure-your-express-and-nodejs-project-3bl
https://gist.github.com/sohamkamani/b14a9053551dbe59c39f83e25c829ea7
https://www.postgresql.org/docs/current/datatype-json.html
https://attacomsian.com/blog/javascript-check-variable-is-object
https://node-postgres.com/features/connecting
https://node-postgres.com/
https://medium.com/swlh/create-a-rest-api-with-nodejs-and-postgresql-b74369f83ea2
https://stackoverflow.com/questions/58254717/returning-the-result-of-a-node-postgres-query
https://popsql.com/learn-sql/postgresql/how-to-query-a-json-column-in-postgresql
https://www.aptuz.com/blog/is-postgres-nosql-database-better-than-mongodb/
https://www.postgresqltutorial.com/postgresql-tutorial/postgresql-delete/
https://stackoverflow.com/questions/30641512/create-database-from-command-line
https://dev.to/andre347/how-to-easily-create-a-postgres-database-in-docker-4moj
https://dataschool.com/learn-sql/export-to-csv-from-psql/
https://gist.github.com/kcranston/b309664dc8864e680813f0f2b87c3b5b
https://medium.com/codex/intro-to-postgresql-c8da31335c34
https://www.youtube.com/watch?v=qw--VYLpxG4
https://css-tricks.com/how-to-implement-logging-in-a-node-js-application-with-pino-logger/
https://github.com/pinojs/pino-pretty
https://www.npmjs.com/package/pino-http#example
https://www.npmjs.com/package/pino
https://levelup.gitconnected.com/7-best-node-js-logging-libraries-for-your-next-projects-2ae9da133931
https://stackoverflow.com/questions/44133426/ajv-schema-validation-for-array-of-objects
https://ajv.js.org/guide/why-ajv.html
https://www.npmjs.com/package/ajv
https://dev.to/deepika_banoth/how-to-use-jsonbset-function-in-postgresql-35eo
https://devhints.io/postgresql-json
https://dev.to/ericchapman/nodejs-express-part-5-routes-and-controllers-55d3
https://en.wikipedia.org/wiki/List_of_HTTP_status_codes
https://axios-http.com/docs/req_config
https://stackoverflow.com/questions/55458239/naming-convention-for-environment-variables-files
https://www.geeksforgeeks.org/how-to-access-variables-from-another-file-using-javascript/
https://integrity.mit.edu/handbook/writing-code
https://docs.near.org/tools/near-api-js/quick-reference
https://docs.near.org/develop/contracts/security/one-yocto
https://stackabuse.com/executing-shell-commands-with-node-js/
https://docs.near.org/tools/near-cli#near-add-key
https://nodejs.org/api/child_process.html
https://stackoverflow.com/questions/4482686/check-synchronously-if-file-directory-exists-in-node-js
https://expressjs.com/en/api.html#res.sendFile
https://www.youtube.com/watch?v=3a9S3wubxLw
https://nodejs.org/api/buffer.html#static-method-bufferfromstring-encoding
https://medium.com/@anned20/encrypting-files-with-nodejs-a54a0736a50a
https://stackoverflow.com/questions/28834835/readfile-in-base64-nodejs
https://nodejs.dev/en/learn/reading-files-with-nodejs/
https://melvingeorge.me/blog/convert-string-buffer-nodejs
https://stackoverflow.com/questions/8750780/encrypting-data-with-a-public-key-in-node-js
https://nodejs.org/en/docs/guides/nodejs-docker-webapp/
https://github.com/nodesource/distributions/blob/master/README.md
https://stackoverflow.com/questions/30171063/how-to-generate-a-postgresql-dump-from-a-docker-container
https://stackoverflow.com/questions/24930923/postgresql-where-does-the-output-of-pg-dump-go
https://www.postgresql.org/docs/8.4/app-pgdump.html
https://www.digitalocean.com/community/tutorials/how-to-install-and-use-postgresql-on-ubuntu-20-04
https://stackoverflow.com/questions/18223665/postgresql-query-from-bash-script-as-database-user-postgres
https://stackoverflow.com/questions/60619659/postgres-mounting-volume-in-docker-permission-denied
https://stackoverflow.com/questions/46891622/run-yarn-in-a-different-path
https://stackoverflow.com/questions/41588857/docker-postgres-failed-to-start-with-specified-port

'''
'''--- config/config.json ---
{
    "logfile": "/tmp/ln_researcher.log",
    "postgres": {
        "connection": {
            "user": "postgres",
            "host": "localhost",
            "password": "password",
            "database": "data",
            "port": 5432
        }
    },
    "pausedTestFiles": [
        "logger.test.js"
    ],
    "requesterConfig": {
        "timeout": 2000,
        "retries": 1,
        "retryDelay": 1000
    },
    "currentNearPriceEndpoint": "https://api.coingecko.com/api/v3/simple/price?ids=near&vs_currencies=usd&precision=full",
    "smartContract": {
        "connectionConfig": {
            "networkId": "testnet",
            "nodeUrl": "https://rpc.testnet.near.org",
            "walletUrl": "https://wallet.testnet.near.org",
            "helperUrl": "https://helper.testnet.near.org",
            "explorerUrl": "https://explorer.testnet.near.org"
        },
        "mainAccount": "memetime.testnet",
        "scAccount": "dev-1669005331131-34888993730110",
        "maxJobsPerRound": 10,
        "paymentPerImageNEAR": 0.1
    },

    "dataDirPath": "/Users/mehmet/Desktop/NEAR-DEV/content/img_data/plants_5-18-2019/corn_plants/",
    "whatToLabel": ["maize"],
    "labelDescriptionPath": "/Users/mehmet/Desktop/NEAR-DEV/content/img_data/plants_5-18-2019/corn_plants/description.txt",
    "managerPauseTimeSeconds": 10
}

'''
'''--- config/dbConfig.sql ---
-- PostgreSQL database dump
-- Dumped from database version 14.5 (Debian 14.5-1.pgdg110+1)
-- Dumped by pg_dump version 14.5 (Debian 14.5-1.pgdg110+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

-- Name: data; Type: DATABASE; Schema: -; Owner: postgres

CREATE DATABASE data WITH TEMPLATE = template0 ENCODING = 'UTF8' LOCALE = 'en_US.utf8';

ALTER DATABASE data OWNER TO postgres;

\connect data

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

-- Name: images; Type: TABLE; Schema: public; Owner: postgres

CREATE TABLE public.images (
    data jsonb
);

ALTER TABLE public.images OWNER TO postgres;

'''
'''--- config/fileFormats.json ---
{
    "image": [
        ".apng",
        ".avif",
        ".png",
        ".svg",
        ".webp",
        ".bmp",
        ".ico",
        ".cur",
        ".tif",
        ".tiff",
        ".jpg",
        ".jpeg",
        ".jfif",
        ".pjpeg",
        ".pjp"
    ],        
    "video": [
        ".mp4",
        ".webm",
        ".mpg",
        ".mp2",
        ".mpeg",
        ".mpe",
        ".mpv",
        ".ogg",
        ".m4p",
        ".m4v",
        ".avi",
        ".wmv",
        ".mov",
        ".qt",
        ".flv",
        ".swf",
        ".avchd",
        ".mp4",
        ".webm",
        ".mkv",
        ".gif"
    ],
    "audio": [
        ".mp3",
        ".m4a",
        ".flac",
        ".aac",
        ".wav",
        ".dsd",
        ".ogg",
        ".wma",
        ".alac",
        ".aiff"
    ]
}
'''
'''--- controllers/cryptography.js ---
const crypto = require("crypto")

/*
CREDIT - A function that generates and returns a RSA key pair (public & private keys):
This function was taken directly and modified from GeeksForGeeks' online article:
    - 11-4-2022 : https://www.geeksforgeeks.org/node-js-crypto-generatekeypair-method/
*/
async function getRSAKeys(){
    const { publicKey, privateKey } = crypto.generateKeyPairSync("rsa", {
        modulusLength: 2048,
    })

    return {
        public: publicKey.export({ type: "pkcs1", format: "pem" }),
        private: privateKey.export({ type: "pkcs1", format: "pem" })
    }
}

/*
CREDIT - Encrpt a buffer given a key and encryption algorithm (or default to aes-256-ctr)
This function was taken directory from Anne Douwe Bouma's Medium article:
    - 11-15-2022 : https://medium.com/@anned20/encrypting-files-with-nodejs-a54a0736a50a
*/
async function encrypt(buffer, key, algorithm='aes-256-ctr') {
    const iv = crypto.randomBytes(16);
    const cipher = crypto.createCipheriv(algorithm, key, iv);
    const result = Buffer.concat([iv, cipher.update(buffer), cipher.final()]);
    return result;
}

/*
CREDIT - Decrypt an encrypted buffle given a key and encryption algorithm (or default to aes-256-ctr)
This function was taken directory from Anne Douwe Bouma's Medium article:
    - 11-15-2022 : https://medium.com/@anned20/encrypting-files-with-nodejs-a54a0736a50a
*/
async function decrypt(encrypted, key, algorithm='aes-256-ctr') {
   const iv = encrypted.slice(0, 16);
   encrypted = encrypted.slice(16);
   const decipher = crypto.createDecipheriv(algorithm, key, iv);
   const result = Buffer.concat([decipher.update(encrypted), decipher.final()]);
   return result;
}

/*
CREDIT - Generate a random 32 bit key from a random byte hex string
This function was partly built by Anne Douwe Bouma's Medium article:
    - 11-15-2022 : https://medium.com/@anned20/encrypting-files-with-nodejs-a54a0736a50a
*/
async function genRandom32BitKey(){
    let key = crypto.randomBytes(64).toString('hex')
    key = crypto.createHash('sha256').update(String(key)).digest('base64').substr(0, 32)
    return key
}

module.exports = {
    encrypt,
    decrypt,
    genRandom32BitKey,
    getRSAKeys
}

'''
'''--- controllers/health.js ---
const moment = require("moment")
const logger = require("../utils/logger")

const nameForLog = `[HEALTH_ENDPOINT]`

async function healthCheckup(req, res) {
    logger.info(`${nameForLog} [http v${req.httpVersion}] ${req.method} request was made to endpoint ${req.originalUrl} with header(s) ${JSON.stringify(req.rawHeaders)}`)

    try {
        const time = moment.utc()

        const output = {
            uptime: [process.uptime(), "seconds"],
            timestamp: time.format('MM/DD/YYYY HH:mm:ss z'),
            epoch: [ time.valueOf(), "milliseconds" ],
            running: true
        }

        return res.status(200).json(output)

    } catch (err) {
        logger.error(`Unexpected error occurred in ${healthCheckup.name}; resulting in health endpoint failing. This was the error: ${err}`)

        return res.status(500).send(`unexpected error occurred`)
    }
}

module.exports = {
    healthCheckup
}

'''
'''--- controllers/image.js ---
const crypto = require("crypto")
const fs = require("fs")
const smartContract = require("../middlewares/smart_contract/nearApi")
const db = require("../middlewares/database/db")
const logger = require("../utils/logger")
const util = require("../utils/util")
const fileCrypto = require("./cryptography")

const scConfig = require("../config/config.json").smartContract
const userConfig = require("../config/config.json")
const payloadSchema = require("../models/apiImagePayload").imgEndpoint

const nameForLog = `[SUPPLY-IMAGE]`

async function getImage(req, res) {
    const username = req.body.username
    const signature = req.body.signature

    logger.info(`${nameForLog} [http v${req.httpVersion}] ${req.method} request was made to endpoint ${req.originalUrl} with header(s) ${JSON.stringify(req.rawHeaders)} and payload/body ${JSON.stringify(req.body)}`)

    const validPayloadFormat = await util.schemaValidate(payloadSchema, req.body)
    if(!validPayloadFormat){
        logger.info(`${nameForLog} Request failed for payload ${JSON.stringify(req.body)} because it was not formated correctly`)
        return res.status(400).send(`request's payload is invalid or not formated correctly`)
    }

    const dataID = String(req.body.id)
    const dbImageData = await db.getImageData({id: dataID})

    if(dbImageData.length === 0){
        logger.info(`${nameForLog} Request failed for payload ${JSON.stringify(req.body)} because the payload's ID does not exist in the local database`)
        return res.status(400).send(`${dataID} is an id that does not correlate to any data in the dataset`)
    }

    const filepath = dbImageData[0].filepath

    // Smart Contract Talks (start)

    const smartContractData = await smartContract.getDB(scConfig.scAccount) // json of all jobs currently in the smart contract
    const scCompletedJobs = await smartContract.getStatus(scConfig.scAccount, "completed") // json of all completed jobs in the smart contract

    if(!smartContractData || !scCompletedJobs){
        logger.fatal(`${nameForLog} Failed to get data from smart contract: smartContractData = ${JSON.stringify(smartContractData)} & scCompletedJobs = ${JSON.stringify(scCompletedJobs)}`)
        return res.status(500).send(`Failed to get proper response from smart contract. API endpoint down.`)
    }

    const scFoundEntries = smartContractData.filter(obj => obj.id === dataID)
    if(scFoundEntries.length === 0){
        logger.info(`${nameForLog} Request failed for payload ${JSON.stringify(req.body)} because the payload's ID is not in the smart contract`)
        return res.status(400).send(`ID ${dataID} is not in the smart contract`)
    }

    const scCompletedFinds = scCompletedJobs.filter(obj => obj.id === dataID)
    if(scCompletedFinds.length !== 0){
        logger.info(`${nameForLog} Request failed for payload ${JSON.stringify(req.body)} because the job for ${dataID} has already been completed`)
        return res.status(400).send(`The job for ${dataID} has already been completed`)
    }

    // Smart Contract Talks (end)

    const scEntry = scFoundEntries[0]

    let labelers = {}
    for(let i = 0; i < scEntry.tasks.length; i++){
        let entry = scEntry.tasks[i]
        if(entry.type === "label"){
            labelers[entry.assigned_to] = entry.public_key
        }
    }

    let userPubKey = labelers[username]
    if(!userPubKey){
        logger.info(`${nameForLog} Request failed for payload ${JSON.stringify(req.body)} because ${username} does not have a stored public key in the smart contract`)
        return res.status(400).send(`Username ${username} does not have a stored public key in the smart contract`)
    }

    let isVerified = false;

    try{
        isVerified = crypto.verify(
            "sha256",
            Buffer.from(username),
            {
                key: userPubKey,
                padding: crypto.constants.RSA_PKCS1_PSS_PADDING,
            },
            Buffer.from(signature, "base64")
        );
    } catch(err) {
        logger.error(`${nameForLog} Failed to use crpyto.verify() with payload ${JSON.stringify(req.body)} and public key ${userPubKey}. Resulting in this unexpected error: ${err}`)
    }

    if(!isVerified){
        logger.info(`${nameForLog} Request failed for payload ${JSON.stringify(req.body)} because the provided signature was invalid`)
        return res.status(403).send(`The provide signature is not valid for ${username}`)
    }

    let usedSignatures = dbImageData[0]["usedSignatures"]
    if(usedSignatures.includes(signature)){
        logger.info(`${nameForLog} Request failed for payload ${JSON.stringify(req.body)} because the data was sent out for user ${username} before and there for is no longer available`)
        return res.status(410).send(`ID ${dataID} was sent out for user ${username} before and there for is no longer available`)
    }

    if (!fs.existsSync(filepath) || !fs.existsSync(userConfig.labelDescriptionPath)){
        logger.fatal(`${nameForLog} Request failed for payload ${JSON.stringify(req.body)} because the file ${filepath} and/or ${userConfig.labelDescriptionPath} does not exist. The admin(s) MOST address this.`)
        return res.status(500).send(`The 'physical' data for ID ${dataID} does not exist in the server`)
    }

    let eData = undefined

    try{
        const fileKey = await fileCrypto.genRandom32BitKey()
        eData = await fileCrypto.encrypt(fs.readFileSync(filepath), fileKey)

        newImageKey = crypto.publicEncrypt(
            {
                key: userPubKey,
                padding: crypto.constants.RSA_PKCS1_OAEP_PADDING,
                oaepHash: "sha256",
            },
            Buffer.from(fileKey, "base64")
        )
        
    } catch(e) {
        logger.fatal(`${nameForLog} Request failed for payload ${JSON.stringify(req.body)} because the following error occurred well trying to encrypt the image and/or key: ${e}`)
        return res.status(500).send(`Error occurred well trying to process the response for data id ${dataID}`)
    } 

    const content = eData.toString("base64")

    let description = fs.readFileSync(userConfig.labelDescriptionPath, 'utf8')
    description = String(description).replace(/\r?\n|\r/g, "") // remove weird characters to prevent header error

    usedSignatures.push(signature)
    let dbOut = await db.editImageData(filepath, { usedSignatures: usedSignatures }, { filepath: filepath })
    logger.info(`${nameForLog} Added a new signature to the local db: ${JSON.stringify(dbOut)}`)

    logger.info(`${nameForLog} File ${filepath} was sent out to requester with payload: ${JSON.stringify(req.body)}`)

    return res.writeHead(200, {
        "Content-type": "image/jpg",
        "description": description,
        "imagekey": newImageKey.toString("base64")
    }).end(content)
}

module.exports = {
    getImage
}

'''
'''--- controllers/test/dtest.js ---
const db = require("../../middlewares/database/db")

async function apiResetDBEntryTool(id, clearUsed){
    const entries = await db.getImageData({ "id": id })

    const filepath = String(entries[0]["filepath"])

    let before = await db.getImageData({filepath:filepath})

    if (!clearUsed) {
        console.log(JSON.stringify(before, null, indent=4))
    } else {
        console.log("BEFORE:")
        console.log(JSON.stringify(before, null, indent=4))
        console.log("\n\n")
        await db.editImageData(filepath, { usedSignatures: [] }, { filepath: filepath })
        let after = await db.getImageData({filepath:filepath})
        console.log("AFTER:")
        console.log(JSON.stringify(after, null, indent=4))
    }
}

// MAIN FUNCTION CALLS
const id = "f371783c-ac05-4efb-96db-104006933d58"
apiResetDBEntryTool(id, false).then()

'''
'''--- controllers/test/m2test.js ---
const moment = require("moment")
const crypto = require("crypto")
const axios = require("axios")
const fileCryt = require("../cryptography")
const fs = require("fs")

const scTestData = require("./mkeys.json")
const config = require("../../config/config.json")

async function main(){
    const id = "a065cd2f-ea73-461d-b0d4-a774a5d157c5"
    const username = config.smartContract.mainAccount

    const url = "http://localhost:3000/image/"
    const finalImgFilePath = `./img_${moment().unix()}.jpg`
    const publicKey = scTestData["public"]
    const privateKey = scTestData["private"]

    let signature = crypto.sign("sha256", Buffer.from(username), {
        key: privateKey,
        padding: crypto.constants.RSA_PKCS1_PSS_PADDING,
    })
    signature = signature.toString("base64")

    const payload = {
        "id": id,
        "username": username,
        "signature": signature
    }

    const axiosConfig = {
        url: url,
        method: "post",
        data: payload,
        headers: Object.assign({"Content-Type": "application/json"}, {})
    }

    let response = undefined
    try {
        response = await axios.request(axiosConfig)
    } catch(err) {
        console.log(err)
    }

    if(response){
        const description = response.headers.description
        const imageKey = response.headers.imagekey
        const eImage = response.data

        const key = crypto.privateDecrypt(
            {
                key: privateKey,
                padding: crypto.constants.RSA_PKCS1_OAEP_PADDING,
                oaepHash: "sha256",
            },
            Buffer.from(imageKey, "base64")
        ).toString("base64")

        const dImage = await fileCryt.decrypt(Buffer.from(eImage, "base64"), key)

        fs.writeFileSync(finalImgFilePath, dImage)
        
        // print data stored in the header
        console.log("IMAGEKEY:")
        console.log("---------")
        console.log(`${imageKey} \n`)
        console.log("DESCRIPTION:")
        console.log("------------")
        console.log(`${description} \n`)
    }

    return
}

main().then()

'''
'''--- manager.js ---
const { connect, KeyPair, keyStores, utils, providers } = require("near-api-js")
const tools = require("./middlewares/db_manager/tools")
const request = require("./utils/request")
const logger = require("./utils/logger")
const util = require("./utils/util")
const db = require("./middlewares/database/db")
const smartContract = require("./middlewares/smart_contract/nearApi")
const moment = require("moment")
const fs = require("fs")

const config = require("./config/config.json")

const imgFormats = require("./config/fileFormats.json").image
const logName = "[MANAGER]"

// load time limit for job from the smart contract
//  - NOTE: this is far from ideal and it will be reworked
async function getTimeLimitNS(){
    try {
        let TIME_LIMIT = undefined
        let code = fs.readFileSync(`${__dirname}/middlewares/smart_contract/contracts/src/contract.ts`)
        code = code.toString().split("\n")
        TIME_LIMIT = code.filter(line => line.includes("const TIME_LIMIT"))
        TIME_LIMIT = TIME_LIMIT[0]
        TIME_LIMIT = String(TIME_LIMIT).substring(TIME_LIMIT.indexOf("BigInt("), TIME_LIMIT.indexOf(")")).replace(/[^0-9]/g, '')
        return parseFloat(TIME_LIMIT)
    } catch(e) {
        return undefined
    }
}

async function manager(cycle) {
    const apiState = await tools.apiLocalRunning()
    if(!apiState.up){
        logger.fatal(`${logName} [${cycle}] Critical! Image hosting API is down!`)
    }

    let localDB = await db.getImageData()
    if(!localDB){
        logger.fatal(`${logName} [${cycle}] Canceled manager cycle early due to local database failing to load (get json)`)
        return
    }

    // update database for when a data-file is no longer in the data directory or if a new data-file is added to the data directory
    try{
        for(let i = 0; i < 2; i++){
            let currentDataFiles = fs.readdirSync(config.dataDirPath).filter(index => imgFormats.includes(`.${String(index).split(".").at(-1)}`)).sort()
            let dbDataFiles = localDB.map((obj)=>{ return String(obj.filepath).split("/").at(-1) }).sort()

            if(JSON.stringify(currentDataFiles) === JSON.stringify(dbDataFiles)){
                break
            }

            if (currentDataFiles.length > dbDataFiles.length) {
                logger.info(`${logName} [${cycle}] There are ${currentDataFiles.length} physcial files but the db has ${dbDataFiles.length} file entries. Due to this, addAllToDB() was ran`)
                await tools.addAllToDB()
            } else {
                logger.info(`${logName} [${cycle}] There are ${currentDataFiles.length} physcial files but the db has ${dbDataFiles.length} file entries. Due to this, cleanDB() was ran`)
                await tools.cleanDB()
            }

            localDB = await db.getImageData()
            if(!localDB){
                logger.fatal(`${logName} [${cycle}] (2nd call) Canceled manager cycle early due to local database failing to load (get json)`)
                return
            }else{
                logger.info(`${logName} [${cycle}] DB was updated due to physical and saved db entries not aligning`)
            }
        }
    }catch(err){
        logger.fatal(`${logName} [${cycle}] Unexpected error occurred well checking/comparing physic data with database entries: ${err}`)
    }

    // do not processed if all images are labeled (completed)
    const localCompeted = localDB.filter(obj => obj.status === "completed")
    if(localCompeted.length === localDB.length){
        logger.info(`${logName} [${cycle}] Manager stopped because all the images are labeled`)
        return
    }

    let scDB = await tools.scGetAllData()
    if(!scDB.complete){
        logger.fatal(`${logName} [${cycle}] Failed to load smart contract data so manager had to end early this cycle: ${JSON.stringify(scDB)}`)
        return
    }

    const nsTimeLimit = await getTimeLimitNS()
    if(typeof(nsTimeLimit) !== 'number'){
        logger.fatal(`${logName} [${cycle}] Failed to load nsTimeLimit variable from smart contract data so manager had to end early this cycle: ${nsTimeLimit}`)
        return
    }

    // recall any tasks that are taking too long to complete
    let changedJobs = false
    try{
        let changedJobs = false
        const nsCurrentEpoch = await tools.nsCurrentEpoch()
        const notAvailable = scDB.types.in_progress.concat(scDB.types.completed)
        for(let i = 0; i < notAvailable.length; i++) {
            let job = notAvailable[i]
            let lateJobs = job.tasks.filter(task => (!task.time_submitted && Math.abs(task.time_assigned - nsCurrentEpoch) >= nsTimeLimit))
            if(lateJobs.length > 0){
                for(let j = 0; j < lateJobs.length; j++){
                    let element = lateJobs[j]
                    let id = job.id
                    let user = element.assigned_to
                    if(id && user){
                        let scCall = await smartContract.recallTask(config.smartContract.scAccount, id, user)
                        if(scCall.status === 0){
                            logger.info(`${logName} [${cycle}] Removed user ${user} from job ${id} because the job's time out value is ${nsTimeLimit} ns but the job was assigned on epoch ${lateJobs[j].time_assigned} ns and it's currently epoch ${nsCurrentEpoch} ns`)
                            changedJobs = true
                        } else {
                            logger.fatal(`${logName} [${cycle}] FAILED to remove user ${user} from job ${id} because the job's time out value is ${nsTimeLimit} ns but the job was assigned on epoch ${lateJobs[j].time_assigned} ns and it's currently epoch ${nsCurrentEpoch} ns. Error output: ${JSON.stringify(scCall)}`)
                        }
                    } else {
                        logger.error(`${logName} [${cycle}] Failed to recall task(s) taking too long to complete: ${id}, ${user}, ${JSON.stringify(lateJobs)}`)
                    }
                }
            }
        }
    } catch(err) {
        changedJobs = true
        logger.fatal(`${logName} [${cycle}] Unexpected error occurred well trying to recall any tasks that are taking too long to complete: ${err}`)
    }

    if(changedJobs){
        scDB = await tools.scGetAllData()
        if(!scDB.complete){
            logger.fatal(`${logName} [${cycle}] Failed to load smart contract data so manager had to end early this cycle: ${JSON.stringify(scDB)}`)
            return
        }
    }

    // Checking if any data in the local database do not align with the current data in the smart contract's database (json)
    try {
        const scCurrentJobIDS = scDB.all.map((obj)=>{ return obj.id })
        const localCurrentJobs = localDB.filter(obj => scCurrentJobIDS.indexOf(obj.id) > -1)
        const invalidStatus = localCurrentJobs.filter(obj => obj.status === "waiting")
        for(let i = 0; i < invalidStatus.length; i++){
            let dbEntry = invalidStatus[i]
            let scEntry = scDB.all.filter(obj => obj.id === dbEntry.id)[0]
            dbEntry.status = "pending"
            dbEntry.cost = parseFloat(utils.format.formatNearAmount(scEntry.reward))
            let dbEdit = await db.overriseImageData({id: dbEntry.id}, dbEntry)
            if(dbEdit !== 0){
                logger.fatal(`${logName} [${cycle}] Failed to update/overwrite db with new entry: ${JSON.stringify(dbEntry)}. Error code from db.js: ${JSON.stringify(dbEdit)}`)
            } else {
                logger.info(`${logName} [${cycle}] Successfully updated/overwrote db with new entry: ${JSON.stringify(dbEntry)}. Output from db.js: ${JSON.stringify(dbEdit)}`)
            }
        }
    } catch(err) {
        logger.fatal(`${logName} [${cycle}] Unexpected error occurred well trying to check if any data in the local database do not align with the current data in the smart contract's database (json): ${err}`)
    }

    localDB = await db.getImageData()
    if(!localDB){
        logger.fatal(`${logName} [${cycle}] (3rd call) Canceled manager cycle early due to local database failing to load (get json)`)
        return
    }

    // update database with completed jobs (this is very valueable)
    let dbSavedAllCompleted = true
    try {
        const scCompletedJobs = scDB.types.completed
        for(let i = 0; i < scCompletedJobs.length; i++){
            let scEntry = scCompletedJobs[i]
            let dbEntry = localDB.filter(obj => obj.id === scEntry.id)
            dbEntry = dbEntry[0]
            dbEntry.status = "completed"
            dbEntry.cost = parseFloat(utils.format.formatNearAmount(scEntry.reward))
            dbEntry.finalLabels = scEntry.tasks.filter(obj=>obj.assigned_to === scEntry.final_ranking[0])[0].data
            dbEntry.completed = moment().valueOf()
            dbEntry.scDataRaw = scEntry
            dbEntry.usedSignatures = [] // clear used signatures because this image will no longer be hosted in the API
            let dbEdit = await db.overriseImageData({id: dbEntry.id}, dbEntry)
            if(dbEdit !== 0){
                logger.fatal(`${logName} [${cycle}] Failed to update/overwrite completed entry to the db: ${JSON.stringify(dbEntry)}. Error code from db.js: ${JSON.stringify(dbEdit)}. Smart contract db: ${JSON.stringify(scEntry)}`)
                dbSavedAllCompleted = false
            } else {
                logger.info(`${logName} [${cycle}] Successfully updated/overwrote db with completed entry: ${JSON.stringify(dbEntry)}. Output from db.js: ${JSON.stringify(dbEdit)}. Smart contract db: ${JSON.stringify(scEntry)}`)
            }
        }
    } catch(err) {
        dbSavedAllCompleted = false
        logger.fatal(`${logName} [${cycle}] Unexpected error occurred well trying to update the local database with completed jobs from the smart contract: ${err}`)
    }

    try {
        if(dbSavedAllCompleted){
            let scCall = await smartContract.clearCompleted(config.smartContract.scAccount)
            if(scCall.status === 0){
                logger.info(`${logName} [${cycle}] Cleared all completed jobs: ${JSON.stringify(scDB.types.completed)}. Smart Contract output data: ${JSON.stringify(scCall)}`)
                scDB = await tools.scGetAllData()
                if(!scDB.complete){
                    logger.fatal(`${logName} [${cycle}] Failed to load smart contract data so manager had to end early this cycle: ${JSON.stringify(scDB)}`)
                    return
                }
            } else {
                logger.fatal(`${logName} [${cycle}] Failed to clear all completed jobs. Smart Contract output data: ${JSON.stringify(scCall)}`)
            }
        }
    } catch(err) {
        logger.fatal(`${logName} [${cycle}] Unexpected error occurred well trying to clear all complated jobs from the smart contract: ${err}`)
    }

    // add new jobs if the smart contract is not "full"
    try {
        if(scDB.all.length < config.smartContract.maxJobsPerRound){
            let jobQueue = await db.getImageData()
            if(jobQueue){
                jobQueue = jobQueue.filter(obj => obj.status === "waiting")
                if(jobQueue.length > 0 && scDB.all.length < config.smartContract.maxJobsPerRound){
                    jobQueue = jobQueue.map((obj)=>{ return {id: obj.id, label_keys: config.whatToLabel } })
                    let numOfNewJobs = Math.abs(config.smartContract.maxJobsPerRound - scDB.all.length)
                    if(numOfNewJobs > jobQueue.length){
                        numOfNewJobs = jobQueue.length
                    }
    
                    const dbSegment = jobQueue.slice(0, numOfNewJobs)
    
                    const avgNearPayment = config.smartContract.paymentPerImageNEAR
                    const totalPayment = avgNearPayment * dbSegment.length
    
                    const addFundsOutput = await smartContract.addFunds(config.smartContract.mainAccount, config.smartContract.scAccount, totalPayment)
                    if(addFundsOutput.status === 0){
                        const addJobsOutput = await smartContract.addJobs(config.smartContract.scAccount, dbSegment)
                        if(addJobsOutput.status !== 0){
                            logger.fatal(`${logName} [${cycle}] An issue occurred well trying to add jobs ${JSON.stringify(dbSegment)} to smart contract ${config.smartContract.scAccount}: ${JSON.stringify(addJobsOutput)}`)
                        }
                    } else {
                        logger.fatal(`${logName} [${cycle}] An issue occurred well trying to add ${totalPayment} NEAR of funds from account ${config.smartContract.mainAccount} to ${config.smartContract.scAccount}: ${JSON.stringify(addFundsOutput)}`)
                    }
                }
            }
        } else {
            logger.info(`${logName} [${cycle}] The smart contract's db (json) is full so no new jobs will be added`)
        }
    } catch(err) {
        logger.fatal(`${logName} [${cycle}] An unexpected error occurred well trying to add new job(s): ${err}`)
    }

    return
}

async function managerLoop(){
    let counter = 0
    while(true){
        await manager(counter)
        await util.sleep(config.managerPauseTimeSeconds*1000)
        counter += 1
    }
}

// // MAIN FUNCTION CALL(S)
managerLoop().then()

'''
'''--- middlewares/cli/backupDB.js ---
const moment = require("moment")
const fs = require("fs")
const db = require("../database/db")
const path = require('path');
const logger =require("../../utils/logger")

const nameForLog = `[cli_backupDB]`

async function dbBackupToFile(){
    let args = (process.argv)

    if(args.length <= 2){
        logger.error(`${nameForLog} Failed to backup local db due to directory not being provided in argument(s): ${JSON.stringify(args)}`)
        return 1
    }

    args = args.splice(2, process.argv.length)
    const fileOutDirPath = args[0]
    
    if(!fs.existsSync(fileOutDirPath)){
        logger.error(`${nameForLog} Failed to backup local db due to directory ${fileOutDirPath} not existing`)
        return 1
    }

    const database = await db.getImageData()
    
    const data = JSON.stringify(database, null, indent=4)
    const finalFilePath = path.join(fileOutDirPath, `dbBackup_${moment().valueOf()}.json`);
    
    fs.writeFileSync(finalFilePath, data)

    logger.info(`${nameForLog} Created db backup file (json) to ${finalFilePath}`)

    return 0
}

async function dbPrintAll(){
    try {
        const database = await db.getImageData()
        const data = JSON.stringify(database, null, indent=4)
        console.log(data)
    } catch(e) {
        console.log(`error : ${e}`)
    }

    return
}

module.exports = {
    dbBackupToFile,
    dbPrintAll
}

'''
'''--- middlewares/cli/currentState.js ---
const moment = require("moment")
const util = require("../../utils/util")
const db = require("../database/db")
const logger = require("../../utils/logger")
const manager = require("../db_manager/tools")
const smartContract = require("../smart_contract/nearApi")
const config = require("../../config/config.json")
const nearAPI = require("near-api-js");

const nameForLog = `[currentState]`

async function percentStr(amount, total, places=2){
    const output = parseFloat((amount / total)*100).toFixed(places)
    return `${output}%`
}

async function displayState(){
    try {
        const statusCounter = { "waiting": 0, "pending": 0, "completed": 0 }

        let details = {}
    
        let totalNearSpent = 0
        let totalCost = 0
        let completedTime = []
    
        let database = undefined
        let dbSize = undefined
        try {
            database = await db.getImageData()
            dbSize = database.length
            for(let i = 0; i < database.length; i++){
                let entry = database[i]
                
                if(entry.status in statusCounter){
                    statusCounter[entry.status] += 1
                }
        
                if(entry.status.toLowerCase() === "completed"){
                    totalNearSpent += entry.cost
                    if(entry.uploaded >= 0 && entry.completed >= 0){
                        completedTime.push(entry.completed-entry.uploaded) // millisecond
                    }
                }
        
                totalCost += entry.cost
            }
        
            details["dbSize"] = dbSize
            details["state"] = statusCounter
            details["totalNearSpent"] = totalNearSpent
            details["totalCost"] = totalCost
        } catch(e) {
            logger.error(`${nameForLog} The following unexpected error occurred (db set to undefined): ${e}`)
            database = undefined
        }
    
        let avgCompletedTime = -1
        if(database && completedTime.length > 0){
            if(completedTime.length > 0){
                details["avgCompleteTime"] = completedTime.reduce((a, b) => a + b) / completedTime.length
                details["avgCompleteTime"] = `${details["avgCompleteTime"]} ms`
            }
    
            details["avgCompleteTime"] = avgCompletedTime
        }
    
        const priceOfNear = String(await util.nearCurrentPriceUSD())
        details["currentNearUSD"] = priceOfNear
    
        console.log()
    
        let fullyPrinted = true
    
        if(priceOfNear){
            console.log(`⚪ NEAR Value (USD):`)
            console.log(`   Ⓝ  1 = $${priceOfNear}`)
        } else {
            fullyPrinted = false
        }
    
        if(database){
            console.log(`💾 Number of Data(s): ${dbSize}`)
            const sKeys = Object.keys(statusCounter)
            for(let i = 0; i < sKeys.length; i++){
                console.log(`   👉 ${sKeys[i]} jobs: ${statusCounter[sKeys[i]]} (${await percentStr(statusCounter[sKeys[i]], dbSize, 2)})`)
            }
            console.log(`💸 Total NEAR Paid: Ⓝ  ${totalNearSpent}`)
            console.log(`💰 Total Project NEAR Cost (estimated): Ⓝ  ${totalCost}`)
        } else {
            fullyPrinted = false
        }
    
        console.log(`⌛ Average Complete Time: ${avgCompletedTime} millisecond(s)`)

        const scState = await manager.scGetAllData()
        if(scState.complete){
            console.log("📝 Smart Contract Bassic State:")
            console.log("   👉 Current Jobs & Their States: ")
            console.log(`       😊 Completed Jobs: ${scState.types.completed.length}`)
            console.log(`       😐 In_Progress Jobs: ${scState.types.in_progress.length}`)
            console.log(`       😔 Available Jobs: ${scState.types.available.length}`)
            console.log(`       🟡 Total Jobs: ${scState.all.length}`)

            const currentSetURL = await smartContract.getURL(config.smartContract.scAccount)
            const currentRequestFee = await smartContract.viewFunction(config.smartContract.mainAccount, config.smartContract.scAccount, "get_request_fee", {})

            if(currentRequestFee || currentSetURL){
                console.log(`   👉 Other Variables:`)
            }

            if(currentSetURL){
                console.log(`       🌐 Data Web API's URL: ${currentSetURL}`)
            } else {
                fullyPrinted = false
                logger.error(`${nameForLog} Failed to get current set URL from smart contract: ${JSON.stringify(currentSetURL)}`)
            }

            if(currentRequestFee){
                console.log(`       🎫 Current Request Fee: Ⓝ ${nearAPI.utils.format.formatNearAmount(currentRequestFee)}`)
            } else {
                fullyPrinted = false
                logger.error(`${nameForLog} Failed to get current request fee from smart contract: ${JSON.stringify(currentRequestFee)}`)
            }

        }else{
            fullyPrinted = false
        }

        if(!fullyPrinted){
            console.log("🛑 ERROR OCCURRED SO KEY INFORMATION(S) ARE MISSING; CHECK THE LOG(S)!")
            logger.error(`${nameForLog} Failed to fully display all the current information because some errors occurred`)
        }
    
        console.log()
    
        return details
    } catch(e) {
        logger.fatal(`${nameForLog} The following completely unexpected error occurred: ${e}`)
    }

    return undefined
}

// MAIN FUNCTION CALLS
displayState().then()

'''
'''--- middlewares/database/db.js ---
const postgusDB = require("./postgusDB")
const moment = require("moment")
const util = require("../../utils/util")
const logger = require("../../utils/logger")
const fs = require('fs')

const config = require("../../config/config.json")
const dbEntrySchema = require("../../models/imgMetaData").imgMetaData

/*
┌─────────────┬────────────────────────────────────────────────────────────────────────────────────────────┐
│ STATUS CODE │ DEFINTIONS                                                                                 │
├─────────────┼────────────────────────────────────────────────────────────────────────────────────────────┤
│      1      │ db modification was successful because the entry(s) were already added/deleted before hand │
│      0      │ successfully modified the db as expected. no issues                                        │
│     -1      │ failed to modify db due to an issues with PostGus                                          │
│     -2      │ failed to modify db because the inputted param(s) were not formated correctly              │
│     -3      │ failed to modify db because the inputted file path does not exist                          │
└─────────────┴────────────────────────────────────────────────────────────────────────────────────────────┘
*/

async function addImageData(filepath){
    filepath = String(filepath)

    if (fs.existsSync(String(filepath))) {

        const fileDbList = await postgusDB.get( { filepath: filepath } )

        if (fileDbList.result && fileDbList.result.length === 0) {
            
            const entry = {
                filepath: filepath,
                status: "waiting",
                cost: 0,
                uploaded: moment().valueOf(),
                completed: -1,
                timeUnits: "ms",
                finalLabels: {},
                scDataRaw: {},
                usedSignatures: []
            }
    
            const validFormat = util.schemaValidate(dbEntrySchema, entry)
            if (validFormat) {
                const dbOutput = await postgusDB.add(entry)
                if(dbOutput.status === 0){
                    logger.info(`Successfully added db entry for file ${filepath}: ${JSON.stringify(dbOutput)}`)
                    return 0
                }
    
                logger.info(`Failed to add db entry for file ${filepath}: ${JSON.stringify(dbOutput)}`)
                return -1
            }
    
            logger.error(`Failed to add file ${filepath} to db because the file's entry (json) was not formated correctly`)
            return -2        
        }

        logger.error(`Failed to add file ${filepath} to db because the image already has an entry for itself in the db`)
        return 1
    }

    logger.error(`Failed to add file ${filepath} to db because the file does not exist`)
    return -3
}

async function deleteImageData(filepath){
    filepath = String(filepath)

    const fileDbList = await postgusDB.get( { filepath: filepath } )

    if (fileDbList.result && fileDbList.result.length > 0) {

        const dbOutput = await postgusDB.remove({ filepath: filepath })
        if(dbOutput.status === 0){
            logger.info(`Successfully deleted db entry for file ${filepath}. Response: ${JSON.stringify(dbOutput)}`)
            return 0
        }

        logger.info(`Failed to delete db entry for file ${filepath}. Response: ${JSON.stringify(dbOutput)}`)
        return -1
    }

    logger.warn(`Did not remove file ${filepath} data from db because that file's db entry already does not exist`)
    return 1
}

async function getImageData(details=undefined){
    if (details === undefined) {
        const response = await postgusDB.get()
        if (response.status === 0) {
            return response.result
        }
    }
    
    if (postgusDB.validTargetType(details)) {
        const response = await postgusDB.get(details)
        if (response.status === 0) {
            return response.result
        }
    }

    return undefined
}

async function editImageData(filepath, keyValue, targets){
    filepath = String(filepath)

    const validKeyValue = await postgusDB.validTargetType(keyValue)
    const validTarget = await postgusDB.validTargetType(targets)
    if (Object.keys(keyValue).length === 1 && validKeyValue && validTarget) {
        
        const fileDbList = await postgusDB.get( { filepath: filepath } ) 
        if (fileDbList.result && fileDbList.result.length > 0) {
            
            let key, value
            for(let k in keyValue){
                key = k
                value = keyValue[k]
                break
            }

            const dbOutput = await postgusDB.edit(key, value, targets)
            if(dbOutput.status === 0){
                logger.info(`Successfully edited db entry for file ${filepath} with keyValue = ${JSON.stringify(keyValue)} and targets = ${JSON.stringify(targets)}. Response: ${JSON.stringify(dbOutput)}`)
                return 0
            }

            logger.info(`Failed to edit db entry for file ${filepath}. Response: ${JSON.stringify(dbOutput)}`)
            return -1
        }

        logger.error(`Failed to edit image db entry for ${filepath} because the entry does not exist in the db`)
    }

    logger.error(`Failed to edit image db entry for ${filepath} because params keyValue and/or targets are formated incorrectly`)
    return -2
}

async function overriseImageData(target, newValue){
    const params = { "target": target, "newValue": newValue }

    const validNewValue = await util.schemaValidate(dbEntrySchema, newValue)

    const validTarget = await util.schemaValidate({ type: "object" }, target)

    if(validNewValue && validTarget){
        const currentEntries = await postgusDB.get(target)
        
        if(currentEntries.status === 0 && currentEntries.result && currentEntries.result.length === 1){
            const dbOutput = await postgusDB.override(target, newValue)
            
            if(dbOutput.status === 0){
                logger.info(`Successfully overided db entry ${JSON.stringify(params)}. Response: ${JSON.stringify(dbOutput)}`)
                return 0
            }
            
            logger.info(`Failed to overided db entry ${JSON.stringify(params)}. Response: ${JSON.stringify(dbOutput)}`)
            return -1
        }

        logger.error(`Failed to overide image db entry for ${JSON.stringify(params)} because the entry does not exist in the db or there is more then one copy in the db: ${JSON.stringify(currentEntries)}`)
    }

    logger.error(`Failed to overide image db entry for ${JSON.stringify(params)} because params keyValue and/or targets are formated incorrectly`)
    return -2
}

module.exports = {
    addImageData,
    deleteImageData,
    getImageData,
    editImageData,
    overriseImageData
}

'''
'''--- middlewares/database/postgusDB.js ---
const { Pool, Client } = require('pg')
const { v4: uuidv4 } = require('uuid');

const config = require("../../config/config.json")

async function validTargetType(value){
    return !(typeof(value) !== 'object' || Array.isArray(value) || value === null)
}

async function jsonToAndStatement(targets){
    let reTargets = ""
    let counter = 0
    for ( let key of Object.keys(targets) ) {
        reTargets = reTargets + `data->>'${key}' = '${targets[key]}'`
        if ( counter !== Object.keys(targets).length - 1 ){
            reTargets += " AND "
        }
        counter += 1
    }

    return reTargets
}

async function add(data){
    const output = { "status": 0, "errors": [], "result": [] }
    
    if ( !validTargetType(data) || Object.keys(data).length === 0 ) {
        output["status"] = -1
        output["errors"].push(`Inputed data is NOT a valid object/json: ${JSON.stringify(data)}`)
        return output
    }
    
    try {
        const pool = new Pool(config.postgres.connection)
        data["id"] = String(uuidv4())
        const result = await pool.query(
            "INSERT INTO images(data) VALUES($1)",
            [JSON.stringify(data)]
        )
        await pool.end()
        output["result"] = result
    } catch(e) {
        output["status"] = -1
        output["errors"].push(`${e}`)
    }

    return output
}

async function get(targets=undefined){
    const output = { "status": 0, "errors": [], "result": [] }
    
    let sqlCmd = "SELECT * FROM images"

    if ( targets !== undefined ) {
        if ( !validTargetType(targets) || Object.keys(targets).length === 0 ) {
            output["status"] = -1
            output["errors"].push(`Inputed data is NOT a valid object/json: ${JSON.stringify(targets)}`)
            return output
        }
    
        let reTargets = await jsonToAndStatement(targets)
        sqlCmd = `SELECT * FROM images WHERE ${reTargets}`
    }

    try {
        const pool = new Pool(config.postgres.connection)
        const data = await pool.query(sqlCmd)
        await pool.end()
        data["rows"].forEach(function (value, index) {
            output["result"].push(value.data)
        })
    } catch(e) {
        output["status"] = -1
        output["errors"].push(`${e}`)
    }

    return output
}

async function remove(targets=undefined){
    const output = { "status": 0, "errors": [], "result": [] }
    
    if ( !validTargetType(targets) || Object.keys(targets).length === 0 ) {
        output["status"] = -1
        output["errors"].push(`Inputed data is NOT a valid object/json: ${JSON.stringify(targets)}`)
        return output
    }

    const reTargets = await jsonToAndStatement(targets)
    const sqlCmd = `DELETE FROM images WHERE ${reTargets}`

    try {
        const pool = new Pool(config.postgres.connection)
        const result = await pool.query(sqlCmd)
        await pool.end()
        output["result"] = result
    } catch(e) {
        output["status"] = -1
        output["errors"].push(`${e}`)
    }

    return output
}

async function edit(key, newValue, targets){
    const output = { "status": 0, "errors": [], "result": [] }
    
    if ( !validTargetType(targets) || Object.keys(targets).length === 0 ) {
        output["status"] = -1
        output["errors"].push(`Inputed data is NOT a valid object/json: ${JSON.stringify(targets)}`)
        return output
    }

    const strKey = String(key)
    const strNewValue = JSON.stringify(newValue)
    const reTargets = await jsonToAndStatement(targets)

    const sqlCmd = `UPDATE images SET data = JSONB_SET(data, '{${strKey}}', '${strNewValue}') WHERE ${reTargets}`

    try {
        const pool = new Pool(config.postgres.connection)
        const result = await pool.query(sqlCmd)
        await pool.end()
        output["result"] = result
    } catch(e) {
        output["status"] = -1
        output["errors"].push(`${e}`)
    }

    return output
}

async function override(targets, newValue){
    const output = { "status": 0, "errors": [], "result": [] }
    
    const reTargets = await jsonToAndStatement(targets)

    const sqlCmd = `UPDATE images SET data = '${JSON.stringify(newValue)}' WHERE ${reTargets}`

    try {
        const pool = new Pool(config.postgres.connection)
        const result = await pool.query(sqlCmd)
        await pool.end()
        output["result"] = result
    } catch(e) {
        output["status"] = -1
        output["errors"].push(`${e}`)
    }

    return output
}

module.exports = {
    get,
    add,
    edit,
    remove,
    validTargetType,
    override
}

'''
'''--- middlewares/database/tests/db_test_todo.js ---
// // TODO:
//  1. Find a method/framework for unit testing postgus databases without using the "real" database.
//  2. Implment the unit test. Some quick, not working, examples are provided below

// // NOT-WORKING-EXAMPLES:
// addImageData(
//     "/Users/mehmet/Desktop/NEAR-DEV/ln-researcher/assets/data/img_1134.jpg", 
//     2.3
// ).then(result=>console.log(JSON.stringify(result, null, indent=4)))

// postgusDB.get().then(result=>console.log(JSON.stringify(result, null, indent=4)))

// deleteImageData(
//     "/Users/mehmet/Desktop/NEAR-DEV/ln-researcher/assets/data/img_1134.jpg"
// ).then(result=>console.log(JSON.stringify(result, null, indent=4)))

// getImageData().then(result=>console.log(JSON.stringify(result, null, indent=4)))

'''
'''--- middlewares/db_manager/tools.js ---
const path = require('path')
const fs = require('fs')
const db = require("../database/db")
const logger = require("../../utils/logger")
const moment = require("moment")
const request = require("../../utils/request")
const smartContract = require("../smart_contract/nearApi")

const testData = require("../smart_contract/test/testSmartContractTestData.json").output

const config = require("../../config/config.json")
const imgFormats = require("../../config/fileFormats.json").image
const dirPath = config.dataDirPath

async function getFilesInDir(dirPath){
    try {
        return await fs.promises.readdir(dirPath)
    } catch (e) {
        logger.error(`Failed to load data on directory ${dirPath} due to the following exception: ${JSON.stringify(e)}`)
        return undefined
    }
}

async function getImgsInDir(dirPath){
    const allFiles = await getFilesInDir(dirPath)
    if(allFiles){
        let filtered = []
        allFiles.forEach(function(element){
            let tmp = element.split(".")
            if(tmp.length > 1 && imgFormats.includes(`.${tmp[tmp.length-1]}`)){
                filtered.push(element)
            }
        })
        return filtered
    }
    return undefined
}

async function addAllToDB(){
    const files = await getImgsInDir(dirPath)

    const stats = {
        ran: false,
        fails: [],
        new: [],
        exists: [],
        runtime: {
            time: 0,
            units: "seconds"
        },
        dir: dirPath
    }

    if(files){
        stats.total = files.length
        stats.ran = true

        const startTime = moment().valueOf()

        for(let i = 0; i < files.length; i++){
            const fullPath = path.join(dirPath, files[i])
            let response = await db.addImageData(fullPath)
            if (response === 0) {
                logger.info(`Successfully added new file ${fullPath} as an entry to the db`)
                stats.new.push(fullPath)
            } else if (response === 1){
                logger.info(`File ${fullPath} already exists in the db so a new instance of it was not added`)
                stats.exists.push(fullPath)
            } else {
                logger.warning(`Failed to add file the following file to the database: ${fullPath}`)
                stats.fails.push(fullPath)
            }
        }

        const processTime = (moment().valueOf() - startTime) / 1000 // seconds

        stats.runtime.time = processTime

        logger.info(`For dir ${dirPath}, ${files.length} files were scanned. ${stats.new.length} new files were added, ${stats.exists.length} files already existed in the db, & ${stats.fails.length} files failed to get added. Full stats: ${JSON.stringify(stats)}`)
    
    } else {
        logger.fatal(`Failed to run addAllToDB() because no files were able to be loaded from dir: ${dirPath}`)
    }

    return stats
}

async function cleanDB(){
    const stats = {
        ran: false,
        removed: [],
        failed: [],
        avoided: [],
        runtime: {
            time: 0,
            units: "seconds"
        },
        dir: dirPath
    }

    const dbEntries = await db.getImageData()

    if(dbEntries){
        stats.ran = true

        const startTime = moment().valueOf()

        for(let i = 0; i < dbEntries.length; i++) {
            let entry = dbEntries[i]
            if (!fs.existsSync(entry.filepath)) {
    
                // do not update any database entries if that image is being worked on
                if(entry.status !== "pending" && entry.status !== "completed"){
                    let response = await db.deleteImageData(entry.filepath)
                    if (response === 0) {
                        logger.info(`Successfully removed file ${entry.filepath} from db because the file does not exist`)
                        stats.removed.push(entry.filepath)
                    } else if (response === 1){
                        logger.info(`File ${entry.filepath}, that does not exist, already does not exist in the db. So it was already deleted from the db`)
                        stats.removed.push(entry.filepath)
                    } else {
                        logger.error(`Failed to remove non-exisitng file from the database: ${entry.filepath}`)
                        stats.failed.push(entry.filepath)
                    }
                } else {
                    logger.fatal(`Failed to remove non-existing file ${entry.filepath} because it is currently in a "pendng" state.`)
                    stats.avoided.push(entry.filepath)
                }
    
            }
        }
    
        const processTime = (moment().valueOf() - startTime) / 1000 // seconds
    
        stats.runtime.time = processTime 

        logger.info(`For dir ${dirPath} ${stats.removed.length} files that do not exist were removed from the db. ${stats.avoided.length} files that do not exist were avoid, due to pending state. And ${stats.failed.length} files that do not exist failed to get deleted from the db. These are the failed files: ${JSON.stringify(stats.failed)}`)

    } else {
        logger.fatal(`Failed to run cleanDB() because db.getImageData() failed to return anything from the db`)
    }

    return stats
}

async function apiLocalRunning(){
    const localhostURL = `http://localhost:${process.env.PORT}/health`
    const response = await request.get(localhostURL)
    const output = { url: localhostURL, response: response, up: true }
    if(response.status !== 0){
        output.up = false
    }
    return output
}

async function scGetAllData(){
    const scAccount = config.smartContract.scAccount
    const allData = await smartContract.getDB(scAccount)
    const allAvailable = await smartContract.getStatus(scAccount, "available")
    const allInProgress = await smartContract.getStatus(scAccount, "in_progress")
    const allCompleted = await smartContract.getStatus(scAccount, "completed")

    let complete = false
    if(allData && allAvailable && allInProgress && allCompleted){
        complete = true
    }

    return {
        complete: complete,
        all: allData,
        types: {
            available: allAvailable,
            in_progress: allInProgress,
            completed: allCompleted
        }
    }
}

async function nsCurrentEpoch(){
    return moment().valueOf()*Math.pow(10,6) // this is not perfect but it works
}

async function scTestData(){
    const output = {
        complete: true,
        all: testData["available"].concat(testData["in_progress"], testData["completed"]),
        types: {
            available: testData["available"],
            in_progress: testData["in_progress"],
            completed: testData["completed"]
        }
    }
    return output
}

module.exports = {
    getFilesInDir,
    getImgsInDir,
    addAllToDB,
    cleanDB,
    apiLocalRunning,
    nsCurrentEpoch,
    scGetAllData,
    scTestData
}

'''
'''--- middlewares/smart_contract/contracts/README.md ---
# Labeler NearBy - Researcher Smart Contract

# Contract Interface
All contract functionality, including view and change methods, is defined in `contract/src/contract.ts`

# Build Process
To build the smart contract, run the following command in the `contract` directory:

`npm run build`

# Deployment
To deploy the contract, run the following command in the `contract` directory:

`npm run deploy`

# Contract Interaction
Once the smart contract has been built and deployed, methods can be called using either of the two methods described below.

## Using the NEAR command line interface

The NEAR command line interface can be installed using npm.

`npm install --global near-cli`

To call smart contract methods using the NEAR cli, you must first log into an existing NEAR account. This can be done by running the following command:

`near login`

Smart contract methods can then be called using the `view` and `call` functionalities provided by the NEAR cli. Note: args is a stringified JSON object.

### View Method
`near view <contract-account-name> <method-name> <args>`

### Change Method
`near call <contract-account-name> <method-name> <args> --accountId <calling-account-name>`

## Using the NEAR JavaScript API

`contract/scripts/manage-sc.js` demonstrates the functionality described in this section.

To call contract functions using the NEAR JavaScript API, you must first set up a connection to the NEAR network.

```javascript
import NearAPI, { Near } from "near-api-js";
const { connect, KeyPair, keyStores, utils, providers } = NearAPI;

const keyStore = new keyStores.UnencryptedFileSystemKeyStore(
  path.join(os.homedir(), ".near-credentials")
);

const connection_config = {
  networkId: "testnet",
  keyStore: keyStore,
  nodeUrl: "https://rpc.testnet.near.org",
  walletUrl: "https://wallet.testnet.near.org",
  helperUrl: "https://helper.testnet.near.org",
  explorerUrl: "https://explorer.testnet.near.org",
};

const near_connection = await connect(connection_config);
```

You will then need to connect to an existing NEAR account.

```javascript
  const account = await connect("<account-id>")
```

Contract methods can then be called using the `viewFunction()` and `functionCall()` methods of the connected account object. Note: args is a json object containing method arguments.

### View Method

```javascript
const result = await account.viewFunction({
  contractId: "<contract-account-name>",
  methodName: "<method-name>",
  args: {},
});
```

### Change Method
```javascript
const response = await account.functionCall({
  contractId: "<contract-account-name>",
  methodName: "<method-name>",
  args: {},
});
const result = providers.getTransactionLastResult(response);
```

'''
'''--- middlewares/smart_contract/contracts/babel.config.json ---
{
  "plugins": [
    "near-sdk-js/lib/build-tools/near-bindgen-exporter",
    ["@babel/plugin-proposal-decorators", {"version": "legacy"}]
  ],
  "presets": ["@babel/preset-typescript"]
}
'''
'''--- middlewares/smart_contract/contracts/package-lock.json ---
{
  "name": "hello_near",
  "version": "1.0.0",
  "lockfileVersion": 2,
  "requires": true,
  "packages": {
    "": {
      "name": "hello_near",
      "version": "1.0.0",
      "license": "(MIT AND Apache-2.0)",
      "dependencies": {
        "inquirer": "^9.1.4",
        "near-api-js": "^1.1.0",
        "near-cli": "^3.4.0",
        "near-sdk-js": "0.5.0"
      },
      "devDependencies": {
        "typescript": "^4.7.4"
      }
    },
    "node_modules/@ampproject/remapping": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.2.0.tgz",
      "integrity": "sha512-qRmjj8nj9qmLTQXXmaR1cck3UXSRMPrbsLJAasZpF+t3riI71BXed5ebIOYwQntykeZuhjsdweEc9BxH5Jc26w==",
      "dependencies": {
        "@jridgewell/gen-mapping": "^0.1.0",
        "@jridgewell/trace-mapping": "^0.3.9"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@babel/code-frame": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.18.6.tgz",
      "integrity": "sha512-TDCmlK5eOvH+eH7cdAFlNXeVJqWIQ7gW9tY1GJIpUtFb6CmjVyq2VM3u71bOyR8CRihcCgMUYoDNyLXao3+70Q==",
      "dependencies": {
        "@babel/highlight": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/compat-data": {
      "version": "7.20.0",
      "resolved": "https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.20.0.tgz",
      "integrity": "sha512-Gt9jszFJYq7qzXVK4slhc6NzJXnOVmRECWcVjF/T23rNXD9NtWQ0W3qxdg+p9wWIB+VQw3GYV/U2Ha9bRTfs4w==",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/core": {
      "version": "7.19.6",
      "resolved": "https://registry.npmjs.org/@babel/core/-/core-7.19.6.tgz",
      "integrity": "sha512-D2Ue4KHpc6Ys2+AxpIx1BZ8+UegLLLE2p3KJEuJRKmokHOtl49jQ5ny1773KsGLZs8MQvBidAF6yWUJxRqtKtg==",
      "dependencies": {
        "@ampproject/remapping": "^2.1.0",
        "@babel/code-frame": "^7.18.6",
        "@babel/generator": "^7.19.6",
        "@babel/helper-compilation-targets": "^7.19.3",
        "@babel/helper-module-transforms": "^7.19.6",
        "@babel/helpers": "^7.19.4",
        "@babel/parser": "^7.19.6",
        "@babel/template": "^7.18.10",
        "@babel/traverse": "^7.19.6",
        "@babel/types": "^7.19.4",
        "convert-source-map": "^1.7.0",
        "debug": "^4.1.0",
        "gensync": "^1.0.0-beta.2",
        "json5": "^2.2.1",
        "semver": "^6.3.0"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/babel"
      }
    },
    "node_modules/@babel/core/node_modules/semver": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
      "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/@babel/generator": {
      "version": "7.20.0",
      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.20.0.tgz",
      "integrity": "sha512-GUPcXxWibClgmYJuIwC2Bc2Lg+8b9VjaJ+HlNdACEVt+Wlr1eoU1OPZjZRm7Hzl0gaTsUZNQfeihvZJhG7oc3w==",
      "dependencies": {
        "@babel/types": "^7.20.0",
        "@jridgewell/gen-mapping": "^0.3.2",
        "jsesc": "^2.5.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/generator/node_modules/@jridgewell/gen-mapping": {
      "version": "0.3.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.2.tgz",
      "integrity": "sha512-mh65xKQAzI6iBcFzwv28KVWSmCkdRBWoOh+bYQGW3+6OZvbbN3TqMGo5hqYxQniRcH9F2VZIoJCm4pa3BPDK/A==",
      "dependencies": {
        "@jridgewell/set-array": "^1.0.1",
        "@jridgewell/sourcemap-codec": "^1.4.10",
        "@jridgewell/trace-mapping": "^0.3.9"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@babel/helper-annotate-as-pure": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.18.6.tgz",
      "integrity": "sha512-duORpUiYrEpzKIop6iNbjnwKLAKnJ47csTyRACyEmWj0QdUrm5aqNJGHSSEQSUAvNW0ojX0dOmK9dZduvkfeXA==",
      "dependencies": {
        "@babel/types": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-compilation-targets": {
      "version": "7.20.0",
      "resolved": "https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.20.0.tgz",
      "integrity": "sha512-0jp//vDGp9e8hZzBc6N/KwA5ZK3Wsm/pfm4CrY7vzegkVxc65SgSn6wYOnwHe9Js9HRQ1YTCKLGPzDtaS3RoLQ==",
      "dependencies": {
        "@babel/compat-data": "^7.20.0",
        "@babel/helper-validator-option": "^7.18.6",
        "browserslist": "^4.21.3",
        "semver": "^6.3.0"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-compilation-targets/node_modules/semver": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
      "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/@babel/helper-create-class-features-plugin": {
      "version": "7.19.0",
      "resolved": "https://registry.npmjs.org/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.19.0.tgz",
      "integrity": "sha512-NRz8DwF4jT3UfrmUoZjd0Uph9HQnP30t7Ash+weACcyNkiYTywpIjDBgReJMKgr+n86sn2nPVVmJ28Dm053Kqw==",
      "dependencies": {
        "@babel/helper-annotate-as-pure": "^7.18.6",
        "@babel/helper-environment-visitor": "^7.18.9",
        "@babel/helper-function-name": "^7.19.0",
        "@babel/helper-member-expression-to-functions": "^7.18.9",
        "@babel/helper-optimise-call-expression": "^7.18.6",
        "@babel/helper-replace-supers": "^7.18.9",
        "@babel/helper-split-export-declaration": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-environment-visitor": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-environment-visitor/-/helper-environment-visitor-7.18.9.tgz",
      "integrity": "sha512-3r/aACDJ3fhQ/EVgFy0hpj8oHyHpQc+LPtJoY9SzTThAsStm4Ptegq92vqKoE3vD706ZVFWITnMnxucw+S9Ipg==",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-function-name": {
      "version": "7.19.0",
      "resolved": "https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.19.0.tgz",
      "integrity": "sha512-WAwHBINyrpqywkUH0nTnNgI5ina5TFn85HKS0pbPDfxFfhyR/aNQEn4hGi1P1JyT//I0t4OgXUlofzWILRvS5w==",
      "dependencies": {
        "@babel/template": "^7.18.10",
        "@babel/types": "^7.19.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-hoist-variables": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-hoist-variables/-/helper-hoist-variables-7.18.6.tgz",
      "integrity": "sha512-UlJQPkFqFULIcyW5sbzgbkxn2FKRgwWiRexcuaR8RNJRy8+LLveqPjwZV/bwrLZCN0eUHD/x8D0heK1ozuoo6Q==",
      "dependencies": {
        "@babel/types": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-member-expression-to-functions": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.18.9.tgz",
      "integrity": "sha512-RxifAh2ZoVU67PyKIO4AMi1wTenGfMR/O/ae0CCRqwgBAt5v7xjdtRw7UoSbsreKrQn5t7r89eruK/9JjYHuDg==",
      "dependencies": {
        "@babel/types": "^7.18.9"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-module-imports": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.18.6.tgz",
      "integrity": "sha512-0NFvs3VkuSYbFi1x2Vd6tKrywq+z/cLeYC/RJNFrIX/30Bf5aiGYbtvGXolEktzJH8o5E5KJ3tT+nkxuuZFVlA==",
      "dependencies": {
        "@babel/types": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-module-transforms": {
      "version": "7.19.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.19.6.tgz",
      "integrity": "sha512-fCmcfQo/KYr/VXXDIyd3CBGZ6AFhPFy1TfSEJ+PilGVlQT6jcbqtHAM4C1EciRqMza7/TpOUZliuSH+U6HAhJw==",
      "dependencies": {
        "@babel/helper-environment-visitor": "^7.18.9",
        "@babel/helper-module-imports": "^7.18.6",
        "@babel/helper-simple-access": "^7.19.4",
        "@babel/helper-split-export-declaration": "^7.18.6",
        "@babel/helper-validator-identifier": "^7.19.1",
        "@babel/template": "^7.18.10",
        "@babel/traverse": "^7.19.6",
        "@babel/types": "^7.19.4"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-optimise-call-expression": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.18.6.tgz",
      "integrity": "sha512-HP59oD9/fEHQkdcbgFCnbmgH5vIQTJbxh2yf+CdM89/glUNnuzr87Q8GIjGEnOktTROemO0Pe0iPAYbqZuOUiA==",
      "dependencies": {
        "@babel/types": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-plugin-utils": {
      "version": "7.19.0",
      "resolved": "https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.19.0.tgz",
      "integrity": "sha512-40Ryx7I8mT+0gaNxm8JGTZFUITNqdLAgdg0hXzeVZxVD6nFsdhQvip6v8dqkRHzsz1VFpFAaOCHNn0vKBL7Czw==",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-replace-supers": {
      "version": "7.19.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-replace-supers/-/helper-replace-supers-7.19.1.tgz",
      "integrity": "sha512-T7ahH7wV0Hfs46SFh5Jz3s0B6+o8g3c+7TMxu7xKfmHikg7EAZ3I2Qk9LFhjxXq8sL7UkP5JflezNwoZa8WvWw==",
      "dependencies": {
        "@babel/helper-environment-visitor": "^7.18.9",
        "@babel/helper-member-expression-to-functions": "^7.18.9",
        "@babel/helper-optimise-call-expression": "^7.18.6",
        "@babel/traverse": "^7.19.1",
        "@babel/types": "^7.19.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-simple-access": {
      "version": "7.19.4",
      "resolved": "https://registry.npmjs.org/@babel/helper-simple-access/-/helper-simple-access-7.19.4.tgz",
      "integrity": "sha512-f9Xq6WqBFqaDfbCzn2w85hwklswz5qsKlh7f08w4Y9yhJHpnNC0QemtSkK5YyOY8kPGvyiwdzZksGUhnGdaUIg==",
      "dependencies": {
        "@babel/types": "^7.19.4"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-split-export-declaration": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.18.6.tgz",
      "integrity": "sha512-bde1etTx6ZyTmobl9LLMMQsaizFVZrquTEHOqKeQESMKo4PlObf+8+JA25ZsIpZhT/WEd39+vOdLXAFG/nELpA==",
      "dependencies": {
        "@babel/types": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-string-parser": {
      "version": "7.19.4",
      "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.19.4.tgz",
      "integrity": "sha512-nHtDoQcuqFmwYNYPz3Rah5ph2p8PFeFCsZk9A/48dPc/rGocJ5J3hAAZ7pb76VWX3fZKu+uEr/FhH5jLx7umrw==",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-identifier": {
      "version": "7.19.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.19.1.tgz",
      "integrity": "sha512-awrNfaMtnHUr653GgGEs++LlAvW6w+DcPrOliSMXWCKo597CwL5Acf/wWdNkf/tfEQE3mjkeD1YOVZOUV/od1w==",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-option": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.18.6.tgz",
      "integrity": "sha512-XO7gESt5ouv/LRJdrVjkShckw6STTaB7l9BrpBaAHDeF5YZT+01PCwmR0SJHnkW6i8OwW/EVWRShfi4j2x+KQw==",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helpers": {
      "version": "7.20.0",
      "resolved": "https://registry.npmjs.org/@babel/helpers/-/helpers-7.20.0.tgz",
      "integrity": "sha512-aGMjYraN0zosCEthoGLdqot1oRsmxVTQRHadsUPz5QM44Zej2PYRz7XiDE7GqnkZnNtLbOuxqoZw42vkU7+XEQ==",
      "dependencies": {
        "@babel/template": "^7.18.10",
        "@babel/traverse": "^7.20.0",
        "@babel/types": "^7.20.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/highlight": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/highlight/-/highlight-7.18.6.tgz",
      "integrity": "sha512-u7stbOuYjaPezCuLj29hNW1v64M2Md2qupEKP1fHc7WdOA3DgLh37suiSrZYY7haUB7iBeQZ9P1uiRF359do3g==",
      "dependencies": {
        "@babel/helper-validator-identifier": "^7.18.6",
        "chalk": "^2.0.0",
        "js-tokens": "^4.0.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/highlight/node_modules/ansi-styles": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
      "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
      "dependencies": {
        "color-convert": "^1.9.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/@babel/highlight/node_modules/chalk": {
      "version": "2.4.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
      "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
      "dependencies": {
        "ansi-styles": "^3.2.1",
        "escape-string-regexp": "^1.0.5",
        "supports-color": "^5.3.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/@babel/highlight/node_modules/color-convert": {
      "version": "1.9.3",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
      "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
      "dependencies": {
        "color-name": "1.1.3"
      }
    },
    "node_modules/@babel/highlight/node_modules/color-name": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
      "integrity": "sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw=="
    },
    "node_modules/@babel/highlight/node_modules/escape-string-regexp": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
      "integrity": "sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==",
      "engines": {
        "node": ">=0.8.0"
      }
    },
    "node_modules/@babel/highlight/node_modules/has-flag": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
      "integrity": "sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/@babel/highlight/node_modules/supports-color": {
      "version": "5.5.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
      "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
      "dependencies": {
        "has-flag": "^3.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/@babel/parser": {
      "version": "7.20.0",
      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.20.0.tgz",
      "integrity": "sha512-G9VgAhEaICnz8iiJeGJQyVl6J2nTjbW0xeisva0PK6XcKsga7BIaqm4ZF8Rg1Wbaqmy6znspNqhPaPkyukujzg==",
      "bin": {
        "parser": "bin/babel-parser.js"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@babel/plugin-proposal-decorators": {
      "version": "7.20.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-decorators/-/plugin-proposal-decorators-7.20.0.tgz",
      "integrity": "sha512-vnuRRS20ygSxclEYikHzVrP9nZDFXaSzvJxGLQNAiBX041TmhS4hOUHWNIpq/q4muENuEP9XPJFXTNFejhemkg==",
      "dependencies": {
        "@babel/helper-create-class-features-plugin": "^7.19.0",
        "@babel/helper-plugin-utils": "^7.19.0",
        "@babel/helper-replace-supers": "^7.19.1",
        "@babel/helper-split-export-declaration": "^7.18.6",
        "@babel/plugin-syntax-decorators": "^7.19.0"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-decorators": {
      "version": "7.19.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-decorators/-/plugin-syntax-decorators-7.19.0.tgz",
      "integrity": "sha512-xaBZUEDntt4faL1yN8oIFlhfXeQAWJW7CLKYsHTUqriCUbj8xOra8bfxxKGi/UwExPFBuPdH4XfHc9rGQhrVkQ==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.19.0"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-typescript": {
      "version": "7.20.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-typescript/-/plugin-syntax-typescript-7.20.0.tgz",
      "integrity": "sha512-rd9TkG+u1CExzS4SM1BlMEhMXwFLKVjOAFFCDx9PbX5ycJWDoWMcwdJH9RhkPu1dOgn5TrxLot/Gx6lWFuAUNQ==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.19.0"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-typescript": {
      "version": "7.20.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-typescript/-/plugin-transform-typescript-7.20.0.tgz",
      "integrity": "sha512-xOAsAFaun3t9hCwZ13Qe7gq423UgMZ6zAgmLxeGGapFqlT/X3L5qT2btjiVLlFn7gWtMaVyceS5VxGAuKbgizw==",
      "dependencies": {
        "@babel/helper-create-class-features-plugin": "^7.19.0",
        "@babel/helper-plugin-utils": "^7.19.0",
        "@babel/plugin-syntax-typescript": "^7.20.0"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/preset-typescript": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/preset-typescript/-/preset-typescript-7.18.6.tgz",
      "integrity": "sha512-s9ik86kXBAnD760aybBucdpnLsAt0jK1xqJn2juOn9lkOvSHV60os5hxoVJsPzMQxvnUJFAlkont2DvvaYEBtQ==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.6",
        "@babel/helper-validator-option": "^7.18.6",
        "@babel/plugin-transform-typescript": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/template": {
      "version": "7.18.10",
      "resolved": "https://registry.npmjs.org/@babel/template/-/template-7.18.10.tgz",
      "integrity": "sha512-TI+rCtooWHr3QJ27kJxfjutghu44DLnasDMwpDqCXVTal9RLp3RSYNh4NdBrRP2cQAoG9A8juOQl6P6oZG4JxA==",
      "dependencies": {
        "@babel/code-frame": "^7.18.6",
        "@babel/parser": "^7.18.10",
        "@babel/types": "^7.18.10"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/traverse": {
      "version": "7.20.0",
      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.20.0.tgz",
      "integrity": "sha512-5+cAXQNARgjRUK0JWu2UBwja4JLSO/rBMPJzpsKb+oBF5xlUuCfljQepS4XypBQoiigL0VQjTZy6WiONtUdScQ==",
      "dependencies": {
        "@babel/code-frame": "^7.18.6",
        "@babel/generator": "^7.20.0",
        "@babel/helper-environment-visitor": "^7.18.9",
        "@babel/helper-function-name": "^7.19.0",
        "@babel/helper-hoist-variables": "^7.18.6",
        "@babel/helper-split-export-declaration": "^7.18.6",
        "@babel/parser": "^7.20.0",
        "@babel/types": "^7.20.0",
        "debug": "^4.1.0",
        "globals": "^11.1.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/types": {
      "version": "7.20.0",
      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.20.0.tgz",
      "integrity": "sha512-Jlgt3H0TajCW164wkTOTzHkZb075tMQMULzrLUoUeKmO7eFL96GgDxf7/Axhc5CAuKE3KFyVW1p6ysKsi2oXAg==",
      "dependencies": {
        "@babel/helper-string-parser": "^7.19.4",
        "@babel/helper-validator-identifier": "^7.19.1",
        "to-fast-properties": "^2.0.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@jest/environment": {
      "version": "27.5.1",
      "resolved": "https://registry.npmjs.org/@jest/environment/-/environment-27.5.1.tgz",
      "integrity": "sha512-/WQjhPJe3/ghaol/4Bq480JKXV/Rfw8nQdN7f41fM8VDHLcxKXou6QyXAh3EFr9/bVG3x74z1NWDkP87EiY8gA==",
      "dependencies": {
        "@jest/fake-timers": "^27.5.1",
        "@jest/types": "^27.5.1",
        "@types/node": "*",
        "jest-mock": "^27.5.1"
      },
      "engines": {
        "node": "^10.13.0 || ^12.13.0 || ^14.15.0 || >=15.0.0"
      }
    },
    "node_modules/@jest/fake-timers": {
      "version": "27.5.1",
      "resolved": "https://registry.npmjs.org/@jest/fake-timers/-/fake-timers-27.5.1.tgz",
      "integrity": "sha512-/aPowoolwa07k7/oM3aASneNeBGCmGQsc3ugN4u6s4C/+s5M64MFo/+djTdiwcbQlRfFElGuDXWzaWj6QgKObQ==",
      "dependencies": {
        "@jest/types": "^27.5.1",
        "@sinonjs/fake-timers": "^8.0.1",
        "@types/node": "*",
        "jest-message-util": "^27.5.1",
        "jest-mock": "^27.5.1",
        "jest-util": "^27.5.1"
      },
      "engines": {
        "node": "^10.13.0 || ^12.13.0 || ^14.15.0 || >=15.0.0"
      }
    },
    "node_modules/@jest/types": {
      "version": "27.5.1",
      "resolved": "https://registry.npmjs.org/@jest/types/-/types-27.5.1.tgz",
      "integrity": "sha512-Cx46iJ9QpwQTjIdq5VJu2QTMMs3QlEjI0x1QbBP5W1+nMzyc2XmimiRR/CbX9TO0cPTeUlxWMOu8mslYsJ8DEw==",
      "dependencies": {
        "@types/istanbul-lib-coverage": "^2.0.0",
        "@types/istanbul-reports": "^3.0.0",
        "@types/node": "*",
        "@types/yargs": "^16.0.0",
        "chalk": "^4.0.0"
      },
      "engines": {
        "node": "^10.13.0 || ^12.13.0 || ^14.15.0 || >=15.0.0"
      }
    },
    "node_modules/@jridgewell/gen-mapping": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.1.1.tgz",
      "integrity": "sha512-sQXCasFk+U8lWYEe66WxRDOE9PjVz4vSM51fTu3Hw+ClTpUSQb718772vH3pyS5pShp6lvQM7SxgIDXXXmOX7w==",
      "dependencies": {
        "@jridgewell/set-array": "^1.0.0",
        "@jridgewell/sourcemap-codec": "^1.4.10"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/resolve-uri": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.0.tgz",
      "integrity": "sha512-F2msla3tad+Mfht5cJq7LSXcdudKTWCVYUgw6pLFOOHSTtZlj6SWNYAp+AhuqLmWdBO2X5hPrLcu8cVP8fy28w==",
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/set-array": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.1.2.tgz",
      "integrity": "sha512-xnkseuNADM0gt2bs+BvhO0p78Mk762YnZdsuzFV018NoG1Sj1SCQvpSqa7XUaTam5vAGasABV9qXASMKnFMwMw==",
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/sourcemap-codec": {
      "version": "1.4.14",
      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.4.14.tgz",
      "integrity": "sha512-XPSJHWmi394fuUuzDnGz1wiKqWfo1yXecHQMRf2l6hztTO+nPru658AyDngaBe7isIxEkRsPR3FZh+s7iVa4Uw=="
    },
    "node_modules/@jridgewell/trace-mapping": {
      "version": "0.3.17",
      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.17.tgz",
      "integrity": "sha512-MCNzAp77qzKca9+W/+I0+sEpaUnZoeasnghNeVc41VZCEKaCH73Vq3BZZ/SzWIgrqE4H4ceI+p+b6C0mHf9T4g==",
      "dependencies": {
        "@jridgewell/resolve-uri": "3.1.0",
        "@jridgewell/sourcemap-codec": "1.4.14"
      }
    },
    "node_modules/@ledgerhq/devices": {
      "version": "7.0.3",
      "resolved": "https://registry.npmjs.org/@ledgerhq/devices/-/devices-7.0.3.tgz",
      "integrity": "sha512-URlcgq6yKklWxj35nIu/eTF0UpGLGUOp69xp8uHeyoMK2wqVC0GNGeD2MvKyJ+ul83edqMEI98GycA98Y7trsg==",
      "optional": true,
      "dependencies": {
        "@ledgerhq/errors": "^6.11.1",
        "@ledgerhq/logs": "^6.10.1",
        "rxjs": "6",
        "semver": "^7.3.5"
      }
    },
    "node_modules/@ledgerhq/errors": {
      "version": "6.11.1",
      "resolved": "https://registry.npmjs.org/@ledgerhq/errors/-/errors-6.11.1.tgz",
      "integrity": "sha512-HT1PFvNrejcN5z3ba6xikacIdHWMkjBeE9U5FFoGHhaKBKGjC74mnCeEo0/oJunyuVId+9mhGnv6lrBl6Mkqdg==",
      "optional": true
    },
    "node_modules/@ledgerhq/hw-transport": {
      "version": "6.27.6",
      "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport/-/hw-transport-6.27.6.tgz",
      "integrity": "sha512-DRGUsB8WfbeEPuU42nAtwYpA5D6Bq3q1CvC2VjDinkukLcf6XMc22YUJl9mxt+h+/cLTU1Ff/pz+fqYqeELLEA==",
      "optional": true,
      "dependencies": {
        "@ledgerhq/devices": "^7.0.3",
        "@ledgerhq/errors": "^6.11.1",
        "events": "^3.3.0"
      }
    },
    "node_modules/@ledgerhq/hw-transport-node-hid": {
      "version": "6.27.6",
      "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport-node-hid/-/hw-transport-node-hid-6.27.6.tgz",
      "integrity": "sha512-ZQGKTydb3niMfGBrhbYR7zDiykOadiXRj05qfrjkCvvLXEq3KkUy8WnhfoSQEgaQpOx+i4SUJwzzfAih5eP3GA==",
      "optional": true,
      "dependencies": {
        "@ledgerhq/devices": "^7.0.3",
        "@ledgerhq/errors": "^6.11.1",
        "@ledgerhq/hw-transport": "^6.27.6",
        "@ledgerhq/hw-transport-node-hid-noevents": "^6.27.6",
        "@ledgerhq/logs": "^6.10.1",
        "lodash": "^4.17.21",
        "node-hid": "2.1.1",
        "usb": "^1.7.0"
      }
    },
    "node_modules/@ledgerhq/hw-transport-node-hid-noevents": {
      "version": "6.27.6",
      "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport-node-hid-noevents/-/hw-transport-node-hid-noevents-6.27.6.tgz",
      "integrity": "sha512-9WvUBUhk0eRSZjXgEsdNVGkxHuDLoh6fR1PJIeXKHgC8dzTREYrGKytx8ECqO5OPotXeAZURC3yB00XZrKIupw==",
      "optional": true,
      "dependencies": {
        "@ledgerhq/devices": "^7.0.3",
        "@ledgerhq/errors": "^6.11.1",
        "@ledgerhq/hw-transport": "^6.27.6",
        "@ledgerhq/logs": "^6.10.1",
        "node-hid": "2.1.1"
      }
    },
    "node_modules/@ledgerhq/hw-transport-u2f": {
      "version": "5.36.0-deprecated",
      "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport-u2f/-/hw-transport-u2f-5.36.0-deprecated.tgz",
      "integrity": "sha512-T/+mGHIiUK/ZQATad6DMDmobCMZ1mVST952009jKzhaE1Et2Uy2secU+QhRkx3BfEAkvwa0zSRSYCL9d20Iqjg==",
      "deprecated": "@ledgerhq/hw-transport-u2f is deprecated. Please use @ledgerhq/hw-transport-webusb or @ledgerhq/hw-transport-webhid. https://github.com/LedgerHQ/ledgerjs/blob/master/docs/migrate_webusb.md",
      "optional": true,
      "dependencies": {
        "@ledgerhq/errors": "^5.34.0",
        "@ledgerhq/hw-transport": "^5.34.0",
        "@ledgerhq/logs": "^5.30.0",
        "u2f-api": "0.2.7"
      }
    },
    "node_modules/@ledgerhq/hw-transport-u2f/node_modules/@ledgerhq/devices": {
      "version": "5.51.1",
      "resolved": "https://registry.npmjs.org/@ledgerhq/devices/-/devices-5.51.1.tgz",
      "integrity": "sha512-4w+P0VkbjzEXC7kv8T1GJ/9AVaP9I6uasMZ/JcdwZBS3qwvKo5A5z9uGhP5c7TvItzcmPb44b5Mw2kT+WjUuAA==",
      "optional": true,
      "dependencies": {
        "@ledgerhq/errors": "^5.50.0",
        "@ledgerhq/logs": "^5.50.0",
        "rxjs": "6",
        "semver": "^7.3.5"
      }
    },
    "node_modules/@ledgerhq/hw-transport-u2f/node_modules/@ledgerhq/errors": {
      "version": "5.50.0",
      "resolved": "https://registry.npmjs.org/@ledgerhq/errors/-/errors-5.50.0.tgz",
      "integrity": "sha512-gu6aJ/BHuRlpU7kgVpy2vcYk6atjB4iauP2ymF7Gk0ez0Y/6VSMVSJvubeEQN+IV60+OBK0JgeIZG7OiHaw8ow==",
      "optional": true
    },
    "node_modules/@ledgerhq/hw-transport-u2f/node_modules/@ledgerhq/hw-transport": {
      "version": "5.51.1",
      "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport/-/hw-transport-5.51.1.tgz",
      "integrity": "sha512-6wDYdbWrw9VwHIcoDnqWBaDFyviyjZWv6H9vz9Vyhe4Qd7TIFmbTl/eWs6hZvtZBza9K8y7zD8ChHwRI4s9tSw==",
      "optional": true,
      "dependencies": {
        "@ledgerhq/devices": "^5.51.1",
        "@ledgerhq/errors": "^5.50.0",
        "events": "^3.3.0"
      }
    },
    "node_modules/@ledgerhq/hw-transport-u2f/node_modules/@ledgerhq/logs": {
      "version": "5.50.0",
      "resolved": "https://registry.npmjs.org/@ledgerhq/logs/-/logs-5.50.0.tgz",
      "integrity": "sha512-swKHYCOZUGyVt4ge0u8a7AwNcA//h4nx5wIi0sruGye1IJ5Cva0GyK9L2/WdX+kWVTKp92ZiEo1df31lrWGPgA==",
      "optional": true
    },
    "node_modules/@ledgerhq/hw-transport-webhid": {
      "version": "5.51.1",
      "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport-webhid/-/hw-transport-webhid-5.51.1.tgz",
      "integrity": "sha512-w/2qSU0vwFY+D/4ucuYRViO7iS3Uuxmj9sI/Iiqkoiax9Xppb0/6H5m3ffKv6iPMmRYbgwCgXorqx4SLLSD8Kg==",
      "optional": true,
      "dependencies": {
        "@ledgerhq/devices": "^5.51.1",
        "@ledgerhq/errors": "^5.50.0",
        "@ledgerhq/hw-transport": "^5.51.1",
        "@ledgerhq/logs": "^5.50.0"
      }
    },
    "node_modules/@ledgerhq/hw-transport-webhid/node_modules/@ledgerhq/devices": {
      "version": "5.51.1",
      "resolved": "https://registry.npmjs.org/@ledgerhq/devices/-/devices-5.51.1.tgz",
      "integrity": "sha512-4w+P0VkbjzEXC7kv8T1GJ/9AVaP9I6uasMZ/JcdwZBS3qwvKo5A5z9uGhP5c7TvItzcmPb44b5Mw2kT+WjUuAA==",
      "optional": true,
      "dependencies": {
        "@ledgerhq/errors": "^5.50.0",
        "@ledgerhq/logs": "^5.50.0",
        "rxjs": "6",
        "semver": "^7.3.5"
      }
    },
    "node_modules/@ledgerhq/hw-transport-webhid/node_modules/@ledgerhq/errors": {
      "version": "5.50.0",
      "resolved": "https://registry.npmjs.org/@ledgerhq/errors/-/errors-5.50.0.tgz",
      "integrity": "sha512-gu6aJ/BHuRlpU7kgVpy2vcYk6atjB4iauP2ymF7Gk0ez0Y/6VSMVSJvubeEQN+IV60+OBK0JgeIZG7OiHaw8ow==",
      "optional": true
    },
    "node_modules/@ledgerhq/hw-transport-webhid/node_modules/@ledgerhq/hw-transport": {
      "version": "5.51.1",
      "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport/-/hw-transport-5.51.1.tgz",
      "integrity": "sha512-6wDYdbWrw9VwHIcoDnqWBaDFyviyjZWv6H9vz9Vyhe4Qd7TIFmbTl/eWs6hZvtZBza9K8y7zD8ChHwRI4s9tSw==",
      "optional": true,
      "dependencies": {
        "@ledgerhq/devices": "^5.51.1",
        "@ledgerhq/errors": "^5.50.0",
        "events": "^3.3.0"
      }
    },
    "node_modules/@ledgerhq/hw-transport-webhid/node_modules/@ledgerhq/logs": {
      "version": "5.50.0",
      "resolved": "https://registry.npmjs.org/@ledgerhq/logs/-/logs-5.50.0.tgz",
      "integrity": "sha512-swKHYCOZUGyVt4ge0u8a7AwNcA//h4nx5wIi0sruGye1IJ5Cva0GyK9L2/WdX+kWVTKp92ZiEo1df31lrWGPgA==",
      "optional": true
    },
    "node_modules/@ledgerhq/hw-transport-webusb": {
      "version": "5.53.1",
      "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport-webusb/-/hw-transport-webusb-5.53.1.tgz",
      "integrity": "sha512-A/f+xcrkIAZiJrvPpDvsrjxQX4cI2kbdiunQkwsYmOG3Bp4z89ZnsBiC7YBst4n2/g+QgTg0/KPVtODU5djooQ==",
      "optional": true,
      "dependencies": {
        "@ledgerhq/devices": "^5.51.1",
        "@ledgerhq/errors": "^5.50.0",
        "@ledgerhq/hw-transport": "^5.51.1",
        "@ledgerhq/logs": "^5.50.0"
      }
    },
    "node_modules/@ledgerhq/hw-transport-webusb/node_modules/@ledgerhq/devices": {
      "version": "5.51.1",
      "resolved": "https://registry.npmjs.org/@ledgerhq/devices/-/devices-5.51.1.tgz",
      "integrity": "sha512-4w+P0VkbjzEXC7kv8T1GJ/9AVaP9I6uasMZ/JcdwZBS3qwvKo5A5z9uGhP5c7TvItzcmPb44b5Mw2kT+WjUuAA==",
      "optional": true,
      "dependencies": {
        "@ledgerhq/errors": "^5.50.0",
        "@ledgerhq/logs": "^5.50.0",
        "rxjs": "6",
        "semver": "^7.3.5"
      }
    },
    "node_modules/@ledgerhq/hw-transport-webusb/node_modules/@ledgerhq/errors": {
      "version": "5.50.0",
      "resolved": "https://registry.npmjs.org/@ledgerhq/errors/-/errors-5.50.0.tgz",
      "integrity": "sha512-gu6aJ/BHuRlpU7kgVpy2vcYk6atjB4iauP2ymF7Gk0ez0Y/6VSMVSJvubeEQN+IV60+OBK0JgeIZG7OiHaw8ow==",
      "optional": true
    },
    "node_modules/@ledgerhq/hw-transport-webusb/node_modules/@ledgerhq/hw-transport": {
      "version": "5.51.1",
      "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport/-/hw-transport-5.51.1.tgz",
      "integrity": "sha512-6wDYdbWrw9VwHIcoDnqWBaDFyviyjZWv6H9vz9Vyhe4Qd7TIFmbTl/eWs6hZvtZBza9K8y7zD8ChHwRI4s9tSw==",
      "optional": true,
      "dependencies": {
        "@ledgerhq/devices": "^5.51.1",
        "@ledgerhq/errors": "^5.50.0",
        "events": "^3.3.0"
      }
    },
    "node_modules/@ledgerhq/hw-transport-webusb/node_modules/@ledgerhq/logs": {
      "version": "5.50.0",
      "resolved": "https://registry.npmjs.org/@ledgerhq/logs/-/logs-5.50.0.tgz",
      "integrity": "sha512-swKHYCOZUGyVt4ge0u8a7AwNcA//h4nx5wIi0sruGye1IJ5Cva0GyK9L2/WdX+kWVTKp92ZiEo1df31lrWGPgA==",
      "optional": true
    },
    "node_modules/@ledgerhq/logs": {
      "version": "6.10.1",
      "resolved": "https://registry.npmjs.org/@ledgerhq/logs/-/logs-6.10.1.tgz",
      "integrity": "sha512-z+ILK8Q3y+nfUl43ctCPuR4Y2bIxk/ooCQFwZxhtci1EhAtMDzMAx2W25qx8G1PPL9UUOdnUax19+F0OjXoj4w==",
      "optional": true
    },
    "node_modules/@rollup/plugin-babel": {
      "version": "5.3.1",
      "resolved": "https://registry.npmjs.org/@rollup/plugin-babel/-/plugin-babel-5.3.1.tgz",
      "integrity": "sha512-WFfdLWU/xVWKeRQnKmIAQULUI7Il0gZnBIH/ZFO069wYIfPu+8zrfp/KMW0atmELoRDq8FbiP3VCss9MhCut7Q==",
      "dependencies": {
        "@babel/helper-module-imports": "^7.10.4",
        "@rollup/pluginutils": "^3.1.0"
      },
      "engines": {
        "node": ">= 10.0.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0",
        "@types/babel__core": "^7.1.9",
        "rollup": "^1.20.0||^2.0.0"
      },
      "peerDependenciesMeta": {
        "@types/babel__core": {
          "optional": true
        }
      }
    },
    "node_modules/@rollup/plugin-commonjs": {
      "version": "21.1.0",
      "resolved": "https://registry.npmjs.org/@rollup/plugin-commonjs/-/plugin-commonjs-21.1.0.tgz",
      "integrity": "sha512-6ZtHx3VHIp2ReNNDxHjuUml6ur+WcQ28N1yHgCQwsbNkQg2suhxGMDQGJOn/KuDxKtd1xuZP5xSTwBA4GQ8hbA==",
      "dependencies": {
        "@rollup/pluginutils": "^3.1.0",
        "commondir": "^1.0.1",
        "estree-walker": "^2.0.1",
        "glob": "^7.1.6",
        "is-reference": "^1.2.1",
        "magic-string": "^0.25.7",
        "resolve": "^1.17.0"
      },
      "engines": {
        "node": ">= 8.0.0"
      },
      "peerDependencies": {
        "rollup": "^2.38.3"
      }
    },
    "node_modules/@rollup/plugin-node-resolve": {
      "version": "13.3.0",
      "resolved": "https://registry.npmjs.org/@rollup/plugin-node-resolve/-/plugin-node-resolve-13.3.0.tgz",
      "integrity": "sha512-Lus8rbUo1eEcnS4yTFKLZrVumLPY+YayBdWXgFSHYhTT2iJbMhoaaBL3xl5NCdeRytErGr8tZ0L71BMRmnlwSw==",
      "dependencies": {
        "@rollup/pluginutils": "^3.1.0",
        "@types/resolve": "1.17.1",
        "deepmerge": "^4.2.2",
        "is-builtin-module": "^3.1.0",
        "is-module": "^1.0.0",
        "resolve": "^1.19.0"
      },
      "engines": {
        "node": ">= 10.0.0"
      },
      "peerDependencies": {
        "rollup": "^2.42.0"
      }
    },
    "node_modules/@rollup/pluginutils": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/@rollup/pluginutils/-/pluginutils-3.1.0.tgz",
      "integrity": "sha512-GksZ6pr6TpIjHm8h9lSQ8pi8BE9VeubNT0OMJ3B5uZJ8pz73NPiqOtCog/x2/QzM1ENChPKxMDhiQuRHsqc+lg==",
      "dependencies": {
        "@types/estree": "0.0.39",
        "estree-walker": "^1.0.1",
        "picomatch": "^2.2.2"
      },
      "engines": {
        "node": ">= 8.0.0"
      },
      "peerDependencies": {
        "rollup": "^1.20.0||^2.0.0"
      }
    },
    "node_modules/@rollup/pluginutils/node_modules/estree-walker": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/estree-walker/-/estree-walker-1.0.1.tgz",
      "integrity": "sha512-1fMXF3YP4pZZVozF8j/ZLfvnR8NSIljt56UhbZ5PeeDmmGHpgpdwQt7ITlGvYaQukCvuBRMLEiKiYC+oeIg4cg=="
    },
    "node_modules/@scure/base": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@scure/base/-/base-1.1.1.tgz",
      "integrity": "sha512-ZxOhsSyxYwLJj3pLZCefNitxsj093tb2vq90mp2txoYeBqbcjDjqFhyM8eUjq/uFm6zJ+mUuqxlS2FkuSY1MTA==",
      "funding": [
        {
          "type": "individual",
          "url": "https://paulmillr.com/funding/"
        }
      ]
    },
    "node_modules/@segment/loosely-validate-event": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/@segment/loosely-validate-event/-/loosely-validate-event-2.0.0.tgz",
      "integrity": "sha512-ZMCSfztDBqwotkl848ODgVcAmN4OItEWDCkshcKz0/W6gGSQayuuCtWV/MlodFivAZD793d6UgANd6wCXUfrIw==",
      "dependencies": {
        "component-type": "^1.2.1",
        "join-component": "^1.1.0"
      }
    },
    "node_modules/@sindresorhus/is": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@sindresorhus/is/-/is-0.14.0.tgz",
      "integrity": "sha512-9NET910DNaIPngYnLLPeg+Ogzqsi9uM4mSboU5y6p8S5DzMTVEsJZrawi+BoDNUVBa2DhJqQYUFvMDfgU062LQ==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/@sinonjs/commons": {
      "version": "1.8.3",
      "resolved": "https://registry.npmjs.org/@sinonjs/commons/-/commons-1.8.3.tgz",
      "integrity": "sha512-xkNcLAn/wZaX14RPlwizcKicDk9G3F8m2nU3L7Ukm5zBgTwiT0wsoFAHx9Jq56fJA1z/7uKGtCRu16sOUCLIHQ==",
      "dependencies": {
        "type-detect": "4.0.8"
      }
    },
    "node_modules/@sinonjs/fake-timers": {
      "version": "8.1.0",
      "resolved": "https://registry.npmjs.org/@sinonjs/fake-timers/-/fake-timers-8.1.0.tgz",
      "integrity": "sha512-OAPJUAtgeINhh/TAlUID4QTs53Njm7xzddaVlEs/SXwgtiD1tW22zAB/W1wdqfrpmikgaWQ9Fw6Ws+hsiRm5Vg==",
      "dependencies": {
        "@sinonjs/commons": "^1.7.0"
      }
    },
    "node_modules/@szmarczak/http-timer": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@szmarczak/http-timer/-/http-timer-1.1.2.tgz",
      "integrity": "sha512-XIB2XbzHTN6ieIjfIMV9hlVcfPU26s2vafYWQcZHWXHOxiaRZYEDKEwdl129Zyg50+foYV2jCgtrqSA6qNuNSA==",
      "dependencies": {
        "defer-to-connect": "^1.0.1"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/@types/babel__core": {
      "version": "7.1.19",
      "resolved": "https://registry.npmjs.org/@types/babel__core/-/babel__core-7.1.19.tgz",
      "integrity": "sha512-WEOTgRsbYkvA/KCsDwVEGkd7WAr1e3g31VHQ8zy5gul/V1qKullU/BU5I68X5v7V3GnB9eotmom4v5a5gjxorw==",
      "optional": true,
      "peer": true,
      "dependencies": {
        "@babel/parser": "^7.1.0",
        "@babel/types": "^7.0.0",
        "@types/babel__generator": "*",
        "@types/babel__template": "*",
        "@types/babel__traverse": "*"
      }
    },
    "node_modules/@types/babel__generator": {
      "version": "7.6.4",
      "resolved": "https://registry.npmjs.org/@types/babel__generator/-/babel__generator-7.6.4.tgz",
      "integrity": "sha512-tFkciB9j2K755yrTALxD44McOrk+gfpIpvC3sxHjRawj6PfnQxrse4Clq5y/Rq+G3mrBurMax/lG8Qn2t9mSsg==",
      "optional": true,
      "peer": true,
      "dependencies": {
        "@babel/types": "^7.0.0"
      }
    },
    "node_modules/@types/babel__template": {
      "version": "7.4.1",
      "resolved": "https://registry.npmjs.org/@types/babel__template/-/babel__template-7.4.1.tgz",
      "integrity": "sha512-azBFKemX6kMg5Io+/rdGT0dkGreboUVR0Cdm3fz9QJWpaQGJRQXl7C+6hOTCZcMll7KFyEQpgbYI2lHdsS4U7g==",
      "optional": true,
      "peer": true,
      "dependencies": {
        "@babel/parser": "^7.1.0",
        "@babel/types": "^7.0.0"
      }
    },
    "node_modules/@types/babel__traverse": {
      "version": "7.18.2",
      "resolved": "https://registry.npmjs.org/@types/babel__traverse/-/babel__traverse-7.18.2.tgz",
      "integrity": "sha512-FcFaxOr2V5KZCviw1TnutEMVUVsGt4D2hP1TAfXZAMKuHYW3xQhe3jTxNPWutgCJ3/X1c5yX8ZoGVEItxKbwBg==",
      "optional": true,
      "peer": true,
      "dependencies": {
        "@babel/types": "^7.3.0"
      }
    },
    "node_modules/@types/estree": {
      "version": "0.0.39",
      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-0.0.39.tgz",
      "integrity": "sha512-EYNwp3bU+98cpU4lAWYYL7Zz+2gryWH1qbdDTidVd6hkiR6weksdbMadyXKXNPEkQFhXM+hVO9ZygomHXp+AIw=="
    },
    "node_modules/@types/istanbul-lib-coverage": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/@types/istanbul-lib-coverage/-/istanbul-lib-coverage-2.0.4.tgz",
      "integrity": "sha512-z/QT1XN4K4KYuslS23k62yDIDLwLFkzxOuMplDtObz0+y7VqJCaO2o+SPwHCvLFZh7xazvvoor2tA/hPz9ee7g=="
    },
    "node_modules/@types/istanbul-lib-report": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/@types/istanbul-lib-report/-/istanbul-lib-report-3.0.0.tgz",
      "integrity": "sha512-plGgXAPfVKFoYfa9NpYDAkseG+g6Jr294RqeqcqDixSbU34MZVJRi/P+7Y8GDpzkEwLaGZZOpKIEmeVZNtKsrg==",
      "dependencies": {
        "@types/istanbul-lib-coverage": "*"
      }
    },
    "node_modules/@types/istanbul-reports": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/@types/istanbul-reports/-/istanbul-reports-3.0.1.tgz",
      "integrity": "sha512-c3mAZEuK0lvBp8tmuL74XRKn1+y2dcwOUpH7x4WrF6gk1GIgiluDRgMYQtw2OFcBvAJWlt6ASU3tSqxp0Uu0Aw==",
      "dependencies": {
        "@types/istanbul-lib-report": "*"
      }
    },
    "node_modules/@types/node": {
      "version": "18.11.9",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-18.11.9.tgz",
      "integrity": "sha512-CRpX21/kGdzjOpFsZSkcrXMGIBWMGNIHXXBVFSH+ggkftxg+XYP20TESbh+zFvFj3EQOl5byk0HTRn1IL6hbqg=="
    },
    "node_modules/@types/resolve": {
      "version": "1.17.1",
      "resolved": "https://registry.npmjs.org/@types/resolve/-/resolve-1.17.1.tgz",
      "integrity": "sha512-yy7HuzQhj0dhGpD8RLXSZWEkLsV9ibvxvi6EiJ3bkqLAO1RGo0WbkWQiwpRlSFymTJRz0d3k5LM3kkx8ArDbLw==",
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@types/stack-utils": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/@types/stack-utils/-/stack-utils-2.0.1.tgz",
      "integrity": "sha512-Hl219/BT5fLAaz6NDkSuhzasy49dwQS/DSdu4MdggFB8zcXv7vflBI3xp7FEmkmdDkBUI2bPUNeMttp2knYdxw=="
    },
    "node_modules/@types/yargs": {
      "version": "16.0.4",
      "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-16.0.4.tgz",
      "integrity": "sha512-T8Yc9wt/5LbJyCaLiHPReJa0kApcIgJ7Bn735GjItUfh08Z1pJvu8QZqb9s+mMvKV6WUQRV7K2R46YbjMXTTJw==",
      "dependencies": {
        "@types/yargs-parser": "*"
      }
    },
    "node_modules/@types/yargs-parser": {
      "version": "21.0.0",
      "resolved": "https://registry.npmjs.org/@types/yargs-parser/-/yargs-parser-21.0.0.tgz",
      "integrity": "sha512-iO9ZQHkZxHn4mSakYV0vFHAVDyEOIJQrV2uZ06HxEPcx+mt8swXoZHIbaaJ2crJYFfErySgktuTZ3BeLz+XmFA=="
    },
    "node_modules/analytics-node": {
      "version": "6.2.0",
      "resolved": "https://registry.npmjs.org/analytics-node/-/analytics-node-6.2.0.tgz",
      "integrity": "sha512-NLU4tCHlWt0tzEaFQL7NIoWhq2KmQSmz0JvyS2lYn6fc4fEjTMSabhJUx8H1r5995FX8fE3rZ15uIHU6u+ovlQ==",
      "dependencies": {
        "@segment/loosely-validate-event": "^2.0.0",
        "axios": "^0.27.2",
        "axios-retry": "3.2.0",
        "lodash.isstring": "^4.0.1",
        "md5": "^2.2.1",
        "ms": "^2.0.0",
        "remove-trailing-slash": "^0.1.0",
        "uuid": "^8.3.2"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/ansi-align": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/ansi-align/-/ansi-align-3.0.1.tgz",
      "integrity": "sha512-IOfwwBF5iczOjp/WeY4YxyjqAFMQoZufdQWDd19SEExbVLNXqvpzSJ/M7Za4/sCPmQ0+GRquoA7bGcINcxew6w==",
      "dependencies": {
        "string-width": "^4.1.0"
      }
    },
    "node_modules/ansi-align/node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/ansi-align/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/ansi-align/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/ansi-escapes": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-6.0.0.tgz",
      "integrity": "sha512-IG23inYII3dWlU2EyiAiGj6Bwal5GzsgPMwjYGvc1HPE2dgbj4ZB5ToWBKSquKw74nB3TIuOwaI6/jSULzfgrw==",
      "dependencies": {
        "type-fest": "^3.0.0"
      },
      "engines": {
        "node": ">=14.16"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/ansi-escapes/node_modules/type-fest": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-3.1.0.tgz",
      "integrity": "sha512-StmrZmK3eD9mDF9Vt7UhqthrDSk66O9iYl5t5a0TSoVkHjl0XZx/xuc/BRz4urAXXGHOY5OLsE0RdJFIApSFmw==",
      "engines": {
        "node": ">=14.16"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "dependencies": {
        "color-convert": "^2.0.1"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/aproba": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/aproba/-/aproba-1.2.0.tgz",
      "integrity": "sha512-Y9J6ZjXtoYh8RnXVCMOU/ttDmk1aBjunq9vO0ta5x85WDQiQfUF9sIPBITdbiiIVcBo03Hi3jMxigBtsddlXRw==",
      "optional": true
    },
    "node_modules/are-we-there-yet": {
      "version": "1.1.7",
      "resolved": "https://registry.npmjs.org/are-we-there-yet/-/are-we-there-yet-1.1.7.tgz",
      "integrity": "sha512-nxwy40TuMiUGqMyRHgCSWZ9FM4VAoRP4xUYSTv5ImRog+h9yISPbVH7H8fASCIzYn9wlEv4zvFL7uKDMCFQm3g==",
      "optional": true,
      "dependencies": {
        "delegates": "^1.0.0",
        "readable-stream": "^2.0.6"
      }
    },
    "node_modules/are-we-there-yet/node_modules/readable-stream": {
      "version": "2.3.7",
      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
      "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
      "optional": true,
      "dependencies": {
        "core-util-is": "~1.0.0",
        "inherits": "~2.0.3",
        "isarray": "~1.0.0",
        "process-nextick-args": "~2.0.0",
        "safe-buffer": "~5.1.1",
        "string_decoder": "~1.1.1",
        "util-deprecate": "~1.0.1"
      }
    },
    "node_modules/are-we-there-yet/node_modules/safe-buffer": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
      "optional": true
    },
    "node_modules/are-we-there-yet/node_modules/string_decoder": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
      "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
      "optional": true,
      "dependencies": {
        "safe-buffer": "~5.1.0"
      }
    },
    "node_modules/ascii-table": {
      "version": "0.0.9",
      "resolved": "https://registry.npmjs.org/ascii-table/-/ascii-table-0.0.9.tgz",
      "integrity": "sha512-xpkr6sCDIYTPqzvjG8M3ncw1YOTaloWZOyrUmicoEifBEKzQzt+ooUpRpQ/AbOoJfO/p2ZKiyp79qHThzJDulQ=="
    },
    "node_modules/asynckit": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
      "integrity": "sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q=="
    },
    "node_modules/atob": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/atob/-/atob-2.1.2.tgz",
      "integrity": "sha512-Wm6ukoaOGJi/73p/cl2GvLjTI5JM1k/O14isD73YML8StrH/7/lRFgmg8nICZgD3bZZvjwCGxtMOD3wWNAu8cg==",
      "bin": {
        "atob": "bin/atob.js"
      },
      "engines": {
        "node": ">= 4.5.0"
      }
    },
    "node_modules/axios": {
      "version": "0.27.2",
      "resolved": "https://registry.npmjs.org/axios/-/axios-0.27.2.tgz",
      "integrity": "sha512-t+yRIyySRTp/wua5xEr+z1q60QmLq8ABsS5O9Me1AsE5dfKqgnCFzwiCZZ/cGNd1lq4/7akDWMxdhVlucjmnOQ==",
      "dependencies": {
        "follow-redirects": "^1.14.9",
        "form-data": "^4.0.0"
      }
    },
    "node_modules/axios-retry": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/axios-retry/-/axios-retry-3.2.0.tgz",
      "integrity": "sha512-RK2cLMgIsAQBDhlIsJR5dOhODPigvel18XUv1dDXW+4k1FzebyfRk+C+orot6WPZOYFKSfhLwHPwVmTVOODQ5w==",
      "dependencies": {
        "is-retry-allowed": "^1.1.0"
      }
    },
    "node_modules/balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw=="
    },
    "node_modules/base-x": {
      "version": "3.0.9",
      "resolved": "https://registry.npmjs.org/base-x/-/base-x-3.0.9.tgz",
      "integrity": "sha512-H7JU6iBHTal1gp56aKoaa//YUxEaAOUiydvrV/pILqIHXTtqxSkATOnDA2u+jZ/61sD+L/412+7kzXRtWukhpQ==",
      "dependencies": {
        "safe-buffer": "^5.0.1"
      }
    },
    "node_modules/base64-js": {
      "version": "1.5.1",
      "resolved": "https://registry.npmjs.org/base64-js/-/base64-js-1.5.1.tgz",
      "integrity": "sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ]
    },
    "node_modules/bindings": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/bindings/-/bindings-1.5.0.tgz",
      "integrity": "sha512-p2q/t/mhvuOj/UeLlV6566GD/guowlr0hHxClI0W9m7MWYkL1F0hLo+0Aexs9HSPCtR1SXQ0TD3MMKrXZajbiQ==",
      "optional": true,
      "dependencies": {
        "file-uri-to-path": "1.0.0"
      }
    },
    "node_modules/bip39": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/bip39/-/bip39-3.0.2.tgz",
      "integrity": "sha512-J4E1r2N0tUylTKt07ibXvhpT2c5pyAFgvuA5q1H9uDy6dEGpjV8jmymh3MTYJDLCNbIVClSB9FbND49I6N24MQ==",
      "dependencies": {
        "@types/node": "11.11.6",
        "create-hash": "^1.1.0",
        "pbkdf2": "^3.0.9",
        "randombytes": "^2.0.1"
      }
    },
    "node_modules/bip39-light": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/bip39-light/-/bip39-light-1.0.7.tgz",
      "integrity": "sha512-WDTmLRQUsiioBdTs9BmSEmkJza+8xfJmptsNJjxnoq3EydSa/ZBXT6rm66KoT3PJIRYMnhSKNR7S9YL1l7R40Q==",
      "dependencies": {
        "create-hash": "^1.1.0",
        "pbkdf2": "^3.0.9"
      }
    },
    "node_modules/bip39/node_modules/@types/node": {
      "version": "11.11.6",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-11.11.6.tgz",
      "integrity": "sha512-Exw4yUWMBXM3X+8oqzJNRqZSwUAaS4+7NdvHqQuFi/d+synz++xmX3QIf+BFqneW8N31R8Ky+sikfZUXq07ggQ=="
    },
    "node_modules/bl": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/bl/-/bl-4.1.0.tgz",
      "integrity": "sha512-1W07cM9gS6DcLperZfFSj+bWLtaPGSOHWhPiGzXmvVJbRLdG82sH/Kn8EtW1VqWVA54AKf2h5k5BbnIbwF3h6w==",
      "optional": true,
      "dependencies": {
        "buffer": "^5.5.0",
        "inherits": "^2.0.4",
        "readable-stream": "^3.4.0"
      }
    },
    "node_modules/bn.js": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-5.2.1.tgz",
      "integrity": "sha512-eXRvHzWyYPBuB4NBy0cmYQjGitUrtqwbvlzP3G6VFnNRbsZQIxQ10PbKKHt8gZ/HW/D/747aDl+QkDqg3KQLMQ=="
    },
    "node_modules/borsh": {
      "version": "0.7.0",
      "resolved": "https://registry.npmjs.org/borsh/-/borsh-0.7.0.tgz",
      "integrity": "sha512-CLCsZGIBCFnPtkNnieW/a8wmreDmfUtjU2m9yHrzPXIlNbqVs0AQrSatSG6vdNYUqdc83tkQi2eHfF98ubzQLA==",
      "dependencies": {
        "bn.js": "^5.2.0",
        "bs58": "^4.0.0",
        "text-encoding-utf-8": "^1.0.2"
      }
    },
    "node_modules/boxen": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/boxen/-/boxen-5.1.2.tgz",
      "integrity": "sha512-9gYgQKXx+1nP8mP7CzFyaUARhg7D3n1dF/FnErWmu9l6JvGpNUN278h0aSb+QjoiKSWG+iZ3uHrcqk0qrY9RQQ==",
      "dependencies": {
        "ansi-align": "^3.0.0",
        "camelcase": "^6.2.0",
        "chalk": "^4.1.0",
        "cli-boxes": "^2.2.1",
        "string-width": "^4.2.2",
        "type-fest": "^0.20.2",
        "widest-line": "^3.1.0",
        "wrap-ansi": "^7.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/boxen/node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/boxen/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/boxen/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/braces": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.2.tgz",
      "integrity": "sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==",
      "dependencies": {
        "fill-range": "^7.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/browserslist": {
      "version": "4.21.4",
      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.21.4.tgz",
      "integrity": "sha512-CBHJJdDmgjl3daYjN5Cp5kbTf1mUhZoS+beLklHIvkOWscs83YAhLlF3Wsh/lciQYAcbBJgTOD44VtG31ZM4Hw==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        }
      ],
      "dependencies": {
        "caniuse-lite": "^1.0.30001400",
        "electron-to-chromium": "^1.4.251",
        "node-releases": "^2.0.6",
        "update-browserslist-db": "^1.0.9"
      },
      "bin": {
        "browserslist": "cli.js"
      },
      "engines": {
        "node": "^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7"
      }
    },
    "node_modules/bs58": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/bs58/-/bs58-4.0.1.tgz",
      "integrity": "sha512-Ok3Wdf5vOIlBrgCvTq96gBkJw+JUEzdBgyaza5HLtPm7yTHkjRy8+JzNyHF7BHa0bNWOQIp3m5YF0nnFcOIKLw==",
      "dependencies": {
        "base-x": "^3.0.2"
      }
    },
    "node_modules/buffer": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz",
      "integrity": "sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "optional": true,
      "dependencies": {
        "base64-js": "^1.3.1",
        "ieee754": "^1.1.13"
      }
    },
    "node_modules/builtin-modules": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/builtin-modules/-/builtin-modules-3.3.0.tgz",
      "integrity": "sha512-zhaCDicdLuWN5UbN5IMnFqNMhNfo919sH85y2/ea+5Yg9TsTkeZxpL+JLbp6cgYFS4sRLp3YV4S6yDuqVWHYOw==",
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/cacheable-request": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/cacheable-request/-/cacheable-request-6.1.0.tgz",
      "integrity": "sha512-Oj3cAGPCqOZX7Rz64Uny2GYAZNliQSqfbePrgAQ1wKAihYmCUnraBtJtKcGR4xz7wF+LoJC+ssFZvv5BgF9Igg==",
      "dependencies": {
        "clone-response": "^1.0.2",
        "get-stream": "^5.1.0",
        "http-cache-semantics": "^4.0.0",
        "keyv": "^3.0.0",
        "lowercase-keys": "^2.0.0",
        "normalize-url": "^4.1.0",
        "responselike": "^1.0.2"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/cacheable-request/node_modules/get-stream": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-5.2.0.tgz",
      "integrity": "sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==",
      "dependencies": {
        "pump": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/cacheable-request/node_modules/json-buffer": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.0.tgz",
      "integrity": "sha512-CuUqjv0FUZIdXkHPI8MezCnFCdaTAacej1TZYulLoAg1h/PhwkdXFN4V/gzY4g+fMBCOV2xF+rp7t2XD2ns/NQ=="
    },
    "node_modules/cacheable-request/node_modules/keyv": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/keyv/-/keyv-3.1.0.tgz",
      "integrity": "sha512-9ykJ/46SN/9KPM/sichzQ7OvXyGDYKGTaDlKMGCAlg2UK8KRy4jb0d8sFc+0Tt0YYnThq8X2RZgCg74RPxgcVA==",
      "dependencies": {
        "json-buffer": "3.0.0"
      }
    },
    "node_modules/cacheable-request/node_modules/lowercase-keys": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-2.0.0.tgz",
      "integrity": "sha512-tqNXrS78oMOE73NMxK4EMLQsQowWf8jKooH9g7xPavRT706R6bkQJ6DY2Te7QukaZsulxa30wQ7bk0pm4XiHmA==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/camelcase": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-6.3.0.tgz",
      "integrity": "sha512-Gmy6FhYlCY7uOElZUSbxo2UCDH8owEk996gkbrpsgGtrJLM3J7jGxl9Ic7Qwwj4ivOE5AWZWRMecDdF7hqGjFA==",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/caniuse-lite": {
      "version": "1.0.30001426",
      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001426.tgz",
      "integrity": "sha512-n7cosrHLl8AWt0wwZw/PJZgUg3lV0gk9LMI7ikGJwhyhgsd2Nb65vKvmSexCqq/J7rbH3mFG6yZZiPR5dLPW5A==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/caniuse-lite"
        }
      ]
    },
    "node_modules/capability": {
      "version": "0.2.5",
      "resolved": "https://registry.npmjs.org/capability/-/capability-0.2.5.tgz",
      "integrity": "sha512-rsJZYVCgXd08sPqwmaIqjAd5SUTfonV0z/gDJ8D6cN8wQphky1kkAYEqQ+hmDxTw7UihvBfjUVUSY+DBEe44jg=="
    },
    "node_modules/chalk": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
      "dependencies": {
        "ansi-styles": "^4.1.0",
        "supports-color": "^7.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/chalk?sponsor=1"
      }
    },
    "node_modules/chardet": {
      "version": "0.7.0",
      "resolved": "https://registry.npmjs.org/chardet/-/chardet-0.7.0.tgz",
      "integrity": "sha512-mT8iDcrh03qDGRRmoA2hmBJnxpllMR+0/0qlzjqZES6NdiWDcZkCNAk4rPFZ9Q85r27unkiNNg8ZOiwZXBHwcA=="
    },
    "node_modules/charenc": {
      "version": "0.0.2",
      "resolved": "https://registry.npmjs.org/charenc/-/charenc-0.0.2.tgz",
      "integrity": "sha512-yrLQ/yVUFXkzg7EDQsPieE/53+0RlaWTs+wBrvW36cyilJ2SaDWfl4Yj7MtLTXleV9uEKefbAGUPv2/iWSooRA==",
      "engines": {
        "node": "*"
      }
    },
    "node_modules/chownr": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/chownr/-/chownr-1.1.4.tgz",
      "integrity": "sha512-jJ0bqzaylmJtVnNgzTeSOs8DPavpbYgEr/b0YL8/2GO3xJEhInFmhKMUnEJQjZumK7KXGFhUy89PrsJWlakBVg==",
      "optional": true
    },
    "node_modules/ci-info": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-2.0.0.tgz",
      "integrity": "sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ=="
    },
    "node_modules/cipher-base": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/cipher-base/-/cipher-base-1.0.4.tgz",
      "integrity": "sha512-Kkht5ye6ZGmwv40uUDZztayT2ThLQGfnj/T71N/XzeZeo3nf8foyW7zGTsPYkEya3m5f3cAypH+qe7YOrM1U2Q==",
      "dependencies": {
        "inherits": "^2.0.1",
        "safe-buffer": "^5.0.1"
      }
    },
    "node_modules/cli-boxes": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/cli-boxes/-/cli-boxes-2.2.1.tgz",
      "integrity": "sha512-y4coMcylgSCdVinjiDBuR8PCC2bLjyGTwEmPb9NHR/QaNU6EUOXcTY/s6VjGMD6ENSEaeQYHCY0GNGS5jfMwPw==",
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/cli-cursor": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/cli-cursor/-/cli-cursor-4.0.0.tgz",
      "integrity": "sha512-VGtlMu3x/4DOtIUwEkRezxUZ2lBacNJCHash0N0WeZDBS+7Ux1dm3XWAgWYxLJFMMdOeXMHXorshEFhbMSGelg==",
      "dependencies": {
        "restore-cursor": "^4.0.0"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/cli-spinners": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/cli-spinners/-/cli-spinners-2.7.0.tgz",
      "integrity": "sha512-qu3pN8Y3qHNgE2AFweciB1IfMnmZ/fsNTEE+NOFjmGB2F/7rLhnhzppvpCnN4FovtP26k8lHyy9ptEbNwWFLzw==",
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/cli-width": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/cli-width/-/cli-width-4.0.0.tgz",
      "integrity": "sha512-ZksGS2xpa/bYkNzN3BAw1wEjsLV/ZKOf/CCrJ/QOBsxx6fOARIkwTutxp1XIOIohi6HKmOFjMoK/XaqDVUpEEw==",
      "engines": {
        "node": ">= 12"
      }
    },
    "node_modules/cliui": {
      "version": "7.0.4",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-7.0.4.tgz",
      "integrity": "sha512-OcRE68cOsVMXp1Yvonl/fzkQOyjLSu/8bhPDfQt0e0/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==",
      "dependencies": {
        "string-width": "^4.2.0",
        "strip-ansi": "^6.0.0",
        "wrap-ansi": "^7.0.0"
      }
    },
    "node_modules/cliui/node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/cliui/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/cliui/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/clone": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/clone/-/clone-1.0.4.tgz",
      "integrity": "sha512-JQHZ2QMW6l3aH/j6xCqQThY/9OH4D/9ls34cgkUBiEeocRTU04tHfKPBsUK1PqZCUQM7GiA0IIXJSuXHI64Kbg==",
      "engines": {
        "node": ">=0.8"
      }
    },
    "node_modules/clone-response": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/clone-response/-/clone-response-1.0.3.tgz",
      "integrity": "sha512-ROoL94jJH2dUVML2Y/5PEDNaSHgeOdSDicUyS7izcF63G6sTc/FTjLub4b8Il9S8S0beOfYt0TaA5qvFK+w0wA==",
      "dependencies": {
        "mimic-response": "^1.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/clone-response/node_modules/mimic-response": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-1.0.1.tgz",
      "integrity": "sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/code-point-at": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/code-point-at/-/code-point-at-1.1.0.tgz",
      "integrity": "sha512-RpAVKQA5T63xEj6/giIbUEtZwJ4UFIc3ZtvEkiaUERylqe8xb5IvqcgOurZLahv93CLKfxcw5YI+DZcUBRyLXA==",
      "optional": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/color-convert": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
      "dependencies": {
        "color-name": "~1.1.4"
      },
      "engines": {
        "node": ">=7.0.0"
      }
    },
    "node_modules/color-name": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA=="
    },
    "node_modules/combined-stream": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
      "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
      "dependencies": {
        "delayed-stream": "~1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/commondir": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/commondir/-/commondir-1.0.1.tgz",
      "integrity": "sha512-W9pAhw0ja1Edb5GVdIF1mjZw/ASI0AlShXM83UUGe2DVr5TdAPEA1OA8m/g8zWp9x6On7gqufY+FatDbC3MDQg=="
    },
    "node_modules/component-type": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/component-type/-/component-type-1.2.1.tgz",
      "integrity": "sha512-Kgy+2+Uwr75vAi6ChWXgHuLvd+QLD7ssgpaRq2zCvt80ptvAfMc/hijcJxXkBa2wMlEZcJvC2H8Ubo+A9ATHIg=="
    },
    "node_modules/concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg=="
    },
    "node_modules/configstore": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/configstore/-/configstore-5.0.1.tgz",
      "integrity": "sha512-aMKprgk5YhBNyH25hj8wGt2+D52Sw1DRRIzqBwLp2Ya9mFmY8KPvvtvmna8SxVR9JMZ4kzMD68N22vlaRpkeFA==",
      "dependencies": {
        "dot-prop": "^5.2.0",
        "graceful-fs": "^4.1.2",
        "make-dir": "^3.0.0",
        "unique-string": "^2.0.0",
        "write-file-atomic": "^3.0.0",
        "xdg-basedir": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/console-control-strings": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/console-control-strings/-/console-control-strings-1.1.0.tgz",
      "integrity": "sha512-ty/fTekppD2fIwRvnZAVdeOiGd1c7YXEixbgJTNzqcxJWKQnjJ/V1bNEEE6hygpM3WjwHFUVK6HTjWSzV4a8sQ==",
      "optional": true
    },
    "node_modules/convert-source-map": {
      "version": "1.9.0",
      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-1.9.0.tgz",
      "integrity": "sha512-ASFBup0Mz1uyiIjANan1jzLQami9z1PoYSZCiiYW2FczPbenXc45FZdBZLzOT+r6+iciuEModtmCti+hjaAk0A=="
    },
    "node_modules/core-util-is": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.3.tgz",
      "integrity": "sha512-ZQBvi1DcpJ4GDqanjucZ2Hj3wEO5pZDS89BWbkcrvdxksJorwUDDZamX9ldFkp9aw2lmBDLgkObEA4DWNJ9FYQ==",
      "optional": true
    },
    "node_modules/create-hash": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/create-hash/-/create-hash-1.2.0.tgz",
      "integrity": "sha512-z00bCGNHDG8mHAkP7CtT1qVu+bFQUPjYq/4Iv3C3kWjTFV10zIjfSoeqXo9Asws8gwSHDGj/hl2u4OGIjapeCg==",
      "dependencies": {
        "cipher-base": "^1.0.1",
        "inherits": "^2.0.1",
        "md5.js": "^1.3.4",
        "ripemd160": "^2.0.1",
        "sha.js": "^2.4.0"
      }
    },
    "node_modules/create-hmac": {
      "version": "1.1.7",
      "resolved": "https://registry.npmjs.org/create-hmac/-/create-hmac-1.1.7.tgz",
      "integrity": "sha512-MJG9liiZ+ogc4TzUwuvbER1JRdgvUFSB5+VR/g5h82fGaIRWMWddtKBHi7/sVhfjQZ6SehlyhvQYrcYkaUIpLg==",
      "dependencies": {
        "cipher-base": "^1.0.3",
        "create-hash": "^1.1.0",
        "inherits": "^2.0.1",
        "ripemd160": "^2.0.0",
        "safe-buffer": "^5.0.1",
        "sha.js": "^2.4.8"
      }
    },
    "node_modules/crypt": {
      "version": "0.0.2",
      "resolved": "https://registry.npmjs.org/crypt/-/crypt-0.0.2.tgz",
      "integrity": "sha512-mCxBlsHFYh9C+HVpiEacem8FEBnMXgU9gy4zmNC+SXAZNB/1idgp/aulFJ4FgCi7GPEVbfyng092GqL2k2rmow==",
      "engines": {
        "node": "*"
      }
    },
    "node_modules/crypto-random-string": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/crypto-random-string/-/crypto-random-string-2.0.0.tgz",
      "integrity": "sha512-v1plID3y9r/lPhviJ1wrXpLeyUIGAZ2SHNYTEapm7/8A9nLPoyvVp3RK/EPFqn5kEznyWgYZNsRtYYIWbuG8KA==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/debug": {
      "version": "4.3.4",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.4.tgz",
      "integrity": "sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==",
      "dependencies": {
        "ms": "2.1.2"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/debug/node_modules/ms": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
      "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
    },
    "node_modules/decode-uri-component": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/decode-uri-component/-/decode-uri-component-0.2.0.tgz",
      "integrity": "sha512-hjf+xovcEn31w/EUYdTXQh/8smFL/dzYjohQGEIgjyNavaJfBY2p5F527Bo1VPATxv0VYTUC2bOcXvqFwk78Og==",
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/decompress-response": {
      "version": "4.2.1",
      "resolved": "https://registry.npmjs.org/decompress-response/-/decompress-response-4.2.1.tgz",
      "integrity": "sha512-jOSne2qbyE+/r8G1VU+G/82LBs2Fs4LAsTiLSHOCOMZQl2OKZ6i8i4IyHemTe+/yIXOtTcRQMzPcgyhoFlqPkw==",
      "optional": true,
      "dependencies": {
        "mimic-response": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/deep-extend": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/deep-extend/-/deep-extend-0.6.0.tgz",
      "integrity": "sha512-LOHxIOaPYdHlJRtCQfDIVZtfw/ufM8+rVj649RIHzcm/vGwQRXFt6OPqIFWsm2XEMrNIEtWR64sY1LEKD2vAOA==",
      "engines": {
        "node": ">=4.0.0"
      }
    },
    "node_modules/deep-is": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz",
      "integrity": "sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ=="
    },
    "node_modules/deepmerge": {
      "version": "4.2.2",
      "resolved": "https://registry.npmjs.org/deepmerge/-/deepmerge-4.2.2.tgz",
      "integrity": "sha512-FJ3UgI4gIl+PHZm53knsuSFpE+nESMr7M4v9QcgB7S63Kj/6WqMiFQJpBBYz1Pt+66bZpP3Q7Lye0Oo9MPKEdg==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/defaults": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/defaults/-/defaults-1.0.4.tgz",
      "integrity": "sha512-eFuaLoy/Rxalv2kr+lqMlUnrDWV+3j4pljOIJgLIhI058IQfWJ7vXhyEIHu+HtC738klGALYxOKDO0bQP3tg8A==",
      "dependencies": {
        "clone": "^1.0.2"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/defer-to-connect": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/defer-to-connect/-/defer-to-connect-1.1.3.tgz",
      "integrity": "sha512-0ISdNousHvZT2EiFlZeZAHBUvSxmKswVCEf8hW7KWgG4a8MVEu/3Vb6uWYozkjylyCxe0JBIiRB1jV45S70WVQ=="
    },
    "node_modules/define-lazy-prop": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/define-lazy-prop/-/define-lazy-prop-2.0.0.tgz",
      "integrity": "sha512-Ds09qNh8yw3khSjiJjiUInaGX9xlqZDY7JVryGxdxV7NPeuqQfplOpQ66yJFZut3jLa5zOwkXw1g9EI2uKh4Og==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/delayed-stream": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
      "integrity": "sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==",
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/delegates": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/delegates/-/delegates-1.0.0.tgz",
      "integrity": "sha512-bd2L678uiWATM6m5Z1VzNCErI3jiGzt6HGY8OVICs40JQq/HALfbyNJmp0UDakEY4pMMaN0Ly5om/B1VI/+xfQ==",
      "optional": true
    },
    "node_modules/depd": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz",
      "integrity": "sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/detect-libc": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/detect-libc/-/detect-libc-1.0.3.tgz",
      "integrity": "sha512-pGjwhsmsp4kL2RTz08wcOlGN83otlqHeD/Z5T8GXZB+/YcpQ/dgo+lbU8ZsGxV0HIvqqxo9l7mqYwyYMD9bKDg==",
      "optional": true,
      "bin": {
        "detect-libc": "bin/detect-libc.js"
      },
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/dot-prop": {
      "version": "5.3.0",
      "resolved": "https://registry.npmjs.org/dot-prop/-/dot-prop-5.3.0.tgz",
      "integrity": "sha512-QM8q3zDe58hqUqjraQOmzZ1LIH9SWQJTlEKCH4kJ2oQvLZk7RbQXvtDM2XEq3fwkV9CCvvH4LA0AV+ogFsBM2Q==",
      "dependencies": {
        "is-obj": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/duplexer3": {
      "version": "0.1.5",
      "resolved": "https://registry.npmjs.org/duplexer3/-/duplexer3-0.1.5.tgz",
      "integrity": "sha512-1A8za6ws41LQgv9HrE/66jyC5yuSjQ3L/KOpFtoBilsAK2iA2wuS5rTt1OCzIvtS2V7nVmedsUU+DGRcjBmOYA=="
    },
    "node_modules/eastasianwidth": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz",
      "integrity": "sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA=="
    },
    "node_modules/electron-to-chromium": {
      "version": "1.4.284",
      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.4.284.tgz",
      "integrity": "sha512-M8WEXFuKXMYMVr45fo8mq0wUrrJHheiKZf6BArTKk9ZBYCKJEOU5H8cdWgDT+qCVZf7Na4lVUaZsA+h6uA9+PA=="
    },
    "node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A=="
    },
    "node_modules/end-of-stream": {
      "version": "1.4.4",
      "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz",
      "integrity": "sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==",
      "dependencies": {
        "once": "^1.4.0"
      }
    },
    "node_modules/error-polyfill": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/error-polyfill/-/error-polyfill-0.1.3.tgz",
      "integrity": "sha512-XHJk60ufE+TG/ydwp4lilOog549iiQF2OAPhkk9DdiYWMrltz5yhDz/xnKuenNwP7gy3dsibssO5QpVhkrSzzg==",
      "dependencies": {
        "capability": "^0.2.5",
        "o3": "^1.0.3",
        "u3": "^0.1.1"
      }
    },
    "node_modules/escalade": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.1.1.tgz",
      "integrity": "sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/escape-goat": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/escape-goat/-/escape-goat-2.1.1.tgz",
      "integrity": "sha512-8/uIhbG12Csjy2JEW7D9pHbreaVaS/OpN3ycnyvElTdwM5n6GY6W6e2IPemfvGZeUMqZ9A/3GqIZMgKnBhAw/Q==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/escape-string-regexp": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-2.0.0.tgz",
      "integrity": "sha512-UpzcLCXolUWcNu5HtVMHYdXJjArjsF9C0aNnquZYY4uW/Vu0miy5YoWvbV345HauVvcAUnpRuhMMcqTcGOY2+w==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/estree-walker": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/estree-walker/-/estree-walker-2.0.2.tgz",
      "integrity": "sha512-Rfkk/Mp/DL7JVje3u18FxFujQlTNR2q6QfMSMB7AvCBx91NGj/ba3kCfza0f6dVDbw7YlRf/nDrn7pQrCCyQ/w=="
    },
    "node_modules/events": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/events/-/events-3.3.0.tgz",
      "integrity": "sha512-mQw+2fkQbALzQ7V0MY0IqdnXNOeTtP4r0lN9z7AAawCXgqea7bDii20AYrIBrFd/Hx0M2Ocz6S111CaFkUcb0Q==",
      "optional": true,
      "engines": {
        "node": ">=0.8.x"
      }
    },
    "node_modules/expand-template": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/expand-template/-/expand-template-2.0.3.tgz",
      "integrity": "sha512-XYfuKMvj4O35f/pOXLObndIRvyQ+/+6AhODh+OKWj9S9498pHHn/IMszH+gt0fBCRWMNfk1ZSp5x3AifmnI2vg==",
      "optional": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/external-editor": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/external-editor/-/external-editor-3.1.0.tgz",
      "integrity": "sha512-hMQ4CX1p1izmuLYyZqLMO/qGNw10wSv9QDCPfzXfyFrOaCSSoRfqE1Kf1s5an66J5JZC62NewG+mK49jOCtQew==",
      "dependencies": {
        "chardet": "^0.7.0",
        "iconv-lite": "^0.4.24",
        "tmp": "^0.0.33"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/figures": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/figures/-/figures-5.0.0.tgz",
      "integrity": "sha512-ej8ksPF4x6e5wvK9yevct0UCXh8TTFlWGVLlgjZuoBH1HwjIfKE/IdL5mq89sFA7zELi1VhKpmtDnrs7zWyeyg==",
      "dependencies": {
        "escape-string-regexp": "^5.0.0",
        "is-unicode-supported": "^1.2.0"
      },
      "engines": {
        "node": ">=14"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/figures/node_modules/escape-string-regexp": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-5.0.0.tgz",
      "integrity": "sha512-/veY75JbMK4j1yjvuUxuVsiS/hr/4iHs9FTT6cgTexxdE0Ly/glccBAkloH/DofkjRbZU3bnoj38mOmhkZ0lHw==",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/file-uri-to-path": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/file-uri-to-path/-/file-uri-to-path-1.0.0.tgz",
      "integrity": "sha512-0Zt+s3L7Vf1biwWZ29aARiVYLx7iMGnEUl9x33fbB/j3jR81u/O2LbqK+Bm1CDSNDKVtJ/YjwY7TUd5SkeLQLw==",
      "optional": true
    },
    "node_modules/fill-range": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz",
      "integrity": "sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==",
      "dependencies": {
        "to-regex-range": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/flagged-respawn": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/flagged-respawn/-/flagged-respawn-1.0.1.tgz",
      "integrity": "sha512-lNaHNVymajmk0OJMBn8fVUAU1BtDeKIqKoVhk4xAALB57aALg6b4W0MfJ/cUE0g9YBXy5XhSlPIpYIJ7HaY/3Q==",
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/follow-redirects": {
      "version": "1.15.2",
      "resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.15.2.tgz",
      "integrity": "sha512-VQLG33o04KaQ8uYi2tVNbdrWp1QWxNNea+nmIB4EVM28v0hmP17z7aG1+wAkNzVq4KeXTq3221ye5qTJP91JwA==",
      "funding": [
        {
          "type": "individual",
          "url": "https://github.com/sponsors/RubenVerborgh"
        }
      ],
      "engines": {
        "node": ">=4.0"
      },
      "peerDependenciesMeta": {
        "debug": {
          "optional": true
        }
      }
    },
    "node_modules/form-data": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/form-data/-/form-data-4.0.0.tgz",
      "integrity": "sha512-ETEklSGi5t0QMZuiXoA/Q6vcnxcLQP5vdugSpuAyi6SVGi2clPPp+xgEhuMaHC+zGgn31Kd235W35f7Hykkaww==",
      "dependencies": {
        "asynckit": "^0.4.0",
        "combined-stream": "^1.0.8",
        "mime-types": "^2.1.12"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/fs-constants": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs-constants/-/fs-constants-1.0.0.tgz",
      "integrity": "sha512-y6OAwoSIf7FyjMIv94u+b5rdheZEjzR63GTyZJm5qh4Bi+2YgwLCcI/fPFZkL5PSixOt6ZNKm+w+Hfp/Bciwow==",
      "optional": true
    },
    "node_modules/fs.realpath": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
      "integrity": "sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw=="
    },
    "node_modules/fsevents": {
      "version": "2.3.2",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.2.tgz",
      "integrity": "sha512-xiqMQR4xAeHTuB9uWm+fFRcIOgKBMiOBP+eXiyT7jsgVCq1bkVygt00oASowB7EdtpOHaaPgKt812P9ab+DDKA==",
      "hasInstallScript": true,
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
      }
    },
    "node_modules/function-bind": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz",
      "integrity": "sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A=="
    },
    "node_modules/gauge": {
      "version": "2.7.4",
      "resolved": "https://registry.npmjs.org/gauge/-/gauge-2.7.4.tgz",
      "integrity": "sha512-14x4kjc6lkD3ltw589k0NrPD6cCNTD6CWoVUNpB85+DrtONoZn+Rug6xZU5RvSC4+TZPxA5AnBibQYAvZn41Hg==",
      "optional": true,
      "dependencies": {
        "aproba": "^1.0.3",
        "console-control-strings": "^1.0.0",
        "has-unicode": "^2.0.0",
        "object-assign": "^4.1.0",
        "signal-exit": "^3.0.0",
        "string-width": "^1.0.1",
        "strip-ansi": "^3.0.1",
        "wide-align": "^1.1.0"
      }
    },
    "node_modules/gensync": {
      "version": "1.0.0-beta.2",
      "resolved": "https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz",
      "integrity": "sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/get-caller-file": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz",
      "integrity": "sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==",
      "engines": {
        "node": "6.* || 8.* || >= 10.*"
      }
    },
    "node_modules/get-stream": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-4.1.0.tgz",
      "integrity": "sha512-GMat4EJ5161kIy2HevLlr4luNjBgvmj413KaQA7jt4V8B4RDsfpHk7WQ9GVqfYyyx8OS/L66Kox+rJRNklLK7w==",
      "dependencies": {
        "pump": "^3.0.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/github-from-package": {
      "version": "0.0.0",
      "resolved": "https://registry.npmjs.org/github-from-package/-/github-from-package-0.0.0.tgz",
      "integrity": "sha512-SyHy3T1v2NUXn29OsWdxmK6RwHD+vkj3v8en8AOBZ1wBQ/hCAQ5bAQTD02kW4W9tUp/3Qh6J8r9EvntiyCmOOw==",
      "optional": true
    },
    "node_modules/glob": {
      "version": "7.2.3",
      "resolved": "https://registry.npmjs.org/glob/-/glob-7.2.3.tgz",
      "integrity": "sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==",
      "dependencies": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^3.1.1",
        "once": "^1.3.0",
        "path-is-absolute": "^1.0.0"
      },
      "engines": {
        "node": "*"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/global-dirs": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/global-dirs/-/global-dirs-3.0.0.tgz",
      "integrity": "sha512-v8ho2DS5RiCjftj1nD9NmnfaOzTdud7RRnVd9kFNOjqZbISlx5DQ+OrTkywgd0dIt7oFCvKetZSHoHcP3sDdiA==",
      "dependencies": {
        "ini": "2.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/global-dirs/node_modules/ini": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ini/-/ini-2.0.0.tgz",
      "integrity": "sha512-7PnF4oN3CvZF23ADhA5wRaYEQpJ8qygSkbtTXWBeXWXmEVRXK+1ITciHWwHhsjv1TmW0MgacIv6hEi5pX5NQdA==",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/globals": {
      "version": "11.12.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-11.12.0.tgz",
      "integrity": "sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/got": {
      "version": "9.6.0",
      "resolved": "https://registry.npmjs.org/got/-/got-9.6.0.tgz",
      "integrity": "sha512-R7eWptXuGYxwijs0eV+v3o6+XH1IqVK8dJOEecQfTmkncw9AV4dcw/Dhxi8MdlqPthxxpZyizMzyg8RTmEsG+Q==",
      "dependencies": {
        "@sindresorhus/is": "^0.14.0",
        "@szmarczak/http-timer": "^1.1.2",
        "cacheable-request": "^6.0.0",
        "decompress-response": "^3.3.0",
        "duplexer3": "^0.1.4",
        "get-stream": "^4.1.0",
        "lowercase-keys": "^1.0.1",
        "mimic-response": "^1.0.1",
        "p-cancelable": "^1.0.0",
        "to-readable-stream": "^1.0.0",
        "url-parse-lax": "^3.0.0"
      },
      "engines": {
        "node": ">=8.6"
      }
    },
    "node_modules/got/node_modules/decompress-response": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/decompress-response/-/decompress-response-3.3.0.tgz",
      "integrity": "sha512-BzRPQuY1ip+qDonAOz42gRm/pg9F768C+npV/4JOsxRC2sq+Rlk+Q4ZCAsOhnIaMrgarILY+RMUIvMmmX1qAEA==",
      "dependencies": {
        "mimic-response": "^1.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/got/node_modules/mimic-response": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-1.0.1.tgz",
      "integrity": "sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/graceful-fs": {
      "version": "4.2.10",
      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.10.tgz",
      "integrity": "sha512-9ByhssR2fPVsNZj478qUUbKfmL0+t5BDVyjShtyZZLiK7ZDAArFFfopyOTj0M05wE2tJPisA4iTnnXl2YoPvOA=="
    },
    "node_modules/has": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/has/-/has-1.0.3.tgz",
      "integrity": "sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==",
      "dependencies": {
        "function-bind": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4.0"
      }
    },
    "node_modules/has-flag": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/has-unicode": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/has-unicode/-/has-unicode-2.0.1.tgz",
      "integrity": "sha512-8Rf9Y83NBReMnx0gFzA8JImQACstCYWUplepDa9xprwwtmgEZUF0h/i5xSA625zB/I37EtrswSST6OXxwaaIJQ==",
      "optional": true
    },
    "node_modules/has-yarn": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/has-yarn/-/has-yarn-2.1.0.tgz",
      "integrity": "sha512-UqBRqi4ju7T+TqGNdqAO0PaSVGsDGJUBQvk9eUWNGRY1CFGDzYhLWoM7JQEemnlvVcv/YEmc2wNW8BC24EnUsw==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/hash-base": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/hash-base/-/hash-base-3.1.0.tgz",
      "integrity": "sha512-1nmYp/rhMDiE7AYkDw+lLwlAzz0AntGIe51F3RfFfEqyQ3feY2eI/NcwC6umIQVOASPMsWJLJScWKSSvzL9IVA==",
      "dependencies": {
        "inherits": "^2.0.4",
        "readable-stream": "^3.6.0",
        "safe-buffer": "^5.2.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/homedir-polyfill": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/homedir-polyfill/-/homedir-polyfill-1.0.3.tgz",
      "integrity": "sha512-eSmmWE5bZTK2Nou4g0AI3zZ9rswp7GRKoKXS1BLUkvPviOqs4YTN1djQIqrXy9k5gEtdLPy86JjRwsNM9tnDcA==",
      "dependencies": {
        "parse-passwd": "^1.0.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/http-cache-semantics": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/http-cache-semantics/-/http-cache-semantics-4.1.0.tgz",
      "integrity": "sha512-carPklcUh7ROWRK7Cv27RPtdhYhUsela/ue5/jKzjegVvXDqM2ILE9Q2BGn9JZJh1g87cp56su/FgQSzcWS8cQ=="
    },
    "node_modules/http-errors": {
      "version": "1.8.1",
      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.8.1.tgz",
      "integrity": "sha512-Kpk9Sm7NmI+RHhnj6OIWDI1d6fIoFAtFt9RLaTMRlg/8w49juAStsrBgp0Dp4OdxdVbRIeKhtCUvoi/RuAhO4g==",
      "dependencies": {
        "depd": "~1.1.2",
        "inherits": "2.0.4",
        "setprototypeof": "1.2.0",
        "statuses": ">= 1.5.0 < 2",
        "toidentifier": "1.0.1"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/http-errors/node_modules/depd": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/depd/-/depd-1.1.2.tgz",
      "integrity": "sha512-7emPTl6Dpo6JRXOXjLRxck+FlLRX5847cLKEn00PLAgc3g2hTZZgr+e4c2v6QpSmLeFP3n5yUo7ft6avBK/5jQ==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/iconv-lite": {
      "version": "0.4.24",
      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz",
      "integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==",
      "dependencies": {
        "safer-buffer": ">= 2.1.2 < 3"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/ieee754": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/ieee754/-/ieee754-1.2.1.tgz",
      "integrity": "sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ]
    },
    "node_modules/import-lazy": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/import-lazy/-/import-lazy-2.1.0.tgz",
      "integrity": "sha512-m7ZEHgtw69qOGw+jwxXkHlrlIPdTGkyh66zXZ1ajZbxkDBNjSY/LGbmjc7h0s2ELsUDTAhFr55TrPSSqJGPG0A==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/imurmurhash": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
      "integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==",
      "engines": {
        "node": ">=0.8.19"
      }
    },
    "node_modules/inflight": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
      "integrity": "sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==",
      "dependencies": {
        "once": "^1.3.0",
        "wrappy": "1"
      }
    },
    "node_modules/inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ=="
    },
    "node_modules/ini": {
      "version": "1.3.8",
      "resolved": "https://registry.npmjs.org/ini/-/ini-1.3.8.tgz",
      "integrity": "sha512-JV/yugV2uzW5iMRSiZAyDtQd+nxtUnjeLt0acNdw98kKLrvuRVyB80tsREOE7yvGVgalhZ6RNXCmEHkUKBKxew=="
    },
    "node_modules/inquirer": {
      "version": "9.1.4",
      "resolved": "https://registry.npmjs.org/inquirer/-/inquirer-9.1.4.tgz",
      "integrity": "sha512-9hiJxE5gkK/cM2d1mTEnuurGTAoHebbkX0BYl3h7iEg7FYfuNIom+nDfBCSWtvSnoSrWCeBxqqBZu26xdlJlXA==",
      "dependencies": {
        "ansi-escapes": "^6.0.0",
        "chalk": "^5.1.2",
        "cli-cursor": "^4.0.0",
        "cli-width": "^4.0.0",
        "external-editor": "^3.0.3",
        "figures": "^5.0.0",
        "lodash": "^4.17.21",
        "mute-stream": "0.0.8",
        "ora": "^6.1.2",
        "run-async": "^2.4.0",
        "rxjs": "^7.5.7",
        "string-width": "^5.1.2",
        "strip-ansi": "^7.0.1",
        "through": "^2.3.6",
        "wrap-ansi": "^8.0.1"
      },
      "engines": {
        "node": ">=12.0.0"
      }
    },
    "node_modules/inquirer/node_modules/ansi-regex": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.0.1.tgz",
      "integrity": "sha512-n5M855fKb2SsfMIiFFoVrABHJC8QtHwVx+mHWP3QcEqBHYienj5dHSgjbxtC0WEZXYt4wcD6zrQElDPhFuZgfA==",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-regex?sponsor=1"
      }
    },
    "node_modules/inquirer/node_modules/ansi-styles": {
      "version": "6.2.1",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.2.1.tgz",
      "integrity": "sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/inquirer/node_modules/chalk": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-5.1.2.tgz",
      "integrity": "sha512-E5CkT4jWURs1Vy5qGJye+XwCkNj7Od3Af7CP6SujMetSMkLs8Do2RWJK5yx1wamHV/op8Rz+9rltjaTQWDnEFQ==",
      "engines": {
        "node": "^12.17.0 || ^14.13 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/chalk/chalk?sponsor=1"
      }
    },
    "node_modules/inquirer/node_modules/emoji-regex": {
      "version": "9.2.2",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz",
      "integrity": "sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg=="
    },
    "node_modules/inquirer/node_modules/rxjs": {
      "version": "7.5.7",
      "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-7.5.7.tgz",
      "integrity": "sha512-z9MzKh/UcOqB3i20H6rtrlaE/CgjLOvheWK/9ILrbhROGTweAi1BaFsTT9FbwZi5Trr1qNRs+MXkhmR06awzQA==",
      "dependencies": {
        "tslib": "^2.1.0"
      }
    },
    "node_modules/inquirer/node_modules/string-width": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz",
      "integrity": "sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==",
      "dependencies": {
        "eastasianwidth": "^0.2.0",
        "emoji-regex": "^9.2.2",
        "strip-ansi": "^7.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/inquirer/node_modules/strip-ansi": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.0.1.tgz",
      "integrity": "sha512-cXNxvT8dFNRVfhVME3JAe98mkXDYN2O1l7jmcwMnOslDeESg1rF/OZMtK0nRAhiari1unG5cD4jG3rapUAkLbw==",
      "dependencies": {
        "ansi-regex": "^6.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/strip-ansi?sponsor=1"
      }
    },
    "node_modules/inquirer/node_modules/tslib": {
      "version": "2.4.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.4.1.tgz",
      "integrity": "sha512-tGyy4dAjRIEwI7BzsB0lynWgOpfqjUdq91XXAlIWD2OwKBH7oCl/GZG/HT4BOHrTlPMOASlMQ7veyTqpmRcrNA=="
    },
    "node_modules/inquirer/node_modules/wrap-ansi": {
      "version": "8.0.1",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-8.0.1.tgz",
      "integrity": "sha512-QFF+ufAqhoYHvoHdajT/Po7KoXVBPXS2bgjIam5isfWJPfIOnQZ50JtUiVvCv/sjgacf3yRrt2ZKUZ/V4itN4g==",
      "dependencies": {
        "ansi-styles": "^6.1.0",
        "string-width": "^5.0.1",
        "strip-ansi": "^7.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/ip-regex": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ip-regex/-/ip-regex-4.3.0.tgz",
      "integrity": "sha512-B9ZWJxHHOHUhUjCPrMpLD4xEq35bUTClHM1S6CBU5ixQnkZmwipwgc96vAd7AAGM9TGHvJR+Uss+/Ak6UphK+Q==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-buffer": {
      "version": "1.1.6",
      "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",
      "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w=="
    },
    "node_modules/is-builtin-module": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/is-builtin-module/-/is-builtin-module-3.2.0.tgz",
      "integrity": "sha512-phDA4oSGt7vl1n5tJvTWooWWAsXLY+2xCnxNqvKhGEzujg+A43wPlPOyDg3C8XQHN+6k/JTQWJ/j0dQh/qr+Hw==",
      "dependencies": {
        "builtin-modules": "^3.3.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/is-ci": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/is-ci/-/is-ci-2.0.0.tgz",
      "integrity": "sha512-YfJT7rkpQB0updsdHLGWrvhBJfcfzNNawYDNIyQXJz0IViGf75O8EBPKSdvw2rF+LGCsX4FZ8tcr3b19LcZq4w==",
      "dependencies": {
        "ci-info": "^2.0.0"
      },
      "bin": {
        "is-ci": "bin.js"
      }
    },
    "node_modules/is-core-module": {
      "version": "2.11.0",
      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.11.0.tgz",
      "integrity": "sha512-RRjxlvLDkD1YJwDbroBHMb+cukurkDWNyHx7D3oNB5x9rb5ogcksMC5wHCadcXoo67gVr/+3GFySh3134zi6rw==",
      "dependencies": {
        "has": "^1.0.3"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-docker": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/is-docker/-/is-docker-2.2.1.tgz",
      "integrity": "sha512-F+i2BKsFrH66iaUFc0woD8sLy8getkwTwtOBjvs56Cx4CgJDeKQeqfz8wAYiSb8JOprWhHH5p77PbmYCvvUuXQ==",
      "bin": {
        "is-docker": "cli.js"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/is-fullwidth-code-point": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz",
      "integrity": "sha512-1pqUqRjkhPJ9miNq9SwMfdvi6lBJcd6eFxvfaivQhaH3SgisfiuudvFntdKOmxuee/77l+FPjKrQjWvmPjWrRw==",
      "optional": true,
      "dependencies": {
        "number-is-nan": "^1.0.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-installed-globally": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/is-installed-globally/-/is-installed-globally-0.4.0.tgz",
      "integrity": "sha512-iwGqO3J21aaSkC7jWnHP/difazwS7SFeIqxv6wEtLU8Y5KlzFTjyqcSIT0d8s4+dDhKytsk9PJZ2BkS5eZwQRQ==",
      "dependencies": {
        "global-dirs": "^3.0.0",
        "is-path-inside": "^3.0.2"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/is-interactive": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/is-interactive/-/is-interactive-2.0.0.tgz",
      "integrity": "sha512-qP1vozQRI+BMOPcjFzrjXuQvdak2pHNUMZoeG2eRbiSqyvbEf/wQtEOTOX1guk6E3t36RkaqiSt8A/6YElNxLQ==",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/is-module": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-module/-/is-module-1.0.0.tgz",
      "integrity": "sha512-51ypPSPCoTEIN9dy5Oy+h4pShgJmPCygKfyRCISBI+JoWT/2oJvK8QPxmwv7b/p239jXrm9M1mlQbyKJ5A152g=="
    },
    "node_modules/is-npm": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/is-npm/-/is-npm-5.0.0.tgz",
      "integrity": "sha512-WW/rQLOazUq+ST/bCAVBp/2oMERWLsR7OrKyt052dNDk4DHcDE0/7QSXITlmi+VBcV13DfIbysG3tZJm5RfdBA==",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/is-number": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
      "engines": {
        "node": ">=0.12.0"
      }
    },
    "node_modules/is-obj": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/is-obj/-/is-obj-2.0.0.tgz",
      "integrity": "sha512-drqDG3cbczxxEJRoOXcOjtdp1J/lyp1mNn0xaznRs8+muBhgQcrnbspox5X5fOw0HnMnbfDzvnEMEtqDEJEo8w==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-path-inside": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.3.tgz",
      "integrity": "sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-reference": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/is-reference/-/is-reference-1.2.1.tgz",
      "integrity": "sha512-U82MsXXiFIrjCK4otLT+o2NA2Cd2g5MLoOVXUZjIOhLurrRxpEXzI8O0KZHr3IjLvlAH1kTPYSuqer5T9ZVBKQ==",
      "dependencies": {
        "@types/estree": "*"
      }
    },
    "node_modules/is-retry-allowed": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/is-retry-allowed/-/is-retry-allowed-1.2.0.tgz",
      "integrity": "sha512-RUbUeKwvm3XG2VYamhJL1xFktgjvPzL0Hq8C+6yrWIswDy3BIXGqCxhxkc30N9jqK311gVU137K8Ei55/zVJRg==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-typedarray": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz",
      "integrity": "sha512-cyA56iCMHAh5CdzjJIa4aohJyeO1YbwLi3Jc35MmRU6poroFjIGZzUzupGiRPOjgHg9TLu43xbpwXk523fMxKA=="
    },
    "node_modules/is-unicode-supported": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/is-unicode-supported/-/is-unicode-supported-1.3.0.tgz",
      "integrity": "sha512-43r2mRvz+8JRIKnWJ+3j8JtjRKZ6GmjzfaE/qiBJnikNnYv/6bagRJ1kUhNk8R5EX/GkobD+r+sfxCPJsiKBLQ==",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/is-url": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/is-url/-/is-url-1.2.4.tgz",
      "integrity": "sha512-ITvGim8FhRiYe4IQ5uHSkj7pVaPDrCTkNd3yq3cV7iZAcJdHTUMPMEHcqSOy9xZ9qFenQCvi+2wjH9a1nXqHww=="
    },
    "node_modules/is-wsl": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/is-wsl/-/is-wsl-2.2.0.tgz",
      "integrity": "sha512-fKzAra0rGJUUBwGBgNkHZuToZcn+TtXHpeCgmkMJMMYx1sQDYaCSyjJBSCa2nH1DGm7s3n1oBnohoVTBaN7Lww==",
      "dependencies": {
        "is-docker": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-yarn-global": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/is-yarn-global/-/is-yarn-global-0.3.0.tgz",
      "integrity": "sha512-VjSeb/lHmkoyd8ryPVIKvOCn4D1koMqY+vqyjjUfc3xyKtP4dYOxM44sZrnqQSzSds3xyOrUTLTC9LVCVgLngw=="
    },
    "node_modules/is2": {
      "version": "2.0.9",
      "resolved": "https://registry.npmjs.org/is2/-/is2-2.0.9.tgz",
      "integrity": "sha512-rZkHeBn9Zzq52sd9IUIV3a5mfwBY+o2HePMh0wkGBM4z4qjvy2GwVxQ6nNXSfw6MmVP6gf1QIlWjiOavhM3x5g==",
      "dependencies": {
        "deep-is": "^0.1.3",
        "ip-regex": "^4.1.0",
        "is-url": "^1.2.4"
      },
      "engines": {
        "node": ">=v0.10.0"
      }
    },
    "node_modules/isarray": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
      "integrity": "sha512-VLghIWNM6ELQzo7zwmcg0NmTVyWKYjvIeM83yjp0wRDTmUnrM678fQbcKBo6n2CJEF0szoG//ytg+TKla89ALQ==",
      "optional": true
    },
    "node_modules/jest-environment-node": {
      "version": "27.5.1",
      "resolved": "https://registry.npmjs.org/jest-environment-node/-/jest-environment-node-27.5.1.tgz",
      "integrity": "sha512-Jt4ZUnxdOsTGwSRAfKEnE6BcwsSPNOijjwifq5sDFSA2kesnXTvNqKHYgM0hDq3549Uf/KzdXNYn4wMZJPlFLw==",
      "dependencies": {
        "@jest/environment": "^27.5.1",
        "@jest/fake-timers": "^27.5.1",
        "@jest/types": "^27.5.1",
        "@types/node": "*",
        "jest-mock": "^27.5.1",
        "jest-util": "^27.5.1"
      },
      "engines": {
        "node": "^10.13.0 || ^12.13.0 || ^14.15.0 || >=15.0.0"
      }
    },
    "node_modules/jest-message-util": {
      "version": "27.5.1",
      "resolved": "https://registry.npmjs.org/jest-message-util/-/jest-message-util-27.5.1.tgz",
      "integrity": "sha512-rMyFe1+jnyAAf+NHwTclDz0eAaLkVDdKVHHBFWsBWHnnh5YeJMNWWsv7AbFYXfK3oTqvL7VTWkhNLu1jX24D+g==",
      "dependencies": {
        "@babel/code-frame": "^7.12.13",
        "@jest/types": "^27.5.1",
        "@types/stack-utils": "^2.0.0",
        "chalk": "^4.0.0",
        "graceful-fs": "^4.2.9",
        "micromatch": "^4.0.4",
        "pretty-format": "^27.5.1",
        "slash": "^3.0.0",
        "stack-utils": "^2.0.3"
      },
      "engines": {
        "node": "^10.13.0 || ^12.13.0 || ^14.15.0 || >=15.0.0"
      }
    },
    "node_modules/jest-mock": {
      "version": "27.5.1",
      "resolved": "https://registry.npmjs.org/jest-mock/-/jest-mock-27.5.1.tgz",
      "integrity": "sha512-K4jKbY1d4ENhbrG2zuPWaQBvDly+iZ2yAW+T1fATN78hc0sInwn7wZB8XtlNnvHug5RMwV897Xm4LqmPM4e2Og==",
      "dependencies": {
        "@jest/types": "^27.5.1",
        "@types/node": "*"
      },
      "engines": {
        "node": "^10.13.0 || ^12.13.0 || ^14.15.0 || >=15.0.0"
      }
    },
    "node_modules/jest-util": {
      "version": "27.5.1",
      "resolved": "https://registry.npmjs.org/jest-util/-/jest-util-27.5.1.tgz",
      "integrity": "sha512-Kv2o/8jNvX1MQ0KGtw480E/w4fBCDOnH6+6DmeKi6LZUIlKA5kwY0YNdlzaWTiVgxqAqik11QyxDOKk543aKXw==",
      "dependencies": {
        "@jest/types": "^27.5.1",
        "@types/node": "*",
        "chalk": "^4.0.0",
        "ci-info": "^3.2.0",
        "graceful-fs": "^4.2.9",
        "picomatch": "^2.2.3"
      },
      "engines": {
        "node": "^10.13.0 || ^12.13.0 || ^14.15.0 || >=15.0.0"
      }
    },
    "node_modules/jest-util/node_modules/ci-info": {
      "version": "3.5.0",
      "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-3.5.0.tgz",
      "integrity": "sha512-yH4RezKOGlOhxkmhbeNuC4eYZKAUsEaGtBuBzDDP1eFUKiccDWzBABxBfOx31IDwDIXMTxWuwAxUGModvkbuVw=="
    },
    "node_modules/join-component": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/join-component/-/join-component-1.1.0.tgz",
      "integrity": "sha512-bF7vcQxbODoGK1imE2P9GS9aw4zD0Sd+Hni68IMZLj7zRnquH7dXUmMw9hDI5S/Jzt7q+IyTXN0rSg2GI0IKhQ=="
    },
    "node_modules/js-sha256": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/js-sha256/-/js-sha256-0.9.0.tgz",
      "integrity": "sha512-sga3MHh9sgQN2+pJ9VYZ+1LPwXOxuBJBA5nrR5/ofPfuiJBE2hnjsaN8se8JznOmGLN2p49Pe5U/ttafcs/apA=="
    },
    "node_modules/js-tokens": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ=="
    },
    "node_modules/jsesc": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-2.5.2.tgz",
      "integrity": "sha512-OYu7XEzjkCQ3C5Ps3QIZsQfNpqoJyZZA99wd9aWd05NCtC5pWOkShK2mkL6HXQR6/Cy2lbNdPlZBpuQHXE63gA==",
      "bin": {
        "jsesc": "bin/jsesc"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/json5": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/json5/-/json5-2.2.1.tgz",
      "integrity": "sha512-1hqLFMSrGHRHxav9q9gNjJ5EXznIxGVO09xQRrwplcS8qs28pZ8s8hupZAmqDwZUmVZ2Qb2jnyPOWcDH8m8dlA==",
      "bin": {
        "json5": "lib/cli.js"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/latest-version": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/latest-version/-/latest-version-5.1.0.tgz",
      "integrity": "sha512-weT+r0kTkRQdCdYCNtkMwWXQTMEswKrFBkm4ckQOMVhhqhIMI1UT2hMj+1iigIhgSZm5gTmrRXBNoGUgaTY1xA==",
      "dependencies": {
        "package-json": "^6.3.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/lodash": {
      "version": "4.17.21",
      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",
      "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg=="
    },
    "node_modules/lodash.isstring": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/lodash.isstring/-/lodash.isstring-4.0.1.tgz",
      "integrity": "sha512-0wJxfxH1wgO3GrbuP+dTTk7op+6L41QCXbGINEmD+ny/G/eCqGzxyCsh7159S+mgDDcoarnBw6PC1PS5+wUGgw=="
    },
    "node_modules/log-symbols": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/log-symbols/-/log-symbols-5.1.0.tgz",
      "integrity": "sha512-l0x2DvrW294C9uDCoQe1VSU4gf529FkSZ6leBl4TiqZH/e+0R7hSfHQBNut2mNygDgHwvYHfFLn6Oxb3VWj2rA==",
      "dependencies": {
        "chalk": "^5.0.0",
        "is-unicode-supported": "^1.1.0"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/log-symbols/node_modules/chalk": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-5.1.2.tgz",
      "integrity": "sha512-E5CkT4jWURs1Vy5qGJye+XwCkNj7Od3Af7CP6SujMetSMkLs8Do2RWJK5yx1wamHV/op8Rz+9rltjaTQWDnEFQ==",
      "engines": {
        "node": "^12.17.0 || ^14.13 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/chalk/chalk?sponsor=1"
      }
    },
    "node_modules/lowercase-keys": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-1.0.1.tgz",
      "integrity": "sha512-G2Lj61tXDnVFFOi8VZds+SoQjtQC3dgokKdDG2mTm1tx4m50NUHBOZSBwQQHyy0V12A0JTG4icfZQH+xPyh8VA==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/lru-cache": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz",
      "integrity": "sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==",
      "dependencies": {
        "yallist": "^4.0.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/magic-string": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/magic-string/-/magic-string-0.25.9.tgz",
      "integrity": "sha512-RmF0AsMzgt25qzqqLc1+MbHmhdx0ojF2Fvs4XnOqz2ZOBXzzkEwc/dJQZCYHAn7v1jbVOjAZfK8msRn4BxO4VQ==",
      "dependencies": {
        "sourcemap-codec": "^1.4.8"
      }
    },
    "node_modules/make-dir": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-3.1.0.tgz",
      "integrity": "sha512-g3FeP20LNwhALb/6Cz6Dd4F2ngze0jz7tbzrD2wAV+o9FeNHe4rL+yK2md0J/fiSf1sa1ADhXqi5+oVwOM/eGw==",
      "dependencies": {
        "semver": "^6.0.0"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/make-dir/node_modules/semver": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
      "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/md5": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/md5/-/md5-2.3.0.tgz",
      "integrity": "sha512-T1GITYmFaKuO91vxyoQMFETst+O71VUPEU3ze5GNzDm0OWdP8v1ziTaAEPUr/3kLsY3Sftgz242A1SetQiDL7g==",
      "dependencies": {
        "charenc": "0.0.2",
        "crypt": "0.0.2",
        "is-buffer": "~1.1.6"
      }
    },
    "node_modules/md5.js": {
      "version": "1.3.5",
      "resolved": "https://registry.npmjs.org/md5.js/-/md5.js-1.3.5.tgz",
      "integrity": "sha512-xitP+WxNPcTTOgnTJcrhM0xvdPepipPSf3I8EIpGKeFLjt3PlJLIDG3u8EX53ZIubkb+5U2+3rELYpEhHhzdkg==",
      "dependencies": {
        "hash-base": "^3.0.0",
        "inherits": "^2.0.1",
        "safe-buffer": "^5.1.2"
      }
    },
    "node_modules/micromatch": {
      "version": "4.0.5",
      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.5.tgz",
      "integrity": "sha512-DMy+ERcEW2q8Z2Po+WNXuw3c5YaUSFjAO5GsJqfEl7UjvtIuFKO6ZrKvcItdy98dwFI2N1tg3zNIdKaQT+aNdA==",
      "dependencies": {
        "braces": "^3.0.2",
        "picomatch": "^2.3.1"
      },
      "engines": {
        "node": ">=8.6"
      }
    },
    "node_modules/mime-db": {
      "version": "1.52.0",
      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
      "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/mime-types": {
      "version": "2.1.35",
      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
      "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
      "dependencies": {
        "mime-db": "1.52.0"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/mimic-response": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-2.1.0.tgz",
      "integrity": "sha512-wXqjST+SLt7R009ySCglWBCFpjUygmCIfD790/kVbiGmUgfYGuB14PiTd5DwVxSV4NcYHjzMkoj5LjQZwTQLEA==",
      "optional": true,
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/minimist": {
      "version": "1.2.7",
      "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.7.tgz",
      "integrity": "sha512-bzfL1YUZsP41gmu/qjrEk0Q6i2ix/cVeAhbCbqH9u3zYutS1cLg00qhrD0M2MVdCcx4Sc0UpP2eBWo9rotpq6g==",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/mkdirp-classic": {
      "version": "0.5.3",
      "resolved": "https://registry.npmjs.org/mkdirp-classic/-/mkdirp-classic-0.5.3.tgz",
      "integrity": "sha512-gKLcREMhtuZRwRAfqP3RFW+TK4JqApVBtOIftVgjuABpAtpxhPGaDcfvbhNvD0B8iD1oUr/txX35NjcaY6Ns/A==",
      "optional": true
    },
    "node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA=="
    },
    "node_modules/mustache": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/mustache/-/mustache-4.2.0.tgz",
      "integrity": "sha512-71ippSywq5Yb7/tVYyGbkBggbU8H3u5Rz56fH60jGFgr8uHwxs+aSKeqmluIVzM0m0kB7xQjKS6qPfd0b2ZoqQ==",
      "bin": {
        "mustache": "bin/mustache"
      }
    },
    "node_modules/mute-stream": {
      "version": "0.0.8",
      "resolved": "https://registry.npmjs.org/mute-stream/-/mute-stream-0.0.8.tgz",
      "integrity": "sha512-nnbWWOkoWyUsTjKrhgD0dcz22mdkSnpYqbEjIm2nhwhuxlSkpywJmBo8h0ZqJdkp73mb90SssHkN4rsRaBAfAA=="
    },
    "node_modules/napi-build-utils": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/napi-build-utils/-/napi-build-utils-1.0.2.tgz",
      "integrity": "sha512-ONmRUqK7zj7DWX0D9ADe03wbwOBZxNAfF20PlGfCWQcD3+/MakShIHrMqx9YwPTfxDdF1zLeL+RGZiR9kGMLdg==",
      "optional": true
    },
    "node_modules/ncp": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ncp/-/ncp-2.0.0.tgz",
      "integrity": "sha512-zIdGUrPRFTUELUvr3Gmc7KZ2Sw/h1PiVM0Af/oHB6zgnV1ikqSfRk+TOufi79aHYCW3NiOXmr1BP5nWbzojLaA==",
      "bin": {
        "ncp": "bin/ncp"
      }
    },
    "node_modules/near-api-js": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/near-api-js/-/near-api-js-1.1.0.tgz",
      "integrity": "sha512-qYKv1mYsaDZc2uYndhS+ttDhR9+60qFc+ZjD6lWsAxr3ZskMjRwPffDGQZYhC7BRDQMe1HEbk6d5mf+TVm0Lqg==",
      "dependencies": {
        "bn.js": "5.2.1",
        "borsh": "^0.7.0",
        "bs58": "^4.0.0",
        "depd": "^2.0.0",
        "error-polyfill": "^0.1.3",
        "http-errors": "^1.7.2",
        "js-sha256": "^0.9.0",
        "mustache": "^4.0.0",
        "node-fetch": "^2.6.1",
        "text-encoding-utf-8": "^1.0.2",
        "tweetnacl": "^1.0.1"
      }
    },
    "node_modules/near-cli": {
      "version": "3.4.2",
      "resolved": "https://registry.npmjs.org/near-cli/-/near-cli-3.4.2.tgz",
      "integrity": "sha512-0EaNAw5SKSIIJrJajG32CNMGfBtZTgIrOVKSXBTWpvo+F0OozsbvuO4UG3ZSRNThXHijxybp58SqPiU3JuzXGA==",
      "dependencies": {
        "analytics-node": "^6.1.0",
        "ascii-table": "0.0.9",
        "bn.js": "^5.1.1",
        "bs58": "^4.0.1",
        "chalk": "^4.0.0",
        "flagged-respawn": "^1.0.1",
        "is-ci": "^2.0.0",
        "jest-environment-node": "^27.0.6",
        "ncp": "^2.0.0",
        "near-api-js": "^0.44.2",
        "near-seed-phrase": "^0.2.0",
        "open": "^8.0.7",
        "rimraf": "^3.0.0",
        "stoppable": "^1.1.0",
        "tcp-port-used": "^1.0.1",
        "update-notifier": "^5.0.0",
        "uuid": "^8.0.0",
        "v8flags": "^3.1.3",
        "yargs": "^16.0.3"
      },
      "bin": {
        "near": "bin/near"
      },
      "engines": {
        "node": ">= 12"
      },
      "optionalDependencies": {
        "@ledgerhq/hw-transport-node-hid": "^6.1.0",
        "near-ledger-js": "^0.2.0"
      }
    },
    "node_modules/near-cli/node_modules/bn.js": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-5.2.0.tgz",
      "integrity": "sha512-D7iWRBvnZE8ecXiLj/9wbxH7Tk79fAh8IHaTNq1RWRixsS02W+5qS+iE9yq6RYl0asXx5tw0bLhmT5pIfbSquw=="
    },
    "node_modules/near-cli/node_modules/borsh": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/borsh/-/borsh-0.6.0.tgz",
      "integrity": "sha512-sl5k89ViqsThXQpYa9XDtz1sBl3l1lI313cFUY1HKr+wvMILnb+58xpkqTNrYbelh99dY7K8usxoCusQmqix9Q==",
      "dependencies": {
        "bn.js": "^5.2.0",
        "bs58": "^4.0.0",
        "text-encoding-utf-8": "^1.0.2"
      }
    },
    "node_modules/near-cli/node_modules/near-api-js": {
      "version": "0.44.2",
      "resolved": "https://registry.npmjs.org/near-api-js/-/near-api-js-0.44.2.tgz",
      "integrity": "sha512-eMnc4V+geggapEUa3nU2p8HSHn/njtloI4P2mceHQWO8vDE1NGpnAw8FuTBrLmXSgIv9m6oocgFc9t3VNf5zwg==",
      "dependencies": {
        "bn.js": "5.2.0",
        "borsh": "^0.6.0",
        "bs58": "^4.0.0",
        "depd": "^2.0.0",
        "error-polyfill": "^0.1.3",
        "http-errors": "^1.7.2",
        "js-sha256": "^0.9.0",
        "mustache": "^4.0.0",
        "node-fetch": "^2.6.1",
        "text-encoding-utf-8": "^1.0.2",
        "tweetnacl": "^1.0.1"
      }
    },
    "node_modules/near-hd-key": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/near-hd-key/-/near-hd-key-1.2.1.tgz",
      "integrity": "sha512-SIrthcL5Wc0sps+2e1xGj3zceEa68TgNZDLuCx0daxmfTP7sFTB3/mtE2pYhlFsCxWoMn+JfID5E1NlzvvbRJg==",
      "dependencies": {
        "bip39": "3.0.2",
        "create-hmac": "1.1.7",
        "tweetnacl": "1.0.3"
      }
    },
    "node_modules/near-ledger-js": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/near-ledger-js/-/near-ledger-js-0.2.1.tgz",
      "integrity": "sha512-8anZb6e96gJNBOKUR/HReLN/x8BmBhCpyPq+XxFbx8jxmsRz+M1Hxq085+ROYaMI2EDJqatrjjLAdArk13BOhA==",
      "optional": true,
      "dependencies": {
        "@ledgerhq/hw-transport-u2f": "^5.36.0-deprecated",
        "@ledgerhq/hw-transport-webhid": "^5.51.1",
        "@ledgerhq/hw-transport-webusb": "^5.53.1",
        "bs58": "^4.0.1",
        "platform": "^1.3.6"
      }
    },
    "node_modules/near-sdk-js": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/near-sdk-js/-/near-sdk-js-0.5.0.tgz",
      "integrity": "sha512-wwQTCT+7bu0CahlNxlG5RGaxDiUJQSnjT7GwmK/d2p7Y5PkwWv1K5ZBsZMLOTU3fnhv0Y1LJ6lp00O9kZZLR5Q==",
      "hasInstallScript": true,
      "dependencies": {
        "@babel/core": "^7.17.5",
        "@babel/plugin-proposal-decorators": "^7.17.2",
        "@babel/preset-typescript": "^7.18.6",
        "@rollup/plugin-babel": "^5.3.1",
        "@rollup/plugin-commonjs": "^21.0.1",
        "@rollup/plugin-node-resolve": "^13.1.1",
        "@scure/base": "^1.1.1",
        "rollup": "^2.61.1",
        "rollup-plugin-sourcemaps": "^0.6.3",
        "yargs": "^17.5.1"
      },
      "bin": {
        "near-sdk-js": "cli/cli.js"
      }
    },
    "node_modules/near-sdk-js/node_modules/cliui": {
      "version": "8.0.1",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-8.0.1.tgz",
      "integrity": "sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==",
      "dependencies": {
        "string-width": "^4.2.0",
        "strip-ansi": "^6.0.1",
        "wrap-ansi": "^7.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/near-sdk-js/node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/near-sdk-js/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/near-sdk-js/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/near-sdk-js/node_modules/yargs": {
      "version": "17.6.0",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-17.6.0.tgz",
      "integrity": "sha512-8H/wTDqlSwoSnScvV2N/JHfLWOKuh5MVla9hqLjK3nsfyy6Y4kDSYSvkU5YCUEPOSnRXfIyx3Sq+B/IWudTo4g==",
      "dependencies": {
        "cliui": "^8.0.1",
        "escalade": "^3.1.1",
        "get-caller-file": "^2.0.5",
        "require-directory": "^2.1.1",
        "string-width": "^4.2.3",
        "y18n": "^5.0.5",
        "yargs-parser": "^21.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/near-sdk-js/node_modules/yargs-parser": {
      "version": "21.1.1",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz",
      "integrity": "sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/near-seed-phrase": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/near-seed-phrase/-/near-seed-phrase-0.2.0.tgz",
      "integrity": "sha512-NpmrnejpY1AdlRpDZ0schJQJtfBaoUheRfiYtQpcq9TkwPgqKZCRULV5L3hHmLc0ep7KRtikbPQ9R2ztN/3cyQ==",
      "dependencies": {
        "bip39-light": "^1.0.7",
        "bs58": "^4.0.1",
        "near-hd-key": "^1.2.1",
        "tweetnacl": "^1.0.2"
      }
    },
    "node_modules/node-abi": {
      "version": "2.30.1",
      "resolved": "https://registry.npmjs.org/node-abi/-/node-abi-2.30.1.tgz",
      "integrity": "sha512-/2D0wOQPgaUWzVSVgRMx+trKJRC2UG4SUc4oCJoXx9Uxjtp0Vy3/kt7zcbxHF8+Z/pK3UloLWzBISg72brfy1w==",
      "optional": true,
      "dependencies": {
        "semver": "^5.4.1"
      }
    },
    "node_modules/node-abi/node_modules/semver": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
      "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
      "optional": true,
      "bin": {
        "semver": "bin/semver"
      }
    },
    "node_modules/node-addon-api": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/node-addon-api/-/node-addon-api-3.2.1.tgz",
      "integrity": "sha512-mmcei9JghVNDYydghQmeDX8KoAm0FAiYyIcUt/N4nhyAipB17pllZQDOJD2fotxABnt4Mdz+dKTO7eftLg4d0A==",
      "optional": true
    },
    "node_modules/node-fetch": {
      "version": "2.6.7",
      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.7.tgz",
      "integrity": "sha512-ZjMPFEfVx5j+y2yF35Kzx5sF7kDzxuDj6ziH4FFbOp87zKDZNx8yExJIb05OGF4Nlt9IHFIMBkRl41VdvcNdbQ==",
      "dependencies": {
        "whatwg-url": "^5.0.0"
      },
      "engines": {
        "node": "4.x || >=6.0.0"
      },
      "peerDependencies": {
        "encoding": "^0.1.0"
      },
      "peerDependenciesMeta": {
        "encoding": {
          "optional": true
        }
      }
    },
    "node_modules/node-gyp-build": {
      "version": "4.5.0",
      "resolved": "https://registry.npmjs.org/node-gyp-build/-/node-gyp-build-4.5.0.tgz",
      "integrity": "sha512-2iGbaQBV+ITgCz76ZEjmhUKAKVf7xfY1sRl4UiKQspfZMH2h06SyhNsnSVy50cwkFQDGLyif6m/6uFXHkOZ6rg==",
      "optional": true,
      "bin": {
        "node-gyp-build": "bin.js",
        "node-gyp-build-optional": "optional.js",
        "node-gyp-build-test": "build-test.js"
      }
    },
    "node_modules/node-hid": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/node-hid/-/node-hid-2.1.1.tgz",
      "integrity": "sha512-Skzhqow7hyLZU93eIPthM9yjot9lszg9xrKxESleEs05V2NcbUptZc5HFqzjOkSmL0sFlZFr3kmvaYebx06wrw==",
      "hasInstallScript": true,
      "optional": true,
      "dependencies": {
        "bindings": "^1.5.0",
        "node-addon-api": "^3.0.2",
        "prebuild-install": "^6.0.0"
      },
      "bin": {
        "hid-showdevices": "src/show-devices.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/node-releases": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.6.tgz",
      "integrity": "sha512-PiVXnNuFm5+iYkLBNeq5211hvO38y63T0i2KKh2KnUs3RpzJ+JtODFjkD8yjLwnDkTYF1eKXheUwdssR+NRZdg=="
    },
    "node_modules/normalize-url": {
      "version": "4.5.1",
      "resolved": "https://registry.npmjs.org/normalize-url/-/normalize-url-4.5.1.tgz",
      "integrity": "sha512-9UZCFRHQdNrfTpGg8+1INIg93B6zE0aXMVFkw1WFwvO4SlZywU6aLg5Of0Ap/PgcbSw4LNxvMWXMeugwMCX0AA==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/npmlog": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/npmlog/-/npmlog-4.1.2.tgz",
      "integrity": "sha512-2uUqazuKlTaSI/dC8AzicUck7+IrEaOnN/e0jd3Xtt1KcGpwx30v50mL7oPyr/h9bL3E4aZccVwpwP+5W9Vjkg==",
      "optional": true,
      "dependencies": {
        "are-we-there-yet": "~1.1.2",
        "console-control-strings": "~1.1.0",
        "gauge": "~2.7.3",
        "set-blocking": "~2.0.0"
      }
    },
    "node_modules/number-is-nan": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/number-is-nan/-/number-is-nan-1.0.1.tgz",
      "integrity": "sha512-4jbtZXNAsfZbAHiiqjLPBiCl16dES1zI4Hpzzxw61Tk+loF+sBDBKx1ICKKKwIqQ7M0mFn1TmkN7euSncWgHiQ==",
      "optional": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/o3": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/o3/-/o3-1.0.3.tgz",
      "integrity": "sha512-f+4n+vC6s4ysy7YO7O2gslWZBUu8Qj2i2OUJOvjRxQva7jVjYjB29jrr9NCjmxZQR0gzrOcv1RnqoYOeMs5VRQ==",
      "dependencies": {
        "capability": "^0.2.5"
      }
    },
    "node_modules/object-assign": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
      "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
      "optional": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/once": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
      "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
      "dependencies": {
        "wrappy": "1"
      }
    },
    "node_modules/onetime": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/onetime/-/onetime-5.1.2.tgz",
      "integrity": "sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==",
      "dependencies": {
        "mimic-fn": "^2.1.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/onetime/node_modules/mimic-fn": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz",
      "integrity": "sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/open": {
      "version": "8.4.0",
      "resolved": "https://registry.npmjs.org/open/-/open-8.4.0.tgz",
      "integrity": "sha512-XgFPPM+B28FtCCgSb9I+s9szOC1vZRSwgWsRUA5ylIxRTgKozqjOCrVOqGsYABPYK5qnfqClxZTFBa8PKt2v6Q==",
      "dependencies": {
        "define-lazy-prop": "^2.0.0",
        "is-docker": "^2.1.1",
        "is-wsl": "^2.2.0"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/ora": {
      "version": "6.1.2",
      "resolved": "https://registry.npmjs.org/ora/-/ora-6.1.2.tgz",
      "integrity": "sha512-EJQ3NiP5Xo94wJXIzAyOtSb0QEIAUu7m8t6UZ9krbz0vAJqr92JpcK/lEXg91q6B9pEGqrykkd2EQplnifDSBw==",
      "dependencies": {
        "bl": "^5.0.0",
        "chalk": "^5.0.0",
        "cli-cursor": "^4.0.0",
        "cli-spinners": "^2.6.1",
        "is-interactive": "^2.0.0",
        "is-unicode-supported": "^1.1.0",
        "log-symbols": "^5.1.0",
        "strip-ansi": "^7.0.1",
        "wcwidth": "^1.0.1"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/ora/node_modules/ansi-regex": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.0.1.tgz",
      "integrity": "sha512-n5M855fKb2SsfMIiFFoVrABHJC8QtHwVx+mHWP3QcEqBHYienj5dHSgjbxtC0WEZXYt4wcD6zrQElDPhFuZgfA==",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-regex?sponsor=1"
      }
    },
    "node_modules/ora/node_modules/bl": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/bl/-/bl-5.1.0.tgz",
      "integrity": "sha512-tv1ZJHLfTDnXE6tMHv73YgSJaWR2AFuPwMntBe7XL/GBFHnT0CLnsHMogfk5+GzCDC5ZWarSCYaIGATZt9dNsQ==",
      "dependencies": {
        "buffer": "^6.0.3",
        "inherits": "^2.0.4",
        "readable-stream": "^3.4.0"
      }
    },
    "node_modules/ora/node_modules/buffer": {
      "version": "6.0.3",
      "resolved": "https://registry.npmjs.org/buffer/-/buffer-6.0.3.tgz",
      "integrity": "sha512-FTiCpNxtwiZZHEZbcbTIcZjERVICn9yq/pDFkTl95/AxzD1naBctN7YO68riM/gLSDY7sdrMby8hofADYuuqOA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "dependencies": {
        "base64-js": "^1.3.1",
        "ieee754": "^1.2.1"
      }
    },
    "node_modules/ora/node_modules/chalk": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-5.1.2.tgz",
      "integrity": "sha512-E5CkT4jWURs1Vy5qGJye+XwCkNj7Od3Af7CP6SujMetSMkLs8Do2RWJK5yx1wamHV/op8Rz+9rltjaTQWDnEFQ==",
      "engines": {
        "node": "^12.17.0 || ^14.13 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/chalk/chalk?sponsor=1"
      }
    },
    "node_modules/ora/node_modules/strip-ansi": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.0.1.tgz",
      "integrity": "sha512-cXNxvT8dFNRVfhVME3JAe98mkXDYN2O1l7jmcwMnOslDeESg1rF/OZMtK0nRAhiari1unG5cD4jG3rapUAkLbw==",
      "dependencies": {
        "ansi-regex": "^6.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/strip-ansi?sponsor=1"
      }
    },
    "node_modules/os-tmpdir": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/os-tmpdir/-/os-tmpdir-1.0.2.tgz",
      "integrity": "sha512-D2FR03Vir7FIu45XBY20mTb+/ZSWB00sjU9jdQXt83gDrI4Ztz5Fs7/yy74g2N5SVQY4xY1qDr4rNddwYRVX0g==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/p-cancelable": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/p-cancelable/-/p-cancelable-1.1.0.tgz",
      "integrity": "sha512-s73XxOZ4zpt1edZYZzvhqFa6uvQc1vwUa0K0BdtIZgQMAJj9IbebH+JkgKZc9h+B05PKHLOTl4ajG1BmNrVZlw==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/package-json": {
      "version": "6.5.0",
      "resolved": "https://registry.npmjs.org/package-json/-/package-json-6.5.0.tgz",
      "integrity": "sha512-k3bdm2n25tkyxcjSKzB5x8kfVxlMdgsbPr0GkZcwHsLpba6cBjqCt1KlcChKEvxHIcTB1FVMuwoijZ26xex5MQ==",
      "dependencies": {
        "got": "^9.6.0",
        "registry-auth-token": "^4.0.0",
        "registry-url": "^5.0.0",
        "semver": "^6.2.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/package-json/node_modules/semver": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
      "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/parse-passwd": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/parse-passwd/-/parse-passwd-1.0.0.tgz",
      "integrity": "sha512-1Y1A//QUXEZK7YKz+rD9WydcE1+EuPr6ZBgKecAB8tmoW6UFv0NREVJe1p+jRxtThkcbbKkfwIbWJe/IeE6m2Q==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/path-is-absolute": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
      "integrity": "sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/path-parse": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw=="
    },
    "node_modules/pbkdf2": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/pbkdf2/-/pbkdf2-3.1.2.tgz",
      "integrity": "sha512-iuh7L6jA7JEGu2WxDwtQP1ddOpaJNC4KlDEFfdQajSGgGPNi4OyDc2R7QnbY2bR9QjBVGwgvTdNJZoE7RaxUMA==",
      "dependencies": {
        "create-hash": "^1.1.2",
        "create-hmac": "^1.1.4",
        "ripemd160": "^2.0.1",
        "safe-buffer": "^5.0.1",
        "sha.js": "^2.4.8"
      },
      "engines": {
        "node": ">=0.12"
      }
    },
    "node_modules/picocolors": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.0.0.tgz",
      "integrity": "sha512-1fygroTLlHu66zi26VoTDv8yRgm0Fccecssto+MhsZ0D/DGW2sm8E8AjW7NU5VVTRt5GxbeZ5qBuJr+HyLYkjQ=="
    },
    "node_modules/picomatch": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
      "engines": {
        "node": ">=8.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/jonschlinkert"
      }
    },
    "node_modules/platform": {
      "version": "1.3.6",
      "resolved": "https://registry.npmjs.org/platform/-/platform-1.3.6.tgz",
      "integrity": "sha512-fnWVljUchTro6RiCFvCXBbNhJc2NijN7oIQxbwsyL0buWJPG85v81ehlHI9fXrJsMNgTofEoWIQeClKpgxFLrg==",
      "optional": true
    },
    "node_modules/prebuild-install": {
      "version": "6.1.4",
      "resolved": "https://registry.npmjs.org/prebuild-install/-/prebuild-install-6.1.4.tgz",
      "integrity": "sha512-Z4vpywnK1lBg+zdPCVCsKq0xO66eEV9rWo2zrROGGiRS4JtueBOdlB1FnY8lcy7JsUud/Q3ijUxyWN26Ika0vQ==",
      "optional": true,
      "dependencies": {
        "detect-libc": "^1.0.3",
        "expand-template": "^2.0.3",
        "github-from-package": "0.0.0",
        "minimist": "^1.2.3",
        "mkdirp-classic": "^0.5.3",
        "napi-build-utils": "^1.0.1",
        "node-abi": "^2.21.0",
        "npmlog": "^4.0.1",
        "pump": "^3.0.0",
        "rc": "^1.2.7",
        "simple-get": "^3.0.3",
        "tar-fs": "^2.0.0",
        "tunnel-agent": "^0.6.0"
      },
      "bin": {
        "prebuild-install": "bin.js"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/prepend-http": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/prepend-http/-/prepend-http-2.0.0.tgz",
      "integrity": "sha512-ravE6m9Atw9Z/jjttRUZ+clIXogdghyZAuWJ3qEzjT+jI/dL1ifAqhZeC5VHzQp1MSt1+jxKkFNemj/iO7tVUA==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/pretty-format": {
      "version": "27.5.1",
      "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-27.5.1.tgz",
      "integrity": "sha512-Qb1gy5OrP5+zDf2Bvnzdl3jsTf1qXVMazbvCoKhtKqVs4/YK4ozX4gKQJJVyNe+cajNPn0KoC0MC3FUmaHWEmQ==",
      "dependencies": {
        "ansi-regex": "^5.0.1",
        "ansi-styles": "^5.0.0",
        "react-is": "^17.0.1"
      },
      "engines": {
        "node": "^10.13.0 || ^12.13.0 || ^14.15.0 || >=15.0.0"
      }
    },
    "node_modules/pretty-format/node_modules/ansi-styles": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz",
      "integrity": "sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/process-nextick-args": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz",
      "integrity": "sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==",
      "optional": true
    },
    "node_modules/pump": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/pump/-/pump-3.0.0.tgz",
      "integrity": "sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==",
      "dependencies": {
        "end-of-stream": "^1.1.0",
        "once": "^1.3.1"
      }
    },
    "node_modules/pupa": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/pupa/-/pupa-2.1.1.tgz",
      "integrity": "sha512-l1jNAspIBSFqbT+y+5FosojNpVpF94nlI+wDUpqP9enwOTfHx9f0gh5nB96vl+6yTpsJsypeNrwfzPrKuHB41A==",
      "dependencies": {
        "escape-goat": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/randombytes": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/randombytes/-/randombytes-2.1.0.tgz",
      "integrity": "sha512-vYl3iOX+4CKUWuxGi9Ukhie6fsqXqS9FE2Zaic4tNFD2N2QQaXOMFbuKK4QmDHC0JO6B1Zp41J0LpT0oR68amQ==",
      "dependencies": {
        "safe-buffer": "^5.1.0"
      }
    },
    "node_modules/rc": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/rc/-/rc-1.2.8.tgz",
      "integrity": "sha512-y3bGgqKj3QBdxLbLkomlohkvsA8gdAiUQlSBJnBhfn+BPxg4bc62d8TcBW15wavDfgexCgccckhcZvywyQYPOw==",
      "dependencies": {
        "deep-extend": "^0.6.0",
        "ini": "~1.3.0",
        "minimist": "^1.2.0",
        "strip-json-comments": "~2.0.1"
      },
      "bin": {
        "rc": "cli.js"
      }
    },
    "node_modules/react-is": {
      "version": "17.0.2",
      "resolved": "https://registry.npmjs.org/react-is/-/react-is-17.0.2.tgz",
      "integrity": "sha512-w2GsyukL62IJnlaff/nRegPQR94C/XXamvMWmSHRJ4y7Ts/4ocGRmTHvOs8PSE6pB3dWOrD/nueuU5sduBsQ4w=="
    },
    "node_modules/readable-stream": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.0.tgz",
      "integrity": "sha512-BViHy7LKeTz4oNnkcLJ+lVSL6vpiFeX6/d3oSH8zCW7UxP2onchk+vTGB143xuFjHS3deTgkKoXXymXqymiIdA==",
      "dependencies": {
        "inherits": "^2.0.3",
        "string_decoder": "^1.1.1",
        "util-deprecate": "^1.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/registry-auth-token": {
      "version": "4.2.2",
      "resolved": "https://registry.npmjs.org/registry-auth-token/-/registry-auth-token-4.2.2.tgz",
      "integrity": "sha512-PC5ZysNb42zpFME6D/XlIgtNGdTl8bBOCw90xQLVMpzuuubJKYDWFAEuUNc+Cn8Z8724tg2SDhDRrkVEsqfDMg==",
      "dependencies": {
        "rc": "1.2.8"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/registry-url": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/registry-url/-/registry-url-5.1.0.tgz",
      "integrity": "sha512-8acYXXTI0AkQv6RAOjE3vOaIXZkT9wo4LOFbBKYQEEnnMNBpKqdUrI6S4NT0KPIo/WVvJ5tE/X5LF/TQUf0ekw==",
      "dependencies": {
        "rc": "^1.2.8"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/remove-trailing-slash": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/remove-trailing-slash/-/remove-trailing-slash-0.1.1.tgz",
      "integrity": "sha512-o4S4Qh6L2jpnCy83ysZDau+VORNvnFw07CKSAymkd6ICNVEPisMyzlc00KlvvicsxKck94SEwhDnMNdICzO+tA=="
    },
    "node_modules/require-directory": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz",
      "integrity": "sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/resolve": {
      "version": "1.22.1",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.1.tgz",
      "integrity": "sha512-nBpuuYuY5jFsli/JIs1oldw6fOQCBioohqWZg/2hiaOybXOft4lonv85uDOKXdf8rhyK159cxU5cDcK/NKk8zw==",
      "dependencies": {
        "is-core-module": "^2.9.0",
        "path-parse": "^1.0.7",
        "supports-preserve-symlinks-flag": "^1.0.0"
      },
      "bin": {
        "resolve": "bin/resolve"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/responselike": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/responselike/-/responselike-1.0.2.tgz",
      "integrity": "sha512-/Fpe5guzJk1gPqdJLJR5u7eG/gNY4nImjbRDaVWVMRhne55TCmj2i9Q+54PBRfatRC8v/rIiv9BN0pMd9OV5EQ==",
      "dependencies": {
        "lowercase-keys": "^1.0.0"
      }
    },
    "node_modules/restore-cursor": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-4.0.0.tgz",
      "integrity": "sha512-I9fPXU9geO9bHOt9pHHOhOkYerIMsmVaWB0rA2AI9ERh/+x/i7MV5HKBNrg+ljO5eoPVgCcnFuRjJ9uH6I/3eg==",
      "dependencies": {
        "onetime": "^5.1.0",
        "signal-exit": "^3.0.2"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/rimraf": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz",
      "integrity": "sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==",
      "dependencies": {
        "glob": "^7.1.3"
      },
      "bin": {
        "rimraf": "bin.js"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/ripemd160": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/ripemd160/-/ripemd160-2.0.2.tgz",
      "integrity": "sha512-ii4iagi25WusVoiC4B4lq7pbXfAp3D9v5CwfkY33vffw2+pkDjY1D8GaN7spsxvCSx8dkPqOZCEZyfxcmJG2IA==",
      "dependencies": {
        "hash-base": "^3.0.0",
        "inherits": "^2.0.1"
      }
    },
    "node_modules/rollup": {
      "version": "2.79.1",
      "resolved": "https://registry.npmjs.org/rollup/-/rollup-2.79.1.tgz",
      "integrity": "sha512-uKxbd0IhMZOhjAiD5oAFp7BqvkA4Dv47qpOCtaNvng4HBwdbWtdOh8f5nZNuk2rp51PMGk3bzfWu5oayNEuYnw==",
      "bin": {
        "rollup": "dist/bin/rollup"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.2"
      }
    },
    "node_modules/rollup-plugin-sourcemaps": {
      "version": "0.6.3",
      "resolved": "https://registry.npmjs.org/rollup-plugin-sourcemaps/-/rollup-plugin-sourcemaps-0.6.3.tgz",
      "integrity": "sha512-paFu+nT1xvuO1tPFYXGe+XnQvg4Hjqv/eIhG8i5EspfYYPBKL57X7iVbfv55aNVASg3dzWvES9dmWsL2KhfByw==",
      "dependencies": {
        "@rollup/pluginutils": "^3.0.9",
        "source-map-resolve": "^0.6.0"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "peerDependencies": {
        "@types/node": ">=10.0.0",
        "rollup": ">=0.31.2"
      },
      "peerDependenciesMeta": {
        "@types/node": {
          "optional": true
        }
      }
    },
    "node_modules/run-async": {
      "version": "2.4.1",
      "resolved": "https://registry.npmjs.org/run-async/-/run-async-2.4.1.tgz",
      "integrity": "sha512-tvVnVv01b8c1RrA6Ep7JkStj85Guv/YrMcwqYQnwjsAS2cTmmPGBBjAjpCW7RrSodNSoE2/qg9O4bceNvUuDgQ==",
      "engines": {
        "node": ">=0.12.0"
      }
    },
    "node_modules/rxjs": {
      "version": "6.6.7",
      "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-6.6.7.tgz",
      "integrity": "sha512-hTdwr+7yYNIT5n4AMYp85KA6yw2Va0FLa3Rguvbpa4W3I5xynaBZo41cM3XM+4Q6fRMj3sBYIR1VAmZMXYJvRQ==",
      "optional": true,
      "dependencies": {
        "tslib": "^1.9.0"
      },
      "engines": {
        "npm": ">=2.0.0"
      }
    },
    "node_modules/safe-buffer": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
      "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ]
    },
    "node_modules/safer-buffer": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg=="
    },
    "node_modules/semver": {
      "version": "7.3.8",
      "resolved": "https://registry.npmjs.org/semver/-/semver-7.3.8.tgz",
      "integrity": "sha512-NB1ctGL5rlHrPJtFDVIVzTyQylMLu9N9VICA6HSFJo8MCGVTMW6gfpicwKmmK/dAjTOrqu5l63JJOpDSrAis3A==",
      "dependencies": {
        "lru-cache": "^6.0.0"
      },
      "bin": {
        "semver": "bin/semver.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/semver-diff": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/semver-diff/-/semver-diff-3.1.1.tgz",
      "integrity": "sha512-GX0Ix/CJcHyB8c4ykpHGIAvLyOwOobtM/8d+TQkAd81/bEjgPHrfba41Vpesr7jX/t8Uh+R3EX9eAS5be+jQYg==",
      "dependencies": {
        "semver": "^6.3.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/semver-diff/node_modules/semver": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
      "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/set-blocking": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz",
      "integrity": "sha512-KiKBS8AnWGEyLzofFfmvKwpdPzqiy16LvQfK3yv/fVH7Bj13/wl3JSR1J+rfgRE9q7xUJK4qvgS8raSOeLUehw==",
      "optional": true
    },
    "node_modules/setprototypeof": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
      "integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw=="
    },
    "node_modules/sha.js": {
      "version": "2.4.11",
      "resolved": "https://registry.npmjs.org/sha.js/-/sha.js-2.4.11.tgz",
      "integrity": "sha512-QMEp5B7cftE7APOjk5Y6xgrbWu+WkLVQwk8JNjZ8nKRciZaByEW6MubieAiToS7+dwvrjGhH8jRXz3MVd0AYqQ==",
      "dependencies": {
        "inherits": "^2.0.1",
        "safe-buffer": "^5.0.1"
      },
      "bin": {
        "sha.js": "bin.js"
      }
    },
    "node_modules/signal-exit": {
      "version": "3.0.7",
      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.7.tgz",
      "integrity": "sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ=="
    },
    "node_modules/simple-concat": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/simple-concat/-/simple-concat-1.0.1.tgz",
      "integrity": "sha512-cSFtAPtRhljv69IK0hTVZQ+OfE9nePi/rtJmw5UjHeVyVroEqJXP1sFztKUy1qU+xvz3u/sfYJLa947b7nAN2Q==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "optional": true
    },
    "node_modules/simple-get": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/simple-get/-/simple-get-3.1.1.tgz",
      "integrity": "sha512-CQ5LTKGfCpvE1K0n2us+kuMPbk/q0EKl82s4aheV9oXjFEz6W/Y7oQFVJuU6QG77hRT4Ghb5RURteF5vnWjupA==",
      "optional": true,
      "dependencies": {
        "decompress-response": "^4.2.0",
        "once": "^1.3.1",
        "simple-concat": "^1.0.0"
      }
    },
    "node_modules/slash": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
      "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/source-map-resolve": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/source-map-resolve/-/source-map-resolve-0.6.0.tgz",
      "integrity": "sha512-KXBr9d/fO/bWo97NXsPIAW1bFSBOuCnjbNTBMO7N59hsv5i9yzRDfcYwwt0l04+VqnKC+EwzvJZIP/qkuMgR/w==",
      "deprecated": "See https://github.com/lydell/source-map-resolve#deprecated",
      "dependencies": {
        "atob": "^2.1.2",
        "decode-uri-component": "^0.2.0"
      }
    },
    "node_modules/sourcemap-codec": {
      "version": "1.4.8",
      "resolved": "https://registry.npmjs.org/sourcemap-codec/-/sourcemap-codec-1.4.8.tgz",
      "integrity": "sha512-9NykojV5Uih4lgo5So5dtw+f0JgJX30KCNI8gwhz2J9A15wD0Ml6tjHKwf6fTSa6fAdVBdZeNOs9eJ71qCk8vA=="
    },
    "node_modules/stack-utils": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/stack-utils/-/stack-utils-2.0.5.tgz",
      "integrity": "sha512-xrQcmYhOsn/1kX+Vraq+7j4oE2j/6BFscZ0etmYg81xuM8Gq0022Pxb8+IqgOFUIaxHs0KaSb7T1+OegiNrNFA==",
      "dependencies": {
        "escape-string-regexp": "^2.0.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/statuses": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.5.0.tgz",
      "integrity": "sha512-OpZ3zP+jT1PI7I8nemJX4AKmAX070ZkYPVWV/AaKTJl+tXCTGyVdC1a4SL8RUQYEwk/f34ZX8UTykN68FwrqAA==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/stoppable": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/stoppable/-/stoppable-1.1.0.tgz",
      "integrity": "sha512-KXDYZ9dszj6bzvnEMRYvxgeTHU74QBFL54XKtP3nyMuJ81CFYtABZ3bAzL2EdFUaEwJOBOgENyFj3R7oTzDyyw==",
      "engines": {
        "node": ">=4",
        "npm": ">=6"
      }
    },
    "node_modules/string_decoder": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.3.0.tgz",
      "integrity": "sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==",
      "dependencies": {
        "safe-buffer": "~5.2.0"
      }
    },
    "node_modules/string-width": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-1.0.2.tgz",
      "integrity": "sha512-0XsVpQLnVCXHJfyEs8tC0zpTVIr5PKKsQtkT29IwupnPTjtPmQ3xT/4yCREF9hYkV/3M3kzcUTSAZT6a6h81tw==",
      "optional": true,
      "dependencies": {
        "code-point-at": "^1.0.0",
        "is-fullwidth-code-point": "^1.0.0",
        "strip-ansi": "^3.0.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/strip-ansi": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",
      "integrity": "sha512-VhumSSbBqDTP8p2ZLKj40UjBCV4+v8bUSEpUb4KjRgWk9pbqGF4REFj6KEagidb2f/M6AzC0EmFyDNGaw9OCzg==",
      "optional": true,
      "dependencies": {
        "ansi-regex": "^2.0.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/strip-ansi/node_modules/ansi-regex": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",
      "integrity": "sha512-TIGnTpdo+E3+pCyAluZvtED5p5wCqLdezCyhPZzKPcxvFplEt4i+W7OONCKgeZFT3+y5NZZfOOS/Bdcanm1MYA==",
      "optional": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/strip-json-comments": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-2.0.1.tgz",
      "integrity": "sha512-4gB8na07fecVVkOI6Rs4e7T6NOTki5EmL7TUduTs6bu3EdnSycntVJ4re8kgZA+wx9IueI2Y11bfbgwtzuE0KQ==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/supports-color": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
      "dependencies": {
        "has-flag": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/supports-preserve-symlinks-flag": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
      "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/tar-fs": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/tar-fs/-/tar-fs-2.1.1.tgz",
      "integrity": "sha512-V0r2Y9scmbDRLCNex/+hYzvp/zyYjvFbHPNgVTKfQvVrb6guiE/fxP+XblDNR011utopbkex2nM4dHNV6GDsng==",
      "optional": true,
      "dependencies": {
        "chownr": "^1.1.1",
        "mkdirp-classic": "^0.5.2",
        "pump": "^3.0.0",
        "tar-stream": "^2.1.4"
      }
    },
    "node_modules/tar-stream": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/tar-stream/-/tar-stream-2.2.0.tgz",
      "integrity": "sha512-ujeqbceABgwMZxEJnk2HDY2DlnUZ+9oEcb1KzTVfYHio0UE6dG71n60d8D2I4qNvleWrrXpmjpt7vZeF1LnMZQ==",
      "optional": true,
      "dependencies": {
        "bl": "^4.0.3",
        "end-of-stream": "^1.4.1",
        "fs-constants": "^1.0.0",
        "inherits": "^2.0.3",
        "readable-stream": "^3.1.1"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/tcp-port-used": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/tcp-port-used/-/tcp-port-used-1.0.2.tgz",
      "integrity": "sha512-l7ar8lLUD3XS1V2lfoJlCBaeoaWo/2xfYt81hM7VlvR4RrMVFqfmzfhLVk40hAb368uitje5gPtBRL1m/DGvLA==",
      "dependencies": {
        "debug": "4.3.1",
        "is2": "^2.0.6"
      }
    },
    "node_modules/tcp-port-used/node_modules/debug": {
      "version": "4.3.1",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.1.tgz",
      "integrity": "sha512-doEwdvm4PCeK4K3RQN2ZC2BYUBaxwLARCqZmMjtF8a51J2Rb0xpVloFRnCODwqjpwnAoao4pelN8l3RJdv3gRQ==",
      "dependencies": {
        "ms": "2.1.2"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/tcp-port-used/node_modules/ms": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
      "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
    },
    "node_modules/text-encoding-utf-8": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/text-encoding-utf-8/-/text-encoding-utf-8-1.0.2.tgz",
      "integrity": "sha512-8bw4MY9WjdsD2aMtO0OzOCY3pXGYNx2d2FfHRVUKkiCPDWjKuOlhLVASS+pD7VkLTVjW268LYJHwsnPFlBpbAg=="
    },
    "node_modules/through": {
      "version": "2.3.8",
      "resolved": "https://registry.npmjs.org/through/-/through-2.3.8.tgz",
      "integrity": "sha512-w89qg7PI8wAdvX60bMDP+bFoD5Dvhm9oLheFp5O4a2QF0cSBGsBX4qZmadPMvVqlLJBBci+WqGGOAPvcDeNSVg=="
    },
    "node_modules/tmp": {
      "version": "0.0.33",
      "resolved": "https://registry.npmjs.org/tmp/-/tmp-0.0.33.tgz",
      "integrity": "sha512-jRCJlojKnZ3addtTOjdIqoRuPEKBvNXcGYqzO6zWZX8KfKEpnGY5jfggJQ3EjKuu8D4bJRr0y+cYJFmYbImXGw==",
      "dependencies": {
        "os-tmpdir": "~1.0.2"
      },
      "engines": {
        "node": ">=0.6.0"
      }
    },
    "node_modules/to-fast-properties": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-2.0.0.tgz",
      "integrity": "sha512-/OaKK0xYrs3DmxRYqL/yDc+FxFUVYhDlXMhRmv3z915w2HF1tnN1omB354j8VUGO/hbRzyD6Y3sA7v7GS/ceog==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/to-readable-stream": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/to-readable-stream/-/to-readable-stream-1.0.0.tgz",
      "integrity": "sha512-Iq25XBt6zD5npPhlLVXGFN3/gyR2/qODcKNNyTMd4vbm39HUaOiAM4PMq0eMVC/Tkxz+Zjdsc55g9yyz+Yq00Q==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/to-regex-range": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
      "dependencies": {
        "is-number": "^7.0.0"
      },
      "engines": {
        "node": ">=8.0"
      }
    },
    "node_modules/toidentifier": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz",
      "integrity": "sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==",
      "engines": {
        "node": ">=0.6"
      }
    },
    "node_modules/tr46": {
      "version": "0.0.3",
      "resolved": "https://registry.npmjs.org/tr46/-/tr46-0.0.3.tgz",
      "integrity": "sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw=="
    },
    "node_modules/tslib": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-1.14.1.tgz",
      "integrity": "sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==",
      "optional": true
    },
    "node_modules/tunnel-agent": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz",
      "integrity": "sha512-McnNiV1l8RYeY8tBgEpuodCC1mLUdbSN+CYBL7kJsJNInOP8UjDDEwdk6Mw60vdLLrr5NHKZhMAOSrR2NZuQ+w==",
      "optional": true,
      "dependencies": {
        "safe-buffer": "^5.0.1"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/tweetnacl": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-1.0.3.tgz",
      "integrity": "sha512-6rt+RN7aOi1nGMyC4Xa5DdYiukl2UWCbcJft7YhxReBGQD7OAM8Pbxw6YMo4r2diNEA8FEmu32YOn9rhaiE5yw=="
    },
    "node_modules/type-detect": {
      "version": "4.0.8",
      "resolved": "https://registry.npmjs.org/type-detect/-/type-detect-4.0.8.tgz",
      "integrity": "sha512-0fr/mIH1dlO+x7TlcMy+bIDqKPsw/70tVyeHW787goQjhmqaZe10uwLujubK9q9Lg6Fiho1KUKDYz0Z7k7g5/g==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/type-fest": {
      "version": "0.20.2",
      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.20.2.tgz",
      "integrity": "sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/typedarray-to-buffer": {
      "version": "3.1.5",
      "resolved": "https://registry.npmjs.org/typedarray-to-buffer/-/typedarray-to-buffer-3.1.5.tgz",
      "integrity": "sha512-zdu8XMNEDepKKR+XYOXAVPtWui0ly0NtohUscw+UmaHiAWT8hrV1rr//H6V+0DvJ3OQ19S979M0laLfX8rm82Q==",
      "dependencies": {
        "is-typedarray": "^1.0.0"
      }
    },
    "node_modules/typescript": {
      "version": "4.8.4",
      "resolved": "https://registry.npmjs.org/typescript/-/typescript-4.8.4.tgz",
      "integrity": "sha512-QCh+85mCy+h0IGff8r5XWzOVSbBO+KfeYrMQh7NJ58QujwcE22u+NUSmUxqF+un70P9GXKxa2HCNiTTMJknyjQ==",
      "dev": true,
      "bin": {
        "tsc": "bin/tsc",
        "tsserver": "bin/tsserver"
      },
      "engines": {
        "node": ">=4.2.0"
      }
    },
    "node_modules/u2f-api": {
      "version": "0.2.7",
      "resolved": "https://registry.npmjs.org/u2f-api/-/u2f-api-0.2.7.tgz",
      "integrity": "sha512-fqLNg8vpvLOD5J/z4B6wpPg4Lvowz1nJ9xdHcCzdUPKcFE/qNCceV2gNZxSJd5vhAZemHr/K/hbzVA0zxB5mkg==",
      "optional": true
    },
    "node_modules/u3": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/u3/-/u3-0.1.1.tgz",
      "integrity": "sha512-+J5D5ir763y+Am/QY6hXNRlwljIeRMZMGs0cT6qqZVVzzT3X3nFPXVyPOFRMOR4kupB0T8JnCdpWdp6Q/iXn3w=="
    },
    "node_modules/unique-string": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/unique-string/-/unique-string-2.0.0.tgz",
      "integrity": "sha512-uNaeirEPvpZWSgzwsPGtU2zVSTrn/8L5q/IexZmH0eH6SA73CmAA5U4GwORTxQAZs95TAXLNqeLoPPNO5gZfWg==",
      "dependencies": {
        "crypto-random-string": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/update-browserslist-db": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.0.10.tgz",
      "integrity": "sha512-OztqDenkfFkbSG+tRxBeAnCVPckDBcvibKd35yDONx6OU8N7sqgwc7rCbkJ/WcYtVRZ4ba68d6byhC21GFh7sQ==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        }
      ],
      "dependencies": {
        "escalade": "^3.1.1",
        "picocolors": "^1.0.0"
      },
      "bin": {
        "browserslist-lint": "cli.js"
      },
      "peerDependencies": {
        "browserslist": ">= 4.21.0"
      }
    },
    "node_modules/update-notifier": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/update-notifier/-/update-notifier-5.1.0.tgz",
      "integrity": "sha512-ItnICHbeMh9GqUy31hFPrD1kcuZ3rpxDZbf4KUDavXwS0bW5m7SLbDQpGX3UYr072cbrF5hFUs3r5tUsPwjfHw==",
      "dependencies": {
        "boxen": "^5.0.0",
        "chalk": "^4.1.0",
        "configstore": "^5.0.1",
        "has-yarn": "^2.1.0",
        "import-lazy": "^2.1.0",
        "is-ci": "^2.0.0",
        "is-installed-globally": "^0.4.0",
        "is-npm": "^5.0.0",
        "is-yarn-global": "^0.3.0",
        "latest-version": "^5.1.0",
        "pupa": "^2.1.1",
        "semver": "^7.3.4",
        "semver-diff": "^3.1.1",
        "xdg-basedir": "^4.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/yeoman/update-notifier?sponsor=1"
      }
    },
    "node_modules/url-parse-lax": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/url-parse-lax/-/url-parse-lax-3.0.0.tgz",
      "integrity": "sha512-NjFKA0DidqPa5ciFcSrXnAltTtzz84ogy+NebPvfEgAck0+TNg4UJ4IN+fB7zRZfbgUf0syOo9MDxFkDSMuFaQ==",
      "dependencies": {
        "prepend-http": "^2.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/usb": {
      "version": "1.9.2",
      "resolved": "https://registry.npmjs.org/usb/-/usb-1.9.2.tgz",
      "integrity": "sha512-dryNz030LWBPAf6gj8vyq0Iev3vPbCLHCT8dBw3gQRXRzVNsIdeuU+VjPp3ksmSPkeMAl1k+kQ14Ij0QHyeiAg==",
      "hasInstallScript": true,
      "optional": true,
      "dependencies": {
        "node-addon-api": "^4.2.0",
        "node-gyp-build": "^4.3.0"
      },
      "engines": {
        "node": ">=10.16.0"
      }
    },
    "node_modules/usb/node_modules/node-addon-api": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/node-addon-api/-/node-addon-api-4.3.0.tgz",
      "integrity": "sha512-73sE9+3UaLYYFmDsFZnqCInzPyh3MqIwZO9cw58yIqAZhONrrabrYyYe3TuIqtIiOuTXVhsGau8hcrhhwSsDIQ==",
      "optional": true
    },
    "node_modules/util-deprecate": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
      "integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw=="
    },
    "node_modules/uuid": {
      "version": "8.3.2",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-8.3.2.tgz",
      "integrity": "sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg==",
      "bin": {
        "uuid": "dist/bin/uuid"
      }
    },
    "node_modules/v8flags": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/v8flags/-/v8flags-3.2.0.tgz",
      "integrity": "sha512-mH8etigqMfiGWdeXpaaqGfs6BndypxusHHcv2qSHyZkGEznCd/qAXCWWRzeowtL54147cktFOC4P5y+kl8d8Jg==",
      "dependencies": {
        "homedir-polyfill": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/wcwidth": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/wcwidth/-/wcwidth-1.0.1.tgz",
      "integrity": "sha512-XHPEwS0q6TaxcvG85+8EYkbiCux2XtWG2mkc47Ng2A77BQu9+DqIOJldST4HgPkuea7dvKSj5VgX3P1d4rW8Tg==",
      "dependencies": {
        "defaults": "^1.0.3"
      }
    },
    "node_modules/webidl-conversions": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-3.0.1.tgz",
      "integrity": "sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ=="
    },
    "node_modules/whatwg-url": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-5.0.0.tgz",
      "integrity": "sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==",
      "dependencies": {
        "tr46": "~0.0.3",
        "webidl-conversions": "^3.0.0"
      }
    },
    "node_modules/wide-align": {
      "version": "1.1.5",
      "resolved": "https://registry.npmjs.org/wide-align/-/wide-align-1.1.5.tgz",
      "integrity": "sha512-eDMORYaPNZ4sQIuuYPDHdQvf4gyCF9rEEV/yPxGfwPkRodwEgiMUUXTx/dex+Me0wxx53S+NgUHaP7y3MGlDmg==",
      "optional": true,
      "dependencies": {
        "string-width": "^1.0.2 || 2 || 3 || 4"
      }
    },
    "node_modules/widest-line": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/widest-line/-/widest-line-3.1.0.tgz",
      "integrity": "sha512-NsmoXalsWVDMGupxZ5R08ka9flZjjiLvHVAWYOKtiKM8ujtZWr9cRffak+uSE48+Ob8ObalXpwyeUiyDD6QFgg==",
      "dependencies": {
        "string-width": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/widest-line/node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/widest-line/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/widest-line/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrap-ansi": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/wrap-ansi/node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrap-ansi/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrap-ansi/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrappy": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
      "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ=="
    },
    "node_modules/write-file-atomic": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-3.0.3.tgz",
      "integrity": "sha512-AvHcyZ5JnSfq3ioSyjrBkH9yW4m7Ayk8/9My/DD9onKeu/94fwrMocemO2QAJFAlnnDN+ZDS+ZjAR5ua1/PV/Q==",
      "dependencies": {
        "imurmurhash": "^0.1.4",
        "is-typedarray": "^1.0.0",
        "signal-exit": "^3.0.2",
        "typedarray-to-buffer": "^3.1.5"
      }
    },
    "node_modules/xdg-basedir": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/xdg-basedir/-/xdg-basedir-4.0.0.tgz",
      "integrity": "sha512-PSNhEJDejZYV7h50BohL09Er9VaIefr2LMAf3OEmpCkjOi34eYyQYAXUTjEQtZJTKcF0E2UKTh+osDLsgNim9Q==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/y18n": {
      "version": "5.0.8",
      "resolved": "https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz",
      "integrity": "sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/yallist": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
      "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A=="
    },
    "node_modules/yargs": {
      "version": "16.2.0",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-16.2.0.tgz",
      "integrity": "sha512-D1mvvtDG0L5ft/jGWkLpG1+m0eQxOfaBvTNELraWj22wSVUMWxZUvYgJYcKh6jGGIkJFhH4IZPQhR4TKpc8mBw==",
      "dependencies": {
        "cliui": "^7.0.2",
        "escalade": "^3.1.1",
        "get-caller-file": "^2.0.5",
        "require-directory": "^2.1.1",
        "string-width": "^4.2.0",
        "y18n": "^5.0.5",
        "yargs-parser": "^20.2.2"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/yargs-parser": {
      "version": "20.2.9",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-20.2.9.tgz",
      "integrity": "sha512-y11nGElTIV+CT3Zv9t7VKl+Q3hTQoT9a1Qzezhhl6Rp21gJ/IVTW7Z3y9EWXhuUBC2Shnf+DX0antecpAwSP8w==",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/yargs/node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/yargs/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/yargs/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    }
  },
  "dependencies": {
    "@ampproject/remapping": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.2.0.tgz",
      "integrity": "sha512-qRmjj8nj9qmLTQXXmaR1cck3UXSRMPrbsLJAasZpF+t3riI71BXed5ebIOYwQntykeZuhjsdweEc9BxH5Jc26w==",
      "requires": {
        "@jridgewell/gen-mapping": "^0.1.0",
        "@jridgewell/trace-mapping": "^0.3.9"
      }
    },
    "@babel/code-frame": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.18.6.tgz",
      "integrity": "sha512-TDCmlK5eOvH+eH7cdAFlNXeVJqWIQ7gW9tY1GJIpUtFb6CmjVyq2VM3u71bOyR8CRihcCgMUYoDNyLXao3+70Q==",
      "requires": {
        "@babel/highlight": "^7.18.6"
      }
    },
    "@babel/compat-data": {
      "version": "7.20.0",
      "resolved": "https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.20.0.tgz",
      "integrity": "sha512-Gt9jszFJYq7qzXVK4slhc6NzJXnOVmRECWcVjF/T23rNXD9NtWQ0W3qxdg+p9wWIB+VQw3GYV/U2Ha9bRTfs4w=="
    },
    "@babel/core": {
      "version": "7.19.6",
      "resolved": "https://registry.npmjs.org/@babel/core/-/core-7.19.6.tgz",
      "integrity": "sha512-D2Ue4KHpc6Ys2+AxpIx1BZ8+UegLLLE2p3KJEuJRKmokHOtl49jQ5ny1773KsGLZs8MQvBidAF6yWUJxRqtKtg==",
      "requires": {
        "@ampproject/remapping": "^2.1.0",
        "@babel/code-frame": "^7.18.6",
        "@babel/generator": "^7.19.6",
        "@babel/helper-compilation-targets": "^7.19.3",
        "@babel/helper-module-transforms": "^7.19.6",
        "@babel/helpers": "^7.19.4",
        "@babel/parser": "^7.19.6",
        "@babel/template": "^7.18.10",
        "@babel/traverse": "^7.19.6",
        "@babel/types": "^7.19.4",
        "convert-source-map": "^1.7.0",
        "debug": "^4.1.0",
        "gensync": "^1.0.0-beta.2",
        "json5": "^2.2.1",
        "semver": "^6.3.0"
      },
      "dependencies": {
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw=="
        }
      }
    },
    "@babel/generator": {
      "version": "7.20.0",
      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.20.0.tgz",
      "integrity": "sha512-GUPcXxWibClgmYJuIwC2Bc2Lg+8b9VjaJ+HlNdACEVt+Wlr1eoU1OPZjZRm7Hzl0gaTsUZNQfeihvZJhG7oc3w==",
      "requires": {
        "@babel/types": "^7.20.0",
        "@jridgewell/gen-mapping": "^0.3.2",
        "jsesc": "^2.5.1"
      },
      "dependencies": {
        "@jridgewell/gen-mapping": {
          "version": "0.3.2",
          "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.2.tgz",
          "integrity": "sha512-mh65xKQAzI6iBcFzwv28KVWSmCkdRBWoOh+bYQGW3+6OZvbbN3TqMGo5hqYxQniRcH9F2VZIoJCm4pa3BPDK/A==",
          "requires": {
            "@jridgewell/set-array": "^1.0.1",
            "@jridgewell/sourcemap-codec": "^1.4.10",
            "@jridgewell/trace-mapping": "^0.3.9"
          }
        }
      }
    },
    "@babel/helper-annotate-as-pure": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.18.6.tgz",
      "integrity": "sha512-duORpUiYrEpzKIop6iNbjnwKLAKnJ47csTyRACyEmWj0QdUrm5aqNJGHSSEQSUAvNW0ojX0dOmK9dZduvkfeXA==",
      "requires": {
        "@babel/types": "^7.18.6"
      }
    },
    "@babel/helper-compilation-targets": {
      "version": "7.20.0",
      "resolved": "https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.20.0.tgz",
      "integrity": "sha512-0jp//vDGp9e8hZzBc6N/KwA5ZK3Wsm/pfm4CrY7vzegkVxc65SgSn6wYOnwHe9Js9HRQ1YTCKLGPzDtaS3RoLQ==",
      "requires": {
        "@babel/compat-data": "^7.20.0",
        "@babel/helper-validator-option": "^7.18.6",
        "browserslist": "^4.21.3",
        "semver": "^6.3.0"
      },
      "dependencies": {
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw=="
        }
      }
    },
    "@babel/helper-create-class-features-plugin": {
      "version": "7.19.0",
      "resolved": "https://registry.npmjs.org/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.19.0.tgz",
      "integrity": "sha512-NRz8DwF4jT3UfrmUoZjd0Uph9HQnP30t7Ash+weACcyNkiYTywpIjDBgReJMKgr+n86sn2nPVVmJ28Dm053Kqw==",
      "requires": {
        "@babel/helper-annotate-as-pure": "^7.18.6",
        "@babel/helper-environment-visitor": "^7.18.9",
        "@babel/helper-function-name": "^7.19.0",
        "@babel/helper-member-expression-to-functions": "^7.18.9",
        "@babel/helper-optimise-call-expression": "^7.18.6",
        "@babel/helper-replace-supers": "^7.18.9",
        "@babel/helper-split-export-declaration": "^7.18.6"
      }
    },
    "@babel/helper-environment-visitor": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-environment-visitor/-/helper-environment-visitor-7.18.9.tgz",
      "integrity": "sha512-3r/aACDJ3fhQ/EVgFy0hpj8oHyHpQc+LPtJoY9SzTThAsStm4Ptegq92vqKoE3vD706ZVFWITnMnxucw+S9Ipg=="
    },
    "@babel/helper-function-name": {
      "version": "7.19.0",
      "resolved": "https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.19.0.tgz",
      "integrity": "sha512-WAwHBINyrpqywkUH0nTnNgI5ina5TFn85HKS0pbPDfxFfhyR/aNQEn4hGi1P1JyT//I0t4OgXUlofzWILRvS5w==",
      "requires": {
        "@babel/template": "^7.18.10",
        "@babel/types": "^7.19.0"
      }
    },
    "@babel/helper-hoist-variables": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-hoist-variables/-/helper-hoist-variables-7.18.6.tgz",
      "integrity": "sha512-UlJQPkFqFULIcyW5sbzgbkxn2FKRgwWiRexcuaR8RNJRy8+LLveqPjwZV/bwrLZCN0eUHD/x8D0heK1ozuoo6Q==",
      "requires": {
        "@babel/types": "^7.18.6"
      }
    },
    "@babel/helper-member-expression-to-functions": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.18.9.tgz",
      "integrity": "sha512-RxifAh2ZoVU67PyKIO4AMi1wTenGfMR/O/ae0CCRqwgBAt5v7xjdtRw7UoSbsreKrQn5t7r89eruK/9JjYHuDg==",
      "requires": {
        "@babel/types": "^7.18.9"
      }
    },
    "@babel/helper-module-imports": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.18.6.tgz",
      "integrity": "sha512-0NFvs3VkuSYbFi1x2Vd6tKrywq+z/cLeYC/RJNFrIX/30Bf5aiGYbtvGXolEktzJH8o5E5KJ3tT+nkxuuZFVlA==",
      "requires": {
        "@babel/types": "^7.18.6"
      }
    },
    "@babel/helper-module-transforms": {
      "version": "7.19.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.19.6.tgz",
      "integrity": "sha512-fCmcfQo/KYr/VXXDIyd3CBGZ6AFhPFy1TfSEJ+PilGVlQT6jcbqtHAM4C1EciRqMza7/TpOUZliuSH+U6HAhJw==",
      "requires": {
        "@babel/helper-environment-visitor": "^7.18.9",
        "@babel/helper-module-imports": "^7.18.6",
        "@babel/helper-simple-access": "^7.19.4",
        "@babel/helper-split-export-declaration": "^7.18.6",
        "@babel/helper-validator-identifier": "^7.19.1",
        "@babel/template": "^7.18.10",
        "@babel/traverse": "^7.19.6",
        "@babel/types": "^7.19.4"
      }
    },
    "@babel/helper-optimise-call-expression": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.18.6.tgz",
      "integrity": "sha512-HP59oD9/fEHQkdcbgFCnbmgH5vIQTJbxh2yf+CdM89/glUNnuzr87Q8GIjGEnOktTROemO0Pe0iPAYbqZuOUiA==",
      "requires": {
        "@babel/types": "^7.18.6"
      }
    },
    "@babel/helper-plugin-utils": {
      "version": "7.19.0",
      "resolved": "https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.19.0.tgz",
      "integrity": "sha512-40Ryx7I8mT+0gaNxm8JGTZFUITNqdLAgdg0hXzeVZxVD6nFsdhQvip6v8dqkRHzsz1VFpFAaOCHNn0vKBL7Czw=="
    },
    "@babel/helper-replace-supers": {
      "version": "7.19.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-replace-supers/-/helper-replace-supers-7.19.1.tgz",
      "integrity": "sha512-T7ahH7wV0Hfs46SFh5Jz3s0B6+o8g3c+7TMxu7xKfmHikg7EAZ3I2Qk9LFhjxXq8sL7UkP5JflezNwoZa8WvWw==",
      "requires": {
        "@babel/helper-environment-visitor": "^7.18.9",
        "@babel/helper-member-expression-to-functions": "^7.18.9",
        "@babel/helper-optimise-call-expression": "^7.18.6",
        "@babel/traverse": "^7.19.1",
        "@babel/types": "^7.19.0"
      }
    },
    "@babel/helper-simple-access": {
      "version": "7.19.4",
      "resolved": "https://registry.npmjs.org/@babel/helper-simple-access/-/helper-simple-access-7.19.4.tgz",
      "integrity": "sha512-f9Xq6WqBFqaDfbCzn2w85hwklswz5qsKlh7f08w4Y9yhJHpnNC0QemtSkK5YyOY8kPGvyiwdzZksGUhnGdaUIg==",
      "requires": {
        "@babel/types": "^7.19.4"
      }
    },
    "@babel/helper-split-export-declaration": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.18.6.tgz",
      "integrity": "sha512-bde1etTx6ZyTmobl9LLMMQsaizFVZrquTEHOqKeQESMKo4PlObf+8+JA25ZsIpZhT/WEd39+vOdLXAFG/nELpA==",
      "requires": {
        "@babel/types": "^7.18.6"
      }
    },
    "@babel/helper-string-parser": {
      "version": "7.19.4",
      "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.19.4.tgz",
      "integrity": "sha512-nHtDoQcuqFmwYNYPz3Rah5ph2p8PFeFCsZk9A/48dPc/rGocJ5J3hAAZ7pb76VWX3fZKu+uEr/FhH5jLx7umrw=="
    },
    "@babel/helper-validator-identifier": {
      "version": "7.19.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.19.1.tgz",
      "integrity": "sha512-awrNfaMtnHUr653GgGEs++LlAvW6w+DcPrOliSMXWCKo597CwL5Acf/wWdNkf/tfEQE3mjkeD1YOVZOUV/od1w=="
    },
    "@babel/helper-validator-option": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.18.6.tgz",
      "integrity": "sha512-XO7gESt5ouv/LRJdrVjkShckw6STTaB7l9BrpBaAHDeF5YZT+01PCwmR0SJHnkW6i8OwW/EVWRShfi4j2x+KQw=="
    },
    "@babel/helpers": {
      "version": "7.20.0",
      "resolved": "https://registry.npmjs.org/@babel/helpers/-/helpers-7.20.0.tgz",
      "integrity": "sha512-aGMjYraN0zosCEthoGLdqot1oRsmxVTQRHadsUPz5QM44Zej2PYRz7XiDE7GqnkZnNtLbOuxqoZw42vkU7+XEQ==",
      "requires": {
        "@babel/template": "^7.18.10",
        "@babel/traverse": "^7.20.0",
        "@babel/types": "^7.20.0"
      }
    },
    "@babel/highlight": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/highlight/-/highlight-7.18.6.tgz",
      "integrity": "sha512-u7stbOuYjaPezCuLj29hNW1v64M2Md2qupEKP1fHc7WdOA3DgLh37suiSrZYY7haUB7iBeQZ9P1uiRF359do3g==",
      "requires": {
        "@babel/helper-validator-identifier": "^7.18.6",
        "chalk": "^2.0.0",
        "js-tokens": "^4.0.0"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          }
        },
        "color-convert": {
          "version": "1.9.3",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
          "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
          "requires": {
            "color-name": "1.1.3"
          }
        },
        "color-name": {
          "version": "1.1.3",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
          "integrity": "sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw=="
        },
        "escape-string-regexp": {
          "version": "1.0.5",
          "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
          "integrity": "sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg=="
        },
        "has-flag": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
          "integrity": "sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw=="
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "@babel/parser": {
      "version": "7.20.0",
      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.20.0.tgz",
      "integrity": "sha512-G9VgAhEaICnz8iiJeGJQyVl6J2nTjbW0xeisva0PK6XcKsga7BIaqm4ZF8Rg1Wbaqmy6znspNqhPaPkyukujzg=="
    },
    "@babel/plugin-proposal-decorators": {
      "version": "7.20.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-decorators/-/plugin-proposal-decorators-7.20.0.tgz",
      "integrity": "sha512-vnuRRS20ygSxclEYikHzVrP9nZDFXaSzvJxGLQNAiBX041TmhS4hOUHWNIpq/q4muENuEP9XPJFXTNFejhemkg==",
      "requires": {
        "@babel/helper-create-class-features-plugin": "^7.19.0",
        "@babel/helper-plugin-utils": "^7.19.0",
        "@babel/helper-replace-supers": "^7.19.1",
        "@babel/helper-split-export-declaration": "^7.18.6",
        "@babel/plugin-syntax-decorators": "^7.19.0"
      }
    },
    "@babel/plugin-syntax-decorators": {
      "version": "7.19.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-decorators/-/plugin-syntax-decorators-7.19.0.tgz",
      "integrity": "sha512-xaBZUEDntt4faL1yN8oIFlhfXeQAWJW7CLKYsHTUqriCUbj8xOra8bfxxKGi/UwExPFBuPdH4XfHc9rGQhrVkQ==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.19.0"
      }
    },
    "@babel/plugin-syntax-typescript": {
      "version": "7.20.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-typescript/-/plugin-syntax-typescript-7.20.0.tgz",
      "integrity": "sha512-rd9TkG+u1CExzS4SM1BlMEhMXwFLKVjOAFFCDx9PbX5ycJWDoWMcwdJH9RhkPu1dOgn5TrxLot/Gx6lWFuAUNQ==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.19.0"
      }
    },
    "@babel/plugin-transform-typescript": {
      "version": "7.20.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-typescript/-/plugin-transform-typescript-7.20.0.tgz",
      "integrity": "sha512-xOAsAFaun3t9hCwZ13Qe7gq423UgMZ6zAgmLxeGGapFqlT/X3L5qT2btjiVLlFn7gWtMaVyceS5VxGAuKbgizw==",
      "requires": {
        "@babel/helper-create-class-features-plugin": "^7.19.0",
        "@babel/helper-plugin-utils": "^7.19.0",
        "@babel/plugin-syntax-typescript": "^7.20.0"
      }
    },
    "@babel/preset-typescript": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/preset-typescript/-/preset-typescript-7.18.6.tgz",
      "integrity": "sha512-s9ik86kXBAnD760aybBucdpnLsAt0jK1xqJn2juOn9lkOvSHV60os5hxoVJsPzMQxvnUJFAlkont2DvvaYEBtQ==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.6",
        "@babel/helper-validator-option": "^7.18.6",
        "@babel/plugin-transform-typescript": "^7.18.6"
      }
    },
    "@babel/template": {
      "version": "7.18.10",
      "resolved": "https://registry.npmjs.org/@babel/template/-/template-7.18.10.tgz",
      "integrity": "sha512-TI+rCtooWHr3QJ27kJxfjutghu44DLnasDMwpDqCXVTal9RLp3RSYNh4NdBrRP2cQAoG9A8juOQl6P6oZG4JxA==",
      "requires": {
        "@babel/code-frame": "^7.18.6",
        "@babel/parser": "^7.18.10",
        "@babel/types": "^7.18.10"
      }
    },
    "@babel/traverse": {
      "version": "7.20.0",
      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.20.0.tgz",
      "integrity": "sha512-5+cAXQNARgjRUK0JWu2UBwja4JLSO/rBMPJzpsKb+oBF5xlUuCfljQepS4XypBQoiigL0VQjTZy6WiONtUdScQ==",
      "requires": {
        "@babel/code-frame": "^7.18.6",
        "@babel/generator": "^7.20.0",
        "@babel/helper-environment-visitor": "^7.18.9",
        "@babel/helper-function-name": "^7.19.0",
        "@babel/helper-hoist-variables": "^7.18.6",
        "@babel/helper-split-export-declaration": "^7.18.6",
        "@babel/parser": "^7.20.0",
        "@babel/types": "^7.20.0",
        "debug": "^4.1.0",
        "globals": "^11.1.0"
      }
    },
    "@babel/types": {
      "version": "7.20.0",
      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.20.0.tgz",
      "integrity": "sha512-Jlgt3H0TajCW164wkTOTzHkZb075tMQMULzrLUoUeKmO7eFL96GgDxf7/Axhc5CAuKE3KFyVW1p6ysKsi2oXAg==",
      "requires": {
        "@babel/helper-string-parser": "^7.19.4",
        "@babel/helper-validator-identifier": "^7.19.1",
        "to-fast-properties": "^2.0.0"
      }
    },
    "@jest/environment": {
      "version": "27.5.1",
      "resolved": "https://registry.npmjs.org/@jest/environment/-/environment-27.5.1.tgz",
      "integrity": "sha512-/WQjhPJe3/ghaol/4Bq480JKXV/Rfw8nQdN7f41fM8VDHLcxKXou6QyXAh3EFr9/bVG3x74z1NWDkP87EiY8gA==",
      "requires": {
        "@jest/fake-timers": "^27.5.1",
        "@jest/types": "^27.5.1",
        "@types/node": "*",
        "jest-mock": "^27.5.1"
      }
    },
    "@jest/fake-timers": {
      "version": "27.5.1",
      "resolved": "https://registry.npmjs.org/@jest/fake-timers/-/fake-timers-27.5.1.tgz",
      "integrity": "sha512-/aPowoolwa07k7/oM3aASneNeBGCmGQsc3ugN4u6s4C/+s5M64MFo/+djTdiwcbQlRfFElGuDXWzaWj6QgKObQ==",
      "requires": {
        "@jest/types": "^27.5.1",
        "@sinonjs/fake-timers": "^8.0.1",
        "@types/node": "*",
        "jest-message-util": "^27.5.1",
        "jest-mock": "^27.5.1",
        "jest-util": "^27.5.1"
      }
    },
    "@jest/types": {
      "version": "27.5.1",
      "resolved": "https://registry.npmjs.org/@jest/types/-/types-27.5.1.tgz",
      "integrity": "sha512-Cx46iJ9QpwQTjIdq5VJu2QTMMs3QlEjI0x1QbBP5W1+nMzyc2XmimiRR/CbX9TO0cPTeUlxWMOu8mslYsJ8DEw==",
      "requires": {
        "@types/istanbul-lib-coverage": "^2.0.0",
        "@types/istanbul-reports": "^3.0.0",
        "@types/node": "*",
        "@types/yargs": "^16.0.0",
        "chalk": "^4.0.0"
      }
    },
    "@jridgewell/gen-mapping": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.1.1.tgz",
      "integrity": "sha512-sQXCasFk+U8lWYEe66WxRDOE9PjVz4vSM51fTu3Hw+ClTpUSQb718772vH3pyS5pShp6lvQM7SxgIDXXXmOX7w==",
      "requires": {
        "@jridgewell/set-array": "^1.0.0",
        "@jridgewell/sourcemap-codec": "^1.4.10"
      }
    },
    "@jridgewell/resolve-uri": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.0.tgz",
      "integrity": "sha512-F2msla3tad+Mfht5cJq7LSXcdudKTWCVYUgw6pLFOOHSTtZlj6SWNYAp+AhuqLmWdBO2X5hPrLcu8cVP8fy28w=="
    },
    "@jridgewell/set-array": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.1.2.tgz",
      "integrity": "sha512-xnkseuNADM0gt2bs+BvhO0p78Mk762YnZdsuzFV018NoG1Sj1SCQvpSqa7XUaTam5vAGasABV9qXASMKnFMwMw=="
    },
    "@jridgewell/sourcemap-codec": {
      "version": "1.4.14",
      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.4.14.tgz",
      "integrity": "sha512-XPSJHWmi394fuUuzDnGz1wiKqWfo1yXecHQMRf2l6hztTO+nPru658AyDngaBe7isIxEkRsPR3FZh+s7iVa4Uw=="
    },
    "@jridgewell/trace-mapping": {
      "version": "0.3.17",
      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.17.tgz",
      "integrity": "sha512-MCNzAp77qzKca9+W/+I0+sEpaUnZoeasnghNeVc41VZCEKaCH73Vq3BZZ/SzWIgrqE4H4ceI+p+b6C0mHf9T4g==",
      "requires": {
        "@jridgewell/resolve-uri": "3.1.0",
        "@jridgewell/sourcemap-codec": "1.4.14"
      }
    },
    "@ledgerhq/devices": {
      "version": "7.0.3",
      "resolved": "https://registry.npmjs.org/@ledgerhq/devices/-/devices-7.0.3.tgz",
      "integrity": "sha512-URlcgq6yKklWxj35nIu/eTF0UpGLGUOp69xp8uHeyoMK2wqVC0GNGeD2MvKyJ+ul83edqMEI98GycA98Y7trsg==",
      "optional": true,
      "requires": {
        "@ledgerhq/errors": "^6.11.1",
        "@ledgerhq/logs": "^6.10.1",
        "rxjs": "6",
        "semver": "^7.3.5"
      }
    },
    "@ledgerhq/errors": {
      "version": "6.11.1",
      "resolved": "https://registry.npmjs.org/@ledgerhq/errors/-/errors-6.11.1.tgz",
      "integrity": "sha512-HT1PFvNrejcN5z3ba6xikacIdHWMkjBeE9U5FFoGHhaKBKGjC74mnCeEo0/oJunyuVId+9mhGnv6lrBl6Mkqdg==",
      "optional": true
    },
    "@ledgerhq/hw-transport": {
      "version": "6.27.6",
      "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport/-/hw-transport-6.27.6.tgz",
      "integrity": "sha512-DRGUsB8WfbeEPuU42nAtwYpA5D6Bq3q1CvC2VjDinkukLcf6XMc22YUJl9mxt+h+/cLTU1Ff/pz+fqYqeELLEA==",
      "optional": true,
      "requires": {
        "@ledgerhq/devices": "^7.0.3",
        "@ledgerhq/errors": "^6.11.1",
        "events": "^3.3.0"
      }
    },
    "@ledgerhq/hw-transport-node-hid": {
      "version": "6.27.6",
      "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport-node-hid/-/hw-transport-node-hid-6.27.6.tgz",
      "integrity": "sha512-ZQGKTydb3niMfGBrhbYR7zDiykOadiXRj05qfrjkCvvLXEq3KkUy8WnhfoSQEgaQpOx+i4SUJwzzfAih5eP3GA==",
      "optional": true,
      "requires": {
        "@ledgerhq/devices": "^7.0.3",
        "@ledgerhq/errors": "^6.11.1",
        "@ledgerhq/hw-transport": "^6.27.6",
        "@ledgerhq/hw-transport-node-hid-noevents": "^6.27.6",
        "@ledgerhq/logs": "^6.10.1",
        "lodash": "^4.17.21",
        "node-hid": "2.1.1",
        "usb": "^1.7.0"
      }
    },
    "@ledgerhq/hw-transport-node-hid-noevents": {
      "version": "6.27.6",
      "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport-node-hid-noevents/-/hw-transport-node-hid-noevents-6.27.6.tgz",
      "integrity": "sha512-9WvUBUhk0eRSZjXgEsdNVGkxHuDLoh6fR1PJIeXKHgC8dzTREYrGKytx8ECqO5OPotXeAZURC3yB00XZrKIupw==",
      "optional": true,
      "requires": {
        "@ledgerhq/devices": "^7.0.3",
        "@ledgerhq/errors": "^6.11.1",
        "@ledgerhq/hw-transport": "^6.27.6",
        "@ledgerhq/logs": "^6.10.1",
        "node-hid": "2.1.1"
      }
    },
    "@ledgerhq/hw-transport-u2f": {
      "version": "5.36.0-deprecated",
      "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport-u2f/-/hw-transport-u2f-5.36.0-deprecated.tgz",
      "integrity": "sha512-T/+mGHIiUK/ZQATad6DMDmobCMZ1mVST952009jKzhaE1Et2Uy2secU+QhRkx3BfEAkvwa0zSRSYCL9d20Iqjg==",
      "optional": true,
      "requires": {
        "@ledgerhq/errors": "^5.34.0",
        "@ledgerhq/hw-transport": "^5.34.0",
        "@ledgerhq/logs": "^5.30.0",
        "u2f-api": "0.2.7"
      },
      "dependencies": {
        "@ledgerhq/devices": {
          "version": "5.51.1",
          "resolved": "https://registry.npmjs.org/@ledgerhq/devices/-/devices-5.51.1.tgz",
          "integrity": "sha512-4w+P0VkbjzEXC7kv8T1GJ/9AVaP9I6uasMZ/JcdwZBS3qwvKo5A5z9uGhP5c7TvItzcmPb44b5Mw2kT+WjUuAA==",
          "optional": true,
          "requires": {
            "@ledgerhq/errors": "^5.50.0",
            "@ledgerhq/logs": "^5.50.0",
            "rxjs": "6",
            "semver": "^7.3.5"
          }
        },
        "@ledgerhq/errors": {
          "version": "5.50.0",
          "resolved": "https://registry.npmjs.org/@ledgerhq/errors/-/errors-5.50.0.tgz",
          "integrity": "sha512-gu6aJ/BHuRlpU7kgVpy2vcYk6atjB4iauP2ymF7Gk0ez0Y/6VSMVSJvubeEQN+IV60+OBK0JgeIZG7OiHaw8ow==",
          "optional": true
        },
        "@ledgerhq/hw-transport": {
          "version": "5.51.1",
          "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport/-/hw-transport-5.51.1.tgz",
          "integrity": "sha512-6wDYdbWrw9VwHIcoDnqWBaDFyviyjZWv6H9vz9Vyhe4Qd7TIFmbTl/eWs6hZvtZBza9K8y7zD8ChHwRI4s9tSw==",
          "optional": true,
          "requires": {
            "@ledgerhq/devices": "^5.51.1",
            "@ledgerhq/errors": "^5.50.0",
            "events": "^3.3.0"
          }
        },
        "@ledgerhq/logs": {
          "version": "5.50.0",
          "resolved": "https://registry.npmjs.org/@ledgerhq/logs/-/logs-5.50.0.tgz",
          "integrity": "sha512-swKHYCOZUGyVt4ge0u8a7AwNcA//h4nx5wIi0sruGye1IJ5Cva0GyK9L2/WdX+kWVTKp92ZiEo1df31lrWGPgA==",
          "optional": true
        }
      }
    },
    "@ledgerhq/hw-transport-webhid": {
      "version": "5.51.1",
      "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport-webhid/-/hw-transport-webhid-5.51.1.tgz",
      "integrity": "sha512-w/2qSU0vwFY+D/4ucuYRViO7iS3Uuxmj9sI/Iiqkoiax9Xppb0/6H5m3ffKv6iPMmRYbgwCgXorqx4SLLSD8Kg==",
      "optional": true,
      "requires": {
        "@ledgerhq/devices": "^5.51.1",
        "@ledgerhq/errors": "^5.50.0",
        "@ledgerhq/hw-transport": "^5.51.1",
        "@ledgerhq/logs": "^5.50.0"
      },
      "dependencies": {
        "@ledgerhq/devices": {
          "version": "5.51.1",
          "resolved": "https://registry.npmjs.org/@ledgerhq/devices/-/devices-5.51.1.tgz",
          "integrity": "sha512-4w+P0VkbjzEXC7kv8T1GJ/9AVaP9I6uasMZ/JcdwZBS3qwvKo5A5z9uGhP5c7TvItzcmPb44b5Mw2kT+WjUuAA==",
          "optional": true,
          "requires": {
            "@ledgerhq/errors": "^5.50.0",
            "@ledgerhq/logs": "^5.50.0",
            "rxjs": "6",
            "semver": "^7.3.5"
          }
        },
        "@ledgerhq/errors": {
          "version": "5.50.0",
          "resolved": "https://registry.npmjs.org/@ledgerhq/errors/-/errors-5.50.0.tgz",
          "integrity": "sha512-gu6aJ/BHuRlpU7kgVpy2vcYk6atjB4iauP2ymF7Gk0ez0Y/6VSMVSJvubeEQN+IV60+OBK0JgeIZG7OiHaw8ow==",
          "optional": true
        },
        "@ledgerhq/hw-transport": {
          "version": "5.51.1",
          "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport/-/hw-transport-5.51.1.tgz",
          "integrity": "sha512-6wDYdbWrw9VwHIcoDnqWBaDFyviyjZWv6H9vz9Vyhe4Qd7TIFmbTl/eWs6hZvtZBza9K8y7zD8ChHwRI4s9tSw==",
          "optional": true,
          "requires": {
            "@ledgerhq/devices": "^5.51.1",
            "@ledgerhq/errors": "^5.50.0",
            "events": "^3.3.0"
          }
        },
        "@ledgerhq/logs": {
          "version": "5.50.0",
          "resolved": "https://registry.npmjs.org/@ledgerhq/logs/-/logs-5.50.0.tgz",
          "integrity": "sha512-swKHYCOZUGyVt4ge0u8a7AwNcA//h4nx5wIi0sruGye1IJ5Cva0GyK9L2/WdX+kWVTKp92ZiEo1df31lrWGPgA==",
          "optional": true
        }
      }
    },
    "@ledgerhq/hw-transport-webusb": {
      "version": "5.53.1",
      "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport-webusb/-/hw-transport-webusb-5.53.1.tgz",
      "integrity": "sha512-A/f+xcrkIAZiJrvPpDvsrjxQX4cI2kbdiunQkwsYmOG3Bp4z89ZnsBiC7YBst4n2/g+QgTg0/KPVtODU5djooQ==",
      "optional": true,
      "requires": {
        "@ledgerhq/devices": "^5.51.1",
        "@ledgerhq/errors": "^5.50.0",
        "@ledgerhq/hw-transport": "^5.51.1",
        "@ledgerhq/logs": "^5.50.0"
      },
      "dependencies": {
        "@ledgerhq/devices": {
          "version": "5.51.1",
          "resolved": "https://registry.npmjs.org/@ledgerhq/devices/-/devices-5.51.1.tgz",
          "integrity": "sha512-4w+P0VkbjzEXC7kv8T1GJ/9AVaP9I6uasMZ/JcdwZBS3qwvKo5A5z9uGhP5c7TvItzcmPb44b5Mw2kT+WjUuAA==",
          "optional": true,
          "requires": {
            "@ledgerhq/errors": "^5.50.0",
            "@ledgerhq/logs": "^5.50.0",
            "rxjs": "6",
            "semver": "^7.3.5"
          }
        },
        "@ledgerhq/errors": {
          "version": "5.50.0",
          "resolved": "https://registry.npmjs.org/@ledgerhq/errors/-/errors-5.50.0.tgz",
          "integrity": "sha512-gu6aJ/BHuRlpU7kgVpy2vcYk6atjB4iauP2ymF7Gk0ez0Y/6VSMVSJvubeEQN+IV60+OBK0JgeIZG7OiHaw8ow==",
          "optional": true
        },
        "@ledgerhq/hw-transport": {
          "version": "5.51.1",
          "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport/-/hw-transport-5.51.1.tgz",
          "integrity": "sha512-6wDYdbWrw9VwHIcoDnqWBaDFyviyjZWv6H9vz9Vyhe4Qd7TIFmbTl/eWs6hZvtZBza9K8y7zD8ChHwRI4s9tSw==",
          "optional": true,
          "requires": {
            "@ledgerhq/devices": "^5.51.1",
            "@ledgerhq/errors": "^5.50.0",
            "events": "^3.3.0"
          }
        },
        "@ledgerhq/logs": {
          "version": "5.50.0",
          "resolved": "https://registry.npmjs.org/@ledgerhq/logs/-/logs-5.50.0.tgz",
          "integrity": "sha512-swKHYCOZUGyVt4ge0u8a7AwNcA//h4nx5wIi0sruGye1IJ5Cva0GyK9L2/WdX+kWVTKp92ZiEo1df31lrWGPgA==",
          "optional": true
        }
      }
    },
    "@ledgerhq/logs": {
      "version": "6.10.1",
      "resolved": "https://registry.npmjs.org/@ledgerhq/logs/-/logs-6.10.1.tgz",
      "integrity": "sha512-z+ILK8Q3y+nfUl43ctCPuR4Y2bIxk/ooCQFwZxhtci1EhAtMDzMAx2W25qx8G1PPL9UUOdnUax19+F0OjXoj4w==",
      "optional": true
    },
    "@rollup/plugin-babel": {
      "version": "5.3.1",
      "resolved": "https://registry.npmjs.org/@rollup/plugin-babel/-/plugin-babel-5.3.1.tgz",
      "integrity": "sha512-WFfdLWU/xVWKeRQnKmIAQULUI7Il0gZnBIH/ZFO069wYIfPu+8zrfp/KMW0atmELoRDq8FbiP3VCss9MhCut7Q==",
      "requires": {
        "@babel/helper-module-imports": "^7.10.4",
        "@rollup/pluginutils": "^3.1.0"
      }
    },
    "@rollup/plugin-commonjs": {
      "version": "21.1.0",
      "resolved": "https://registry.npmjs.org/@rollup/plugin-commonjs/-/plugin-commonjs-21.1.0.tgz",
      "integrity": "sha512-6ZtHx3VHIp2ReNNDxHjuUml6ur+WcQ28N1yHgCQwsbNkQg2suhxGMDQGJOn/KuDxKtd1xuZP5xSTwBA4GQ8hbA==",
      "requires": {
        "@rollup/pluginutils": "^3.1.0",
        "commondir": "^1.0.1",
        "estree-walker": "^2.0.1",
        "glob": "^7.1.6",
        "is-reference": "^1.2.1",
        "magic-string": "^0.25.7",
        "resolve": "^1.17.0"
      }
    },
    "@rollup/plugin-node-resolve": {
      "version": "13.3.0",
      "resolved": "https://registry.npmjs.org/@rollup/plugin-node-resolve/-/plugin-node-resolve-13.3.0.tgz",
      "integrity": "sha512-Lus8rbUo1eEcnS4yTFKLZrVumLPY+YayBdWXgFSHYhTT2iJbMhoaaBL3xl5NCdeRytErGr8tZ0L71BMRmnlwSw==",
      "requires": {
        "@rollup/pluginutils": "^3.1.0",
        "@types/resolve": "1.17.1",
        "deepmerge": "^4.2.2",
        "is-builtin-module": "^3.1.0",
        "is-module": "^1.0.0",
        "resolve": "^1.19.0"
      }
    },
    "@rollup/pluginutils": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/@rollup/pluginutils/-/pluginutils-3.1.0.tgz",
      "integrity": "sha512-GksZ6pr6TpIjHm8h9lSQ8pi8BE9VeubNT0OMJ3B5uZJ8pz73NPiqOtCog/x2/QzM1ENChPKxMDhiQuRHsqc+lg==",
      "requires": {
        "@types/estree": "0.0.39",
        "estree-walker": "^1.0.1",
        "picomatch": "^2.2.2"
      },
      "dependencies": {
        "estree-walker": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/estree-walker/-/estree-walker-1.0.1.tgz",
          "integrity": "sha512-1fMXF3YP4pZZVozF8j/ZLfvnR8NSIljt56UhbZ5PeeDmmGHpgpdwQt7ITlGvYaQukCvuBRMLEiKiYC+oeIg4cg=="
        }
      }
    },
    "@scure/base": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@scure/base/-/base-1.1.1.tgz",
      "integrity": "sha512-ZxOhsSyxYwLJj3pLZCefNitxsj093tb2vq90mp2txoYeBqbcjDjqFhyM8eUjq/uFm6zJ+mUuqxlS2FkuSY1MTA=="
    },
    "@segment/loosely-validate-event": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/@segment/loosely-validate-event/-/loosely-validate-event-2.0.0.tgz",
      "integrity": "sha512-ZMCSfztDBqwotkl848ODgVcAmN4OItEWDCkshcKz0/W6gGSQayuuCtWV/MlodFivAZD793d6UgANd6wCXUfrIw==",
      "requires": {
        "component-type": "^1.2.1",
        "join-component": "^1.1.0"
      }
    },
    "@sindresorhus/is": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@sindresorhus/is/-/is-0.14.0.tgz",
      "integrity": "sha512-9NET910DNaIPngYnLLPeg+Ogzqsi9uM4mSboU5y6p8S5DzMTVEsJZrawi+BoDNUVBa2DhJqQYUFvMDfgU062LQ=="
    },
    "@sinonjs/commons": {
      "version": "1.8.3",
      "resolved": "https://registry.npmjs.org/@sinonjs/commons/-/commons-1.8.3.tgz",
      "integrity": "sha512-xkNcLAn/wZaX14RPlwizcKicDk9G3F8m2nU3L7Ukm5zBgTwiT0wsoFAHx9Jq56fJA1z/7uKGtCRu16sOUCLIHQ==",
      "requires": {
        "type-detect": "4.0.8"
      }
    },
    "@sinonjs/fake-timers": {
      "version": "8.1.0",
      "resolved": "https://registry.npmjs.org/@sinonjs/fake-timers/-/fake-timers-8.1.0.tgz",
      "integrity": "sha512-OAPJUAtgeINhh/TAlUID4QTs53Njm7xzddaVlEs/SXwgtiD1tW22zAB/W1wdqfrpmikgaWQ9Fw6Ws+hsiRm5Vg==",
      "requires": {
        "@sinonjs/commons": "^1.7.0"
      }
    },
    "@szmarczak/http-timer": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@szmarczak/http-timer/-/http-timer-1.1.2.tgz",
      "integrity": "sha512-XIB2XbzHTN6ieIjfIMV9hlVcfPU26s2vafYWQcZHWXHOxiaRZYEDKEwdl129Zyg50+foYV2jCgtrqSA6qNuNSA==",
      "requires": {
        "defer-to-connect": "^1.0.1"
      }
    },
    "@types/babel__core": {
      "version": "7.1.19",
      "resolved": "https://registry.npmjs.org/@types/babel__core/-/babel__core-7.1.19.tgz",
      "integrity": "sha512-WEOTgRsbYkvA/KCsDwVEGkd7WAr1e3g31VHQ8zy5gul/V1qKullU/BU5I68X5v7V3GnB9eotmom4v5a5gjxorw==",
      "optional": true,
      "peer": true,
      "requires": {
        "@babel/parser": "^7.1.0",
        "@babel/types": "^7.0.0",
        "@types/babel__generator": "*",
        "@types/babel__template": "*",
        "@types/babel__traverse": "*"
      }
    },
    "@types/babel__generator": {
      "version": "7.6.4",
      "resolved": "https://registry.npmjs.org/@types/babel__generator/-/babel__generator-7.6.4.tgz",
      "integrity": "sha512-tFkciB9j2K755yrTALxD44McOrk+gfpIpvC3sxHjRawj6PfnQxrse4Clq5y/Rq+G3mrBurMax/lG8Qn2t9mSsg==",
      "optional": true,
      "peer": true,
      "requires": {
        "@babel/types": "^7.0.0"
      }
    },
    "@types/babel__template": {
      "version": "7.4.1",
      "resolved": "https://registry.npmjs.org/@types/babel__template/-/babel__template-7.4.1.tgz",
      "integrity": "sha512-azBFKemX6kMg5Io+/rdGT0dkGreboUVR0Cdm3fz9QJWpaQGJRQXl7C+6hOTCZcMll7KFyEQpgbYI2lHdsS4U7g==",
      "optional": true,
      "peer": true,
      "requires": {
        "@babel/parser": "^7.1.0",
        "@babel/types": "^7.0.0"
      }
    },
    "@types/babel__traverse": {
      "version": "7.18.2",
      "resolved": "https://registry.npmjs.org/@types/babel__traverse/-/babel__traverse-7.18.2.tgz",
      "integrity": "sha512-FcFaxOr2V5KZCviw1TnutEMVUVsGt4D2hP1TAfXZAMKuHYW3xQhe3jTxNPWutgCJ3/X1c5yX8ZoGVEItxKbwBg==",
      "optional": true,
      "peer": true,
      "requires": {
        "@babel/types": "^7.3.0"
      }
    },
    "@types/estree": {
      "version": "0.0.39",
      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-0.0.39.tgz",
      "integrity": "sha512-EYNwp3bU+98cpU4lAWYYL7Zz+2gryWH1qbdDTidVd6hkiR6weksdbMadyXKXNPEkQFhXM+hVO9ZygomHXp+AIw=="
    },
    "@types/istanbul-lib-coverage": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/@types/istanbul-lib-coverage/-/istanbul-lib-coverage-2.0.4.tgz",
      "integrity": "sha512-z/QT1XN4K4KYuslS23k62yDIDLwLFkzxOuMplDtObz0+y7VqJCaO2o+SPwHCvLFZh7xazvvoor2tA/hPz9ee7g=="
    },
    "@types/istanbul-lib-report": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/@types/istanbul-lib-report/-/istanbul-lib-report-3.0.0.tgz",
      "integrity": "sha512-plGgXAPfVKFoYfa9NpYDAkseG+g6Jr294RqeqcqDixSbU34MZVJRi/P+7Y8GDpzkEwLaGZZOpKIEmeVZNtKsrg==",
      "requires": {
        "@types/istanbul-lib-coverage": "*"
      }
    },
    "@types/istanbul-reports": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/@types/istanbul-reports/-/istanbul-reports-3.0.1.tgz",
      "integrity": "sha512-c3mAZEuK0lvBp8tmuL74XRKn1+y2dcwOUpH7x4WrF6gk1GIgiluDRgMYQtw2OFcBvAJWlt6ASU3tSqxp0Uu0Aw==",
      "requires": {
        "@types/istanbul-lib-report": "*"
      }
    },
    "@types/node": {
      "version": "18.11.9",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-18.11.9.tgz",
      "integrity": "sha512-CRpX21/kGdzjOpFsZSkcrXMGIBWMGNIHXXBVFSH+ggkftxg+XYP20TESbh+zFvFj3EQOl5byk0HTRn1IL6hbqg=="
    },
    "@types/resolve": {
      "version": "1.17.1",
      "resolved": "https://registry.npmjs.org/@types/resolve/-/resolve-1.17.1.tgz",
      "integrity": "sha512-yy7HuzQhj0dhGpD8RLXSZWEkLsV9ibvxvi6EiJ3bkqLAO1RGo0WbkWQiwpRlSFymTJRz0d3k5LM3kkx8ArDbLw==",
      "requires": {
        "@types/node": "*"
      }
    },
    "@types/stack-utils": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/@types/stack-utils/-/stack-utils-2.0.1.tgz",
      "integrity": "sha512-Hl219/BT5fLAaz6NDkSuhzasy49dwQS/DSdu4MdggFB8zcXv7vflBI3xp7FEmkmdDkBUI2bPUNeMttp2knYdxw=="
    },
    "@types/yargs": {
      "version": "16.0.4",
      "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-16.0.4.tgz",
      "integrity": "sha512-T8Yc9wt/5LbJyCaLiHPReJa0kApcIgJ7Bn735GjItUfh08Z1pJvu8QZqb9s+mMvKV6WUQRV7K2R46YbjMXTTJw==",
      "requires": {
        "@types/yargs-parser": "*"
      }
    },
    "@types/yargs-parser": {
      "version": "21.0.0",
      "resolved": "https://registry.npmjs.org/@types/yargs-parser/-/yargs-parser-21.0.0.tgz",
      "integrity": "sha512-iO9ZQHkZxHn4mSakYV0vFHAVDyEOIJQrV2uZ06HxEPcx+mt8swXoZHIbaaJ2crJYFfErySgktuTZ3BeLz+XmFA=="
    },
    "analytics-node": {
      "version": "6.2.0",
      "resolved": "https://registry.npmjs.org/analytics-node/-/analytics-node-6.2.0.tgz",
      "integrity": "sha512-NLU4tCHlWt0tzEaFQL7NIoWhq2KmQSmz0JvyS2lYn6fc4fEjTMSabhJUx8H1r5995FX8fE3rZ15uIHU6u+ovlQ==",
      "requires": {
        "@segment/loosely-validate-event": "^2.0.0",
        "axios": "^0.27.2",
        "axios-retry": "3.2.0",
        "lodash.isstring": "^4.0.1",
        "md5": "^2.2.1",
        "ms": "^2.0.0",
        "remove-trailing-slash": "^0.1.0",
        "uuid": "^8.3.2"
      }
    },
    "ansi-align": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/ansi-align/-/ansi-align-3.0.1.tgz",
      "integrity": "sha512-IOfwwBF5iczOjp/WeY4YxyjqAFMQoZufdQWDd19SEExbVLNXqvpzSJ/M7Za4/sCPmQ0+GRquoA7bGcINcxew6w==",
      "requires": {
        "string-width": "^4.1.0"
      },
      "dependencies": {
        "is-fullwidth-code-point": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
          "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg=="
        },
        "string-width": {
          "version": "4.2.3",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
          "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
          "requires": {
            "emoji-regex": "^8.0.0",
            "is-fullwidth-code-point": "^3.0.0",
            "strip-ansi": "^6.0.1"
          }
        },
        "strip-ansi": {
          "version": "6.0.1",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
          "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
          "requires": {
            "ansi-regex": "^5.0.1"
          }
        }
      }
    },
    "ansi-escapes": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-6.0.0.tgz",
      "integrity": "sha512-IG23inYII3dWlU2EyiAiGj6Bwal5GzsgPMwjYGvc1HPE2dgbj4ZB5ToWBKSquKw74nB3TIuOwaI6/jSULzfgrw==",
      "requires": {
        "type-fest": "^3.0.0"
      },
      "dependencies": {
        "type-fest": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-3.1.0.tgz",
          "integrity": "sha512-StmrZmK3eD9mDF9Vt7UhqthrDSk66O9iYl5t5a0TSoVkHjl0XZx/xuc/BRz4urAXXGHOY5OLsE0RdJFIApSFmw=="
        }
      }
    },
    "ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ=="
    },
    "ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "requires": {
        "color-convert": "^2.0.1"
      }
    },
    "aproba": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/aproba/-/aproba-1.2.0.tgz",
      "integrity": "sha512-Y9J6ZjXtoYh8RnXVCMOU/ttDmk1aBjunq9vO0ta5x85WDQiQfUF9sIPBITdbiiIVcBo03Hi3jMxigBtsddlXRw==",
      "optional": true
    },
    "are-we-there-yet": {
      "version": "1.1.7",
      "resolved": "https://registry.npmjs.org/are-we-there-yet/-/are-we-there-yet-1.1.7.tgz",
      "integrity": "sha512-nxwy40TuMiUGqMyRHgCSWZ9FM4VAoRP4xUYSTv5ImRog+h9yISPbVH7H8fASCIzYn9wlEv4zvFL7uKDMCFQm3g==",
      "optional": true,
      "requires": {
        "delegates": "^1.0.0",
        "readable-stream": "^2.0.6"
      },
      "dependencies": {
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "optional": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "safe-buffer": {
          "version": "5.1.2",
          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
          "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
          "optional": true
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "optional": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "ascii-table": {
      "version": "0.0.9",
      "resolved": "https://registry.npmjs.org/ascii-table/-/ascii-table-0.0.9.tgz",
      "integrity": "sha512-xpkr6sCDIYTPqzvjG8M3ncw1YOTaloWZOyrUmicoEifBEKzQzt+ooUpRpQ/AbOoJfO/p2ZKiyp79qHThzJDulQ=="
    },
    "asynckit": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
      "integrity": "sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q=="
    },
    "atob": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/atob/-/atob-2.1.2.tgz",
      "integrity": "sha512-Wm6ukoaOGJi/73p/cl2GvLjTI5JM1k/O14isD73YML8StrH/7/lRFgmg8nICZgD3bZZvjwCGxtMOD3wWNAu8cg=="
    },
    "axios": {
      "version": "0.27.2",
      "resolved": "https://registry.npmjs.org/axios/-/axios-0.27.2.tgz",
      "integrity": "sha512-t+yRIyySRTp/wua5xEr+z1q60QmLq8ABsS5O9Me1AsE5dfKqgnCFzwiCZZ/cGNd1lq4/7akDWMxdhVlucjmnOQ==",
      "requires": {
        "follow-redirects": "^1.14.9",
        "form-data": "^4.0.0"
      }
    },
    "axios-retry": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/axios-retry/-/axios-retry-3.2.0.tgz",
      "integrity": "sha512-RK2cLMgIsAQBDhlIsJR5dOhODPigvel18XUv1dDXW+4k1FzebyfRk+C+orot6WPZOYFKSfhLwHPwVmTVOODQ5w==",
      "requires": {
        "is-retry-allowed": "^1.1.0"
      }
    },
    "balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw=="
    },
    "base-x": {
      "version": "3.0.9",
      "resolved": "https://registry.npmjs.org/base-x/-/base-x-3.0.9.tgz",
      "integrity": "sha512-H7JU6iBHTal1gp56aKoaa//YUxEaAOUiydvrV/pILqIHXTtqxSkATOnDA2u+jZ/61sD+L/412+7kzXRtWukhpQ==",
      "requires": {
        "safe-buffer": "^5.0.1"
      }
    },
    "base64-js": {
      "version": "1.5.1",
      "resolved": "https://registry.npmjs.org/base64-js/-/base64-js-1.5.1.tgz",
      "integrity": "sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA=="
    },
    "bindings": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/bindings/-/bindings-1.5.0.tgz",
      "integrity": "sha512-p2q/t/mhvuOj/UeLlV6566GD/guowlr0hHxClI0W9m7MWYkL1F0hLo+0Aexs9HSPCtR1SXQ0TD3MMKrXZajbiQ==",
      "optional": true,
      "requires": {
        "file-uri-to-path": "1.0.0"
      }
    },
    "bip39": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/bip39/-/bip39-3.0.2.tgz",
      "integrity": "sha512-J4E1r2N0tUylTKt07ibXvhpT2c5pyAFgvuA5q1H9uDy6dEGpjV8jmymh3MTYJDLCNbIVClSB9FbND49I6N24MQ==",
      "requires": {
        "@types/node": "11.11.6",
        "create-hash": "^1.1.0",
        "pbkdf2": "^3.0.9",
        "randombytes": "^2.0.1"
      },
      "dependencies": {
        "@types/node": {
          "version": "11.11.6",
          "resolved": "https://registry.npmjs.org/@types/node/-/node-11.11.6.tgz",
          "integrity": "sha512-Exw4yUWMBXM3X+8oqzJNRqZSwUAaS4+7NdvHqQuFi/d+synz++xmX3QIf+BFqneW8N31R8Ky+sikfZUXq07ggQ=="
        }
      }
    },
    "bip39-light": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/bip39-light/-/bip39-light-1.0.7.tgz",
      "integrity": "sha512-WDTmLRQUsiioBdTs9BmSEmkJza+8xfJmptsNJjxnoq3EydSa/ZBXT6rm66KoT3PJIRYMnhSKNR7S9YL1l7R40Q==",
      "requires": {
        "create-hash": "^1.1.0",
        "pbkdf2": "^3.0.9"
      }
    },
    "bl": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/bl/-/bl-4.1.0.tgz",
      "integrity": "sha512-1W07cM9gS6DcLperZfFSj+bWLtaPGSOHWhPiGzXmvVJbRLdG82sH/Kn8EtW1VqWVA54AKf2h5k5BbnIbwF3h6w==",
      "optional": true,
      "requires": {
        "buffer": "^5.5.0",
        "inherits": "^2.0.4",
        "readable-stream": "^3.4.0"
      }
    },
    "bn.js": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-5.2.1.tgz",
      "integrity": "sha512-eXRvHzWyYPBuB4NBy0cmYQjGitUrtqwbvlzP3G6VFnNRbsZQIxQ10PbKKHt8gZ/HW/D/747aDl+QkDqg3KQLMQ=="
    },
    "borsh": {
      "version": "0.7.0",
      "resolved": "https://registry.npmjs.org/borsh/-/borsh-0.7.0.tgz",
      "integrity": "sha512-CLCsZGIBCFnPtkNnieW/a8wmreDmfUtjU2m9yHrzPXIlNbqVs0AQrSatSG6vdNYUqdc83tkQi2eHfF98ubzQLA==",
      "requires": {
        "bn.js": "^5.2.0",
        "bs58": "^4.0.0",
        "text-encoding-utf-8": "^1.0.2"
      }
    },
    "boxen": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/boxen/-/boxen-5.1.2.tgz",
      "integrity": "sha512-9gYgQKXx+1nP8mP7CzFyaUARhg7D3n1dF/FnErWmu9l6JvGpNUN278h0aSb+QjoiKSWG+iZ3uHrcqk0qrY9RQQ==",
      "requires": {
        "ansi-align": "^3.0.0",
        "camelcase": "^6.2.0",
        "chalk": "^4.1.0",
        "cli-boxes": "^2.2.1",
        "string-width": "^4.2.2",
        "type-fest": "^0.20.2",
        "widest-line": "^3.1.0",
        "wrap-ansi": "^7.0.0"
      },
      "dependencies": {
        "is-fullwidth-code-point": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
          "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg=="
        },
        "string-width": {
          "version": "4.2.3",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
          "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
          "requires": {
            "emoji-regex": "^8.0.0",
            "is-fullwidth-code-point": "^3.0.0",
            "strip-ansi": "^6.0.1"
          }
        },
        "strip-ansi": {
          "version": "6.0.1",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
          "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
          "requires": {
            "ansi-regex": "^5.0.1"
          }
        }
      }
    },
    "brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "requires": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "braces": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.2.tgz",
      "integrity": "sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==",
      "requires": {
        "fill-range": "^7.0.1"
      }
    },
    "browserslist": {
      "version": "4.21.4",
      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.21.4.tgz",
      "integrity": "sha512-CBHJJdDmgjl3daYjN5Cp5kbTf1mUhZoS+beLklHIvkOWscs83YAhLlF3Wsh/lciQYAcbBJgTOD44VtG31ZM4Hw==",
      "requires": {
        "caniuse-lite": "^1.0.30001400",
        "electron-to-chromium": "^1.4.251",
        "node-releases": "^2.0.6",
        "update-browserslist-db": "^1.0.9"
      }
    },
    "bs58": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/bs58/-/bs58-4.0.1.tgz",
      "integrity": "sha512-Ok3Wdf5vOIlBrgCvTq96gBkJw+JUEzdBgyaza5HLtPm7yTHkjRy8+JzNyHF7BHa0bNWOQIp3m5YF0nnFcOIKLw==",
      "requires": {
        "base-x": "^3.0.2"
      }
    },
    "buffer": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz",
      "integrity": "sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==",
      "optional": true,
      "requires": {
        "base64-js": "^1.3.1",
        "ieee754": "^1.1.13"
      }
    },
    "builtin-modules": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/builtin-modules/-/builtin-modules-3.3.0.tgz",
      "integrity": "sha512-zhaCDicdLuWN5UbN5IMnFqNMhNfo919sH85y2/ea+5Yg9TsTkeZxpL+JLbp6cgYFS4sRLp3YV4S6yDuqVWHYOw=="
    },
    "cacheable-request": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/cacheable-request/-/cacheable-request-6.1.0.tgz",
      "integrity": "sha512-Oj3cAGPCqOZX7Rz64Uny2GYAZNliQSqfbePrgAQ1wKAihYmCUnraBtJtKcGR4xz7wF+LoJC+ssFZvv5BgF9Igg==",
      "requires": {
        "clone-response": "^1.0.2",
        "get-stream": "^5.1.0",
        "http-cache-semantics": "^4.0.0",
        "keyv": "^3.0.0",
        "lowercase-keys": "^2.0.0",
        "normalize-url": "^4.1.0",
        "responselike": "^1.0.2"
      },
      "dependencies": {
        "get-stream": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-5.2.0.tgz",
          "integrity": "sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==",
          "requires": {
            "pump": "^3.0.0"
          }
        },
        "json-buffer": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.0.tgz",
          "integrity": "sha512-CuUqjv0FUZIdXkHPI8MezCnFCdaTAacej1TZYulLoAg1h/PhwkdXFN4V/gzY4g+fMBCOV2xF+rp7t2XD2ns/NQ=="
        },
        "keyv": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/keyv/-/keyv-3.1.0.tgz",
          "integrity": "sha512-9ykJ/46SN/9KPM/sichzQ7OvXyGDYKGTaDlKMGCAlg2UK8KRy4jb0d8sFc+0Tt0YYnThq8X2RZgCg74RPxgcVA==",
          "requires": {
            "json-buffer": "3.0.0"
          }
        },
        "lowercase-keys": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-2.0.0.tgz",
          "integrity": "sha512-tqNXrS78oMOE73NMxK4EMLQsQowWf8jKooH9g7xPavRT706R6bkQJ6DY2Te7QukaZsulxa30wQ7bk0pm4XiHmA=="
        }
      }
    },
    "camelcase": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-6.3.0.tgz",
      "integrity": "sha512-Gmy6FhYlCY7uOElZUSbxo2UCDH8owEk996gkbrpsgGtrJLM3J7jGxl9Ic7Qwwj4ivOE5AWZWRMecDdF7hqGjFA=="
    },
    "caniuse-lite": {
      "version": "1.0.30001426",
      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001426.tgz",
      "integrity": "sha512-n7cosrHLl8AWt0wwZw/PJZgUg3lV0gk9LMI7ikGJwhyhgsd2Nb65vKvmSexCqq/J7rbH3mFG6yZZiPR5dLPW5A=="
    },
    "capability": {
      "version": "0.2.5",
      "resolved": "https://registry.npmjs.org/capability/-/capability-0.2.5.tgz",
      "integrity": "sha512-rsJZYVCgXd08sPqwmaIqjAd5SUTfonV0z/gDJ8D6cN8wQphky1kkAYEqQ+hmDxTw7UihvBfjUVUSY+DBEe44jg=="
    },
    "chalk": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
      "requires": {
        "ansi-styles": "^4.1.0",
        "supports-color": "^7.1.0"
      }
    },
    "chardet": {
      "version": "0.7.0",
      "resolved": "https://registry.npmjs.org/chardet/-/chardet-0.7.0.tgz",
      "integrity": "sha512-mT8iDcrh03qDGRRmoA2hmBJnxpllMR+0/0qlzjqZES6NdiWDcZkCNAk4rPFZ9Q85r27unkiNNg8ZOiwZXBHwcA=="
    },
    "charenc": {
      "version": "0.0.2",
      "resolved": "https://registry.npmjs.org/charenc/-/charenc-0.0.2.tgz",
      "integrity": "sha512-yrLQ/yVUFXkzg7EDQsPieE/53+0RlaWTs+wBrvW36cyilJ2SaDWfl4Yj7MtLTXleV9uEKefbAGUPv2/iWSooRA=="
    },
    "chownr": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/chownr/-/chownr-1.1.4.tgz",
      "integrity": "sha512-jJ0bqzaylmJtVnNgzTeSOs8DPavpbYgEr/b0YL8/2GO3xJEhInFmhKMUnEJQjZumK7KXGFhUy89PrsJWlakBVg==",
      "optional": true
    },
    "ci-info": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-2.0.0.tgz",
      "integrity": "sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ=="
    },
    "cipher-base": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/cipher-base/-/cipher-base-1.0.4.tgz",
      "integrity": "sha512-Kkht5ye6ZGmwv40uUDZztayT2ThLQGfnj/T71N/XzeZeo3nf8foyW7zGTsPYkEya3m5f3cAypH+qe7YOrM1U2Q==",
      "requires": {
        "inherits": "^2.0.1",
        "safe-buffer": "^5.0.1"
      }
    },
    "cli-boxes": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/cli-boxes/-/cli-boxes-2.2.1.tgz",
      "integrity": "sha512-y4coMcylgSCdVinjiDBuR8PCC2bLjyGTwEmPb9NHR/QaNU6EUOXcTY/s6VjGMD6ENSEaeQYHCY0GNGS5jfMwPw=="
    },
    "cli-cursor": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/cli-cursor/-/cli-cursor-4.0.0.tgz",
      "integrity": "sha512-VGtlMu3x/4DOtIUwEkRezxUZ2lBacNJCHash0N0WeZDBS+7Ux1dm3XWAgWYxLJFMMdOeXMHXorshEFhbMSGelg==",
      "requires": {
        "restore-cursor": "^4.0.0"
      }
    },
    "cli-spinners": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/cli-spinners/-/cli-spinners-2.7.0.tgz",
      "integrity": "sha512-qu3pN8Y3qHNgE2AFweciB1IfMnmZ/fsNTEE+NOFjmGB2F/7rLhnhzppvpCnN4FovtP26k8lHyy9ptEbNwWFLzw=="
    },
    "cli-width": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/cli-width/-/cli-width-4.0.0.tgz",
      "integrity": "sha512-ZksGS2xpa/bYkNzN3BAw1wEjsLV/ZKOf/CCrJ/QOBsxx6fOARIkwTutxp1XIOIohi6HKmOFjMoK/XaqDVUpEEw=="
    },
    "cliui": {
      "version": "7.0.4",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-7.0.4.tgz",
      "integrity": "sha512-OcRE68cOsVMXp1Yvonl/fzkQOyjLSu/8bhPDfQt0e0/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==",
      "requires": {
        "string-width": "^4.2.0",
        "strip-ansi": "^6.0.0",
        "wrap-ansi": "^7.0.0"
      },
      "dependencies": {
        "is-fullwidth-code-point": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
          "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg=="
        },
        "string-width": {
          "version": "4.2.3",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
          "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
          "requires": {
            "emoji-regex": "^8.0.0",
            "is-fullwidth-code-point": "^3.0.0",
            "strip-ansi": "^6.0.1"
          }
        },
        "strip-ansi": {
          "version": "6.0.1",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
          "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
          "requires": {
            "ansi-regex": "^5.0.1"
          }
        }
      }
    },
    "clone": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/clone/-/clone-1.0.4.tgz",
      "integrity": "sha512-JQHZ2QMW6l3aH/j6xCqQThY/9OH4D/9ls34cgkUBiEeocRTU04tHfKPBsUK1PqZCUQM7GiA0IIXJSuXHI64Kbg=="
    },
    "clone-response": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/clone-response/-/clone-response-1.0.3.tgz",
      "integrity": "sha512-ROoL94jJH2dUVML2Y/5PEDNaSHgeOdSDicUyS7izcF63G6sTc/FTjLub4b8Il9S8S0beOfYt0TaA5qvFK+w0wA==",
      "requires": {
        "mimic-response": "^1.0.0"
      },
      "dependencies": {
        "mimic-response": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-1.0.1.tgz",
          "integrity": "sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ=="
        }
      }
    },
    "code-point-at": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/code-point-at/-/code-point-at-1.1.0.tgz",
      "integrity": "sha512-RpAVKQA5T63xEj6/giIbUEtZwJ4UFIc3ZtvEkiaUERylqe8xb5IvqcgOurZLahv93CLKfxcw5YI+DZcUBRyLXA==",
      "optional": true
    },
    "color-convert": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
      "requires": {
        "color-name": "~1.1.4"
      }
    },
    "color-name": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA=="
    },
    "combined-stream": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
      "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
      "requires": {
        "delayed-stream": "~1.0.0"
      }
    },
    "commondir": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/commondir/-/commondir-1.0.1.tgz",
      "integrity": "sha512-W9pAhw0ja1Edb5GVdIF1mjZw/ASI0AlShXM83UUGe2DVr5TdAPEA1OA8m/g8zWp9x6On7gqufY+FatDbC3MDQg=="
    },
    "component-type": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/component-type/-/component-type-1.2.1.tgz",
      "integrity": "sha512-Kgy+2+Uwr75vAi6ChWXgHuLvd+QLD7ssgpaRq2zCvt80ptvAfMc/hijcJxXkBa2wMlEZcJvC2H8Ubo+A9ATHIg=="
    },
    "concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg=="
    },
    "configstore": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/configstore/-/configstore-5.0.1.tgz",
      "integrity": "sha512-aMKprgk5YhBNyH25hj8wGt2+D52Sw1DRRIzqBwLp2Ya9mFmY8KPvvtvmna8SxVR9JMZ4kzMD68N22vlaRpkeFA==",
      "requires": {
        "dot-prop": "^5.2.0",
        "graceful-fs": "^4.1.2",
        "make-dir": "^3.0.0",
        "unique-string": "^2.0.0",
        "write-file-atomic": "^3.0.0",
        "xdg-basedir": "^4.0.0"
      }
    },
    "console-control-strings": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/console-control-strings/-/console-control-strings-1.1.0.tgz",
      "integrity": "sha512-ty/fTekppD2fIwRvnZAVdeOiGd1c7YXEixbgJTNzqcxJWKQnjJ/V1bNEEE6hygpM3WjwHFUVK6HTjWSzV4a8sQ==",
      "optional": true
    },
    "convert-source-map": {
      "version": "1.9.0",
      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-1.9.0.tgz",
      "integrity": "sha512-ASFBup0Mz1uyiIjANan1jzLQami9z1PoYSZCiiYW2FczPbenXc45FZdBZLzOT+r6+iciuEModtmCti+hjaAk0A=="
    },
    "core-util-is": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.3.tgz",
      "integrity": "sha512-ZQBvi1DcpJ4GDqanjucZ2Hj3wEO5pZDS89BWbkcrvdxksJorwUDDZamX9ldFkp9aw2lmBDLgkObEA4DWNJ9FYQ==",
      "optional": true
    },
    "create-hash": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/create-hash/-/create-hash-1.2.0.tgz",
      "integrity": "sha512-z00bCGNHDG8mHAkP7CtT1qVu+bFQUPjYq/4Iv3C3kWjTFV10zIjfSoeqXo9Asws8gwSHDGj/hl2u4OGIjapeCg==",
      "requires": {
        "cipher-base": "^1.0.1",
        "inherits": "^2.0.1",
        "md5.js": "^1.3.4",
        "ripemd160": "^2.0.1",
        "sha.js": "^2.4.0"
      }
    },
    "create-hmac": {
      "version": "1.1.7",
      "resolved": "https://registry.npmjs.org/create-hmac/-/create-hmac-1.1.7.tgz",
      "integrity": "sha512-MJG9liiZ+ogc4TzUwuvbER1JRdgvUFSB5+VR/g5h82fGaIRWMWddtKBHi7/sVhfjQZ6SehlyhvQYrcYkaUIpLg==",
      "requires": {
        "cipher-base": "^1.0.3",
        "create-hash": "^1.1.0",
        "inherits": "^2.0.1",
        "ripemd160": "^2.0.0",
        "safe-buffer": "^5.0.1",
        "sha.js": "^2.4.8"
      }
    },
    "crypt": {
      "version": "0.0.2",
      "resolved": "https://registry.npmjs.org/crypt/-/crypt-0.0.2.tgz",
      "integrity": "sha512-mCxBlsHFYh9C+HVpiEacem8FEBnMXgU9gy4zmNC+SXAZNB/1idgp/aulFJ4FgCi7GPEVbfyng092GqL2k2rmow=="
    },
    "crypto-random-string": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/crypto-random-string/-/crypto-random-string-2.0.0.tgz",
      "integrity": "sha512-v1plID3y9r/lPhviJ1wrXpLeyUIGAZ2SHNYTEapm7/8A9nLPoyvVp3RK/EPFqn5kEznyWgYZNsRtYYIWbuG8KA=="
    },
    "debug": {
      "version": "4.3.4",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.4.tgz",
      "integrity": "sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==",
      "requires": {
        "ms": "2.1.2"
      },
      "dependencies": {
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
        }
      }
    },
    "decode-uri-component": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/decode-uri-component/-/decode-uri-component-0.2.0.tgz",
      "integrity": "sha512-hjf+xovcEn31w/EUYdTXQh/8smFL/dzYjohQGEIgjyNavaJfBY2p5F527Bo1VPATxv0VYTUC2bOcXvqFwk78Og=="
    },
    "decompress-response": {
      "version": "4.2.1",
      "resolved": "https://registry.npmjs.org/decompress-response/-/decompress-response-4.2.1.tgz",
      "integrity": "sha512-jOSne2qbyE+/r8G1VU+G/82LBs2Fs4LAsTiLSHOCOMZQl2OKZ6i8i4IyHemTe+/yIXOtTcRQMzPcgyhoFlqPkw==",
      "optional": true,
      "requires": {
        "mimic-response": "^2.0.0"
      }
    },
    "deep-extend": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/deep-extend/-/deep-extend-0.6.0.tgz",
      "integrity": "sha512-LOHxIOaPYdHlJRtCQfDIVZtfw/ufM8+rVj649RIHzcm/vGwQRXFt6OPqIFWsm2XEMrNIEtWR64sY1LEKD2vAOA=="
    },
    "deep-is": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz",
      "integrity": "sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ=="
    },
    "deepmerge": {
      "version": "4.2.2",
      "resolved": "https://registry.npmjs.org/deepmerge/-/deepmerge-4.2.2.tgz",
      "integrity": "sha512-FJ3UgI4gIl+PHZm53knsuSFpE+nESMr7M4v9QcgB7S63Kj/6WqMiFQJpBBYz1Pt+66bZpP3Q7Lye0Oo9MPKEdg=="
    },
    "defaults": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/defaults/-/defaults-1.0.4.tgz",
      "integrity": "sha512-eFuaLoy/Rxalv2kr+lqMlUnrDWV+3j4pljOIJgLIhI058IQfWJ7vXhyEIHu+HtC738klGALYxOKDO0bQP3tg8A==",
      "requires": {
        "clone": "^1.0.2"
      }
    },
    "defer-to-connect": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/defer-to-connect/-/defer-to-connect-1.1.3.tgz",
      "integrity": "sha512-0ISdNousHvZT2EiFlZeZAHBUvSxmKswVCEf8hW7KWgG4a8MVEu/3Vb6uWYozkjylyCxe0JBIiRB1jV45S70WVQ=="
    },
    "define-lazy-prop": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/define-lazy-prop/-/define-lazy-prop-2.0.0.tgz",
      "integrity": "sha512-Ds09qNh8yw3khSjiJjiUInaGX9xlqZDY7JVryGxdxV7NPeuqQfplOpQ66yJFZut3jLa5zOwkXw1g9EI2uKh4Og=="
    },
    "delayed-stream": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
      "integrity": "sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ=="
    },
    "delegates": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/delegates/-/delegates-1.0.0.tgz",
      "integrity": "sha512-bd2L678uiWATM6m5Z1VzNCErI3jiGzt6HGY8OVICs40JQq/HALfbyNJmp0UDakEY4pMMaN0Ly5om/B1VI/+xfQ==",
      "optional": true
    },
    "depd": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz",
      "integrity": "sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw=="
    },
    "detect-libc": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/detect-libc/-/detect-libc-1.0.3.tgz",
      "integrity": "sha512-pGjwhsmsp4kL2RTz08wcOlGN83otlqHeD/Z5T8GXZB+/YcpQ/dgo+lbU8ZsGxV0HIvqqxo9l7mqYwyYMD9bKDg==",
      "optional": true
    },
    "dot-prop": {
      "version": "5.3.0",
      "resolved": "https://registry.npmjs.org/dot-prop/-/dot-prop-5.3.0.tgz",
      "integrity": "sha512-QM8q3zDe58hqUqjraQOmzZ1LIH9SWQJTlEKCH4kJ2oQvLZk7RbQXvtDM2XEq3fwkV9CCvvH4LA0AV+ogFsBM2Q==",
      "requires": {
        "is-obj": "^2.0.0"
      }
    },
    "duplexer3": {
      "version": "0.1.5",
      "resolved": "https://registry.npmjs.org/duplexer3/-/duplexer3-0.1.5.tgz",
      "integrity": "sha512-1A8za6ws41LQgv9HrE/66jyC5yuSjQ3L/KOpFtoBilsAK2iA2wuS5rTt1OCzIvtS2V7nVmedsUU+DGRcjBmOYA=="
    },
    "eastasianwidth": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz",
      "integrity": "sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA=="
    },
    "electron-to-chromium": {
      "version": "1.4.284",
      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.4.284.tgz",
      "integrity": "sha512-M8WEXFuKXMYMVr45fo8mq0wUrrJHheiKZf6BArTKk9ZBYCKJEOU5H8cdWgDT+qCVZf7Na4lVUaZsA+h6uA9+PA=="
    },
    "emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A=="
    },
    "end-of-stream": {
      "version": "1.4.4",
      "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz",
      "integrity": "sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==",
      "requires": {
        "once": "^1.4.0"
      }
    },
    "error-polyfill": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/error-polyfill/-/error-polyfill-0.1.3.tgz",
      "integrity": "sha512-XHJk60ufE+TG/ydwp4lilOog549iiQF2OAPhkk9DdiYWMrltz5yhDz/xnKuenNwP7gy3dsibssO5QpVhkrSzzg==",
      "requires": {
        "capability": "^0.2.5",
        "o3": "^1.0.3",
        "u3": "^0.1.1"
      }
    },
    "escalade": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.1.1.tgz",
      "integrity": "sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw=="
    },
    "escape-goat": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/escape-goat/-/escape-goat-2.1.1.tgz",
      "integrity": "sha512-8/uIhbG12Csjy2JEW7D9pHbreaVaS/OpN3ycnyvElTdwM5n6GY6W6e2IPemfvGZeUMqZ9A/3GqIZMgKnBhAw/Q=="
    },
    "escape-string-regexp": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-2.0.0.tgz",
      "integrity": "sha512-UpzcLCXolUWcNu5HtVMHYdXJjArjsF9C0aNnquZYY4uW/Vu0miy5YoWvbV345HauVvcAUnpRuhMMcqTcGOY2+w=="
    },
    "estree-walker": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/estree-walker/-/estree-walker-2.0.2.tgz",
      "integrity": "sha512-Rfkk/Mp/DL7JVje3u18FxFujQlTNR2q6QfMSMB7AvCBx91NGj/ba3kCfza0f6dVDbw7YlRf/nDrn7pQrCCyQ/w=="
    },
    "events": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/events/-/events-3.3.0.tgz",
      "integrity": "sha512-mQw+2fkQbALzQ7V0MY0IqdnXNOeTtP4r0lN9z7AAawCXgqea7bDii20AYrIBrFd/Hx0M2Ocz6S111CaFkUcb0Q==",
      "optional": true
    },
    "expand-template": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/expand-template/-/expand-template-2.0.3.tgz",
      "integrity": "sha512-XYfuKMvj4O35f/pOXLObndIRvyQ+/+6AhODh+OKWj9S9498pHHn/IMszH+gt0fBCRWMNfk1ZSp5x3AifmnI2vg==",
      "optional": true
    },
    "external-editor": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/external-editor/-/external-editor-3.1.0.tgz",
      "integrity": "sha512-hMQ4CX1p1izmuLYyZqLMO/qGNw10wSv9QDCPfzXfyFrOaCSSoRfqE1Kf1s5an66J5JZC62NewG+mK49jOCtQew==",
      "requires": {
        "chardet": "^0.7.0",
        "iconv-lite": "^0.4.24",
        "tmp": "^0.0.33"
      }
    },
    "figures": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/figures/-/figures-5.0.0.tgz",
      "integrity": "sha512-ej8ksPF4x6e5wvK9yevct0UCXh8TTFlWGVLlgjZuoBH1HwjIfKE/IdL5mq89sFA7zELi1VhKpmtDnrs7zWyeyg==",
      "requires": {
        "escape-string-regexp": "^5.0.0",
        "is-unicode-supported": "^1.2.0"
      },
      "dependencies": {
        "escape-string-regexp": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-5.0.0.tgz",
          "integrity": "sha512-/veY75JbMK4j1yjvuUxuVsiS/hr/4iHs9FTT6cgTexxdE0Ly/glccBAkloH/DofkjRbZU3bnoj38mOmhkZ0lHw=="
        }
      }
    },
    "file-uri-to-path": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/file-uri-to-path/-/file-uri-to-path-1.0.0.tgz",
      "integrity": "sha512-0Zt+s3L7Vf1biwWZ29aARiVYLx7iMGnEUl9x33fbB/j3jR81u/O2LbqK+Bm1CDSNDKVtJ/YjwY7TUd5SkeLQLw==",
      "optional": true
    },
    "fill-range": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz",
      "integrity": "sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==",
      "requires": {
        "to-regex-range": "^5.0.1"
      }
    },
    "flagged-respawn": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/flagged-respawn/-/flagged-respawn-1.0.1.tgz",
      "integrity": "sha512-lNaHNVymajmk0OJMBn8fVUAU1BtDeKIqKoVhk4xAALB57aALg6b4W0MfJ/cUE0g9YBXy5XhSlPIpYIJ7HaY/3Q=="
    },
    "follow-redirects": {
      "version": "1.15.2",
      "resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.15.2.tgz",
      "integrity": "sha512-VQLG33o04KaQ8uYi2tVNbdrWp1QWxNNea+nmIB4EVM28v0hmP17z7aG1+wAkNzVq4KeXTq3221ye5qTJP91JwA=="
    },
    "form-data": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/form-data/-/form-data-4.0.0.tgz",
      "integrity": "sha512-ETEklSGi5t0QMZuiXoA/Q6vcnxcLQP5vdugSpuAyi6SVGi2clPPp+xgEhuMaHC+zGgn31Kd235W35f7Hykkaww==",
      "requires": {
        "asynckit": "^0.4.0",
        "combined-stream": "^1.0.8",
        "mime-types": "^2.1.12"
      }
    },
    "fs-constants": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs-constants/-/fs-constants-1.0.0.tgz",
      "integrity": "sha512-y6OAwoSIf7FyjMIv94u+b5rdheZEjzR63GTyZJm5qh4Bi+2YgwLCcI/fPFZkL5PSixOt6ZNKm+w+Hfp/Bciwow==",
      "optional": true
    },
    "fs.realpath": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
      "integrity": "sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw=="
    },
    "fsevents": {
      "version": "2.3.2",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.2.tgz",
      "integrity": "sha512-xiqMQR4xAeHTuB9uWm+fFRcIOgKBMiOBP+eXiyT7jsgVCq1bkVygt00oASowB7EdtpOHaaPgKt812P9ab+DDKA==",
      "optional": true
    },
    "function-bind": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz",
      "integrity": "sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A=="
    },
    "gauge": {
      "version": "2.7.4",
      "resolved": "https://registry.npmjs.org/gauge/-/gauge-2.7.4.tgz",
      "integrity": "sha512-14x4kjc6lkD3ltw589k0NrPD6cCNTD6CWoVUNpB85+DrtONoZn+Rug6xZU5RvSC4+TZPxA5AnBibQYAvZn41Hg==",
      "optional": true,
      "requires": {
        "aproba": "^1.0.3",
        "console-control-strings": "^1.0.0",
        "has-unicode": "^2.0.0",
        "object-assign": "^4.1.0",
        "signal-exit": "^3.0.0",
        "string-width": "^1.0.1",
        "strip-ansi": "^3.0.1",
        "wide-align": "^1.1.0"
      }
    },
    "gensync": {
      "version": "1.0.0-beta.2",
      "resolved": "https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz",
      "integrity": "sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg=="
    },
    "get-caller-file": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz",
      "integrity": "sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg=="
    },
    "get-stream": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-4.1.0.tgz",
      "integrity": "sha512-GMat4EJ5161kIy2HevLlr4luNjBgvmj413KaQA7jt4V8B4RDsfpHk7WQ9GVqfYyyx8OS/L66Kox+rJRNklLK7w==",
      "requires": {
        "pump": "^3.0.0"
      }
    },
    "github-from-package": {
      "version": "0.0.0",
      "resolved": "https://registry.npmjs.org/github-from-package/-/github-from-package-0.0.0.tgz",
      "integrity": "sha512-SyHy3T1v2NUXn29OsWdxmK6RwHD+vkj3v8en8AOBZ1wBQ/hCAQ5bAQTD02kW4W9tUp/3Qh6J8r9EvntiyCmOOw==",
      "optional": true
    },
    "glob": {
      "version": "7.2.3",
      "resolved": "https://registry.npmjs.org/glob/-/glob-7.2.3.tgz",
      "integrity": "sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==",
      "requires": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^3.1.1",
        "once": "^1.3.0",
        "path-is-absolute": "^1.0.0"
      }
    },
    "global-dirs": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/global-dirs/-/global-dirs-3.0.0.tgz",
      "integrity": "sha512-v8ho2DS5RiCjftj1nD9NmnfaOzTdud7RRnVd9kFNOjqZbISlx5DQ+OrTkywgd0dIt7oFCvKetZSHoHcP3sDdiA==",
      "requires": {
        "ini": "2.0.0"
      },
      "dependencies": {
        "ini": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ini/-/ini-2.0.0.tgz",
          "integrity": "sha512-7PnF4oN3CvZF23ADhA5wRaYEQpJ8qygSkbtTXWBeXWXmEVRXK+1ITciHWwHhsjv1TmW0MgacIv6hEi5pX5NQdA=="
        }
      }
    },
    "globals": {
      "version": "11.12.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-11.12.0.tgz",
      "integrity": "sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA=="
    },
    "got": {
      "version": "9.6.0",
      "resolved": "https://registry.npmjs.org/got/-/got-9.6.0.tgz",
      "integrity": "sha512-R7eWptXuGYxwijs0eV+v3o6+XH1IqVK8dJOEecQfTmkncw9AV4dcw/Dhxi8MdlqPthxxpZyizMzyg8RTmEsG+Q==",
      "requires": {
        "@sindresorhus/is": "^0.14.0",
        "@szmarczak/http-timer": "^1.1.2",
        "cacheable-request": "^6.0.0",
        "decompress-response": "^3.3.0",
        "duplexer3": "^0.1.4",
        "get-stream": "^4.1.0",
        "lowercase-keys": "^1.0.1",
        "mimic-response": "^1.0.1",
        "p-cancelable": "^1.0.0",
        "to-readable-stream": "^1.0.0",
        "url-parse-lax": "^3.0.0"
      },
      "dependencies": {
        "decompress-response": {
          "version": "3.3.0",
          "resolved": "https://registry.npmjs.org/decompress-response/-/decompress-response-3.3.0.tgz",
          "integrity": "sha512-BzRPQuY1ip+qDonAOz42gRm/pg9F768C+npV/4JOsxRC2sq+Rlk+Q4ZCAsOhnIaMrgarILY+RMUIvMmmX1qAEA==",
          "requires": {
            "mimic-response": "^1.0.0"
          }
        },
        "mimic-response": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-1.0.1.tgz",
          "integrity": "sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ=="
        }
      }
    },
    "graceful-fs": {
      "version": "4.2.10",
      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.10.tgz",
      "integrity": "sha512-9ByhssR2fPVsNZj478qUUbKfmL0+t5BDVyjShtyZZLiK7ZDAArFFfopyOTj0M05wE2tJPisA4iTnnXl2YoPvOA=="
    },
    "has": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/has/-/has-1.0.3.tgz",
      "integrity": "sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==",
      "requires": {
        "function-bind": "^1.1.1"
      }
    },
    "has-flag": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ=="
    },
    "has-unicode": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/has-unicode/-/has-unicode-2.0.1.tgz",
      "integrity": "sha512-8Rf9Y83NBReMnx0gFzA8JImQACstCYWUplepDa9xprwwtmgEZUF0h/i5xSA625zB/I37EtrswSST6OXxwaaIJQ==",
      "optional": true
    },
    "has-yarn": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/has-yarn/-/has-yarn-2.1.0.tgz",
      "integrity": "sha512-UqBRqi4ju7T+TqGNdqAO0PaSVGsDGJUBQvk9eUWNGRY1CFGDzYhLWoM7JQEemnlvVcv/YEmc2wNW8BC24EnUsw=="
    },
    "hash-base": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/hash-base/-/hash-base-3.1.0.tgz",
      "integrity": "sha512-1nmYp/rhMDiE7AYkDw+lLwlAzz0AntGIe51F3RfFfEqyQ3feY2eI/NcwC6umIQVOASPMsWJLJScWKSSvzL9IVA==",
      "requires": {
        "inherits": "^2.0.4",
        "readable-stream": "^3.6.0",
        "safe-buffer": "^5.2.0"
      }
    },
    "homedir-polyfill": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/homedir-polyfill/-/homedir-polyfill-1.0.3.tgz",
      "integrity": "sha512-eSmmWE5bZTK2Nou4g0AI3zZ9rswp7GRKoKXS1BLUkvPviOqs4YTN1djQIqrXy9k5gEtdLPy86JjRwsNM9tnDcA==",
      "requires": {
        "parse-passwd": "^1.0.0"
      }
    },
    "http-cache-semantics": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/http-cache-semantics/-/http-cache-semantics-4.1.0.tgz",
      "integrity": "sha512-carPklcUh7ROWRK7Cv27RPtdhYhUsela/ue5/jKzjegVvXDqM2ILE9Q2BGn9JZJh1g87cp56su/FgQSzcWS8cQ=="
    },
    "http-errors": {
      "version": "1.8.1",
      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.8.1.tgz",
      "integrity": "sha512-Kpk9Sm7NmI+RHhnj6OIWDI1d6fIoFAtFt9RLaTMRlg/8w49juAStsrBgp0Dp4OdxdVbRIeKhtCUvoi/RuAhO4g==",
      "requires": {
        "depd": "~1.1.2",
        "inherits": "2.0.4",
        "setprototypeof": "1.2.0",
        "statuses": ">= 1.5.0 < 2",
        "toidentifier": "1.0.1"
      },
      "dependencies": {
        "depd": {
          "version": "1.1.2",
          "resolved": "https://registry.npmjs.org/depd/-/depd-1.1.2.tgz",
          "integrity": "sha512-7emPTl6Dpo6JRXOXjLRxck+FlLRX5847cLKEn00PLAgc3g2hTZZgr+e4c2v6QpSmLeFP3n5yUo7ft6avBK/5jQ=="
        }
      }
    },
    "iconv-lite": {
      "version": "0.4.24",
      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz",
      "integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==",
      "requires": {
        "safer-buffer": ">= 2.1.2 < 3"
      }
    },
    "ieee754": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/ieee754/-/ieee754-1.2.1.tgz",
      "integrity": "sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA=="
    },
    "import-lazy": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/import-lazy/-/import-lazy-2.1.0.tgz",
      "integrity": "sha512-m7ZEHgtw69qOGw+jwxXkHlrlIPdTGkyh66zXZ1ajZbxkDBNjSY/LGbmjc7h0s2ELsUDTAhFr55TrPSSqJGPG0A=="
    },
    "imurmurhash": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
      "integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA=="
    },
    "inflight": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
      "integrity": "sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==",
      "requires": {
        "once": "^1.3.0",
        "wrappy": "1"
      }
    },
    "inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ=="
    },
    "ini": {
      "version": "1.3.8",
      "resolved": "https://registry.npmjs.org/ini/-/ini-1.3.8.tgz",
      "integrity": "sha512-JV/yugV2uzW5iMRSiZAyDtQd+nxtUnjeLt0acNdw98kKLrvuRVyB80tsREOE7yvGVgalhZ6RNXCmEHkUKBKxew=="
    },
    "inquirer": {
      "version": "9.1.4",
      "resolved": "https://registry.npmjs.org/inquirer/-/inquirer-9.1.4.tgz",
      "integrity": "sha512-9hiJxE5gkK/cM2d1mTEnuurGTAoHebbkX0BYl3h7iEg7FYfuNIom+nDfBCSWtvSnoSrWCeBxqqBZu26xdlJlXA==",
      "requires": {
        "ansi-escapes": "^6.0.0",
        "chalk": "^5.1.2",
        "cli-cursor": "^4.0.0",
        "cli-width": "^4.0.0",
        "external-editor": "^3.0.3",
        "figures": "^5.0.0",
        "lodash": "^4.17.21",
        "mute-stream": "0.0.8",
        "ora": "^6.1.2",
        "run-async": "^2.4.0",
        "rxjs": "^7.5.7",
        "string-width": "^5.1.2",
        "strip-ansi": "^7.0.1",
        "through": "^2.3.6",
        "wrap-ansi": "^8.0.1"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "6.0.1",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.0.1.tgz",
          "integrity": "sha512-n5M855fKb2SsfMIiFFoVrABHJC8QtHwVx+mHWP3QcEqBHYienj5dHSgjbxtC0WEZXYt4wcD6zrQElDPhFuZgfA=="
        },
        "ansi-styles": {
          "version": "6.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.2.1.tgz",
          "integrity": "sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug=="
        },
        "chalk": {
          "version": "5.1.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-5.1.2.tgz",
          "integrity": "sha512-E5CkT4jWURs1Vy5qGJye+XwCkNj7Od3Af7CP6SujMetSMkLs8Do2RWJK5yx1wamHV/op8Rz+9rltjaTQWDnEFQ=="
        },
        "emoji-regex": {
          "version": "9.2.2",
          "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz",
          "integrity": "sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg=="
        },
        "rxjs": {
          "version": "7.5.7",
          "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-7.5.7.tgz",
          "integrity": "sha512-z9MzKh/UcOqB3i20H6rtrlaE/CgjLOvheWK/9ILrbhROGTweAi1BaFsTT9FbwZi5Trr1qNRs+MXkhmR06awzQA==",
          "requires": {
            "tslib": "^2.1.0"
          }
        },
        "string-width": {
          "version": "5.1.2",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz",
          "integrity": "sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==",
          "requires": {
            "eastasianwidth": "^0.2.0",
            "emoji-regex": "^9.2.2",
            "strip-ansi": "^7.0.1"
          }
        },
        "strip-ansi": {
          "version": "7.0.1",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.0.1.tgz",
          "integrity": "sha512-cXNxvT8dFNRVfhVME3JAe98mkXDYN2O1l7jmcwMnOslDeESg1rF/OZMtK0nRAhiari1unG5cD4jG3rapUAkLbw==",
          "requires": {
            "ansi-regex": "^6.0.1"
          }
        },
        "tslib": {
          "version": "2.4.1",
          "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.4.1.tgz",
          "integrity": "sha512-tGyy4dAjRIEwI7BzsB0lynWgOpfqjUdq91XXAlIWD2OwKBH7oCl/GZG/HT4BOHrTlPMOASlMQ7veyTqpmRcrNA=="
        },
        "wrap-ansi": {
          "version": "8.0.1",
          "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-8.0.1.tgz",
          "integrity": "sha512-QFF+ufAqhoYHvoHdajT/Po7KoXVBPXS2bgjIam5isfWJPfIOnQZ50JtUiVvCv/sjgacf3yRrt2ZKUZ/V4itN4g==",
          "requires": {
            "ansi-styles": "^6.1.0",
            "string-width": "^5.0.1",
            "strip-ansi": "^7.0.1"
          }
        }
      }
    },
    "ip-regex": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ip-regex/-/ip-regex-4.3.0.tgz",
      "integrity": "sha512-B9ZWJxHHOHUhUjCPrMpLD4xEq35bUTClHM1S6CBU5ixQnkZmwipwgc96vAd7AAGM9TGHvJR+Uss+/Ak6UphK+Q=="
    },
    "is-buffer": {
      "version": "1.1.6",
      "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",
      "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w=="
    },
    "is-builtin-module": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/is-builtin-module/-/is-builtin-module-3.2.0.tgz",
      "integrity": "sha512-phDA4oSGt7vl1n5tJvTWooWWAsXLY+2xCnxNqvKhGEzujg+A43wPlPOyDg3C8XQHN+6k/JTQWJ/j0dQh/qr+Hw==",
      "requires": {
        "builtin-modules": "^3.3.0"
      }
    },
    "is-ci": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/is-ci/-/is-ci-2.0.0.tgz",
      "integrity": "sha512-YfJT7rkpQB0updsdHLGWrvhBJfcfzNNawYDNIyQXJz0IViGf75O8EBPKSdvw2rF+LGCsX4FZ8tcr3b19LcZq4w==",
      "requires": {
        "ci-info": "^2.0.0"
      }
    },
    "is-core-module": {
      "version": "2.11.0",
      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.11.0.tgz",
      "integrity": "sha512-RRjxlvLDkD1YJwDbroBHMb+cukurkDWNyHx7D3oNB5x9rb5ogcksMC5wHCadcXoo67gVr/+3GFySh3134zi6rw==",
      "requires": {
        "has": "^1.0.3"
      }
    },
    "is-docker": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/is-docker/-/is-docker-2.2.1.tgz",
      "integrity": "sha512-F+i2BKsFrH66iaUFc0woD8sLy8getkwTwtOBjvs56Cx4CgJDeKQeqfz8wAYiSb8JOprWhHH5p77PbmYCvvUuXQ=="
    },
    "is-fullwidth-code-point": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz",
      "integrity": "sha512-1pqUqRjkhPJ9miNq9SwMfdvi6lBJcd6eFxvfaivQhaH3SgisfiuudvFntdKOmxuee/77l+FPjKrQjWvmPjWrRw==",
      "optional": true,
      "requires": {
        "number-is-nan": "^1.0.0"
      }
    },
    "is-installed-globally": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/is-installed-globally/-/is-installed-globally-0.4.0.tgz",
      "integrity": "sha512-iwGqO3J21aaSkC7jWnHP/difazwS7SFeIqxv6wEtLU8Y5KlzFTjyqcSIT0d8s4+dDhKytsk9PJZ2BkS5eZwQRQ==",
      "requires": {
        "global-dirs": "^3.0.0",
        "is-path-inside": "^3.0.2"
      }
    },
    "is-interactive": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/is-interactive/-/is-interactive-2.0.0.tgz",
      "integrity": "sha512-qP1vozQRI+BMOPcjFzrjXuQvdak2pHNUMZoeG2eRbiSqyvbEf/wQtEOTOX1guk6E3t36RkaqiSt8A/6YElNxLQ=="
    },
    "is-module": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-module/-/is-module-1.0.0.tgz",
      "integrity": "sha512-51ypPSPCoTEIN9dy5Oy+h4pShgJmPCygKfyRCISBI+JoWT/2oJvK8QPxmwv7b/p239jXrm9M1mlQbyKJ5A152g=="
    },
    "is-npm": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/is-npm/-/is-npm-5.0.0.tgz",
      "integrity": "sha512-WW/rQLOazUq+ST/bCAVBp/2oMERWLsR7OrKyt052dNDk4DHcDE0/7QSXITlmi+VBcV13DfIbysG3tZJm5RfdBA=="
    },
    "is-number": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng=="
    },
    "is-obj": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/is-obj/-/is-obj-2.0.0.tgz",
      "integrity": "sha512-drqDG3cbczxxEJRoOXcOjtdp1J/lyp1mNn0xaznRs8+muBhgQcrnbspox5X5fOw0HnMnbfDzvnEMEtqDEJEo8w=="
    },
    "is-path-inside": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.3.tgz",
      "integrity": "sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ=="
    },
    "is-reference": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/is-reference/-/is-reference-1.2.1.tgz",
      "integrity": "sha512-U82MsXXiFIrjCK4otLT+o2NA2Cd2g5MLoOVXUZjIOhLurrRxpEXzI8O0KZHr3IjLvlAH1kTPYSuqer5T9ZVBKQ==",
      "requires": {
        "@types/estree": "*"
      }
    },
    "is-retry-allowed": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/is-retry-allowed/-/is-retry-allowed-1.2.0.tgz",
      "integrity": "sha512-RUbUeKwvm3XG2VYamhJL1xFktgjvPzL0Hq8C+6yrWIswDy3BIXGqCxhxkc30N9jqK311gVU137K8Ei55/zVJRg=="
    },
    "is-typedarray": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz",
      "integrity": "sha512-cyA56iCMHAh5CdzjJIa4aohJyeO1YbwLi3Jc35MmRU6poroFjIGZzUzupGiRPOjgHg9TLu43xbpwXk523fMxKA=="
    },
    "is-unicode-supported": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/is-unicode-supported/-/is-unicode-supported-1.3.0.tgz",
      "integrity": "sha512-43r2mRvz+8JRIKnWJ+3j8JtjRKZ6GmjzfaE/qiBJnikNnYv/6bagRJ1kUhNk8R5EX/GkobD+r+sfxCPJsiKBLQ=="
    },
    "is-url": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/is-url/-/is-url-1.2.4.tgz",
      "integrity": "sha512-ITvGim8FhRiYe4IQ5uHSkj7pVaPDrCTkNd3yq3cV7iZAcJdHTUMPMEHcqSOy9xZ9qFenQCvi+2wjH9a1nXqHww=="
    },
    "is-wsl": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/is-wsl/-/is-wsl-2.2.0.tgz",
      "integrity": "sha512-fKzAra0rGJUUBwGBgNkHZuToZcn+TtXHpeCgmkMJMMYx1sQDYaCSyjJBSCa2nH1DGm7s3n1oBnohoVTBaN7Lww==",
      "requires": {
        "is-docker": "^2.0.0"
      }
    },
    "is-yarn-global": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/is-yarn-global/-/is-yarn-global-0.3.0.tgz",
      "integrity": "sha512-VjSeb/lHmkoyd8ryPVIKvOCn4D1koMqY+vqyjjUfc3xyKtP4dYOxM44sZrnqQSzSds3xyOrUTLTC9LVCVgLngw=="
    },
    "is2": {
      "version": "2.0.9",
      "resolved": "https://registry.npmjs.org/is2/-/is2-2.0.9.tgz",
      "integrity": "sha512-rZkHeBn9Zzq52sd9IUIV3a5mfwBY+o2HePMh0wkGBM4z4qjvy2GwVxQ6nNXSfw6MmVP6gf1QIlWjiOavhM3x5g==",
      "requires": {
        "deep-is": "^0.1.3",
        "ip-regex": "^4.1.0",
        "is-url": "^1.2.4"
      }
    },
    "isarray": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
      "integrity": "sha512-VLghIWNM6ELQzo7zwmcg0NmTVyWKYjvIeM83yjp0wRDTmUnrM678fQbcKBo6n2CJEF0szoG//ytg+TKla89ALQ==",
      "optional": true
    },
    "jest-environment-node": {
      "version": "27.5.1",
      "resolved": "https://registry.npmjs.org/jest-environment-node/-/jest-environment-node-27.5.1.tgz",
      "integrity": "sha512-Jt4ZUnxdOsTGwSRAfKEnE6BcwsSPNOijjwifq5sDFSA2kesnXTvNqKHYgM0hDq3549Uf/KzdXNYn4wMZJPlFLw==",
      "requires": {
        "@jest/environment": "^27.5.1",
        "@jest/fake-timers": "^27.5.1",
        "@jest/types": "^27.5.1",
        "@types/node": "*",
        "jest-mock": "^27.5.1",
        "jest-util": "^27.5.1"
      }
    },
    "jest-message-util": {
      "version": "27.5.1",
      "resolved": "https://registry.npmjs.org/jest-message-util/-/jest-message-util-27.5.1.tgz",
      "integrity": "sha512-rMyFe1+jnyAAf+NHwTclDz0eAaLkVDdKVHHBFWsBWHnnh5YeJMNWWsv7AbFYXfK3oTqvL7VTWkhNLu1jX24D+g==",
      "requires": {
        "@babel/code-frame": "^7.12.13",
        "@jest/types": "^27.5.1",
        "@types/stack-utils": "^2.0.0",
        "chalk": "^4.0.0",
        "graceful-fs": "^4.2.9",
        "micromatch": "^4.0.4",
        "pretty-format": "^27.5.1",
        "slash": "^3.0.0",
        "stack-utils": "^2.0.3"
      }
    },
    "jest-mock": {
      "version": "27.5.1",
      "resolved": "https://registry.npmjs.org/jest-mock/-/jest-mock-27.5.1.tgz",
      "integrity": "sha512-K4jKbY1d4ENhbrG2zuPWaQBvDly+iZ2yAW+T1fATN78hc0sInwn7wZB8XtlNnvHug5RMwV897Xm4LqmPM4e2Og==",
      "requires": {
        "@jest/types": "^27.5.1",
        "@types/node": "*"
      }
    },
    "jest-util": {
      "version": "27.5.1",
      "resolved": "https://registry.npmjs.org/jest-util/-/jest-util-27.5.1.tgz",
      "integrity": "sha512-Kv2o/8jNvX1MQ0KGtw480E/w4fBCDOnH6+6DmeKi6LZUIlKA5kwY0YNdlzaWTiVgxqAqik11QyxDOKk543aKXw==",
      "requires": {
        "@jest/types": "^27.5.1",
        "@types/node": "*",
        "chalk": "^4.0.0",
        "ci-info": "^3.2.0",
        "graceful-fs": "^4.2.9",
        "picomatch": "^2.2.3"
      },
      "dependencies": {
        "ci-info": {
          "version": "3.5.0",
          "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-3.5.0.tgz",
          "integrity": "sha512-yH4RezKOGlOhxkmhbeNuC4eYZKAUsEaGtBuBzDDP1eFUKiccDWzBABxBfOx31IDwDIXMTxWuwAxUGModvkbuVw=="
        }
      }
    },
    "join-component": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/join-component/-/join-component-1.1.0.tgz",
      "integrity": "sha512-bF7vcQxbODoGK1imE2P9GS9aw4zD0Sd+Hni68IMZLj7zRnquH7dXUmMw9hDI5S/Jzt7q+IyTXN0rSg2GI0IKhQ=="
    },
    "js-sha256": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/js-sha256/-/js-sha256-0.9.0.tgz",
      "integrity": "sha512-sga3MHh9sgQN2+pJ9VYZ+1LPwXOxuBJBA5nrR5/ofPfuiJBE2hnjsaN8se8JznOmGLN2p49Pe5U/ttafcs/apA=="
    },
    "js-tokens": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ=="
    },
    "jsesc": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-2.5.2.tgz",
      "integrity": "sha512-OYu7XEzjkCQ3C5Ps3QIZsQfNpqoJyZZA99wd9aWd05NCtC5pWOkShK2mkL6HXQR6/Cy2lbNdPlZBpuQHXE63gA=="
    },
    "json5": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/json5/-/json5-2.2.1.tgz",
      "integrity": "sha512-1hqLFMSrGHRHxav9q9gNjJ5EXznIxGVO09xQRrwplcS8qs28pZ8s8hupZAmqDwZUmVZ2Qb2jnyPOWcDH8m8dlA=="
    },
    "latest-version": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/latest-version/-/latest-version-5.1.0.tgz",
      "integrity": "sha512-weT+r0kTkRQdCdYCNtkMwWXQTMEswKrFBkm4ckQOMVhhqhIMI1UT2hMj+1iigIhgSZm5gTmrRXBNoGUgaTY1xA==",
      "requires": {
        "package-json": "^6.3.0"
      }
    },
    "lodash": {
      "version": "4.17.21",
      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",
      "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg=="
    },
    "lodash.isstring": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/lodash.isstring/-/lodash.isstring-4.0.1.tgz",
      "integrity": "sha512-0wJxfxH1wgO3GrbuP+dTTk7op+6L41QCXbGINEmD+ny/G/eCqGzxyCsh7159S+mgDDcoarnBw6PC1PS5+wUGgw=="
    },
    "log-symbols": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/log-symbols/-/log-symbols-5.1.0.tgz",
      "integrity": "sha512-l0x2DvrW294C9uDCoQe1VSU4gf529FkSZ6leBl4TiqZH/e+0R7hSfHQBNut2mNygDgHwvYHfFLn6Oxb3VWj2rA==",
      "requires": {
        "chalk": "^5.0.0",
        "is-unicode-supported": "^1.1.0"
      },
      "dependencies": {
        "chalk": {
          "version": "5.1.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-5.1.2.tgz",
          "integrity": "sha512-E5CkT4jWURs1Vy5qGJye+XwCkNj7Od3Af7CP6SujMetSMkLs8Do2RWJK5yx1wamHV/op8Rz+9rltjaTQWDnEFQ=="
        }
      }
    },
    "lowercase-keys": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-1.0.1.tgz",
      "integrity": "sha512-G2Lj61tXDnVFFOi8VZds+SoQjtQC3dgokKdDG2mTm1tx4m50NUHBOZSBwQQHyy0V12A0JTG4icfZQH+xPyh8VA=="
    },
    "lru-cache": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz",
      "integrity": "sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==",
      "requires": {
        "yallist": "^4.0.0"
      }
    },
    "magic-string": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/magic-string/-/magic-string-0.25.9.tgz",
      "integrity": "sha512-RmF0AsMzgt25qzqqLc1+MbHmhdx0ojF2Fvs4XnOqz2ZOBXzzkEwc/dJQZCYHAn7v1jbVOjAZfK8msRn4BxO4VQ==",
      "requires": {
        "sourcemap-codec": "^1.4.8"
      }
    },
    "make-dir": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-3.1.0.tgz",
      "integrity": "sha512-g3FeP20LNwhALb/6Cz6Dd4F2ngze0jz7tbzrD2wAV+o9FeNHe4rL+yK2md0J/fiSf1sa1ADhXqi5+oVwOM/eGw==",
      "requires": {
        "semver": "^6.0.0"
      },
      "dependencies": {
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw=="
        }
      }
    },
    "md5": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/md5/-/md5-2.3.0.tgz",
      "integrity": "sha512-T1GITYmFaKuO91vxyoQMFETst+O71VUPEU3ze5GNzDm0OWdP8v1ziTaAEPUr/3kLsY3Sftgz242A1SetQiDL7g==",
      "requires": {
        "charenc": "0.0.2",
        "crypt": "0.0.2",
        "is-buffer": "~1.1.6"
      }
    },
    "md5.js": {
      "version": "1.3.5",
      "resolved": "https://registry.npmjs.org/md5.js/-/md5.js-1.3.5.tgz",
      "integrity": "sha512-xitP+WxNPcTTOgnTJcrhM0xvdPepipPSf3I8EIpGKeFLjt3PlJLIDG3u8EX53ZIubkb+5U2+3rELYpEhHhzdkg==",
      "requires": {
        "hash-base": "^3.0.0",
        "inherits": "^2.0.1",
        "safe-buffer": "^5.1.2"
      }
    },
    "micromatch": {
      "version": "4.0.5",
      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.5.tgz",
      "integrity": "sha512-DMy+ERcEW2q8Z2Po+WNXuw3c5YaUSFjAO5GsJqfEl7UjvtIuFKO6ZrKvcItdy98dwFI2N1tg3zNIdKaQT+aNdA==",
      "requires": {
        "braces": "^3.0.2",
        "picomatch": "^2.3.1"
      }
    },
    "mime-db": {
      "version": "1.52.0",
      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
      "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg=="
    },
    "mime-types": {
      "version": "2.1.35",
      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
      "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
      "requires": {
        "mime-db": "1.52.0"
      }
    },
    "mimic-response": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-2.1.0.tgz",
      "integrity": "sha512-wXqjST+SLt7R009ySCglWBCFpjUygmCIfD790/kVbiGmUgfYGuB14PiTd5DwVxSV4NcYHjzMkoj5LjQZwTQLEA==",
      "optional": true
    },
    "minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "requires": {
        "brace-expansion": "^1.1.7"
      }
    },
    "minimist": {
      "version": "1.2.7",
      "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.7.tgz",
      "integrity": "sha512-bzfL1YUZsP41gmu/qjrEk0Q6i2ix/cVeAhbCbqH9u3zYutS1cLg00qhrD0M2MVdCcx4Sc0UpP2eBWo9rotpq6g=="
    },
    "mkdirp-classic": {
      "version": "0.5.3",
      "resolved": "https://registry.npmjs.org/mkdirp-classic/-/mkdirp-classic-0.5.3.tgz",
      "integrity": "sha512-gKLcREMhtuZRwRAfqP3RFW+TK4JqApVBtOIftVgjuABpAtpxhPGaDcfvbhNvD0B8iD1oUr/txX35NjcaY6Ns/A==",
      "optional": true
    },
    "ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA=="
    },
    "mustache": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/mustache/-/mustache-4.2.0.tgz",
      "integrity": "sha512-71ippSywq5Yb7/tVYyGbkBggbU8H3u5Rz56fH60jGFgr8uHwxs+aSKeqmluIVzM0m0kB7xQjKS6qPfd0b2ZoqQ=="
    },
    "mute-stream": {
      "version": "0.0.8",
      "resolved": "https://registry.npmjs.org/mute-stream/-/mute-stream-0.0.8.tgz",
      "integrity": "sha512-nnbWWOkoWyUsTjKrhgD0dcz22mdkSnpYqbEjIm2nhwhuxlSkpywJmBo8h0ZqJdkp73mb90SssHkN4rsRaBAfAA=="
    },
    "napi-build-utils": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/napi-build-utils/-/napi-build-utils-1.0.2.tgz",
      "integrity": "sha512-ONmRUqK7zj7DWX0D9ADe03wbwOBZxNAfF20PlGfCWQcD3+/MakShIHrMqx9YwPTfxDdF1zLeL+RGZiR9kGMLdg==",
      "optional": true
    },
    "ncp": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ncp/-/ncp-2.0.0.tgz",
      "integrity": "sha512-zIdGUrPRFTUELUvr3Gmc7KZ2Sw/h1PiVM0Af/oHB6zgnV1ikqSfRk+TOufi79aHYCW3NiOXmr1BP5nWbzojLaA=="
    },
    "near-api-js": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/near-api-js/-/near-api-js-1.1.0.tgz",
      "integrity": "sha512-qYKv1mYsaDZc2uYndhS+ttDhR9+60qFc+ZjD6lWsAxr3ZskMjRwPffDGQZYhC7BRDQMe1HEbk6d5mf+TVm0Lqg==",
      "requires": {
        "bn.js": "5.2.1",
        "borsh": "^0.7.0",
        "bs58": "^4.0.0",
        "depd": "^2.0.0",
        "error-polyfill": "^0.1.3",
        "http-errors": "^1.7.2",
        "js-sha256": "^0.9.0",
        "mustache": "^4.0.0",
        "node-fetch": "^2.6.1",
        "text-encoding-utf-8": "^1.0.2",
        "tweetnacl": "^1.0.1"
      }
    },
    "near-cli": {
      "version": "3.4.2",
      "resolved": "https://registry.npmjs.org/near-cli/-/near-cli-3.4.2.tgz",
      "integrity": "sha512-0EaNAw5SKSIIJrJajG32CNMGfBtZTgIrOVKSXBTWpvo+F0OozsbvuO4UG3ZSRNThXHijxybp58SqPiU3JuzXGA==",
      "requires": {
        "@ledgerhq/hw-transport-node-hid": "^6.1.0",
        "analytics-node": "^6.1.0",
        "ascii-table": "0.0.9",
        "bn.js": "^5.1.1",
        "bs58": "^4.0.1",
        "chalk": "^4.0.0",
        "flagged-respawn": "^1.0.1",
        "is-ci": "^2.0.0",
        "jest-environment-node": "^27.0.6",
        "ncp": "^2.0.0",
        "near-api-js": "^0.44.2",
        "near-ledger-js": "^0.2.0",
        "near-seed-phrase": "^0.2.0",
        "open": "^8.0.7",
        "rimraf": "^3.0.0",
        "stoppable": "^1.1.0",
        "tcp-port-used": "^1.0.1",
        "update-notifier": "^5.0.0",
        "uuid": "^8.0.0",
        "v8flags": "^3.1.3",
        "yargs": "^16.0.3"
      },
      "dependencies": {
        "bn.js": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-5.2.0.tgz",
          "integrity": "sha512-D7iWRBvnZE8ecXiLj/9wbxH7Tk79fAh8IHaTNq1RWRixsS02W+5qS+iE9yq6RYl0asXx5tw0bLhmT5pIfbSquw=="
        },
        "borsh": {
          "version": "0.6.0",
          "resolved": "https://registry.npmjs.org/borsh/-/borsh-0.6.0.tgz",
          "integrity": "sha512-sl5k89ViqsThXQpYa9XDtz1sBl3l1lI313cFUY1HKr+wvMILnb+58xpkqTNrYbelh99dY7K8usxoCusQmqix9Q==",
          "requires": {
            "bn.js": "^5.2.0",
            "bs58": "^4.0.0",
            "text-encoding-utf-8": "^1.0.2"
          }
        },
        "near-api-js": {
          "version": "0.44.2",
          "resolved": "https://registry.npmjs.org/near-api-js/-/near-api-js-0.44.2.tgz",
          "integrity": "sha512-eMnc4V+geggapEUa3nU2p8HSHn/njtloI4P2mceHQWO8vDE1NGpnAw8FuTBrLmXSgIv9m6oocgFc9t3VNf5zwg==",
          "requires": {
            "bn.js": "5.2.0",
            "borsh": "^0.6.0",
            "bs58": "^4.0.0",
            "depd": "^2.0.0",
            "error-polyfill": "^0.1.3",
            "http-errors": "^1.7.2",
            "js-sha256": "^0.9.0",
            "mustache": "^4.0.0",
            "node-fetch": "^2.6.1",
            "text-encoding-utf-8": "^1.0.2",
            "tweetnacl": "^1.0.1"
          }
        }
      }
    },
    "near-hd-key": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/near-hd-key/-/near-hd-key-1.2.1.tgz",
      "integrity": "sha512-SIrthcL5Wc0sps+2e1xGj3zceEa68TgNZDLuCx0daxmfTP7sFTB3/mtE2pYhlFsCxWoMn+JfID5E1NlzvvbRJg==",
      "requires": {
        "bip39": "3.0.2",
        "create-hmac": "1.1.7",
        "tweetnacl": "1.0.3"
      }
    },
    "near-ledger-js": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/near-ledger-js/-/near-ledger-js-0.2.1.tgz",
      "integrity": "sha512-8anZb6e96gJNBOKUR/HReLN/x8BmBhCpyPq+XxFbx8jxmsRz+M1Hxq085+ROYaMI2EDJqatrjjLAdArk13BOhA==",
      "optional": true,
      "requires": {
        "@ledgerhq/hw-transport-u2f": "^5.36.0-deprecated",
        "@ledgerhq/hw-transport-webhid": "^5.51.1",
        "@ledgerhq/hw-transport-webusb": "^5.53.1",
        "bs58": "^4.0.1",
        "platform": "^1.3.6"
      }
    },
    "near-sdk-js": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/near-sdk-js/-/near-sdk-js-0.5.0.tgz",
      "integrity": "sha512-wwQTCT+7bu0CahlNxlG5RGaxDiUJQSnjT7GwmK/d2p7Y5PkwWv1K5ZBsZMLOTU3fnhv0Y1LJ6lp00O9kZZLR5Q==",
      "requires": {
        "@babel/core": "^7.17.5",
        "@babel/plugin-proposal-decorators": "^7.17.2",
        "@babel/preset-typescript": "^7.18.6",
        "@rollup/plugin-babel": "^5.3.1",
        "@rollup/plugin-commonjs": "^21.0.1",
        "@rollup/plugin-node-resolve": "^13.1.1",
        "@scure/base": "^1.1.1",
        "rollup": "^2.61.1",
        "rollup-plugin-sourcemaps": "^0.6.3",
        "yargs": "^17.5.1"
      },
      "dependencies": {
        "cliui": {
          "version": "8.0.1",
          "resolved": "https://registry.npmjs.org/cliui/-/cliui-8.0.1.tgz",
          "integrity": "sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==",
          "requires": {
            "string-width": "^4.2.0",
            "strip-ansi": "^6.0.1",
            "wrap-ansi": "^7.0.0"
          }
        },
        "is-fullwidth-code-point": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
          "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg=="
        },
        "string-width": {
          "version": "4.2.3",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
          "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
          "requires": {
            "emoji-regex": "^8.0.0",
            "is-fullwidth-code-point": "^3.0.0",
            "strip-ansi": "^6.0.1"
          }
        },
        "strip-ansi": {
          "version": "6.0.1",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
          "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
          "requires": {
            "ansi-regex": "^5.0.1"
          }
        },
        "yargs": {
          "version": "17.6.0",
          "resolved": "https://registry.npmjs.org/yargs/-/yargs-17.6.0.tgz",
          "integrity": "sha512-8H/wTDqlSwoSnScvV2N/JHfLWOKuh5MVla9hqLjK3nsfyy6Y4kDSYSvkU5YCUEPOSnRXfIyx3Sq+B/IWudTo4g==",
          "requires": {
            "cliui": "^8.0.1",
            "escalade": "^3.1.1",
            "get-caller-file": "^2.0.5",
            "require-directory": "^2.1.1",
            "string-width": "^4.2.3",
            "y18n": "^5.0.5",
            "yargs-parser": "^21.0.0"
          }
        },
        "yargs-parser": {
          "version": "21.1.1",
          "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz",
          "integrity": "sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw=="
        }
      }
    },
    "near-seed-phrase": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/near-seed-phrase/-/near-seed-phrase-0.2.0.tgz",
      "integrity": "sha512-NpmrnejpY1AdlRpDZ0schJQJtfBaoUheRfiYtQpcq9TkwPgqKZCRULV5L3hHmLc0ep7KRtikbPQ9R2ztN/3cyQ==",
      "requires": {
        "bip39-light": "^1.0.7",
        "bs58": "^4.0.1",
        "near-hd-key": "^1.2.1",
        "tweetnacl": "^1.0.2"
      }
    },
    "node-abi": {
      "version": "2.30.1",
      "resolved": "https://registry.npmjs.org/node-abi/-/node-abi-2.30.1.tgz",
      "integrity": "sha512-/2D0wOQPgaUWzVSVgRMx+trKJRC2UG4SUc4oCJoXx9Uxjtp0Vy3/kt7zcbxHF8+Z/pK3UloLWzBISg72brfy1w==",
      "optional": true,
      "requires": {
        "semver": "^5.4.1"
      },
      "dependencies": {
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "optional": true
        }
      }
    },
    "node-addon-api": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/node-addon-api/-/node-addon-api-3.2.1.tgz",
      "integrity": "sha512-mmcei9JghVNDYydghQmeDX8KoAm0FAiYyIcUt/N4nhyAipB17pllZQDOJD2fotxABnt4Mdz+dKTO7eftLg4d0A==",
      "optional": true
    },
    "node-fetch": {
      "version": "2.6.7",
      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.7.tgz",
      "integrity": "sha512-ZjMPFEfVx5j+y2yF35Kzx5sF7kDzxuDj6ziH4FFbOp87zKDZNx8yExJIb05OGF4Nlt9IHFIMBkRl41VdvcNdbQ==",
      "requires": {
        "whatwg-url": "^5.0.0"
      }
    },
    "node-gyp-build": {
      "version": "4.5.0",
      "resolved": "https://registry.npmjs.org/node-gyp-build/-/node-gyp-build-4.5.0.tgz",
      "integrity": "sha512-2iGbaQBV+ITgCz76ZEjmhUKAKVf7xfY1sRl4UiKQspfZMH2h06SyhNsnSVy50cwkFQDGLyif6m/6uFXHkOZ6rg==",
      "optional": true
    },
    "node-hid": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/node-hid/-/node-hid-2.1.1.tgz",
      "integrity": "sha512-Skzhqow7hyLZU93eIPthM9yjot9lszg9xrKxESleEs05V2NcbUptZc5HFqzjOkSmL0sFlZFr3kmvaYebx06wrw==",
      "optional": true,
      "requires": {
        "bindings": "^1.5.0",
        "node-addon-api": "^3.0.2",
        "prebuild-install": "^6.0.0"
      }
    },
    "node-releases": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.6.tgz",
      "integrity": "sha512-PiVXnNuFm5+iYkLBNeq5211hvO38y63T0i2KKh2KnUs3RpzJ+JtODFjkD8yjLwnDkTYF1eKXheUwdssR+NRZdg=="
    },
    "normalize-url": {
      "version": "4.5.1",
      "resolved": "https://registry.npmjs.org/normalize-url/-/normalize-url-4.5.1.tgz",
      "integrity": "sha512-9UZCFRHQdNrfTpGg8+1INIg93B6zE0aXMVFkw1WFwvO4SlZywU6aLg5Of0Ap/PgcbSw4LNxvMWXMeugwMCX0AA=="
    },
    "npmlog": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/npmlog/-/npmlog-4.1.2.tgz",
      "integrity": "sha512-2uUqazuKlTaSI/dC8AzicUck7+IrEaOnN/e0jd3Xtt1KcGpwx30v50mL7oPyr/h9bL3E4aZccVwpwP+5W9Vjkg==",
      "optional": true,
      "requires": {
        "are-we-there-yet": "~1.1.2",
        "console-control-strings": "~1.1.0",
        "gauge": "~2.7.3",
        "set-blocking": "~2.0.0"
      }
    },
    "number-is-nan": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/number-is-nan/-/number-is-nan-1.0.1.tgz",
      "integrity": "sha512-4jbtZXNAsfZbAHiiqjLPBiCl16dES1zI4Hpzzxw61Tk+loF+sBDBKx1ICKKKwIqQ7M0mFn1TmkN7euSncWgHiQ==",
      "optional": true
    },
    "o3": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/o3/-/o3-1.0.3.tgz",
      "integrity": "sha512-f+4n+vC6s4ysy7YO7O2gslWZBUu8Qj2i2OUJOvjRxQva7jVjYjB29jrr9NCjmxZQR0gzrOcv1RnqoYOeMs5VRQ==",
      "requires": {
        "capability": "^0.2.5"
      }
    },
    "object-assign": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
      "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
      "optional": true
    },
    "once": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
      "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
      "requires": {
        "wrappy": "1"
      }
    },
    "onetime": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/onetime/-/onetime-5.1.2.tgz",
      "integrity": "sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==",
      "requires": {
        "mimic-fn": "^2.1.0"
      },
      "dependencies": {
        "mimic-fn": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz",
          "integrity": "sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg=="
        }
      }
    },
    "open": {
      "version": "8.4.0",
      "resolved": "https://registry.npmjs.org/open/-/open-8.4.0.tgz",
      "integrity": "sha512-XgFPPM+B28FtCCgSb9I+s9szOC1vZRSwgWsRUA5ylIxRTgKozqjOCrVOqGsYABPYK5qnfqClxZTFBa8PKt2v6Q==",
      "requires": {
        "define-lazy-prop": "^2.0.0",
        "is-docker": "^2.1.1",
        "is-wsl": "^2.2.0"
      }
    },
    "ora": {
      "version": "6.1.2",
      "resolved": "https://registry.npmjs.org/ora/-/ora-6.1.2.tgz",
      "integrity": "sha512-EJQ3NiP5Xo94wJXIzAyOtSb0QEIAUu7m8t6UZ9krbz0vAJqr92JpcK/lEXg91q6B9pEGqrykkd2EQplnifDSBw==",
      "requires": {
        "bl": "^5.0.0",
        "chalk": "^5.0.0",
        "cli-cursor": "^4.0.0",
        "cli-spinners": "^2.6.1",
        "is-interactive": "^2.0.0",
        "is-unicode-supported": "^1.1.0",
        "log-symbols": "^5.1.0",
        "strip-ansi": "^7.0.1",
        "wcwidth": "^1.0.1"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "6.0.1",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.0.1.tgz",
          "integrity": "sha512-n5M855fKb2SsfMIiFFoVrABHJC8QtHwVx+mHWP3QcEqBHYienj5dHSgjbxtC0WEZXYt4wcD6zrQElDPhFuZgfA=="
        },
        "bl": {
          "version": "5.1.0",
          "resolved": "https://registry.npmjs.org/bl/-/bl-5.1.0.tgz",
          "integrity": "sha512-tv1ZJHLfTDnXE6tMHv73YgSJaWR2AFuPwMntBe7XL/GBFHnT0CLnsHMogfk5+GzCDC5ZWarSCYaIGATZt9dNsQ==",
          "requires": {
            "buffer": "^6.0.3",
            "inherits": "^2.0.4",
            "readable-stream": "^3.4.0"
          }
        },
        "buffer": {
          "version": "6.0.3",
          "resolved": "https://registry.npmjs.org/buffer/-/buffer-6.0.3.tgz",
          "integrity": "sha512-FTiCpNxtwiZZHEZbcbTIcZjERVICn9yq/pDFkTl95/AxzD1naBctN7YO68riM/gLSDY7sdrMby8hofADYuuqOA==",
          "requires": {
            "base64-js": "^1.3.1",
            "ieee754": "^1.2.1"
          }
        },
        "chalk": {
          "version": "5.1.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-5.1.2.tgz",
          "integrity": "sha512-E5CkT4jWURs1Vy5qGJye+XwCkNj7Od3Af7CP6SujMetSMkLs8Do2RWJK5yx1wamHV/op8Rz+9rltjaTQWDnEFQ=="
        },
        "strip-ansi": {
          "version": "7.0.1",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.0.1.tgz",
          "integrity": "sha512-cXNxvT8dFNRVfhVME3JAe98mkXDYN2O1l7jmcwMnOslDeESg1rF/OZMtK0nRAhiari1unG5cD4jG3rapUAkLbw==",
          "requires": {
            "ansi-regex": "^6.0.1"
          }
        }
      }
    },
    "os-tmpdir": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/os-tmpdir/-/os-tmpdir-1.0.2.tgz",
      "integrity": "sha512-D2FR03Vir7FIu45XBY20mTb+/ZSWB00sjU9jdQXt83gDrI4Ztz5Fs7/yy74g2N5SVQY4xY1qDr4rNddwYRVX0g=="
    },
    "p-cancelable": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/p-cancelable/-/p-cancelable-1.1.0.tgz",
      "integrity": "sha512-s73XxOZ4zpt1edZYZzvhqFa6uvQc1vwUa0K0BdtIZgQMAJj9IbebH+JkgKZc9h+B05PKHLOTl4ajG1BmNrVZlw=="
    },
    "package-json": {
      "version": "6.5.0",
      "resolved": "https://registry.npmjs.org/package-json/-/package-json-6.5.0.tgz",
      "integrity": "sha512-k3bdm2n25tkyxcjSKzB5x8kfVxlMdgsbPr0GkZcwHsLpba6cBjqCt1KlcChKEvxHIcTB1FVMuwoijZ26xex5MQ==",
      "requires": {
        "got": "^9.6.0",
        "registry-auth-token": "^4.0.0",
        "registry-url": "^5.0.0",
        "semver": "^6.2.0"
      },
      "dependencies": {
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw=="
        }
      }
    },
    "parse-passwd": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/parse-passwd/-/parse-passwd-1.0.0.tgz",
      "integrity": "sha512-1Y1A//QUXEZK7YKz+rD9WydcE1+EuPr6ZBgKecAB8tmoW6UFv0NREVJe1p+jRxtThkcbbKkfwIbWJe/IeE6m2Q=="
    },
    "path-is-absolute": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
      "integrity": "sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg=="
    },
    "path-parse": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw=="
    },
    "pbkdf2": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/pbkdf2/-/pbkdf2-3.1.2.tgz",
      "integrity": "sha512-iuh7L6jA7JEGu2WxDwtQP1ddOpaJNC4KlDEFfdQajSGgGPNi4OyDc2R7QnbY2bR9QjBVGwgvTdNJZoE7RaxUMA==",
      "requires": {
        "create-hash": "^1.1.2",
        "create-hmac": "^1.1.4",
        "ripemd160": "^2.0.1",
        "safe-buffer": "^5.0.1",
        "sha.js": "^2.4.8"
      }
    },
    "picocolors": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.0.0.tgz",
      "integrity": "sha512-1fygroTLlHu66zi26VoTDv8yRgm0Fccecssto+MhsZ0D/DGW2sm8E8AjW7NU5VVTRt5GxbeZ5qBuJr+HyLYkjQ=="
    },
    "picomatch": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA=="
    },
    "platform": {
      "version": "1.3.6",
      "resolved": "https://registry.npmjs.org/platform/-/platform-1.3.6.tgz",
      "integrity": "sha512-fnWVljUchTro6RiCFvCXBbNhJc2NijN7oIQxbwsyL0buWJPG85v81ehlHI9fXrJsMNgTofEoWIQeClKpgxFLrg==",
      "optional": true
    },
    "prebuild-install": {
      "version": "6.1.4",
      "resolved": "https://registry.npmjs.org/prebuild-install/-/prebuild-install-6.1.4.tgz",
      "integrity": "sha512-Z4vpywnK1lBg+zdPCVCsKq0xO66eEV9rWo2zrROGGiRS4JtueBOdlB1FnY8lcy7JsUud/Q3ijUxyWN26Ika0vQ==",
      "optional": true,
      "requires": {
        "detect-libc": "^1.0.3",
        "expand-template": "^2.0.3",
        "github-from-package": "0.0.0",
        "minimist": "^1.2.3",
        "mkdirp-classic": "^0.5.3",
        "napi-build-utils": "^1.0.1",
        "node-abi": "^2.21.0",
        "npmlog": "^4.0.1",
        "pump": "^3.0.0",
        "rc": "^1.2.7",
        "simple-get": "^3.0.3",
        "tar-fs": "^2.0.0",
        "tunnel-agent": "^0.6.0"
      }
    },
    "prepend-http": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/prepend-http/-/prepend-http-2.0.0.tgz",
      "integrity": "sha512-ravE6m9Atw9Z/jjttRUZ+clIXogdghyZAuWJ3qEzjT+jI/dL1ifAqhZeC5VHzQp1MSt1+jxKkFNemj/iO7tVUA=="
    },
    "pretty-format": {
      "version": "27.5.1",
      "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-27.5.1.tgz",
      "integrity": "sha512-Qb1gy5OrP5+zDf2Bvnzdl3jsTf1qXVMazbvCoKhtKqVs4/YK4ozX4gKQJJVyNe+cajNPn0KoC0MC3FUmaHWEmQ==",
      "requires": {
        "ansi-regex": "^5.0.1",
        "ansi-styles": "^5.0.0",
        "react-is": "^17.0.1"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz",
          "integrity": "sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA=="
        }
      }
    },
    "process-nextick-args": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz",
      "integrity": "sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==",
      "optional": true
    },
    "pump": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/pump/-/pump-3.0.0.tgz",
      "integrity": "sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==",
      "requires": {
        "end-of-stream": "^1.1.0",
        "once": "^1.3.1"
      }
    },
    "pupa": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/pupa/-/pupa-2.1.1.tgz",
      "integrity": "sha512-l1jNAspIBSFqbT+y+5FosojNpVpF94nlI+wDUpqP9enwOTfHx9f0gh5nB96vl+6yTpsJsypeNrwfzPrKuHB41A==",
      "requires": {
        "escape-goat": "^2.0.0"
      }
    },
    "randombytes": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/randombytes/-/randombytes-2.1.0.tgz",
      "integrity": "sha512-vYl3iOX+4CKUWuxGi9Ukhie6fsqXqS9FE2Zaic4tNFD2N2QQaXOMFbuKK4QmDHC0JO6B1Zp41J0LpT0oR68amQ==",
      "requires": {
        "safe-buffer": "^5.1.0"
      }
    },
    "rc": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/rc/-/rc-1.2.8.tgz",
      "integrity": "sha512-y3bGgqKj3QBdxLbLkomlohkvsA8gdAiUQlSBJnBhfn+BPxg4bc62d8TcBW15wavDfgexCgccckhcZvywyQYPOw==",
      "requires": {
        "deep-extend": "^0.6.0",
        "ini": "~1.3.0",
        "minimist": "^1.2.0",
        "strip-json-comments": "~2.0.1"
      }
    },
    "react-is": {
      "version": "17.0.2",
      "resolved": "https://registry.npmjs.org/react-is/-/react-is-17.0.2.tgz",
      "integrity": "sha512-w2GsyukL62IJnlaff/nRegPQR94C/XXamvMWmSHRJ4y7Ts/4ocGRmTHvOs8PSE6pB3dWOrD/nueuU5sduBsQ4w=="
    },
    "readable-stream": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.0.tgz",
      "integrity": "sha512-BViHy7LKeTz4oNnkcLJ+lVSL6vpiFeX6/d3oSH8zCW7UxP2onchk+vTGB143xuFjHS3deTgkKoXXymXqymiIdA==",
      "requires": {
        "inherits": "^2.0.3",
        "string_decoder": "^1.1.1",
        "util-deprecate": "^1.0.1"
      }
    },
    "registry-auth-token": {
      "version": "4.2.2",
      "resolved": "https://registry.npmjs.org/registry-auth-token/-/registry-auth-token-4.2.2.tgz",
      "integrity": "sha512-PC5ZysNb42zpFME6D/XlIgtNGdTl8bBOCw90xQLVMpzuuubJKYDWFAEuUNc+Cn8Z8724tg2SDhDRrkVEsqfDMg==",
      "requires": {
        "rc": "1.2.8"
      }
    },
    "registry-url": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/registry-url/-/registry-url-5.1.0.tgz",
      "integrity": "sha512-8acYXXTI0AkQv6RAOjE3vOaIXZkT9wo4LOFbBKYQEEnnMNBpKqdUrI6S4NT0KPIo/WVvJ5tE/X5LF/TQUf0ekw==",
      "requires": {
        "rc": "^1.2.8"
      }
    },
    "remove-trailing-slash": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/remove-trailing-slash/-/remove-trailing-slash-0.1.1.tgz",
      "integrity": "sha512-o4S4Qh6L2jpnCy83ysZDau+VORNvnFw07CKSAymkd6ICNVEPisMyzlc00KlvvicsxKck94SEwhDnMNdICzO+tA=="
    },
    "require-directory": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz",
      "integrity": "sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q=="
    },
    "resolve": {
      "version": "1.22.1",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.1.tgz",
      "integrity": "sha512-nBpuuYuY5jFsli/JIs1oldw6fOQCBioohqWZg/2hiaOybXOft4lonv85uDOKXdf8rhyK159cxU5cDcK/NKk8zw==",
      "requires": {
        "is-core-module": "^2.9.0",
        "path-parse": "^1.0.7",
        "supports-preserve-symlinks-flag": "^1.0.0"
      }
    },
    "responselike": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/responselike/-/responselike-1.0.2.tgz",
      "integrity": "sha512-/Fpe5guzJk1gPqdJLJR5u7eG/gNY4nImjbRDaVWVMRhne55TCmj2i9Q+54PBRfatRC8v/rIiv9BN0pMd9OV5EQ==",
      "requires": {
        "lowercase-keys": "^1.0.0"
      }
    },
    "restore-cursor": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-4.0.0.tgz",
      "integrity": "sha512-I9fPXU9geO9bHOt9pHHOhOkYerIMsmVaWB0rA2AI9ERh/+x/i7MV5HKBNrg+ljO5eoPVgCcnFuRjJ9uH6I/3eg==",
      "requires": {
        "onetime": "^5.1.0",
        "signal-exit": "^3.0.2"
      }
    },
    "rimraf": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz",
      "integrity": "sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==",
      "requires": {
        "glob": "^7.1.3"
      }
    },
    "ripemd160": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/ripemd160/-/ripemd160-2.0.2.tgz",
      "integrity": "sha512-ii4iagi25WusVoiC4B4lq7pbXfAp3D9v5CwfkY33vffw2+pkDjY1D8GaN7spsxvCSx8dkPqOZCEZyfxcmJG2IA==",
      "requires": {
        "hash-base": "^3.0.0",
        "inherits": "^2.0.1"
      }
    },
    "rollup": {
      "version": "2.79.1",
      "resolved": "https://registry.npmjs.org/rollup/-/rollup-2.79.1.tgz",
      "integrity": "sha512-uKxbd0IhMZOhjAiD5oAFp7BqvkA4Dv47qpOCtaNvng4HBwdbWtdOh8f5nZNuk2rp51PMGk3bzfWu5oayNEuYnw==",
      "requires": {
        "fsevents": "~2.3.2"
      }
    },
    "rollup-plugin-sourcemaps": {
      "version": "0.6.3",
      "resolved": "https://registry.npmjs.org/rollup-plugin-sourcemaps/-/rollup-plugin-sourcemaps-0.6.3.tgz",
      "integrity": "sha512-paFu+nT1xvuO1tPFYXGe+XnQvg4Hjqv/eIhG8i5EspfYYPBKL57X7iVbfv55aNVASg3dzWvES9dmWsL2KhfByw==",
      "requires": {
        "@rollup/pluginutils": "^3.0.9",
        "source-map-resolve": "^0.6.0"
      }
    },
    "run-async": {
      "version": "2.4.1",
      "resolved": "https://registry.npmjs.org/run-async/-/run-async-2.4.1.tgz",
      "integrity": "sha512-tvVnVv01b8c1RrA6Ep7JkStj85Guv/YrMcwqYQnwjsAS2cTmmPGBBjAjpCW7RrSodNSoE2/qg9O4bceNvUuDgQ=="
    },
    "rxjs": {
      "version": "6.6.7",
      "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-6.6.7.tgz",
      "integrity": "sha512-hTdwr+7yYNIT5n4AMYp85KA6yw2Va0FLa3Rguvbpa4W3I5xynaBZo41cM3XM+4Q6fRMj3sBYIR1VAmZMXYJvRQ==",
      "optional": true,
      "requires": {
        "tslib": "^1.9.0"
      }
    },
    "safe-buffer": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
      "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ=="
    },
    "safer-buffer": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg=="
    },
    "semver": {
      "version": "7.3.8",
      "resolved": "https://registry.npmjs.org/semver/-/semver-7.3.8.tgz",
      "integrity": "sha512-NB1ctGL5rlHrPJtFDVIVzTyQylMLu9N9VICA6HSFJo8MCGVTMW6gfpicwKmmK/dAjTOrqu5l63JJOpDSrAis3A==",
      "requires": {
        "lru-cache": "^6.0.0"
      }
    },
    "semver-diff": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/semver-diff/-/semver-diff-3.1.1.tgz",
      "integrity": "sha512-GX0Ix/CJcHyB8c4ykpHGIAvLyOwOobtM/8d+TQkAd81/bEjgPHrfba41Vpesr7jX/t8Uh+R3EX9eAS5be+jQYg==",
      "requires": {
        "semver": "^6.3.0"
      },
      "dependencies": {
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw=="
        }
      }
    },
    "set-blocking": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz",
      "integrity": "sha512-KiKBS8AnWGEyLzofFfmvKwpdPzqiy16LvQfK3yv/fVH7Bj13/wl3JSR1J+rfgRE9q7xUJK4qvgS8raSOeLUehw==",
      "optional": true
    },
    "setprototypeof": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
      "integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw=="
    },
    "sha.js": {
      "version": "2.4.11",
      "resolved": "https://registry.npmjs.org/sha.js/-/sha.js-2.4.11.tgz",
      "integrity": "sha512-QMEp5B7cftE7APOjk5Y6xgrbWu+WkLVQwk8JNjZ8nKRciZaByEW6MubieAiToS7+dwvrjGhH8jRXz3MVd0AYqQ==",
      "requires": {
        "inherits": "^2.0.1",
        "safe-buffer": "^5.0.1"
      }
    },
    "signal-exit": {
      "version": "3.0.7",
      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.7.tgz",
      "integrity": "sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ=="
    },
    "simple-concat": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/simple-concat/-/simple-concat-1.0.1.tgz",
      "integrity": "sha512-cSFtAPtRhljv69IK0hTVZQ+OfE9nePi/rtJmw5UjHeVyVroEqJXP1sFztKUy1qU+xvz3u/sfYJLa947b7nAN2Q==",
      "optional": true
    },
    "simple-get": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/simple-get/-/simple-get-3.1.1.tgz",
      "integrity": "sha512-CQ5LTKGfCpvE1K0n2us+kuMPbk/q0EKl82s4aheV9oXjFEz6W/Y7oQFVJuU6QG77hRT4Ghb5RURteF5vnWjupA==",
      "optional": true,
      "requires": {
        "decompress-response": "^4.2.0",
        "once": "^1.3.1",
        "simple-concat": "^1.0.0"
      }
    },
    "slash": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
      "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q=="
    },
    "source-map-resolve": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/source-map-resolve/-/source-map-resolve-0.6.0.tgz",
      "integrity": "sha512-KXBr9d/fO/bWo97NXsPIAW1bFSBOuCnjbNTBMO7N59hsv5i9yzRDfcYwwt0l04+VqnKC+EwzvJZIP/qkuMgR/w==",
      "requires": {
        "atob": "^2.1.2",
        "decode-uri-component": "^0.2.0"
      }
    },
    "sourcemap-codec": {
      "version": "1.4.8",
      "resolved": "https://registry.npmjs.org/sourcemap-codec/-/sourcemap-codec-1.4.8.tgz",
      "integrity": "sha512-9NykojV5Uih4lgo5So5dtw+f0JgJX30KCNI8gwhz2J9A15wD0Ml6tjHKwf6fTSa6fAdVBdZeNOs9eJ71qCk8vA=="
    },
    "stack-utils": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/stack-utils/-/stack-utils-2.0.5.tgz",
      "integrity": "sha512-xrQcmYhOsn/1kX+Vraq+7j4oE2j/6BFscZ0etmYg81xuM8Gq0022Pxb8+IqgOFUIaxHs0KaSb7T1+OegiNrNFA==",
      "requires": {
        "escape-string-regexp": "^2.0.0"
      }
    },
    "statuses": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.5.0.tgz",
      "integrity": "sha512-OpZ3zP+jT1PI7I8nemJX4AKmAX070ZkYPVWV/AaKTJl+tXCTGyVdC1a4SL8RUQYEwk/f34ZX8UTykN68FwrqAA=="
    },
    "stoppable": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/stoppable/-/stoppable-1.1.0.tgz",
      "integrity": "sha512-KXDYZ9dszj6bzvnEMRYvxgeTHU74QBFL54XKtP3nyMuJ81CFYtABZ3bAzL2EdFUaEwJOBOgENyFj3R7oTzDyyw=="
    },
    "string_decoder": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.3.0.tgz",
      "integrity": "sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==",
      "requires": {
        "safe-buffer": "~5.2.0"
      }
    },
    "string-width": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-1.0.2.tgz",
      "integrity": "sha512-0XsVpQLnVCXHJfyEs8tC0zpTVIr5PKKsQtkT29IwupnPTjtPmQ3xT/4yCREF9hYkV/3M3kzcUTSAZT6a6h81tw==",
      "optional": true,
      "requires": {
        "code-point-at": "^1.0.0",
        "is-fullwidth-code-point": "^1.0.0",
        "strip-ansi": "^3.0.0"
      }
    },
    "strip-ansi": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",
      "integrity": "sha512-VhumSSbBqDTP8p2ZLKj40UjBCV4+v8bUSEpUb4KjRgWk9pbqGF4REFj6KEagidb2f/M6AzC0EmFyDNGaw9OCzg==",
      "optional": true,
      "requires": {
        "ansi-regex": "^2.0.0"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",
          "integrity": "sha512-TIGnTpdo+E3+pCyAluZvtED5p5wCqLdezCyhPZzKPcxvFplEt4i+W7OONCKgeZFT3+y5NZZfOOS/Bdcanm1MYA==",
          "optional": true
        }
      }
    },
    "strip-json-comments": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-2.0.1.tgz",
      "integrity": "sha512-4gB8na07fecVVkOI6Rs4e7T6NOTki5EmL7TUduTs6bu3EdnSycntVJ4re8kgZA+wx9IueI2Y11bfbgwtzuE0KQ=="
    },
    "supports-color": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
      "requires": {
        "has-flag": "^4.0.0"
      }
    },
    "supports-preserve-symlinks-flag": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
      "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w=="
    },
    "tar-fs": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/tar-fs/-/tar-fs-2.1.1.tgz",
      "integrity": "sha512-V0r2Y9scmbDRLCNex/+hYzvp/zyYjvFbHPNgVTKfQvVrb6guiE/fxP+XblDNR011utopbkex2nM4dHNV6GDsng==",
      "optional": true,
      "requires": {
        "chownr": "^1.1.1",
        "mkdirp-classic": "^0.5.2",
        "pump": "^3.0.0",
        "tar-stream": "^2.1.4"
      }
    },
    "tar-stream": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/tar-stream/-/tar-stream-2.2.0.tgz",
      "integrity": "sha512-ujeqbceABgwMZxEJnk2HDY2DlnUZ+9oEcb1KzTVfYHio0UE6dG71n60d8D2I4qNvleWrrXpmjpt7vZeF1LnMZQ==",
      "optional": true,
      "requires": {
        "bl": "^4.0.3",
        "end-of-stream": "^1.4.1",
        "fs-constants": "^1.0.0",
        "inherits": "^2.0.3",
        "readable-stream": "^3.1.1"
      }
    },
    "tcp-port-used": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/tcp-port-used/-/tcp-port-used-1.0.2.tgz",
      "integrity": "sha512-l7ar8lLUD3XS1V2lfoJlCBaeoaWo/2xfYt81hM7VlvR4RrMVFqfmzfhLVk40hAb368uitje5gPtBRL1m/DGvLA==",
      "requires": {
        "debug": "4.3.1",
        "is2": "^2.0.6"
      },
      "dependencies": {
        "debug": {
          "version": "4.3.1",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.1.tgz",
          "integrity": "sha512-doEwdvm4PCeK4K3RQN2ZC2BYUBaxwLARCqZmMjtF8a51J2Rb0xpVloFRnCODwqjpwnAoao4pelN8l3RJdv3gRQ==",
          "requires": {
            "ms": "2.1.2"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
        }
      }
    },
    "text-encoding-utf-8": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/text-encoding-utf-8/-/text-encoding-utf-8-1.0.2.tgz",
      "integrity": "sha512-8bw4MY9WjdsD2aMtO0OzOCY3pXGYNx2d2FfHRVUKkiCPDWjKuOlhLVASS+pD7VkLTVjW268LYJHwsnPFlBpbAg=="
    },
    "through": {
      "version": "2.3.8",
      "resolved": "https://registry.npmjs.org/through/-/through-2.3.8.tgz",
      "integrity": "sha512-w89qg7PI8wAdvX60bMDP+bFoD5Dvhm9oLheFp5O4a2QF0cSBGsBX4qZmadPMvVqlLJBBci+WqGGOAPvcDeNSVg=="
    },
    "tmp": {
      "version": "0.0.33",
      "resolved": "https://registry.npmjs.org/tmp/-/tmp-0.0.33.tgz",
      "integrity": "sha512-jRCJlojKnZ3addtTOjdIqoRuPEKBvNXcGYqzO6zWZX8KfKEpnGY5jfggJQ3EjKuu8D4bJRr0y+cYJFmYbImXGw==",
      "requires": {
        "os-tmpdir": "~1.0.2"
      }
    },
    "to-fast-properties": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-2.0.0.tgz",
      "integrity": "sha512-/OaKK0xYrs3DmxRYqL/yDc+FxFUVYhDlXMhRmv3z915w2HF1tnN1omB354j8VUGO/hbRzyD6Y3sA7v7GS/ceog=="
    },
    "to-readable-stream": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/to-readable-stream/-/to-readable-stream-1.0.0.tgz",
      "integrity": "sha512-Iq25XBt6zD5npPhlLVXGFN3/gyR2/qODcKNNyTMd4vbm39HUaOiAM4PMq0eMVC/Tkxz+Zjdsc55g9yyz+Yq00Q=="
    },
    "to-regex-range": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
      "requires": {
        "is-number": "^7.0.0"
      }
    },
    "toidentifier": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz",
      "integrity": "sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA=="
    },
    "tr46": {
      "version": "0.0.3",
      "resolved": "https://registry.npmjs.org/tr46/-/tr46-0.0.3.tgz",
      "integrity": "sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw=="
    },
    "tslib": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-1.14.1.tgz",
      "integrity": "sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==",
      "optional": true
    },
    "tunnel-agent": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz",
      "integrity": "sha512-McnNiV1l8RYeY8tBgEpuodCC1mLUdbSN+CYBL7kJsJNInOP8UjDDEwdk6Mw60vdLLrr5NHKZhMAOSrR2NZuQ+w==",
      "optional": true,
      "requires": {
        "safe-buffer": "^5.0.1"
      }
    },
    "tweetnacl": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-1.0.3.tgz",
      "integrity": "sha512-6rt+RN7aOi1nGMyC4Xa5DdYiukl2UWCbcJft7YhxReBGQD7OAM8Pbxw6YMo4r2diNEA8FEmu32YOn9rhaiE5yw=="
    },
    "type-detect": {
      "version": "4.0.8",
      "resolved": "https://registry.npmjs.org/type-detect/-/type-detect-4.0.8.tgz",
      "integrity": "sha512-0fr/mIH1dlO+x7TlcMy+bIDqKPsw/70tVyeHW787goQjhmqaZe10uwLujubK9q9Lg6Fiho1KUKDYz0Z7k7g5/g=="
    },
    "type-fest": {
      "version": "0.20.2",
      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.20.2.tgz",
      "integrity": "sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ=="
    },
    "typedarray-to-buffer": {
      "version": "3.1.5",
      "resolved": "https://registry.npmjs.org/typedarray-to-buffer/-/typedarray-to-buffer-3.1.5.tgz",
      "integrity": "sha512-zdu8XMNEDepKKR+XYOXAVPtWui0ly0NtohUscw+UmaHiAWT8hrV1rr//H6V+0DvJ3OQ19S979M0laLfX8rm82Q==",
      "requires": {
        "is-typedarray": "^1.0.0"
      }
    },
    "typescript": {
      "version": "4.8.4",
      "resolved": "https://registry.npmjs.org/typescript/-/typescript-4.8.4.tgz",
      "integrity": "sha512-QCh+85mCy+h0IGff8r5XWzOVSbBO+KfeYrMQh7NJ58QujwcE22u+NUSmUxqF+un70P9GXKxa2HCNiTTMJknyjQ==",
      "dev": true
    },
    "u2f-api": {
      "version": "0.2.7",
      "resolved": "https://registry.npmjs.org/u2f-api/-/u2f-api-0.2.7.tgz",
      "integrity": "sha512-fqLNg8vpvLOD5J/z4B6wpPg4Lvowz1nJ9xdHcCzdUPKcFE/qNCceV2gNZxSJd5vhAZemHr/K/hbzVA0zxB5mkg==",
      "optional": true
    },
    "u3": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/u3/-/u3-0.1.1.tgz",
      "integrity": "sha512-+J5D5ir763y+Am/QY6hXNRlwljIeRMZMGs0cT6qqZVVzzT3X3nFPXVyPOFRMOR4kupB0T8JnCdpWdp6Q/iXn3w=="
    },
    "unique-string": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/unique-string/-/unique-string-2.0.0.tgz",
      "integrity": "sha512-uNaeirEPvpZWSgzwsPGtU2zVSTrn/8L5q/IexZmH0eH6SA73CmAA5U4GwORTxQAZs95TAXLNqeLoPPNO5gZfWg==",
      "requires": {
        "crypto-random-string": "^2.0.0"
      }
    },
    "update-browserslist-db": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.0.10.tgz",
      "integrity": "sha512-OztqDenkfFkbSG+tRxBeAnCVPckDBcvibKd35yDONx6OU8N7sqgwc7rCbkJ/WcYtVRZ4ba68d6byhC21GFh7sQ==",
      "requires": {
        "escalade": "^3.1.1",
        "picocolors": "^1.0.0"
      }
    },
    "update-notifier": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/update-notifier/-/update-notifier-5.1.0.tgz",
      "integrity": "sha512-ItnICHbeMh9GqUy31hFPrD1kcuZ3rpxDZbf4KUDavXwS0bW5m7SLbDQpGX3UYr072cbrF5hFUs3r5tUsPwjfHw==",
      "requires": {
        "boxen": "^5.0.0",
        "chalk": "^4.1.0",
        "configstore": "^5.0.1",
        "has-yarn": "^2.1.0",
        "import-lazy": "^2.1.0",
        "is-ci": "^2.0.0",
        "is-installed-globally": "^0.4.0",
        "is-npm": "^5.0.0",
        "is-yarn-global": "^0.3.0",
        "latest-version": "^5.1.0",
        "pupa": "^2.1.1",
        "semver": "^7.3.4",
        "semver-diff": "^3.1.1",
        "xdg-basedir": "^4.0.0"
      }
    },
    "url-parse-lax": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/url-parse-lax/-/url-parse-lax-3.0.0.tgz",
      "integrity": "sha512-NjFKA0DidqPa5ciFcSrXnAltTtzz84ogy+NebPvfEgAck0+TNg4UJ4IN+fB7zRZfbgUf0syOo9MDxFkDSMuFaQ==",
      "requires": {
        "prepend-http": "^2.0.0"
      }
    },
    "usb": {
      "version": "1.9.2",
      "resolved": "https://registry.npmjs.org/usb/-/usb-1.9.2.tgz",
      "integrity": "sha512-dryNz030LWBPAf6gj8vyq0Iev3vPbCLHCT8dBw3gQRXRzVNsIdeuU+VjPp3ksmSPkeMAl1k+kQ14Ij0QHyeiAg==",
      "optional": true,
      "requires": {
        "node-addon-api": "^4.2.0",
        "node-gyp-build": "^4.3.0"
      },
      "dependencies": {
        "node-addon-api": {
          "version": "4.3.0",
          "resolved": "https://registry.npmjs.org/node-addon-api/-/node-addon-api-4.3.0.tgz",
          "integrity": "sha512-73sE9+3UaLYYFmDsFZnqCInzPyh3MqIwZO9cw58yIqAZhONrrabrYyYe3TuIqtIiOuTXVhsGau8hcrhhwSsDIQ==",
          "optional": true
        }
      }
    },
    "util-deprecate": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
      "integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw=="
    },
    "uuid": {
      "version": "8.3.2",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-8.3.2.tgz",
      "integrity": "sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg=="
    },
    "v8flags": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/v8flags/-/v8flags-3.2.0.tgz",
      "integrity": "sha512-mH8etigqMfiGWdeXpaaqGfs6BndypxusHHcv2qSHyZkGEznCd/qAXCWWRzeowtL54147cktFOC4P5y+kl8d8Jg==",
      "requires": {
        "homedir-polyfill": "^1.0.1"
      }
    },
    "wcwidth": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/wcwidth/-/wcwidth-1.0.1.tgz",
      "integrity": "sha512-XHPEwS0q6TaxcvG85+8EYkbiCux2XtWG2mkc47Ng2A77BQu9+DqIOJldST4HgPkuea7dvKSj5VgX3P1d4rW8Tg==",
      "requires": {
        "defaults": "^1.0.3"
      }
    },
    "webidl-conversions": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-3.0.1.tgz",
      "integrity": "sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ=="
    },
    "whatwg-url": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-5.0.0.tgz",
      "integrity": "sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==",
      "requires": {
        "tr46": "~0.0.3",
        "webidl-conversions": "^3.0.0"
      }
    },
    "wide-align": {
      "version": "1.1.5",
      "resolved": "https://registry.npmjs.org/wide-align/-/wide-align-1.1.5.tgz",
      "integrity": "sha512-eDMORYaPNZ4sQIuuYPDHdQvf4gyCF9rEEV/yPxGfwPkRodwEgiMUUXTx/dex+Me0wxx53S+NgUHaP7y3MGlDmg==",
      "optional": true,
      "requires": {
        "string-width": "^1.0.2 || 2 || 3 || 4"
      }
    },
    "widest-line": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/widest-line/-/widest-line-3.1.0.tgz",
      "integrity": "sha512-NsmoXalsWVDMGupxZ5R08ka9flZjjiLvHVAWYOKtiKM8ujtZWr9cRffak+uSE48+Ob8ObalXpwyeUiyDD6QFgg==",
      "requires": {
        "string-width": "^4.0.0"
      },
      "dependencies": {
        "is-fullwidth-code-point": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
          "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg=="
        },
        "string-width": {
          "version": "4.2.3",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
          "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
          "requires": {
            "emoji-regex": "^8.0.0",
            "is-fullwidth-code-point": "^3.0.0",
            "strip-ansi": "^6.0.1"
          }
        },
        "strip-ansi": {
          "version": "6.0.1",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
          "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
          "requires": {
            "ansi-regex": "^5.0.1"
          }
        }
      }
    },
    "wrap-ansi": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
      "requires": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "dependencies": {
        "is-fullwidth-code-point": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
          "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg=="
        },
        "string-width": {
          "version": "4.2.3",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
          "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
          "requires": {
            "emoji-regex": "^8.0.0",
            "is-fullwidth-code-point": "^3.0.0",
            "strip-ansi": "^6.0.1"
          }
        },
        "strip-ansi": {
          "version": "6.0.1",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
          "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
          "requires": {
            "ansi-regex": "^5.0.1"
          }
        }
      }
    },
    "wrappy": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
      "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ=="
    },
    "write-file-atomic": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-3.0.3.tgz",
      "integrity": "sha512-AvHcyZ5JnSfq3ioSyjrBkH9yW4m7Ayk8/9My/DD9onKeu/94fwrMocemO2QAJFAlnnDN+ZDS+ZjAR5ua1/PV/Q==",
      "requires": {
        "imurmurhash": "^0.1.4",
        "is-typedarray": "^1.0.0",
        "signal-exit": "^3.0.2",
        "typedarray-to-buffer": "^3.1.5"
      }
    },
    "xdg-basedir": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/xdg-basedir/-/xdg-basedir-4.0.0.tgz",
      "integrity": "sha512-PSNhEJDejZYV7h50BohL09Er9VaIefr2LMAf3OEmpCkjOi34eYyQYAXUTjEQtZJTKcF0E2UKTh+osDLsgNim9Q=="
    },
    "y18n": {
      "version": "5.0.8",
      "resolved": "https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz",
      "integrity": "sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA=="
    },
    "yallist": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
      "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A=="
    },
    "yargs": {
      "version": "16.2.0",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-16.2.0.tgz",
      "integrity": "sha512-D1mvvtDG0L5ft/jGWkLpG1+m0eQxOfaBvTNELraWj22wSVUMWxZUvYgJYcKh6jGGIkJFhH4IZPQhR4TKpc8mBw==",
      "requires": {
        "cliui": "^7.0.2",
        "escalade": "^3.1.1",
        "get-caller-file": "^2.0.5",
        "require-directory": "^2.1.1",
        "string-width": "^4.2.0",
        "y18n": "^5.0.5",
        "yargs-parser": "^20.2.2"
      },
      "dependencies": {
        "is-fullwidth-code-point": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
          "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg=="
        },
        "string-width": {
          "version": "4.2.3",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
          "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
          "requires": {
            "emoji-regex": "^8.0.0",
            "is-fullwidth-code-point": "^3.0.0",
            "strip-ansi": "^6.0.1"
          }
        },
        "strip-ansi": {
          "version": "6.0.1",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
          "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
          "requires": {
            "ansi-regex": "^5.0.1"
          }
        }
      }
    },
    "yargs-parser": {
      "version": "20.2.9",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-20.2.9.tgz",
      "integrity": "sha512-y11nGElTIV+CT3Zv9t7VKl+Q3hTQoT9a1Qzezhhl6Rp21gJ/IVTW7Z3y9EWXhuUBC2Shnf+DX0antecpAwSP8w=="
    }
  }
}

'''
'''--- middlewares/smart_contract/contracts/package.json ---
{
  "name": "hello_near",
  "version": "1.0.0",
  "license": "(MIT AND Apache-2.0)",
  "type": "module",
  "scripts": {
    "build": "./scripts/build.sh",
    "deploy": "./scripts/deploy.sh",
    "test": "ava"
  },
  "dependencies": {
    "inquirer": "^9.1.4",
    "near-api-js": "^1.1.0",
    "near-cli": "^3.4.0",
    "near-sdk-js": "0.5.0"
  },
  "devDependencies": {
    "typescript": "^4.7.4"
  }
}

'''
'''--- middlewares/smart_contract/contracts/scripts/build.sh ---
#!/bin/sh

echo ">> Building contract"

near-sdk-js build src/contract.ts build/job_posting.wasm

'''
'''--- middlewares/smart_contract/contracts/scripts/deploy.sh ---
#!/bin/sh

./scripts/build.sh

if [ $? -ne 0 ]; then
  echo ">> Error building contract"
  exit 1
fi

echo ">> Deploying contract"

# https://docs.near.org/tools/near-cli#near-dev-deploy
near dev-deploy --wasmFile build/job_posting.wasm
'''
'''--- middlewares/smart_contract/contracts/scripts/manage-sc.js ---
import NearAPI from "near-api-js";
const { connect, KeyPair, keyStores, utils, providers } = NearAPI;
import * as os from "os";
import * as path from "path";
import * as fs from "fs";
import inquirer from "inquirer";
import { execSync } from "child_process";

/**
 * Checks whether or not the specified NEAR account exists
 * The network checked (mainnet, testnet, etc) is determined by near_connection
 * based on code from:
 * https://github.com/near/near-cli/blob/master/commands/create-account.js
 * @param   {string}  account_id      account id (username)
 * @param   {Near}    near_connection connection to NEAR network
 * @returns {boolean}
 */
const account_exists = async (account_id, near_connection) => {
  try {
    const account = await near_connection.account(account_id);
    await account.state(); // will error if account doesn't exist
  } catch (err) {
    // throw any error unrelated to the account not existing
    if (!err.message.includes("does not exist while viewing")) {
      throw err;
    }
    return false;
  }
  return true;
};

/**
 * Connect to the NEAR network
 * Currently hardcoded to testnet
 * @returns {NEAR} connection to NEAR network
 */
const connect_to_near = async () => {
  // configure public / private key pair storage
  const keyStore = new keyStores.UnencryptedFileSystemKeyStore(
    path.join(os.homedir(), ".near-credentials")
  );

  const connection_config = {
    networkId: "testnet",
    keyStore: keyStore,
    nodeUrl: "https://rpc.testnet.near.org",
    walletUrl: "https://wallet.testnet.near.org",
    helperUrl: "https://helper.testnet.near.org",
    explorerUrl: "https://explorer.testnet.near.org",
  };
  const near_connection = await connect(connection_config);
  return near_connection;
};

/**
 * Searches for credentials for the given user in local storage
 * Prompts the user to log in to their near account if no credentials are found
 * @param {string} account_id the account to authenticate
 */
const authenticate_user = async (account_id) => {
  const credentials = await fs.promises.readdir(
    path.join(os.homedir(), ".near-credentials", "testnet")
  );

  if (credentials.includes(`${account_id}.json`)) {
    console.log(
      `found existing user credentials in .near-credentials directory`
    );
  } else {
    console.log("redirecting to NEAR login");
    const result = execSync("near login");
  }
};

/**
 * Creates a new sub account under the specified account
 * The network (mainnet, testnet, etc) is determined by near_connection
 * @param {Account} account         NEAR account object
 * @param {string}  prefix          prefix to distinguish the sub account
 * @param {Near}    near_connection near connection object
 */
const create_sub_account = async (account, prefix, near_connection) => {
  const main_account_id = account.accountId;
  const sub_account_id = `${prefix}.${main_account_id}`;

  // create public / private key pair
  const key_pair = await KeyPair.fromRandom("ed25519");
  const public_key = keyPair.getPublicKey();

  // write keys to local storage
  await near_connection.connection.signer.keyStore.setKey(
    "testnet",
    sub_account_id,
    key_pair
  );

  // create sub account
  try {
    const response = await account.createAccount(
      sub_account_id,
      public_key,
      utils.format.parseNearAmount("200")
    );
    console.log(response);
  } catch (err) {
    throw err;
  }
};

/**
 * Check for an existing sub account, create a new one if necessary
 * @param   {string} account_id      id of the main account
 * @param   {Near}   near_connection NEAR connection object
 * @returns                          NEAR account object
 */
const configure_sub_account = async (account_id, near_connection) => {
  await authenticate_user(account_id);
  const account = await near_connection.account(account_id);

  // configure sub account
  const sub_account_id = `sc.${account_id}`;
  if (!(await account_exists(sub_account_id, near_connection))) {
    console.log("creating sub account for smart contract deployment");
    await create_sub_account(account, "sc", near_connection);
  } else {
    console.log("found existing sub account");
  }

  const sub_account = await near_connection.account(sub_account_id);
  return sub_account;
};

/**
 * Check for an existing dev account, create a new one if necessary
 * @param   {Near} near_connection Near connection object
 * @returns                        Near account object
 */
const configure_dev_account = async (near_connection) => {
  const account_file_path = path.join("../neardev", "dev-account.json");
  const account_env_path = path.join("../neardev", "dev-account.env");

  const key_store = near_connection.connection.signer.keyStore;

  try {
    const dev_account_id = fs
      .readFileSync(account_file_path)
      .toString("utf8")
      .trim();
    fs.readFileSync(account_env_path);

    if (dev_account_id && (await key_store.getKey("testnet", dev_account_id))) {
      console.log(`using existing dev account ${dev_account_id}`);
      const dev_account = await near_connection.account(dev_account_id);
      return dev_account;
    }
  } catch (err) {
    if (err.code === "ENOENT") {
      if (!fs.existsSync("../neardev")) {
        fs.mkdirSync("../neardev");
      }
    } else {
      throw err;
    }
  }

  console.log("creating new dev account");
  const randomNumber = Math.floor(
    Math.random() * (99999999999999 - 10000000000000) + 10000000000000
  );
  const dev_account_id = `dev-${Date.now()}-${randomNumber}`;

  const keyPair = await KeyPair.fromRandom("ed25519");
  await near_connection.createAccount(dev_account_id, keyPair.getPublicKey());
  await key_store.setKey("testnet", dev_account_id, keyPair);
  fs.writeFileSync(account_file_path, dev_account_id);
  fs.writeFileSync(account_env_path, `CONTRACT_NAME=${dev_account_id}`);

  const dev_account = await near_connection.account(dev_account_id);
  return dev_account;
};

/**
 * Deploy smart contract to specified account
 * Smart contract is currently hard coded
 * @param {Account} account Near account object
 */
const deploy_smart_contract = async (account) => {
  // check if smart contract has been deployed to account
  const state = await account.state();
  let sc_deployed = state.code_hash != "11111111111111111111111111111111";

  if (sc_deployed) {
    const { answer } = await inquirer.prompt([
      {
        type: "input",
        name: "answer",
        message:
          "smart contract already deployed, would you like to re-deploy? (y/n): ",
      },
    ]);

    if (answer != "y") return;
  }

  // deploy smart contract if necessary
  console.log("deploying smart contract");
  // build smart contract
  execSync("npm run build");
  const response = await account.deployContract(
    fs.readFileSync("../build/job_posting.wasm")
  );
};

/**
 * Main funciton to handle overall program flow
 */
const main = async () => {
  // prompt user for account id
  const { account_id } = await inquirer.prompt([
    {
      type: "input",
      name: "account_id",
      message: "enter you near account id (testnet only, blank for dev): ",
    },
  ]);

  // set up near connection and authenticate user
  const near_connection = await connect_to_near();
  let caller_account;
  let contract_account;
  if (account_id) {
    contract_account = await configure_sub_account(account_id, near_connection);
    caller_account = await near_connection.account(account_id);
  } else {
    contract_account = await configure_dev_account(near_connection);
    caller_account = contract_account;
  }
  await deploy_smart_contract(contract_account);

  let response;
  response = await caller_account.viewFunction({
    contractId: contract_account.accountId,
    methodName: "get_available_funds",
    args: {},
  });
  console.log(response);

  response = await caller_account.functionCall({
    contractId: contract_account.accountId,
    methodName: "add_funds",
    args: {},
    attachedDeposit: 10,
  });

  response = await caller_account.functionCall({
    contractId: contract_account.accountId,
    methodName: "add_jobs",
    args: { ids: ["0", "1", "2", "3"] },
  });
  const result = providers.getTransactionLastResult(response);
  console.log(result);
};

await main();

'''
'''--- middlewares/smart_contract/contracts/src/contract.ts ---
import { NearBindgen, near, call, view } from "near-sdk-js";

enum JobStatus {
  AVAILABLE = "available",
  IN_PROGRESS = "in_progress",
  COMPLETED = "completed",
}

interface Job {
  id: string;
  reward: string;
  expires: string;
  label_keys: string[];
  tasks: Task[];
  final_ranking?: string[];
}

enum TaskType {
  LABEL = "label",
  REVIEW = "review",
}

interface Task {
  type: string;
  assigned_to: string;
  public_key: string;
  time_assigned: string;
  time_submitted?: string;
  data?: any;
}

interface JobDescription {
  id: string;
  label_keys: string[];
}

// placeholder configuration
const TIME_LIMIT = BigInt(3600000000000); // 1 hour in nanoseconds - WARNING : important variable be careful
const STORAGE_LIMIT: bigint = BigInt(5000000000000000000000000); // 5.0 NEAR
const MIN_REWARD: bigint = BigInt(80000000000000000000000); // 0.08 NEAR
const NUM_LABELS = 3;
const NUM_REVIEWS = 3;
const REQUEST_FEE = BigInt(10000000000000000000000000); // 10 NEAR

@NearBindgen({})
class JobPosting {
  url: string = "";
  funds: string = "0";
  available_jobs: Job[] = [];
  in_progress_jobs: Job[] = [];
  completed_jobs: Job[] = [];

  @view({})
  get_url(): string {
    return this.url;
  }

  @call({})
  set_url({ url }: { url: string }) {
    this.url = url;
  }

  /**
   * Adds funds for job rewards to the smart contract
   * Should only be called by researcher
   */
  @call({ payableFunction: true })
  add_funds({}): void {
    const amount = near.attachedDeposit();
    this.funds = (BigInt(this.funds) + amount).toString();
  }

  /**
   * Get the amount of funds supplied by the researcher
   * @returns {string} funds supplied to smart contract
   */
  @view({})
  get_available_funds(): string {
    return this.funds;
  }

  @call({ privateFunction: true })
  return_funds({ recipient }: { recipient: string }): void {
    this.send_near(recipient, BigInt(this.funds));
    this.funds = "0";
  }
  /**
   * Send the specified amount of near tokens to the specified account
   * @param {string} account_id account to send the tokens to
   * @param {bigint} amount     amount to send
   */
  send_near(account_id: string, amount: bigint): void {
    const promise = near.promiseBatchCreate(account_id);
    near.promiseBatchActionTransfer(promise, amount);
  }

  /**
   * Add jobs to the available jobs list
   * @param { ids: string[] } { ids } list of job ids to add
   * @returns {string}                result message (error or success)
   */
  @call({ privateFunction: true })
  add_jobs({ descriptions }: { descriptions: JobDescription[] }): string {
    const caller = near.predecessorAccountId();

    if (near.storageUsage() >= STORAGE_LIMIT) {
      this.send_near(caller, BigInt(this.funds));
      return "error: not enough storage available";
    }

    const reward_amount: bigint =
      BigInt(this.funds) / BigInt(descriptions.length);

    if (reward_amount < MIN_REWARD) {
      this.send_near(caller, BigInt(this.funds));
      return "error: insufficient funds provided";
    }

    const expires = near.blockTimestamp() + TIME_LIMIT;

    descriptions.map(({ id, label_keys }) => {
      this.available_jobs.push({
        id: id,
        reward: `${reward_amount}`,
        expires: `${expires}`,
        label_keys: label_keys,
        tasks: [],
      });
    });

    this.funds = (
      BigInt(this.funds) -
      reward_amount * BigInt(descriptions.length)
    ).toString();

    return "success: jobs added to available jobs list";
  }

  /**
   * cancel one or more jobs by providing a list of job ids
   * @param  {number[]} ids list of ids of jobs to cancel
   * @return {string}       result message (success or error)
   */
  @call({ privateFunction: true })
  cancel_jobs({ ids }: { ids: string[] }): string {
    if (!this.available_jobs.length) {
      return "error: no jobs that can be cancelled";
    }

    const canceled_jobs = [];
    const errors = [];
    ids.map((id) => {
      // only jobs in the available jobs list can be canceled
      const job = this.available_jobs.find((job) => job.id === id);
      if (job) {
        this.available_jobs = this.available_jobs.filter((job) => job.id != id);
        canceled_jobs.push(job.id);
        this.funds = (BigInt(this.funds) + BigInt(job.reward)).toString();
      } else {
        errors.push(job.id);
      }
    });
    if (!errors.length)
      return `success: canceled ${
        canceled_jobs.length > 1 ? "jobs" : "job"
      } ${canceled_jobs}`;
    // note: all matching jobs present in the available jobs list will be canceled, even if some jobs cannot be canceled
    return `error: ${
      errors.length > 1 ? "jobs" : "job"
    } ${errors} already assigned or do not exist`;
  }

  /**
   * get Job objects by providing list of job ids
   * @param  {number[]}  ids    list of job ids, returns all jobs if empty
   * @param  {JobStatus} status type of jobs to retrieve, (available, in_progress, completed)
   * @return {job[]}            list of job objects with matching ids
   */
  @view({})
  get_jobs({ ids, status }: { ids: string[]; status?: JobStatus }): Job[] {
    let jobs: Job[];
    switch (status) {
      case JobStatus.AVAILABLE:
        jobs = this.available_jobs;
        break;
      case JobStatus.IN_PROGRESS:
        jobs = this.in_progress_jobs;
        break;
      case JobStatus.COMPLETED:
        jobs = this.completed_jobs;
        break;
      default:
        jobs = this.available_jobs
          .concat(this.in_progress_jobs)
          .concat(this.completed_jobs);
    }

    if (!ids) return jobs;
    return jobs.filter((job) => ids.includes(job.id));
  }

  @call({ privateFunction: true })
  recall_task({
    job_id,
    assigned_to,
  }: {
    job_id: string;
    assigned_to: string;
  }): string | undefined {
    const job = this.in_progress_jobs.find((job) => job.id === job_id);
    const to_recall = job.tasks.find(
      (task) => task.assigned_to === assigned_to
    );

    if (
      near.blockTimestamp() - BigInt(to_recall.time_assigned) <
      TIME_LIMIT
    ) {
      return "error: task is not expired";
    }

    this.in_progress_jobs = this.in_progress_jobs.filter(
      (ip_job) => ip_job != job
    );

    job.tasks = job.tasks.filter((task) => task != to_recall);
    near.log(job);
    this.available_jobs.push(job);
  }

  @view({})
  get_request_fee(): string {
    return REQUEST_FEE.toString();
  }

  /**
   * Request a task, will assign a label or review, depending on what is needed
   * @returns {Task | string} assigned task or error message
   */
  @call({ payableFunction: true })
  request_task({
    rsa_pk,
  }: {
    rsa_pk: string;
  }): { url: string; id: string; label_keys: string[]; task: Task } | string {
    if (!rsa_pk) {
      return "error: must provide rsa public key";
    }

    if (near.attachedDeposit() < REQUEST_FEE) {
      this.send_near(near.predecessorAccountId(), near.attachedDeposit());
      return "error: insufficient funds";
    }

    this.send_near(near.predecessorAccountId(), near.attachedDeposit());

    if (this.available_jobs.length === 0) {
      return "error: no available jobs";
    }

    const requester_id = near.predecessorAccountId();
    const assigned_task = this.in_progress_jobs.find((job) => {
      const assigned_tasks = job.tasks.find(
        (task) => task.assigned_to === requester_id
      );
      return assigned_tasks != undefined;
    });

    if (assigned_task) {
      return "error: user currently assigned an unsubmitted task";
    }

    let job: Job = this.available_jobs.pop();

    const num_labels = job.tasks.filter(
      (task) => task.type === TaskType.LABEL
    ).length;

    const num_reviews = job.tasks.filter(
      (task) => task.type === TaskType.REVIEW
    ).length;

    let task_type: TaskType;
    if (num_labels < NUM_LABELS) {
      task_type = TaskType.LABEL;
    } else if (num_reviews < NUM_REVIEWS) {
      task_type = TaskType.REVIEW;
    } else {
      return "error: job already completed";
    }

    let task: Task = {
      type: task_type,
      assigned_to: near.predecessorAccountId(),
      time_assigned: near.blockTimestamp().toString(),
      public_key: rsa_pk,
    };

    job.tasks.push(task);
    this.in_progress_jobs.push(job);
    return {
      url: this.url,
      id: job.id,
      label_keys: job.label_keys,
      task: task,
    };
  }

  @call({})
  submit_task({
    job_id,
    submission,
  }: {
    job_id: string;
    submission: Task;
  }): void {
    const job = this.in_progress_jobs.find((job) => job.id === job_id);
    let task = job.tasks.find(
      (task) => task.assigned_to === near.predecessorAccountId()
    );
    job.tasks = job.tasks.filter((tmp) => tmp != task);
    task = { time_submitted: near.blockTimestamp().toString(), ...submission };
    job.tasks.push(task);

    const num_labels = job.tasks.filter(
      (task) => task.type === TaskType.LABEL
    ).length;

    const num_reviews = job.tasks.filter(
      (task) => task.type === TaskType.REVIEW
    ).length;

    if (num_labels < NUM_LABELS || num_reviews < NUM_REVIEWS) {
      this.available_jobs.push(job);
    } else {
      const ranking = this.rank_reviews(job);
      near.log(`winner: ${ranking[0]}`);
      this.send_near(ranking[0], BigInt(job.reward));
      this.funds = (BigInt(this.funds) - BigInt(job.reward)).toString();
      job.final_ranking = ranking;
      this.completed_jobs.push(job);
    }

    this.in_progress_jobs = this.in_progress_jobs.filter((ipj) => {
      return ipj.id != job.id;
    });
  }

  rank_reviews(job: Job): string[] {
    // group votes by ranking
    const votes: Map<string[], number> = job.tasks
      .filter((task) => task.type === TaskType.REVIEW)
      .reduce((acc, task) => {
        if (acc.has(task.data.ranking)) {
          acc.set(task.data.ranking, acc.get(task.data.ranking) + 1);
        } else {
          acc.set(task.data.ranking, 1);
        }
        return acc;
      }, new Map());

    // compute pairwise candidate preferences
    let preferences = {};
    for (let entry of votes) {
      const ranking = entry[0];
      const votes = entry[1];

      for (let i = 0; i < ranking.length - 1; i++) {
        for (let j = i + 1; j < ranking.length; j++) {
          let v = ranking[i];
          let w = ranking[j];

          if (!preferences[v]) {
            preferences[v] = {};
          }

          preferences[v][w] = preferences[v][w]
            ? preferences[v][w] + votes
            : votes;
        }
      }
    }

    // generate cartesion product of candidates
    // exclude pairings of a candidate with themselves
    const candidates = job.tasks
      .filter((task) => task.type === TaskType.LABEL)
      .map((task) => task.assigned_to);
    const candidate_pairs = candidates.reduce(
      (pairs, x) => [
        ...pairs,
        ...candidates.filter((y) => x != y).map((y) => [x, y]),
      ],
      []
    );

    // calcualte path strengths
    let strengths = JSON.parse(JSON.stringify(preferences));
    for (let [c_i, c_j] of candidate_pairs) {
      if (preferences[c_i][c_j] > preferences[c_j][c_i]) {
        strengths[c_i][c_j] = preferences[c_i][c_j];
      } else {
        strengths[c_i][c_j] = 0;
      }
    }

    for (let [c_i, c_j] of candidate_pairs) {
      for (let c_k of candidates.filter((c) => c != c_i && c != c_j)) {
        strengths[c_j][c_k] = Math.max(
          strengths[c_j][c_k],
          Math.min(strengths[c_j][c_i], strengths[c_i][c_k])
        );
      }
    }

    // rank candidates
    candidates.sort((c_i, c_j) => {
      if (strengths[c_i][c_j] > strengths[c_j][c_i]) return -1;
      if (strengths[c_i][c_j] < strengths[c_j][c_i]) return 1;
      return 0;
    });

    return candidates;
  }

  /**
   * delete all completed jobs stored in the contract, can only be called by the account to which the contract is deployed
   */
  @call({ privateFunction: true })
  clear_completed_jobs(): void {
    this.completed_jobs = [];
  }
}

'''
'''--- middlewares/smart_contract/contracts/tsconfig.json ---
{
  "compilerOptions": {
    "experimentalDecorators": true,
    "target": "es5",
    "noEmit": true,
    "downlevelIteration": true,
    "lib": ["ES2020"]
  },
  "exclude": [
    "node_modules"
  ],
}
'''
'''--- middlewares/smart_contract/nearApi.js ---
// All credit goes to: https://docs.near.org/tools/near-api-js/quick-reference

const child_process = require('child_process')
const fs = require("fs")
const os = require("os")
const path = require("path")
const nearAPI = require("near-api-js");
const { connect, KeyPair, keyStores, utils, providers } = nearAPI
const util = require("../../utils/util")

const logger = require("../../utils/logger")
const request = require("../../utils/request")
const rsaGen = require("./test/index")

const config = require("../../config/config.json").smartContract
const credentialsPath = path.join(os.homedir(), ".near-credentials") // look for keys in $HOME/.near-credentials (default)

const myKeyStore = new nearAPI.keyStores.UnencryptedFileSystemKeyStore(credentialsPath);
const connectionConfig = Object.assign({keyStore: myKeyStore}, config.connectionConfig)

const nameForLog = `[nearApi]`
const addJobSchema = require("../../models/scAddJob")

// get account balance for a stated NEAR account
async function getAccountBalance(accountName){
    const output = { status: true, account: accountName, output: {} }

    try {
        const nearConnection = await nearAPI.connect(connectionConfig);
        const account = await nearConnection.account(accountName);
        output.output = await account.getAccountBalance()
    } catch(err) {
        logger.error(`${nameForLog} Failed to get ${accountName} account balance due to the following error: ${err}`)
        output.status = false
    }

    return output
}

// send tokens to a stated NEAR account
async function sendTokens(sender, receiver, amount){
    const status = { 
        status: false, 
        setting: {
            "sender": sender,
            "receiver": receiver,
            "amount": amount
        },
        amountSent: "",
        output: {}
    }

    if(typeof(amount) !== 'number'){
        logger.error(`${nameForLog} Failed to attempt to send tokens due to amount ${amount} NOT being type number. Status: ${JSON.stringify(status)}`)
        return status
    }
    
    try {
        amount = amount.toLocaleString('fullwide', {useGrouping:false})
        amount = utils.format.parseNearAmount(amount) // convert near to yoctoNEAR

        sender = String(sender)
        receiver = String(receiver)

        const nearConnection = await nearAPI.connect(connectionConfig);
        const account = await nearConnection.account(sender);
        const sendResponse = await account.sendMoney(
            receiver, // receiver account
            amount // amount in yoctoNEAR
        )

        status.status = true
        status.amountSent = amount
        status.output = sendResponse

        logger.info(`${nameForLog} Successfully sent tokens. Here is the data for the transaction: ${JSON.stringify(status)}`)
    } catch(err) {
        logger.error(`${nameForLog} Failed to send tokens due to something not being valid with the request (status: ${JSON.stringify(status)}), resulting in the following error: ${err}`)
        status.status = false
    }

    return status
}

// call a view function in a smart contract
async function viewFunction(requester, contract, method, arguments){
    const params = {
        "requester": requester,
        "contract": contract,
        "method": method,
        "arguments": arguments
    }

    try {
        const nearConnection = await nearAPI.connect(connectionConfig)
        const account = await nearConnection.account(requester)
    
        const response = await account.viewFunction({
            contractId: contract,
            methodName: method,
            args: arguments
        })

        logger.info(`${nameForLog} ${viewFunction.name} was provided with params ${JSON.stringify(params)} and the smart contract returned the following (translated) response: ${providers.getTransactionLastResult(response)}`)
        return response

    } catch(err) {
        logger.error(`${nameForLog} Failed to ${viewFunction.name}, with params ${JSON.stringify(params)}, due to the following error: ${err}`)
        return false
    }
}

// call an action/call function in a smart contract
async function callFunction(requester, contract, method, arguments, deposit){
    const params = {
        "requester": requester,
        "contract": contract,
        "method": method,
        "arguments": arguments,
        "deposit": deposit
    }

    try {
        let longDeposit = deposit
        if(deposit){
            longDeposit = utils.format.parseNearAmount(deposit.toLocaleString('fullwide', {useGrouping:false}))
        }

        const nearConnection = await nearAPI.connect(connectionConfig)
        const account = await nearConnection.account(requester)
    
        const response = await account.functionCall({
            contractId: contract,
            methodName: method,
            args: arguments,
            attachedDeposit: longDeposit
        })

        logger.info(`${nameForLog} ${callFunction.name} was provided with params ${JSON.stringify(params)} and the smart contract returned the following (translated) response: ${providers.getTransactionLastResult(response)}`)
        return providers.getTransactionLastResult(response)

    } catch(err) {
        logger.error(`${nameForLog} Failed to ${callFunction.name}, with params ${JSON.stringify(params)}, due to the following error: ${err}`)
        return false
    }
}

///////////////////////////////////////////////////////
//// middle^2 main functions are below these lines ////
///////////////////////////////////////////////////////

async function getDB(contract, id=undefined) {
    let arguments = {}

    if(id){
        arguments = {"ids": [String(id)]}
    }

    const response = viewFunction(undefined, contract, "get_jobs", arguments)

    return response
}

async function addFunds(from, to, amount) {
    const output = { status: 0, output: undefined }

    const response = await callFunction(from, to, "add_funds", {}, amount)

    if(response === false || String(response).toLowerCase().includes("error")){
        output.status = 1
        output.output = response
        return output
    }

    output.output = response
    return output
}

async function returnFunds(contract, recipient) {
    const output = { status: 0, output: undefined }

    const response = await callFunction(contract, contract, "return_funds", { "recipient": recipient }, undefined)

    if(!response === false || String(response).toLowerCase().includes("error")){
        output.status = 1
        output.output = response
        return output
    }

    output.output = response
    return output
}

async function getAvailableFunds(contract) {
    return viewFunction(undefined, contract, "get_available_funds", arguments)
}

async function addJobs(contract, jobs) {
    const output = { status: 0, output: undefined }
    const validJobs = await util.schemaValidate(addJobSchema.scAddJob, jobs)
    if(!validJobs){
        logger.error(`${nameForLog} Failed to add job ${JSON.stringify(jobs)} to contract ${contract} due to inputted jobs not being a valid format`)
        output.status = 1
        return output
    }

    const response = await callFunction(contract, contract, "add_jobs", { "descriptions": jobs }, undefined)

    if(response === false || String(response).toLowerCase().includes("error")){
        output.status = 1
        output.output = response
        return output
    }

    output.output = response
    return output
}

async function cancelJobs(contract, jobs) {
    const output = { status: 0, output: undefined }

    const response = await callFunction(contract, contract, "cancel_jobs", { "ids": jobs }, undefined)

    if(response === false || String(response).toLowerCase().includes("error")){
        output.status = 1
        output.output = response
        return output
    }

    output.output = response
    return output
}

async function getStatus(contract, type) {
    const options = [ "available", "in_progress", "completed" ]
    
    type = String(type)
    
    if(!options.includes(type)){
        return undefined
    }

    const response = viewFunction(undefined, contract, "get_jobs", {"status": type})

    return response
}

async function setURL(contract, urlRoot, endpoint="") {
    const output = { status: 0, output: undefined }
    
    let url = String(urlRoot)

    const urlStatus = await request.get(String(path.join(url, String(endpoint))))

    if(urlStatus.status === 1){
        output.status = 1
        logger.error(`${nameForLog} Failed to setURL() due to url endpoint not existing or being down: ${JSON.stringify(urlStatus)}`)
        return output
    }

    const response = await callFunction(contract, contract, "set_url", { "url": url }, undefined)

    if(response === false || String(response).toLowerCase().includes("error")){
        output.status = 1
        output.output = response
        return output
    }

    output.output = response
    return output
}

async function getURL(contract) {
    return viewFunction(undefined, contract, "get_url", {})
}

// (11-19-2022) warning : this function should not be used for the final product but it works for testing
async function scBuildDeploy(){
    const output = { status: 1, output: {} }
    
    const rootDir = path.join(__dirname, "contracts/")

    if(!fs.existsSync(rootDir)){
        return output
    }

    const cmd = `npm run deploy --prefix ${rootDir}`

    try {
        const results = child_process.execSync(String(cmd)).toString('utf8')

        let lineOne = undefined
        let lineTwo = undefined
        results.split("\n").forEach(function(element){
            if(element.includes("Starting deployment. ")){
                lineOne = element
            }

            if(element.includes("Done deploying to ")){
                lineTwo = element
            }
        })

        if(lineOne && lineTwo){
            const account = lineTwo.split(" ").at(-1)
            const accountData = {}
            lineOne.replace("Starting deployment. ", "").split(", ").forEach(function(element){
                let key = element.split(": ")[0]
                let val = element.split(": ")[1]
                if(key === "Account id"){
                    key = "account"
                }
                accountData[key] = val
            })

            if(account === accountData.account){
                output.status = 0
                output.output = accountData
                logger.info(`${nameForLog} Successfully built and deploy the project's smart contract: ${JSON.stringify(output)}`)
                return output
            } else {
                logger.fatal(`${nameForLog} ${scBuildDeploy.name} because ${account} DOES NOT EQUAL ${accountData.account}`)
            }
        } else {
            logger.fatal(`${nameForLog} Failed to get the results from ${scBuildDeploy.name} due to lineOne = ${lineOne} & lineTwo = ${lineTwo}`)
        }

    } catch (err) {
        logger.fatal(`${nameForLog} The following error occurred resulting in ${scBuildDeploy.name} failing to run correctly: ${err}`)
    }

    output.status = 1
    return output
}

// the researcher does not really need this function but it's good for testing
async function requestTask(scAccount, labelerAccount) {
    const output = { status: 0, output: undefined }

    try {
        let currentRequestFee = await viewFunction(labelerAccount, scAccount, "get_request_fee", {})
        currentRequestFee = utils.format.formatNearAmount((1.1 * currentRequestFee).toLocaleString('fullwide', {useGrouping:false})) // muliply by 1.1 to avoid werid float errors
    
        const rsaKeyPair = await rsaGen.getRSAKeys()
        const publicKey = rsaKeyPair.public
    
        const response = await callFunction(labelerAccount, scAccount, "request_task", { "rsa_pk": publicKey }, currentRequestFee)
    
        if(response === false || String(response).toLowerCase().includes("error")){
            output.status = 1
            output.output = response
            return output
        }
    
        output.output = {
            "fee": currentRequestFee,
            "keys": rsaKeyPair,
            "response": response
        }

    } catch(err) {
        logger.error(`${requestTask.name} failed to request for a task for account ${labelerAccount} smart contract ${scAccount} due to the following error: ${err}`)
        output.status = 1
    }

    return output
}

// recall a certain job for a certain user after it's past it's expiration
async function recallTask(contract, job_id, assigned_to) {
    const output = { status: 0, output: undefined }
    
    const response = await callFunction(contract, contract, "recall_task", { "job_id": String(job_id), "assigned_to": String(assigned_to) }, undefined)

    if(response === false || String(response).toLowerCase().includes("error")){
        output.status = 1
        output.output = response
        return output
    }

    output.output = response

    return output
}

// recall a certain job for a certain user after it's past it's expiration
async function clearCompleted(contract) {
    const output = { status: 0, output: undefined }
    
    const response = await callFunction(contract, contract, "clear_completed_jobs", {}, undefined)

    if(response === false || String(response).toLowerCase().includes("error")){
        output.status = 1
        output.output = response
        return output
    }

    output.output = response

    return output
}

module.exports = {
    getAccountBalance,
    sendTokens,
    viewFunction,
    callFunction,
    getDB,
    addFunds,
    getAvailableFunds,
    addJobs,
    cancelJobs,
    getStatus,
    setURL,
    getURL,
    scBuildDeploy,
    returnFunds,
    requestTask,
    recallTask,
    clearCompleted
}

'''
'''--- middlewares/smart_contract/test/index.js ---
const crypto = require("crypto")
const db = require("../../database/db")
const moment = require("moment")
const fs = require('fs');
const logger = require("../../../utils/logger")

const testDataFileName = "testSmartContractTestData.json"

/*
CREDIT - A json dataset of some common english nouns
This dataset was built from various sources:
    - 11-4-2022 : https://gist.github.com/peterdemin/920ec3eaaa0a9f3cafd3a855557f5e0c
    - 11-4-2022 : https://gist.github.com/pcgeek86/78f4cad29dd16961ceeeee654127a0db
    - 11-4-2022 : https://gist.github.com/atduskgreg/3cf8ef48cb0d29cf151bedad81553a54
    - 11-4-2022 : https://www.vocabulary.com/lists/189583#view=list
*/
const nouns = require("./nouns.json").data

/*
CREDIT - A function that generates and returns a RSA key pair (public & private keys):
This function was taken directly and modified from GeeksForGeeks' online article:
    - 11-4-2022 : https://www.geeksforgeeks.org/node-js-crypto-generatekeypair-method/
*/
async function getRSAKeys(){
    const { publicKey, privateKey } = crypto.generateKeyPairSync("rsa", {
        modulusLength: 2048,
    })

    return {
        public: publicKey.export({ type: "pkcs1", format: "pem" }),
        private: privateKey.export({ type: "pkcs1", format: "pem" })
    }
}

// get the currect epoch time in seconds
async function currectEpoch(){
    return moment().unix() // seconds
}

/*
CREDIT - A function that creates a random number in a defined range
This one-line function body was taken directly from Alesanco Stackoverflow post:
    - 11-5-2022 : https://stackoverflow.com/questions/17726753/get-a-random-number-between-0-0200-and-0-120-float-numbers
*/
async function randomNumber(places, start, end){
    return parseFloat((Math.random() * (start - end) + end).toFixed(places))
}

// create object of image labels which consists of annotations and 2D coordinates
async function genPoints(numOfLabels, totalPointsRange, xRange, yRange){
    let minPoint = totalPointsRange[0]
    let maxPoint = totalPointsRange[1]

    let xMin = xRange[0]
    let xMax = xRange[1]

    let yMin = yRange[0]
    let yMax = yRange[1]

    let topics = []
    while(true){
        let randomIndex = Math.floor(Math.random()*nouns.length)
        let entry = nouns[randomIndex]

        if(!(entry in topics)){
            topics.push(entry)
        }

        if(topics.length === numOfLabels){
            break
        }
    }

    let output = {}
    for(let i = 0; i < topics.length; i++){
        output[topics[i]] = { "annotation": [], "points": [] }

        const numOfPoints = await randomNumber(0, minPoint, maxPoint)

        let annotation = ""
        for(let j = 0; j < (numOfPoints * 5); j++){
            annotation = annotation + nouns[Math.floor(Math.random()*nouns.length)] + " "
        }

        output[topics[i]]["annotation"] = annotation

        for(let j = 0; j < numOfPoints; j++){
            let x = await randomNumber(0, xMin, xMax)
            let y = await randomNumber(0, yMin, yMax)
            output[topics[i]]["points"].push([x,y])
        }
    }

    return output
}

/*
CREDIT - Shuffle an array
This function was taken directory from coolaj86's Stackoverflow post:
    - 11-6-2022 : https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array
*/
async function shuffle(array) {
    let currentIndex = array.length,  randomIndex;

    // While there remain elements to shuffle.
    while (currentIndex != 0) {

        // Pick a remaining element.
        randomIndex = Math.floor(Math.random() * currentIndex);
        currentIndex--;

        // And swap it with the current element.
        [array[currentIndex], array[randomIndex]] = [
        array[randomIndex], array[currentIndex]];
    }

    return array;
}

// check if all the elements in an array are type number
function allNum(array){
    return array.every(index => { return typeof(index) === "number" })
}

// get the sum of all the numbers in an array
function addAll(array){
    let sum = 0
    array.forEach(function(item){
        sum += item
    })
    return sum
}

// round up (ceil) all the numbers in an array
function ceilAll(array){
    let output = []
    array.forEach(function(item){
        output.push(Math.ceil(item))
    })
    return output
}

/** 
 * Generate a json-file/database that would be the same/similar to what the smart contract would return. This is 'fake' data used for testing.
 * 
 * @param {array} jobCountRange - range of how many jobs you want to generate for this fake/testing smart contract data
 * @param {array} imageResolution - resolution of a image
 * @param {array} rewardRange - range of how much the reward should be for each entry in the fake/testing smart contract data
 * @param {array} imgLabelRange - range of how many label topics should be made per entry in the smart contract data
 * @param {array} pointRange - range of how many label (coordinates) should be made per entry in the smart contract data
 * @return {boolean/file} - true if no errors occurred or false if an error occurred. also a json file should be created if there are no issues.
 * 
 * EXAMPLE:
 *      genTestData([5,5], [3584,2240], [0.03, 0.06], [1, 4], [2, 5])
*/
async function genTestData(jobCountRange, imageResolution, rewardRange, imgLabelRange, pointRange){
    const filepath = `${__dirname}/${testDataFileName}`

    let rewardRangeBackup = rewardRange

    jobCountRange = ceilAll(jobCountRange)
    imageResolution = ceilAll(imageResolution)
    rewardRange = ceilAll(rewardRange)
    imgLabelRange = ceilAll(imgLabelRange)
    pointRange = ceilAll(pointRange)

    const conditions = [
        (Array.isArray(jobCountRange) && Array.isArray(imageResolution) && Array.isArray(rewardRange) && Array.isArray(imgLabelRange) && Array.isArray(pointRange)),
        (jobCountRange.length === 2 && imageResolution.length === 2 && rewardRange.length === 2 && imgLabelRange.length === 2 && pointRange.length === 2),
        (allNum(jobCountRange) && allNum(imageResolution) && allNum(rewardRange) && allNum(imgLabelRange) && allNum(pointRange)),
        (jobCountRange[0] <= jobCountRange[1] && rewardRange[0] <= rewardRange[1] && imgLabelRange[0] <= imgLabelRange[1] && pointRange[0] <= pointRange[1]),
        (addAll(jobCountRange) > 0 &&  addAll(imageResolution) > 0 && addAll(imgLabelRange) > 0 && addAll(pointRange) > 0)
    ]

    // make sure input is valid
    conditions.forEach(function(item, index){
        if(!item){
            logger.error(`Inputted params ${JSON.stringify(functionInputs)} is invalid because it failed condition number/index ${index}`)
            return false
        }
    })

    rewardRange = rewardRangeBackup

    const inputSettings = {
        "jobCountRange": jobCountRange,
        "imageResolution": imageResolution,
        "rewardRange": rewardRange,
        "imgLabelRange": imgLabelRange,
        "pointRange": pointRange
    }

    logger.info(`Creating the researcher's smart contract test data to ${filepath} with the following settings: ${JSON.stringify(inputSettings)}`)

    // important, hard set, variables. double check theses variables
    const statusOptions = [ "available", "in_progress", "completed" ]
    const uniqUserCountTotal = 3 * 2

    const currectTime = await currectEpoch()

    const currectDB = await db.getImageData()
    const ids = currectDB.map(obj => obj.id)

    const width = imageResolution[0]
    const height = imageResolution[1]

    const jobs = await randomNumber(0, jobCountRange[0], jobCountRange[1])

    let statusDivide = Math.floor(jobs/(statusOptions.length))
    let waitings = statusDivide
    let pendings = statusDivide
    let completes = jobs-(2*statusDivide)

    let allFakeData = []
    let userTable = {}
    let userCounter = 0
    for(let i = 0; i < jobs; i++){
        let entry = {
            id: ids[i],
            status: "",
            tasks: []
        }

        entry["reward"] = await randomNumber(4, rewardRange[0]*Math.pow(10,24), rewardRange[1]*Math.pow(10,24)) // in yNear
        entry["reward"] = entry["reward"].toLocaleString('fullwide', {useGrouping:false})

        let lUsers = []
        let rUsers = []
        for(let j = 0; j < uniqUserCountTotal; j++){
            if(j < Math.floor((uniqUserCountTotal/2))){
                lUsers.push(`user${userCounter}.near`)
            } else {
                rUsers.push(`user${userCounter}.near`)
            }
            userCounter += 1
        }

        entry["final_ranking"] = await shuffle(lUsers)

        const numOfLabelTopics = await randomNumber(0, imgLabelRange[0], imgLabelRange[1])

        entry["expires"] = (currectTime + (60*60)) * Math.pow(10,9)
        entry["expires"] = entry["expires"].toLocaleString('fullwide', {useGrouping:false})

        for(let j = 0; j < lUsers.length; j++){
            let tmpKeys = await getRSAKeys()
            userTable[lUsers[j]] = tmpKeys
            let started = (await randomNumber(2, currectTime, currectTime + (60*5))) * Math.pow(10, 9)
            let ended = (await randomNumber(2, currectTime + (60*5), currectTime + (2*60*5))) * Math.pow(10, 9)
            entry.tasks.push({
                type: "label",
                assigned_to: lUsers[j],
                public_key: tmpKeys.public,
                data: await genPoints(numOfLabelTopics, [pointRange[0], pointRange[1]], [0, width], [0, height]),
                "time_assigned": started.toLocaleString('fullwide', {useGrouping:false}),
                "time_submitted": ended.toLocaleString('fullwide', {useGrouping:false})
            })
        }

        for(let j = 0; j < rUsers.length; j++){
            let tmpKeys = await getRSAKeys()
            userTable[rUsers[j]] = tmpKeys
            let started = (await randomNumber(2, currectTime, currectTime + (60*5))) * Math.pow(10, 9)
            let ended = (await randomNumber(2, currectTime + (60*5), currectTime + (2*60*5))) * Math.pow(10, 9)
            entry.tasks.push({
                type: "review",
                assigned_to: rUsers[j],
                public_key: tmpKeys.public,
                data: await shuffle(lUsers),
                "time_assigned": started.toLocaleString('fullwide', {useGrouping:false}),
                "time_submitted": ended.toLocaleString('fullwide', {useGrouping:false})
            })
        }

        // add to the final output
        const coinFilp = await randomNumber(0, 0, 1)

        if(waitings > 0){
            entry.tasks = []
            entry.final_ranking = []
            entry.status = statusOptions[0]
            waitings -= 1
        } 
        else if(pendings > 0){
            entry.tasks = entry.tasks.slice(0, await randomNumber(0, 1, 2))
            entry.final_ranking = []
            entry.status = statusOptions[1]
            pendings -= 1
        }
        else{
            entry.status = statusOptions[2]
            completes -= 1
        }

        allFakeData.push(entry)
    }

    const finalAllFakeData = {}
    statusOptions.forEach(function(element){
        finalAllFakeData[element] = allFakeData.filter(obj => obj.status === element)
    })

    const fileOutput = {
        "metadata": {
            "function": genTestData.name,
            "input": inputSettings,
            "filepath": filepath,
            "created": currectTime
        },
        "output": finalAllFakeData,
        "testUsers": userTable,
    }

    fs.writeFile(filepath, JSON.stringify(fileOutput, null, indent=4), 'utf8', function(err){
        if(err){
            logger.fatal(err)
        } else {
            logger.info(`Successfully created the reseacher's smart contract test data to ${filepath}`)
        }
    })

    return fileOutput
}

async function getTestData(){
    const filepath = `${__dirname}/${testDataFileName}`
    if(fs.existsSync(filepath)){
        return require(filepath)
    } else {
        return undefined
    }
}

module.exports = {
    genTestData,
    getTestData,
    getRSAKeys
}

'''
'''--- middlewares/smart_contract/test/nouns.json ---
{
    "sources": [
        "https://gist.github.com/peterdemin/920ec3eaaa0a9f3cafd3a855557f5e0c",
        "https://gist.github.com/pcgeek86/78f4cad29dd16961ceeeee654127a0db",
        "https://gist.github.com/atduskgreg/3cf8ef48cb0d29cf151bedad81553a54",
        "https://www.vocabulary.com/lists/189583#view=list"
    ],
    "data": [
        "audi",
        "bmw",
        "buick",
        "cadillac",
        "chevrolet",
        "chrysler",
        "dodge",
        "ferrari",
        "ford",
        "gm",
        "gem",
        "gmc",
        "honda",
        "hummer",
        "hyundai",
        "infiniti",
        "isuzu",
        "jaguar",
        "jeep",
        "kia",
        "lamborghini",
        "land rover",
        "lexus",
        "lincoln",
        "lotus",
        "mazda",
        "mercedes-benz",
        "mercury",
        "mitsubishi",
        "nissan",
        "oldsmobile",
        "peugeot",
        "pontiac",
        "porsche",
        "regal",
        "saab",
        "saturn",
        "subaru",
        "suzuki",
        "toyota",
        "volkswagen",
        "volvo",
        "tesla",
        "canidae",
        "felidae",
        "cat",
        "cattle",
        "dog",
        "donkey",
        "goat",
        "guinea pig",
        "horse",
        "pig",
        "rabbit",
        "sheep breeds",
        "water buffalo breeds",
        "chicken breeds",
        "duck breeds",
        "goose breeds",
        "pigeon breeds",
        "turkey breeds",
        "aardvark",
        "aardwolf",
        "african buffalo",
        "african elephant",
        "african leopard",
        "albatross",
        "alligator",
        "alpaca",
        "american buffalo (bison)",
        "american robin",
        "amphibian",
        "anaconda",
        "angelfish",
        "anglerfish",
        "ant",
        "anteater",
        "antelope",
        "antlion",
        "ape",
        "aphid",
        "arabian leopard",
        "arctic fox",
        "arctic wolf",
        "armadillo",
        "arrow crab",
        "asp",
        "ass (donkey)",
        "baboon",
        "badger",
        "bald eagle",
        "bandicoot",
        "barnacle",
        "barracuda",
        "basilisk",
        "bass",
        "bat",
        "beaked whale",
        "bear",
        "beaver",
        "bedbug",
        "bee",
        "beetle",
        "bird",
        "bison",
        "blackbird",
        "black panther",
        "black widow spider",
        "blue bird",
        "blue jay",
        "blue whale",
        "boa",
        "boar",
        "bobcat",
        "bobolink",
        "bonobo",
        "booby",
        "box jellyfish",
        "bovid",
        "buffalo, african",
        "buffalo, american (bison)",
        "bug",
        "butterfly",
        "buzzard",
        "camel",
        "canid",
        "cape buffalo",
        "capybara",
        "cardinal",
        "caribou",
        "carp",
        "catshark",
        "caterpillar",
        "catfish",
        "centipede",
        "cephalopod",
        "chameleon",
        "cheetah",
        "chickadee",
        "chicken",
        "chimpanzee",
        "chinchilla",
        "chipmunk",
        "clam",
        "clownfish",
        "cobra",
        "cockroach",
        "cod",
        "condor",
        "constrictor",
        "coral",
        "cougar",
        "cow",
        "coyote",
        "crab",
        "crane",
        "crane fly",
        "crawdad",
        "crayfish",
        "cricket",
        "crocodile",
        "crow",
        "cuckoo",
        "cicada",
        "damselfly",
        "deer",
        "dingo",
        "dinosaur",
        "dolphin",
        "dormouse",
        "dove",
        "dragonfly",
        "dragon",
        "duck",
        "dung beetle",
        "eagle",
        "earthworm",
        "earwig",
        "echidna",
        "eel",
        "egret",
        "elephant",
        "elephant seal",
        "elk",
        "emu",
        "english pointer",
        "ermine",
        "falcon",
        "ferret",
        "finch",
        "firefly",
        "fish",
        "flamingo",
        "flea",
        "fly",
        "flyingfish",
        "fowl",
        "fox",
        "frog",
        "fruit bat",
        "gamefowl",
        "galliform",
        "gazelle",
        "gecko",
        "gerbil",
        "giant panda",
        "giant squid",
        "gibbon",
        "gila monster",
        "giraffe",
        "goldfish",
        "goose",
        "gopher",
        "gorilla",
        "grasshopper",
        "great blue heron",
        "great white shark",
        "grizzly bear",
        "ground shark",
        "ground sloth",
        "grouse",
        "guan",
        "guanaco",
        "guineafowl",
        "gull",
        "guppy",
        "haddock",
        "halibut",
        "hammerhead shark",
        "hamster",
        "hare",
        "harrier",
        "hawk",
        "hedgehog",
        "hermit crab",
        "heron",
        "herring",
        "hippopotamus",
        "hookworm",
        "hornet",
        "hoverfly",
        "hummingbird",
        "humpback whale",
        "hyena",
        "iguana",
        "impala",
        "irukandji jellyfish",
        "jackal",
        "jay",
        "jellyfish",
        "junglefowl",
        "kangaroo",
        "kangaroo mouse",
        "kangaroo rat",
        "kingfisher",
        "kite",
        "kiwi",
        "koala",
        "koi",
        "komodo dragon",
        "krill",
        "ladybug",
        "lamprey",
        "landfowl",
        "land snail",
        "lark",
        "leech",
        "lemming",
        "lemur",
        "leopard",
        "leopon",
        "limpet",
        "lion",
        "lizard",
        "llama",
        "lobster",
        "locust",
        "loon",
        "louse",
        "lungfish",
        "lynx",
        "macaw",
        "mackerel",
        "magpie",
        "mammal",
        "manatee",
        "mandrill",
        "manta ray",
        "marlin",
        "marmoset",
        "marmot",
        "marsupial",
        "marten",
        "mastodon",
        "meadowlark",
        "meerkat",
        "mink",
        "minnow",
        "mite",
        "mockingbird",
        "mole",
        "mollusk",
        "mongoose",
        "monitor lizard",
        "monkey",
        "moose",
        "mosquito",
        "moth",
        "mountain goat",
        "mouse",
        "mule",
        "muskox",
        "narwhal",
        "newt",
        "new world quail",
        "nightingale",
        "ocelot",
        "octopus",
        "old world quail",
        "opossum",
        "orangutan",
        "orca",
        "ostrich",
        "otter",
        "owl",
        "ox",
        "panda",
        "panther",
        "panthera hybrid",
        "parakeet",
        "parrot",
        "parrotfish",
        "partridge",
        "peacock",
        "peafowl",
        "pelican",
        "penguin",
        "perch",
        "peregrine falcon",
        "pheasant",
        "pigeon",
        "pike",
        "pilot whale",
        "pinniped",
        "piranha",
        "planarian",
        "platypus",
        "polar bear",
        "pony",
        "porcupine",
        "porpoise",
        "possum",
        "prairie dog",
        "prawn",
        "praying mantis",
        "primate",
        "ptarmigan",
        "puffin",
        "puma",
        "python",
        "quail",
        "quelea",
        "quokka",
        "raccoon",
        "rainbow trout",
        "rat",
        "rattlesnake",
        "raven",
        "ray (batoidea)",
        "ray (rajiformes)",
        "red panda",
        "reindeer",
        "reptile",
        "rhinoceros",
        "right whale",
        "roadrunner",
        "rodent",
        "rook",
        "rooster",
        "roundworm",
        "saber-toothed cat",
        "sailfish",
        "salamander",
        "salmon",
        "sawfish",
        "scale insect",
        "scallop",
        "scorpion",
        "seahorse",
        "sea lion",
        "sea slug",
        "sea snail",
        "shark",
        "sheep",
        "shrew",
        "shrimp",
        "silkworm",
        "silverfish",
        "skink",
        "skunk",
        "sloth",
        "slug",
        "smelt",
        "snail",
        "snake",
        "snipe",
        "snow leopard",
        "sockeye salmon",
        "sole",
        "sparrow",
        "sperm whale",
        "spider",
        "spider monkey",
        "spoonbill",
        "squid",
        "squirrel",
        "starfish",
        "star-nosed mole",
        "steelhead trout",
        "stingray",
        "stoat",
        "stork",
        "sturgeon",
        "sugar glider",
        "swallow",
        "swan",
        "swift",
        "swordfish",
        "swordtail",
        "tahr",
        "takin",
        "tapir",
        "tarantula",
        "tarsier",
        "tasmanian devil",
        "termite",
        "tern",
        "thrush",
        "tick",
        "tiger",
        "tiger shark",
        "tiglon",
        "toad",
        "tortoise",
        "toucan",
        "trapdoor spider",
        "tree frog",
        "trout",
        "tuna",
        "turkey",
        "turtle",
        "tyrannosaurus",
        "urial",
        "vampire bat",
        "vampire squid",
        "vicuna",
        "viper",
        "vole",
        "vulture",
        "wallaby",
        "walrus",
        "wasp",
        "warbler",
        "water boa",
        "water buffalo",
        "weasel",
        "whale",
        "whippet",
        "whitefish",
        "whooping crane",
        "wildcat",
        "wildebeest",
        "wildfowl",
        "wolf",
        "wolverine",
        "wombat",
        "woodpecker",
        "worm",
        "wren",
        "xerinae",
        "x-ray fish",
        "yak",
        "yellow perch",
        "zebra",
        "zebra finch",
        "bali cattle",
        "bactrian camel",
        "canary",
        "dromedary camel",
        "duck",
        "goat",
        "goose",
        "guineafowl",
        "hedgehog",
        "pig",
        "pigeon",
        "rabbit",
        "silkmoth",
        "silver fox",
        "turkey",
        "fancy mouse",
        "fancy rat",
        "lab rat",
        "gayal",
        "ringneck dove",
        "siamese fighting fish",
        "society finch",
        "diary",
        "bottle",
        "water",
        "packet",
        "chewing gum",
        "tissue",
        "glasses",
        "watch",
        "sweet",
        "photo",
        "camera",
        "stamp",
        "postcard",
        "dictionary",
        "coin",
        "brush",
        "credit card",
        "identity card",
        "key",
        "mobile phone",
        "phone card",
        "wallet",
        "button",
        "umbrella",
        "pen",
        "pencil",
        "lighter",
        "cigarette",
        "match",
        "lipstick",
        "purse",
        "case",
        "clip",
        "scissors",
        "rubber",
        "file",
        "banknote",
        "passport",
        "driving licence",
        "comb",
        "notebook",
        "laptop",
        "rubbish",
        "mirror",
        "painkiller",
        "sunscreen",
        "toothbrush",
        "headphone",
        "player",
        "battery",
        "light bulb",
        "bin",
        "newspaper",
        "magazine",
        "alarm clock",
        "abiyuch",
        "acerola",
        "acorn",
        "agave",
        "agents",
        "agutuk",
        "alfalfa",
        "amaranth",
        "animal",
        "apache",
        "apple",
        "apples",
        "applesauce",
        "apricot",
        "apricots",
        "arrowhead",
        "arrowroot",
        "artichokes",
        "artificial",
        "arugula",
        "ascidians",
        "asparagus",
        "avocados",
        "baby",
        "babyfood",
        "bacon",
        "bagel",
        "bagels",
        "baking",
        "balls",
        "balsam-pear",
        "bamboo",
        "bananas",
        "bar",
        "barbecue",
        "barley",
        "bars",
        "basil",
        "bean",
        "beans",
        "beef",
        "beerwurst",
        "beet",
        "beets",
        "berry",
        "besan",
        "beverage",
        "beverages",
        "biscuits",
        "bits",
        "bitter",
        "blackberries",
        "blackberry",
        "blackeyes",
        "blend",
        "blueberries",
        "blueberry",
        "bockwurst",
        "bologna",
        "borage",
        "bowl",
        "boysenberries",
        "bran",
        "brand",
        "bratwurst",
        "braunschweiger",
        "bread",
        "breadfruit",
        "breakfast",
        "breast",
        "broadbeans",
        "broccoli",
        "broth",
        "brotwurst",
        "brussels",
        "buckwheat",
        "buffalo",
        "bulgur",
        "buns",
        "burdock",
        "burgers",
        "burrito",
        "butter",
        "butterbur",
        "butters",
        "cabbage",
        "cake",
        "candied",
        "candies",
        "capers",
        "carambola",
        "carbonated",
        "cardoon",
        "carissa",
        "carne",
        "carob",
        "carob-flavor",
        "carrot",
        "carrots",
        "cassava",
        "catsup",
        "cattail",
        "cauliflower",
        "celeriac",
        "celery",
        "celtuce",
        "cereal",
        "cereals",
        "chard",
        "chayote",
        "cheese",
        "cheesecake",
        "cheesefurter",
        "cherimoya",
        "cherries",
        "chewing",
        "chickpea",
        "chickpeas",
        "chicory",
        "chilchen",
        "child",
        "chili",
        "chips",
        "chiton",
        "chives",
        "chocolate",
        "chocolate-flavor",
        "chocolate-flavored",
        "chokecherries",
        "chorizo",
        "chrysanthemum",
        "cilantro",
        "cinnamon",
        "citronella",
        "citrus",
        "clementines",
        "cloudberries",
        "cockles",
        "cocktail",
        "cocoa",
        "coffee",
        "coffeecake",
        "collards",
        "commercially",
        "concentrate",
        "cone",
        "cones",
        "confectionery",
        "containing",
        "cookie",
        "cookies",
        "coriander",
        "corn",
        "corned",
        "cornmeal",
        "cornsalad",
        "cornstarch",
        "cotija",
        "couscous",
        "cowpeas",
        "crabapples",
        "cracker",
        "crackers",
        "cranberries",
        "cranberry",
        "cranberry-apple",
        "cranberry-apricot",
        "cranberry-grape",
        "cranberry-orange",
        "cream",
        "creams",
        "creamy",
        "cress",
        "croissants",
        "croutons",
        "crumbs",
        "crust",
        "crustaceans",
        "cucumber",
        "currants",
        "custard-apple",
        "custards",
        "dairy",
        "dandelion",
        "danish",
        "dates",
        "dessert",
        "desserts",
        "diabetes",
        "dill",
        "dinner",
        "dip",
        "dishes",
        "dock",
        "dogs",
        "dough",
        "doughnuts",
        "dressing",
        "drink",
        "drippings",
        "drumstick",
        "dry",
        "dulce",
        "durian",
        "dutch",
        "ear",
        "edamame",
        "egg",
        "eggnog",
        "eggnog-flavor",
        "eggplant",
        "eggs",
        "elderberries",
        "endive",
        "energy",
        "entrees",
        "epazote",
        "eppaw",
        "extender",
        "extract",
        "falafel",
        "fast",
        "fat",
        "fava",
        "feijoa",
        "fennel",
        "fern",
        "ferns",
        "fiddlehead",
        "figs",
        "fillets",
        "fillings",
        "fireweed",
        "flakes",
        "flan",
        "flavored",
        "flour",
        "flours",
        "flower",
        "flowers",
        "fluid",
        "focaccia",
        "foie",
        "food",
        "foods",
        "formula",
        "formulated",
        "frankfurter",
        "franks",
        "frijoles",
        "from",
        "frostings",
        "frozen",
        "fruit",
        "fruit-flavored",
        "frybread",
        "frying",
        "fungi",
        "garbanzo",
        "garlic",
        "gelatin",
        "gelatins",
        "germ",
        "ginger",
        "gluten",
        "gooseberries",
        "gourd",
        "grain",
        "gram",
        "granola",
        "grape",
        "grapefruit",
        "grapes",
        "gras",
        "grass",
        "gravy",
        "green",
        "greens",
        "groats",
        "ground",
        "groundcherries",
        "guacamole",
        "guanabana",
        "guava",
        "guavas",
        "guinea",
        "gum",
        "gums",
        "ham",
        "hazelnut",
        "hazelnuts",
        "headcheese",
        "hearts",
        "hen",
        "hibiscus",
        "hips",
        "hominy",
        "honey",
        "horned",
        "horseradish",
        "household",
        "huckleberries",
        "hummus",
        "hush",
        "hyacinth",
        "hyacinth-beans",
        "hydrogenated",
        "hydrolyzed",
        "ice",
        "imitation",
        "incaparina",
        "industrial",
        "isolate",
        "jackfruit",
        "jams",
        "java-plum",
        "jellies",
        "jerusalem-artichokes",
        "jicama",
        "juice",
        "jujube",
        "jute",
        "kale",
        "kanpyo",
        "keikitos",
        "kielbasa",
        "kiwano",
        "kiwifruit",
        "knackwurst",
        "kohlrabi",
        "kumquats",
        "lamb",
        "lambs",
        "lambsquarters",
        "lard",
        "lasagna",
        "lean",
        "leavening",
        "leaves",
        "lebanon",
        "leche",
        "leeks",
        "legs",
        "lemon",
        "lemonade",
        "lemonade-flavor",
        "lemons",
        "lentils",
        "lettuce",
        "lima",
        "lime",
        "limeade",
        "limes",
        "link",
        "links",
        "litchis",
        "liver",
        "liverwurst",
        "loaf",
        "loganberries",
        "loin",
        "longans",
        "loquats",
        "lulo",
        "lunch",
        "luncheon",
        "lupins",
        "luxury",
        "macaroni",
        "made",
        "malabar",
        "malt",
        "malted",
        "mammy-apple",
        "mango",
        "mangos",
        "mangosteen",
        "maraschino",
        "margarine",
        "margarine-like",
        "marmalade",
        "mashu",
        "mayonnaise",
        "meal",
        "meat",
        "meatballs",
        "meatloaf",
        "melon",
        "melons",
        "milk",
        "millet",
        "miso",
        "mixed",
        "mocha",
        "molasses",
        "mollusks",
        "mortadella",
        "mothbeans",
        "mother's",
        "mountain",
        "muffin",
        "muffins",
        "mulberries",
        "mung",
        "mungo",
        "mush",
        "mushrooms",
        "mustard",
        "mutton",
        "nance",
        "naranjilla",
        "natto",
        "navajo",
        "nectar",
        "nectarines",
        "nettles",
        "new",
        "noodles",
        "nopales",
        "novelties",
        "nutritional",
        "nuts",
        "oat",
        "oats",
        "oheloberries",
        "oil",
        "oil-butter",
        "okara",
        "okra",
        "olive",
        "olives",
        "onion",
        "onions",
        "oopah",
        "orange",
        "orange-flavor",
        "orange-grapefruit",
        "oranges",
        "oven-roasted",
        "palm",
        "pancakes",
        "papad",
        "papaya",
        "papayas",
        "parfait",
        "parmesan",
        "parsley",
        "parsnips",
        "passion-fruit",
        "pasta",
        "pastrami",
        "pastries",
        "pastry",
        "pate",
        "patties",
        "patty",
        "pea",
        "peach",
        "peaches",
        "peanut",
        "peanuts",
        "pear",
        "pears",
        "peas",
        "pectin",
        "peel",
        "people",
        "pepeao",
        "pepper",
        "peppered",
        "peppermint",
        "pepperoni",
        "peppers",
        "persimmons",
        "phyllo",
        "pickle",
        "pickles",
        "picnic",
        "pie",
        "pigeonpeas",
        "piki",
        "pimento",
        "pimiento",
        "pineapple",
        "pinon",
        "pitanga",
        "pizza",
        "plain",
        "plantains",
        "plums",
        "pockets",
        "pokeberry",
        "pomegranate",
        "pomegranates",
        "popcorn",
        "pork",
        "potato",
        "potatoes",
        "potsticker",
        "poultry",
        "powder",
        "prairie",
        "prepared",
        "preserves",
        "pretzels",
        "prickly",
        "product",
        "products",
        "protein",
        "prune",
        "prunes",
        "pudding",
        "puddings",
        "puff",
        "puffs",
        "pulled",
        "pulp",
        "pummelo",
        "pumpkin",
        "punch",
        "punch-flavor",
        "puppies",
        "puree",
        "purslane",
        "quarters",
        "queso",
        "quinces",
        "quinoa",
        "raab",
        "radicchio",
        "radish",
        "radishes",
        "raisins",
        "rambutan",
        "raspberries",
        "ravioli",
        "red",
        "reddi",
        "reduced",
        "refried",
        "relish",
        "rennin",
        "replacement",
        "restaurant",
        "rhubarb",
        "rice",
        "rings",
        "roast",
        "rojos",
        "roll",
        "rolls",
        "root",
        "roots",
        "rose",
        "rose-apples",
        "roselle",
        "rosemary",
        "rowal",
        "ruffed",
        "rutabagas",
        "rye",
        "salad",
        "salami",
        "salmonberries",
        "salsify",
        "salt",
        "sandwich",
        "sapodilla",
        "sapote",
        "sauce",
        "sauerkraut",
        "sausage",
        "school",
        "scrapple",
        "sea",
        "seal",
        "seasoning",
        "seaweed",
        "seeds",
        "semolina",
        "sesbania",
        "shake",
        "shakes",
        "shallots",
        "shell",
        "shells",
        "sherbet",
        "shoots",
        "shortening",
        "shoyu",
        "side",
        "smoked",
        "smoothie",
        "snack",
        "snacks",
        "sorghum",
        "souffle",
        "soup",
        "sourdock",
        "soursop",
        "soy",
        "soybean",
        "soybeans",
        "soyburgers",
        "soymilk",
        "spaghetti",
        "spearmint",
        "spelt",
        "spices",
        "spinach",
        "split",
        "spread",
        "sprouts",
        "squab",
        "squash",
        "steelhead",
        "stew",
        "stew/soup",
        "sticks",
        "stinging",
        "strawberries",
        "strawberry-flavor",
        "strudel",
        "stuffing",
        "substitute",
        "substitutes",
        "succotash",
        "sugar",
        "sugar-apples",
        "sugars",
        "supplement",
        "swamp",
        "sweetener",
        "sweeteners",
        "swisswurst",
        "syrup",
        "syrups",
        "taco",
        "tamales",
        "tamari",
        "tamarind",
        "tamarinds",
        "tangerine",
        "tangerines",
        "tannier",
        "tapioca",
        "taquitos",
        "taro",
        "tart",
        "tea",
        "teff",
        "tempeh",
        "tenders",
        "tennis",
        "thigh",
        "thuringer",
        "thyme",
        "toast",
        "toaster",
        "toddler",
        "tofu",
        "tomatillos",
        "tomato",
        "tomatoes",
        "topping",
        "toppings",
        "tortellini",
        "tortilla",
        "tortillas",
        "tostada",
        "triticale",
        "tuber",
        "tunicate",
        "tunughnak",
        "turnip",
        "turnips",
        "turnover",
        "twists",
        "vanilla",
        "veal",
        "vegetable",
        "vegetable-oil",
        "vegetables",
        "vegetarian",
        "veggie",
        "venison",
        "vermicelli",
        "vinegar",
        "vinespinach",
        "vital",
        "volteados",
        "waffle",
        "waffles",
        "wasabi",
        "waterchestnuts",
        "watercress",
        "watermelon",
        "waxgourd",
        "weed",
        "wheat",
        "whey",
        "whiskey",
        "whole",
        "wild",
        "willow",
        "wine",
        "winged",
        "wocas",
        "wonton",
        "wrappers",
        "yachtwurst",
        "yam",
        "yambean",
        "yardlong",
        "yautia",
        "yeast",
        "yellow",
        "yogurt",
        "yogurts",
        "zealand",
        "zwieback"
    ]
}

'''
'''--- middlewares/smart_contract/test/testNearApi.js ---
const smartContract = require("../nearApi")
const config = require("../../../config/config.json").smartContract

const scAccount = config.scAccount
const mainAccount = config.mainAccount

async function printDB(){
    const data = await smartContract.getDB(scAccount)
    console.log(JSON.stringify(data, null, indent=4))
    return
}

async function fundAdd(){
    const before = await smartContract.getAvailableFunds(scAccount)
    console.log("Balance Before:", before)

    const output = await smartContract.addFunds(mainAccount, scAccount, 1)
    console.log(`\nOUTPUT: ${JSON.stringify(output,null,indent=4)} \n`)

    const after = await smartContract.getAvailableFunds(scAccount)
    console.log("Balance After:", after)

    return
}

async function jobsAdd(){
    const currentJobs = [
        {
            id: "4accfce4-c4f8-4f33-aab3-5945bea92cd0",
            label_keys: ["corn-plants", "dirt", "rocks"]
        },
        {
            id: "7c9fb425-afb5-4021-b5e1-dea287bb750c",
            label_keys: ["corn-plants", "dirt", "rocks"]
        }
    ]

    console.log("BEFORE:")
    await printDB()
    
    const output = await smartContract.addJobs(scAccount, currentJobs)
    console.log(`\nOUTPUT: ${JSON.stringify(output)} \n`)
    
    console.log("AFTER:")
    await printDB()

    return
}

async function taskRequest() {
    const output = await smartContract.requestTask(scAccount, mainAccount)
    console.log(`NOTE: If the call worked, SAVE the RSA key pairs (public & private)!`)
    console.log(JSON.stringify(output, null, indent=4))
}

///////////////////////////////////
////// MAIN FUNCTION CALL(S) //////
///////////////////////////////////

///// RANDOMS:
// smartContract.recallTask(scAccount, "4615dfd3-98c6-40b3-971f-073449f05faa", mainAccount).then()

printDB().then()

// fundAdd().then()
// jobsAdd().then()
// taskRequest().then()

'''
'''--- models/apiImagePayload.js ---
const imgEndpoint = {
    type: "object",
    properties: {
        id: { type: "string" },
        username: { type: "string" },
        signature: { type: "string" }
    },
    required: ["username", "signature", "id"],
    additionalProperties: false
}

module.exports = {
    imgEndpoint
}

'''
'''--- models/imgMetaData.js ---
const imgMetaData = {
    type: "object",
    properties: {
        id: { type: "string" },
        filepath: { type: "string" },
        status: { enum: ["waiting", "pending", "completed"] },
        cost: { type: "number" },
        uploaded: { type: "number" },
        completed: { type: "number" },
        timeUnits: { enum: ["ms", "s"] },
        finalLabels: { type: "object" },
        scDataRaw: { type: "object" },
        usedSignatures: { type: "array" }
    },
    required: ["filepath", "status", "cost", "uploaded", "completed", "timeUnits", "finalLabels", "scDataRaw", "usedSignatures"],
    additionalProperties: false
}

module.exports = {
    imgMetaData
}

'''
'''--- models/scAddJob.js ---
const scAddJob = {
    type: "array",
    items: {
        type: "object",
        properties: {
            id: { type: "string" },
            label_keys: {
                type: "array",
                items: { type: "string" }
            },
            additionalProperties: false
        }
    }
}

module.exports = {
    scAddJob
}

'''
'''--- models/tests/imgMetaData.test.js ---
const Ajv = require("ajv")

const config = require("../../config/config.json")

const ajv = new Ajv()

test(`Test if object that is a valid imgMetaData scheme passes ajv validation`, () => {
  const imgMetaData = require("../imgMetaData")

  const schema = imgMetaData.imgMetaData

  const testData = {
    filepath: "/opt/img.json",
    status: "pending",
    cost: 0.02,
    uploaded: 1666618833000,
    completed: 1666618873000,
    timeUnits: "ms",
    finalLabels: {},
    scDataRaw: {},
    usedSignatures: []
  }

  const validate = ajv.compile(schema)

  const valid = validate(testData)

  expect(valid).toBe(true)
})

test(`Test if object that is NOT a valid imgMetaData scheme fails ajv validation`, () => {
  const imgMetaData = require("../imgMetaData")

  const schema = imgMetaData.imgMetaData

  const testData = {
    filepath: "/opt/img.json",
    status: "pending",
    value: "2.1",
    timeLogs: {
      uploaded: 1666618833000,
      completed: 1666618833000
    },
    labelers: [
      {
        username: "example.near",
        publicKey: "jsds8d8sdsjd8sshds8ds9dus8d",
        passedChecks: [ "9sd8sad", "dsdsd8sd" ],
        rating: 1,
        payment: 1.2
      }
    ]
  }

  const validate = ajv.compile(schema)

  const valid = validate(testData)

  expect(valid).toBe(false)
})
  
'''
'''--- package.json ---
{
  "name": "ln-researcher",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "jest",
    "logs": "cat $(node -e \"console.log(require('./config/config.json').logfile)\") | pino-pretty -t -t 'UTC:mm-dd-yyyy HH:MM:ss.l o'",
    "addDB": "node -e \"require('./middlewares/db_manager/tools').addAllToDB().then(result=>console.log('Added/Built Image DB:', result))\"",
    "cleanDB": "node -e \"require('./middlewares/db_manager/tools').cleanDB().then(result=>console.log('Cleaned Image DB:', result))\"",
    "ls": "node -e \"console.table(Object.keys(require('./package.json').scripts))\"",
    "scGenTestData": "node -e \"require('./middlewares/smart_contract/test/index.js').genTestData([5,5],[3584,2240],[0.03, 0.06],[1, 4],[2, 5]).then(result=>console.log('Created smart contract test data/json at:', result.metadata.filepath))\"",
    "devRunAPI": "export PORT=3000 ; nodemon ./app.js",
    "devRunManager": "node ./manager.js",
    "printLocalDB": "node -e \"require('./middlewares/cli/backupDB').dbPrintAll()\"",
    "printContractDB": "node -e \"require('./middlewares/smart_contract/nearApi').getDB(require('./config/config').smartContract.scAccount).then(result=>console.log(JSON.stringify(result,null,indent=4)))\""
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/MehmetMHY/near-label-data-hosting.git"
  },
  "author": "Mehmet Yilmaz & Dylan Eck",
  "license": "Apache-2.0",
  "bugs": {
    "url": "https://github.com/MehmetMHY/near-label-data-hosting/issues"
  },
  "homepage": "https://github.com/MehmetMHY/near-label-data-hosting#readme",
  "dependencies": {
    "ajv": "^8.11.0",
    "axios": "^1.1.3",
    "express": "^4.18.1",
    "jest": "^29.2.1",
    "moment": "^2.29.4",
    "near-api-js": "^1.1.0",
    "nodemon": "^2.0.20",
    "pg": "^8.8.0",
    "pino": "^8.7.0",
    "uuid": "^9.0.0"
  }
}

'''
'''--- routes/health.js ---
const express = require('express')
const router = express.Router()

const controllers = require("../controllers/health")

router.get("/", controllers.healthCheckup)

module.exports = router

'''
'''--- routes/image.js ---
const express = require('express')
const router = express.Router()

const controllers = require("../controllers/image")

router.post("/", controllers.getImage)

module.exports = router

'''
'''--- run.sh ---
export PORT=3000
nodemon ./app.js &
node manager.js &

'''
'''--- utils/logger.js ---
const config = require("../config/config.json")
const pino = require('pino')

// https://betterstack.com/community/guides/logging/how-to-install-setup-and-use-pino-to-log-node-js-applications/
// https://css-tricks.com/how-to-implement-logging-in-a-node-js-application-with-pino-logger/
module.exports = pino(
    {},
    pino.destination(config.logfile)
)

'''
'''--- utils/request.js ---
const axios = require('axios');
const logger = require("../utils/logger")

const config = require("../config/config.json").requesterConfig

function sleep(ms) {
    return new Promise((resolve) => { setTimeout(resolve, ms) });
}

async function get(url, headers={}) {
    let output = { "status": 0, "response": {} }

    const axiosConfig = {
        url: String(url),
        method: "get",
        timeout: config.timeout,
        headers: Object.assign({
            "Content-Type": "application/json"
            }, headers
        )
    }

    let attempt = 0
    while(true){
        if (attempt > config.retries) {
            logger.fatal(`Gave up on GET request to url ${url} with ${JSON.stringify(headers)} after ${config.retries} retries`)
            output["status"] = 1
            break
        }

        try {
            const response = await axios.request(axiosConfig)
            if (response.data) {
                output["response"] = response.data
            } else {
                output["response"] = response
            }
            break
        } catch(err) {
            logger.error(`Failed to make GET request to url ${url} with header ${JSON.stringify(headers)} due to the following error: ${err}`)
            await sleep(config.retryDelay)
        }
        
        attempt += 1
    }

    return output
}

module.exports = {
    get
}

'''
'''--- utils/tests/logger.test.js ---
const { v4: uuidv4 } = require('uuid');
const path = require('path');
const fs = require("fs")

const config = require("../../config/config.json")

const filename = path.basename(__filename)

test(`Test if logs are written to ${config.logfile}`, () => {
    if( !config.pausedTestFiles.includes(filename) ){
        const firstFileExists = fs.existsSync(config.logfile)

        if(firstFileExists){
            console.log(`Log file ${config.logfile} should not exist for this unit test`)
        }

        expect(firstFileExists).toBe(false)

        const logger = require("../logger")

        const uniqID = String(uuidv4())

        try {
            logger.debug(`Logger DEBUG Severity Test - Test ID ${uniqID}`)
            logger.info(`Logger INFO Severity Test - Test ID ${uniqID}`)
            logger.warn(`Logger WARN Severity Test - Test ID ${uniqID}`)
            logger.error(`Logger ERROR Severity Test - Test ID ${uniqID}`)
            logger.fatal(`Logger FATAL Severity Test - Test ID ${uniqID}`)
        } catch(err) {
            throw `Error occurred well trying to log : ${err}`
        }

        const secondFileExists = fs.existsSync(config.logfile)

        expect(secondFileExists).toBe(true)
    } else {
        console.log("Skipping this test because this test is on PAUSE at the moment. You can change this by modifying this project's config file(s).")
    }
})

'''
'''--- utils/tests/util.test.js ---
const util = require("../util")

const config = require("../../config/config.json")

test(`Test if schemaValidate() works correctly for valid, invalid, & error-based params`, () => {
    const schema = {
        type: "object",
        properties: {
            a: { type: "object" },
            b: { type: "string" },
            c: { type: "number" }
        },
        required: ["a", "b", "c"],
        additionalProperties: false
    }

    // test if function returns true for a valid json
    util.schemaValidate(schema, {
        a: {},
        b: "test",
        c: 0
    }).then(result => expect(result).toBe(true))

    // test if function returns false for a valid json
    util.schemaValidate(schema, { 
        x: -1,
        y: -1,
        z: -1
    }).then(result => expect(result).toBe(false))
    
    // test if function returns false for an invalid input
    //  - NOTE: check logs to see if function logged
    util.schemaValidate(1, 2).then(result => expect(result).toBe(false))
})
'''
'''--- utils/util.js ---
const Ajv = require("ajv")
const logger = require("./logger")
const request = require("./request")

const config = require("../config/config.json")
const ajv = new Ajv()

async function schemaValidate(schema, data){
    try {
        const validate = ajv.compile(schema)
        const valid = validate(data)
        return valid
    } catch (e) {
        logger.error(`Failed to validate scheme ${JSON.stringify(schema)} for data ${data} : ${e}`)
        return false
    }
}

async function cleanPrint(data){
    console.log(JSON.stringify(data, null, indent=4))
}

function sleep(ms) {
    return new Promise((resolve) => { setTimeout(resolve, ms) });
}

async function nearCurrentPriceUSD(){
    try{
        const url = config.currentNearPriceEndpoint
        const response = await request.get(url)

        if(response.status === 0){
            return response.response.near.usd
        } else {
            logger.error(`Failed to get current price of NEAR from ${config.currentNearPriceEndpoint} due to request failing: ${JSON.stringify(response)}`)
        }

    }catch(e){
        logger.error(`Failed to get the current price of NEAR from ${config.currentNearPriceEndpoint} due to the following error: ${e}`)
    }

    return undefined
}

module.exports = {
    schemaValidate,
    cleanPrint,
    sleep,
    nearCurrentPriceUSD
}

'''