*GitHub Repository "MoonBaseDAO/clone_clickup"*

'''--- .eslintrc.json ---
{
  "extends": "next/core-web-vitals"
}

'''
'''--- README.md ---

# Near NextJS Boilerplate

This is a Next JS app with Near Api bootstrapped!

# Getting Started
In order to run the development server run:  

    yarn dev
    
This will start the front-end at port ***localhost:3000***

## Building and Deploying the contract
The contract is located in under the ***contract/assembly*** folders, after editing the contract you can run

    yarn build-contract
    
in order to build the contract and get the ***.wasm*** file , if you want to build and deploy the contract at the same time, you can run 

    yarn deploy-contract
    
This will create a test account and deploy the contract into it.

after the contract is deployed, it is necessary to run the following command in the terminal in order to be able to run the contract

***#This step is not needed if you are going to use the contract with the front-end***

    export CONTRACT=ACCOUNT_ID
where the **ACCOUNT_ID** will be returned after the contract deployment

## Running the contract

**Running contract in the terminal**
If you want to run the contract in the terminal you can either:

 1. Run the `yarn run-contract` which will run a bash file that will run the example methods available on the contract.
 Before running this command, **{NEAR_ACCOUNT}** placeholders must be replaced with correct Near accounts.
 
 3. You can call the contract manually in the terminal , examples are show below in the functions section.
 
**Running contract in the front-end**
Check the front-end section for instructions

# Functions
## helloWorld 

 - Does not take any parameters.
 - A view method that returns a Hello World string to the user
 

**Example call:**
`near view $CONTRACT helloWorld`

## helloYou

  - Does not take any parameters.
 - A view method that returns a Hello **{username}**  where username is the account that called the method

**Example call:**
`near call $CONTRACT helloYou --accountId {NEAR_ACCOUNT}`

# Front-end
The front-end for this project was build using NextJS as a framework.

In order to run the front-end locally you have to run the command:

    yarn dev

 

## Linking front-end to the contract
The front-end is linked to the 	***dev-1643583533233-86904103016460*** contract by default ,  if you want to connect your own contract with the front-end, you need to replace the **CONTRACT_ID** variable in the ***near/near-setup.js*** file with your own contract id.

    export  const  CONTRACT_ID = "CONTRACT_IDs";

'''
'''--- as-pect.config.js ---
module.exports = require("near-sdk-as/imports");
module.exports.include.push("**/*.unit.spec.ts");

'''
'''--- asconfig.json ---
{
  "workspaces": [
    "contract"
  ]
}

'''
'''--- contract/as_types.d.ts ---
/// <reference types="near-sdk-as/assembly/as_types" />
'''
'''--- contract/asconfig.json ---
{
  "extends": "near-sdk-as/asconfig.json"
}

'''
'''--- contract/assembly/index.ts ---
import { Context } from "near-sdk-as";

//Returns static string
export function helloWorld(): string {
  return `Hello World`;
}

//Returns hello with username
export function helloYou() : string {
  return `Hello ${Context.sender}`;
} 

'''
'''--- contract/scripts/run.sh ---
echo ---------------------------------------------------------
echo "Example 1 : View Contract"
echo ---------------------------------------------------------

near view $CONTRACT helloWorld 

echo ---------------------------------------------------------
echo "Example 2 : Call Conract"
echo ---------------------------------------------------------
echo

near call $CONTRACT helloYou --accountId {NEAR_ACCOUNT}

'''
'''--- contract/tsconfig.json ---
{
  "extends": "../node_modules/assemblyscript/std/assembly.json",
  "include": ["./**/*.ts"]
}

'''
'''--- contract/utils.ts ---
import { u128, Context, ContractPromise } from "near-sdk-as";

/**
 * == TYPES ====================================================================
 */

/**
 * Account IDs in NEAR are just strings.
 */
export type AccountId = string;

/**
 * Gas is u64
 */
export type Gas = u64;

/**
 * Amounts, Balances, and Money in NEAR is are u128.
 */

export type Amount = u128;

export type Balance = Amount;

export type Money = Amount;

/**
 * Timestamp in NEAR is a number.
 */
export type Timestamp = u64;

/**
 * == CONSTANTS ================================================================
 *
 * ONE_NEAR = unit of NEAR token in yocto Ⓝ (1e24)
 * XCC_GAS = gas for cross-contract calls, ~5 Tgas (teragas = 1e12) per "hop"
 * MIN_ACCOUNT_BALANCE = 3 NEAR min to keep account alive via storage staking
 *
 * TODO: revist MIN_ACCOUNT_BALANCE after some real data is included b/c this
 *  could end up being much higher
 */

export const ONE_NEAR = u128.from("1000000000000000000000000");
export const XCC_GAS: Gas = 20_000_000_000_000;
export const MIN_ACCOUNT_BALANCE: u128 = u128.mul(ONE_NEAR, u128.from(3));

/**
 * == FUNCTIONS ================================================================
 */

/**
 * @function asNEAR
 * @param amount {u128} - Yocto Ⓝ token quantity as an unsigned 128-bit integer
 * @returns {string}    - Amount in NEAR, as a string
 *
 * @example
 *
 *    asNEAR(7000000000000000000000000)
 *    // => '7'
 */
export function asNEAR(amount: u128): string {
  return u128.div(amount, ONE_NEAR).toString();
}

/**
 * @function toYocto
 * @param amount {number} - Integer to convert
 * @returns {u128}        - Amount in yocto Ⓝ as an unsigned 128-bit integer
 *
 * @example
 *
 *    toYocto(7)
 *    // => 7000000000000000000000000
 */
export function toYocto(amount: number): u128 {
  return u128.mul(ONE_NEAR, u128.from(amount))
}

/**
 * Function to assert that the contract has called itself
 */
export function assert_self(): void {
  const caller = Context.predecessor
  const self = Context.contractName
  assert(caller == self, "Only this contract may call itself");
}

export function assert_single_promise_success(): void {
  const x = ContractPromise.getResults()
  assert(x.length == 1, "Expected exactly one promise result")
  assert(x[0].succeeded, "Expected PromiseStatus to be successful")
}

'''
'''--- near/near-setup.js ---
import {
  keyStores,
  Near,
  WalletConnection,
  utils as nearUtils,
} from "near-api-js";

export const CONTRACT_ID = "dev-1643583533233-86904103016460";

export const initNear = () => {
  //Testnet config
  const near = new Near({
    networkId: "testnet",
      keyStore: new keyStores.BrowserLocalStorageKeyStore(),
      nodeUrl: "https://rpc.testnet.near.org",
    walletUrl: "https://wallet.testnet.near.org",
  });

  //Wallet init
  wallet = new WalletConnection(near, "Near Dapp");
};

//Loaded after the being server to the client
//Due to keystore needing access to the window object
export let wallet = null;
export let contract = null;
export const utils = nearUtils;

//Methods

export const signIn = () => {
  wallet.requestSignIn(CONTRACT_ID);
};

export const signOut = () => {
  wallet.signOut();
};

//Function for view methods
export const viewFunction = async (functionName, args = {}) => {
  const result = await wallet
    .account()
    .viewFunction(CONTRACT_ID, functionName, args);

  return result;
};

//Function for call method
export const callFunction = async (functionName, args = {}, deposit = "0") => {
  const result = await wallet.account().functionCall({
    contractId: CONTRACT_ID,
    methodName: functionName,
    args: args,
    attachedDeposit: utils.format.parseNearAmount(deposit),
  });
  return result;
}
'''
'''--- next.config.js ---
module.exports = {
  reactStrictMode: true,
}

'''
'''--- package.json ---
{
  "name": "near-nextjs-template",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "build-contract": "asb --target debug",
    "deploy-contract": "yarn build-contract && near dev-deploy ./build/debug/contract.wasm",
    "clean-contract" : "rm -rf ./build && rm -rf ./neardev",
    "run-contract"  : "./contract/scripts/run.sh",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "near-api-js": "^0.44.2",
    "next": ">=12.0.9",
    "react": "^18",
    "react-dom": "^18",
    "react-spinners": "^0.11.0"
  },
  "devDependencies": {
    "near-sdk-as": "^3.2.3",
    "eslint": "8.7.0",
    "eslint-config-next": "12.0.8"
  }
}

'''
'''--- pages/_app.js ---
import "../styles/globals.css";
import "../styles/style.css";

//React imports
import { useEffect, useState } from "react";
import ClipLoader from "react-spinners/ClipLoader";

//Near imports
import { initNear } from "../near/near-setup";

function MyApp({ Component, pageProps }) {
  const [isLoading, setIsLoading] = useState(true);

  //Loading the NEAR API and setting up the wallet and contract
  //At the start of the app
  useEffect(() => {
    initNear();
    setIsLoading(false);
  }, []);

  return isLoading ? (
    <div className="center-div">
      <ClipLoader color={"#000"} loading={true} size={50} />
    </div>
  ) : (
    <Component {...pageProps} />
  );
}

export default MyApp;

'''
'''--- pages/api/hello.js ---
// Next.js API route support: https://nextjs.org/docs/api-routes/introduction

export default function handler(req, res) {
  res.status(200).json({ name: 'John Doe' })
}

'''
'''--- pages/index.js ---
import { useEffect, useState } from "react";
import Task, { STATUS_TYPES } from "../components/Task";

export default function Home() {
  const [tasks, setTasks] = useState([]);
  const [upcomingTasks, setUpcomingTasks] = useState([]);

  const handleTaskChanged = (taskId, checked) => {
    setTasks((tasks) =>
      tasks.map((task, idx) => (idx === taskId ? { ...task, checked } : task))
    );
  };

  useEffect(() => {
    setTasks([
      {
        label: "Dashboard Design Implementation",
        status: STATUS_TYPES.approved,
        checked: true,
      },
      {
        label: "Create a userflow",
        status: STATUS_TYPES.progress,
        checked: true,
      },
      {
        label: "Application Implementation",
        status: STATUS_TYPES.review,
        checked: true,
      },
      {
        label: "Dashboard Design Implementation",
        status: STATUS_TYPES.approved,
        checked: true,
      },
      {
        label: "Dashboard Design Implementation",
        status: STATUS_TYPES.approved,
        checked: true,
      },
      {
        label: "Dashboard Design Implementation",
        status: STATUS_TYPES.approved,
        checked: true,
      },
    ]);

    setUpcomingTasks([
      {
        label: "Dashboard Design Implementation",
        status: STATUS_TYPES.approved,
        checked: true,
      },
      {
        label: "Create a userflow",
        status: STATUS_TYPES.progress,
        checked: true,
      },
      {
        label: "Application Implementation",
        status: STATUS_TYPES.review,
        checked: true,
      },
      {
        label: "Dashboard Design Implementation",
        status: STATUS_TYPES.approved,
        checked: true,
      },
      {
        label: "Dashboard Design Implementation",
        status: STATUS_TYPES.approved,
        checked: true,
      },
      {
        label: "Dashboard Design Implementation",
        status: STATUS_TYPES.approved,
        checked: true,
      },
    ]);
  }, [setTasks, setUpcomingTasks]);

  return (
    <div className="task-manager">
      <div className="left-bar">
        <div className="upper-part">
          <div className="actions">
            <div className="circle"></div>
            <div className="circle-2"></div>
          </div>
        </div>
        <div className="left-content">
          <ul className="action-list">
            <li className="item">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="24"
                height="24"
                fill="none"
                stroke="currentColor"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth="2"
                className="feather feather-inbox"
                viewBox="0 0 24 24"
              >
                <path d="M22 12h-6l-2 3h-4l-2-3H2" />
                <path d="M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z" />
              </svg>
              <span>Inbox</span>
            </li>
            <li className="item">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                strokeWidth="2"
                strokeLinecap="round"
                strokeLinejoin="round"
                className="feather feather-star"
              >
                <polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2" />
              </svg>
              <span> Today</span>
            </li>
            <li className="item">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="24"
                height="24"
                fill="none"
                stroke="currentColor"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth="2"
                className="feather feather-calendar"
                viewBox="0 0 24 24"
              >
                <rect width="18" height="18" x="3" y="4" rx="2" ry="2" />
                <path d="M16 2v4M8 2v4m-5 4h18" />
              </svg>
              <span>Upcoming</span>
            </li>
            <li className="item">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                strokeWidth="2"
                strokeLinecap="round"
                strokeLinejoin="round"
                className="feather feather-hash"
              >
                <line x1="4" y1="9" x2="20" y2="9" />
                <line x1="4" y1="15" x2="20" y2="15" />
                <line x1="10" y1="3" x2="8" y2="21" />
                <line x1="16" y1="3" x2="14" y2="21" />
              </svg>
              <span>Important</span>
            </li>
            <li className="item">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                strokeWidth="2"
                strokeLinecap="round"
                strokeLinejoin="round"
                className="feather feather-users"
              >
                <path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2" />
                <circle cx="9" cy="7" r="4" />
                <path d="M23 21v-2a4 4 0 0 0-3-3.87" />
                <path d="M16 3.13a4 4 0 0 1 0 7.75" />
              </svg>
              <span>Meetings</span>
            </li>
            <li className="item">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="24"
                height="24"
                fill="none"
                stroke="currentColor"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth="2"
                className="feather feather-trash"
                viewBox="0 0 24 24"
              >
                <path d="M3 6h18m-2 0v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2" />
              </svg>
              <span>Trash</span>
            </li>
          </ul>
          <ul className="category-list">
            <li className="item">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                strokeWidth="2"
                strokeLinecap="round"
                strokeLinejoin="round"
                className="feather feather-users"
              >
                <path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2" />
                <circle cx="9" cy="7" r="4" />
                <path d="M23 21v-2a4 4 0 0 0-3-3.87" />
                <path d="M16 3.13a4 4 0 0 1 0 7.75" />
              </svg>
              <span>Family</span>
            </li>
            <li className="item">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="24"
                height="24"
                fill="none"
                stroke="currentColor"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth="2"
                className="feather feather-sun"
                viewBox="0 0 24 24"
              >
                <circle cx="12" cy="12" r="5" />
                <path d="M12 1v2m0 18v2M4.22 4.22l1.42 1.42m12.72 12.72l1.42 1.42M1 12h2m18 0h2M4.22 19.78l1.42-1.42M18.36 5.64l1.42-1.42" />
              </svg>
              <span>Vacation</span>
            </li>
            <li className="item">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                strokeWidth="2"
                strokeLinecap="round"
                strokeLinejoin="round"
                className="feather feather-trending-up"
              >
                <polyline points="23 6 13.5 15.5 8.5 10.5 1 18" />
                <polyline points="17 6 23 6 23 12" />
              </svg>
              <span>Festival</span>
            </li>
            <li className="item">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                strokeWidth="2"
                strokeLinecap="round"
                strokeLinejoin="round"
                className="feather feather-zap"
              >
                <polygon points="13 2 3 14 12 14 11 22 21 10 12 10 13 2" />
              </svg>
              <span>Concerts</span>
            </li>
          </ul>
        </div>
      </div>
      <div className="page-content">
        <div className="header">Today Tasks</div>
        <div className="content-categories">
          <div className="label-wrapper">
            <input className="nav-item" name="nav" type="radio" id="opt-1" />
            <label className="category" htmlFor="opt-1">
              All
            </label>
          </div>
          <div className="label-wrapper">
            <input
              className="nav-item"
              name="nav"
              type="radio"
              id="opt-2"
              checked
            />
            <label className="category" htmlFor="opt-2">
              Important
            </label>
          </div>
          <div className="label-wrapper">
            <input className="nav-item" name="nav" type="radio" id="opt-3" />
            <label className="category" htmlFor="opt-3">
              Notes
            </label>
          </div>
          <div className="label-wrapper">
            <input className="nav-item" name="nav" type="radio" id="opt-4" />
            <label className="category" htmlFor="opt-4">
              Links
            </label>
          </div>
        </div>
        <div className="tasks-wrapper">
          {tasks.map((task, idx) => (
            <Task
              key={idx}
              id={idx}
              onChange={handleTaskChanged}
              label={task.label}
              status={task.status}
              checked={task.checked}
            />
          ))}
          <div className="header upcoming">Upcoming Tasks</div>
          {upcomingTasks.map((task, idx) => (
            <Task
              key={idx}
              id={idx}
              label={task.label}
              status={task.status}
              checked={task.checked}
            />
          ))}
        </div>
      </div>
      <div className="right-bar">
        <div className="top-part">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            strokeWidth="2"
            strokeLinecap="round"
            strokeLinejoin="round"
            className="feather feather-users"
          >
            <path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2" />
            <circle cx="9" cy="7" r="4" />
            <path d="M23 21v-2a4 4 0 0 0-3-3.87" />
            <path d="M16 3.13a4 4 0 0 1 0 7.75" />
          </svg>
          <div className="count">6</div>
        </div>
        <div className="header">Schedule</div>
        <div className="right-content">
          <div className="task-box yellow">
            <div className="description-task">
              <div className="time">08:00 - 09:00 AM</div>
              <div className="task-name">Product Review</div>
            </div>
            <div className="more-button"></div>
            <div className="members">
              <img
                src="https://images.unsplash.com/photo-1491349174775-aaafddd81942?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=934&q=80"
                alt="member"
              />
              <img
                src="https://images.unsplash.com/photo-1476657680631-c07285ff2581?ixlib=rb-1.2.1&auto=format&fit=crop&w=2210&q=80"
                alt="member-2"
              />
              <img
                src="https://images.unsplash.com/photo-1496345875659-11f7dd282d1d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2250&q=80"
                alt="member-3"
              />
              <img
                src="https://images.unsplash.com/photo-1455504490126-80ed4d83b3b9?ixlib=rb-1.2.1&auto=format&fit=crop&w=2250&q=80"
                alt="member-4"
              />
            </div>
          </div>
          <div className="task-box blue">
            <div className="description-task">
              <div className="time">10:00 - 11:00 AM</div>
              <div className="task-name">Design Meeting</div>
            </div>
            <div className="more-button"></div>
            <div className="members">
              <img
                src="https://images.unsplash.com/photo-1484688493527-670f98f9b195?ixlib=rb-1.2.1&auto=format&fit=crop&w=2230&q=80"
                alt="member"
              />
              <img
                src="https://images.unsplash.com/photo-1469334031218-e382a71b716b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2250&q=80"
                alt="member-2"
              />
              <img
                src="https://images.unsplash.com/photo-1455504490126-80ed4d83b3b9?ixlib=rb-1.2.1&auto=format&fit=crop&w=2250&q=80"
                alt="member-3"
              />
            </div>
          </div>
          <div className="task-box red">
            <div className="description-task">
              <div className="time">01:00 - 02:00 PM</div>
              <div className="task-name">Team Meeting</div>
            </div>
            <div className="more-button"></div>
            <div className="members">
              <img
                src="https://images.unsplash.com/photo-1491349174775-aaafddd81942?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=934&q=80"
                alt="member"
              />
              <img
                src="https://images.unsplash.com/photo-1475552113915-6fcb52652ba2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1934&q=80"
                alt="member-2"
              />
              <img
                src="https://images.unsplash.com/photo-1493752603190-08d8b5d1781d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1600&q=80"
                alt="member-3"
              />
              <img
                src="https://images.unsplash.com/photo-1484688493527-670f98f9b195?ixlib=rb-1.2.1&auto=format&fit=crop&w=2230&q=80"
                alt="member-4"
              />
            </div>
          </div>
          <div className="task-box green">
            <div className="description-task">
              <div className="time">03:00 - 04:00 PM</div>
              <div className="task-name">Release Event</div>
            </div>
            <div className="more-button"></div>
            <div className="members">
              <img
                src="https://images.unsplash.com/photo-1523419409543-a5e549c1faa8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=943&q=80"
                alt="member"
              />
              <img
                src="https://images.unsplash.com/photo-1519742866993-66d3cfef4bbd?ixlib=rb-1.2.1&auto=format&fit=crop&w=881&q=80"
                alt="member-2"
              />
              <img
                src="https://images.unsplash.com/photo-1521122872341-065792fb2fa0?ixlib=rb-1.2.1&auto=format&fit=crop&w=2208&q=80"
                alt="member-3"
              />
              <img
                src="https://images.unsplash.com/photo-1486302913014-862923f5fd48?ixlib=rb-1.2.1&auto=format&fit=crop&w=3400&q=80"
                alt="member-4"
              />
              <img
                src="https://images.unsplash.com/photo-1484187216010-59798e9cc726?ixlib=rb-1.2.1&auto=format&fit=crop&w=955&q=80"
                alt="member-5"
              />
            </div>
          </div>
          <div className="task-box blue">
            <div className="description-task">
              <div className="time">08:00 - 09:00 PM</div>
              <div className="task-name">Release Event</div>
            </div>
            <div className="more-button"></div>
            <div className="members">
              <img
                src="https://images.unsplash.com/photo-1523419409543-a5e549c1faa8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=943&q=80"
                alt="member"
              />
              <img
                src="https://images.unsplash.com/photo-1519742866993-66d3cfef4bbd?ixlib=rb-1.2.1&auto=format&fit=crop&w=881&q=80"
                alt="member-2"
              />
              <img
                src="https://images.unsplash.com/photo-1521122872341-065792fb2fa0?ixlib=rb-1.2.1&auto=format&fit=crop&w=2208&q=80"
                alt="member-3"
              />
              <img
                src="https://images.unsplash.com/photo-1486302913014-862923f5fd48?ixlib=rb-1.2.1&auto=format&fit=crop&w=3400&q=80"
                alt="member-4"
              />
              <img
                src="https://images.unsplash.com/photo-1484187216010-59798e9cc726?ixlib=rb-1.2.1&auto=format&fit=crop&w=955&q=80"
                alt="member-5"
              />
            </div>
          </div>
          <div className="task-box yellow">
            <div className="description-task">
              <div className="time">11:00 - 12:00 PM</div>
              <div className="task-name">Practise</div>
            </div>
            <div className="more-button"></div>
            <div className="members">
              <img
                src="https://images.unsplash.com/photo-1491349174775-aaafddd81942?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=934&q=80"
                alt="member"
              />
              <img
                src="https://images.unsplash.com/photo-1476657680631-c07285ff2581?ixlib=rb-1.2.1&auto=format&fit=crop&w=2210&q=80"
                alt="member-2"
              />
              <img
                src="https://images.unsplash.com/photo-1496345875659-11f7dd282d1d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2250&q=80"
                alt="member-3"
              />
              <img
                src="https://images.unsplash.com/photo-1455504490126-80ed4d83b3b9?ixlib=rb-1.2.1&auto=format&fit=crop&w=2250&q=80"
                alt="member-4"
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

'''
'''--- public/vercel.svg ---
<svg width="283" height="64" viewBox="0 0 283 64" fill="none" 
    xmlns="http://www.w3.org/2000/svg">
    <path d="M141.04 16c-11.04 0-19 7.2-19 18s8.96 18 20 18c6.67 0 12.55-2.64 16.19-7.09l-7.65-4.42c-2.02 2.21-5.09 3.5-8.54 3.5-4.79 0-8.86-2.5-10.37-6.5h28.02c.22-1.12.35-2.28.35-3.5 0-10.79-7.96-17.99-19-17.99zm-9.46 14.5c1.25-3.99 4.67-6.5 9.45-6.5 4.79 0 8.21 2.51 9.45 6.5h-18.9zM248.72 16c-11.04 0-19 7.2-19 18s8.96 18 20 18c6.67 0 12.55-2.64 16.19-7.09l-7.65-4.42c-2.02 2.21-5.09 3.5-8.54 3.5-4.79 0-8.86-2.5-10.37-6.5h28.02c.22-1.12.35-2.28.35-3.5 0-10.79-7.96-17.99-19-17.99zm-9.45 14.5c1.25-3.99 4.67-6.5 9.45-6.5 4.79 0 8.21 2.51 9.45 6.5h-18.9zM200.24 34c0 6 3.92 10 10 10 4.12 0 7.21-1.87 8.8-4.92l7.68 4.43c-3.18 5.3-9.14 8.49-16.48 8.49-11.05 0-19-7.2-19-18s7.96-18 19-18c7.34 0 13.29 3.19 16.48 8.49l-7.68 4.43c-1.59-3.05-4.68-4.92-8.8-4.92-6.07 0-10 4-10 10zm82.48-29v46h-9V5h9zM36.95 0L73.9 64H0L36.95 0zm92.38 5l-27.71 48L73.91 5H84.3l17.32 30 17.32-30h10.39zm58.91 12v9.69c-1-.29-2.06-.49-3.2-.49-5.81 0-10 4-10 10V51h-9V17h9v9.2c0-5.08 5.91-9.2 13.2-9.2z" fill="#000"/>
</svg>
'''
'''--- styles/globals.css ---
html,
body {
  padding: 0;
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,
    Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
}

a {
  color: inherit;
  text-decoration: none;
}

* {
  box-sizing: border-box;
}

.center-div {
  width: 100vw;
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
}

.main-div {
  width: 100vw;
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}

.button {
  width: 100px;
  height: 50px;
  border-radius: 5px;
  border: none;
  background-color: #f1f1f1;
  color: #000;
  font-size: 1.2rem;
  font-weight: bold;
  cursor: pointer;
  transition: 0.2s;
}

'''
'''--- styles/style.css ---
* {
  box-sizing: border-box;
  outline: none;
}

:root {
  --bg-color: #f5f8ff;
  --main-color: #353536;
  --secondary-color: #8e92a4;
  --main-text-color: #5d606b;
  --secondary-dark-color: #9496a5;
  --tag-color-one: #e0fbf6;
  --tag-color-text-one: #58c2a9;
  --tag-color-two: #ece7fe;
  --tag-color-text-two: #8972f3;
  --tag-color-three: #fde7ea;
  --tag-color-text-three: #e77f89;
  --tag-color-four: #f7f8fc;
  --tag-color-text-four: #a0a6b5;
  --checkbox-color: #009e90;
  --button-color: #49beb7;
  --box-color: #fff1d6;
  --box-color-2: #d3e6ff;
  --box-color-3: #ffd9d9;
  --box-color-4: #daffe5;
  --task-color: #777982;
}

.top-part .count, .top-part, .item, body {
  display: flex;
  align-items: center;
}

body {
  margin: 0;
  justify-content: center;
  flex-direction: column;
  overflow: auto;
  width: 100%;
  height: 100vh;
  padding: 20px;
  font-family: "DM Sans", sans-serif;
  font-size: 12px;
  background-image: linear-gradient(21deg, rgba(64, 83, 206, 0.3697003235) 68%, rgba(255, 206, 196, 0.5) 163%), linear-gradient(163deg, rgba(49, 146, 170, 0.0794448997) 86%, rgba(239, 112, 138, 0.5) 40%), linear-gradient(30deg, rgba(76, 79, 173, 0.6173675717) 22%, rgba(237, 106, 134, 0.5) 169%), linear-gradient(48deg, rgba(31, 85, 147, 0.7323890642) 64%, rgba(247, 126, 132, 0.5) 43%);
  background-blend-mode: overlay, multiply, color, normal;
}

ul {
  list-style-type: none;
  padding: 0;
}

button {
  border: none;
  background: none;
  cursor: pointer;
}

.task-manager {
  display: flex;
  justify-content: space-between;
  width: 100%;
  max-width: 1200px;
  height: 90vh;
  max-height: 900px;
  background: #fff;
  border-radius: 4px;
  box-shadow: 0 0.3px 2.2px rgba(0, 0, 0, 0.011), 0 0.7px 5.3px rgba(0, 0, 0, 0.016), 0 1.3px 10px rgba(0, 0, 0, 0.02), 0 2.2px 17.9px rgba(0, 0, 0, 0.024), 0 4.2px 33.4px rgba(0, 0, 0, 0.029), 0 10px 80px rgba(0, 0, 0, 0.04);
  overflow: hidden;
}

.left-bar {
  background-color: var(--bg-color);
  width: 230px;
  border-right: 1px solid #e3e7f7;
  position: relative;
}

.left-content {
  padding: 40px;
}

.item {
  color: var(--main-color);
  margin-bottom: 14px;
  font-weight: 500;
}
.item svg {
  width: 14px;
  height: 14px;
  color: currentcolor;
  margin-right: 10px;
}

.category-list {
  margin-top: 50px;
}
.category-list .item {
  color: var(--secondary-color);
}

.actions {
  padding: 12px;
  display: flex;
  justify-content: space-between;
}

.circle {
  border-radius: 50%;
  width: 10px;
  height: 10px;
  background-color: #fe4d46;
  box-shadow: 14px 0 0 0 #fbc023, 28px 0 0 0 #7dd21f;
}

.circle-2 {
  border-radius: 50%;
  width: 4px;
  height: 4px;
  background-color: #d5d7e3;
  box-shadow: -6px 0 0 0 #d5d7e3, 6px 0 0 0 #d5d7e3;
}

.right-bar {
  width: 320px;
  border-left: 1px solid #e3e7f7;
  display: flex;
  flex-direction: column;
}
.right-bar .header {
  font-size: 20px;
  color: var(--main-text-color);
  margin-left: 30px;
}

.top-part {
  padding: 30px;
  align-self: flex-end;
}
.top-part svg {
  width: 14px;
  height: 14px;
  color: var(--main-color);
  margin-right: 14px;
}
.top-part .count {
  font-size: 12px;
  border-radius: 50%;
  width: 24px;
  height: 24px;
  background-color: #623ce8;
  color: #fff;
  justify-content: center;
}

.right-content {
  padding: 10px 40px;
  overflow-y: auto;
  flex: 1;
}

.task-box {
  position: relative;
  border-radius: 12px;
  width: 100%;
  margin: 20px 0;
  padding: 16px;
  cursor: pointer;
  box-shadow: 2px 2px 4px 0px #ebebeb;
}
.task-box:hover {
  transform: scale(1.02);
}

.time {
  margin-bottom: 6px;
  opacity: 0.4;
  font-size: 10px;
}

.task-name {
  font-size: 14px;
  font-weight: 500;
  opacity: 0.6;
}

.yellow {
  background-color: var(--box-color);
}

.blue {
  background-color: var(--box-color-2);
}

.red {
  background-color: var(--box-color-3);
}

.green {
  background-color: var(--box-color-4);
}

.more-button {
  position: absolute;
  width: 3px;
  height: 3px;
  border-radius: 50%;
  background-color: #8e92a4;
  box-shadow: 0 -4px 0 0 #8e92a4, 0 4px 0 0 #8e92a4;
  opacity: 0.4;
  right: 20px;
  top: 30px;
  cursor: pointer;
}

.members {
  display: flex;
  margin-top: 14px;
}
.members img {
  border-radius: 50%;
  width: 30px;
  height: 30px;
  margin-right: 4px;
  object-fit: cover;
}

.page-content {
  display: flex;
  flex-direction: column;
  flex: 1;
  padding: 40px 20px 0 20px;
}
.page-content .header {
  font-size: 26px;
  color: var(--main-color);
  margin-top: 30px;
}

.content-categories {
  display: flex;
  justify-content: space-evenly;
  width: 100%;
  border-bottom: 1px solid #ddd;
  padding: 20px 0;
}

.nav-item {
  display: none;
}

.category {
  font-weight: 500;
  color: var(--secondary-color);
  border-bottom: 1px solid #ddd;
  transition: 0.4s ease-in;
  padding: 20px 30px;
  cursor: pointer;
}

#opt-1:checked + label,
#opt-2:checked + label,
#opt-3:checked + label,
#opt-4:checked + label {
  color: var(--checkbox-color);
  border-bottom: 2px solid var(--checkbox-color);
}

.task-item {
  display: none;
}

.tasks-wrapper {
  padding: 30px 0;
  flex: 1;
  overflow-y: auto;
  height: 100%;
  padding-right: 8px;
}

.task {
  display: flex;
  justify-content: space-between;
  position: relative;
  margin-bottom: 16px;
  padding-left: 30px;
  color: var(--task-color);
  font-size: 13px;
  font-weight: 500;
}
.task:hover {
  transform: translatex(2px);
}
.task label {
  cursor: pointer;
}

label .label-text {
  position: relative;
}

label .label-text:before {
  content: "";
  position: absolute;
  width: 14px;
  height: 14px;
  border: 1px solid #ddd;
  border-radius: 2px;
  left: -24px;
  transition: 0.2s ease;
}

.task-item:checked + label .label-text:before {
  background-color: var(--checkbox-color);
  border: none;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='%23fff' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-check'%3E%3Cpolyline points='20 6 9 17 4 12'/%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-size: 10px;
  background-position: center;
  border: 1px solid var(--checkbox-color);
}

.tag {
  font-size: 10px;
  padding: 4px 8px;
  border-radius: 20px;
}
.tag.approved {
  background-color: var(--tag-color-one);
  color: var(--tag-color-text-one);
}
.tag.progress {
  background-color: var(--tag-color-two);
  color: var(--tag-color-text-two);
}
.tag.review {
  background-color: var(--tag-color-three);
  color: var(--tag-color-text-three);
}
.tag.waiting {
  background-color: var(--tag-color-four);
  color: var(--tag-color-text-four);
}

.upcoming {
  border-bottom: 1px solid #ddd;
  padding-bottom: 30px;
  margin-bottom: 30px;
}

@media screen and (max-width: 900px) {
  .left-bar {
    display: none;
  }
}
@media screen and (max-width: 700px) {
  .task-manager {
    flex-direction: column;
    overflow-y: auto;
  }

  .right-bar, .page-content {
    width: 100%;
    display: block;
  }

  .tasks-wrapper {
    height: auto;
  }
}
@media screen and (max-width: 520px) {
  .page-content {
    padding: 40px 10px 0 10px;
  }

  .right-content {
    padding: 10px 16px;
  }

  .category {
    padding: 20px;
  }
}
'''