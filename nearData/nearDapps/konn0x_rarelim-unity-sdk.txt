*GitHub Repository "konn0x/rarelim-unity-sdk"*

'''--- Assets/RarelimUnity/Scenes/Near/NEP177/Scripts/PlayerController.cs ---
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class PlayerController : MonoBehaviour
{

  public float speed = 12f;

  // Update is called once per frame
  void Update()
  {
    float x = Input.GetAxis("Horizontal");
    float z = Input.GetAxis("Vertical");

    Vector3 move = transform.right * x + transform.forward * z;

    CharacterController controller = gameObject.GetComponent<CharacterController>();

    controller.Move(move * speed * Time.deltaTime);
  }
}

'''
'''--- Assets/RarelimUnity/Scripts/Near/Examples/NEP177/DescriptionMetadataHandler.cs ---
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Newtonsoft.Json;
using TMPro;
using Rarelim.Near;

public class DescriptionMetadataHandler : MonoBehaviour
{

  public string networkId;
  public string contractId;
  public string tokenId;

  // Define TokenMetadata class according to the NEP177 standard.
  public class TokenMetadata
  {
    public string title { get; set; }
    public string description { get; set; }
    public string media { get; set; }
    public string media_hash { get; set; }
    public object copies { get; set; }
    public object issued_at { get; set; }
    public object expires_at { get; set; }
    public object starts_at { get; set; }
    public object updated_at { get; set; }
    public string extra { get; set; }
    public string reference { get; set; }
    public object reference_hash { get; set; }
  }

  void Start()
  {

    // Get reference to script.
    NEP177 nep177 = gameObject.GetComponent<NEP177>();

    StartCoroutine(nep177.TokenMetadata(networkId, contractId, tokenId, (res) =>
    {

      TokenMetadata token = JsonConvert.DeserializeObject<TokenMetadata>(res.ToString());

      Debug.Log(token.description);

      // Get reference to TextMeshPro. Note that we reference `TextMeshProUGUI` instead of `TextMeshPro`.
      TextMeshProUGUI textMeshPro = GetComponent<TextMeshProUGUI>();

      textMeshPro.SetText(token.description);

    }));

  }

}

'''
'''--- Assets/RarelimUnity/Scripts/Near/Examples/NEP177/ExtraMetadataHandler.cs ---
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Newtonsoft.Json;
using TMPro;
using Rarelim.Near;

public class ExtraMetadataHandler : MonoBehaviour
{

  public string networkId;
  public string contractId;
  public string tokenId;

  void Start()
  {

    // Get reference to script.
    NEP177 nep177 = gameObject.GetComponent<NEP177>();

    StartCoroutine(nep177.TokenMetadataExtra(networkId, contractId, tokenId, (res) =>
    {

      dynamic jsonResponse = JsonConvert.DeserializeObject(res.ToString());

      Debug.Log(jsonResponse);

      // Get reference to TextMeshPro. Note that we reference `TextMeshProUGUI` instead of `TextMeshPro`.
      //   TextMeshProUGUI textMeshPro = GetComponent<TextMeshProUGUI>();

    }));

  }

}

'''
'''--- Assets/RarelimUnity/Scripts/Near/Examples/NEP177/MediaMetadataHandler.cs ---
using System.Collections;
using UnityEngine;
using UnityEngine.Networking;
using UnityEngine.UI;
using Rarelim.Near;
using Newtonsoft.Json;

public class MediaMetadataHandler : MonoBehaviour
{

  public string networkId;
  public string contractId;
  public string tokenId;

  // Define TokenMetadata class according to the NEP177 standard.
  public class TokenMetadata
  {
    public string title { get; set; }
    public string description { get; set; }
    public string media { get; set; }
    public string media_hash { get; set; }
    public object copies { get; set; }
    public object issued_at { get; set; }
    public object expires_at { get; set; }
    public object starts_at { get; set; }
    public object updated_at { get; set; }
    public string extra { get; set; }
    public string reference { get; set; }
    public object reference_hash { get; set; }
  }

  void Start()
  {
    // Get reference to NEP177 script.
    NEP177 nep177 = gameObject.GetComponent<NEP177>();

    StartCoroutine(nep177.TokenMetadata(networkId, contractId, tokenId, (res) =>
    {

      TokenMetadata token = JsonConvert.DeserializeObject<TokenMetadata>(res.ToString());

      StartCoroutine(DownloadImage(token.media));

    }));
  }

  IEnumerator DownloadImage(string MediaUrl)
  {
    using (UnityWebRequest webRequest = UnityWebRequestTexture.GetTexture(MediaUrl))
    {
      yield return webRequest.SendWebRequest();

      switch (webRequest.result)
      {
        case UnityWebRequest.Result.ConnectionError:
        case UnityWebRequest.Result.DataProcessingError:
          Debug.LogError("Error: " + webRequest.error);
          break;

        case UnityWebRequest.Result.ProtocolError:
          Debug.LogError("HTTP Error: " + webRequest.error);
          break;

        case UnityWebRequest.Result.Success:
          //   Make sure a `RawImage` component exists on the GameObject this script is referencing.
          this.gameObject.GetComponent<RawImage>().texture = ((DownloadHandlerTexture)webRequest.downloadHandler).texture;
          break;
      }
    }
  }
}

'''
'''--- Assets/RarelimUnity/Scripts/Near/Examples/NEP177/TitleMetadataHandler.cs ---
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Newtonsoft.Json;
using TMPro;
using Rarelim.Near;

public class TitleMetadataHandler : MonoBehaviour
{

  public string networkId;
  public string contractId;
  public string tokenId;

  // Define TokenMetadata class according to the NEP177 standard.
  public class TokenMetadata
  {
    public string title { get; set; }
    public string description { get; set; }
    public string media { get; set; }
    public string media_hash { get; set; }
    public object copies { get; set; }
    public object issued_at { get; set; }
    public object expires_at { get; set; }
    public object starts_at { get; set; }
    public object updated_at { get; set; }
    public string extra { get; set; }
    public string reference { get; set; }
    public object reference_hash { get; set; }
  }

  void Start()
  {

    // Get reference to script.
    NEP177 nep177 = gameObject.GetComponent<NEP177>();

    StartCoroutine(nep177.TokenMetadata(networkId, contractId, tokenId, (res) =>
    {

      TokenMetadata token = JsonConvert.DeserializeObject<TokenMetadata>(res.ToString());

      Debug.Log(token.title);

      // Get reference to TextMeshPro. Note that we reference `TextMeshProUGUI` instead of `TextMeshPro`.
      TextMeshProUGUI textMeshPro = GetComponent<TextMeshProUGUI>();

      textMeshPro.SetText(token.title);

    }));

  }

}

'''
'''--- Assets/RarelimUnity/Scripts/Near/Library/NEP171.cs ---
using System.Collections;
using UnityEngine.Networking;
using UnityEngine;
using Newtonsoft.Json; // Use Newtonsoft Json || https://docs.unity3d.com/Packages/com.unity.nuget.newtonsoft-json@3.0/manual/index.html

namespace Rarelim.Near {
  public class NEP171: MonoBehaviour {

    private readonly static string NEAR_BASE_URL = "https://api.rarelim.com/near/";

    // Returns the token with the given token ID.
    //
    // PARAMETERS:
    // - networkId: Either 'testnet' or 'mainnet'.
    // - contractId: Contract account.
    // - tokenId: ID for the token to request data for.
    // - callbackOnResult: Function to call with returned data.
    // --------------------------------------------------------------------------------
    public IEnumerator NftToken(string networkId, string contractId,  string tokenId, System.Action<object> callbackOnResult)
    {
      // Construct request URL.
      string requestUrl = NEAR_BASE_URL + networkId + '/' + contractId +  "/nep171/nftToken/" + tokenId;

      using (UnityWebRequest webRequest = UnityWebRequest.Get(requestUrl))
      {
        Debug.Log("Request: " + requestUrl);

        yield return webRequest.SendWebRequest();

        switch (webRequest.result)
        {
        case UnityWebRequest.Result.ConnectionError:
        case UnityWebRequest.Result.DataProcessingError:
            Debug.LogError("Error: " + webRequest.error);
            break;

        case UnityWebRequest.Result.ProtocolError:
            Debug.LogError("HTTP Error: " + webRequest.error);
            break;

        case UnityWebRequest.Result.Success:
            Debug.Log(webRequest.downloadHandler.text);

            object data = JsonConvert.DeserializeObject(webRequest.downloadHandler.text);

            callbackOnResult(data);
            break;
        }
      }
    }
  }
}
'''
'''--- Assets/RarelimUnity/Scripts/Near/Library/NEP177.cs ---
using System.Collections;
using UnityEngine;
using UnityEngine.Networking;
using Newtonsoft.Json; // Use Newtonsoft Json || https://docs.unity3d.com/Packages/com.unity.nuget.newtonsoft-json@3.0/manual/index.html

namespace Rarelim.Near
{
  public class NEP177 : MonoBehaviour
  {
    private readonly static string NEAR_BASE_URL = "https://api.rarelim.com/near/";

    // Fetch metadata for a particular token.
    //
    // PARAMETERS:
    // - networkId: Either 'testnet' or 'mainnet'.
    // - contractId: Contract account.
    // - tokenId: ID for the token to request data for.
    // - callbackOnResult: Function to call with returned data.
    // --------------------------------------------------------------------------------
    public IEnumerator TokenMetadata(string networkId, string contractId, string tokenId, System.Action<object> callbackOnResult)
    {
      // Construct request URL.
      // e.g. "https://api.rarelim.com/v1/testnet/test.nft-v1.rarelim.testnet/nep177/tokenMetadata/25"
      string requestUrl = NEAR_BASE_URL + networkId + '/' + contractId + "/nep177/tokenMetadata/" + tokenId;

      using (UnityWebRequest webRequest = UnityWebRequest.Get(requestUrl))
      {
        Debug.Log("Request: " + requestUrl);

        yield return webRequest.SendWebRequest();

        switch (webRequest.result)
        {
          case UnityWebRequest.Result.ConnectionError:
          case UnityWebRequest.Result.DataProcessingError:
            Debug.LogError("Error: " + webRequest.error);
            break;

          case UnityWebRequest.Result.ProtocolError:
            Debug.LogError("HTTP Error: " + webRequest.error);
            break;

          case UnityWebRequest.Result.Success:
            Debug.Log(webRequest.downloadHandler.text);

            object data = JsonConvert.DeserializeObject(webRequest.downloadHandler.text);

            callbackOnResult(data);
            break;
        }
      }
    }

    // Fetch metadata for a particular token. Only return 'extra' metadata.
    //
    // PARAMETERS:
    // - networkId: Either 'testnet' or 'mainnet'.
    // - contractId: Contract account.
    // - tokenId: ID for the token to request data for.
    // - callbackOnResult: Function to call with returned data.
    // --------------------------------------------------------------------------------
    public IEnumerator TokenMetadataExtra(string networkId, string contractId, string tokenId, System.Action<object> callbackOnResult)
    {
      // Construct request URL.
      string requestUrl = NEAR_BASE_URL + networkId + '/' + contractId + "/nep177/tokenMetadataExtra/" + tokenId;

      using (UnityWebRequest webRequest = UnityWebRequest.Get(requestUrl))
      {
        Debug.Log("Request: " + requestUrl);

        yield return webRequest.SendWebRequest();

        switch (webRequest.result)
        {
          case UnityWebRequest.Result.ConnectionError:
          case UnityWebRequest.Result.DataProcessingError:
            Debug.LogError("Error: " + webRequest.error);
            break;

          case UnityWebRequest.Result.ProtocolError:
            Debug.LogError("HTTP Error: " + webRequest.error);
            break;

          case UnityWebRequest.Result.Success:
            Debug.Log(webRequest.downloadHandler.text);

            object data = JsonConvert.DeserializeObject(webRequest.downloadHandler.text);

            callbackOnResult(data);
            break;
        }
      }
    }
  }
}
'''
'''--- Assets/RarelimUnity/Scripts/Near/Library/NEP181.cs ---
using System.Collections;
using UnityEngine.Networking;
using UnityEngine;
using Newtonsoft.Json; // Use Newtonsoft Json || https://docs.unity3d.com/Packages/com.unity.nuget.newtonsoft-json@3.0/manual/index.html

namespace Rarelim.Near {
  public class NEP181: MonoBehaviour {

    private readonly static string NEAR_BASE_URL = "https://api.rarelim.com/near/";

    // Returns the total supply of non-fungible tokens.
    //
    // PARAMETERS:
    // - networkId: Either 'testnet' or 'mainnet'.
    // - contractId: Contract account.
    // - callbackOnResult: Function to call with returned data.
    // --------------------------------------------------------------------------------
    public IEnumerator NftTotalSupply(string networkId, string contractId, System.Action<object> callbackOnResult)
    {
      // Construct request URL.
      string requestUrl = NEAR_BASE_URL + networkId + '/' + contractId +  "/nep181/nftTotalSupply";

      using (UnityWebRequest webRequest = UnityWebRequest.Get(requestUrl))
      {
        Debug.Log("Request: " + requestUrl);

        yield return webRequest.SendWebRequest();

        switch (webRequest.result)
        {
        case UnityWebRequest.Result.ConnectionError:
        case UnityWebRequest.Result.DataProcessingError:
            Debug.LogError("Error: " + webRequest.error);
            break;

        case UnityWebRequest.Result.ProtocolError:
            Debug.LogError("HTTP Error: " + webRequest.error);
            break;

        case UnityWebRequest.Result.Success:
            Debug.Log(webRequest.downloadHandler.text);

            object data = JsonConvert.DeserializeObject(webRequest.downloadHandler.text);

            callbackOnResult(data);
            break;
        }
      }
    }
  }
}
'''
'''--- Assets/WebGLTemplates/NearTemplate/index.html ---
<!DOCTYPE html>
<html lang="en-us">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <title>Unity WebGL Player | {{{ PRODUCT_NAME }}}</title>
  </head>

  <body style="text-align: center">
    <canvas id="unity-canvas" width={{{ WIDTH }}} height={{{ HEIGHT }}} style="width: {{{ WIDTH }}}px; height: {{{ HEIGHT }}}px; background: {{{ BACKGROUND_FILENAME ? 'url(\'Build/' + BACKGROUND_FILENAME.replace(/'/g, '%27') + '\') center / cover' : BACKGROUND_COLOR }}}"></canvas>

    <script
    src="https://cdn.jsdelivr.net/npm/near-api-js@0.44.2/dist/near-api-js.min.js"
    integrity="sha256-W5o4c5DRZZXMKjuL41jsaoBpE/UHMkrGvIxN9HcjNSY="
    crossorigin="anonymous"
  ></script>

    <script src="Build/{{{ LOADER_FILENAME }}}"></script>

    <script>
      if (/iPhone|iPad|iPod|Android/i.test(navigator.userAgent)) {
        // Mobile device style: fill the whole browser client area with the game canvas:
        var meta = document.createElement('meta');
        meta.name = 'viewport';
        meta.content = 'width=device-width, height=device-height, initial-scale=1.0, user-scalable=no, shrink-to-fit=yes';
        document.getElementsByTagName('head')[0].appendChild(meta);
      }

      createUnityInstance(document.querySelector("#unity-canvas"), {
        dataUrl: "Build/{{{ DATA_FILENAME }}}",
        frameworkUrl: "Build/{{{ FRAMEWORK_FILENAME }}}",
#if USE_WASM
        codeUrl: "Build/{{{ CODE_FILENAME }}}",
#endif
#if MEMORY_FILENAME
        memoryUrl: "Build/{{{ MEMORY_FILENAME }}}",
#endif
#if SYMBOLS_FILENAME
        symbolsUrl: "Build/{{{ SYMBOLS_FILENAME }}}",
#endif
        streamingAssetsUrl: "StreamingAssets",
        companyName: {{{ JSON.stringify(COMPANY_NAME) }}},
        productName: {{{ JSON.stringify(PRODUCT_NAME) }}},
        productVersion: {{{ JSON.stringify(PRODUCT_VERSION) }}},
        // matchWebGLToCanvasSize: false, // Uncomment this to separately control WebGL canvas render size and DOM element size.
        // devicePixelRatio: 1, // Uncomment this to override low DPI rendering on high DPI displays.
      });
    </script>
  </body>
</html>

'''
'''--- README.md ---
# Rarelim Unity SDK

This is the Unity SDK by [Rarelim](https://www.rarelim.com). [Check the docs](https://docs.rarelim.com) to learn more.

Download the ZIP files, or [directly install in Unity with the Git URL](https://docs.unity3d.com/Manual/upm-ui-giturl.html).
'''