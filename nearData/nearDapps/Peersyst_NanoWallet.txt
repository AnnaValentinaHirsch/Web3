*GitHub Repository "Peersyst/NanoWallet"*

'''--- CHANGELOG.md ---
# Changelog

## Version 2.6.0

    - Added post-launch opt-in process

## Version 2.5.1

    - Fixed Ledger opt-in cosigning issue.

## Version 2.5.0

    - Added Electron builds
    - Added Ledger support
    - Fixed optin minRemoval calculation

## Version 2.4.8

    - Fix voting service
    - Updated company details in terms and condition

## Version 2.4.7-OptIn

    - Added Symbol opt in module

## Version 2.4.7

    - Fix testnet nodes

## Version 2.4.6

    - Fix Changelly widget
    - Fix voting
    - Fix broken node link in faq

## Version 2.4.4

    - Updated voting module
    - Fix default testnet node

## Version 2.4.2

    - Updated Voting module
    - Added NEMonster collection game (by @aenima86)
    - Fixed Changelly widget
    - Renamed to NEM Wallet
    - Minor fixes and improvements

## Version 2.3.2

    - Fix DNS search
    - Update languages
    - Minor improvements

## Version 2.3.0

    - Domain Name System module
    - Import Wallet QR code module
    - Support voting with Trezor
    - Minor fixes and improvements

## Version 2.2.0

    - Create and verify signed messages modules
    - Account transactions explorer
    - Fix timestamp too far in the future
    - Updated voting backend
    - Minor fixes and improvements

## Version 2.1.2

    - Voting modules
    - Offline transaction modules
    - Advanced Apostille
    - BIP32 refactor
    - News and transaction confirmation components (WIP)
    - Invoice module and component
    - Minor fixes and improvements

## Version 2.0.14

    - Fix brain wallet login

## Version 2.0.13

    - Hide Trezor login button in Chrome builds

## Version 2.0.12

    - Fix harvesting on mainnet
    - Fix new update notification

## Version 2.0.10

    - Fix Trezor support
    - Minor fixes and improvements

## Version 2.0.2

    - Fix password input showing if using Trezor
    - Shows encryption fee message in fee input

## Version 2.0.0

    - Use the [nem-sdk](https://github.com/QuantumMechanics/NEM-sdk)
    - Trezor support
    - ShapeShift support
    - Step by step signup and account safety protocol
    - Extra entropy added to simple wallets
    - Added FAQ
    - Can show balance and market data in different currencies
    - Notification on homepage when new update available

## Version 1.4.13

    - Allow sub-namespaces and mosaic names to start with a number
    - Fix secondary accounts: In **occasional** cases, secondary accounts private keys can start with '00' but BIP32 was omitting it, giving a 62 characters private key. Those **secondary accounts** will fail to send anything out even if password is valid (but recoverable).
    - Update languages

## Version 1.4.10

    - New fee structure on Mainnet
    - Added passphrase strength estimator to brain wallet: https://github.com/dropbox/zxcvbn
    - Brain wallet passphrase requires 40 characters minimum
    - Moved purge button into footer
    - Show an alert asking to change node if not connected within 5 seconds after login
    - Show an alert if user's brain wallet seems weak (< 40 characters)
    - Minor fixes and improvements

## Version 1.4.3

    - Voting module on Mainnet
    - Removed bob.nem.ninja and used MedAlice2 as default testnet node
    - Minor fixes and improvements

## Version 1.4.0

    - New fee structure (on testnet)
    - Voting module (on testnet), made by @shierve https://github.com/shierve
    - If user deny geoloc for nearest node, app will select a random supernode
    - Fixed languages
    - Minor fixes and improvements

## Version 1.3.12

    - Improve start / stop delegated harvesting design
    - Fix market data percentage change
    - Allow only one cosignatory removal per multisig edit
    - Prevent multisig edit to make a 0 of m (= m of m)
    - Module to sign multisig transactions if not pushed into your unconfirmed transactions
    - Fetch the closest node from user location (https://www.w3schools.com/html/html5_geolocation.asp26)
    - Minor fixes and improvements

## Version 1.3.4

    - New account safety measures at wallet creation
    - Transaction details and multisignature dropdowns shows account label if present in address book
    - Selected language stored in local storage
    - Russian translation
    - Minor fixes & improvements

## Version 1.3.0

    - New design
    - Address book
    - Fix Apostille on Chrome and Safari
    - No need to provide an account address to create a private key wallet, address will be shown automatically
    - Same as above point but for creating multisig accounts
    - Importance transaction module show the corresponding remote account address when a custom public key is provided
    - Fix handling of decimal amount in normal transfer transaction, comma and dot decimal mark can be used
    - Fix message fee
    - Fix 'unknown mosaic divisibility' error when receiving a new mosaic
    - Limit individual apostille file to 100MB
    - Fix display of importance score
    - Fix "FAILURE_TIMESTAMP_TOO_FAR_IN_FUTURE" using NIS time-sync API
    - Lock app and show message if browser not supported
    - New market data provider
    - Minor fixes & improvements

## Version 1.2.12

    - Renew namespace module
    - Renewal alert when namespaces can be renewed (one month before expiry)
    - Fix multisignature module
    - No need to send at least one transaction from an account before converting it to multisig, just send funds to it and convert.
    - Fix apostille request message QR
    - Clean apostilles explorer table to show only HEX messages
    - Fix Balance and vested balance display (dot instead of comma)
    - Fix notarization account cleared when uploading a file in update apostille
    - Fix create apostille still on public after selecting multisig
    - Smaller apostille certificate size
    - Minor design

## Version 1.2.2

    - Namespaces & Mosaics explorer
	- Accounts explorer
	- QR to export an account to android & Ios
	- New Apostille certificate
	- Nty data separated by network in local storage
	- Apostilles are private by default
	- User's Apostille history moved in service page
	- Ring on confirmed and unconfirmed transactions (Same as lightwallet)
	- Japanese and Polish translations
	- Switch for mainnet fee fork
	- Improved comments of Utils and Services for jsDoc
	- Minor fixes and design

## Version 1.1.11

    - Global code improvements: Faster and stabler
    - Fix upgrade of NCC wallets
    - Improve signature of multisig txes
    - Improve transaction details
    - Fix aliases with special chars
    - New apostille certificate design
    - Apostille improvements
    - Better handling of nodes for harvesting
    - Multisignature accounts delegated harvesting
    - Store all nodes used for multisignature accounts delegated harvesting in local storage
    - Automatically reconnect if your internet connection goes down
    - Mainnet enabled
    - Chinese translation (about 95% done)
    - Minor design
    - Minor fixes

## Version 1.1.3

    - Ready for translators (Full i18n)
    - Can sign multisignature aggregate modifications, namespace provision, mosaic definition and mosaic supply changes transactions.
    - Improvements on apostille HD accounts
    - Apostille certificates
    - Apostille explorer
    - Custom text apostilles
    - Balance of selected mosaic in transfer module
    - Changelly Instant Exchange module (Thanks to @ReverseCold)
    - Accounts label
    - Improved custom node handling
    - Improved all transaction types details design and data
    - Loading screen for computationnally intensive operations
    - Fix messages with unicode
    - Fix messages with carriage return and keep the formatting in transaction details
    - Fix harvesting with child accounts
    - FAQ module
    - Minor fixes
    - Minor design

## Version 1.0.13

    - Fix message fees (lower)
    - Fix private apostilles
    - Fix audit of private apostilles
    - Minor design

## Version 1.0.10

    - Fix simple signature changes in edit multisignature contracts.
    - Fix decryption of message for sender.
    - Fix autodetection of remote account status (locked or unlocked) on harvesting node change.
    - Better validation in namespace and mosaic modules.
    - Add extra information about operations
    - Minor design

'''
'''--- ISSUE_TEMPLATE.md ---
Before submitting your issue, please review the following checklist:

- [ ] **AVOID** using the issue tracker for questions or help. Submitting issues to this repository are usually reserved for bugs, feature requests, or changes to the source code. If you need help https://forum.nem.io should be first place to visit.
- [ ] **DO** describe operating system and browser used

## Expected Behavior
<!--- Tell us what should happen -->

## Current Behavior
<!--- Tell us what happens instead of the expected behavior -->

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->

## Steps to Reproduce
<!--- Provide an unambiguous set of steps to reproduce this bug. -->
1.
2.
3.
4.

## Details
<!--- Provide any other details here -->

'''
'''--- README.md ---
# NEM Wallet #

### How to use the NEM Wallet ? ###

After downloading the latest version here https://forum.nem.io/t/nano-wallet-beta-1-1-11-5-000-xem-bug-bounty/2791, extract the NEM-Wallet folder from the archive, then you can simply click on start.html to open the app in your default browser. No installation or local server needed.

### How to import NCC wallet ? ###

Open NCC and your wallet, clicking on user icon should reveal a drop-down menu with "Export for Lightwallet".
Once your have your wallet (.json format), open the NEM Wallet and import the file from the login page. It'll ask for an upgrade and trigger the download of your updated wallet.
Do not delete your old NCC wallet and keep it safe somewhere.

### Imported accounts that are already harvesting using NCC ###

NCC is using a different way to generate the remote associated with an account. NEM Wallet uses BIP32 to generate it deterministically and make everything easier. In order to manage and monitor harvesting, you'll need to deactivate the old remote account from NCC and activate your new remote account from the NEM Wallet. Alternatively you can use a custom delegated public key in the NEM Wallet importance transaction page.

**/!\ Main network: Please note that if you are part of the Supernodes program you'll need to re-enroll your node using your new delegated public key.**

### How to update the NEM Wallet ? ###

Before update make sure that you don't have any wallets stored into the NEM-Wallet folder (you can place them anywhere you want). Then, just delete old version and unzip new version.

###  Dashboard is empty and no balance is showing ###

It is probably that the node you are connected to is down.
Look at the navigation bar, at the top of the page.
If the circle next to `Node` is red, click on it and select another node from the list.

# Developers #

### Build from source ###

1) Install gulp

<pre>npm install -g gulp-cli</pre>

2) Open a console to the path of the NEM-Wallet folder and install all the needed dependencies

<pre>npm install</pre>

3) Build:

<pre>gulp</pre>

##### OR #####

4) Run the NEM Wallet as App (packaged with chromium browser)

<pre>npm run devApp</pre>

##### OR #####

5) Build NEM Wallet apps, default set to : win64,osx64,linux64

<pre>gulp build-app</pre>

6) Build NEM Wallet Electron apps (only Electron verision support Ledger wallets), default build for MacOS, Windows and Linux

<pre>npm run release</pre>

### Known issues ###

- Sometimes, depending the node used, unconfirmed data to sign is not incoming from websocket

'''
'''--- build.js ---
/* eslint-disable prettier/prettier */
/* eslint-disable @typescript-eslint/no-var-requires */
const path = require('path')
const { app, BrowserWindow, shell, globalShortcut, Menu, ipcMain } = require('electron')
const electron = require('electron')
const name = electron.app.getName()
// Set the path of the folder where the persisted data is stored
electron.app.setPath('userData', path.join(electron.app.getPath('home'), '.nem-wallet'))

const iconUrlPath = process.platform === 'darwin' ? './build/images/logomark.ico' : process.platform === 'linux' ? electron.nativeImage.createFromPath(__dirname + "/build/images/logomark-small.png") : `file://${__dirname}/build/images/logomark.ico`;

const loadUrlPath = process.platform === 'darwin' ? './build/start.html' : `file://${__dirname}/build/start.html`

let mainWindow = null

const template = [
  {
    label: 'Window',
    role: 'window',
    submenu: [
      {
        label: 'Minimize',
        accelerator: 'CmdOrCtrl+M',
        role: 'minimize',
      },
      {
        label: 'Close',
        accelerator: 'CmdOrCtrl+W',
        role: 'close',
      },
      {
        label: 'Toggle Full Screen',
        accelerator: (function () {
          if (process.platform === 'darwin') {
            return 'Ctrl+Command+F'
          }

          return 'F11'
        })(),
        click: function (item, focusedWindow) {
          if (focusedWindow) {
            focusedWindow.setFullScreen(!focusedWindow.isFullScreen())
          }
        },
      },
      {
        label: 'Toggle Developer Tools',
        accelerator: (function () {
          if (process.platform === 'darwin') {
            return 'Alt+Command+I'
          }

          return 'Ctrl+Shift+I'
        })(),
        click: function (item, focusedWindow) {
          if (focusedWindow) {
            focusedWindow.toggleDevTools()
          }
        },
      },
    ],
  },
  {
    label: 'Edit',
    role: 'edit',
    submenu: [
      {
        label: 'Cut',
        accelerator: 'CmdOrCtrl+X',
        role: 'cut',
      },
      {
        label: 'Copy',
        accelerator: 'CmdOrCtrl+C',
        role: 'copy',
      },
      {
        label: 'Paste',
        accelerator: 'CmdOrCtrl+V',
        role: 'paste',
      },
      {
        label: 'Select All',
        accelerator: 'CmdOrCtrl+A',
        role: 'selectAll',
      },
    ],
  },
  {
    label: 'Help',
    role: 'help',
    submenu: [
      {
        label: 'Learn More',
        click: function () {
          electron.shell.openExternal('https://github.com/NemProject/NanoWallet.git')
        },
      },
      {
        label: 'About NEM',
        click: function () {
          electron.shell.openExternal('https://nem.io/')
        },
      },
    ],
  },
]
if (process.platform === 'darwin') {
  template.unshift({
    label: name,
    submenu: [
      {
        label: `About ${name}`,
        role: 'about',
      },
      {
        type: 'separator',
      },
      {
        label: 'Services',
        role: 'services',
        submenu: [],
      },
      {
        type: 'separator',
      },
      {
        label: `Hide ${name}`,
        accelerator: 'Command+H',
        role: 'hide',
      },
      {
        label: 'Hide others',
        accelerator: 'Command+Alt+H',
        role: 'hideothers',
      },
      {
        label: 'Show',
        role: 'unhide',
      },
      {
        type: 'separator',
      },
      {
        label: 'Quit',
        accelerator: 'Command+Q',
        click: function () {
          app.quit()
        },
      },
    ],
  })
  if (process.mas) app.setName('·')
  ipcMain.on('app', (event, arg) => {
    switch (arg) {
      case 'quit':
        mainWindow.close()
        break
      case 'max':
        if (mainWindow.isMaximized()) {
          mainWindow.restore()
        } else {
          mainWindow.maximize()
        }
        break
      case 'min':
        mainWindow.minimize()
        break
    }
  })
}

if (process.platform !== 'darwin') {
  const gotTheLock = app.requestSingleInstanceLock()

  if (!gotTheLock) {
    app.quit()
  } else {
    app.on('second-instance', () => {
      // Do not allow the creation of multiple instances
      if (mainWindow) {
        if (mainWindow.isMinimized()) mainWindow.restore()
        mainWindow.focus()
      }
    })

    app.on('ready', () => {
      /** This function body is needed */
    })
  }

  ipcMain.on('app', (event, arg) => {
    switch (arg) {
      case 'quit':
        mainWindow.close()
        break
      case 'max':
        mainWindow.maximize()
        break
      case 'unMaximize':
        mainWindow.unmaximize()
        break
      case 'min':
        mainWindow.minimize()
        break
      default:
        mainWindow.unmaximize()
    }
  })
}

function initialize() {
  function createMac() {
    const size = require('electron').screen.getPrimaryDisplay().workAreaSize
    const width = parseInt(size.width)
    const widthTag = width * 0.3
    let height = width * 0.45
    if (width >= 1920) {
      mainWindow = new BrowserWindow({
        width: width - widthTag,
        height: height,
        autoHideMenuBar: false,
        resizable: true,
        webPreferences: {
          nodeIntegration: false,
          enableRemoteModule: false,
          preload: path.resolve(__dirname,'preload.js'),
          nativeWindowOpen: true,

        }
      })
    } else {
      height = parseInt((1080 * size.width) / 1920 + 30)
      mainWindow = new BrowserWindow({
        width: width - 100,
        height: height - 50,
        autoHideMenuBar: false,
        resizable: true,
        webPreferences: {
          nodeIntegration: false,
          enableRemoteModule: false,
          preload: path.resolve(__dirname,'preload.js'),
          nativeWindowOpen: true,

        }
      })
    }
    mainWindow.loadFile(loadUrlPath)
    mainWindow.on('closed', function () {
      mainWindow = null
    })
    const menu = Menu.buildFromTemplate(template)
    Menu.setApplicationMenu(menu)
  }

  function createWindow() {
    const size = electron.screen.getPrimaryDisplay().workAreaSize

    const originWidth = size.width

    let width = originWidth

    if (originWidth > 1080) {
      width = parseInt(1080 + (originWidth - 1080) * 0.5)
    }
    const height = parseInt(width / (1920 / 1080))

    const windowOptions = {

      width: width,
      height: height,
      title: app.getName(),
      titleBarStyle: 'hiddenInset',
      autoHideMenuBar: true,
      // menuBarVisible: false,
      resizable: true,
      webPreferences: {
        nodeIntegration: false,
        enableRemoteModule: false,
        preload: path.resolve(__dirname, 'preload.js'),
        nativeWindowOpen: true,
      }
    }
    windowOptions.icon = iconUrlPath
    mainWindow = new BrowserWindow(windowOptions)
    mainWindow.setMenu(null)
    mainWindow.removeMenu()
    mainWindow.loadURL(loadUrlPath)
    // mainWindow.openDevTools()

    mainWindow.once('ready-to-show', () => {
      mainWindow.show()
    })
    mainWindow.on('closed', () => {
      mainWindow = null
    })
    mainWindow.on('will-resize', (event) => {
      event.preventDefault()
    })
  }

  if (process.platform === 'darwin') {
    app.on('ready', createMac)
  } else {
    app.on('ready', createWindow)
    app.on('ready', function () {
      globalShortcut.register('CommandOrControl+R', function () {
        // do nothing to forbidden default refresh
      })
    })
  }

  app.on('web-contents-created', (e, webContents) => {
    webContents.on('new-window', (event, url) => {
      if (url.match(/^(?:http(s)?:\/\/)?[\w.-]+(?:\.[\w\.-]+)+[\w\-\._~:/?#[\]@!\$&'\(\)\*\+,;=.]+$/g)) {
        if (!url.match(/connect.trezor.io/g)) {
          event.preventDefault();
          shell.openExternal(url);
        }
      } else {
        event.preventDefault();
      }
    })
  })

  app.on('window-all-closed', function () {
    app.quit()
  })
}

initialize()

'''
'''--- gulpfile.js ---
var gulp          = require('gulp');
var notify        = require('gulp-notify');
var source        = require('vinyl-source-stream');
var browserify    = require('browserify');
var babelify      = require('babelify');
var ngAnnotate    = require('browserify-ngannotate');
var browserSync   = require('browser-sync').create();
var rename        = require('gulp-rename');
var templateCache = require('gulp-angular-templatecache');
var uglify        = require('gulp-uglify');
var merge         = require('merge-stream');
var glob          = require('glob');
var sass          = require('gulp-sass');
var autoprefixer  = require('gulp-autoprefixer');
var NwBuilder     = require('nw-builder');
var gutil         = require('gulp-util');

// Where our files are located
var jsFiles   = "src/app/**/*.js";
var viewFiles = "src/app/**/*.html";
var specFiles = "tests/specs/*.spec.js"
var specsArray = glob.sync(specFiles);

var interceptErrors = function(error) {
var args = Array.prototype.slice.call(arguments);

  // Send error to notification center with gulp-notify
  notify.onError({
    title: 'Compile Error',
    message: '<%= error.message %>'
  }).apply(this, args);

  // Keep gulp from hanging on this task
  this.emit('end');
};

var autoprefixerOptions = {
  browsers: ['last 6 versions']
};

// Task for app files
gulp.task('browserify', ['views'], function() {
    return browserify({
      extensions: ['.jsx', '.js'],
      debug: true,
      cache: {},
      packageCache: {},
      fullPaths: true,
      entries: './src/app/app.js',
    })
    // .transform(ngAnnotate)
    .transform(babelify.configure({
        presets: [['es2015', {
          targets: {
            node: "current"
          }
        }]],
        plugins: [
          "syntax-dynamic-import",
          "transform-runtime",
          "transform-async-to-generator"
        ],
        ignore: /(bower_components)|(node_modules)/
    }))
    .transform(ngAnnotate)
    .bundle()
    .on("error", interceptErrors)
    .pipe(source('main.js'))
    .pipe(gulp.dest('./build/'));
});

// Task for test files
gulp.task('browserifyTests', function() {
  return browserify(specsArray)
      // .transform(babelify, {presets: ["es2015"]})
      .transform(babelify.configure({
        presets: [['es2015', {
          targets: {
            node: "current"
          }
        }]],
        plugins: [
          "syntax-dynamic-import",
          "transform-runtime",
          "transform-async-to-generator"
        ],
        ignore: /(bower_components)|(node_modules)/
      }))
      .transform(ngAnnotate)
      .bundle()
      .on('error', interceptErrors)
      //Pass desired output filename to vinyl-source-stream
      .pipe(source('tests.js'))
      // Start piping stream to tasks!
      .pipe(gulp.dest('./build/tests/'));
});

// Just move files to build/
gulp.task('html', function() {
  return gulp.src("src/start.html")
      .on('error', interceptErrors)
      .pipe(gulp.dest('./build/'));
});

gulp.task('tests', function() {
  return gulp.src("tests/start.html")
      .on('error', interceptErrors)
      .pipe(gulp.dest('./build/tests'));
});

gulp.task('js', function() {
  return gulp.src("src/vendors/**/*")
    .on('error', interceptErrors)
    .pipe(gulp.dest('./build/vendors'));
});

gulp.task('sass', function () {
  return gulp.src('src/sass/nano.scss')
    .pipe(sass().on('error', sass.logError))
    .pipe(autoprefixer())
    .pipe(gulp.dest('./build/css'));
});

gulp.task('css', function() {
  return gulp.src('src/css/**/*')
    .on('error', interceptErrors)
    .pipe(gulp.dest('./build/css'))
})

gulp.task('images', function() {
  return gulp.src("src/images/**/*")
    .on('error', interceptErrors)
    .pipe(gulp.dest('./build/images'));
});

gulp.task('package', function() {
  return gulp.src("src/package.json")
      .on('error', interceptErrors)
      .pipe(gulp.dest('./build/'));
});

// Cache template
gulp.task('views', function() {
  return gulp.src(viewFiles)
      .pipe(templateCache({
        standalone: true
      }))
      .on('error', interceptErrors)
      .pipe(rename("app.templates.js"))
      .pipe(gulp.dest('./src/app/config/'));
});

// Build App
gulp.task('app', function () {
    var nw = new NwBuilder({
        version: '0.25.4',
        files: './build/**',
        buildDir: './dist',
        buildType: 'versioned',
        winIco: './build/images/logomark.ico',
        macIcns: './build/images/NanoWallet.icns',
        platforms: ['win64', 'osx64', 'linux64']
    });
    // Log stuff you want
    nw.on('log', function (msg) {
        gutil.log('nw-builder', msg);
    });
    // Build returns a promise, return it so the task isn't called in parallel
    return nw.build().catch(function (err) {
        gutil.log('nw-builder', err);
    });
  });

// Run Tasks
gulp.task('default', ['html', 'js', 'sass', 'css', 'images', 'package', 'browserify', 'tests', 'browserifyTests'], function() {
});

// Build packaged apps for production
gulp.task('build-app', ['html', 'js', 'sass', 'css', 'images', 'package', 'app'], function() {
});

'''
'''--- package-lock.json ---
{
  "name": "NEM-Wallet",
  "version": "2.6.0",
  "lockfileVersion": 1,
  "requires": true,
  "dependencies": {
    "7zip-bin": {
      "version": "5.0.3",
      "resolved": "https://registry.npmjs.org/7zip-bin/-/7zip-bin-5.0.3.tgz",
      "integrity": "sha512-GLyWIFBbGvpKPGo55JyRZAo4lVbnBiD52cKlw/0Vt+wnmKvWJkpZvsjVoaIolyBXDeAQKSicRtqFNPem9w0WYA==",
      "dev": true
    },
    "@babel/runtime": {
      "version": "7.12.5",
      "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.12.5.tgz",
      "integrity": "sha512-plcc+hbExy3McchJCEQG3knOsuh3HH+Prx1P6cLIkET/0dLuQDEnrT+s27Axgc9bqfsmNUNHfscgMUdBpC9xfg==",
      "dev": true,
      "requires": {
        "regenerator-runtime": "^0.13.4"
      }
    },
    "@develar/schema-utils": {
      "version": "2.6.5",
      "resolved": "https://registry.npmjs.org/@develar/schema-utils/-/schema-utils-2.6.5.tgz",
      "integrity": "sha512-0cp4PsWQ/9avqTVMCtZ+GirikIA36ikvjtHweU4/j8yLtgObI0+JUPhYFScgwlteveGB1rt3Cm8UhN04XayDig==",
      "dev": true,
      "requires": {
        "ajv": "^6.12.0",
        "ajv-keywords": "^3.4.1"
      },
      "dependencies": {
        "ajv": {
          "version": "6.12.6",
          "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
          "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
          "dev": true,
          "requires": {
            "fast-deep-equal": "^3.1.1",
            "fast-json-stable-stringify": "^2.0.0",
            "json-schema-traverse": "^0.4.1",
            "uri-js": "^4.2.2"
          }
        }
      }
    },
    "@electron/get": {
      "version": "1.12.4",
      "resolved": "https://registry.npmjs.org/@electron/get/-/get-1.12.4.tgz",
      "integrity": "sha512-6nr9DbJPUR9Xujw6zD3y+rS95TyItEVM0NVjt1EehY2vUWfIgPiIPVHxCvaTS0xr2B+DRxovYVKbuOWqC35kjg==",
      "dev": true,
      "requires": {
        "debug": "^4.1.1",
        "env-paths": "^2.2.0",
        "fs-extra": "^8.1.0",
        "global-agent": "^2.0.2",
        "global-tunnel-ng": "^2.7.1",
        "got": "^9.6.0",
        "progress": "^2.0.3",
        "semver": "^6.2.0",
        "sumchecker": "^3.0.1"
      },
      "dependencies": {
        "debug": {
          "version": "4.3.1",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.1.tgz",
          "integrity": "sha512-doEwdvm4PCeK4K3RQN2ZC2BYUBaxwLARCqZmMjtF8a51J2Rb0xpVloFRnCODwqjpwnAoao4pelN8l3RJdv3gRQ==",
          "dev": true,
          "requires": {
            "ms": "2.1.2"
          }
        },
        "decompress-response": {
          "version": "3.3.0",
          "resolved": "https://registry.npmjs.org/decompress-response/-/decompress-response-3.3.0.tgz",
          "integrity": "sha1-gKTdMjdIOEv6JICDYirt7Jgq3/M=",
          "dev": true,
          "requires": {
            "mimic-response": "^1.0.0"
          }
        },
        "end-of-stream": {
          "version": "1.4.4",
          "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz",
          "integrity": "sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==",
          "dev": true,
          "requires": {
            "once": "^1.4.0"
          }
        },
        "fs-extra": {
          "version": "8.1.0",
          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-8.1.0.tgz",
          "integrity": "sha512-yhlQgA6mnOJUKOsRUFsgJdQCvkKhcz8tlZG5HBQfReYZy46OwLcY+Zia0mtdHsOo9y/hP+CxMN0TU9QxoOtG4g==",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.2.0",
            "jsonfile": "^4.0.0",
            "universalify": "^0.1.0"
          }
        },
        "get-stream": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-4.1.0.tgz",
          "integrity": "sha512-GMat4EJ5161kIy2HevLlr4luNjBgvmj413KaQA7jt4V8B4RDsfpHk7WQ9GVqfYyyx8OS/L66Kox+rJRNklLK7w==",
          "dev": true,
          "requires": {
            "pump": "^3.0.0"
          }
        },
        "got": {
          "version": "9.6.0",
          "resolved": "https://registry.npmjs.org/got/-/got-9.6.0.tgz",
          "integrity": "sha512-R7eWptXuGYxwijs0eV+v3o6+XH1IqVK8dJOEecQfTmkncw9AV4dcw/Dhxi8MdlqPthxxpZyizMzyg8RTmEsG+Q==",
          "dev": true,
          "requires": {
            "@sindresorhus/is": "^0.14.0",
            "@szmarczak/http-timer": "^1.1.2",
            "cacheable-request": "^6.0.0",
            "decompress-response": "^3.3.0",
            "duplexer3": "^0.1.4",
            "get-stream": "^4.1.0",
            "lowercase-keys": "^1.0.1",
            "mimic-response": "^1.0.1",
            "p-cancelable": "^1.0.0",
            "to-readable-stream": "^1.0.0",
            "url-parse-lax": "^3.0.0"
          }
        },
        "jsonfile": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-4.0.0.tgz",
          "integrity": "sha1-h3Gq4HmbZAdrdmQPygWPnBDjPss=",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.1.6"
          }
        },
        "mimic-response": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-1.0.1.tgz",
          "integrity": "sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ==",
          "dev": true
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
          "dev": true
        },
        "prepend-http": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/prepend-http/-/prepend-http-2.0.0.tgz",
          "integrity": "sha1-6SQ0v6XqjBn0HN/UAddBo8gZ2Jc=",
          "dev": true
        },
        "pump": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/pump/-/pump-3.0.0.tgz",
          "integrity": "sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==",
          "dev": true,
          "requires": {
            "end-of-stream": "^1.1.0",
            "once": "^1.3.1"
          }
        },
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        },
        "url-parse-lax": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/url-parse-lax/-/url-parse-lax-3.0.0.tgz",
          "integrity": "sha1-FrXK/Afb42dsGxmZF3gj1lA6yww=",
          "dev": true,
          "requires": {
            "prepend-http": "^2.0.0"
          }
        }
      }
    },
    "@js-joda/core": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/@js-joda/core/-/core-3.2.0.tgz",
      "integrity": "sha512-PMqgJ0sw5B7FKb2d5bWYIoxjri+QlW/Pys7+Rw82jSH0QN3rB05jZ/VrrsUdh1w4+i2kw9JOejXGq/KhDOX7Kg==",
      "dev": true
    },
    "@ledgerhq/devices": {
      "version": "5.43.0",
      "resolved": "https://registry.npmjs.org/@ledgerhq/devices/-/devices-5.43.0.tgz",
      "integrity": "sha512-/M5ZLUBdBK7Vl2T4yNJbES3Z4w55LbPdxD9rcOBAKH/5V3V0obQv6MUasP9b7DSkwGSSLCOGZLohoT2NxK2D2A==",
      "requires": {
        "@ledgerhq/errors": "^5.43.0",
        "@ledgerhq/logs": "^5.43.0",
        "rxjs": "^6.6.3",
        "semver": "^7.3.4"
      },
      "dependencies": {
        "lru-cache": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz",
          "integrity": "sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==",
          "requires": {
            "yallist": "^4.0.0"
          }
        },
        "rxjs": {
          "version": "6.6.3",
          "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-6.6.3.tgz",
          "integrity": "sha512-trsQc+xYYXZ3urjOiJOuCOa5N3jAZ3eiSpQB5hIT8zGlL2QfnHLJ2r7GMkBGuIausdJN1OneaI6gQlsqNHHmZQ==",
          "requires": {
            "tslib": "^1.9.0"
          }
        },
        "semver": {
          "version": "7.3.4",
          "resolved": "https://registry.npmjs.org/semver/-/semver-7.3.4.tgz",
          "integrity": "sha512-tCfb2WLjqFAtXn4KEdxIhalnRtoKFN7nAwj0B3ZXCbQloV2tq5eDbcTmT68JJD3nRJq24/XgxtQKFIpQdtvmVw==",
          "requires": {
            "lru-cache": "^6.0.0"
          }
        },
        "yallist": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
          "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A=="
        }
      }
    },
    "@ledgerhq/errors": {
      "version": "5.43.0",
      "resolved": "https://registry.npmjs.org/@ledgerhq/errors/-/errors-5.43.0.tgz",
      "integrity": "sha512-ZjKlUQbIn/DHXAefW3Y1VyDrlVhVqqGnXzrqbOXuDbZ2OAIfSe/A1mrlCbWt98jP/8EJQBuCzBOtnmpXIL/nYg=="
    },
    "@ledgerhq/hw-transport": {
      "version": "5.43.0",
      "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport/-/hw-transport-5.43.0.tgz",
      "integrity": "sha512-0S+TGmiEJOqgM2MWnolZQPVKU3oRtoDj4yUFUZts9Owbgby+hmo4dIKTvv0vs8mwknQbOZByUgh3MQOQiK70MQ==",
      "requires": {
        "@ledgerhq/devices": "^5.43.0",
        "@ledgerhq/errors": "^5.43.0",
        "events": "^3.2.0"
      },
      "dependencies": {
        "events": {
          "version": "3.2.0",
          "resolved": "https://registry.npmjs.org/events/-/events-3.2.0.tgz",
          "integrity": "sha512-/46HWwbfCX2xTawVfkKLGxMifJYQBWMwY1mjywRtb4c9x8l5NP3KoJtnIOiL1hfdRkIuYhETxQlo62IF8tcnlg=="
        }
      }
    },
    "@ledgerhq/hw-transport-node-hid-noevents": {
      "version": "5.43.0",
      "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport-node-hid-noevents/-/hw-transport-node-hid-noevents-5.43.0.tgz",
      "integrity": "sha512-3TqeVTFslJdaAPgQh9qqRN6MuEkDNA9talEdm6k6osB3aIG3I67TNMTOY32nWdyeGx9VuEw0guUN1KJpxWQ1rg==",
      "requires": {
        "@ledgerhq/devices": "^5.43.0",
        "@ledgerhq/errors": "^5.43.0",
        "@ledgerhq/hw-transport": "^5.43.0",
        "@ledgerhq/logs": "^5.43.0",
        "node-hid": "2.1.1"
      }
    },
    "@ledgerhq/logs": {
      "version": "5.43.0",
      "resolved": "https://registry.npmjs.org/@ledgerhq/logs/-/logs-5.43.0.tgz",
      "integrity": "sha512-QWfQjea3ekh9ZU+JeL2tJC9cTKLZ/JrcS0JGatLejpRYxQajvnHvHfh0dbHOKXEaXfCskEPTZ3f1kzuts742GA=="
    },
    "@malept/cross-spawn-promise": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@malept/cross-spawn-promise/-/cross-spawn-promise-1.1.1.tgz",
      "integrity": "sha512-RTBGWL5FWQcg9orDOCcp4LvItNzUPcyEU9bwaeJX0rJ1IQxzucC48Y0/sQLp/g6t99IQgAlGIaesJS+gTn7tVQ==",
      "dev": true,
      "requires": {
        "cross-spawn": "^7.0.1"
      },
      "dependencies": {
        "cross-spawn": {
          "version": "7.0.3",
          "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz",
          "integrity": "sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==",
          "dev": true,
          "requires": {
            "path-key": "^3.1.0",
            "shebang-command": "^2.0.0",
            "which": "^2.0.1"
          }
        },
        "path-key": {
          "version": "3.1.1",
          "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
          "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
          "dev": true
        },
        "shebang-command": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
          "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
          "dev": true,
          "requires": {
            "shebang-regex": "^3.0.0"
          }
        },
        "shebang-regex": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
          "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
          "dev": true
        },
        "which": {
          "version": "2.0.2",
          "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
          "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
          "dev": true,
          "requires": {
            "isexe": "^2.0.0"
          }
        }
      }
    },
    "@pdf-lib/fontkit": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/@pdf-lib/fontkit/-/fontkit-1.0.0.tgz",
      "integrity": "sha512-C1Hn6wqRMAXZMW5vTa/oCvcTPq0FQsqKKP2mzzzMxUcx0BWZuJKeH4ZRS320y0LKvRBEs1ntFG2txstSsMGr2g==",
      "dev": true,
      "requires": {
        "pako": "^1.0.6"
      },
      "dependencies": {
        "pako": {
          "version": "1.0.11",
          "resolved": "https://registry.npmjs.org/pako/-/pako-1.0.11.tgz",
          "integrity": "sha512-4hLB8Py4zZce5s4yd9XzopqwVv/yGNhV1Bl8NTmCq1763HeK2+EwVTv+leGeL13Dnh2wfbqowVPXCIO0z4taYw==",
          "dev": true
        }
      }
    },
    "@pdf-lib/standard-fonts": {
      "version": "0.0.4",
      "resolved": "https://registry.npmjs.org/@pdf-lib/standard-fonts/-/standard-fonts-0.0.4.tgz",
      "integrity": "sha512-2pg8hXnChVAF6aSFraXtwB0cx/AgE15FvuLJbdPJSq9LYp1xMp0lapH4+t1HsdD9cA05rnWYLqlEBwS4YK1jLg==",
      "dev": true,
      "requires": {
        "base64-arraybuffer": "^0.1.5",
        "pako": "^1.0.6"
      },
      "dependencies": {
        "base64-arraybuffer": {
          "version": "0.1.5",
          "resolved": "https://registry.npmjs.org/base64-arraybuffer/-/base64-arraybuffer-0.1.5.tgz",
          "integrity": "sha1-c5JncZI7Whl0etZmqlzUv5xunOg=",
          "dev": true
        },
        "pako": {
          "version": "1.0.11",
          "resolved": "https://registry.npmjs.org/pako/-/pako-1.0.11.tgz",
          "integrity": "sha512-4hLB8Py4zZce5s4yd9XzopqwVv/yGNhV1Bl8NTmCq1763HeK2+EwVTv+leGeL13Dnh2wfbqowVPXCIO0z4taYw==",
          "dev": true
        }
      }
    },
    "@pdf-lib/upng": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/@pdf-lib/upng/-/upng-1.0.1.tgz",
      "integrity": "sha512-dQK2FUMQtowVP00mtIksrlZhdFXQZPC+taih1q4CvPZ5vqdxR/LKBaFg0oAfzd1GlHZXXSPdQfzQnt+ViGvEIQ==",
      "dev": true,
      "requires": {
        "pako": "^1.0.10"
      },
      "dependencies": {
        "pako": {
          "version": "1.0.11",
          "resolved": "https://registry.npmjs.org/pako/-/pako-1.0.11.tgz",
          "integrity": "sha512-4hLB8Py4zZce5s4yd9XzopqwVv/yGNhV1Bl8NTmCq1763HeK2+EwVTv+leGeL13Dnh2wfbqowVPXCIO0z4taYw==",
          "dev": true
        }
      }
    },
    "@sindresorhus/is": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@sindresorhus/is/-/is-0.14.0.tgz",
      "integrity": "sha512-9NET910DNaIPngYnLLPeg+Ogzqsi9uM4mSboU5y6p8S5DzMTVEsJZrawi+BoDNUVBa2DhJqQYUFvMDfgU062LQ==",
      "dev": true
    },
    "@stomp/stompjs": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/@stomp/stompjs/-/stompjs-3.1.2.tgz",
      "integrity": "sha512-cSMe/PRAJ8Z+A+X3KodLABRwffEm7QHPvrnOo6Pd1MJfwnBm+XT25m/WRZqB/qykfgRo7v0f+UvSJRUpj9dCCw==",
      "dev": true,
      "requires": {
        "websocket": "^1.0.24"
      }
    },
    "@szmarczak/http-timer": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@szmarczak/http-timer/-/http-timer-1.1.2.tgz",
      "integrity": "sha512-XIB2XbzHTN6ieIjfIMV9hlVcfPU26s2vafYWQcZHWXHOxiaRZYEDKEwdl129Zyg50+foYV2jCgtrqSA6qNuNSA==",
      "dev": true,
      "requires": {
        "defer-to-connect": "^1.0.1"
      }
    },
    "@types/bip32": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/@types/bip32/-/bip32-1.0.2.tgz",
      "integrity": "sha512-gqkz3Jq2OA3s5QOHe7de9tUzW7Xjoct6ImCbt0KQnF0ParqDSvLo5Fu+mKQykFF1fgIcdzEmm0CO6HN+xG2SAA==",
      "dev": true,
      "requires": {
        "@types/node": "*"
      }
    },
    "@types/bluebird": {
      "version": "3.5.33",
      "resolved": "https://registry.npmjs.org/@types/bluebird/-/bluebird-3.5.33.tgz",
      "integrity": "sha512-ndEo1xvnYeHxm7I/5sF6tBvnsA4Tdi3zj1keRKRs12SP+2ye2A27NDJ1B6PqkfMbGAcT+mqQVqbZRIrhfOp5PQ==",
      "dev": true
    },
    "@types/cacheable-request": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/@types/cacheable-request/-/cacheable-request-6.0.1.tgz",
      "integrity": "sha512-ykFq2zmBGOCbpIXtoVbz4SKY5QriWPh3AjyU4G74RYbtt5yOc5OfaY75ftjg7mikMOla1CTGpX3lLbuJh8DTrQ==",
      "dev": true,
      "requires": {
        "@types/http-cache-semantics": "*",
        "@types/keyv": "*",
        "@types/node": "*",
        "@types/responselike": "*"
      }
    },
    "@types/caseless": {
      "version": "0.12.2",
      "resolved": "https://registry.npmjs.org/@types/caseless/-/caseless-0.12.2.tgz",
      "integrity": "sha512-6ckxMjBBD8URvjB6J3NcnuAn5Pkl7t3TizAg+xdlzzQGSPSmBcXf8KoIH0ua/i+tio+ZRUHEXp0HEmvaR4kt0w==",
      "dev": true
    },
    "@types/debug": {
      "version": "4.1.5",
      "resolved": "https://registry.npmjs.org/@types/debug/-/debug-4.1.5.tgz",
      "integrity": "sha512-Q1y515GcOdTHgagaVFhHnIFQ38ygs/kmxdNpvpou+raI9UO3YZcHDngBSYKQklcKlvA7iuQlmIKbzvmxcOE9CQ==",
      "dev": true
    },
    "@types/fs-extra": {
      "version": "9.0.5",
      "resolved": "https://registry.npmjs.org/@types/fs-extra/-/fs-extra-9.0.5.tgz",
      "integrity": "sha512-wr3t7wIW1c0A2BIJtdVp4EflriVaVVAsCAIHVzzh8B+GiFv9X1xeJjCs4upRXtzp7kQ6lP5xvskjoD4awJ1ZeA==",
      "dev": true,
      "requires": {
        "@types/node": "*"
      }
    },
    "@types/glob": {
      "version": "7.1.3",
      "resolved": "https://registry.npmjs.org/@types/glob/-/glob-7.1.3.tgz",
      "integrity": "sha512-SEYeGAIQIQX8NN6LDKprLjbrd5dARM5EXsd8GI/A5l0apYI1fGMWgPHSe4ZKL4eozlAyI+doUE9XbYS4xCkQ1w==",
      "dev": true,
      "optional": true,
      "requires": {
        "@types/minimatch": "*",
        "@types/node": "*"
      }
    },
    "@types/http-cache-semantics": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/@types/http-cache-semantics/-/http-cache-semantics-4.0.0.tgz",
      "integrity": "sha512-c3Xy026kOF7QOTn00hbIllV1dLR9hG9NkSrLQgCVs8NF6sBU+VGWjD3wLPhmh1TYAc7ugCFsvHYMN4VcBN1U1A==",
      "dev": true
    },
    "@types/keyv": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/@types/keyv/-/keyv-3.1.1.tgz",
      "integrity": "sha512-MPtoySlAZQ37VoLaPcTHCu1RWJ4llDkULYZIzOYxlhxBqYPB0RsRlmMU0R6tahtFe27mIdkHV+551ZWV4PLmVw==",
      "dev": true,
      "requires": {
        "@types/node": "*"
      }
    },
    "@types/minimatch": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/@types/minimatch/-/minimatch-3.0.3.tgz",
      "integrity": "sha512-tHq6qdbT9U1IRSGf14CL0pUlULksvY9OZ+5eEgl1N7t+OA3tGvNpxJCzuKQlsNgCVwbAs670L1vcVQi8j9HjnA==",
      "dev": true,
      "optional": true
    },
    "@types/node": {
      "version": "14.14.14",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-14.14.14.tgz",
      "integrity": "sha512-UHnOPWVWV1z+VV8k6L1HhG7UbGBgIdghqF3l9Ny9ApPghbjICXkUJSd/b9gOgQfjM1r+37cipdw/HJ3F6ICEnQ==",
      "dev": true
    },
    "@types/request": {
      "version": "2.48.5",
      "resolved": "https://registry.npmjs.org/@types/request/-/request-2.48.5.tgz",
      "integrity": "sha512-/LO7xRVnL3DxJ1WkPGDQrp4VTV1reX9RkC85mJ+Qzykj2Bdw+mG15aAfDahc76HtknjzE16SX/Yddn6MxVbmGQ==",
      "dev": true,
      "requires": {
        "@types/caseless": "*",
        "@types/node": "*",
        "@types/tough-cookie": "*",
        "form-data": "^2.5.0"
      },
      "dependencies": {
        "form-data": {
          "version": "2.5.1",
          "resolved": "https://registry.npmjs.org/form-data/-/form-data-2.5.1.tgz",
          "integrity": "sha512-m21N3WOmEEURgk6B9GLOE4RuWOFf28Lhh9qGYeNlGq4VDXUlJy2th2slBNU8Gp8EzloYZOibZJ7t5ecIrFSjVA==",
          "dev": true,
          "requires": {
            "asynckit": "^0.4.0",
            "combined-stream": "^1.0.6",
            "mime-types": "^2.1.12"
          }
        }
      }
    },
    "@types/responselike": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/@types/responselike/-/responselike-1.0.0.tgz",
      "integrity": "sha512-85Y2BjiufFzaMIlvJDvTTB8Fxl2xfLo4HgmHzVBz08w4wDePCTjYw66PdrolO0kzli3yam/YCgRufyo1DdQVTA==",
      "dev": true,
      "requires": {
        "@types/node": "*"
      }
    },
    "@types/semver": {
      "version": "7.3.4",
      "resolved": "https://registry.npmjs.org/@types/semver/-/semver-7.3.4.tgz",
      "integrity": "sha512-+nVsLKlcUCeMzD2ufHEYuJ9a2ovstb6Dp52A5VsoKxDXgvE051XgHI/33I1EymwkRGQkwnA0LkhnUzituGs4EQ==",
      "dev": true
    },
    "@types/tough-cookie": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/@types/tough-cookie/-/tough-cookie-4.0.0.tgz",
      "integrity": "sha512-I99sngh224D0M7XgW1s120zxCt3VYQ3IQsuw3P3jbq5GG4yc79+ZjyKznyOGIQrflfylLgcfekeZW/vk0yng6A==",
      "dev": true
    },
    "@types/yargs": {
      "version": "15.0.12",
      "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-15.0.12.tgz",
      "integrity": "sha512-f+fD/fQAo3BCbCDlrUpznF1A5Zp9rB0noS5vnoormHSIPFKL0Z2DcUJ3Gxp5ytH4uLRNxy7AwYUC9exZzqGMAw==",
      "dev": true,
      "requires": {
        "@types/yargs-parser": "*"
      }
    },
    "@types/yargs-parser": {
      "version": "15.0.0",
      "resolved": "https://registry.npmjs.org/@types/yargs-parser/-/yargs-parser-15.0.0.tgz",
      "integrity": "sha512-FA/BWv8t8ZWJ+gEOnLLd8ygxH/2UFbAvgEonyfN6yWGLKc7zVjbpl2Y4CTjid9h2RfgPP6SEt6uHwEOply00yw==",
      "dev": true
    },
    "@types/yauzl": {
      "version": "2.9.1",
      "resolved": "https://registry.npmjs.org/@types/yauzl/-/yauzl-2.9.1.tgz",
      "integrity": "sha512-A1b8SU4D10uoPjwb0lnHmmu8wZhR9d+9o2PKBQT2jU5YPTKsxac6M2qGAdY7VcL+dHHhARVUDmeg0rOrcd9EjA==",
      "dev": true,
      "optional": true,
      "requires": {
        "@types/node": "*"
      }
    },
    "@uirouter/angularjs": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/@uirouter/angularjs/-/angularjs-1.0.6.tgz",
      "integrity": "sha512-wpC7t+wv5wM+jRr2nd80q4CxXl/igMKHkgYO2DHTC/ZSW+dBWkKEn2+H6AGMBrpKiEOfkjCokA43fqog10tQkQ==",
      "dev": true,
      "requires": {
        "@uirouter/core": "=5.0.6"
      }
    },
    "@uirouter/core": {
      "version": "5.0.6",
      "resolved": "https://registry.npmjs.org/@uirouter/core/-/core-5.0.6.tgz",
      "integrity": "sha512-JnnXn3mhSdUa4YwUJ0ZKpPZ6b4l1TBRKKqGAFN/xnbjj0upaYErP56n5Rc6XV+arQmjKEg8Y/Mn0yW3TefYYCw==",
      "dev": true
    },
    "JSONStream": {
      "version": "1.3.5",
      "resolved": "https://registry.npmjs.org/JSONStream/-/JSONStream-1.3.5.tgz",
      "integrity": "sha512-E+iruNOY8VV9s4JEbe1aNEm6MiszPRr/UfcHMz0TQh1BXSxHK+ASV1R6W4HpjBhSeS+54PIsAMCBmwD06LLsqQ==",
      "dev": true,
      "requires": {
        "jsonparse": "^1.2.0",
        "through": ">=2.2.7 <3"
      }
    },
    "abbrev": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/abbrev/-/abbrev-1.1.1.tgz",
      "integrity": "sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q==",
      "dev": true
    },
    "accepts": {
      "version": "1.3.7",
      "resolved": "https://registry.npmjs.org/accepts/-/accepts-1.3.7.tgz",
      "integrity": "sha512-Il80Qs2WjYlJIBNzNkK6KYqlVMTbZLXgHx2oT0pU/fjRHyEp+PEfEPY0R3WCwAGVOtauxh1hOxNgIf5bv7dQpA==",
      "dev": true,
      "requires": {
        "mime-types": "~2.1.24",
        "negotiator": "0.6.2"
      }
    },
    "acorn": {
      "version": "7.4.1",
      "resolved": "https://registry.npmjs.org/acorn/-/acorn-7.4.1.tgz",
      "integrity": "sha512-nQyp0o1/mNdbTO1PO6kHkwSrmgZ0MT/jCCpNiwbUjGoRN4dlBhqJtoQuCnEOKzgTVwg0ZWiCoQy6SxMebQVh8A==",
      "dev": true
    },
    "acorn-node": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/acorn-node/-/acorn-node-1.8.2.tgz",
      "integrity": "sha512-8mt+fslDufLYntIoPAaIMUe/lrbrehIiwmR3t2k9LljIzoigEPF27eLk2hy8zSGzmR/ogr7zbRKINMo1u0yh5A==",
      "dev": true,
      "requires": {
        "acorn": "^7.0.0",
        "acorn-walk": "^7.0.0",
        "xtend": "^4.0.2"
      }
    },
    "acorn-walk": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/acorn-walk/-/acorn-walk-7.2.0.tgz",
      "integrity": "sha512-OPdCF6GsMIP+Az+aWfAAOEt2/+iVDKE7oy6lJ098aoe59oAmK76qV6Gw60SbZ8jHuG2wH058GF4pLFbYamYrVA==",
      "dev": true
    },
    "after": {
      "version": "0.8.2",
      "resolved": "https://registry.npmjs.org/after/-/after-0.8.2.tgz",
      "integrity": "sha1-/ts5T58OAqqXaOcCvaI7UF+ufh8=",
      "dev": true
    },
    "ajv": {
      "version": "4.11.8",
      "resolved": "https://registry.npmjs.org/ajv/-/ajv-4.11.8.tgz",
      "integrity": "sha1-gv+wKynmYq5TvcIK8VlHcGc5xTY=",
      "dev": true,
      "requires": {
        "co": "^4.6.0",
        "json-stable-stringify": "^1.0.1"
      },
      "dependencies": {
        "json-stable-stringify": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/json-stable-stringify/-/json-stable-stringify-1.0.1.tgz",
          "integrity": "sha1-mnWdOcXy/1A/1TAGRu1EX4jE+a8=",
          "dev": true,
          "requires": {
            "jsonify": "~0.0.0"
          }
        }
      }
    },
    "ajv-keywords": {
      "version": "3.5.2",
      "resolved": "https://registry.npmjs.org/ajv-keywords/-/ajv-keywords-3.5.2.tgz",
      "integrity": "sha512-5p6WTN0DdTGVQk6VjcEju19IgaHudalcfabD7yhDGeA6bcQnmL+CpveLJq/3hvfwd1aof6L386Ougkx6RfyMIQ==",
      "dev": true
    },
    "align-text": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/align-text/-/align-text-0.1.4.tgz",
      "integrity": "sha1-DNkKVhCT810KmSVsIrcGlDP60Rc=",
      "dev": true,
      "requires": {
        "kind-of": "^3.0.2",
        "longest": "^1.0.1",
        "repeat-string": "^1.5.2"
      }
    },
    "alter": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/alter/-/alter-0.2.0.tgz",
      "integrity": "sha1-x1iICGF1cgNKrmJICvJrHU0cs80=",
      "dev": true,
      "requires": {
        "stable": "~0.1.3"
      }
    },
    "amdefine": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/amdefine/-/amdefine-1.0.1.tgz",
      "integrity": "sha1-SlKCrBZHKek2Gbz9OtFR+BfOkfU=",
      "dev": true
    },
    "angular": {
      "version": "1.6.2",
      "resolved": "https://registry.npmjs.org/angular/-/angular-1.6.2.tgz",
      "integrity": "sha1-0LZ3JCrEv5roFCQpfGMglzr0u1o=",
      "dev": true
    },
    "angular-animate": {
      "version": "1.6.2",
      "resolved": "https://registry.npmjs.org/angular-animate/-/angular-animate-1.6.2.tgz",
      "integrity": "sha1-3vKoue3lO0tuI0wl9cZOS0OF3xU=",
      "dev": true
    },
    "angular-chart.js": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/angular-chart.js/-/angular-chart.js-1.0.0.tgz",
      "integrity": "sha1-eZF0/Cr1qMyaiH3e25COpMS8hVA=",
      "dev": true,
      "requires": {
        "angular": "1.x",
        "chart.js": "2.x"
      }
    },
    "angular-mocks": {
      "version": "1.6.2",
      "resolved": "https://registry.npmjs.org/angular-mocks/-/angular-mocks-1.6.2.tgz",
      "integrity": "sha1-+7KCCOdNNRJ2mv24dx9cxamfkSg=",
      "dev": true
    },
    "angular-sanitize": {
      "version": "1.6.2",
      "resolved": "https://registry.npmjs.org/angular-sanitize/-/angular-sanitize-1.6.2.tgz",
      "integrity": "sha1-ijJ8GsssFPUNpbXK1epFJ1Cho3U=",
      "dev": true
    },
    "angular-translate": {
      "version": "2.11.0",
      "resolved": "https://registry.npmjs.org/angular-translate/-/angular-translate-2.11.0.tgz",
      "integrity": "sha1-K59CHxPzZEZgVns8IqhiRTgmsUc=",
      "dev": true,
      "requires": {
        "angular": ">=1.2.26 <=1.6"
      }
    },
    "ansi-align": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ansi-align/-/ansi-align-2.0.0.tgz",
      "integrity": "sha1-w2rsy6VjuJzrVW82kPCx2eNUf38=",
      "dev": true,
      "requires": {
        "string-width": "^2.0.0"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
          "integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg=",
          "dev": true
        },
        "string-width": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-2.1.1.tgz",
          "integrity": "sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==",
          "dev": true,
          "requires": {
            "is-fullwidth-code-point": "^2.0.0",
            "strip-ansi": "^4.0.0"
          }
        },
        "strip-ansi": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
          "integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
          "dev": true,
          "requires": {
            "ansi-regex": "^3.0.0"
          }
        }
      }
    },
    "ansi-escapes": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-3.2.0.tgz",
      "integrity": "sha512-cBhpre4ma+U0T1oM5fXg7Dy1Jw7zzwv7lt/GoCpr+hDQJoYnKVPLL4dCvSEFMmQurOQvSrwT7SL/DAlhBI97RQ==",
      "dev": true
    },
    "ansi-gray": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/ansi-gray/-/ansi-gray-0.1.1.tgz",
      "integrity": "sha1-KWLPVOyXksSFEKPetSRDaGHvclE=",
      "dev": true,
      "requires": {
        "ansi-wrap": "0.1.0"
      }
    },
    "ansi-regex": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",
      "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8="
    },
    "ansi-styles": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",
      "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=",
      "dev": true
    },
    "ansi-wrap": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/ansi-wrap/-/ansi-wrap-0.1.0.tgz",
      "integrity": "sha1-qCJQ3bABXponyoLoLqYDu/pF768=",
      "dev": true
    },
    "ansicolors": {
      "version": "0.3.2",
      "resolved": "https://registry.npmjs.org/ansicolors/-/ansicolors-0.3.2.tgz",
      "integrity": "sha1-ZlWX3oap/+Oqm/vmyuXG6kJrSXk=",
      "dev": true
    },
    "any-promise": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/any-promise/-/any-promise-1.3.0.tgz",
      "integrity": "sha1-q8av7tzqUugJzcA3au0845Y10X8=",
      "dev": true
    },
    "anymatch": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.1.tgz",
      "integrity": "sha512-mM8522psRCqzV+6LhomX5wgp25YVibjh8Wj23I5RPkPppSVSjyKD2A2mBJmWGa+KN7f2D6LNh9jkBCeyLktzjg==",
      "dev": true,
      "requires": {
        "normalize-path": "^3.0.0",
        "picomatch": "^2.0.4"
      }
    },
    "app-builder-bin": {
      "version": "3.5.10",
      "resolved": "https://registry.npmjs.org/app-builder-bin/-/app-builder-bin-3.5.10.tgz",
      "integrity": "sha512-Jd+GW68lR0NeetgZDo47PdWBEPdnD+p0jEa7XaxjRC8u6Oo/wgJsfKUkORRgr2NpkD19IFKN50P6JYy04XHFLQ==",
      "dev": true
    },
    "app-builder-lib": {
      "version": "22.9.1",
      "resolved": "https://registry.npmjs.org/app-builder-lib/-/app-builder-lib-22.9.1.tgz",
      "integrity": "sha512-KfXim/fiNwFW2SKffsjEMdAU7RbbEXn62x5YyXle1b4j9X/wEHW9iwox8De6y0hJdR+/kCC/49lI+VgNwLhV7A==",
      "dev": true,
      "requires": {
        "7zip-bin": "~5.0.3",
        "@develar/schema-utils": "~2.6.5",
        "async-exit-hook": "^2.0.1",
        "bluebird-lst": "^1.0.9",
        "builder-util": "22.9.1",
        "builder-util-runtime": "8.7.2",
        "chromium-pickle-js": "^0.2.0",
        "debug": "^4.3.0",
        "ejs": "^3.1.5",
        "electron-publish": "22.9.1",
        "fs-extra": "^9.0.1",
        "hosted-git-info": "^3.0.5",
        "is-ci": "^2.0.0",
        "isbinaryfile": "^4.0.6",
        "js-yaml": "^3.14.0",
        "lazy-val": "^1.0.4",
        "minimatch": "^3.0.4",
        "normalize-package-data": "^2.5.0",
        "read-config-file": "6.0.0",
        "sanitize-filename": "^1.6.3",
        "semver": "^7.3.2",
        "temp-file": "^3.3.7"
      },
      "dependencies": {
        "ci-info": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-2.0.0.tgz",
          "integrity": "sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ==",
          "dev": true
        },
        "debug": {
          "version": "4.3.1",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.1.tgz",
          "integrity": "sha512-doEwdvm4PCeK4K3RQN2ZC2BYUBaxwLARCqZmMjtF8a51J2Rb0xpVloFRnCODwqjpwnAoao4pelN8l3RJdv3gRQ==",
          "dev": true,
          "requires": {
            "ms": "2.1.2"
          }
        },
        "fs-extra": {
          "version": "9.0.1",
          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-9.0.1.tgz",
          "integrity": "sha512-h2iAoN838FqAFJY2/qVpzFXy+EBxfVE220PalAqQLDVsFOHLJrZvut5puAbCdNv6WJk+B8ihI+k0c7JK5erwqQ==",
          "dev": true,
          "requires": {
            "at-least-node": "^1.0.0",
            "graceful-fs": "^4.2.0",
            "jsonfile": "^6.0.1",
            "universalify": "^1.0.0"
          }
        },
        "hosted-git-info": {
          "version": "3.0.7",
          "resolved": "https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-3.0.7.tgz",
          "integrity": "sha512-fWqc0IcuXs+BmE9orLDyVykAG9GJtGLGuZAAqgcckPgv5xad4AcXGIv8galtQvlwutxSlaMcdw7BUtq2EIvqCQ==",
          "dev": true,
          "requires": {
            "lru-cache": "^6.0.0"
          }
        },
        "is-ci": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-ci/-/is-ci-2.0.0.tgz",
          "integrity": "sha512-YfJT7rkpQB0updsdHLGWrvhBJfcfzNNawYDNIyQXJz0IViGf75O8EBPKSdvw2rF+LGCsX4FZ8tcr3b19LcZq4w==",
          "dev": true,
          "requires": {
            "ci-info": "^2.0.0"
          }
        },
        "jsonfile": {
          "version": "6.1.0",
          "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz",
          "integrity": "sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.1.6",
            "universalify": "^2.0.0"
          },
          "dependencies": {
            "universalify": {
              "version": "2.0.0",
              "resolved": "https://registry.npmjs.org/universalify/-/universalify-2.0.0.tgz",
              "integrity": "sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW5nq5scPqq0ZDP9Zyl04oQ==",
              "dev": true
            }
          }
        },
        "lru-cache": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz",
          "integrity": "sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==",
          "dev": true,
          "requires": {
            "yallist": "^4.0.0"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
          "dev": true
        },
        "semver": {
          "version": "7.3.4",
          "resolved": "https://registry.npmjs.org/semver/-/semver-7.3.4.tgz",
          "integrity": "sha512-tCfb2WLjqFAtXn4KEdxIhalnRtoKFN7nAwj0B3ZXCbQloV2tq5eDbcTmT68JJD3nRJq24/XgxtQKFIpQdtvmVw==",
          "dev": true,
          "requires": {
            "lru-cache": "^6.0.0"
          }
        },
        "universalify": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/universalify/-/universalify-1.0.0.tgz",
          "integrity": "sha512-rb6X1W158d7pRQBg5gkR8uPaSfiids68LTJQYOtEUhoJUWBdaQHsuT/EUduxXYxcrt4r5PJ4fuHW1MHT6p0qug==",
          "dev": true
        },
        "yallist": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
          "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==",
          "dev": true
        }
      }
    },
    "aproba": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/aproba/-/aproba-1.2.0.tgz",
      "integrity": "sha512-Y9J6ZjXtoYh8RnXVCMOU/ttDmk1aBjunq9vO0ta5x85WDQiQfUF9sIPBITdbiiIVcBo03Hi3jMxigBtsddlXRw=="
    },
    "archiver": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/archiver/-/archiver-2.1.1.tgz",
      "integrity": "sha1-/2YrSnggFJSj7lRNOjP+dJZQnrw=",
      "dev": true,
      "requires": {
        "archiver-utils": "^1.3.0",
        "async": "^2.0.0",
        "buffer-crc32": "^0.2.1",
        "glob": "^7.0.0",
        "lodash": "^4.8.0",
        "readable-stream": "^2.0.0",
        "tar-stream": "^1.5.0",
        "zip-stream": "^1.2.0"
      },
      "dependencies": {
        "async": {
          "version": "2.6.3",
          "resolved": "https://registry.npmjs.org/async/-/async-2.6.3.tgz",
          "integrity": "sha512-zflvls11DCy+dQWzTW2dzuilv8Z5X/pjfmZOWba6TNIVDm+2UDaJmXSOXlasHKfNBs8oo3M0aT50fDEWfKZjXg==",
          "dev": true,
          "requires": {
            "lodash": "^4.17.14"
          }
        },
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "archiver-promise": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/archiver-promise/-/archiver-promise-1.0.0.tgz",
      "integrity": "sha1-p8TlLmB/2XbFSjAlBFQXM2g09lI=",
      "dev": true,
      "requires": {
        "archiver": "^1.2.0"
      },
      "dependencies": {
        "archiver": {
          "version": "1.3.0",
          "resolved": "https://registry.npmjs.org/archiver/-/archiver-1.3.0.tgz",
          "integrity": "sha1-TyGU1tj5nfP1MeaIHxTxXVX6ryI=",
          "dev": true,
          "requires": {
            "archiver-utils": "^1.3.0",
            "async": "^2.0.0",
            "buffer-crc32": "^0.2.1",
            "glob": "^7.0.0",
            "lodash": "^4.8.0",
            "readable-stream": "^2.0.0",
            "tar-stream": "^1.5.0",
            "walkdir": "^0.0.11",
            "zip-stream": "^1.1.0"
          }
        },
        "async": {
          "version": "2.6.3",
          "resolved": "https://registry.npmjs.org/async/-/async-2.6.3.tgz",
          "integrity": "sha512-zflvls11DCy+dQWzTW2dzuilv8Z5X/pjfmZOWba6TNIVDm+2UDaJmXSOXlasHKfNBs8oo3M0aT50fDEWfKZjXg==",
          "dev": true,
          "requires": {
            "lodash": "^4.17.14"
          }
        },
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "archiver-utils": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/archiver-utils/-/archiver-utils-1.3.0.tgz",
      "integrity": "sha1-5QtMCccL89aA4y/xt5lOn52JUXQ=",
      "dev": true,
      "requires": {
        "glob": "^7.0.0",
        "graceful-fs": "^4.1.0",
        "lazystream": "^1.0.0",
        "lodash": "^4.8.0",
        "normalize-path": "^2.0.0",
        "readable-stream": "^2.0.0"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "normalize-path": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-2.1.1.tgz",
          "integrity": "sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=",
          "dev": true,
          "requires": {
            "remove-trailing-separator": "^1.0.1"
          }
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "archy": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/archy/-/archy-1.0.0.tgz",
      "integrity": "sha1-+cjBN1fMHde8N5rHeyxipcKGjEA=",
      "dev": true
    },
    "are-we-there-yet": {
      "version": "1.1.5",
      "resolved": "https://registry.npmjs.org/are-we-there-yet/-/are-we-there-yet-1.1.5.tgz",
      "integrity": "sha512-5hYdAkZlcG8tOLujVDTgCT+uPX0VnpAH28gWsLfzpXYm7wP6mp5Q/gYyR7YQ0cKVJcXJnl3j2kpBan13PtQf6w==",
      "requires": {
        "delegates": "^1.0.0",
        "readable-stream": "^2.0.6"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE="
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "argparse": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz",
      "integrity": "sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==",
      "dev": true,
      "requires": {
        "sprintf-js": "~1.0.2"
      },
      "dependencies": {
        "sprintf-js": {
          "version": "1.0.3",
          "resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz",
          "integrity": "sha1-BOaSb2YolTVPPdAVIDYzuFcpfiw=",
          "dev": true
        }
      }
    },
    "arr-diff": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-2.0.0.tgz",
      "integrity": "sha1-jzuCf5Vai9ZpaX5KQlasPOrjVs8=",
      "dev": true,
      "requires": {
        "arr-flatten": "^1.0.1"
      }
    },
    "arr-flatten": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/arr-flatten/-/arr-flatten-1.1.0.tgz",
      "integrity": "sha512-L3hKV5R/p5o81R7O02IGnwpDmkp6E982XhtbuwSe3O4qOtMMMtodicASA1Cny2U+aCXcNpml+m4dPsvsJ3jatg==",
      "dev": true
    },
    "arr-union": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/arr-union/-/arr-union-3.1.0.tgz",
      "integrity": "sha1-45sJrqne+Gao8gbiiK9jkZuuOcQ=",
      "dev": true
    },
    "array-differ": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/array-differ/-/array-differ-1.0.0.tgz",
      "integrity": "sha1-7/UuN1gknTO+QCuLuOVkuytdQDE=",
      "dev": true
    },
    "array-each": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/array-each/-/array-each-1.0.1.tgz",
      "integrity": "sha1-p5SvDAWrF1KEbudTofIRoFugxE8=",
      "dev": true
    },
    "array-find-index": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/array-find-index/-/array-find-index-1.0.2.tgz",
      "integrity": "sha1-3wEKoSh+Fku9pvlyOwqWoexBh6E=",
      "dev": true
    },
    "array-slice": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/array-slice/-/array-slice-1.1.0.tgz",
      "integrity": "sha512-B1qMD3RBP7O8o0H2KbrXDyB0IccejMF15+87Lvlor12ONPRHP6gTjXMNkt/d3ZuOGbAe66hFmaCfECI24Ufp6w==",
      "dev": true
    },
    "array-uniq": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/array-uniq/-/array-uniq-1.0.3.tgz",
      "integrity": "sha1-r2rId6Jcx/dOBYiUdThY39sk/bY=",
      "dev": true
    },
    "array-unique": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/array-unique/-/array-unique-0.2.1.tgz",
      "integrity": "sha1-odl8yvy8JiXMcPrc6zalDFiwGlM=",
      "dev": true
    },
    "arraybuffer.slice": {
      "version": "0.0.7",
      "resolved": "https://registry.npmjs.org/arraybuffer.slice/-/arraybuffer.slice-0.0.7.tgz",
      "integrity": "sha512-wGUIVQXuehL5TCqQun8OW81jGzAWycqzFF8lFp+GOM5BXLYj3bKNsYC4daB7n6XjCqxQA/qgTJ+8ANR3acjrog==",
      "dev": true
    },
    "asar": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/asar/-/asar-3.0.3.tgz",
      "integrity": "sha512-k7zd+KoR+n8pl71PvgElcoKHrVNiSXtw7odKbyNpmgKe7EGRF9Pnu3uLOukD37EvavKwVFxOUpqXTIZC5B5Pmw==",
      "dev": true,
      "requires": {
        "@types/glob": "^7.1.1",
        "chromium-pickle-js": "^0.2.0",
        "commander": "^5.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "dependencies": {
        "commander": {
          "version": "5.1.0",
          "resolved": "https://registry.npmjs.org/commander/-/commander-5.1.0.tgz",
          "integrity": "sha512-P0CysNDQ7rtVw4QIQtm+MRxV66vKFSvlsQvGYXZWR3qFU0jlMKHZZZgw8e+8DSah4UDKMqnknRDQz+xuQXQ/Zg==",
          "dev": true
        },
        "glob": {
          "version": "7.1.6",
          "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.6.tgz",
          "integrity": "sha512-LwaxwyZ72Lk7vZINtNNrywX0ZuLyStrdDtabefZKAY5ZGJhVtgdznluResxNmPitE0SAO+O26sWTHeKSI2wMBA==",
          "dev": true,
          "requires": {
            "fs.realpath": "^1.0.0",
            "inflight": "^1.0.4",
            "inherits": "2",
            "minimatch": "^3.0.4",
            "once": "^1.3.0",
            "path-is-absolute": "^1.0.0"
          }
        }
      }
    },
    "asn1": {
      "version": "0.2.4",
      "resolved": "https://registry.npmjs.org/asn1/-/asn1-0.2.4.tgz",
      "integrity": "sha512-jxwzQpLQjSmWXgwaCZE9Nz+glAG01yF1QnWgbhGwHI5A6FRIEY6IVqtHhIepHqI7/kyEyQEagBC5mBEFlIYvdg==",
      "dev": true,
      "requires": {
        "safer-buffer": "~2.1.0"
      }
    },
    "asn1.js": {
      "version": "5.4.1",
      "resolved": "https://registry.npmjs.org/asn1.js/-/asn1.js-5.4.1.tgz",
      "integrity": "sha512-+I//4cYPccV8LdmBLiX8CYvf9Sp3vQsrqu2QNXRcrbiWvcx/UdlFiqUJJzxRQxgsZmvhXhn4cSKeSmoFjVdupA==",
      "dev": true,
      "requires": {
        "bn.js": "^4.0.0",
        "inherits": "^2.0.1",
        "minimalistic-assert": "^1.0.0",
        "safer-buffer": "^2.1.0"
      },
      "dependencies": {
        "bn.js": {
          "version": "4.11.9",
          "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.11.9.tgz",
          "integrity": "sha512-E6QoYqCKZfgatHTdHzs1RRKP7ip4vvm+EyRUeE2RF0NblwVvb0p6jSVeNTOFxPn26QXN2o6SMfNxKp6kU8zQaw==",
          "dev": true
        }
      }
    },
    "assert": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/assert/-/assert-1.5.0.tgz",
      "integrity": "sha512-EDsgawzwoun2CZkCgtxJbv392v4nbk9XDD06zI+kQYoBM/3RBWLlEyJARDOmhAAosBjWACEkKL6S+lIZtcAubA==",
      "dev": true,
      "requires": {
        "object-assign": "^4.1.1",
        "util": "0.10.3"
      },
      "dependencies": {
        "inherits": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.1.tgz",
          "integrity": "sha1-sX0I0ya0Qj5Wjv9xn5GwscvfafE=",
          "dev": true
        },
        "util": {
          "version": "0.10.3",
          "resolved": "https://registry.npmjs.org/util/-/util-0.10.3.tgz",
          "integrity": "sha1-evsa/lCAUkZInj23/g7TeTNqwPk=",
          "dev": true,
          "requires": {
            "inherits": "2.0.1"
          }
        }
      }
    },
    "assert-plus": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-0.2.0.tgz",
      "integrity": "sha1-104bh+ev/A24qttwIfP+SBAasjQ=",
      "dev": true
    },
    "assign-symbols": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/assign-symbols/-/assign-symbols-1.0.0.tgz",
      "integrity": "sha1-WWZ/QfrdTyDMvCu5a41Pf3jsA2c=",
      "dev": true
    },
    "async": {
      "version": "1.5.2",
      "resolved": "https://registry.npmjs.org/async/-/async-1.5.2.tgz",
      "integrity": "sha1-7GphrlZIDAw8skHJVhjiCJL5Zyo=",
      "dev": true
    },
    "async-each": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/async-each/-/async-each-1.0.3.tgz",
      "integrity": "sha512-z/WhQ5FPySLdvREByI2vZiTWwCnF0moMJ1hK9YQwDTHKh6I7/uSckMetoRGb5UBZPC1z0jlw+n/XCgjeH7y1AQ==",
      "dev": true,
      "optional": true
    },
    "async-each-series": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/async-each-series/-/async-each-series-0.1.1.tgz",
      "integrity": "sha1-dhfBkXQB/Yykooqtzj266Yr+tDI=",
      "dev": true
    },
    "async-exit-hook": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/async-exit-hook/-/async-exit-hook-2.0.1.tgz",
      "integrity": "sha512-NW2cX8m1Q7KPA7a5M2ULQeZ2wR5qI5PAbw5L0UOMxdioVk9PMZ0h1TmyZEkPYrCvYjDlFICusOu1dlEKAAeXBw==",
      "dev": true
    },
    "async-foreach": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/async-foreach/-/async-foreach-0.1.3.tgz",
      "integrity": "sha1-NhIfhFwFeBct5Bmpfb6x0W7DRUI=",
      "dev": true
    },
    "async-limiter": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/async-limiter/-/async-limiter-1.0.1.tgz",
      "integrity": "sha512-csOlWGAcRFJaI6m+F2WKdnMKr4HhdhFVBk0H/QbJFMCr+uO2kwohwXQPxw/9OCxp05r5ghVBFSyioixx3gfkNQ==",
      "dev": true
    },
    "asynckit": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
      "integrity": "sha1-x57Zf380y48robyXkLzDZkdLS3k=",
      "dev": true
    },
    "at-least-node": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/at-least-node/-/at-least-node-1.0.0.tgz",
      "integrity": "sha512-+q/t7Ekv1EDY2l6Gda6LLiX14rU9TV20Wa3ofeQmwPFZbOMo9DXrLbOjFaaclkXKWidIaopwAObQDqwWtGUjqg==",
      "dev": true
    },
    "atob": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/atob/-/atob-2.1.2.tgz",
      "integrity": "sha512-Wm6ukoaOGJi/73p/cl2GvLjTI5JM1k/O14isD73YML8StrH/7/lRFgmg8nICZgD3bZZvjwCGxtMOD3wWNAu8cg==",
      "dev": true
    },
    "author-regex": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/author-regex/-/author-regex-1.0.0.tgz",
      "integrity": "sha1-0IiFvmubv5Q5/gh8dihyRfCoFFA=",
      "dev": true
    },
    "autoprefixer": {
      "version": "6.7.7",
      "resolved": "https://registry.npmjs.org/autoprefixer/-/autoprefixer-6.7.7.tgz",
      "integrity": "sha1-Hb0cg1ZY41zj+ZhAmdsAWFx4IBQ=",
      "dev": true,
      "requires": {
        "browserslist": "^1.7.6",
        "caniuse-db": "^1.0.30000634",
        "normalize-range": "^0.1.2",
        "num2fraction": "^1.2.2",
        "postcss": "^5.2.16",
        "postcss-value-parser": "^3.2.3"
      }
    },
    "aws-sign2": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.6.0.tgz",
      "integrity": "sha1-FDQt0428yU0OW4fXY81jYSwOeU8=",
      "dev": true
    },
    "aws4": {
      "version": "1.11.0",
      "resolved": "https://registry.npmjs.org/aws4/-/aws4-1.11.0.tgz",
      "integrity": "sha512-xh1Rl34h6Fi1DC2WWKfxUTVqRsNnr6LsKz2+hfwDxQJWmrx8+c7ylaqBMcHfl1U1r2dsifOvKX3LQuLNZ+XSvA==",
      "dev": true
    },
    "axios": {
      "version": "0.19.0",
      "resolved": "https://registry.npmjs.org/axios/-/axios-0.19.0.tgz",
      "integrity": "sha512-1uvKqKQta3KBxIz14F2v06AEHZ/dIoeKfbTRkK1E5oqjDnuEerLmYTgJB5AiQZHJcljpg1TuRzdjDR06qNk0DQ==",
      "dev": true,
      "requires": {
        "follow-redirects": "1.5.10",
        "is-buffer": "^2.0.2"
      },
      "dependencies": {
        "debug": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/debug/-/debug-3.1.0.tgz",
          "integrity": "sha512-OX8XqP7/1a9cqkxYw2yXss15f26NKWBpDXQd0/uK/KPqdQhxbPa994hnzjcE2VqQpDslf55723cKPUOGSmMY3g==",
          "dev": true,
          "requires": {
            "ms": "2.0.0"
          }
        },
        "follow-redirects": {
          "version": "1.5.10",
          "resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.5.10.tgz",
          "integrity": "sha512-0V5l4Cizzvqt5D44aTXbFZz+FtyXV1vrDN6qrelxtfYQKW0KO0W2T/hkE8xvGa/540LkZlkaUjO4ailYTFtHVQ==",
          "dev": true,
          "requires": {
            "debug": "=3.1.0"
          }
        }
      }
    },
    "babel-cli": {
      "version": "6.26.0",
      "resolved": "https://registry.npmjs.org/babel-cli/-/babel-cli-6.26.0.tgz",
      "integrity": "sha1-UCq1SHTX24itALiHoGODzgPQAvE=",
      "dev": true,
      "requires": {
        "babel-core": "^6.26.0",
        "babel-polyfill": "^6.26.0",
        "babel-register": "^6.26.0",
        "babel-runtime": "^6.26.0",
        "chokidar": "^1.6.1",
        "commander": "^2.11.0",
        "convert-source-map": "^1.5.0",
        "fs-readdir-recursive": "^1.0.0",
        "glob": "^7.1.2",
        "lodash": "^4.17.4",
        "output-file-sync": "^1.1.2",
        "path-is-absolute": "^1.0.1",
        "slash": "^1.0.0",
        "source-map": "^0.5.6",
        "v8flags": "^2.1.1"
      },
      "dependencies": {
        "anymatch": {
          "version": "1.3.2",
          "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-1.3.2.tgz",
          "integrity": "sha512-0XNayC8lTHQ2OI8aljNCN3sSx6hsr/1+rlcDAotXJR7C1oZZHCNsfpbKwMjRA3Uqb5tF1Rae2oloTr4xpq+WjA==",
          "dev": true,
          "optional": true,
          "requires": {
            "micromatch": "^2.1.5",
            "normalize-path": "^2.0.0"
          }
        },
        "binary-extensions": {
          "version": "1.13.1",
          "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-1.13.1.tgz",
          "integrity": "sha512-Un7MIEDdUC5gNpcGDV97op1Ywk748MpHcFTHoYs6qnj1Z3j7I53VG3nwZhKzoBZmbdRNnb6WRdFlwl7tSDuZGw==",
          "dev": true,
          "optional": true
        },
        "braces": {
          "version": "1.8.5",
          "resolved": "https://registry.npmjs.org/braces/-/braces-1.8.5.tgz",
          "integrity": "sha1-uneWLhLf+WnWt2cR6RS3N4V79qc=",
          "dev": true,
          "optional": true,
          "requires": {
            "expand-range": "^1.8.1",
            "preserve": "^0.2.0",
            "repeat-element": "^1.1.2"
          }
        },
        "chokidar": {
          "version": "1.7.0",
          "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-1.7.0.tgz",
          "integrity": "sha1-eY5ol3gVHIB2tLNg5e3SjNortGg=",
          "dev": true,
          "optional": true,
          "requires": {
            "anymatch": "^1.3.0",
            "async-each": "^1.0.0",
            "fsevents": "^1.0.0",
            "glob-parent": "^2.0.0",
            "inherits": "^2.0.1",
            "is-binary-path": "^1.0.0",
            "is-glob": "^2.0.0",
            "path-is-absolute": "^1.0.0",
            "readdirp": "^2.0.0"
          }
        },
        "fill-range": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-4.0.0.tgz",
          "integrity": "sha1-1USBHUKPmOsGpj3EAtJAPDKMOPc=",
          "dev": true,
          "optional": true,
          "requires": {
            "extend-shallow": "^2.0.1",
            "is-number": "^3.0.0",
            "repeat-string": "^1.6.1",
            "to-regex-range": "^2.1.0"
          },
          "dependencies": {
            "extend-shallow": {
              "version": "2.0.1",
              "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
              "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
              "dev": true,
              "optional": true,
              "requires": {
                "is-extendable": "^0.1.0"
              }
            }
          }
        },
        "fsevents": {
          "version": "1.2.13",
          "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-1.2.13.tgz",
          "integrity": "sha512-oWb1Z6mkHIskLzEJ/XWX0srkpkTQ7vaopMQkyaEIoq0fmtFVxOthb8cCxeT+p3ynTdkk/RZwbgG4brR5BeWECw==",
          "dev": true,
          "optional": true,
          "requires": {
            "bindings": "^1.5.0",
            "nan": "^2.12.1"
          }
        },
        "glob": {
          "version": "7.1.6",
          "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.6.tgz",
          "integrity": "sha512-LwaxwyZ72Lk7vZINtNNrywX0ZuLyStrdDtabefZKAY5ZGJhVtgdznluResxNmPitE0SAO+O26sWTHeKSI2wMBA==",
          "dev": true,
          "requires": {
            "fs.realpath": "^1.0.0",
            "inflight": "^1.0.4",
            "inherits": "2",
            "minimatch": "^3.0.4",
            "once": "^1.3.0",
            "path-is-absolute": "^1.0.0"
          }
        },
        "glob-parent": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-2.0.0.tgz",
          "integrity": "sha1-gTg9ctsFT8zPUzbaqQLxgvbtuyg=",
          "dev": true,
          "optional": true,
          "requires": {
            "is-glob": "^2.0.0"
          }
        },
        "is-accessor-descriptor": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",
          "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",
          "dev": true,
          "optional": true,
          "requires": {
            "kind-of": "^6.0.0"
          },
          "dependencies": {
            "kind-of": {
              "version": "6.0.3",
              "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.3.tgz",
              "integrity": "sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw==",
              "dev": true,
              "optional": true
            }
          }
        },
        "is-binary-path": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-1.0.1.tgz",
          "integrity": "sha1-dfFmQrSA8YenEcgUFh/TpKdlWJg=",
          "dev": true,
          "optional": true,
          "requires": {
            "binary-extensions": "^1.0.0"
          }
        },
        "is-buffer": {
          "version": "1.1.6",
          "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",
          "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w==",
          "dev": true,
          "optional": true
        },
        "is-data-descriptor": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",
          "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",
          "dev": true,
          "optional": true,
          "requires": {
            "kind-of": "^6.0.0"
          },
          "dependencies": {
            "kind-of": {
              "version": "6.0.3",
              "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.3.tgz",
              "integrity": "sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw==",
              "dev": true,
              "optional": true
            }
          }
        },
        "is-descriptor": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",
          "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",
          "dev": true,
          "optional": true,
          "requires": {
            "is-accessor-descriptor": "^1.0.0",
            "is-data-descriptor": "^1.0.0",
            "kind-of": "^6.0.2"
          },
          "dependencies": {
            "kind-of": {
              "version": "6.0.3",
              "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.3.tgz",
              "integrity": "sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw==",
              "dev": true,
              "optional": true
            }
          }
        },
        "is-extglob": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-1.0.0.tgz",
          "integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA=",
          "dev": true,
          "optional": true
        },
        "is-glob": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-2.0.1.tgz",
          "integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",
          "dev": true,
          "optional": true,
          "requires": {
            "is-extglob": "^1.0.0"
          }
        },
        "is-number": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-number/-/is-number-3.0.0.tgz",
          "integrity": "sha1-JP1iAaR4LPUFYcgQJ2r8fRLXEZU=",
          "dev": true,
          "optional": true,
          "requires": {
            "kind-of": "^3.0.2"
          }
        },
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true,
          "optional": true
        },
        "isobject": {
          "version": "3.0.1",
          "resolved": "https://registry.npmjs.org/isobject/-/isobject-3.0.1.tgz",
          "integrity": "sha1-TkMekrEalzFjaqH5yNHMvP2reN8=",
          "dev": true,
          "optional": true
        },
        "micromatch": {
          "version": "2.3.11",
          "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-2.3.11.tgz",
          "integrity": "sha1-hmd8l9FyCzY0MdBNDRUpO9OMFWU=",
          "dev": true,
          "optional": true,
          "requires": {
            "arr-diff": "^2.0.0",
            "array-unique": "^0.2.1",
            "braces": "^1.8.2",
            "expand-brackets": "^0.1.4",
            "extglob": "^0.3.1",
            "filename-regex": "^2.0.0",
            "is-extglob": "^1.0.0",
            "is-glob": "^2.0.1",
            "kind-of": "^3.0.2",
            "normalize-path": "^2.0.1",
            "object.omit": "^2.0.0",
            "parse-glob": "^3.0.4",
            "regex-cache": "^0.4.2"
          }
        },
        "normalize-path": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-2.1.1.tgz",
          "integrity": "sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=",
          "dev": true,
          "optional": true,
          "requires": {
            "remove-trailing-separator": "^1.0.1"
          }
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "optional": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "readdirp": {
          "version": "2.2.1",
          "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-2.2.1.tgz",
          "integrity": "sha512-1JU/8q+VgFZyxwrJ+SVIOsh+KywWGpds3NTqikiKpDMZWScmAYyKIgqkO+ARvNWJfXeXR1zxz7aHF4u4CyH6vQ==",
          "dev": true,
          "optional": true,
          "requires": {
            "graceful-fs": "^4.1.11",
            "micromatch": "^3.1.10",
            "readable-stream": "^2.0.2"
          },
          "dependencies": {
            "arr-diff": {
              "version": "4.0.0",
              "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-4.0.0.tgz",
              "integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA=",
              "dev": true,
              "optional": true
            },
            "array-unique": {
              "version": "0.3.2",
              "resolved": "https://registry.npmjs.org/array-unique/-/array-unique-0.3.2.tgz",
              "integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg=",
              "dev": true,
              "optional": true
            },
            "braces": {
              "version": "2.3.2",
              "resolved": "https://registry.npmjs.org/braces/-/braces-2.3.2.tgz",
              "integrity": "sha512-aNdbnj9P8PjdXU4ybaWLK2IF3jc/EoDYbC7AazW6to3TRsfXxscC9UXOB5iDiEQrkyIbWp2SLQda4+QAa7nc3w==",
              "dev": true,
              "optional": true,
              "requires": {
                "arr-flatten": "^1.1.0",
                "array-unique": "^0.3.2",
                "extend-shallow": "^2.0.1",
                "fill-range": "^4.0.0",
                "isobject": "^3.0.1",
                "repeat-element": "^1.1.2",
                "snapdragon": "^0.8.1",
                "snapdragon-node": "^2.0.1",
                "split-string": "^3.0.2",
                "to-regex": "^3.0.1"
              },
              "dependencies": {
                "extend-shallow": {
                  "version": "2.0.1",
                  "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
                  "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
                  "dev": true,
                  "optional": true,
                  "requires": {
                    "is-extendable": "^0.1.0"
                  }
                }
              }
            },
            "expand-brackets": {
              "version": "2.1.4",
              "resolved": "https://registry.npmjs.org/expand-brackets/-/expand-brackets-2.1.4.tgz",
              "integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
              "dev": true,
              "optional": true,
              "requires": {
                "debug": "^2.3.3",
                "define-property": "^0.2.5",
                "extend-shallow": "^2.0.1",
                "posix-character-classes": "^0.1.0",
                "regex-not": "^1.0.0",
                "snapdragon": "^0.8.1",
                "to-regex": "^3.0.1"
              },
              "dependencies": {
                "define-property": {
                  "version": "0.2.5",
                  "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
                  "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
                  "dev": true,
                  "optional": true,
                  "requires": {
                    "is-descriptor": "^0.1.0"
                  }
                },
                "extend-shallow": {
                  "version": "2.0.1",
                  "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
                  "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
                  "dev": true,
                  "optional": true,
                  "requires": {
                    "is-extendable": "^0.1.0"
                  }
                },
                "is-descriptor": {
                  "version": "0.1.6",
                  "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-0.1.6.tgz",
                  "integrity": "sha512-avDYr0SB3DwO9zsMov0gKCESFYqCnE4hq/4z3TdUlukEy5t9C0YRq7HLrsN52NAcqXKaepeCD0n+B0arnVG3Hg==",
                  "dev": true,
                  "optional": true,
                  "requires": {
                    "is-accessor-descriptor": "^0.1.6",
                    "is-data-descriptor": "^0.1.4",
                    "kind-of": "^5.0.0"
                  }
                },
                "kind-of": {
                  "version": "5.1.0",
                  "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-5.1.0.tgz",
                  "integrity": "sha512-NGEErnH6F2vUuXDh+OlbcKW7/wOcfdRHaZ7VWtqCztfHri/++YKmP51OdWeGPuqCOba6kk2OTe5d02VmTB80Pw==",
                  "dev": true,
                  "optional": true
                }
              }
            },
            "extglob": {
              "version": "2.0.4",
              "resolved": "https://registry.npmjs.org/extglob/-/extglob-2.0.4.tgz",
              "integrity": "sha512-Nmb6QXkELsuBr24CJSkilo6UHHgbekK5UiZgfE6UHD3Eb27YC6oD+bhcT+tJ6cl8dmsgdQxnWlcry8ksBIBLpw==",
              "dev": true,
              "optional": true,
              "requires": {
                "array-unique": "^0.3.2",
                "define-property": "^1.0.0",
                "expand-brackets": "^2.1.4",
                "extend-shallow": "^2.0.1",
                "fragment-cache": "^0.2.1",
                "regex-not": "^1.0.0",
                "snapdragon": "^0.8.1",
                "to-regex": "^3.0.1"
              },
              "dependencies": {
                "define-property": {
                  "version": "1.0.0",
                  "resolved": "https://registry.npmjs.org/define-property/-/define-property-1.0.0.tgz",
                  "integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
                  "dev": true,
                  "optional": true,
                  "requires": {
                    "is-descriptor": "^1.0.0"
                  }
                },
                "extend-shallow": {
                  "version": "2.0.1",
                  "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
                  "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
                  "dev": true,
                  "optional": true,
                  "requires": {
                    "is-extendable": "^0.1.0"
                  }
                }
              }
            },
            "is-accessor-descriptor": {
              "version": "0.1.6",
              "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-0.1.6.tgz",
              "integrity": "sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=",
              "dev": true,
              "optional": true,
              "requires": {
                "kind-of": "^3.0.2"
              },
              "dependencies": {
                "kind-of": {
                  "version": "3.2.2",
                  "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
                  "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
                  "dev": true,
                  "optional": true,
                  "requires": {
                    "is-buffer": "^1.1.5"
                  }
                }
              }
            },
            "is-data-descriptor": {
              "version": "0.1.4",
              "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-0.1.4.tgz",
              "integrity": "sha1-C17mSDiOLIYCgueT8YVv7D8wG1Y=",
              "dev": true,
              "optional": true,
              "requires": {
                "kind-of": "^3.0.2"
              },
              "dependencies": {
                "kind-of": {
                  "version": "3.2.2",
                  "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
                  "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
                  "dev": true,
                  "optional": true,
                  "requires": {
                    "is-buffer": "^1.1.5"
                  }
                }
              }
            },
            "kind-of": {
              "version": "6.0.3",
              "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.3.tgz",
              "integrity": "sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw==",
              "dev": true,
              "optional": true
            },
            "micromatch": {
              "version": "3.1.10",
              "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-3.1.10.tgz",
              "integrity": "sha512-MWikgl9n9M3w+bpsY3He8L+w9eF9338xRl8IAO5viDizwSzziFEyUzo2xrrloB64ADbTf8uA8vRqqttDTOmccg==",
              "dev": true,
              "optional": true,
              "requires": {
                "arr-diff": "^4.0.0",
                "array-unique": "^0.3.2",
                "braces": "^2.3.1",
                "define-property": "^2.0.2",
                "extend-shallow": "^3.0.2",
                "extglob": "^2.0.4",
                "fragment-cache": "^0.2.1",
                "kind-of": "^6.0.2",
                "nanomatch": "^1.2.9",
                "object.pick": "^1.3.0",
                "regex-not": "^1.0.0",
                "snapdragon": "^0.8.1",
                "to-regex": "^3.0.2"
              }
            }
          }
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "optional": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        },
        "to-regex-range": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-2.1.1.tgz",
          "integrity": "sha1-fIDBe53+vlmeJzZ+DU3VWQFB2zg=",
          "dev": true,
          "optional": true,
          "requires": {
            "is-number": "^3.0.0",
            "repeat-string": "^1.6.1"
          }
        }
      }
    },
    "babel-code-frame": {
      "version": "6.26.0",
      "resolved": "https://registry.npmjs.org/babel-code-frame/-/babel-code-frame-6.26.0.tgz",
      "integrity": "sha1-Y/1D99weO7fONZR9uP42mj9Yx0s=",
      "dev": true,
      "requires": {
        "chalk": "^1.1.3",
        "esutils": "^2.0.2",
        "js-tokens": "^3.0.2"
      }
    },
    "babel-core": {
      "version": "6.26.3",
      "resolved": "https://registry.npmjs.org/babel-core/-/babel-core-6.26.3.tgz",
      "integrity": "sha512-6jyFLuDmeidKmUEb3NM+/yawG0M2bDZ9Z1qbZP59cyHLz8kYGKYwpJP0UwUKKUiTRNvxfLesJnTedqczP7cTDA==",
      "dev": true,
      "requires": {
        "babel-code-frame": "^6.26.0",
        "babel-generator": "^6.26.0",
        "babel-helpers": "^6.24.1",
        "babel-messages": "^6.23.0",
        "babel-register": "^6.26.0",
        "babel-runtime": "^6.26.0",
        "babel-template": "^6.26.0",
        "babel-traverse": "^6.26.0",
        "babel-types": "^6.26.0",
        "babylon": "^6.18.0",
        "convert-source-map": "^1.5.1",
        "debug": "^2.6.9",
        "json5": "^0.5.1",
        "lodash": "^4.17.4",
        "minimatch": "^3.0.4",
        "path-is-absolute": "^1.0.1",
        "private": "^0.1.8",
        "slash": "^1.0.0",
        "source-map": "^0.5.7"
      }
    },
    "babel-generator": {
      "version": "6.26.1",
      "resolved": "https://registry.npmjs.org/babel-generator/-/babel-generator-6.26.1.tgz",
      "integrity": "sha512-HyfwY6ApZj7BYTcJURpM5tznulaBvyio7/0d4zFOeMPUmfxkCjHocCuoLa2SAGzBI8AREcH3eP3758F672DppA==",
      "dev": true,
      "requires": {
        "babel-messages": "^6.23.0",
        "babel-runtime": "^6.26.0",
        "babel-types": "^6.26.0",
        "detect-indent": "^4.0.0",
        "jsesc": "^1.3.0",
        "lodash": "^4.17.4",
        "source-map": "^0.5.7",
        "trim-right": "^1.0.1"
      },
      "dependencies": {
        "jsesc": {
          "version": "1.3.0",
          "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-1.3.0.tgz",
          "integrity": "sha1-RsP+yMGJKxKwgz25vHYiF226s0s=",
          "dev": true
        }
      }
    },
    "babel-helper-call-delegate": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-helper-call-delegate/-/babel-helper-call-delegate-6.24.1.tgz",
      "integrity": "sha1-7Oaqzdx25Bw0YfiL/Fdb0Nqi340=",
      "dev": true,
      "requires": {
        "babel-helper-hoist-variables": "^6.24.1",
        "babel-runtime": "^6.22.0",
        "babel-traverse": "^6.24.1",
        "babel-types": "^6.24.1"
      }
    },
    "babel-helper-define-map": {
      "version": "6.26.0",
      "resolved": "https://registry.npmjs.org/babel-helper-define-map/-/babel-helper-define-map-6.26.0.tgz",
      "integrity": "sha1-pfVtq0GiX5fstJjH66ypgZ+Vvl8=",
      "dev": true,
      "requires": {
        "babel-helper-function-name": "^6.24.1",
        "babel-runtime": "^6.26.0",
        "babel-types": "^6.26.0",
        "lodash": "^4.17.4"
      }
    },
    "babel-helper-function-name": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-helper-function-name/-/babel-helper-function-name-6.24.1.tgz",
      "integrity": "sha1-00dbjAPtmCQqJbSDUasYOZ01gKk=",
      "dev": true,
      "requires": {
        "babel-helper-get-function-arity": "^6.24.1",
        "babel-runtime": "^6.22.0",
        "babel-template": "^6.24.1",
        "babel-traverse": "^6.24.1",
        "babel-types": "^6.24.1"
      }
    },
    "babel-helper-get-function-arity": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-helper-get-function-arity/-/babel-helper-get-function-arity-6.24.1.tgz",
      "integrity": "sha1-j3eCqpNAfEHTqlCQj4mwMbG2hT0=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0",
        "babel-types": "^6.24.1"
      }
    },
    "babel-helper-hoist-variables": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-helper-hoist-variables/-/babel-helper-hoist-variables-6.24.1.tgz",
      "integrity": "sha1-HssnaJydJVE+rbyZFKc/VAi+enY=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0",
        "babel-types": "^6.24.1"
      }
    },
    "babel-helper-optimise-call-expression": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-helper-optimise-call-expression/-/babel-helper-optimise-call-expression-6.24.1.tgz",
      "integrity": "sha1-96E0J7qfc/j0+pk8VKl4gtEkQlc=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0",
        "babel-types": "^6.24.1"
      }
    },
    "babel-helper-regex": {
      "version": "6.26.0",
      "resolved": "https://registry.npmjs.org/babel-helper-regex/-/babel-helper-regex-6.26.0.tgz",
      "integrity": "sha1-MlxZ+QL4LyS3T6zu0DY5VPZJXnI=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.26.0",
        "babel-types": "^6.26.0",
        "lodash": "^4.17.4"
      }
    },
    "babel-helper-remap-async-to-generator": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-helper-remap-async-to-generator/-/babel-helper-remap-async-to-generator-6.24.1.tgz",
      "integrity": "sha1-XsWBgnrXI/7N04HxySg5BnbkVRs=",
      "dev": true,
      "requires": {
        "babel-helper-function-name": "^6.24.1",
        "babel-runtime": "^6.22.0",
        "babel-template": "^6.24.1",
        "babel-traverse": "^6.24.1",
        "babel-types": "^6.24.1"
      }
    },
    "babel-helper-replace-supers": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-helper-replace-supers/-/babel-helper-replace-supers-6.24.1.tgz",
      "integrity": "sha1-v22/5Dk40XNpohPKiov3S2qQqxo=",
      "dev": true,
      "requires": {
        "babel-helper-optimise-call-expression": "^6.24.1",
        "babel-messages": "^6.23.0",
        "babel-runtime": "^6.22.0",
        "babel-template": "^6.24.1",
        "babel-traverse": "^6.24.1",
        "babel-types": "^6.24.1"
      }
    },
    "babel-helpers": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-helpers/-/babel-helpers-6.24.1.tgz",
      "integrity": "sha1-NHHenK7DiOXIUOWX5Yom3fN2ArI=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0",
        "babel-template": "^6.24.1"
      }
    },
    "babel-messages": {
      "version": "6.23.0",
      "resolved": "https://registry.npmjs.org/babel-messages/-/babel-messages-6.23.0.tgz",
      "integrity": "sha1-8830cDhYA1sqKVHG7F7fbGLyYw4=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0"
      }
    },
    "babel-plugin-check-es2015-constants": {
      "version": "6.22.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-check-es2015-constants/-/babel-plugin-check-es2015-constants-6.22.0.tgz",
      "integrity": "sha1-NRV7EBQm/S/9PaP3XH0ekYNbv4o=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0"
      }
    },
    "babel-plugin-syntax-async-functions": {
      "version": "6.13.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-syntax-async-functions/-/babel-plugin-syntax-async-functions-6.13.0.tgz",
      "integrity": "sha1-ytnK0RkbWtY0vzCuCHI5HgZHvpU=",
      "dev": true
    },
    "babel-plugin-syntax-dynamic-import": {
      "version": "6.18.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-syntax-dynamic-import/-/babel-plugin-syntax-dynamic-import-6.18.0.tgz",
      "integrity": "sha1-jWomIpyDdFqZgqRBBRVyyqF5sdo=",
      "dev": true
    },
    "babel-plugin-transform-async-to-generator": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-async-to-generator/-/babel-plugin-transform-async-to-generator-6.24.1.tgz",
      "integrity": "sha1-ZTbjeK/2yx1VF6wOQOs+n8jQh2E=",
      "dev": true,
      "requires": {
        "babel-helper-remap-async-to-generator": "^6.24.1",
        "babel-plugin-syntax-async-functions": "^6.8.0",
        "babel-runtime": "^6.22.0"
      }
    },
    "babel-plugin-transform-es2015-arrow-functions": {
      "version": "6.22.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-arrow-functions/-/babel-plugin-transform-es2015-arrow-functions-6.22.0.tgz",
      "integrity": "sha1-RSaSy3EdX3ncf4XkQM5BufJE0iE=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0"
      }
    },
    "babel-plugin-transform-es2015-block-scoped-functions": {
      "version": "6.22.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-block-scoped-functions/-/babel-plugin-transform-es2015-block-scoped-functions-6.22.0.tgz",
      "integrity": "sha1-u8UbSflk1wy42OC5ToICRs46YUE=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0"
      }
    },
    "babel-plugin-transform-es2015-block-scoping": {
      "version": "6.26.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-block-scoping/-/babel-plugin-transform-es2015-block-scoping-6.26.0.tgz",
      "integrity": "sha1-1w9SmcEwjQXBL0Y4E7CgnnOxiV8=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.26.0",
        "babel-template": "^6.26.0",
        "babel-traverse": "^6.26.0",
        "babel-types": "^6.26.0",
        "lodash": "^4.17.4"
      }
    },
    "babel-plugin-transform-es2015-classes": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-classes/-/babel-plugin-transform-es2015-classes-6.24.1.tgz",
      "integrity": "sha1-WkxYpQyclGHlZLSyo7+ryXolhNs=",
      "dev": true,
      "requires": {
        "babel-helper-define-map": "^6.24.1",
        "babel-helper-function-name": "^6.24.1",
        "babel-helper-optimise-call-expression": "^6.24.1",
        "babel-helper-replace-supers": "^6.24.1",
        "babel-messages": "^6.23.0",
        "babel-runtime": "^6.22.0",
        "babel-template": "^6.24.1",
        "babel-traverse": "^6.24.1",
        "babel-types": "^6.24.1"
      }
    },
    "babel-plugin-transform-es2015-computed-properties": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-computed-properties/-/babel-plugin-transform-es2015-computed-properties-6.24.1.tgz",
      "integrity": "sha1-b+Ko0WiV1WNPTNmZttNICjCBWbM=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0",
        "babel-template": "^6.24.1"
      }
    },
    "babel-plugin-transform-es2015-destructuring": {
      "version": "6.23.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-destructuring/-/babel-plugin-transform-es2015-destructuring-6.23.0.tgz",
      "integrity": "sha1-mXux8auWf2gtKwh2/jWNYOdlxW0=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0"
      }
    },
    "babel-plugin-transform-es2015-duplicate-keys": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-duplicate-keys/-/babel-plugin-transform-es2015-duplicate-keys-6.24.1.tgz",
      "integrity": "sha1-c+s9MQypaePvnskcU3QabxV2Qj4=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0",
        "babel-types": "^6.24.1"
      }
    },
    "babel-plugin-transform-es2015-for-of": {
      "version": "6.23.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-for-of/-/babel-plugin-transform-es2015-for-of-6.23.0.tgz",
      "integrity": "sha1-9HyVsrYT3x0+zC/bdXNiPHUkhpE=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0"
      }
    },
    "babel-plugin-transform-es2015-function-name": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-function-name/-/babel-plugin-transform-es2015-function-name-6.24.1.tgz",
      "integrity": "sha1-g0yJhTvDaxrw86TF26qU/Y6sqos=",
      "dev": true,
      "requires": {
        "babel-helper-function-name": "^6.24.1",
        "babel-runtime": "^6.22.0",
        "babel-types": "^6.24.1"
      }
    },
    "babel-plugin-transform-es2015-literals": {
      "version": "6.22.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-literals/-/babel-plugin-transform-es2015-literals-6.22.0.tgz",
      "integrity": "sha1-T1SgLWzWbPkVKAAZox0xklN3yi4=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0"
      }
    },
    "babel-plugin-transform-es2015-modules-amd": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-modules-amd/-/babel-plugin-transform-es2015-modules-amd-6.24.1.tgz",
      "integrity": "sha1-Oz5UAXI5hC1tGcMBHEvS8AoA0VQ=",
      "dev": true,
      "requires": {
        "babel-plugin-transform-es2015-modules-commonjs": "^6.24.1",
        "babel-runtime": "^6.22.0",
        "babel-template": "^6.24.1"
      }
    },
    "babel-plugin-transform-es2015-modules-commonjs": {
      "version": "6.26.2",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-modules-commonjs/-/babel-plugin-transform-es2015-modules-commonjs-6.26.2.tgz",
      "integrity": "sha512-CV9ROOHEdrjcwhIaJNBGMBCodN+1cfkwtM1SbUHmvyy35KGT7fohbpOxkE2uLz1o6odKK2Ck/tz47z+VqQfi9Q==",
      "dev": true,
      "requires": {
        "babel-plugin-transform-strict-mode": "^6.24.1",
        "babel-runtime": "^6.26.0",
        "babel-template": "^6.26.0",
        "babel-types": "^6.26.0"
      }
    },
    "babel-plugin-transform-es2015-modules-systemjs": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-modules-systemjs/-/babel-plugin-transform-es2015-modules-systemjs-6.24.1.tgz",
      "integrity": "sha1-/4mhQrkRmpBhlfXxBuzzBdlAfSM=",
      "dev": true,
      "requires": {
        "babel-helper-hoist-variables": "^6.24.1",
        "babel-runtime": "^6.22.0",
        "babel-template": "^6.24.1"
      }
    },
    "babel-plugin-transform-es2015-modules-umd": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-modules-umd/-/babel-plugin-transform-es2015-modules-umd-6.24.1.tgz",
      "integrity": "sha1-rJl+YoXNGO1hdq22B9YCNErThGg=",
      "dev": true,
      "requires": {
        "babel-plugin-transform-es2015-modules-amd": "^6.24.1",
        "babel-runtime": "^6.22.0",
        "babel-template": "^6.24.1"
      }
    },
    "babel-plugin-transform-es2015-object-super": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-object-super/-/babel-plugin-transform-es2015-object-super-6.24.1.tgz",
      "integrity": "sha1-JM72muIcuDp/hgPa0CH1cusnj40=",
      "dev": true,
      "requires": {
        "babel-helper-replace-supers": "^6.24.1",
        "babel-runtime": "^6.22.0"
      }
    },
    "babel-plugin-transform-es2015-parameters": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-parameters/-/babel-plugin-transform-es2015-parameters-6.24.1.tgz",
      "integrity": "sha1-V6w1GrScrxSpfNE7CfZv3wpiXys=",
      "dev": true,
      "requires": {
        "babel-helper-call-delegate": "^6.24.1",
        "babel-helper-get-function-arity": "^6.24.1",
        "babel-runtime": "^6.22.0",
        "babel-template": "^6.24.1",
        "babel-traverse": "^6.24.1",
        "babel-types": "^6.24.1"
      }
    },
    "babel-plugin-transform-es2015-shorthand-properties": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-shorthand-properties/-/babel-plugin-transform-es2015-shorthand-properties-6.24.1.tgz",
      "integrity": "sha1-JPh11nIch2YbvZmkYi5R8U3jiqA=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0",
        "babel-types": "^6.24.1"
      }
    },
    "babel-plugin-transform-es2015-spread": {
      "version": "6.22.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-spread/-/babel-plugin-transform-es2015-spread-6.22.0.tgz",
      "integrity": "sha1-1taKmfia7cRTbIGlQujdnxdG+NE=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0"
      }
    },
    "babel-plugin-transform-es2015-sticky-regex": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-sticky-regex/-/babel-plugin-transform-es2015-sticky-regex-6.24.1.tgz",
      "integrity": "sha1-AMHNsaynERLN8M9hJsLta0V8zbw=",
      "dev": true,
      "requires": {
        "babel-helper-regex": "^6.24.1",
        "babel-runtime": "^6.22.0",
        "babel-types": "^6.24.1"
      }
    },
    "babel-plugin-transform-es2015-template-literals": {
      "version": "6.22.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-template-literals/-/babel-plugin-transform-es2015-template-literals-6.22.0.tgz",
      "integrity": "sha1-qEs0UPfp+PH2g51taH2oS7EjbY0=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0"
      }
    },
    "babel-plugin-transform-es2015-typeof-symbol": {
      "version": "6.23.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-typeof-symbol/-/babel-plugin-transform-es2015-typeof-symbol-6.23.0.tgz",
      "integrity": "sha1-3sCfHN3/lLUqxz1QXITfWdzOs3I=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0"
      }
    },
    "babel-plugin-transform-es2015-unicode-regex": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-unicode-regex/-/babel-plugin-transform-es2015-unicode-regex-6.24.1.tgz",
      "integrity": "sha1-04sS9C6nMj9yk4fxinxa4frrNek=",
      "dev": true,
      "requires": {
        "babel-helper-regex": "^6.24.1",
        "babel-runtime": "^6.22.0",
        "regexpu-core": "^2.0.0"
      }
    },
    "babel-plugin-transform-inline-environment-variables": {
      "version": "6.8.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-inline-environment-variables/-/babel-plugin-transform-inline-environment-variables-6.8.0.tgz",
      "integrity": "sha1-/JHdCBJ9xsKr39FyGxHpYCppuhA=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.0.0"
      }
    },
    "babel-plugin-transform-regenerator": {
      "version": "6.26.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-regenerator/-/babel-plugin-transform-regenerator-6.26.0.tgz",
      "integrity": "sha1-4HA2lvveJ/Cj78rPi03KL3s6jy8=",
      "dev": true,
      "requires": {
        "regenerator-transform": "^0.10.0"
      }
    },
    "babel-plugin-transform-runtime": {
      "version": "6.23.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-runtime/-/babel-plugin-transform-runtime-6.23.0.tgz",
      "integrity": "sha1-iEkNRGUC6puOfvsP4J7E2ZR5se4=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0"
      }
    },
    "babel-plugin-transform-strict-mode": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-strict-mode/-/babel-plugin-transform-strict-mode-6.24.1.tgz",
      "integrity": "sha1-1fr3qleKZbvlkc9e2uBKDGcCB1g=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0",
        "babel-types": "^6.24.1"
      }
    },
    "babel-polyfill": {
      "version": "6.26.0",
      "resolved": "https://registry.npmjs.org/babel-polyfill/-/babel-polyfill-6.26.0.tgz",
      "integrity": "sha1-N5k3q8Z9eJWXCtxiHyhM2WbPIVM=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.26.0",
        "core-js": "^2.5.0",
        "regenerator-runtime": "^0.10.5"
      },
      "dependencies": {
        "regenerator-runtime": {
          "version": "0.10.5",
          "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.10.5.tgz",
          "integrity": "sha1-M2w+/BIgrc7dosn6tntaeVWjNlg=",
          "dev": true
        }
      }
    },
    "babel-preset-es2015": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-preset-es2015/-/babel-preset-es2015-6.24.1.tgz",
      "integrity": "sha1-1EBQ1rwsn+6nAqrzjXJ6AhBTiTk=",
      "dev": true,
      "requires": {
        "babel-plugin-check-es2015-constants": "^6.22.0",
        "babel-plugin-transform-es2015-arrow-functions": "^6.22.0",
        "babel-plugin-transform-es2015-block-scoped-functions": "^6.22.0",
        "babel-plugin-transform-es2015-block-scoping": "^6.24.1",
        "babel-plugin-transform-es2015-classes": "^6.24.1",
        "babel-plugin-transform-es2015-computed-properties": "^6.24.1",
        "babel-plugin-transform-es2015-destructuring": "^6.22.0",
        "babel-plugin-transform-es2015-duplicate-keys": "^6.24.1",
        "babel-plugin-transform-es2015-for-of": "^6.22.0",
        "babel-plugin-transform-es2015-function-name": "^6.24.1",
        "babel-plugin-transform-es2015-literals": "^6.22.0",
        "babel-plugin-transform-es2015-modules-amd": "^6.24.1",
        "babel-plugin-transform-es2015-modules-commonjs": "^6.24.1",
        "babel-plugin-transform-es2015-modules-systemjs": "^6.24.1",
        "babel-plugin-transform-es2015-modules-umd": "^6.24.1",
        "babel-plugin-transform-es2015-object-super": "^6.24.1",
        "babel-plugin-transform-es2015-parameters": "^6.24.1",
        "babel-plugin-transform-es2015-shorthand-properties": "^6.24.1",
        "babel-plugin-transform-es2015-spread": "^6.22.0",
        "babel-plugin-transform-es2015-sticky-regex": "^6.24.1",
        "babel-plugin-transform-es2015-template-literals": "^6.22.0",
        "babel-plugin-transform-es2015-typeof-symbol": "^6.22.0",
        "babel-plugin-transform-es2015-unicode-regex": "^6.24.1",
        "babel-plugin-transform-regenerator": "^6.24.1"
      }
    },
    "babel-register": {
      "version": "6.26.0",
      "resolved": "https://registry.npmjs.org/babel-register/-/babel-register-6.26.0.tgz",
      "integrity": "sha1-btAhFz4vy0htestFxgCahW9kcHE=",
      "dev": true,
      "requires": {
        "babel-core": "^6.26.0",
        "babel-runtime": "^6.26.0",
        "core-js": "^2.5.0",
        "home-or-tmp": "^2.0.0",
        "lodash": "^4.17.4",
        "mkdirp": "^0.5.1",
        "source-map-support": "^0.4.15"
      }
    },
    "babel-runtime": {
      "version": "6.26.0",
      "resolved": "https://registry.npmjs.org/babel-runtime/-/babel-runtime-6.26.0.tgz",
      "integrity": "sha1-llxwWGaOgrVde/4E/yM3vItWR/4=",
      "dev": true,
      "requires": {
        "core-js": "^2.4.0",
        "regenerator-runtime": "^0.11.0"
      },
      "dependencies": {
        "regenerator-runtime": {
          "version": "0.11.1",
          "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.11.1.tgz",
          "integrity": "sha512-MguG95oij0fC3QV3URf4V2SDYGJhJnJGqvIIgdECeODCT98wSWDAJ94SSuVpYQUoTcGUIL6L4yNB7j1DFFHSBg==",
          "dev": true
        }
      }
    },
    "babel-template": {
      "version": "6.26.0",
      "resolved": "https://registry.npmjs.org/babel-template/-/babel-template-6.26.0.tgz",
      "integrity": "sha1-3gPi0WOWsGn0bdn/+FIfsaDjXgI=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.26.0",
        "babel-traverse": "^6.26.0",
        "babel-types": "^6.26.0",
        "babylon": "^6.18.0",
        "lodash": "^4.17.4"
      }
    },
    "babel-traverse": {
      "version": "6.26.0",
      "resolved": "https://registry.npmjs.org/babel-traverse/-/babel-traverse-6.26.0.tgz",
      "integrity": "sha1-RqnL1+3MYsjlwGTi0tjQ9ANXZu4=",
      "dev": true,
      "requires": {
        "babel-code-frame": "^6.26.0",
        "babel-messages": "^6.23.0",
        "babel-runtime": "^6.26.0",
        "babel-types": "^6.26.0",
        "babylon": "^6.18.0",
        "debug": "^2.6.8",
        "globals": "^9.18.0",
        "invariant": "^2.2.2",
        "lodash": "^4.17.4"
      }
    },
    "babel-types": {
      "version": "6.26.0",
      "resolved": "https://registry.npmjs.org/babel-types/-/babel-types-6.26.0.tgz",
      "integrity": "sha1-o7Bz+Uq0nrb6Vc1lInozQ4BjJJc=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.26.0",
        "esutils": "^2.0.2",
        "lodash": "^4.17.4",
        "to-fast-properties": "^1.0.3"
      }
    },
    "babelify": {
      "version": "7.3.0",
      "resolved": "https://registry.npmjs.org/babelify/-/babelify-7.3.0.tgz",
      "integrity": "sha1-qlau3nBn/XvVSWZu4W3ChQh+iOU=",
      "dev": true,
      "requires": {
        "babel-core": "^6.0.14",
        "object-assign": "^4.0.0"
      }
    },
    "babylon": {
      "version": "6.18.0",
      "resolved": "https://registry.npmjs.org/babylon/-/babylon-6.18.0.tgz",
      "integrity": "sha512-q/UEjfGJ2Cm3oKV71DJz9d25TPnq5rhBVL2Q4fA5wcC3jcrdn7+SssEybFIxwAvvP+YCsCYNKughoF33GxgycQ==",
      "dev": true
    },
    "backo2": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/backo2/-/backo2-1.0.2.tgz",
      "integrity": "sha1-MasayLEpNjRj41s+u2n038+6eUc=",
      "dev": true
    },
    "balanced-match": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.0.tgz",
      "integrity": "sha1-ibTRmasr7kneFk6gK4nORi1xt2c=",
      "dev": true
    },
    "base": {
      "version": "0.11.2",
      "resolved": "https://registry.npmjs.org/base/-/base-0.11.2.tgz",
      "integrity": "sha512-5T6P4xPgpp0YDFvSWwEZ4NoE3aM4QBQXDzmVbraCkFj8zHM+mba8SyqB5DbZWyR7mYHo6Y7BdQo3MoA4m0TeQg==",
      "dev": true,
      "requires": {
        "cache-base": "^1.0.1",
        "class-utils": "^0.3.5",
        "component-emitter": "^1.2.1",
        "define-property": "^1.0.0",
        "isobject": "^3.0.1",
        "mixin-deep": "^1.2.0",
        "pascalcase": "^0.1.1"
      },
      "dependencies": {
        "define-property": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/define-property/-/define-property-1.0.0.tgz",
          "integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
          "dev": true,
          "requires": {
            "is-descriptor": "^1.0.0"
          }
        },
        "is-accessor-descriptor": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",
          "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",
          "dev": true,
          "requires": {
            "kind-of": "^6.0.0"
          }
        },
        "is-data-descriptor": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",
          "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",
          "dev": true,
          "requires": {
            "kind-of": "^6.0.0"
          }
        },
        "is-descriptor": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",
          "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",
          "dev": true,
          "requires": {
            "is-accessor-descriptor": "^1.0.0",
            "is-data-descriptor": "^1.0.0",
            "kind-of": "^6.0.2"
          }
        },
        "isobject": {
          "version": "3.0.1",
          "resolved": "https://registry.npmjs.org/isobject/-/isobject-3.0.1.tgz",
          "integrity": "sha1-TkMekrEalzFjaqH5yNHMvP2reN8=",
          "dev": true
        },
        "kind-of": {
          "version": "6.0.3",
          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.3.tgz",
          "integrity": "sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw==",
          "dev": true
        }
      }
    },
    "base-x": {
      "version": "3.0.8",
      "resolved": "https://registry.npmjs.org/base-x/-/base-x-3.0.8.tgz",
      "integrity": "sha512-Rl/1AWP4J/zRrk54hhlxH4drNxPJXYUaKffODVI53/dAsV4t9fBxyxYKAVPU1XBHxYwOWP9h9H0hM2MVw4YfJA==",
      "dev": true,
      "requires": {
        "safe-buffer": "^5.0.1"
      }
    },
    "base64-arraybuffer": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/base64-arraybuffer/-/base64-arraybuffer-0.1.4.tgz",
      "integrity": "sha1-mBjHngWbE1X5fgQooBfIOOkLqBI=",
      "dev": true
    },
    "base64-js": {
      "version": "1.5.1",
      "resolved": "https://registry.npmjs.org/base64-js/-/base64-js-1.5.1.tgz",
      "integrity": "sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA=="
    },
    "base64id": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/base64id/-/base64id-1.0.0.tgz",
      "integrity": "sha1-R2iMuZu2gE8OBtPnY7HDLlfY5rY=",
      "dev": true
    },
    "batch": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/batch/-/batch-0.6.1.tgz",
      "integrity": "sha1-3DQxT05nkxgJP8dgJyUl+UvyXBY=",
      "dev": true
    },
    "bcrypt-pbkdf": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.2.tgz",
      "integrity": "sha1-pDAdOJtqQ/m2f/PKEaP2Y342Dp4=",
      "dev": true,
      "requires": {
        "tweetnacl": "^0.14.3"
      }
    },
    "bech32": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/bech32/-/bech32-1.1.4.tgz",
      "integrity": "sha512-s0IrSOzLlbvX7yp4WBfPITzpAU8sqQcpsmwXDiKwrG4r491vwCO/XpejasRNl0piBMe/DvP4Tz0mIS/X1DPJBQ==",
      "dev": true
    },
    "beeper": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/beeper/-/beeper-1.1.1.tgz",
      "integrity": "sha1-5tXqjF2tABMEpwsiY4RH9pyy+Ak=",
      "dev": true
    },
    "better-assert": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/better-assert/-/better-assert-1.0.2.tgz",
      "integrity": "sha1-QIZrnhueC1W0gYlDEeaPr/rrxSI=",
      "dev": true,
      "requires": {
        "callsite": "1.0.0"
      }
    },
    "bigi": {
      "version": "1.4.2",
      "resolved": "https://registry.npmjs.org/bigi/-/bigi-1.4.2.tgz",
      "integrity": "sha1-nGZalfiLiwj8Bc/XMfVhhZ1yWCU=",
      "dev": true
    },
    "bignumber.js": {
      "version": "9.0.1",
      "resolved": "https://registry.npmjs.org/bignumber.js/-/bignumber.js-9.0.1.tgz",
      "integrity": "sha512-IdZR9mh6ahOBv/hYGiXyVuyCetmGJhtYkqLBpTStdhEGjegpPlUawydyaF3pbIOFynJTpllEs+NP+CS9jKFLjA==",
      "dev": true
    },
    "binary-extensions": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.1.0.tgz",
      "integrity": "sha512-1Yj8h9Q+QDF5FzhMs/c9+6UntbD5MkRfRwac8DoEm9ZfUBZ7tZ55YcGVAzEe4bXsdQHEk+s9S5wsOKVdZrw0tQ==",
      "dev": true
    },
    "bindings": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/bindings/-/bindings-1.5.0.tgz",
      "integrity": "sha512-p2q/t/mhvuOj/UeLlV6566GD/guowlr0hHxClI0W9m7MWYkL1F0hLo+0Aexs9HSPCtR1SXQ0TD3MMKrXZajbiQ==",
      "requires": {
        "file-uri-to-path": "1.0.0"
      }
    },
    "bip32": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/bip32/-/bip32-1.0.4.tgz",
      "integrity": "sha512-8T21eLWylZETolyqCPgia+MNp+kY37zFr7PTFDTPObHeNi9JlfG4qGIh8WzerIJidtwoK+NsWq2I5i66YfHoIw==",
      "dev": true,
      "requires": {
        "bs58check": "^2.1.1",
        "create-hash": "^1.2.0",
        "create-hmac": "^1.1.7",
        "tiny-secp256k1": "^1.0.0",
        "typeforce": "^1.11.5",
        "wif": "^2.0.6"
      }
    },
    "bip32-path": {
      "version": "0.4.2",
      "resolved": "https://registry.npmjs.org/bip32-path/-/bip32-path-0.4.2.tgz",
      "integrity": "sha1-XbBBataCJxLwd4NuJVe4aXwMfJk=",
      "dev": true
    },
    "bip39": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/bip39/-/bip39-3.0.3.tgz",
      "integrity": "sha512-P0dKrz4g0V0BjXfx7d9QNkJ/Txcz/k+hM9TnjqjUaXtuOfAvxXSw2rJw8DX0e3ZPwnK/IgDxoRqf0bvoVCqbMg==",
      "dev": true,
      "requires": {
        "@types/node": "11.11.6",
        "create-hash": "^1.1.0",
        "pbkdf2": "^3.0.9",
        "randombytes": "^2.0.1"
      },
      "dependencies": {
        "@types/node": {
          "version": "11.11.6",
          "resolved": "https://registry.npmjs.org/@types/node/-/node-11.11.6.tgz",
          "integrity": "sha512-Exw4yUWMBXM3X+8oqzJNRqZSwUAaS4+7NdvHqQuFi/d+synz++xmX3QIf+BFqneW8N31R8Ky+sikfZUXq07ggQ==",
          "dev": true
        }
      }
    },
    "bip44-constants": {
      "version": "8.0.80",
      "resolved": "https://registry.npmjs.org/bip44-constants/-/bip44-constants-8.0.80.tgz",
      "integrity": "sha512-iPP3+BsklRtYYmUQGUsEQzDXnnRMyte81CBP+z7tG06dKV1dkDDKTyhUkPIJ4kCE/8En02BDvoQ3HqjbyIxtIw==",
      "dev": true
    },
    "bip66": {
      "version": "1.1.5",
      "resolved": "https://registry.npmjs.org/bip66/-/bip66-1.1.5.tgz",
      "integrity": "sha1-AfqHSHhcpwlV1QESF9GzE5lpyiI=",
      "dev": true,
      "requires": {
        "safe-buffer": "^5.0.1"
      }
    },
    "bitcoin-ops": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/bitcoin-ops/-/bitcoin-ops-1.4.1.tgz",
      "integrity": "sha512-pef6gxZFztEhaE9RY9HmWVmiIHqCb2OyS4HPKkpc6CIiiOa3Qmuoylxc5P2EkU3w+5eTSifI9SEZC88idAIGow==",
      "dev": true
    },
    "bitcoinjs-lib": {
      "version": "3.3.2",
      "resolved": "https://registry.npmjs.org/bitcoinjs-lib/-/bitcoinjs-lib-3.3.2.tgz",
      "integrity": "sha512-l5qqvbaK8wwtANPf6oEffykycg4383XgEYdia1rI7/JpGf1jfRWlOUCvx5TiTZS7kyIvY4j/UhIQ2urLsvGkzw==",
      "dev": true,
      "requires": {
        "bech32": "^1.1.2",
        "bigi": "^1.4.0",
        "bip66": "^1.1.0",
        "bitcoin-ops": "^1.3.0",
        "bs58check": "^2.0.0",
        "create-hash": "^1.1.0",
        "create-hmac": "^1.1.3",
        "ecurve": "^1.0.0",
        "merkle-lib": "^2.0.10",
        "pushdata-bitcoin": "^1.0.1",
        "randombytes": "^2.0.1",
        "safe-buffer": "^5.0.1",
        "typeforce": "^1.11.3",
        "varuint-bitcoin": "^1.0.4",
        "wif": "^2.0.1"
      }
    },
    "bl": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/bl/-/bl-1.2.3.tgz",
      "integrity": "sha512-pvcNpa0UU69UT341rO6AYy4FVAIkUHuZXRIWbq+zHnsVcRzDDjIAhGuuYoi0d//cwIwtt4pkpKycWEfjdV+vww==",
      "dev": true,
      "requires": {
        "readable-stream": "^2.3.5",
        "safe-buffer": "^5.1.1"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "blob": {
      "version": "0.0.5",
      "resolved": "https://registry.npmjs.org/blob/-/blob-0.0.5.tgz",
      "integrity": "sha512-gaqbzQPqOoamawKg0LGVd7SzLgXS+JH61oWprSLH+P+abTczqJbhTR8CmJ2u9/bUYNmHTGJx/UEmn6doAvvuig==",
      "dev": true
    },
    "block-stream": {
      "version": "0.0.9",
      "resolved": "https://registry.npmjs.org/block-stream/-/block-stream-0.0.9.tgz",
      "integrity": "sha1-E+v+d4oDIFz+A3UUgeu0szAMEmo=",
      "dev": true,
      "requires": {
        "inherits": "~2.0.0"
      }
    },
    "bluebird": {
      "version": "3.7.2",
      "resolved": "https://registry.npmjs.org/bluebird/-/bluebird-3.7.2.tgz",
      "integrity": "sha512-XpNj6GDQzdfW+r2Wnn7xiSAd7TM3jzkxGXBGTtWKuSXv1xUV+azxAm8jdWZN06QTQk+2N2XB9jRDkvbmQmcRtg==",
      "dev": true
    },
    "bluebird-lst": {
      "version": "1.0.9",
      "resolved": "https://registry.npmjs.org/bluebird-lst/-/bluebird-lst-1.0.9.tgz",
      "integrity": "sha512-7B1Rtx82hjnSD4PGLAjVWeYH3tHAcVUmChh85a3lltKQm6FresXh9ErQo6oAv6CqxttczC3/kEg8SY5NluPuUw==",
      "dev": true,
      "requires": {
        "bluebird": "^3.5.5"
      }
    },
    "bn.js": {
      "version": "5.1.3",
      "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-5.1.3.tgz",
      "integrity": "sha512-GkTiFpjFtUzU9CbMeJ5iazkCzGL3jrhzerzZIuqLABjbwRaFt33I9tUdSNryIptM+RxDet6OKm2WnLXzW51KsQ==",
      "dev": true
    },
    "boolean": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/boolean/-/boolean-3.0.2.tgz",
      "integrity": "sha512-RwywHlpCRc3/Wh81MiCKun4ydaIFyW5Ea6JbL6sRCVx5q5irDw7pMXBUFYF/jArQ6YrG36q0kpovc9P/Kd3I4g==",
      "dev": true,
      "optional": true
    },
    "boom": {
      "version": "2.10.1",
      "resolved": "https://registry.npmjs.org/boom/-/boom-2.10.1.tgz",
      "integrity": "sha1-OciRjO/1eZ+D+UkqhI9iWt0Mdm8=",
      "dev": true,
      "requires": {
        "hoek": "2.x.x"
      }
    },
    "bootstrap": {
      "version": "3.3.7",
      "resolved": "https://registry.npmjs.org/bootstrap/-/bootstrap-3.3.7.tgz",
      "integrity": "sha1-WjiTlFSfIzMIdaOxUGVldPip63E=",
      "dev": true
    },
    "boxen": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/boxen/-/boxen-1.3.0.tgz",
      "integrity": "sha512-TNPjfTr432qx7yOjQyaXm3dSR0MH9vXp7eT1BFSl/C51g+EFnOR9hTg1IreahGBmDNCehscshe45f+C1TBZbLw==",
      "dev": true,
      "requires": {
        "ansi-align": "^2.0.0",
        "camelcase": "^4.0.0",
        "chalk": "^2.0.1",
        "cli-boxes": "^1.0.0",
        "string-width": "^2.0.0",
        "term-size": "^1.2.0",
        "widest-line": "^2.0.0"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
          "integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg=",
          "dev": true
        },
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "camelcase": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-4.1.0.tgz",
          "integrity": "sha1-1UVjW+HjPFQmScaRc+Xeas+uNN0=",
          "dev": true
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "dev": true,
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          }
        },
        "has-flag": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
          "integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0=",
          "dev": true
        },
        "string-width": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-2.1.1.tgz",
          "integrity": "sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==",
          "dev": true,
          "requires": {
            "is-fullwidth-code-point": "^2.0.0",
            "strip-ansi": "^4.0.0"
          }
        },
        "strip-ansi": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
          "integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
          "dev": true,
          "requires": {
            "ansi-regex": "^3.0.0"
          }
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "dev": true,
      "requires": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "braces": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.2.tgz",
      "integrity": "sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==",
      "dev": true,
      "requires": {
        "fill-range": "^7.0.1"
      }
    },
    "brorand": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/brorand/-/brorand-1.1.0.tgz",
      "integrity": "sha1-EsJe/kCkXjwyPrhnWgoM5XsiNx8=",
      "dev": true
    },
    "browser-pack": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/browser-pack/-/browser-pack-6.1.0.tgz",
      "integrity": "sha512-erYug8XoqzU3IfcU8fUgyHqyOXqIE4tUTTQ+7mqUjQlvnXkOO6OlT9c/ZoJVHYoAaqGxr09CN53G7XIsO4KtWA==",
      "dev": true,
      "requires": {
        "JSONStream": "^1.0.3",
        "combine-source-map": "~0.8.0",
        "defined": "^1.0.0",
        "safe-buffer": "^5.1.1",
        "through2": "^2.0.0",
        "umd": "^3.0.0"
      }
    },
    "browser-resolve": {
      "version": "1.11.3",
      "resolved": "https://registry.npmjs.org/browser-resolve/-/browser-resolve-1.11.3.tgz",
      "integrity": "sha512-exDi1BYWB/6raKHmDTCicQfTkqwN5fioMFV4j8BsfMU4R2DK/QfZfK7kOVkmWCNANf0snkBzqGqAJBao9gZMdQ==",
      "dev": true,
      "requires": {
        "resolve": "1.1.7"
      },
      "dependencies": {
        "resolve": {
          "version": "1.1.7",
          "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.1.7.tgz",
          "integrity": "sha1-IDEU2CrSxe2ejgQRs5ModeiJ6Xs=",
          "dev": true
        }
      }
    },
    "browser-sync": {
      "version": "2.26.13",
      "resolved": "https://registry.npmjs.org/browser-sync/-/browser-sync-2.26.13.tgz",
      "integrity": "sha512-JPYLTngIzI+Dzx+StSSlMtF+Q9yjdh58HW6bMFqkFXuzQkJL8FCvp4lozlS6BbECZcsM2Gmlgp0uhEjvl18X4w==",
      "dev": true,
      "requires": {
        "browser-sync-client": "^2.26.13",
        "browser-sync-ui": "^2.26.13",
        "bs-recipes": "1.3.4",
        "bs-snippet-injector": "^2.0.1",
        "chokidar": "^3.4.1",
        "connect": "3.6.6",
        "connect-history-api-fallback": "^1",
        "dev-ip": "^1.0.1",
        "easy-extender": "^2.3.4",
        "eazy-logger": "3.1.0",
        "etag": "^1.8.1",
        "fresh": "^0.5.2",
        "fs-extra": "3.0.1",
        "http-proxy": "^1.18.1",
        "immutable": "^3",
        "localtunnel": "^2.0.0",
        "micromatch": "^4.0.2",
        "opn": "5.3.0",
        "portscanner": "2.1.1",
        "qs": "6.2.3",
        "raw-body": "^2.3.2",
        "resp-modifier": "6.0.2",
        "rx": "4.1.0",
        "send": "0.16.2",
        "serve-index": "1.9.1",
        "serve-static": "1.13.2",
        "server-destroy": "1.0.1",
        "socket.io": "2.1.1",
        "ua-parser-js": "^0.7.18",
        "yargs": "^15.4.1"
      }
    },
    "browser-sync-client": {
      "version": "2.26.13",
      "resolved": "https://registry.npmjs.org/browser-sync-client/-/browser-sync-client-2.26.13.tgz",
      "integrity": "sha512-p2VbZoYrpuDhkreq+/Sv1MkToHklh7T1OaIntDwpG6Iy2q/XkBcgwPcWjX+WwRNiZjN8MEehxIjEUh12LweLmQ==",
      "dev": true,
      "requires": {
        "etag": "1.8.1",
        "fresh": "0.5.2",
        "mitt": "^1.1.3",
        "rxjs": "^5.5.6"
      },
      "dependencies": {
        "rxjs": {
          "version": "5.5.12",
          "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-5.5.12.tgz",
          "integrity": "sha512-xx2itnL5sBbqeeiVgNPVuQQ1nC8Jp2WfNJhXWHmElW9YmrpS9UVnNzhP3EH3HFqexO5Tlp8GhYY+WEcqcVMvGw==",
          "dev": true,
          "requires": {
            "symbol-observable": "1.0.1"
          }
        }
      }
    },
    "browser-sync-ui": {
      "version": "2.26.13",
      "resolved": "https://registry.npmjs.org/browser-sync-ui/-/browser-sync-ui-2.26.13.tgz",
      "integrity": "sha512-6NJ/pCnhCnBMzaty1opWo7ipDmFAIk8U71JMQGKJxblCUaGfdsbF2shf6XNZSkXYia1yS0vwKu9LIOzpXqQZCA==",
      "dev": true,
      "requires": {
        "async-each-series": "0.1.1",
        "connect-history-api-fallback": "^1",
        "immutable": "^3",
        "server-destroy": "1.0.1",
        "socket.io-client": "^2.0.4",
        "stream-throttle": "^0.1.3"
      }
    },
    "browserify": {
      "version": "13.3.0",
      "resolved": "https://registry.npmjs.org/browserify/-/browserify-13.3.0.tgz",
      "integrity": "sha1-tanJAgJD8McORnW+yCI7xifkFc4=",
      "dev": true,
      "requires": {
        "JSONStream": "^1.0.3",
        "assert": "^1.4.0",
        "browser-pack": "^6.0.1",
        "browser-resolve": "^1.11.0",
        "browserify-zlib": "~0.1.2",
        "buffer": "^4.1.0",
        "cached-path-relative": "^1.0.0",
        "concat-stream": "~1.5.1",
        "console-browserify": "^1.1.0",
        "constants-browserify": "~1.0.0",
        "crypto-browserify": "^3.0.0",
        "defined": "^1.0.0",
        "deps-sort": "^2.0.0",
        "domain-browser": "~1.1.0",
        "duplexer2": "~0.1.2",
        "events": "~1.1.0",
        "glob": "^7.1.0",
        "has": "^1.0.0",
        "htmlescape": "^1.1.0",
        "https-browserify": "~0.0.0",
        "inherits": "~2.0.1",
        "insert-module-globals": "^7.0.0",
        "labeled-stream-splicer": "^2.0.0",
        "module-deps": "^4.0.8",
        "os-browserify": "~0.1.1",
        "parents": "^1.0.1",
        "path-browserify": "~0.0.0",
        "process": "~0.11.0",
        "punycode": "^1.3.2",
        "querystring-es3": "~0.2.0",
        "read-only-stream": "^2.0.0",
        "readable-stream": "^2.0.2",
        "resolve": "^1.1.4",
        "shasum": "^1.0.0",
        "shell-quote": "^1.6.1",
        "stream-browserify": "^2.0.0",
        "stream-http": "^2.0.0",
        "string_decoder": "~0.10.0",
        "subarg": "^1.0.0",
        "syntax-error": "^1.1.1",
        "through2": "^2.0.0",
        "timers-browserify": "^1.0.1",
        "tty-browserify": "~0.0.0",
        "url": "~0.11.0",
        "util": "~0.10.1",
        "vm-browserify": "~0.0.1",
        "xtend": "^4.0.0"
      },
      "dependencies": {
        "glob": {
          "version": "7.1.6",
          "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.6.tgz",
          "integrity": "sha512-LwaxwyZ72Lk7vZINtNNrywX0ZuLyStrdDtabefZKAY5ZGJhVtgdznluResxNmPitE0SAO+O26sWTHeKSI2wMBA==",
          "dev": true,
          "requires": {
            "fs.realpath": "^1.0.0",
            "inflight": "^1.0.4",
            "inherits": "2",
            "minimatch": "^3.0.4",
            "once": "^1.3.0",
            "path-is-absolute": "^1.0.0"
          }
        },
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          },
          "dependencies": {
            "string_decoder": {
              "version": "1.1.1",
              "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
              "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
              "dev": true,
              "requires": {
                "safe-buffer": "~5.1.0"
              }
            }
          }
        },
        "string_decoder": {
          "version": "0.10.31",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz",
          "integrity": "sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=",
          "dev": true
        }
      }
    },
    "browserify-aes": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/browserify-aes/-/browserify-aes-1.2.0.tgz",
      "integrity": "sha512-+7CHXqGuspUn/Sl5aO7Ea0xWGAtETPXNSAjHo48JfLdPWcMng33Xe4znFvQweqc/uzk5zSOI3H52CYnjCfb5hA==",
      "dev": true,
      "requires": {
        "buffer-xor": "^1.0.3",
        "cipher-base": "^1.0.0",
        "create-hash": "^1.1.0",
        "evp_bytestokey": "^1.0.3",
        "inherits": "^2.0.1",
        "safe-buffer": "^5.0.1"
      }
    },
    "browserify-cipher": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/browserify-cipher/-/browserify-cipher-1.0.1.tgz",
      "integrity": "sha512-sPhkz0ARKbf4rRQt2hTpAHqn47X3llLkUGn+xEJzLjwY8LRs2p0v7ljvI5EyoRO/mexrNunNECisZs+gw2zz1w==",
      "dev": true,
      "requires": {
        "browserify-aes": "^1.0.4",
        "browserify-des": "^1.0.0",
        "evp_bytestokey": "^1.0.0"
      }
    },
    "browserify-des": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/browserify-des/-/browserify-des-1.0.2.tgz",
      "integrity": "sha512-BioO1xf3hFwz4kc6iBhI3ieDFompMhrMlnDFC4/0/vd5MokpuAc3R+LYbwTA9A5Yc9pq9UYPqffKpW2ObuwX5A==",
      "dev": true,
      "requires": {
        "cipher-base": "^1.0.1",
        "des.js": "^1.0.0",
        "inherits": "^2.0.1",
        "safe-buffer": "^5.1.2"
      }
    },
    "browserify-ngannotate": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/browserify-ngannotate/-/browserify-ngannotate-2.0.0.tgz",
      "integrity": "sha1-pnYZ8HWX8aPrR0hP2H6EuwNdlW4=",
      "dev": true,
      "requires": {
        "clone": "^1.0.2",
        "defaults": "^1.0.3",
        "ng-annotate": "^1.0.2",
        "through2": "^2.0.0"
      }
    },
    "browserify-rsa": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/browserify-rsa/-/browserify-rsa-4.1.0.tgz",
      "integrity": "sha512-AdEER0Hkspgno2aR97SAf6vi0y0k8NuOpGnVH3O99rcA5Q6sh8QxcngtHuJ6uXwnfAXNM4Gn1Gb7/MV1+Ymbog==",
      "dev": true,
      "requires": {
        "bn.js": "^5.0.0",
        "randombytes": "^2.0.1"
      }
    },
    "browserify-sign": {
      "version": "4.2.1",
      "resolved": "https://registry.npmjs.org/browserify-sign/-/browserify-sign-4.2.1.tgz",
      "integrity": "sha512-/vrA5fguVAKKAVTNJjgSm1tRQDHUU6DbwO9IROu/0WAzC8PKhucDSh18J0RMvVeHAn5puMd+QHC2erPRNf8lmg==",
      "dev": true,
      "requires": {
        "bn.js": "^5.1.1",
        "browserify-rsa": "^4.0.1",
        "create-hash": "^1.2.0",
        "create-hmac": "^1.1.7",
        "elliptic": "^6.5.3",
        "inherits": "^2.0.4",
        "parse-asn1": "^5.1.5",
        "readable-stream": "^3.6.0",
        "safe-buffer": "^5.2.0"
      },
      "dependencies": {
        "safe-buffer": {
          "version": "5.2.1",
          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
          "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==",
          "dev": true
        }
      }
    },
    "browserify-zlib": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/browserify-zlib/-/browserify-zlib-0.1.4.tgz",
      "integrity": "sha1-uzX4pRn2AOD6a4SFJByXnQFB+y0=",
      "dev": true,
      "requires": {
        "pako": "~0.2.0"
      }
    },
    "browserslist": {
      "version": "1.7.7",
      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-1.7.7.tgz",
      "integrity": "sha1-C9dnBCWL6CmyOYu1Dkti0aFmsLk=",
      "dev": true,
      "requires": {
        "caniuse-db": "^1.0.30000639",
        "electron-to-chromium": "^1.2.7"
      }
    },
    "bs-recipes": {
      "version": "1.3.4",
      "resolved": "https://registry.npmjs.org/bs-recipes/-/bs-recipes-1.3.4.tgz",
      "integrity": "sha1-DS1NSKcYyMBEdp/cT4lZLci2lYU=",
      "dev": true
    },
    "bs-snippet-injector": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/bs-snippet-injector/-/bs-snippet-injector-2.0.1.tgz",
      "integrity": "sha1-YbU5PxH1JVntEgaTEANDtu2wTdU=",
      "dev": true
    },
    "bs58": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/bs58/-/bs58-4.0.1.tgz",
      "integrity": "sha1-vhYedsNU9veIrkBx9j806MTwpCo=",
      "dev": true,
      "requires": {
        "base-x": "^3.0.2"
      }
    },
    "bs58check": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/bs58check/-/bs58check-2.1.2.tgz",
      "integrity": "sha512-0TS1jicxdU09dwJMNZtVAfzPi6Q6QeN0pM1Fkzrjn+XYHvzMKPU3pHVpva+769iNVSfIYWf7LJ6WR+BuuMf8cA==",
      "dev": true,
      "requires": {
        "bs58": "^4.0.0",
        "create-hash": "^1.1.0",
        "safe-buffer": "^5.1.2"
      }
    },
    "buffer": {
      "version": "4.9.2",
      "resolved": "https://registry.npmjs.org/buffer/-/buffer-4.9.2.tgz",
      "integrity": "sha512-xq+q3SRMOxGivLhBNaUdC64hDTQwejJ+H0T/NB1XMtTVEwNTrfFF3gAxiyW0Bu/xWEGhjVKgUcMhCrUy2+uCWg==",
      "dev": true,
      "requires": {
        "base64-js": "^1.0.2",
        "ieee754": "^1.1.4",
        "isarray": "^1.0.0"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        }
      }
    },
    "buffer-alloc": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/buffer-alloc/-/buffer-alloc-1.2.0.tgz",
      "integrity": "sha512-CFsHQgjtW1UChdXgbyJGtnm+O/uLQeZdtbDo8mfUgYXCHSM1wgrVxXm6bSyrUuErEb+4sYVGCzASBRot7zyrow==",
      "dev": true,
      "requires": {
        "buffer-alloc-unsafe": "^1.1.0",
        "buffer-fill": "^1.0.0"
      }
    },
    "buffer-alloc-unsafe": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/buffer-alloc-unsafe/-/buffer-alloc-unsafe-1.1.0.tgz",
      "integrity": "sha512-TEM2iMIEQdJ2yjPJoSIsldnleVaAk1oW3DBVUykyOLsEsFmEc9kn+SFFPz+gl54KQNxlDnAwCXosOS9Okx2xAg==",
      "dev": true
    },
    "buffer-crc32": {
      "version": "0.2.13",
      "resolved": "https://registry.npmjs.org/buffer-crc32/-/buffer-crc32-0.2.13.tgz",
      "integrity": "sha1-DTM+PwDqxQqhRUq9MO+MKl2ackI=",
      "dev": true
    },
    "buffer-fill": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/buffer-fill/-/buffer-fill-1.0.0.tgz",
      "integrity": "sha1-+PeLdniYiO858gXNY39o5wISKyw=",
      "dev": true
    },
    "buffer-from": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.1.tgz",
      "integrity": "sha512-MQcXEUbCKtEo7bhqEs6560Hyd4XaovZlO/k9V3hjVUF/zwW7KBVdSK4gIt/bzwS9MbR5qob+F5jusZsb0YQK2A==",
      "dev": true
    },
    "buffer-reverse": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/buffer-reverse/-/buffer-reverse-1.0.1.tgz",
      "integrity": "sha1-SSg8jvpvkBvAH6MwTQYCeXGuL2A=",
      "dev": true
    },
    "buffer-to-arraybuffer": {
      "version": "0.0.5",
      "resolved": "https://registry.npmjs.org/buffer-to-arraybuffer/-/buffer-to-arraybuffer-0.0.5.tgz",
      "integrity": "sha1-YGSkD6dutDxyOrqe+PbhIW0QURo=",
      "dev": true
    },
    "buffer-to-vinyl": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/buffer-to-vinyl/-/buffer-to-vinyl-1.1.0.tgz",
      "integrity": "sha1-APFfruOreh3aLN5tkSG//dB7ImI=",
      "dev": true,
      "requires": {
        "file-type": "^3.1.0",
        "readable-stream": "^2.0.2",
        "uuid": "^2.0.1",
        "vinyl": "^1.0.0"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        },
        "uuid": {
          "version": "2.0.3",
          "resolved": "https://registry.npmjs.org/uuid/-/uuid-2.0.3.tgz",
          "integrity": "sha1-Z+LoY3lyFVMN/zGOW/nc6/1Hsho=",
          "dev": true
        },
        "vinyl": {
          "version": "1.2.0",
          "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-1.2.0.tgz",
          "integrity": "sha1-XIgDbPVl5d8FVYv8kR+GVt8hiIQ=",
          "dev": true,
          "requires": {
            "clone": "^1.0.0",
            "clone-stats": "^0.0.1",
            "replace-ext": "0.0.1"
          }
        }
      }
    },
    "buffer-xor": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/buffer-xor/-/buffer-xor-1.0.3.tgz",
      "integrity": "sha1-JuYe0UIvtw3ULm42cp7VHYVf6Nk=",
      "dev": true
    },
    "bufferutil": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/bufferutil/-/bufferutil-4.0.2.tgz",
      "integrity": "sha512-AtnG3W6M8B2n4xDQ5R+70EXvOpnXsFYg/AK2yTZd+HQ/oxAdz+GI+DvjmhBw3L0ole+LJ0ngqY4JMbDzkfNzhA==",
      "dev": true,
      "requires": {
        "node-gyp-build": "^4.2.0"
      }
    },
    "builder-util": {
      "version": "22.9.1",
      "resolved": "https://registry.npmjs.org/builder-util/-/builder-util-22.9.1.tgz",
      "integrity": "sha512-5hN/XOaYu4ZQUS6F+5CXE6jTo+NAnVqAxDuKGSaHWb9bejfv/rluChTLoY3/nJh7RFjkoyVjvFJv7zQDB1QmHw==",
      "dev": true,
      "requires": {
        "7zip-bin": "~5.0.3",
        "@types/debug": "^4.1.5",
        "@types/fs-extra": "^9.0.1",
        "app-builder-bin": "3.5.10",
        "bluebird-lst": "^1.0.9",
        "builder-util-runtime": "8.7.2",
        "chalk": "^4.1.0",
        "debug": "^4.3.0",
        "fs-extra": "^9.0.1",
        "is-ci": "^2.0.0",
        "js-yaml": "^3.14.0",
        "source-map-support": "^0.5.19",
        "stat-mode": "^1.0.0",
        "temp-file": "^3.3.7"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "4.3.0",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
          "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
          "dev": true,
          "requires": {
            "color-convert": "^2.0.1"
          }
        },
        "chalk": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.0.tgz",
          "integrity": "sha512-qwx12AxXe2Q5xQ43Ac//I6v5aXTipYrSESdOgzrN+9XjgEpyjpKuvSGaN4qE93f7TQTlerQQ8S+EQ0EyDoVL1A==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "ci-info": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-2.0.0.tgz",
          "integrity": "sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ==",
          "dev": true
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "dev": true,
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "debug": {
          "version": "4.3.1",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.1.tgz",
          "integrity": "sha512-doEwdvm4PCeK4K3RQN2ZC2BYUBaxwLARCqZmMjtF8a51J2Rb0xpVloFRnCODwqjpwnAoao4pelN8l3RJdv3gRQ==",
          "dev": true,
          "requires": {
            "ms": "2.1.2"
          }
        },
        "fs-extra": {
          "version": "9.0.1",
          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-9.0.1.tgz",
          "integrity": "sha512-h2iAoN838FqAFJY2/qVpzFXy+EBxfVE220PalAqQLDVsFOHLJrZvut5puAbCdNv6WJk+B8ihI+k0c7JK5erwqQ==",
          "dev": true,
          "requires": {
            "at-least-node": "^1.0.0",
            "graceful-fs": "^4.2.0",
            "jsonfile": "^6.0.1",
            "universalify": "^1.0.0"
          }
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "is-ci": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-ci/-/is-ci-2.0.0.tgz",
          "integrity": "sha512-YfJT7rkpQB0updsdHLGWrvhBJfcfzNNawYDNIyQXJz0IViGf75O8EBPKSdvw2rF+LGCsX4FZ8tcr3b19LcZq4w==",
          "dev": true,
          "requires": {
            "ci-info": "^2.0.0"
          }
        },
        "jsonfile": {
          "version": "6.1.0",
          "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz",
          "integrity": "sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.1.6",
            "universalify": "^2.0.0"
          },
          "dependencies": {
            "universalify": {
              "version": "2.0.0",
              "resolved": "https://registry.npmjs.org/universalify/-/universalify-2.0.0.tgz",
              "integrity": "sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW5nq5scPqq0ZDP9Zyl04oQ==",
              "dev": true
            }
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
          "dev": true
        },
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        },
        "source-map-support": {
          "version": "0.5.19",
          "resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.19.tgz",
          "integrity": "sha512-Wonm7zOCIJzBGQdB+thsPar0kYuCIzYvxZwlBa87yi/Mdjv7Tip2cyVbLj5o0cFPN4EVkuTwb3GDDyUx2DGnGw==",
          "dev": true,
          "requires": {
            "buffer-from": "^1.0.0",
            "source-map": "^0.6.0"
          }
        },
        "stat-mode": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/stat-mode/-/stat-mode-1.0.0.tgz",
          "integrity": "sha512-jH9EhtKIjuXZ2cWxmXS8ZP80XyC3iasQxMDV8jzhNJpfDb7VbQLVW4Wvsxz9QZvzV+G4YoSfBUVKDOyxLzi/sg==",
          "dev": true
        },
        "supports-color": {
          "version": "7.2.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
          "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        },
        "universalify": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/universalify/-/universalify-1.0.0.tgz",
          "integrity": "sha512-rb6X1W158d7pRQBg5gkR8uPaSfiids68LTJQYOtEUhoJUWBdaQHsuT/EUduxXYxcrt4r5PJ4fuHW1MHT6p0qug==",
          "dev": true
        }
      }
    },
    "builder-util-runtime": {
      "version": "8.7.2",
      "resolved": "https://registry.npmjs.org/builder-util-runtime/-/builder-util-runtime-8.7.2.tgz",
      "integrity": "sha512-xBqv+8bg6cfnzAQK1k3OGpfaHg+QkPgIgpEkXNhouZ0WiUkyZCftuRc2LYzQrLucFywpa14Xbc6+hTbpq83yRA==",
      "dev": true,
      "requires": {
        "debug": "^4.1.1",
        "sax": "^1.2.4"
      },
      "dependencies": {
        "debug": {
          "version": "4.3.1",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.1.tgz",
          "integrity": "sha512-doEwdvm4PCeK4K3RQN2ZC2BYUBaxwLARCqZmMjtF8a51J2Rb0xpVloFRnCODwqjpwnAoao4pelN8l3RJdv3gRQ==",
          "dev": true,
          "requires": {
            "ms": "2.1.2"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
          "dev": true
        }
      }
    },
    "builtin-status-codes": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/builtin-status-codes/-/builtin-status-codes-3.0.0.tgz",
      "integrity": "sha1-hZgoeOIbmOHGZCXgPQF0eI9Wnug=",
      "dev": true
    },
    "bytes": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.1.0.tgz",
      "integrity": "sha512-zauLjrfCG+xvoyaqLoV8bLVXXNGC4JqlxFCutSDWA6fJrTo2ZuvLYTqZ7aHBLZSMOopbzwv8f+wZcVzfVTI2Dg==",
      "dev": true
    },
    "cache-base": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/cache-base/-/cache-base-1.0.1.tgz",
      "integrity": "sha512-AKcdTnFSWATd5/GCPRxr2ChwIJ85CeyrEyjRHlKxQ56d4XJMGym0uAiKn0xbLOGOl3+yRpOTi484dVCEc5AUzQ==",
      "dev": true,
      "requires": {
        "collection-visit": "^1.0.0",
        "component-emitter": "^1.2.1",
        "get-value": "^2.0.6",
        "has-value": "^1.0.0",
        "isobject": "^3.0.1",
        "set-value": "^2.0.0",
        "to-object-path": "^0.3.0",
        "union-value": "^1.0.0",
        "unset-value": "^1.0.0"
      },
      "dependencies": {
        "isobject": {
          "version": "3.0.1",
          "resolved": "https://registry.npmjs.org/isobject/-/isobject-3.0.1.tgz",
          "integrity": "sha1-TkMekrEalzFjaqH5yNHMvP2reN8=",
          "dev": true
        }
      }
    },
    "cacheable-lookup": {
      "version": "5.0.4",
      "resolved": "https://registry.npmjs.org/cacheable-lookup/-/cacheable-lookup-5.0.4.tgz",
      "integrity": "sha512-2/kNscPhpcxrOigMZzbiWF7dz8ilhb/nIHU3EyZiXWXpeq/au8qJ8VhdftMkty3n7Gj6HIGalQG8oiBNB3AJgA==",
      "dev": true
    },
    "cacheable-request": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/cacheable-request/-/cacheable-request-6.1.0.tgz",
      "integrity": "sha512-Oj3cAGPCqOZX7Rz64Uny2GYAZNliQSqfbePrgAQ1wKAihYmCUnraBtJtKcGR4xz7wF+LoJC+ssFZvv5BgF9Igg==",
      "dev": true,
      "requires": {
        "clone-response": "^1.0.2",
        "get-stream": "^5.1.0",
        "http-cache-semantics": "^4.0.0",
        "keyv": "^3.0.0",
        "lowercase-keys": "^2.0.0",
        "normalize-url": "^4.1.0",
        "responselike": "^1.0.2"
      },
      "dependencies": {
        "end-of-stream": {
          "version": "1.4.4",
          "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz",
          "integrity": "sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==",
          "dev": true,
          "requires": {
            "once": "^1.4.0"
          }
        },
        "get-stream": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-5.2.0.tgz",
          "integrity": "sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==",
          "dev": true,
          "requires": {
            "pump": "^3.0.0"
          }
        },
        "lowercase-keys": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-2.0.0.tgz",
          "integrity": "sha512-tqNXrS78oMOE73NMxK4EMLQsQowWf8jKooH9g7xPavRT706R6bkQJ6DY2Te7QukaZsulxa30wQ7bk0pm4XiHmA==",
          "dev": true
        },
        "pump": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/pump/-/pump-3.0.0.tgz",
          "integrity": "sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==",
          "dev": true,
          "requires": {
            "end-of-stream": "^1.1.0",
            "once": "^1.3.1"
          }
        }
      }
    },
    "cached-path-relative": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/cached-path-relative/-/cached-path-relative-1.0.2.tgz",
      "integrity": "sha512-5r2GqsoEb4qMTTN9J+WzXfjov+hjxT+j3u5K+kIVNIwAd99DLCJE9pBIMP1qVeybV6JiijL385Oz0DcYxfbOIg==",
      "dev": true
    },
    "callsite": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/callsite/-/callsite-1.0.0.tgz",
      "integrity": "sha1-KAOY5dZkvXQDi28JBRU+borxvCA=",
      "dev": true
    },
    "camelcase": {
      "version": "5.3.1",
      "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz",
      "integrity": "sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==",
      "dev": true
    },
    "camelcase-keys": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/camelcase-keys/-/camelcase-keys-2.1.0.tgz",
      "integrity": "sha1-MIvur/3ygRkFHvodkyITyRuPkuc=",
      "dev": true,
      "requires": {
        "camelcase": "^2.0.0",
        "map-obj": "^1.0.0"
      },
      "dependencies": {
        "camelcase": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-2.1.1.tgz",
          "integrity": "sha1-fB0W1nmhu+WcoCys7PsBHiAfWh8=",
          "dev": true
        }
      }
    },
    "caniuse-db": {
      "version": "1.0.30001168",
      "resolved": "https://registry.npmjs.org/caniuse-db/-/caniuse-db-1.0.30001168.tgz",
      "integrity": "sha512-Nq5zfHhWwS+TlfmNVzlIZqAv790nYSoyNMsfIL/Xd8YUGhYkhlUNLzykOdvQ8TJLVWgmhrG1erYwNevS9hsoxQ==",
      "dev": true
    },
    "canvas": {
      "version": "2.6.1",
      "resolved": "https://registry.npmjs.org/canvas/-/canvas-2.6.1.tgz",
      "integrity": "sha512-S98rKsPcuhfTcYbtF53UIJhcbgIAK533d1kJKMwsMwAIFgfd58MOyxRud3kktlzWiEkFliaJtvyZCBtud/XVEA==",
      "dev": true,
      "requires": {
        "nan": "^2.14.0",
        "node-pre-gyp": "^0.11.0",
        "simple-get": "^3.0.3"
      }
    },
    "capture-stack-trace": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/capture-stack-trace/-/capture-stack-trace-1.0.1.tgz",
      "integrity": "sha512-mYQLZnx5Qt1JgB1WEiMCf2647plpGeQ2NMR/5L0HNZzGQo4fuSPnK+wjfPnKZV0aiJDgzmWqqkV/g7JD+DW0qw==",
      "dev": true
    },
    "cardinal": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/cardinal/-/cardinal-2.1.1.tgz",
      "integrity": "sha1-fMEFXYItISlU0HsIXeolHMe8VQU=",
      "dev": true,
      "requires": {
        "ansicolors": "~0.3.2",
        "redeyed": "~2.1.0"
      }
    },
    "caseless": {
      "version": "0.12.0",
      "resolved": "https://registry.npmjs.org/caseless/-/caseless-0.12.0.tgz",
      "integrity": "sha1-G2gcIf+EAzyCZUMJBolCDRhxUdw=",
      "dev": true
    },
    "catbuffer-typescript": {
      "version": "0.0.21",
      "resolved": "https://registry.npmjs.org/catbuffer-typescript/-/catbuffer-typescript-0.0.21.tgz",
      "integrity": "sha512-fKz6NoojjWOf7eJRZeh3pH6wMkxTXSfH/55yfzaImnhTQeaL6j1xiYElgWDDkKDJe2N4UWUJywRjbfT96I/GJw==",
      "dev": true
    },
    "caw": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/caw/-/caw-2.0.1.tgz",
      "integrity": "sha512-Cg8/ZSBEa8ZVY9HspcGUYaK63d/bN7rqS3CYCzEGUxuYv6UlmcjzDUz2fCFFHyTvUW5Pk0I+3hkA3iXlIj6guA==",
      "dev": true,
      "requires": {
        "get-proxy": "^2.0.0",
        "isurl": "^1.0.0-alpha5",
        "tunnel-agent": "^0.6.0",
        "url-to-options": "^1.0.1"
      }
    },
    "center-align": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/center-align/-/center-align-0.1.3.tgz",
      "integrity": "sha1-qg0yYptu6XIgBBHL1EYckHvCt60=",
      "dev": true,
      "requires": {
        "align-text": "^0.1.3",
        "lazy-cache": "^1.0.3"
      }
    },
    "chalk": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",
      "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
      "dev": true,
      "requires": {
        "ansi-styles": "^2.2.1",
        "escape-string-regexp": "^1.0.2",
        "has-ansi": "^2.0.0",
        "strip-ansi": "^3.0.0",
        "supports-color": "^2.0.0"
      }
    },
    "charm": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/charm/-/charm-0.1.2.tgz",
      "integrity": "sha1-BsIe7RobBq62dVPNxT4jJ0usIpY=",
      "dev": true
    },
    "chart.js": {
      "version": "2.1.6",
      "resolved": "https://registry.npmjs.org/chart.js/-/chart.js-2.1.6.tgz",
      "integrity": "sha1-m/QtR7uzzHAnVu8KSW58RDofaqU=",
      "dev": true,
      "requires": {
        "chartjs-color": "^2.0.0",
        "moment": "^2.10.6"
      }
    },
    "chartjs-color": {
      "version": "2.4.1",
      "resolved": "https://registry.npmjs.org/chartjs-color/-/chartjs-color-2.4.1.tgz",
      "integrity": "sha512-haqOg1+Yebys/Ts/9bLo/BqUcONQOdr/hoEr2LLTRl6C5LXctUdHxsCYfvQVg5JIxITrfCNUDr4ntqmQk9+/0w==",
      "dev": true,
      "requires": {
        "chartjs-color-string": "^0.6.0",
        "color-convert": "^1.9.3"
      }
    },
    "chartjs-color-string": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/chartjs-color-string/-/chartjs-color-string-0.6.0.tgz",
      "integrity": "sha512-TIB5OKn1hPJvO7JcteW4WY/63v6KwEdt6udfnDE9iCAZgy+V4SrbSxoIbTw/xkUIapjEI4ExGtD0+6D3KyFd7A==",
      "dev": true,
      "requires": {
        "color-name": "^1.0.0"
      }
    },
    "chokidar": {
      "version": "3.4.3",
      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.4.3.tgz",
      "integrity": "sha512-DtM3g7juCXQxFVSNPNByEC2+NImtBuxQQvWlHunpJIS5Ocr0lG306cC7FCi7cEA0fzmybPUIl4txBIobk1gGOQ==",
      "dev": true,
      "requires": {
        "anymatch": "~3.1.1",
        "braces": "~3.0.2",
        "fsevents": "~2.1.2",
        "glob-parent": "~5.1.0",
        "is-binary-path": "~2.1.0",
        "is-glob": "~4.0.1",
        "normalize-path": "~3.0.0",
        "readdirp": "~3.5.0"
      }
    },
    "chownr": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/chownr/-/chownr-1.1.4.tgz",
      "integrity": "sha512-jJ0bqzaylmJtVnNgzTeSOs8DPavpbYgEr/b0YL8/2GO3xJEhInFmhKMUnEJQjZumK7KXGFhUy89PrsJWlakBVg=="
    },
    "chromium-pickle-js": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/chromium-pickle-js/-/chromium-pickle-js-0.2.0.tgz",
      "integrity": "sha1-BKEGZywYsIWrd02YPfo+oTjyIgU=",
      "dev": true
    },
    "ci-info": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-1.6.0.tgz",
      "integrity": "sha512-vsGdkwSCDpWmP80ncATX7iea5DWQemg1UgCW5J8tqjU3lYw4FBYuj89J0CTVomA7BEfvSZd84GmHko+MxFQU2A==",
      "dev": true
    },
    "cipher-base": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/cipher-base/-/cipher-base-1.0.4.tgz",
      "integrity": "sha512-Kkht5ye6ZGmwv40uUDZztayT2ThLQGfnj/T71N/XzeZeo3nf8foyW7zGTsPYkEya3m5f3cAypH+qe7YOrM1U2Q==",
      "dev": true,
      "requires": {
        "inherits": "^2.0.1",
        "safe-buffer": "^5.0.1"
      }
    },
    "class-utils": {
      "version": "0.3.6",
      "resolved": "https://registry.npmjs.org/class-utils/-/class-utils-0.3.6.tgz",
      "integrity": "sha512-qOhPa/Fj7s6TY8H8esGu5QNpMMQxz79h+urzrNYN6mn+9BnxlDGf5QZ+XeCDsxSjPqsSR56XOZOJmpeurnLMeg==",
      "dev": true,
      "requires": {
        "arr-union": "^3.1.0",
        "define-property": "^0.2.5",
        "isobject": "^3.0.0",
        "static-extend": "^0.1.1"
      },
      "dependencies": {
        "define-property": {
          "version": "0.2.5",
          "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
          "dev": true,
          "requires": {
            "is-descriptor": "^0.1.0"
          }
        },
        "isobject": {
          "version": "3.0.1",
          "resolved": "https://registry.npmjs.org/isobject/-/isobject-3.0.1.tgz",
          "integrity": "sha1-TkMekrEalzFjaqH5yNHMvP2reN8=",
          "dev": true
        }
      }
    },
    "cli-boxes": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/cli-boxes/-/cli-boxes-1.0.0.tgz",
      "integrity": "sha1-T6kXw+WclKAEzWH47lCdplFocUM=",
      "dev": true
    },
    "cli-cursor": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/cli-cursor/-/cli-cursor-3.1.0.tgz",
      "integrity": "sha512-I/zHAwsKf9FqGoXM4WWRACob9+SNukZTd94DWF57E4toouRulbCxcUh6RKUEOQlYTHJnzkPMySvPNaaSLNfLZw==",
      "dev": true,
      "requires": {
        "restore-cursor": "^3.1.0"
      }
    },
    "cli-spinners": {
      "version": "2.5.0",
      "resolved": "https://registry.npmjs.org/cli-spinners/-/cli-spinners-2.5.0.tgz",
      "integrity": "sha512-PC+AmIuK04E6aeSs/pUccSujsTzBhu4HzC2dL+CfJB/Jcc2qTRbEwZQDfIUpt2Xl8BodYBEq8w4fc0kU2I9DjQ==",
      "dev": true
    },
    "cli-table": {
      "version": "0.3.4",
      "resolved": "https://registry.npmjs.org/cli-table/-/cli-table-0.3.4.tgz",
      "integrity": "sha512-1vinpnX/ZERcmE443i3SZTmU5DF0rPO9DrL4I2iVAllhxzCM9SzPlHnz19fsZB78htkKZvYBvj6SZ6vXnaxmTA==",
      "dev": true,
      "requires": {
        "chalk": "^2.4.1",
        "string-width": "^4.2.0"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz",
          "integrity": "sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==",
          "dev": true
        },
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "dev": true,
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          }
        },
        "emoji-regex": {
          "version": "8.0.0",
          "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
          "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
          "dev": true
        },
        "has-flag": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
          "integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0=",
          "dev": true
        },
        "is-fullwidth-code-point": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
          "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
          "dev": true
        },
        "string-width": {
          "version": "4.2.0",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.0.tgz",
          "integrity": "sha512-zUz5JD+tgqtuDjMhwIg5uFVV3dtqZ9yQJlZVfq4I01/K5Paj5UHj7VyrQOJvzawSVlKpObApbfD0Ed6yJc+1eg==",
          "dev": true,
          "requires": {
            "emoji-regex": "^8.0.0",
            "is-fullwidth-code-point": "^3.0.0",
            "strip-ansi": "^6.0.0"
          }
        },
        "strip-ansi": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.0.tgz",
          "integrity": "sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==",
          "dev": true,
          "requires": {
            "ansi-regex": "^5.0.0"
          }
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "cli-usage": {
      "version": "0.1.10",
      "resolved": "https://registry.npmjs.org/cli-usage/-/cli-usage-0.1.10.tgz",
      "integrity": "sha512-Q/s1S4Jz5LYI0LQ+XiFQCXkhMzn244ddyIffni8JIq/kL95DvQomVQ0cJC41c76hH9/FmZGY7rZB53y/bXHtRA==",
      "dev": true,
      "requires": {
        "marked": "^0.7.0",
        "marked-terminal": "^3.3.0"
      },
      "dependencies": {
        "marked": {
          "version": "0.7.0",
          "resolved": "https://registry.npmjs.org/marked/-/marked-0.7.0.tgz",
          "integrity": "sha512-c+yYdCZJQrsRjTPhUx7VKkApw9bwDkNbHUKo1ovgcfDjb2kc8rLuRbIFyXL5WOEUwzSSKo3IXpph2K6DqB/KZg==",
          "dev": true
        }
      }
    },
    "cliui": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-5.0.0.tgz",
      "integrity": "sha512-PYeGSEmmHM6zvoef2w8TPzlrnNpXIjTipYK780YswmIP9vjxmd6Y2a3CB2Ks6/AU8NHjZugXvo8w3oWM2qnwXA==",
      "dev": true,
      "requires": {
        "string-width": "^3.1.0",
        "strip-ansi": "^5.2.0",
        "wrap-ansi": "^5.1.0"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",
          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg==",
          "dev": true
        },
        "strip-ansi": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",
          "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",
          "dev": true,
          "requires": {
            "ansi-regex": "^4.1.0"
          }
        }
      }
    },
    "clone": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/clone/-/clone-1.0.4.tgz",
      "integrity": "sha1-2jCcwmPfFZlMaIypAheco8fNfH4=",
      "dev": true
    },
    "clone-response": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/clone-response/-/clone-response-1.0.2.tgz",
      "integrity": "sha1-0dyXOSAxTfZ/vrlCI7TuNQI56Ws=",
      "dev": true,
      "requires": {
        "mimic-response": "^1.0.0"
      },
      "dependencies": {
        "mimic-response": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-1.0.1.tgz",
          "integrity": "sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ==",
          "dev": true
        }
      }
    },
    "clone-stats": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/clone-stats/-/clone-stats-0.0.1.tgz",
      "integrity": "sha1-uI+UqCzzi4eR1YBG6kAprYjKmdE=",
      "dev": true
    },
    "co": {
      "version": "4.6.0",
      "resolved": "https://registry.npmjs.org/co/-/co-4.6.0.tgz",
      "integrity": "sha1-bqa989hTrlTMuOR7+gvz+QMfsYQ=",
      "dev": true
    },
    "code-point-at": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/code-point-at/-/code-point-at-1.1.0.tgz",
      "integrity": "sha1-DQcLTQQ6W+ozovGkDi7bPZpMz3c="
    },
    "collection-visit": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/collection-visit/-/collection-visit-1.0.0.tgz",
      "integrity": "sha1-S8A3PBZLwykbTTaMgpzxqApZ3KA=",
      "dev": true,
      "requires": {
        "map-visit": "^1.0.0",
        "object-visit": "^1.0.0"
      }
    },
    "color-convert": {
      "version": "1.9.3",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
      "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
      "dev": true,
      "requires": {
        "color-name": "1.1.3"
      },
      "dependencies": {
        "color-name": {
          "version": "1.1.3",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
          "integrity": "sha1-p9BVi9icQveV3UIyj3QIMcpTvCU=",
          "dev": true
        }
      }
    },
    "color-name": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
      "dev": true
    },
    "color-support": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/color-support/-/color-support-1.1.3.tgz",
      "integrity": "sha512-qiBjkpbMLO/HL68y+lh4q0/O1MZFj2RX6X/KmMa3+gJD3z+WwI1ZzDHysvqHGS3mP6mznPckpXmw1nI9cJjyRg==",
      "dev": true
    },
    "colors": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/colors/-/colors-1.4.0.tgz",
      "integrity": "sha512-a+UqTh4kgZg/SlGvfbzDHpgRu7AAQOmmqRHJnxhRZICKFUT91brVhNNt58CMWU9PsBbv3PDCZUHbVxuDiH2mtA==",
      "dev": true
    },
    "combine-source-map": {
      "version": "0.8.0",
      "resolved": "https://registry.npmjs.org/combine-source-map/-/combine-source-map-0.8.0.tgz",
      "integrity": "sha1-pY0N8ELBhvz4IqjoAV9UUNLXmos=",
      "dev": true,
      "requires": {
        "convert-source-map": "~1.1.0",
        "inline-source-map": "~0.6.0",
        "lodash.memoize": "~3.0.3",
        "source-map": "~0.5.3"
      },
      "dependencies": {
        "convert-source-map": {
          "version": "1.1.3",
          "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-1.1.3.tgz",
          "integrity": "sha1-SCnId+n+SbMWHzvzZziI4gRpmGA=",
          "dev": true
        }
      }
    },
    "combined-stream": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
      "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
      "dev": true,
      "requires": {
        "delayed-stream": "~1.0.0"
      }
    },
    "commander": {
      "version": "2.20.3",
      "resolved": "https://registry.npmjs.org/commander/-/commander-2.20.3.tgz",
      "integrity": "sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==",
      "dev": true
    },
    "compare-version": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/compare-version/-/compare-version-0.1.2.tgz",
      "integrity": "sha1-AWLsLZNR9d3VmpICy6k1NmpyUIA=",
      "dev": true
    },
    "component-bind": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/component-bind/-/component-bind-1.0.0.tgz",
      "integrity": "sha1-AMYIq33Nk4l8AAllGx06jh5zu9E=",
      "dev": true
    },
    "component-emitter": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/component-emitter/-/component-emitter-1.3.0.tgz",
      "integrity": "sha512-Rd3se6QB+sO1TwqZjscQrurpEPIfO0/yYnSin6Q/rD3mOutHvUrCAhJub3r90uNb+SESBuE0QYoB90YdfatsRg==",
      "dev": true
    },
    "component-inherit": {
      "version": "0.0.3",
      "resolved": "https://registry.npmjs.org/component-inherit/-/component-inherit-0.0.3.tgz",
      "integrity": "sha1-ZF/ErfWLcrZJ1crmUTVhnbJv8UM=",
      "dev": true
    },
    "compress-commons": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/compress-commons/-/compress-commons-1.2.2.tgz",
      "integrity": "sha1-UkqfEJA/OoEzibAiXSfEi7dRiQ8=",
      "dev": true,
      "requires": {
        "buffer-crc32": "^0.2.1",
        "crc32-stream": "^2.0.0",
        "normalize-path": "^2.0.0",
        "readable-stream": "^2.0.0"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "normalize-path": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-2.1.1.tgz",
          "integrity": "sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=",
          "dev": true,
          "requires": {
            "remove-trailing-separator": "^1.0.1"
          }
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=",
      "dev": true
    },
    "concat-stream": {
      "version": "1.5.2",
      "resolved": "https://registry.npmjs.org/concat-stream/-/concat-stream-1.5.2.tgz",
      "integrity": "sha1-cIl4Yk2FavQaWnQd790mHadSwmY=",
      "dev": true,
      "requires": {
        "inherits": "~2.0.1",
        "readable-stream": "~2.0.0",
        "typedarray": "~0.0.5"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "process-nextick-args": {
          "version": "1.0.7",
          "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-1.0.7.tgz",
          "integrity": "sha1-FQ4gt1ZZCtP5EJPyWk8q2L/zC6M=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.0.6",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.0.6.tgz",
          "integrity": "sha1-j5A0HmilPMySh4jaz80Rs265t44=",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.1",
            "isarray": "~1.0.0",
            "process-nextick-args": "~1.0.6",
            "string_decoder": "~0.10.x",
            "util-deprecate": "~1.0.1"
          }
        },
        "string_decoder": {
          "version": "0.10.31",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz",
          "integrity": "sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=",
          "dev": true
        }
      }
    },
    "concat-with-sourcemaps": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/concat-with-sourcemaps/-/concat-with-sourcemaps-1.1.0.tgz",
      "integrity": "sha512-4gEjHJFT9e+2W/77h/DS5SGUgwDaOwprX8L/gl5+3ixnzkVJJsZWDSelmN3Oilw3LNDZjZV0yqH1hLG3k6nghg==",
      "dev": true,
      "requires": {
        "source-map": "^0.6.1"
      },
      "dependencies": {
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        }
      }
    },
    "config-chain": {
      "version": "1.1.12",
      "resolved": "https://registry.npmjs.org/config-chain/-/config-chain-1.1.12.tgz",
      "integrity": "sha512-a1eOIcu8+7lUInge4Rpf/n4Krkf3Dd9lqhljRzII1/Zno/kRtUWnznPO3jOKBmTEktkt3fkxisUcivoj0ebzoA==",
      "dev": true,
      "requires": {
        "ini": "^1.3.4",
        "proto-list": "~1.2.1"
      }
    },
    "configstore": {
      "version": "3.1.5",
      "resolved": "https://registry.npmjs.org/configstore/-/configstore-3.1.5.tgz",
      "integrity": "sha512-nlOhI4+fdzoK5xmJ+NY+1gZK56bwEaWZr8fYuXohZ9Vkc1o3a4T/R3M+yE/w7x/ZVJ1zF8c+oaOvF0dztdUgmA==",
      "dev": true,
      "requires": {
        "dot-prop": "^4.2.1",
        "graceful-fs": "^4.1.2",
        "make-dir": "^1.0.0",
        "unique-string": "^1.0.0",
        "write-file-atomic": "^2.0.0",
        "xdg-basedir": "^3.0.0"
      }
    },
    "connect": {
      "version": "3.6.6",
      "resolved": "https://registry.npmjs.org/connect/-/connect-3.6.6.tgz",
      "integrity": "sha1-Ce/2xVr3I24TcTWnJXSFi2eG9SQ=",
      "dev": true,
      "requires": {
        "debug": "2.6.9",
        "finalhandler": "1.1.0",
        "parseurl": "~1.3.2",
        "utils-merge": "1.0.1"
      }
    },
    "connect-history-api-fallback": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/connect-history-api-fallback/-/connect-history-api-fallback-1.6.0.tgz",
      "integrity": "sha512-e54B99q/OUoH64zYYRf3HBP5z24G38h5D3qXu23JGRoigpX5Ss4r9ZnDk3g0Z8uQC2x2lPaJ+UlWBc1ZWBWdLg==",
      "dev": true
    },
    "console-browserify": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/console-browserify/-/console-browserify-1.2.0.tgz",
      "integrity": "sha512-ZMkYO/LkF17QvCPqM0gxw8yUzigAOZOSWSHg91FH6orS7vcEj5dVZTidN2fQ14yBSdg97RqhSNwLUXInd52OTA==",
      "dev": true
    },
    "console-control-strings": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/console-control-strings/-/console-control-strings-1.1.0.tgz",
      "integrity": "sha1-PXz0Rk22RG6mRL9LOVB/mFEAjo4="
    },
    "constants-browserify": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/constants-browserify/-/constants-browserify-1.0.0.tgz",
      "integrity": "sha1-wguW2MYXdIqvHBYCF2DNJ/y4y3U=",
      "dev": true
    },
    "convert-source-map": {
      "version": "1.7.0",
      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-1.7.0.tgz",
      "integrity": "sha512-4FJkXzKXEDB1snCFZlLP4gpC3JILicCpGbzG9f9G7tGqGCzETQ2hWPrcinA9oU4wtf2biUaEH5065UnMeR33oA==",
      "dev": true,
      "requires": {
        "safe-buffer": "~5.1.1"
      }
    },
    "cookie": {
      "version": "0.3.1",
      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.3.1.tgz",
      "integrity": "sha1-5+Ch+e9DtMi6klxcWpboBtFoc7s=",
      "dev": true
    },
    "copy-descriptor": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/copy-descriptor/-/copy-descriptor-0.1.1.tgz",
      "integrity": "sha1-Z29us8OZl8LuGsOpJP1hJHSPV40=",
      "dev": true
    },
    "core-js": {
      "version": "2.6.12",
      "resolved": "https://registry.npmjs.org/core-js/-/core-js-2.6.12.tgz",
      "integrity": "sha512-Kb2wC0fvsWfQrgk8HU5lW6U/Lcs8+9aaYcy4ZFc6DDlo4nZ7n70dEgE5rtR0oG6ufKDUnrwfWL1mXR5ljDatrQ==",
      "dev": true
    },
    "core-util-is": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz",
      "integrity": "sha1-tf1UIgqivFq1eqtxQMlAdUUDwac="
    },
    "crc": {
      "version": "3.8.0",
      "resolved": "https://registry.npmjs.org/crc/-/crc-3.8.0.tgz",
      "integrity": "sha512-iX3mfgcTMIq3ZKLIsVFAbv7+Mc10kxabAGQb8HvjA1o3T1PIYprbakQ65d3I+2HGHt6nSKkM9PYjgoJO2KcFBQ==",
      "dev": true,
      "requires": {
        "buffer": "^5.1.0"
      },
      "dependencies": {
        "buffer": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz",
          "integrity": "sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==",
          "dev": true,
          "requires": {
            "base64-js": "^1.3.1",
            "ieee754": "^1.1.13"
          }
        }
      }
    },
    "crc32-stream": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/crc32-stream/-/crc32-stream-2.0.0.tgz",
      "integrity": "sha1-483TtN8xaN10494/u8t7KX/pCPQ=",
      "dev": true,
      "requires": {
        "crc": "^3.4.4",
        "readable-stream": "^2.0.0"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "create-ecdh": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/create-ecdh/-/create-ecdh-4.0.4.tgz",
      "integrity": "sha512-mf+TCx8wWc9VpuxfP2ht0iSISLZnt0JgWlrOKZiNqyUZWnjIaCIVNQArMHnCZKfEYRg6IM7A+NeJoN8gf/Ws0A==",
      "dev": true,
      "requires": {
        "bn.js": "^4.1.0",
        "elliptic": "^6.5.3"
      },
      "dependencies": {
        "bn.js": {
          "version": "4.11.9",
          "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.11.9.tgz",
          "integrity": "sha512-E6QoYqCKZfgatHTdHzs1RRKP7ip4vvm+EyRUeE2RF0NblwVvb0p6jSVeNTOFxPn26QXN2o6SMfNxKp6kU8zQaw==",
          "dev": true
        }
      }
    },
    "create-error-class": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/create-error-class/-/create-error-class-3.0.2.tgz",
      "integrity": "sha1-Br56vvlHo/FKMP1hBnHUAbyot7Y=",
      "dev": true,
      "requires": {
        "capture-stack-trace": "^1.0.0"
      }
    },
    "create-hash": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/create-hash/-/create-hash-1.2.0.tgz",
      "integrity": "sha512-z00bCGNHDG8mHAkP7CtT1qVu+bFQUPjYq/4Iv3C3kWjTFV10zIjfSoeqXo9Asws8gwSHDGj/hl2u4OGIjapeCg==",
      "dev": true,
      "requires": {
        "cipher-base": "^1.0.1",
        "inherits": "^2.0.1",
        "md5.js": "^1.3.4",
        "ripemd160": "^2.0.1",
        "sha.js": "^2.4.0"
      }
    },
    "create-hmac": {
      "version": "1.1.7",
      "resolved": "https://registry.npmjs.org/create-hmac/-/create-hmac-1.1.7.tgz",
      "integrity": "sha512-MJG9liiZ+ogc4TzUwuvbER1JRdgvUFSB5+VR/g5h82fGaIRWMWddtKBHi7/sVhfjQZ6SehlyhvQYrcYkaUIpLg==",
      "dev": true,
      "requires": {
        "cipher-base": "^1.0.3",
        "create-hash": "^1.1.0",
        "inherits": "^2.0.1",
        "ripemd160": "^2.0.0",
        "safe-buffer": "^5.0.1",
        "sha.js": "^2.4.8"
      }
    },
    "cross-spawn": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-3.0.1.tgz",
      "integrity": "sha1-ElYDfsufDF9549bvE14wdwGEuYI=",
      "dev": true,
      "requires": {
        "lru-cache": "^4.0.1",
        "which": "^1.2.9"
      },
      "dependencies": {
        "lru-cache": {
          "version": "4.1.5",
          "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-4.1.5.tgz",
          "integrity": "sha512-sWZlbEP2OsHNkXrMl5GYk/jKk70MBng6UU4YI/qGDYbgf6YbP4EvmqISbXCoJiRKs+1bSpFHVgQxvJ17F2li5g==",
          "dev": true,
          "requires": {
            "pseudomap": "^1.0.2",
            "yallist": "^2.1.2"
          }
        }
      }
    },
    "cryptiles": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/cryptiles/-/cryptiles-2.0.5.tgz",
      "integrity": "sha1-O9/s3GCBR8HGcgL6KR59ylnqo7g=",
      "dev": true,
      "requires": {
        "boom": "2.x.x"
      }
    },
    "crypto-browserify": {
      "version": "3.12.0",
      "resolved": "https://registry.npmjs.org/crypto-browserify/-/crypto-browserify-3.12.0.tgz",
      "integrity": "sha512-fz4spIh+znjO2VjL+IdhEpRJ3YN6sMzITSBijk6FK2UvTqruSQW+/cCZTSNsMiZNvUeq0CqurF+dAbyiGOY6Wg==",
      "dev": true,
      "requires": {
        "browserify-cipher": "^1.0.0",
        "browserify-sign": "^4.0.0",
        "create-ecdh": "^4.0.0",
        "create-hash": "^1.1.0",
        "create-hmac": "^1.1.0",
        "diffie-hellman": "^5.0.0",
        "inherits": "^2.0.1",
        "pbkdf2": "^3.0.3",
        "public-encrypt": "^4.0.0",
        "randombytes": "^2.0.0",
        "randomfill": "^1.0.3"
      }
    },
    "crypto-js": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/crypto-js/-/crypto-js-3.3.0.tgz",
      "integrity": "sha512-DIT51nX0dCfKltpRiXV+/TVZq+Qq2NgF4644+K7Ttnla7zEzqc+kjJyiB96BHNyUTBxyjzRcZYpUdZa+QAqi6Q==",
      "dev": true
    },
    "crypto-random-string": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/crypto-random-string/-/crypto-random-string-1.0.0.tgz",
      "integrity": "sha1-ojD2T1aDEOFJgAmUB5DsmVRbyn4=",
      "dev": true
    },
    "currently-unhandled": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/currently-unhandled/-/currently-unhandled-0.4.1.tgz",
      "integrity": "sha1-mI3zP+qxke95mmE2nddsF635V+o=",
      "dev": true,
      "requires": {
        "array-find-index": "^1.0.1"
      }
    },
    "d": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/d/-/d-1.0.1.tgz",
      "integrity": "sha512-m62ShEObQ39CfralilEQRjH6oAMtNCV1xJyEx5LpRYUVN+EviphDgUc/F3hnYbADmkiNs67Y+3ylmlG7Lnu+FA==",
      "dev": true,
      "requires": {
        "es5-ext": "^0.10.50",
        "type": "^1.0.1"
      }
    },
    "dash-ast": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/dash-ast/-/dash-ast-1.0.0.tgz",
      "integrity": "sha512-Vy4dx7gquTeMcQR/hDkYLGUnwVil6vk4FOOct+djUnHOUWt+zJPJAaRIXaAFkPXtJjvlY7o3rfRu0/3hpnwoUA==",
      "dev": true
    },
    "dashdash": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/dashdash/-/dashdash-1.14.1.tgz",
      "integrity": "sha1-hTz6D3y+L+1d4gMmuN1YEDX24vA=",
      "dev": true,
      "requires": {
        "assert-plus": "^1.0.0"
      },
      "dependencies": {
        "assert-plus": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
          "integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU=",
          "dev": true
        }
      }
    },
    "dateformat": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/dateformat/-/dateformat-2.2.0.tgz",
      "integrity": "sha1-QGXiATz5+5Ft39gu+1Bq1MZ2kGI=",
      "dev": true
    },
    "deap": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/deap/-/deap-1.0.1.tgz",
      "integrity": "sha512-k75KYNZMvwAwes2xIPry/QTffXIchjD8QfABvvfTr80P85jv5ZcKqcoDo+vMe71nNnVnXYe8MA28weyqcf/DKw==",
      "dev": true
    },
    "debug": {
      "version": "2.6.9",
      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
      "dev": true,
      "requires": {
        "ms": "2.0.0"
      }
    },
    "decamelize": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz",
      "integrity": "sha1-9lNNFRSCabIDUue+4m9QH5oZEpA=",
      "dev": true
    },
    "decode-uri-component": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/decode-uri-component/-/decode-uri-component-0.2.0.tgz",
      "integrity": "sha1-6zkTMzRYd1y4TNGh+uBiEGu4dUU=",
      "dev": true
    },
    "decompress": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/decompress/-/decompress-3.0.0.tgz",
      "integrity": "sha1-rx3VDQbjv8QyRh033hGzjA2ZG+0=",
      "dev": true,
      "requires": {
        "buffer-to-vinyl": "^1.0.0",
        "concat-stream": "^1.4.6",
        "decompress-tar": "^3.0.0",
        "decompress-tarbz2": "^3.0.0",
        "decompress-targz": "^3.0.0",
        "decompress-unzip": "^3.0.0",
        "stream-combiner2": "^1.1.1",
        "vinyl-assign": "^1.0.1",
        "vinyl-fs": "^2.2.0"
      },
      "dependencies": {
        "braces": {
          "version": "1.8.5",
          "resolved": "https://registry.npmjs.org/braces/-/braces-1.8.5.tgz",
          "integrity": "sha1-uneWLhLf+WnWt2cR6RS3N4V79qc=",
          "dev": true,
          "requires": {
            "expand-range": "^1.8.1",
            "preserve": "^0.2.0",
            "repeat-element": "^1.1.2"
          }
        },
        "glob": {
          "version": "5.0.15",
          "resolved": "https://registry.npmjs.org/glob/-/glob-5.0.15.tgz",
          "integrity": "sha1-G8k2ueAvSmA/zCIuz3Yz0wuLk7E=",
          "dev": true,
          "requires": {
            "inflight": "^1.0.4",
            "inherits": "2",
            "minimatch": "2 || 3",
            "once": "^1.3.0",
            "path-is-absolute": "^1.0.0"
          }
        },
        "glob-parent": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-3.1.0.tgz",
          "integrity": "sha1-nmr2KZ2NO9K9QEMIMr0RPfkGxa4=",
          "dev": true,
          "requires": {
            "is-glob": "^3.1.0",
            "path-dirname": "^1.0.0"
          }
        },
        "glob-stream": {
          "version": "5.3.5",
          "resolved": "https://registry.npmjs.org/glob-stream/-/glob-stream-5.3.5.tgz",
          "integrity": "sha1-pVZlqajM3EGRWofHAeMtTgFvrSI=",
          "dev": true,
          "requires": {
            "extend": "^3.0.0",
            "glob": "^5.0.3",
            "glob-parent": "^3.0.0",
            "micromatch": "^2.3.7",
            "ordered-read-streams": "^0.3.0",
            "through2": "^0.6.0",
            "to-absolute-glob": "^0.1.1",
            "unique-stream": "^2.0.2"
          },
          "dependencies": {
            "isarray": {
              "version": "0.0.1",
              "resolved": "https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz",
              "integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=",
              "dev": true
            },
            "readable-stream": {
              "version": "1.0.34",
              "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-1.0.34.tgz",
              "integrity": "sha1-Elgg40vIQtLyqq+v5MKRbuMsFXw=",
              "dev": true,
              "requires": {
                "core-util-is": "~1.0.0",
                "inherits": "~2.0.1",
                "isarray": "0.0.1",
                "string_decoder": "~0.10.x"
              }
            },
            "string_decoder": {
              "version": "0.10.31",
              "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz",
              "integrity": "sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=",
              "dev": true
            },
            "through2": {
              "version": "0.6.5",
              "resolved": "https://registry.npmjs.org/through2/-/through2-0.6.5.tgz",
              "integrity": "sha1-QaucZ7KdVyCQcUEOHXp6lozTrUg=",
              "dev": true,
              "requires": {
                "readable-stream": ">=1.0.33-1 <1.1.0-0",
                "xtend": ">=4.0.0 <4.1.0-0"
              }
            }
          }
        },
        "is-glob": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-3.1.0.tgz",
          "integrity": "sha1-e6WuJCF4BKxwcHuWkiVnSGzD6Eo=",
          "dev": true,
          "requires": {
            "is-extglob": "^2.1.0"
          }
        },
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "micromatch": {
          "version": "2.3.11",
          "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-2.3.11.tgz",
          "integrity": "sha1-hmd8l9FyCzY0MdBNDRUpO9OMFWU=",
          "dev": true,
          "requires": {
            "arr-diff": "^2.0.0",
            "array-unique": "^0.2.1",
            "braces": "^1.8.2",
            "expand-brackets": "^0.1.4",
            "extglob": "^0.3.1",
            "filename-regex": "^2.0.0",
            "is-extglob": "^1.0.0",
            "is-glob": "^2.0.1",
            "kind-of": "^3.0.2",
            "normalize-path": "^2.0.1",
            "object.omit": "^2.0.0",
            "parse-glob": "^3.0.4",
            "regex-cache": "^0.4.2"
          },
          "dependencies": {
            "is-extglob": {
              "version": "1.0.0",
              "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-1.0.0.tgz",
              "integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA=",
              "dev": true
            },
            "is-glob": {
              "version": "2.0.1",
              "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-2.0.1.tgz",
              "integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",
              "dev": true,
              "requires": {
                "is-extglob": "^1.0.0"
              }
            }
          }
        },
        "normalize-path": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-2.1.1.tgz",
          "integrity": "sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=",
          "dev": true,
          "requires": {
            "remove-trailing-separator": "^1.0.1"
          }
        },
        "ordered-read-streams": {
          "version": "0.3.0",
          "resolved": "https://registry.npmjs.org/ordered-read-streams/-/ordered-read-streams-0.3.0.tgz",
          "integrity": "sha1-cTfmmzKYuzQiR6G77jiByA4v14s=",
          "dev": true,
          "requires": {
            "is-stream": "^1.0.1",
            "readable-stream": "^2.0.1"
          }
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        },
        "strip-bom": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-2.0.0.tgz",
          "integrity": "sha1-YhmoVhZSBJHzV4i9vxRHqZx+aw4=",
          "dev": true,
          "requires": {
            "is-utf8": "^0.2.0"
          }
        },
        "unique-stream": {
          "version": "2.3.1",
          "resolved": "https://registry.npmjs.org/unique-stream/-/unique-stream-2.3.1.tgz",
          "integrity": "sha512-2nY4TnBE70yoxHkDli7DMazpWiP7xMdCYqU2nBRO0UB+ZpEkGsSija7MvmvnZFUeC+mrgiUfcHSr3LmRFIg4+A==",
          "dev": true,
          "requires": {
            "json-stable-stringify-without-jsonify": "^1.0.1",
            "through2-filter": "^3.0.0"
          },
          "dependencies": {
            "through2-filter": {
              "version": "3.0.0",
              "resolved": "https://registry.npmjs.org/through2-filter/-/through2-filter-3.0.0.tgz",
              "integrity": "sha512-jaRjI2WxN3W1V8/FMZ9HKIBXixtiqs3SQSX4/YGIiP3gL6djW48VoZq9tDqeCWs3MT8YY5wb/zli8VW8snY1CA==",
              "dev": true,
              "requires": {
                "through2": "~2.0.0",
                "xtend": "~4.0.0"
              }
            }
          }
        },
        "vinyl": {
          "version": "1.2.0",
          "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-1.2.0.tgz",
          "integrity": "sha1-XIgDbPVl5d8FVYv8kR+GVt8hiIQ=",
          "dev": true,
          "requires": {
            "clone": "^1.0.0",
            "clone-stats": "^0.0.1",
            "replace-ext": "0.0.1"
          }
        },
        "vinyl-fs": {
          "version": "2.4.4",
          "resolved": "https://registry.npmjs.org/vinyl-fs/-/vinyl-fs-2.4.4.tgz",
          "integrity": "sha1-vm/zJwy1Xf19MGNkDegfJddTIjk=",
          "dev": true,
          "requires": {
            "duplexify": "^3.2.0",
            "glob-stream": "^5.3.2",
            "graceful-fs": "^4.0.0",
            "gulp-sourcemaps": "1.6.0",
            "is-valid-glob": "^0.3.0",
            "lazystream": "^1.0.0",
            "lodash.isequal": "^4.0.0",
            "merge-stream": "^1.0.0",
            "mkdirp": "^0.5.0",
            "object-assign": "^4.0.0",
            "readable-stream": "^2.0.4",
            "strip-bom": "^2.0.0",
            "strip-bom-stream": "^1.0.0",
            "through2": "^2.0.0",
            "through2-filter": "^2.0.0",
            "vali-date": "^1.0.0",
            "vinyl": "^1.0.0"
          }
        }
      }
    },
    "decompress-response": {
      "version": "4.2.1",
      "resolved": "https://registry.npmjs.org/decompress-response/-/decompress-response-4.2.1.tgz",
      "integrity": "sha512-jOSne2qbyE+/r8G1VU+G/82LBs2Fs4LAsTiLSHOCOMZQl2OKZ6i8i4IyHemTe+/yIXOtTcRQMzPcgyhoFlqPkw==",
      "requires": {
        "mimic-response": "^2.0.0"
      }
    },
    "decompress-tar": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/decompress-tar/-/decompress-tar-3.1.0.tgz",
      "integrity": "sha1-IXx4n5uURQ76rcXF5TeXj8MzxGY=",
      "dev": true,
      "requires": {
        "is-tar": "^1.0.0",
        "object-assign": "^2.0.0",
        "strip-dirs": "^1.0.0",
        "tar-stream": "^1.1.1",
        "through2": "^0.6.1",
        "vinyl": "^0.4.3"
      },
      "dependencies": {
        "clone": {
          "version": "0.2.0",
          "resolved": "https://registry.npmjs.org/clone/-/clone-0.2.0.tgz",
          "integrity": "sha1-xhJqkK1Pctv1rNskPMN3JP6T/B8=",
          "dev": true
        },
        "isarray": {
          "version": "0.0.1",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz",
          "integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=",
          "dev": true
        },
        "object-assign": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-2.1.1.tgz",
          "integrity": "sha1-Q8NuXVaf+OSBbE76i+AtJpZ8GKo=",
          "dev": true
        },
        "readable-stream": {
          "version": "1.0.34",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-1.0.34.tgz",
          "integrity": "sha1-Elgg40vIQtLyqq+v5MKRbuMsFXw=",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.1",
            "isarray": "0.0.1",
            "string_decoder": "~0.10.x"
          }
        },
        "string_decoder": {
          "version": "0.10.31",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz",
          "integrity": "sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=",
          "dev": true
        },
        "through2": {
          "version": "0.6.5",
          "resolved": "https://registry.npmjs.org/through2/-/through2-0.6.5.tgz",
          "integrity": "sha1-QaucZ7KdVyCQcUEOHXp6lozTrUg=",
          "dev": true,
          "requires": {
            "readable-stream": ">=1.0.33-1 <1.1.0-0",
            "xtend": ">=4.0.0 <4.1.0-0"
          }
        },
        "vinyl": {
          "version": "0.4.6",
          "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-0.4.6.tgz",
          "integrity": "sha1-LzVsh6VQolVGHza76ypbqL94SEc=",
          "dev": true,
          "requires": {
            "clone": "^0.2.0",
            "clone-stats": "^0.0.1"
          }
        }
      }
    },
    "decompress-tarbz2": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/decompress-tarbz2/-/decompress-tarbz2-3.1.0.tgz",
      "integrity": "sha1-iyOTVoE1X58YnYclag+L3ZbZZm0=",
      "dev": true,
      "requires": {
        "is-bzip2": "^1.0.0",
        "object-assign": "^2.0.0",
        "seek-bzip": "^1.0.3",
        "strip-dirs": "^1.0.0",
        "tar-stream": "^1.1.1",
        "through2": "^0.6.1",
        "vinyl": "^0.4.3"
      },
      "dependencies": {
        "clone": {
          "version": "0.2.0",
          "resolved": "https://registry.npmjs.org/clone/-/clone-0.2.0.tgz",
          "integrity": "sha1-xhJqkK1Pctv1rNskPMN3JP6T/B8=",
          "dev": true
        },
        "isarray": {
          "version": "0.0.1",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz",
          "integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=",
          "dev": true
        },
        "object-assign": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-2.1.1.tgz",
          "integrity": "sha1-Q8NuXVaf+OSBbE76i+AtJpZ8GKo=",
          "dev": true
        },
        "readable-stream": {
          "version": "1.0.34",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-1.0.34.tgz",
          "integrity": "sha1-Elgg40vIQtLyqq+v5MKRbuMsFXw=",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.1",
            "isarray": "0.0.1",
            "string_decoder": "~0.10.x"
          }
        },
        "string_decoder": {
          "version": "0.10.31",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz",
          "integrity": "sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=",
          "dev": true
        },
        "through2": {
          "version": "0.6.5",
          "resolved": "https://registry.npmjs.org/through2/-/through2-0.6.5.tgz",
          "integrity": "sha1-QaucZ7KdVyCQcUEOHXp6lozTrUg=",
          "dev": true,
          "requires": {
            "readable-stream": ">=1.0.33-1 <1.1.0-0",
            "xtend": ">=4.0.0 <4.1.0-0"
          }
        },
        "vinyl": {
          "version": "0.4.6",
          "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-0.4.6.tgz",
          "integrity": "sha1-LzVsh6VQolVGHza76ypbqL94SEc=",
          "dev": true,
          "requires": {
            "clone": "^0.2.0",
            "clone-stats": "^0.0.1"
          }
        }
      }
    },
    "decompress-targz": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/decompress-targz/-/decompress-targz-3.1.0.tgz",
      "integrity": "sha1-ssE9+YFmJomRtxXWRH9kLpaW9aA=",
      "dev": true,
      "requires": {
        "is-gzip": "^1.0.0",
        "object-assign": "^2.0.0",
        "strip-dirs": "^1.0.0",
        "tar-stream": "^1.1.1",
        "through2": "^0.6.1",
        "vinyl": "^0.4.3"
      },
      "dependencies": {
        "clone": {
          "version": "0.2.0",
          "resolved": "https://registry.npmjs.org/clone/-/clone-0.2.0.tgz",
          "integrity": "sha1-xhJqkK1Pctv1rNskPMN3JP6T/B8=",
          "dev": true
        },
        "isarray": {
          "version": "0.0.1",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz",
          "integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=",
          "dev": true
        },
        "object-assign": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-2.1.1.tgz",
          "integrity": "sha1-Q8NuXVaf+OSBbE76i+AtJpZ8GKo=",
          "dev": true
        },
        "readable-stream": {
          "version": "1.0.34",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-1.0.34.tgz",
          "integrity": "sha1-Elgg40vIQtLyqq+v5MKRbuMsFXw=",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.1",
            "isarray": "0.0.1",
            "string_decoder": "~0.10.x"
          }
        },
        "string_decoder": {
          "version": "0.10.31",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz",
          "integrity": "sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=",
          "dev": true
        },
        "through2": {
          "version": "0.6.5",
          "resolved": "https://registry.npmjs.org/through2/-/through2-0.6.5.tgz",
          "integrity": "sha1-QaucZ7KdVyCQcUEOHXp6lozTrUg=",
          "dev": true,
          "requires": {
            "readable-stream": ">=1.0.33-1 <1.1.0-0",
            "xtend": ">=4.0.0 <4.1.0-0"
          }
        },
        "vinyl": {
          "version": "0.4.6",
          "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-0.4.6.tgz",
          "integrity": "sha1-LzVsh6VQolVGHza76ypbqL94SEc=",
          "dev": true,
          "requires": {
            "clone": "^0.2.0",
            "clone-stats": "^0.0.1"
          }
        }
      }
    },
    "decompress-unzip": {
      "version": "3.4.0",
      "resolved": "https://registry.npmjs.org/decompress-unzip/-/decompress-unzip-3.4.0.tgz",
      "integrity": "sha1-YUdbQVIGa74/7hL51inRX+ZHjus=",
      "dev": true,
      "requires": {
        "is-zip": "^1.0.0",
        "read-all-stream": "^3.0.0",
        "stat-mode": "^0.2.0",
        "strip-dirs": "^1.0.0",
        "through2": "^2.0.0",
        "vinyl": "^1.0.0",
        "yauzl": "^2.2.1"
      },
      "dependencies": {
        "vinyl": {
          "version": "1.2.0",
          "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-1.2.0.tgz",
          "integrity": "sha1-XIgDbPVl5d8FVYv8kR+GVt8hiIQ=",
          "dev": true,
          "requires": {
            "clone": "^1.0.0",
            "clone-stats": "^0.0.1",
            "replace-ext": "0.0.1"
          }
        }
      }
    },
    "deep-extend": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/deep-extend/-/deep-extend-0.6.0.tgz",
      "integrity": "sha512-LOHxIOaPYdHlJRtCQfDIVZtfw/ufM8+rVj649RIHzcm/vGwQRXFt6OPqIFWsm2XEMrNIEtWR64sY1LEKD2vAOA=="
    },
    "defaults": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/defaults/-/defaults-1.0.3.tgz",
      "integrity": "sha1-xlYFHpgX2f8I7YgUd/P+QBnz730=",
      "dev": true,
      "requires": {
        "clone": "^1.0.2"
      }
    },
    "defer-to-connect": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/defer-to-connect/-/defer-to-connect-1.1.3.tgz",
      "integrity": "sha512-0ISdNousHvZT2EiFlZeZAHBUvSxmKswVCEf8hW7KWgG4a8MVEu/3Vb6uWYozkjylyCxe0JBIiRB1jV45S70WVQ==",
      "dev": true
    },
    "define-properties": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/define-properties/-/define-properties-1.1.3.tgz",
      "integrity": "sha512-3MqfYKj2lLzdMSf8ZIZE/V+Zuy+BgD6f164e8K2w7dgnpKArBDerGYpM46IYYcjnkdPNMjPk9A6VFB8+3SKlXQ==",
      "dev": true,
      "optional": true,
      "requires": {
        "object-keys": "^1.0.12"
      }
    },
    "define-property": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/define-property/-/define-property-2.0.2.tgz",
      "integrity": "sha512-jwK2UV4cnPpbcG7+VRARKTZPUWowwXA8bzH5NP6ud0oeAxyYPuGZUAC7hMugpCdz4BeSZl2Dl9k66CHJ/46ZYQ==",
      "dev": true,
      "requires": {
        "is-descriptor": "^1.0.2",
        "isobject": "^3.0.1"
      },
      "dependencies": {
        "is-accessor-descriptor": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",
          "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",
          "dev": true,
          "requires": {
            "kind-of": "^6.0.0"
          }
        },
        "is-data-descriptor": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",
          "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",
          "dev": true,
          "requires": {
            "kind-of": "^6.0.0"
          }
        },
        "is-descriptor": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",
          "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",
          "dev": true,
          "requires": {
            "is-accessor-descriptor": "^1.0.0",
            "is-data-descriptor": "^1.0.0",
            "kind-of": "^6.0.2"
          }
        },
        "isobject": {
          "version": "3.0.1",
          "resolved": "https://registry.npmjs.org/isobject/-/isobject-3.0.1.tgz",
          "integrity": "sha1-TkMekrEalzFjaqH5yNHMvP2reN8=",
          "dev": true
        },
        "kind-of": {
          "version": "6.0.3",
          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.3.tgz",
          "integrity": "sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw==",
          "dev": true
        }
      }
    },
    "defined": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/defined/-/defined-1.0.0.tgz",
      "integrity": "sha1-yY2bzvdWdBiOEQlpFRGZ45sfppM=",
      "dev": true
    },
    "delayed-stream": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
      "integrity": "sha1-3zrhmayt+31ECqrgsp4icrJOxhk=",
      "dev": true
    },
    "delegates": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/delegates/-/delegates-1.0.0.tgz",
      "integrity": "sha1-hMbhWbgZBP3KWaDvRM2HDTElD5o="
    },
    "depd": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/depd/-/depd-1.1.2.tgz",
      "integrity": "sha1-m81S4UwJd2PnSbJ0xDRu0uVgtak=",
      "dev": true
    },
    "deprecate": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/deprecate/-/deprecate-1.0.0.tgz",
      "integrity": "sha1-ZhSQ7SQokWpsiIPYg05WRvTkpKg=",
      "dev": true
    },
    "deprecated": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/deprecated/-/deprecated-0.0.1.tgz",
      "integrity": "sha1-+cmvVGSvoeepcUWKi97yqpTVuxk=",
      "dev": true
    },
    "deps-sort": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/deps-sort/-/deps-sort-2.0.1.tgz",
      "integrity": "sha512-1orqXQr5po+3KI6kQb9A4jnXT1PBwggGl2d7Sq2xsnOeI9GPcE/tGcF9UiSZtZBM7MukY4cAh7MemS6tZYipfw==",
      "dev": true,
      "requires": {
        "JSONStream": "^1.0.3",
        "shasum-object": "^1.0.0",
        "subarg": "^1.0.0",
        "through2": "^2.0.0"
      }
    },
    "des.js": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/des.js/-/des.js-1.0.1.tgz",
      "integrity": "sha512-Q0I4pfFrv2VPd34/vfLrFOoRmlYj3OV50i7fskps1jZWK1kApMWWT9G6RRUeYedLcBDIhnSDaUvJMb3AhUlaEA==",
      "dev": true,
      "requires": {
        "inherits": "^2.0.1",
        "minimalistic-assert": "^1.0.0"
      }
    },
    "destroy": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/destroy/-/destroy-1.0.4.tgz",
      "integrity": "sha1-l4hXRCxEdJ5CBmE+N5RiBYJqvYA=",
      "dev": true
    },
    "detect-file": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/detect-file/-/detect-file-1.0.0.tgz",
      "integrity": "sha1-8NZtA2cqglyxtzvbP+YjEMjlUrc=",
      "dev": true
    },
    "detect-indent": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/detect-indent/-/detect-indent-4.0.0.tgz",
      "integrity": "sha1-920GQ1LN9Docts5hnE7jqUdd4gg=",
      "dev": true,
      "requires": {
        "repeating": "^2.0.0"
      }
    },
    "detect-libc": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/detect-libc/-/detect-libc-1.0.3.tgz",
      "integrity": "sha1-+hN8S9aY7fVc1c0CrFWfkaTEups="
    },
    "detect-node": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/detect-node/-/detect-node-2.0.4.tgz",
      "integrity": "sha512-ZIzRpLJrOj7jjP2miAtgqIfmzbxa4ZOr5jJc601zklsfEx9oTzmmj2nVpIPRpNlRTIh8lc1kyViIY7BWSGNmKw==",
      "dev": true,
      "optional": true
    },
    "detective": {
      "version": "4.7.1",
      "resolved": "https://registry.npmjs.org/detective/-/detective-4.7.1.tgz",
      "integrity": "sha512-H6PmeeUcZloWtdt4DAkFyzFL94arpHr3NOwwmVILFiy+9Qd4JTxxXrzfyGk/lmct2qVGBwTSwSXagqu2BxmWig==",
      "dev": true,
      "requires": {
        "acorn": "^5.2.1",
        "defined": "^1.0.0"
      },
      "dependencies": {
        "acorn": {
          "version": "5.7.4",
          "resolved": "https://registry.npmjs.org/acorn/-/acorn-5.7.4.tgz",
          "integrity": "sha512-1D++VG7BhrtvQpNbBzovKNc1FLGGEE/oGe7b9xJm/RFHMBeUaUGpluV9RLjZa47YFdPcDAenEYuq9pQPcMdLJg==",
          "dev": true
        }
      }
    },
    "dev-ip": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/dev-ip/-/dev-ip-1.0.1.tgz",
      "integrity": "sha1-p2o+0YVb56ASu4rBbLgPPADcKPA=",
      "dev": true
    },
    "diff": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/diff/-/diff-4.0.2.tgz",
      "integrity": "sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A==",
      "dev": true
    },
    "diffie-hellman": {
      "version": "5.0.3",
      "resolved": "https://registry.npmjs.org/diffie-hellman/-/diffie-hellman-5.0.3.tgz",
      "integrity": "sha512-kqag/Nl+f3GwyK25fhUMYj81BUOrZ9IuJsjIcDE5icNM9FJHAVm3VcUDxdLPoQtTuUylWm6ZIknYJwwaPxsUzg==",
      "dev": true,
      "requires": {
        "bn.js": "^4.1.0",
        "miller-rabin": "^4.0.0",
        "randombytes": "^2.0.0"
      },
      "dependencies": {
        "bn.js": {
          "version": "4.11.9",
          "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.11.9.tgz",
          "integrity": "sha512-E6QoYqCKZfgatHTdHzs1RRKP7ip4vvm+EyRUeE2RF0NblwVvb0p6jSVeNTOFxPn26QXN2o6SMfNxKp6kU8zQaw==",
          "dev": true
        }
      }
    },
    "dijkstrajs": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/dijkstrajs/-/dijkstrajs-1.0.1.tgz",
      "integrity": "sha1-082BIh4+pAdCz83lVtTpnpjdxxs=",
      "dev": true
    },
    "dlv": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/dlv/-/dlv-1.1.3.tgz",
      "integrity": "sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==",
      "dev": true
    },
    "dmg-builder": {
      "version": "22.9.1",
      "resolved": "https://registry.npmjs.org/dmg-builder/-/dmg-builder-22.9.1.tgz",
      "integrity": "sha512-jc+DAirqmQrNT6KbDHdfEp8D1kD0DBTnsLhwUR3MX+hMBun5bT134LQzpdK0GKvd22GqF8L1Cz/NOgaVjscAXQ==",
      "dev": true,
      "requires": {
        "app-builder-lib": "22.9.1",
        "builder-util": "22.9.1",
        "fs-extra": "^9.0.1",
        "iconv-lite": "^0.6.2",
        "js-yaml": "^3.14.0",
        "sanitize-filename": "^1.6.3"
      },
      "dependencies": {
        "fs-extra": {
          "version": "9.0.1",
          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-9.0.1.tgz",
          "integrity": "sha512-h2iAoN838FqAFJY2/qVpzFXy+EBxfVE220PalAqQLDVsFOHLJrZvut5puAbCdNv6WJk+B8ihI+k0c7JK5erwqQ==",
          "dev": true,
          "requires": {
            "at-least-node": "^1.0.0",
            "graceful-fs": "^4.2.0",
            "jsonfile": "^6.0.1",
            "universalify": "^1.0.0"
          }
        },
        "iconv-lite": {
          "version": "0.6.2",
          "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.6.2.tgz",
          "integrity": "sha512-2y91h5OpQlolefMPmUlivelittSWy0rP+oYVpn6A7GwVHNE8AWzoYOBNmlwks3LobaJxgHCYZAnyNo2GgpNRNQ==",
          "dev": true,
          "requires": {
            "safer-buffer": ">= 2.1.2 < 3.0.0"
          }
        },
        "jsonfile": {
          "version": "6.1.0",
          "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz",
          "integrity": "sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.1.6",
            "universalify": "^2.0.0"
          },
          "dependencies": {
            "universalify": {
              "version": "2.0.0",
              "resolved": "https://registry.npmjs.org/universalify/-/universalify-2.0.0.tgz",
              "integrity": "sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW5nq5scPqq0ZDP9Zyl04oQ==",
              "dev": true
            }
          }
        },
        "universalify": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/universalify/-/universalify-1.0.0.tgz",
          "integrity": "sha512-rb6X1W158d7pRQBg5gkR8uPaSfiids68LTJQYOtEUhoJUWBdaQHsuT/EUduxXYxcrt4r5PJ4fuHW1MHT6p0qug==",
          "dev": true
        }
      }
    },
    "dom-walk": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/dom-walk/-/dom-walk-0.1.2.tgz",
      "integrity": "sha512-6QvTW9mrGeIegrFXdtQi9pk7O/nSK6lSdXW2eqUspN5LWD7UTji2Fqw5V2YLjBpHEoU9Xl/eUWNpDeZvoyOv2w==",
      "dev": true
    },
    "domain-browser": {
      "version": "1.1.7",
      "resolved": "https://registry.npmjs.org/domain-browser/-/domain-browser-1.1.7.tgz",
      "integrity": "sha1-hnqksJP6oF8d4IwG9NeyH9+GmLw=",
      "dev": true
    },
    "dot-prop": {
      "version": "4.2.1",
      "resolved": "https://registry.npmjs.org/dot-prop/-/dot-prop-4.2.1.tgz",
      "integrity": "sha512-l0p4+mIuJIua0mhxGoh4a+iNL9bmeK5DvnSVQa6T0OhrVmaEa1XScX5Etc673FePCJOArq/4Pa2cLGODUWTPOQ==",
      "dev": true,
      "requires": {
        "is-obj": "^1.0.0"
      }
    },
    "dotenv": {
      "version": "8.2.0",
      "resolved": "https://registry.npmjs.org/dotenv/-/dotenv-8.2.0.tgz",
      "integrity": "sha512-8sJ78ElpbDJBHNeBzUbUVLsqKdccaa/BXF1uPTw3GrvQTBgrQrtObr2mUrE38vzYd8cEv+m/JBfDLioYcfXoaw==",
      "dev": true
    },
    "dotenv-expand": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/dotenv-expand/-/dotenv-expand-5.1.0.tgz",
      "integrity": "sha512-YXQl1DSa4/PQyRfgrv6aoNjhasp/p4qs9FjJ4q4cQk+8m4r6k4ZSiEyytKG8f8W9gi8WsQtIObNmKd+tMzNTmA==",
      "dev": true
    },
    "download": {
      "version": "5.0.3",
      "resolved": "https://registry.npmjs.org/download/-/download-5.0.3.tgz",
      "integrity": "sha1-Y1N/l3+ZJmow64oqL70fILgAD3o=",
      "dev": true,
      "requires": {
        "caw": "^2.0.0",
        "decompress": "^4.0.0",
        "filenamify": "^2.0.0",
        "get-stream": "^3.0.0",
        "got": "^6.3.0",
        "mkdirp": "^0.5.1",
        "pify": "^2.3.0"
      },
      "dependencies": {
        "decompress": {
          "version": "4.2.1",
          "resolved": "https://registry.npmjs.org/decompress/-/decompress-4.2.1.tgz",
          "integrity": "sha512-e48kc2IjU+2Zw8cTb6VZcJQ3lgVbS4uuB1TfCHbiZIP/haNXm+SVyhu+87jts5/3ROpd82GSVCoNs/z8l4ZOaQ==",
          "dev": true,
          "requires": {
            "decompress-tar": "^4.0.0",
            "decompress-tarbz2": "^4.0.0",
            "decompress-targz": "^4.0.0",
            "decompress-unzip": "^4.0.1",
            "graceful-fs": "^4.1.10",
            "make-dir": "^1.0.0",
            "pify": "^2.3.0",
            "strip-dirs": "^2.0.0"
          }
        },
        "decompress-tar": {
          "version": "4.1.1",
          "resolved": "https://registry.npmjs.org/decompress-tar/-/decompress-tar-4.1.1.tgz",
          "integrity": "sha512-JdJMaCrGpB5fESVyxwpCx4Jdj2AagLmv3y58Qy4GE6HMVjWz1FeVQk1Ct4Kye7PftcdOo/7U7UKzYBJgqnGeUQ==",
          "dev": true,
          "requires": {
            "file-type": "^5.2.0",
            "is-stream": "^1.1.0",
            "tar-stream": "^1.5.2"
          }
        },
        "decompress-tarbz2": {
          "version": "4.1.1",
          "resolved": "https://registry.npmjs.org/decompress-tarbz2/-/decompress-tarbz2-4.1.1.tgz",
          "integrity": "sha512-s88xLzf1r81ICXLAVQVzaN6ZmX4A6U4z2nMbOwobxkLoIIfjVMBg7TeguTUXkKeXni795B6y5rnvDw7rxhAq9A==",
          "dev": true,
          "requires": {
            "decompress-tar": "^4.1.0",
            "file-type": "^6.1.0",
            "is-stream": "^1.1.0",
            "seek-bzip": "^1.0.5",
            "unbzip2-stream": "^1.0.9"
          },
          "dependencies": {
            "file-type": {
              "version": "6.2.0",
              "resolved": "https://registry.npmjs.org/file-type/-/file-type-6.2.0.tgz",
              "integrity": "sha512-YPcTBDV+2Tm0VqjybVd32MHdlEGAtuxS3VAYsumFokDSMG+ROT5wawGlnHDoz7bfMcMDt9hxuXvXwoKUx2fkOg==",
              "dev": true
            }
          }
        },
        "decompress-targz": {
          "version": "4.1.1",
          "resolved": "https://registry.npmjs.org/decompress-targz/-/decompress-targz-4.1.1.tgz",
          "integrity": "sha512-4z81Znfr6chWnRDNfFNqLwPvm4db3WuZkqV+UgXQzSngG3CEKdBkw5jrv3axjjL96glyiiKjsxJG3X6WBZwX3w==",
          "dev": true,
          "requires": {
            "decompress-tar": "^4.1.1",
            "file-type": "^5.2.0",
            "is-stream": "^1.1.0"
          }
        },
        "decompress-unzip": {
          "version": "4.0.1",
          "resolved": "https://registry.npmjs.org/decompress-unzip/-/decompress-unzip-4.0.1.tgz",
          "integrity": "sha1-3qrM39FK6vhVePczroIQ+bSEj2k=",
          "dev": true,
          "requires": {
            "file-type": "^3.8.0",
            "get-stream": "^2.2.0",
            "pify": "^2.3.0",
            "yauzl": "^2.4.2"
          },
          "dependencies": {
            "file-type": {
              "version": "3.9.0",
              "resolved": "https://registry.npmjs.org/file-type/-/file-type-3.9.0.tgz",
              "integrity": "sha1-JXoHg4TR24CHvESdEH1SpSZyuek=",
              "dev": true
            },
            "get-stream": {
              "version": "2.3.1",
              "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-2.3.1.tgz",
              "integrity": "sha1-Xzj5PzRgCWZu4BUKBUFn+Rvdld4=",
              "dev": true,
              "requires": {
                "object-assign": "^4.0.1",
                "pinkie-promise": "^2.0.0"
              }
            }
          }
        },
        "file-type": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/file-type/-/file-type-5.2.0.tgz",
          "integrity": "sha1-LdvqfHP/42No365J3DOMBYwritY=",
          "dev": true
        },
        "is-natural-number": {
          "version": "4.0.1",
          "resolved": "https://registry.npmjs.org/is-natural-number/-/is-natural-number-4.0.1.tgz",
          "integrity": "sha1-q5124dtM7VHjXeDHLr7PCfc0zeg=",
          "dev": true
        },
        "strip-dirs": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/strip-dirs/-/strip-dirs-2.1.0.tgz",
          "integrity": "sha512-JOCxOeKLm2CAS73y/U4ZeZPTkE+gNVCzKt7Eox84Iej1LT/2pTWYpZKJuxwQpvX1LiZb1xokNR7RLfuBAa7T3g==",
          "dev": true,
          "requires": {
            "is-natural-number": "^4.0.1"
          }
        }
      }
    },
    "duplexer": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/duplexer/-/duplexer-0.1.2.tgz",
      "integrity": "sha512-jtD6YG370ZCIi/9GTaJKQxWTZD045+4R4hTk/x1UyoqadyJ9x9CgSi1RlVDQF8U2sxLLSnFkCaMihqljHIWgMg==",
      "dev": true
    },
    "duplexer2": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/duplexer2/-/duplexer2-0.1.4.tgz",
      "integrity": "sha1-ixLauHjA1p4+eJEFFmKjL8a93ME=",
      "dev": true,
      "requires": {
        "readable-stream": "^2.0.2"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "duplexer3": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/duplexer3/-/duplexer3-0.1.4.tgz",
      "integrity": "sha1-7gHdHKwO08vH/b6jfcCo8c4ALOI=",
      "dev": true
    },
    "duplexify": {
      "version": "3.7.1",
      "resolved": "https://registry.npmjs.org/duplexify/-/duplexify-3.7.1.tgz",
      "integrity": "sha512-07z8uv2wMyS51kKhD1KsdXJg5WQ6t93RneqRxUHnskXVtlYYkLqM0gqStQZ3pj073g687jPCHrqNfCzawLYh5g==",
      "dev": true,
      "requires": {
        "end-of-stream": "^1.0.0",
        "inherits": "^2.0.1",
        "readable-stream": "^2.0.0",
        "stream-shift": "^1.0.0"
      },
      "dependencies": {
        "end-of-stream": {
          "version": "1.4.4",
          "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz",
          "integrity": "sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==",
          "dev": true,
          "requires": {
            "once": "^1.4.0"
          }
        },
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "easy-extender": {
      "version": "2.3.4",
      "resolved": "https://registry.npmjs.org/easy-extender/-/easy-extender-2.3.4.tgz",
      "integrity": "sha512-8cAwm6md1YTiPpOvDULYJL4ZS6WfM5/cTeVVh4JsvyYZAoqlRVUpHL9Gr5Fy7HA6xcSZicUia3DeAgO3Us8E+Q==",
      "dev": true,
      "requires": {
        "lodash": "^4.17.10"
      }
    },
    "eazy-logger": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/eazy-logger/-/eazy-logger-3.1.0.tgz",
      "integrity": "sha512-/snsn2JqBtUSSstEl4R0RKjkisGHAhvYj89i7r3ytNUKW12y178KDZwXLXIgwDqLW6E/VRMT9qfld7wvFae8bQ==",
      "dev": true,
      "requires": {
        "tfunk": "^4.0.0"
      }
    },
    "ecc-jsbn": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/ecc-jsbn/-/ecc-jsbn-0.1.2.tgz",
      "integrity": "sha1-OoOpBOVDUyh4dMVkt1SThoSamMk=",
      "dev": true,
      "requires": {
        "jsbn": "~0.1.0",
        "safer-buffer": "^2.1.0"
      }
    },
    "ecurve": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/ecurve/-/ecurve-1.0.6.tgz",
      "integrity": "sha512-/BzEjNfiSuB7jIWKcS/z8FK9jNjmEWvUV2YZ4RLSmcDtP7Lq0m6FvDuSnJpBlDpGRpfRQeTLGLBI8H+kEv0r+w==",
      "dev": true,
      "requires": {
        "bigi": "^1.1.0",
        "safe-buffer": "^5.0.1"
      }
    },
    "ee-first": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz",
      "integrity": "sha1-WQxhFWsK4vTwJVcyoViyZrxWsh0=",
      "dev": true
    },
    "ejs": {
      "version": "3.1.5",
      "resolved": "https://registry.npmjs.org/ejs/-/ejs-3.1.5.tgz",
      "integrity": "sha512-dldq3ZfFtgVTJMLjOe+/3sROTzALlL9E34V4/sDtUd/KlBSS0s6U1/+WPE1B4sj9CXHJpL1M6rhNJnc9Wbal9w==",
      "dev": true,
      "requires": {
        "jake": "^10.6.1"
      }
    },
    "electron": {
      "version": "11.1.0",
      "resolved": "https://registry.npmjs.org/electron/-/electron-11.1.0.tgz",
      "integrity": "sha512-RFAhR/852VMaRd9NSe7jprwSoG9dLc6u1GwnqRWg+/3cy/8Zrwt1Betw1lXiZH7hGuB9K2cqju83Xv5Pq5ZSGA==",
      "dev": true,
      "requires": {
        "@electron/get": "^1.0.1",
        "@types/node": "^12.0.12",
        "extract-zip": "^1.0.3"
      },
      "dependencies": {
        "@types/node": {
          "version": "12.20.1",
          "resolved": "https://registry.npmjs.org/@types/node/-/node-12.20.1.tgz",
          "integrity": "sha512-tCkE96/ZTO+cWbln2xfyvd6ngHLanvVlJ3e5BeirJ3BYI5GbAyubIrmV4JjjugDly5D9fHjOL5MNsqsCnqwW6g==",
          "dev": true
        }
      }
    },
    "electron-builder": {
      "version": "22.9.1",
      "resolved": "https://registry.npmjs.org/electron-builder/-/electron-builder-22.9.1.tgz",
      "integrity": "sha512-GXPt8l5Mxwm1QKYopUM6/Tdh9W3695G6Ax+IFyj5pQ51G4SD5L1uq4/RkPSsOgs3rP7jNSV6g6OfDzdtVufPdA==",
      "dev": true,
      "requires": {
        "@types/yargs": "^15.0.5",
        "app-builder-lib": "22.9.1",
        "bluebird-lst": "^1.0.9",
        "builder-util": "22.9.1",
        "builder-util-runtime": "8.7.2",
        "chalk": "^4.1.0",
        "dmg-builder": "22.9.1",
        "fs-extra": "^9.0.1",
        "is-ci": "^2.0.0",
        "lazy-val": "^1.0.4",
        "read-config-file": "6.0.0",
        "sanitize-filename": "^1.6.3",
        "update-notifier": "^4.1.1",
        "yargs": "^16.0.3"
      },
      "dependencies": {
        "ansi-align": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/ansi-align/-/ansi-align-3.0.0.tgz",
          "integrity": "sha512-ZpClVKqXN3RGBmKibdfWzqCY4lnjEuoNzU5T0oEFpfd/z5qJHVarukridD4juLO2FXMiwUQxr9WqQtaYa8XRYw==",
          "dev": true,
          "requires": {
            "string-width": "^3.0.0"
          },
          "dependencies": {
            "string-width": {
              "version": "3.1.0",
              "resolved": "https://registry.npmjs.org/string-width/-/string-width-3.1.0.tgz",
              "integrity": "sha512-vafcv6KjVZKSgz06oM/H6GDBrAtz8vdhQakGjFIvNrHA6y3HCF1CInLy+QLq8dTJPQ1b+KDUqDFctkdRW44e1w==",
              "dev": true,
              "requires": {
                "emoji-regex": "^7.0.1",
                "is-fullwidth-code-point": "^2.0.0",
                "strip-ansi": "^5.1.0"
              }
            }
          }
        },
        "ansi-regex": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",
          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg==",
          "dev": true
        },
        "ansi-styles": {
          "version": "4.3.0",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
          "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
          "dev": true,
          "requires": {
            "color-convert": "^2.0.1"
          }
        },
        "boxen": {
          "version": "4.2.0",
          "resolved": "https://registry.npmjs.org/boxen/-/boxen-4.2.0.tgz",
          "integrity": "sha512-eB4uT9RGzg2odpER62bBwSLvUeGC+WbRjjyyFhGsKnc8wp/m0+hQsMUvUe3H2V0D5vw0nBdO1hCJoZo5mKeuIQ==",
          "dev": true,
          "requires": {
            "ansi-align": "^3.0.0",
            "camelcase": "^5.3.1",
            "chalk": "^3.0.0",
            "cli-boxes": "^2.2.0",
            "string-width": "^4.1.0",
            "term-size": "^2.1.0",
            "type-fest": "^0.8.1",
            "widest-line": "^3.1.0"
          },
          "dependencies": {
            "chalk": {
              "version": "3.0.0",
              "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
              "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
              "dev": true,
              "requires": {
                "ansi-styles": "^4.1.0",
                "supports-color": "^7.1.0"
              }
            }
          }
        },
        "chalk": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.0.tgz",
          "integrity": "sha512-qwx12AxXe2Q5xQ43Ac//I6v5aXTipYrSESdOgzrN+9XjgEpyjpKuvSGaN4qE93f7TQTlerQQ8S+EQ0EyDoVL1A==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "ci-info": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-2.0.0.tgz",
          "integrity": "sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ==",
          "dev": true
        },
        "cli-boxes": {
          "version": "2.2.1",
          "resolved": "https://registry.npmjs.org/cli-boxes/-/cli-boxes-2.2.1.tgz",
          "integrity": "sha512-y4coMcylgSCdVinjiDBuR8PCC2bLjyGTwEmPb9NHR/QaNU6EUOXcTY/s6VjGMD6ENSEaeQYHCY0GNGS5jfMwPw==",
          "dev": true
        },
        "cliui": {
          "version": "7.0.4",
          "resolved": "https://registry.npmjs.org/cliui/-/cliui-7.0.4.tgz",
          "integrity": "sha512-OcRE68cOsVMXp1Yvonl/fzkQOyjLSu/8bhPDfQt0e0/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==",
          "dev": true,
          "requires": {
            "string-width": "^4.2.0",
            "strip-ansi": "^6.0.0",
            "wrap-ansi": "^7.0.0"
          },
          "dependencies": {
            "ansi-regex": {
              "version": "5.0.0",
              "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz",
              "integrity": "sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==",
              "dev": true
            },
            "strip-ansi": {
              "version": "6.0.0",
              "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.0.tgz",
              "integrity": "sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==",
              "dev": true,
              "requires": {
                "ansi-regex": "^5.0.0"
              }
            }
          }
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "dev": true,
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "configstore": {
          "version": "5.0.1",
          "resolved": "https://registry.npmjs.org/configstore/-/configstore-5.0.1.tgz",
          "integrity": "sha512-aMKprgk5YhBNyH25hj8wGt2+D52Sw1DRRIzqBwLp2Ya9mFmY8KPvvtvmna8SxVR9JMZ4kzMD68N22vlaRpkeFA==",
          "dev": true,
          "requires": {
            "dot-prop": "^5.2.0",
            "graceful-fs": "^4.1.2",
            "make-dir": "^3.0.0",
            "unique-string": "^2.0.0",
            "write-file-atomic": "^3.0.0",
            "xdg-basedir": "^4.0.0"
          }
        },
        "crypto-random-string": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/crypto-random-string/-/crypto-random-string-2.0.0.tgz",
          "integrity": "sha512-v1plID3y9r/lPhviJ1wrXpLeyUIGAZ2SHNYTEapm7/8A9nLPoyvVp3RK/EPFqn5kEznyWgYZNsRtYYIWbuG8KA==",
          "dev": true
        },
        "decompress-response": {
          "version": "3.3.0",
          "resolved": "https://registry.npmjs.org/decompress-response/-/decompress-response-3.3.0.tgz",
          "integrity": "sha1-gKTdMjdIOEv6JICDYirt7Jgq3/M=",
          "dev": true,
          "requires": {
            "mimic-response": "^1.0.0"
          }
        },
        "dot-prop": {
          "version": "5.3.0",
          "resolved": "https://registry.npmjs.org/dot-prop/-/dot-prop-5.3.0.tgz",
          "integrity": "sha512-QM8q3zDe58hqUqjraQOmzZ1LIH9SWQJTlEKCH4kJ2oQvLZk7RbQXvtDM2XEq3fwkV9CCvvH4LA0AV+ogFsBM2Q==",
          "dev": true,
          "requires": {
            "is-obj": "^2.0.0"
          }
        },
        "end-of-stream": {
          "version": "1.4.4",
          "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz",
          "integrity": "sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==",
          "dev": true,
          "requires": {
            "once": "^1.4.0"
          }
        },
        "fs-extra": {
          "version": "9.0.1",
          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-9.0.1.tgz",
          "integrity": "sha512-h2iAoN838FqAFJY2/qVpzFXy+EBxfVE220PalAqQLDVsFOHLJrZvut5puAbCdNv6WJk+B8ihI+k0c7JK5erwqQ==",
          "dev": true,
          "requires": {
            "at-least-node": "^1.0.0",
            "graceful-fs": "^4.2.0",
            "jsonfile": "^6.0.1",
            "universalify": "^1.0.0"
          }
        },
        "get-stream": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-4.1.0.tgz",
          "integrity": "sha512-GMat4EJ5161kIy2HevLlr4luNjBgvmj413KaQA7jt4V8B4RDsfpHk7WQ9GVqfYyyx8OS/L66Kox+rJRNklLK7w==",
          "dev": true,
          "requires": {
            "pump": "^3.0.0"
          }
        },
        "global-dirs": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/global-dirs/-/global-dirs-2.1.0.tgz",
          "integrity": "sha512-MG6kdOUh/xBnyo9cJFeIKkLEc1AyFq42QTU4XiX51i2NEdxLxLWXIjEjmqKeSuKR7pAZjTqUVoT2b2huxVLgYQ==",
          "dev": true,
          "requires": {
            "ini": "1.3.7"
          }
        },
        "got": {
          "version": "9.6.0",
          "resolved": "https://registry.npmjs.org/got/-/got-9.6.0.tgz",
          "integrity": "sha512-R7eWptXuGYxwijs0eV+v3o6+XH1IqVK8dJOEecQfTmkncw9AV4dcw/Dhxi8MdlqPthxxpZyizMzyg8RTmEsG+Q==",
          "dev": true,
          "requires": {
            "@sindresorhus/is": "^0.14.0",
            "@szmarczak/http-timer": "^1.1.2",
            "cacheable-request": "^6.0.0",
            "decompress-response": "^3.3.0",
            "duplexer3": "^0.1.4",
            "get-stream": "^4.1.0",
            "lowercase-keys": "^1.0.1",
            "mimic-response": "^1.0.1",
            "p-cancelable": "^1.0.0",
            "to-readable-stream": "^1.0.0",
            "url-parse-lax": "^3.0.0"
          }
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "ini": {
          "version": "1.3.7",
          "resolved": "https://registry.npmjs.org/ini/-/ini-1.3.7.tgz",
          "integrity": "sha512-iKpRpXP+CrP2jyrxvg1kMUpXDyRUFDWurxbnVT1vQPx+Wz9uCYsMIqYuSBLV+PAaZG/d7kRLKRFc9oDMsH+mFQ==",
          "dev": true
        },
        "is-ci": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-ci/-/is-ci-2.0.0.tgz",
          "integrity": "sha512-YfJT7rkpQB0updsdHLGWrvhBJfcfzNNawYDNIyQXJz0IViGf75O8EBPKSdvw2rF+LGCsX4FZ8tcr3b19LcZq4w==",
          "dev": true,
          "requires": {
            "ci-info": "^2.0.0"
          }
        },
        "is-installed-globally": {
          "version": "0.3.2",
          "resolved": "https://registry.npmjs.org/is-installed-globally/-/is-installed-globally-0.3.2.tgz",
          "integrity": "sha512-wZ8x1js7Ia0kecP/CHM/3ABkAmujX7WPvQk6uu3Fly/Mk44pySulQpnHG46OMjHGXApINnV4QhY3SWnECO2z5g==",
          "dev": true,
          "requires": {
            "global-dirs": "^2.0.1",
            "is-path-inside": "^3.0.1"
          }
        },
        "is-npm": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/is-npm/-/is-npm-4.0.0.tgz",
          "integrity": "sha512-96ECIfh9xtDDlPylNPXhzjsykHsMJZ18ASpaWzQyBr4YRTcVjUvzaHayDAES2oU/3KpljhHUjtSRNiDwi0F0ig==",
          "dev": true
        },
        "is-obj": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-obj/-/is-obj-2.0.0.tgz",
          "integrity": "sha512-drqDG3cbczxxEJRoOXcOjtdp1J/lyp1mNn0xaznRs8+muBhgQcrnbspox5X5fOw0HnMnbfDzvnEMEtqDEJEo8w==",
          "dev": true
        },
        "is-path-inside": {
          "version": "3.0.2",
          "resolved": "https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.2.tgz",
          "integrity": "sha512-/2UGPSgmtqwo1ktx8NDHjuPwZWmHhO+gj0f93EkhLB5RgW9RZevWYYlIkS6zePc6U2WpOdQYIwHe9YC4DWEBVg==",
          "dev": true
        },
        "jsonfile": {
          "version": "6.1.0",
          "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz",
          "integrity": "sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.1.6",
            "universalify": "^2.0.0"
          },
          "dependencies": {
            "universalify": {
              "version": "2.0.0",
              "resolved": "https://registry.npmjs.org/universalify/-/universalify-2.0.0.tgz",
              "integrity": "sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW5nq5scPqq0ZDP9Zyl04oQ==",
              "dev": true
            }
          }
        },
        "latest-version": {
          "version": "5.1.0",
          "resolved": "https://registry.npmjs.org/latest-version/-/latest-version-5.1.0.tgz",
          "integrity": "sha512-weT+r0kTkRQdCdYCNtkMwWXQTMEswKrFBkm4ckQOMVhhqhIMI1UT2hMj+1iigIhgSZm5gTmrRXBNoGUgaTY1xA==",
          "dev": true,
          "requires": {
            "package-json": "^6.3.0"
          }
        },
        "make-dir": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-3.1.0.tgz",
          "integrity": "sha512-g3FeP20LNwhALb/6Cz6Dd4F2ngze0jz7tbzrD2wAV+o9FeNHe4rL+yK2md0J/fiSf1sa1ADhXqi5+oVwOM/eGw==",
          "dev": true,
          "requires": {
            "semver": "^6.0.0"
          }
        },
        "mimic-response": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-1.0.1.tgz",
          "integrity": "sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ==",
          "dev": true
        },
        "package-json": {
          "version": "6.5.0",
          "resolved": "https://registry.npmjs.org/package-json/-/package-json-6.5.0.tgz",
          "integrity": "sha512-k3bdm2n25tkyxcjSKzB5x8kfVxlMdgsbPr0GkZcwHsLpba6cBjqCt1KlcChKEvxHIcTB1FVMuwoijZ26xex5MQ==",
          "dev": true,
          "requires": {
            "got": "^9.6.0",
            "registry-auth-token": "^4.0.0",
            "registry-url": "^5.0.0",
            "semver": "^6.2.0"
          }
        },
        "prepend-http": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/prepend-http/-/prepend-http-2.0.0.tgz",
          "integrity": "sha1-6SQ0v6XqjBn0HN/UAddBo8gZ2Jc=",
          "dev": true
        },
        "pump": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/pump/-/pump-3.0.0.tgz",
          "integrity": "sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==",
          "dev": true,
          "requires": {
            "end-of-stream": "^1.1.0",
            "once": "^1.3.1"
          }
        },
        "registry-auth-token": {
          "version": "4.2.1",
          "resolved": "https://registry.npmjs.org/registry-auth-token/-/registry-auth-token-4.2.1.tgz",
          "integrity": "sha512-6gkSb4U6aWJB4SF2ZvLb76yCBjcvufXBqvvEx1HbmKPkutswjW1xNVRY0+daljIYRbogN7O0etYSlbiaEQyMyw==",
          "dev": true,
          "requires": {
            "rc": "^1.2.8"
          }
        },
        "registry-url": {
          "version": "5.1.0",
          "resolved": "https://registry.npmjs.org/registry-url/-/registry-url-5.1.0.tgz",
          "integrity": "sha512-8acYXXTI0AkQv6RAOjE3vOaIXZkT9wo4LOFbBKYQEEnnMNBpKqdUrI6S4NT0KPIo/WVvJ5tE/X5LF/TQUf0ekw==",
          "dev": true,
          "requires": {
            "rc": "^1.2.8"
          }
        },
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        },
        "semver-diff": {
          "version": "3.1.1",
          "resolved": "https://registry.npmjs.org/semver-diff/-/semver-diff-3.1.1.tgz",
          "integrity": "sha512-GX0Ix/CJcHyB8c4ykpHGIAvLyOwOobtM/8d+TQkAd81/bEjgPHrfba41Vpesr7jX/t8Uh+R3EX9eAS5be+jQYg==",
          "dev": true,
          "requires": {
            "semver": "^6.3.0"
          }
        },
        "string-width": {
          "version": "4.2.0",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.0.tgz",
          "integrity": "sha512-zUz5JD+tgqtuDjMhwIg5uFVV3dtqZ9yQJlZVfq4I01/K5Paj5UHj7VyrQOJvzawSVlKpObApbfD0Ed6yJc+1eg==",
          "dev": true,
          "requires": {
            "emoji-regex": "^8.0.0",
            "is-fullwidth-code-point": "^3.0.0",
            "strip-ansi": "^6.0.0"
          },
          "dependencies": {
            "ansi-regex": {
              "version": "5.0.0",
              "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz",
              "integrity": "sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==",
              "dev": true
            },
            "emoji-regex": {
              "version": "8.0.0",
              "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
              "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
              "dev": true
            },
            "is-fullwidth-code-point": {
              "version": "3.0.0",
              "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
              "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
              "dev": true
            },
            "strip-ansi": {
              "version": "6.0.0",
              "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.0.tgz",
              "integrity": "sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==",
              "dev": true,
              "requires": {
                "ansi-regex": "^5.0.0"
              }
            }
          }
        },
        "strip-ansi": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",
          "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",
          "dev": true,
          "requires": {
            "ansi-regex": "^4.1.0"
          }
        },
        "supports-color": {
          "version": "7.2.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
          "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        },
        "term-size": {
          "version": "2.2.1",
          "resolved": "https://registry.npmjs.org/term-size/-/term-size-2.2.1.tgz",
          "integrity": "sha512-wK0Ri4fOGjv/XPy8SBHZChl8CM7uMc5VML7SqiQ0zG7+J5Vr+RMQDoHa2CNT6KHUnTGIXH34UDMkPzAUyapBZg==",
          "dev": true
        },
        "type-fest": {
          "version": "0.8.1",
          "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.8.1.tgz",
          "integrity": "sha512-4dbzIzqvjtgiM5rw1k5rEHtBANKmdudhGyBEajN01fEyhaAIhsoKNy6y7+IN93IfpFtwY9iqi7kD+xwKhQsNJA==",
          "dev": true
        },
        "unique-string": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/unique-string/-/unique-string-2.0.0.tgz",
          "integrity": "sha512-uNaeirEPvpZWSgzwsPGtU2zVSTrn/8L5q/IexZmH0eH6SA73CmAA5U4GwORTxQAZs95TAXLNqeLoPPNO5gZfWg==",
          "dev": true,
          "requires": {
            "crypto-random-string": "^2.0.0"
          }
        },
        "universalify": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/universalify/-/universalify-1.0.0.tgz",
          "integrity": "sha512-rb6X1W158d7pRQBg5gkR8uPaSfiids68LTJQYOtEUhoJUWBdaQHsuT/EUduxXYxcrt4r5PJ4fuHW1MHT6p0qug==",
          "dev": true
        },
        "update-notifier": {
          "version": "4.1.3",
          "resolved": "https://registry.npmjs.org/update-notifier/-/update-notifier-4.1.3.tgz",
          "integrity": "sha512-Yld6Z0RyCYGB6ckIjffGOSOmHXj1gMeE7aROz4MG+XMkmixBX4jUngrGXNYz7wPKBmtoD4MnBa2Anu7RSKht/A==",
          "dev": true,
          "requires": {
            "boxen": "^4.2.0",
            "chalk": "^3.0.0",
            "configstore": "^5.0.1",
            "has-yarn": "^2.1.0",
            "import-lazy": "^2.1.0",
            "is-ci": "^2.0.0",
            "is-installed-globally": "^0.3.1",
            "is-npm": "^4.0.0",
            "is-yarn-global": "^0.3.0",
            "latest-version": "^5.0.0",
            "pupa": "^2.0.1",
            "semver-diff": "^3.1.1",
            "xdg-basedir": "^4.0.0"
          },
          "dependencies": {
            "chalk": {
              "version": "3.0.0",
              "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
              "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
              "dev": true,
              "requires": {
                "ansi-styles": "^4.1.0",
                "supports-color": "^7.1.0"
              }
            }
          }
        },
        "url-parse-lax": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/url-parse-lax/-/url-parse-lax-3.0.0.tgz",
          "integrity": "sha1-FrXK/Afb42dsGxmZF3gj1lA6yww=",
          "dev": true,
          "requires": {
            "prepend-http": "^2.0.0"
          }
        },
        "widest-line": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/widest-line/-/widest-line-3.1.0.tgz",
          "integrity": "sha512-NsmoXalsWVDMGupxZ5R08ka9flZjjiLvHVAWYOKtiKM8ujtZWr9cRffak+uSE48+Ob8ObalXpwyeUiyDD6QFgg==",
          "dev": true,
          "requires": {
            "string-width": "^4.0.0"
          }
        },
        "wrap-ansi": {
          "version": "7.0.0",
          "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
          "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.0.0",
            "string-width": "^4.1.0",
            "strip-ansi": "^6.0.0"
          },
          "dependencies": {
            "ansi-regex": {
              "version": "5.0.0",
              "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz",
              "integrity": "sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==",
              "dev": true
            },
            "strip-ansi": {
              "version": "6.0.0",
              "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.0.tgz",
              "integrity": "sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==",
              "dev": true,
              "requires": {
                "ansi-regex": "^5.0.0"
              }
            }
          }
        },
        "write-file-atomic": {
          "version": "3.0.3",
          "resolved": "https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-3.0.3.tgz",
          "integrity": "sha512-AvHcyZ5JnSfq3ioSyjrBkH9yW4m7Ayk8/9My/DD9onKeu/94fwrMocemO2QAJFAlnnDN+ZDS+ZjAR5ua1/PV/Q==",
          "dev": true,
          "requires": {
            "imurmurhash": "^0.1.4",
            "is-typedarray": "^1.0.0",
            "signal-exit": "^3.0.2",
            "typedarray-to-buffer": "^3.1.5"
          }
        },
        "xdg-basedir": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/xdg-basedir/-/xdg-basedir-4.0.0.tgz",
          "integrity": "sha512-PSNhEJDejZYV7h50BohL09Er9VaIefr2LMAf3OEmpCkjOi34eYyQYAXUTjEQtZJTKcF0E2UKTh+osDLsgNim9Q==",
          "dev": true
        },
        "y18n": {
          "version": "5.0.5",
          "resolved": "https://registry.npmjs.org/y18n/-/y18n-5.0.5.tgz",
          "integrity": "sha512-hsRUr4FFrvhhRH12wOdfs38Gy7k2FFzB9qgN9v3aLykRq0dRcdcpz5C9FxdS2NuhOrI/628b/KSTJ3rwHysYSg==",
          "dev": true
        },
        "yargs": {
          "version": "16.2.0",
          "resolved": "https://registry.npmjs.org/yargs/-/yargs-16.2.0.tgz",
          "integrity": "sha512-D1mvvtDG0L5ft/jGWkLpG1+m0eQxOfaBvTNELraWj22wSVUMWxZUvYgJYcKh6jGGIkJFhH4IZPQhR4TKpc8mBw==",
          "dev": true,
          "requires": {
            "cliui": "^7.0.2",
            "escalade": "^3.1.1",
            "get-caller-file": "^2.0.5",
            "require-directory": "^2.1.1",
            "string-width": "^4.2.0",
            "y18n": "^5.0.5",
            "yargs-parser": "^20.2.2"
          }
        },
        "yargs-parser": {
          "version": "20.2.4",
          "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-20.2.4.tgz",
          "integrity": "sha512-WOkpgNhPTlE73h4VFAFsOnomJVaovO8VqLDzy5saChRBFQFBoMYirowyW+Q9HB4HFF4Z7VZTiG3iSzJJA29yRA==",
          "dev": true
        }
      }
    },
    "electron-notarize": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/electron-notarize/-/electron-notarize-1.0.0.tgz",
      "integrity": "sha512-dsib1IAquMn0onCrNMJ6gtEIZn/azG8hZMCYOuZIMVMUeRMgBYHK1s5TK9P8xAcrAjh/2aN5WYHzgVSWX314og==",
      "dev": true,
      "requires": {
        "debug": "^4.1.1",
        "fs-extra": "^9.0.1"
      },
      "dependencies": {
        "debug": {
          "version": "4.3.1",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.1.tgz",
          "integrity": "sha512-doEwdvm4PCeK4K3RQN2ZC2BYUBaxwLARCqZmMjtF8a51J2Rb0xpVloFRnCODwqjpwnAoao4pelN8l3RJdv3gRQ==",
          "dev": true,
          "requires": {
            "ms": "2.1.2"
          }
        },
        "fs-extra": {
          "version": "9.1.0",
          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-9.1.0.tgz",
          "integrity": "sha512-hcg3ZmepS30/7BSFqRvoo3DOMQu7IjqxO5nCDt+zM9XWjb33Wg7ziNT+Qvqbuc3+gWpzO02JubVyk2G4Zvo1OQ==",
          "dev": true,
          "requires": {
            "at-least-node": "^1.0.0",
            "graceful-fs": "^4.2.0",
            "jsonfile": "^6.0.1",
            "universalify": "^2.0.0"
          }
        },
        "jsonfile": {
          "version": "6.1.0",
          "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz",
          "integrity": "sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.1.6",
            "universalify": "^2.0.0"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
          "dev": true
        },
        "universalify": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/universalify/-/universalify-2.0.0.tgz",
          "integrity": "sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW5nq5scPqq0ZDP9Zyl04oQ==",
          "dev": true
        }
      }
    },
    "electron-osx-sign": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/electron-osx-sign/-/electron-osx-sign-0.5.0.tgz",
      "integrity": "sha512-icoRLHzFz/qxzDh/N4Pi2z4yVHurlsCAYQvsCSG7fCedJ4UJXBS6PoQyGH71IfcqKupcKeK7HX/NkyfG+v6vlQ==",
      "dev": true,
      "requires": {
        "bluebird": "^3.5.0",
        "compare-version": "^0.1.2",
        "debug": "^2.6.8",
        "isbinaryfile": "^3.0.2",
        "minimist": "^1.2.0",
        "plist": "^3.0.1"
      },
      "dependencies": {
        "isbinaryfile": {
          "version": "3.0.3",
          "resolved": "https://registry.npmjs.org/isbinaryfile/-/isbinaryfile-3.0.3.tgz",
          "integrity": "sha512-8cJBL5tTd2OS0dM4jz07wQd5g0dCCqIhUxPIGtZfa5L6hWlvV5MHTITy/DBAsF+Oe2LS1X3krBUhNwaGUWpWxw==",
          "dev": true,
          "requires": {
            "buffer-alloc": "^1.2.0"
          }
        }
      }
    },
    "electron-packager": {
      "version": "15.2.0",
      "resolved": "https://registry.npmjs.org/electron-packager/-/electron-packager-15.2.0.tgz",
      "integrity": "sha512-BaklTBRQy1JTijR3hi8XxHf/uo76rHbDCNM/eQHSblzE9C0NoNfOe86nPxB7y1u2jwlqoEJ4zFiHpTFioKGGRA==",
      "dev": true,
      "requires": {
        "@electron/get": "^1.6.0",
        "asar": "^3.0.0",
        "debug": "^4.0.1",
        "electron-notarize": "^1.0.0",
        "electron-osx-sign": "^0.5.0",
        "extract-zip": "^2.0.0",
        "filenamify": "^4.1.0",
        "fs-extra": "^9.0.0",
        "galactus": "^0.2.1",
        "get-package-info": "^1.0.0",
        "junk": "^3.1.0",
        "parse-author": "^2.0.0",
        "plist": "^3.0.0",
        "rcedit": "^2.0.0",
        "resolve": "^1.1.6",
        "semver": "^7.1.3",
        "yargs-parser": "^20.0.0"
      },
      "dependencies": {
        "debug": {
          "version": "4.3.1",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.1.tgz",
          "integrity": "sha512-doEwdvm4PCeK4K3RQN2ZC2BYUBaxwLARCqZmMjtF8a51J2Rb0xpVloFRnCODwqjpwnAoao4pelN8l3RJdv3gRQ==",
          "dev": true,
          "requires": {
            "ms": "2.1.2"
          }
        },
        "end-of-stream": {
          "version": "1.4.4",
          "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz",
          "integrity": "sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==",
          "dev": true,
          "requires": {
            "once": "^1.4.0"
          }
        },
        "extract-zip": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/extract-zip/-/extract-zip-2.0.1.tgz",
          "integrity": "sha512-GDhU9ntwuKyGXdZBUgTIe+vXnWj0fppUEtMDL0+idd5Sta8TGpHssn/eusA9mrPr9qNDym6SxAYZjNvCn/9RBg==",
          "dev": true,
          "requires": {
            "@types/yauzl": "^2.9.1",
            "debug": "^4.1.1",
            "get-stream": "^5.1.0",
            "yauzl": "^2.10.0"
          }
        },
        "filenamify": {
          "version": "4.2.0",
          "resolved": "https://registry.npmjs.org/filenamify/-/filenamify-4.2.0.tgz",
          "integrity": "sha512-pkgE+4p7N1n7QieOopmn3TqJaefjdWXwEkj2XLZJLKfOgcQKkn11ahvGNgTD8mLggexLiDFQxeTs14xVU22XPA==",
          "dev": true,
          "requires": {
            "filename-reserved-regex": "^2.0.0",
            "strip-outer": "^1.0.1",
            "trim-repeated": "^1.0.0"
          }
        },
        "fs-extra": {
          "version": "9.1.0",
          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-9.1.0.tgz",
          "integrity": "sha512-hcg3ZmepS30/7BSFqRvoo3DOMQu7IjqxO5nCDt+zM9XWjb33Wg7ziNT+Qvqbuc3+gWpzO02JubVyk2G4Zvo1OQ==",
          "dev": true,
          "requires": {
            "at-least-node": "^1.0.0",
            "graceful-fs": "^4.2.0",
            "jsonfile": "^6.0.1",
            "universalify": "^2.0.0"
          }
        },
        "get-stream": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-5.2.0.tgz",
          "integrity": "sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==",
          "dev": true,
          "requires": {
            "pump": "^3.0.0"
          }
        },
        "jsonfile": {
          "version": "6.1.0",
          "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz",
          "integrity": "sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.1.6",
            "universalify": "^2.0.0"
          }
        },
        "lru-cache": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz",
          "integrity": "sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==",
          "dev": true,
          "requires": {
            "yallist": "^4.0.0"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
          "dev": true
        },
        "pump": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/pump/-/pump-3.0.0.tgz",
          "integrity": "sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==",
          "dev": true,
          "requires": {
            "end-of-stream": "^1.1.0",
            "once": "^1.3.1"
          }
        },
        "rcedit": {
          "version": "2.3.0",
          "resolved": "https://registry.npmjs.org/rcedit/-/rcedit-2.3.0.tgz",
          "integrity": "sha512-h1gNEl9Oai1oijwyJ1WYqYSXTStHnOcv1KYljg/8WM4NAg3H1KBK3azIaKkQ1WQl+d7PoJpcBMscPfLXVKgCLQ==",
          "dev": true
        },
        "semver": {
          "version": "7.3.4",
          "resolved": "https://registry.npmjs.org/semver/-/semver-7.3.4.tgz",
          "integrity": "sha512-tCfb2WLjqFAtXn4KEdxIhalnRtoKFN7nAwj0B3ZXCbQloV2tq5eDbcTmT68JJD3nRJq24/XgxtQKFIpQdtvmVw==",
          "dev": true,
          "requires": {
            "lru-cache": "^6.0.0"
          }
        },
        "universalify": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/universalify/-/universalify-2.0.0.tgz",
          "integrity": "sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW5nq5scPqq0ZDP9Zyl04oQ==",
          "dev": true
        },
        "yallist": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
          "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==",
          "dev": true
        },
        "yargs-parser": {
          "version": "20.2.5",
          "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-20.2.5.tgz",
          "integrity": "sha512-jYRGS3zWy20NtDtK2kBgo/TlAoy5YUuhD9/LZ7z7W4j1Fdw2cqD0xEEclf8fxc8xjD6X5Qr+qQQwCEsP8iRiYg==",
          "dev": true
        }
      }
    },
    "electron-publish": {
      "version": "22.9.1",
      "resolved": "https://registry.npmjs.org/electron-publish/-/electron-publish-22.9.1.tgz",
      "integrity": "sha512-ducLjRJLEeU87FaTCWaUyDjCoLXHkawkltP2zqS/n2PyGke54ZIql0tBuUheht4EpR8AhFbVJ11spSn1gy8r6w==",
      "dev": true,
      "requires": {
        "@types/fs-extra": "^9.0.1",
        "bluebird-lst": "^1.0.9",
        "builder-util": "22.9.1",
        "builder-util-runtime": "8.7.2",
        "chalk": "^4.1.0",
        "fs-extra": "^9.0.1",
        "lazy-val": "^1.0.4",
        "mime": "^2.4.6"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "4.3.0",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
          "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
          "dev": true,
          "requires": {
            "color-convert": "^2.0.1"
          }
        },
        "chalk": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.0.tgz",
          "integrity": "sha512-qwx12AxXe2Q5xQ43Ac//I6v5aXTipYrSESdOgzrN+9XjgEpyjpKuvSGaN4qE93f7TQTlerQQ8S+EQ0EyDoVL1A==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "dev": true,
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "fs-extra": {
          "version": "9.0.1",
          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-9.0.1.tgz",
          "integrity": "sha512-h2iAoN838FqAFJY2/qVpzFXy+EBxfVE220PalAqQLDVsFOHLJrZvut5puAbCdNv6WJk+B8ihI+k0c7JK5erwqQ==",
          "dev": true,
          "requires": {
            "at-least-node": "^1.0.0",
            "graceful-fs": "^4.2.0",
            "jsonfile": "^6.0.1",
            "universalify": "^1.0.0"
          }
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "jsonfile": {
          "version": "6.1.0",
          "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz",
          "integrity": "sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.1.6",
            "universalify": "^2.0.0"
          },
          "dependencies": {
            "universalify": {
              "version": "2.0.0",
              "resolved": "https://registry.npmjs.org/universalify/-/universalify-2.0.0.tgz",
              "integrity": "sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW5nq5scPqq0ZDP9Zyl04oQ==",
              "dev": true
            }
          }
        },
        "mime": {
          "version": "2.4.7",
          "resolved": "https://registry.npmjs.org/mime/-/mime-2.4.7.tgz",
          "integrity": "sha512-dhNd1uA2u397uQk3Nv5LM4lm93WYDUXFn3Fu291FJerns4jyTudqhIWe4W04YLy7Uk1tm1Ore04NpjRvQp/NPA==",
          "dev": true
        },
        "supports-color": {
          "version": "7.2.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
          "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        },
        "universalify": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/universalify/-/universalify-1.0.0.tgz",
          "integrity": "sha512-rb6X1W158d7pRQBg5gkR8uPaSfiids68LTJQYOtEUhoJUWBdaQHsuT/EUduxXYxcrt4r5PJ4fuHW1MHT6p0qug==",
          "dev": true
        }
      }
    },
    "electron-rebuild": {
      "version": "2.3.4",
      "resolved": "https://registry.npmjs.org/electron-rebuild/-/electron-rebuild-2.3.4.tgz",
      "integrity": "sha512-EHr1bkqXTN/jQJuh2/IunF9QGa9yOgpE9KdQ9A7VHshd7ycWvoXjWzaXaimfa1nu1l7vKqLLu7N2COe3Jn9NuA==",
      "dev": true,
      "requires": {
        "@malept/cross-spawn-promise": "^1.1.0",
        "colors": "^1.3.3",
        "debug": "^4.1.1",
        "detect-libc": "^1.0.3",
        "fs-extra": "^9.0.1",
        "got": "^11.7.0",
        "lzma-native": "^6.0.1",
        "node-abi": "^2.19.2",
        "node-gyp": "^7.1.0",
        "ora": "^5.1.0",
        "tar": "^6.0.5",
        "yargs": "^16.0.0"
      },
      "dependencies": {
        "@sindresorhus/is": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/@sindresorhus/is/-/is-4.0.0.tgz",
          "integrity": "sha512-FyD2meJpDPjyNQejSjvnhpgI/azsQkA4lGbuu5BQZfjvJ9cbRZXzeWL2HceCekW4lixO9JPesIIQkSoLjeJHNQ==",
          "dev": true
        },
        "@szmarczak/http-timer": {
          "version": "4.0.5",
          "resolved": "https://registry.npmjs.org/@szmarczak/http-timer/-/http-timer-4.0.5.tgz",
          "integrity": "sha512-PyRA9sm1Yayuj5OIoJ1hGt2YISX45w9WcFbh6ddT0Z/0yaFxOtGLInr4jUfU1EAFVs0Yfyfev4RNwBlUaHdlDQ==",
          "dev": true,
          "requires": {
            "defer-to-connect": "^2.0.0"
          }
        },
        "ajv": {
          "version": "6.12.6",
          "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
          "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
          "dev": true,
          "requires": {
            "fast-deep-equal": "^3.1.1",
            "fast-json-stable-stringify": "^2.0.0",
            "json-schema-traverse": "^0.4.1",
            "uri-js": "^4.2.2"
          }
        },
        "ansi-regex": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz",
          "integrity": "sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==",
          "dev": true
        },
        "ansi-styles": {
          "version": "4.3.0",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
          "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
          "dev": true,
          "requires": {
            "color-convert": "^2.0.1"
          }
        },
        "assert-plus": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
          "integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU=",
          "dev": true
        },
        "aws-sign2": {
          "version": "0.7.0",
          "resolved": "https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz",
          "integrity": "sha1-tG6JCTSpWR8tL2+G1+ap8bP+dqg=",
          "dev": true
        },
        "cacheable-request": {
          "version": "7.0.1",
          "resolved": "https://registry.npmjs.org/cacheable-request/-/cacheable-request-7.0.1.tgz",
          "integrity": "sha512-lt0mJ6YAnsrBErpTMWeu5kl/tg9xMAWjavYTN6VQXM1A/teBITuNcccXsCxF0tDQQJf9DfAaX5O4e0zp0KlfZw==",
          "dev": true,
          "requires": {
            "clone-response": "^1.0.2",
            "get-stream": "^5.1.0",
            "http-cache-semantics": "^4.0.0",
            "keyv": "^4.0.0",
            "lowercase-keys": "^2.0.0",
            "normalize-url": "^4.1.0",
            "responselike": "^2.0.0"
          }
        },
        "chownr": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/chownr/-/chownr-2.0.0.tgz",
          "integrity": "sha512-bIomtDF5KGpdogkLd9VspvFzk9KfpyyGlS8YFVZl7TGPBHL5snIOnxeshwVgPteQ9b4Eydl+pVbIyE1DcvCWgQ==",
          "dev": true
        },
        "cliui": {
          "version": "7.0.4",
          "resolved": "https://registry.npmjs.org/cliui/-/cliui-7.0.4.tgz",
          "integrity": "sha512-OcRE68cOsVMXp1Yvonl/fzkQOyjLSu/8bhPDfQt0e0/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==",
          "dev": true,
          "requires": {
            "string-width": "^4.2.0",
            "strip-ansi": "^6.0.0",
            "wrap-ansi": "^7.0.0"
          }
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "dev": true,
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "debug": {
          "version": "4.3.1",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.1.tgz",
          "integrity": "sha512-doEwdvm4PCeK4K3RQN2ZC2BYUBaxwLARCqZmMjtF8a51J2Rb0xpVloFRnCODwqjpwnAoao4pelN8l3RJdv3gRQ==",
          "dev": true,
          "requires": {
            "ms": "2.1.2"
          }
        },
        "decompress-response": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/decompress-response/-/decompress-response-6.0.0.tgz",
          "integrity": "sha512-aW35yZM6Bb/4oJlZncMH2LCoZtJXTRxES17vE3hoRiowU2kWHaJKFkSBDnDR+cm9J+9QhXmREyIfv0pji9ejCQ==",
          "dev": true,
          "requires": {
            "mimic-response": "^3.1.0"
          }
        },
        "defer-to-connect": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/defer-to-connect/-/defer-to-connect-2.0.0.tgz",
          "integrity": "sha512-bYL2d05vOSf1JEZNx5vSAtPuBMkX8K9EUutg7zlKvTqKXHt7RhWJFbmd7qakVuf13i+IkGmp6FwSsONOf6VYIg==",
          "dev": true
        },
        "emoji-regex": {
          "version": "8.0.0",
          "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
          "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
          "dev": true
        },
        "end-of-stream": {
          "version": "1.4.4",
          "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz",
          "integrity": "sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==",
          "dev": true,
          "requires": {
            "once": "^1.4.0"
          }
        },
        "form-data": {
          "version": "2.3.3",
          "resolved": "https://registry.npmjs.org/form-data/-/form-data-2.3.3.tgz",
          "integrity": "sha512-1lLKB2Mu3aGP1Q/2eCOx0fNbRMe7XdwktwOruhfqqd0rIJWwN4Dh+E3hrPSlDCXnSR7UtZ1N38rVXm+6+MEhJQ==",
          "dev": true,
          "requires": {
            "asynckit": "^0.4.0",
            "combined-stream": "^1.0.6",
            "mime-types": "^2.1.12"
          }
        },
        "fs-extra": {
          "version": "9.0.1",
          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-9.0.1.tgz",
          "integrity": "sha512-h2iAoN838FqAFJY2/qVpzFXy+EBxfVE220PalAqQLDVsFOHLJrZvut5puAbCdNv6WJk+B8ihI+k0c7JK5erwqQ==",
          "dev": true,
          "requires": {
            "at-least-node": "^1.0.0",
            "graceful-fs": "^4.2.0",
            "jsonfile": "^6.0.1",
            "universalify": "^1.0.0"
          }
        },
        "fs-minipass": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/fs-minipass/-/fs-minipass-2.1.0.tgz",
          "integrity": "sha512-V/JgOLFCS+R6Vcq0slCuaeWEdNC3ouDlJMNIsacH2VtALiu9mV4LPrHc5cDl8k5aw6J8jwgWWpiTo5RYhmIzvg==",
          "dev": true,
          "requires": {
            "minipass": "^3.0.0"
          }
        },
        "get-stream": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-5.2.0.tgz",
          "integrity": "sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==",
          "dev": true,
          "requires": {
            "pump": "^3.0.0"
          }
        },
        "glob": {
          "version": "7.1.6",
          "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.6.tgz",
          "integrity": "sha512-LwaxwyZ72Lk7vZINtNNrywX0ZuLyStrdDtabefZKAY5ZGJhVtgdznluResxNmPitE0SAO+O26sWTHeKSI2wMBA==",
          "dev": true,
          "requires": {
            "fs.realpath": "^1.0.0",
            "inflight": "^1.0.4",
            "inherits": "2",
            "minimatch": "^3.0.4",
            "once": "^1.3.0",
            "path-is-absolute": "^1.0.0"
          }
        },
        "got": {
          "version": "11.8.1",
          "resolved": "https://registry.npmjs.org/got/-/got-11.8.1.tgz",
          "integrity": "sha512-9aYdZL+6nHmvJwHALLwKSUZ0hMwGaJGYv3hoPLPgnT8BoBXm1SjnZeky+91tfwJaDzun2s4RsBRy48IEYv2q2Q==",
          "dev": true,
          "requires": {
            "@sindresorhus/is": "^4.0.0",
            "@szmarczak/http-timer": "^4.0.5",
            "@types/cacheable-request": "^6.0.1",
            "@types/responselike": "^1.0.0",
            "cacheable-lookup": "^5.0.3",
            "cacheable-request": "^7.0.1",
            "decompress-response": "^6.0.0",
            "http2-wrapper": "^1.0.0-beta.5.2",
            "lowercase-keys": "^2.0.0",
            "p-cancelable": "^2.0.0",
            "responselike": "^2.0.0"
          }
        },
        "har-schema": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/har-schema/-/har-schema-2.0.0.tgz",
          "integrity": "sha1-qUwiJOvKwEeCoNkDVSHyRzW37JI=",
          "dev": true
        },
        "har-validator": {
          "version": "5.1.5",
          "resolved": "https://registry.npmjs.org/har-validator/-/har-validator-5.1.5.tgz",
          "integrity": "sha512-nmT2T0lljbxdQZfspsno9hgrG3Uir6Ks5afism62poxqBM6sDnMEuPmzTq8XN0OEwqKLLdh1jQI3qyE66Nzb3w==",
          "dev": true,
          "requires": {
            "ajv": "^6.12.3",
            "har-schema": "^2.0.0"
          }
        },
        "http-signature": {
          "version": "1.2.0",
          "resolved": "https://registry.npmjs.org/http-signature/-/http-signature-1.2.0.tgz",
          "integrity": "sha1-muzZJRFHcvPZW2WmCruPfBj7rOE=",
          "dev": true,
          "requires": {
            "assert-plus": "^1.0.0",
            "jsprim": "^1.2.2",
            "sshpk": "^1.7.0"
          }
        },
        "is-fullwidth-code-point": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
          "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
          "dev": true
        },
        "json-buffer": {
          "version": "3.0.1",
          "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz",
          "integrity": "sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==",
          "dev": true
        },
        "jsonfile": {
          "version": "6.1.0",
          "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz",
          "integrity": "sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.1.6",
            "universalify": "^2.0.0"
          },
          "dependencies": {
            "universalify": {
              "version": "2.0.0",
              "resolved": "https://registry.npmjs.org/universalify/-/universalify-2.0.0.tgz",
              "integrity": "sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW5nq5scPqq0ZDP9Zyl04oQ==",
              "dev": true
            }
          }
        },
        "keyv": {
          "version": "4.0.3",
          "resolved": "https://registry.npmjs.org/keyv/-/keyv-4.0.3.tgz",
          "integrity": "sha512-zdGa2TOpSZPq5mU6iowDARnMBZgtCqJ11dJROFi6tg6kTn4nuUdU09lFyLFSaHrWqpIJ+EBq4E8/Dc0Vx5vLdA==",
          "dev": true,
          "requires": {
            "json-buffer": "3.0.1"
          }
        },
        "lowercase-keys": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-2.0.0.tgz",
          "integrity": "sha512-tqNXrS78oMOE73NMxK4EMLQsQowWf8jKooH9g7xPavRT706R6bkQJ6DY2Te7QukaZsulxa30wQ7bk0pm4XiHmA==",
          "dev": true
        },
        "lru-cache": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz",
          "integrity": "sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==",
          "dev": true,
          "requires": {
            "yallist": "^4.0.0"
          }
        },
        "mimic-response": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-3.1.0.tgz",
          "integrity": "sha512-z0yWI+4FDrrweS8Zmt4Ej5HdJmky15+L2e6Wgn3+iK5fWzb6T3fhNFq2+MeTRb064c6Wr4N/wv0DzQTjNzHNGQ==",
          "dev": true
        },
        "minipass": {
          "version": "3.1.3",
          "resolved": "https://registry.npmjs.org/minipass/-/minipass-3.1.3.tgz",
          "integrity": "sha512-Mgd2GdMVzY+x3IJ+oHnVM+KG3lA5c8tnabyJKmHSaG2kAGpudxuOf8ToDkhumF7UzME7DecbQE9uOZhNm7PuJg==",
          "dev": true,
          "requires": {
            "yallist": "^4.0.0"
          }
        },
        "minizlib": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/minizlib/-/minizlib-2.1.2.tgz",
          "integrity": "sha512-bAxsR8BVfj60DWXHE3u30oHzfl4G7khkSuPW+qvpd7jFRHm7dLxOjUk1EHACJ/hxLY8phGJ0YhYHZo7jil7Qdg==",
          "dev": true,
          "requires": {
            "minipass": "^3.0.0",
            "yallist": "^4.0.0"
          }
        },
        "mkdirp": {
          "version": "1.0.4",
          "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-1.0.4.tgz",
          "integrity": "sha512-vVqVZQyf3WLx2Shd0qJ9xuvqgAyKPLAiqITEtqW0oIUjzo3PePDd6fW9iFz30ef7Ysp/oiWqbhszeGWW2T6Gzw==",
          "dev": true
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
          "dev": true
        },
        "node-gyp": {
          "version": "7.1.2",
          "resolved": "https://registry.npmjs.org/node-gyp/-/node-gyp-7.1.2.tgz",
          "integrity": "sha512-CbpcIo7C3eMu3dL1c3d0xw449fHIGALIJsRP4DDPHpyiW8vcriNY7ubh9TE4zEKfSxscY7PjeFnshE7h75ynjQ==",
          "dev": true,
          "requires": {
            "env-paths": "^2.2.0",
            "glob": "^7.1.4",
            "graceful-fs": "^4.2.3",
            "nopt": "^5.0.0",
            "npmlog": "^4.1.2",
            "request": "^2.88.2",
            "rimraf": "^3.0.2",
            "semver": "^7.3.2",
            "tar": "^6.0.2",
            "which": "^2.0.2"
          }
        },
        "nopt": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/nopt/-/nopt-5.0.0.tgz",
          "integrity": "sha512-Tbj67rffqceeLpcRXrT7vKAN8CwfPeIBgM7E6iBkmKLV7bEMwpGgYLGv0jACUsECaa/vuxP0IjEont6umdMgtQ==",
          "dev": true,
          "requires": {
            "abbrev": "1"
          }
        },
        "oauth-sign": {
          "version": "0.9.0",
          "resolved": "https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.9.0.tgz",
          "integrity": "sha512-fexhUFFPTGV8ybAtSIGbV6gOkSv8UtRbDBnAyLQw4QPKkgNlsH2ByPGtMUqdWkos6YCRmAqViwgZrJc/mRDzZQ==",
          "dev": true
        },
        "p-cancelable": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/p-cancelable/-/p-cancelable-2.0.0.tgz",
          "integrity": "sha512-wvPXDmbMmu2ksjkB4Z3nZWTSkJEb9lqVdMaCKpZUGJG9TMiNp9XcbG3fn9fPKjem04fJMJnXoyFPk2FmgiaiNg==",
          "dev": true
        },
        "performance-now": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz",
          "integrity": "sha1-Ywn04OX6kT7BxpMHrjZLSzd8nns=",
          "dev": true
        },
        "pump": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/pump/-/pump-3.0.0.tgz",
          "integrity": "sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==",
          "dev": true,
          "requires": {
            "end-of-stream": "^1.1.0",
            "once": "^1.3.1"
          }
        },
        "punycode": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz",
          "integrity": "sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A==",
          "dev": true
        },
        "qs": {
          "version": "6.5.2",
          "resolved": "https://registry.npmjs.org/qs/-/qs-6.5.2.tgz",
          "integrity": "sha512-N5ZAX4/LxJmF+7wN74pUD6qAh9/wnvdQcjq9TZjevvXzSUo7bfmw91saqMjzGS2xq91/odN2dW/WOl7qQHNDGA==",
          "dev": true
        },
        "request": {
          "version": "2.88.2",
          "resolved": "https://registry.npmjs.org/request/-/request-2.88.2.tgz",
          "integrity": "sha512-MsvtOrfG9ZcrOwAW+Qi+F6HbD0CWXEh9ou77uOb7FM2WPhwT7smM833PzanhJLsgXjN89Ir6V2PczXNnMpwKhw==",
          "dev": true,
          "requires": {
            "aws-sign2": "~0.7.0",
            "aws4": "^1.8.0",
            "caseless": "~0.12.0",
            "combined-stream": "~1.0.6",
            "extend": "~3.0.2",
            "forever-agent": "~0.6.1",
            "form-data": "~2.3.2",
            "har-validator": "~5.1.3",
            "http-signature": "~1.2.0",
            "is-typedarray": "~1.0.0",
            "isstream": "~0.1.2",
            "json-stringify-safe": "~5.0.1",
            "mime-types": "~2.1.19",
            "oauth-sign": "~0.9.0",
            "performance-now": "^2.1.0",
            "qs": "~6.5.2",
            "safe-buffer": "^5.1.2",
            "tough-cookie": "~2.5.0",
            "tunnel-agent": "^0.6.0",
            "uuid": "^3.3.2"
          }
        },
        "responselike": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/responselike/-/responselike-2.0.0.tgz",
          "integrity": "sha512-xH48u3FTB9VsZw7R+vvgaKeLKzT6jOogbQhEe/jewwnZgzPcnyWui2Av6JpoYZF/91uueC+lqhWqeURw5/qhCw==",
          "dev": true,
          "requires": {
            "lowercase-keys": "^2.0.0"
          }
        },
        "rimraf": {
          "version": "3.0.2",
          "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz",
          "integrity": "sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==",
          "dev": true,
          "requires": {
            "glob": "^7.1.3"
          }
        },
        "semver": {
          "version": "7.3.4",
          "resolved": "https://registry.npmjs.org/semver/-/semver-7.3.4.tgz",
          "integrity": "sha512-tCfb2WLjqFAtXn4KEdxIhalnRtoKFN7nAwj0B3ZXCbQloV2tq5eDbcTmT68JJD3nRJq24/XgxtQKFIpQdtvmVw==",
          "dev": true,
          "requires": {
            "lru-cache": "^6.0.0"
          }
        },
        "string-width": {
          "version": "4.2.0",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.0.tgz",
          "integrity": "sha512-zUz5JD+tgqtuDjMhwIg5uFVV3dtqZ9yQJlZVfq4I01/K5Paj5UHj7VyrQOJvzawSVlKpObApbfD0Ed6yJc+1eg==",
          "dev": true,
          "requires": {
            "emoji-regex": "^8.0.0",
            "is-fullwidth-code-point": "^3.0.0",
            "strip-ansi": "^6.0.0"
          }
        },
        "strip-ansi": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.0.tgz",
          "integrity": "sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==",
          "dev": true,
          "requires": {
            "ansi-regex": "^5.0.0"
          }
        },
        "tar": {
          "version": "6.0.5",
          "resolved": "https://registry.npmjs.org/tar/-/tar-6.0.5.tgz",
          "integrity": "sha512-0b4HOimQHj9nXNEAA7zWwMM91Zhhba3pspja6sQbgTpynOJf+bkjBnfybNYzbpLbnwXnbyB4LOREvlyXLkCHSg==",
          "dev": true,
          "requires": {
            "chownr": "^2.0.0",
            "fs-minipass": "^2.0.0",
            "minipass": "^3.0.0",
            "minizlib": "^2.1.1",
            "mkdirp": "^1.0.3",
            "yallist": "^4.0.0"
          }
        },
        "tough-cookie": {
          "version": "2.5.0",
          "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.5.0.tgz",
          "integrity": "sha512-nlLsUzgm1kfLXSXfRZMc1KLAugd4hqJHDTvc2hDIwS3mZAfMEuMbc03SujMF+GEcpaX/qboeycw6iO8JwVv2+g==",
          "dev": true,
          "requires": {
            "psl": "^1.1.28",
            "punycode": "^2.1.1"
          }
        },
        "universalify": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/universalify/-/universalify-1.0.0.tgz",
          "integrity": "sha512-rb6X1W158d7pRQBg5gkR8uPaSfiids68LTJQYOtEUhoJUWBdaQHsuT/EUduxXYxcrt4r5PJ4fuHW1MHT6p0qug==",
          "dev": true
        },
        "which": {
          "version": "2.0.2",
          "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
          "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
          "dev": true,
          "requires": {
            "isexe": "^2.0.0"
          }
        },
        "wrap-ansi": {
          "version": "7.0.0",
          "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
          "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.0.0",
            "string-width": "^4.1.0",
            "strip-ansi": "^6.0.0"
          }
        },
        "y18n": {
          "version": "5.0.5",
          "resolved": "https://registry.npmjs.org/y18n/-/y18n-5.0.5.tgz",
          "integrity": "sha512-hsRUr4FFrvhhRH12wOdfs38Gy7k2FFzB9qgN9v3aLykRq0dRcdcpz5C9FxdS2NuhOrI/628b/KSTJ3rwHysYSg==",
          "dev": true
        },
        "yallist": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
          "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==",
          "dev": true
        },
        "yargs": {
          "version": "16.2.0",
          "resolved": "https://registry.npmjs.org/yargs/-/yargs-16.2.0.tgz",
          "integrity": "sha512-D1mvvtDG0L5ft/jGWkLpG1+m0eQxOfaBvTNELraWj22wSVUMWxZUvYgJYcKh6jGGIkJFhH4IZPQhR4TKpc8mBw==",
          "dev": true,
          "requires": {
            "cliui": "^7.0.2",
            "escalade": "^3.1.1",
            "get-caller-file": "^2.0.5",
            "require-directory": "^2.1.1",
            "string-width": "^4.2.0",
            "y18n": "^5.0.5",
            "yargs-parser": "^20.2.2"
          }
        },
        "yargs-parser": {
          "version": "20.2.4",
          "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-20.2.4.tgz",
          "integrity": "sha512-WOkpgNhPTlE73h4VFAFsOnomJVaovO8VqLDzy5saChRBFQFBoMYirowyW+Q9HB4HFF4Z7VZTiG3iSzJJA29yRA==",
          "dev": true
        }
      }
    },
    "electron-to-chromium": {
      "version": "1.3.629",
      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.3.629.tgz",
      "integrity": "sha512-iSPPJtPvHrMAvYOt+9cdbDmTasPqwnwz4lkP8Dn200gDNUBQOLQ96xUsWXBwXslAo5XxdoXAoQQ3RAy4uao9IQ==",
      "dev": true
    },
    "electron-updater": {
      "version": "4.3.5",
      "resolved": "https://registry.npmjs.org/electron-updater/-/electron-updater-4.3.5.tgz",
      "integrity": "sha512-5jjN7ebvfj1cLI0VZMdCnJk6aC4bP+dy7ryBf21vArR0JzpRVk0OZHA2QBD+H5rm6ZSeDYHOY6+8PrMEqJ4wlQ==",
      "dev": true,
      "requires": {
        "@types/semver": "^7.3.1",
        "builder-util-runtime": "8.7.2",
        "fs-extra": "^9.0.1",
        "js-yaml": "^3.14.0",
        "lazy-val": "^1.0.4",
        "lodash.isequal": "^4.5.0",
        "semver": "^7.3.2"
      },
      "dependencies": {
        "fs-extra": {
          "version": "9.0.1",
          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-9.0.1.tgz",
          "integrity": "sha512-h2iAoN838FqAFJY2/qVpzFXy+EBxfVE220PalAqQLDVsFOHLJrZvut5puAbCdNv6WJk+B8ihI+k0c7JK5erwqQ==",
          "dev": true,
          "requires": {
            "at-least-node": "^1.0.0",
            "graceful-fs": "^4.2.0",
            "jsonfile": "^6.0.1",
            "universalify": "^1.0.0"
          }
        },
        "jsonfile": {
          "version": "6.1.0",
          "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz",
          "integrity": "sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.1.6",
            "universalify": "^2.0.0"
          },
          "dependencies": {
            "universalify": {
              "version": "2.0.0",
              "resolved": "https://registry.npmjs.org/universalify/-/universalify-2.0.0.tgz",
              "integrity": "sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW5nq5scPqq0ZDP9Zyl04oQ==",
              "dev": true
            }
          }
        },
        "lru-cache": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz",
          "integrity": "sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==",
          "dev": true,
          "requires": {
            "yallist": "^4.0.0"
          }
        },
        "semver": {
          "version": "7.3.4",
          "resolved": "https://registry.npmjs.org/semver/-/semver-7.3.4.tgz",
          "integrity": "sha512-tCfb2WLjqFAtXn4KEdxIhalnRtoKFN7nAwj0B3ZXCbQloV2tq5eDbcTmT68JJD3nRJq24/XgxtQKFIpQdtvmVw==",
          "dev": true,
          "requires": {
            "lru-cache": "^6.0.0"
          }
        },
        "universalify": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/universalify/-/universalify-1.0.0.tgz",
          "integrity": "sha512-rb6X1W158d7pRQBg5gkR8uPaSfiids68LTJQYOtEUhoJUWBdaQHsuT/EUduxXYxcrt4r5PJ4fuHW1MHT6p0qug==",
          "dev": true
        },
        "yallist": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
          "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==",
          "dev": true
        }
      }
    },
    "elliptic": {
      "version": "6.5.3",
      "resolved": "https://registry.npmjs.org/elliptic/-/elliptic-6.5.3.tgz",
      "integrity": "sha512-IMqzv5wNQf+E6aHeIqATs0tOLeOTwj1QKbRcS3jBbYkl5oLAserA8yJTT7/VyHUYG91PRmPyeQDObKLPpeS4dw==",
      "dev": true,
      "requires": {
        "bn.js": "^4.4.0",
        "brorand": "^1.0.1",
        "hash.js": "^1.0.0",
        "hmac-drbg": "^1.0.0",
        "inherits": "^2.0.1",
        "minimalistic-assert": "^1.0.0",
        "minimalistic-crypto-utils": "^1.0.0"
      },
      "dependencies": {
        "bn.js": {
          "version": "4.11.9",
          "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.11.9.tgz",
          "integrity": "sha512-E6QoYqCKZfgatHTdHzs1RRKP7ip4vvm+EyRUeE2RF0NblwVvb0p6jSVeNTOFxPn26QXN2o6SMfNxKp6kU8zQaw==",
          "dev": true
        }
      }
    },
    "emoji-regex": {
      "version": "7.0.3",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-7.0.3.tgz",
      "integrity": "sha512-CwBLREIQ7LvYFB0WyRvwhq5N5qPhc6PMjD6bYggFlI5YyDgl+0vxq5VHbMOFqLg7hfWzmu8T5Z1QofhmTIhItA==",
      "dev": true
    },
    "encodeurl": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz",
      "integrity": "sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k=",
      "dev": true
    },
    "end-of-stream": {
      "version": "0.1.5",
      "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-0.1.5.tgz",
      "integrity": "sha1-jhdyBsPICDfYVjLouTWd/osvbq8=",
      "dev": true,
      "requires": {
        "once": "~1.3.0"
      },
      "dependencies": {
        "once": {
          "version": "1.3.3",
          "resolved": "https://registry.npmjs.org/once/-/once-1.3.3.tgz",
          "integrity": "sha1-suJhVXzkwxTsgwTz+oJmPkKXyiA=",
          "dev": true,
          "requires": {
            "wrappy": "1"
          }
        }
      }
    },
    "engine.io": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/engine.io/-/engine.io-3.2.1.tgz",
      "integrity": "sha512-+VlKzHzMhaU+GsCIg4AoXF1UdDFjHHwMmMKqMJNDNLlUlejz58FCy4LBqB2YVJskHGYl06BatYWKP2TVdVXE5w==",
      "dev": true,
      "requires": {
        "accepts": "~1.3.4",
        "base64id": "1.0.0",
        "cookie": "0.3.1",
        "debug": "~3.1.0",
        "engine.io-parser": "~2.1.0",
        "ws": "~3.3.1"
      },
      "dependencies": {
        "base64-arraybuffer": {
          "version": "0.1.5",
          "resolved": "https://registry.npmjs.org/base64-arraybuffer/-/base64-arraybuffer-0.1.5.tgz",
          "integrity": "sha1-c5JncZI7Whl0etZmqlzUv5xunOg=",
          "dev": true
        },
        "debug": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/debug/-/debug-3.1.0.tgz",
          "integrity": "sha512-OX8XqP7/1a9cqkxYw2yXss15f26NKWBpDXQd0/uK/KPqdQhxbPa994hnzjcE2VqQpDslf55723cKPUOGSmMY3g==",
          "dev": true,
          "requires": {
            "ms": "2.0.0"
          }
        },
        "engine.io-parser": {
          "version": "2.1.3",
          "resolved": "https://registry.npmjs.org/engine.io-parser/-/engine.io-parser-2.1.3.tgz",
          "integrity": "sha512-6HXPre2O4Houl7c4g7Ic/XzPnHBvaEmN90vtRO9uLmwtRqQmTOw0QMevL1TOfL2Cpu1VzsaTmMotQgMdkzGkVA==",
          "dev": true,
          "requires": {
            "after": "0.8.2",
            "arraybuffer.slice": "~0.0.7",
            "base64-arraybuffer": "0.1.5",
            "blob": "0.0.5",
            "has-binary2": "~1.0.2"
          }
        },
        "ws": {
          "version": "3.3.3",
          "resolved": "https://registry.npmjs.org/ws/-/ws-3.3.3.tgz",
          "integrity": "sha512-nnWLa/NwZSt4KQJu51MYlCcSQ5g7INpOrOMt4XV8j4dqTXdmlUmSHQ8/oLC069ckre0fRsgfvsKwbTdtKLCDkA==",
          "dev": true,
          "requires": {
            "async-limiter": "~1.0.0",
            "safe-buffer": "~5.1.0",
            "ultron": "~1.1.0"
          }
        }
      }
    },
    "engine.io-client": {
      "version": "3.4.4",
      "resolved": "https://registry.npmjs.org/engine.io-client/-/engine.io-client-3.4.4.tgz",
      "integrity": "sha512-iU4CRr38Fecj8HoZEnFtm2EiKGbYZcPn3cHxqNGl/tmdWRf60KhK+9vE0JeSjgnlS/0oynEfLgKbT9ALpim0sQ==",
      "dev": true,
      "requires": {
        "component-emitter": "~1.3.0",
        "component-inherit": "0.0.3",
        "debug": "~3.1.0",
        "engine.io-parser": "~2.2.0",
        "has-cors": "1.1.0",
        "indexof": "0.0.1",
        "parseqs": "0.0.6",
        "parseuri": "0.0.6",
        "ws": "~6.1.0",
        "xmlhttprequest-ssl": "~1.5.4",
        "yeast": "0.1.2"
      },
      "dependencies": {
        "debug": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/debug/-/debug-3.1.0.tgz",
          "integrity": "sha512-OX8XqP7/1a9cqkxYw2yXss15f26NKWBpDXQd0/uK/KPqdQhxbPa994hnzjcE2VqQpDslf55723cKPUOGSmMY3g==",
          "dev": true,
          "requires": {
            "ms": "2.0.0"
          }
        }
      }
    },
    "engine.io-parser": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/engine.io-parser/-/engine.io-parser-2.2.1.tgz",
      "integrity": "sha512-x+dN/fBH8Ro8TFwJ+rkB2AmuVw9Yu2mockR/p3W8f8YtExwFgDvBDi0GWyb4ZLkpahtDGZgtr3zLovanJghPqg==",
      "dev": true,
      "requires": {
        "after": "0.8.2",
        "arraybuffer.slice": "~0.0.7",
        "base64-arraybuffer": "0.1.4",
        "blob": "0.0.5",
        "has-binary2": "~1.0.2"
      }
    },
    "env-paths": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/env-paths/-/env-paths-2.2.0.tgz",
      "integrity": "sha512-6u0VYSCo/OW6IoD5WCLLy9JUGARbamfSavcNXry/eu8aHVFei6CD3Sw+VGX5alea1i9pgPHW0mbu6Xj0uBh7gA==",
      "dev": true
    },
    "error-ex": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz",
      "integrity": "sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==",
      "dev": true,
      "requires": {
        "is-arrayish": "^0.2.1"
      }
    },
    "es5-ext": {
      "version": "0.10.53",
      "resolved": "https://registry.npmjs.org/es5-ext/-/es5-ext-0.10.53.tgz",
      "integrity": "sha512-Xs2Stw6NiNHWypzRTY1MtaG/uJlwCk8kH81920ma8mvN8Xq1gsfhZvpkImLQArw8AHnv8MT2I45J3c0R8slE+Q==",
      "dev": true,
      "requires": {
        "es6-iterator": "~2.0.3",
        "es6-symbol": "~3.1.3",
        "next-tick": "~1.0.0"
      }
    },
    "es6-error": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/es6-error/-/es6-error-4.1.1.tgz",
      "integrity": "sha512-Um/+FxMr9CISWh0bi5Zv0iOD+4cFh5qLeks1qhAopKVAJw3drgKbKySikp7wGhDL0HPeaja0P5ULZrxLkniUVg==",
      "dev": true,
      "optional": true
    },
    "es6-iterator": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/es6-iterator/-/es6-iterator-2.0.3.tgz",
      "integrity": "sha1-p96IkUGgWpSwhUQDstCg+/qY87c=",
      "dev": true,
      "requires": {
        "d": "1",
        "es5-ext": "^0.10.35",
        "es6-symbol": "^3.1.1"
      }
    },
    "es6-symbol": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/es6-symbol/-/es6-symbol-3.1.3.tgz",
      "integrity": "sha512-NJ6Yn3FuDinBaBRWl/q5X/s4koRHBrgKAu+yGI6JCBeiu3qrcbJhwT2GeR/EXVfylRk8dpQVJoLEFhK+Mu31NA==",
      "dev": true,
      "requires": {
        "d": "^1.0.1",
        "ext": "^1.1.2"
      }
    },
    "escalade": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.1.1.tgz",
      "integrity": "sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw==",
      "dev": true
    },
    "escape-goat": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/escape-goat/-/escape-goat-2.1.1.tgz",
      "integrity": "sha512-8/uIhbG12Csjy2JEW7D9pHbreaVaS/OpN3ycnyvElTdwM5n6GY6W6e2IPemfvGZeUMqZ9A/3GqIZMgKnBhAw/Q==",
      "dev": true
    },
    "escape-html": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz",
      "integrity": "sha1-Aljq5NPQwJdN4cFpGI7wBR0dGYg=",
      "dev": true
    },
    "escape-string-regexp": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
      "integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=",
      "dev": true
    },
    "esprima": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz",
      "integrity": "sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==",
      "dev": true
    },
    "esutils": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
      "dev": true
    },
    "etag": {
      "version": "1.8.1",
      "resolved": "https://registry.npmjs.org/etag/-/etag-1.8.1.tgz",
      "integrity": "sha1-Qa4u62XvpiJorr/qg6x9eSmbCIc=",
      "dev": true
    },
    "eth-lib": {
      "version": "0.2.8",
      "resolved": "https://registry.npmjs.org/eth-lib/-/eth-lib-0.2.8.tgz",
      "integrity": "sha512-ArJ7x1WcWOlSpzdoTBX8vkwlkSQ85CjjifSZtV4co64vWxSV8geWfPI9x4SVYu3DSxnX4yWFVTtGL+j9DUFLNw==",
      "dev": true,
      "requires": {
        "bn.js": "^4.11.6",
        "elliptic": "^6.4.0",
        "xhr-request-promise": "^0.1.2"
      },
      "dependencies": {
        "bn.js": {
          "version": "4.12.0",
          "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz",
          "integrity": "sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA==",
          "dev": true
        }
      }
    },
    "ethereum-bloom-filters": {
      "version": "1.0.9",
      "resolved": "https://registry.npmjs.org/ethereum-bloom-filters/-/ethereum-bloom-filters-1.0.9.tgz",
      "integrity": "sha512-GiK/RQkAkcVaEdxKVkPcG07PQ5vD7v2MFSHgZmBJSfMzNRHimntdBithsHAT89tAXnIpzVDWt8iaCD1DvkaxGg==",
      "dev": true,
      "requires": {
        "js-sha3": "^0.8.0"
      }
    },
    "ethjs-unit": {
      "version": "0.1.6",
      "resolved": "https://registry.npmjs.org/ethjs-unit/-/ethjs-unit-0.1.6.tgz",
      "integrity": "sha1-xmWSHkduh7ziqdWIpv4EBbLEFpk=",
      "dev": true,
      "requires": {
        "bn.js": "4.11.6",
        "number-to-bn": "1.7.0"
      },
      "dependencies": {
        "bn.js": {
          "version": "4.11.6",
          "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.11.6.tgz",
          "integrity": "sha1-UzRK2xRhehP26N0s4okF0cC6MhU=",
          "dev": true
        }
      }
    },
    "event-stream": {
      "version": "3.3.2",
      "resolved": "https://registry.npmjs.org/event-stream/-/event-stream-3.3.2.tgz",
      "integrity": "sha1-PMMQ/rHyjS9isqCF1zap71ZjeLg=",
      "dev": true,
      "requires": {
        "duplexer": "~0.1.1",
        "from": "~0",
        "map-stream": "~0.1.0",
        "pause-stream": "0.0.11",
        "split": "0.3",
        "stream-combiner": "~0.0.4",
        "through": "~2.3.1"
      }
    },
    "eventemitter3": {
      "version": "4.0.7",
      "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-4.0.7.tgz",
      "integrity": "sha512-8guHBZCwKnFhYdHr2ysuRWErTwhoN2X8XELRlrRwpmfeY2jjuUN4taQMsULKUVo1K4DvZl+0pgfyoysHxvmvEw==",
      "dev": true
    },
    "events": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/events/-/events-1.1.1.tgz",
      "integrity": "sha1-nr23Y1rQmccNzEwqH1AEKI6L2SQ=",
      "dev": true
    },
    "eventsource": {
      "version": "0.1.6",
      "resolved": "https://registry.npmjs.org/eventsource/-/eventsource-0.1.6.tgz",
      "integrity": "sha1-Cs7ehJ7X3RzMMsgRuxG5RNTykjI=",
      "dev": true,
      "requires": {
        "original": ">=0.0.5"
      }
    },
    "evp_bytestokey": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/evp_bytestokey/-/evp_bytestokey-1.0.3.tgz",
      "integrity": "sha512-/f2Go4TognH/KvCISP7OUsHn85hT9nUkxxA9BEWxFn+Oj9o8ZNLm/40hdlgSLyuOimsrTKLUMEorQexp/aPQeA==",
      "dev": true,
      "requires": {
        "md5.js": "^1.3.4",
        "safe-buffer": "^5.1.1"
      }
    },
    "execa": {
      "version": "0.7.0",
      "resolved": "https://registry.npmjs.org/execa/-/execa-0.7.0.tgz",
      "integrity": "sha1-lEvs00zEHuMqY6n68nrVpl/Fl3c=",
      "dev": true,
      "requires": {
        "cross-spawn": "^5.0.1",
        "get-stream": "^3.0.0",
        "is-stream": "^1.1.0",
        "npm-run-path": "^2.0.0",
        "p-finally": "^1.0.0",
        "signal-exit": "^3.0.0",
        "strip-eof": "^1.0.0"
      },
      "dependencies": {
        "cross-spawn": {
          "version": "5.1.0",
          "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-5.1.0.tgz",
          "integrity": "sha1-6L0O/uWPz/b4+UUQoKVUu/ojVEk=",
          "dev": true,
          "requires": {
            "lru-cache": "^4.0.1",
            "shebang-command": "^1.2.0",
            "which": "^1.2.9"
          }
        },
        "lru-cache": {
          "version": "4.1.5",
          "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-4.1.5.tgz",
          "integrity": "sha512-sWZlbEP2OsHNkXrMl5GYk/jKk70MBng6UU4YI/qGDYbgf6YbP4EvmqISbXCoJiRKs+1bSpFHVgQxvJ17F2li5g==",
          "dev": true,
          "requires": {
            "pseudomap": "^1.0.2",
            "yallist": "^2.1.2"
          }
        }
      }
    },
    "expand-brackets": {
      "version": "0.1.5",
      "resolved": "https://registry.npmjs.org/expand-brackets/-/expand-brackets-0.1.5.tgz",
      "integrity": "sha1-3wcoTjQqgHzXM6xa9yQR5YHRF3s=",
      "dev": true,
      "requires": {
        "is-posix-bracket": "^0.1.0"
      }
    },
    "expand-range": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/expand-range/-/expand-range-1.8.2.tgz",
      "integrity": "sha1-opnv/TNf4nIeuujiV+x5ZE/IUzc=",
      "dev": true,
      "requires": {
        "fill-range": "^2.1.0"
      },
      "dependencies": {
        "fill-range": {
          "version": "2.2.4",
          "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-2.2.4.tgz",
          "integrity": "sha512-cnrcCbj01+j2gTG921VZPnHbjmdAf8oQV/iGeV2kZxGSyfYjjTyY79ErsK1WJWMpw6DaApEX72binqJE+/d+5Q==",
          "dev": true,
          "requires": {
            "is-number": "^2.1.0",
            "isobject": "^2.0.0",
            "randomatic": "^3.0.0",
            "repeat-element": "^1.1.2",
            "repeat-string": "^1.5.2"
          }
        },
        "is-number": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/is-number/-/is-number-2.1.0.tgz",
          "integrity": "sha1-Afy7s5NGOlSPL0ZszhbezknbkI8=",
          "dev": true,
          "requires": {
            "kind-of": "^3.0.2"
          }
        }
      }
    },
    "expand-template": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/expand-template/-/expand-template-2.0.3.tgz",
      "integrity": "sha512-XYfuKMvj4O35f/pOXLObndIRvyQ+/+6AhODh+OKWj9S9498pHHn/IMszH+gt0fBCRWMNfk1ZSp5x3AifmnI2vg=="
    },
    "expand-tilde": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/expand-tilde/-/expand-tilde-2.0.2.tgz",
      "integrity": "sha1-l+gBqgUt8CRU3kawK/YhZCzchQI=",
      "dev": true,
      "requires": {
        "homedir-polyfill": "^1.0.1"
      }
    },
    "ext": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/ext/-/ext-1.4.0.tgz",
      "integrity": "sha512-Key5NIsUxdqKg3vIsdw9dSuXpPCQ297y6wBjL30edxwPgt2E44WcWBZey/ZvUc6sERLTxKdyCu4gZFmUbk1Q7A==",
      "dev": true,
      "requires": {
        "type": "^2.0.0"
      },
      "dependencies": {
        "type": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/type/-/type-2.1.0.tgz",
          "integrity": "sha512-G9absDWvhAWCV2gmF1zKud3OyC61nZDwWvBL2DApaVFogI07CprggiQAOOjvp2NRjYWFzPyu7vwtDrQFq8jeSA==",
          "dev": true
        }
      }
    },
    "extend": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/extend/-/extend-3.0.2.tgz",
      "integrity": "sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g==",
      "dev": true
    },
    "extend-shallow": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-3.0.2.tgz",
      "integrity": "sha1-Jqcarwc7OfshJxcnRhMcJwQCjbg=",
      "dev": true,
      "requires": {
        "assign-symbols": "^1.0.0",
        "is-extendable": "^1.0.1"
      },
      "dependencies": {
        "is-extendable": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/is-extendable/-/is-extendable-1.0.1.tgz",
          "integrity": "sha512-arnXMxT1hhoKo9k1LZdmlNyJdDDfy2v0fXjFlmok4+i8ul/6WlbVge9bhM74OpNPQPMGUToDtz+KXa1PneJxOA==",
          "dev": true,
          "requires": {
            "is-plain-object": "^2.0.4"
          }
        }
      }
    },
    "extglob": {
      "version": "0.3.2",
      "resolved": "https://registry.npmjs.org/extglob/-/extglob-0.3.2.tgz",
      "integrity": "sha1-Lhj/PS9JqydlzskCPwEdqo2DSaE=",
      "dev": true,
      "requires": {
        "is-extglob": "^1.0.0"
      },
      "dependencies": {
        "is-extglob": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-1.0.0.tgz",
          "integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA=",
          "dev": true
        }
      }
    },
    "extract-zip": {
      "version": "1.7.0",
      "resolved": "https://registry.npmjs.org/extract-zip/-/extract-zip-1.7.0.tgz",
      "integrity": "sha512-xoh5G1W/PB0/27lXgMQyIhP5DSY/LhoCsOyZgb+6iMmRtCwVBo55uKaMoEYrDCKQhWvqEip5ZPKAc6eFNyf/MA==",
      "dev": true,
      "requires": {
        "concat-stream": "^1.6.2",
        "debug": "^2.6.9",
        "mkdirp": "^0.5.4",
        "yauzl": "^2.10.0"
      },
      "dependencies": {
        "concat-stream": {
          "version": "1.6.2",
          "resolved": "https://registry.npmjs.org/concat-stream/-/concat-stream-1.6.2.tgz",
          "integrity": "sha512-27HBghJxjiZtIk3Ycvn/4kbJk/1uZuJFfuPEns6LaEvpvG1f0hTea8lilrouyo9mVc2GWdcEZ8OLoGmSADlrCw==",
          "dev": true,
          "requires": {
            "buffer-from": "^1.0.0",
            "inherits": "^2.0.3",
            "readable-stream": "^2.2.2",
            "typedarray": "^0.0.6"
          }
        },
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "extsprintf": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/extsprintf/-/extsprintf-1.3.0.tgz",
      "integrity": "sha1-lpGEQOMEGnpBT4xS48V06zw+HgU=",
      "dev": true
    },
    "fancy-log": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/fancy-log/-/fancy-log-1.3.3.tgz",
      "integrity": "sha512-k9oEhlyc0FrVh25qYuSELjr8oxsCoc4/LEZfg2iJJrfEk/tZL9bCoJE47gqAvI2m/AUjluCS4+3I0eTx8n3AEw==",
      "dev": true,
      "requires": {
        "ansi-gray": "^0.1.1",
        "color-support": "^1.1.3",
        "parse-node-version": "^1.0.0",
        "time-stamp": "^1.0.0"
      }
    },
    "fast-deep-equal": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
      "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==",
      "dev": true
    },
    "fast-json-stable-stringify": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
      "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==",
      "dev": true
    },
    "fast-safe-stringify": {
      "version": "2.0.7",
      "resolved": "https://registry.npmjs.org/fast-safe-stringify/-/fast-safe-stringify-2.0.7.tgz",
      "integrity": "sha512-Utm6CdzT+6xsDk2m8S6uL8VHxNwI6Jub+e9NYTcAms28T84pTa25GJQV9j0CY0N1rM8hK4x6grpF2BQf+2qwVA==",
      "dev": true
    },
    "faye-websocket": {
      "version": "0.11.3",
      "resolved": "https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.11.3.tgz",
      "integrity": "sha512-D2y4bovYpzziGgbHYtGCMjlJM36vAl/y+xUyn1C+FVx8szd1E+86KwVw6XvYSzOP8iMpm1X0I4xJD+QtUb36OA==",
      "dev": true,
      "requires": {
        "websocket-driver": ">=0.5.1"
      }
    },
    "fd-slicer": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/fd-slicer/-/fd-slicer-1.1.0.tgz",
      "integrity": "sha1-JcfInLH5B3+IkbvmHY85Dq4lbx4=",
      "dev": true,
      "requires": {
        "pend": "~1.2.0"
      }
    },
    "file-exists": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/file-exists/-/file-exists-2.0.0.tgz",
      "integrity": "sha1-okFQZlFQ5i1VvFRJKB2I0rCBDco=",
      "dev": true
    },
    "file-type": {
      "version": "3.9.0",
      "resolved": "https://registry.npmjs.org/file-type/-/file-type-3.9.0.tgz",
      "integrity": "sha1-JXoHg4TR24CHvESdEH1SpSZyuek=",
      "dev": true
    },
    "file-uri-to-path": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/file-uri-to-path/-/file-uri-to-path-1.0.0.tgz",
      "integrity": "sha512-0Zt+s3L7Vf1biwWZ29aARiVYLx7iMGnEUl9x33fbB/j3jR81u/O2LbqK+Bm1CDSNDKVtJ/YjwY7TUd5SkeLQLw=="
    },
    "filelist": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/filelist/-/filelist-1.0.1.tgz",
      "integrity": "sha512-8zSK6Nu0DQIC08mUC46sWGXi+q3GGpKydAG36k+JDba6VRpkevvOWUW5a/PhShij4+vHT9M+ghgG7eM+a9JDUQ==",
      "dev": true,
      "requires": {
        "minimatch": "^3.0.4"
      }
    },
    "filename-regex": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/filename-regex/-/filename-regex-2.0.1.tgz",
      "integrity": "sha1-wcS5vuPglyXdsQa3XB4wH+LxiyY=",
      "dev": true
    },
    "filename-reserved-regex": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/filename-reserved-regex/-/filename-reserved-regex-2.0.0.tgz",
      "integrity": "sha1-q/c9+rc10EVECr/qLZHzieu/oik=",
      "dev": true
    },
    "filenamify": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/filenamify/-/filenamify-2.1.0.tgz",
      "integrity": "sha512-ICw7NTT6RsDp2rnYKVd8Fu4cr6ITzGy3+u4vUujPkabyaz+03F24NWEX7fs5fp+kBonlaqPH8fAO2NM+SXt/JA==",
      "dev": true,
      "requires": {
        "filename-reserved-regex": "^2.0.0",
        "strip-outer": "^1.0.0",
        "trim-repeated": "^1.0.0"
      }
    },
    "fill-keys": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/fill-keys/-/fill-keys-1.0.2.tgz",
      "integrity": "sha1-mo+jb06K1jTjv2tPPIiCVRRS6yA=",
      "dev": true,
      "requires": {
        "is-object": "~1.0.1",
        "merge-descriptors": "~1.0.0"
      }
    },
    "fill-range": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz",
      "integrity": "sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==",
      "dev": true,
      "requires": {
        "to-regex-range": "^5.0.1"
      }
    },
    "finalhandler": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-1.1.0.tgz",
      "integrity": "sha1-zgtoVbRYU+eRsvzGgARtiCU91/U=",
      "dev": true,
      "requires": {
        "debug": "2.6.9",
        "encodeurl": "~1.0.1",
        "escape-html": "~1.0.3",
        "on-finished": "~2.3.0",
        "parseurl": "~1.3.2",
        "statuses": "~1.3.1",
        "unpipe": "~1.0.0"
      }
    },
    "find-index": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/find-index/-/find-index-0.1.1.tgz",
      "integrity": "sha1-Z101iyyjiS15Whq0cjL4tuLg3eQ=",
      "dev": true
    },
    "find-up": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/find-up/-/find-up-3.0.0.tgz",
      "integrity": "sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==",
      "dev": true,
      "requires": {
        "locate-path": "^3.0.0"
      }
    },
    "findup-sync": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/findup-sync/-/findup-sync-2.0.0.tgz",
      "integrity": "sha1-kyaxSIwi0aYIhlCoaQGy2akKLLw=",
      "dev": true,
      "requires": {
        "detect-file": "^1.0.0",
        "is-glob": "^3.1.0",
        "micromatch": "^3.0.4",
        "resolve-dir": "^1.0.1"
      },
      "dependencies": {
        "arr-diff": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-4.0.0.tgz",
          "integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA=",
          "dev": true
        },
        "array-unique": {
          "version": "0.3.2",
          "resolved": "https://registry.npmjs.org/array-unique/-/array-unique-0.3.2.tgz",
          "integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg=",
          "dev": true
        },
        "braces": {
          "version": "2.3.2",
          "resolved": "https://registry.npmjs.org/braces/-/braces-2.3.2.tgz",
          "integrity": "sha512-aNdbnj9P8PjdXU4ybaWLK2IF3jc/EoDYbC7AazW6to3TRsfXxscC9UXOB5iDiEQrkyIbWp2SLQda4+QAa7nc3w==",
          "dev": true,
          "requires": {
            "arr-flatten": "^1.1.0",
            "array-unique": "^0.3.2",
            "extend-shallow": "^2.0.1",
            "fill-range": "^4.0.0",
            "isobject": "^3.0.1",
            "repeat-element": "^1.1.2",
            "snapdragon": "^0.8.1",
            "snapdragon-node": "^2.0.1",
            "split-string": "^3.0.2",
            "to-regex": "^3.0.1"
          },
          "dependencies": {
            "extend-shallow": {
              "version": "2.0.1",
              "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
              "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
              "dev": true,
              "requires": {
                "is-extendable": "^0.1.0"
              }
            }
          }
        },
        "expand-brackets": {
          "version": "2.1.4",
          "resolved": "https://registry.npmjs.org/expand-brackets/-/expand-brackets-2.1.4.tgz",
          "integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
          "dev": true,
          "requires": {
            "debug": "^2.3.3",
            "define-property": "^0.2.5",
            "extend-shallow": "^2.0.1",
            "posix-character-classes": "^0.1.0",
            "regex-not": "^1.0.0",
            "snapdragon": "^0.8.1",
            "to-regex": "^3.0.1"
          },
          "dependencies": {
            "define-property": {
              "version": "0.2.5",
              "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
              "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
              "dev": true,
              "requires": {
                "is-descriptor": "^0.1.0"
              }
            },
            "extend-shallow": {
              "version": "2.0.1",
              "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
              "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
              "dev": true,
              "requires": {
                "is-extendable": "^0.1.0"
              }
            },
            "is-accessor-descriptor": {
              "version": "0.1.6",
              "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-0.1.6.tgz",
              "integrity": "sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=",
              "dev": true,
              "requires": {
                "kind-of": "^3.0.2"
              },
              "dependencies": {
                "kind-of": {
                  "version": "3.2.2",
                  "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
                  "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
                  "dev": true,
                  "requires": {
                    "is-buffer": "^1.1.5"
                  }
                }
              }
            },
            "is-data-descriptor": {
              "version": "0.1.4",
              "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-0.1.4.tgz",
              "integrity": "sha1-C17mSDiOLIYCgueT8YVv7D8wG1Y=",
              "dev": true,
              "requires": {
                "kind-of": "^3.0.2"
              },
              "dependencies": {
                "kind-of": {
                  "version": "3.2.2",
                  "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
                  "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
                  "dev": true,
                  "requires": {
                    "is-buffer": "^1.1.5"
                  }
                }
              }
            },
            "is-descriptor": {
              "version": "0.1.6",
              "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-0.1.6.tgz",
              "integrity": "sha512-avDYr0SB3DwO9zsMov0gKCESFYqCnE4hq/4z3TdUlukEy5t9C0YRq7HLrsN52NAcqXKaepeCD0n+B0arnVG3Hg==",
              "dev": true,
              "requires": {
                "is-accessor-descriptor": "^0.1.6",
                "is-data-descriptor": "^0.1.4",
                "kind-of": "^5.0.0"
              }
            },
            "kind-of": {
              "version": "5.1.0",
              "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-5.1.0.tgz",
              "integrity": "sha512-NGEErnH6F2vUuXDh+OlbcKW7/wOcfdRHaZ7VWtqCztfHri/++YKmP51OdWeGPuqCOba6kk2OTe5d02VmTB80Pw==",
              "dev": true
            }
          }
        },
        "extglob": {
          "version": "2.0.4",
          "resolved": "https://registry.npmjs.org/extglob/-/extglob-2.0.4.tgz",
          "integrity": "sha512-Nmb6QXkELsuBr24CJSkilo6UHHgbekK5UiZgfE6UHD3Eb27YC6oD+bhcT+tJ6cl8dmsgdQxnWlcry8ksBIBLpw==",
          "dev": true,
          "requires": {
            "array-unique": "^0.3.2",
            "define-property": "^1.0.0",
            "expand-brackets": "^2.1.4",
            "extend-shallow": "^2.0.1",
            "fragment-cache": "^0.2.1",
            "regex-not": "^1.0.0",
            "snapdragon": "^0.8.1",
            "to-regex": "^3.0.1"
          },
          "dependencies": {
            "define-property": {
              "version": "1.0.0",
              "resolved": "https://registry.npmjs.org/define-property/-/define-property-1.0.0.tgz",
              "integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
              "dev": true,
              "requires": {
                "is-descriptor": "^1.0.0"
              }
            },
            "extend-shallow": {
              "version": "2.0.1",
              "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
              "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
              "dev": true,
              "requires": {
                "is-extendable": "^0.1.0"
              }
            }
          }
        },
        "fill-range": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-4.0.0.tgz",
          "integrity": "sha1-1USBHUKPmOsGpj3EAtJAPDKMOPc=",
          "dev": true,
          "requires": {
            "extend-shallow": "^2.0.1",
            "is-number": "^3.0.0",
            "repeat-string": "^1.6.1",
            "to-regex-range": "^2.1.0"
          },
          "dependencies": {
            "extend-shallow": {
              "version": "2.0.1",
              "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
              "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
              "dev": true,
              "requires": {
                "is-extendable": "^0.1.0"
              }
            }
          }
        },
        "is-accessor-descriptor": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",
          "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",
          "dev": true,
          "requires": {
            "kind-of": "^6.0.0"
          }
        },
        "is-buffer": {
          "version": "1.1.6",
          "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",
          "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w==",
          "dev": true
        },
        "is-data-descriptor": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",
          "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",
          "dev": true,
          "requires": {
            "kind-of": "^6.0.0"
          }
        },
        "is-descriptor": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",
          "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",
          "dev": true,
          "requires": {
            "is-accessor-descriptor": "^1.0.0",
            "is-data-descriptor": "^1.0.0",
            "kind-of": "^6.0.2"
          }
        },
        "is-glob": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-3.1.0.tgz",
          "integrity": "sha1-e6WuJCF4BKxwcHuWkiVnSGzD6Eo=",
          "dev": true,
          "requires": {
            "is-extglob": "^2.1.0"
          }
        },
        "is-number": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-number/-/is-number-3.0.0.tgz",
          "integrity": "sha1-JP1iAaR4LPUFYcgQJ2r8fRLXEZU=",
          "dev": true,
          "requires": {
            "kind-of": "^3.0.2"
          },
          "dependencies": {
            "kind-of": {
              "version": "3.2.2",
              "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
              "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
              "dev": true,
              "requires": {
                "is-buffer": "^1.1.5"
              }
            }
          }
        },
        "isobject": {
          "version": "3.0.1",
          "resolved": "https://registry.npmjs.org/isobject/-/isobject-3.0.1.tgz",
          "integrity": "sha1-TkMekrEalzFjaqH5yNHMvP2reN8=",
          "dev": true
        },
        "kind-of": {
          "version": "6.0.3",
          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.3.tgz",
          "integrity": "sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw==",
          "dev": true
        },
        "micromatch": {
          "version": "3.1.10",
          "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-3.1.10.tgz",
          "integrity": "sha512-MWikgl9n9M3w+bpsY3He8L+w9eF9338xRl8IAO5viDizwSzziFEyUzo2xrrloB64ADbTf8uA8vRqqttDTOmccg==",
          "dev": true,
          "requires": {
            "arr-diff": "^4.0.0",
            "array-unique": "^0.3.2",
            "braces": "^2.3.1",
            "define-property": "^2.0.2",
            "extend-shallow": "^3.0.2",
            "extglob": "^2.0.4",
            "fragment-cache": "^0.2.1",
            "kind-of": "^6.0.2",
            "nanomatch": "^1.2.9",
            "object.pick": "^1.3.0",
            "regex-not": "^1.0.0",
            "snapdragon": "^0.8.1",
            "to-regex": "^3.0.2"
          }
        },
        "to-regex-range": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-2.1.1.tgz",
          "integrity": "sha1-fIDBe53+vlmeJzZ+DU3VWQFB2zg=",
          "dev": true,
          "requires": {
            "is-number": "^3.0.0",
            "repeat-string": "^1.6.1"
          }
        }
      }
    },
    "fined": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/fined/-/fined-1.2.0.tgz",
      "integrity": "sha512-ZYDqPLGxDkDhDZBjZBb+oD1+j0rA4E0pXY50eplAAOPg2N/gUBSSk5IM1/QhPfyVo19lJ+CvXpqfvk+b2p/8Ng==",
      "dev": true,
      "requires": {
        "expand-tilde": "^2.0.2",
        "is-plain-object": "^2.0.3",
        "object.defaults": "^1.1.0",
        "object.pick": "^1.2.0",
        "parse-filepath": "^1.0.1"
      }
    },
    "first-chunk-stream": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/first-chunk-stream/-/first-chunk-stream-1.0.0.tgz",
      "integrity": "sha1-Wb+1DNkF9g18OUzT2ayqtOatk04=",
      "dev": true
    },
    "flagged-respawn": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/flagged-respawn/-/flagged-respawn-1.0.1.tgz",
      "integrity": "sha512-lNaHNVymajmk0OJMBn8fVUAU1BtDeKIqKoVhk4xAALB57aALg6b4W0MfJ/cUE0g9YBXy5XhSlPIpYIJ7HaY/3Q==",
      "dev": true
    },
    "flora-colossus": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/flora-colossus/-/flora-colossus-1.0.1.tgz",
      "integrity": "sha512-d+9na7t9FyH8gBJoNDSi28mE4NgQVGGvxQ4aHtFRetjyh5SXjuus+V5EZaxFmFdXVemSOrx0lsgEl/ZMjnOWJA==",
      "dev": true,
      "requires": {
        "debug": "^4.1.1",
        "fs-extra": "^7.0.0"
      },
      "dependencies": {
        "debug": {
          "version": "4.3.1",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.1.tgz",
          "integrity": "sha512-doEwdvm4PCeK4K3RQN2ZC2BYUBaxwLARCqZmMjtF8a51J2Rb0xpVloFRnCODwqjpwnAoao4pelN8l3RJdv3gRQ==",
          "dev": true,
          "requires": {
            "ms": "2.1.2"
          }
        },
        "fs-extra": {
          "version": "7.0.1",
          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-7.0.1.tgz",
          "integrity": "sha512-YJDaCJZEnBmcbw13fvdAM9AwNOJwOzrE4pqMqBq5nFiEqXUqHwlK4B+3pUw6JNvfSPtX05xFHtYy/1ni01eGCw==",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.1.2",
            "jsonfile": "^4.0.0",
            "universalify": "^0.1.0"
          }
        },
        "jsonfile": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-4.0.0.tgz",
          "integrity": "sha1-h3Gq4HmbZAdrdmQPygWPnBDjPss=",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.1.6"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
          "dev": true
        }
      }
    },
    "follow-redirects": {
      "version": "1.13.1",
      "resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.13.1.tgz",
      "integrity": "sha512-SSG5xmZh1mkPGyKzjZP8zLjltIfpW32Y5QpdNJyjcfGxK3qo3NDDkZOZSFiGn1A6SclQxY9GzEwAHQ3dmYRWpg==",
      "dev": true
    },
    "for-in": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/for-in/-/for-in-1.0.2.tgz",
      "integrity": "sha1-gQaNKVqBQuwKxybG4iAMMPttXoA=",
      "dev": true
    },
    "for-own": {
      "version": "0.1.5",
      "resolved": "https://registry.npmjs.org/for-own/-/for-own-0.1.5.tgz",
      "integrity": "sha1-UmXGgaTylNq78XyVCbZ2OqhFEM4=",
      "dev": true,
      "requires": {
        "for-in": "^1.0.1"
      }
    },
    "forever-agent": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/forever-agent/-/forever-agent-0.6.1.tgz",
      "integrity": "sha1-+8cfDEGt6zf5bFd60e1C2P2sypE=",
      "dev": true
    },
    "form-data": {
      "version": "2.1.4",
      "resolved": "https://registry.npmjs.org/form-data/-/form-data-2.1.4.tgz",
      "integrity": "sha1-M8GDrPGTJ27KqYFDpp6Uv+4XUNE=",
      "dev": true,
      "requires": {
        "asynckit": "^0.4.0",
        "combined-stream": "^1.0.5",
        "mime-types": "^2.1.12"
      }
    },
    "fragment-cache": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/fragment-cache/-/fragment-cache-0.2.1.tgz",
      "integrity": "sha1-QpD60n8T6Jvn8zeZxrxaCr//DRk=",
      "dev": true,
      "requires": {
        "map-cache": "^0.2.2"
      }
    },
    "fresh": {
      "version": "0.5.2",
      "resolved": "https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz",
      "integrity": "sha1-PYyt2Q2XZWn6g1qx+OSyOhBWBac=",
      "dev": true
    },
    "from": {
      "version": "0.1.7",
      "resolved": "https://registry.npmjs.org/from/-/from-0.1.7.tgz",
      "integrity": "sha1-g8YK/Fi5xWmXAH7Rp2izqzA6RP4=",
      "dev": true
    },
    "fs-constants": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs-constants/-/fs-constants-1.0.0.tgz",
      "integrity": "sha512-y6OAwoSIf7FyjMIv94u+b5rdheZEjzR63GTyZJm5qh4Bi+2YgwLCcI/fPFZkL5PSixOt6ZNKm+w+Hfp/Bciwow=="
    },
    "fs-extra": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-3.0.1.tgz",
      "integrity": "sha1-N5TzeMWLNC6n27sjCVEJxLO2IpE=",
      "dev": true,
      "requires": {
        "graceful-fs": "^4.1.2",
        "jsonfile": "^3.0.0",
        "universalify": "^0.1.0"
      }
    },
    "fs-minipass": {
      "version": "1.2.7",
      "resolved": "https://registry.npmjs.org/fs-minipass/-/fs-minipass-1.2.7.tgz",
      "integrity": "sha512-GWSSJGFy4e9GUeCcbIkED+bgAoFyj7XF1mV8rma3QW4NIqX9Kyx79N/PF61H5udOV3aY1IaMLs6pGbH71nlCTA==",
      "dev": true,
      "requires": {
        "minipass": "^2.6.0"
      }
    },
    "fs-readdir-recursive": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/fs-readdir-recursive/-/fs-readdir-recursive-1.1.0.tgz",
      "integrity": "sha512-GNanXlVr2pf02+sPN40XN8HG+ePaNcvM0q5mZBd668Obwb0yD5GiUbZOFgwn8kGMY6I3mdyDJzieUy3PTYyTRA==",
      "dev": true
    },
    "fs.realpath": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
      "integrity": "sha1-FQStJSMVjKpA20onh8sBQRmU6k8=",
      "dev": true
    },
    "fsevents": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.1.3.tgz",
      "integrity": "sha512-Auw9a4AxqWpa9GUfj370BMPzzyncfBABW8Mab7BGWBYDj4Isgq+cDKtx0i6u9jcX9pQDnswsaaOTgTmA5pEjuQ==",
      "dev": true,
      "optional": true
    },
    "fstream": {
      "version": "1.0.12",
      "resolved": "https://registry.npmjs.org/fstream/-/fstream-1.0.12.tgz",
      "integrity": "sha512-WvJ193OHa0GHPEL+AycEJgxvBEwyfRkN1vhjca23OaPVMCaLCXTd5qAu82AjTcgP1UJmytkOKb63Ypde7raDIg==",
      "dev": true,
      "requires": {
        "graceful-fs": "^4.1.2",
        "inherits": "~2.0.0",
        "mkdirp": ">=0.5 0",
        "rimraf": "2"
      }
    },
    "function-bind": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz",
      "integrity": "sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A==",
      "dev": true
    },
    "futoin-hkdf": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/futoin-hkdf/-/futoin-hkdf-1.3.2.tgz",
      "integrity": "sha512-3EVi3ETTyJg5PSXlxLCaUVVn0pSbDf62L3Gwxne7Uq+d8adOSNWQAad4gg7WToHkcgnCJb3Wlb1P8r4Evj4GPw==",
      "dev": true
    },
    "galactus": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/galactus/-/galactus-0.2.1.tgz",
      "integrity": "sha1-y+0tIKQMH1Z5o1kI4rlBVzPnjbk=",
      "dev": true,
      "requires": {
        "debug": "^3.1.0",
        "flora-colossus": "^1.0.0",
        "fs-extra": "^4.0.0"
      },
      "dependencies": {
        "debug": {
          "version": "3.2.7",
          "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.7.tgz",
          "integrity": "sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==",
          "dev": true,
          "requires": {
            "ms": "^2.1.1"
          }
        },
        "fs-extra": {
          "version": "4.0.3",
          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-4.0.3.tgz",
          "integrity": "sha512-q6rbdDd1o2mAnQreO7YADIxf/Whx4AHBiRf6d+/cVT8h44ss+lHgxf1FemcqDnQt9X3ct4McHr+JMGlYSsK7Cg==",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.1.2",
            "jsonfile": "^4.0.0",
            "universalify": "^0.1.0"
          }
        },
        "jsonfile": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-4.0.0.tgz",
          "integrity": "sha1-h3Gq4HmbZAdrdmQPygWPnBDjPss=",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.1.6"
          }
        },
        "ms": {
          "version": "2.1.3",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
          "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
          "dev": true
        }
      }
    },
    "gauge": {
      "version": "2.7.4",
      "resolved": "https://registry.npmjs.org/gauge/-/gauge-2.7.4.tgz",
      "integrity": "sha1-LANAXHU4w51+s3sxcCLjJfsBi/c=",
      "requires": {
        "aproba": "^1.0.3",
        "console-control-strings": "^1.0.0",
        "has-unicode": "^2.0.0",
        "object-assign": "^4.1.0",
        "signal-exit": "^3.0.0",
        "string-width": "^1.0.1",
        "strip-ansi": "^3.0.1",
        "wide-align": "^1.1.0"
      },
      "dependencies": {
        "is-fullwidth-code-point": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz",
          "integrity": "sha1-754xOG8DGn8NZDr4L95QxFfvAMs=",
          "requires": {
            "number-is-nan": "^1.0.0"
          }
        },
        "string-width": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-1.0.2.tgz",
          "integrity": "sha1-EYvfW4zcUaKn5w0hHgfisLmxB9M=",
          "requires": {
            "code-point-at": "^1.0.0",
            "is-fullwidth-code-point": "^1.0.0",
            "strip-ansi": "^3.0.0"
          }
        }
      }
    },
    "gaze": {
      "version": "0.5.2",
      "resolved": "https://registry.npmjs.org/gaze/-/gaze-0.5.2.tgz",
      "integrity": "sha1-QLcJU30k0dRXZ9takIaJ3+aaxE8=",
      "dev": true,
      "requires": {
        "globule": "~0.1.0"
      }
    },
    "get-assigned-identifiers": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/get-assigned-identifiers/-/get-assigned-identifiers-1.2.0.tgz",
      "integrity": "sha512-mBBwmeGTrxEMO4pMaaf/uUEFHnYtwr8FTe8Y/mer4rcV/bye0qGm6pw1bGZFGStxC5O76c5ZAVBGnqHmOaJpdQ==",
      "dev": true
    },
    "get-caller-file": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz",
      "integrity": "sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==",
      "dev": true
    },
    "get-package-info": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/get-package-info/-/get-package-info-1.0.0.tgz",
      "integrity": "sha1-ZDJ5ZWPigRPNlHTbvQAFKYWkmZw=",
      "dev": true,
      "requires": {
        "bluebird": "^3.1.1",
        "debug": "^2.2.0",
        "lodash.get": "^4.0.0",
        "read-pkg-up": "^2.0.0"
      },
      "dependencies": {
        "find-up": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/find-up/-/find-up-2.1.0.tgz",
          "integrity": "sha1-RdG35QbHF93UgndaK3eSCjwMV6c=",
          "dev": true,
          "requires": {
            "locate-path": "^2.0.0"
          }
        },
        "load-json-file": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-2.0.0.tgz",
          "integrity": "sha1-eUfkIUmvgNaWy/eXvKq8/h/inKg=",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.1.2",
            "parse-json": "^2.2.0",
            "pify": "^2.0.0",
            "strip-bom": "^3.0.0"
          }
        },
        "locate-path": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-2.0.0.tgz",
          "integrity": "sha1-K1aLJl7slExtnA3pw9u7ygNUzY4=",
          "dev": true,
          "requires": {
            "p-locate": "^2.0.0",
            "path-exists": "^3.0.0"
          }
        },
        "p-limit": {
          "version": "1.3.0",
          "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-1.3.0.tgz",
          "integrity": "sha512-vvcXsLAJ9Dr5rQOPk7toZQZJApBl2K4J6dANSsEuh6QI41JYcsS/qhTGa9ErIUUgK3WNQoJYvylxvjqmiqEA9Q==",
          "dev": true,
          "requires": {
            "p-try": "^1.0.0"
          }
        },
        "p-locate": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-2.0.0.tgz",
          "integrity": "sha1-IKAQOyIqcMj9OcwuWAaA893l7EM=",
          "dev": true,
          "requires": {
            "p-limit": "^1.1.0"
          }
        },
        "p-try": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/p-try/-/p-try-1.0.0.tgz",
          "integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M=",
          "dev": true
        },
        "path-type": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/path-type/-/path-type-2.0.0.tgz",
          "integrity": "sha1-8BLMuEFbcJb8LaoQVMPXI4lZTHM=",
          "dev": true,
          "requires": {
            "pify": "^2.0.0"
          }
        },
        "read-pkg": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-2.0.0.tgz",
          "integrity": "sha1-jvHAYjxqbbDcZxPEv6xGMysjaPg=",
          "dev": true,
          "requires": {
            "load-json-file": "^2.0.0",
            "normalize-package-data": "^2.3.2",
            "path-type": "^2.0.0"
          }
        },
        "read-pkg-up": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-2.0.0.tgz",
          "integrity": "sha1-a3KoBImE4MQeeVEP1en6mbO1Sb4=",
          "dev": true,
          "requires": {
            "find-up": "^2.0.0",
            "read-pkg": "^2.0.0"
          }
        },
        "strip-bom": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz",
          "integrity": "sha1-IzTBjpx1n3vdVv3vfprj1YjmjtM=",
          "dev": true
        }
      }
    },
    "get-proxy": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/get-proxy/-/get-proxy-2.1.0.tgz",
      "integrity": "sha512-zmZIaQTWnNQb4R4fJUEp/FC51eZsc6EkErspy3xtIYStaq8EB/hDIWipxsal+E8rz0qD7f2sL/NA9Xee4RInJw==",
      "dev": true,
      "requires": {
        "npm-conf": "^1.1.0"
      }
    },
    "get-random-values": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/get-random-values/-/get-random-values-1.2.2.tgz",
      "integrity": "sha512-lMyPjQyl0cNNdDf2oR+IQ/fM3itDvpoHy45Ymo2r0L1EjazeSl13SfbKZs7KtZ/3MDCeueiaJiuOEfKqRTsSgA==",
      "dev": true,
      "requires": {
        "global": "^4.4.0"
      }
    },
    "get-stdin": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/get-stdin/-/get-stdin-4.0.1.tgz",
      "integrity": "sha1-uWjGsKBDhDJJAui/Gl3zJXmkUP4=",
      "dev": true
    },
    "get-stream": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-3.0.0.tgz",
      "integrity": "sha1-jpQ9E1jcN1VQVOy+LtsFqhdO3hQ=",
      "dev": true
    },
    "get-value": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/get-value/-/get-value-2.0.6.tgz",
      "integrity": "sha1-3BXKHGcjh8p2vTesCjlbogQqLCg=",
      "dev": true
    },
    "getpass": {
      "version": "0.1.7",
      "resolved": "https://registry.npmjs.org/getpass/-/getpass-0.1.7.tgz",
      "integrity": "sha1-Xv+OPmhNVprkyysSgmBOi6YhSfo=",
      "dev": true,
      "requires": {
        "assert-plus": "^1.0.0"
      },
      "dependencies": {
        "assert-plus": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
          "integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU=",
          "dev": true
        }
      }
    },
    "github-from-package": {
      "version": "0.0.0",
      "resolved": "https://registry.npmjs.org/github-from-package/-/github-from-package-0.0.0.tgz",
      "integrity": "sha1-l/tdlr/eiXMxPyDoKI75oWf6ZM4="
    },
    "glob": {
      "version": "7.0.5",
      "resolved": "https://registry.npmjs.org/glob/-/glob-7.0.5.tgz",
      "integrity": "sha1-tCAqaQmbu00pKnwblbZoK2fr3JU=",
      "dev": true,
      "requires": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^3.0.2",
        "once": "^1.3.0",
        "path-is-absolute": "^1.0.0"
      }
    },
    "glob-base": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/glob-base/-/glob-base-0.3.0.tgz",
      "integrity": "sha1-27Fk9iIbHAscz4Kuoyi0l98Oo8Q=",
      "dev": true,
      "requires": {
        "glob-parent": "^2.0.0",
        "is-glob": "^2.0.0"
      },
      "dependencies": {
        "glob-parent": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-2.0.0.tgz",
          "integrity": "sha1-gTg9ctsFT8zPUzbaqQLxgvbtuyg=",
          "dev": true,
          "requires": {
            "is-glob": "^2.0.0"
          }
        },
        "is-extglob": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-1.0.0.tgz",
          "integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA=",
          "dev": true
        },
        "is-glob": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-2.0.1.tgz",
          "integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",
          "dev": true,
          "requires": {
            "is-extglob": "^1.0.0"
          }
        }
      }
    },
    "glob-parent": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.1.tgz",
      "integrity": "sha512-FnI+VGOpnlGHWZxthPGR+QhR78fuiK0sNLkHQv+bL9fQi57lNNdquIbna/WrfROrolq8GK5Ek6BiMwqL/voRYQ==",
      "dev": true,
      "requires": {
        "is-glob": "^4.0.1"
      }
    },
    "glob-stream": {
      "version": "3.1.18",
      "resolved": "https://registry.npmjs.org/glob-stream/-/glob-stream-3.1.18.tgz",
      "integrity": "sha1-kXCl8St5Awb9/lmPMT+PeVT9FDs=",
      "dev": true,
      "requires": {
        "glob": "^4.3.1",
        "glob2base": "^0.0.12",
        "minimatch": "^2.0.1",
        "ordered-read-streams": "^0.1.0",
        "through2": "^0.6.1",
        "unique-stream": "^1.0.0"
      },
      "dependencies": {
        "glob": {
          "version": "4.5.3",
          "resolved": "https://registry.npmjs.org/glob/-/glob-4.5.3.tgz",
          "integrity": "sha1-xstz0yJsHv7wTePFbQEvAzd+4V8=",
          "dev": true,
          "requires": {
            "inflight": "^1.0.4",
            "inherits": "2",
            "minimatch": "^2.0.1",
            "once": "^1.3.0"
          }
        },
        "isarray": {
          "version": "0.0.1",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz",
          "integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=",
          "dev": true
        },
        "minimatch": {
          "version": "2.0.10",
          "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-2.0.10.tgz",
          "integrity": "sha1-jQh8OcazjAAbl/ynzm0OHoCvusc=",
          "dev": true,
          "requires": {
            "brace-expansion": "^1.0.0"
          }
        },
        "readable-stream": {
          "version": "1.0.34",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-1.0.34.tgz",
          "integrity": "sha1-Elgg40vIQtLyqq+v5MKRbuMsFXw=",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.1",
            "isarray": "0.0.1",
            "string_decoder": "~0.10.x"
          }
        },
        "string_decoder": {
          "version": "0.10.31",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz",
          "integrity": "sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=",
          "dev": true
        },
        "through2": {
          "version": "0.6.5",
          "resolved": "https://registry.npmjs.org/through2/-/through2-0.6.5.tgz",
          "integrity": "sha1-QaucZ7KdVyCQcUEOHXp6lozTrUg=",
          "dev": true,
          "requires": {
            "readable-stream": ">=1.0.33-1 <1.1.0-0",
            "xtend": ">=4.0.0 <4.1.0-0"
          }
        }
      }
    },
    "glob-watcher": {
      "version": "0.0.6",
      "resolved": "https://registry.npmjs.org/glob-watcher/-/glob-watcher-0.0.6.tgz",
      "integrity": "sha1-uVtKjfdLOcgymLDAXJeLTZo7cQs=",
      "dev": true,
      "requires": {
        "gaze": "^0.5.1"
      }
    },
    "glob2base": {
      "version": "0.0.12",
      "resolved": "https://registry.npmjs.org/glob2base/-/glob2base-0.0.12.tgz",
      "integrity": "sha1-nUGbPijxLoOjYhZKJ3BVkiycDVY=",
      "dev": true,
      "requires": {
        "find-index": "^0.1.1"
      }
    },
    "global": {
      "version": "4.4.0",
      "resolved": "https://registry.npmjs.org/global/-/global-4.4.0.tgz",
      "integrity": "sha512-wv/LAoHdRE3BeTGz53FAamhGlPLhlssK45usmGFThIi4XqnBmjKQ16u+RNbP7WvigRZDxUsM0J3gcQ5yicaL0w==",
      "dev": true,
      "requires": {
        "min-document": "^2.19.0",
        "process": "^0.11.10"
      }
    },
    "global-agent": {
      "version": "2.1.12",
      "resolved": "https://registry.npmjs.org/global-agent/-/global-agent-2.1.12.tgz",
      "integrity": "sha512-caAljRMS/qcDo69X9BfkgrihGUgGx44Fb4QQToNQjsiWh+YlQ66uqYVAdA8Olqit+5Ng0nkz09je3ZzANMZcjg==",
      "dev": true,
      "optional": true,
      "requires": {
        "boolean": "^3.0.1",
        "core-js": "^3.6.5",
        "es6-error": "^4.1.1",
        "matcher": "^3.0.0",
        "roarr": "^2.15.3",
        "semver": "^7.3.2",
        "serialize-error": "^7.0.1"
      },
      "dependencies": {
        "core-js": {
          "version": "3.8.3",
          "resolved": "https://registry.npmjs.org/core-js/-/core-js-3.8.3.tgz",
          "integrity": "sha512-KPYXeVZYemC2TkNEkX/01I+7yd+nX3KddKwZ1Ww7SKWdI2wQprSgLmrTddT8nw92AjEklTsPBoSdQBhbI1bQ6Q==",
          "dev": true,
          "optional": true
        },
        "lru-cache": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz",
          "integrity": "sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==",
          "dev": true,
          "optional": true,
          "requires": {
            "yallist": "^4.0.0"
          }
        },
        "semver": {
          "version": "7.3.4",
          "resolved": "https://registry.npmjs.org/semver/-/semver-7.3.4.tgz",
          "integrity": "sha512-tCfb2WLjqFAtXn4KEdxIhalnRtoKFN7nAwj0B3ZXCbQloV2tq5eDbcTmT68JJD3nRJq24/XgxtQKFIpQdtvmVw==",
          "dev": true,
          "optional": true,
          "requires": {
            "lru-cache": "^6.0.0"
          }
        },
        "yallist": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
          "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==",
          "dev": true,
          "optional": true
        }
      }
    },
    "global-dirs": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/global-dirs/-/global-dirs-0.1.1.tgz",
      "integrity": "sha1-sxnA3UYH81PzvpzKTHL8FIxJ9EU=",
      "dev": true,
      "requires": {
        "ini": "^1.3.4"
      }
    },
    "global-modules": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/global-modules/-/global-modules-1.0.0.tgz",
      "integrity": "sha512-sKzpEkf11GpOFuw0Zzjzmt4B4UZwjOcG757PPvrfhxcLFbq0wpsgpOqxpxtxFiCG4DtG93M6XRVbF2oGdev7bg==",
      "dev": true,
      "requires": {
        "global-prefix": "^1.0.1",
        "is-windows": "^1.0.1",
        "resolve-dir": "^1.0.0"
      }
    },
    "global-prefix": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/global-prefix/-/global-prefix-1.0.2.tgz",
      "integrity": "sha1-2/dDxsFJklk8ZVVoy2btMsASLr4=",
      "dev": true,
      "requires": {
        "expand-tilde": "^2.0.2",
        "homedir-polyfill": "^1.0.1",
        "ini": "^1.3.4",
        "is-windows": "^1.0.1",
        "which": "^1.2.14"
      }
    },
    "global-tunnel-ng": {
      "version": "2.7.1",
      "resolved": "https://registry.npmjs.org/global-tunnel-ng/-/global-tunnel-ng-2.7.1.tgz",
      "integrity": "sha512-4s+DyciWBV0eK148wqXxcmVAbFVPqtc3sEtUE/GTQfuU80rySLcMhUmHKSHI7/LDj8q0gDYI1lIhRRB7ieRAqg==",
      "dev": true,
      "optional": true,
      "requires": {
        "encodeurl": "^1.0.2",
        "lodash": "^4.17.10",
        "npm-conf": "^1.1.3",
        "tunnel": "^0.0.6"
      }
    },
    "globals": {
      "version": "9.18.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-9.18.0.tgz",
      "integrity": "sha512-S0nG3CLEQiY/ILxqtztTWH/3iRRdyBLw6KMDxnKMchrtbj2OFmehVh0WUCfW3DUrIgx/qFrJPICrq4Z4sTR9UQ==",
      "dev": true
    },
    "globalthis": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/globalthis/-/globalthis-1.0.1.tgz",
      "integrity": "sha512-mJPRTc/P39NH/iNG4mXa9aIhNymaQikTrnspeCa2ZuJ+mH2QN/rXwtX3XwKrHqWgUQFbNZKtHM105aHzJalElw==",
      "dev": true,
      "optional": true,
      "requires": {
        "define-properties": "^1.1.3"
      }
    },
    "globule": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/globule/-/globule-0.1.0.tgz",
      "integrity": "sha1-2cjt3h2nnRJaFRt5UzuXhnY0auU=",
      "dev": true,
      "requires": {
        "glob": "~3.1.21",
        "lodash": "~1.0.1",
        "minimatch": "~0.2.11"
      },
      "dependencies": {
        "glob": {
          "version": "3.1.21",
          "resolved": "https://registry.npmjs.org/glob/-/glob-3.1.21.tgz",
          "integrity": "sha1-0p4KBV3qUTj00H7UDomC6DwgZs0=",
          "dev": true,
          "requires": {
            "graceful-fs": "~1.2.0",
            "inherits": "1",
            "minimatch": "~0.2.11"
          }
        },
        "graceful-fs": {
          "version": "1.2.3",
          "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-1.2.3.tgz",
          "integrity": "sha1-FaSAaldUfLLS2/J/QuiajDRRs2Q=",
          "dev": true
        },
        "inherits": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/inherits/-/inherits-1.0.2.tgz",
          "integrity": "sha1-ykMJ2t7mtUzAuNJH6NfHoJdb3Js=",
          "dev": true
        },
        "lodash": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/lodash/-/lodash-1.0.2.tgz",
          "integrity": "sha1-j1dWDIO1n8JwvT1WG2kAQ0MOJVE=",
          "dev": true
        },
        "minimatch": {
          "version": "0.2.14",
          "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-0.2.14.tgz",
          "integrity": "sha1-x054BXT2PG+aCQ6Q775u9TpqdWo=",
          "dev": true,
          "requires": {
            "lru-cache": "2",
            "sigmund": "~1.0.0"
          }
        }
      }
    },
    "glogg": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/glogg/-/glogg-1.0.2.tgz",
      "integrity": "sha512-5mwUoSuBk44Y4EshyiqcH95ZntbDdTQqA3QYSrxmzj28Ai0vXBGMH1ApSANH14j2sIRtqCEyg6PfsuP7ElOEDA==",
      "dev": true,
      "requires": {
        "sparkles": "^1.0.0"
      }
    },
    "got": {
      "version": "6.7.1",
      "resolved": "https://registry.npmjs.org/got/-/got-6.7.1.tgz",
      "integrity": "sha1-JAzQV4WpoY5WHcG0S0HHY+8ejbA=",
      "dev": true,
      "requires": {
        "create-error-class": "^3.0.0",
        "duplexer3": "^0.1.4",
        "get-stream": "^3.0.0",
        "is-redirect": "^1.0.0",
        "is-retry-allowed": "^1.0.0",
        "is-stream": "^1.0.0",
        "lowercase-keys": "^1.0.0",
        "safe-buffer": "^5.0.1",
        "timed-out": "^4.0.0",
        "unzip-response": "^2.0.1",
        "url-parse-lax": "^1.0.0"
      }
    },
    "graceful-fs": {
      "version": "4.2.4",
      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.4.tgz",
      "integrity": "sha512-WjKPNJF79dtJAVniUlGGWHYGz2jWxT6VhN/4m1NdkbZ2nOsEF+cI1Edgql5zCRhs/VsQYRvrXctxktVXZUkixw==",
      "dev": true
    },
    "graceful-fs-extra": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/graceful-fs-extra/-/graceful-fs-extra-2.0.0.tgz",
      "integrity": "sha1-fR5X/Mcm4rDMcH14tKzqVC+pvk4=",
      "dev": true,
      "requires": {
        "fs-extra": "^0.30.0",
        "graceful-ncp": "^3.0.0",
        "proxyquire": "^1.4.0"
      },
      "dependencies": {
        "fs-extra": {
          "version": "0.30.0",
          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-0.30.0.tgz",
          "integrity": "sha1-8jP/zAjU2n1DLapEl3aYnbHfk/A=",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.1.2",
            "jsonfile": "^2.1.0",
            "klaw": "^1.0.0",
            "path-is-absolute": "^1.0.0",
            "rimraf": "^2.2.8"
          }
        },
        "jsonfile": {
          "version": "2.4.0",
          "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-2.4.0.tgz",
          "integrity": "sha1-NzaitCi4e72gzIO1P6PWM6NcKug=",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.1.6"
          }
        }
      }
    },
    "graceful-ncp": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/graceful-ncp/-/graceful-ncp-3.0.0.tgz",
      "integrity": "sha1-WAXqJVhe+YTMyqgIajxTDuQSioo=",
      "dev": true,
      "requires": {
        "graceful-fs": "^4.1.4",
        "ncp": "^2.0.0",
        "proxyquire": "^1.4.0"
      }
    },
    "growly": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/growly/-/growly-1.3.0.tgz",
      "integrity": "sha1-8QdIy+dq+WS3yWyTxrzCivEgwIE=",
      "dev": true
    },
    "gulp": {
      "version": "3.9.1",
      "resolved": "https://registry.npmjs.org/gulp/-/gulp-3.9.1.tgz",
      "integrity": "sha1-VxzkWSjdQK9lFPxAEYZgFsE4RbQ=",
      "dev": true,
      "requires": {
        "archy": "^1.0.0",
        "chalk": "^1.0.0",
        "deprecated": "^0.0.1",
        "gulp-util": "^3.0.0",
        "interpret": "^1.0.0",
        "liftoff": "^2.1.0",
        "minimist": "^1.1.0",
        "orchestrator": "^0.3.0",
        "pretty-hrtime": "^1.0.0",
        "semver": "^4.1.0",
        "tildify": "^1.0.0",
        "v8flags": "^2.0.2",
        "vinyl-fs": "^0.3.0"
      }
    },
    "gulp-angular-templatecache": {
      "version": "1.9.1",
      "resolved": "https://registry.npmjs.org/gulp-angular-templatecache/-/gulp-angular-templatecache-1.9.1.tgz",
      "integrity": "sha1-YPYx6Xqqp2XZQuNwQuS/uxpd8kQ=",
      "dev": true,
      "requires": {
        "event-stream": "3.3.2",
        "gulp-concat": "2.6.0",
        "gulp-footer": "1.0.5",
        "gulp-header": "1.8.2",
        "gulp-util": "3.0.7",
        "js-string-escape": "~1.0.0"
      },
      "dependencies": {
        "dateformat": {
          "version": "1.0.12",
          "resolved": "https://registry.npmjs.org/dateformat/-/dateformat-1.0.12.tgz",
          "integrity": "sha1-nxJLZ1lMk3/3BpMuSmQsyo27/uk=",
          "dev": true,
          "requires": {
            "get-stdin": "^4.0.1",
            "meow": "^3.3.0"
          }
        },
        "gulp-util": {
          "version": "3.0.7",
          "resolved": "https://registry.npmjs.org/gulp-util/-/gulp-util-3.0.7.tgz",
          "integrity": "sha1-eJJcS4+LSQBawBoBHFV+YhiUHLs=",
          "dev": true,
          "requires": {
            "array-differ": "^1.0.0",
            "array-uniq": "^1.0.2",
            "beeper": "^1.0.0",
            "chalk": "^1.0.0",
            "dateformat": "^1.0.11",
            "fancy-log": "^1.1.0",
            "gulplog": "^1.0.0",
            "has-gulplog": "^0.1.0",
            "lodash._reescape": "^3.0.0",
            "lodash._reevaluate": "^3.0.0",
            "lodash._reinterpolate": "^3.0.0",
            "lodash.template": "^3.0.0",
            "minimist": "^1.1.0",
            "multipipe": "^0.1.2",
            "object-assign": "^3.0.0",
            "replace-ext": "0.0.1",
            "through2": "^2.0.0",
            "vinyl": "^0.5.0"
          }
        },
        "object-assign": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-3.0.0.tgz",
          "integrity": "sha1-m+3VygiXlJvKR+f/QIBi1Un1h/I=",
          "dev": true
        }
      }
    },
    "gulp-autoprefixer": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/gulp-autoprefixer/-/gulp-autoprefixer-3.1.1.tgz",
      "integrity": "sha1-dSMAUc0NFxND14O36bXREg7u+bA=",
      "dev": true,
      "requires": {
        "autoprefixer": "^6.0.0",
        "gulp-util": "^3.0.0",
        "postcss": "^5.0.4",
        "through2": "^2.0.0",
        "vinyl-sourcemaps-apply": "^0.2.0"
      }
    },
    "gulp-concat": {
      "version": "2.6.0",
      "resolved": "https://registry.npmjs.org/gulp-concat/-/gulp-concat-2.6.0.tgz",
      "integrity": "sha1-WFz7EVQR80h3MTEUBWa2qBxpy5E=",
      "dev": true,
      "requires": {
        "concat-with-sourcemaps": "^1.0.0",
        "gulp-util": "^3.0.1",
        "through2": "^0.6.3"
      },
      "dependencies": {
        "isarray": {
          "version": "0.0.1",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz",
          "integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=",
          "dev": true
        },
        "readable-stream": {
          "version": "1.0.34",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-1.0.34.tgz",
          "integrity": "sha1-Elgg40vIQtLyqq+v5MKRbuMsFXw=",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.1",
            "isarray": "0.0.1",
            "string_decoder": "~0.10.x"
          }
        },
        "string_decoder": {
          "version": "0.10.31",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz",
          "integrity": "sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=",
          "dev": true
        },
        "through2": {
          "version": "0.6.5",
          "resolved": "https://registry.npmjs.org/through2/-/through2-0.6.5.tgz",
          "integrity": "sha1-QaucZ7KdVyCQcUEOHXp6lozTrUg=",
          "dev": true,
          "requires": {
            "readable-stream": ">=1.0.33-1 <1.1.0-0",
            "xtend": ">=4.0.0 <4.1.0-0"
          }
        }
      }
    },
    "gulp-footer": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/gulp-footer/-/gulp-footer-1.0.5.tgz",
      "integrity": "sha1-6Eynd+Jmvnu8LUXS3w5+uo36PlQ=",
      "dev": true,
      "requires": {
        "event-stream": "*",
        "gulp-util": "*",
        "lodash.assign": "*"
      }
    },
    "gulp-header": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/gulp-header/-/gulp-header-1.8.2.tgz",
      "integrity": "sha1-OrIi9TcZ0tA9gdkTQlL+fVJCWqQ=",
      "dev": true,
      "requires": {
        "concat-with-sourcemaps": "*",
        "gulp-util": "*",
        "object-assign": "*",
        "through2": "^2.0.0"
      }
    },
    "gulp-notify": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/gulp-notify/-/gulp-notify-2.2.0.tgz",
      "integrity": "sha1-BGyChcKS6X7tThWgCcJsu+XO8TU=",
      "dev": true,
      "requires": {
        "gulp-util": "^3.0.2",
        "lodash.template": "^3.0.0",
        "node-notifier": "^4.1.0",
        "node.extend": "^1.1.3",
        "through2": "^0.6.3"
      },
      "dependencies": {
        "isarray": {
          "version": "0.0.1",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz",
          "integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=",
          "dev": true
        },
        "readable-stream": {
          "version": "1.0.34",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-1.0.34.tgz",
          "integrity": "sha1-Elgg40vIQtLyqq+v5MKRbuMsFXw=",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.1",
            "isarray": "0.0.1",
            "string_decoder": "~0.10.x"
          }
        },
        "string_decoder": {
          "version": "0.10.31",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz",
          "integrity": "sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=",
          "dev": true
        },
        "through2": {
          "version": "0.6.5",
          "resolved": "https://registry.npmjs.org/through2/-/through2-0.6.5.tgz",
          "integrity": "sha1-QaucZ7KdVyCQcUEOHXp6lozTrUg=",
          "dev": true,
          "requires": {
            "readable-stream": ">=1.0.33-1 <1.1.0-0",
            "xtend": ">=4.0.0 <4.1.0-0"
          }
        }
      }
    },
    "gulp-rename": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/gulp-rename/-/gulp-rename-1.4.0.tgz",
      "integrity": "sha512-swzbIGb/arEoFK89tPY58vg3Ok1bw+d35PfUNwWqdo7KM4jkmuGA78JiDNqR+JeZFaeeHnRg9N7aihX3YPmsyg==",
      "dev": true
    },
    "gulp-sass": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/gulp-sass/-/gulp-sass-3.2.1.tgz",
      "integrity": "sha512-UATbRpSDsyXCnpYSPBUEvdvtSEzksJs7/oQ0CujIpzKqKrO6vlnYwhX2UTsGrf4rNLwqlSSaM271It0uHYvJ3Q==",
      "dev": true,
      "requires": {
        "gulp-util": "^3.0",
        "lodash.clonedeep": "^4.3.2",
        "node-sass": "^4.8.3",
        "through2": "^2.0.0",
        "vinyl-sourcemaps-apply": "^0.2.0"
      },
      "dependencies": {
        "lodash.clonedeep": {
          "version": "4.5.0",
          "resolved": "https://registry.npmjs.org/lodash.clonedeep/-/lodash.clonedeep-4.5.0.tgz",
          "integrity": "sha1-4j8/nE+Pvd6HJSnBBxhXoIblzO8=",
          "dev": true
        }
      }
    },
    "gulp-sourcemaps": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/gulp-sourcemaps/-/gulp-sourcemaps-1.6.0.tgz",
      "integrity": "sha1-uG/zSdgBzrVuHZ59x7vLS33uYAw=",
      "dev": true,
      "requires": {
        "convert-source-map": "^1.1.1",
        "graceful-fs": "^4.1.2",
        "strip-bom": "^2.0.0",
        "through2": "^2.0.0",
        "vinyl": "^1.0.0"
      },
      "dependencies": {
        "strip-bom": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-2.0.0.tgz",
          "integrity": "sha1-YhmoVhZSBJHzV4i9vxRHqZx+aw4=",
          "dev": true,
          "requires": {
            "is-utf8": "^0.2.0"
          }
        },
        "vinyl": {
          "version": "1.2.0",
          "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-1.2.0.tgz",
          "integrity": "sha1-XIgDbPVl5d8FVYv8kR+GVt8hiIQ=",
          "dev": true,
          "requires": {
            "clone": "^1.0.0",
            "clone-stats": "^0.0.1",
            "replace-ext": "0.0.1"
          }
        }
      }
    },
    "gulp-uglify": {
      "version": "1.5.4",
      "resolved": "https://registry.npmjs.org/gulp-uglify/-/gulp-uglify-1.5.4.tgz",
      "integrity": "sha1-UkeI2HZm0J+dDCH7IXf5ADmmWMk=",
      "dev": true,
      "requires": {
        "deap": "^1.0.0",
        "fancy-log": "^1.0.0",
        "gulp-util": "^3.0.0",
        "isobject": "^2.0.0",
        "through2": "^2.0.0",
        "uglify-js": "2.6.4",
        "uglify-save-license": "^0.4.1",
        "vinyl-sourcemaps-apply": "^0.2.0"
      }
    },
    "gulp-util": {
      "version": "3.0.8",
      "resolved": "https://registry.npmjs.org/gulp-util/-/gulp-util-3.0.8.tgz",
      "integrity": "sha1-AFTh50RQLifATBh8PsxQXdVLu08=",
      "dev": true,
      "requires": {
        "array-differ": "^1.0.0",
        "array-uniq": "^1.0.2",
        "beeper": "^1.0.0",
        "chalk": "^1.0.0",
        "dateformat": "^2.0.0",
        "fancy-log": "^1.1.0",
        "gulplog": "^1.0.0",
        "has-gulplog": "^0.1.0",
        "lodash._reescape": "^3.0.0",
        "lodash._reevaluate": "^3.0.0",
        "lodash._reinterpolate": "^3.0.0",
        "lodash.template": "^3.0.0",
        "minimist": "^1.1.0",
        "multipipe": "^0.1.2",
        "object-assign": "^3.0.0",
        "replace-ext": "0.0.1",
        "through2": "^2.0.0",
        "vinyl": "^0.5.0"
      },
      "dependencies": {
        "object-assign": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-3.0.0.tgz",
          "integrity": "sha1-m+3VygiXlJvKR+f/QIBi1Un1h/I=",
          "dev": true
        }
      }
    },
    "gulplog": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/gulplog/-/gulplog-1.0.0.tgz",
      "integrity": "sha1-4oxNRdBey77YGDY86PnFkmIp/+U=",
      "dev": true,
      "requires": {
        "glogg": "^1.0.0"
      }
    },
    "har-schema": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/har-schema/-/har-schema-1.0.5.tgz",
      "integrity": "sha1-0mMTX0MwfALGAq/I/pWXDAFRNp4=",
      "dev": true
    },
    "har-validator": {
      "version": "4.2.1",
      "resolved": "https://registry.npmjs.org/har-validator/-/har-validator-4.2.1.tgz",
      "integrity": "sha1-M0gdDxu/9gDdID11gSpqX7oALio=",
      "dev": true,
      "requires": {
        "ajv": "^4.9.1",
        "har-schema": "^1.0.5"
      }
    },
    "has": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/has/-/has-1.0.3.tgz",
      "integrity": "sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==",
      "dev": true,
      "requires": {
        "function-bind": "^1.1.1"
      }
    },
    "has-ansi": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/has-ansi/-/has-ansi-2.0.0.tgz",
      "integrity": "sha1-NPUEnOHs3ysGSa8+8k5F7TVBbZE=",
      "dev": true,
      "requires": {
        "ansi-regex": "^2.0.0"
      }
    },
    "has-binary2": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/has-binary2/-/has-binary2-1.0.3.tgz",
      "integrity": "sha512-G1LWKhDSvhGeAQ8mPVQlqNcOB2sJdwATtZKl2pDKKHfpf/rYj24lkinxf69blJbnsvtqqNU+L3SL50vzZhXOnw==",
      "dev": true,
      "requires": {
        "isarray": "2.0.1"
      }
    },
    "has-cors": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/has-cors/-/has-cors-1.1.0.tgz",
      "integrity": "sha1-XkdHk/fqmEPRu5nCPu9J/xJv/zk=",
      "dev": true
    },
    "has-flag": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-1.0.0.tgz",
      "integrity": "sha1-nZ55MWXOAXoA8AQYxD+UKnsdEfo=",
      "dev": true
    },
    "has-gulplog": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/has-gulplog/-/has-gulplog-0.1.0.tgz",
      "integrity": "sha1-ZBTIKRNpfaUVkDl9r7EvIpZ4Ec4=",
      "dev": true,
      "requires": {
        "sparkles": "^1.0.0"
      }
    },
    "has-symbol-support-x": {
      "version": "1.4.2",
      "resolved": "https://registry.npmjs.org/has-symbol-support-x/-/has-symbol-support-x-1.4.2.tgz",
      "integrity": "sha512-3ToOva++HaW+eCpgqZrCfN51IPB+7bJNVT6CUATzueB5Heb8o6Nam0V3HG5dlDvZU1Gn5QLcbahiKw/XVk5JJw==",
      "dev": true
    },
    "has-to-string-tag-x": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/has-to-string-tag-x/-/has-to-string-tag-x-1.4.1.tgz",
      "integrity": "sha512-vdbKfmw+3LoOYVr+mtxHaX5a96+0f3DljYd8JOqvOLsf5mw2Otda2qCDT9qRqLAhrjyQ0h7ual5nOiASpsGNFw==",
      "dev": true,
      "requires": {
        "has-symbol-support-x": "^1.4.1"
      }
    },
    "has-unicode": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/has-unicode/-/has-unicode-2.0.1.tgz",
      "integrity": "sha1-4Ob+aijPUROIVeCG0Wkedx3iqLk="
    },
    "has-value": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/has-value/-/has-value-1.0.0.tgz",
      "integrity": "sha1-GLKB2lhbHFxR3vJMkw7SmgvmsXc=",
      "dev": true,
      "requires": {
        "get-value": "^2.0.6",
        "has-values": "^1.0.0",
        "isobject": "^3.0.0"
      },
      "dependencies": {
        "isobject": {
          "version": "3.0.1",
          "resolved": "https://registry.npmjs.org/isobject/-/isobject-3.0.1.tgz",
          "integrity": "sha1-TkMekrEalzFjaqH5yNHMvP2reN8=",
          "dev": true
        }
      }
    },
    "has-values": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/has-values/-/has-values-1.0.0.tgz",
      "integrity": "sha1-lbC2P+whRmGab+V/51Yo1aOe/k8=",
      "dev": true,
      "requires": {
        "is-number": "^3.0.0",
        "kind-of": "^4.0.0"
      },
      "dependencies": {
        "is-buffer": {
          "version": "1.1.6",
          "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",
          "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w==",
          "dev": true
        },
        "is-number": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-number/-/is-number-3.0.0.tgz",
          "integrity": "sha1-JP1iAaR4LPUFYcgQJ2r8fRLXEZU=",
          "dev": true,
          "requires": {
            "kind-of": "^3.0.2"
          },
          "dependencies": {
            "kind-of": {
              "version": "3.2.2",
              "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
              "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
              "dev": true,
              "requires": {
                "is-buffer": "^1.1.5"
              }
            }
          }
        },
        "kind-of": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-4.0.0.tgz",
          "integrity": "sha1-IIE989cSkosgc3hpGkUGb65y3Vc=",
          "dev": true,
          "requires": {
            "is-buffer": "^1.1.5"
          }
        }
      }
    },
    "has-yarn": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/has-yarn/-/has-yarn-2.1.0.tgz",
      "integrity": "sha512-UqBRqi4ju7T+TqGNdqAO0PaSVGsDGJUBQvk9eUWNGRY1CFGDzYhLWoM7JQEemnlvVcv/YEmc2wNW8BC24EnUsw==",
      "dev": true
    },
    "hash-base": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/hash-base/-/hash-base-3.1.0.tgz",
      "integrity": "sha512-1nmYp/rhMDiE7AYkDw+lLwlAzz0AntGIe51F3RfFfEqyQ3feY2eI/NcwC6umIQVOASPMsWJLJScWKSSvzL9IVA==",
      "dev": true,
      "requires": {
        "inherits": "^2.0.4",
        "readable-stream": "^3.6.0",
        "safe-buffer": "^5.2.0"
      },
      "dependencies": {
        "safe-buffer": {
          "version": "5.2.1",
          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
          "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==",
          "dev": true
        }
      }
    },
    "hash.js": {
      "version": "1.1.7",
      "resolved": "https://registry.npmjs.org/hash.js/-/hash.js-1.1.7.tgz",
      "integrity": "sha512-taOaskGt4z4SOANNseOviYDvjEJinIkRgmp7LbKP2YTTmVxWBl87s/uzK9r+44BclBSp2X7K1hqeNfz9JbBeXA==",
      "dev": true,
      "requires": {
        "inherits": "^2.0.3",
        "minimalistic-assert": "^1.0.1"
      }
    },
    "hawk": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/hawk/-/hawk-3.1.3.tgz",
      "integrity": "sha1-B4REvXwWQLD+VA0sm3PVlnjo4cQ=",
      "dev": true,
      "requires": {
        "boom": "2.x.x",
        "cryptiles": "2.x.x",
        "hoek": "2.x.x",
        "sntp": "1.x.x"
      }
    },
    "hmac-drbg": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/hmac-drbg/-/hmac-drbg-1.0.1.tgz",
      "integrity": "sha1-0nRXAQJabHdabFRXk+1QL8DGSaE=",
      "dev": true,
      "requires": {
        "hash.js": "^1.0.3",
        "minimalistic-assert": "^1.0.0",
        "minimalistic-crypto-utils": "^1.0.1"
      }
    },
    "hoek": {
      "version": "2.16.3",
      "resolved": "https://registry.npmjs.org/hoek/-/hoek-2.16.3.tgz",
      "integrity": "sha1-ILt0A9POo5jpHcRxCo/xuCdKJe0=",
      "dev": true
    },
    "home-or-tmp": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/home-or-tmp/-/home-or-tmp-2.0.0.tgz",
      "integrity": "sha1-42w/LSyufXRqhX440Y1fMqeILbg=",
      "dev": true,
      "requires": {
        "os-homedir": "^1.0.0",
        "os-tmpdir": "^1.0.1"
      }
    },
    "homedir-polyfill": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/homedir-polyfill/-/homedir-polyfill-1.0.3.tgz",
      "integrity": "sha512-eSmmWE5bZTK2Nou4g0AI3zZ9rswp7GRKoKXS1BLUkvPviOqs4YTN1djQIqrXy9k5gEtdLPy86JjRwsNM9tnDcA==",
      "dev": true,
      "requires": {
        "parse-passwd": "^1.0.0"
      }
    },
    "hosted-git-info": {
      "version": "2.8.8",
      "resolved": "https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-2.8.8.tgz",
      "integrity": "sha512-f/wzC2QaWBs7t9IYqB4T3sR1xviIViXJRJTWBlx2Gf3g0Xi5vI7Yy4koXQ1c9OYDGHN9sBy1DQ2AB8fqZBWhUg==",
      "dev": true
    },
    "htmlescape": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/htmlescape/-/htmlescape-1.1.1.tgz",
      "integrity": "sha1-OgPtwiFLyjtmQko+eVk0lQnLA1E=",
      "dev": true
    },
    "http-cache-semantics": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/http-cache-semantics/-/http-cache-semantics-4.1.0.tgz",
      "integrity": "sha512-carPklcUh7ROWRK7Cv27RPtdhYhUsela/ue5/jKzjegVvXDqM2ILE9Q2BGn9JZJh1g87cp56su/FgQSzcWS8cQ==",
      "dev": true
    },
    "http-errors": {
      "version": "1.7.3",
      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.7.3.tgz",
      "integrity": "sha512-ZTTX0MWrsQ2ZAhA1cejAwDLycFsd7I7nVtnkT3Ol0aqodaKW+0CTZDQ1uBv5whptCnc8e8HeRRJxRs0kmm/Qfw==",
      "dev": true,
      "requires": {
        "depd": "~1.1.2",
        "inherits": "2.0.4",
        "setprototypeof": "1.1.1",
        "statuses": ">= 1.5.0 < 2",
        "toidentifier": "1.0.0"
      },
      "dependencies": {
        "statuses": {
          "version": "1.5.0",
          "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.5.0.tgz",
          "integrity": "sha1-Fhx9rBd2Wf2YEfQ3cfqZOBR4Yow=",
          "dev": true
        }
      }
    },
    "http-parser-js": {
      "version": "0.5.2",
      "resolved": "https://registry.npmjs.org/http-parser-js/-/http-parser-js-0.5.2.tgz",
      "integrity": "sha512-opCO9ASqg5Wy2FNo7A0sxy71yGbbkJJXLdgMK04Tcypw9jr2MgWbyubb0+WdmDmGnFflO7fRbqbaihh/ENDlRQ==",
      "dev": true
    },
    "http-proxy": {
      "version": "1.18.1",
      "resolved": "https://registry.npmjs.org/http-proxy/-/http-proxy-1.18.1.tgz",
      "integrity": "sha512-7mz/721AbnJwIVbnaSv1Cz3Am0ZLT/UBwkC92VlxhXv/k/BBQfM2fXElQNC27BVGr0uwUpplYPQM9LnaBMR5NQ==",
      "dev": true,
      "requires": {
        "eventemitter3": "^4.0.0",
        "follow-redirects": "^1.0.0",
        "requires-port": "^1.0.0"
      }
    },
    "http-signature": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/http-signature/-/http-signature-1.1.1.tgz",
      "integrity": "sha1-33LiZwZs0Kxn+3at+OE0qPvPkb8=",
      "dev": true,
      "requires": {
        "assert-plus": "^0.2.0",
        "jsprim": "^1.2.2",
        "sshpk": "^1.7.0"
      }
    },
    "http2-wrapper": {
      "version": "1.0.0-beta.5.2",
      "resolved": "https://registry.npmjs.org/http2-wrapper/-/http2-wrapper-1.0.0-beta.5.2.tgz",
      "integrity": "sha512-xYz9goEyBnC8XwXDTuC/MZ6t+MrKVQZOk4s7+PaDkwIsQd8IwqvM+0M6bA/2lvG8GHXcPdf+MejTUeO2LCPCeQ==",
      "dev": true,
      "requires": {
        "quick-lru": "^5.1.1",
        "resolve-alpn": "^1.0.0"
      }
    },
    "https-browserify": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/https-browserify/-/https-browserify-0.0.1.tgz",
      "integrity": "sha1-P5E2XKvmC3ftDruiS0VOPgnZWoI=",
      "dev": true
    },
    "iconv-lite": {
      "version": "0.4.24",
      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz",
      "integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==",
      "dev": true,
      "requires": {
        "safer-buffer": ">= 2.1.2 < 3"
      }
    },
    "ieee754": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/ieee754/-/ieee754-1.2.1.tgz",
      "integrity": "sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA=="
    },
    "ignore-walk": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/ignore-walk/-/ignore-walk-3.0.3.tgz",
      "integrity": "sha512-m7o6xuOaT1aqheYHKf8W6J5pYH85ZI9w077erOzLje3JsB1gkafkAhHHY19dqjulgIZHFm32Cp5uNZgcQqdJKw==",
      "dev": true,
      "requires": {
        "minimatch": "^3.0.4"
      }
    },
    "immutable": {
      "version": "3.8.2",
      "resolved": "https://registry.npmjs.org/immutable/-/immutable-3.8.2.tgz",
      "integrity": "sha1-wkOZUUVbs5kT2vKBN28VMOEErfM=",
      "dev": true
    },
    "import-lazy": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/import-lazy/-/import-lazy-2.1.0.tgz",
      "integrity": "sha1-BWmOPUXIjo1+nZLLBYTnfwlvPkM=",
      "dev": true
    },
    "imurmurhash": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
      "integrity": "sha1-khi5srkoojixPcT7a21XbyMUU+o=",
      "dev": true
    },
    "in-publish": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/in-publish/-/in-publish-2.0.1.tgz",
      "integrity": "sha512-oDM0kUSNFC31ShNxHKUyfZKy8ZeXZBWMjMdZHKLOk13uvT27VTL/QzRGfRUcevJhpkZAvlhPYuXkF7eNWrtyxQ==",
      "dev": true
    },
    "indent-string": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/indent-string/-/indent-string-2.1.0.tgz",
      "integrity": "sha1-ji1INIdCEhtKghi3oTfppSBJ3IA=",
      "dev": true,
      "requires": {
        "repeating": "^2.0.0"
      }
    },
    "indexof": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/indexof/-/indexof-0.0.1.tgz",
      "integrity": "sha1-gtwzbSMrkGIXnQWrMpOmYFn9Q10=",
      "dev": true
    },
    "inflight": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
      "integrity": "sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=",
      "dev": true,
      "requires": {
        "once": "^1.3.0",
        "wrappy": "1"
      }
    },
    "inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ=="
    },
    "ini": {
      "version": "1.3.8",
      "resolved": "https://registry.npmjs.org/ini/-/ini-1.3.8.tgz",
      "integrity": "sha512-JV/yugV2uzW5iMRSiZAyDtQd+nxtUnjeLt0acNdw98kKLrvuRVyB80tsREOE7yvGVgalhZ6RNXCmEHkUKBKxew=="
    },
    "inline-source-map": {
      "version": "0.6.2",
      "resolved": "https://registry.npmjs.org/inline-source-map/-/inline-source-map-0.6.2.tgz",
      "integrity": "sha1-+Tk0ccGKedFyT4Y/o4tYY3Ct4qU=",
      "dev": true,
      "requires": {
        "source-map": "~0.5.3"
      }
    },
    "insert-module-globals": {
      "version": "7.2.1",
      "resolved": "https://registry.npmjs.org/insert-module-globals/-/insert-module-globals-7.2.1.tgz",
      "integrity": "sha512-ufS5Qq9RZN+Bu899eA9QCAYThY+gGW7oRkmb0vC93Vlyu/CFGcH0OYPEjVkDXA5FEbTt1+VWzdoOD3Ny9N+8tg==",
      "dev": true,
      "requires": {
        "JSONStream": "^1.0.3",
        "acorn-node": "^1.5.2",
        "combine-source-map": "^0.8.0",
        "concat-stream": "^1.6.1",
        "is-buffer": "^1.1.0",
        "path-is-absolute": "^1.0.1",
        "process": "~0.11.0",
        "through2": "^2.0.0",
        "undeclared-identifiers": "^1.1.2",
        "xtend": "^4.0.0"
      },
      "dependencies": {
        "concat-stream": {
          "version": "1.6.2",
          "resolved": "https://registry.npmjs.org/concat-stream/-/concat-stream-1.6.2.tgz",
          "integrity": "sha512-27HBghJxjiZtIk3Ycvn/4kbJk/1uZuJFfuPEns6LaEvpvG1f0hTea8lilrouyo9mVc2GWdcEZ8OLoGmSADlrCw==",
          "dev": true,
          "requires": {
            "buffer-from": "^1.0.0",
            "inherits": "^2.0.3",
            "readable-stream": "^2.2.2",
            "typedarray": "^0.0.6"
          }
        },
        "is-buffer": {
          "version": "1.1.6",
          "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",
          "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w==",
          "dev": true
        },
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "interpret": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/interpret/-/interpret-1.4.0.tgz",
      "integrity": "sha512-agE4QfB2Lkp9uICn7BAqoscw4SZP9kTE2hxiFI3jBPmXJfdqiahTbUuKGsMoN2GtqL9AxhYioAcVvgsb1HvRbA==",
      "dev": true
    },
    "invariant": {
      "version": "2.2.4",
      "resolved": "https://registry.npmjs.org/invariant/-/invariant-2.2.4.tgz",
      "integrity": "sha512-phJfQVBuaJM5raOpJjSfkiD6BpbCE4Ns//LaXl6wGYtUBY83nWS6Rf9tXm2e8VaK60JEjYldbPif/A2B1C2gNA==",
      "dev": true,
      "requires": {
        "loose-envify": "^1.0.0"
      }
    },
    "invert-kv": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/invert-kv/-/invert-kv-1.0.0.tgz",
      "integrity": "sha1-EEqOSqym09jNFXqO+L+rLXo//bY=",
      "dev": true
    },
    "is": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/is/-/is-3.3.0.tgz",
      "integrity": "sha512-nW24QBoPcFGGHJGUwnfpI7Yc5CdqWNdsyHQszVE/z2pKHXzh7FZ5GWhJqSyaQ9wMkQnsTx+kAI8bHlCX4tKdbg==",
      "dev": true
    },
    "is-absolute": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-absolute/-/is-absolute-1.0.0.tgz",
      "integrity": "sha512-dOWoqflvcydARa360Gvv18DZ/gRuHKi2NU/wU5X1ZFzdYfH29nkiNZsF3mp4OJ3H4yo9Mx8A/uAGNzpzPN3yBA==",
      "dev": true,
      "requires": {
        "is-relative": "^1.0.0",
        "is-windows": "^1.0.1"
      }
    },
    "is-accessor-descriptor": {
      "version": "0.1.6",
      "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-0.1.6.tgz",
      "integrity": "sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=",
      "dev": true,
      "requires": {
        "kind-of": "^3.0.2"
      }
    },
    "is-arrayish": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz",
      "integrity": "sha1-d8mYQFJ6qOyxqLppe4BkWnqSap0=",
      "dev": true
    },
    "is-binary-path": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
      "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
      "dev": true,
      "requires": {
        "binary-extensions": "^2.0.0"
      }
    },
    "is-buffer": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-2.0.5.tgz",
      "integrity": "sha512-i2R6zNFDwgEHJyQUtJEk0XFi1i0dPFn/oqjK3/vPCcDeJvW5NQ83V8QbicfF1SupOaB0h8ntgBC2YiE7dfyctQ==",
      "dev": true
    },
    "is-bzip2": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-bzip2/-/is-bzip2-1.0.0.tgz",
      "integrity": "sha1-XuWOqlounIDiFAe+3yOuWsCRs/w=",
      "dev": true
    },
    "is-ci": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/is-ci/-/is-ci-1.2.1.tgz",
      "integrity": "sha512-s6tfsaQaQi3JNciBH6shVqEDvhGut0SUXr31ag8Pd8BBbVVlcGfWhpPmEOoM6RJ5TFhbypvf5yyRw/VXW1IiWg==",
      "dev": true,
      "requires": {
        "ci-info": "^1.5.0"
      }
    },
    "is-core-module": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.2.0.tgz",
      "integrity": "sha512-XRAfAdyyY5F5cOXn7hYQDqh2Xmii+DEfIcQGxK/uNwMHhIkPWO0g8msXcbzLe+MpGoR951MlqM/2iIlU4vKDdQ==",
      "dev": true,
      "requires": {
        "has": "^1.0.3"
      }
    },
    "is-data-descriptor": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-0.1.4.tgz",
      "integrity": "sha1-C17mSDiOLIYCgueT8YVv7D8wG1Y=",
      "dev": true,
      "requires": {
        "kind-of": "^3.0.2"
      }
    },
    "is-descriptor": {
      "version": "0.1.6",
      "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-0.1.6.tgz",
      "integrity": "sha512-avDYr0SB3DwO9zsMov0gKCESFYqCnE4hq/4z3TdUlukEy5t9C0YRq7HLrsN52NAcqXKaepeCD0n+B0arnVG3Hg==",
      "dev": true,
      "requires": {
        "is-accessor-descriptor": "^0.1.6",
        "is-data-descriptor": "^0.1.4",
        "kind-of": "^5.0.0"
      },
      "dependencies": {
        "kind-of": {
          "version": "5.1.0",
          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-5.1.0.tgz",
          "integrity": "sha512-NGEErnH6F2vUuXDh+OlbcKW7/wOcfdRHaZ7VWtqCztfHri/++YKmP51OdWeGPuqCOba6kk2OTe5d02VmTB80Pw==",
          "dev": true
        }
      }
    },
    "is-docker": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-docker/-/is-docker-2.1.1.tgz",
      "integrity": "sha512-ZOoqiXfEwtGknTiuDEy8pN2CfE3TxMHprvNer1mXiqwkOT77Rw3YVrUQ52EqAOU3QAWDQ+bQdx7HJzrv7LS2Hw==",
      "dev": true
    },
    "is-dotfile": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/is-dotfile/-/is-dotfile-1.0.3.tgz",
      "integrity": "sha1-pqLzL/0t+wT1yiXs0Pa4PPeYoeE=",
      "dev": true
    },
    "is-equal-shallow": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/is-equal-shallow/-/is-equal-shallow-0.1.3.tgz",
      "integrity": "sha1-IjgJj8Ih3gvPpdnqxMRdY4qhxTQ=",
      "dev": true,
      "requires": {
        "is-primitive": "^2.0.0"
      }
    },
    "is-extendable": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/is-extendable/-/is-extendable-0.1.1.tgz",
      "integrity": "sha1-YrEQ4omkcUGOPsNqYX1HLjAd/Ik=",
      "dev": true
    },
    "is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha1-qIwCU1eR8C7TfHahueqXc8gz+MI=",
      "dev": true
    },
    "is-finite": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-finite/-/is-finite-1.1.0.tgz",
      "integrity": "sha512-cdyMtqX/BOqqNBBiKlIVkytNHm49MtMlYyn1zxzvJKWmFMlGzm+ry5BBfYyeY9YmNKbRSo/o7OX9w9ale0wg3w==",
      "dev": true
    },
    "is-fullwidth-code-point": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
      "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8="
    },
    "is-function": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/is-function/-/is-function-1.0.2.tgz",
      "integrity": "sha512-lw7DUp0aWXYg+CBCN+JKkcE0Q2RayZnSvnZBlwgxHBQhqt5pZNVy4Ri7H9GmmXkdu7LUthszM+Tor1u/2iBcpQ==",
      "dev": true
    },
    "is-glob": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.1.tgz",
      "integrity": "sha512-5G0tKtBTFImOqDnLB2hG6Bp2qcKEFduo4tZu9MT/H6NQv/ghhy30o55ufafxJ/LdH79LLs2Kfrn85TLKyA7BUg==",
      "dev": true,
      "requires": {
        "is-extglob": "^2.1.1"
      }
    },
    "is-gzip": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-gzip/-/is-gzip-1.0.0.tgz",
      "integrity": "sha1-bKiwe5nHeZgCWQDlVc7Y7YCHmoM=",
      "dev": true
    },
    "is-hex-prefixed": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-hex-prefixed/-/is-hex-prefixed-1.0.0.tgz",
      "integrity": "sha1-fY035q135dEnFIkTxXPggtd39VQ=",
      "dev": true
    },
    "is-installed-globally": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/is-installed-globally/-/is-installed-globally-0.1.0.tgz",
      "integrity": "sha1-Df2Y9akRFxbdU13aZJL2e/PSWoA=",
      "dev": true,
      "requires": {
        "global-dirs": "^0.1.0",
        "is-path-inside": "^1.0.0"
      }
    },
    "is-interactive": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-interactive/-/is-interactive-1.0.0.tgz",
      "integrity": "sha512-2HvIEKRoqS62guEC+qBjpvRubdX910WCMuJTZ+I9yvqKU2/12eSL549HMwtabb4oupdj2sMP50k+XJfB/8JE6w==",
      "dev": true
    },
    "is-natural-number": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-natural-number/-/is-natural-number-2.1.1.tgz",
      "integrity": "sha1-fUxXKDd+84bD4ZSpkRv1fG3DNec=",
      "dev": true
    },
    "is-npm": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-npm/-/is-npm-1.0.0.tgz",
      "integrity": "sha1-8vtjpl5JBbQGyGBydloaTceTufQ=",
      "dev": true
    },
    "is-number": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
      "dev": true
    },
    "is-number-like": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/is-number-like/-/is-number-like-1.0.8.tgz",
      "integrity": "sha512-6rZi3ezCyFcn5L71ywzz2bS5b2Igl1En3eTlZlvKjpz1n3IZLAYMbKYAIQgFmEu0GENg92ziU/faEOA/aixjbA==",
      "dev": true,
      "requires": {
        "lodash.isfinite": "^3.3.2"
      }
    },
    "is-obj": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/is-obj/-/is-obj-1.0.1.tgz",
      "integrity": "sha1-PkcprB9f3gJc19g6iW2rn09n2w8=",
      "dev": true
    },
    "is-object": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/is-object/-/is-object-1.0.2.tgz",
      "integrity": "sha512-2rRIahhZr2UWb45fIOuvZGpFtz0TyOZLf32KxBbSoUCeZR495zCKlWUKKUByk3geS2eAs7ZAABt0Y/Rx0GiQGA==",
      "dev": true
    },
    "is-path-inside": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/is-path-inside/-/is-path-inside-1.0.1.tgz",
      "integrity": "sha1-jvW33lBDej/cprToZe96pVy0gDY=",
      "dev": true,
      "requires": {
        "path-is-inside": "^1.0.1"
      }
    },
    "is-plain-object": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/is-plain-object/-/is-plain-object-2.0.4.tgz",
      "integrity": "sha512-h5PpgXkWitc38BBMYawTYMWJHFZJVnBquFE57xFpjB8pJFiF6gZ+bU+WyI/yqXiFR5mdLsgYNaPe8uao6Uv9Og==",
      "dev": true,
      "requires": {
        "isobject": "^3.0.1"
      },
      "dependencies": {
        "isobject": {
          "version": "3.0.1",
          "resolved": "https://registry.npmjs.org/isobject/-/isobject-3.0.1.tgz",
          "integrity": "sha1-TkMekrEalzFjaqH5yNHMvP2reN8=",
          "dev": true
        }
      }
    },
    "is-posix-bracket": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/is-posix-bracket/-/is-posix-bracket-0.1.1.tgz",
      "integrity": "sha1-MzTceXdDaOkvAW5vvAqI9c1ua8Q=",
      "dev": true
    },
    "is-primitive": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/is-primitive/-/is-primitive-2.0.0.tgz",
      "integrity": "sha1-IHurkWOEmcB7Kt8kCkGochADRXU=",
      "dev": true
    },
    "is-redirect": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-redirect/-/is-redirect-1.0.0.tgz",
      "integrity": "sha1-HQPd7VO9jbDzDCbk+V02/HyH3CQ=",
      "dev": true
    },
    "is-relative": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-relative/-/is-relative-1.0.0.tgz",
      "integrity": "sha512-Kw/ReK0iqwKeu0MITLFuj0jbPAmEiOsIwyIXvvbfa6QfmN9pkD1M+8pdk7Rl/dTKbH34/XBFMbgD4iMJhLQbGA==",
      "dev": true,
      "requires": {
        "is-unc-path": "^1.0.0"
      }
    },
    "is-retry-allowed": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/is-retry-allowed/-/is-retry-allowed-1.2.0.tgz",
      "integrity": "sha512-RUbUeKwvm3XG2VYamhJL1xFktgjvPzL0Hq8C+6yrWIswDy3BIXGqCxhxkc30N9jqK311gVU137K8Ei55/zVJRg==",
      "dev": true
    },
    "is-stream": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-stream/-/is-stream-1.1.0.tgz",
      "integrity": "sha1-EtSj3U5o4Lec6428hBc66A2RykQ=",
      "dev": true
    },
    "is-tar": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-tar/-/is-tar-1.0.0.tgz",
      "integrity": "sha1-L2suF5LB9bs2UZrKqdZcDSb+hT0=",
      "dev": true
    },
    "is-typedarray": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz",
      "integrity": "sha1-5HnICFjfDBsR3dppQPlgEfzaSpo=",
      "dev": true
    },
    "is-unc-path": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-unc-path/-/is-unc-path-1.0.0.tgz",
      "integrity": "sha512-mrGpVd0fs7WWLfVsStvgF6iEJnbjDFZh9/emhRDcGWTduTfNHd9CHeUwH3gYIjdbwo4On6hunkztwOaAw0yllQ==",
      "dev": true,
      "requires": {
        "unc-path-regex": "^0.1.2"
      }
    },
    "is-utf8": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/is-utf8/-/is-utf8-0.2.1.tgz",
      "integrity": "sha1-Sw2hRCEE0bM2NA6AeX6GXPOffXI=",
      "dev": true
    },
    "is-valid-glob": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/is-valid-glob/-/is-valid-glob-0.3.0.tgz",
      "integrity": "sha1-1LVcafUYhvm2XHDWwmItN+KfSP4=",
      "dev": true
    },
    "is-windows": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/is-windows/-/is-windows-1.0.2.tgz",
      "integrity": "sha512-eXK1UInq2bPmjyX6e3VHIzMLobc4J94i4AWn+Hpq3OU5KkrRC96OAcR3PRJ/pGu6m8TRnBHP9dkXQVsT/COVIA==",
      "dev": true
    },
    "is-wsl": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-wsl/-/is-wsl-1.1.0.tgz",
      "integrity": "sha1-HxbkqiKwTRM2tmGIpmrzxgDDpm0=",
      "dev": true
    },
    "is-yarn-global": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/is-yarn-global/-/is-yarn-global-0.3.0.tgz",
      "integrity": "sha512-VjSeb/lHmkoyd8ryPVIKvOCn4D1koMqY+vqyjjUfc3xyKtP4dYOxM44sZrnqQSzSds3xyOrUTLTC9LVCVgLngw==",
      "dev": true
    },
    "is-zip": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-zip/-/is-zip-1.0.0.tgz",
      "integrity": "sha1-R7Co/004p2QxzP2ZqOFaTIa6IyU=",
      "dev": true
    },
    "isarray": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/isarray/-/isarray-2.0.1.tgz",
      "integrity": "sha1-o32U7ZzaLVmGXJ92/llu4fM4dB4=",
      "dev": true
    },
    "isbinaryfile": {
      "version": "4.0.6",
      "resolved": "https://registry.npmjs.org/isbinaryfile/-/isbinaryfile-4.0.6.tgz",
      "integrity": "sha512-ORrEy+SNVqUhrCaal4hA4fBzhggQQ+BaLntyPOdoEiwlKZW9BZiJXjg3RMiruE4tPEI3pyVPpySHQF/dKWperg==",
      "dev": true
    },
    "isexe": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
      "integrity": "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA=",
      "dev": true
    },
    "isobject": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/isobject/-/isobject-2.1.0.tgz",
      "integrity": "sha1-8GVWEJaj8dou9GJy+BXIQNh+DIk=",
      "dev": true,
      "requires": {
        "isarray": "1.0.0"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        }
      }
    },
    "isstream": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/isstream/-/isstream-0.1.2.tgz",
      "integrity": "sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo=",
      "dev": true
    },
    "isurl": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/isurl/-/isurl-1.0.0.tgz",
      "integrity": "sha512-1P/yWsxPlDtn7QeRD+ULKQPaIaN6yF368GZ2vDfv0AL0NwpStafjWCDDdn0k8wgFMWpVAqG7oJhxHnlud42i9w==",
      "dev": true,
      "requires": {
        "has-to-string-tag-x": "^1.2.0",
        "is-object": "^1.0.1"
      }
    },
    "jake": {
      "version": "10.8.2",
      "resolved": "https://registry.npmjs.org/jake/-/jake-10.8.2.tgz",
      "integrity": "sha512-eLpKyrfG3mzvGE2Du8VoPbeSkRry093+tyNjdYaBbJS9v17knImYGNXQCUV0gLxQtF82m3E8iRb/wdSQZLoq7A==",
      "dev": true,
      "requires": {
        "async": "0.9.x",
        "chalk": "^2.4.2",
        "filelist": "^1.0.1",
        "minimatch": "^3.0.4"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "async": {
          "version": "0.9.2",
          "resolved": "https://registry.npmjs.org/async/-/async-0.9.2.tgz",
          "integrity": "sha1-rqdNXmHB+JlhO/ZL2mbUx48v0X0=",
          "dev": true
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "dev": true,
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          }
        },
        "has-flag": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
          "integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0=",
          "dev": true
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "jquery": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/jquery/-/jquery-3.0.0.tgz",
      "integrity": "sha1-laKpVBKRqfgZ4Bb4W6JHEW0D5Ks=",
      "dev": true
    },
    "js-base64": {
      "version": "2.6.4",
      "resolved": "https://registry.npmjs.org/js-base64/-/js-base64-2.6.4.tgz",
      "integrity": "sha512-pZe//GGmwJndub7ZghVHz7vjb2LgC1m8B07Au3eYqeqv9emhESByMXxaEgkUkEqJe87oBbSniGYoQNIBklc7IQ==",
      "dev": true
    },
    "js-joda": {
      "version": "1.11.0",
      "resolved": "https://registry.npmjs.org/js-joda/-/js-joda-1.11.0.tgz",
      "integrity": "sha512-/HJpRhwP2fPyuSsCaZuoVJuaSIt8tUXykV4wOMRXrFk7RP9h9VWaFdS9YHKdMepxb/3TdXpL6IhfC9L0sqYVBw==",
      "dev": true
    },
    "js-sha256": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/js-sha256/-/js-sha256-0.9.0.tgz",
      "integrity": "sha512-sga3MHh9sgQN2+pJ9VYZ+1LPwXOxuBJBA5nrR5/ofPfuiJBE2hnjsaN8se8JznOmGLN2p49Pe5U/ttafcs/apA==",
      "dev": true
    },
    "js-sha3": {
      "version": "0.8.0",
      "resolved": "https://registry.npmjs.org/js-sha3/-/js-sha3-0.8.0.tgz",
      "integrity": "sha512-gF1cRrHhIzNfToc802P800N8PpXS+evLLXfsVpowqmAFR9uwbi89WvXg2QspOmXL8QL86J4T1EpFu+yUkwJY3Q==",
      "dev": true
    },
    "js-sha512": {
      "version": "0.8.0",
      "resolved": "https://registry.npmjs.org/js-sha512/-/js-sha512-0.8.0.tgz",
      "integrity": "sha512-PWsmefG6Jkodqt+ePTvBZCSMFgN7Clckjd0O7su3I0+BW2QWUTJNzjktHsztGLhncP2h8mcF9V9Y2Ha59pAViQ==",
      "dev": true
    },
    "js-string-escape": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/js-string-escape/-/js-string-escape-1.0.1.tgz",
      "integrity": "sha1-4mJbrbwNZ8dTPp7cEGjFh65BN+8=",
      "dev": true
    },
    "js-tokens": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-3.0.2.tgz",
      "integrity": "sha1-mGbfOVECEw449/mWvOtlRDIJwls=",
      "dev": true
    },
    "js-yaml": {
      "version": "3.14.1",
      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-3.14.1.tgz",
      "integrity": "sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==",
      "dev": true,
      "requires": {
        "argparse": "^1.0.7",
        "esprima": "^4.0.0"
      }
    },
    "jsbn": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/jsbn/-/jsbn-0.1.1.tgz",
      "integrity": "sha1-peZUwuWi3rXyAdls77yoDA7y9RM=",
      "dev": true
    },
    "jsesc": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-0.5.0.tgz",
      "integrity": "sha1-597mbjXW/Bb3EP6R1c9p9w8IkR0=",
      "dev": true
    },
    "json-buffer": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.0.tgz",
      "integrity": "sha1-Wx85evx11ne96Lz8Dkfh+aPZqJg=",
      "dev": true
    },
    "json-schema": {
      "version": "0.2.3",
      "resolved": "https://registry.npmjs.org/json-schema/-/json-schema-0.2.3.tgz",
      "integrity": "sha1-tIDIkuWaLwWVTOcnvT8qTogvnhM=",
      "dev": true
    },
    "json-schema-traverse": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
      "dev": true
    },
    "json-stable-stringify": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/json-stable-stringify/-/json-stable-stringify-0.0.1.tgz",
      "integrity": "sha1-YRwj6BTbN1Un34URk9tZ3Sryf0U=",
      "dev": true,
      "requires": {
        "jsonify": "~0.0.0"
      }
    },
    "json-stable-stringify-without-jsonify": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz",
      "integrity": "sha1-nbe1lJatPzz+8wp1FC0tkwrXJlE=",
      "dev": true
    },
    "json-stringify-safe": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz",
      "integrity": "sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus=",
      "dev": true
    },
    "json3": {
      "version": "3.3.3",
      "resolved": "https://registry.npmjs.org/json3/-/json3-3.3.3.tgz",
      "integrity": "sha512-c7/8mbUsKigAbLkD5B010BK4D9LZm7A1pNItkEwiUZRpIN66exu/e7YQWysGun+TRKaJp8MhemM+VkfWv42aCA==",
      "dev": true
    },
    "json5": {
      "version": "0.5.1",
      "resolved": "https://registry.npmjs.org/json5/-/json5-0.5.1.tgz",
      "integrity": "sha1-Hq3nrMASA0rYTiOWdn6tn6VJWCE=",
      "dev": true
    },
    "jsonfile": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-3.0.1.tgz",
      "integrity": "sha1-pezG9l9T9mLEQVx2daAzHQmS7GY=",
      "dev": true,
      "requires": {
        "graceful-fs": "^4.1.6"
      }
    },
    "jsonify": {
      "version": "0.0.0",
      "resolved": "https://registry.npmjs.org/jsonify/-/jsonify-0.0.0.tgz",
      "integrity": "sha1-LHS27kHZPKUbe1qu6PUDYx0lKnM=",
      "dev": true
    },
    "jsonparse": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/jsonparse/-/jsonparse-1.3.1.tgz",
      "integrity": "sha1-P02uSpH6wxX3EGL4UhzCOfE2YoA=",
      "dev": true
    },
    "jsprim": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/jsprim/-/jsprim-1.4.1.tgz",
      "integrity": "sha1-MT5mvB5cwG5Di8G3SZwuXFastqI=",
      "dev": true,
      "requires": {
        "assert-plus": "1.0.0",
        "extsprintf": "1.3.0",
        "json-schema": "0.2.3",
        "verror": "1.10.0"
      },
      "dependencies": {
        "assert-plus": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
          "integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU=",
          "dev": true
        }
      }
    },
    "jsqr": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/jsqr/-/jsqr-1.3.1.tgz",
      "integrity": "sha512-zCTP6Qd/WwjrpuHFkJuXc5opRdKprUr7eI7+JCCtcetThJt45qptu82MWQ+eET+FtDrMo7+BYjo3iD0XIq1L9Q==",
      "dev": true
    },
    "junk": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/junk/-/junk-3.1.0.tgz",
      "integrity": "sha512-pBxcB3LFc8QVgdggvZWyeys+hnrNWg4OcZIU/1X59k5jQdLBlCsYGRQaz234SqoRLTCgMH00fY0xRJH+F9METQ==",
      "dev": true
    },
    "keyv": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/keyv/-/keyv-3.1.0.tgz",
      "integrity": "sha512-9ykJ/46SN/9KPM/sichzQ7OvXyGDYKGTaDlKMGCAlg2UK8KRy4jb0d8sFc+0Tt0YYnThq8X2RZgCg74RPxgcVA==",
      "dev": true,
      "requires": {
        "json-buffer": "3.0.0"
      }
    },
    "kind-of": {
      "version": "3.2.2",
      "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
      "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
      "dev": true,
      "requires": {
        "is-buffer": "^1.1.5"
      },
      "dependencies": {
        "is-buffer": {
          "version": "1.1.6",
          "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",
          "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w==",
          "dev": true
        }
      }
    },
    "klaw": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/klaw/-/klaw-1.3.1.tgz",
      "integrity": "sha1-QIhDO0azsbolnXh4XY6W9zugJDk=",
      "dev": true,
      "requires": {
        "graceful-fs": "^4.1.9"
      }
    },
    "labeled-stream-splicer": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/labeled-stream-splicer/-/labeled-stream-splicer-2.0.2.tgz",
      "integrity": "sha512-Ca4LSXFFZUjPScRaqOcFxneA0VpKZr4MMYCljyQr4LIewTLb3Y0IUTIsnBBsVubIeEfxeSZpSjSsRM8APEQaAw==",
      "dev": true,
      "requires": {
        "inherits": "^2.0.1",
        "stream-splicer": "^2.0.0"
      }
    },
    "latest-version": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/latest-version/-/latest-version-3.1.0.tgz",
      "integrity": "sha1-ogU4P+oyKzO1rjsYq+4NwvNW7hU=",
      "dev": true,
      "requires": {
        "package-json": "^4.0.0"
      }
    },
    "lazy-cache": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/lazy-cache/-/lazy-cache-1.0.4.tgz",
      "integrity": "sha1-odePw6UEdMuAhF07O24dpJpEbo4=",
      "dev": true
    },
    "lazy-req": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/lazy-req/-/lazy-req-2.0.0.tgz",
      "integrity": "sha1-yUUKNj7N2i5vDHATKtTzf48G8rQ=",
      "dev": true
    },
    "lazy-val": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/lazy-val/-/lazy-val-1.0.4.tgz",
      "integrity": "sha512-u93kb2fPbIrfzBuLjZE+w+fJbUUMhNDXxNmMfaqNgpfQf1CO5ZSe2LfsnBqVAk7i/2NF48OSoRj+Xe2VT+lE8Q==",
      "dev": true
    },
    "lazystream": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/lazystream/-/lazystream-1.0.0.tgz",
      "integrity": "sha1-9plf4PggOS9hOWvolGJAe7dxaOQ=",
      "dev": true,
      "requires": {
        "readable-stream": "^2.0.5"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "lcid": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/lcid/-/lcid-1.0.0.tgz",
      "integrity": "sha1-MIrMr6C8SDo4Z7S28rlQYlHRuDU=",
      "dev": true,
      "requires": {
        "invert-kv": "^1.0.0"
      }
    },
    "liftoff": {
      "version": "2.5.0",
      "resolved": "https://registry.npmjs.org/liftoff/-/liftoff-2.5.0.tgz",
      "integrity": "sha1-IAkpG7Mc6oYbvxCnwVooyvdcMew=",
      "dev": true,
      "requires": {
        "extend": "^3.0.0",
        "findup-sync": "^2.0.0",
        "fined": "^1.0.1",
        "flagged-respawn": "^1.0.0",
        "is-plain-object": "^2.0.4",
        "object.map": "^1.0.0",
        "rechoir": "^0.6.2",
        "resolve": "^1.1.7"
      }
    },
    "limiter": {
      "version": "1.1.5",
      "resolved": "https://registry.npmjs.org/limiter/-/limiter-1.1.5.tgz",
      "integrity": "sha512-FWWMIEOxz3GwUI4Ts/IvgVy6LPvoMPgjMdQ185nN6psJyBJ4yOpzqm695/h5umdLJg2vW3GR5iG11MAkR2AzJA==",
      "dev": true
    },
    "load-json-file": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-1.1.0.tgz",
      "integrity": "sha1-lWkFcI1YtLq0wiYbBPWfMcmTdMA=",
      "dev": true,
      "requires": {
        "graceful-fs": "^4.1.2",
        "parse-json": "^2.2.0",
        "pify": "^2.0.0",
        "pinkie-promise": "^2.0.0",
        "strip-bom": "^2.0.0"
      },
      "dependencies": {
        "strip-bom": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-2.0.0.tgz",
          "integrity": "sha1-YhmoVhZSBJHzV4i9vxRHqZx+aw4=",
          "dev": true,
          "requires": {
            "is-utf8": "^0.2.0"
          }
        }
      }
    },
    "localtunnel": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/localtunnel/-/localtunnel-2.0.0.tgz",
      "integrity": "sha512-g6E0aLgYYDvQDxIjIXkgJo2+pHj3sGg4Wz/XP3h2KtZnRsWPbOQY+hw1H8Z91jep998fkcVE9l+kghO+97vllg==",
      "dev": true,
      "requires": {
        "axios": "0.19.0",
        "debug": "4.1.1",
        "openurl": "1.1.1",
        "yargs": "13.3.0"
      },
      "dependencies": {
        "debug": {
          "version": "4.1.1",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.1.1.tgz",
          "integrity": "sha512-pYAIzeRo8J6KPEaJ0VWOh5Pzkbw/RetuzehGM7QRRX5he4fPHx2rdKMB256ehJCkX+XRQm16eZLqLNS8RSZXZw==",
          "dev": true,
          "requires": {
            "ms": "^2.1.1"
          }
        },
        "ms": {
          "version": "2.1.3",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
          "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
          "dev": true
        },
        "yargs": {
          "version": "13.3.0",
          "resolved": "https://registry.npmjs.org/yargs/-/yargs-13.3.0.tgz",
          "integrity": "sha512-2eehun/8ALW8TLoIl7MVaRUrg+yCnenu8B4kBlRxj3GJGDKU1Og7sMXPNm1BYyM1DOJmTZ4YeN/Nwxv+8XJsUA==",
          "dev": true,
          "requires": {
            "cliui": "^5.0.0",
            "find-up": "^3.0.0",
            "get-caller-file": "^2.0.1",
            "require-directory": "^2.1.1",
            "require-main-filename": "^2.0.0",
            "set-blocking": "^2.0.0",
            "string-width": "^3.0.0",
            "which-module": "^2.0.0",
            "y18n": "^4.0.0",
            "yargs-parser": "^13.1.1"
          }
        }
      }
    },
    "locate-path": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-3.0.0.tgz",
      "integrity": "sha512-7AO748wWnIhNqAuaty2ZWHkQHRSNfPVIsPIfwEOWO22AmaoVrWavlOcMR5nzTLNYvp36X220/maaRsrec1G65A==",
      "dev": true,
      "requires": {
        "p-locate": "^3.0.0",
        "path-exists": "^3.0.0"
      }
    },
    "lodash": {
      "version": "4.17.20",
      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.20.tgz",
      "integrity": "sha512-PlhdFcillOINfeV7Ni6oF1TAEayyZBoZ8bcshTHqOYJYlrqzRK5hagpagky5o4HfCzzd1TRkXPMFq6cKk9rGmA==",
      "dev": true
    },
    "lodash._arraycopy": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/lodash._arraycopy/-/lodash._arraycopy-3.0.0.tgz",
      "integrity": "sha1-due3wfH7klRzdIeKVi7Qaj5Q9uE=",
      "dev": true
    },
    "lodash._arrayeach": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/lodash._arrayeach/-/lodash._arrayeach-3.0.0.tgz",
      "integrity": "sha1-urFWsqkNPxu9XGU0AzSeXlkz754=",
      "dev": true
    },
    "lodash._baseassign": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/lodash._baseassign/-/lodash._baseassign-3.2.0.tgz",
      "integrity": "sha1-jDigmVAPIVrQnlnxci/QxSv+Ck4=",
      "dev": true,
      "requires": {
        "lodash._basecopy": "^3.0.0",
        "lodash.keys": "^3.0.0"
      }
    },
    "lodash._baseclone": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/lodash._baseclone/-/lodash._baseclone-3.3.0.tgz",
      "integrity": "sha1-MDUZv2OT/n5C802LYw73eU41Qrc=",
      "dev": true,
      "requires": {
        "lodash._arraycopy": "^3.0.0",
        "lodash._arrayeach": "^3.0.0",
        "lodash._baseassign": "^3.0.0",
        "lodash._basefor": "^3.0.0",
        "lodash.isarray": "^3.0.0",
        "lodash.keys": "^3.0.0"
      }
    },
    "lodash._basecopy": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/lodash._basecopy/-/lodash._basecopy-3.0.1.tgz",
      "integrity": "sha1-jaDmqHbPNEwK2KVIghEd08XHyjY=",
      "dev": true
    },
    "lodash._basefor": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/lodash._basefor/-/lodash._basefor-3.0.3.tgz",
      "integrity": "sha1-dVC06SGO8J+tJDQ7YSAhx5tMIMI=",
      "dev": true
    },
    "lodash._basetostring": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/lodash._basetostring/-/lodash._basetostring-3.0.1.tgz",
      "integrity": "sha1-0YYdh3+CSlL2aYMtyvPuFVZqB9U=",
      "dev": true
    },
    "lodash._basevalues": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/lodash._basevalues/-/lodash._basevalues-3.0.0.tgz",
      "integrity": "sha1-W3dXYoAr3j0yl1A+JjAIIP32Ybc=",
      "dev": true
    },
    "lodash._bindcallback": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/lodash._bindcallback/-/lodash._bindcallback-3.0.1.tgz",
      "integrity": "sha1-5THCdkTPi1epnhftlbNcdIeJOS4=",
      "dev": true
    },
    "lodash._getnative": {
      "version": "3.9.1",
      "resolved": "https://registry.npmjs.org/lodash._getnative/-/lodash._getnative-3.9.1.tgz",
      "integrity": "sha1-VwvH3t5G1hzc3mh9ZdPuy6o6r/U=",
      "dev": true
    },
    "lodash._isiterateecall": {
      "version": "3.0.9",
      "resolved": "https://registry.npmjs.org/lodash._isiterateecall/-/lodash._isiterateecall-3.0.9.tgz",
      "integrity": "sha1-UgOte6Ql+uhCRg5pbbnPPmqsBXw=",
      "dev": true
    },
    "lodash._reescape": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/lodash._reescape/-/lodash._reescape-3.0.0.tgz",
      "integrity": "sha1-Kx1vXf4HyKNVdT5fJ/rH8c3hYWo=",
      "dev": true
    },
    "lodash._reevaluate": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/lodash._reevaluate/-/lodash._reevaluate-3.0.0.tgz",
      "integrity": "sha1-WLx0xAZklTrgsSTYBpltrKQx4u0=",
      "dev": true
    },
    "lodash._reinterpolate": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/lodash._reinterpolate/-/lodash._reinterpolate-3.0.0.tgz",
      "integrity": "sha1-DM8tiRZq8Ds2Y8eWU4t1rG4RTZ0=",
      "dev": true
    },
    "lodash._root": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/lodash._root/-/lodash._root-3.0.1.tgz",
      "integrity": "sha1-+6HEUkwZ7ppfgTa0YJ8BfPTe1pI=",
      "dev": true
    },
    "lodash.assign": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/lodash.assign/-/lodash.assign-4.2.0.tgz",
      "integrity": "sha1-DZnzzNem0mHRm9rrkkUAXShYCOc=",
      "dev": true
    },
    "lodash.clonedeep": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/lodash.clonedeep/-/lodash.clonedeep-3.0.2.tgz",
      "integrity": "sha1-oKHkDYKl6on/WxR7hETtY9koJ9s=",
      "dev": true,
      "requires": {
        "lodash._baseclone": "^3.0.0",
        "lodash._bindcallback": "^3.0.0"
      }
    },
    "lodash.difference": {
      "version": "4.5.0",
      "resolved": "https://registry.npmjs.org/lodash.difference/-/lodash.difference-4.5.0.tgz",
      "integrity": "sha1-nMtOUF1Ia5FlE0V3KIWi3yf9AXw=",
      "dev": true
    },
    "lodash.escape": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/lodash.escape/-/lodash.escape-3.2.0.tgz",
      "integrity": "sha1-mV7g3BjBtIzJLv+ucaEKq1tIdpg=",
      "dev": true,
      "requires": {
        "lodash._root": "^3.0.0"
      }
    },
    "lodash.flatten": {
      "version": "4.4.0",
      "resolved": "https://registry.npmjs.org/lodash.flatten/-/lodash.flatten-4.4.0.tgz",
      "integrity": "sha1-8xwiIlqWMtK7+OSt2+8kCqdlph8=",
      "dev": true
    },
    "lodash.get": {
      "version": "4.4.2",
      "resolved": "https://registry.npmjs.org/lodash.get/-/lodash.get-4.4.2.tgz",
      "integrity": "sha1-LRd/ZS+jHpObRDjVNBSZ36OCXpk=",
      "dev": true
    },
    "lodash.isarguments": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/lodash.isarguments/-/lodash.isarguments-3.1.0.tgz",
      "integrity": "sha1-L1c9hcaiQon/AGY7SRwdM4/zRYo=",
      "dev": true
    },
    "lodash.isarray": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/lodash.isarray/-/lodash.isarray-3.0.4.tgz",
      "integrity": "sha1-eeTriMNqgSKvhvhEqpvNhRtfu1U=",
      "dev": true
    },
    "lodash.isequal": {
      "version": "4.5.0",
      "resolved": "https://registry.npmjs.org/lodash.isequal/-/lodash.isequal-4.5.0.tgz",
      "integrity": "sha1-QVxEePK8wwEgwizhDtMib30+GOA=",
      "dev": true
    },
    "lodash.isfinite": {
      "version": "3.3.2",
      "resolved": "https://registry.npmjs.org/lodash.isfinite/-/lodash.isfinite-3.3.2.tgz",
      "integrity": "sha1-+4m2WpqAKBgz8LdHizpRBPiY67M=",
      "dev": true
    },
    "lodash.keys": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/lodash.keys/-/lodash.keys-3.1.2.tgz",
      "integrity": "sha1-TbwEcrFWvlCgsoaFXRvQsMZWCYo=",
      "dev": true,
      "requires": {
        "lodash._getnative": "^3.0.0",
        "lodash.isarguments": "^3.0.0",
        "lodash.isarray": "^3.0.0"
      }
    },
    "lodash.memoize": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/lodash.memoize/-/lodash.memoize-3.0.4.tgz",
      "integrity": "sha1-LcvSwofLwKVcxCMovQxzYVDVPj8=",
      "dev": true
    },
    "lodash.restparam": {
      "version": "3.6.1",
      "resolved": "https://registry.npmjs.org/lodash.restparam/-/lodash.restparam-3.6.1.tgz",
      "integrity": "sha1-k2pOMJ7zMKdkXtQUWYbIWuWyCAU=",
      "dev": true
    },
    "lodash.template": {
      "version": "3.6.2",
      "resolved": "https://registry.npmjs.org/lodash.template/-/lodash.template-3.6.2.tgz",
      "integrity": "sha1-+M3sxhaaJVvpCYrosMU9N4kx0U8=",
      "dev": true,
      "requires": {
        "lodash._basecopy": "^3.0.0",
        "lodash._basetostring": "^3.0.0",
        "lodash._basevalues": "^3.0.0",
        "lodash._isiterateecall": "^3.0.0",
        "lodash._reinterpolate": "^3.0.0",
        "lodash.escape": "^3.0.0",
        "lodash.keys": "^3.0.0",
        "lodash.restparam": "^3.0.0",
        "lodash.templatesettings": "^3.0.0"
      }
    },
    "lodash.templatesettings": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/lodash.templatesettings/-/lodash.templatesettings-3.1.1.tgz",
      "integrity": "sha1-+zB4RHU7Zrnxr6VOJix0UwfbqOU=",
      "dev": true,
      "requires": {
        "lodash._reinterpolate": "^3.0.0",
        "lodash.escape": "^3.0.0"
      }
    },
    "lodash.toarray": {
      "version": "4.4.0",
      "resolved": "https://registry.npmjs.org/lodash.toarray/-/lodash.toarray-4.4.0.tgz",
      "integrity": "sha1-JMS/zWsvuji/0FlNsRedjptlZWE=",
      "dev": true
    },
    "lodash.union": {
      "version": "4.6.0",
      "resolved": "https://registry.npmjs.org/lodash.union/-/lodash.union-4.6.0.tgz",
      "integrity": "sha1-SLtQiECfFvGCFmZkHETdGqrjzYg=",
      "dev": true
    },
    "log-symbols": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/log-symbols/-/log-symbols-4.0.0.tgz",
      "integrity": "sha512-FN8JBzLx6CzeMrB0tg6pqlGU1wCrXW+ZXGH481kfsBqer0hToTIiHdjH4Mq8xJUbvATujKCvaREGWpGUionraA==",
      "dev": true,
      "requires": {
        "chalk": "^4.0.0"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "4.3.0",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
          "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
          "dev": true,
          "requires": {
            "color-convert": "^2.0.1"
          }
        },
        "chalk": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.0.tgz",
          "integrity": "sha512-qwx12AxXe2Q5xQ43Ac//I6v5aXTipYrSESdOgzrN+9XjgEpyjpKuvSGaN4qE93f7TQTlerQQ8S+EQ0EyDoVL1A==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "dev": true,
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "supports-color": {
          "version": "7.2.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
          "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        }
      }
    },
    "long": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/long/-/long-4.0.0.tgz",
      "integrity": "sha512-XsP+KhQif4bjX1kbuSiySJFNAehNxgLb6hPRGJ9QsUr8ajHkuXGdrHmFUTUUXhDwVX2R5bY4JNZEwbUiMhV+MA==",
      "dev": true
    },
    "longest": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/longest/-/longest-1.0.1.tgz",
      "integrity": "sha1-MKCy2jj3N3DoKUoNIuZiXtd9AJc=",
      "dev": true
    },
    "loose-envify": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",
      "integrity": "sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",
      "dev": true,
      "requires": {
        "js-tokens": "^3.0.0 || ^4.0.0"
      }
    },
    "loud-rejection": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/loud-rejection/-/loud-rejection-1.6.0.tgz",
      "integrity": "sha1-W0b4AUft7leIcPCG0Eghz5mOVR8=",
      "dev": true,
      "requires": {
        "currently-unhandled": "^0.4.1",
        "signal-exit": "^3.0.0"
      }
    },
    "lowercase-keys": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-1.0.1.tgz",
      "integrity": "sha512-G2Lj61tXDnVFFOi8VZds+SoQjtQC3dgokKdDG2mTm1tx4m50NUHBOZSBwQQHyy0V12A0JTG4icfZQH+xPyh8VA==",
      "dev": true
    },
    "lru-cache": {
      "version": "2.7.3",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-2.7.3.tgz",
      "integrity": "sha1-bUUk6LlV+V1PW1iFHOId1y+06VI=",
      "dev": true
    },
    "lzma-native": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/lzma-native/-/lzma-native-6.0.1.tgz",
      "integrity": "sha512-O6oWF0xe1AFvOCjU8uOZBZ/lhjaMNwHfVNaqVMqmoQXlRwBcFWpCAToiZOdXcKVMdo/5s/D0a2QgA5laMErxHQ==",
      "dev": true,
      "requires": {
        "node-addon-api": "^1.6.0",
        "node-pre-gyp": "^0.11.0",
        "readable-stream": "^2.3.5",
        "rimraf": "^2.7.1"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "make-dir": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-1.3.0.tgz",
      "integrity": "sha512-2w31R7SJtieJJnQtGc7RVL2StM2vGYVfqUOvUDxH6bC6aJTxPxTF0GnIgCyu7tjockiUWAYQRbxa7vKn34s5sQ==",
      "dev": true,
      "requires": {
        "pify": "^3.0.0"
      },
      "dependencies": {
        "pify": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/pify/-/pify-3.0.0.tgz",
          "integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=",
          "dev": true
        }
      }
    },
    "make-iterator": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/make-iterator/-/make-iterator-1.0.1.tgz",
      "integrity": "sha512-pxiuXh0iVEq7VM7KMIhs5gxsfxCux2URptUQaXo4iZZJxBAzTPOLE2BumO5dbfVYq/hBJFBR/a1mFDmOx5AGmw==",
      "dev": true,
      "requires": {
        "kind-of": "^6.0.2"
      },
      "dependencies": {
        "kind-of": {
          "version": "6.0.3",
          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.3.tgz",
          "integrity": "sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw==",
          "dev": true
        }
      }
    },
    "map-cache": {
      "version": "0.2.2",
      "resolved": "https://registry.npmjs.org/map-cache/-/map-cache-0.2.2.tgz",
      "integrity": "sha1-wyq9C9ZSXZsFFkW7TyasXcmKDb8=",
      "dev": true
    },
    "map-obj": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/map-obj/-/map-obj-1.0.1.tgz",
      "integrity": "sha1-2TPOuSBdgr3PSIb2dCvcK03qFG0=",
      "dev": true
    },
    "map-stream": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/map-stream/-/map-stream-0.1.0.tgz",
      "integrity": "sha1-5WqpTEyAVaFkBKBnS3jyFffI4ZQ=",
      "dev": true
    },
    "map-visit": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/map-visit/-/map-visit-1.0.0.tgz",
      "integrity": "sha1-7Nyo8TFE5mDxtb1B8S80edmN+48=",
      "dev": true,
      "requires": {
        "object-visit": "^1.0.0"
      }
    },
    "marked": {
      "version": "0.3.19",
      "resolved": "https://registry.npmjs.org/marked/-/marked-0.3.19.tgz",
      "integrity": "sha512-ea2eGWOqNxPcXv8dyERdSr/6FmzvWwzjMxpfGB/sbMccXoct+xY+YukPD+QTUZwyvK7BZwcr4m21WBOW41pAkg==",
      "dev": true
    },
    "marked-terminal": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/marked-terminal/-/marked-terminal-3.3.0.tgz",
      "integrity": "sha512-+IUQJ5VlZoAFsM5MHNT7g3RHSkA3eETqhRCdXv4niUMAKHQ7lb1yvAcuGPmm4soxhmtX13u4Li6ZToXtvSEH+A==",
      "dev": true,
      "requires": {
        "ansi-escapes": "^3.1.0",
        "cardinal": "^2.1.1",
        "chalk": "^2.4.1",
        "cli-table": "^0.3.1",
        "node-emoji": "^1.4.1",
        "supports-hyperlinks": "^1.0.1"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "dev": true,
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          }
        },
        "has-flag": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
          "integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0=",
          "dev": true
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "matcher": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/matcher/-/matcher-3.0.0.tgz",
      "integrity": "sha512-OkeDaAZ/bQCxeFAozM55PKcKU0yJMPGifLwV4Qgjitu+5MoAfSQN4lsLJeXZ1b8w0x+/Emda6MZgXS1jvsapng==",
      "dev": true,
      "optional": true,
      "requires": {
        "escape-string-regexp": "^4.0.0"
      },
      "dependencies": {
        "escape-string-regexp": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
          "integrity": "sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==",
          "dev": true,
          "optional": true
        }
      }
    },
    "math-random": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/math-random/-/math-random-1.0.4.tgz",
      "integrity": "sha512-rUxjysqif/BZQH2yhd5Aaq7vXMSx9NdEsQcyA07uEzIvxgI7zIr33gGsh+RU0/XjmQpCW7RsVof1vlkvQVCK5A==",
      "dev": true
    },
    "md5.js": {
      "version": "1.3.5",
      "resolved": "https://registry.npmjs.org/md5.js/-/md5.js-1.3.5.tgz",
      "integrity": "sha512-xitP+WxNPcTTOgnTJcrhM0xvdPepipPSf3I8EIpGKeFLjt3PlJLIDG3u8EX53ZIubkb+5U2+3rELYpEhHhzdkg==",
      "dev": true,
      "requires": {
        "hash-base": "^3.0.0",
        "inherits": "^2.0.1",
        "safe-buffer": "^5.1.2"
      }
    },
    "meow": {
      "version": "3.7.0",
      "resolved": "https://registry.npmjs.org/meow/-/meow-3.7.0.tgz",
      "integrity": "sha1-cstmi0JSKCkKu/qFaJJYcwioAfs=",
      "dev": true,
      "requires": {
        "camelcase-keys": "^2.0.0",
        "decamelize": "^1.1.2",
        "loud-rejection": "^1.0.0",
        "map-obj": "^1.0.1",
        "minimist": "^1.1.3",
        "normalize-package-data": "^2.3.4",
        "object-assign": "^4.0.1",
        "read-pkg-up": "^1.0.1",
        "redent": "^1.0.0",
        "trim-newlines": "^1.0.0"
      }
    },
    "merge": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/merge/-/merge-1.2.1.tgz",
      "integrity": "sha512-VjFo4P5Whtj4vsLzsYBu5ayHhoHJ0UqNm7ibvShmbmoz7tGi0vXaoJbGdB+GmDMLUdg8DpQXEIeVDAe8MaABvQ==",
      "dev": true
    },
    "merge-descriptors": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.1.tgz",
      "integrity": "sha1-sAqqVW3YtEVoFQ7J0blT8/kMu2E=",
      "dev": true
    },
    "merge-stream": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/merge-stream/-/merge-stream-1.0.1.tgz",
      "integrity": "sha1-QEEgLVCKNCugAXQAjfDCUbjBNeE=",
      "dev": true,
      "requires": {
        "readable-stream": "^2.0.1"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "merkle-lib": {
      "version": "2.0.10",
      "resolved": "https://registry.npmjs.org/merkle-lib/-/merkle-lib-2.0.10.tgz",
      "integrity": "sha1-grjbrnXieneFOItz+ddyXQ9vMyY=",
      "dev": true
    },
    "merkletreejs": {
      "version": "0.1.11",
      "resolved": "https://registry.npmjs.org/merkletreejs/-/merkletreejs-0.1.11.tgz",
      "integrity": "sha512-nJN3VIHeIAyB/PjO5Dj/Y0SEK7CGCCLD2IbV4el2kUIwlOtX3GOr5MwVO4EU+0AXvoDnJ0nmaLe5O86uIjWz/Q==",
      "dev": true,
      "requires": {
        "buffer-reverse": "^1.0.1",
        "crypto-js": "^3.1.9-1",
        "is-buffer": "^2.0.3",
        "merkle-lib": "^2.0.10",
        "treeify": "^1.1.0"
      }
    },
    "micromatch": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.2.tgz",
      "integrity": "sha512-y7FpHSbMUMoyPbYUSzO6PaZ6FyRnQOpHuKwbo1G+Knck95XVU4QAiKdGEnj5wwoS7PlOgthX/09u5iFJ+aYf5Q==",
      "dev": true,
      "requires": {
        "braces": "^3.0.1",
        "picomatch": "^2.0.5"
      }
    },
    "miller-rabin": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/miller-rabin/-/miller-rabin-4.0.1.tgz",
      "integrity": "sha512-115fLhvZVqWwHPbClyntxEVfVDfl9DLLTuJvq3g2O/Oxi8AiNouAHvDSzHS0viUJc+V5vm3eq91Xwqn9dp4jRA==",
      "dev": true,
      "requires": {
        "bn.js": "^4.0.0",
        "brorand": "^1.0.1"
      },
      "dependencies": {
        "bn.js": {
          "version": "4.11.9",
          "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.11.9.tgz",
          "integrity": "sha512-E6QoYqCKZfgatHTdHzs1RRKP7ip4vvm+EyRUeE2RF0NblwVvb0p6jSVeNTOFxPn26QXN2o6SMfNxKp6kU8zQaw==",
          "dev": true
        }
      }
    },
    "mime": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/mime/-/mime-1.4.1.tgz",
      "integrity": "sha512-KI1+qOZu5DcW6wayYHSzR/tXKCDC5Om4s1z2QJjDULzLcmf3DvzS7oluY4HCTrc+9FiKmWUgeNLg7W3uIQvxtQ==",
      "dev": true
    },
    "mime-db": {
      "version": "1.44.0",
      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.44.0.tgz",
      "integrity": "sha512-/NOTfLrsPBVeH7YtFPgsVWveuL+4SjjYxaQ1xtM1KMFj7HdxlBlxeyNLzhyJVx7r4rZGJAZ/6lkKCitSc/Nmpg==",
      "dev": true
    },
    "mime-types": {
      "version": "2.1.27",
      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.27.tgz",
      "integrity": "sha512-JIhqnCasI9yD+SsmkquHBxTSEuZdQX5BuQnS2Vc7puQQQ+8yiP5AY5uWhpdv4YL4VM5c6iliiYWPgJ/nJQLp7w==",
      "dev": true,
      "requires": {
        "mime-db": "1.44.0"
      }
    },
    "mimic-fn": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz",
      "integrity": "sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==",
      "dev": true
    },
    "mimic-response": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-2.1.0.tgz",
      "integrity": "sha512-wXqjST+SLt7R009ySCglWBCFpjUygmCIfD790/kVbiGmUgfYGuB14PiTd5DwVxSV4NcYHjzMkoj5LjQZwTQLEA=="
    },
    "min-document": {
      "version": "2.19.0",
      "resolved": "https://registry.npmjs.org/min-document/-/min-document-2.19.0.tgz",
      "integrity": "sha1-e9KC4/WELtKVu3SM3Z8f+iyCRoU=",
      "dev": true,
      "requires": {
        "dom-walk": "^0.1.0"
      }
    },
    "minimalistic-assert": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/minimalistic-assert/-/minimalistic-assert-1.0.1.tgz",
      "integrity": "sha512-UtJcAD4yEaGtjPezWuO9wC4nwUnVH/8/Im3yEHQP4b67cXlD/Qr9hdITCU1xDbSEXg2XKNaP8jsReV7vQd00/A==",
      "dev": true
    },
    "minimalistic-crypto-utils": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/minimalistic-crypto-utils/-/minimalistic-crypto-utils-1.0.1.tgz",
      "integrity": "sha1-9sAMHAsIIkblxNmd+4x8CDsrWCo=",
      "dev": true
    },
    "minimatch": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz",
      "integrity": "sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==",
      "dev": true,
      "requires": {
        "brace-expansion": "^1.1.7"
      }
    },
    "minimist": {
      "version": "1.2.5",
      "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.5.tgz",
      "integrity": "sha512-FM9nNUYrRBAELZQT3xeZQ7fmMOBg6nWNmJKTcgsJeaLstP/UODVpGsr5OhXhhXg6f+qtJ8uiZ+PUxkDWcgIXLw=="
    },
    "minipass": {
      "version": "2.9.0",
      "resolved": "https://registry.npmjs.org/minipass/-/minipass-2.9.0.tgz",
      "integrity": "sha512-wxfUjg9WebH+CUDX/CdbRlh5SmfZiy/hpkxaRI16Y9W56Pa75sWgd/rvFilSgrauD9NyFymP/+JFV3KwzIsJeg==",
      "dev": true,
      "requires": {
        "safe-buffer": "^5.1.2",
        "yallist": "^3.0.0"
      },
      "dependencies": {
        "yallist": {
          "version": "3.1.1",
          "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
          "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==",
          "dev": true
        }
      }
    },
    "minizlib": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/minizlib/-/minizlib-1.3.3.tgz",
      "integrity": "sha512-6ZYMOEnmVsdCeTJVE0W9ZD+pVnE8h9Hma/iOwwRDsdQoePpoX56/8B6z3P9VNwppJuBKNRuFDRNRqRWexT9G9Q==",
      "dev": true,
      "requires": {
        "minipass": "^2.9.0"
      }
    },
    "mitt": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/mitt/-/mitt-1.2.0.tgz",
      "integrity": "sha512-r6lj77KlwqLhIUku9UWYes7KJtsczvolZkzp8hbaDPPaE24OmWl5s539Mytlj22siEQKosZ26qCBgda2PKwoJw==",
      "dev": true
    },
    "mixin-deep": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/mixin-deep/-/mixin-deep-1.3.2.tgz",
      "integrity": "sha512-WRoDn//mXBiJ1H40rqa3vH0toePwSsGb45iInWlTySa+Uu4k3tYUSxa2v1KqAiLtvlrSzaExqS1gtk96A9zvEA==",
      "dev": true,
      "requires": {
        "for-in": "^1.0.2",
        "is-extendable": "^1.0.1"
      },
      "dependencies": {
        "is-extendable": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/is-extendable/-/is-extendable-1.0.1.tgz",
          "integrity": "sha512-arnXMxT1hhoKo9k1LZdmlNyJdDDfy2v0fXjFlmok4+i8ul/6WlbVge9bhM74OpNPQPMGUToDtz+KXa1PneJxOA==",
          "dev": true,
          "requires": {
            "is-plain-object": "^2.0.4"
          }
        }
      }
    },
    "mkdirp": {
      "version": "0.5.5",
      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.5.tgz",
      "integrity": "sha512-NKmAlESf6jMGym1++R0Ra7wvhV+wFW63FaSOFPwRahvea0gMUcGUhVeAg/0BC0wiv9ih5NYPB1Wn1UEI1/L+xQ==",
      "dev": true,
      "requires": {
        "minimist": "^1.2.5"
      }
    },
    "mkdirp-classic": {
      "version": "0.5.3",
      "resolved": "https://registry.npmjs.org/mkdirp-classic/-/mkdirp-classic-0.5.3.tgz",
      "integrity": "sha512-gKLcREMhtuZRwRAfqP3RFW+TK4JqApVBtOIftVgjuABpAtpxhPGaDcfvbhNvD0B8iD1oUr/txX35NjcaY6Ns/A=="
    },
    "module-deps": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/module-deps/-/module-deps-4.1.1.tgz",
      "integrity": "sha1-IyFYM/HaE/1gbMuAh7RIUty4If0=",
      "dev": true,
      "requires": {
        "JSONStream": "^1.0.3",
        "browser-resolve": "^1.7.0",
        "cached-path-relative": "^1.0.0",
        "concat-stream": "~1.5.0",
        "defined": "^1.0.0",
        "detective": "^4.0.0",
        "duplexer2": "^0.1.2",
        "inherits": "^2.0.1",
        "parents": "^1.0.0",
        "readable-stream": "^2.0.2",
        "resolve": "^1.1.3",
        "stream-combiner2": "^1.1.1",
        "subarg": "^1.0.0",
        "through2": "^2.0.0",
        "xtend": "^4.0.0"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "module-not-found-error": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/module-not-found-error/-/module-not-found-error-1.0.1.tgz",
      "integrity": "sha1-z4tP9PKWQGdNbN0CsOO8UjwrvcA=",
      "dev": true
    },
    "moment": {
      "version": "2.29.1",
      "resolved": "https://registry.npmjs.org/moment/-/moment-2.29.1.tgz",
      "integrity": "sha512-kHmoybcPV8Sqy59DwNDY3Jefr64lK/by/da0ViFcuA4DH0vQg5Q6Ze5VimxkfQNSC+Mls/Kx53s7TjP1RhFEDQ==",
      "dev": true
    },
    "ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",
      "dev": true
    },
    "multimeter": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/multimeter/-/multimeter-0.1.1.tgz",
      "integrity": "sha1-+FbID8PPDx1K2Os2rWhzXj7Vs+o=",
      "dev": true,
      "requires": {
        "charm": "~0.1.1"
      }
    },
    "multipipe": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/multipipe/-/multipipe-0.1.2.tgz",
      "integrity": "sha1-Ko8t33Du1WTf8tV/HhoTfZ8FB4s=",
      "dev": true,
      "requires": {
        "duplexer2": "0.0.2"
      },
      "dependencies": {
        "duplexer2": {
          "version": "0.0.2",
          "resolved": "https://registry.npmjs.org/duplexer2/-/duplexer2-0.0.2.tgz",
          "integrity": "sha1-xhTc9n4vsUmVqRcR5aYX6KYKMds=",
          "dev": true,
          "requires": {
            "readable-stream": "~1.1.9"
          }
        },
        "isarray": {
          "version": "0.0.1",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz",
          "integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=",
          "dev": true
        },
        "readable-stream": {
          "version": "1.1.14",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-1.1.14.tgz",
          "integrity": "sha1-fPTFTvZI44EwhMY23SB54WbAgdk=",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.1",
            "isarray": "0.0.1",
            "string_decoder": "~0.10.x"
          }
        },
        "string_decoder": {
          "version": "0.10.31",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz",
          "integrity": "sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=",
          "dev": true
        }
      }
    },
    "mute-stream": {
      "version": "0.0.8",
      "resolved": "https://registry.npmjs.org/mute-stream/-/mute-stream-0.0.8.tgz",
      "integrity": "sha512-nnbWWOkoWyUsTjKrhgD0dcz22mdkSnpYqbEjIm2nhwhuxlSkpywJmBo8h0ZqJdkp73mb90SssHkN4rsRaBAfAA==",
      "dev": true
    },
    "nan": {
      "version": "2.14.2",
      "resolved": "https://registry.npmjs.org/nan/-/nan-2.14.2.tgz",
      "integrity": "sha512-M2ufzIiINKCuDfBSAUr1vWQ+vuVcA9kqx8JJUsbQi6yf1uGRyb7HfpdfUr5qLXf3B/t8dPvcjhKMmlfnP47EzQ==",
      "dev": true
    },
    "nanomatch": {
      "version": "1.2.13",
      "resolved": "https://registry.npmjs.org/nanomatch/-/nanomatch-1.2.13.tgz",
      "integrity": "sha512-fpoe2T0RbHwBTBUOftAfBPaDEi06ufaUai0mE6Yn1kacc3SnTErfb/h+X94VXzI64rKFHYImXSvdwGGCmwOqCA==",
      "dev": true,
      "requires": {
        "arr-diff": "^4.0.0",
        "array-unique": "^0.3.2",
        "define-property": "^2.0.2",
        "extend-shallow": "^3.0.2",
        "fragment-cache": "^0.2.1",
        "is-windows": "^1.0.2",
        "kind-of": "^6.0.2",
        "object.pick": "^1.3.0",
        "regex-not": "^1.0.0",
        "snapdragon": "^0.8.1",
        "to-regex": "^3.0.1"
      },
      "dependencies": {
        "arr-diff": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-4.0.0.tgz",
          "integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA=",
          "dev": true
        },
        "array-unique": {
          "version": "0.3.2",
          "resolved": "https://registry.npmjs.org/array-unique/-/array-unique-0.3.2.tgz",
          "integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg=",
          "dev": true
        },
        "kind-of": {
          "version": "6.0.3",
          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.3.tgz",
          "integrity": "sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw==",
          "dev": true
        }
      }
    },
    "napi-build-utils": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/napi-build-utils/-/napi-build-utils-1.0.2.tgz",
      "integrity": "sha512-ONmRUqK7zj7DWX0D9ADe03wbwOBZxNAfF20PlGfCWQcD3+/MakShIHrMqx9YwPTfxDdF1zLeL+RGZiR9kGMLdg=="
    },
    "natives": {
      "version": "1.1.6",
      "resolved": "https://registry.npmjs.org/natives/-/natives-1.1.6.tgz",
      "integrity": "sha512-6+TDFewD4yxY14ptjKaS63GVdtKiES1pTPyxn9Jb0rBqPMZ7VcCiooEhPNsr+mqHtMGxa/5c/HhcC4uPEUw/nA==",
      "dev": true
    },
    "ncp": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ncp/-/ncp-2.0.0.tgz",
      "integrity": "sha1-GVoh1sRuNh0vsSgbo4uR6d9727M=",
      "dev": true
    },
    "needle": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/needle/-/needle-2.5.2.tgz",
      "integrity": "sha512-LbRIwS9BfkPvNwNHlsA41Q29kL2L/6VaOJ0qisM5lLWsTV3nP15abO5ITL6L81zqFhzjRKDAYjpcBcwM0AVvLQ==",
      "dev": true,
      "requires": {
        "debug": "^3.2.6",
        "iconv-lite": "^0.4.4",
        "sax": "^1.2.4"
      },
      "dependencies": {
        "debug": {
          "version": "3.2.7",
          "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.7.tgz",
          "integrity": "sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==",
          "dev": true,
          "requires": {
            "ms": "^2.1.1"
          }
        },
        "ms": {
          "version": "2.1.3",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
          "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
          "dev": true
        }
      }
    },
    "negotiator": {
      "version": "0.6.2",
      "resolved": "https://registry.npmjs.org/negotiator/-/negotiator-0.6.2.tgz",
      "integrity": "sha512-hZXc7K2e+PgeI1eDBe/10Ard4ekbfrrqG8Ep+8Jmf4JID2bNg7NvCPOZN+kfF574pFQI7mum2AUqDidoKqcTOw==",
      "dev": true
    },
    "nem-library": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/nem-library/-/nem-library-1.0.5.tgz",
      "integrity": "sha512-4f+BXICeX78nqrWjWvvoYmlLfVFhFEFoiNHWOULx5v6bq0zuApdo4U1F2tvIQyjGTTvuBBGPCkvgXmbzFtdRNw==",
      "dev": true,
      "requires": {
        "@stomp/stompjs": "^3.1.2",
        "crypto-js": "^3.1.9-1",
        "fs.realpath": "^1.0.0",
        "get-random-values": "^1.2.0",
        "js-base64": "^2.3.2",
        "js-joda": "^1.6.1",
        "lodash": "^4.17.4",
        "nem-sdk": "1.5.1",
        "request": "^2.83.0",
        "request-promise-core": "^1.1.1",
        "request-promise-native": "^1.0.5",
        "rxjs": "5.5.2",
        "sockjs-client": "^1.1.4",
        "tweetnacl": "^1.0.0",
        "typedocs": "^0.6.3",
        "utf8": "^2.1.2",
        "websocket": "^1.0.25"
      },
      "dependencies": {
        "ajv": {
          "version": "6.12.6",
          "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
          "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
          "dev": true,
          "requires": {
            "fast-deep-equal": "^3.1.1",
            "fast-json-stable-stringify": "^2.0.0",
            "json-schema-traverse": "^0.4.1",
            "uri-js": "^4.2.2"
          }
        },
        "assert-plus": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
          "integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU=",
          "dev": true
        },
        "har-schema": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/har-schema/-/har-schema-2.0.0.tgz",
          "integrity": "sha1-qUwiJOvKwEeCoNkDVSHyRzW37JI=",
          "dev": true
        },
        "nem-sdk": {
          "version": "1.5.1",
          "resolved": "https://registry.npmjs.org/nem-sdk/-/nem-sdk-1.5.1.tgz",
          "integrity": "sha1-2eTBmZLba5JcWybekIwSfj6mmeY=",
          "dev": true,
          "requires": {
            "babel-cli": "^6.6.5",
            "babel-core": "^6.7.2",
            "babel-plugin-transform-inline-environment-variables": "^6.8.0",
            "babel-preset-es2015": "^6.6.0",
            "crypto-js": "3.1.9-1",
            "jquery": "3.0.0",
            "request": "2.81.0",
            "sockjs-client": "1.1.4"
          },
          "dependencies": {
            "crypto-js": {
              "version": "3.1.9-1",
              "resolved": "https://registry.npmjs.org/crypto-js/-/crypto-js-3.1.9-1.tgz",
              "integrity": "sha1-/aGedh/Ad+Af+/3G6f38WeiAbNg=",
              "dev": true
            },
            "request": {
              "version": "2.81.0",
              "resolved": "https://registry.npmjs.org/request/-/request-2.81.0.tgz",
              "integrity": "sha1-xpKJRqDgbF+Nb4qTM0af/aRimKA=",
              "dev": true,
              "requires": {
                "aws-sign2": "~0.6.0",
                "aws4": "^1.2.1",
                "caseless": "~0.12.0",
                "combined-stream": "~1.0.5",
                "extend": "~3.0.0",
                "forever-agent": "~0.6.1",
                "form-data": "~2.1.1",
                "har-validator": "~4.2.1",
                "hawk": "~3.1.3",
                "http-signature": "~1.1.0",
                "is-typedarray": "~1.0.0",
                "isstream": "~0.1.2",
                "json-stringify-safe": "~5.0.1",
                "mime-types": "~2.1.7",
                "oauth-sign": "~0.8.1",
                "performance-now": "^0.2.0",
                "qs": "~6.4.0",
                "safe-buffer": "^5.0.1",
                "stringstream": "~0.0.4",
                "tough-cookie": "~2.3.0",
                "tunnel-agent": "^0.6.0",
                "uuid": "^3.0.0"
              }
            }
          }
        },
        "punycode": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz",
          "integrity": "sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A==",
          "dev": true
        },
        "qs": {
          "version": "6.4.0",
          "resolved": "https://registry.npmjs.org/qs/-/qs-6.4.0.tgz",
          "integrity": "sha1-E+JtKK1rD/qpExLNO/cI7TUecjM=",
          "dev": true
        },
        "request": {
          "version": "2.88.2",
          "resolved": "https://registry.npmjs.org/request/-/request-2.88.2.tgz",
          "integrity": "sha512-MsvtOrfG9ZcrOwAW+Qi+F6HbD0CWXEh9ou77uOb7FM2WPhwT7smM833PzanhJLsgXjN89Ir6V2PczXNnMpwKhw==",
          "dev": true,
          "requires": {
            "aws-sign2": "~0.7.0",
            "aws4": "^1.8.0",
            "caseless": "~0.12.0",
            "combined-stream": "~1.0.6",
            "extend": "~3.0.2",
            "forever-agent": "~0.6.1",
            "form-data": "~2.3.2",
            "har-validator": "~5.1.3",
            "http-signature": "~1.2.0",
            "is-typedarray": "~1.0.0",
            "isstream": "~0.1.2",
            "json-stringify-safe": "~5.0.1",
            "mime-types": "~2.1.19",
            "oauth-sign": "~0.9.0",
            "performance-now": "^2.1.0",
            "qs": "~6.5.2",
            "safe-buffer": "^5.1.2",
            "tough-cookie": "~2.5.0",
            "tunnel-agent": "^0.6.0",
            "uuid": "^3.3.2"
          },
          "dependencies": {
            "aws-sign2": {
              "version": "0.7.0",
              "resolved": "https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz",
              "integrity": "sha1-tG6JCTSpWR8tL2+G1+ap8bP+dqg=",
              "dev": true
            },
            "form-data": {
              "version": "2.3.3",
              "resolved": "https://registry.npmjs.org/form-data/-/form-data-2.3.3.tgz",
              "integrity": "sha512-1lLKB2Mu3aGP1Q/2eCOx0fNbRMe7XdwktwOruhfqqd0rIJWwN4Dh+E3hrPSlDCXnSR7UtZ1N38rVXm+6+MEhJQ==",
              "dev": true,
              "requires": {
                "asynckit": "^0.4.0",
                "combined-stream": "^1.0.6",
                "mime-types": "^2.1.12"
              }
            },
            "har-validator": {
              "version": "5.1.5",
              "resolved": "https://registry.npmjs.org/har-validator/-/har-validator-5.1.5.tgz",
              "integrity": "sha512-nmT2T0lljbxdQZfspsno9hgrG3Uir6Ks5afism62poxqBM6sDnMEuPmzTq8XN0OEwqKLLdh1jQI3qyE66Nzb3w==",
              "dev": true,
              "requires": {
                "ajv": "^6.12.3",
                "har-schema": "^2.0.0"
              }
            },
            "http-signature": {
              "version": "1.2.0",
              "resolved": "https://registry.npmjs.org/http-signature/-/http-signature-1.2.0.tgz",
              "integrity": "sha1-muzZJRFHcvPZW2WmCruPfBj7rOE=",
              "dev": true,
              "requires": {
                "assert-plus": "^1.0.0",
                "jsprim": "^1.2.2",
                "sshpk": "^1.7.0"
              }
            },
            "oauth-sign": {
              "version": "0.9.0",
              "resolved": "https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.9.0.tgz",
              "integrity": "sha512-fexhUFFPTGV8ybAtSIGbV6gOkSv8UtRbDBnAyLQw4QPKkgNlsH2ByPGtMUqdWkos6YCRmAqViwgZrJc/mRDzZQ==",
              "dev": true
            },
            "performance-now": {
              "version": "2.1.0",
              "resolved": "https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz",
              "integrity": "sha1-Ywn04OX6kT7BxpMHrjZLSzd8nns=",
              "dev": true
            },
            "qs": {
              "version": "6.5.2",
              "resolved": "https://registry.npmjs.org/qs/-/qs-6.5.2.tgz",
              "integrity": "sha512-N5ZAX4/LxJmF+7wN74pUD6qAh9/wnvdQcjq9TZjevvXzSUo7bfmw91saqMjzGS2xq91/odN2dW/WOl7qQHNDGA==",
              "dev": true
            },
            "tough-cookie": {
              "version": "2.5.0",
              "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.5.0.tgz",
              "integrity": "sha512-nlLsUzgm1kfLXSXfRZMc1KLAugd4hqJHDTvc2hDIwS3mZAfMEuMbc03SujMF+GEcpaX/qboeycw6iO8JwVv2+g==",
              "dev": true,
              "requires": {
                "psl": "^1.1.28",
                "punycode": "^2.1.1"
              }
            }
          }
        },
        "rxjs": {
          "version": "5.5.2",
          "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-5.5.2.tgz",
          "integrity": "sha512-oRYoIKWBU3Ic37fLA5VJu31VqQO4bWubRntcHSJ+cwaDQBwdnZ9x4zmhJfm/nFQ2E82/I4loSioHnACamrKGgA==",
          "dev": true,
          "requires": {
            "symbol-observable": "^1.0.1"
          }
        },
        "tweetnacl": {
          "version": "1.0.3",
          "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-1.0.3.tgz",
          "integrity": "sha512-6rt+RN7aOi1nGMyC4Xa5DdYiukl2UWCbcJft7YhxReBGQD7OAM8Pbxw6YMo4r2diNEA8FEmu32YOn9rhaiE5yw==",
          "dev": true
        },
        "utf8": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/utf8/-/utf8-2.1.2.tgz",
          "integrity": "sha1-H6DZJw6b6FDZsFAn9jUZv0ZFfZY=",
          "dev": true
        }
      }
    },
    "nem-sdk": {
      "version": "1.6.8",
      "resolved": "https://registry.npmjs.org/nem-sdk/-/nem-sdk-1.6.8.tgz",
      "integrity": "sha512-xmv/rwA2kiadJ1SGP0DLVDvO4qsxt31MbDHMqzMn90HCyWO6MnqNCvBvsXeekWGu4axk1dsytylaL3U3B5m5LQ==",
      "dev": true,
      "requires": {
        "babel-cli": "^6.6.5",
        "babel-core": "^6.7.2",
        "babel-plugin-transform-inline-environment-variables": "^6.8.0",
        "babel-preset-es2015": "^6.6.0",
        "crypto-js": "3.1.9-1",
        "jquery": "3.0.0",
        "request": "2.81.0",
        "sockjs-client": "1.1.4"
      },
      "dependencies": {
        "crypto-js": {
          "version": "3.1.9-1",
          "resolved": "https://registry.npmjs.org/crypto-js/-/crypto-js-3.1.9-1.tgz",
          "integrity": "sha1-/aGedh/Ad+Af+/3G6f38WeiAbNg=",
          "dev": true
        }
      }
    },
    "nem-trezor": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/nem-trezor/-/nem-trezor-1.1.0.tgz",
      "integrity": "sha512-l4L2XtJlQudTW0Ov+YiRB50w7eYUY+d1G1LfoHnpb663wvoKgurvtNW4ue30mVv5aFwVjlaF/h9qlwnWBRHURw==",
      "dev": true,
      "requires": {
        "crypto-js": "^3.1.9-1",
        "nem-library": "1.0.5",
        "trezor-connect": "^6.0.2"
      }
    },
    "nem-voting": {
      "version": "2.2.9",
      "resolved": "https://registry.npmjs.org/nem-voting/-/nem-voting-2.2.9.tgz",
      "integrity": "sha512-hjdcuvwbDtn3kbP2x28fJ3LLSh/p8RQSKU7CRW0X5XYHMxPYJUll/Nv/en5nlMbvXnjO4lz9hqXSWYvs2e5jug==",
      "dev": true,
      "requires": {
        "crypto-js": "^3.1.9-1",
        "nem-library": "1.0.5"
      }
    },
    "next-tick": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/next-tick/-/next-tick-1.0.0.tgz",
      "integrity": "sha1-yobR/ogoFpsBICCOPchCS524NCw=",
      "dev": true
    },
    "ng-annotate": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/ng-annotate/-/ng-annotate-1.2.2.tgz",
      "integrity": "sha1-3D/FG6Cy+LOF2+BH9NoG9YCh/WE=",
      "dev": true,
      "requires": {
        "acorn": "~2.6.4",
        "alter": "~0.2.0",
        "convert-source-map": "~1.1.2",
        "optimist": "~0.6.1",
        "ordered-ast-traverse": "~1.1.1",
        "simple-fmt": "~0.1.0",
        "simple-is": "~0.2.0",
        "source-map": "~0.5.3",
        "stable": "~0.1.5",
        "stringmap": "~0.2.2",
        "stringset": "~0.2.1",
        "tryor": "~0.1.2"
      },
      "dependencies": {
        "acorn": {
          "version": "2.6.4",
          "resolved": "https://registry.npmjs.org/acorn/-/acorn-2.6.4.tgz",
          "integrity": "sha1-6x9FtKQ/ox0DcBpexG87Umc+kO4=",
          "dev": true
        },
        "convert-source-map": {
          "version": "1.1.3",
          "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-1.1.3.tgz",
          "integrity": "sha1-SCnId+n+SbMWHzvzZziI4gRpmGA=",
          "dev": true
        }
      }
    },
    "ng-toast": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ng-toast/-/ng-toast-2.0.0.tgz",
      "integrity": "sha1-f8Ez/AXohpCDDofNPR8ZPfHDNIM=",
      "dev": true,
      "requires": {
        "angular": ">=1.2.15 <1.6",
        "angular-sanitize": ">=1.2.15 <1.6"
      },
      "dependencies": {
        "angular": {
          "version": "1.5.11",
          "resolved": "https://registry.npmjs.org/angular/-/angular-1.5.11.tgz",
          "integrity": "sha1-jFunOG8VllyazzQp9ogVU6raMNY=",
          "dev": true
        },
        "angular-sanitize": {
          "version": "1.5.11",
          "resolved": "https://registry.npmjs.org/angular-sanitize/-/angular-sanitize-1.5.11.tgz",
          "integrity": "sha1-6/s/ND5UP5su8FD7TC6e4EjRdy8=",
          "dev": true
        }
      }
    },
    "ngstorage": {
      "version": "0.3.10",
      "resolved": "https://registry.npmjs.org/ngstorage/-/ngstorage-0.3.10.tgz",
      "integrity": "sha1-5Tu7EBXDE3XvVsYa097CXRTcQU4=",
      "dev": true
    },
    "node-abi": {
      "version": "2.19.3",
      "resolved": "https://registry.npmjs.org/node-abi/-/node-abi-2.19.3.tgz",
      "integrity": "sha512-9xZrlyfvKhWme2EXFKQhZRp1yNWT/uI1luYPr3sFl+H4keYY4xR+1jO7mvTTijIsHf1M+QDe9uWuKeEpLInIlg==",
      "requires": {
        "semver": "^5.4.1"
      },
      "dependencies": {
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ=="
        }
      }
    },
    "node-addon-api": {
      "version": "1.7.2",
      "resolved": "https://registry.npmjs.org/node-addon-api/-/node-addon-api-1.7.2.tgz",
      "integrity": "sha512-ibPK3iA+vaY1eEjESkQkM0BbCqFOaZMiXRTtdB0u7b4djtY6JnsjvPdUHVMg6xQt3B8fpTTWHI9A+ADjM9frzg==",
      "dev": true
    },
    "node-emoji": {
      "version": "1.10.0",
      "resolved": "https://registry.npmjs.org/node-emoji/-/node-emoji-1.10.0.tgz",
      "integrity": "sha512-Yt3384If5H6BYGVHiHwTL+99OzJKHhgp82S8/dktEK73T26BazdgZ4JZh92xSVtGNJvz9UbXdNAc5hcrXV42vw==",
      "dev": true,
      "requires": {
        "lodash.toarray": "^4.4.0"
      }
    },
    "node-fetch": {
      "version": "2.6.1",
      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.1.tgz",
      "integrity": "sha512-V4aYg89jEoVRxRb2fJdAg8FHvI7cEyYdVAh94HH0UIK8oJxUfkjlDQN9RbMx+bEjP7+ggMiFRprSti032Oipxw==",
      "dev": true
    },
    "node-gyp": {
      "version": "3.8.0",
      "resolved": "https://registry.npmjs.org/node-gyp/-/node-gyp-3.8.0.tgz",
      "integrity": "sha512-3g8lYefrRRzvGeSowdJKAKyks8oUpLEd/DyPV4eMhVlhJ0aNaZqIrNUIPuEWWTAoPqyFkfGrM67MC69baqn6vA==",
      "dev": true,
      "requires": {
        "fstream": "^1.0.0",
        "glob": "^7.0.3",
        "graceful-fs": "^4.1.2",
        "mkdirp": "^0.5.0",
        "nopt": "2 || 3",
        "npmlog": "0 || 1 || 2 || 3 || 4",
        "osenv": "0",
        "request": "^2.87.0",
        "rimraf": "2",
        "semver": "~5.3.0",
        "tar": "^2.0.0",
        "which": "1"
      },
      "dependencies": {
        "ajv": {
          "version": "6.12.6",
          "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
          "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
          "dev": true,
          "requires": {
            "fast-deep-equal": "^3.1.1",
            "fast-json-stable-stringify": "^2.0.0",
            "json-schema-traverse": "^0.4.1",
            "uri-js": "^4.2.2"
          }
        },
        "assert-plus": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
          "integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU=",
          "dev": true
        },
        "aws-sign2": {
          "version": "0.7.0",
          "resolved": "https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz",
          "integrity": "sha1-tG6JCTSpWR8tL2+G1+ap8bP+dqg=",
          "dev": true
        },
        "form-data": {
          "version": "2.3.3",
          "resolved": "https://registry.npmjs.org/form-data/-/form-data-2.3.3.tgz",
          "integrity": "sha512-1lLKB2Mu3aGP1Q/2eCOx0fNbRMe7XdwktwOruhfqqd0rIJWwN4Dh+E3hrPSlDCXnSR7UtZ1N38rVXm+6+MEhJQ==",
          "dev": true,
          "requires": {
            "asynckit": "^0.4.0",
            "combined-stream": "^1.0.6",
            "mime-types": "^2.1.12"
          }
        },
        "har-schema": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/har-schema/-/har-schema-2.0.0.tgz",
          "integrity": "sha1-qUwiJOvKwEeCoNkDVSHyRzW37JI=",
          "dev": true
        },
        "har-validator": {
          "version": "5.1.5",
          "resolved": "https://registry.npmjs.org/har-validator/-/har-validator-5.1.5.tgz",
          "integrity": "sha512-nmT2T0lljbxdQZfspsno9hgrG3Uir6Ks5afism62poxqBM6sDnMEuPmzTq8XN0OEwqKLLdh1jQI3qyE66Nzb3w==",
          "dev": true,
          "requires": {
            "ajv": "^6.12.3",
            "har-schema": "^2.0.0"
          }
        },
        "http-signature": {
          "version": "1.2.0",
          "resolved": "https://registry.npmjs.org/http-signature/-/http-signature-1.2.0.tgz",
          "integrity": "sha1-muzZJRFHcvPZW2WmCruPfBj7rOE=",
          "dev": true,
          "requires": {
            "assert-plus": "^1.0.0",
            "jsprim": "^1.2.2",
            "sshpk": "^1.7.0"
          }
        },
        "oauth-sign": {
          "version": "0.9.0",
          "resolved": "https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.9.0.tgz",
          "integrity": "sha512-fexhUFFPTGV8ybAtSIGbV6gOkSv8UtRbDBnAyLQw4QPKkgNlsH2ByPGtMUqdWkos6YCRmAqViwgZrJc/mRDzZQ==",
          "dev": true
        },
        "performance-now": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz",
          "integrity": "sha1-Ywn04OX6kT7BxpMHrjZLSzd8nns=",
          "dev": true
        },
        "punycode": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz",
          "integrity": "sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A==",
          "dev": true
        },
        "qs": {
          "version": "6.5.2",
          "resolved": "https://registry.npmjs.org/qs/-/qs-6.5.2.tgz",
          "integrity": "sha512-N5ZAX4/LxJmF+7wN74pUD6qAh9/wnvdQcjq9TZjevvXzSUo7bfmw91saqMjzGS2xq91/odN2dW/WOl7qQHNDGA==",
          "dev": true
        },
        "request": {
          "version": "2.88.2",
          "resolved": "https://registry.npmjs.org/request/-/request-2.88.2.tgz",
          "integrity": "sha512-MsvtOrfG9ZcrOwAW+Qi+F6HbD0CWXEh9ou77uOb7FM2WPhwT7smM833PzanhJLsgXjN89Ir6V2PczXNnMpwKhw==",
          "dev": true,
          "requires": {
            "aws-sign2": "~0.7.0",
            "aws4": "^1.8.0",
            "caseless": "~0.12.0",
            "combined-stream": "~1.0.6",
            "extend": "~3.0.2",
            "forever-agent": "~0.6.1",
            "form-data": "~2.3.2",
            "har-validator": "~5.1.3",
            "http-signature": "~1.2.0",
            "is-typedarray": "~1.0.0",
            "isstream": "~0.1.2",
            "json-stringify-safe": "~5.0.1",
            "mime-types": "~2.1.19",
            "oauth-sign": "~0.9.0",
            "performance-now": "^2.1.0",
            "qs": "~6.5.2",
            "safe-buffer": "^5.1.2",
            "tough-cookie": "~2.5.0",
            "tunnel-agent": "^0.6.0",
            "uuid": "^3.3.2"
          }
        },
        "semver": {
          "version": "5.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.3.0.tgz",
          "integrity": "sha1-myzl094C0XxgEq0yaqa00M9U+U8=",
          "dev": true
        },
        "tough-cookie": {
          "version": "2.5.0",
          "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.5.0.tgz",
          "integrity": "sha512-nlLsUzgm1kfLXSXfRZMc1KLAugd4hqJHDTvc2hDIwS3mZAfMEuMbc03SujMF+GEcpaX/qboeycw6iO8JwVv2+g==",
          "dev": true,
          "requires": {
            "psl": "^1.1.28",
            "punycode": "^2.1.1"
          }
        }
      }
    },
    "node-gyp-build": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/node-gyp-build/-/node-gyp-build-4.2.3.tgz",
      "integrity": "sha512-MN6ZpzmfNCRM+3t57PTJHgHyw/h4OWnZ6mR8P5j/uZtqQr46RRuDE/P+g3n0YR/AiYXeWixZZzaip77gdICfRg==",
      "dev": true
    },
    "node-hid": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/node-hid/-/node-hid-2.1.1.tgz",
      "integrity": "sha512-Skzhqow7hyLZU93eIPthM9yjot9lszg9xrKxESleEs05V2NcbUptZc5HFqzjOkSmL0sFlZFr3kmvaYebx06wrw==",
      "requires": {
        "bindings": "^1.5.0",
        "node-addon-api": "^3.0.2",
        "prebuild-install": "^6.0.0"
      },
      "dependencies": {
        "node-addon-api": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/node-addon-api/-/node-addon-api-3.1.0.tgz",
          "integrity": "sha512-flmrDNB06LIl5lywUz7YlNGZH/5p0M7W28k8hzd9Lshtdh1wshD2Y+U4h9LD6KObOy1f+fEVdgprPrEymjM5uw=="
        }
      }
    },
    "node-notifier": {
      "version": "4.6.1",
      "resolved": "https://registry.npmjs.org/node-notifier/-/node-notifier-4.6.1.tgz",
      "integrity": "sha1-BW0UJE89zBzq3+aK+c/wxUc6M/M=",
      "dev": true,
      "requires": {
        "cli-usage": "^0.1.1",
        "growly": "^1.2.0",
        "lodash.clonedeep": "^3.0.0",
        "minimist": "^1.1.1",
        "semver": "^5.1.0",
        "shellwords": "^0.1.0",
        "which": "^1.0.5"
      },
      "dependencies": {
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        }
      }
    },
    "node-pre-gyp": {
      "version": "0.11.0",
      "resolved": "https://registry.npmjs.org/node-pre-gyp/-/node-pre-gyp-0.11.0.tgz",
      "integrity": "sha512-TwWAOZb0j7e9eGaf9esRx3ZcLaE5tQ2lvYy1pb5IAaG1a2e2Kv5Lms1Y4hpj+ciXJRofIxxlt5haeQ/2ANeE0Q==",
      "dev": true,
      "requires": {
        "detect-libc": "^1.0.2",
        "mkdirp": "^0.5.1",
        "needle": "^2.2.1",
        "nopt": "^4.0.1",
        "npm-packlist": "^1.1.6",
        "npmlog": "^4.0.2",
        "rc": "^1.2.7",
        "rimraf": "^2.6.1",
        "semver": "^5.3.0",
        "tar": "^4"
      },
      "dependencies": {
        "nopt": {
          "version": "4.0.3",
          "resolved": "https://registry.npmjs.org/nopt/-/nopt-4.0.3.tgz",
          "integrity": "sha512-CvaGwVMztSMJLOeXPrez7fyfObdZqNUK1cPAEzLHrTybIua9pMdmmPR5YwtfNftIOMv3DPUhFaxsZMNTQO20Kg==",
          "dev": true,
          "requires": {
            "abbrev": "1",
            "osenv": "^0.1.4"
          }
        },
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        },
        "tar": {
          "version": "4.4.13",
          "resolved": "https://registry.npmjs.org/tar/-/tar-4.4.13.tgz",
          "integrity": "sha512-w2VwSrBoHa5BsSyH+KxEqeQBAllHhccyMFVHtGtdMpF4W7IRWfZjFiQceJPChOeTsSDVUpER2T8FA93pr0L+QA==",
          "dev": true,
          "requires": {
            "chownr": "^1.1.1",
            "fs-minipass": "^1.2.5",
            "minipass": "^2.8.6",
            "minizlib": "^1.2.1",
            "mkdirp": "^0.5.0",
            "safe-buffer": "^5.1.2",
            "yallist": "^3.0.3"
          }
        },
        "yallist": {
          "version": "3.1.1",
          "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
          "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==",
          "dev": true
        }
      }
    },
    "node-sass": {
      "version": "4.14.1",
      "resolved": "https://registry.npmjs.org/node-sass/-/node-sass-4.14.1.tgz",
      "integrity": "sha512-sjCuOlvGyCJS40R8BscF5vhVlQjNN069NtQ1gSxyK1u9iqvn6tf7O1R4GNowVZfiZUCRt5MmMs1xd+4V/7Yr0g==",
      "dev": true,
      "requires": {
        "async-foreach": "^0.1.3",
        "chalk": "^1.1.1",
        "cross-spawn": "^3.0.0",
        "gaze": "^1.0.0",
        "get-stdin": "^4.0.1",
        "glob": "^7.0.3",
        "in-publish": "^2.0.0",
        "lodash": "^4.17.15",
        "meow": "^3.7.0",
        "mkdirp": "^0.5.1",
        "nan": "^2.13.2",
        "node-gyp": "^3.8.0",
        "npmlog": "^4.0.0",
        "request": "^2.88.0",
        "sass-graph": "2.2.5",
        "stdout-stream": "^1.4.0",
        "true-case-path": "^1.0.2"
      },
      "dependencies": {
        "ajv": {
          "version": "6.12.6",
          "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
          "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
          "dev": true,
          "requires": {
            "fast-deep-equal": "^3.1.1",
            "fast-json-stable-stringify": "^2.0.0",
            "json-schema-traverse": "^0.4.1",
            "uri-js": "^4.2.2"
          }
        },
        "assert-plus": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
          "integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU=",
          "dev": true
        },
        "aws-sign2": {
          "version": "0.7.0",
          "resolved": "https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz",
          "integrity": "sha1-tG6JCTSpWR8tL2+G1+ap8bP+dqg=",
          "dev": true
        },
        "form-data": {
          "version": "2.3.3",
          "resolved": "https://registry.npmjs.org/form-data/-/form-data-2.3.3.tgz",
          "integrity": "sha512-1lLKB2Mu3aGP1Q/2eCOx0fNbRMe7XdwktwOruhfqqd0rIJWwN4Dh+E3hrPSlDCXnSR7UtZ1N38rVXm+6+MEhJQ==",
          "dev": true,
          "requires": {
            "asynckit": "^0.4.0",
            "combined-stream": "^1.0.6",
            "mime-types": "^2.1.12"
          }
        },
        "gaze": {
          "version": "1.1.3",
          "resolved": "https://registry.npmjs.org/gaze/-/gaze-1.1.3.tgz",
          "integrity": "sha512-BRdNm8hbWzFzWHERTrejLqwHDfS4GibPoq5wjTPIoJHoBtKGPg3xAFfxmM+9ztbXelxcf2hwQcaz1PtmFeue8g==",
          "dev": true,
          "requires": {
            "globule": "^1.0.0"
          }
        },
        "globule": {
          "version": "1.3.2",
          "resolved": "https://registry.npmjs.org/globule/-/globule-1.3.2.tgz",
          "integrity": "sha512-7IDTQTIu2xzXkT+6mlluidnWo+BypnbSoEVVQCGfzqnl5Ik8d3e1d4wycb8Rj9tWW+Z39uPWsdlquqiqPCd/pA==",
          "dev": true,
          "requires": {
            "glob": "~7.1.1",
            "lodash": "~4.17.10",
            "minimatch": "~3.0.2"
          },
          "dependencies": {
            "glob": {
              "version": "7.1.6",
              "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.6.tgz",
              "integrity": "sha512-LwaxwyZ72Lk7vZINtNNrywX0ZuLyStrdDtabefZKAY5ZGJhVtgdznluResxNmPitE0SAO+O26sWTHeKSI2wMBA==",
              "dev": true,
              "requires": {
                "fs.realpath": "^1.0.0",
                "inflight": "^1.0.4",
                "inherits": "2",
                "minimatch": "^3.0.4",
                "once": "^1.3.0",
                "path-is-absolute": "^1.0.0"
              }
            }
          }
        },
        "har-schema": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/har-schema/-/har-schema-2.0.0.tgz",
          "integrity": "sha1-qUwiJOvKwEeCoNkDVSHyRzW37JI=",
          "dev": true
        },
        "har-validator": {
          "version": "5.1.5",
          "resolved": "https://registry.npmjs.org/har-validator/-/har-validator-5.1.5.tgz",
          "integrity": "sha512-nmT2T0lljbxdQZfspsno9hgrG3Uir6Ks5afism62poxqBM6sDnMEuPmzTq8XN0OEwqKLLdh1jQI3qyE66Nzb3w==",
          "dev": true,
          "requires": {
            "ajv": "^6.12.3",
            "har-schema": "^2.0.0"
          }
        },
        "http-signature": {
          "version": "1.2.0",
          "resolved": "https://registry.npmjs.org/http-signature/-/http-signature-1.2.0.tgz",
          "integrity": "sha1-muzZJRFHcvPZW2WmCruPfBj7rOE=",
          "dev": true,
          "requires": {
            "assert-plus": "^1.0.0",
            "jsprim": "^1.2.2",
            "sshpk": "^1.7.0"
          }
        },
        "oauth-sign": {
          "version": "0.9.0",
          "resolved": "https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.9.0.tgz",
          "integrity": "sha512-fexhUFFPTGV8ybAtSIGbV6gOkSv8UtRbDBnAyLQw4QPKkgNlsH2ByPGtMUqdWkos6YCRmAqViwgZrJc/mRDzZQ==",
          "dev": true
        },
        "performance-now": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz",
          "integrity": "sha1-Ywn04OX6kT7BxpMHrjZLSzd8nns=",
          "dev": true
        },
        "punycode": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz",
          "integrity": "sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A==",
          "dev": true
        },
        "qs": {
          "version": "6.5.2",
          "resolved": "https://registry.npmjs.org/qs/-/qs-6.5.2.tgz",
          "integrity": "sha512-N5ZAX4/LxJmF+7wN74pUD6qAh9/wnvdQcjq9TZjevvXzSUo7bfmw91saqMjzGS2xq91/odN2dW/WOl7qQHNDGA==",
          "dev": true
        },
        "request": {
          "version": "2.88.2",
          "resolved": "https://registry.npmjs.org/request/-/request-2.88.2.tgz",
          "integrity": "sha512-MsvtOrfG9ZcrOwAW+Qi+F6HbD0CWXEh9ou77uOb7FM2WPhwT7smM833PzanhJLsgXjN89Ir6V2PczXNnMpwKhw==",
          "dev": true,
          "requires": {
            "aws-sign2": "~0.7.0",
            "aws4": "^1.8.0",
            "caseless": "~0.12.0",
            "combined-stream": "~1.0.6",
            "extend": "~3.0.2",
            "forever-agent": "~0.6.1",
            "form-data": "~2.3.2",
            "har-validator": "~5.1.3",
            "http-signature": "~1.2.0",
            "is-typedarray": "~1.0.0",
            "isstream": "~0.1.2",
            "json-stringify-safe": "~5.0.1",
            "mime-types": "~2.1.19",
            "oauth-sign": "~0.9.0",
            "performance-now": "^2.1.0",
            "qs": "~6.5.2",
            "safe-buffer": "^5.1.2",
            "tough-cookie": "~2.5.0",
            "tunnel-agent": "^0.6.0",
            "uuid": "^3.3.2"
          }
        },
        "tough-cookie": {
          "version": "2.5.0",
          "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.5.0.tgz",
          "integrity": "sha512-nlLsUzgm1kfLXSXfRZMc1KLAugd4hqJHDTvc2hDIwS3mZAfMEuMbc03SujMF+GEcpaX/qboeycw6iO8JwVv2+g==",
          "dev": true,
          "requires": {
            "psl": "^1.1.28",
            "punycode": "^2.1.1"
          }
        }
      }
    },
    "node.extend": {
      "version": "1.1.8",
      "resolved": "https://registry.npmjs.org/node.extend/-/node.extend-1.1.8.tgz",
      "integrity": "sha512-L/dvEBwyg3UowwqOUTyDsGBU6kjBQOpOhshio9V3i3BMPv5YUb9+mWNN8MK0IbWqT0AqaTSONZf0aTuMMahWgA==",
      "dev": true,
      "requires": {
        "has": "^1.0.3",
        "is": "^3.2.1"
      }
    },
    "noop-logger": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/noop-logger/-/noop-logger-0.1.1.tgz",
      "integrity": "sha1-lKKxYzxPExdVMAfYlm/Q6EG2pMI="
    },
    "nopt": {
      "version": "3.0.6",
      "resolved": "https://registry.npmjs.org/nopt/-/nopt-3.0.6.tgz",
      "integrity": "sha1-xkZdvwirzU2zWTF/eaxopkayj/k=",
      "dev": true,
      "requires": {
        "abbrev": "1"
      }
    },
    "normalize-package-data": {
      "version": "2.5.0",
      "resolved": "https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-2.5.0.tgz",
      "integrity": "sha512-/5CMN3T0R4XTj4DcGaexo+roZSdSFW/0AOOTROrjxzCG1wrWXEsGbRKevjlIL+ZDE4sZlJr5ED4YW0yqmkK+eA==",
      "dev": true,
      "requires": {
        "hosted-git-info": "^2.1.4",
        "resolve": "^1.10.0",
        "semver": "2 || 3 || 4 || 5",
        "validate-npm-package-license": "^3.0.1"
      }
    },
    "normalize-path": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
      "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==",
      "dev": true
    },
    "normalize-range": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/normalize-range/-/normalize-range-0.1.2.tgz",
      "integrity": "sha1-LRDAa9/TEuqXd2laTShDlFa3WUI=",
      "dev": true
    },
    "normalize-url": {
      "version": "4.5.0",
      "resolved": "https://registry.npmjs.org/normalize-url/-/normalize-url-4.5.0.tgz",
      "integrity": "sha512-2s47yzUxdexf1OhyRi4Em83iQk0aPvwTddtFz4hnSSw9dCEsLEGf6SwIO8ss/19S9iBb5sJaOuTvTGDeZI00BQ==",
      "dev": true
    },
    "npm-build-zip": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/npm-build-zip/-/npm-build-zip-1.0.3.tgz",
      "integrity": "sha512-+/Oe7Z4fvYsShFnmwC0QmR6ny4SU3YYVleTOBmFtGalPCkAywV+L9Yo9hwRUIR4OXN89k60Lu7lQa/zt+O63VA==",
      "dev": true,
      "requires": {
        "archiver-promise": "1.0.0",
        "npm-packlist": "1.4.4",
        "sanitize-filename": "1.6.3",
        "yargs": "13.3.0"
      },
      "dependencies": {
        "npm-packlist": {
          "version": "1.4.4",
          "resolved": "https://registry.npmjs.org/npm-packlist/-/npm-packlist-1.4.4.tgz",
          "integrity": "sha512-zTLo8UcVYtDU3gdeaFu2Xu0n0EvelfHDGuqtNIn5RO7yQj4H1TqNdBc/yZjxnWA0PVB8D3Woyp0i5B43JwQ6Vw==",
          "dev": true,
          "requires": {
            "ignore-walk": "^3.0.1",
            "npm-bundled": "^1.0.1"
          }
        },
        "yargs": {
          "version": "13.3.0",
          "resolved": "https://registry.npmjs.org/yargs/-/yargs-13.3.0.tgz",
          "integrity": "sha512-2eehun/8ALW8TLoIl7MVaRUrg+yCnenu8B4kBlRxj3GJGDKU1Og7sMXPNm1BYyM1DOJmTZ4YeN/Nwxv+8XJsUA==",
          "dev": true,
          "requires": {
            "cliui": "^5.0.0",
            "find-up": "^3.0.0",
            "get-caller-file": "^2.0.1",
            "require-directory": "^2.1.1",
            "require-main-filename": "^2.0.0",
            "set-blocking": "^2.0.0",
            "string-width": "^3.0.0",
            "which-module": "^2.0.0",
            "y18n": "^4.0.0",
            "yargs-parser": "^13.1.1"
          }
        }
      }
    },
    "npm-bundled": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/npm-bundled/-/npm-bundled-1.1.1.tgz",
      "integrity": "sha512-gqkfgGePhTpAEgUsGEgcq1rqPXA+tv/aVBlgEzfXwA1yiUJF7xtEt3CtVwOjNYQOVknDk0F20w58Fnm3EtG0fA==",
      "dev": true,
      "requires": {
        "npm-normalize-package-bin": "^1.0.1"
      }
    },
    "npm-conf": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/npm-conf/-/npm-conf-1.1.3.tgz",
      "integrity": "sha512-Yic4bZHJOt9RCFbRP3GgpqhScOY4HH3V2P8yBj6CeYq118Qr+BLXqT2JvpJ00mryLESpgOxf5XlFv4ZjXxLScw==",
      "dev": true,
      "requires": {
        "config-chain": "^1.1.11",
        "pify": "^3.0.0"
      },
      "dependencies": {
        "pify": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/pify/-/pify-3.0.0.tgz",
          "integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=",
          "dev": true
        }
      }
    },
    "npm-normalize-package-bin": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/npm-normalize-package-bin/-/npm-normalize-package-bin-1.0.1.tgz",
      "integrity": "sha512-EPfafl6JL5/rU+ot6P3gRSCpPDW5VmIzX959Ob1+ySFUuuYHWHekXpwdUZcKP5C+DS4GEtdJluwBjnsNDl+fSA==",
      "dev": true
    },
    "npm-packlist": {
      "version": "1.4.8",
      "resolved": "https://registry.npmjs.org/npm-packlist/-/npm-packlist-1.4.8.tgz",
      "integrity": "sha512-5+AZgwru5IevF5ZdnFglB5wNlHG1AOOuw28WhUq8/8emhBmLv6jX5by4WJCh7lW0uSYZYS6DXqIsyZVIXRZU9A==",
      "dev": true,
      "requires": {
        "ignore-walk": "^3.0.1",
        "npm-bundled": "^1.0.1",
        "npm-normalize-package-bin": "^1.0.1"
      }
    },
    "npm-run-path": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/npm-run-path/-/npm-run-path-2.0.2.tgz",
      "integrity": "sha1-NakjLfo11wZ7TLLd8jV7GHFTbF8=",
      "dev": true,
      "requires": {
        "path-key": "^2.0.0"
      }
    },
    "npmlog": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/npmlog/-/npmlog-4.1.2.tgz",
      "integrity": "sha512-2uUqazuKlTaSI/dC8AzicUck7+IrEaOnN/e0jd3Xtt1KcGpwx30v50mL7oPyr/h9bL3E4aZccVwpwP+5W9Vjkg==",
      "requires": {
        "are-we-there-yet": "~1.1.2",
        "console-control-strings": "~1.1.0",
        "gauge": "~2.7.3",
        "set-blocking": "~2.0.0"
      }
    },
    "num2fraction": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/num2fraction/-/num2fraction-1.2.2.tgz",
      "integrity": "sha1-b2gragJ6Tp3fpFZM0lidHU5mnt4=",
      "dev": true
    },
    "number-is-nan": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/number-is-nan/-/number-is-nan-1.0.1.tgz",
      "integrity": "sha1-CXtgK1NCKlIsGvuHkDGDNpQaAR0="
    },
    "number-to-bn": {
      "version": "1.7.0",
      "resolved": "https://registry.npmjs.org/number-to-bn/-/number-to-bn-1.7.0.tgz",
      "integrity": "sha1-uzYjWS9+X54AMLGXe9QaDFP+HqA=",
      "dev": true,
      "requires": {
        "bn.js": "4.11.6",
        "strip-hex-prefix": "1.0.0"
      },
      "dependencies": {
        "bn.js": {
          "version": "4.11.6",
          "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.11.6.tgz",
          "integrity": "sha1-UzRK2xRhehP26N0s4okF0cC6MhU=",
          "dev": true
        }
      }
    },
    "nw": {
      "version": "0.26.6",
      "resolved": "https://registry.npmjs.org/nw/-/nw-0.26.6.tgz",
      "integrity": "sha512-16pYQ4V8GHxSoalRqq2YaN+IqA5/CDtWfpxmoTLRSyEVWg5xvl1c1PfAJLpEJofZKfRs1pVO7MDRNU3cBlOIJw==",
      "dev": true,
      "requires": {
        "chalk": "~1.1.3",
        "decompress": "^3.0.0",
        "download": "^5.0.3",
        "file-exists": "^2.0.0",
        "merge": "^1.2.0",
        "multimeter": "^0.1.1",
        "rimraf": "^2.2.8",
        "semver": "^5.1.0",
        "yargs": "^3.2.1"
      },
      "dependencies": {
        "camelcase": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-2.1.1.tgz",
          "integrity": "sha1-fB0W1nmhu+WcoCys7PsBHiAfWh8=",
          "dev": true
        },
        "cliui": {
          "version": "3.2.0",
          "resolved": "https://registry.npmjs.org/cliui/-/cliui-3.2.0.tgz",
          "integrity": "sha1-EgYBU3qRbSmUD5NNo7SNWFo5IT0=",
          "dev": true,
          "requires": {
            "string-width": "^1.0.1",
            "strip-ansi": "^3.0.1",
            "wrap-ansi": "^2.0.0"
          }
        },
        "is-fullwidth-code-point": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz",
          "integrity": "sha1-754xOG8DGn8NZDr4L95QxFfvAMs=",
          "dev": true,
          "requires": {
            "number-is-nan": "^1.0.0"
          }
        },
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        },
        "string-width": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-1.0.2.tgz",
          "integrity": "sha1-EYvfW4zcUaKn5w0hHgfisLmxB9M=",
          "dev": true,
          "requires": {
            "code-point-at": "^1.0.0",
            "is-fullwidth-code-point": "^1.0.0",
            "strip-ansi": "^3.0.0"
          }
        },
        "window-size": {
          "version": "0.1.4",
          "resolved": "https://registry.npmjs.org/window-size/-/window-size-0.1.4.tgz",
          "integrity": "sha1-+OGqHuWlPsW/FR/6CXQqatdpeHY=",
          "dev": true
        },
        "wrap-ansi": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-2.1.0.tgz",
          "integrity": "sha1-2Pw9KE3QV5T+hJc8rs3Rz4JP3YU=",
          "dev": true,
          "requires": {
            "string-width": "^1.0.1",
            "strip-ansi": "^3.0.1"
          }
        },
        "y18n": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/y18n/-/y18n-3.2.1.tgz",
          "integrity": "sha1-bRX7qITAhnnA136I53WegR4H+kE=",
          "dev": true
        },
        "yargs": {
          "version": "3.32.0",
          "resolved": "https://registry.npmjs.org/yargs/-/yargs-3.32.0.tgz",
          "integrity": "sha1-AwiOnr+edWtpdRYR0qXvWRSCyZU=",
          "dev": true,
          "requires": {
            "camelcase": "^2.0.1",
            "cliui": "^3.0.3",
            "decamelize": "^1.1.1",
            "os-locale": "^1.4.0",
            "string-width": "^1.0.1",
            "window-size": "^0.1.4",
            "y18n": "^3.2.0"
          }
        }
      }
    },
    "nw-builder": {
      "version": "3.5.7",
      "resolved": "https://registry.npmjs.org/nw-builder/-/nw-builder-3.5.7.tgz",
      "integrity": "sha512-7LTQu8oom56xdDeyoUygZytxvyWuh+pw4nY4eFMGUd7/m/eOdAs/6UZjav6CbjnyIg8n4FtwnjCXXLsFI6Ooug==",
      "dev": true,
      "requires": {
        "archiver": "^2.1.1",
        "boxen": "^1.1.0",
        "chalk": "^2.3.2",
        "deprecate": "~1.0.0",
        "extract-zip": "^1.6.5",
        "graceful-fs-extra": "^2.0.0",
        "graceful-ncp": "^3.0.0",
        "inherits": "~2.0.1",
        "lazy-req": "^2.0.0",
        "lodash": "~4.17.4",
        "optimist": "^0.6.1",
        "plist": "^3.0.1",
        "progress": "~2.0.0",
        "rcedit": "^1.0.0",
        "recursive-readdir-sync": "^1.0.6",
        "request": "^2.88.0",
        "rimraf": "^2.5.2",
        "semver": "^5.5.0",
        "simple-glob": "~0.2.0",
        "tar-fs": "^1.13.0",
        "temp": "github:adam-lynch/node-temp#remove_tmpdir_dep",
        "thenify": "^3.3.0",
        "update-notifier": "^2.4.0",
        "winresourcer": "^0.9.0"
      },
      "dependencies": {
        "ajv": {
          "version": "6.12.6",
          "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
          "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
          "dev": true,
          "requires": {
            "fast-deep-equal": "^3.1.1",
            "fast-json-stable-stringify": "^2.0.0",
            "json-schema-traverse": "^0.4.1",
            "uri-js": "^4.2.2"
          }
        },
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "assert-plus": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
          "integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU=",
          "dev": true
        },
        "aws-sign2": {
          "version": "0.7.0",
          "resolved": "https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz",
          "integrity": "sha1-tG6JCTSpWR8tL2+G1+ap8bP+dqg=",
          "dev": true
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "dev": true,
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          }
        },
        "form-data": {
          "version": "2.3.3",
          "resolved": "https://registry.npmjs.org/form-data/-/form-data-2.3.3.tgz",
          "integrity": "sha512-1lLKB2Mu3aGP1Q/2eCOx0fNbRMe7XdwktwOruhfqqd0rIJWwN4Dh+E3hrPSlDCXnSR7UtZ1N38rVXm+6+MEhJQ==",
          "dev": true,
          "requires": {
            "asynckit": "^0.4.0",
            "combined-stream": "^1.0.6",
            "mime-types": "^2.1.12"
          }
        },
        "har-schema": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/har-schema/-/har-schema-2.0.0.tgz",
          "integrity": "sha1-qUwiJOvKwEeCoNkDVSHyRzW37JI=",
          "dev": true
        },
        "har-validator": {
          "version": "5.1.5",
          "resolved": "https://registry.npmjs.org/har-validator/-/har-validator-5.1.5.tgz",
          "integrity": "sha512-nmT2T0lljbxdQZfspsno9hgrG3Uir6Ks5afism62poxqBM6sDnMEuPmzTq8XN0OEwqKLLdh1jQI3qyE66Nzb3w==",
          "dev": true,
          "requires": {
            "ajv": "^6.12.3",
            "har-schema": "^2.0.0"
          }
        },
        "has-flag": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
          "integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0=",
          "dev": true
        },
        "http-signature": {
          "version": "1.2.0",
          "resolved": "https://registry.npmjs.org/http-signature/-/http-signature-1.2.0.tgz",
          "integrity": "sha1-muzZJRFHcvPZW2WmCruPfBj7rOE=",
          "dev": true,
          "requires": {
            "assert-plus": "^1.0.0",
            "jsprim": "^1.2.2",
            "sshpk": "^1.7.0"
          }
        },
        "oauth-sign": {
          "version": "0.9.0",
          "resolved": "https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.9.0.tgz",
          "integrity": "sha512-fexhUFFPTGV8ybAtSIGbV6gOkSv8UtRbDBnAyLQw4QPKkgNlsH2ByPGtMUqdWkos6YCRmAqViwgZrJc/mRDzZQ==",
          "dev": true
        },
        "performance-now": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz",
          "integrity": "sha1-Ywn04OX6kT7BxpMHrjZLSzd8nns=",
          "dev": true
        },
        "punycode": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz",
          "integrity": "sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A==",
          "dev": true
        },
        "qs": {
          "version": "6.5.2",
          "resolved": "https://registry.npmjs.org/qs/-/qs-6.5.2.tgz",
          "integrity": "sha512-N5ZAX4/LxJmF+7wN74pUD6qAh9/wnvdQcjq9TZjevvXzSUo7bfmw91saqMjzGS2xq91/odN2dW/WOl7qQHNDGA==",
          "dev": true
        },
        "request": {
          "version": "2.88.2",
          "resolved": "https://registry.npmjs.org/request/-/request-2.88.2.tgz",
          "integrity": "sha512-MsvtOrfG9ZcrOwAW+Qi+F6HbD0CWXEh9ou77uOb7FM2WPhwT7smM833PzanhJLsgXjN89Ir6V2PczXNnMpwKhw==",
          "dev": true,
          "requires": {
            "aws-sign2": "~0.7.0",
            "aws4": "^1.8.0",
            "caseless": "~0.12.0",
            "combined-stream": "~1.0.6",
            "extend": "~3.0.2",
            "forever-agent": "~0.6.1",
            "form-data": "~2.3.2",
            "har-validator": "~5.1.3",
            "http-signature": "~1.2.0",
            "is-typedarray": "~1.0.0",
            "isstream": "~0.1.2",
            "json-stringify-safe": "~5.0.1",
            "mime-types": "~2.1.19",
            "oauth-sign": "~0.9.0",
            "performance-now": "^2.1.0",
            "qs": "~6.5.2",
            "safe-buffer": "^5.1.2",
            "tough-cookie": "~2.5.0",
            "tunnel-agent": "^0.6.0",
            "uuid": "^3.3.2"
          }
        },
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        },
        "tough-cookie": {
          "version": "2.5.0",
          "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.5.0.tgz",
          "integrity": "sha512-nlLsUzgm1kfLXSXfRZMc1KLAugd4hqJHDTvc2hDIwS3mZAfMEuMbc03SujMF+GEcpaX/qboeycw6iO8JwVv2+g==",
          "dev": true,
          "requires": {
            "psl": "^1.1.28",
            "punycode": "^2.1.1"
          }
        }
      }
    },
    "oauth-sign": {
      "version": "0.8.2",
      "resolved": "https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.8.2.tgz",
      "integrity": "sha1-Rqarfwrq2N6unsBWV4C31O/rnUM=",
      "dev": true
    },
    "object-assign": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
      "integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM="
    },
    "object-component": {
      "version": "0.0.3",
      "resolved": "https://registry.npmjs.org/object-component/-/object-component-0.0.3.tgz",
      "integrity": "sha1-8MaapQ78lbhmwYb0AKM3acsvEpE=",
      "dev": true
    },
    "object-copy": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/object-copy/-/object-copy-0.1.0.tgz",
      "integrity": "sha1-fn2Fi3gb18mRpBupde04EnVOmYw=",
      "dev": true,
      "requires": {
        "copy-descriptor": "^0.1.0",
        "define-property": "^0.2.5",
        "kind-of": "^3.0.3"
      },
      "dependencies": {
        "define-property": {
          "version": "0.2.5",
          "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
          "dev": true,
          "requires": {
            "is-descriptor": "^0.1.0"
          }
        }
      }
    },
    "object-keys": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz",
      "integrity": "sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==",
      "dev": true,
      "optional": true
    },
    "object-visit": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/object-visit/-/object-visit-1.0.1.tgz",
      "integrity": "sha1-95xEk68MU3e1n+OdOV5BBC3QRbs=",
      "dev": true,
      "requires": {
        "isobject": "^3.0.0"
      },
      "dependencies": {
        "isobject": {
          "version": "3.0.1",
          "resolved": "https://registry.npmjs.org/isobject/-/isobject-3.0.1.tgz",
          "integrity": "sha1-TkMekrEalzFjaqH5yNHMvP2reN8=",
          "dev": true
        }
      }
    },
    "object.defaults": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/object.defaults/-/object.defaults-1.1.0.tgz",
      "integrity": "sha1-On+GgzS0B96gbaFtiNXNKeQ1/s8=",
      "dev": true,
      "requires": {
        "array-each": "^1.0.1",
        "array-slice": "^1.0.0",
        "for-own": "^1.0.0",
        "isobject": "^3.0.0"
      },
      "dependencies": {
        "for-own": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/for-own/-/for-own-1.0.0.tgz",
          "integrity": "sha1-xjMy9BXO3EsE2/5wz4NklMU8tEs=",
          "dev": true,
          "requires": {
            "for-in": "^1.0.1"
          }
        },
        "isobject": {
          "version": "3.0.1",
          "resolved": "https://registry.npmjs.org/isobject/-/isobject-3.0.1.tgz",
          "integrity": "sha1-TkMekrEalzFjaqH5yNHMvP2reN8=",
          "dev": true
        }
      }
    },
    "object.map": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/object.map/-/object.map-1.0.1.tgz",
      "integrity": "sha1-z4Plncj8wK1fQlDh94s7gb2AHTc=",
      "dev": true,
      "requires": {
        "for-own": "^1.0.0",
        "make-iterator": "^1.0.0"
      },
      "dependencies": {
        "for-own": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/for-own/-/for-own-1.0.0.tgz",
          "integrity": "sha1-xjMy9BXO3EsE2/5wz4NklMU8tEs=",
          "dev": true,
          "requires": {
            "for-in": "^1.0.1"
          }
        }
      }
    },
    "object.omit": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/object.omit/-/object.omit-2.0.1.tgz",
      "integrity": "sha1-Gpx0SCnznbuFjHbKNXmuKlTr0fo=",
      "dev": true,
      "requires": {
        "for-own": "^0.1.4",
        "is-extendable": "^0.1.1"
      }
    },
    "object.pick": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/object.pick/-/object.pick-1.3.0.tgz",
      "integrity": "sha1-h6EKxMFpS9Lhy/U1kaZhQftd10c=",
      "dev": true,
      "requires": {
        "isobject": "^3.0.1"
      },
      "dependencies": {
        "isobject": {
          "version": "3.0.1",
          "resolved": "https://registry.npmjs.org/isobject/-/isobject-3.0.1.tgz",
          "integrity": "sha1-TkMekrEalzFjaqH5yNHMvP2reN8=",
          "dev": true
        }
      }
    },
    "on-finished": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.3.0.tgz",
      "integrity": "sha1-IPEzZIGwg811M3mSoWlxqi2QaUc=",
      "dev": true,
      "requires": {
        "ee-first": "1.1.1"
      }
    },
    "once": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
      "integrity": "sha1-WDsap3WWHUsROsF9nFC6753Xa9E=",
      "requires": {
        "wrappy": "1"
      }
    },
    "onetime": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/onetime/-/onetime-5.1.2.tgz",
      "integrity": "sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==",
      "dev": true,
      "requires": {
        "mimic-fn": "^2.1.0"
      }
    },
    "open": {
      "version": "7.3.0",
      "resolved": "https://registry.npmjs.org/open/-/open-7.3.0.tgz",
      "integrity": "sha512-mgLwQIx2F/ye9SmbrUkurZCnkoXyXyu9EbHtJZrICjVAJfyMArdHp3KkixGdZx1ZHFPNIwl0DDM1dFFqXbTLZw==",
      "dev": true,
      "requires": {
        "is-docker": "^2.0.0",
        "is-wsl": "^2.1.1"
      },
      "dependencies": {
        "is-wsl": {
          "version": "2.2.0",
          "resolved": "https://registry.npmjs.org/is-wsl/-/is-wsl-2.2.0.tgz",
          "integrity": "sha512-fKzAra0rGJUUBwGBgNkHZuToZcn+TtXHpeCgmkMJMMYx1sQDYaCSyjJBSCa2nH1DGm7s3n1oBnohoVTBaN7Lww==",
          "dev": true,
          "requires": {
            "is-docker": "^2.0.0"
          }
        }
      }
    },
    "openurl": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/openurl/-/openurl-1.1.1.tgz",
      "integrity": "sha1-OHW0sO96UsFW8NtB1GCduw+Us4c=",
      "dev": true
    },
    "opn": {
      "version": "5.3.0",
      "resolved": "https://registry.npmjs.org/opn/-/opn-5.3.0.tgz",
      "integrity": "sha512-bYJHo/LOmoTd+pfiYhfZDnf9zekVJrY+cnS2a5F2x+w5ppvTqObojTP7WiFG+kVZs9Inw+qQ/lw7TroWwhdd2g==",
      "dev": true,
      "requires": {
        "is-wsl": "^1.1.0"
      }
    },
    "optimist": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/optimist/-/optimist-0.6.1.tgz",
      "integrity": "sha1-2j6nRob6IaGaERwybpDrFaAZZoY=",
      "dev": true,
      "requires": {
        "minimist": "~0.0.1",
        "wordwrap": "~0.0.2"
      },
      "dependencies": {
        "minimist": {
          "version": "0.0.10",
          "resolved": "https://registry.npmjs.org/minimist/-/minimist-0.0.10.tgz",
          "integrity": "sha1-3j+YVD2/lggr5IrRoMfNqDYwHc8=",
          "dev": true
        }
      }
    },
    "ora": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/ora/-/ora-5.1.0.tgz",
      "integrity": "sha512-9tXIMPvjZ7hPTbk8DFq1f7Kow/HU/pQYB60JbNq+QnGwcyhWVZaQ4hM9zQDEsPxw/muLpgiHSaumUZxCAmod/w==",
      "dev": true,
      "requires": {
        "chalk": "^4.1.0",
        "cli-cursor": "^3.1.0",
        "cli-spinners": "^2.4.0",
        "is-interactive": "^1.0.0",
        "log-symbols": "^4.0.0",
        "mute-stream": "0.0.8",
        "strip-ansi": "^6.0.0",
        "wcwidth": "^1.0.1"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz",
          "integrity": "sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==",
          "dev": true
        },
        "ansi-styles": {
          "version": "4.3.0",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
          "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
          "dev": true,
          "requires": {
            "color-convert": "^2.0.1"
          }
        },
        "chalk": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.0.tgz",
          "integrity": "sha512-qwx12AxXe2Q5xQ43Ac//I6v5aXTipYrSESdOgzrN+9XjgEpyjpKuvSGaN4qE93f7TQTlerQQ8S+EQ0EyDoVL1A==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "dev": true,
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "strip-ansi": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.0.tgz",
          "integrity": "sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==",
          "dev": true,
          "requires": {
            "ansi-regex": "^5.0.0"
          }
        },
        "supports-color": {
          "version": "7.2.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
          "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        }
      }
    },
    "orchestrator": {
      "version": "0.3.8",
      "resolved": "https://registry.npmjs.org/orchestrator/-/orchestrator-0.3.8.tgz",
      "integrity": "sha1-FOfp4nZPcxX7rBhOUGx6pt+UrX4=",
      "dev": true,
      "requires": {
        "end-of-stream": "~0.1.5",
        "sequencify": "~0.0.7",
        "stream-consume": "~0.1.0"
      }
    },
    "ordered-ast-traverse": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/ordered-ast-traverse/-/ordered-ast-traverse-1.1.1.tgz",
      "integrity": "sha1-aEOhcLwO7otSDMjdwd3TqjD6BXw=",
      "dev": true,
      "requires": {
        "ordered-esprima-props": "~1.1.0"
      }
    },
    "ordered-esprima-props": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/ordered-esprima-props/-/ordered-esprima-props-1.1.0.tgz",
      "integrity": "sha1-qYJwht9fAQqmDpvQK24DNc6i/8s=",
      "dev": true
    },
    "ordered-read-streams": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/ordered-read-streams/-/ordered-read-streams-0.1.0.tgz",
      "integrity": "sha1-/VZamvjrRHO6abbtijQ1LLVS8SY=",
      "dev": true
    },
    "original": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/original/-/original-1.0.2.tgz",
      "integrity": "sha512-hyBVl6iqqUOJ8FqRe+l/gS8H+kKYjrEndd5Pm1MfBtsEKA038HkkdbAl/72EAXGyonD/PFsvmVG+EvcIpliMBg==",
      "dev": true,
      "requires": {
        "url-parse": "^1.4.3"
      },
      "dependencies": {
        "url-parse": {
          "version": "1.4.7",
          "resolved": "https://registry.npmjs.org/url-parse/-/url-parse-1.4.7.tgz",
          "integrity": "sha512-d3uaVyzDB9tQoSXFvuSUNFibTd9zxd2bkVrDRvF5TmvWWQwqE4lgYJ5m+x1DbecWkw+LK4RNl2CU1hHuOKPVlg==",
          "dev": true,
          "requires": {
            "querystringify": "^2.1.1",
            "requires-port": "^1.0.0"
          }
        }
      }
    },
    "os-browserify": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/os-browserify/-/os-browserify-0.1.2.tgz",
      "integrity": "sha1-ScoCk+CxlZCl9d4Qx/JlphfY/lQ=",
      "dev": true
    },
    "os-homedir": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/os-homedir/-/os-homedir-1.0.2.tgz",
      "integrity": "sha1-/7xJiDNuDoM94MFox+8VISGqf7M=",
      "dev": true
    },
    "os-locale": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/os-locale/-/os-locale-1.4.0.tgz",
      "integrity": "sha1-IPnxeuKe00XoveWDsT0gCYA8FNk=",
      "dev": true,
      "requires": {
        "lcid": "^1.0.0"
      }
    },
    "os-tmpdir": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/os-tmpdir/-/os-tmpdir-1.0.2.tgz",
      "integrity": "sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ=",
      "dev": true
    },
    "osenv": {
      "version": "0.1.5",
      "resolved": "https://registry.npmjs.org/osenv/-/osenv-0.1.5.tgz",
      "integrity": "sha512-0CWcCECdMVc2Rw3U5w9ZjqX6ga6ubk1xDVKxtBQPK7wis/0F2r9T6k4ydGYhecl7YUBxBVxhL5oisPsNxAPe2g==",
      "dev": true,
      "requires": {
        "os-homedir": "^1.0.0",
        "os-tmpdir": "^1.0.0"
      }
    },
    "output-file-sync": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/output-file-sync/-/output-file-sync-1.1.2.tgz",
      "integrity": "sha1-0KM+7+YaIF+suQCS6CZZjVJFznY=",
      "dev": true,
      "requires": {
        "graceful-fs": "^4.1.4",
        "mkdirp": "^0.5.1",
        "object-assign": "^4.1.0"
      }
    },
    "p-cancelable": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/p-cancelable/-/p-cancelable-1.1.0.tgz",
      "integrity": "sha512-s73XxOZ4zpt1edZYZzvhqFa6uvQc1vwUa0K0BdtIZgQMAJj9IbebH+JkgKZc9h+B05PKHLOTl4ajG1BmNrVZlw==",
      "dev": true
    },
    "p-finally": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/p-finally/-/p-finally-1.0.0.tgz",
      "integrity": "sha1-P7z7FbiZpEEjs0ttzBi3JDNqLK4=",
      "dev": true
    },
    "p-limit": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz",
      "integrity": "sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==",
      "dev": true,
      "requires": {
        "p-try": "^2.0.0"
      }
    },
    "p-locate": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-3.0.0.tgz",
      "integrity": "sha512-x+12w/To+4GFfgJhBEpiDcLozRJGegY+Ei7/z0tSLkMmxGZNybVMSfWj9aJn8Z5Fc7dBUNJOOVgPv2H7IwulSQ==",
      "dev": true,
      "requires": {
        "p-limit": "^2.0.0"
      }
    },
    "p-try": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz",
      "integrity": "sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==",
      "dev": true
    },
    "package-json": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/package-json/-/package-json-4.0.1.tgz",
      "integrity": "sha1-iGmgQBJTZhxMTKPabCEh7VVfXu0=",
      "dev": true,
      "requires": {
        "got": "^6.7.1",
        "registry-auth-token": "^3.0.1",
        "registry-url": "^3.0.3",
        "semver": "^5.1.0"
      },
      "dependencies": {
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        }
      }
    },
    "pako": {
      "version": "0.2.9",
      "resolved": "https://registry.npmjs.org/pako/-/pako-0.2.9.tgz",
      "integrity": "sha1-8/dSL073gjSNqBYbrZ7P1Rv4OnU=",
      "dev": true
    },
    "parents": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/parents/-/parents-1.0.1.tgz",
      "integrity": "sha1-/t1NK/GTp3dF/nHjcdc8MwfZx1E=",
      "dev": true,
      "requires": {
        "path-platform": "~0.11.15"
      }
    },
    "parse-asn1": {
      "version": "5.1.6",
      "resolved": "https://registry.npmjs.org/parse-asn1/-/parse-asn1-5.1.6.tgz",
      "integrity": "sha512-RnZRo1EPU6JBnra2vGHj0yhp6ebyjBZpmUCLHWiFhxlzvBCCpAuZ7elsBp1PVAbQN0/04VD/19rfzlBSwLstMw==",
      "dev": true,
      "requires": {
        "asn1.js": "^5.2.0",
        "browserify-aes": "^1.0.0",
        "evp_bytestokey": "^1.0.0",
        "pbkdf2": "^3.0.3",
        "safe-buffer": "^5.1.1"
      }
    },
    "parse-author": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/parse-author/-/parse-author-2.0.0.tgz",
      "integrity": "sha1-00YL8d3Q367tQtp1QkLmX7aEqB8=",
      "dev": true,
      "requires": {
        "author-regex": "^1.0.0"
      }
    },
    "parse-filepath": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/parse-filepath/-/parse-filepath-1.0.2.tgz",
      "integrity": "sha1-pjISf1Oq89FYdvWHLz/6x2PWyJE=",
      "dev": true,
      "requires": {
        "is-absolute": "^1.0.0",
        "map-cache": "^0.2.0",
        "path-root": "^0.1.1"
      }
    },
    "parse-glob": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/parse-glob/-/parse-glob-3.0.4.tgz",
      "integrity": "sha1-ssN2z7EfNVE7rdFz7wu246OIORw=",
      "dev": true,
      "requires": {
        "glob-base": "^0.3.0",
        "is-dotfile": "^1.0.0",
        "is-extglob": "^1.0.0",
        "is-glob": "^2.0.0"
      },
      "dependencies": {
        "is-extglob": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-1.0.0.tgz",
          "integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA=",
          "dev": true
        },
        "is-glob": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-2.0.1.tgz",
          "integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",
          "dev": true,
          "requires": {
            "is-extglob": "^1.0.0"
          }
        }
      }
    },
    "parse-headers": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/parse-headers/-/parse-headers-2.0.3.tgz",
      "integrity": "sha512-QhhZ+DCCit2Coi2vmAKbq5RGTRcQUOE2+REgv8vdyu7MnYx2eZztegqtTx99TZ86GTIwqiy3+4nQTWZ2tgmdCA==",
      "dev": true
    },
    "parse-json": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-2.2.0.tgz",
      "integrity": "sha1-9ID0BDTvgHQfhGkJn43qGPVaTck=",
      "dev": true,
      "requires": {
        "error-ex": "^1.2.0"
      }
    },
    "parse-node-version": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/parse-node-version/-/parse-node-version-1.0.1.tgz",
      "integrity": "sha512-3YHlOa/JgH6Mnpr05jP9eDG254US9ek25LyIxZlDItp2iJtwyaXQb57lBYLdT3MowkUFYEV2XXNAYIPlESvJlA==",
      "dev": true
    },
    "parse-passwd": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/parse-passwd/-/parse-passwd-1.0.0.tgz",
      "integrity": "sha1-bVuTSkVpk7I9N/QKOC1vFmao5cY=",
      "dev": true
    },
    "parseqs": {
      "version": "0.0.6",
      "resolved": "https://registry.npmjs.org/parseqs/-/parseqs-0.0.6.tgz",
      "integrity": "sha512-jeAGzMDbfSHHA091hr0r31eYfTig+29g3GKKE/PPbEQ65X0lmMwlEoqmhzu0iztID5uJpZsFlUPDP8ThPL7M8w==",
      "dev": true
    },
    "parseuri": {
      "version": "0.0.6",
      "resolved": "https://registry.npmjs.org/parseuri/-/parseuri-0.0.6.tgz",
      "integrity": "sha512-AUjen8sAkGgao7UyCX6Ahv0gIK2fABKmYjvP4xmy5JaKvcbTRueIqIPHLAfq30xJddqSE033IOMUSOMCcK3Sow==",
      "dev": true
    },
    "parseurl": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz",
      "integrity": "sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==",
      "dev": true
    },
    "pascalcase": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/pascalcase/-/pascalcase-0.1.1.tgz",
      "integrity": "sha1-s2PlXoAGym/iF4TS2yK9FdeRfxQ=",
      "dev": true
    },
    "path-browserify": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/path-browserify/-/path-browserify-0.0.1.tgz",
      "integrity": "sha512-BapA40NHICOS+USX9SN4tyhq+A2RrN/Ws5F0Z5aMHDp98Fl86lX8Oti8B7uN93L4Ifv4fHOEA+pQw87gmMO/lQ==",
      "dev": true
    },
    "path-dirname": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/path-dirname/-/path-dirname-1.0.2.tgz",
      "integrity": "sha1-zDPSTVJeCZpTiMAzbG4yuRYGCeA=",
      "dev": true
    },
    "path-exists": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-3.0.0.tgz",
      "integrity": "sha1-zg6+ql94yxiSXqfYENe1mwEP1RU=",
      "dev": true
    },
    "path-is-absolute": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
      "integrity": "sha1-F0uSaHNVNP+8es5r9TpanhtcX18=",
      "dev": true
    },
    "path-is-inside": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/path-is-inside/-/path-is-inside-1.0.2.tgz",
      "integrity": "sha1-NlQX3t5EQw0cEa9hAn+s8HS9/FM=",
      "dev": true
    },
    "path-key": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/path-key/-/path-key-2.0.1.tgz",
      "integrity": "sha1-QRyttXTFoUDTpLGRDUDYDMn0C0A=",
      "dev": true
    },
    "path-parse": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.6.tgz",
      "integrity": "sha512-GSmOT2EbHrINBf9SR7CDELwlJ8AENk3Qn7OikK4nFYAu3Ote2+JYNVvkpAEQm3/TLNEJFD/xZJjzyxg3KBWOzw==",
      "dev": true
    },
    "path-platform": {
      "version": "0.11.15",
      "resolved": "https://registry.npmjs.org/path-platform/-/path-platform-0.11.15.tgz",
      "integrity": "sha1-6GQhf3TDaFDwhSt43Hv31KVyG/I=",
      "dev": true
    },
    "path-root": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/path-root/-/path-root-0.1.1.tgz",
      "integrity": "sha1-mkpoFMrBwM1zNgqV8yCDyOpHRbc=",
      "dev": true,
      "requires": {
        "path-root-regex": "^0.1.0"
      }
    },
    "path-root-regex": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/path-root-regex/-/path-root-regex-0.1.2.tgz",
      "integrity": "sha1-v8zcjfWxLcUsi0PsONGNcsBLqW0=",
      "dev": true
    },
    "path-type": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/path-type/-/path-type-1.1.0.tgz",
      "integrity": "sha1-WcRPfuSR2nBNpBXaWkBwuk+P5EE=",
      "dev": true,
      "requires": {
        "graceful-fs": "^4.1.2",
        "pify": "^2.0.0",
        "pinkie-promise": "^2.0.0"
      }
    },
    "pause-stream": {
      "version": "0.0.11",
      "resolved": "https://registry.npmjs.org/pause-stream/-/pause-stream-0.0.11.tgz",
      "integrity": "sha1-/lo0sMvOErWqaitAPuLnO2AvFEU=",
      "dev": true,
      "requires": {
        "through": "~2.3"
      }
    },
    "pbkdf2": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/pbkdf2/-/pbkdf2-3.1.1.tgz",
      "integrity": "sha512-4Ejy1OPxi9f2tt1rRV7Go7zmfDQ+ZectEQz3VGUQhgq62HtIRPDyG/JtnwIxs6x3uNMwo2V7q1fMvKjb+Tnpqg==",
      "dev": true,
      "requires": {
        "create-hash": "^1.1.2",
        "create-hmac": "^1.1.4",
        "ripemd160": "^2.0.1",
        "safe-buffer": "^5.0.1",
        "sha.js": "^2.4.8"
      }
    },
    "pdf-lib": {
      "version": "1.10.0",
      "resolved": "https://registry.npmjs.org/pdf-lib/-/pdf-lib-1.10.0.tgz",
      "integrity": "sha512-r9+GL84EI7HIwkgDo191ArhGZgbUPqPRwddTrfV6Th7U4u8UayPixx0FZ/Sv8Dl3K/AZLQ1nrUVFqjTlmy9uJQ==",
      "dev": true,
      "requires": {
        "@pdf-lib/standard-fonts": "^0.0.4",
        "@pdf-lib/upng": "^1.0.1",
        "pako": "^1.0.11",
        "tslib": "^1.11.1"
      },
      "dependencies": {
        "pako": {
          "version": "1.0.11",
          "resolved": "https://registry.npmjs.org/pako/-/pako-1.0.11.tgz",
          "integrity": "sha512-4hLB8Py4zZce5s4yd9XzopqwVv/yGNhV1Bl8NTmCq1763HeK2+EwVTv+leGeL13Dnh2wfbqowVPXCIO0z4taYw==",
          "dev": true
        }
      }
    },
    "pend": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/pend/-/pend-1.2.0.tgz",
      "integrity": "sha1-elfrVQpng/kRUzH89GY9XI4AelA=",
      "dev": true
    },
    "performance-now": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/performance-now/-/performance-now-0.2.0.tgz",
      "integrity": "sha1-M+8wxcd9TqIcWlOGnZG1bY8lVeU=",
      "dev": true
    },
    "picomatch": {
      "version": "2.2.2",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.2.2.tgz",
      "integrity": "sha512-q0M/9eZHzmr0AulXyPwNfZjtwZ/RBZlbN3K3CErVrk50T2ASYI7Bye0EvekFY3IP1Nt2DHu0re+V2ZHIpMkuWg==",
      "dev": true
    },
    "pify": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
      "integrity": "sha1-7RQaasBDqEnqWISY59yosVMw6Qw=",
      "dev": true
    },
    "pinkie": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/pinkie/-/pinkie-2.0.4.tgz",
      "integrity": "sha1-clVrgM+g1IqXToDnckjoDtT3+HA=",
      "dev": true
    },
    "pinkie-promise": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/pinkie-promise/-/pinkie-promise-2.0.1.tgz",
      "integrity": "sha1-ITXW36ejWMBprJsXh3YogihFD/o=",
      "dev": true,
      "requires": {
        "pinkie": "^2.0.0"
      }
    },
    "plist": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/plist/-/plist-3.0.1.tgz",
      "integrity": "sha512-GpgvHHocGRyQm74b6FWEZZVRroHKE1I0/BTjAmySaohK+cUn+hZpbqXkc3KWgW3gQYkqcQej35FohcT0FRlkRQ==",
      "dev": true,
      "requires": {
        "base64-js": "^1.2.3",
        "xmlbuilder": "^9.0.7",
        "xmldom": "0.1.x"
      }
    },
    "pngjs": {
      "version": "3.4.0",
      "resolved": "https://registry.npmjs.org/pngjs/-/pngjs-3.4.0.tgz",
      "integrity": "sha512-NCrCHhWmnQklfH4MtJMRjZ2a8c80qXeMlQMv2uVp9ISJMTt562SbGd6n2oq0PaPgKm7Z6pL9E2UlLIhC+SHL3w==",
      "dev": true
    },
    "portscanner": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/portscanner/-/portscanner-2.1.1.tgz",
      "integrity": "sha1-6rtAnk3iSVD1oqUW01rnaTQ/u5Y=",
      "dev": true,
      "requires": {
        "async": "1.5.2",
        "is-number-like": "^1.0.3"
      }
    },
    "posix-character-classes": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/posix-character-classes/-/posix-character-classes-0.1.1.tgz",
      "integrity": "sha1-AerA/jta9xoqbAL+q7jB/vfgDqs=",
      "dev": true
    },
    "postcss": {
      "version": "5.2.18",
      "resolved": "https://registry.npmjs.org/postcss/-/postcss-5.2.18.tgz",
      "integrity": "sha512-zrUjRRe1bpXKsX1qAJNJjqZViErVuyEkMTRrwu4ud4sbTtIBRmtaYDrHmcGgmrbsW3MHfmtIf+vJumgQn+PrXg==",
      "dev": true,
      "requires": {
        "chalk": "^1.1.3",
        "js-base64": "^2.1.9",
        "source-map": "^0.5.6",
        "supports-color": "^3.2.3"
      },
      "dependencies": {
        "supports-color": {
          "version": "3.2.3",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-3.2.3.tgz",
          "integrity": "sha1-ZawFBLOVQXHYpklGsq48u4pfVPY=",
          "dev": true,
          "requires": {
            "has-flag": "^1.0.0"
          }
        }
      }
    },
    "postcss-value-parser": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
      "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
      "dev": true
    },
    "prebuild-install": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/prebuild-install/-/prebuild-install-6.0.1.tgz",
      "integrity": "sha512-7GOJrLuow8yeiyv75rmvZyeMGzl8mdEX5gY69d6a6bHWmiPevwqFw+tQavhK0EYMaSg3/KD24cWqeQv1EWsqDQ==",
      "requires": {
        "detect-libc": "^1.0.3",
        "expand-template": "^2.0.3",
        "github-from-package": "0.0.0",
        "minimist": "^1.2.3",
        "mkdirp-classic": "^0.5.3",
        "napi-build-utils": "^1.0.1",
        "node-abi": "^2.7.0",
        "noop-logger": "^0.1.1",
        "npmlog": "^4.0.1",
        "pump": "^3.0.0",
        "rc": "^1.2.7",
        "simple-get": "^3.0.3",
        "tar-fs": "^2.0.0",
        "tunnel-agent": "^0.6.0",
        "which-pm-runs": "^1.0.0"
      },
      "dependencies": {
        "bl": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/bl/-/bl-4.1.0.tgz",
          "integrity": "sha512-1W07cM9gS6DcLperZfFSj+bWLtaPGSOHWhPiGzXmvVJbRLdG82sH/Kn8EtW1VqWVA54AKf2h5k5BbnIbwF3h6w==",
          "requires": {
            "buffer": "^5.5.0",
            "inherits": "^2.0.4",
            "readable-stream": "^3.4.0"
          }
        },
        "buffer": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz",
          "integrity": "sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==",
          "requires": {
            "base64-js": "^1.3.1",
            "ieee754": "^1.1.13"
          }
        },
        "end-of-stream": {
          "version": "1.4.4",
          "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz",
          "integrity": "sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==",
          "requires": {
            "once": "^1.4.0"
          }
        },
        "pump": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/pump/-/pump-3.0.0.tgz",
          "integrity": "sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==",
          "requires": {
            "end-of-stream": "^1.1.0",
            "once": "^1.3.1"
          }
        },
        "tar-fs": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/tar-fs/-/tar-fs-2.1.1.tgz",
          "integrity": "sha512-V0r2Y9scmbDRLCNex/+hYzvp/zyYjvFbHPNgVTKfQvVrb6guiE/fxP+XblDNR011utopbkex2nM4dHNV6GDsng==",
          "requires": {
            "chownr": "^1.1.1",
            "mkdirp-classic": "^0.5.2",
            "pump": "^3.0.0",
            "tar-stream": "^2.1.4"
          }
        },
        "tar-stream": {
          "version": "2.2.0",
          "resolved": "https://registry.npmjs.org/tar-stream/-/tar-stream-2.2.0.tgz",
          "integrity": "sha512-ujeqbceABgwMZxEJnk2HDY2DlnUZ+9oEcb1KzTVfYHio0UE6dG71n60d8D2I4qNvleWrrXpmjpt7vZeF1LnMZQ==",
          "requires": {
            "bl": "^4.0.3",
            "end-of-stream": "^1.4.1",
            "fs-constants": "^1.0.0",
            "inherits": "^2.0.3",
            "readable-stream": "^3.1.1"
          }
        }
      }
    },
    "prepend-http": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/prepend-http/-/prepend-http-1.0.4.tgz",
      "integrity": "sha1-1PRWKwzjaW5BrFLQ4ALlemNdxtw=",
      "dev": true
    },
    "preserve": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/preserve/-/preserve-0.2.0.tgz",
      "integrity": "sha1-gV7R9uvGWSb4ZbMQwHE7yzMVzks=",
      "dev": true
    },
    "pretty-hrtime": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/pretty-hrtime/-/pretty-hrtime-1.0.3.tgz",
      "integrity": "sha1-t+PqQkNaTJsnWdmeDyAesZWALuE=",
      "dev": true
    },
    "private": {
      "version": "0.1.8",
      "resolved": "https://registry.npmjs.org/private/-/private-0.1.8.tgz",
      "integrity": "sha512-VvivMrbvd2nKkiG38qjULzlc+4Vx4wm/whI9pQD35YrARNnhxeiRktSOhSukRLFNlzg6Br/cJPet5J/u19r/mg==",
      "dev": true
    },
    "process": {
      "version": "0.11.10",
      "resolved": "https://registry.npmjs.org/process/-/process-0.11.10.tgz",
      "integrity": "sha1-czIwDoQBYb2j5podHZGn1LwW8YI=",
      "dev": true
    },
    "process-nextick-args": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz",
      "integrity": "sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag=="
    },
    "progress": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/progress/-/progress-2.0.3.tgz",
      "integrity": "sha512-7PiHtLll5LdnKIMw100I+8xJXR5gW2QwWYkT6iJva0bXitZKa/XMrSbdmg3r2Xnaidz9Qumd0VPaMrZlF9V9sA==",
      "dev": true
    },
    "proto-list": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/proto-list/-/proto-list-1.2.4.tgz",
      "integrity": "sha1-IS1b/hMYMGpCD2QCuOJv85ZHqEk=",
      "dev": true
    },
    "proxyquire": {
      "version": "1.8.0",
      "resolved": "https://registry.npmjs.org/proxyquire/-/proxyquire-1.8.0.tgz",
      "integrity": "sha1-AtUUpb7ZhvBMuyCTrxZ0FTX3ntw=",
      "dev": true,
      "requires": {
        "fill-keys": "^1.0.2",
        "module-not-found-error": "^1.0.0",
        "resolve": "~1.1.7"
      },
      "dependencies": {
        "resolve": {
          "version": "1.1.7",
          "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.1.7.tgz",
          "integrity": "sha1-IDEU2CrSxe2ejgQRs5ModeiJ6Xs=",
          "dev": true
        }
      }
    },
    "pseudomap": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/pseudomap/-/pseudomap-1.0.2.tgz",
      "integrity": "sha1-8FKijacOYYkX7wqKw0wa5aaChrM=",
      "dev": true
    },
    "psl": {
      "version": "1.8.0",
      "resolved": "https://registry.npmjs.org/psl/-/psl-1.8.0.tgz",
      "integrity": "sha512-RIdOzyoavK+hA18OGGWDqUTsCLhtA7IcZ/6NCs4fFJaHBDab+pDDmDIByWFRQJq2Cd7r1OoQxBGKOaztq+hjIQ==",
      "dev": true
    },
    "public-encrypt": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/public-encrypt/-/public-encrypt-4.0.3.tgz",
      "integrity": "sha512-zVpa8oKZSz5bTMTFClc1fQOnyyEzpl5ozpi1B5YcvBrdohMjH2rfsBtyXcuNuwjsDIXmBYlF2N5FlJYhR29t8Q==",
      "dev": true,
      "requires": {
        "bn.js": "^4.1.0",
        "browserify-rsa": "^4.0.0",
        "create-hash": "^1.1.0",
        "parse-asn1": "^5.0.0",
        "randombytes": "^2.0.1",
        "safe-buffer": "^5.1.2"
      },
      "dependencies": {
        "bn.js": {
          "version": "4.11.9",
          "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.11.9.tgz",
          "integrity": "sha512-E6QoYqCKZfgatHTdHzs1RRKP7ip4vvm+EyRUeE2RF0NblwVvb0p6jSVeNTOFxPn26QXN2o6SMfNxKp6kU8zQaw==",
          "dev": true
        }
      }
    },
    "pump": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/pump/-/pump-1.0.3.tgz",
      "integrity": "sha512-8k0JupWme55+9tCVE+FS5ULT3K6AbgqrGa58lTT49RpyfwwcGedHqaC5LlQNdEAumn/wFsu6aPwkuPMioy8kqw==",
      "dev": true,
      "requires": {
        "end-of-stream": "^1.1.0",
        "once": "^1.3.1"
      },
      "dependencies": {
        "end-of-stream": {
          "version": "1.4.4",
          "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz",
          "integrity": "sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==",
          "dev": true,
          "requires": {
            "once": "^1.4.0"
          }
        }
      }
    },
    "punycode": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/punycode/-/punycode-1.4.1.tgz",
      "integrity": "sha1-wNWmOycYgArY4esPpSachN1BhF4=",
      "dev": true
    },
    "pupa": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/pupa/-/pupa-2.1.1.tgz",
      "integrity": "sha512-l1jNAspIBSFqbT+y+5FosojNpVpF94nlI+wDUpqP9enwOTfHx9f0gh5nB96vl+6yTpsJsypeNrwfzPrKuHB41A==",
      "dev": true,
      "requires": {
        "escape-goat": "^2.0.0"
      }
    },
    "pushdata-bitcoin": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/pushdata-bitcoin/-/pushdata-bitcoin-1.0.1.tgz",
      "integrity": "sha1-FZMdPNlnreUiBvUjqnMxrvfUOvc=",
      "dev": true,
      "requires": {
        "bitcoin-ops": "^1.3.0"
      }
    },
    "qrcode": {
      "version": "1.4.4",
      "resolved": "https://registry.npmjs.org/qrcode/-/qrcode-1.4.4.tgz",
      "integrity": "sha512-oLzEC5+NKFou9P0bMj5+v6Z40evexeE29Z9cummZXZ9QXyMr3lphkURzxjXgPJC5azpxcshoDWV1xE46z+/c3Q==",
      "dev": true,
      "requires": {
        "buffer": "^5.4.3",
        "buffer-alloc": "^1.2.0",
        "buffer-from": "^1.1.1",
        "dijkstrajs": "^1.0.1",
        "isarray": "^2.0.1",
        "pngjs": "^3.3.0",
        "yargs": "^13.2.4"
      },
      "dependencies": {
        "buffer": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz",
          "integrity": "sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==",
          "dev": true,
          "requires": {
            "base64-js": "^1.3.1",
            "ieee754": "^1.1.13"
          }
        },
        "yargs": {
          "version": "13.3.2",
          "resolved": "https://registry.npmjs.org/yargs/-/yargs-13.3.2.tgz",
          "integrity": "sha512-AX3Zw5iPruN5ie6xGRIDgqkT+ZhnRlZMLMHAs8tg7nRruy2Nb+i5o9bwghAogtM08q1dpr2LVoS8KSTMYpWXUw==",
          "dev": true,
          "requires": {
            "cliui": "^5.0.0",
            "find-up": "^3.0.0",
            "get-caller-file": "^2.0.1",
            "require-directory": "^2.1.1",
            "require-main-filename": "^2.0.0",
            "set-blocking": "^2.0.0",
            "string-width": "^3.0.0",
            "which-module": "^2.0.0",
            "y18n": "^4.0.0",
            "yargs-parser": "^13.1.2"
          }
        }
      }
    },
    "qs": {
      "version": "6.2.3",
      "resolved": "https://registry.npmjs.org/qs/-/qs-6.2.3.tgz",
      "integrity": "sha1-HPyyXBCpsrSDBT/zn138kjOQjP4=",
      "dev": true
    },
    "query-string": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/query-string/-/query-string-5.1.1.tgz",
      "integrity": "sha512-gjWOsm2SoGlgLEdAGt7a6slVOk9mGiXmPFMqrEhLQ68rhQuBnpfs3+EmlvqKyxnCo9/PPlF+9MtY02S1aFg+Jw==",
      "dev": true,
      "requires": {
        "decode-uri-component": "^0.2.0",
        "object-assign": "^4.1.0",
        "strict-uri-encode": "^1.0.0"
      }
    },
    "querystring": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/querystring/-/querystring-0.2.0.tgz",
      "integrity": "sha1-sgmEkgO7Jd+CDadW50cAWHhSFiA=",
      "dev": true
    },
    "querystring-es3": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/querystring-es3/-/querystring-es3-0.2.1.tgz",
      "integrity": "sha1-nsYfeQSYdXB9aUFFlv2Qek1xHnM=",
      "dev": true
    },
    "querystringify": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/querystringify/-/querystringify-2.2.0.tgz",
      "integrity": "sha512-FIqgj2EUvTa7R50u0rGsyTftzjYmv/a3hO345bZNrqabNqjtgiDMgmo4mkUjd+nzU5oF3dClKqFIPUKybUyqoQ==",
      "dev": true
    },
    "quick-lru": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/quick-lru/-/quick-lru-5.1.1.tgz",
      "integrity": "sha512-WuyALRjWPDGtt/wzJiadO5AXY+8hZ80hVpe6MyivgraREW751X3SbhRvG3eLKOYN+8VEvqLcf3wdnt44Z4S4SA==",
      "dev": true
    },
    "randomatic": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/randomatic/-/randomatic-3.1.1.tgz",
      "integrity": "sha512-TuDE5KxZ0J461RVjrJZCJc+J+zCkTb1MbH9AQUq68sMhOMcy9jLcb3BrZKgp9q9Ncltdg4QVqWrH02W2EFFVYw==",
      "dev": true,
      "requires": {
        "is-number": "^4.0.0",
        "kind-of": "^6.0.0",
        "math-random": "^1.0.1"
      },
      "dependencies": {
        "is-number": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/is-number/-/is-number-4.0.0.tgz",
          "integrity": "sha512-rSklcAIlf1OmFdyAqbnWTLVelsQ58uvZ66S/ZyawjWqIviTWCjg2PzVGw8WUA+nNuPTqb4wgA+NszrJ+08LlgQ==",
          "dev": true
        },
        "kind-of": {
          "version": "6.0.3",
          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.3.tgz",
          "integrity": "sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw==",
          "dev": true
        }
      }
    },
    "randombytes": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/randombytes/-/randombytes-2.1.0.tgz",
      "integrity": "sha512-vYl3iOX+4CKUWuxGi9Ukhie6fsqXqS9FE2Zaic4tNFD2N2QQaXOMFbuKK4QmDHC0JO6B1Zp41J0LpT0oR68amQ==",
      "dev": true,
      "requires": {
        "safe-buffer": "^5.1.0"
      }
    },
    "randomfill": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/randomfill/-/randomfill-1.0.4.tgz",
      "integrity": "sha512-87lcbR8+MhcWcUiQ+9e+Rwx8MyR2P7qnt15ynUlbm3TU/fjbgz4GsvfSUDTemtCCtVCqb4ZcEFlyPNTh9bBTLw==",
      "dev": true,
      "requires": {
        "randombytes": "^2.0.5",
        "safe-buffer": "^5.1.0"
      }
    },
    "range-parser": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz",
      "integrity": "sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==",
      "dev": true
    },
    "raw-body": {
      "version": "2.4.1",
      "resolved": "https://registry.npmjs.org/raw-body/-/raw-body-2.4.1.tgz",
      "integrity": "sha512-9WmIKF6mkvA0SLmA2Knm9+qj89e+j1zqgyn8aXGd7+nAduPoqgI9lO57SAZNn/Byzo5P7JhXTyg9PzaJbH73bA==",
      "dev": true,
      "requires": {
        "bytes": "3.1.0",
        "http-errors": "1.7.3",
        "iconv-lite": "0.4.24",
        "unpipe": "1.0.0"
      }
    },
    "rc": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/rc/-/rc-1.2.8.tgz",
      "integrity": "sha512-y3bGgqKj3QBdxLbLkomlohkvsA8gdAiUQlSBJnBhfn+BPxg4bc62d8TcBW15wavDfgexCgccckhcZvywyQYPOw==",
      "requires": {
        "deep-extend": "^0.6.0",
        "ini": "~1.3.0",
        "minimist": "^1.2.0",
        "strip-json-comments": "~2.0.1"
      }
    },
    "rcedit": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/rcedit/-/rcedit-1.1.2.tgz",
      "integrity": "sha512-z2ypB4gbINhI6wVe0JJMmdpmOpmNc4g90sE6/6JSuch5kYnjfz9CxvVPqqhShgR6GIkmtW3W2UlfiXhWljA0Fw==",
      "dev": true
    },
    "read-all-stream": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/read-all-stream/-/read-all-stream-3.1.0.tgz",
      "integrity": "sha1-NcPhd/IHjveJ7kv6+kNzB06u9Po=",
      "dev": true,
      "requires": {
        "pinkie-promise": "^2.0.0",
        "readable-stream": "^2.0.0"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "read-config-file": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/read-config-file/-/read-config-file-6.0.0.tgz",
      "integrity": "sha512-PHjROSdpceKUmqS06wqwP92VrM46PZSTubmNIMJ5DrMwg1OgenSTSEHIkCa6TiOJ+y/J0xnG1fFwG3M+Oi1aNA==",
      "dev": true,
      "requires": {
        "dotenv": "^8.2.0",
        "dotenv-expand": "^5.1.0",
        "js-yaml": "^3.13.1",
        "json5": "^2.1.2",
        "lazy-val": "^1.0.4"
      },
      "dependencies": {
        "json5": {
          "version": "2.1.3",
          "resolved": "https://registry.npmjs.org/json5/-/json5-2.1.3.tgz",
          "integrity": "sha512-KXPvOm8K9IJKFM0bmdn8QXh7udDh1g/giieX0NLCaMnb4hEiVFqnop2ImTXCc5e0/oHz3LTqmHGtExn5hfMkOA==",
          "dev": true,
          "requires": {
            "minimist": "^1.2.5"
          }
        }
      }
    },
    "read-only-stream": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/read-only-stream/-/read-only-stream-2.0.0.tgz",
      "integrity": "sha1-JyT9aoET1zdkrCiNQ4YnDB2/F/A=",
      "dev": true,
      "requires": {
        "readable-stream": "^2.0.2"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "read-pkg": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-1.1.0.tgz",
      "integrity": "sha1-9f+qXs0pyzHAR0vKfXVra7KePyg=",
      "dev": true,
      "requires": {
        "load-json-file": "^1.0.0",
        "normalize-package-data": "^2.3.2",
        "path-type": "^1.0.0"
      }
    },
    "read-pkg-up": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-1.0.1.tgz",
      "integrity": "sha1-nWPBMnbAZZGNV/ACpX9AobZD+wI=",
      "dev": true,
      "requires": {
        "find-up": "^1.0.0",
        "read-pkg": "^1.0.0"
      },
      "dependencies": {
        "find-up": {
          "version": "1.1.2",
          "resolved": "https://registry.npmjs.org/find-up/-/find-up-1.1.2.tgz",
          "integrity": "sha1-ay6YIrGizgpgq2TWEOzK1TyyTQ8=",
          "dev": true,
          "requires": {
            "path-exists": "^2.0.0",
            "pinkie-promise": "^2.0.0"
          }
        },
        "path-exists": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-2.1.0.tgz",
          "integrity": "sha1-D+tsZPD8UY2adU3V77YscCJ2H0s=",
          "dev": true,
          "requires": {
            "pinkie-promise": "^2.0.0"
          }
        }
      }
    },
    "readable-stream": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.0.tgz",
      "integrity": "sha512-BViHy7LKeTz4oNnkcLJ+lVSL6vpiFeX6/d3oSH8zCW7UxP2onchk+vTGB143xuFjHS3deTgkKoXXymXqymiIdA==",
      "requires": {
        "inherits": "^2.0.3",
        "string_decoder": "^1.1.1",
        "util-deprecate": "^1.0.1"
      }
    },
    "readdirp": {
      "version": "3.5.0",
      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.5.0.tgz",
      "integrity": "sha512-cMhu7c/8rdhkHXWsY+osBhfSy0JikwpHK/5+imo+LpeasTF8ouErHrlYkwT0++njiyuDvc7OFY5T3ukvZ8qmFQ==",
      "dev": true,
      "requires": {
        "picomatch": "^2.2.1"
      }
    },
    "rechoir": {
      "version": "0.6.2",
      "resolved": "https://registry.npmjs.org/rechoir/-/rechoir-0.6.2.tgz",
      "integrity": "sha1-hSBLVNuoLVdC4oyWdW70OvUOM4Q=",
      "dev": true,
      "requires": {
        "resolve": "^1.1.6"
      }
    },
    "recursive-readdir-sync": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/recursive-readdir-sync/-/recursive-readdir-sync-1.0.6.tgz",
      "integrity": "sha1-Hb9tMvPFu4083pemxYjVR6nhPVY=",
      "dev": true
    },
    "redent": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/redent/-/redent-1.0.0.tgz",
      "integrity": "sha1-z5Fqsf1fHxbfsggi3W7H9zDCr94=",
      "dev": true,
      "requires": {
        "indent-string": "^2.1.0",
        "strip-indent": "^1.0.1"
      }
    },
    "redeyed": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/redeyed/-/redeyed-2.1.1.tgz",
      "integrity": "sha1-iYS1gV2ZyyIEacme7v/jiRPmzAs=",
      "dev": true,
      "requires": {
        "esprima": "~4.0.0"
      }
    },
    "regenerate": {
      "version": "1.4.2",
      "resolved": "https://registry.npmjs.org/regenerate/-/regenerate-1.4.2.tgz",
      "integrity": "sha512-zrceR/XhGYU/d/opr2EKO7aRHUeiBI8qjtfHqADTwZd6Szfy16la6kqD0MIUs5z5hx6AaKa+PixpPrR289+I0A==",
      "dev": true
    },
    "regenerator-runtime": {
      "version": "0.13.7",
      "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.13.7.tgz",
      "integrity": "sha512-a54FxoJDIr27pgf7IgeQGxmqUNYrcV338lf/6gH456HZ/PhX+5BcwHXG9ajESmwe6WRO0tAzRUrRmNONWgkrew==",
      "dev": true
    },
    "regenerator-transform": {
      "version": "0.10.1",
      "resolved": "https://registry.npmjs.org/regenerator-transform/-/regenerator-transform-0.10.1.tgz",
      "integrity": "sha512-PJepbvDbuK1xgIgnau7Y90cwaAmO/LCLMI2mPvaXq2heGMR3aWW5/BQvYrhJ8jgmQjXewXvBjzfqKcVOmhjZ6Q==",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.18.0",
        "babel-types": "^6.19.0",
        "private": "^0.1.6"
      }
    },
    "regex-cache": {
      "version": "0.4.4",
      "resolved": "https://registry.npmjs.org/regex-cache/-/regex-cache-0.4.4.tgz",
      "integrity": "sha512-nVIZwtCjkC9YgvWkpM55B5rBhBYRZhAaJbgcFYXXsHnbZ9UZI9nnVWYZpBlCqv9ho2eZryPnWrZGsOdPwVWXWQ==",
      "dev": true,
      "requires": {
        "is-equal-shallow": "^0.1.3"
      }
    },
    "regex-not": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/regex-not/-/regex-not-1.0.2.tgz",
      "integrity": "sha512-J6SDjUgDxQj5NusnOtdFxDwN/+HWykR8GELwctJ7mdqhcyy1xEc4SRFHUXvxTp661YaVKAjfRLZ9cCqS6tn32A==",
      "dev": true,
      "requires": {
        "extend-shallow": "^3.0.2",
        "safe-regex": "^1.1.0"
      }
    },
    "regexpu-core": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/regexpu-core/-/regexpu-core-2.0.0.tgz",
      "integrity": "sha1-SdA4g3uNz4v6W5pCE5k45uoq4kA=",
      "dev": true,
      "requires": {
        "regenerate": "^1.2.1",
        "regjsgen": "^0.2.0",
        "regjsparser": "^0.1.4"
      }
    },
    "registry-auth-token": {
      "version": "3.4.0",
      "resolved": "https://registry.npmjs.org/registry-auth-token/-/registry-auth-token-3.4.0.tgz",
      "integrity": "sha512-4LM6Fw8eBQdwMYcES4yTnn2TqIasbXuwDx3um+QRs7S55aMKCBKBxvPXl2RiUjHwuJLTyYfxSpmfSAjQpcuP+A==",
      "dev": true,
      "requires": {
        "rc": "^1.1.6",
        "safe-buffer": "^5.0.1"
      }
    },
    "registry-url": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/registry-url/-/registry-url-3.1.0.tgz",
      "integrity": "sha1-PU74cPc93h138M+aOBQyRE4XSUI=",
      "dev": true,
      "requires": {
        "rc": "^1.0.1"
      }
    },
    "regjsgen": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/regjsgen/-/regjsgen-0.2.0.tgz",
      "integrity": "sha1-bAFq3qxVT3WCP+N6wFuS1aTtsfc=",
      "dev": true
    },
    "regjsparser": {
      "version": "0.1.5",
      "resolved": "https://registry.npmjs.org/regjsparser/-/regjsparser-0.1.5.tgz",
      "integrity": "sha1-fuj4Tcb6eS0/0K4ijSS9lJ6tIFw=",
      "dev": true,
      "requires": {
        "jsesc": "~0.5.0"
      }
    },
    "remove-trailing-separator": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/remove-trailing-separator/-/remove-trailing-separator-1.1.0.tgz",
      "integrity": "sha1-wkvOKig62tW8P1jg1IJJuSN52O8=",
      "dev": true
    },
    "repeat-element": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/repeat-element/-/repeat-element-1.1.3.tgz",
      "integrity": "sha512-ahGq0ZnV5m5XtZLMb+vP76kcAM5nkLqk0lpqAuojSKGgQtn4eRi4ZZGm2olo2zKFH+sMsWaqOCW1dqAnOru72g==",
      "dev": true
    },
    "repeat-string": {
      "version": "1.6.1",
      "resolved": "https://registry.npmjs.org/repeat-string/-/repeat-string-1.6.1.tgz",
      "integrity": "sha1-jcrkcOHIirwtYA//Sndihtp15jc=",
      "dev": true
    },
    "repeating": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/repeating/-/repeating-2.0.1.tgz",
      "integrity": "sha1-UhTFOpJtNVJwdSf7q0FdvAjQbdo=",
      "dev": true,
      "requires": {
        "is-finite": "^1.0.0"
      }
    },
    "replace-ext": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/replace-ext/-/replace-ext-0.0.1.tgz",
      "integrity": "sha1-KbvZIHinOfC8zitO5B6DeVNSKSQ=",
      "dev": true
    },
    "request": {
      "version": "2.81.0",
      "resolved": "https://registry.npmjs.org/request/-/request-2.81.0.tgz",
      "integrity": "sha1-xpKJRqDgbF+Nb4qTM0af/aRimKA=",
      "dev": true,
      "requires": {
        "aws-sign2": "~0.6.0",
        "aws4": "^1.2.1",
        "caseless": "~0.12.0",
        "combined-stream": "~1.0.5",
        "extend": "~3.0.0",
        "forever-agent": "~0.6.1",
        "form-data": "~2.1.1",
        "har-validator": "~4.2.1",
        "hawk": "~3.1.3",
        "http-signature": "~1.1.0",
        "is-typedarray": "~1.0.0",
        "isstream": "~0.1.2",
        "json-stringify-safe": "~5.0.1",
        "mime-types": "~2.1.7",
        "oauth-sign": "~0.8.1",
        "performance-now": "^0.2.0",
        "qs": "~6.4.0",
        "safe-buffer": "^5.0.1",
        "stringstream": "~0.0.4",
        "tough-cookie": "~2.3.0",
        "tunnel-agent": "^0.6.0",
        "uuid": "^3.0.0"
      },
      "dependencies": {
        "qs": {
          "version": "6.4.0",
          "resolved": "https://registry.npmjs.org/qs/-/qs-6.4.0.tgz",
          "integrity": "sha1-E+JtKK1rD/qpExLNO/cI7TUecjM=",
          "dev": true
        }
      }
    },
    "request-promise-core": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/request-promise-core/-/request-promise-core-1.1.4.tgz",
      "integrity": "sha512-TTbAfBBRdWD7aNNOoVOBH4pN/KigV6LyapYNNlAPA8JwbovRti1E88m3sYAwsLi5ryhPKsE9APwnjFTgdUjTpw==",
      "dev": true,
      "requires": {
        "lodash": "^4.17.19"
      }
    },
    "request-promise-native": {
      "version": "1.0.9",
      "resolved": "https://registry.npmjs.org/request-promise-native/-/request-promise-native-1.0.9.tgz",
      "integrity": "sha512-wcW+sIUiWnKgNY0dqCpOZkUbF/I+YPi+f09JZIDa39Ec+q82CpSYniDp+ISgTTbKmnpJWASeJBPZmoxH84wt3g==",
      "dev": true,
      "requires": {
        "request-promise-core": "1.1.4",
        "stealthy-require": "^1.1.1",
        "tough-cookie": "^2.3.3"
      }
    },
    "require-directory": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz",
      "integrity": "sha1-jGStX9MNqxyXbiNE/+f3kqam30I=",
      "dev": true
    },
    "require-main-filename": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/require-main-filename/-/require-main-filename-2.0.0.tgz",
      "integrity": "sha512-NKN5kMDylKuldxYLSUfrbo5Tuzh4hd+2E8NPPX02mZtn1VuREQToYe/ZdlJy+J3uCpfaiGF05e7B8W0iXbQHmg==",
      "dev": true
    },
    "requires-port": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/requires-port/-/requires-port-1.0.0.tgz",
      "integrity": "sha1-kl0mAdOaxIXgkc8NpcbmlNw9yv8=",
      "dev": true
    },
    "resolve": {
      "version": "1.19.0",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.19.0.tgz",
      "integrity": "sha512-rArEXAgsBG4UgRGcynxWIWKFvh/XZCcS8UJdHhwy91zwAvCZIbcs+vAbflgBnNjYMs/i/i+/Ux6IZhML1yPvxg==",
      "dev": true,
      "requires": {
        "is-core-module": "^2.1.0",
        "path-parse": "^1.0.6"
      }
    },
    "resolve-alpn": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/resolve-alpn/-/resolve-alpn-1.0.0.tgz",
      "integrity": "sha512-rTuiIEqFmGxne4IovivKSDzld2lWW9QCjqv80SYjPgf+gS35eaCAjaP54CCwGAwBtnCsvNLYtqxe1Nw+i6JEmA==",
      "dev": true
    },
    "resolve-dir": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/resolve-dir/-/resolve-dir-1.0.1.tgz",
      "integrity": "sha1-eaQGRMNivoLybv/nOcm7U4IEb0M=",
      "dev": true,
      "requires": {
        "expand-tilde": "^2.0.0",
        "global-modules": "^1.0.0"
      }
    },
    "resolve-url": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/resolve-url/-/resolve-url-0.2.1.tgz",
      "integrity": "sha1-LGN/53yJOv0qZj/iGqkIAGjiBSo=",
      "dev": true
    },
    "resp-modifier": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/resp-modifier/-/resp-modifier-6.0.2.tgz",
      "integrity": "sha1-sSTeXE+6/LpUH0j/pzlw9KpFa08=",
      "dev": true,
      "requires": {
        "debug": "^2.2.0",
        "minimatch": "^3.0.2"
      }
    },
    "responselike": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/responselike/-/responselike-1.0.2.tgz",
      "integrity": "sha1-kYcg7ztjHFZCvgaPFa3lpG9Loec=",
      "dev": true,
      "requires": {
        "lowercase-keys": "^1.0.0"
      }
    },
    "restore-cursor": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-3.1.0.tgz",
      "integrity": "sha512-l+sSefzHpj5qimhFSE5a8nufZYAM3sBSVMAPtYkmC+4EH2anSGaEMXSD0izRQbu9nfyQ9y5JrVmp7E8oZrUjvA==",
      "dev": true,
      "requires": {
        "onetime": "^5.1.0",
        "signal-exit": "^3.0.2"
      }
    },
    "ret": {
      "version": "0.1.15",
      "resolved": "https://registry.npmjs.org/ret/-/ret-0.1.15.tgz",
      "integrity": "sha512-TTlYpa+OL+vMMNG24xSlQGEJ3B/RzEfUlLct7b5G/ytav+wPrplCpVMFuwzXbkecJrb6IYo1iFb0S9v37754mg==",
      "dev": true
    },
    "rewire": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/rewire/-/rewire-3.0.2.tgz",
      "integrity": "sha512-ejkkt3qYnsQ38ifc9llAAzuHiGM7kR8N5/mL3aHWgmWwet0OMFcmJB8aTsMV2PBHCWxNVTLCeRfBpEa8X2+1fw==",
      "dev": true,
      "requires": {
        "babel-core": "^6.26.0",
        "babel-plugin-transform-es2015-block-scoping": "^6.26.0"
      }
    },
    "right-align": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/right-align/-/right-align-0.1.3.tgz",
      "integrity": "sha1-YTObci/mo1FWiSENJOFMlhSGE+8=",
      "dev": true,
      "requires": {
        "align-text": "^0.1.1"
      }
    },
    "rimraf": {
      "version": "2.7.1",
      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
      "integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
      "dev": true,
      "requires": {
        "glob": "^7.1.3"
      },
      "dependencies": {
        "glob": {
          "version": "7.1.6",
          "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.6.tgz",
          "integrity": "sha512-LwaxwyZ72Lk7vZINtNNrywX0ZuLyStrdDtabefZKAY5ZGJhVtgdznluResxNmPitE0SAO+O26sWTHeKSI2wMBA==",
          "dev": true,
          "requires": {
            "fs.realpath": "^1.0.0",
            "inflight": "^1.0.4",
            "inherits": "2",
            "minimatch": "^3.0.4",
            "once": "^1.3.0",
            "path-is-absolute": "^1.0.0"
          }
        }
      }
    },
    "ripemd160": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/ripemd160/-/ripemd160-2.0.2.tgz",
      "integrity": "sha512-ii4iagi25WusVoiC4B4lq7pbXfAp3D9v5CwfkY33vffw2+pkDjY1D8GaN7spsxvCSx8dkPqOZCEZyfxcmJG2IA==",
      "dev": true,
      "requires": {
        "hash-base": "^3.0.0",
        "inherits": "^2.0.1"
      }
    },
    "roarr": {
      "version": "2.15.4",
      "resolved": "https://registry.npmjs.org/roarr/-/roarr-2.15.4.tgz",
      "integrity": "sha512-CHhPh+UNHD2GTXNYhPWLnU8ONHdI+5DI+4EYIAOaiD63rHeYlZvyh8P+in5999TTSFgUYuKUAjzRI4mdh/p+2A==",
      "dev": true,
      "optional": true,
      "requires": {
        "boolean": "^3.0.1",
        "detect-node": "^2.0.4",
        "globalthis": "^1.0.1",
        "json-stringify-safe": "^5.0.1",
        "semver-compare": "^1.0.0",
        "sprintf-js": "^1.1.2"
      }
    },
    "rx": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/rx/-/rx-4.1.0.tgz",
      "integrity": "sha1-pfE/957zt0D+MKqAP7CfmIBdR4I=",
      "dev": true
    },
    "rxjs": {
      "version": "5.5.12",
      "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-5.5.12.tgz",
      "integrity": "sha512-xx2itnL5sBbqeeiVgNPVuQQ1nC8Jp2WfNJhXWHmElW9YmrpS9UVnNzhP3EH3HFqexO5Tlp8GhYY+WEcqcVMvGw==",
      "dev": true,
      "requires": {
        "symbol-observable": "1.0.1"
      }
    },
    "rxjs-compat": {
      "version": "6.6.3",
      "resolved": "https://registry.npmjs.org/rxjs-compat/-/rxjs-compat-6.6.3.tgz",
      "integrity": "sha512-y+wUqq7bS2dG+7rH2fNMoxsDiJ32RQzFxZQE/JdtpnmEZmwLQrb1tCiItyHxdXJHXjmHnnzFscn3b6PEmORGKw==",
      "dev": true
    },
    "safe-buffer": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="
    },
    "safe-regex": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/safe-regex/-/safe-regex-1.1.0.tgz",
      "integrity": "sha1-QKNmnzsHfR6UPURinhV91IAjvy4=",
      "dev": true,
      "requires": {
        "ret": "~0.1.10"
      }
    },
    "safer-buffer": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==",
      "dev": true
    },
    "sanitize-filename": {
      "version": "1.6.3",
      "resolved": "https://registry.npmjs.org/sanitize-filename/-/sanitize-filename-1.6.3.tgz",
      "integrity": "sha512-y/52Mcy7aw3gRm7IrcGDFx/bCk4AhRh2eI9luHOQM86nZsqwiRkkq2GekHXBBD+SmPidc8i2PqtYZl+pWJ8Oeg==",
      "dev": true,
      "requires": {
        "truncate-utf8-bytes": "^1.0.0"
      }
    },
    "sass-graph": {
      "version": "2.2.5",
      "resolved": "https://registry.npmjs.org/sass-graph/-/sass-graph-2.2.5.tgz",
      "integrity": "sha512-VFWDAHOe6mRuT4mZRd4eKE+d8Uedrk6Xnh7Sh9b4NGufQLQjOrvf/MQoOdx+0s92L89FeyUUNfU597j/3uNpag==",
      "dev": true,
      "requires": {
        "glob": "^7.0.0",
        "lodash": "^4.0.0",
        "scss-tokenizer": "^0.2.3",
        "yargs": "^13.3.2"
      },
      "dependencies": {
        "yargs": {
          "version": "13.3.2",
          "resolved": "https://registry.npmjs.org/yargs/-/yargs-13.3.2.tgz",
          "integrity": "sha512-AX3Zw5iPruN5ie6xGRIDgqkT+ZhnRlZMLMHAs8tg7nRruy2Nb+i5o9bwghAogtM08q1dpr2LVoS8KSTMYpWXUw==",
          "dev": true,
          "requires": {
            "cliui": "^5.0.0",
            "find-up": "^3.0.0",
            "get-caller-file": "^2.0.1",
            "require-directory": "^2.1.1",
            "require-main-filename": "^2.0.0",
            "set-blocking": "^2.0.0",
            "string-width": "^3.0.0",
            "which-module": "^2.0.0",
            "y18n": "^4.0.0",
            "yargs-parser": "^13.1.2"
          }
        }
      }
    },
    "sax": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/sax/-/sax-1.2.4.tgz",
      "integrity": "sha512-NqVDv9TpANUjFm0N8uM5GxL36UgKi9/atZw+x7YFnQ8ckwFGKrl4xX4yWtrey3UJm5nP1kUbnYgLopqWNSRhWw==",
      "dev": true
    },
    "scss-tokenizer": {
      "version": "0.2.3",
      "resolved": "https://registry.npmjs.org/scss-tokenizer/-/scss-tokenizer-0.2.3.tgz",
      "integrity": "sha1-jrBtualyMzOCTT9VMGQRSYR85dE=",
      "dev": true,
      "requires": {
        "js-base64": "^2.1.8",
        "source-map": "^0.4.2"
      },
      "dependencies": {
        "source-map": {
          "version": "0.4.4",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.4.4.tgz",
          "integrity": "sha1-66T12pwNyZneaAMti092FzZSA2s=",
          "dev": true,
          "requires": {
            "amdefine": ">=0.0.4"
          }
        }
      }
    },
    "seek-bzip": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/seek-bzip/-/seek-bzip-1.0.6.tgz",
      "integrity": "sha512-e1QtP3YL5tWww8uKaOCQ18UxIT2laNBXHjV/S2WYCiK4udiv8lkG89KRIoCjUagnAmCBurjF4zEVX2ByBbnCjQ==",
      "dev": true,
      "requires": {
        "commander": "^2.8.1"
      }
    },
    "semver": {
      "version": "4.3.6",
      "resolved": "https://registry.npmjs.org/semver/-/semver-4.3.6.tgz",
      "integrity": "sha1-MAvG4OhjdPe6YQaLWx7NV/xlMto=",
      "dev": true
    },
    "semver-compare": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/semver-compare/-/semver-compare-1.0.0.tgz",
      "integrity": "sha1-De4hahyUGrN+nvsXiPavxf9VN/w=",
      "dev": true,
      "optional": true
    },
    "semver-diff": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/semver-diff/-/semver-diff-2.1.0.tgz",
      "integrity": "sha1-S7uEN8jTfksM8aaP1ybsbWRdbTY=",
      "dev": true,
      "requires": {
        "semver": "^5.0.3"
      },
      "dependencies": {
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        }
      }
    },
    "send": {
      "version": "0.16.2",
      "resolved": "https://registry.npmjs.org/send/-/send-0.16.2.tgz",
      "integrity": "sha512-E64YFPUssFHEFBvpbbjr44NCLtI1AohxQ8ZSiJjQLskAdKuriYEP6VyGEsRDH8ScozGpkaX1BGvhanqCwkcEZw==",
      "dev": true,
      "requires": {
        "debug": "2.6.9",
        "depd": "~1.1.2",
        "destroy": "~1.0.4",
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "etag": "~1.8.1",
        "fresh": "0.5.2",
        "http-errors": "~1.6.2",
        "mime": "1.4.1",
        "ms": "2.0.0",
        "on-finished": "~2.3.0",
        "range-parser": "~1.2.0",
        "statuses": "~1.4.0"
      },
      "dependencies": {
        "http-errors": {
          "version": "1.6.3",
          "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.6.3.tgz",
          "integrity": "sha1-i1VoC7S+KDoLW/TqLjhYC+HZMg0=",
          "dev": true,
          "requires": {
            "depd": "~1.1.2",
            "inherits": "2.0.3",
            "setprototypeof": "1.1.0",
            "statuses": ">= 1.4.0 < 2"
          }
        },
        "inherits": {
          "version": "2.0.3",
          "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz",
          "integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=",
          "dev": true
        },
        "setprototypeof": {
          "version": "1.1.0",
          "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.1.0.tgz",
          "integrity": "sha512-BvE/TwpZX4FXExxOxZyRGQQv651MSwmWKZGqvmPcRIjDqWub67kTKuIMx43cZZrS/cBBzwBcNDWoFxt2XEFIpQ==",
          "dev": true
        },
        "statuses": {
          "version": "1.4.0",
          "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.4.0.tgz",
          "integrity": "sha512-zhSCtt8v2NDrRlPQpCNtw/heZLtfUDqxBM1udqikb/Hbk52LK4nQSwr10u77iopCW5LsyHpuXS0GnEc48mLeew==",
          "dev": true
        }
      }
    },
    "sequencify": {
      "version": "0.0.7",
      "resolved": "https://registry.npmjs.org/sequencify/-/sequencify-0.0.7.tgz",
      "integrity": "sha1-kM/xnQLgcCf9dn9erT57ldHnOAw=",
      "dev": true
    },
    "serialize-error": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/serialize-error/-/serialize-error-7.0.1.tgz",
      "integrity": "sha512-8I8TjW5KMOKsZQTvoxjuSIa7foAwPWGOts+6o7sgjz41/qMD9VQHEDxi6PBvK2l0MXUmqZyNpUK+T2tQaaElvw==",
      "dev": true,
      "optional": true,
      "requires": {
        "type-fest": "^0.13.1"
      }
    },
    "serve-index": {
      "version": "1.9.1",
      "resolved": "https://registry.npmjs.org/serve-index/-/serve-index-1.9.1.tgz",
      "integrity": "sha1-03aNabHn2C5c4FD/9bRTvqEqkjk=",
      "dev": true,
      "requires": {
        "accepts": "~1.3.4",
        "batch": "0.6.1",
        "debug": "2.6.9",
        "escape-html": "~1.0.3",
        "http-errors": "~1.6.2",
        "mime-types": "~2.1.17",
        "parseurl": "~1.3.2"
      },
      "dependencies": {
        "http-errors": {
          "version": "1.6.3",
          "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.6.3.tgz",
          "integrity": "sha1-i1VoC7S+KDoLW/TqLjhYC+HZMg0=",
          "dev": true,
          "requires": {
            "depd": "~1.1.2",
            "inherits": "2.0.3",
            "setprototypeof": "1.1.0",
            "statuses": ">= 1.4.0 < 2"
          }
        },
        "inherits": {
          "version": "2.0.3",
          "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz",
          "integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=",
          "dev": true
        },
        "setprototypeof": {
          "version": "1.1.0",
          "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.1.0.tgz",
          "integrity": "sha512-BvE/TwpZX4FXExxOxZyRGQQv651MSwmWKZGqvmPcRIjDqWub67kTKuIMx43cZZrS/cBBzwBcNDWoFxt2XEFIpQ==",
          "dev": true
        },
        "statuses": {
          "version": "1.5.0",
          "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.5.0.tgz",
          "integrity": "sha1-Fhx9rBd2Wf2YEfQ3cfqZOBR4Yow=",
          "dev": true
        }
      }
    },
    "serve-static": {
      "version": "1.13.2",
      "resolved": "https://registry.npmjs.org/serve-static/-/serve-static-1.13.2.tgz",
      "integrity": "sha512-p/tdJrO4U387R9oMjb1oj7qSMaMfmOyd4j9hOFoxZe2baQszgHcSWjuya/CiT5kgZZKRudHNOA0pYXOl8rQ5nw==",
      "dev": true,
      "requires": {
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "parseurl": "~1.3.2",
        "send": "0.16.2"
      }
    },
    "server-destroy": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/server-destroy/-/server-destroy-1.0.1.tgz",
      "integrity": "sha1-8Tv5KOQrnD55OD5hzDmYtdFObN0=",
      "dev": true
    },
    "set-blocking": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz",
      "integrity": "sha1-BF+XgtARrppoA93TgrJDkrPYkPc="
    },
    "set-value": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/set-value/-/set-value-2.0.1.tgz",
      "integrity": "sha512-JxHc1weCN68wRY0fhCoXpyK55m/XPHafOmK4UWD7m2CI14GMcFypt4w/0+NV5f/ZMby2F6S2wwA7fgynh9gWSw==",
      "dev": true,
      "requires": {
        "extend-shallow": "^2.0.1",
        "is-extendable": "^0.1.1",
        "is-plain-object": "^2.0.3",
        "split-string": "^3.0.1"
      },
      "dependencies": {
        "extend-shallow": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
          "dev": true,
          "requires": {
            "is-extendable": "^0.1.0"
          }
        }
      }
    },
    "setprototypeof": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.1.1.tgz",
      "integrity": "sha512-JvdAWfbXeIGaZ9cILp38HntZSFSo3mWg6xGcJJsd+d4aRMOqauag1C63dJfDw7OaMYwEbHMOxEZ1lqVRYP2OAw==",
      "dev": true
    },
    "sha.js": {
      "version": "2.4.11",
      "resolved": "https://registry.npmjs.org/sha.js/-/sha.js-2.4.11.tgz",
      "integrity": "sha512-QMEp5B7cftE7APOjk5Y6xgrbWu+WkLVQwk8JNjZ8nKRciZaByEW6MubieAiToS7+dwvrjGhH8jRXz3MVd0AYqQ==",
      "dev": true,
      "requires": {
        "inherits": "^2.0.1",
        "safe-buffer": "^5.0.1"
      }
    },
    "shasum": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/shasum/-/shasum-1.0.2.tgz",
      "integrity": "sha1-5wEjENj0F/TetXEhUOVni4euVl8=",
      "dev": true,
      "requires": {
        "json-stable-stringify": "~0.0.0",
        "sha.js": "~2.4.4"
      }
    },
    "shasum-object": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/shasum-object/-/shasum-object-1.0.0.tgz",
      "integrity": "sha512-Iqo5rp/3xVi6M4YheapzZhhGPVs0yZwHj7wvwQ1B9z8H6zk+FEnI7y3Teq7qwnekfEhu8WmG2z0z4iWZaxLWVg==",
      "dev": true,
      "requires": {
        "fast-safe-stringify": "^2.0.7"
      }
    },
    "shebang-command": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-1.2.0.tgz",
      "integrity": "sha1-RKrGW2lbAzmJaMOfNj/uXer98eo=",
      "dev": true,
      "requires": {
        "shebang-regex": "^1.0.0"
      }
    },
    "shebang-regex": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-1.0.0.tgz",
      "integrity": "sha1-2kL0l0DAtC2yypcoVxyxkMmO/qM=",
      "dev": true
    },
    "shell-quote": {
      "version": "1.7.2",
      "resolved": "https://registry.npmjs.org/shell-quote/-/shell-quote-1.7.2.tgz",
      "integrity": "sha512-mRz/m/JVscCrkMyPqHc/bczi3OQHkLTqXHEFu0zDhK/qfv3UcOA4SVmRCLmos4bhjr9ekVQubj/R7waKapmiQg==",
      "dev": true
    },
    "shellwords": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/shellwords/-/shellwords-0.1.1.tgz",
      "integrity": "sha512-vFwSUfQvqybiICwZY5+DAWIPLKsWO31Q91JSKl3UYv+K5c2QRPzn0qzec6QPu1Qc9eHYItiP3NdJqNVqetYAww==",
      "dev": true
    },
    "sigmund": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/sigmund/-/sigmund-1.0.1.tgz",
      "integrity": "sha1-P/IfGYytIXX587eBhT/ZTQ0ZtZA=",
      "dev": true
    },
    "signal-exit": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.3.tgz",
      "integrity": "sha512-VUJ49FC8U1OxwZLxIbTTrDvLnf/6TDgxZcK8wxR8zs13xpx7xbG60ndBlhNrFi2EMuFRoeDoJO7wthSLq42EjA=="
    },
    "simple-concat": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/simple-concat/-/simple-concat-1.0.1.tgz",
      "integrity": "sha512-cSFtAPtRhljv69IK0hTVZQ+OfE9nePi/rtJmw5UjHeVyVroEqJXP1sFztKUy1qU+xvz3u/sfYJLa947b7nAN2Q=="
    },
    "simple-fmt": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/simple-fmt/-/simple-fmt-0.1.0.tgz",
      "integrity": "sha1-GRv1ZqWeZTBILLJatTtKjchcOms=",
      "dev": true
    },
    "simple-get": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/simple-get/-/simple-get-3.1.0.tgz",
      "integrity": "sha512-bCR6cP+aTdScaQCnQKbPKtJOKDp/hj9EDLJo3Nw4y1QksqaovlW/bnptB6/c1e+qmNIDHRK+oXFDdEqBT8WzUA==",
      "requires": {
        "decompress-response": "^4.2.0",
        "once": "^1.3.1",
        "simple-concat": "^1.0.0"
      }
    },
    "simple-glob": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/simple-glob/-/simple-glob-0.2.0.tgz",
      "integrity": "sha512-CnCJ+SEDIWYviwBUp7pGxdq4QZgaR5xVzoxL/gujEwn2/vOJ4PVQrmd8Z0spH1cPsLxgF83cNjNcy4zYvSWiZA==",
      "dev": true,
      "requires": {
        "glob": "^7.1.2",
        "lodash.difference": "^4.5.0",
        "lodash.flatten": "^4.4.0",
        "lodash.union": "^4.6.0"
      },
      "dependencies": {
        "glob": {
          "version": "7.1.6",
          "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.6.tgz",
          "integrity": "sha512-LwaxwyZ72Lk7vZINtNNrywX0ZuLyStrdDtabefZKAY5ZGJhVtgdznluResxNmPitE0SAO+O26sWTHeKSI2wMBA==",
          "dev": true,
          "requires": {
            "fs.realpath": "^1.0.0",
            "inflight": "^1.0.4",
            "inherits": "2",
            "minimatch": "^3.0.4",
            "once": "^1.3.0",
            "path-is-absolute": "^1.0.0"
          }
        }
      }
    },
    "simple-is": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/simple-is/-/simple-is-0.2.0.tgz",
      "integrity": "sha1-Krt1qt453rXMgVzhDmGRFkhQuvA=",
      "dev": true
    },
    "slash": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/slash/-/slash-1.0.0.tgz",
      "integrity": "sha1-xB8vbDn8FtHNF61LXYlhFK5HDVU=",
      "dev": true
    },
    "snapdragon": {
      "version": "0.8.2",
      "resolved": "https://registry.npmjs.org/snapdragon/-/snapdragon-0.8.2.tgz",
      "integrity": "sha512-FtyOnWN/wCHTVXOMwvSv26d+ko5vWlIDD6zoUJ7LW8vh+ZBC8QdljveRP+crNrtBwioEUWy/4dMtbBjA4ioNlg==",
      "dev": true,
      "requires": {
        "base": "^0.11.1",
        "debug": "^2.2.0",
        "define-property": "^0.2.5",
        "extend-shallow": "^2.0.1",
        "map-cache": "^0.2.2",
        "source-map": "^0.5.6",
        "source-map-resolve": "^0.5.0",
        "use": "^3.1.0"
      },
      "dependencies": {
        "define-property": {
          "version": "0.2.5",
          "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
          "dev": true,
          "requires": {
            "is-descriptor": "^0.1.0"
          }
        },
        "extend-shallow": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
          "dev": true,
          "requires": {
            "is-extendable": "^0.1.0"
          }
        }
      }
    },
    "snapdragon-node": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/snapdragon-node/-/snapdragon-node-2.1.1.tgz",
      "integrity": "sha512-O27l4xaMYt/RSQ5TR3vpWCAB5Kb/czIcqUFOM/C4fYcLnbZUc1PkjTAMjof2pBWaSTwOUd6qUHcFGVGj7aIwnw==",
      "dev": true,
      "requires": {
        "define-property": "^1.0.0",
        "isobject": "^3.0.0",
        "snapdragon-util": "^3.0.1"
      },
      "dependencies": {
        "define-property": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/define-property/-/define-property-1.0.0.tgz",
          "integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
          "dev": true,
          "requires": {
            "is-descriptor": "^1.0.0"
          }
        },
        "is-accessor-descriptor": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",
          "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",
          "dev": true,
          "requires": {
            "kind-of": "^6.0.0"
          }
        },
        "is-data-descriptor": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",
          "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",
          "dev": true,
          "requires": {
            "kind-of": "^6.0.0"
          }
        },
        "is-descriptor": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",
          "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",
          "dev": true,
          "requires": {
            "is-accessor-descriptor": "^1.0.0",
            "is-data-descriptor": "^1.0.0",
            "kind-of": "^6.0.2"
          }
        },
        "isobject": {
          "version": "3.0.1",
          "resolved": "https://registry.npmjs.org/isobject/-/isobject-3.0.1.tgz",
          "integrity": "sha1-TkMekrEalzFjaqH5yNHMvP2reN8=",
          "dev": true
        },
        "kind-of": {
          "version": "6.0.3",
          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.3.tgz",
          "integrity": "sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw==",
          "dev": true
        }
      }
    },
    "snapdragon-util": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/snapdragon-util/-/snapdragon-util-3.0.1.tgz",
      "integrity": "sha512-mbKkMdQKsjX4BAL4bRYTj21edOf8cN7XHdYUJEe+Zn99hVEYcMvKPct1IqNe7+AZPirn8BCDOQBHQZknqmKlZQ==",
      "dev": true,
      "requires": {
        "kind-of": "^3.2.0"
      }
    },
    "sntp": {
      "version": "1.0.9",
      "resolved": "https://registry.npmjs.org/sntp/-/sntp-1.0.9.tgz",
      "integrity": "sha1-ZUEYTMkK7qbG57NeJlkIJEPGYZg=",
      "dev": true,
      "requires": {
        "hoek": "2.x.x"
      }
    },
    "socket.io": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/socket.io/-/socket.io-2.1.1.tgz",
      "integrity": "sha512-rORqq9c+7W0DAK3cleWNSyfv/qKXV99hV4tZe+gGLfBECw3XEhBy7x85F3wypA9688LKjtwO9pX9L33/xQI8yA==",
      "dev": true,
      "requires": {
        "debug": "~3.1.0",
        "engine.io": "~3.2.0",
        "has-binary2": "~1.0.2",
        "socket.io-adapter": "~1.1.0",
        "socket.io-client": "2.1.1",
        "socket.io-parser": "~3.2.0"
      },
      "dependencies": {
        "base64-arraybuffer": {
          "version": "0.1.5",
          "resolved": "https://registry.npmjs.org/base64-arraybuffer/-/base64-arraybuffer-0.1.5.tgz",
          "integrity": "sha1-c5JncZI7Whl0etZmqlzUv5xunOg=",
          "dev": true
        },
        "component-emitter": {
          "version": "1.2.1",
          "resolved": "https://registry.npmjs.org/component-emitter/-/component-emitter-1.2.1.tgz",
          "integrity": "sha1-E3kY1teCg/ffemt8WmPhQOaUJeY=",
          "dev": true
        },
        "debug": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/debug/-/debug-3.1.0.tgz",
          "integrity": "sha512-OX8XqP7/1a9cqkxYw2yXss15f26NKWBpDXQd0/uK/KPqdQhxbPa994hnzjcE2VqQpDslf55723cKPUOGSmMY3g==",
          "dev": true,
          "requires": {
            "ms": "2.0.0"
          }
        },
        "engine.io-client": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/engine.io-client/-/engine.io-client-3.2.1.tgz",
          "integrity": "sha512-y5AbkytWeM4jQr7m/koQLc5AxpRKC1hEVUb/s1FUAWEJq5AzJJ4NLvzuKPuxtDi5Mq755WuDvZ6Iv2rXj4PTzw==",
          "dev": true,
          "requires": {
            "component-emitter": "1.2.1",
            "component-inherit": "0.0.3",
            "debug": "~3.1.0",
            "engine.io-parser": "~2.1.1",
            "has-cors": "1.1.0",
            "indexof": "0.0.1",
            "parseqs": "0.0.5",
            "parseuri": "0.0.5",
            "ws": "~3.3.1",
            "xmlhttprequest-ssl": "~1.5.4",
            "yeast": "0.1.2"
          }
        },
        "engine.io-parser": {
          "version": "2.1.3",
          "resolved": "https://registry.npmjs.org/engine.io-parser/-/engine.io-parser-2.1.3.tgz",
          "integrity": "sha512-6HXPre2O4Houl7c4g7Ic/XzPnHBvaEmN90vtRO9uLmwtRqQmTOw0QMevL1TOfL2Cpu1VzsaTmMotQgMdkzGkVA==",
          "dev": true,
          "requires": {
            "after": "0.8.2",
            "arraybuffer.slice": "~0.0.7",
            "base64-arraybuffer": "0.1.5",
            "blob": "0.0.5",
            "has-binary2": "~1.0.2"
          }
        },
        "parseqs": {
          "version": "0.0.5",
          "resolved": "https://registry.npmjs.org/parseqs/-/parseqs-0.0.5.tgz",
          "integrity": "sha1-1SCKNzjkZ2bikbouoXNoSSGouJ0=",
          "dev": true,
          "requires": {
            "better-assert": "~1.0.0"
          }
        },
        "parseuri": {
          "version": "0.0.5",
          "resolved": "https://registry.npmjs.org/parseuri/-/parseuri-0.0.5.tgz",
          "integrity": "sha1-gCBKUNTbt3m/3G6+J3jZDkvOMgo=",
          "dev": true,
          "requires": {
            "better-assert": "~1.0.0"
          }
        },
        "socket.io-client": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/socket.io-client/-/socket.io-client-2.1.1.tgz",
          "integrity": "sha512-jxnFyhAuFxYfjqIgduQlhzqTcOEQSn+OHKVfAxWaNWa7ecP7xSNk2Dx/3UEsDcY7NcFafxvNvKPmmO7HTwTxGQ==",
          "dev": true,
          "requires": {
            "backo2": "1.0.2",
            "base64-arraybuffer": "0.1.5",
            "component-bind": "1.0.0",
            "component-emitter": "1.2.1",
            "debug": "~3.1.0",
            "engine.io-client": "~3.2.0",
            "has-binary2": "~1.0.2",
            "has-cors": "1.1.0",
            "indexof": "0.0.1",
            "object-component": "0.0.3",
            "parseqs": "0.0.5",
            "parseuri": "0.0.5",
            "socket.io-parser": "~3.2.0",
            "to-array": "0.1.4"
          }
        },
        "socket.io-parser": {
          "version": "3.2.0",
          "resolved": "https://registry.npmjs.org/socket.io-parser/-/socket.io-parser-3.2.0.tgz",
          "integrity": "sha512-FYiBx7rc/KORMJlgsXysflWx/RIvtqZbyGLlHZvjfmPTPeuD/I8MaW7cfFrj5tRltICJdgwflhfZ3NVVbVLFQA==",
          "dev": true,
          "requires": {
            "component-emitter": "1.2.1",
            "debug": "~3.1.0",
            "isarray": "2.0.1"
          }
        },
        "ws": {
          "version": "3.3.3",
          "resolved": "https://registry.npmjs.org/ws/-/ws-3.3.3.tgz",
          "integrity": "sha512-nnWLa/NwZSt4KQJu51MYlCcSQ5g7INpOrOMt4XV8j4dqTXdmlUmSHQ8/oLC069ckre0fRsgfvsKwbTdtKLCDkA==",
          "dev": true,
          "requires": {
            "async-limiter": "~1.0.0",
            "safe-buffer": "~5.1.0",
            "ultron": "~1.1.0"
          }
        }
      }
    },
    "socket.io-adapter": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/socket.io-adapter/-/socket.io-adapter-1.1.2.tgz",
      "integrity": "sha512-WzZRUj1kUjrTIrUKpZLEzFZ1OLj5FwLlAFQs9kuZJzJi5DKdU7FsWc36SNmA8iDOtwBQyT8FkrriRM8vXLYz8g==",
      "dev": true
    },
    "socket.io-client": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/socket.io-client/-/socket.io-client-2.3.1.tgz",
      "integrity": "sha512-YXmXn3pA8abPOY//JtYxou95Ihvzmg8U6kQyolArkIyLd0pgVhrfor/iMsox8cn07WCOOvvuJ6XKegzIucPutQ==",
      "dev": true,
      "requires": {
        "backo2": "1.0.2",
        "component-bind": "1.0.0",
        "component-emitter": "~1.3.0",
        "debug": "~3.1.0",
        "engine.io-client": "~3.4.0",
        "has-binary2": "~1.0.2",
        "indexof": "0.0.1",
        "parseqs": "0.0.6",
        "parseuri": "0.0.6",
        "socket.io-parser": "~3.3.0",
        "to-array": "0.1.4"
      },
      "dependencies": {
        "debug": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/debug/-/debug-3.1.0.tgz",
          "integrity": "sha512-OX8XqP7/1a9cqkxYw2yXss15f26NKWBpDXQd0/uK/KPqdQhxbPa994hnzjcE2VqQpDslf55723cKPUOGSmMY3g==",
          "dev": true,
          "requires": {
            "ms": "2.0.0"
          }
        }
      }
    },
    "socket.io-parser": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/socket.io-parser/-/socket.io-parser-3.3.1.tgz",
      "integrity": "sha512-1QLvVAe8dTz+mKmZ07Swxt+LAo4Y1ff50rlyoEx00TQmDFVQYPfcqGvIDJLGaBdhdNCecXtyKpD+EgKGcmmbuQ==",
      "dev": true,
      "requires": {
        "component-emitter": "~1.3.0",
        "debug": "~3.1.0",
        "isarray": "2.0.1"
      },
      "dependencies": {
        "debug": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/debug/-/debug-3.1.0.tgz",
          "integrity": "sha512-OX8XqP7/1a9cqkxYw2yXss15f26NKWBpDXQd0/uK/KPqdQhxbPa994hnzjcE2VqQpDslf55723cKPUOGSmMY3g==",
          "dev": true,
          "requires": {
            "ms": "2.0.0"
          }
        }
      }
    },
    "sockjs-client": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/sockjs-client/-/sockjs-client-1.1.4.tgz",
      "integrity": "sha1-W6vjhrd15M8U51IJEUUmVAFsixI=",
      "dev": true,
      "requires": {
        "debug": "^2.6.6",
        "eventsource": "0.1.6",
        "faye-websocket": "~0.11.0",
        "inherits": "^2.0.1",
        "json3": "^3.3.2",
        "url-parse": "^1.1.8"
      }
    },
    "source-map": {
      "version": "0.5.7",
      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.5.7.tgz",
      "integrity": "sha1-igOdLRAh0i0eoUyA2OpGi6LvP8w=",
      "dev": true
    },
    "source-map-resolve": {
      "version": "0.5.3",
      "resolved": "https://registry.npmjs.org/source-map-resolve/-/source-map-resolve-0.5.3.tgz",
      "integrity": "sha512-Htz+RnsXWk5+P2slx5Jh3Q66vhQj1Cllm0zvnaY98+NFx+Dv2CF/f5O/t8x+KaNdrdIAsruNzoh/KpialbqAnw==",
      "dev": true,
      "requires": {
        "atob": "^2.1.2",
        "decode-uri-component": "^0.2.0",
        "resolve-url": "^0.2.1",
        "source-map-url": "^0.4.0",
        "urix": "^0.1.0"
      }
    },
    "source-map-support": {
      "version": "0.4.18",
      "resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.4.18.tgz",
      "integrity": "sha512-try0/JqxPLF9nOjvSta7tVondkP5dwgyLDjVoyMDlmjugT2lRZ1OfsrYTkCd2hkDnJTKRbO/Rl3orm8vlsUzbA==",
      "dev": true,
      "requires": {
        "source-map": "^0.5.6"
      }
    },
    "source-map-url": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/source-map-url/-/source-map-url-0.4.0.tgz",
      "integrity": "sha1-PpNdfd1zYxuXZZlW1VEo6HtQhKM=",
      "dev": true
    },
    "sparkles": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/sparkles/-/sparkles-1.0.1.tgz",
      "integrity": "sha512-dSO0DDYUahUt/0/pD/Is3VIm5TGJjludZ0HVymmhYF6eNA53PVLhnUk0znSYbH8IYBuJdCE+1luR22jNLMaQdw==",
      "dev": true
    },
    "spdx-correct": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/spdx-correct/-/spdx-correct-3.1.1.tgz",
      "integrity": "sha512-cOYcUWwhCuHCXi49RhFRCyJEK3iPj1Ziz9DpViV3tbZOwXD49QzIN3MpOLJNxh2qwq2lJJZaKMVw9qNi4jTC0w==",
      "dev": true,
      "requires": {
        "spdx-expression-parse": "^3.0.0",
        "spdx-license-ids": "^3.0.0"
      }
    },
    "spdx-exceptions": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/spdx-exceptions/-/spdx-exceptions-2.3.0.tgz",
      "integrity": "sha512-/tTrYOC7PPI1nUAgx34hUpqXuyJG+DTHJTnIULG4rDygi4xu/tfgmq1e1cIRwRzwZgo4NLySi+ricLkZkw4i5A==",
      "dev": true
    },
    "spdx-expression-parse": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/spdx-expression-parse/-/spdx-expression-parse-3.0.1.tgz",
      "integrity": "sha512-cbqHunsQWnJNE6KhVSMsMeH5H/L9EpymbzqTQ3uLwNCLZ1Q481oWaofqH7nO6V07xlXwY6PhQdQ2IedWx/ZK4Q==",
      "dev": true,
      "requires": {
        "spdx-exceptions": "^2.1.0",
        "spdx-license-ids": "^3.0.0"
      }
    },
    "spdx-license-ids": {
      "version": "3.0.7",
      "resolved": "https://registry.npmjs.org/spdx-license-ids/-/spdx-license-ids-3.0.7.tgz",
      "integrity": "sha512-U+MTEOO0AiDzxwFvoa4JVnMV6mZlJKk2sBLt90s7G0Gd0Mlknc7kxEn3nuDPNZRta7O2uy8oLcZLVT+4sqNZHQ==",
      "dev": true
    },
    "split": {
      "version": "0.3.3",
      "resolved": "https://registry.npmjs.org/split/-/split-0.3.3.tgz",
      "integrity": "sha1-zQ7qXmOiEd//frDwkcQTPi0N0o8=",
      "dev": true,
      "requires": {
        "through": "2"
      }
    },
    "split-string": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/split-string/-/split-string-3.1.0.tgz",
      "integrity": "sha512-NzNVhJDYpwceVVii8/Hu6DKfD2G+NrQHlS/V/qgv763EYudVwEcMQNxd2lh+0VrUByXN/oJkl5grOhYWvQUYiw==",
      "dev": true,
      "requires": {
        "extend-shallow": "^3.0.0"
      }
    },
    "sprintf-js": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.1.2.tgz",
      "integrity": "sha512-VE0SOVEHCk7Qc8ulkWw3ntAzXuqf7S2lvwQaDLRnUeIEaKNQJzV6BwmLKhOqT61aGhfUMrXeaBk+oDGCzvhcug==",
      "dev": true,
      "optional": true
    },
    "sshpk": {
      "version": "1.16.1",
      "resolved": "https://registry.npmjs.org/sshpk/-/sshpk-1.16.1.tgz",
      "integrity": "sha512-HXXqVUq7+pcKeLqqZj6mHFUMvXtOJt1uoUx09pFW6011inTMxqI8BA8PM95myrIyyKwdnzjdFjLiE6KBPVtJIg==",
      "dev": true,
      "requires": {
        "asn1": "~0.2.3",
        "assert-plus": "^1.0.0",
        "bcrypt-pbkdf": "^1.0.0",
        "dashdash": "^1.12.0",
        "ecc-jsbn": "~0.1.1",
        "getpass": "^0.1.1",
        "jsbn": "~0.1.0",
        "safer-buffer": "^2.0.2",
        "tweetnacl": "~0.14.0"
      },
      "dependencies": {
        "assert-plus": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
          "integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU=",
          "dev": true
        }
      }
    },
    "stable": {
      "version": "0.1.8",
      "resolved": "https://registry.npmjs.org/stable/-/stable-0.1.8.tgz",
      "integrity": "sha512-ji9qxRnOVfcuLDySj9qzhGSEFVobyt1kIOSkj1qZzYLzq7Tos/oUUWvotUPQLlrsidqsK6tBH89Bc9kL5zHA6w==",
      "dev": true
    },
    "stat-mode": {
      "version": "0.2.2",
      "resolved": "https://registry.npmjs.org/stat-mode/-/stat-mode-0.2.2.tgz",
      "integrity": "sha1-5sgLYjEj19gM8TLOU480YokHJQI=",
      "dev": true
    },
    "static-extend": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/static-extend/-/static-extend-0.1.2.tgz",
      "integrity": "sha1-YICcOcv/VTNyJv1eC1IPNB8ftcY=",
      "dev": true,
      "requires": {
        "define-property": "^0.2.5",
        "object-copy": "^0.1.0"
      },
      "dependencies": {
        "define-property": {
          "version": "0.2.5",
          "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
          "dev": true,
          "requires": {
            "is-descriptor": "^0.1.0"
          }
        }
      }
    },
    "statuses": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.3.1.tgz",
      "integrity": "sha1-+vUbnrdKrvOzrPStX2Gr8ky3uT4=",
      "dev": true
    },
    "stdout-stream": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/stdout-stream/-/stdout-stream-1.4.1.tgz",
      "integrity": "sha512-j4emi03KXqJWcIeF8eIXkjMFN1Cmb8gUlDYGeBALLPo5qdyTfA9bOtl8m33lRoC+vFMkP3gl0WsDr6+gzxbbTA==",
      "dev": true,
      "requires": {
        "readable-stream": "^2.0.1"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "stealthy-require": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/stealthy-require/-/stealthy-require-1.1.1.tgz",
      "integrity": "sha1-NbCYdbT/SfJqd35QmzCQoyJr8ks=",
      "dev": true
    },
    "stream-browserify": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/stream-browserify/-/stream-browserify-2.0.2.tgz",
      "integrity": "sha512-nX6hmklHs/gr2FuxYDltq8fJA1GDlxKQCz8O/IM4atRqBH8OORmBNgfvW5gG10GT/qQ9u0CzIvr2X5Pkt6ntqg==",
      "dev": true,
      "requires": {
        "inherits": "~2.0.1",
        "readable-stream": "^2.0.2"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "stream-combiner": {
      "version": "0.0.4",
      "resolved": "https://registry.npmjs.org/stream-combiner/-/stream-combiner-0.0.4.tgz",
      "integrity": "sha1-TV5DPBhSYd3mI8o/RMWGvPXErRQ=",
      "dev": true,
      "requires": {
        "duplexer": "~0.1.1"
      }
    },
    "stream-combiner2": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/stream-combiner2/-/stream-combiner2-1.1.1.tgz",
      "integrity": "sha1-+02KFCDqNidk4hrUeAOXvry0HL4=",
      "dev": true,
      "requires": {
        "duplexer2": "~0.1.0",
        "readable-stream": "^2.0.2"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "stream-consume": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/stream-consume/-/stream-consume-0.1.1.tgz",
      "integrity": "sha512-tNa3hzgkjEP7XbCkbRXe1jpg+ievoa0O4SCFlMOYEscGSS4JJsckGL8swUyAa/ApGU3Ae4t6Honor4HhL+tRyg==",
      "dev": true
    },
    "stream-http": {
      "version": "2.8.3",
      "resolved": "https://registry.npmjs.org/stream-http/-/stream-http-2.8.3.tgz",
      "integrity": "sha512-+TSkfINHDo4J+ZobQLWiMouQYB+UVYFttRA94FpEzzJ7ZdqcL4uUUQ7WkdkI4DSozGmgBUE/a47L+38PenXhUw==",
      "dev": true,
      "requires": {
        "builtin-status-codes": "^3.0.0",
        "inherits": "^2.0.1",
        "readable-stream": "^2.3.6",
        "to-arraybuffer": "^1.0.0",
        "xtend": "^4.0.0"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "stream-shift": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/stream-shift/-/stream-shift-1.0.1.tgz",
      "integrity": "sha512-AiisoFqQ0vbGcZgQPY1cdP2I76glaVA/RauYR4G4thNFgkTqr90yXTo4LYX60Jl+sIlPNHHdGSwo01AvbKUSVQ==",
      "dev": true
    },
    "stream-splicer": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/stream-splicer/-/stream-splicer-2.0.1.tgz",
      "integrity": "sha512-Xizh4/NPuYSyAXyT7g8IvdJ9HJpxIGL9PjyhtywCZvvP0OPIdqyrr4dMikeuvY8xahpdKEBlBTySe583totajg==",
      "dev": true,
      "requires": {
        "inherits": "^2.0.1",
        "readable-stream": "^2.0.2"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "stream-throttle": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/stream-throttle/-/stream-throttle-0.1.3.tgz",
      "integrity": "sha1-rdV8jXzHOoFjDTHNVdOWHPr7qcM=",
      "dev": true,
      "requires": {
        "commander": "^2.2.0",
        "limiter": "^1.0.5"
      }
    },
    "strict-uri-encode": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/strict-uri-encode/-/strict-uri-encode-1.1.0.tgz",
      "integrity": "sha1-J5siXfHVgrH1TmWt3UNS4Y+qBxM=",
      "dev": true
    },
    "string-width": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-3.1.0.tgz",
      "integrity": "sha512-vafcv6KjVZKSgz06oM/H6GDBrAtz8vdhQakGjFIvNrHA6y3HCF1CInLy+QLq8dTJPQ1b+KDUqDFctkdRW44e1w==",
      "dev": true,
      "requires": {
        "emoji-regex": "^7.0.1",
        "is-fullwidth-code-point": "^2.0.0",
        "strip-ansi": "^5.1.0"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",
          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg==",
          "dev": true
        },
        "strip-ansi": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",
          "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",
          "dev": true,
          "requires": {
            "ansi-regex": "^4.1.0"
          }
        }
      }
    },
    "string_decoder": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.3.0.tgz",
      "integrity": "sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==",
      "requires": {
        "safe-buffer": "~5.2.0"
      },
      "dependencies": {
        "safe-buffer": {
          "version": "5.2.1",
          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
          "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ=="
        }
      }
    },
    "stringmap": {
      "version": "0.2.2",
      "resolved": "https://registry.npmjs.org/stringmap/-/stringmap-0.2.2.tgz",
      "integrity": "sha1-VWwTeyWPlCuHdvWy71gqoGnX0bE=",
      "dev": true
    },
    "stringset": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/stringset/-/stringset-0.2.1.tgz",
      "integrity": "sha1-7yWcTjSTRDd/zRyRPdLoSMnAQrU=",
      "dev": true
    },
    "stringstream": {
      "version": "0.0.6",
      "resolved": "https://registry.npmjs.org/stringstream/-/stringstream-0.0.6.tgz",
      "integrity": "sha512-87GEBAkegbBcweToUrdzf3eLhWNg06FJTebl4BVJz/JgWy8CvEr9dRtX5qWphiynMSQlxxi+QqN0z5T32SLlhA==",
      "dev": true
    },
    "strip-ansi": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",
      "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",
      "requires": {
        "ansi-regex": "^2.0.0"
      }
    },
    "strip-bom": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-1.0.0.tgz",
      "integrity": "sha1-hbiGLzhEtabV7IRnqTWYFzo295Q=",
      "dev": true,
      "requires": {
        "first-chunk-stream": "^1.0.0",
        "is-utf8": "^0.2.0"
      }
    },
    "strip-bom-stream": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/strip-bom-stream/-/strip-bom-stream-1.0.0.tgz",
      "integrity": "sha1-5xRDmFd9Uaa+0PoZlPoF9D/ZiO4=",
      "dev": true,
      "requires": {
        "first-chunk-stream": "^1.0.0",
        "strip-bom": "^2.0.0"
      },
      "dependencies": {
        "strip-bom": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-2.0.0.tgz",
          "integrity": "sha1-YhmoVhZSBJHzV4i9vxRHqZx+aw4=",
          "dev": true,
          "requires": {
            "is-utf8": "^0.2.0"
          }
        }
      }
    },
    "strip-dirs": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/strip-dirs/-/strip-dirs-1.1.1.tgz",
      "integrity": "sha1-lgu9EoeETzl1pFWKoQOoJV4kVqA=",
      "dev": true,
      "requires": {
        "chalk": "^1.0.0",
        "get-stdin": "^4.0.1",
        "is-absolute": "^0.1.5",
        "is-natural-number": "^2.0.0",
        "minimist": "^1.1.0",
        "sum-up": "^1.0.1"
      },
      "dependencies": {
        "is-absolute": {
          "version": "0.1.7",
          "resolved": "https://registry.npmjs.org/is-absolute/-/is-absolute-0.1.7.tgz",
          "integrity": "sha1-hHSREZ/MtftDYhfMc39/qtUPYD8=",
          "dev": true,
          "requires": {
            "is-relative": "^0.1.0"
          }
        },
        "is-relative": {
          "version": "0.1.3",
          "resolved": "https://registry.npmjs.org/is-relative/-/is-relative-0.1.3.tgz",
          "integrity": "sha1-kF/uiuhvRbPsYUvDwVyGnfCHboI=",
          "dev": true
        }
      }
    },
    "strip-eof": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/strip-eof/-/strip-eof-1.0.0.tgz",
      "integrity": "sha1-u0P/VZim6wXYm1n80SnJgzE2Br8=",
      "dev": true
    },
    "strip-hex-prefix": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/strip-hex-prefix/-/strip-hex-prefix-1.0.0.tgz",
      "integrity": "sha1-DF8VX+8RUTczd96du1iNoFUA428=",
      "dev": true,
      "requires": {
        "is-hex-prefixed": "1.0.0"
      }
    },
    "strip-indent": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/strip-indent/-/strip-indent-1.0.1.tgz",
      "integrity": "sha1-DHlipq3vp7vUrDZkYKY4VSrhoKI=",
      "dev": true,
      "requires": {
        "get-stdin": "^4.0.1"
      }
    },
    "strip-json-comments": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-2.0.1.tgz",
      "integrity": "sha1-PFMZQukIwml8DsNEhYwobHygpgo="
    },
    "strip-outer": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/strip-outer/-/strip-outer-1.0.1.tgz",
      "integrity": "sha512-k55yxKHwaXnpYGsOzg4Vl8+tDrWylxDEpknGjhTiZB8dFRU5rTo9CAzeycivxV3s+zlTKwrs6WxMxR95n26kwg==",
      "dev": true,
      "requires": {
        "escape-string-regexp": "^1.0.2"
      }
    },
    "subarg": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/subarg/-/subarg-1.0.0.tgz",
      "integrity": "sha1-9izxdYHplrSPyWVpn1TAauJouNI=",
      "dev": true,
      "requires": {
        "minimist": "^1.1.0"
      }
    },
    "sum-up": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/sum-up/-/sum-up-1.0.3.tgz",
      "integrity": "sha1-HGYfZnBX9jvLeHWqFDi8FiUlFW4=",
      "dev": true,
      "requires": {
        "chalk": "^1.0.0"
      }
    },
    "sumchecker": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/sumchecker/-/sumchecker-3.0.1.tgz",
      "integrity": "sha512-MvjXzkz/BOfyVDkG0oFOtBxHX2u3gKbMHIF/dXblZsgD3BWOFLmHovIpZY7BykJdAjcqRCBi1WYBNdEC9yI7vg==",
      "dev": true,
      "requires": {
        "debug": "^4.1.0"
      },
      "dependencies": {
        "debug": {
          "version": "4.3.1",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.1.tgz",
          "integrity": "sha512-doEwdvm4PCeK4K3RQN2ZC2BYUBaxwLARCqZmMjtF8a51J2Rb0xpVloFRnCODwqjpwnAoao4pelN8l3RJdv3gRQ==",
          "dev": true,
          "requires": {
            "ms": "2.1.2"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
          "dev": true
        }
      }
    },
    "supports-color": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",
      "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=",
      "dev": true
    },
    "supports-hyperlinks": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/supports-hyperlinks/-/supports-hyperlinks-1.0.1.tgz",
      "integrity": "sha512-HHi5kVSefKaJkGYXbDuKbUGRVxqnWGn3J2e39CYcNJEfWciGq2zYtOhXLTlvrOZW1QU7VX67w7fMmWafHX9Pfw==",
      "dev": true,
      "requires": {
        "has-flag": "^2.0.0",
        "supports-color": "^5.0.0"
      },
      "dependencies": {
        "has-flag": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-2.0.0.tgz",
          "integrity": "sha1-6CB68cx7MNRGzHC3NLXovhj4jVE=",
          "dev": true
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          },
          "dependencies": {
            "has-flag": {
              "version": "3.0.0",
              "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
              "integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0=",
              "dev": true
            }
          }
        }
      }
    },
    "symbol-hd-wallets": {
      "version": "0.12.0",
      "resolved": "https://registry.npmjs.org/symbol-hd-wallets/-/symbol-hd-wallets-0.12.0.tgz",
      "integrity": "sha512-LZSKSxEFcKNfXywijcTYFRN/KTaN19viNoJmNafDbAsD880/hnRWWsDYQnXR0IRjUi+Ry8kn4XJLUz0t34pthQ==",
      "dev": true,
      "requires": {
        "@types/bip32": "^1.0.2",
        "bip32": "^1.0.4",
        "bip39": "^3.0.2",
        "bip44-constants": "^8.0.5",
        "bs58check": "^2.1.2",
        "create-hash": "^1.2.0",
        "create-hmac": "^1.1.7",
        "js-sha3": "^0.8.0",
        "rxjs": "^6.5.4",
        "symbol-sdk": "^0.20.6",
        "tiny-secp256k1": "^1.1.3",
        "tweetnacl": "^1.0.3"
      },
      "dependencies": {
        "ajv": {
          "version": "6.12.6",
          "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
          "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
          "dev": true,
          "requires": {
            "fast-deep-equal": "^3.1.1",
            "fast-json-stable-stringify": "^2.0.0",
            "json-schema-traverse": "^0.4.1",
            "uri-js": "^4.2.2"
          }
        },
        "assert-plus": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
          "integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU=",
          "dev": true
        },
        "aws-sign2": {
          "version": "0.7.0",
          "resolved": "https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz",
          "integrity": "sha1-tG6JCTSpWR8tL2+G1+ap8bP+dqg=",
          "dev": true
        },
        "crypto-js": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/crypto-js/-/crypto-js-4.0.0.tgz",
          "integrity": "sha512-bzHZN8Pn+gS7DQA6n+iUmBfl0hO5DJq++QP3U6uTucDtk/0iGpXd/Gg7CGR0p8tJhofJyaKoWBuJI4eAO00BBg==",
          "dev": true
        },
        "form-data": {
          "version": "2.3.3",
          "resolved": "https://registry.npmjs.org/form-data/-/form-data-2.3.3.tgz",
          "integrity": "sha512-1lLKB2Mu3aGP1Q/2eCOx0fNbRMe7XdwktwOruhfqqd0rIJWwN4Dh+E3hrPSlDCXnSR7UtZ1N38rVXm+6+MEhJQ==",
          "dev": true,
          "requires": {
            "asynckit": "^0.4.0",
            "combined-stream": "^1.0.6",
            "mime-types": "^2.1.12"
          }
        },
        "har-schema": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/har-schema/-/har-schema-2.0.0.tgz",
          "integrity": "sha1-qUwiJOvKwEeCoNkDVSHyRzW37JI=",
          "dev": true
        },
        "har-validator": {
          "version": "5.1.5",
          "resolved": "https://registry.npmjs.org/har-validator/-/har-validator-5.1.5.tgz",
          "integrity": "sha512-nmT2T0lljbxdQZfspsno9hgrG3Uir6Ks5afism62poxqBM6sDnMEuPmzTq8XN0OEwqKLLdh1jQI3qyE66Nzb3w==",
          "dev": true,
          "requires": {
            "ajv": "^6.12.3",
            "har-schema": "^2.0.0"
          }
        },
        "http-signature": {
          "version": "1.2.0",
          "resolved": "https://registry.npmjs.org/http-signature/-/http-signature-1.2.0.tgz",
          "integrity": "sha1-muzZJRFHcvPZW2WmCruPfBj7rOE=",
          "dev": true,
          "requires": {
            "assert-plus": "^1.0.0",
            "jsprim": "^1.2.2",
            "sshpk": "^1.7.0"
          }
        },
        "oauth-sign": {
          "version": "0.9.0",
          "resolved": "https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.9.0.tgz",
          "integrity": "sha512-fexhUFFPTGV8ybAtSIGbV6gOkSv8UtRbDBnAyLQw4QPKkgNlsH2ByPGtMUqdWkos6YCRmAqViwgZrJc/mRDzZQ==",
          "dev": true
        },
        "performance-now": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz",
          "integrity": "sha1-Ywn04OX6kT7BxpMHrjZLSzd8nns=",
          "dev": true
        },
        "punycode": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz",
          "integrity": "sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A==",
          "dev": true
        },
        "qs": {
          "version": "6.5.2",
          "resolved": "https://registry.npmjs.org/qs/-/qs-6.5.2.tgz",
          "integrity": "sha512-N5ZAX4/LxJmF+7wN74pUD6qAh9/wnvdQcjq9TZjevvXzSUo7bfmw91saqMjzGS2xq91/odN2dW/WOl7qQHNDGA==",
          "dev": true
        },
        "request": {
          "version": "2.88.2",
          "resolved": "https://registry.npmjs.org/request/-/request-2.88.2.tgz",
          "integrity": "sha512-MsvtOrfG9ZcrOwAW+Qi+F6HbD0CWXEh9ou77uOb7FM2WPhwT7smM833PzanhJLsgXjN89Ir6V2PczXNnMpwKhw==",
          "dev": true,
          "requires": {
            "aws-sign2": "~0.7.0",
            "aws4": "^1.8.0",
            "caseless": "~0.12.0",
            "combined-stream": "~1.0.6",
            "extend": "~3.0.2",
            "forever-agent": "~0.6.1",
            "form-data": "~2.3.2",
            "har-validator": "~5.1.3",
            "http-signature": "~1.2.0",
            "is-typedarray": "~1.0.0",
            "isstream": "~0.1.2",
            "json-stringify-safe": "~5.0.1",
            "mime-types": "~2.1.19",
            "oauth-sign": "~0.9.0",
            "performance-now": "^2.1.0",
            "qs": "~6.5.2",
            "safe-buffer": "^5.1.2",
            "tough-cookie": "~2.5.0",
            "tunnel-agent": "^0.6.0",
            "uuid": "^3.3.2"
          }
        },
        "rxjs": {
          "version": "6.6.3",
          "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-6.6.3.tgz",
          "integrity": "sha512-trsQc+xYYXZ3urjOiJOuCOa5N3jAZ3eiSpQB5hIT8zGlL2QfnHLJ2r7GMkBGuIausdJN1OneaI6gQlsqNHHmZQ==",
          "dev": true,
          "requires": {
            "tslib": "^1.9.0"
          }
        },
        "symbol-openapi-typescript-fetch-client": {
          "version": "0.9.6",
          "resolved": "https://registry.npmjs.org/symbol-openapi-typescript-fetch-client/-/symbol-openapi-typescript-fetch-client-0.9.6.tgz",
          "integrity": "sha512-ZZtR031IBkYfiG0bR26vGckKmUrJzY9sggXMusrqloxweNovtzf7Aqpx7nNEpCJdMNzwv+E0V8mYBwxgFuiMfg==",
          "dev": true
        },
        "symbol-sdk": {
          "version": "0.20.7",
          "resolved": "https://registry.npmjs.org/symbol-sdk/-/symbol-sdk-0.20.7.tgz",
          "integrity": "sha512-313Uo/cev3ygvVLwTyDtnD1Qh56u4HeuUt5Q05R+WB3zjZl5xffXs5VKPRA4Th45/0Leyxk7oMPAS9hfFim5vw==",
          "dev": true,
          "requires": {
            "bluebird": "^3.7.2",
            "catbuffer-typescript": "0.0.21",
            "crypto-js": "^4.0.0",
            "diff": "^4.0.2",
            "futoin-hkdf": "^1.3.1",
            "js-joda": "^1.6.2",
            "js-sha256": "^0.9.0",
            "js-sha3": "^0.8.0",
            "js-sha512": "^0.8.0",
            "long": "^4.0.0",
            "merkletreejs": "^0.1.7",
            "minimist": "^1.2.5",
            "node-fetch": "^2.6.0",
            "request": "^2.88.0",
            "request-promise-native": "^1.0.5",
            "ripemd160": "^2.0.2",
            "rxjs": "^6.5.3",
            "rxjs-compat": "^6.5.3",
            "symbol-openapi-typescript-fetch-client": "0.9.6",
            "tweetnacl": "^1.0.3",
            "utf8": "^3.0.0",
            "ws": "^7.2.3"
          }
        },
        "tough-cookie": {
          "version": "2.5.0",
          "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.5.0.tgz",
          "integrity": "sha512-nlLsUzgm1kfLXSXfRZMc1KLAugd4hqJHDTvc2hDIwS3mZAfMEuMbc03SujMF+GEcpaX/qboeycw6iO8JwVv2+g==",
          "dev": true,
          "requires": {
            "psl": "^1.1.28",
            "punycode": "^2.1.1"
          }
        },
        "tweetnacl": {
          "version": "1.0.3",
          "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-1.0.3.tgz",
          "integrity": "sha512-6rt+RN7aOi1nGMyC4Xa5DdYiukl2UWCbcJft7YhxReBGQD7OAM8Pbxw6YMo4r2diNEA8FEmu32YOn9rhaiE5yw==",
          "dev": true
        },
        "ws": {
          "version": "7.4.1",
          "resolved": "https://registry.npmjs.org/ws/-/ws-7.4.1.tgz",
          "integrity": "sha512-pTsP8UAfhy3sk1lSk/O/s4tjD0CRwvMnzvwr4OKGX7ZvqZtUyx4KIJB5JWbkykPoc55tixMGgTNoh3k4FkNGFQ==",
          "dev": true
        }
      }
    },
    "symbol-observable": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/symbol-observable/-/symbol-observable-1.0.1.tgz",
      "integrity": "sha1-g0D8RwLDEi310iKI+IKD9RPT/dQ=",
      "dev": true
    },
    "symbol-openapi-typescript-fetch-client": {
      "version": "0.11.2",
      "resolved": "https://registry.npmjs.org/symbol-openapi-typescript-fetch-client/-/symbol-openapi-typescript-fetch-client-0.11.2.tgz",
      "integrity": "sha512-A1MAN8/UWlaCEibBf6zxkduZwDNSvWwLPp6JB0GeYI/FAOrw/9nLyuS/NJQ3siGAUclnuejH1wG7KdUg0/4RSw==",
      "dev": true
    },
    "symbol-openapi-typescript-node-client": {
      "version": "0.8.9",
      "resolved": "https://registry.npmjs.org/symbol-openapi-typescript-node-client/-/symbol-openapi-typescript-node-client-0.8.9.tgz",
      "integrity": "sha512-JElZ2vA63oqFGaT2wdEe7L2P17i3NaTwQhoQO4Pk1zMrQ9D+dGI1iknTuAXj2+xqxj36vLJX4Vi1UugvSkfJCA==",
      "dev": true,
      "requires": {
        "@types/bluebird": "*",
        "@types/request": "*",
        "bluebird": "^3.5.0",
        "request": "^2.81.0",
        "rewire": "^3.0.2"
      }
    },
    "symbol-paper-wallets": {
      "version": "1.0.2-optin",
      "resolved": "https://registry.npmjs.org/symbol-paper-wallets/-/symbol-paper-wallets-1.0.2-optin.tgz",
      "integrity": "sha512-5HKYvQUMBK9O1CYcQi23G5iv6HuYChZrsCUplPkVwNyQK1+1JxERLPd1OXz04xlOjiNX9ikZsDwhpFZK+ux0eA==",
      "dev": true,
      "requires": {
        "@pdf-lib/fontkit": "1.0.0",
        "pdf-lib": "1.10.0",
        "symbol-hd-wallets": "0.12.0",
        "symbol-qr-library": "0.12.0",
        "symbol-sdk": "0.20.7",
        "typescript": "^3.7.4"
      },
      "dependencies": {
        "ajv": {
          "version": "6.12.6",
          "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
          "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
          "dev": true,
          "requires": {
            "fast-deep-equal": "^3.1.1",
            "fast-json-stable-stringify": "^2.0.0",
            "json-schema-traverse": "^0.4.1",
            "uri-js": "^4.2.2"
          }
        },
        "assert-plus": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
          "integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU=",
          "dev": true
        },
        "aws-sign2": {
          "version": "0.7.0",
          "resolved": "https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz",
          "integrity": "sha1-tG6JCTSpWR8tL2+G1+ap8bP+dqg=",
          "dev": true
        },
        "form-data": {
          "version": "2.3.3",
          "resolved": "https://registry.npmjs.org/form-data/-/form-data-2.3.3.tgz",
          "integrity": "sha512-1lLKB2Mu3aGP1Q/2eCOx0fNbRMe7XdwktwOruhfqqd0rIJWwN4Dh+E3hrPSlDCXnSR7UtZ1N38rVXm+6+MEhJQ==",
          "dev": true,
          "requires": {
            "asynckit": "^0.4.0",
            "combined-stream": "^1.0.6",
            "mime-types": "^2.1.12"
          }
        },
        "har-schema": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/har-schema/-/har-schema-2.0.0.tgz",
          "integrity": "sha1-qUwiJOvKwEeCoNkDVSHyRzW37JI=",
          "dev": true
        },
        "har-validator": {
          "version": "5.1.5",
          "resolved": "https://registry.npmjs.org/har-validator/-/har-validator-5.1.5.tgz",
          "integrity": "sha512-nmT2T0lljbxdQZfspsno9hgrG3Uir6Ks5afism62poxqBM6sDnMEuPmzTq8XN0OEwqKLLdh1jQI3qyE66Nzb3w==",
          "dev": true,
          "requires": {
            "ajv": "^6.12.3",
            "har-schema": "^2.0.0"
          }
        },
        "http-signature": {
          "version": "1.2.0",
          "resolved": "https://registry.npmjs.org/http-signature/-/http-signature-1.2.0.tgz",
          "integrity": "sha1-muzZJRFHcvPZW2WmCruPfBj7rOE=",
          "dev": true,
          "requires": {
            "assert-plus": "^1.0.0",
            "jsprim": "^1.2.2",
            "sshpk": "^1.7.0"
          }
        },
        "oauth-sign": {
          "version": "0.9.0",
          "resolved": "https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.9.0.tgz",
          "integrity": "sha512-fexhUFFPTGV8ybAtSIGbV6gOkSv8UtRbDBnAyLQw4QPKkgNlsH2ByPGtMUqdWkos6YCRmAqViwgZrJc/mRDzZQ==",
          "dev": true
        },
        "performance-now": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz",
          "integrity": "sha1-Ywn04OX6kT7BxpMHrjZLSzd8nns=",
          "dev": true
        },
        "punycode": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz",
          "integrity": "sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A==",
          "dev": true
        },
        "qs": {
          "version": "6.5.2",
          "resolved": "https://registry.npmjs.org/qs/-/qs-6.5.2.tgz",
          "integrity": "sha512-N5ZAX4/LxJmF+7wN74pUD6qAh9/wnvdQcjq9TZjevvXzSUo7bfmw91saqMjzGS2xq91/odN2dW/WOl7qQHNDGA==",
          "dev": true
        },
        "request": {
          "version": "2.88.2",
          "resolved": "https://registry.npmjs.org/request/-/request-2.88.2.tgz",
          "integrity": "sha512-MsvtOrfG9ZcrOwAW+Qi+F6HbD0CWXEh9ou77uOb7FM2WPhwT7smM833PzanhJLsgXjN89Ir6V2PczXNnMpwKhw==",
          "dev": true,
          "requires": {
            "aws-sign2": "~0.7.0",
            "aws4": "^1.8.0",
            "caseless": "~0.12.0",
            "combined-stream": "~1.0.6",
            "extend": "~3.0.2",
            "forever-agent": "~0.6.1",
            "form-data": "~2.3.2",
            "har-validator": "~5.1.3",
            "http-signature": "~1.2.0",
            "is-typedarray": "~1.0.0",
            "isstream": "~0.1.2",
            "json-stringify-safe": "~5.0.1",
            "mime-types": "~2.1.19",
            "oauth-sign": "~0.9.0",
            "performance-now": "^2.1.0",
            "qs": "~6.5.2",
            "safe-buffer": "^5.1.2",
            "tough-cookie": "~2.5.0",
            "tunnel-agent": "^0.6.0",
            "uuid": "^3.3.2"
          }
        },
        "rxjs": {
          "version": "6.6.3",
          "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-6.6.3.tgz",
          "integrity": "sha512-trsQc+xYYXZ3urjOiJOuCOa5N3jAZ3eiSpQB5hIT8zGlL2QfnHLJ2r7GMkBGuIausdJN1OneaI6gQlsqNHHmZQ==",
          "dev": true,
          "requires": {
            "tslib": "^1.9.0"
          }
        },
        "symbol-openapi-typescript-fetch-client": {
          "version": "0.9.6",
          "resolved": "https://registry.npmjs.org/symbol-openapi-typescript-fetch-client/-/symbol-openapi-typescript-fetch-client-0.9.6.tgz",
          "integrity": "sha512-ZZtR031IBkYfiG0bR26vGckKmUrJzY9sggXMusrqloxweNovtzf7Aqpx7nNEpCJdMNzwv+E0V8mYBwxgFuiMfg==",
          "dev": true
        },
        "symbol-qr-library": {
          "version": "0.12.0",
          "resolved": "https://registry.npmjs.org/symbol-qr-library/-/symbol-qr-library-0.12.0.tgz",
          "integrity": "sha512-mt9f2nGBTMt+YAbZzEHQ9Ls8/36y4ttrIN5J7Lj1O2FSFPdKXi/x/+OaGIZnVvIknIURCpSR81iNYgMC2BBs6g==",
          "dev": true,
          "requires": {
            "braces": ">=2.3.1",
            "canvas": "^2.6.1",
            "crypto-js": "^3.3.0",
            "open": "^7.0.2",
            "qrcode": "^1.4.4",
            "symbol-hd-wallets": "^0.12.0",
            "symbol-sdk": "^0.20.6"
          }
        },
        "symbol-sdk": {
          "version": "0.20.7",
          "resolved": "https://registry.npmjs.org/symbol-sdk/-/symbol-sdk-0.20.7.tgz",
          "integrity": "sha512-313Uo/cev3ygvVLwTyDtnD1Qh56u4HeuUt5Q05R+WB3zjZl5xffXs5VKPRA4Th45/0Leyxk7oMPAS9hfFim5vw==",
          "dev": true,
          "requires": {
            "bluebird": "^3.7.2",
            "catbuffer-typescript": "0.0.21",
            "crypto-js": "^4.0.0",
            "diff": "^4.0.2",
            "futoin-hkdf": "^1.3.1",
            "js-joda": "^1.6.2",
            "js-sha256": "^0.9.0",
            "js-sha3": "^0.8.0",
            "js-sha512": "^0.8.0",
            "long": "^4.0.0",
            "merkletreejs": "^0.1.7",
            "minimist": "^1.2.5",
            "node-fetch": "^2.6.0",
            "request": "^2.88.0",
            "request-promise-native": "^1.0.5",
            "ripemd160": "^2.0.2",
            "rxjs": "^6.5.3",
            "rxjs-compat": "^6.5.3",
            "symbol-openapi-typescript-fetch-client": "0.9.6",
            "tweetnacl": "^1.0.3",
            "utf8": "^3.0.0",
            "ws": "^7.2.3"
          },
          "dependencies": {
            "crypto-js": {
              "version": "4.0.0",
              "resolved": "https://registry.npmjs.org/crypto-js/-/crypto-js-4.0.0.tgz",
              "integrity": "sha512-bzHZN8Pn+gS7DQA6n+iUmBfl0hO5DJq++QP3U6uTucDtk/0iGpXd/Gg7CGR0p8tJhofJyaKoWBuJI4eAO00BBg==",
              "dev": true
            }
          }
        },
        "tough-cookie": {
          "version": "2.5.0",
          "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.5.0.tgz",
          "integrity": "sha512-nlLsUzgm1kfLXSXfRZMc1KLAugd4hqJHDTvc2hDIwS3mZAfMEuMbc03SujMF+GEcpaX/qboeycw6iO8JwVv2+g==",
          "dev": true,
          "requires": {
            "psl": "^1.1.28",
            "punycode": "^2.1.1"
          }
        },
        "tweetnacl": {
          "version": "1.0.3",
          "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-1.0.3.tgz",
          "integrity": "sha512-6rt+RN7aOi1nGMyC4Xa5DdYiukl2UWCbcJft7YhxReBGQD7OAM8Pbxw6YMo4r2diNEA8FEmu32YOn9rhaiE5yw==",
          "dev": true
        },
        "typescript": {
          "version": "3.9.7",
          "resolved": "https://registry.npmjs.org/typescript/-/typescript-3.9.7.tgz",
          "integrity": "sha512-BLbiRkiBzAwsjut4x/dsibSTB6yWpwT5qWmC2OfuCg3GgVQCSgMs4vEctYPhsaGtd0AeuuHMkjZ2h2WG8MSzRw==",
          "dev": true
        },
        "ws": {
          "version": "7.4.1",
          "resolved": "https://registry.npmjs.org/ws/-/ws-7.4.1.tgz",
          "integrity": "sha512-pTsP8UAfhy3sk1lSk/O/s4tjD0CRwvMnzvwr4OKGX7ZvqZtUyx4KIJB5JWbkykPoc55tixMGgTNoh3k4FkNGFQ==",
          "dev": true
        }
      }
    },
    "symbol-post-launch-optin-module": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/symbol-post-launch-optin-module/-/symbol-post-launch-optin-module-1.0.1.tgz",
      "integrity": "sha512-MrTzj9NUWfXOdt+dt+TCBAvrqgnnh0e6DThc3bOFIa0tlkIP9yEibTRj8V7yGRpRuJJjfTf0DH2TN3GwHIuyEA==",
      "dev": true,
      "requires": {
        "nem-sdk": "^1.6.7",
        "request-promise-native": "^1.0.9",
        "symbol-sdk": "1.0.0"
      }
    },
    "symbol-qr-library": {
      "version": "0.9.1",
      "resolved": "https://registry.npmjs.org/symbol-qr-library/-/symbol-qr-library-0.9.1.tgz",
      "integrity": "sha512-aUxg5BxkGB6Bd7vyZwzMTHOqGcmP6Y2vzp6+y4FRFDZKzzRhGIs/B9Mpbt869smWbgq00SYaLvwN8roicQK2FQ==",
      "dev": true,
      "requires": {
        "braces": ">=2.3.1",
        "canvas": "^2.6.1",
        "crypto-js": "^3.3.0",
        "open": "^7.0.2",
        "qrcode": "^1.4.4",
        "symbol-hd-wallets": "^0.9.2",
        "symbol-sdk": "^0.17.2"
      },
      "dependencies": {
        "ajv": {
          "version": "6.12.6",
          "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
          "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
          "dev": true,
          "requires": {
            "fast-deep-equal": "^3.1.1",
            "fast-json-stable-stringify": "^2.0.0",
            "json-schema-traverse": "^0.4.1",
            "uri-js": "^4.2.2"
          }
        },
        "assert-plus": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
          "integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU=",
          "dev": true
        },
        "aws-sign2": {
          "version": "0.7.0",
          "resolved": "https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz",
          "integrity": "sha1-tG6JCTSpWR8tL2+G1+ap8bP+dqg=",
          "dev": true
        },
        "catbuffer-typescript": {
          "version": "0.0.11",
          "resolved": "https://registry.npmjs.org/catbuffer-typescript/-/catbuffer-typescript-0.0.11.tgz",
          "integrity": "sha512-KuZefLDiPwS0R4vR80jL2MRYbH5qpVPjSq1iecJCkGdBbVgv3V4xxwvAIOQunZ99Kqz+XA1N3/g8fP7V25egUg==",
          "dev": true
        },
        "form-data": {
          "version": "2.3.3",
          "resolved": "https://registry.npmjs.org/form-data/-/form-data-2.3.3.tgz",
          "integrity": "sha512-1lLKB2Mu3aGP1Q/2eCOx0fNbRMe7XdwktwOruhfqqd0rIJWwN4Dh+E3hrPSlDCXnSR7UtZ1N38rVXm+6+MEhJQ==",
          "dev": true,
          "requires": {
            "asynckit": "^0.4.0",
            "combined-stream": "^1.0.6",
            "mime-types": "^2.1.12"
          }
        },
        "har-schema": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/har-schema/-/har-schema-2.0.0.tgz",
          "integrity": "sha1-qUwiJOvKwEeCoNkDVSHyRzW37JI=",
          "dev": true
        },
        "har-validator": {
          "version": "5.1.5",
          "resolved": "https://registry.npmjs.org/har-validator/-/har-validator-5.1.5.tgz",
          "integrity": "sha512-nmT2T0lljbxdQZfspsno9hgrG3Uir6Ks5afism62poxqBM6sDnMEuPmzTq8XN0OEwqKLLdh1jQI3qyE66Nzb3w==",
          "dev": true,
          "requires": {
            "ajv": "^6.12.3",
            "har-schema": "^2.0.0"
          }
        },
        "http-signature": {
          "version": "1.2.0",
          "resolved": "https://registry.npmjs.org/http-signature/-/http-signature-1.2.0.tgz",
          "integrity": "sha1-muzZJRFHcvPZW2WmCruPfBj7rOE=",
          "dev": true,
          "requires": {
            "assert-plus": "^1.0.0",
            "jsprim": "^1.2.2",
            "sshpk": "^1.7.0"
          }
        },
        "oauth-sign": {
          "version": "0.9.0",
          "resolved": "https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.9.0.tgz",
          "integrity": "sha512-fexhUFFPTGV8ybAtSIGbV6gOkSv8UtRbDBnAyLQw4QPKkgNlsH2ByPGtMUqdWkos6YCRmAqViwgZrJc/mRDzZQ==",
          "dev": true
        },
        "performance-now": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz",
          "integrity": "sha1-Ywn04OX6kT7BxpMHrjZLSzd8nns=",
          "dev": true
        },
        "punycode": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz",
          "integrity": "sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A==",
          "dev": true
        },
        "qs": {
          "version": "6.5.2",
          "resolved": "https://registry.npmjs.org/qs/-/qs-6.5.2.tgz",
          "integrity": "sha512-N5ZAX4/LxJmF+7wN74pUD6qAh9/wnvdQcjq9TZjevvXzSUo7bfmw91saqMjzGS2xq91/odN2dW/WOl7qQHNDGA==",
          "dev": true
        },
        "request": {
          "version": "2.88.2",
          "resolved": "https://registry.npmjs.org/request/-/request-2.88.2.tgz",
          "integrity": "sha512-MsvtOrfG9ZcrOwAW+Qi+F6HbD0CWXEh9ou77uOb7FM2WPhwT7smM833PzanhJLsgXjN89Ir6V2PczXNnMpwKhw==",
          "dev": true,
          "requires": {
            "aws-sign2": "~0.7.0",
            "aws4": "^1.8.0",
            "caseless": "~0.12.0",
            "combined-stream": "~1.0.6",
            "extend": "~3.0.2",
            "forever-agent": "~0.6.1",
            "form-data": "~2.3.2",
            "har-validator": "~5.1.3",
            "http-signature": "~1.2.0",
            "is-typedarray": "~1.0.0",
            "isstream": "~0.1.2",
            "json-stringify-safe": "~5.0.1",
            "mime-types": "~2.1.19",
            "oauth-sign": "~0.9.0",
            "performance-now": "^2.1.0",
            "qs": "~6.5.2",
            "safe-buffer": "^5.1.2",
            "tough-cookie": "~2.5.0",
            "tunnel-agent": "^0.6.0",
            "uuid": "^3.3.2"
          }
        },
        "rxjs": {
          "version": "6.6.3",
          "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-6.6.3.tgz",
          "integrity": "sha512-trsQc+xYYXZ3urjOiJOuCOa5N3jAZ3eiSpQB5hIT8zGlL2QfnHLJ2r7GMkBGuIausdJN1OneaI6gQlsqNHHmZQ==",
          "dev": true,
          "requires": {
            "tslib": "^1.9.0"
          }
        },
        "symbol-hd-wallets": {
          "version": "0.9.3",
          "resolved": "https://registry.npmjs.org/symbol-hd-wallets/-/symbol-hd-wallets-0.9.3.tgz",
          "integrity": "sha512-gpOdEINxLB8XdJrYm3Fg07JJf6eUluEcRoosnDCluKvQs9kTERjtE+yGCNcdd27MoA3GjhJHKvggXgBjIDElqw==",
          "dev": true,
          "requires": {
            "@types/bip32": "^1.0.2",
            "bip32": "^1.0.4",
            "bip39": "^3.0.2",
            "bip44-constants": "^8.0.5",
            "bs58check": "^2.1.2",
            "create-hash": "^1.2.0",
            "create-hmac": "^1.1.7",
            "js-sha3": "^0.8.0",
            "rxjs": "^6.5.4",
            "symbol-sdk": "^0.17.2",
            "tiny-secp256k1": "^1.1.3",
            "tweetnacl": "^1.0.3"
          }
        },
        "symbol-sdk": {
          "version": "0.17.4",
          "resolved": "https://registry.npmjs.org/symbol-sdk/-/symbol-sdk-0.17.4.tgz",
          "integrity": "sha512-mSZMWYbMUR4tqUqvYSi8n34eDFVW5sr4nQ4zitkG3HqtWIbarCAFoSqZoVa0gT9QyCKGgkBt23OJ2P7TF4aJfQ==",
          "dev": true,
          "requires": {
            "bluebird": "^3.7.2",
            "catbuffer-typescript": "0.0.11",
            "crypto-js": "^3.1.9-1",
            "diff": "^4.0.2",
            "futoin-hkdf": "^1.3.1",
            "js-joda": "^1.6.2",
            "js-sha256": "^0.9.0",
            "js-sha3": "^0.8.0",
            "js-sha512": "^0.8.0",
            "long": "^4.0.0",
            "merkletreejs": "^0.1.7",
            "minimist": "^1.2.5",
            "request": "^2.88.0",
            "request-promise-native": "^1.0.5",
            "ripemd160": "^2.0.2",
            "rxjs": "^6.5.3",
            "rxjs-compat": "^6.5.3",
            "symbol-openapi-typescript-node-client": "0.8.9",
            "tweetnacl": "^1.0.3",
            "utf8": "^3.0.0",
            "ws": "^7.2.3"
          }
        },
        "tough-cookie": {
          "version": "2.5.0",
          "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.5.0.tgz",
          "integrity": "sha512-nlLsUzgm1kfLXSXfRZMc1KLAugd4hqJHDTvc2hDIwS3mZAfMEuMbc03SujMF+GEcpaX/qboeycw6iO8JwVv2+g==",
          "dev": true,
          "requires": {
            "psl": "^1.1.28",
            "punycode": "^2.1.1"
          }
        },
        "tweetnacl": {
          "version": "1.0.3",
          "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-1.0.3.tgz",
          "integrity": "sha512-6rt+RN7aOi1nGMyC4Xa5DdYiukl2UWCbcJft7YhxReBGQD7OAM8Pbxw6YMo4r2diNEA8FEmu32YOn9rhaiE5yw==",
          "dev": true
        },
        "ws": {
          "version": "7.4.1",
          "resolved": "https://registry.npmjs.org/ws/-/ws-7.4.1.tgz",
          "integrity": "sha512-pTsP8UAfhy3sk1lSk/O/s4tjD0CRwvMnzvwr4OKGX7ZvqZtUyx4KIJB5JWbkykPoc55tixMGgTNoh3k4FkNGFQ==",
          "dev": true
        }
      }
    },
    "symbol-sdk": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/symbol-sdk/-/symbol-sdk-1.0.0.tgz",
      "integrity": "sha512-j7HR5288sNXLHAMRWc6VgXiVBiyY6FJ0b+ug//cJPg63beKF+ZJkAZbzcrQqdrMTuGhIy80jG9HFodQIthLoUg==",
      "dev": true,
      "requires": {
        "@js-joda/core": "^3.2.0",
        "bluebird": "^3.7.2",
        "catbuffer-typescript": "0.1.1",
        "crypto-js": "^4.0.0",
        "diff": "^4.0.2",
        "futoin-hkdf": "^1.3.2",
        "js-sha256": "^0.9.0",
        "js-sha3": "^0.8.0",
        "js-sha512": "^0.8.0",
        "long": "^4.0.0",
        "merkletreejs": "^0.2.9",
        "minimist": "^1.2.5",
        "node-fetch": "^2.6.0",
        "ripemd160": "^2.0.2",
        "rxjs": "^6.6.3",
        "rxjs-compat": "^6.6.3",
        "symbol-openapi-typescript-fetch-client": "0.11.2",
        "tweetnacl": "^1.0.3",
        "ws": "^7.3.1"
      },
      "dependencies": {
        "catbuffer-typescript": {
          "version": "0.1.1",
          "resolved": "https://registry.npmjs.org/catbuffer-typescript/-/catbuffer-typescript-0.1.1.tgz",
          "integrity": "sha512-r/z3UKG3YCCdsTEHRXGe3IQxA8OaBRBE31e9du2LOaLStGxYCmxUjfRtJ/DyKfgpS55fJPl3w/VFMnsfwIHmkA==",
          "dev": true
        },
        "crypto-js": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/crypto-js/-/crypto-js-4.0.0.tgz",
          "integrity": "sha512-bzHZN8Pn+gS7DQA6n+iUmBfl0hO5DJq++QP3U6uTucDtk/0iGpXd/Gg7CGR0p8tJhofJyaKoWBuJI4eAO00BBg==",
          "dev": true
        },
        "merkletreejs": {
          "version": "0.2.18",
          "resolved": "https://registry.npmjs.org/merkletreejs/-/merkletreejs-0.2.18.tgz",
          "integrity": "sha512-f8bSFaUDPZhot94xkjb83XbG1URaiNLxZy6LWTw2IzbQeCA4YX/UxublGxXdLQIYXbWkDghq6EqwG5u4I7ELmA==",
          "dev": true,
          "requires": {
            "bignumber.js": "^9.0.1",
            "buffer-reverse": "^1.0.1",
            "crypto-js": "^3.1.9-1",
            "treeify": "^1.1.0",
            "web3-utils": "^1.3.4"
          },
          "dependencies": {
            "crypto-js": {
              "version": "3.3.0",
              "resolved": "https://registry.npmjs.org/crypto-js/-/crypto-js-3.3.0.tgz",
              "integrity": "sha512-DIT51nX0dCfKltpRiXV+/TVZq+Qq2NgF4644+K7Ttnla7zEzqc+kjJyiB96BHNyUTBxyjzRcZYpUdZa+QAqi6Q==",
              "dev": true
            }
          }
        },
        "rxjs": {
          "version": "6.6.7",
          "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-6.6.7.tgz",
          "integrity": "sha512-hTdwr+7yYNIT5n4AMYp85KA6yw2Va0FLa3Rguvbpa4W3I5xynaBZo41cM3XM+4Q6fRMj3sBYIR1VAmZMXYJvRQ==",
          "dev": true,
          "requires": {
            "tslib": "^1.9.0"
          }
        },
        "tweetnacl": {
          "version": "1.0.3",
          "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-1.0.3.tgz",
          "integrity": "sha512-6rt+RN7aOi1nGMyC4Xa5DdYiukl2UWCbcJft7YhxReBGQD7OAM8Pbxw6YMo4r2diNEA8FEmu32YOn9rhaiE5yw==",
          "dev": true
        },
        "ws": {
          "version": "7.4.5",
          "resolved": "https://registry.npmjs.org/ws/-/ws-7.4.5.tgz",
          "integrity": "sha512-xzyu3hFvomRfXKH8vOFMU3OguG6oOvhXMo3xsGy3xWExqaM2dxBbVxuD99O7m3ZUFMvvscsZDqxfgMaRr/Nr1g==",
          "dev": true
        }
      }
    },
    "syntax-error": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/syntax-error/-/syntax-error-1.4.0.tgz",
      "integrity": "sha512-YPPlu67mdnHGTup2A8ff7BC2Pjq0e0Yp/IyTFN03zWO0RcK07uLcbi7C2KpGR2FvWbaB0+bfE27a+sBKebSo7w==",
      "dev": true,
      "requires": {
        "acorn-node": "^1.2.0"
      }
    },
    "tar": {
      "version": "2.2.2",
      "resolved": "https://registry.npmjs.org/tar/-/tar-2.2.2.tgz",
      "integrity": "sha512-FCEhQ/4rE1zYv9rYXJw/msRqsnmlje5jHP6huWeBZ704jUTy02c5AZyWujpMR1ax6mVw9NyJMfuK2CMDWVIfgA==",
      "dev": true,
      "requires": {
        "block-stream": "*",
        "fstream": "^1.0.12",
        "inherits": "2"
      }
    },
    "tar-fs": {
      "version": "1.16.3",
      "resolved": "https://registry.npmjs.org/tar-fs/-/tar-fs-1.16.3.tgz",
      "integrity": "sha512-NvCeXpYx7OsmOh8zIOP/ebG55zZmxLE0etfWRbWok+q2Qo8x/vOR/IJT1taADXPe+jsiu9axDb3X4B+iIgNlKw==",
      "dev": true,
      "requires": {
        "chownr": "^1.0.1",
        "mkdirp": "^0.5.1",
        "pump": "^1.0.0",
        "tar-stream": "^1.1.2"
      }
    },
    "tar-stream": {
      "version": "1.6.2",
      "resolved": "https://registry.npmjs.org/tar-stream/-/tar-stream-1.6.2.tgz",
      "integrity": "sha512-rzS0heiNf8Xn7/mpdSVVSMAWAoy9bfb1WOTYC78Z0UQKeKa/CWS8FOq0lKGNa8DWKAn9gxjCvMLYc5PGXYlK2A==",
      "dev": true,
      "requires": {
        "bl": "^1.0.0",
        "buffer-alloc": "^1.2.0",
        "end-of-stream": "^1.0.0",
        "fs-constants": "^1.0.0",
        "readable-stream": "^2.3.0",
        "to-buffer": "^1.1.1",
        "xtend": "^4.0.0"
      },
      "dependencies": {
        "end-of-stream": {
          "version": "1.4.4",
          "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz",
          "integrity": "sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==",
          "dev": true,
          "requires": {
            "once": "^1.4.0"
          }
        },
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "temp": {
      "version": "github:adam-lynch/node-temp#279c1350cb7e4f02515d91da9e35d39a40774016",
      "from": "github:adam-lynch/node-temp#remove_tmpdir_dep",
      "dev": true,
      "requires": {
        "rimraf": "~2.2.6"
      },
      "dependencies": {
        "rimraf": {
          "version": "2.2.8",
          "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.2.8.tgz",
          "integrity": "sha1-5Dm+Kq7jJzIZUnMPmaiSnk/FBYI=",
          "dev": true
        }
      }
    },
    "temp-file": {
      "version": "3.3.7",
      "resolved": "https://registry.npmjs.org/temp-file/-/temp-file-3.3.7.tgz",
      "integrity": "sha512-9tBJKt7GZAQt/Rg0QzVWA8Am8c1EFl+CAv04/aBVqlx5oyfQ508sFIABshQ0xbZu6mBrFLWIUXO/bbLYghW70g==",
      "dev": true,
      "requires": {
        "async-exit-hook": "^2.0.1",
        "fs-extra": "^8.1.0"
      },
      "dependencies": {
        "fs-extra": {
          "version": "8.1.0",
          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-8.1.0.tgz",
          "integrity": "sha512-yhlQgA6mnOJUKOsRUFsgJdQCvkKhcz8tlZG5HBQfReYZy46OwLcY+Zia0mtdHsOo9y/hP+CxMN0TU9QxoOtG4g==",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.2.0",
            "jsonfile": "^4.0.0",
            "universalify": "^0.1.0"
          }
        },
        "jsonfile": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-4.0.0.tgz",
          "integrity": "sha1-h3Gq4HmbZAdrdmQPygWPnBDjPss=",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.1.6"
          }
        }
      }
    },
    "term-size": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/term-size/-/term-size-1.2.0.tgz",
      "integrity": "sha1-RYuDiH8oj8Vtb/+/rSYuJmOO+mk=",
      "dev": true,
      "requires": {
        "execa": "^0.7.0"
      }
    },
    "tfunk": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/tfunk/-/tfunk-4.0.0.tgz",
      "integrity": "sha512-eJQ0dGfDIzWNiFNYFVjJ+Ezl/GmwHaFTBTjrtqNPW0S7cuVDBrZrmzUz6VkMeCR4DZFqhd4YtLwsw3i2wYHswQ==",
      "dev": true,
      "requires": {
        "chalk": "^1.1.3",
        "dlv": "^1.1.3"
      }
    },
    "thenify": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/thenify/-/thenify-3.3.1.tgz",
      "integrity": "sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==",
      "dev": true,
      "requires": {
        "any-promise": "^1.0.0"
      }
    },
    "through": {
      "version": "2.3.8",
      "resolved": "https://registry.npmjs.org/through/-/through-2.3.8.tgz",
      "integrity": "sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU=",
      "dev": true
    },
    "through2": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/through2/-/through2-2.0.5.tgz",
      "integrity": "sha512-/mrRod8xqpA+IHSLyGCQ2s8SPHiCDEeQJSep1jqLYeEUClOFG2Qsh+4FU6G9VeqpZnGW/Su8LQGc4YKni5rYSQ==",
      "dev": true,
      "requires": {
        "readable-stream": "~2.3.6",
        "xtend": "~4.0.1"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "through2-filter": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/through2-filter/-/through2-filter-2.0.0.tgz",
      "integrity": "sha1-YLxVoNrLdghdsfna6Zq0P4PWIuw=",
      "dev": true,
      "requires": {
        "through2": "~2.0.0",
        "xtend": "~4.0.0"
      }
    },
    "tildify": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/tildify/-/tildify-1.2.0.tgz",
      "integrity": "sha1-3OwD9V3Km3qj5bBPIYF+tW5jWIo=",
      "dev": true,
      "requires": {
        "os-homedir": "^1.0.0"
      }
    },
    "time-stamp": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/time-stamp/-/time-stamp-1.1.0.tgz",
      "integrity": "sha1-dkpaEa9QVhkhsTPztE5hhofg9cM=",
      "dev": true
    },
    "timed-out": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/timed-out/-/timed-out-4.0.1.tgz",
      "integrity": "sha1-8y6srFoXW+ol1/q1Zas+2HQe9W8=",
      "dev": true
    },
    "timers-browserify": {
      "version": "1.4.2",
      "resolved": "https://registry.npmjs.org/timers-browserify/-/timers-browserify-1.4.2.tgz",
      "integrity": "sha1-ycWLV1voQHN1y14kYtrO50NZ9B0=",
      "dev": true,
      "requires": {
        "process": "~0.11.0"
      }
    },
    "tiny-secp256k1": {
      "version": "1.1.6",
      "resolved": "https://registry.npmjs.org/tiny-secp256k1/-/tiny-secp256k1-1.1.6.tgz",
      "integrity": "sha512-FmqJZGduTyvsr2cF3375fqGHUovSwDi/QytexX1Se4BPuPZpTE5Ftp5fg+EFSuEf3lhZqgCRjEG3ydUQ/aNiwA==",
      "dev": true,
      "requires": {
        "bindings": "^1.3.0",
        "bn.js": "^4.11.8",
        "create-hmac": "^1.1.7",
        "elliptic": "^6.4.0",
        "nan": "^2.13.2"
      },
      "dependencies": {
        "bn.js": {
          "version": "4.11.9",
          "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.11.9.tgz",
          "integrity": "sha512-E6QoYqCKZfgatHTdHzs1RRKP7ip4vvm+EyRUeE2RF0NblwVvb0p6jSVeNTOFxPn26QXN2o6SMfNxKp6kU8zQaw==",
          "dev": true
        }
      }
    },
    "to-absolute-glob": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/to-absolute-glob/-/to-absolute-glob-0.1.1.tgz",
      "integrity": "sha1-HN+kcqnvUMI57maZm2YsoOs5k38=",
      "dev": true,
      "requires": {
        "extend-shallow": "^2.0.1"
      },
      "dependencies": {
        "extend-shallow": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
          "dev": true,
          "requires": {
            "is-extendable": "^0.1.0"
          }
        }
      }
    },
    "to-array": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/to-array/-/to-array-0.1.4.tgz",
      "integrity": "sha1-F+bBH3PdTz10zaek/zI46a2b+JA=",
      "dev": true
    },
    "to-arraybuffer": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/to-arraybuffer/-/to-arraybuffer-1.0.1.tgz",
      "integrity": "sha1-fSKbH8xjfkZsoIEYCDanqr/4P0M=",
      "dev": true
    },
    "to-buffer": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/to-buffer/-/to-buffer-1.1.1.tgz",
      "integrity": "sha512-lx9B5iv7msuFYE3dytT+KE5tap+rNYw+K4jVkb9R/asAb+pbBSM17jtunHplhBe6RRJdZx3Pn2Jph24O32mOVg==",
      "dev": true
    },
    "to-fast-properties": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-1.0.3.tgz",
      "integrity": "sha1-uDVx+k2MJbguIxsG46MFXeTKGkc=",
      "dev": true
    },
    "to-object-path": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/to-object-path/-/to-object-path-0.3.0.tgz",
      "integrity": "sha1-KXWIt7Dn4KwI4E5nL4XB9JmeF68=",
      "dev": true,
      "requires": {
        "kind-of": "^3.0.2"
      }
    },
    "to-readable-stream": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/to-readable-stream/-/to-readable-stream-1.0.0.tgz",
      "integrity": "sha512-Iq25XBt6zD5npPhlLVXGFN3/gyR2/qODcKNNyTMd4vbm39HUaOiAM4PMq0eMVC/Tkxz+Zjdsc55g9yyz+Yq00Q==",
      "dev": true
    },
    "to-regex": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/to-regex/-/to-regex-3.0.2.tgz",
      "integrity": "sha512-FWtleNAtZ/Ki2qtqej2CXTOayOH9bHDQF+Q48VpWyDXjbYxA4Yz8iDB31zXOBUlOHHKidDbqGVrTUvQMPmBGBw==",
      "dev": true,
      "requires": {
        "define-property": "^2.0.2",
        "extend-shallow": "^3.0.2",
        "regex-not": "^1.0.2",
        "safe-regex": "^1.1.0"
      }
    },
    "to-regex-range": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
      "dev": true,
      "requires": {
        "is-number": "^7.0.0"
      }
    },
    "toidentifier": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.0.tgz",
      "integrity": "sha512-yaOH/Pk/VEhBWWTlhI+qXxDFXlejDGcQipMlyxda9nthulaxLZUNcUqFxokp0vcYnvteJln5FNQDRrxj3YcbVw==",
      "dev": true
    },
    "tough-cookie": {
      "version": "2.3.4",
      "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.3.4.tgz",
      "integrity": "sha512-TZ6TTfI5NtZnuyy/Kecv+CnoROnyXn2DN97LontgQpCwsX2XyLYCC0ENhYkehSOwAp8rTQKc/NUIF7BkQ5rKLA==",
      "dev": true,
      "requires": {
        "punycode": "^1.4.1"
      }
    },
    "treeify": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/treeify/-/treeify-1.1.0.tgz",
      "integrity": "sha512-1m4RA7xVAJrSGrrXGs0L3YTwyvBs2S8PbRHaLZAkFw7JR8oIFwYtysxlBZhYIa7xSyiYJKZ3iGrrk55cGA3i9A==",
      "dev": true
    },
    "trezor-connect": {
      "version": "6.0.5",
      "resolved": "https://registry.npmjs.org/trezor-connect/-/trezor-connect-6.0.5.tgz",
      "integrity": "sha512-U5D8bEkGCBFCwT3zg4WAQUUBfkG9sDhumTY2Mgj2VN+TrRwkrP7nFyK4d0XRzt4ZsLJxBAT/Qg4/ZKqKh0a+wg==",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.26.0",
        "events": "^1.1.1",
        "whatwg-fetch": "^2.0.4"
      }
    },
    "trim-newlines": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/trim-newlines/-/trim-newlines-1.0.0.tgz",
      "integrity": "sha1-WIeWa7WCpFA6QetST301ARgVphM=",
      "dev": true
    },
    "trim-repeated": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/trim-repeated/-/trim-repeated-1.0.0.tgz",
      "integrity": "sha1-42RqLqTokTEr9+rObPsFOAvAHCE=",
      "dev": true,
      "requires": {
        "escape-string-regexp": "^1.0.2"
      }
    },
    "trim-right": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/trim-right/-/trim-right-1.0.1.tgz",
      "integrity": "sha1-yy4SAwZ+DI3h9hQJS5/kVwTqYAM=",
      "dev": true
    },
    "true-case-path": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/true-case-path/-/true-case-path-1.0.3.tgz",
      "integrity": "sha512-m6s2OdQe5wgpFMC+pAJ+q9djG82O2jcHPOI6RNg1yy9rCYR+WD6Nbpl32fDpfC56nirdRy+opFa/Vk7HYhqaew==",
      "dev": true,
      "requires": {
        "glob": "^7.1.2"
      },
      "dependencies": {
        "glob": {
          "version": "7.1.6",
          "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.6.tgz",
          "integrity": "sha512-LwaxwyZ72Lk7vZINtNNrywX0ZuLyStrdDtabefZKAY5ZGJhVtgdznluResxNmPitE0SAO+O26sWTHeKSI2wMBA==",
          "dev": true,
          "requires": {
            "fs.realpath": "^1.0.0",
            "inflight": "^1.0.4",
            "inherits": "2",
            "minimatch": "^3.0.4",
            "once": "^1.3.0",
            "path-is-absolute": "^1.0.0"
          }
        }
      }
    },
    "truncate-utf8-bytes": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/truncate-utf8-bytes/-/truncate-utf8-bytes-1.0.2.tgz",
      "integrity": "sha1-QFkjkJWS1W94pYGENLC3hInKXys=",
      "dev": true,
      "requires": {
        "utf8-byte-length": "^1.0.1"
      }
    },
    "tryor": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/tryor/-/tryor-0.1.2.tgz",
      "integrity": "sha1-gUXkynyv9ArN48z5Rui4u3W0Fys=",
      "dev": true
    },
    "tslib": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-1.14.1.tgz",
      "integrity": "sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg=="
    },
    "tty-browserify": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/tty-browserify/-/tty-browserify-0.0.1.tgz",
      "integrity": "sha512-C3TaO7K81YvjCgQH9Q1S3R3P3BtN3RIM8n+OvX4il1K1zgE8ZhI0op7kClgkxtutIE8hQrcrHBXvIheqKUUCxw==",
      "dev": true
    },
    "tunnel": {
      "version": "0.0.6",
      "resolved": "https://registry.npmjs.org/tunnel/-/tunnel-0.0.6.tgz",
      "integrity": "sha512-1h/Lnq9yajKY2PEbBadPXj3VxsDDu844OnaAo52UVmIzIvwwtBPIuNvkjuzBlTWpfJyUbG3ez0KSBibQkj4ojg==",
      "dev": true,
      "optional": true
    },
    "tunnel-agent": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz",
      "integrity": "sha1-J6XeoGs2sEoKmWZ3SykIaPD8QP0=",
      "requires": {
        "safe-buffer": "^5.0.1"
      }
    },
    "tweetnacl": {
      "version": "0.14.5",
      "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz",
      "integrity": "sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q=",
      "dev": true
    },
    "type": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/type/-/type-1.2.0.tgz",
      "integrity": "sha512-+5nt5AAniqsCnu2cEQQdpzCAh33kVx8n0VoFidKpB1dVVLAN/F+bgVOqOJqOnEnrhp222clB5p3vUlD+1QAnfg==",
      "dev": true
    },
    "type-fest": {
      "version": "0.13.1",
      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.13.1.tgz",
      "integrity": "sha512-34R7HTnG0XIJcBSn5XhDd7nNFPRcXYRZrBB2O2jdKqYODldSzBAqzsWoZYYvduky73toYS/ESqxPvkDf/F0XMg==",
      "dev": true,
      "optional": true
    },
    "typedarray": {
      "version": "0.0.6",
      "resolved": "https://registry.npmjs.org/typedarray/-/typedarray-0.0.6.tgz",
      "integrity": "sha1-hnrHTjhkGHsdPUfZlqeOxciDB3c=",
      "dev": true
    },
    "typedarray-to-buffer": {
      "version": "3.1.5",
      "resolved": "https://registry.npmjs.org/typedarray-to-buffer/-/typedarray-to-buffer-3.1.5.tgz",
      "integrity": "sha512-zdu8XMNEDepKKR+XYOXAVPtWui0ly0NtohUscw+UmaHiAWT8hrV1rr//H6V+0DvJ3OQ19S979M0laLfX8rm82Q==",
      "dev": true,
      "requires": {
        "is-typedarray": "^1.0.0"
      }
    },
    "typedocs": {
      "version": "0.6.7",
      "resolved": "https://registry.npmjs.org/typedocs/-/typedocs-0.6.7.tgz",
      "integrity": "sha512-ZWpgwfPyJoqpLVUX+XdOqQLGcZJneSIWDLSlKt0ItkGeFrz2BFPIr38/mfR11Yw50mmPInkd4MC0KLU7PV+XUA==",
      "dev": true,
      "requires": {
        "marked": "^0.7.0",
        "typescript": "3.2.4"
      },
      "dependencies": {
        "marked": {
          "version": "0.7.0",
          "resolved": "https://registry.npmjs.org/marked/-/marked-0.7.0.tgz",
          "integrity": "sha512-c+yYdCZJQrsRjTPhUx7VKkApw9bwDkNbHUKo1ovgcfDjb2kc8rLuRbIFyXL5WOEUwzSSKo3IXpph2K6DqB/KZg==",
          "dev": true
        }
      }
    },
    "typeforce": {
      "version": "1.18.0",
      "resolved": "https://registry.npmjs.org/typeforce/-/typeforce-1.18.0.tgz",
      "integrity": "sha512-7uc1O8h1M1g0rArakJdf0uLRSSgFcYexrVoKo+bzJd32gd4gDy2L/Z+8/FjPnU9ydY3pEnVPtr9FyscYY60K1g==",
      "dev": true
    },
    "typescript": {
      "version": "3.2.4",
      "resolved": "https://registry.npmjs.org/typescript/-/typescript-3.2.4.tgz",
      "integrity": "sha512-0RNDbSdEokBeEAkgNbxJ+BLwSManFy9TeXz8uW+48j/xhEXv1ePME60olyzw2XzUqUBNAYFeJadIqAgNqIACwg==",
      "dev": true
    },
    "ua-parser-js": {
      "version": "0.7.23",
      "resolved": "https://registry.npmjs.org/ua-parser-js/-/ua-parser-js-0.7.23.tgz",
      "integrity": "sha512-m4hvMLxgGHXG3O3fQVAyyAQpZzDOvwnhOTjYz5Xmr7r/+LpkNy3vJXdVRWgd1TkAb7NGROZuSy96CrlNVjA7KA==",
      "dev": true
    },
    "uglify-js": {
      "version": "2.6.4",
      "resolved": "https://registry.npmjs.org/uglify-js/-/uglify-js-2.6.4.tgz",
      "integrity": "sha1-ZeovswWck5RpLxX+2HwrNsFrmt8=",
      "dev": true,
      "requires": {
        "async": "~0.2.6",
        "source-map": "~0.5.1",
        "uglify-to-browserify": "~1.0.0",
        "yargs": "~3.10.0"
      },
      "dependencies": {
        "async": {
          "version": "0.2.10",
          "resolved": "https://registry.npmjs.org/async/-/async-0.2.10.tgz",
          "integrity": "sha1-trvgsGdLnXGXCMo43owjfLUmw9E=",
          "dev": true
        },
        "camelcase": {
          "version": "1.2.1",
          "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-1.2.1.tgz",
          "integrity": "sha1-m7UwTS4LVmmLLHWLCKPqqdqlijk=",
          "dev": true
        },
        "cliui": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/cliui/-/cliui-2.1.0.tgz",
          "integrity": "sha1-S0dXYP+AJkx2LDoXGQMukcf+oNE=",
          "dev": true,
          "requires": {
            "center-align": "^0.1.1",
            "right-align": "^0.1.1",
            "wordwrap": "0.0.2"
          }
        },
        "wordwrap": {
          "version": "0.0.2",
          "resolved": "https://registry.npmjs.org/wordwrap/-/wordwrap-0.0.2.tgz",
          "integrity": "sha1-t5Zpu0LstAn4PVg8rVLKF+qhZD8=",
          "dev": true
        },
        "yargs": {
          "version": "3.10.0",
          "resolved": "https://registry.npmjs.org/yargs/-/yargs-3.10.0.tgz",
          "integrity": "sha1-9+572FfdfB0tOMDnTvvWgdFDH9E=",
          "dev": true,
          "requires": {
            "camelcase": "^1.0.2",
            "cliui": "^2.1.0",
            "decamelize": "^1.0.0",
            "window-size": "0.1.0"
          }
        }
      }
    },
    "uglify-save-license": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/uglify-save-license/-/uglify-save-license-0.4.1.tgz",
      "integrity": "sha1-lXJsF8xv0XHDYX479NjYKqjEzOE=",
      "dev": true
    },
    "uglify-to-browserify": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/uglify-to-browserify/-/uglify-to-browserify-1.0.2.tgz",
      "integrity": "sha1-bgkk1r2mta/jSeOabWMoUKD4grc=",
      "dev": true
    },
    "ultron": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/ultron/-/ultron-1.1.1.tgz",
      "integrity": "sha512-UIEXBNeYmKptWH6z8ZnqTeS8fV74zG0/eRU9VGkpzz+LIJNs8W/zM/L+7ctCkRrgbNnnR0xxw4bKOr0cW0N0Og==",
      "dev": true
    },
    "umd": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/umd/-/umd-3.0.3.tgz",
      "integrity": "sha512-4IcGSufhFshvLNcMCV80UnQVlZ5pMOC8mvNPForqwA4+lzYQuetTESLDQkeLmihq8bRcnpbQa48Wb8Lh16/xow==",
      "dev": true
    },
    "unbzip2-stream": {
      "version": "1.4.3",
      "resolved": "https://registry.npmjs.org/unbzip2-stream/-/unbzip2-stream-1.4.3.tgz",
      "integrity": "sha512-mlExGW4w71ebDJviH16lQLtZS32VKqsSfk80GCfUlwT/4/hNRFsoscrF/c++9xinkMzECL1uL9DDwXqFWkruPg==",
      "dev": true,
      "requires": {
        "buffer": "^5.2.1",
        "through": "^2.3.8"
      },
      "dependencies": {
        "buffer": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz",
          "integrity": "sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==",
          "dev": true,
          "requires": {
            "base64-js": "^1.3.1",
            "ieee754": "^1.1.13"
          }
        }
      }
    },
    "unc-path-regex": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/unc-path-regex/-/unc-path-regex-0.1.2.tgz",
      "integrity": "sha1-5z3T17DXxe2G+6xrCufYxqadUPo=",
      "dev": true
    },
    "undeclared-identifiers": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/undeclared-identifiers/-/undeclared-identifiers-1.1.3.tgz",
      "integrity": "sha512-pJOW4nxjlmfwKApE4zvxLScM/njmwj/DiUBv7EabwE4O8kRUy+HIwxQtZLBPll/jx1LJyBcqNfB3/cpv9EZwOw==",
      "dev": true,
      "requires": {
        "acorn-node": "^1.3.0",
        "dash-ast": "^1.0.0",
        "get-assigned-identifiers": "^1.2.0",
        "simple-concat": "^1.0.0",
        "xtend": "^4.0.1"
      }
    },
    "underscore": {
      "version": "1.9.1",
      "resolved": "https://registry.npmjs.org/underscore/-/underscore-1.9.1.tgz",
      "integrity": "sha512-5/4etnCkd9c8gwgowi5/om/mYO5ajCaOgdzj/oW+0eQV9WxKBDZw5+ycmKmeaTXjInS/W0BzpGLo2xR2aBwZdg==",
      "dev": true
    },
    "union-value": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/union-value/-/union-value-1.0.1.tgz",
      "integrity": "sha512-tJfXmxMeWYnczCVs7XAEvIV7ieppALdyepWMkHkwciRpZraG/xwT+s2JN8+pr1+8jCRf80FFzvr+MpQeeoF4Xg==",
      "dev": true,
      "requires": {
        "arr-union": "^3.1.0",
        "get-value": "^2.0.6",
        "is-extendable": "^0.1.1",
        "set-value": "^2.0.1"
      }
    },
    "unique-stream": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/unique-stream/-/unique-stream-1.0.0.tgz",
      "integrity": "sha1-1ZpKdUJ0R9mqbJHnAmP40mpLEEs=",
      "dev": true
    },
    "unique-string": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/unique-string/-/unique-string-1.0.0.tgz",
      "integrity": "sha1-nhBXzKhRq7kzmPizOuGHuZyuwRo=",
      "dev": true,
      "requires": {
        "crypto-random-string": "^1.0.0"
      }
    },
    "universalify": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/universalify/-/universalify-0.1.2.tgz",
      "integrity": "sha512-rBJeI5CXAlmy1pV+617WB9J63U6XcazHHF2f2dbJix4XzpUF0RS3Zbj0FGIOCAva5P/d/GBOYaACQ1w+0azUkg==",
      "dev": true
    },
    "unpipe": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz",
      "integrity": "sha1-sr9O6FFKrmFltIF4KdIbLvSZBOw=",
      "dev": true
    },
    "unset-value": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/unset-value/-/unset-value-1.0.0.tgz",
      "integrity": "sha1-g3aHP30jNRef+x5vw6jtDfyKtVk=",
      "dev": true,
      "requires": {
        "has-value": "^0.3.1",
        "isobject": "^3.0.0"
      },
      "dependencies": {
        "has-value": {
          "version": "0.3.1",
          "resolved": "https://registry.npmjs.org/has-value/-/has-value-0.3.1.tgz",
          "integrity": "sha1-ex9YutpiyoJ+wKIHgCVlSEWZXh8=",
          "dev": true,
          "requires": {
            "get-value": "^2.0.3",
            "has-values": "^0.1.4",
            "isobject": "^2.0.0"
          },
          "dependencies": {
            "isobject": {
              "version": "2.1.0",
              "resolved": "https://registry.npmjs.org/isobject/-/isobject-2.1.0.tgz",
              "integrity": "sha1-8GVWEJaj8dou9GJy+BXIQNh+DIk=",
              "dev": true,
              "requires": {
                "isarray": "1.0.0"
              }
            }
          }
        },
        "has-values": {
          "version": "0.1.4",
          "resolved": "https://registry.npmjs.org/has-values/-/has-values-0.1.4.tgz",
          "integrity": "sha1-bWHeldkd/Km5oCCJrThL/49it3E=",
          "dev": true
        },
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "isobject": {
          "version": "3.0.1",
          "resolved": "https://registry.npmjs.org/isobject/-/isobject-3.0.1.tgz",
          "integrity": "sha1-TkMekrEalzFjaqH5yNHMvP2reN8=",
          "dev": true
        }
      }
    },
    "unzip-response": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/unzip-response/-/unzip-response-2.0.1.tgz",
      "integrity": "sha1-0vD3N9FrBhXnKmk17QQhRXLVb5c=",
      "dev": true
    },
    "update-notifier": {
      "version": "2.5.0",
      "resolved": "https://registry.npmjs.org/update-notifier/-/update-notifier-2.5.0.tgz",
      "integrity": "sha512-gwMdhgJHGuj/+wHJJs9e6PcCszpxR1b236igrOkUofGhqJuG+amlIKwApH1IW1WWl7ovZxsX49lMBWLxSdm5Dw==",
      "dev": true,
      "requires": {
        "boxen": "^1.2.1",
        "chalk": "^2.0.1",
        "configstore": "^3.0.0",
        "import-lazy": "^2.1.0",
        "is-ci": "^1.0.10",
        "is-installed-globally": "^0.1.0",
        "is-npm": "^1.0.0",
        "latest-version": "^3.0.0",
        "semver-diff": "^2.0.0",
        "xdg-basedir": "^3.0.0"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "dev": true,
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          }
        },
        "has-flag": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
          "integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0=",
          "dev": true
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "uri-js": {
      "version": "4.4.0",
      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.0.tgz",
      "integrity": "sha512-B0yRTzYdUCCn9n+F4+Gh4yIDtMQcaJsmYBDsTSG8g/OejKBodLQ2IHfN3bM7jUsRXndopT7OIXWdYqc1fjmV6g==",
      "dev": true,
      "requires": {
        "punycode": "^2.1.0"
      },
      "dependencies": {
        "punycode": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz",
          "integrity": "sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A==",
          "dev": true
        }
      }
    },
    "urix": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/urix/-/urix-0.1.0.tgz",
      "integrity": "sha1-2pN/emLiH+wf0Y1Js1wpNQZ6bHI=",
      "dev": true
    },
    "url": {
      "version": "0.11.0",
      "resolved": "https://registry.npmjs.org/url/-/url-0.11.0.tgz",
      "integrity": "sha1-ODjpfPxgUh63PFJajlW/3Z4uKPE=",
      "dev": true,
      "requires": {
        "punycode": "1.3.2",
        "querystring": "0.2.0"
      },
      "dependencies": {
        "punycode": {
          "version": "1.3.2",
          "resolved": "https://registry.npmjs.org/punycode/-/punycode-1.3.2.tgz",
          "integrity": "sha1-llOgNvt8HuQjQvIyXM7v6jkmxI0=",
          "dev": true
        }
      }
    },
    "url-parse": {
      "version": "1.1.9",
      "resolved": "https://registry.npmjs.org/url-parse/-/url-parse-1.1.9.tgz",
      "integrity": "sha1-xn8dd11R8KGJEd17P/rSe7nlvRk=",
      "dev": true,
      "requires": {
        "querystringify": "~1.0.0",
        "requires-port": "1.0.x"
      },
      "dependencies": {
        "querystringify": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/querystringify/-/querystringify-1.0.0.tgz",
          "integrity": "sha1-YoYkIRLFtxL6ZU5SZlK/ahP/Bcs=",
          "dev": true
        }
      }
    },
    "url-parse-lax": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/url-parse-lax/-/url-parse-lax-1.0.0.tgz",
      "integrity": "sha1-evjzA2Rem9eaJy56FKxovAYJ2nM=",
      "dev": true,
      "requires": {
        "prepend-http": "^1.0.1"
      }
    },
    "url-set-query": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/url-set-query/-/url-set-query-1.0.0.tgz",
      "integrity": "sha1-AW6M/Xwg7gXK/neV6JK9BwL6ozk=",
      "dev": true
    },
    "url-to-options": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/url-to-options/-/url-to-options-1.0.1.tgz",
      "integrity": "sha1-FQWgOiiaSMvXpDTvuu7FBV9WM6k=",
      "dev": true
    },
    "use": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/use/-/use-3.1.1.tgz",
      "integrity": "sha512-cwESVXlO3url9YWlFW/TA9cshCEhtu7IKJ/p5soJ/gGpj7vbvFrAY/eIioQ6Dw23KjZhYgiIo8HOs1nQ2vr/oQ==",
      "dev": true
    },
    "user-home": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/user-home/-/user-home-1.1.1.tgz",
      "integrity": "sha1-K1viOjK2Onyd640PKNSFcko98ZA=",
      "dev": true
    },
    "utf-8-validate": {
      "version": "5.0.3",
      "resolved": "https://registry.npmjs.org/utf-8-validate/-/utf-8-validate-5.0.3.tgz",
      "integrity": "sha512-jtJM6fpGv8C1SoH4PtG22pGto6x+Y8uPprW0tw3//gGFhDDTiuksgradgFN6yRayDP4SyZZa6ZMGHLIa17+M8A==",
      "dev": true,
      "requires": {
        "node-gyp-build": "^4.2.0"
      }
    },
    "utf8": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/utf8/-/utf8-3.0.0.tgz",
      "integrity": "sha512-E8VjFIQ/TyQgp+TZfS6l8yp/xWppSAHzidGiRrqe4bK4XP9pTRyKFgGJpO3SN7zdX4DeomTrwaseCHovfpFcqQ==",
      "dev": true
    },
    "utf8-byte-length": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/utf8-byte-length/-/utf8-byte-length-1.0.4.tgz",
      "integrity": "sha1-9F8VDExm7uloGGUFq5P8u4rWv2E=",
      "dev": true
    },
    "util": {
      "version": "0.10.4",
      "resolved": "https://registry.npmjs.org/util/-/util-0.10.4.tgz",
      "integrity": "sha512-0Pm9hTQ3se5ll1XihRic3FDIku70C+iHUdT/W926rSgHV5QgXsYbKZN8MSC3tJtSkhuROzvsQjAaFENRXr+19A==",
      "dev": true,
      "requires": {
        "inherits": "2.0.3"
      },
      "dependencies": {
        "inherits": {
          "version": "2.0.3",
          "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz",
          "integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=",
          "dev": true
        }
      }
    },
    "util-deprecate": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
      "integrity": "sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8="
    },
    "utils-merge": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz",
      "integrity": "sha1-n5VxD1CiZ5R7LMwSR0HBAoQn5xM=",
      "dev": true
    },
    "uuid": {
      "version": "3.4.0",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-3.4.0.tgz",
      "integrity": "sha512-HjSDRw6gZE5JMggctHBcjVak08+KEVhSIiDzFnT9S9aegmp85S/bReBVTb4QTFaRNptJ9kuYaNhnbNEOkbKb/A==",
      "dev": true
    },
    "v8flags": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/v8flags/-/v8flags-2.1.1.tgz",
      "integrity": "sha1-qrGh+jDUX4jdMhFIh1rALAtV5bQ=",
      "dev": true,
      "requires": {
        "user-home": "^1.1.1"
      }
    },
    "vali-date": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/vali-date/-/vali-date-1.0.0.tgz",
      "integrity": "sha1-G5BKWWCfsyjvB4E4Qgk09rhnCaY=",
      "dev": true
    },
    "validate-npm-package-license": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/validate-npm-package-license/-/validate-npm-package-license-3.0.4.tgz",
      "integrity": "sha512-DpKm2Ui/xN7/HQKCtpZxoRWBhZ9Z0kqtygG8XCgNQ8ZlDnxuQmWhj566j8fN4Cu3/JmbhsDo7fcAJq4s9h27Ew==",
      "dev": true,
      "requires": {
        "spdx-correct": "^3.0.0",
        "spdx-expression-parse": "^3.0.0"
      }
    },
    "varuint-bitcoin": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/varuint-bitcoin/-/varuint-bitcoin-1.1.2.tgz",
      "integrity": "sha512-4EVb+w4rx+YfVM32HQX42AbbT7/1f5zwAYhIujKXKk8NQK+JfRVl3pqT3hjNn/L+RstigmGGKVwHA/P0wgITZw==",
      "dev": true,
      "requires": {
        "safe-buffer": "^5.1.1"
      }
    },
    "verror": {
      "version": "1.10.0",
      "resolved": "https://registry.npmjs.org/verror/-/verror-1.10.0.tgz",
      "integrity": "sha1-OhBcoXBTr1XW4nDB+CiGguGNpAA=",
      "dev": true,
      "requires": {
        "assert-plus": "^1.0.0",
        "core-util-is": "1.0.2",
        "extsprintf": "^1.2.0"
      },
      "dependencies": {
        "assert-plus": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
          "integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU=",
          "dev": true
        }
      }
    },
    "vinyl": {
      "version": "0.5.3",
      "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-0.5.3.tgz",
      "integrity": "sha1-sEVbOPxeDPMNQyUTLkYZcMIJHN4=",
      "dev": true,
      "requires": {
        "clone": "^1.0.0",
        "clone-stats": "^0.0.1",
        "replace-ext": "0.0.1"
      }
    },
    "vinyl-assign": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/vinyl-assign/-/vinyl-assign-1.2.1.tgz",
      "integrity": "sha1-TRmIkbVRWRHXcajNnFSApGoHSkU=",
      "dev": true,
      "requires": {
        "object-assign": "^4.0.1",
        "readable-stream": "^2.0.0"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "vinyl-fs": {
      "version": "0.3.14",
      "resolved": "https://registry.npmjs.org/vinyl-fs/-/vinyl-fs-0.3.14.tgz",
      "integrity": "sha1-mmhRzhysHBzqX+hsCTHWIMLPqeY=",
      "dev": true,
      "requires": {
        "defaults": "^1.0.0",
        "glob-stream": "^3.1.5",
        "glob-watcher": "^0.0.6",
        "graceful-fs": "^3.0.0",
        "mkdirp": "^0.5.0",
        "strip-bom": "^1.0.0",
        "through2": "^0.6.1",
        "vinyl": "^0.4.0"
      },
      "dependencies": {
        "clone": {
          "version": "0.2.0",
          "resolved": "https://registry.npmjs.org/clone/-/clone-0.2.0.tgz",
          "integrity": "sha1-xhJqkK1Pctv1rNskPMN3JP6T/B8=",
          "dev": true
        },
        "graceful-fs": {
          "version": "3.0.12",
          "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-3.0.12.tgz",
          "integrity": "sha512-J55gaCS4iTTJfTXIxSVw3EMQckcqkpdRv3IR7gu6sq0+tbC363Zx6KH/SEwXASK9JRbhyZmVjJEVJIOxYsB3Qg==",
          "dev": true,
          "requires": {
            "natives": "^1.1.3"
          }
        },
        "isarray": {
          "version": "0.0.1",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz",
          "integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=",
          "dev": true
        },
        "readable-stream": {
          "version": "1.0.34",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-1.0.34.tgz",
          "integrity": "sha1-Elgg40vIQtLyqq+v5MKRbuMsFXw=",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.1",
            "isarray": "0.0.1",
            "string_decoder": "~0.10.x"
          }
        },
        "string_decoder": {
          "version": "0.10.31",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz",
          "integrity": "sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=",
          "dev": true
        },
        "through2": {
          "version": "0.6.5",
          "resolved": "https://registry.npmjs.org/through2/-/through2-0.6.5.tgz",
          "integrity": "sha1-QaucZ7KdVyCQcUEOHXp6lozTrUg=",
          "dev": true,
          "requires": {
            "readable-stream": ">=1.0.33-1 <1.1.0-0",
            "xtend": ">=4.0.0 <4.1.0-0"
          }
        },
        "vinyl": {
          "version": "0.4.6",
          "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-0.4.6.tgz",
          "integrity": "sha1-LzVsh6VQolVGHza76ypbqL94SEc=",
          "dev": true,
          "requires": {
            "clone": "^0.2.0",
            "clone-stats": "^0.0.1"
          }
        }
      }
    },
    "vinyl-source-stream": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/vinyl-source-stream/-/vinyl-source-stream-1.1.2.tgz",
      "integrity": "sha1-YrU6E1YQqJbpjKlr7jqH8Aio54A=",
      "dev": true,
      "requires": {
        "through2": "^2.0.3",
        "vinyl": "^0.4.3"
      },
      "dependencies": {
        "clone": {
          "version": "0.2.0",
          "resolved": "https://registry.npmjs.org/clone/-/clone-0.2.0.tgz",
          "integrity": "sha1-xhJqkK1Pctv1rNskPMN3JP6T/B8=",
          "dev": true
        },
        "vinyl": {
          "version": "0.4.6",
          "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-0.4.6.tgz",
          "integrity": "sha1-LzVsh6VQolVGHza76ypbqL94SEc=",
          "dev": true,
          "requires": {
            "clone": "^0.2.0",
            "clone-stats": "^0.0.1"
          }
        }
      }
    },
    "vinyl-sourcemaps-apply": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/vinyl-sourcemaps-apply/-/vinyl-sourcemaps-apply-0.2.1.tgz",
      "integrity": "sha1-q2VJ1h0XLCsbh75cUI0jnI74dwU=",
      "dev": true,
      "requires": {
        "source-map": "^0.5.1"
      }
    },
    "vm-browserify": {
      "version": "0.0.4",
      "resolved": "https://registry.npmjs.org/vm-browserify/-/vm-browserify-0.0.4.tgz",
      "integrity": "sha1-XX6kW7755Kb/ZflUOOCofDV9WnM=",
      "dev": true,
      "requires": {
        "indexof": "0.0.1"
      }
    },
    "walkdir": {
      "version": "0.0.11",
      "resolved": "https://registry.npmjs.org/walkdir/-/walkdir-0.0.11.tgz",
      "integrity": "sha1-oW0CXrkxvQO1LzCMrtD0D86+lTI=",
      "dev": true
    },
    "wcwidth": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/wcwidth/-/wcwidth-1.0.1.tgz",
      "integrity": "sha1-8LDc+RW8X/FSivrbLA4XtTLaL+g=",
      "dev": true,
      "requires": {
        "defaults": "^1.0.3"
      }
    },
    "web3-utils": {
      "version": "1.3.5",
      "resolved": "https://registry.npmjs.org/web3-utils/-/web3-utils-1.3.5.tgz",
      "integrity": "sha512-5apMRm8ElYjI/92GHqijmaLC+s+d5lgjpjHft+rJSs/dsnX8I8tQreqev0dmU+wzU+2EEe4Sx9a/OwGWHhQv3A==",
      "dev": true,
      "requires": {
        "bn.js": "^4.11.9",
        "eth-lib": "0.2.8",
        "ethereum-bloom-filters": "^1.0.6",
        "ethjs-unit": "0.1.6",
        "number-to-bn": "1.7.0",
        "randombytes": "^2.1.0",
        "underscore": "1.9.1",
        "utf8": "3.0.0"
      },
      "dependencies": {
        "bn.js": {
          "version": "4.12.0",
          "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz",
          "integrity": "sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA==",
          "dev": true
        }
      }
    },
    "websocket": {
      "version": "1.0.33",
      "resolved": "https://registry.npmjs.org/websocket/-/websocket-1.0.33.tgz",
      "integrity": "sha512-XwNqM2rN5eh3G2CUQE3OHZj+0xfdH42+OFK6LdC2yqiC0YU8e5UK0nYre220T0IyyN031V/XOvtHvXozvJYFWA==",
      "dev": true,
      "requires": {
        "bufferutil": "^4.0.1",
        "debug": "^2.2.0",
        "es5-ext": "^0.10.50",
        "typedarray-to-buffer": "^3.1.5",
        "utf-8-validate": "^5.0.2",
        "yaeti": "^0.0.6"
      }
    },
    "websocket-driver": {
      "version": "0.7.4",
      "resolved": "https://registry.npmjs.org/websocket-driver/-/websocket-driver-0.7.4.tgz",
      "integrity": "sha512-b17KeDIQVjvb0ssuSDF2cYXSg2iztliJ4B9WdsuB6J952qCPKmnVq4DyW5motImXHDC1cBT/1UezrJVsKw5zjg==",
      "dev": true,
      "requires": {
        "http-parser-js": ">=0.5.1",
        "safe-buffer": ">=5.1.0",
        "websocket-extensions": ">=0.1.1"
      }
    },
    "websocket-extensions": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/websocket-extensions/-/websocket-extensions-0.1.4.tgz",
      "integrity": "sha512-OqedPIGOfsDlo31UNwYbCFMSaO9m9G/0faIHj5/dZFDMFqPTcx6UwqyOy3COEaEOg/9VsGIpdqn62W5KhoKSpg==",
      "dev": true
    },
    "whatwg-fetch": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/whatwg-fetch/-/whatwg-fetch-2.0.4.tgz",
      "integrity": "sha512-dcQ1GWpOD/eEQ97k66aiEVpNnapVj90/+R+SXTPYGHpYBBypfKJEQjLrvMZ7YXbKm21gXd4NcuxUTjiv1YtLng==",
      "dev": true
    },
    "which": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/which/-/which-1.3.1.tgz",
      "integrity": "sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ==",
      "dev": true,
      "requires": {
        "isexe": "^2.0.0"
      }
    },
    "which-module": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/which-module/-/which-module-2.0.0.tgz",
      "integrity": "sha1-2e8H3Od7mQK4o6j6SzHD4/fm6Ho=",
      "dev": true
    },
    "which-pm-runs": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/which-pm-runs/-/which-pm-runs-1.0.0.tgz",
      "integrity": "sha1-Zws6+8VS4LVd9rd4DKdGFfI60cs="
    },
    "wide-align": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/wide-align/-/wide-align-1.1.3.tgz",
      "integrity": "sha512-QGkOQc8XL6Bt5PwnsExKBPuMKBxnGxWWW3fU55Xt4feHozMUhdUMaBCk290qpm/wG5u/RSKzwdAC4i51YigihA==",
      "requires": {
        "string-width": "^1.0.2 || 2"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
          "integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg="
        },
        "string-width": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-2.1.1.tgz",
          "integrity": "sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==",
          "requires": {
            "is-fullwidth-code-point": "^2.0.0",
            "strip-ansi": "^4.0.0"
          }
        },
        "strip-ansi": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
          "integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
          "requires": {
            "ansi-regex": "^3.0.0"
          }
        }
      }
    },
    "widest-line": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/widest-line/-/widest-line-2.0.1.tgz",
      "integrity": "sha512-Ba5m9/Fa4Xt9eb2ELXt77JxVDV8w7qQrH0zS/TWSJdLyAwQjWoOzpzj5lwVftDz6n/EOu3tNACS84v509qwnJA==",
      "dev": true,
      "requires": {
        "string-width": "^2.1.1"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
          "integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg=",
          "dev": true
        },
        "string-width": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-2.1.1.tgz",
          "integrity": "sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==",
          "dev": true,
          "requires": {
            "is-fullwidth-code-point": "^2.0.0",
            "strip-ansi": "^4.0.0"
          }
        },
        "strip-ansi": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
          "integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
          "dev": true,
          "requires": {
            "ansi-regex": "^3.0.0"
          }
        }
      }
    },
    "wif": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/wif/-/wif-2.0.6.tgz",
      "integrity": "sha1-CNP1IFbGZnkplyb63g1DKudLRwQ=",
      "dev": true,
      "requires": {
        "bs58check": "<3.0.0"
      }
    },
    "window-size": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/window-size/-/window-size-0.1.0.tgz",
      "integrity": "sha1-VDjNLqk7IC76Ohn+iIeu58lPnJ0=",
      "dev": true
    },
    "winresourcer": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/winresourcer/-/winresourcer-0.9.0.tgz",
      "integrity": "sha1-CvyjDzxudFgFjSigtnPJ3aYiubU=",
      "dev": true
    },
    "wordwrap": {
      "version": "0.0.3",
      "resolved": "https://registry.npmjs.org/wordwrap/-/wordwrap-0.0.3.tgz",
      "integrity": "sha1-o9XabNXAvAAI03I0u68b7WMFkQc=",
      "dev": true
    },
    "wrap-ansi": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-5.1.0.tgz",
      "integrity": "sha512-QC1/iN/2/RPVJ5jYK8BGttj5z83LmSKmvbvrXPNCLZSEb32KKVDJDl/MOt2N01qU2H/FkzEa9PKto1BqDjtd7Q==",
      "dev": true,
      "requires": {
        "ansi-styles": "^3.2.0",
        "string-width": "^3.0.0",
        "strip-ansi": "^5.0.0"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",
          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg==",
          "dev": true
        },
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "strip-ansi": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",
          "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",
          "dev": true,
          "requires": {
            "ansi-regex": "^4.1.0"
          }
        }
      }
    },
    "wrappy": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
      "integrity": "sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8="
    },
    "write-file-atomic": {
      "version": "2.4.3",
      "resolved": "https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-2.4.3.tgz",
      "integrity": "sha512-GaETH5wwsX+GcnzhPgKcKjJ6M2Cq3/iZp1WyY/X1CSqrW+jVNM9Y7D8EC2sM4ZG/V8wZlSniJnCKWPmBYAucRQ==",
      "dev": true,
      "requires": {
        "graceful-fs": "^4.1.11",
        "imurmurhash": "^0.1.4",
        "signal-exit": "^3.0.2"
      }
    },
    "ws": {
      "version": "6.1.4",
      "resolved": "https://registry.npmjs.org/ws/-/ws-6.1.4.tgz",
      "integrity": "sha512-eqZfL+NE/YQc1/ZynhojeV8q+H050oR8AZ2uIev7RU10svA9ZnJUddHcOUZTJLinZ9yEfdA2kSATS2qZK5fhJA==",
      "dev": true,
      "requires": {
        "async-limiter": "~1.0.0"
      }
    },
    "xdg-basedir": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/xdg-basedir/-/xdg-basedir-3.0.0.tgz",
      "integrity": "sha1-SWsswQnsqNus/i3HK2A8F8WHCtQ=",
      "dev": true
    },
    "xhr": {
      "version": "2.6.0",
      "resolved": "https://registry.npmjs.org/xhr/-/xhr-2.6.0.tgz",
      "integrity": "sha512-/eCGLb5rxjx5e3mF1A7s+pLlR6CGyqWN91fv1JgER5mVWg1MZmlhBvy9kjcsOdRk8RrIujotWyJamfyrp+WIcA==",
      "dev": true,
      "requires": {
        "global": "~4.4.0",
        "is-function": "^1.0.1",
        "parse-headers": "^2.0.0",
        "xtend": "^4.0.0"
      }
    },
    "xhr-request": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/xhr-request/-/xhr-request-1.1.0.tgz",
      "integrity": "sha512-Y7qzEaR3FDtL3fP30k9wO/e+FBnBByZeybKOhASsGP30NIkRAAkKD/sCnLvgEfAIEC1rcmK7YG8f4oEnIrrWzA==",
      "dev": true,
      "requires": {
        "buffer-to-arraybuffer": "^0.0.5",
        "object-assign": "^4.1.1",
        "query-string": "^5.0.1",
        "simple-get": "^2.7.0",
        "timed-out": "^4.0.1",
        "url-set-query": "^1.0.0",
        "xhr": "^2.0.4"
      },
      "dependencies": {
        "decompress-response": {
          "version": "3.3.0",
          "resolved": "https://registry.npmjs.org/decompress-response/-/decompress-response-3.3.0.tgz",
          "integrity": "sha1-gKTdMjdIOEv6JICDYirt7Jgq3/M=",
          "dev": true,
          "requires": {
            "mimic-response": "^1.0.0"
          }
        },
        "mimic-response": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-1.0.1.tgz",
          "integrity": "sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ==",
          "dev": true
        },
        "simple-get": {
          "version": "2.8.1",
          "resolved": "https://registry.npmjs.org/simple-get/-/simple-get-2.8.1.tgz",
          "integrity": "sha512-lSSHRSw3mQNUGPAYRqo7xy9dhKmxFXIjLjp4KHpf99GEH2VH7C3AM+Qfx6du6jhfUi6Vm7XnbEVEf7Wb6N8jRw==",
          "dev": true,
          "requires": {
            "decompress-response": "^3.3.0",
            "once": "^1.3.1",
            "simple-concat": "^1.0.0"
          }
        }
      }
    },
    "xhr-request-promise": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/xhr-request-promise/-/xhr-request-promise-0.1.3.tgz",
      "integrity": "sha512-YUBytBsuwgitWtdRzXDDkWAXzhdGB8bYm0sSzMPZT7Z2MBjMSTHFsyCT1yCRATY+XC69DUrQraRAEgcoCRaIPg==",
      "dev": true,
      "requires": {
        "xhr-request": "^1.1.0"
      }
    },
    "xmlbuilder": {
      "version": "9.0.7",
      "resolved": "https://registry.npmjs.org/xmlbuilder/-/xmlbuilder-9.0.7.tgz",
      "integrity": "sha1-Ey7mPS7FVlxVfiD0wi35rKaGsQ0=",
      "dev": true
    },
    "xmldom": {
      "version": "0.1.31",
      "resolved": "https://registry.npmjs.org/xmldom/-/xmldom-0.1.31.tgz",
      "integrity": "sha512-yS2uJflVQs6n+CyjHoaBmVSqIDevTAWrzMmjG1Gc7h1qQ7uVozNhEPJAwZXWyGQ/Gafo3fCwrcaokezLPupVyQ==",
      "dev": true
    },
    "xmlhttprequest-ssl": {
      "version": "1.5.5",
      "resolved": "https://registry.npmjs.org/xmlhttprequest-ssl/-/xmlhttprequest-ssl-1.5.5.tgz",
      "integrity": "sha1-wodrBhaKrcQOV9l+gRkayPQ5iz4=",
      "dev": true
    },
    "xtend": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.2.tgz",
      "integrity": "sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==",
      "dev": true
    },
    "y18n": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/y18n/-/y18n-4.0.1.tgz",
      "integrity": "sha512-wNcy4NvjMYL8gogWWYAO7ZFWFfHcbdbE57tZO8e4cbpj8tfUcwrwqSl3ad8HxpYWCdXcJUCeKKZS62Av1affwQ==",
      "dev": true
    },
    "yaeti": {
      "version": "0.0.6",
      "resolved": "https://registry.npmjs.org/yaeti/-/yaeti-0.0.6.tgz",
      "integrity": "sha1-8m9ITXJoTPQr7ft2lwqhYI+/lXc=",
      "dev": true
    },
    "yallist": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-2.1.2.tgz",
      "integrity": "sha1-HBH5IY8HYImkfdUS+TxmmaaoHVI=",
      "dev": true
    },
    "yargs": {
      "version": "15.4.1",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-15.4.1.tgz",
      "integrity": "sha512-aePbxDmcYW++PaqBsJ+HYUFwCdv4LVvdnhBy78E57PIor8/OVvhMrADFFEDh8DHDFRv/O9i3lPhsENjO7QX0+A==",
      "dev": true,
      "requires": {
        "cliui": "^6.0.0",
        "decamelize": "^1.2.0",
        "find-up": "^4.1.0",
        "get-caller-file": "^2.0.1",
        "require-directory": "^2.1.1",
        "require-main-filename": "^2.0.0",
        "set-blocking": "^2.0.0",
        "string-width": "^4.2.0",
        "which-module": "^2.0.0",
        "y18n": "^4.0.0",
        "yargs-parser": "^18.1.2"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz",
          "integrity": "sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==",
          "dev": true
        },
        "ansi-styles": {
          "version": "4.3.0",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
          "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
          "dev": true,
          "requires": {
            "color-convert": "^2.0.1"
          }
        },
        "cliui": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/cliui/-/cliui-6.0.0.tgz",
          "integrity": "sha512-t6wbgtoCXvAzst7QgXxJYqPt0usEfbgQdftEPbLL/cvv6HPE5VgvqCuAIDR0NgU52ds6rFwqrgakNLrHEjCbrQ==",
          "dev": true,
          "requires": {
            "string-width": "^4.2.0",
            "strip-ansi": "^6.0.0",
            "wrap-ansi": "^6.2.0"
          }
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "dev": true,
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "emoji-regex": {
          "version": "8.0.0",
          "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
          "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
          "dev": true
        },
        "find-up": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz",
          "integrity": "sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==",
          "dev": true,
          "requires": {
            "locate-path": "^5.0.0",
            "path-exists": "^4.0.0"
          }
        },
        "is-fullwidth-code-point": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
          "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
          "dev": true
        },
        "locate-path": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz",
          "integrity": "sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==",
          "dev": true,
          "requires": {
            "p-locate": "^4.1.0"
          }
        },
        "p-locate": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz",
          "integrity": "sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==",
          "dev": true,
          "requires": {
            "p-limit": "^2.2.0"
          }
        },
        "path-exists": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
          "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
          "dev": true
        },
        "string-width": {
          "version": "4.2.0",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.0.tgz",
          "integrity": "sha512-zUz5JD+tgqtuDjMhwIg5uFVV3dtqZ9yQJlZVfq4I01/K5Paj5UHj7VyrQOJvzawSVlKpObApbfD0Ed6yJc+1eg==",
          "dev": true,
          "requires": {
            "emoji-regex": "^8.0.0",
            "is-fullwidth-code-point": "^3.0.0",
            "strip-ansi": "^6.0.0"
          }
        },
        "strip-ansi": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.0.tgz",
          "integrity": "sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==",
          "dev": true,
          "requires": {
            "ansi-regex": "^5.0.0"
          }
        },
        "wrap-ansi": {
          "version": "6.2.0",
          "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-6.2.0.tgz",
          "integrity": "sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ/SOIZwINatK9KY/tf+ZrlywOKU0UDj3ATXUBfxJXA==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.0.0",
            "string-width": "^4.1.0",
            "strip-ansi": "^6.0.0"
          }
        },
        "yargs-parser": {
          "version": "18.1.3",
          "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-18.1.3.tgz",
          "integrity": "sha512-o50j0JeToy/4K6OZcaQmW6lyXXKhq7csREXcDwk2omFPJEwUNOVtJKvmDr9EI1fAJZUyZcRF7kxGBWmRXudrCQ==",
          "dev": true,
          "requires": {
            "camelcase": "^5.0.0",
            "decamelize": "^1.2.0"
          }
        }
      }
    },
    "yargs-parser": {
      "version": "13.1.2",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-13.1.2.tgz",
      "integrity": "sha512-3lbsNRf/j+A4QuSZfDRA7HRSfWrzO0YjqTJd5kjAq37Zep1CEgaYmrH9Q3GwPiB9cHyd1Y1UwggGhJGoxipbzg==",
      "dev": true,
      "requires": {
        "camelcase": "^5.0.0",
        "decamelize": "^1.2.0"
      }
    },
    "yauzl": {
      "version": "2.10.0",
      "resolved": "https://registry.npmjs.org/yauzl/-/yauzl-2.10.0.tgz",
      "integrity": "sha1-x+sXyT4RLLEIb6bY5R+wZnt5pfk=",
      "dev": true,
      "requires": {
        "buffer-crc32": "~0.2.3",
        "fd-slicer": "~1.1.0"
      }
    },
    "yeast": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/yeast/-/yeast-0.1.2.tgz",
      "integrity": "sha1-AI4G2AlDIMNy28L47XagymyKxBk=",
      "dev": true
    },
    "zip-stream": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/zip-stream/-/zip-stream-1.2.0.tgz",
      "integrity": "sha1-qLxF9MG0lpnGuQGYuqyqzbzUugQ=",
      "dev": true,
      "requires": {
        "archiver-utils": "^1.3.0",
        "compress-commons": "^1.2.0",
        "lodash": "^4.8.0",
        "readable-stream": "^2.0.0"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "zxcvbn": {
      "version": "4.4.2",
      "resolved": "https://registry.npmjs.org/zxcvbn/-/zxcvbn-4.4.2.tgz",
      "integrity": "sha1-KOwXzwl0PtyrBW3dixsGJizHPDA=",
      "dev": true
    }
  }
}

'''
'''--- package.json ---
{
  "name": "NEM-Wallet",
  "version": "2.6.0",
  "description": "Cross-platform lite wallet for NEM",
  "author": "https://github.com/QuantumMechanics <qmnwdev@gmail.com>",
  "license": "MIT",
  "dependencies": {
    "@ledgerhq/hw-transport-node-hid-noevents": "^5.43.0"
  },
  "devDependencies": {
    "@babel/runtime": "^7.4.2",
    "@uirouter/angularjs": "1.0.6",
    "angular": "1.6.2",
    "angular-animate": "1.6.2",
    "angular-chart.js": "1.0.0",
    "angular-mocks": "1.6.2",
    "angular-sanitize": "1.6.2",
    "angular-translate": "2.11.0",
    "babel-plugin-syntax-dynamic-import": "^6.18.0",
    "babel-plugin-transform-async-to-generator": "^6.24.1",
    "babel-plugin-transform-runtime": "^6.23.0",
    "babel-preset-es2015": "^6.3.13",
    "babelify": "^7.2.0",
    "bip32-path": "^0.4.2",
    "bitcoinjs-lib": "^3.3.1",
    "bootstrap": "3.3.7",
    "browser-sync": "^2.11.1",
    "browserify": "^13.0.0",
    "browserify-ngannotate": "^2.0.0",
    "bufferutil": "^4.0.1",
    "symbol-post-launch-optin-module": "1.0.1",
    "chart.js": "2.1.6",
    "crypto-js": "^3.1.9-1",
    "electron": "11.1.0",
    "electron-builder": "22.9.1",
    "electron-notarize": "1.0.0",
    "electron-packager": "15.2.0",
    "electron-rebuild": "^2.3.4",
    "electron-updater": "4.3.5",
    "glob": "7.0.5",
    "gulp": "^3.9.1",
    "gulp-angular-templatecache": "^1.8.0",
    "gulp-autoprefixer": "^3.1.1",
    "gulp-notify": "^2.2.0",
    "gulp-rename": "^1.2.2",
    "gulp-sass": "^3.0.0",
    "gulp-uglify": "^1.5.3",
    "gulp-util": "^3.0.8",
    "jquery": "3.0.0",
    "jsqr": "^1.0.4",
    "marked": "^0.3.5",
    "merge-stream": "^1.0.0",
    "nem-library": "1.0.5",
    "nem-sdk": "^1.6.8",
    "nem-trezor": "1.1.0",
    "nem-voting": "^2.2.9",
    "ng-toast": "2.0.0",
    "ngstorage": "0.3.10",
    "npm-build-zip": "^1.0.2",
    "nw": "^0.26.6",
    "nw-builder": "^3.4.1",
    "rxjs": "5.5.12",
    "symbol-hd-wallets": "0.12.0",
    "symbol-paper-wallets": "1.0.2-optin",
    "symbol-qr-library": "^0.9.0",
    "symbol-sdk": "1.0.0",
    "url-parse": "1.1.9",
    "utf-8-validate": "^5.0.2",
    "vinyl-source-stream": "^1.1.0",
    "zxcvbn": "4.4.2"
  },
  "scripts": {
    "test": "gulp tests browserifyTests",
    "devApp": "nw build/",
    "compile": "gulp",
    "start": "npm run node-hid:prebuild-install && electron .",
    "build": "npm run compile",
    "release": "npm run build && npm run release:all",
    "release:all": "npm run release:mac && npm run release:win && npm run release:lin && npm run release:zip",
    "release:mac": "npm run node-hid:prebuild-install:mac && electron-builder --mac",
    "release:win": "npm run node-hid:prebuild-install:win && electron-builder --win",
    "release:lin": "npm run node-hid:prebuild-install:lin && electron-builder --linux deb snap tar.gz",
    "release:zip": "npm-build-zip --source=build --destination=release --name=universal",
    "node-hid:prebuild-install": "cd ./node_modules/node-hid && npm run install && cd ../..",
    "node-hid:prebuild-install:mac": "export npm_config_platform=darwin && npm run node-hid:prebuild-install",
    "node-hid:prebuild-install:win": "export npm_config_platform=win32 && npm run node-hid:prebuild-install",
    "node-hid:prebuild-install:lin": "export npm_config_platform=linux && npm run node-hid:prebuild-install"
  },
  "resolutions": {
    "@babel/preset-env": "7.5.5"
  },
  "main": "./build.js",
  "build": {
    "appId": "com.nemgrouplimited.nemwallet",
    "extends": null,
    "copyright": "Copyright © 2019-2021 NEM",
    "productName": "Nem Wallet",
    "artifactName": "${name}-${os}-${arch}-${version}.${ext}",
    "icon": "./build/images/NanoWallet.icns",
    "files": [
      "build/**/*",
      "package.json",
      "./build.js",
      "./preload.js"
    ],
    "directories": {
      "buildResources": "assets",
      "output": "release"
    },
    "npmRebuild": false
  },
  "mac": {
    "category": "public.app-category.finance",
    "target": "tar.gz",
    "icon": "./images/NanoWallet.icns",
    "hardenedRuntime": true,
    "gatekeeperAssess": false,
    "asarUnpack": [
      "**/*.node"
    ],
    "entitlements": "electron/entitlements.mac.plist",
    "extendInfo": {
      "NSCameraUsageDescription": "This app requires camera access to scan qrcodes."
    }
  },
  "dmg": {
    "window": {
      "x": 100,
      "y": 100,
      "width": 500,
      "height": 400
    }
  },
  "nsis": {
    "oneClick": false,
    "perMachine": false,
    "allowToChangeInstallationDirectory": true,
    "installerIcon": "./images/logomark.ico"
  },
  "linux": {
    "category": "Finance",
    "icon": "./images/NanoWallet.icns"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/NemProject/NanoWallet.git"
  },
  "keywords": [
    "nem"
  ],
  "bugs": {
    "url": "https://github.com/NemProject/NanoWallet/issues"
  },
  "homepage": "https://github.com/NemProject/NanoWallet#readme"
}

'''
'''--- preload.js ---
try {
  window.TransportNodeHid = require("@ledgerhq/hw-transport-node-hid-noevents");
  window.isElectronEnvironment = true;
} catch (e) {}

'''
'''--- src/app/app.js ---
import angular from 'angular';
import $ from 'jquery';

// Import our app config files
import constants from './config/app.constants';
import appConfig from './config/app.config';
import appRun from './config/app.run';
import nwConfig from './config/nw.js';

// Import Angular modules
import '@uirouter/angularjs';
import 'angular-animate';
import 'angular-sanitize';
import 'ng-toast';
import 'ngstorage';
import 'angular-translate';
import 'angular-chart.js';

// Testing
import 'angular-mocks';

// Import our templates file (generated by Gulp)
import './config/app.templates';

// Import our app functionalities
import './layout';
import './directives';
import './components';
import './filters';
import './services';

// Import our app modules
import './modules/home';
import './modules/dashboard';
import './modules/signup';
import './modules/login';
import './modules/languages';
import './modules/transferTransaction';
import './modules/portal';
import './modules/account';
import './modules/multisignature';
import './modules/namespaces';
import './modules/mosaics';
import './modules/addressBook';
import './modules/importanceTransfer';
import './modules/faq';
import './modules/trezor';
import './modules/ledger';
import './modules/apostille';
import './modules/exchanges';
import './modules/explorer';
import './modules/offlineTransaction';
import './modules/voting';
import './modules/invoice';
import './modules/signedMessage';
import './modules/domainNameSystem';
import './modules/importWalletQrCode';
import './modules/NEMonster';
import './modules/catapultOptin';

// Create and bootstrap application
const requires = [
    'ui.router',
    'templates',
    'app.layout',
    'app.directives',
    'app.components',
    'app.filters',
    'app.home',
    'app.dashboard',
    'app.transferTransaction',
    'app.createMultisig',
    'app.editMultisig',
    'app.signMultisig',
    'app.namespaces',
    'app.renewNamespaces',
    'app.createMosaic',
    'app.editMosaic',
    'app.portal',
    'app.signup',
    'app.login',
    'app.services',
    'app.account',
    'ngAnimate',
    'ngSanitize',
    'ngToast',
    'ngStorage',
    'chart.js',
    'pascalprecht.translate',
    'app.lang',
    'app.changelly',
    'app.addressBook',
    'app.importanceTransfer',
    'app.multisigImportanceTransfer',
    'app.faq',
    'app.trezor',
    'app.ledger',
    'app.createApostille',
    'app.auditApostille',
    'app.apostilleHistory',
    'app.shapeshift',
    'app.explorerHome',
    'app.explorerApostilles',
    'app.explorerTransactions',
    'app.accountsExplorer',
    'app.explorerNamespacesMosaics',
    'app.offlineTransactionCreate',
    'app.offlineTransactionSend',
    'app.votingPolls',
    'app.votingCreatePoll',
    'app.apostilleMessage',
    'app.invoice',
    'app.signedMessageCreation',
    'app.signedMessageVerification',
    'app.domainNameSystem',
    'app.dnsSearch',
    'app.NEMonster',
    'app.importWalletQrCode',
    'app.catapultOptin'
];

window.$ = window.jQuery = $;

// Load twitter bootstrap with require or jQuery is not defined
require('bootstrap');
require("babel-polyfill");
require('babel-runtime/regenerator');

// Mount on window
window.app = angular.module('app', requires);

angular.module('app').constant('AppConstants', constants);
angular.module('app').config(appConfig);
angular.module('app').run(appRun);

angular.bootstrap(document, ['app'], {
    strictDi: true
});

'''
'''--- src/app/components/accountInput.component.js ---
import nem from "nem-sdk";

class AccountInputCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor($timeout, Wallet, Recipient, $state, $scope) {
        'ngInject';

        // Initialize when component is ready
        this.$onInit = () => {

            //// Component dependencies region ////

            this._$timeout = $timeout;
            this._Wallet = Wallet;
            this._Recipient = Recipient;

            //// End dependencies region ////

            //// Component properties region ///

            // The account bound to the input
            this.accountView = this.account || "";
            // The alias
            this.alias  = "";
            // Show / Hide contact list
            this.showContacts = false;
            // Show title of input according to current page
            this.isCosignatory = $state.router.globals.current.name === 'app.transferTransaction' ? false : true;

            //// End properties region ////

            // If an account is pre-set, we get it's data
            if (this.account) this.processInput(false);

            // Watch account binding
            $scope.$watch(() => this.account, (val) => {
                if (!val) {
                    this.resetData();
                    this.accountView = "";
                }
            }, true);
        }

    }

    //// Component methods region ////

    /**
     * Process input and get account data from network
     *
     * @param {boolean} isAlias - True is is alias, false otherwise
     */
    processInput(isAlias) {
        this.resetData();
        // Get alias data
        if (isAlias) return this._Recipient.getAlias(this.accountView).then((res) => {
            this._$timeout(() => {
                return this.setData(res);
            });
        }, (err) => {
            this._$timeout(() => { 
                return this.resetData();
            });
        });
        // Get account data if address length is okay
        if (this.accountView.length === 40 || this.accountView.length === 46) return this._Recipient.getAccount(this.accountView).then((res) => {
            this._$timeout(() => {
                return this.setData(res);
            });
        }, (err) => { 
            this._$timeout(() => {
                return this.resetData();
            });
        });
    }

    /**
     * Set data received from Recipient service
     *
     * @param {object} - An [AccountInfo]{@link http://bob.nem.ninja/docs/#accountInfo} object
     */
    setData(data) {
        // Arrange for alias
        if (this.isAlias(this.accountView)) {
            this.alias = this.accountView.substring(1);
        }
        this.accountView = data.account.address;
        // Store account public key
        this.publicKey = data.account.publicKey;
        // Store clean address
        this.account = data.account.address;
        return;
    }

    /**
     * Reset data stored for account
     */
    resetData() {
        this.alias = "";
        this.publicKey = "";
        this.account = "";
        return;
    }

    /**
     * Show / Hide address book <select> and clean data
     */
    showHideAddressBook() {
        this.showContacts = this.showContacts ? this.showContacts = false : this.showContacts = true;
        this.accountView = undefined;
        this.resetData();
    }

    /**
     * Check if an input is an alias
     *
     * @param {string} input - A text string to check
     *
     * @return {boolean} - True if alias, false otherwise
     */
    isAlias(input) {
        if (!input) return false;
        return input.lastIndexOf("@", 0) === 0;
    }

    /**
     * Validate account input
     */
    isValid(input) {
        if (!input) return true;
        if (this.isAlias(input)) return true;
        if (input.length !== 40 && input.length !== 46) return false;
        if (!nem.model.address.isValid(input)) return false;
        if (!nem.model.address.isFromNetwork(input, this._Wallet.network)) return false;
        return true;
    }

    //// End methods region ////

}

// AccountInput config
let AccountInput = {
    controller: AccountInputCtrl,
    templateUrl: 'layout/partials/accountInput.html',
    bindings: {
        account: '=account',
        publicKey: '=publicKey'
    }
};

export default AccountInput;
'''
'''--- src/app/components/attachMosaic.component.js ---
import nem from "nem-sdk";
import Helpers from "../utils/helpers";

class AttachMosaicCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor($filter, $timeout, Wallet, DataStore) {
        'ngInject';

        // Initialize when component is ready
        this.$onInit = () => {

            //// Component dependencies region ////

            this._$filter = $filter;
            this._Helpers = Helpers;
            this._$timeout = $timeout;
            this._Wallet = Wallet;
            this._DataStore = DataStore;

            //// End dependencies region ////

            //// Component properties region ///

           this.counter = 0;
           this.mosaicsMetaData = this._DataStore.mosaic.metaData;

            //// End properties region ////

        }

    }

    //// Component methods region ////

    /**
     * Get selected mosaic and push it in mosaics array
     */
    attachMosaic() {
        // increment counter 
        this.counter++;
        // Get current account
        let acct = this.formData.isMultisig ? this.formData.multisigAccount.address : this._Wallet.currentAccount.address;

        // Get the data of selected mosaic
        let mosaic = this._DataStore.mosaic.ownedBy[acct][this.selectedMosaic];

        // Check if mosaic already present in mosaics array
        let elem = $.grep(this.formData.mosaics, function(w) {
            return nem.utils.format.mosaicIdToName(mosaic.mosaicId) === nem.utils.format.mosaicIdToName(w.mosaicId);
        });

        // If not present, update the array
        if (elem.length === 0) {
            this.formData.mosaics.push({
                'mosaicId': mosaic['mosaicId'],
                'quantity': 0,
                'gid': 'mos_id_' + this.counter
            });
            // Update fee
            this.updateCtrl();
        }
    }

    /**
     * Remove a mosaic from mosaics array
     * 
     * @param {number} index - Index of the mosaic object in the array 
     */
    removeMosaic(index) {
        this.formData.mosaics.splice(index, 1);
        // Update the fee
        this.updateCtrl();
        return;
    }

    /**
     * Return an array of sorted keys
     * 
     * @param {object} obj - An object of objects with a key
     *
     * @return {array} keys - An array of sorted keys or default array
     */
    toSortedKeys(obj) {
        let keys = Object.keys(obj).sort(); 
        if (!keys.length) return ["nem:xem"];
        return keys;
    }

    //// End methods region ////

}

// AttachMosaic config
let AttachMosaic = {
    controller: AttachMosaicCtrl,
    templateUrl: 'layout/partials/attachMosaic.html',
    bindings: {
        formData: '=formData',
        selectedMosaic: '=selectedMosaic',
        accountMosaics: '=accountMosaics',
        updateCtrl: '&'
    }
};

export default AttachMosaic;
'''
'''--- src/app/components/balance.component.js ---
import nem from "nem-sdk";

class BalanceCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(DataStore, $filter, $timeout, $scope) {
        'ngInject';

        //// Component dependencies region ////
        
        this._DataStore = DataStore;
        this._$timeout = $timeout;
        this._$filter = $filter;

        //// End dependencies region ////

        //// Component properties region ////

        this.markets = [];
        this.selectedMarket = this._DataStore.market.selected;
        this.balance = '0.000000';

        //// End properties region ////

        // Deep watch balance changes
        $scope.$watch(() => this._DataStore.account.metaData, (val) => {
            if (!val) return;
            this.updateBalance();
        }, true);

        // Deep watch market changes
        $scope.$watch(() => this._DataStore.market, (val, oldVal) => {
            if (!val || !val.btc || !val.xem) return;
            // Ignore selected market changes
            if (val.selected !== oldVal.selected) return;
            this.arrangeMarkets()
            this.updateBalance();
        }, true);
    }

    //// Component methods region ////

    /**
     * Calculate balance according to selected market
     */
    computeBalance() {
        if (undefined === this._DataStore.account.metaData) return;
        if (this._DataStore.market.selected === 'XEM') {
            this.balance = this._$filter("fmtNemValue")(this._DataStore.account.metaData.account.balance || 0)[0] + "." + this._$filter("fmtNemValue")(this._DataStore.account.metaData.account.balance || 0)[1];
        } else if (this._DataStore.market.selected === 'BTC') {
            this.balance = this._$filter("btcFormat")(this._DataStore.account.metaData.account.balance / 1000000 * this._DataStore.market.xem.highestBid);
        } else {
            this.balance = this._$filter("currencyFormat")(this._DataStore.account.metaData.account.balance / 1000000 * (this._DataStore.market.xem.highestBid * this._DataStore.market.btc[this.selectedMarket].last));
        }
    }

    /**
     * Arrange the array of market keys
     */
    arrangeMarkets() {
        this.markets = Object.keys(this._DataStore.market.btc) || [];
        this.markets.unshift('BTC');
        this.markets.unshift('XEM');
    }

    /**
     * Update balance value according to a market key
     *
     * @param {string} marketKey - A market key
     */
    updateBalance(marketKey) {
        if (!marketKey) marketKey = this._DataStore.market.selected;
        this._$timeout(() => {
            this._DataStore.market.selected = marketKey;
            this.selectedMarket = marketKey;
            this.computeBalance();
            $("#balanceDropdown.open").removeClass("open");
        });
    }

    //// End methods region ////

}

// Balance config
let Balance = {
    controller: BalanceCtrl,
    templateUrl: 'layout/partials/balance.html'
};

export default Balance;
'''
'''--- src/app/components/index.js ---
import angular from 'angular';

// Create the module where our functionality can attach to
let componentsModule = angular.module('app.components', []);

// Set market-data component
import MarketData from './marketData.component';
componentsModule.component('marketData', MarketData);

// Set balance component
import Balance from './balance.component';
componentsModule.component('balance', Balance);

// Set node component
import Node from './node.component';
componentsModule.component('node', Node);

// Set account-input component
import AccountInput from './accountInput.component';
componentsModule.component('accountInput', AccountInput);

// Set message-area component
import MessageArea from './messageArea.component';
componentsModule.component('messageArea', MessageArea);

// Set attach-mosaic component
import AttachMosaic from './attachMosaic.component';
componentsModule.component('attachMosaic', AttachMosaic);

// Set multisig-select component
import MultisigSelect from './multisigSelect.component';
componentsModule.component('multisigSelect', MultisigSelect);

// Set simple-and-multisig-select component
import SimpleAndMultisigSelect from './simpleAndmultisigSelect.component';
componentsModule.component('simpleAndMultisigSelect', SimpleAndMultisigSelect);

// Set news component
import News from './news.component';
componentsModule.component('news', News);

// Set invoice component
import Invoice from './invoice.component';
componentsModule.component('invoice', Invoice);

// Set tx-confirmation component
import TxConfirmation from './txConfirmation.component';
componentsModule.component('txConfirmation', TxConfirmation);

export default componentsModule;

'''
'''--- src/app/components/invoice.component.js ---
import nem from "nem-sdk";

class InvoiceCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Wallet, $scope) {
        'ngInject';

        // Initialize when component is ready
        this.$onInit = () => {

            //// Component dependencies region ////

            this._Wallet = Wallet;

            //// End dependencies region ////

            //// Component properties region ///

            // Invoice model for QR
            this.invoiceData = {
                "v": this._Wallet.network === nem.model.network.data.testnet.id ? 1 : 2,
                "type": 2,
                "data": {
                    "addr": "",
                    "amount": 0,
                    "msg": "",
                    "name": "NanoWallet XEM invoice"
                }
            };

            //// End properties region ////

            // Watch selected market
            $scope.$watch(() => this.formData, (val) => {
                if (!val) return;
                this.updateInvoiceQR();
            }, true);
        }

    }

    //// Component methods region ////

    /**
     * Generate QR using kjua lib
     */
    generateQRCode(text) {
        let qrCode = kjua({
            size: 256,
            text: text,
            fill: '#000',
            quiet: 0,
            ratio: 2,
        });
        $('#invoiceQR').html(qrCode);
    }

    /**
     * Create the QR according to invoice data
     */
    updateInvoiceQR() {
        if (this.formData.type === nem.model.transactionTypes.multisigTransaction) return;
        // Clean input address
        this.invoiceData.data.addr = this.formData.recipient.toUpperCase().replace(/-/g, '');
        // Convert user input to micro XEM
        this.invoiceData.data.amount = this.formData.amount;
        this.invoiceData.data.msg = nem.utils.format.hexMessage(this.formData.message);
        this.invoiceString = JSON.stringify(this.invoiceData);
        // Generate the QR
        this.generateQRCode(this.invoiceString);
    }

    //// End methods region ////

}

// Invoice config
let Invoice = {
    controller: InvoiceCtrl,
    templateUrl: 'layout/partials/invoice.html',
    bindings: {
        formData: '=formData'
    }
};

export default Invoice;
'''
'''--- src/app/components/marketData.component.js ---
import nem from "nem-sdk";
import Helpers from '../utils/helpers';

class MarketDataCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(DataStore, Alert, $timeout, $scope) {
        'ngInject';

        //// Component dependencies region ////
        
        this._DataStore = DataStore;
        this._Alert = Alert;
        this._$timeout = $timeout;
        this._Helpers = Helpers;

        //// End dependencies region ////

        this.selectedMarket = this._DataStore.market.selected;

        //// Component properties region ////

         //// End properties region ////

        // Watch selected market
        $scope.$watch(() => this._DataStore.market.selected, (val) => {
            if (!val) return;
            this.selectedMarket = (val === 'XEM' || val === 'BTC') ? 'USD' : val;
        });

    }

    //// Component methods region ////

	/**
	 * Refresh market information
	 */
	refreshMarketInfo() {
	    // Gets btc-xem market
	    nem.com.requests.market.xem().then((data) => {
	        this._$timeout(() => {
	            this._DataStore.market.xem = data["BTC_XEM"];
	        });
	    },
	    (err) => {
	        this._$timeout(() => {
	            this._Alert.errorGetMarketInfo(); 
	        });
	    });
	    // Gets btc-usd market
	    nem.com.requests.market.btc().then((data) => {
	        this._$timeout(() => {
	            this._DataStore.market.btc = data;
	        });
	     },
	    (err) => {
	        this._$timeout(() => {
	            this._Alert.errorGetBtcPrice();
	        });
	    });
	}

    //// End methods region ////

}

// MarketData config
let MarketData = {
    controller: MarketDataCtrl,
    templateUrl: 'layout/partials/marketData.html'
};

export default MarketData;
'''
'''--- src/app/components/messageArea.component.js ---
import nem from "nem-sdk";
import Helpers from "../utils/helpers";

class MessageAreaCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Wallet, $filter, $timeout) {
        'ngInject';

        // Initialize when component is ready
        this.$onInit = () => {

            //// Component dependencies region ////

            this._Wallet = Wallet;
            this._$filter = $filter;
            this._Helpers = Helpers;
            this._$timeout = $timeout;

            //// End dependencies region ////

            //// Component properties region ///

            this.messagePayload = "";
            // Get the message types
            this.messageTypes = this.translateMessageTypes(nem.model.objects.get("messageTypes"));
            // Create dummy common
            this.common = nem.model.objects.create("common")("", nem.utils.helpers.fixPrivateKey(""));

            //// End properties region ////

            this.updateCharactersLeft();
        }

    }

    //// Component methods region ////

    /**
     * Update the number of characters left for message
     */
    updateCharactersLeft() {
        this._$timeout(() => {
            let total = this.messageType === 0 ? 2048 : 1024;
            let div = this.messageType === 0 ? 1 : 2;
            this.messagePayload = this.message.length ? nem.model.transactions.prepareMessage(this.common, { 
                messageType: this.messageType, 
                recipientPublicKey: nem.crypto.keyPair.create(this.common.privateKey).publicKey.toString(),
                message: this.message
            }) : {
                payload: "" 
            };
            this.charactersLeft = this.messagePayload.payload.length ? total - (this.messagePayload.payload.length / div) : total;
            this.updateCtrl();
        });
    }

    /**
     * Translate message types from nem-sdk
     *
     * @param {array} array - A message types array
     */
    translateMessageTypes(array) {
        array[2].name = this._$filter("translate")("GENERAL_ENCRYPTED");
        array[1].name = this._$filter("translate")("GENERAL_UNENCRYPTED");
        array[0].name = this._$filter("translate")("GENERAL_HEXADECIMAL");
        if (this._Wallet.algo == 'ledger') {
            array.splice(2, 1);
        }
        return array;
    }

    //// End methods region ////

}

// MessageArea config
let MessageArea = {
    controller: MessageAreaCtrl,
    templateUrl: 'layout/partials/messageArea.html',
    bindings: {
        message: '=message',
        messageType: '=messageType',
        charactersLeft: '=charactersLeft',
        updateCtrl: '&'

    }
};

export default MessageArea;
'''
'''--- src/app/components/multisigSelect.component.js ---
import nem from "nem-sdk";

class MultisigSelectCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor($timeout, Wallet, DataStore) {
        'ngInject';

        // Initialize when component is ready
        this.$onInit = () => {

            //// Component dependencies region ////

            this._$timeout = $timeout;
            this._Wallet = Wallet;
            this._DataStore = DataStore;

            //// End dependencies region ////

        }

    }

    //// Component methods region ////

    /**
     * Update the controller
     */
    update() {
        this._$timeout(() => {
            this.updateCtrl();
        })
    }

    //// End methods region ////

}

// MultisigSelect config
let MultisigSelect = {
    controller: MultisigSelectCtrl,
    templateUrl: 'layout/partials/multisigSelect.html',
    bindings: {
        multisigAccount: '=multisigAccount',
        updateCtrl: '&',
        isDisabled: '=isDisabled'
    }
};

export default MultisigSelect;
'''
'''--- src/app/components/news.component.js ---
import nem from "nem-sdk";
import Helpers from '../utils/helpers';

class NewsCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Alert, $timeout, $http) {
        'ngInject';

        //// Component dependencies region ////
        
        this._Alert = Alert;
        this._$timeout = $timeout;
        this._Helpers = Helpers;
        this._$http = $http;

        //// End dependencies region ////

        //// Component properties region ////

        this.refreshNews();

         //// End properties region ////

    }

    //// Component methods region ////

	/**
	 * Refresh market information
	 */
	refreshNews() {
        return this._$http.get('').then((res) => {
        	console.log(res);
            //return res.data;
		}, (err) => {
			console.log(err);
		});
	}

    //// End methods region ////

}

// MarketData config
let News = {
    controller: NewsCtrl,
    templateUrl: 'layout/partials/news.html'
};

export default News;
'''
'''--- src/app/components/node.component.js ---
import nem from "nem-sdk";

class NodeCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(DataStore, DataBridge, Nodes, Wallet) {
        'ngInject';

        //// Component dependencies region ////
        
        this._DataStore = DataStore;
        this._Wallet = Wallet;
        this._Nodes = Nodes;
        this._DataBridge = DataBridge;

        //// End dependencies region ////

        //// Component properties region ////

        /**
         * Store the selected node
         *
         * @type {object|undefined}
         */
        this.selectedNode = undefined;

        /**
         * Store the custom node
         *
         * @type {string|undefined}
         */
        this.customNode = undefined;

        //// End properties region ////

    }

    //// Component methods region ////

    /**
     * Change node and store it in local storage
     *
     * @param {string} node - A node ip
     * @param {number} port - A port number (optional)
     */
    changeNode(node, port) {
        if (!node) return;
        // Use the node service to clean input and return endpoint object
        let endpoint = this._Nodes.cleanEndpoint(node, port);
        // Update wallet service and local storage
        this._Nodes.update(endpoint);
        // Disconnect and connect to node
        this.reconnect(endpoint);
        // Reset node input and select
        this.customNode = undefined;
        this.selectedNode = undefined;
        return;
    }

    /**
     * Disconnect and connect to specified node
     *
     * @param {object} endpoint - An endpoint object
     */
    reconnect(endpoint) {
        // Close connector
        this._DataBridge.connector.close();
        // Set connection status to false
        this._DataStore.connection.status = false;
        // Reset data in DataBridge service
        this._DataBridge.reset();
                
        // Change endpoint port to websocket port
        let endpointWs = nem.model.objects.create("endpoint")(endpoint.host, nem.model.nodes.websocketPort);
        // Create a connector
        let connector = nem.com.websockets.connector.create(endpointWs, this._Wallet.currentAccount.address);
        // Open the connection with the connector
        this._DataBridge.openConnection(connector);
        return;
    }

    //// End methods region ////

}

// Node config
let Node = {
    controller: NodeCtrl,
    templateUrl: 'layout/partials/node.html'
};

export default Node;
'''
'''--- src/app/components/simpleAndmultisigSelect.component.js ---
import nem from "nem-sdk";

class SimpleAndMultisigSelectCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor($timeout, Wallet, DataStore) {
        'ngInject';

        // Initialize when component is ready
        this.$onInit = () => {

            //// Component dependencies region ////

            this._$timeout = $timeout;
            this._Wallet = Wallet;
            this._DataStore = DataStore;

            //// End dependencies region ////
            this.allAccounts = [
                this._DataStore.account.metaData.account,
                ...this._DataStore.account.metaData.meta.cosignatoryOf
            ]
        }

    }

    formatLabel(address) {
        let suffix = ' - ';
        for (let i=0; i < this.allAccounts.length; i++) {
            if (this.allAccounts[i].address === address) {
                if (i === 0) suffix += this._Wallet.currentAccount.label;
                else suffix += 'Multisig';
                break;
            }
        }
        return address + suffix;
    }

    //// Component methods region ////

    /**
     * Update the controller
     */
    update() {
        this._$timeout(() => {
            this.updateCtrl();
        })
    }

    //// End methods region ////

}

// MultisigSelect config
let SimpleAndMultisigSelect = {
    controller: SimpleAndMultisigSelectCtrl,
    templateUrl: 'layout/partials/simpleAndMultisigSelect.html',
    bindings: {
        account: '=account',
        updateCtrl: '&',
        isDisabled: '=isDisabled'
    }
};

export default SimpleAndMultisigSelect;

'''
'''--- src/app/components/txConfirmation.component.js ---
import nem from "nem-sdk";

class TxConfirmationCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Wallet, $scope) {
        'ngInject';

        // Initialize when component is ready
        this.$onInit = () => {

            //// Component dependencies region ////

            this._Wallet = Wallet;

            //// End dependencies region ////

            //// Component properties region ///

            //// End properties region ////
        }

    }

    //// Component methods region ////

    

    //// End methods region ////

}

// TxConfirmation config
let TxConfirmation = {
    controller: TxConfirmationCtrl,
    templateUrl: 'layout/partials/txConfirmation.html',
    bindings: {
        tx: '=tx'
    }
};

export default TxConfirmation;
'''
'''--- src/app/config/app.config.js ---
function AppConfig($stateProvider, $localStorageProvider, $locationProvider, $urlRouterProvider, ngToastProvider, $translateProvider) {
    'ngInject';

    /*
     *  If you don't want hashbang routing, uncomment this line.
     */
    // $locationProvider.html5Mode(true);

    // Define the main state
    $stateProvider
        .state('app', {
            abstract: true,
            templateUrl: 'layout/app-view.html'
        });

    // Redirect to home if unknown route
    $urlRouterProvider.otherwise('/');

    // Alerts configuration
    ngToastProvider.configure({
        animation: 'fade'
    });

    // Define prefered language, english by default
    $translateProvider.preferredLanguage($localStorageProvider.get('lang') || 'en');

    // Languages sanitization strategy
    $translateProvider.useSanitizeValueStrategy('sanitizeParameters');

}

export default AppConfig;
'''
'''--- src/app/config/app.constants.js ---
const AppConstants = {
    //Application name
    appName: 'NEM Wallet',

    version: '2.6.0',

    //Network
    defaultNetwork: 104,

    // Ports
    defaultNisPort: 7890,
    defaultMijinPort: 7895,
    defaultWebsocketPort: 7778,

    // Activate/Deactivate mainnet
    mainnetDisabled: false,

    // Activate/Deactivate mijin
    mijinDisabled: true
};

export default AppConstants;

'''
'''--- src/app/config/app.run.js ---
function AppRun(AppConstants, $rootScope, $timeout, Wallet, Alert, $transitions) {
    'ngInject';

    const publicStates = [
        "app.home",
        "app.login",
        "app.signup",
        "app.faq",
        "app.trezor",
        "app.ledger",
        "app.offlineTransactionHome",
        "app.offlineTransactionCreate",
        "app.offlineTransactionSend",
        "app.importWalletQrCode"
    ];

     // Change page title based on state
    $transitions.onSuccess({ to: true }, (transition) => {
        // Scroll to top of the page
        window.scrollTo(0, 0);
        $rootScope.setPageTitle(transition.router.globals.current.title);
        // Enable tooltips globally
        $timeout( function() {
            $('[data-toggle="tooltip"]').tooltip()
        });
    });

    // Check if a wallet is loaded before accessing private states
    $transitions.onStart({
        to: (state) => {
            for (let i = 0; i < publicStates.length; i++) {
                if (publicStates[i] === state.name) return false;
            }
            return true;
        }
    }, (transition) => {
        if (!Wallet.current) {
            Alert.noWalletLoaded();
            return transition.router.stateService.target('app.home');
        }
    });

    // Helper method for setting the page's title
    $rootScope.setPageTitle = (title) => {
        $rootScope.pageTitle = '';
        if (title) {
            $rootScope.pageTitle += title;
            $rootScope.pageTitle += ' \u2014 ';
        }
        $rootScope.pageTitle += AppConstants.appName;
    };
}

export default AppRun;

'''
'''--- src/app/config/nw.js ---
/**
 * Helper function to get the property value at path of object.
 *
 * @param object The object to query.
 * @param path   The path of the property to get.
 * @returns {*} The queried value if the path exists in the given object, otherwise undefined.
 */
const get = (object, path) => {
    return path.split('.').reduce ( (acc, prop) =>
        acc !== undefined && Object.hasOwnProperty.call(acc, prop) ? acc[prop] : undefined, object,
    );
};

/**
 * Helper function which allows to apply Chrome specific settings when running under nw.js.
 *
 * @param prop  The settings prop for which the settings should be applied. Must be passed as string.
 * @param value The value to apply to the given settings props.
 */
const applyChromeSetting = (prop, value) => {
    const settingsObject = get(chrome, prop);
    if (settingsObject === undefined) {
        console.info('Setting `chrome.' + prop + '` cannot be handled by this browser. This is the expected behavior ' +
            'if you don\'t run the standalone NanoWallet!');
        return;
    }

    settingsObject.get({}, (details) => {
        if (details.levelOfControl === 'controllable_by_this_extension') {
            settingsObject.set({ value }, () => {
                if (chrome.runtime.lastError === undefined)
                    console.info('Successfully applied value `' + value + '` to setting `chrome.' + prop + '`');
                else
                    console.error('Couldn\'t apply value `' + value + '` to setting `chrome.' + prop + '`', chrome.runtime.lastError);
                });
        } else {
            console.info('Cannot control Chrome setting `chrome.' + prop + '`; LevelOfControl is: ' + details.levelOfControl);
        }
    });
};

/**
 * Applies the chrome.privacy settings.
 *
 * For an overview of all settings please visit the following site: https://developer.chrome.com/extensions/privacy
 */
const nwPrivacyConfig = () => {
    applyChromeSetting('privacy.services.alternateErrorPagesEnabled', false);
    applyChromeSetting('privacy.services.autofillEnabled', false);
    applyChromeSetting('privacy.services.hotwordSearchEnabled', false);
    applyChromeSetting('privacy.services.passwordSavingEnabled', false);
    applyChromeSetting('privacy.services.safeBrowsingExtendedReportingEnabled', false);
    applyChromeSetting('privacy.services.searchSuggestEnabled', false);
    applyChromeSetting('privacy.services.spellingServiceEnabled', false);
    applyChromeSetting('privacy.services.translationServiceEnabled', false);
};

/**
 * Applies the NW settings.
 */
const nwConfig = () => {
    nwPrivacyConfig();
};

export default nwConfig;
'''
'''--- src/app/directives/decodeMessage.directive.js ---
import nem from "nem-sdk";

function DecodeMessage(Wallet, Recipient, Alert, $timeout, $filter, $sanitize) {
    'ngInject';

    return {
        restrict:'E',
        scope: {
        	tx: '=',
            showDecodeMessage: '=',
            disableDecryption: '='
        },
        template: '<ng-include src="templateDecodeMessage"/>',
        link: (scope) => {
        	scope.templateDecodeMessage = 'layout/partials/decodeMessage.html';
            scope.common = nem.model.objects.get("common");
            scope.Wallet = Wallet;

            /**
             * Decode an encrypted message in a transaction
             *
             * @param {object} tx - A transaction object
             */
            scope.decode = (tx) => {
                // Get account private key
                if (!Wallet.decrypt(scope.common)) return;

                // Create key pair
                let kp = nem.crypto.keyPair.create(scope.common.privateKey);

                // If not the sender, use signer public key for decryption
                if(kp.publicKey.toString() !== tx.signer) {
                    scope.processDecode(tx.signer, tx);
                } else {
                    // Get the recipient account data for the public key
                    Recipient.getAccount(tx.recipient).then((res) => {
                        $timeout(() => {
                            //
                            scope.processDecode(res.account.publicKey, tx);
                            return;
                        });
                    },
                    (err) => {
                        $timeout(() => {
                            // Reset common
                            scope.common = nem.model.objects.get("common");;
                            Alert.getAccountDataError(err.statusText);
                            return;
                        });
                    });
                }
            };

            /**
             * Do decoding and set result in the transaction template
             *
             * @param {string} publicKey - The public key of the signer or recipient
             * @param {object} tx - A transaction object
             */
            scope.processDecode = (publicKey, tx)  =>{
                // Check public key
                if(!publicKey) return Alert.noPublicKeyForDecoding();

                // Decode the message
                let decoded = nem.crypto.helpers.decode(scope.common.privateKey, publicKey, tx.message.payload);
                if (!decoded) return Alert.emptyDecodedMessage();
                            
                // Replace transaction message with decoded message
                tx.message.type = 1;
                tx.message.payload = decoded;
                // Reset common
                scope.common = nem.model.objects.get("common");
                // Remove the the decode part of the template
                $("#decodeTxMessage-" + tx.timeStamp).remove();
            }
        }

    };
}

export default DecodeMessage;
'''
'''--- src/app/directives/feeInput.directive.js ---
import nem from "nem-sdk";

function FeeInput() {
    'ngInject';

    return {
        restrict:'E',
        scope: {
        	tx: '=',
            isMultisig: '='
        },
        template: '<ng-include src="templateFeeInput"/>',
        link: (scope) => {
        	scope.templateFeeInput = 'layout/partials/feeInput.html';
        }

    };
}

export default FeeInput;
'''
'''--- src/app/directives/importAddressBookFile.directive.js ---
import helpers from '../utils/helpers';

function importAddressBookFile($parse, Alert) {
    'ngInject'
    return {
        restrict: 'A',
        scope: false,
        link: function(scope, element, attrs) {
            var fn = $parse(attrs.importAddressBookFile);

            element.on('change', function(onChangeEvent) {

                for (var i = 0; i < (onChangeEvent.srcElement || onChangeEvent.target).files.length; i++) {
                    var reader = new FileReader();
                    reader.onload = (function(file) {
                        return function(onLoadEvent) {
                            scope.$apply(function() {
                                fn(scope, {
                                    $fileContent: onLoadEvent.target.result
                                });
                            });
                        };
                    })((onChangeEvent.srcElement || onChangeEvent.target).files[i]);

                    if (helpers.getExtension((onChangeEvent.srcElement || onChangeEvent.target).files[i].name) == "adb") {
                        console.log("Loading file");
                        reader.readAsText((onChangeEvent.srcElement || onChangeEvent.target).files[i]);
                    } else {
                        console.log("Invalid file format");
                        scope.$apply(function() {
                            Alert.invalidAddressBookFile();
                        });
                    }
                }
            });
        }
    }
}

export default importAddressBookFile;
'''
'''--- src/app/directives/importApostilleFiles.directive.js ---
function ImportApostilleFiles($parse, Alert) {
    'ngInject'
    return {
        restrict: 'A',
        scope: false,
        link: function(scope, element, attrs) {
            var fn = $parse(attrs.importApostilleFiles);

            element.on('change', function(onChangeEvent) {

                for (var i = 0; i < (onChangeEvent.srcElement || onChangeEvent.target).files.length; i++) {
                    var reader = new FileReader();
                    reader.onload = (function(file) {
                        return function(onLoadEvent) {
                            scope.$apply(function() {
                                fn(scope, {
                                    $fileContent: onLoadEvent.target.result,
                                    $fileData: file
                                });
                            });
                        };
                    })((onChangeEvent.srcElement || onChangeEvent.target).files[i]);

                    if ((onChangeEvent.srcElement || onChangeEvent.target).files[i].size / 1000000 > 100) {
                        scope.$apply(function() {   
                            Alert.fileSizeError((onChangeEvent.srcElement || onChangeEvent.target).files[i].name);
                        });
                    } else {
                        reader.readAsDataURL((onChangeEvent.srcElement || onChangeEvent.target).files[i]);
                    }
                }
            });
        }
    }
}

export default ImportApostilleFiles;
'''
'''--- src/app/directives/importNtyFile.directive.js ---
import helpers from '../utils/helpers';

function importNtyFile($parse, Alert) {
    'ngInject'
    return {
        restrict: 'A',
        scope: false,
        link: function(scope, element, attrs) {
            var fn = $parse(attrs.importNtyFile);

            element.on('change', function(onChangeEvent) {

                for (var i = 0; i < (onChangeEvent.srcElement || onChangeEvent.target).files.length; i++) {
                    var reader = new FileReader();
                    reader.onload = (function(file) {
                        return function(onLoadEvent) {
                            scope.$apply(function() {
                                fn(scope, {
                                    $fileContent: onLoadEvent.target.result
                                });
                            });
                        };
                    })((onChangeEvent.srcElement || onChangeEvent.target).files[i]);

                    if (helpers.getExtension((onChangeEvent.srcElement || onChangeEvent.target).files[i].name) == "nty") {
                        console.log("Loading nty file");
                        reader.readAsText((onChangeEvent.srcElement || onChangeEvent.target).files[i]);
                    } else {
                        console.log("Invalid notary file format");
                        scope.$apply(function() {
                            Alert.invalidNtyFile();
                        });
                    }
                }
            });
        }
    }
}

export default importNtyFile;
'''
'''--- src/app/directives/index.js ---
import angular from 'angular';

// Create the module where our functionality can attach to
let directivesModule = angular.module('app.directives', []);

// Set read-wallet-files directive
import ReadWalletFiles from './readWalletFiles.directive';
directivesModule.directive('readWalletFiles', ReadWalletFiles);

// Set show-authed directive
import ShowAuthed from './show-authed.directive';
directivesModule.directive('showAuthed', ShowAuthed);

// Set tag-transaction directive
import TagTransaction from './tagTransaction.directive';
directivesModule.directive('tagTransaction', TagTransaction);

// Set tag-levy directive
import TagLevy from './tagLevy.directive';
directivesModule.directive('tagLevy', TagLevy);

// Set read-wallet-files directive
import ImportApostilleFiles from './importApostilleFiles.directive';
directivesModule.directive('importApostilleFiles', ImportApostilleFiles);

// Set import-nty-file directive
import ImportNtyFile from './importNtyFile.directive';
directivesModule.directive('importNtyFile', ImportNtyFile);

// Set import-address-book-file directive
import ImportAddressBookFile from './importAddressBookFile.directive';
directivesModule.directive('importAddressBookFile', ImportAddressBookFile);

// Set paginate directive
import Paginate from './paginate.directive';
directivesModule.directive('paginate', Paginate);

// Set fee-input directive
import FeeInput from './feeInput.directive';
directivesModule.directive('feeInput', FeeInput);

// Set password-input directive
import PasswordInput from './passwordInput.directive';
directivesModule.directive('passwordInput', PasswordInput);

// Set decode-message directive
import DecodeMessage from './decodeMessage.directive';
directivesModule.directive('decodeMessage', DecodeMessage);

// Set sign-transaction directive
import SignTransaction from './signTransaction.directive';
directivesModule.directive('signTransaction', SignTransaction);

export default directivesModule;
'''
'''--- src/app/directives/paginate.directive.js ---
import nem from "nem-sdk";
import Helpers from '../utils/helpers';

function Paginate() {
    'ngInject';

    return {
        restrict:'E',
        scope: {
        	data: '=',
        	currentPage: '=currentPage',
        	pageSize: '=pageSize'
        },
        template: '<ng-include src="templatePaginate"/>',
        link: (scope) => {

        	scope.templatePaginate = 'layout/partials/paginate.html';
        	scope.Helpers = Helpers;
            scope.increment = function() {
                scope.currentPage = scope.currentPage+1;
            }
            scope.decrement = function() {
                scope.currentPage = scope.currentPage-1;
            }
            scope.goStart = function() {
                scope.currentPage = 0;
            }
            scope.goEnd = function() {
                scope.currentPage = Helpers.calcNumberOfPages(scope.data, scope.pageSize)-1;
            }
        }

    };
}

export default Paginate;
'''
'''--- src/app/directives/passwordInput.directive.js ---
import nem from "nem-sdk";

function PasswordInput(Wallet) {
    'ngInject';

    return {
        restrict:'E',
        scope: {
        	common: '='
        },
        template: '<ng-include src="templatePasswordInput"/>',
        link: (scope) => {
            scope.Wallet = Wallet;
        	scope.templatePasswordInput = 'layout/partials/passwordInput.html';
        }

    };
}

export default PasswordInput;
'''
'''--- src/app/directives/readWalletFiles.directive.js ---
import helpers from '../utils/helpers';

function ReadWalletFiles($parse, Alert) {
    'ngInject'
    return {
        restrict: 'A',
        scope: false,
        link: function(scope, element, attrs) {
            let fn = $parse(attrs.readWalletFiles);
            let isNCC = false;

            element.on('change', function(onChangeEvent) {

                for (let i = 0; i < (onChangeEvent.srcElement || onChangeEvent.target).files.length; i++) {
                    let reader = new FileReader();
                    reader.onload = (function(file) {
                        return function(onLoadEvent) {
                            scope.$apply(function() {
                                fn(scope, {
                                    $fileContent: onLoadEvent.target.result,
                                    $isNCC: isNCC
                                });
                            });
                        };
                    })((onChangeEvent.srcElement || onChangeEvent.target).files[i]);

                    if (helpers.getExtension((onChangeEvent.srcElement || onChangeEvent.target).files[i].name) == "wlt") {
                        console.log("Loading wallet");
                        isNCC = false;
                        reader.readAsText((onChangeEvent.srcElement || onChangeEvent.target).files[i]);
                    } else if(helpers.getExtension((onChangeEvent.srcElement || onChangeEvent.target).files[i].name) == "json") {
                        console.log("Loading NCC wallet");
                        isNCC = true;
                        reader.readAsText((onChangeEvent.srcElement || onChangeEvent.target).files[i]);
                    } else {
                        console.log("Invalid wallet format");
                        scope.$apply(function() {
                            Alert.invalidWalletFile();
                        });
                    }
                }
            });
        }
    }
}

export default ReadWalletFiles;
'''
'''--- src/app/directives/show-authed.directive.js ---
function ShowAuthed(Wallet) {
    'ngInject';

    return {
        restrict: 'A',
        link: function(scope, element, attrs) {
            scope.Wallet = Wallet;

            scope.$watch('Wallet.current', function(val) {
                if (val) {
                    if (attrs.showAuthed === 'true') {
                        element.css({
                            display: 'inline-block'
                        })
                    } else {
                        element.css({
                            display: 'none'
                        })
                    }
                } else {
                    if (attrs.showAuthed === 'true') {
                        element.css({
                            display: 'none'
                        })
                    } else {
                        element.css({
                            display: 'inline-block'
                        })
                    }
                }
            });

        }
    };
}

export default ShowAuthed;
'''
'''--- src/app/directives/signTransaction.directive.js ---
import nem from "nem-sdk";

function SignTransaction(Wallet, $timeout, DataStore) {
    'ngInject';

    return {
        restrict:'E',
        scope: {
        	tx: '=',
            needsSignature: '=',
            parentTx: '=',
            meta: '='
        },
        template: '<ng-include src="templateSignTransaction"/>',
        link: (scope) => {
        	scope.templateSignTransaction = 'layout/partials/signTransaction.html';
            scope.common = nem.model.objects.get("common");
            scope.Wallet = Wallet;

            /**
             * Cosign a multisig transaction
             *
             * @param {object} parentTx - A multisig transaction object
             * @param {object} tx - An inner transaction object
             * @param {object} meta - The meta data of the multisig transaction object
             */
            scope.cosign = (parentTx, tx, meta) => {
                let txCosignData = nem.model.objects.create("signatureTransaction")(nem.model.address.toAddress(parentTx.otherTrans.signer, Wallet.network), meta.innerHash.data);

                // Get account private key
                if (!Wallet.decrypt(scope.common)) return;

                // Prepare the signature transaction
                let entity = nem.model.transactions.prepare("signatureTransaction")(scope.common, txCosignData, Wallet.network);

                // HW wallet
                entity.otherTrans = parentTx.otherTrans;

                // Use wallet service to serialize and send
                Wallet.transact(scope.common, entity).then(() => {
                    $timeout(() => {
                        // Remove needs of signature
                        $("#needsSignature-" + tx.timeStamp).remove();
                        $("#needsSignature2-" + tx.timeStamp).remove();
                        // Push the signer into the transaction object
                        parentTx.signatures.push({ "signer": DataStore.account.metaData.account.publicKey, "timeStamp": nem.utils.helpers.createNEMTimeStamp()});
                        // Reset common
                        scope.common = nem.model.objects.get("common");
                        return;
                    });
                }, () => {
                    $timeout(() => {
                        // Reset common
                        scope.common = nem.model.objects.get("common");
                        return;
                    });
                });
            }
        }

    };
}

export default SignTransaction;
'''
'''--- src/app/directives/tagLevy.directive.js ---
import nem from 'nem-sdk';

function TagLevy(AppConstants) {
    'ngInject';
    return {
        restrict: 'E',
        scope: {
            mos: '=',
            tx: '=',
            mosaics: '='
        },
        template: '',
        transclude: true,
        compile: function(tElement, tAttrs, transclude) {
            return function postLink(scope, element, attrs) {

                function getLevy(d) {
                    if (!scope.mosaics) return undefined;
                    let mosaicName = nem.utils.format.mosaicIdToName(d.mosaicId);
                    if (!(mosaicName in scope.mosaics)) {
                        return undefined;
                    }
                    let mosaicDefinitionMetaDataPair = scope.mosaics[mosaicName];
                    return mosaicDefinitionMetaDataPair.mosaicDefinition.levy;
                }
                scope.levy = getLevy(scope.mos);

                let foo = scope;
                scope.$watch('mosaics', function(nv, ov) {
                    scope.levy = getLevy(scope.mos);
                }, true);

                transclude(scope, function(clone, scope) {
                    element.append(clone);
                });
            };
        }
    }

}

export default TagLevy;
'''
'''--- src/app/directives/tagTransaction.directive.js ---
import nem from 'nem-sdk';

// Unique id for each tx, start with 0
let txId = 0;

function TagTransaction(Wallet, $state, AddressBook, DataStore) {
    'ngInject';

    return {
        restrict: 'E',
        scope: {
            d: '=',
            a: '=',
            tooltipPosition: '='
        },
        template: '<ng-include src="templateUri"/>',
        link: (scope) => {
                scope.number = txId++;
                scope.mainAccount = scope.a || Wallet.currentAccount.address;
                scope.meta = scope.d.meta;

            if (scope.d.transaction.type == 4100) {
                scope.tx = scope.d.transaction.otherTrans;
                scope.parent = scope.d.transaction;
                scope.confirmed = !(scope.meta.height === Number.MAX_SAFE_INTEGER);
                scope.needsSignature = scope.parent && !scope.confirmed && DataStore.account.metaData && nem.utils.helpers.needsSignature(scope.d, DataStore.account.metaData);
            } else {
                scope.tx = scope.d.transaction;
                scope.parent = undefined;
            }

            // If called from the accounts explorer, hide message decryption
            scope.disableDecryption = $state.current.name === 'app.accountsExplorer' ? true : false;

            // Get the correct line template
            scope.templateUri = 'layout/lines/line' + nem.utils.format.txTypeToName(scope.tx.type) + '.html';

            // 
            scope.mosaicIdToName = nem.utils.format.mosaicIdToName;
            scope.mosaicDefinitionMetaDataPair = DataStore.mosaic.metaData;
            scope.networkId = Wallet.network;

            /**
             * Return contact label for an address
             *
             * @param {string} address - The address to look for
             *
             * @return {string|boolean} - The account label or false
             */
            scope.getContact = (address) => {
                return AddressBook.getContact(Wallet.current, address);
            }

        }
    };
}

export default TagTransaction;
'''
'''--- src/app/filters/filters.js ---
import nem from 'nem-sdk';

/**
* Convert a public key to NEM address
*
* @param input: The account public key
* @param networkId: The current network id
*
* @return a clean NEM address
*/
let fmtPubToAddress = function() {
    return function fmtPubToAddress(input, networkId) {
        return nem.utils.format.pubToAddress(input, networkId);
    };
}

/**
* Add hyphens to a clean address
*
* @param input: A NEM address
*
* @return a formatted NEM address
*/
let fmtAddress = function() {
    return function fmtAddress(input) {
        return nem.utils.format.address(input);
    };
}

/**
* Format a timestamp to NEM date
*
* @param data: A timestamp
*
* @return a date string
*/
let fmtNemDate = function() {
    return function fmtNemDate(data) {
        return nem.utils.format.nemDate(data);
    };
}

let fmtSupply = function() {
    return function fmtSupply(data, mosaicId, mosaics) {
        return nem.utils.format.supply(data, mosaicId, mosaics);
    };
}

let fmtSupplyRaw = function() {
    return function fmtSupplyRaw(data, _divisibility) {
        return nem.utils.format.supplyRaw(data, _divisibility);
    };
}

let fmtLevyFee = ['fmtSupplyFilter', function(fmtSupplyFilter) {
    return function fmtLevyFee(mosaic, multiplier, levy, mosaics) {
        return nem.utils.format.levyFee(mosaic, multiplier, levy, mosaics)
    }
}];

/**
* Format a NEM importance score
*
* @param data: The importance score
*
* @return a formatted importance score at 10^-4
*/
let fmtNemImportanceScore = function() {
    return function fmtNemImportanceScore(data) {
        return nem.utils.format.nemImportanceScore(data);
    };
}

/**
* Format a value to NEM value
*
* @return array with values before and after decimal point
*/
let fmtNemValue = function() {
    return function fmtNemValue(data) {
        return nem.utils.format.nemValue(data);
    };
}

/**
* Give name of an importance transfer mode
*
* @return an importance transfer mode name
*/
let fmtImportanceTransferMode = function() {
    return function fmtImportanceTransferMode(data) {
        return nem.utils.format.importanceTransferMode(data);
    };
}

/**
* Convert hex to utf8
*
* @param data: Hex data
*
* @return result: utf8 string
*/
let fmtHexToUtf8 = function() {
    return function fmtHexToUtf8(data) {
        return nem.utils.format.hexToUtf8(data);
    };
}

let fmtHexMessage = ['fmtHexToUtf8Filter', function(fmtHexToUtf8Filter) {
    return function fmtHexMessage(data) {
        return nem.utils.format.hexMessage(data);
    };
}];

/**
* Split hex string into 64 characters segments
*
* @param data: An hex string
*
* @return a segmented hex string
*/
let fmtSplitHex = function() {
    return function fmtSplitHex(data) {
        return nem.utils.format.splitHex(data);
    };
}

/**
* Build array of objects from object of objects
*
* @param data: An object of objects
*
* @return an array of objects
*/
let objValues = function() {
    return function objValues(data) {
        if (data === undefined) return data;
        return Object.keys(data).map(function(key) {
            return data[key];
        });
    };
}

/**
* Parse url to get only ip or domain
*
* @param uri: The uri to parse
*
* @return uri hostname
*/
let toHostname = function() {
    return function(uri) {
        let _uriParser = document.createElement('a');
        _uriParser.href = uri;
        return _uriParser.hostname;
    }
}

/**
* Helper for pagination
*
* @param input: An array
* @param start: Index where to start showing the array
*
* @return the part of the array
*/
let startFrom = function() {
    return function(input, start) {
        if (!input || !input.length) {
            return;
        }
        start = +start; //parse to int
        return input.slice(start);
    }
}

/**
* Reverse order of an array
*
* @param items: An array
*
* @return the reversed array
*/
let reverse = function() {
    return function(items) {
        if (items === undefined) {
            return ;
        } else {
            return items.slice().reverse();
        }
    };
}

let htmlSafe = function($sce) {
    console.log($sce);
    return function(htmlCode) {
        return $sce.trustAsHtml(htmlCode);
    };
}

/**
* Get network name from id
*
* @param id: The network id
*
* @return the network name
*/
let toNetworkName = function() {
    return function(id) {
        if (id === nem.model.network.data.testnet.id) {
            return 'Testnet';
        } else if (id === nem.model.network.data.mainnet.id) {
            return 'Mainnet';
        } else {
            return 'Mijin';
        }
    }
}

/**
* Set a value to common currency format
*
* @param number: The number to format
*
* @return number with following format: 0.00
*/
let currencyFormat = function() {
    return function(number) {
        if(undefined === number) {
            number = 0;
            return number.toFixed(2);
        }
        return parseFloat(number).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, '$1,');
    }
}

/**
* Set a value to btc format
*
* @param number: The number to format
*
* @return number with following format: 0.00000000 
*/
let btcFormat = function() {
    return function(number) {
        if(undefined === number) {
            number = 0;
            return number.toFixed(8);
        }
        return number.toFixed(8);
    }
}

/**
* Get a contact label by address
*
* @param {string} address - An address
* @param {object} wallet - A wallet object
*
* @return {string} - The contact label or address if not found
*/
let fmtContact = ["AddressBook", function(AddressBook) {
    return function(address, wallet) {
        if(undefined !== wallet && undefined !== address) {
            let contact = AddressBook.getContact(wallet, address);
            if(!contact) {
                return address;
            } else {
                return contact;
            }
        } else {
            return address;
        }
    }
}];

/**
* Convert nodes array into an array of endpoints
*
* @param {array} data - An array of nodes
*
* @return {array} - An array of endpoints
*/
let toEndpoint = function() {
    return function toEndpoint(data, network) {
        if (data === undefined) return data;
        let array = [];
        for (let i = 0; i < data.length; i++) {
            let host;
            let port;
            if (undefined !== data[i].uri) {
                host = data[i].uri;
                port = network === nem.model.network.data.mijin.id ? nem.model.nodes.mijinPort : nem.model.nodes.defaultPort;
            } else if (undefined !== data[i].ip) {
                host = "http://" + data[i].ip;
                port = data[i].nisPort;
            } else if (undefined !== data[i].host) {
                host = data[i].host;
                port = data[i].port;
            }

            array.push(nem.model.objects.create("endpoint")(host, port));
        }
        return array;
    }
}

module.exports = {
    toNetworkName,
    htmlSafe,
    reverse,
    startFrom,
    objValues,
    toHostname,
    fmtSplitHex,
    fmtHexMessage,
    fmtHexToUtf8,
    fmtImportanceTransferMode,
    fmtNemValue,
    fmtNemImportanceScore,
    fmtLevyFee,
    fmtSupplyRaw,
    fmtSupply,
    fmtNemDate,
    fmtPubToAddress,
    fmtAddress,
    currencyFormat,
    btcFormat,
    fmtContact,
    toEndpoint
}
'''
'''--- src/app/filters/index.js ---
import angular from 'angular';

let filtersModule = angular.module('app.filters', []);

import Filters from './filters';

filtersModule.filter('fmtAddress', Filters.fmtAddress);
filtersModule.filter('fmtPubToAddress', Filters.fmtPubToAddress);
filtersModule.filter('fmtNemDate', Filters.fmtNemDate);
filtersModule.filter('fmtSupply', Filters.fmtSupply);
filtersModule.filter('fmtSupplyRaw', Filters.fmtSupplyRaw);
filtersModule.filter('fmtLevyFee', Filters.fmtLevyFee);
filtersModule.filter('fmtNemImportanceScore', Filters.fmtNemImportanceScore);
filtersModule.filter('fmtNemValue', Filters.fmtNemValue);
filtersModule.filter('fmtImportanceTransferMode', Filters.fmtImportanceTransferMode);
filtersModule.filter('fmtHexToUtf8', Filters.fmtHexToUtf8);
filtersModule.filter('fmtHexMessage', Filters.fmtHexMessage);
filtersModule.filter('fmtSplitHex', Filters.fmtSplitHex);
filtersModule.filter('objValues', Filters.objValues);
filtersModule.filter('startFrom', Filters.startFrom);
filtersModule.filter('startFromUnc', Filters.startFromUnc);
filtersModule.filter('reverse', Filters.reverse);
filtersModule.filter('htmlSafe', Filters.htmlSafe);
filtersModule.filter('toNetworkName', Filters.toNetworkName);
filtersModule.filter('toHostname', Filters.toHostname);
filtersModule.filter('currencyFormat', Filters.currencyFormat);
filtersModule.filter('btcFormat', Filters.btcFormat);
filtersModule.filter('fmtContact', Filters.fmtContact);
filtersModule.filter('toEndpoint', Filters.toEndpoint);

export default filtersModule;

'''
'''--- src/app/layout/app-view.html ---
<app-header></app-header>

<div ui-view></div>

<app-footer></app-footer>

'''
'''--- src/app/layout/footer.component.js ---
class AppFooterCtrl {
    constructor(AppConstants, $localStorage, $filter, Alert) {
        'ngInject';

        // Application constants
        this._AppConstants = AppConstants;
        this._storage = $localStorage;
        this._$filter = $filter;
        this._Alert = Alert;
    }

    /**
     * Reset data from localstorage
     */
    purge() {
        this._storage.wallets = [];
        this._Alert.successPurge();
    }
}

// Footer config
let AppFooter = {
    controller: AppFooterCtrl,
    templateUrl: 'layout/footer.html'
};

export default AppFooter;
'''
'''--- src/app/layout/footer.html ---
<footer>
  <div class="container-fluid">
    <div class="col-lg-6 col-sm-6">
      {{ 'FOOTER_POWERED_BY_1' | translate }} <b>{{ 'FOOTER_POWERED_BY_2' | translate }}</b>
    </div>
    <div class="col-lg-6 col-sm-6">
    	{{ 'FOOTER_VERSION' | translate }}: <b>{{ $ctrl._AppConstants.version }}</b>
    	<span style="color:red;margin-left:20px;cursor:pointer;" ng-if="$ctrl._storage.wallets.length" data-toggle="modal" data-target="#purgeModal" show-authed="false">
		  <i class="fa fa-trash"></i>
		</span>
  	</div>
  </div>
</footer>

<!-- Modal -->
<div class="modal fade" id="purgeModal" tabindex="-1" role="dialog">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close" ng-click="$ctrl._Alert.purgeCancelled();"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title"><i class="fa fa-exclamation-triangle"></i> {{ 'HEADER_PURGE' | translate }}</h4>
      </div>
      <div class="modal-body">
        <p class="bg-danger">{{ 'HEADER_PURGE_MESSAGE' | translate }}</p>
        <br>
        <button class="btn btn-primary" ng-click="$ctrl.purge()" data-dismiss="modal" style="width:100%;">{{ 'HEADER_PURGE' | translate }}</button>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal" ng-click="$ctrl._Alert.purgeCancelled();">{{ 'GENERAL_CLOSE' | translate }}</button>
      </div>
    </div>
  </div>
</div>
'''
'''--- src/app/layout/header.component.js ---
import Languages from '../utils/languages';

class AppHeaderCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Alert, $localStorage, $translate, Wallet, $location, DataBridge, DataStore) {
        'ngInject';

        //// Module dependencies region ////

        this._storage = $localStorage;
        this._Alert = Alert;
        this._$translate = $translate;
        this._Wallet = Wallet;
        this._DataBridge = DataBridge;
        this._$location = $location;
        this._DataStore = DataStore;

        //// End dependencies region ////

        //// Module properties region ////

        // Available languages
        this.languages = Languages.data;

        //// End properties region ////

        /**
         * Fix dropdown closing if click on select
         */
        $(document).on('click', '.navbar .container-fluid li .dropdown-menu', function(e) {
            e.stopPropagation();
        });

    }

    //// Module methods region ////

    /**
     * Delete current wallet stored in Wallet service and redirect to home logged out
     */
    logout() {
        // Redirect to home
        this._$location.path('/');
        // Close connector
        this._DataBridge.connector.close();
        // Set connection status to false
        this._DataStore.connection.status = false;
        // Show success alert
        this._Alert.successLogout();
        // Reset data in DataBridge service
        this._DataBridge.reset();
        // Reset data in Wallet service
        this._Wallet.reset();
        return;
    }

    /**
     * Change language
     *
     * @param {string} key - The language key
     */
    changeLanguage(key) {
        this._$translate.use(key.toString());
        this._storage.lang = key.toString();
        return;
    };

    //// End methods region ////

}

// Header config
let AppHeader = {
    controller: AppHeaderCtrl,
    templateUrl: 'layout/header.html'
};

export default AppHeader;
'''
'''--- src/app/layout/header.html ---
<nav class="navbar navbar-default">
  <div class="container-fluid">
    <!-- Brand and toggle get grouped for better mobile display -->
    <div class="navbar-header">
      <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
        <span class="sr-only">Toggle navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <a class="navbar-brand" ui-sref="app.home">
        <span>{{ 'WALLET_NAME_1' | translate }}</span>
        <span class="hue brand-name-2">{{ 'WALLET_NAME_2' | translate }}</span>
      </a>
    </div>

    <!-- Collect the nav links, forms, and other content for toggling -->
    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
      <ul class="nav navbar-nav" ng-show="$ctrl._DataStore.account.metaData.account">
        <li>
          <a style="outline:0;" ui-sref-active="active" ui-sref="app.dashboard" show-authed="true">
            <i class="fa fa-home"></i> {{ 'HEADER_DASHBOARD' | translate }}
          </a>
        </li>
        <li>
          <a style="outline:0;" ui-sref-active="active" ui-sref="app.transferTransaction" show-authed="true">
            <i class="fa fa-send"></i> {{ 'GENERAL_SEND' | translate }}
          </a>
        </li>
        <li>
          <a style="outline:0;" ui-sref-active="active" ui-sref="app.portal" show-authed="true">
            <i class="fa fa-wrench"></i> {{ 'HEADER_SERVICES' | translate }}
          </a>
        </li>
        <li>
          <a style="outline:0;" ui-sref-active="active" ui-sref="app.explorerHome" show-authed="true">
            <i class="fa fa-globe"></i> {{ 'HEADER_EXPLORER' | translate }}
          </a>
        </li>
        <balance class="nav navbar-nav"></balance>
        <!--<li class="address" style="border-left:none;">
          <a style="outline:0;font-size:85%;cursor:pointer;" show-authed="true" ui-sref-active="active" ui-sref="app.account" >
            <b>{{ $ctrl._Wallet.currentAccount.address | fmtAddress }}</b>
          </a>
        </li>-->
      </ul>
      <ul class="nav navbar-nav" show-authed="false">
        <li>
          <a style="outline:0;" ui-sref-active="active" ui-sref="app.offlineTransactionCreate">
            <i class="fa fa-lock"></i> {{ 'HEADER_OFFLINE_TX' | translate }}
          </a>
        </li>
        <li>
          <a style="outline:0;" ui-sref-active="active" ui-sref="app.offlineTransactionSend">
            <i class="fa fa-globe"></i> {{ 'HEADER_RELEASE_TX' | translate }}
          </a>
        </li> 
      </ul>
      <ul class="nav navbar-nav navbar-right">
        <li>
          <a class="login" ui-sref-active="active" ui-sref="app.login" show-authed="false">
            <small><b>{{ 'HEADER_LOGIN_BUTTON' | translate }}</b></small>
          </a>
        </li>
        <li>
          <a style="outline:0;text-transform: uppercase;" ui-sref-active="active" ui-sref="app.signup" show-authed="false">
            <small><b>{{ 'HEADER_SIGNUP_BUTTON' | translate }}</b></small>
          </a>
        </li>
        <li class="node" style="cursor:pointer;">
          <a data-toggle="modal" data-target=".nodes" aria-haspopup="true" aria-expanded="false" show-authed="true">
            <i class="fa fa-circle" ng-style="$ctrl._DataStore.connection.status ? {'color': '#00b300'} : {'color': 'red'}"></i> {{ 'HEADER_NODE' | translate }}
          </a>
        </li>
        <li class="account" ng-show="$ctrl._DataStore.account.metaData.account">
          <a ui-sref-active="active" ui-sref="app.account" show-authed="true">
            {{ 'HEADER_ACCOUNT' | translate }}
          </a>
        </li>
        <li class="account2" ng-show="$ctrl._Wallet.currentAccount.label">
          <a>: {{ $ctrl._Wallet.currentAccount.label }}</a>
        </li>
        <li style="display:none">
          <a style="outline:0;cursor:default;" show-authed="true" show-block-height></a>
        </li>
        <li class="dropdown">
          <a class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">{{ 'HEADER_LANG_TITLE' | translate }}</a>
          <ul class="dropdown-menu">
            <li>
              <select class="form-control" ng-model="$ctrl.lang.name" ng-change="$ctrl.changeLanguage($ctrl.lang.name)" ng-options="lang.key as lang.name for lang in $ctrl.languages">
                <option value="" disabled selected>{{ 'HEADER_LANG_SELECT' | translate }}</option>
              </select>
            </li>
          </ul>
        </li>
        <li><a style="outline:0;border-left:medium none;" ui-sref-active="active" ui-sref="app.faq"><i class="fa fa-question-circle"></i></a></li>
        <li>
          <a style="outline:0;cursor:pointer;border-right:none;" show-authed="true" ng-click="$ctrl.logout()">
            <i class="fa fa-sign-out"></i> <small><b>{{$ctrl._Wallet.current.name}}</small></b>
          </a>
        </li>
      </ul>
    </div><!-- /.navbar-collapse -->
  </div><!-- /.container-fluid -->
</nav>

<!-- NODE MODAL -->
<node><node>

'''
'''--- src/app/layout/index.js ---
import angular from 'angular';

// Create the module where our functionality can attach to
let layoutModule = angular.module('app.layout', []);

// Set header component
import AppHeader from './header.component';
layoutModule.component('appHeader', AppHeader);

// Set footer componennt
import AppFooter from './footer.component';
layoutModule.component('appFooter', AppFooter);

export default layoutModule;

'''
'''--- src/app/layout/lines/lineImportanceTransfer.html ---
<table id="txTable" class="table table-bordered table-hover" title="{{ 'IMPORTANCE_TRANSFER_NAME' | translate }}" style="cursor:pointer;outline:0;margin-bottom:0;table-layout:fixed">
    <tbody style="outline:0;">
        <tr data-toggle="collapse" data-target="#importanceTx{{number}}" style="outline:0">
            <td class="importanceTx" style="overflow:hidden;text-overflow: ellipsis;"><tt><span class="fa fa-chain text-danger" ng-show="!parent"></span> <span class="fa fa-chain text-danger" ng-show="parent"></span> {{ 'IMPORTANCE_TRANSFER_NAME' | translate }}</tt></td>
            <td class="amountTx">
                <span ng-show="!parent">
                    <span style="color:red">-</span> <strong>{{((tx.fee) | fmtNemValue)[0]}}</strong>.<span class="text-muted">{{((tx.fee) | fmtNemValue)[1]}}</span> XEM
                </span>
                <span ng-show="parent">
                    <span style="color:red">-</span> <strong>{{((tx.fee + ((parent.signatures.length + 1) * parent.fee)) | fmtNemValue)[0]}}</strong>.<span class="text-muted">{{((tx.fee+ ((parent.signatures.length + 1) * parent.fee)) | fmtNemValue)[1]}}</span> XEM
                </span>
                <div ng-show="needsSignature">
                    <span style="color:red">{{ 'LINE_TX_DETAILS_NEED_SIG_2' | translate }}</span>
                </div>
            </td>
            <td class="messageTx"></td>
            <td>{{tx.timeStamp | fmtNemDate}}</td>
        </tr>
    </tbody>
</table>

<div id="importanceTx{{number}}" class="collapse">
    <div class="accordion-inner" style="word-break: break-all;padding-left: 8px; background-color: #e3e0cf;">

        <div class="row">
            <div class="col-sm-12">
                <strong>
                    <span ng-show="!parent">{{ 'IMPORTANCE_TRANSFER_NAME' | translate }}</span>
                    <span ng-show="parent">{{ 'IMPORTANCE_TRANSFER_MULTISIG_NAME' | translate }}</span>
                </strong>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-12">
                <hr style="border-style: dashed;margin:5px;" />
            </div>
        </div>

        <div ng-show="parent">

                    <div class="row">
                        <div class="col-sm-3"><b>{{ 'GENERAL_MULTISIG_ACCOUNT' | translate }}</b></div>
                        <div class="col-sm-9">
                            <tt>{{ getContact(tx.signer | fmtPubToAddress:networkId | fmtAddress) || (tx.signer | fmtPubToAddress:networkId | fmtAddress) }}</tt>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-3"><b>{{ 'LINE_TX_DETAILS_ISSUER' | translate }}</b></div>
                        <div class="col-sm-9">
                            <tt>{{ getContact(parent.signer | fmtPubToAddress:networkId | fmtAddress) || (parent.signer | fmtPubToAddress:networkId | fmtAddress) }}</tt>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-12">
                            <hr style="border-style: dashed;margin:5px;" />
                        </div>
                    </div>

                </div>

            <div class="row">
                <div class="col-sm-3"><b>{{ 'GENERAL_FEE' | translate }}</b></div>
                <div class="col-sm-9">{{(tx.fee | fmtNemValue)[0]}}.<span class="text-muted">{{(tx.fee | fmtNemValue)[1]}}</span> XEM</div>
            </div>

            <div class="row" ng-show="parent">
                    <div class="col-sm-3"><b>{{ 'LINE_TX_DETAILS_MULTISIG_FEE' | translate }}</b></div>
                    <div class="col-sm-9" ng-show="!parent.signature.length">{{(parent.fee | fmtNemValue)[0]}}.<span class="text-muted">{{(parent.fee | fmtNemValue)[1]}}</span> XEM</div>
                    <div class="col-sm-9" ng-show="parent.signature.length">{{(((parent.signatures.length + 1) * parent.fee) | fmtNemValue)[0]}}.<span class="text-muted">{{(((parent.signatures.length + 1) * parent.fee) | fmtNemValue)[1]}}</span> XEM</div>
                </div>

            <div class="row">
                <div class="col-sm-12">
                    <hr style="border-style: dashed;margin:5px;" />
                </div>
            </div>

            <div class="row">
                <div class="col-sm-3"><b>{{ 'IMPORTANCE_TRANSFER_REMOTE_ACCOUNT' | translate }}</b></div>
                <div class="col-sm-9">{{tx.remoteAccount | fmtPubToAddress:networkId | fmtAddress}}</div>
            </div>

            <div class="row">
                <div class="col-sm-3"><b>{{ 'IMPORTANCE_TRANSFER_MODE' | translate }}</b></div>
                <div class="col-sm-9">{{tx.mode | fmtImportanceTransferMode}}</div>
            </div>

            <div class="row" ng-show="parent.signatures.length">

                <div class="col-sm-12">
                    <hr style="border-style: dashed;margin:5px;" />
                </div>

                <div class="col-sm-12" >
                    <strong>{{ 'LINE_TX_DETAILS_SIGNATURES' | translate }}: </strong>
                </div>
            </div>

            <div ng-repeat="sig in parent.signatures">
                <div class="row">
                    <div class="col-sm-1">&nbsp;</div>
                    <div class="col-sm-3"><b>{{ 'LINE_TX_DETAILS_COSIGNATORY' | translate }}</b></div>
                    <div class="col-sm-8">{{ getContact(sig.signer | fmtPubToAddress:networkId | fmtAddress) || (sig.signer | fmtPubToAddress:networkId | fmtAddress) }}</div>
                </div>
                <div class="row">
                    <div class="col-sm-1">&nbsp;</div>
                    <div class="col-sm-3"><b>{{ 'LINE_TX_DETAILS_TIMESTAMP' | translate }}</b></div>
                    <div class="col-sm-8">{{sig.timeStamp | fmtNemDate}}</div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-12">
                    <hr style="border-style: dashed;margin:5px;" />
                </div>
            </div>

            <div class="row">
                <div class="col-sm-3"><b>{{ 'GENERAL_BLOCK' | translate }}</b></div>
                <div class="col-sm-9">
                    <span ng-show="{{meta.height}} !== 9007199254740991">{{meta.height}}</span>
                    <span ng-show="{{meta.height}} === 9007199254740991">{{ 'LINE_TX_DETAILS_WAITING' | translate }}
                        <span ng-if="parent">- {{ 'LINE_TX_DETAILS_NEED_SIG' | translate }}</span></span>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-3">
                    <b>{{ 'LINE_TX_DETAILS_HASH' | translate }}</b>
                </div>
                <div class="col-sm-9">
                    <span ng-show="parent"> {{meta.innerHash.data}} </span>
                    <span ng-show="!parent"> {{meta.hash.data}} </span>
                </div>
            </div>

            <div class="row" ng-show="parent">
                <div class="col-sm-3"><b>{{ 'LINE_TX_DETAILS_MULTISIG_HASH' | translate }}</b></div>
                <div class="col-sm-9"><tt>{{meta.hash.data}}</tt></div>
            </div>
    </div>

    <sign-transaction tx="tx" parent-tx="parent" meta="meta" needs-signature="needsSignature"></sign-transaction>

</div>

'''
'''--- src/app/layout/lines/lineMosaicDefinition.html ---
<table id="MSTable" class="table table-bordered table-hover" title="{{ 'MOSAIC_DEFINITION_NAME' | translate }}" style="cursor:pointer;outline:0;margin-bottom:0;table-layout:fixed">
    <tbody style="outline:0;" class="text-center">
        <tr data-toggle="collapse" data-target="#MStable{{number}}">
            <td class="mosaicTx" style="overflow:hidden;text-overflow: ellipsis;"><span class="fa fa-th text-danger" ng-show="!parent"></span> <span class="fa fa-group text-danger" ng-show="parent"></span> <tt>{{ 'LINE_TX_DETAILS_MOS_CREATE' | translate }} "<span class="text-muted">{{tx.mosaicDefinition.id.namespaceId}}</span>:<strong>{{tx.mosaicDefinition.id.name}}</strong>"</tt></td>
            <td class="amountTx">
                <span ng-show="!parent">
                    <span style="color:red">-</span> <strong>{{((tx.creationFee+tx.fee) | fmtNemValue)[0]}}</strong>.<span class="text-muted">{{((tx.creationFee+tx.fee) | fmtNemValue)[1]}}</span> XEM
                </span>
                <span ng-show="parent">
                    <span style="color:red">-</span> <strong>{{((tx.creationFee+tx.fee+((parent.signatures.length + 1) * parent.fee)) | fmtNemValue)[0]}}</strong>.<span class="text-muted">{{((tx.creationFee+tx.fee+((parent.signatures.length + 1) * parent.fee)) | fmtNemValue)[1]}}</span> XEM
                </span>
                <div ng-show="needsSignature">
                    <span style="color:red">{{ 'LINE_TX_DETAILS_NEED_SIG_2' | translate }}</span>
                </div>
            </td>
            <td class="messageTx"></td>
            <td>{{tx.timeStamp | fmtNemDate}}</td>
        </tr>
    </tbody>
</table>

<div id="MStable{{number}}" class="collapse">
    <div class="accordion-inner" style="padding-left: 8px; background-color: #e3e0cf;">
        <div class="row">
            <div class="col-sm-12">
                <strong>
                    <span ng-show="!parent">{{ 'MOSAIC_DEFINITION_NAME' | translate }}</span>
                    <span ng-show="parent">{{ 'MOSAIC_DEFINITION_MULTISIG_NAME' | translate }}</span>
                </strong>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <hr style="border-style: dashed;margin:5px;" />
            </div>
        </div>

         <div ng-show="parent">

                    <div class="row">
                        <div class="col-sm-3"><b>{{ 'GENERAL_MULTISIG_ACCOUNT' | translate }}</b></div>
                        <div class="col-sm-9">
                            <tt>{{ getContact(tx.signer | fmtPubToAddress:networkId | fmtAddress) || (tx.signer | fmtPubToAddress:networkId | fmtAddress) }}</tt>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-3"><b>{{ 'LINE_TX_DETAILS_ISSUER' | translate }}</b></div>
                        <div class="col-sm-9">
                            <tt>{{ getContact(parent.signer | fmtPubToAddress:networkId | fmtAddress) || (parent.signer | fmtPubToAddress:networkId | fmtAddress) }}</tt>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-12">
                            <hr style="border-style: dashed;margin:5px;" />
                        </div>
                    </div>

                </div>

        <div class="row">
            <div class="col-sm-3"><b>{{ 'GENERAL_AMOUNT' | translate }}</b></div>
            <div class="col-sm-9">
                <strong>{{(tx.creationFee | fmtNemValue)[0]}}</strong>.<span class="text-muted">{{(tx.creationFee | fmtNemValue)[1]}}</span> XEM
            </div>
        </div>
        <div class="row">
            <div class="col-sm-3"><b>{{ 'GENERAL_FEE' | translate }}</b></div>
            <div class="col-sm-9">
                {{(tx.fee | fmtNemValue)[0]}}.<span class="text-muted">{{(tx.fee | fmtNemValue)[1]}} </span> XEM
            </div>
        </div>
        <div class="row" ng-show="parent">
                <div class="col-sm-3"><b>{{ 'LINE_TX_DETAILS_MULTISIG_FEE' | translate }}</b></div>
                <div class="col-sm-9" ng-show="!parent.signature.length">{{(parent.fee | fmtNemValue)[0]}}.<span class="text-muted">{{(parent.fee | fmtNemValue)[1]}}</span> XEM</div>
                <div class="col-sm-9" ng-show="parent.signature.length">{{(((parent.signatures.length + 1) * parent.fee) | fmtNemValue)[0]}}.<span class="text-muted">{{(((parent.signatures.length + 1) * parent.fee) | fmtNemValue)[1]}}</span> XEM</div>
            </div>

        <div class="row">
            <div class="col-sm-12">
                <hr style="border-style: dashed;margin:5px;" />
            </div>
        </div>
        <div class="row">
            <div class="col-sm-3"><b>{{ 'MOSAIC_DEFINITION_PROPERTIES' | translate }}:</b></div>
            <div class="col-sm-9"></div>
        </div>
        <div class="row">
            <div class="col-sm-1">&nbsp;</div>
            <div class="col-sm-2"><b>{{ 'GENERAL_NAME' | translate }}</b></div>
            <div class="col-sm-9">
               <span class="text-muted">{{tx.mosaicDefinition.id.namespaceId}}</span>:{{tx.mosaicDefinition.id.name}}
            </div>
        </div>
        <div class="row">
            <div class="col-sm-1">&nbsp;</div>
            <div class="col-sm-2"><b>{{ 'MOSAIC_DEFINITION_DESCRPITION' | translate }}</b></div>
            <div class="col-sm-9" style="word-wrap: break-word;">
               <span ng-bind="tx.mosaicDefinition.description"></span>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-1">&nbsp;</div>
            <div class="col-sm-2"><b>{{ 'MOSAIC_DEFINITION_INITIAL_SUPPLY' | translate }}</b></div>
            <div class="col-sm-9">
               {{tx.mosaicDefinition.properties[1].value}}
            </div>
        </div>
        <div class="row">
            <div class="col-sm-1">&nbsp;</div>
            <div class="col-sm-2"><b>{{ 'MOSAIC_DEFINITION_DIV' | translate }}</b></div>
            <div class="col-sm-9">
               {{tx.mosaicDefinition.properties[0].value}}
            </div>
        </div>
        <div class="row">
            <div class="col-sm-1">&nbsp;</div>
            <div class="col-sm-2"><b>{{ 'MOSAIC_DEFINITION_MUTABLE_SUPPLY' | translate }}</b></div>
            <div class="col-sm-9">
               {{tx.mosaicDefinition.properties[2].value}}
            </div>
        </div>
        <div class="row">
            <div class="col-sm-1">&nbsp;</div>
            <div class="col-sm-2"><b>{{ 'MOSAIC_DEFINITION_TRANSFERABLE' | translate }}</b></div>
            <div class="col-sm-9">
               {{tx.mosaicDefinition.properties[3].value}}
            </div>
        </div>

        <div ng-show="tx.mosaicDefinition.levy.type">

            <div class="row">
                <div class="col-sm-12">
                    <hr style="border-style: dashed;margin:5px;" />
                </div>
            </div>

            <div class="row">
                <div class="col-sm-3"><b>{{ 'GENERAL_LEVY' | translate }}:</b></div>
                <div class="col-sm-9"></div>
            </div>

            <div class="row">
                <div class="col-sm-1">&nbsp;</div>
                <div class="col-sm-2"><b>{{ 'MOSAIC_DEFINITION_LEVY_FEE_TYPE' | translate }}</b></div>
                <div class="col-sm-9">
                   <span ng-show="tx.mosaicDefinition.levy.type === 1">{{ 'MOSAIC_DEFINITION_LEVY_FEE_TYPE_1' | translate }}</span>
                   <span ng-show="tx.mosaicDefinition.levy.type === 2">{{ 'MOSAIC_DEFINITION_LEVY_FEE_TYPE_2' | translate }}</span>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-1">&nbsp;</div>
                <div class="col-sm-2"><b>{{ 'GENERAL_MOSAIC' | translate }}</b></div>
                <div class="col-sm-9">
                   <span class="text-muted">{{tx.mosaicDefinition.levy.mosaicId.namespaceId}}</span>:{{tx.mosaicDefinition.levy.mosaicId.name}}
                </div>
            </div>

            <div class="row">
                <div class="col-sm-1">&nbsp;</div>
                <div class="col-sm-2"><b>{{ 'GENERAL_FEE' | translate }}</b></div>
                <div class="col-sm-9">
                   <span>{{tx.mosaicDefinition.levy.fee}}</span>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-1">&nbsp;</div>
                <div class="col-sm-2"><b>{{ 'LINE_TX_DETAILS_RECIPIENT' | translate }}</b></div>
                <div class="col-sm-9">
                   <span>{{tx.mosaicDefinition.levy.recipient}}</span>
                </div>
            </div>

        </div>

        <div class="row" ng-show="parent.signatures.length">

                <div class="col-sm-12">
                    <hr style="border-style: dashed;margin:5px;" />
                </div>

                <div class="col-sm-12" >
                    <strong>{{ 'LINE_TX_DETAILS_SIGNATURES' | translate }}: </strong>
                </div>
            </div>

            <div ng-repeat="sig in parent.signatures">
                <div class="row">
                    <div class="col-sm-1">&nbsp;</div>
                    <div class="col-sm-3"><b>{{ 'LINE_TX_DETAILS_COSIGNATORY' | translate }}</b></div>
                    <div class="col-sm-8">{{ getContact(sig.signer | fmtPubToAddress:networkId | fmtAddress) || (sig.signer | fmtPubToAddress:networkId | fmtAddress) }}</div>
                </div>
                <div class="row">
                    <div class="col-sm-1">&nbsp;</div>
                    <div class="col-sm-3"><b>{{ 'LINE_TX_DETAILS_TIMESTAMP' | translate }}</b></div>
                    <div class="col-sm-8">{{sig.timeStamp | fmtNemDate}}</div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-12">
                    <hr style="border-style: dashed;margin:5px;" />
                </div>
            </div>

        <div class="row">
            <div class="col-sm-3"><b>{{ 'GENERAL_BLOCK' | translate }}</b></div>
            <div class="col-sm-9">
                <span ng-show="{{meta.height}} !== 9007199254740991">{{meta.height}}</span>
                <span ng-show="{{meta.height}} === 9007199254740991">{{ 'LINE_TX_DETAILS_WAITING' | translate }} <span ng-show="parent">- {{ 'LINE_TX_DETAILS_NEED_SIG' | translate }}</span></span>
            </div>
        </div>
        <div class="row">
                <div class="col-sm-3">
                    <b>{{ 'LINE_TX_DETAILS_HASH' | translate }}</b>
                </div>
                <div class="col-sm-9">
                    <span ng-show="parent"> {{meta.innerHash.data}} </span>
                    <span ng-show="!parent"> {{meta.hash.data}} </span>
                </div>
            </div>

            <div class="row" ng-show="parent">
                <div class="col-sm-3"><b>{{ 'LINE_TX_DETAILS_MULTISIG_HASH' | translate }}</b></div>
                <div class="col-sm-9"><tt>{{meta.hash.data}}</tt></div>
            </div>
    </div>

    <sign-transaction tx="tx" parent-tx="parent" meta="meta" needs-signature="needsSignature"></sign-transaction>

</div>

'''
'''--- src/app/layout/lines/lineMosaicSupply.html ---
<table id="MDSTable" class="table table-bordered table-hover" title="{{ 'MOSAIC_SUPPLY_CHANGE_NAME' | translate }}" style="cursor:pointer;outline:0;margin-bottom:0;table-layout:fixed">
    <tbody style="outline:0;" class="text-center">
        <tr data-toggle="collapse" data-target="#MDStable{{number}}">
            <td class="sentTx" style="overflow:hidden;text-overflow: ellipsis;"><span class="fa fa-th-large text-danger" ng-show="!parent"></span> <span class="fa fa-group text-danger" ng-show="parent"></span> <tt>{{ 'LINE_TX_DETAILS_MOS_EDIT' | translate }} <span class="text-muted">{{tx.mosaicId.namespaceId}}</span>:<strong>{{tx.mosaicId.name}}</strong>"</tt></td>
            <td class="mosaicChange">
                <span ng-show="!parent">
                    <span style="color:red">-</span> <strong>{{((tx.fee) | fmtNemValue)[0]}}</strong>.<span class="text-muted">{{((tx.fee) | fmtNemValue)[1]}}</span> XEM
                </span>
                <span ng-show="parent">
                    <span style="color:red">-</span>
                    <span ng-show="parent.signatures.length">
                        <strong>{{((tx.fee+((parent.signatures.length + 1) * parent.fee)) | fmtNemValue)[0]}}</strong>.<span class="text-muted">{{((tx.fee+((parent.signatures.length + 1) * parent.fee)) | fmtNemValue)[1]}}</span>
                    </span>
                    <span ng-show="!parent.signatures.length">
                        <strong>{{((tx.fee+parent.fee) | fmtNemValue)[0]}}</strong>.<span class="text-muted">{{((tx.fee+parent.fee) | fmtNemValue)[1]}}</span>
                    </span>
                </span>
                <div ng-show="needsSignature">
                    <span style="color:red">{{ 'LINE_TX_DETAILS_NEED_SIG_2' | translate }}</span>
                </div>
            </td>
            <td class="messageTx"></td>
            <td>{{tx.timeStamp | fmtNemDate}}</td>
        </tr>
        </tody>
</table>

<div id="MDStable{{number}}" class="collapse">
    <div class="accordion-inner" style="padding-left: 8px; background-color: #e3e0cf;">

        <div class="row">
            <div class="col-sm-12">
                <strong>
                    <span ng-show="!parent">{{ 'MOSAIC_SUPPLY_CHANGE_NAME' | translate }}</span>
                    <span ng-show="parent">{{ 'MOSAIC_SUPPLY_CHANGE_MULTISIG_NAME' | translate }}</span>
                </strong>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <hr style="border-style: dashed;margin:5px;" />
            </div>
        </div>

        <div ng-show="parent">

                    <div class="row">
                        <div class="col-sm-3"><b>{{ 'GENERAL_MULTISIG_ACCOUNT' | translate }}</b></div>
                        <div class="col-sm-9">
                            <tt>{{ getContact(tx.signer | fmtPubToAddress:networkId | fmtAddress) || (tx.signer | fmtPubToAddress:networkId | fmtAddress) }}</tt>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-3"><b>{{ 'LINE_TX_DETAILS_ISSUER' | translate }}</b></div>
                        <div class="col-sm-9">
                            <tt>{{ getContact(parent.signer | fmtPubToAddress:networkId | fmtAddress) || (parent.signer | fmtPubToAddress:networkId | fmtAddress) }}</tt>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-12">
                            <hr style="border-style: dashed;margin:5px;" />
                        </div>
                    </div>

                </div>

        <div class="row">
            <div class="col-sm-3"><b>{{ 'GENERAL_FEE' | translate }}</b></div>
            <div class="col-sm-9">
                {{(tx.fee | fmtNemValue)[0]}}.<span class="text-muted">{{(tx.fee | fmtNemValue)[1]}}</span> XEM
            </div>
        </div>

        <div class="row" ng-show="parent">
                <div class="col-sm-3"><b>{{ 'LINE_TX_DETAILS_MULTISIG_FEE' | translate }}</b></div>
                <div class="col-sm-9" ng-show="!parent.signature.length">{{(parent.fee | fmtNemValue)[0]}}.<span class="text-muted">{{(parent.fee | fmtNemValue)[1]}}</span> XEM</div>
                <div class="col-sm-9" ng-show="parent.signature.length">{{(((parent.signatures.length + 1) * parent.fee) | fmtNemValue)[0]}}.<span class="text-muted">{{(((parent.signatures.length + 1) * parent.fee) | fmtNemValue)[1]}}</span> XEM</div>
            </div>

        <div class="row">
            <div class="col-sm-12">
                <hr style="border-style: dashed;margin:5px;" />
            </div>
        </div>

        <div class="row">
            <div class="col-sm-3"><b>{{ 'GENERAL_NAME' | translate }}</b></div>
            <div class="col-sm-9">
               <span class="text-muted">{{tx.mosaicId.namespaceId}}</span>:{{tx.mosaicId.name}}
            </div>
        </div>

        <div class="row">
            <div class="col-sm-3"><b>{{ 'MOSAIC_SUPPLY_CHANGE_TYPE' | translate }}</b></div>
            <div class="col-sm-9">
                <span ng-show="tx.supplyType === 1">{{ 'MOSAIC_SUPPLY_CHANGE_TYPE_1' | translate }}</span>
                <span ng-show="tx.supplyType === 2">{{ 'MOSAIC_SUPPLY_CHANGE_TYPE_2' | translate }}</span>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-3"><b>{{ 'MOSAIC_SUPPLY_CHANGE_AMOUNT' | translate }}</b></div>
            <div class="col-sm-9">
               {{tx.delta}}
            </div>
        </div>

        <div class="row" ng-show="parent.signatures.length">

                <div class="col-sm-12">
                    <hr style="border-style: dashed;margin:5px;" />
                </div>

                <div class="col-sm-12" >
                    <strong>{{ 'LINE_TX_DETAILS_SIGNATURES' | translate }}: </strong>
                </div>
            </div>

            <div ng-repeat="sig in parent.signatures">
                <div class="row">
                    <div class="col-sm-1">&nbsp;</div>
                    <div class="col-sm-3"><b>{{ 'LINE_TX_DETAILS_COSIGNATORY' | translate }}</b></div>
                    <div class="col-sm-8">{{ getContact(sig.signer | fmtPubToAddress:networkId | fmtAddress) || (sig.signer | fmtPubToAddress:networkId | fmtAddress) }}</div>
                </div>
                <div class="row">
                    <div class="col-sm-1">&nbsp;</div>
                    <div class="col-sm-3"><b>{{ 'LINE_TX_DETAILS_TIMESTAMP' | translate }}</b></div>
                    <div class="col-sm-8">{{sig.timeStamp | fmtNemDate}}</div>
                </div>
            </div>

        <div class="row">
            <div class="col-sm-12">
                <hr style="border-style: dashed;margin:5px;" />
            </div>
        </div>

        <div class="row">
            <div class="col-sm-3"><b>{{ 'GENERAL_BLOCK' | translate }}</b></div>
            <div class="col-sm-9">
                <span ng-show="{{meta.height}} !== 9007199254740991">{{meta.height}}</span>
                <span ng-show="{{meta.height}} === 9007199254740991">{{ 'LINE_TX_DETAILS_WAITING' | translate }} <span ng-show="parent">- {{ 'LINE_TX_DETAILS_NEED_SIG' | translate }}</span></span>
            </div>
        </div>

        <div class="row">
                <div class="col-sm-3">
                    <b>{{ 'LINE_TX_DETAILS_HASH' | translate }}</b>
                </div>
                <div class="col-sm-9">
                    <span ng-show="parent"> {{meta.innerHash.data}} </span>
                    <span ng-show="!parent"> {{meta.hash.data}} </span>
                </div>
            </div>

            <div class="row" ng-show="parent">
                <div class="col-sm-3"><b>{{ 'LINE_TX_DETAILS_MULTISIG_HASH' | translate }}</b></div>
                <div class="col-sm-9"><tt>{{meta.hash.data}}</tt></div>
            </div>

    </div>

    <sign-transaction tx="tx" parent-tx="parent" meta="meta" needs-signature="needsSignature"></sign-transaction>

</div>

'''
'''--- src/app/layout/lines/lineMultisigModification.html ---
<table id="MSMTable" class="table table-bordered table-hover" title="{{ 'AGGREGATE_MODIFICATION_NAME' | translate }}" style="cursor:pointer;outline:0;margin-bottom:0;table-layout:fixed">
    <tbody style="outline:0;" class="text-center">
        <tr data-toggle="collapse" data-target="#MSMtable{{number}}">
            <td class="multisigTx">
                <span class="fa fa-user-times text-danger" ng-show="(tx.signer | fmtPubToAddress:networkId) === mainAccount"></span>
                <span class="fa fa-user-plus text-success" ng-show="(tx.signer | fmtPubToAddress:networkId) !== mainAccount"></span>
                 <tt>
                    <span ng-show="!parent">{{ 'LINE_TX_DETAILS_MULTISIG_CREATE' | translate }}</span>
                    <span ng-show="parent">{{ 'LINE_TX_DETAILS_MULTISIG_EDIT' | translate }}</span>
                </tt>
            </td>
            <td class="amountTx">
                <span ng-show="!parent">
                    <span style="color:red">-</span> <strong>{{((tx.fee) | fmtNemValue)[0]}}</strong>.<span class="text-muted">{{((tx.fee) | fmtNemValue)[1]}}</span> XEM
                </span>
                <span ng-show="parent">
                    <span style="color:red">-</span>
                    <span ng-show="parent.signatures.length">
                        <strong>{{((tx.fee+((parent.signatures.length + 1) * parent.fee)) | fmtNemValue)[0]}}</strong>.<span class="text-muted">{{((tx.fee+((parent.signatures.length + 1) * parent.fee)) | fmtNemValue)[1]}}</span>
                    </span>
                    <span ng-show="!parent.signatures.length">
                        <strong>{{((tx.fee+parent.fee) | fmtNemValue)[0]}}</strong>.<span class="text-muted">{{((tx.fee+parent.fee) | fmtNemValue)[1]}}</span>
                    </span>
                </span>
                <div ng-show="needsSignature">
                    <span style="color:red">{{ 'LINE_TX_DETAILS_NEED_SIG_2' | translate }}</span>
                </div>
            </td>
            <td class="messageTx"></td>
            <td>{{tx.timeStamp | fmtNemDate}}</td>
        </tr>
        </tody>
</table>

<div id="MSMtable{{number}}" class="collapse">
    <div class="accordion-inner" style="padding-left: 8px; background-color: #e3e0cf;">
        <div class="row" ng-show="!parent">
            <div class="col-sm-12"><b>{{ 'AGGREGATE_MODIFICATION_NAME' | translate }}</b></div>
        </div>
        <div class="row" ng-show="parent">
            <div class="col-sm-12"><b>{{ 'AGGREGATE_MODIFICATION_MULTISIG_NAME' | translate }}</b></div>
        </div>

            <div class="row">
                <div class="col-sm-12">
                    <hr style="border-style: dashed;margin:5px;" />
                </div>
            </div>

        <div ng-show="parent">

            <div class="row">
                <div class="col-sm-3"><b>{{ 'LINE_TX_DETAILS_ISSUER' | translate }}</b></div>
                <div class="col-sm-9">
                    <tt>{{ getContact(parent.signer | fmtPubToAddress:networkId | fmtAddress) || (parent.signer | fmtPubToAddress:networkId | fmtAddress) }}</tt>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-12">
                    <hr style="border-style: dashed;margin:5px;" />
                </div>
            </div>

        </div>

        <div class="row">
            <div class="col-sm-3"><b>{{ 'GENERAL_FEE' | translate }}</b></div>
            <div class="col-sm-9">
                {{(tx.fee | fmtNemValue)[0]}}.<span class="text-muted">{{(tx.fee | fmtNemValue)[1]}}</span> XEM
            </div>
        </div>

        <div class="row" ng-show="parent">
            <div class="col-sm-3"><b>{{ 'LINE_TX_DETAILS_MULTISIG_FEE' | translate }}</b></div>
            <div class="col-sm-9" ng-show="!parent.signature.length">{{(parent.fee | fmtNemValue)[0]}}.<span class="text-muted">{{(parent.fee | fmtNemValue)[1]}}</span> XEM</div>
            <div class="col-sm-9" ng-show="parent.signature.length">{{(((parent.signatures.length + 1) * parent.fee) | fmtNemValue)[0]}}.<span class="text-muted">{{(((parent.signatures.length + 1) * parent.fee) | fmtNemValue)[1]}}</span> XEM</div>
        </div>

        <div class="row">
            <div class="col-sm-12">
                <hr style="border-style: dashed;margin:5px;" />
            </div>
        </div>

        <div class="row">
            <div class="col-sm-3"><b>{{ 'LINE_TX_DETAILS_MULTISIG_AFFECTED' | translate }}</b></div>
            <div class="col-sm-9">
                {{ getContact(tx.signer | fmtPubToAddress:networkId | fmtAddress) || (tx.signer | fmtPubToAddress:networkId | fmtAddress) }}
            </div>
        </div>

        <div class="row">
            <div class="col-sm-12">
                <hr style="border-style: dashed;margin:5px;" />
            </div>
        </div>

        <div class="row">
            <div class="col-sm-3"><b>{{ 'LINE_TX_DETAILS_MULTISIG_MOD' | translate }}</b></div>
            <div class="col-sm-9">
                {{tx.modifications.length}}
            </div>
        </div>
        <div class="row" ng-show="tx.minCosignatories">
            <div class="col-sm-3"><b>{{ 'LINE_TX_DETAILS_MULTISIG_MIN_COSIG' | translate }}</b></div>
            <div class="col-sm-9">
                <tt><span ng-show="tx.minCosignatories.relativeChange > 0">+</span>{{tx.minCosignatories.relativeChange}}</tt>
            </div>
        </div>

        <div class="row" ng-show="tx.modifications.length">
            <div class="col-sm-12">
                <hr style="border-style: dashed;margin:5px;" />
            </div>
        </div>

        <div class="row" ng-show="tx.modifications.length">
            <div class="col-sm-12" >
                <strong>{{ 'AGGREGATE_MODIFICATION_LIST' | translate }}: </strong>
            </div>
        </div>

        <div class="row" ng-repeat="mod in tx.modifications">
            <div class="col-sm-1">&nbsp;</div>
            <div class="col-sm-2"><b><span ng-show="mod.modificationType === 1">{{ 'GENERAL_ADDED' | translate }}</span><span ng-show="mod.modificationType === 2">{{ 'GENERAL_REMOVED' | translate }}</span></b></div>
            <div class="col-sm-9">
                <tt>{{ getContact(mod.cosignatoryAccount | fmtPubToAddress:networkId | fmtAddress) || (mod.cosignatoryAccount | fmtPubToAddress:networkId | fmtAddress) }}</tt>
            </div>
        </div>

        <div class="row" ng-show="parent.signatures.length">

                <div class="col-sm-12">
                    <hr style="border-style: dashed;margin:5px;" />
                </div>

                <div class="col-sm-12" >
                    <strong>{{ 'LINE_TX_DETAILS_SIGNATURES' | translate }}: </strong>
                </div>
            </div>

            <div ng-repeat="sig in parent.signatures">
                <div class="row">
                    <div class="col-sm-1">&nbsp;</div>
                    <div class="col-sm-3"><b>{{ 'LINE_TX_DETAILS_COSIGNATORY' | translate }}</b></div>
                    <div class="col-sm-8">{{ getContact(sig.signer | fmtPubToAddress:networkId | fmtAddress) || (sig.signer | fmtPubToAddress:networkId | fmtAddress) }}</div>
                </div>
                <div class="row">
                    <div class="col-sm-1">&nbsp;</div>
                    <div class="col-sm-3"><b>{{ 'LINE_TX_DETAILS_TIMESTAMP' | translate }}</b></div>
                    <div class="col-sm-8">{{sig.timeStamp | fmtNemDate}}</div>
                </div>
            </div>

        <div class="row">
            <div class="col-sm-12">
                <hr style="border-style: dashed;margin:5px;" />
            </div>
        </div>

        <div class="row">
            <div class="col-sm-3"><b>{{ 'GENERAL_BLOCK' | translate }}</b></div>
            <div class="col-sm-9">
                <span ng-show="{{meta.height}} !== 9007199254740991">{{meta.height}}</span>
                <span ng-show="{{meta.height}} === 9007199254740991">{{ 'LINE_TX_DETAILS_WAITING' | translate }}
                        <span ng-if="parent">- {{ 'LINE_TX_DETAILS_NEED_SIG' | translate }}</span></span>
            </div>
        </div>

            <div class="row">
                <div class="col-sm-3">
                    <b>{{ 'LINE_TX_DETAILS_HASH' | translate }}</b>
                </div>
                <div class="col-sm-9">
                    <span ng-show="parent"> {{meta.innerHash.data}} </span>
                    <span ng-show="!parent"> {{meta.hash.data}} </span>
                </div>
            </div>

            <div class="row" ng-show="parent">
                <div class="col-sm-3"><b>{{ 'LINE_TX_DETAILS_MULTISIG_HASH' | translate }}</b></div>
                <div class="col-sm-9"><tt>{{meta.hash.data}}</tt></div>
            </div>

    </div>

    <sign-transaction tx="tx" parent-tx="parent" meta="meta" needs-signature="needsSignature"></sign-transaction>

</div>

'''
'''--- src/app/layout/lines/lineProvisionNamespace.html ---
<table id="NSTable" class="table table-bordered table-hover" title="{{ 'NAMESPACE_PROVISION_NAME' | translate }}" style="cursor:pointer;outline:0;margin-bottom:0;table-layout:fixed">
    <tbody style="outline:0;" class="text-center">
        <tr data-toggle="collapse" data-target="#NStable{{number}}">
            <td class="namespaceTx" style="overflow:hidden;text-overflow: ellipsis;"><span class="fa fa-sitemap text-danger" ng-show="!parent"></span> <span class="fa fa-sitemap text-danger" ng-show="parent"></span> <tt>{{ 'LINE_TX_DETAILS_NS_CREATE' | translate }} "<span class="text-muted">{{tx.parent}}</span><span ng-show="tx.parent">.</span><strong>{{tx.newPart}}</strong>"</tt></td>
            <td class="amountTx">
                <span ng-show="!parent">
                    <span style="color:red">-</span> <strong>{{((tx.rentalFee+tx.fee) | fmtNemValue)[0]}}</strong>.<span class="text-muted">{{((tx.rentalFee+tx.fee) | fmtNemValue)[1]}}</span> XEM
                </span>
                <span ng-show="parent">
                    <span style="color:red">-</span>
                    <span ng-show="parent.signatures.length">
                        <strong>{{((tx.rentalFee+tx.fee+((parent.signatures.length + 1) * parent.fee)) | fmtNemValue)[0]}}</strong>.<span class="text-muted">{{((tx.rentalFee+tx.fee+((parent.signatures.length + 1) * parent.fee)) | fmtNemValue)[1]}}</span>
                    </span>
                    <span ng-show="!parent.signatures.length">
                        <strong>{{((tx.rentalFee+tx.fee+parent.fee) | fmtNemValue)[0]}}</strong>.<span class="text-muted">{{((tx.rentalFee+tx.fee+parent.fee) | fmtNemValue)[1]}}</span>
                    </span>
                </span>
                <div ng-show="needsSignature">
                    <span style="color:red">{{ 'LINE_TX_DETAILS_NEED_SIG_2' | translate }}</span>
                </div>
            </td>
            <td class="messageTx"></td>
            <td>{{tx.timeStamp | fmtNemDate}}</td>
        </tr>
        </tody>
</table>

<div id="NStable{{number}}" class="collapse">
    <div class="accordion-inner" style="padding-left: 8px; background-color: #e3e0cf;">
                <div class="row">
                    <div class="col-sm-12">
                        <strong>
                            <span ng-show="!parent">{{ 'NAMESPACE_PROVISION_NAME' | translate }}</span>
                            <span ng-show="parent">{{ 'NAMESPACE_PROVISION_MULTISIG_NAME' | translate }}</span>
                        </strong>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-12">
                        <hr style="border-style: dashed;margin:5px;" />
                    </div>
                </div>

                <div ng-show="parent">

                    <div class="row">
                        <div class="col-sm-3"><b>{{ 'GENERAL_MULTISIG_ACCOUNT' | translate }}</b></div>
                        <div class="col-sm-9">
                            <tt>{{ getContact(tx.signer | fmtPubToAddress:networkId | fmtAddress) || (tx.signer | fmtPubToAddress:networkId | fmtAddress) }}</tt>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-3"><b>{{ 'LINE_TX_DETAILS_ISSUER' | translate }}</b></div>
                        <div class="col-sm-9">
                            <tt>{{ getContact(parent.signer | fmtPubToAddress:networkId | fmtAddress) || (parent.signer | fmtPubToAddress:networkId | fmtAddress) }}</tt>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-12">
                            <hr style="border-style: dashed;margin:5px;" />
                        </div>
                    </div>

                </div>

                <div class="row">
                    <div class="col-sm-3"><b>{{ 'GENERAL_AMOUNT' | translate }}</b></div>
                    <div class="col-sm-9">
                        <strong>{{(tx.rentalFee | fmtNemValue)[0]}}</strong>.<span class="text-muted">{{(tx.rentalFee | fmtNemValue)[1]}}</span> XEM
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-3"><b>{{ 'GENERAL_FEE' | translate }}</b></div>
                    <div class="col-sm-9">
                        {{(tx.fee | fmtNemValue)[0]}}.<span class="text-muted">{{(tx.fee | fmtNemValue)[1]}}</span> XEM
                    </div>
                </div>

                <div class="row" ng-show="parent">
                    <div class="col-sm-3"><b>{{ 'LINE_TX_DETAILS_MULTISIG_FEE' | translate }}</b></div>
                    <div class="col-sm-9" ng-show="!parent.signature.length">{{(parent.fee | fmtNemValue)[0]}}.<span class="text-muted">{{(parent.fee | fmtNemValue)[1]}}</span> XEM</div>
                    <div class="col-sm-9" ng-show="parent.signature.length">{{(((parent.signatures.length + 1) * parent.fee) | fmtNemValue)[0]}}.<span class="text-muted">{{(((parent.signatures.length + 1) * parent.fee) | fmtNemValue)[1]}}</span> XEM</div>
                </div>

                <div class="row">
                    <div class="col-sm-12">
                        <hr style="border-style: dashed;margin:5px;" />
                    </div>
                </div>

                <div class="row" ng-show="!tx.parent">
                    <div class="col-sm-3"><b>{{ 'NAMESPACE_PROVISION_NEW_ROOT' | translate }}</b></div>
                    <div class="col-sm-9">{{tx.newPart}}</div>
                </div>

                <div class="row" ng-show="tx.parent">
                    <div class="col-sm-3"><b>{{ 'LINE_TX_DETAILS_NS_ROOT' | translate }}</b></div>
                    <div class="col-sm-9">{{tx.parent}}</div>
                </div>

                <div class="row" ng-show="tx.parent">
                    <div class="col-sm-3"><b>{{ 'LINE_TX_DETAILS_NS_NEW_SUB' | translate }}</b></div>
                    <div class="col-sm-9">{{tx.newPart}}</div>
                </div>

                <div class="row" ng-show="parent.signatures.length">

                <div class="col-sm-12">
                    <hr style="border-style: dashed;margin:5px;" />
                </div>

                <div class="col-sm-12" >
                    <strong>{{ 'LINE_TX_DETAILS_SIGNATURES' | translate }}: </strong>
                </div>
            </div>

            <div ng-repeat="sig in parent.signatures">
                <div class="row">
                    <div class="col-sm-1">&nbsp;</div>
                    <div class="col-sm-3"><b>{{ 'LINE_TX_DETAILS_COSIGNATORY' | translate }}</b></div>
                    <div class="col-sm-8">{{ getContact(sig.signer | fmtPubToAddress:networkId | fmtAddress) || (sig.signer | fmtPubToAddress:networkId | fmtAddress) }}</div>
                </div>
                <div class="row">
                    <div class="col-sm-1">&nbsp;</div>
                    <div class="col-sm-3"><b>{{ 'LINE_TX_DETAILS_TIMESTAMP' | translate }}</b></div>
                    <div class="col-sm-8">{{sig.timeStamp | fmtNemDate}}</div>
                </div>
            </div>

            <div class="row">
                    <div class="col-sm-12">
                        <hr style="border-style: dashed;margin:5px;" />
                    </div>
                </div>

        <div class="row">
            <div class="col-sm-3"><b>{{ 'GENERAL_BLOCK' | translate }}</b></div>
            <div class="col-sm-9">
                <span ng-show="{{meta.height}} !== 9007199254740991">{{meta.height}}</span>
                <span ng-show="{{meta.height}} === 9007199254740991">{{ 'LINE_TX_DETAILS_WAITING' | translate }} <span ng-show="parent">- {{ 'LINE_TX_DETAILS_NEED_SIG' | translate }}</span></span>
            </div>
        </div>

        <div class="row">
                <div class="col-sm-3">
                    <b>{{ 'LINE_TX_DETAILS_HASH' | translate }}</b>
                </div>
                <div class="col-sm-9">
                    <span ng-show="parent"> {{meta.innerHash.data}} </span>
                    <span ng-show="!parent"> {{meta.hash.data}} </span>
                </div>
            </div>

            <div class="row" ng-show="parent">
                <div class="col-sm-3"><b>{{ 'LINE_TX_DETAILS_MULTISIG_HASH' | translate }}</b></div>
                <div class="col-sm-9"><tt>{{meta.hash.data}}</tt></div>
            </div>

    </div>

    <sign-transaction tx="tx" parent-tx="parent" meta="meta" needs-signature="needsSignature"></sign-transaction>

</div>

'''
'''--- src/app/layout/lines/lineTransfer.html ---
<table id="txTable" class="table table-bordered table-hover" title="{{ 'TRANSFER_TRANSACTION_NAME' | translate }}" style="cursor:pointer;outline:0;margin-bottom:0;table-layout:fixed">
    <tbody style="outline:0;">
        <tr data-toggle="collapse" data-target="#table{{number}}" style="outline:0">
            <td class="sentTx" style="overflow:hidden;text-overflow: ellipsis;" ng-show="tx.recipient !== mainAccount && !parent"><span class="fa fa-send-o text-danger"></span> <tt>{{ getContact(tx.recipient | fmtAddress) || (tx.recipient | fmtAddress) }}</tt></td>
            <td class="receivedTx"style="overflow:hidden;text-overflow: ellipsis;" ng-show="tx.recipient === mainAccount && !parent && !parent"><span class="fa fa-send text-success"></span> <tt>{{ getContact(tx.signer | fmtPubToAddress:networkId | fmtAddress) || (tx.signer | fmtPubToAddress:networkId | fmtAddress) }}</tt></td>

            <td class="multisigTx" style="overflow:hidden;text-overflow: ellipsis;" ng-show="parent">
                <span ng-show="parent.otherTrans.recipient !== mainAccount"class="fa fa-group text-danger"></span>
                <span ng-show="parent.otherTrans.recipient === mainAccount"class="fa fa-group text-success"></span>
                 <tt>{{ getContact(parent.otherTrans.signer | fmtPubToAddress:networkId | fmtAddress) || (parent.otherTrans.signer | fmtPubToAddress:networkId | fmtAddress) }}</tt>
            </td>
            <td class="amountTx">
                <span ng-show="tx.mosaics.length">
                    <span style="color:red" ng-show="!parent && (tx.recipient !== mainAccount)">-</span> 
                    <span style="color:green" ng-show="!parent && (tx.recipient === mainAccount)">+</span>
                    <span style="color:red" ng-show="parent && (parent.otherTrans.recipient !== mainAccount)">-</span> 
                    <span style="color:green" ng-show="parent && (parent.otherTrans.recipient === mainAccount)">+</span>  
                {{tx.mosaics.length}} <span class="fa fa-th text-info"></span></strong>
                </span>
                <span ng-hide="tx.mosaics.length">
                    <span ng-show="!parent">
                        <span ng-show="tx.recipient !== mainAccount">
                           <span style="color:red">-</span> <strong>{{((tx.amount+tx.fee) | fmtNemValue)[0]}}</strong>.<span class="text-muted">{{((tx.amount+tx.fee) | fmtNemValue)[1]}}</span>
                        </span>
                        <span ng-show="tx.recipient === mainAccount">
                            <span style="color:green">+</span> <strong>{{((tx.amount) | fmtNemValue)[0]}}</strong>.<span class="text-muted">{{((tx.amount) | fmtNemValue)[1]}}</span>
                        </span>
                         XEM
                    </span>
                    <span ng-show="parent">
                        <span ng-show="parent.otherTrans.recipient !== mainAccount">
                            <span style="color:red">-</span>
                            <span ng-show="parent.signatures.length">
                                <strong>{{((tx.amount + tx.fee + ((parent.signatures.length + 1) * parent.fee)) | fmtNemValue)[0]}}</strong>.<span class="text-muted">{{((tx.amount + tx.fee + ((parent.signatures.length + 1) * parent.fee)) | fmtNemValue)[1]}}</span>
                            </span>
                            <span ng-show="!parent.signatures.length">
                                <strong>{{((tx.amount+tx.fee+parent.fee) | fmtNemValue)[0]}}</strong>.<span class="text-muted">{{((tx.amount+tx.fee+parent.fee) | fmtNemValue)[1]}}</span>
                            </span>
                        </span>
                        <span ng-show="parent.otherTrans.recipient === mainAccount">
                            <span style="color:green">+</span> <strong>{{((tx.amount) | fmtNemValue)[0]}}</strong>.<span class="text-muted">{{((tx.amount) | fmtNemValue)[1]}}</span>
                        </span>
                         XEM
                    </span>
                </span>
                <div id="needsSignature-{{tx.timeStamp}}" ng-show="needsSignature">
                    <span style="color:red">{{ 'LINE_TX_DETAILS_NEED_SIG_2' | translate }}</span>
                </div>
            </td>
            <td class="messageTx" ng-show="!tx.message.type"></td>
            <td class="messageTx" style="" ng-show="tx.message.type === 1"><span ng-bind="tx.message | fmtHexMessage"></span></td>
            <td class="messageTx" ng-show="tx.message.type === 2" id="line-{{tx.timeStamp}}">{{ 'GENERAL_ENCRYPTED' | translate }}</td>
            <td class="timestampTx">{{tx.timeStamp | fmtNemDate}}</td>
        </tr>
    </tbody>
</table>

<div id="table{{number}}" class="collapse">
    <div class="accordion-inner" style="word-break: break-all;background-color: #e3e0cf;padding-left: 8px;">

        <div class="row">
                <div class="col-sm-12">
                    <span ng-show="!parent"><b>{{ 'TRANSFER_TRANSACTION_NAME' | translate }}</b></span>
                    <span ng-show="parent"><b>{{ 'TRANSFER_TRANSACTION_MULTISIG_NAME' | translate }}</b></span>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-12">
                    <hr style="border-style: dashed;margin:5px;" />
                </div>
            </div>

            <div class="row">
                <div class="col-sm-3">
                    <b>
                        <span ng-if="!parent">{{ 'LINE_TX_DETAILS_FROM' | translate }}</span>
                        <span ng-if="parent">{{ 'LINE_TX_DETAILS_FROM_MULTISIG' | translate }}</span>
                    </b>
                </div>
                <div class="col-sm-9">
                    {{ getContact(tx.signer | fmtPubToAddress:networkId | fmtAddress) || (tx.signer | fmtPubToAddress:networkId | fmtAddress) }}
                </div>
            </div>

            <div class="row">
                <div class="col-sm-3">
                    <b>{{ 'GENERAL_TO' | translate }}</b>
                </div>
                <div class="col-sm-9">
                    {{ getContact(tx.recipient | fmtAddress) || (tx.recipient | fmtAddress) }}
                </div>
            </div>

            <div class="row" ng-show="parent">
                <div class="col-sm-3"><b>{{ 'LINE_TX_DETAILS_ISSUER' | translate }}</b></div>
                <div class="col-sm-9">{{ getContact(parent.signer | fmtPubToAddress:networkId | fmtAddress) || (parent.signer | fmtPubToAddress:networkId | fmtAddress) }}</div>
            </div>

            <div class="row">
                <div class="col-sm-12">
                    <hr style="border-style: dashed;margin:5px;" />
                </div>
            </div>

            <div class="row" ng-show="!tx.mosaics.length">
                <div class="col-sm-3"><b>{{ 'GENERAL_AMOUNT' | translate }}</b></div>
                <div class="col-sm-9">
                    <strong>{{(tx.amount | fmtNemValue)[0]}}</strong>.<span class="text-muted">{{(tx.amount | fmtNemValue)[1]}}</span> XEM
                </div>
            </div>

            <div class="row">
                <div class="col-sm-3">
                    <b>{{ 'GENERAL_FEE' | translate }}</b>
                </div>
                <div class="col-sm-9">
                    {{(tx.fee | fmtNemValue)[0]}}.<span class="text-muted">{{(tx.fee | fmtNemValue)[1]}}</span> XEM
                </div>
            </div>

            <div class="row" ng-show="parent">
                <div class="col-sm-3"><b>{{ 'LINE_TX_DETAILS_MULTISIG_FEE' | translate }}</b></div>
                <div class="col-sm-9" ng-show="!parent.signature.length">{{(parent.fee | fmtNemValue)[0]}}.<span class="text-muted">{{(parent.fee | fmtNemValue)[1]}}</span> XEM</div>
                <div class="col-sm-9" ng-show="parent.signature.length">{{(((parent.signatures.length + 1) * parent.fee) | fmtNemValue)[0]}}.<span class="text-muted">{{(((parent.signatures.length + 1) * parent.fee) | fmtNemValue)[1]}}</span> XEM</div>
            </div>

            <div class="row" ng-show="tx.mosaics.length">

                    <div class="col-sm-12">
                        <hr style="border-style: dashed;margin:5px;" />
                    </div>

                <div class="col-sm-12">
                    <strong>{{ 'LINE_TX_DETAILS_MOS_ATTACHED' | translate }}: </strong> {{tx.mosaics.length}} <span class="fa fa-th text-info"></span>
                </div>
            </div>

            <div ng-repeat="mos in tx.mosaics">

                <div class="row">
                    <div class="col-sm-1">&nbsp;</div>
                    <div class="col-sm-2"><b>{{ 'GENERAL_NAME' | translate }}</b></div>
                    <div class="col-sm-9"><span class="text-muted">{{mos.mosaicId.namespaceId}}</span>:{{mos.mosaicId.name}}</div>
                </div>
                <div class="row">
                    <div class="col-sm-1">&nbsp;</div>
                    <div class="col-sm-2"><b>{{ 'MOSAIC_DEFINITION_QUANTITY' | translate }}</b></div>
                    <div class="col-sm-9"><strong>{{(mos.quantity | fmtSupply:mos.mosaicId:mosaicDefinitionMetaDataPair)[0]}}</strong><span class="text-muted">.{{(mos.quantity | fmtSupply:mos.mosaicId:mosaicDefinitionMetaDataPair)[1]}}</span></div>
                </div>

                <tag-levy mos="mos" tx="tx" mosaics="mosaicDefinitionMetaDataPair">
                    <div class="row" ng-show="levy.type">
                        <div class="col-sm-1">&nbsp;</div>
                        <div class="col-sm-2"><strong>{{ 'FORM_SIDE_BTN_LEVY_FEE' | translate }}</strong></div>
                        <div class="col-sm-9">
                            <span ng-show="levy.type === 1">{{ 'LINE_TX_DETAILS_LEVY_TYPE_1' | translate }}:</span>
                            <span ng-show="levy.type === 2">{{ 'LINE_TX_DETAILS_LEVY_TYPE_2' | translate }}:</span>
                            <strong>{{mos | fmtLevyFee:tx.amount:levy:mosaics}}</strong>
                            <span class="text-muted">{{levy.mosaicId.namespaceId}}</span>:{{levy.mosaicId.name}}
                        </div>
                    </div>
                </tag-levy>
            </div>

            <div class="row" ng-show="tx.message.payload">

                    <div class="col-sm-12">
                        <hr style="border-style: dashed;margin:5px;" />
                    </div>

                <div class="col-sm-3">
                    <b>{{ 'GENERAL_MESSAGE' | translate }}</b>
                </div>
                <div class="col-sm-9">
                    <span ng-show="tx.message.type === 1" style="white-space: pre-line;"><span ng-bind="tx.message | fmtHexMessage"></span></span>
                    <span ng-show="tx.message.type === 2" id="details-{{tx.timeStamp}}" style="white-space: pre-line;"> <span style="white-space: normal;"> {{ 'GENERAL_ENCRYPTED' | translate }} <span ng-show="!disableDecryption"> <b>--></b> <a ng-click="showDecodeMessage = ! showDecodeMessage" style="cursor:pointer">{{ 'LINE_TX_DETAILS_MESS_DEC' | translate }}</a></span></span>
                    </span>
                </div>
            </div>

            <div class="row" ng-show="parent.signatures.length">

                <div class="col-sm-12">
                    <hr style="border-style: dashed;margin:5px;" />
                </div>

                <div class="col-sm-12" >
                    <strong>{{ 'LINE_TX_DETAILS_SIGNATURES' | translate }}: </strong>
                </div>
            </div>

            <div ng-repeat="sig in parent.signatures">
                <div class="row">
                    <div class="col-sm-1">&nbsp;</div>
                    <div class="col-sm-3"><b>{{ 'LINE_TX_DETAILS_COSIGNATORY' | translate }}</b></div>
                    <div class="col-sm-8">{{ getContact(sig.signer | fmtPubToAddress:networkId | fmtAddress) || (sig.signer | fmtPubToAddress:networkId | fmtAddress) }}</div>
                </div>
                <div class="row">
                    <div class="col-sm-1">&nbsp;</div>
                    <div class="col-sm-3"><b>{{ 'LINE_TX_DETAILS_TIMESTAMP' | translate }}</b></div>
                    <div class="col-sm-8">{{sig.timeStamp | fmtNemDate}}</div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-12">
                    <hr style="border-style: dashed;margin:5px;" />
                </div>
            </div>

            <div class="row">
                <div class="col-sm-3">
                    <b>{{ 'GENERAL_BLOCK' | translate }}</b>
                </div>
                <div class="col-sm-9">
                    <span ng-show="meta.height !== 9007199254740991">{{meta.height}}</span>
                    <span ng-show="meta.height === 9007199254740991 || !meta.height">{{ 'LINE_TX_DETAILS_WAITING' | translate }}
                    <span ng-if="parent">- {{ 'LINE_TX_DETAILS_NEED_SIG' | translate }}</span></span>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-3">
                    <b>{{ 'LINE_TX_DETAILS_HASH' | translate }}</b>
                </div>
                <div class="col-sm-9">
                    <span ng-show="parent"> {{meta.innerHash.data}} </span>
                    <span ng-show="!parent"> {{meta.hash.data}} </span>
                </div>
            </div>

            <div class="row" ng-show="parent">
                <div class="col-sm-3"><b>{{ 'LINE_TX_DETAILS_MULTISIG_HASH' | translate }}</b></div>
                <div class="col-sm-9"><tt>{{meta.hash.data}}</tt></div>
            </div>

    </div>

    <sign-transaction tx="tx" parent-tx="parent" meta="meta" needs-signature="needsSignature"></sign-transaction>

    <decode-message tx="tx" show-decode-message="showDecodeMessage" disable-decryption="disableDecryption"></decode-message>

</div>

'''
'''--- src/app/layout/partials/accountInput.html ---
<!--  ADDRESS BOOK, RECIPIENT ADDRESS, ALIAS-->
<fieldset class="form-group">
  <div class="input-group">
    <span class="input-group-btn">
      <label>{{(!$ctrl.isCosignatory ? 'GENERAL_TO' : 'GENERAL_COSIGNATORY') | translate}}:</label>
    </span>
    <input ng-show="!$ctrl.showContacts" class="form-control form-control-lg" type="text" placeholder="{{ (!$ctrl.isCosignatory ? 'FORM_RECIPIENT_PLACEHOLDER' : 'FORM_ADDRESS_ALIAS_PLACEHOLDER') | translate}}" ng-model="$ctrl.accountView" ng-change="$ctrl.processInput(false)" ng-class="!$ctrl.isValid($ctrl.accountView) ? 'has-error' : ''"/>
    <select ng-show="$ctrl.showContacts" class="form-control form-control-lg" ng-model="$ctrl.accountView" ng-options="contact.address as contact.label for contact in $ctrl._Wallet.contacts" ng-change="$ctrl.processInput(false);$ctrl.showContacts = false;">
       <option value="" disabled selected>{{ 'FORM_SELECT_CONTACT' | translate }}</option>
     </select>
    <span class="input-group-btn addSubtract">
      <button type="button" class="btn btn-warning" data-toggle="tooltip" data-trigger="hover" data-placement="bottom" title="{{ 'FORM_BTN_GET_ALIAS' | translate }}" ng-click="$ctrl.processInput(true);" ng-disabled="$ctrl.showContacts || !$ctrl.isAlias($ctrl.accountView) || !($ctrl.accountView.length > 1)">
        <i class="fa fa-at"></i>
      </button>
      <button type="button" class="btn btn-warning" data-toggle="tooltip" data-trigger="hover" data-placement="bottom" title="{{ 'FORM_BTN_OPEN_ADB' | translate }}" ng-click="$ctrl.showHideAddressBook();">
        <i class="fa">&#xf2b9;</i>
      </button>
    </span>
  </div>
</fieldset>
<!-- ADDRESS THAT BELONGS TO ALIAS -->
<fieldset class="form-group" ng-show="$ctrl.alias.length">
  <div class="input-group">
    <span class="input-group-btn">
      <label>{{ 'GENERAL_ALIAS' | translate }}: </label>
    </span>
    <input class="form-control form-control-lg" type="text" ng-model="$ctrl.alias" readOnly/>
  </div>
</fieldset>
'''
'''--- src/app/layout/partials/attachMosaic.html ---
<div class="mosaic col-lg-6 col-md-12">
  <div class="panel-heading">
    <h3>{{ 'TRANSFER_TRANSACTION_ATTACH_MOSAIC' | translate }} <i class="fa fa-paperclip"></i></h3>
  </div>
  <div class="panel-body">
    <!-- MOSAIC SELECT -->
    <fieldset class="form-group">
      <div class="input-group">
        <span class="input-group-btn">
          <label class="control-label">{{ 'GENERAL_CURRENCY' | translate }}: </label>
        </span>
        <select class="col-sm-7 form-control" ng-options="mosaicName for mosaicName in $ctrl.toSortedKeys($ctrl.accountMosaics)" ng-model="$ctrl.selectedMosaic" required="required" id="mosaic"></select>
        <span class="input-group-btn">
          <button type="button" class="btn btn-success" ng-click="$ctrl.attachMosaic()">{{ 'TRANSFER_TRANSACTION_ATTACH' | translate }}</button>
        </span>
      </div>
    </fieldset>
    <!-- MOSAIC BALANCE -->
    <div class="form-group" ng-show="$ctrl.selectedMosaic !== 'nem:xem'">
      <div class="input-group">
        <span class="input-group-btn">
          <label>{{'FORM_SIDE_BTN_BALANCE' | translate}}: </label>
        </span>
        <div class="form-control formFloat" disabled>
          <input class="readOnly mosaic" type="text" value="{{($ctrl.accountMosaics[$ctrl.selectedMosaic].quantity | fmtSupply:$ctrl.accountMosaics[$ctrl.selectedMosaic].mosaicId:$ctrl.mosaicsMetaData)[0]}}.{{($ctrl.accountMosaics[$ctrl.selectedMosaic].quantity | fmtSupply:$ctrl.accountMosaics[$ctrl.selectedMosaic].mosaicId:$ctrl.mosaicsMetaData)[1]}}" readOnly/>
          <label class="floatRight"><small>{{$ctrl.accountMosaics[$ctrl.selectedMosaic].mosaicId.name}}</small></label>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="mosaic col-lg-6 col-md-12">
  <div class="panel-heading">
    <h3>{{ 'TRANSFER_TRANSACTION_MOSAICS_ATTACHED' | translate }} <i class="fa fa-paperclip"></i></h3>
  </div>
  <!-- NEW MOSAIC DISPLAY -->
  <div class="panel-body" ng-show="$ctrl.formData.mosaics.length" ng-repeat="mos in $ctrl.formData.mosaics">
    <!-- ATTACHED MOSAIC NAME -->
    <fieldset class="form-group">
      <div class="input-group">
        <span class="input-group-btn">
          <label>{{ 'GENERAL_MOSAIC' | translate }}: </label>
        </span>
        <input type="text" class="form-control" value="{{mos.mosaicId.namespaceId}}:{{mos.mosaicId.name}}" readOnly />
        <span class="input-group-btn">
          <button type="button" class="btn btn-success mosaics" ng-click="$ctrl.removeMosaic($index)">{{ 'GENERAL_REMOVE' | translate }}</button>
        </span>
      </div>
    </fieldset>
    <!-- ATTACHED MOSAIC AMOUNT TO SEND -->
    <fieldset class="form-group">
      <div class="input-group">
        <span class="input-group-btn">
          <label>{{ 'GENERAL_AMOUNT' | translate }}: </label>
        </span>
        <input id="{{mos.gid}}" type="text" class="form-control" ng-model="mos.quantity" maxlength="17" ng-change="$ctrl.updateCtrl();">
      </div>
    </fieldset>
    <!-- ATTACHED LEVY -->
    <fieldset class="form-group" ng-show="$ctrl.mosaicsMetaData[mos.mosaicId.namespaceId +':'+mos.mosaicId.name].mosaicDefinition.levy.type">
      <div class="input-group">
        <span class="input-group-btn">
          <label>{{ 'GENERAL_LEVY' | translate }}: </label>
        </span>
        <div class="form-control formFloat" readOnly>
          <span class="feeAmount">
            <span>{{$ctrl._Helpers.cleanMosaicAmounts(mos, $ctrl.mosaicsMetaData)[0] | fmtLevyFee:1000000:$ctrl.mosaicsMetaData[mos.mosaicId.namespaceId +':'+mos.mosaicId.name].mosaicDefinition.levy:$ctrl.mosaicsMetaData}}</span>
            <span ng-show="$ctrl.mosaicsMetaData[mos.mosaicId.namespaceId +':'+mos.mosaicId.name].mosaicDefinition.levy.type === 1">-- {{ 'GENERAL_LEVY_TYPE_1' | translate }}</span>
            <span ng-show="$ctrl.mosaicsMetaData[mos.mosaicId.namespaceId +':'+mos.mosaicId.name].mosaicDefinition.levy.type === 2">-- {{ 'GENERAL_LEVY_TYPE_2' | translate }}</span>
          </span>
          <label class="floatRight"><small><span class="text-muted">{{$ctrl.mosaicsMetaData[mos.mosaicId.namespaceId +':'+mos.mosaicId.name].mosaicDefinition.levy.mosaicId.namespaceId}}</span>:{{$ctrl.mosaicsMetaData[mos.mosaicId.namespaceId +':'+mos.mosaicId.name].mosaicDefinition.levy.mosaicId.name}}</small></label>
        </div>
      </div>
    </fieldset>
  </div>
  <div class="panel-body" ng-show="!$ctrl.formData.mosaics.length">
    <!-- ATTACHED MOSAIC NAME -->
    <div class="form-group">
      <p>{{ 'GENERAL_NO_RESULTS' | translate }}</p>
    </div>
  </div>
</div>
'''
'''--- src/app/layout/partials/balance.html ---
<li id="balanceDropdown" class="money dropdown" show-authed="true">
  <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
    <b><small>{{$ctrl.balance}} {{$ctrl.selectedMarket}}</small></b> <span class="caret"></span>
  </a>
  <ul class="dropdown-menu" style="z-index: 99;min-width: 100%;width: 100%;">
    <li ng-repeat="key in $ctrl.markets" class="text-center" style="cursor:pointer;" ng-click="$ctrl.updateBalance(key);">
      <a><b><small>{{key}}</small></b></a>
    </li>
  </ul>
</li>
'''
'''--- src/app/layout/partials/decodeMessage.html ---
<div id="decodeTxMessage-{{tx.timeStamp}}" ng-show="tx.message.type === 2 && showDecodeMessage && !disableDecryption">
	<div class="row">
	    <div class="col-sm-12">
	        <hr style="border-style: dashed;margin:5px;" />
		</div>
	</div>
  <div class="input-group">
    <input type="password" class="form-control ng-valid ng-touched ng-dirty ng-valid-parse" ng-model="common.password" id="passwordDecoding" placeholder="{{'FORM_PASSWORD_FIELD_PLACEHOLDER' | translate }}" aria-invalid="false" style="background-color: rgba(15, 122, 225, 0.1) !important;" ng-show="Wallet.algo !== 'trezor' && Wallet.algo !== 'ledger'">
    <span class="input-group-btn">
      <button class="btn btn-success" style="color: white; border-radius: 0px; border-color:#444;" type="button" ng-click="decode(tx)" ng-disabled="Wallet.algo === 'trezor' || Wallet.algo === 'ledger'">{{ 'LINE_TX_DETAILS_DEC_MESS' | translate }}</button>
    </span>
  </div>
</div>
'''
'''--- src/app/layout/partials/feeInput.html ---
<fieldset class="form-group">
  <div class="input-group">
    <span class="input-group-btn">
      <label>{{'GENERAL_FEE' | translate}}: </label>
    </span>
    <div class="form-control formFloat" readOnly>
      <span class="feeAmount">
       <!-- Transaction fee -->
        <span>{{(tx.fee | fmtNemValue)[0]}}.{{(tx.fee | fmtNemValue)[1]}}</span>
         <!-- Multisig fee -->
        <span ng-show="isMultisig"> + {{(tx.otherTrans.fee | fmtNemValue)[0]}}.{{(tx.otherTrans.fee | fmtNemValue)[1]}}</span>
        <!-- Encryption fee -->
        <span ng-show="tx.message.type === 2"> (+ encryption fee)</span>
      </span>
      <label class="floatRight"><small>XEM</small></label>
    </div>
  </div>
</fieldset>
'''
'''--- src/app/layout/partials/invoice.html ---
<div class="mosaic col-lg-6 col-md-12">
  <div class="panel-heading">
    <h3>{{ 'GENERAL_INVOICE' | translate }} <i class="fa fa-qrcode"></i></h3>
  </div>
  <div class="panel-body">
    <!-- QR CODE -->
    <fieldset class="form-group">
      <div class="text-center" id="invoiceQR"></div>
    </fieldset>
  </div>
</div>
'''
'''--- src/app/layout/partials/marketData.html ---
<!-- MARKET INFO WIDGET -->
<div class="market-info" ng-show="$ctrl._DataStore.market.xem.highestBid && $ctrl._DataStore.market.btc[$ctrl.selectedMarket].last">
  <h4> {{ 'DASHBOARD_MARKET_INFO_TITLE' | translate }} <i class="fa fa-refresh" style="cursor:pointer;float:right;" ng-click="$ctrl.refreshMarketInfo();"></i></h4>
  <div class="row">
    <div class="col-md-6 col-sm-3 header">
      {{ 'DASHBOARD_MARKET_INFO_CAP' | translate }} ({{ $ctrl.selectedMarket }}):
      <br>
      <span> {{($ctrl._DataStore.market.xem.highestBid * 8999999999) * $ctrl._DataStore.market.btc[$ctrl.selectedMarket].last | currencyFormat}}</span>
    </div>
    <div class="col-md-6 col-sm-3 header">
      {{ 'DASHBOARD_MARKET_INFO_VOLUME' | translate }} ({{ $ctrl.selectedMarket }}):
      <br>
      <span> {{$ctrl._DataStore.market.xem.baseVolume * $ctrl._DataStore.market.btc[$ctrl.selectedMarket].last | currencyFormat}}</span>
    </div>
    <div class="col-md-6 col-sm-3 header ticker">
      {{ 'DASHBOARD_MARKET_INFO_PRICE' | translate }} ({{ $ctrl.selectedMarket }}):
      <br>
      <span>{{$ctrl._Helpers.toFixed4($ctrl._DataStore.market.xem.highestBid * $ctrl._DataStore.market.btc[$ctrl.selectedMarket].last)}}</span>
    </div>
    <div class="col-md-6 col-sm-3 ticker header">
      {{ 'DASHBOARD_MARKET_INFO_PRICE' | translate }} (Bitcoin):
      <br>
      <span><i class="fa fa-bitcoin"></i> {{$ctrl._DataStore.market.xem.highestBid}}</span>
    </div>
    <div class="col-md-6 col-sm-3 ticker header">
      {{ 'DASHBOARD_MARKET_INFO_CHANGES' | translate }}:
      <br>
      <span ng-style="$ctrl._DataStore.market.xem.percentChange * 100 < 0 ? { 'color': 'red'} : { 'color': 'green'}">
        <span class="fa fa-caret-up" ng-show="$ctrl._DataStore.market.xem.percentChange * 100 > 0" style="color:green;"></span>
        <span class="fa fa-caret-down" ng-show="$ctrl._DataStore.market.xem.percentChange * 100 < 0" style="color:red;"></span>
          {{$ctrl._DataStore.market.xem.percentChange * 100 | currencyFormat}} %
      </span>
    </div>
  </div>
</div>
'''
'''--- src/app/layout/partials/messageArea.html ---
 <!-- Message Field -->
<fieldset class="form-group">
  <div class="input-group">
    <span class="input-group-btn message">
      <label>{{'FORM_MESSAGE_PLACEHOLDER' | translate}}: </label>
    </span>
    <textarea class="form-control" ng-model="$ctrl.message" placeholder="{{'FORM_MESSAGE_PLACEHOLDER' | translate}}" rows="4" ng-change="$ctrl.updateCharactersLeft();" ng-class="$ctrl.charactersLeft < 0 || $ctrl.messageType === 0 && $ctrl.message.length && !$ctrl._Helpers.isHexadecimal($ctrl.message) ? 'has-error' : ''"></textarea>
    <p style="text-align:right;border-bottom:1px solid rgba(15, 122, 225, 0.6);background-color: #eee;"><span style="margin-right: 5px;"><b>{{ 'GENERAL_CHARACTERS_LEFT' | translate }}</b>: {{ $ctrl.charactersLeft }}</span></p>
  </div>
</fieldset>
<!-- Message type -->
<fieldset class="form-group">
  <div class="input-group">
    <span class="input-group-btn">
      <label for="box1">{{'TRANSFER_TRANSACTION_MESSAGE_TYPE' | translate}}:</label>
    </span>
    <select class="form-control" ng-options="type.value as type.name for type in $ctrl.messageTypes" ng-model="$ctrl.messageType" ng-change="$ctrl.updateCharactersLeft();"></select>
  </div>
</fieldset>
'''
'''--- src/app/layout/partials/multisigSelect.html ---
<fieldset class="form-group">
  <!-- SELECT MULTISIG ACCOUNT -->
  <div class="input-group">
    <span class="input-group-btn">
      <label class="control-label">{{ 'GENERAL_ACCOUNT' | translate }}:</label>
    </span>
    <select class="form-control" ng-disabled="$ctrl.isDisabled" ng-options="(acc.address | fmtContact:Wallet.current) for acc in $ctrl._DataStore.account.metaData.meta.cosignatoryOf track by acc.address" ng-model="$ctrl.multisigAccount" ng-change="$ctrl.update();">
      <option value="" selected disabled>{{'FORM_SELECT_MULTISIG' | translate}}</option>
    </select>
  </div>
</fieldset>
<!-- MULTISIG ACCOUNT BALANCE -->
<fieldset class="form-group" ng-show="$ctrl.multisigAccount">
  <div class="input-group">
    <span class="input-group-btn">
      <label>{{'FORM_SIDE_BTN_BALANCE' | translate}}: </label>
    </span>
    <div class="form-control formFloat" readOnly>
      <input type="text" value="{{ ($ctrl.multisigAccount.balance | fmtNemValue)[0] }}.{{ ($ctrl.multisigAccount.balance | fmtNemValue)[1] }}" readOnly disabled/>
      <label class="floatRight"><small>XEM</small></label>
    </div>
  </div>
</fieldset>
'''
'''--- src/app/layout/partials/news.html ---
<!-- NEWS WIDGET -->
<div class="market-info">
  <h4> News <i class="fa fa-refresh" style="cursor:pointer;float:right;" ng-click="$ctrl.refreshNews();"></i></h4>
  <div class="row">
    
  </div>
</div>
'''
'''--- src/app/layout/partials/node.html ---
<div class="modal fade nodes" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
  <div class="modal-dialog modal-sm" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h3 class="modal-title" id="gridSystemModalLabel">{{ 'HEARDER_NODE_LIST' | translate }}</h3>
      </div>
      <div class="modal-body">
        <div class="row">
          <div class="col-sm-12">
            <!-- NODES BLOCK HEIGHT -->
            <fieldset class="form-group">
              <div class="input-group">
                <span class="input-group-btn">
                  <label>{{ 'HEADER_NODE_BLOCK_HEIGHT' | translate }}: </label>
                </span>
                <span type="text" class="form-control" readOnly> {{ $ctrl._DataStore.chain.height }}</span>
              </div>
            </fieldset>
            <!-- CURRENT NODE -->
            <fieldset class="form-group">
              <div class="input-group">
                <span class="input-group-btn">
                  <label>{{ 'HEADER_NODE_CURRENT_NODE' | translate }}: </label>
                </span>
                <span type="text" class="form-control" readOnly>{{ $ctrl._Wallet.node.host }}</span>
              </div>
            </fieldset>
            <!-- NODE LIST -->
            <fieldset class="form-group">
              <div class="input-group">
                <span class="input-group-btn">
                  <label>{{ 'HEARDER_NODE_LIST' | translate }}: </label>
                </span>
                <select class="form-control" ng-model="$ctrl.selectedNode" ng-change="$ctrl.changeNode($ctrl.selectedNode)" ng-options="node.uri as (node.uri | toHostname) for node in $ctrl._Wallet.nodes"><option value="" disabled selected>{{ 'HEADER_NODE_SELECT' | translate }}</option></select>
              </div>
            </fieldset>
            <!-- CUSTOM NODE -->
            <fieldset class="form-group" autocomplete="off">
              <div class="input-group">
                <span class="input-group-btn">
                  <label data-toggle="tooltip" data-placement="bottom" title="{{ 'HEADER_NODE_CUSTOM_TOOLTIP' | translate }}">{{ 'HEADER_NODE_CUSTOM' | translate }}: <i class="fa fa-question-circle-o"></i> </label>
                </span>
                <input class="form-control"
                    type="text" autocomplete="off"
                    placeholder="{{ 'HEADER_NODE_CUSTOM_INFO' | translate }}"
                    ng-model="$ctrl.customNode"/>
                <span class="input-group-btn adding">
                  <button type="button" class="btn btn-warning" ng-click="$ctrl.changeNode($ctrl.customNode)">
                    <i class="fa fa-plus"></i>
                  </button>
                </span>
              </div>
            </fieldset>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <button type="submit" class="btn btn-success" data-dismiss="modal">{{ 'GENERAL_CLOSE' | translate }}</button>
      </div>
    </div>
  </div>
</div>
'''
'''--- src/app/layout/partials/paginate.html ---
<div class="arrows" ng-show="data.length > pageSize">
	<button class="buttonStyle" ng-disabled="currentPage == 0" ng-click="goStart()">
      <span class="fa fa-angle-double-left" aria-hidden="true"></span>
    </button>
    <button class="buttonStyle" ng-disabled="currentPage == 0" ng-click="decrement()">
      <span class="fa fa-chevron-circle-left" aria-hidden="true"></span>
    </button>
    <b>{{currentPage+1}}/{{Helpers.calcNumberOfPages(data, pageSize)}}</b>
    <button class="buttonStyle" ng-disabled="currentPage+1 >= Helpers.calcNumberOfPages(data, pageSize)" ng-click="increment()">
      <span class="fa fa-chevron-circle-right" aria-hidden="true"></span>
    </button>
    <button class="buttonStyle" ng-disabled="currentPage+1 >= Helpers.calcNumberOfPages(data, pageSize)" ng-click="goEnd()">
      <span class="fa fa-angle-double-right" aria-hidden="true"></span>
    </button>
</div>
'''
'''--- src/app/layout/partials/passwordInput.html ---
<fieldset class="form-group" ng-show="Wallet.algo !== 'trezor' && Wallet.algo !== 'ledger'">
    <div class="input-group">
        <span class="input-group-btn">
            <label ng-class="!common.password.length ? 'has-error' : ''">{{ 'FORM_PASSWORD' | translate }}: </label>
        </span>
      	<input class="form-control password" type="password" placeholder="{{ 'FORM_PASSWORD_FIELD_PLACEHOLDER' | translate }}" ng-model="common.password" ng-class="!common.password.length ? 'has-error' : ''"/>
    </div>
</fieldset>
'''
'''--- src/app/layout/partials/signTransaction.html ---
<div id="needsSignature2-{{tx.timeStamp}}" ng-show="needsSignature">
	<div class="row">
	    <div class="col-sm-12">
	        <hr style="border-style: dashed;margin:5px;" />
		</div>
	</div>
    <div class="input-group">
        <input type="password" class="form-control ng-valid ng-touched ng-dirty ng-valid-parse" ng-model="common.password" id="passwordDecoding" placeholder="{{'FORM_PASSWORD_FIELD_PLACEHOLDER' | translate }}" aria-invalid="false" style="background-color: rgba(15, 122, 225, 0.1) !important;" ng-show="Wallet.algo !== 'trezor' && Wallet.algo !== 'ledger'">
        <span class="input-group-btn">
        	<button class="btn btn-success" style="color: white; border-radius: 0px; border-color:#444;" type="button" ng-click="cosign(parentTx, tx, meta)">{{ 'LINE_TX_DETAILS_COSIGN' | translate }}</button>
        </span>
    </div>
</div>
'''
'''--- src/app/layout/partials/simpleAndMultisigSelect.html ---
<fieldset class="form-group">
  <!-- SELECT MULTISIG ACCOUNT -->
  <div class="input-group">
    <span class="input-group-btn">
      <label class="control-label">{{ 'GENERAL_ACCOUNT' | translate }}:</label>
    </span>
    <select class="form-control" ng-disabled="$ctrl.isDisabled" ng-options="($ctrl.formatLabel(acc.address)) for acc in $ctrl.allAccounts track by acc.address" ng-model="$ctrl.account" ng-change="$ctrl.update();">
      <option value="" selected disabled>{{'FORM_SELECT_ACCOUNT' | translate}}</option>
    </select>
  </div>
</fieldset>
<!-- MULTISIG ACCOUNT BALANCE -->
<fieldset class="form-group" ng-show="$ctrl.account">
  <div class="input-group">
    <span class="input-group-btn">
      <label>{{'FORM_SIDE_BTN_BALANCE' | translate}}: </label>
    </span>
    <div class="form-control formFloat" readOnly>
      <input type="text" value="{{ ($ctrl.account.balance | fmtNemValue)[0] }}.{{ ($ctrl.account.balance | fmtNemValue)[1] }}" readOnly disabled/>
      <label class="floatRight"><small>XEM</small></label>
    </div>
  </div>
</fieldset>

'''
'''--- src/app/layout/partials/txConfirmation.html ---
<div class="modal fade" id="confirmation" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
  <div class="modal-dialog modal-sm" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h3 class="modal-title" id="gridSystemModalLabel">Confirmation</h3>
      </div>
      <div class="modal-body">
        <div class="row">
          <div class="col-sm-12">
            <pre>{{$ctrl.tx}}</pre>
            <!-- Transaction line -->
            <table class="table table-condensed">
              <tbody>
                <tag-transaction d="$ctrl.tx" tooltip-position="'left'"></tag-transaction>
              </tbody>
            </table>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <button type="submit" class="btn btn-success" data-dismiss="modal">{{ 'GENERAL_CLOSE' | translate }}</button>
      </div>
    </div>
  </div>
</div>
'''
'''--- src/app/modules/NEMonster/index.js ---
import angular from 'angular';

// Create the module where our functionality can attach to
let NEMonster = angular.module('app.NEMonster', []);

// Include our UI-Router config settings
import NEMonsterConfig from './setup/NEMonster.config';
NEMonster.config(NEMonsterConfig);

// Controllers
import NEMonsterCtrl from './setup/NEMonster.controller';
NEMonster.controller('NEMonsterCtrl',NEMonsterCtrl);

export default NEMonster;

'''
'''--- src/app/modules/NEMonster/setup/NEMonster.config.js ---
function NEMonsterConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.NEMonster', {
            url: '/NEMonster/setup',
            controller: 'NEMonsterCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/NEMonster/setup/NEMonster.html',
            title: 'NEMonster'
        });

};

export default NEMonsterConfig;
'''
'''--- src/app/modules/NEMonster/setup/NEMonster.controller.js ---
import nem from 'nem-sdk';
import Helpers from '../../../utils/helpers';

class NEMonsterCtrl {
    // Set services as constructor parameter
    constructor(Wallet, Alert, DataStore, $filter, $timeout, $http, $state) {
        'ngInject';

        // Declaring services
        this._Alert = Alert;
        this._Wallet = Wallet;
        this._DataStore = DataStore;
        this._$filter = $filter;
        this._$timeout = $timeout;
        this._$http = $http;
        this._Helpers = Helpers;
        this._$state = $state;

        // Initialization
        this.init();
    }

    //// Module methods region ////

    /**
     * Initialize module properties
     */
    init() {

        // Form is a transfer transaction object, pre-set recipient if any from state parameter
        this.formData = nem.model.objects.create("transferTransaction")('');
        // Mosaics are null by default
        this.formData.mosaics = null;
        // Set first multisig account if any
        this.formData.multisigAccount = this._DataStore.account.metaData.meta.cosignatoryOf.length == 0 ? '' : this._DataStore.account.metaData.meta.cosignatoryOf[0];
        // Switch between mosaic transfer and normal transfers
        this.isMosaicTransfer = false;
        // Selected mosaic
        this.selectedMosaic = "nem:xem";
        // Mosaics data for current account
        this.currentAccountMosaicData = "";
        this.formData.messageType = 0; 
        this.formData.message = '';
        this.formData.amount = 0;
        this.formData.recipient ='';
        this.formData.recipientPublicKey = '';

        this.itemElement = {};

        // Pagination properties
        this.currentPage = 0;
        this.pageSize = 4;

        // Prevent user to click twice on send when already processing
        this.okPressed = false;
        // Is namespace selected
        this.nameSpaceSelected = true;
        // Object to contain our password & private key data.
        this.common = nem.model.objects.get("common");

        // Generate dedicated sink
        let sinkSeed = "NEMonster-" + this._Wallet.currentAccount.address;
        let sinkPrivate = nem.crypto.js.SHA3(sinkSeed, { outputLength: 256 }).toString();
        let sinkKeyPair = nem.crypto.keyPair.create(sinkPrivate);
        let sinkAddress = nem.model.address.toAddress(sinkKeyPair.publicKey.toString(), this._Wallet.network);

        // Set sink as recipient
        this.formData.recipient = sinkAddress;

        // Store the prepared transaction
        this.preparedTransaction = {};

        // Store transactions
        this.transactions = [];
        this.noMoreTxes = false;

        this.getTransactions(false);
        this.prepareTransaction();
    }

    /**
     * Get transactions of the pointer address
     */
    getTransactions(isUpdate, txHash) {
        let obj = {
            'params': {
                'address': this.formData.recipient,
                'hash': txHash ? txHash : '',
                'pageSize': isUpdate ? 100 : 50
            }
        };
        return this._$http.get(this._Wallet.node.host + ':' + this._Wallet.node.port + '/account/transfers/incoming', obj).then((res) => {
            if(isUpdate) {
                // Check if txes left to load
                if (!res.data.data.length || res.data.data.length < 100) this.noMoreTxes = true;
                //
                for (let i = 0; i < res.data.data.length; i++) {
                    this.transactions.push(res.data.data[i]);
                }
            } else {
                this.transactions = res.data.data;
                this.analyzeTransactions();  
            }
        });
    }

    /**
     * Analyze transactions from pointer address
     */
    analyzeTransactions(){

        var data = this.transactions;
        var potentialMonsterHash = [];

        $.each(data, ( index, value ) => {

            //change if multisig
            if (value['transaction']['type']==4100){
                var value2 = value['transaction']['otherTrans'];
            } else {
                var value2 = value['transaction'];    
            }

            // loop transactions to find catch trans
            if (nem.model.address.toAddress(value2['signer'], this._Wallet.network) == this._Wallet.currentAccount.address){
                potentialMonsterHash.push(value['meta']['hash']['data']);
            }
        });

        var index;
        var columns = {};
        for (index = 0; index < potentialMonsterHash.length; ++index) {

            var colors = ['#F45B69', '#4286f4', '#42f4b6', '#8941f4', '#f49d41', '#ce3333', '#a9ce33', '#33ce35', '#338ace', '#ce3385','#f4ce42','#cee5ce'];
            var grad = ['grad','','grad2','','grad3','','grad4','','grad5','','grad6','','grad7','','grad8','','grad9','','','','','',''];
            var monster = ['monster', 'monster2'];
            var hair = ['hair', 'hair2'];
            var eyes = ['eyes', 'eyes2','eyes3','eyes4','eyes5','eyes2','eyes2','eyes6','eyes6'];
            var iris = ['iris', 'iris2','iris3','iris4','iris5','iris6','iris7','iris8','iris9'];
            var mouth = ['mouth', 'mouth2', 'mouth3', 'mouth4', 'mouth5', 'mouth6'];
            var teeth = ['teeth', 'teeth3','teeth3','teeth4',''];
            var rnd = [1,2,3,4,5,6,7,8,9,10];

            var nam1 = ['The', 'Decayface','Wispface','Fetidmorph','Mc','Glowmirage','Forsaken','Enraged','Grumpy','Slender','Horror','Glacial','Crowned','Cave','Angry','Disfigured','The Furry','The Fiery Storm','The Elusive','The Brutal','The Diabolical','The Bewitched','The Agile','The Giant','Glowteeth','Thunderseeker','Duskcrackle','The Long-Horned Terror','The Crowned Harlequin','The Screeching','Hollowface','The Meager','The Grim Vision','The Chaotic','The Half','The Savage Corpse','Acidhound','The Undead','The shy','The Cold-Blooded','The Ugly','The Primitive'];
            var nam2 = ['Phenomenon','Teeth','Savage','Beast','Lion','Gargoyle','Monster','Dragon','Viper','Vampier','Buffalo','Leopard','Freak','Rot Bear','Entity','Ooze','Slayer Owl','Lich','Crocodile','Phoenix','Stinkmask','Dweller','Hunter','Sun Rhino','Jackal','Butcher Viper','Spider','Dog','Hellmonster','Skeleton','Lon','Jeff','Kristof','Nelson','Alexandra'];

            var hash = this.hashStr(potentialMonsterHash[index],5381);
            var ind = Math.abs(hash % colors.length);
            var hash = this.hashStr(potentialMonsterHash[index],3581);
            var ind2 = Math.abs(hash % monster.length);
            var hash = this.hashStr(potentialMonsterHash[index],1581);
            var ind3 = Math.abs(hash % hair.length);
            var hash = this.hashStr(potentialMonsterHash[index],2881);
            var ind4 = Math.abs(hash % eyes.length);
            var hash = this.hashStr(potentialMonsterHash[index],7881);
            var ind5 = Math.abs(hash % mouth.length);
            var hash = this.hashStr(potentialMonsterHash[index],4528);
            var ind6 = Math.abs(hash % teeth.length);
            var hash = this.hashStr(potentialMonsterHash[index],1526);
            var ind7 = Math.abs(hash % nam1.length);
            var hash = this.hashStr(potentialMonsterHash[index],4518);
            var ind8 = Math.abs(hash % nam2.length);
            var hash = this.hashStr(potentialMonsterHash[index],1258);
            var ind9 = Math.abs(hash % grad.length);
            var hash = this.hashStr(potentialMonsterHash[index],1250);
            var ind10 = Math.abs(hash % colors.length);
            var hash = this.hashStr(potentialMonsterHash[index],1112);
            var ind11 = Math.abs(hash % rnd.length);
            //alert(colors[ind] + ' '+ ind +' : '+ colors[ind2]+ ' '+ ind2);

            var eyecolor = colors[ind10];
            var rndo = rnd[ind11];
            if (rndo<9){eyecolor='#000'};

            columns[index] = {
                color : colors[ind],
                monster : monster[ind2],
                hair : hair[ind3],
                eyes : eyes[ind4],
                iris : iris[ind4],
                mouth : mouth[ind5],
                teeth : teeth[ind6],
                nam1 : nam1[ind7],
                nam2 : nam2[ind8],
                grad : grad[ind9],
                grad2 : eyecolor
            };
        }

        // Starting monster
        columns[index+1] = {
            color : '#42bcf4',
                monster : 'monster',
                hair : 'hair',
                eyes : 'eyes3',
                iris : 'iris3',
                mouth : 'mouth',
                teeth : 'teeth3',
                nam1 : 'Jeff The Monster Slayer',
                nam2 : '',
                grad : 'grad',
                grad2 : '#000'
        };

        this.itemElement = Object.keys(columns).map(key => columns[key]);
       //alert(JSON.stringify(this.itemElement));
    }

    //djb2 hash
    hashStr(str, hash) {
        for (var i = 0; i < str.length; i++) {
            var charCode = str.charCodeAt(i);
            hash = ((hash << 5) + hash) + charCode; /* hash * 33 + c */
        }
        return hash;    
    }

    /**
     * Prepare the transaction
     */
    prepareTransaction() {
        // Create a new object to not affect the view
        let cleanTransferTransaction = nem.model.objects.get("transferTransaction");

        // Clean recipient
        cleanTransferTransaction.recipient = this.formData.recipient.toUpperCase().replace(/-/g, '');

        // Amount is 0
        cleanTransferTransaction.amount = 0;

        // Set multisig, if selected
        if (this.formData.isMultisig) {
            cleanTransferTransaction.isMultisig = true;
            cleanTransferTransaction.multisigAccount = this.formData.multisigAccount;
        }

        // Set the message
        cleanTransferTransaction.message = '';
        cleanTransferTransaction.messageType = this.formData.messageType;

        // Prepare transaction object according to transfer type
        let entity;

        cleanTransferTransaction.mosaics = null;
        // Prepare
        entity = nem.model.transactions.prepare("transferTransaction")(this.common, cleanTransferTransaction, this._Wallet.network);

        // Set the entity for fees in view
        this.preparedTransaction = entity;

        // Return prepared transaction
        return entity;
    }

    /**
     * Prepare and broadcast the transaction to the network
     */
    send() {
        // Disable send button
        this.okPressed = true;

        // Get account private key for preparation or return
        if (!this._Wallet.decrypt(this.common)) return this.okPressed = false;

        // Prepare the transaction
        let entity = this.prepareTransaction();

        // Sending will be blocked if recipient is an exchange and no message set
        if (!this._Helpers.isValidForExchanges(entity)) {
            this.okPressed = false;
            this._Alert.exchangeNeedsMessage();
            return;
        }

        // Use wallet service to serialize and send
        this._Wallet.transact(this.common, entity).then(() => {
            this._$timeout(() => {
                // Enable send button
                this.okPressed = false;
                // Reset all
                this.init();
                return;
            });
        }, () => {
            this._$timeout(() => {
                // Delete private key in common
                this.common.privateKey = '';
                // Enable send button
                this.okPressed = false;
                return;
            });
        });
    } 

}

export default NEMonsterCtrl;
'''
'''--- src/app/modules/NEMonster/setup/NEMonster.html ---
<div class="NEMonster-page">
  <div class="container-fluid main">
    <div class="row">
      <div class="col-sm-9">
        <h2>NEMonster</h2>
      </div>
    </div>

    <div class="col-md-9 col-lg-7">

      <!-- 2 row box -->
      <div class="panel-heading">
        <h3>Collection <i class="fa fa-refresh" style="cursor:pointer;margin-left:10px;" ng-click="$ctrl.init();"></i></h3> 
        <paginate ng-show="$ctrl.itemElement.length > 4" data="$ctrl.itemElement" current-page="$ctrl.currentPage" page-size="$ctrl.pageSize"></paginate>
      </div>

      <!-- 2 row box -->
      <div class="col-sm-6" ng-repeat="value in $ctrl.itemElement | startFrom:$ctrl.currentPage*$ctrl.pageSize | limitTo:$ctrl.pageSize">
        <br><br>
        <div style="padding-left:100px"><b>{{ value['nam1']}} {{ value['nam2']}}</b> </div>
        <br>

        <div class="MonsterContainer">
          <div class="{{ value['monster']}} {{ value['grad']}}" style="background-color:{{ value['color'] }}"></div>   
          <div class="{{ value['hair']}}" style="background:{{ value['color'] }}"></div>
          <div class="face">
            <div class="{{ value['eyes']}}">
              <div class="{{ value['iris']}}" style="background-color:{{ value['grad2'] }}">
                <div></div>
                <div></div>
              </div>
            </div>
          </div>
          <div class="{{ value['mouth']}}"></div>   
          <div class="{{ value['teeth']}}">
            <div></div>
            <div></div>
          </div>
          <div class="Monstertext"></div>
        </div>           
      </div>
      <!-- end 2 row box-->

    </div>

    <!-- Information panel -->
    <div class="col-md-3 col-lg-5">
      <div class="panel-heading">
        <h3>{{'NEMONSTER_GET' | translate}}</h3>
      </div>

      
      <div class="panel-body row">
        <div class="col-md-12 col-lg-12">
          <p>{{'NEMONSTER_DESC' | translate}} </p>
        </div>
      </div>

      <br>
       
      <fee-input tx="$ctrl.preparedTransaction" is-multisig="$ctrl.formData.isMultisig"></fee-input>

      <!-- Password Field -->
      <password-input common="$ctrl.common"></password-input>
      <!-- Send button is disabled if already pressed or no password or no clean recipient address or message is supposed to be encrypted but no recipient public key or is a mosaic transfer and no mosaics in array or if amount is invalid or if characters left are negative or if hex message is not hex only -->
      <button class="btn btn-success" type="submit" ng-disabled=" $ctrl.okPressed || !$ctrl.common.password.length && $ctrl._Wallet.algo !== 'ledger'" ng-click="$ctrl.send()">
        <i class="fa fa-send"></i> {{ 'GENERAL_SEND' | translate }} / (Hunt NEMonsters)
      </button>
    </div>

  </div>
</div>
'''
'''--- src/app/modules/account/account.config.js ---
function AccountConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.account', {
            url: '/account',
            controller: 'AccountCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/account/account.html',
            title: 'Account'
        });

};

export default AccountConfig;
'''
'''--- src/app/modules/account/account.controller.js ---
import nem from 'nem-sdk';

class AccountCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor($localStorage, $location, Alert, Wallet, DataStore, $timeout, DataBridge, Trezor, Ledger) {
        'ngInject';

        //// Module dependencies region ////

        this._Wallet = Wallet;
        this._location = $location;
        this._storage = $localStorage;
        this._Alert = Alert;
        this._DataStore = DataStore;
        this._$timeout = $timeout;
        this._DataBridge = DataBridge;
        this._Trezor = Trezor;
        this._Ledger = Ledger;

        //// End dependencies region ////

        //// Module properties region ////

        // Store the selected wallet
        this.selectedWallet = undefined;

         // Show / Hide account selection depending of number of accounts
        this.showAccounts = false;

        // Store the label for new account
        this.newAccountLabel = "";

        // Show the password input for mobile wallet QR
        this.showMobileQRPass = true;

        // Show the password input for mobile account QR
        this.showMobileAccountQRPass = true;

        // Common object to contain our password & private key data for adding account
        this.common = nem.model.objects.get("common");

        // Common object to contain our password & private key data for reveal
        this.commonPK = nem.model.objects.get("common");

        // Common object to contain our password & private key data for QR wallet
        this.commonQR = nem.model.objects.get("common");

        // Common object to contain our password & private key data for QR account
        this.commonAccountQR = nem.model.objects.get("common");

        // Prevent users to click twice on button when already processing
        this.okPressed = false;

        //// End properties region ////

        // Generate the account info QR
        this.generateAccountInfoQR();

        // Check number of accounts in wallet to show account selection in view
        this.checkNumberOfAccounts();
    }

    //// Module methods region ////

    /**
     * Generate the account info QR
     */
    generateAccountInfoQR() {
        // Account info model for QR
        let QR = nem.model.objects.create("accountInfoQR")(this._Wallet.network === nem.model.network.data.testnet.id ? 1 : 2, 1, this._Wallet.currentAccount.address, this._Wallet.currentAccount.label);
        let code = kjua({
            size: 256,
            text: JSON.stringify(QR),
            fill: '#000',
            quiet: 0,
            ratio: 2,
        });
        $('#accountInfoQR').html("");
        $('#accountInfoQR').append(code);
        return;
    }

    /**
     * Generate the mobile wallet QR
     */
    generateWalletQR() {
        let QR = this._Wallet.generateQR(this.commonQR);
        if(QR) {
            $('#mobileWalletQR').html("");
            $('#mobileWalletQR').append(QR);
            // Hide the password input for export to mobile qr
            this.showMobileQRPass = false;
        }
        this.reset();
        return;
    }

    /**
     * Generate the mobile account QR
     */
    generateAccountQR() {
        let QR = this._Wallet.generateCurrentAccountQR(this.commonAccountQR);
        if(QR) {
            $('#mobileAccountQR').html("");
            $('#mobileAccountQR').append(QR);
            // Hide the password input for export to mobile qr
            this.showMobileAccountQRPass = false;
        }
        this.reset();
        return;
    }

    /**
     * Reveal the private key
     */
    showPrivateKey() {
        // Get private key
        if (!this._Wallet.decrypt(this.commonPK)) this.reset();
        return;
    }

    /**
     * Change current account
     *
     * @param {number} accountIndex - The account index in the wallet.accounts object
     */
    changeCurrentAccount(accountIndex) {
        // Close the connector
        this._DataBridge.connector.close()
        this._DataStore.connection.status = false;
        // Reset DataBridge service properties
        this._DataBridge.reset();
        // Set the selected account
        this._Wallet.useAccount(this._Wallet.current, accountIndex);
        // Change endpoint port to websocket port
        let endpoint = nem.model.objects.create("endpoint")(this._Wallet.node.host, nem.model.nodes.websocketPort);
        // Create a connector
        let connector = nem.com.websockets.connector.create(endpoint, this._Wallet.currentAccount.address);
        // Open the connection with the connector
        this._DataBridge.openConnection(connector);
        // Redirect to dashboard
        this._location.path('/dashboard');
        return;
    }

    /**
     * Check the number of accounts in wallet
     */
    checkNumberOfAccounts() {
        if (Object.keys(this._Wallet.current.accounts).length > 1) {
            this.showAccounts = true;
        }
        return;
    }

    /**
     * Add a new bip32 account into the wallet
     */
    addNewAccount() {
        this.okPressed = true;
        return this._Wallet.addAccount(this.common, this.newAccountLabel).then((res) => {
            this._$timeout(() => {
                this.okPressed = false;
                this.checkNumberOfAccounts();
                // Hide modal
                $("#addAccountModal").modal('hide');
                this.reset();
                return;
            });
        },
        (err) => {
            this._$timeout(() => {
                this.okPressed = false;
                this.reset();
                return;
            });
        });
    }

    /**
     * Trigger download of wallet once prepared
     */
    downloadWallet() {
        if (this._Wallet.prepareDownload(this.selectedWallet)) {
            // Simulate click to trigger download
            document.getElementById("downloadWallet").click();
            return;
        }
    }

    /**
     * Copy the account address to clipboard
     */
    copyAddress() {
        var dummy = document.createElement("input");
        document.body.appendChild(dummy);
        dummy.setAttribute("id", "dummy_id");
        dummy.setAttribute('value', this._Wallet.currentAccount.address);
        dummy.select();
        document.execCommand("copy");
        document.body.removeChild(dummy);
        alert("Address copied!");
    }

    /**
     * Reset
     */
    reset() {
        this.common = nem.model.objects.get("common");
        this.commonPK = nem.model.objects.get("common");
        this.commonQR = nem.model.objects.get("common");
        this.commonAccountQR = nem.model.objects.get("common");
        this.newAccountLabel = "";
        return;
    }

    //// End methods region ////

}

export default AccountCtrl;

'''
'''--- src/app/modules/account/account.html ---
<div class="account-page">
  <div class="container-fluid main">

    <div class="row">
      <div class="col-sm-8">
        <h2>{{ 'ACCOUNT_TITLE' | translate }}</h2>
      </div>
    </div>

    <div class="row">
      <div class="col-md-6">

        <div class="panel-heading">
           <h3>{{ 'ACCOUNT_ACCOUNT_INFORMATION' | translate }}</h3>
        </div>
        <div class="panel-body">
          <fieldset class="form-group" ng-show="$ctrl.showAccounts">
            <div class="input-group">
              <span class="input-group-btn">
                <label>{{ 'ACCOUNT_ACCOUNT_SELECT_LABEL' | translate }}: </label>
              </span>
              <select class="form-control" ng-model="$ctrl.selectedAccount" ng-options="address as (account.label || account.address) for (address, account) in $ctrl._Wallet.current.accounts" ng-change="$ctrl.changeCurrentAccount($ctrl.selectedAccount)">
                <option value="" disabled selected>{{ 'ACCOUNT_ACCOUNT_SELECT' | translate }}</option>
              </select>
            </div>
          </fieldset>

          <!-- ACCOUNT ADDRESS -->
          <fieldset class="form-group">
            <div class="input-group">
              <span class="input-group-btn">
                <label>{{ 'GENERAL_ADDRESS' | translate }}: </label>
              </span>
              <span class="form-control">{{ $ctrl._DataStore.account.metaData.account.address | fmtAddress }}</span>
              <span class="input-group-btn" style="min-width: inherit;">
                <button class="btn btn-primary" type="button" ng-click="$ctrl.copyAddress();"><i class="fa fa-clipboard" ></i></button>
              </span>
            </div>
          </fieldset>

          <!-- ACCOUNT PUBLIC KEY -->
          <fieldset class="form-group">
            <div class="input-group">
              <span class="input-group-btn">
                <label>{{ 'GENERAL_PUBLIC_KEY' | translate }}: </label>
              </span>
              <span class="block">
                <span type="text" class="form-control"> {{ $ctrl._DataStore.account.metaData.account.publicKey || 'ACCOUNT_NO_PUBLIC_KEY' | translate }}</span>
              </span>
            </div>
          </fieldset>

          <fieldset class="form-group">
            <div class="input-group">
              <span class="input-group-btn">
                <label>{{ 'ACCOUNT_IMPORTANCE_SCORE' | translate }}: </label>
              </span>
              <span class="form-control">{{ ($ctrl._DataStore.account.metaData.account.importance | fmtNemImportanceScore)[0] }}.{{ ($ctrl._DataStore.account.metaData.account.importance | fmtNemImportanceScore)[1] }} * 10<sup>(-4)</sup></span>
            </div>
          </fieldset>

          <fieldset class="form-group">
            <div class="input-group">
              <span class="input-group-btn">
                <label>{{ 'ACCOUNT_VESTED_BALANCE' | translate }}: </label>
              </span>
              <span class="form-control">{{ ($ctrl._DataStore.account.metaData.account.vestedBalance | fmtNemValue)[0] }}.{{ ($ctrl._DataStore.account.metaData.account.vestedBalance | fmtNemValue)[1] }} <b>XEM</b></span>
            </div>
          </fieldset>

          <fieldset class="form-group" ng-show="$ctrl._Wallet.algo == 'trezor'" ng-click="$ctrl._Trezor.showAccount($ctrl._Wallet.currentAccount)">
          <button type="button" class="btn btn-success">
            <i class="fa fa-eye"></i> {{ 'ACCOUNT_SHOW_ON_TREZOR_BTN' | translate }}
          </button>
          </fieldset>

          <fieldset class="form-group" ng-show="$ctrl._Wallet.algo == 'ledger'" ng-click="$ctrl._Ledger.showAccount($ctrl._Wallet.currentAccount)">
          <button type="button" class="btn btn-success">
            <i class="fa fa-eye"></i> {{ 'ACCOUNT_SHOW_ON_LEDGER_BTN' | translate }}
          </button>
          </fieldset>

          <fieldset class="form-group">
          <button type="button" class="btn btn-success" data-toggle="modal" data-target="#addAccountModal">
            <i class="fa fa-plus"></i> {{ 'ACCOUNT_ADD_NEW_ACCOUNT_BTN' | translate }}
          </button>
          <!-- <button type="button" class="btn btn-default">Add an existing account into wallet</button>-->
          </fieldset>
        </div>
      </div>

      <div class="col-md-6">
        <div ng-show="$ctrl._Wallet.algo !== 'trezor' && $ctrl._Wallet.algo !== 'ledger'">
          <div class="panel-heading">
            <h3>{{ 'GENERAL_PRIVATE_KEY' | translate }}</h3>
          </div>
          <div class="panel-body">
            <div class="form-group">
              <p class="bg-info"><span ng-bind-html="'ACCOUNT_PRIVATE_KEY_NOTE' | translate"></span></p>
              <div class="input-group">
                <span class="input-group-btn short" ng-show="$ctrl.commonPK.privateKey">
                  <label>{{ 'GENERAL_PRIVATE_KEY' | translate }}:</label>
                </span>
                <password-input common="$ctrl.commonPK" ng-show="$ctrl._Wallet.algo !== 'trezor' && $ctrl._Wallet.algo !== 'ledger' && !$ctrl.commonPK.privateKey"></password-input>
                <input class="form-control" ng-model="$ctrl.commonPK.privateKey" ng-show="$ctrl.commonPK.privateKey" readOnly></input>
                <span class="input-group-btn showHide">
                  <button class="btn btn-primary" type="button" ng-show="!$ctrl.commonPK.privateKey" ng-disabled="$ctrl._Wallet.algo !== 'trezor' && $ctrl._Wallet.algo !== 'ledger' && !$ctrl.commonPK.password" ng-click="$ctrl.showPrivateKey()" title="{{ 'ACCOUNT_PRIVATE_KEY_SHOW' | translate }}" style="margin-bottom: 15px;" ng-style="$ctrl._Wallet.algo === 'trezor' || $ctrl._Wallet.algo === 'ledger' ? {'width': '100%'} : {}">
                    <i class="fa fa-plus"></i>
                  </button>
                  <button class="btn btn-danger" type="button" ng-show="$ctrl.commonPK.privateKey" ng-click="$ctrl.reset()" title="{{ 'GENERAL_CLEAR_ALL' | translate }}">
                    <i class="fa fa-minus"></i>
                  </button>
                </span>
              </div>
            </div>
          </div>
        </div>

        <div class="panel-heading">
          <h3>{{'ACCOUNT_EXPORT_MOBILE' | translate }}</h3>
        </div>
        <div class="panel-body">
          <div class="form-group">
            <div class="row">
              <div class="col-sm-6">
                <button type="button" class="btn btn-block" data-toggle="modal" data-target="#accountInfoModal">{{'ACCOUNT_INFO_QR_BTN' | translate }}</button>
              </div>
              <div class="col-sm-6">
                <button type="button" class="btn btn-block" data-toggle="modal" data-target="#walletModalMobileApps" ng-disabled="$ctrl._Wallet.algo === 'trezor' || $ctrl._Wallet.algo === 'ledger'">{{'ACCOUNT_WALLET_QR_BTN_2' | translate }}</button>
              </div>
            </div>
            <div class="row" style="margin-top: 15px;">
              <div class="col-sm-6">
              </div>
              <div class="col-sm-6">
                <button type="button" class="btn btn-block" data-toggle="modal" data-target="#accountModalMobileApps" ng-disabled="$ctrl._Wallet.algo === 'trezor' || $ctrl._Wallet.algo === 'ledger'">{{'ACCOUNT_QR_BTN_2' | translate }}</button>
              </div>
            </div>
          </div>
        </div>

        <div class="panel-heading">
          <h3>{{ 'ACCOUNT_BACKUP_WALLET' | translate }}</h3>
        </div>
        <div class="panel-body">
          <p class="bg-info" ng-bind-html="'ACCOUNT_BACKUP_WALLET_NOTE' | translate"></p>

          <fieldset class="form-group">
            <div class="input-group" >
              <span class="input-group-btn">
                <label>{{ 'ACCOUNT_BACKUP_WALLET' | translate }}: </label>
              </span>
              <select class="form-control" ng-model="$ctrl.selectedWallet" ng-options="wallet.name group by (wallet.accounts[0].network | toNetworkName) for wallet in $ctrl._storage.wallets">
                <option value="" disabled selected>{{ 'LOGIN_SELECT_WALLET' | translate }}</option>
              </select>
              <span class="input-group-btn dLoad">
                <button class="btn btn-primary" type="button" ng-show="$ctrl.selectedWallet" ng-click="$ctrl.downloadWallet()" title="{{'ACCOUNT_BACKUP_WALLET_DOWNLOAD' | translate}}"><i class="fa fa-download"></i></button>
              </span>
            <a id="downloadWallet" target="_blank"></a>
          </div>
        </fieldset>
      </div>

    </div>
  </div>

  <!-- Account info qr Modal -->
  <div id="accountInfoModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
      <!-- Modal content-->
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal">&times;</button>
          <h4 class="modal-title">{{ 'ACCOUNT_INFO_QR_TITLE' | translate }}</h4>
        </div>
        <div class="modal-body">
          <center><div id="accountInfoQR"></div></center>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-default" data-dismiss="modal">{{ 'GENERAL_CLOSE' | translate }}</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Wallet qr Modal -->
  <div id="walletModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
      <!-- Modal content-->
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal">&times;</button>
          <h4 class="modal-title">{{ 'ACCOUNT_WALLET_QR_BTN' | translate }}</h4>
        </div>
        <div class="modal-body">
         <center><div id="exportWalletQR"></div></center>
         <p class="text-center">{{ 'ACCOUNT_WALLET_QR_NOTE' | translate }}</p>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-default" data-dismiss="modal">{{ 'GENERAL_CLOSE' | translate }}</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Wallet qr Modal for ios and android -->
  <div id="walletModalMobileApps" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog">
      <!-- Modal content-->
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" ng-click="$ctrl.showMobileQRPass = true;">&times;</button>
          <h4 class="modal-title">{{ 'ACCOUNT_WALLET_QR_ANDROID_IOS_TITLE' | translate }}</h4>
        </div>
        <div class="modal-body">
          <div class="text-center" id="mobileWalletQR" ng-show="!$ctrl.showMobileQRPass"></div>
          <div ng-show="$ctrl.showMobileQRPass">
            <!-- Password Field -->
            <password-input common="$ctrl.commonQR"></password-input>
            <button class="btn btn-success"
              type="submit" ng-disabled="$ctrl.okPressed || ($ctrl._Wallet.algo !== 'trezor' && $ctrl._Wallet.algo !== 'ledger') && !$ctrl.commonQR.password.length" ng-click="$ctrl.generateWalletQR()">
              {{'GENERAL_REVEAL' | translate }}
            </button>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-default" data-dismiss="modal" ng-click="$ctrl.showMobileQRPass = true;">{{ 'GENERAL_CLOSE' | translate }}</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Wallet qr Modal for ios and android -->
  <div id="accountModalMobileApps" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog">
      <!-- Modal content-->
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" ng-click="$ctrl.showMobileAccountQRPass = true;">&times;</button>
          <h4 class="modal-title">{{ 'ACCOUNT_QR_ANDROID_IOS_TITLE' | translate }}</h4>
        </div>
        <div class="modal-body">
          <div class="text-center" id="mobileAccountQR" ng-show="!$ctrl.showMobileAccountQRPass"></div>
          <div ng-show="$ctrl.showMobileAccountQRPass">
            <!-- Password Field -->
            <password-input common="$ctrl.commonAccountQR"></password-input>
            <button class="btn btn-success"
              type="submit" ng-disabled="$ctrl.okPressed || ($ctrl._Wallet.algo !== 'trezor' && $ctrl._Wallet.algo !== 'ledger') && !$ctrl.commonAccountQR.password.length" ng-click="$ctrl.generateAccountQR()">
              {{'GENERAL_REVEAL' | translate }}
            </button>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-default" data-dismiss="modal" ng-click="$ctrl.showMobileAccountQRPass = true;">{{ 'GENERAL_CLOSE' | translate }}</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Add new account modal -->
  <div id="addAccountModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
      <!-- Modal content-->
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal">&times;</button>
          <h4 class="modal-title">{{ 'ACCOUNT_ADD_NEW_ACCOUNT_BTN' | translate }}</h4>
        </div>
        <p class="bg-danger"><i class="fa fa-exclamation-triangle "></i> <span ng-bind-html="'ACCOUNT_ADD_NEW_ACCOUNT_WARNING' | translate"></span></p>
        <div class="modal-body">
          <!-- Password Field -->
          <password-input common="$ctrl.common"></password-input>
          <fieldset class="form-group">
            <div class="input-group">
              <span class="input-group-btn">
                <label>{{ 'GENERAL_ACCOUNT_LABEL' | translate }}:</label>
              </span>
              <input class="form-control form-control-lg"
                type="text"
                placeholder="{{ 'GENERAL_ACCOUNT_LABEL' | translate }} {{ 'GENERAL_OPTIONAL' | translate }}"
              ng-model="$ctrl.newAccountLabel"/>
            </div>
          </fieldset>
          <button class="btn btn-success"
            type="submit" ng-disabled="$ctrl.okPressed || ($ctrl._Wallet.algo !== 'trezor' && $ctrl._Wallet.algo !== 'ledger') && !$ctrl.common.password.length" ng-click="$ctrl.addNewAccount()">
            {{ 'ACCOUNT_ADD_NEW_ACCOUNT' | translate }}
          </button>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-default" data-dismiss="modal">{{ 'GENERAL_CLOSE' | translate }}</button>
        </div>
      </div>
    </div>
  </div>

</div>

'''
'''--- src/app/modules/account/index.js ---
import angular from 'angular';

// Create the module where our functionality can attach to
let accountModule = angular.module('app.account', []);

// Include our UI-Router config settings
import AccountConfig from './account.config';
accountModule.config(AccountConfig);

// Controllers
import AccountCtrl from './account.controller';
accountModule.controller('AccountCtrl', AccountCtrl);

export default accountModule;

'''
'''--- src/app/modules/addressBook/addressBook.config.js ---
function AddressBookConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.addressBook', {
            url: '/address-book',
            controller: 'AddressBookCtrl', 
            controllerAs: '$ctrl',
            templateUrl: 'modules/addressBook/addressBook.html',
            title: 'Address book'
        });

};

export default AddressBookConfig;
'''
'''--- src/app/modules/addressBook/addressBook.controller.js ---
import nem from 'nem-sdk';
import Helpers from '../../utils/helpers';

class AddressBookCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Wallet, Alert, $state, AddressBook) {
        'ngInject';

        //// Module dependencies region ////

        this._Wallet = Wallet;
        this._Alert = Alert;
        this._$state = $state;
        this._AddressBook = AddressBook;
        this._Helpers = Helpers;

        //// End dependencies region ////

        //// Module properties region ////

        this.formData = {};
        this.formData.label = '';
        this.formData.address = '';
        this.is_edit = false;
        this.editElem = {};
        this.removeElem = {};

        // Sort
        this.revers = false;
        this.propertyName = 'label';

        // Contact list
        this.contacts = this._AddressBook.getContacts(this._Wallet.current);

        // Needed to prevent user to click twice on send when already processing
        this.okPressed = false;

        // Contacts to address book pagination properties
        this.currentPage = 0;
        this.pageSize = 10;

        //// End properties region ////
    }

    //// Module methods region ////

    /**
     * Sort contacts by label
     *
     * @param {object} propertyName - The property for filter
     */
    sortBy(propertyName) {
        this.revers = (this.propertyName === propertyName) ? !this.revers : false;
        this.propertyName = propertyName;
    };

    /**
     * Open modal in "add" mode
     */
    showAddContact() {
        this.is_edit = false;
        this.cleanData();
        $('#contactModal').modal('show');
    }

    /**
     * Add new contact to address book
     */
    add() {
        // Disable send button;
        this.okPressed = true;

        // Check address
        if(!this.checkAddress()) return;
        // Check presence
        if(this.checkPresence()) return;

        this.contacts.push({
            "label": this.formData.label,
            "address": nem.utils.format.address(this.formData.address)
        });

        // Save data to locale storage
        this.saveAddressBook();

        // Reset data
        this.cleanData();

        $('#contactModal').modal('hide');

        // Enable send button;
        this.okPressed = false;
    }

    /**
     * Open modal in "edit" mode
     *
     * @param {object} elem - The object to edit
     */
    showEditContact(elem) {
        this.is_edit = true;
        this.editElem = elem;
        this.formData.label = elem.label;
        this.formData.address = elem.address;
        $('#contactModal').modal('show');
    }

    /**
     * Save new values contact
     */
    edit() {
        // Disable send button;
        this.okPressed = true;

        // Check address
        if(!this.checkAddress()) return;

        var indexOfElem = this.contacts.indexOf(this.editElem);
        this.contacts[indexOfElem].label = this.formData.label;
        this.contacts[indexOfElem].address = nem.utils.format.address(this.formData.address);

        // Save data to locale storage
        this.saveAddressBook();

        // Reset data
        this.cleanData();

        $('#contactModal').modal('hide');

        // Enable send button;
        this.okPressed = false;
    }

    /**
     * Check if contact address is valid
     */
    checkAddress() {
        // Check address
        if(nem.model.address.clean(this.formData.address).length !== 40 || !nem.model.address.isValid(this.formData.address) || !nem.model.address.isFromNetwork(this.formData.address, this._Wallet.network)) {
            this._Alert.invalidAddress();
            this.okPressed = false;
            return false;
        }
        return true; 
    }

    /**
     * Check if contact address and label already exists
     */
    checkPresence() {
        for (let i = 0; i < this.contacts.length; i++) {
            if (nem.model.address.clean(this.contacts[i].address) === nem.model.address.clean(this.formData.address) || this.contacts[i].label === this.formData.label) {
                this._Alert.contactAlreadyInAddressBook();
                this.okPressed = false;
                return true;
            }
        }
        return false;
    }

    /**
     * Remove a contact from address book array
     *
     * @param {object} elem - The object to delete
     */
    removeContact(elem) {
        this.removeElem = elem;
        $('#removeContactModal').modal('show');
    }

    /**
     * Remove a contact
     */
    remove() {
        // Disable send button;
        this.okPressed = true;

        // If the deleted element is the elem 0 and length of array mod 5 gives 0 (means it is the last object of the page),
        // we return a page behind unless it is page 1.
        if (this.contacts.indexOf(this.removeElem) === 0 && this.currentPage + 1 > 1 && (this.contacts.length - 1) % 5 === 0) {
            this.currentPage = this.currentPage - 1;
        }

        this.contacts.splice(this.contacts.indexOf(this.removeElem), 1);
        this.removeElem = {};

        this.saveAddressBook();

        $('#removeContactModal').modal('hide');

        // Enable send button;
        this.okPressed = false;
    }

    /**
     * Save data to locale storage
     */
    saveAddressBook() {
        return this._AddressBook.save(this._Wallet.current, this.contacts);
    }

    /**
     * Clean temp data
     */
    cleanData() {
        this.formData.label = "";
        this.formData.address = "";
        this.editElem = {};
    }

    /**
     * Export address book to .adb file
     */
    exportAddressBook() {
        let wordArray = nem.crypto.js.enc.Utf8.parse(angular.toJson(this.contacts));
        // Word array to base64
        let base64 = nem.crypto.js.enc.Base64.stringify(wordArray);
        // Set download element attributes
        $("#exportAddressBook").attr('href', 'data:application/octet-stream,' + base64);
        $("#exportAddressBook").attr('download', this._Wallet.current.name + '.adb');
        // Simulate click to trigger download
        document.getElementById("exportAddressBook").click();
        return;
    }

    /**
     * Trigger for select .adb file
     */
    uploadAddressBook() {
        document.getElementById("uploadAddressBook").click();
    }

    /**
     * Import address book from .adb file
     *
     * @param $fileContent - content file for import
     */
    importAddressBook($fileContent) {
        let contacts = JSON.parse(nem.crypto.js.enc.Utf8.stringify(nem.crypto.js.enc.Base64.parse($fileContent)));

        if (contacts.length) {
            for (var i = 0; i < contacts.length; i++) {
                if (typeof contacts[i].label != 'undefined' && typeof contacts[i].address != 'undefined') {
                    this.contacts.push(contacts[i]);
                }
            }

            $("#uploadAddressBook").val(null);

            // Save data to locale storage
            this.saveAddressBook();

            // Show alert
            this._Alert.addressBookFileSuccess();
        }
    }

    /**
     * Open transfer transaction module with selected contact as recipient
     *
     * @param address - account address
     */
    transferTransaction(address) {
        this._$state.go("app.transferTransaction", {address: address});
        return;
    }

    //// End methods region ////

}

export default AddressBookCtrl;
'''
'''--- src/app/modules/addressBook/addressBook.html ---
<div class="address-book-page">
  <div class="container-fluid main">

    <div class="row">
      <div class="col-sm-9">
        <h2>{{ 'ADDRESS_BOOK_TITLE' | translate }}</h2>
      </div>
    </div>

    <div class="row">
      <div class="col-sm-3 sidebar">
          <!-- <div class="panel-heading">
            <h3>{{ 'ADDRESS_BOOK_NAVIGATION' | translate }}</h3>
          </div> -->
          <div class="panel-body">
            <ul class="nav nav-pills nav-stacked">
              <li>
                <button type="button" class="btn btn-success" ng-click="$ctrl.showAddContact()">{{ 'ADDRESS_BOOK_NEW' | translate }}</button>
              </li>
              <li>
                <button type="button" ng-disabled="!$ctrl.contacts.length" class="btn btn-success" ng-click="$ctrl.exportAddressBook()">{{ 'ADDRESS_BOOK_EXPORT_BTN' | translate }}</button>
                <a id="exportAddressBook" class="hidden" target="_blank"></a>
              </li>
              <li>
                <button type="button" class="btn btn-success" ng-click="$ctrl.uploadAddressBook()">{{ 'ADDRESS_BOOK_IMPORT_BTN' | translate }}</button>
                <input id="uploadAddressBook" accept=".adb" style="visibility:hidden;position:absolute;" import-address-book-file="$ctrl.importAddressBook($fileContent)" type="file">
              </li>
            </ul>
          </div>
      </div>

      <div class="col-sm-9">
          <div class="panel-heading">
            <h3>{{ 'GENERAL_CONTACTS' | translate }}</h3>
            <paginate data="$ctrl.contacts" current-page="$ctrl.currentPage" page-size="$ctrl.pageSize"></paginate>
          </div>
          <table  class="table table-condensed">
            <thead>
            <tr>
              <th>
                <a href="javascript:;" ng-click="$ctrl.sortBy('label')">
                  <i class="fa" ng-show="$ctrl.propertyName === 'label'" ng-class="{'fa-caret-down': $ctrl.revers, 'fa-caret-up': !$ctrl.revers}"></i>&nbsp;&nbsp;{{ 'ADDRESS_BOOK_CONTACT_LABEL' | translate }}
                </a>
              </th>
              <th>{{ 'ADDRESS_BOOK_ACCOUNT_ADDRESS' | translate }}</th>
              <th>{{ 'ADDRESS_BOOK_ACTIONS' | translate }}</th>
            </tr>
            </thead>
            <tbody>
            <tr ng-repeat="contact in $ctrl.contacts | orderBy:$ctrl.propertyName:$ctrl.revers | startFrom:$ctrl.currentPage*$ctrl.pageSize | limitTo:$ctrl.pageSize">
              <td>{{contact.label}}</td>
              <td>{{contact.address}}</td>
              <td class="actions row">
                <div class="col-sm-4 inner">
                  <button type="button" class="btn btn-xs btn-success" ng-click="$ctrl.transferTransaction(contact.address)">{{ 'GENERAL_SEND_XEM' | translate }}</button>
                </div>
                <div class="col-sm-4">
                  <button type="button" class="btn btn-xs btn-success" ng-click="$ctrl.showEditContact(contact)">{{ 'GENERAL_EDIT' | translate }}</button>
                </div>
                <div class="col-sm-4 inner">
                  <button type="button" class="btn btn-xs btn-success" ng-click="$ctrl.removeContact(contact)">{{ 'GENERAL_REMOVE' | translate }}</button>
                </div>
              </td>
            </tr>
            </tbody>
          </table>
          <div class="panel-body" ng-show="!$ctrl.contacts.length">
            <p>{{ 'GENERAL_NO_RESULTS' | translate }}</p>
          </div>
          <!-- <div class="text-center bg-info">
            <small><b><i>{{ 'ADDRESS_BOOK_MAX_NUMBER' | translate }} {{ $ctrl.pageSize }}</i></b></small>
          </div> -->
      </div>
    </div>
  </div>
</div>

<!-- Add new account modal -->
<div id="contactModal" class="modal fade" role="dialog">
  <div class="modal-dialog modal-sm" role="document">
    <!-- Modal content-->
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h3 class="modal-title" ng-show="!$ctrl.is_edit">{{ 'ADDRESS_BOOK_NEW' | translate }}</h3>
        <h3 class="modal-title" ng-show="$ctrl.is_edit">{{ 'ADDRESS_BOOK_EDIT' | translate }}</h3>
      </div>
      <div class="modal-body">
        <div class="row">
          <div class="col-sm-12">
            <fieldset class="form-group">
              <div class="input-group">
                <span class="input-group-btn">
                  <label>{{ 'ADDRESS_BOOK_CONTACT_LABEL' | translate }}: </label>
                </span>
                <input class="form-control"
                  type="text"
                  placeholder="{{ 'ADDRESS_BOOK_CONTACT_LABEL' | translate }}"
                  ng-model="$ctrl.formData.label"/>
              </div>
            </fieldset>
            <fieldset class="form-group">
              <div class="input-group">
                <span class="input-group-btn">
                  <label>{{ 'FORM_ADDRESS_FIELD_PLACEHOLDER' | translate }}: </label>
                </span>
                <input class="form-control"
                  type="text"
                  placeholder="{{ 'FORM_ADDRESS_FIELD_PLACEHOLDER' | translate }}"
                  ng-model="$ctrl.formData.address"/>
              </div>
            </fieldset>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <!-- <button type="button" class="btn btn-success"  data-dismiss="modal">{{ 'GENERAL_CLOSE' | translate }}</button> -->
        <button class="btn btn-success" type="submit" ng-show="!$ctrl.is_edit" ng-disabled="$ctrl.okPressed || !$ctrl.formData.label || !$ctrl.formData.address" ng-click="$ctrl.add()">
          <i class="fa fa-plus"></i> {{ 'ADDRESS_BOOK_NEW_BTN' | translate }}
        </button>
        <button class="btn btn-success" type="submit" ng-show="$ctrl.is_edit" ng-disabled="$ctrl.okPressed || !$ctrl.formData.label || !$ctrl.formData.address" ng-click="$ctrl.edit()">
          <i class="fa fa-edit"></i> {{ 'ADDRESS_BOOK_EDIT_BTN' | translate }}
        </button>
      </div>
    </div>
  </div>
</div>

<!-- Remove account modal -->
<div id="removeContactModal" class="modal fade" role="dialog">
  <div class="modal-dialog modal-sm" role="document">    <!-- Modal content-->
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h3 class="modal-title">{{ 'ADDRESS_BOOK_REMOVE' | translate }}</h3>
      </div>
      <div class="modal-body">
        <div class="row">
          <div class="col-sm-12">
            <h5>{{ 'ADDRESS_BOOK_CONFIRM_DELETE' | translate }}</h5>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <!-- <button type="button" class="btn btn-success"  data-dismiss="modal">{{ 'GENERAL_CLOSE' | translate }}</button> -->
        <button class="btn btn-danger" type="submit" ng-disabled="$ctrl.okPressed" ng-click="$ctrl.remove()">
          <i class="fa fa-remove"></i> {{ 'ADDRESS_BOOK_REMOVE_BTN' | translate }}
        </button>
      </div>
    </div>
  </div>
</div>

'''
'''--- src/app/modules/addressBook/index.js ---
import angular from 'angular';

// Create the module where our functionality can attach to
let addressBookModule = angular.module('app.addressBook', []);

// Include our UI-Router config settings
import AddressBookConfig from './addressBook.config';
addressBookModule.config(AddressBookConfig);

// Controllers
import AddressBookCtrl from './addressBook.controller';
addressBookModule.controller('AddressBookCtrl', AddressBookCtrl);

export default addressBookModule;

'''
'''--- src/app/modules/apostille/audit/auditApostille.config.js ---
function AuditApostilleConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.auditApostille', {
            url: '/audit-apostille',
            controller: 'AuditApostilleCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/apostille/audit/auditApostille.html',
            title: 'Audit apostille'
        });

};

export default AuditApostilleConfig;
'''
'''--- src/app/modules/apostille/audit/auditApostille.controller.js ---
import nem from 'nem-sdk';
import Helpers from '../../../utils/helpers';

class AuditApostilleCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Wallet, Alert, $timeout, $filter, Nodes) {
        'ngInject';

        //// Module dependencies region ////

        this._Wallet = Wallet;
        this._Alert = Alert;
        this._$timeout = $timeout;
        this._$filter = $filter;
        this._Nodes = Nodes;

        //// End dependencies region ////

        //// Module properties region ////

        // Array of valid files to apostille
        this.auditResults = [];
        // Get the right nodes according to Wallet network
        this.nodes = this._Nodes.get(undefined, true);
        // Default node with search option activated
        this.searchNode = this._Wallet.searchNode;
        // Status of the node disconnected by default
        this.searchNodeStatus = false;
        // To show processing overlay
        this.isProcessing = false;
        // Audit result pagination properties
        this.currentPage = 0;
        this.pageSize = 5;

        //// End properties region ////

        // Init heartbeat
        this.getHeartBeat(this.searchNode);
    }

    //// Module methods region ////

    /**
     * Process the file to apostille and push to array
     *
     * @param {object} $fileContent - Base 64 content of the file 
     * @param {object} $fileData - Meta data of the file
     */
    processFile($fileContent, $fileData) {
        this.isProcessing = true;

        // Remove the meta part of $fileContent string (data:application/octet-stream;base64)
        let cleanedDataContent = $fileContent.split(/,(.+)?/)[1];
        // Base 64 to word array
        let parsedData = nem.crypto.js.enc.Base64.parse(cleanedDataContent);
        
        // Check if file is in apostille format
        if (!this.checkApostilleName($fileData.name)) {
            this.auditResults.push({
                'filename': $fileData.name,
                'owner': '',
                'fileHash': '',
                'result': this._$filter('translate')('APOSTILLE_AUDIT_WRONG_FORMAT'),
                'hash': ''
            });
            this.isProcessing = false;
            return;
        }

        // Build an array out of the filename
        let nameArray = Helpers.getFileName($fileData.name).match(/\S+\s*/g);

        // Recomposing the initial filename before apostille
        let initialNameArray = nameArray.splice(0, nameArray.length - 7);
        let initialFileName = "";
        for (let h = 0; h < initialNameArray.length; h++) {
            initialFileName += initialNameArray[h];
        }
        // Initial filename 
        initialFileName = initialFileName.replace(/^\s+|\s+$/, '') + "." + Helpers.getExtension($fileData.name);
        console.log(initialFileName);

        // Hash of the apostille transaction
        let apostilleTxHash = nameArray[nameArray.length - 4].replace(/^\s+|\s+$/, '');
        console.log(apostilleTxHash);

        // Get the Apostille transaction from the chain
        nem.com.requests.transaction.byHash(this._Wallet.node, apostilleTxHash).then((res) => {
            this._$timeout(() => {
                // Arrange
                let isMultisig = res.transaction.type === nem.model.transactionTypes.multisigTransaction;
                let owner = this._$filter('fmtPubToAddress')(res.transaction.signer, this._Wallet.network);
                let payload = isMultisig ? this._$filter('fmtHexMessage')(res.transaction.otherTrans.message) : this._$filter('fmtHexMessage')(res.transaction.message);
                let checksum = payload.substring(5, 13);
                console.log("Checksum: " + payload.substring(5, 13));
                // Get apostille hash (without checksum)
                let dataHash = payload.substring(13);
                console.log("Hash: " + payload.substring(13));
                // Object to contain our result
                let obj = this.createResultObject(initialFileName, owner, checksum, dataHash, nem.model.apostille.isSigned(checksum.substring(6)), apostilleTxHash);
                // Verify
                if (nem.model.apostille.verify(parsedData, res.transaction)) {
                    // Success
                    obj.result = this._$filter('translate')('APOSTILLE_AUDIT_SUCCESS');
                    this.auditResults.push(obj);
                    this.isProcessing = false;
                    return;
                } else {
                    // Fail
                    obj.result = this._$filter('translate')('APOSTILLE_AUDIT_FAIL');
                    this.auditResults.push(obj);
                    this.isProcessing = false;
                    return;
                }
            });
        }, (err) => {
            this._$timeout(() => {
                console.log(err);
                let obj = this.createResultObject(initialFileName, '', '', '', false, apostilleTxHash);
                obj.result = this._$filter('translate')('APOSTILLE_AUDIT_NOT_FOUND');
                this.auditResults.push(obj);
                console.log(this.auditResults);
                this.isProcessing = false;
                return;
            });
        });
    }

    /**
     * Get heartbeat of a given node
     *
     * @param {string} endpoint - An endpoint object
     */
    getHeartBeat(endpoint) {
        this.searchNodeStatus = false;
        return nem.com.requests.endpoint.heartbeat(endpoint).then((data) => {
            this._$timeout(() => {
                if(data.code === 1 && data.type === 2) {
                    this.searchNodeStatus = true;
                } else {
                    this.searchNodeStatus = false;
                }
            });
        },
        (err) => {
            this._$timeout(() => {
                this.searchNodeStatus = false;
            });
        });
    }

    /**
     * Clear all audit data
     */
    clearAll() {
        // Clear result array
        this.auditResults = [];
        // Reinitiate to page 1
        this.currentPage = 0;
        // Clear file input
        $("#fileToNotary").val(null);
    }

    /**
     * Check if an apostille file name is valid
     *
     * @param {string} filename - The full name of the apostille file
     * 
     * @return {boolean} - True if valid, false otherwise
     */
    checkApostilleName(filename) {
        // Build an array out of the filename
        let nameArray = Helpers.getFileName(filename).match(/\S+\s*/g);
        if (nameArray[nameArray.length - 6] === undefined || nameArray[nameArray.length - 5].replace(/^\s+|\s+$/, '') !== 'TX') return false;
        let mark = nameArray[nameArray.length - 6].replace(/^\s+|\s+$/, '');
        if (mark === "Apostille" || mark === "ApostilleSigned") return true;
        return false;
    };

    /**
     * Create an apostille result object
     *
     * @param {string} initialFileName - The original file name
     * @param {string} apostilleSigner - The signer account of the apostille transaction
     * @param {string} checksum - The checksum of the apostille
     * @param {string} dataHash - The hash of the file content
     * @param {boolean} isPrivate - True if hash is signed, false otherwise
     * @param {string} apostilleTxHash - Transaction hash of the apostille
     * 
     * @return {object} - A result object
     */
    createResultObject(initialFileName, apostilleSigner, checksum, dataHash, isPrivate, apostilleTxHash) {
        return {
            'filename': initialFileName,
            'owner': apostilleSigner,
            'fileHash': checksum + dataHash,
            'private': isPrivate,
            'result': '',
            'hash': apostilleTxHash
        }
    }

    //// End methods region ////

}

export default AuditApostilleCtrl;
'''
'''--- src/app/modules/apostille/audit/auditApostille.html ---
<div class="audit-apostille-page">

  <div class="loading-overlay" ng-show="$ctrl.isProcessing">
    <div class="loader text-center">
      <img src="images/logomark.png" class="loader-image"/>
      <p class="loading-text">{{ 'GENERAL_PROCESSING' | translate }}</p>
    </div>
  </div>

  <div class="container-fluid main">
    <div class="row">
      <div class="col-xs-12 col-md-7">
        <h2>{{ 'APOSTILLE_AUDIT_TITLE' | translate }}</h2>
      </div>
    </div>

    <div class="row">

      <div class="col-sm-4">
        <div class="panel-heading">
          <h4>{{ 'APOSTILLE_AUDIT_FILES' | translate }}</h4>
        </div>
        <div class="drop" style="width:100%;height:170px;background-color:white;">
          <p style="padding-top:80px;"><b class="text-muted" style="color:#444;"><span class="fa fa-cloud-upload"></span> <i>{{ 'GENERAL_DROPBOX' | translate }}</i></b></p>
          <input type="file" multiple class="upload" id="fileToNotary" style="width: 100%; position: relative; margin-top: -110px; height: 170px;" import-apostille-files="$ctrl.processFile($fileContent, $fileData)"/>
        </div>
      </div>

      <div class="col-sm-4">
        <div class="panel-heading">
           <h4>{{ 'APOSTILLE_AUDIT_CHOOSE_NODE' | translate }}</h4>
        </div>
        <div class="panel-body">
          <p class="bg-info">{{ 'APOSTILLE_AUDIT_CHOOSE_NODE_NOTE' | translate }}</p>
          <select class="form-group form-control" ng-options="node as (node.host | toHostname) for node in $ctrl.nodes track by node.host" ng-model="$ctrl.searchNode" ng-change="$ctrl.getHeartBeat($ctrl.searchNode)"></select>
          <p><b>{{ 'GENERAL_STATUS' | translate }}:</b> <span ng-show="$ctrl.searchNodeStatus"><i class="fa fa-check" style="color:green;"></i></span>
          <span ng-show="!$ctrl.searchNodeStatus"><i class="fa fa-times" style="color:red;"></i></span></p>
        </div>
      </div>
      <div class="col-sm-4">
        <div class="panel-heading">
          <h4>{{ 'APOSTILLE_AUDIT_FORMAT_EXAMPLE' | translate }}</h4>
        </div>
        <div class="panel-body">
          <p><span ng-bind-html="'APOSTILLE_AUDIT_INFORMATION_1' | translate"></span><br> {{ 'APOSTILLE_AUDIT_INFORMATION_2' | translate }}</p>
          <p><b>{{ 'GENERAL_EXAMPLE' | translate }}</b><br> <small>MyProject2016 - TBCI2A67UQZAKCR6NS4JWAEICEIGEIM72G3MVW5S -- <b>Apostille</b> TX 0e94da29910ae64bb544e9de0e6a5c6440bd75e6bedafd81b5b4cfa729ca25ef -- Date 2016-09-12.pdf</small></p>
        </div>
      </div>

    </div>
    <div class="row">

      <div class="col-sm-12">
        <div class="panel-heading">
          <h4>{{ 'GENERAL_RESULTS' | translate }}</h4>
          <div class="trash" title="{{ 'GENERAL_CLEAR_ALL' | translate }}" style="cursor:pointer;" ng-click="$ctrl.clearAll()">
            <i class="fa fa-trash"></i> {{ 'APOSTILLE_AUDIT_REMOVE_RECORDS' | translate }}
          </div>
          <paginate data="$ctrl.auditResults" current-page="$ctrl.currentPage" page-size="$ctrl.pageSize"></paginate>
        </div>
        <div class="panel-body">
          <table class="table table-condensed">
            <thead>
              <tr>
                <th>{{ 'APOSTILLE_FILENAME' | translate }}</th>
                <th>{{ 'GENERAL_OWNER' | translate }}</th>
                <th>{{ 'APOSTILLE_FILE_HASH' | translate }}</th>
                <th>{{ 'APOSTILLE_PRIVATE' | translate }}</th>
                <th>{{ 'GENERAL_RESULT' | translate }}</th>
              </tr>
            </thead>
            <tbody style="background-color:white;text-align:center">
              <tr ng-repeat="file in $ctrl.auditResults | reverse | startFrom:$ctrl.currentPage*$ctrl.pageSize | limitTo:$ctrl.pageSize">
                  <td style="vertical-align: middle;border-bottom: 1px solid #444">{{file.filename}}</td>
                  <td style="vertical-align: middle;border-bottom: 1px solid #444">{{file.owner}}</td>
                  <td style="vertical-align: middle;border-bottom: 1px solid #444"><span ng-show="file.hash">{{file.fileHash}}</span></td>
                  <td style="vertical-align: middle;word-break:normal;border-bottom: 1px solid #444">
                    <span ng-show="file.private"><i class="fa fa-check" style="color:green;"></i></span>
                    <span ng-show="!file.private"><i class="fa fa-times" style="color:red;"></i></span>
                  </td>
                  <td style="vertical-align: middle;word-break:normal;border-bottom: 1px solid #444"> <a ng-show="file.hash" href="{{$ctrl._Wallet.chainLink}}{{file.hash}}" target="_blank">{{file.result}}</a><span ng-show="!file.hash">{{file.result}}</span></td>
              </tr>
            </tbody>
          </table>
        </div>
        <div class="panel-body" ng-show="!$ctrl.auditResults.length">
          <p>{{ 'GENERAL_NO_RESULTS' | translate }}</p>
        </div>
      </div>

    </div>

  </div>
</div>

'''
'''--- src/app/modules/apostille/create/createApostille.config.js ---
function CreateApostilleConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.createApostille', {
            url: '/create-apostille',
            controller: 'CreateApostilleCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/apostille/create/createApostille.html',
            title: 'Create apostille',
            params: {
                address: "",
                privateKey: "",
                tags: "",
                isUpdate: false
            }
        });

};

export default CreateApostilleConfig;
'''
'''--- src/app/modules/apostille/create/createApostille.controller.js ---
import nem from 'nem-sdk';
import Helpers from '../../../utils/helpers';

class CreateApostilleCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Nty, DataStore, $filter, Alert, Wallet, $timeout, $state) {
        'ngInject';

        //// Module dependencies region ////

        this._Nty = Nty;
        this._DataStore = DataStore;
        this._$filter = $filter;
        this._Alert = Alert;
        this._Wallet = Wallet;
        this._$timeout = $timeout;
        this._$state = $state;

        //// End dependencies region ////

        // Initialization
        this.init();
    }

    //// Module methods region ////

    /**
     * Initialize module properties
     */
    init() {
        this.isUpdate = this._$state.params.isUpdate;
        // Object to contain our password & private key data
        this.common = nem.model.objects.get("common");
        // Form is based on a transfer transaction object
        this.formData =  nem.model.objects.get("transferTransaction");
        this.formData.messageType = 0;
        this.formData.tags = this._$state.params.tags;
        this.formData.isText = false;
        this.formData.selectedHashing = nem.model.apostille.hashing["SHA256"];
        this.formData.isPrivate = true;
        this.formData.textTitle = "";
        this.formData.textContent = "";
        // Available hashing methods
        this.hashing = nem.model.apostille.hashing;
        this.types = [{
            name: this._$filter('translate')('GENERAL_PUBLIC'),
            value: false
        },{
            name: this._$filter('translate')('APOSTILLE_KEEP_PRIVATE'),
            value: true
        }];
        // Array of apostilles to send
        this.apostilles = [];
        // Array of apostilles rejected, kept if re-init
        this.rejected = this.rejected ? this.rejected : [];
        // Prevent user to click twice on send when already processing
        this.okPressed = false;
        // Pagination properties
        this.currentPage = 0;
        this.currentPageRej = 0;
        this.pageSize = 5;
        // Set nty data in Wallet service if exists in local storage
        this._Nty.set();
        // Init JSzip
        this.zip = new JSZip();
    }

    /**
     * Process the file to apostille and push to array
     *
     * @param {object} $fileContent - Base 64 content of the file 
     * @param {object} $fileData - Meta data of the file
     */
    processFile($fileContent, $fileData) {
        // Get account private key for preparation or return
        if (!this._Wallet.decrypt(this.common)) return;
        // Only 25 apostilles per batch
        if (this.apostilles.length > 24) return;
        // Arrange data if custom text
        if (this.formData.isText) {
            $fileData = { 
                name: $fileData + ".txt", 
                lastModified: new Date().getTime(), 
                lastModifiedDate: new Date().toISOString(), 
                size: Buffer.byteLength($fileContent, 'utf8'), 
                type: "text/plain" 
            }
            $fileContent = "data:application/x-pdf;base64," + nem.crypto.js.enc.Base64.stringify(nem.crypto.js.enc.Utf8.parse($fileContent));
        }
        //
        let rawFileContent = nem.crypto.js.enc.Base64.parse($fileContent.split(/,(.+)?/)[1]);
        // Create the apostille
        let apostille = nem.model.apostille.create(this.common, $fileData.name, rawFileContent, this.formData.tags, this.formData.selectedHashing, this.formData.isMultisig, this.formData.multisigAccount, this.formData.isPrivate, this._Wallet.network);
        
        // Arrange apostille for update
        if(this.isUpdate) {
            // Set original dedicated account into apostille
            apostille.data.dedicatedAccount.address = this._$state.params.address;
            apostille.data.dedicatedAccount.privateKey = this._$state.params.privateKey;
            // Set original dedicated account as recipient
            if (apostille.transaction.type === nem.model.transactionTypes.multisigTransaction) {
                apostille.transaction.otherTrans.recipient = this._$state.params.address;
            } else {
                apostille.transaction.recipient = this._$state.params.address;
            }
        }

        this.apostilles.push(apostille);
    }

    /**
     * Trigger file uploading for nty
     */
    uploadNty() {
        document.getElementById("uploadNty").click();
    }

    /**
     * Save nty in Wallet service and local storage
     *
     * @params {object} $fileContent - Content of an nty file
     */
    loadNty($fileContent) {
        this._Nty.setInLocalStorage(JSON.parse($fileContent));
        if (this._Wallet.ntyData.length) {
            this._Alert.ntyFileSuccess();
        }
    }

    /**
     * Remove a file from filesToApostille array
     *
     * @param {array} array - The array of files to apostilles
     * @param {object} elem - The object to delete
     */
    removeFileFromList(array, elem) {
        // If the deleted element is the elem 0 and length of array mod 5 gives 0 (means it is the last object of the page), 
        // we return a page behind unless it is page 1.
        if (array.indexOf(elem) === 0 && this.currentPage + 1 > 1 && (array.length - 1) % 5 === 0) {
            this.currentPage = this.currentPage - 1;
        }
        array.splice(array.indexOf(elem), 1);
    }

    /**
     * Build the apostille file and certificate
     *
     * @param {object} announceResult - A NEM announce result object
     * @param {object} apostille - An apostille object
     * @param {number} i - The position of the apostille object in the array of apostilles
     */
    buildApostille(announceResult, apostille, i) {
        let isMultisig = apostille.transaction.type === nem.model.transactionTypes.multisigTransaction;
        let timeStamp = new Date();
        let hash = announceResult.transactionHash.data;
        let multisigHash = isMultisig ? announceResult.innerTransactionHash.data : '';
        let url = isMultisig ? this._Wallet.chainLink + multisigHash : this._Wallet.chainLink + hash;
        let owner = this._Wallet.currentAccount.address;
        let from = isMultisig ? nem.model.address.toAddress(apostille.transaction.otherTrans.signer, this._Wallet.network) : this._Wallet.currentAccount.address;
        let apostilleName = Helpers.getFileName(apostille.data.file.name) + " -- Apostille TX " + hash + " -- Date " + Helpers.toShortDate(timeStamp) + "." + Helpers.getExtension(apostille.data.file.name);
        let message = isMultisig ? apostille.transaction.otherTrans.message.payload : apostille.transaction.message.payload;
        let recipient = apostille.data.dedicatedAccount.address;
        let recipientPrivateKey = apostille.data.dedicatedAccount.privateKey;
        // Create or update nty data if exist
        this._Nty.updateData(this._Nty.createData(apostille.data.file.name, apostille.data.tags, timeStamp, message, hash, multisigHash, owner, from, recipient, recipientPrivateKey));
        // Draw certificate then push files into archive
        this._Nty.drawCertificate(apostille.data.file.name, timeStamp.toDateString(), owner, apostille.data.tags, from, recipient, recipientPrivateKey, hash, message, url).then((certificate) => {
            this._$timeout(() => {
                // Add renamed file to archive
                this.zip.file(apostilleName, (nem.crypto.js.enc.Base64.stringify(apostille.data.file.content)), {
                    base64: true
                });
                // Add certificate to archive
                this.zip.file("Certificate of " + Helpers.getFileName(apostille.data.file.name) + " -- TX " + hash + " -- Date " + Helpers.toShortDate(timeStamp) + ".png", (certificate).split(",").pop(), {
                    base64: true
                });
                // If last file of the array
                if (i === this.apostilles.length - 1) {
                    // Download archive of files
                    this.downloadSignedFiles();
                    return;
                }
            });
        });
    }

    /**
     * Download the archive of signed files
     */
    downloadSignedFiles() {
        // Trigger if at least 1 file and 1 certificate in the archive
        if (Object.keys(this.zip.files).length > 1) {
            // Add created or updated nty file to archive
            this.zip.file("Nty-file-" + Helpers.toShortDate(new Date()) + ".nty", JSON.stringify(this._Wallet.ntyData));
            // Generate the zip
            this.zip.generateAsync({
                type: "blob"
            }).then((content) => {
                // Trigger download
                saveAs(content, "NEMsigned -- Do not Edit -- " + Helpers.toShortDate(new Date()) + ".zip");
                this._$timeout(() => {
                    // Reset all
                    return this.init();
                })
            });
        }
    }

    /**
     * Prepare and broadcast the transaction to the network
     */
    send() {
        // Disable send button
        this.okPressed = true;

        // Get account private key for preparation or return
        if (!this._Wallet.decrypt(this.common)) return this.okPressed = false;

        if (this.apostilles.length) {
            // Chain of promises
            let chain = (i) => {
                if (i < this.apostilles.length) {
                    this._Wallet.transact(this.common, this.apostilles[i].transaction).then((res) => {
                        this._$timeout(() => {
                            this.buildApostille(res, this.apostilles[i], i);
                        });
                    }, (err) => {
                        this._$timeout(() => {
                            this.apostilles[i].reason = err;
                            this.rejected.push(this.apostilles[i]);
                            // If last file of the array
                            if (i === this.apostilles.length - 1) {
                                // Download archive of files
                                this.downloadSignedFiles();
                                // Delete private key in common
                                this.common.privateKey = '';
                                // Enable send button
                                this.okPressed = false;
                                return;
                            }
                        });
                    }).then(chain.bind(null, i+1));
                }
            }

            // Start promises chain
            chain(0);
        }
    }

    //// End methods region ////

}

export default CreateApostilleCtrl;
'''
'''--- src/app/modules/apostille/create/createApostille.html ---
<div class="create-apostille-page">
  <div class="loading-overlay" ng-show="$ctrl.okPressed">
    <div class="loader text-center">
      <img src="images/logomark.png" class="loader-image"/>
      <p class="loading-text">{{ 'GENERAL_PROCESSING' | translate }}</p>
    </div>
  </div>
  <div class="container-fluid main">
    <div class="row">
      <div class="col-sm-8">
        <h2>{{ 'APOSTILLE_CREATE_TITLE' | translate }}</h2>
      </div>
      <div class="col-sm-4 helper">
        <h4 data-toggle="modal" data-target="#apostilleHelp">{{ 'APOSTILLE_CREATE_HELP' | translate }}</h4>
      </div>
    </div>

    <p ng-show="!$ctrl._Wallet.ntyData" class="bg-info" ng-click="$ctrl.uploadNty()" style="cursor:pointer">
      <b><i class="fa fa-exclamation-triangle "></i> {{ 'APOSTILLE_NO_NTY' | translate }}</b>
    </p>
    <input id="uploadNty" style="visibility:hidden;position:absolute;" import-nty-file="$ctrl.loadNty($fileContent)" type="file">

    <div class="row">
      <div class="col-sm-7">
        <div class="panel-heading">
          <div class="tabDescription">
            <span ng-show="!$ctrl.formData.isMultisig">{{ 'APOSTILLE_TRANSACTION_NAME' | translate }}</span>
            <span ng-show="$ctrl.formData.isMultisig">{{ 'APOSTILLE_TRANSACTION_MULTISIG_NAME' | translate }}</span>
          </div>
          <ul class="nav nav-tabs">
            <li ng-class="$ctrl.formData.isMultisig ? '' : 'active'"><a ng-click="$ctrl.formData.isMultisig = false;$ctrl.formData.isPrivate = true;">{{ 'GENERAL_TAB_NORMAL' | translate }}</a></li>
            <li ng-show="$ctrl._DataStore.account.metaData.meta.cosignatoryOf.length" ng-class="$ctrl.formData.isMultisig ? 'active' : ''"><a ng-click="$ctrl.formData.isMultisig = true;$ctrl.formData.isPrivate = false;">{{ 'GENERAL_TAB_MULTISIG' | translate }}</a></li>
          </ul>
        </div>
        <div class="panel-body">
          <!-- Password Field -->
          <password-input common="$ctrl.common"></password-input>
          <!-- Multisig select -->
          <multisig-select ng-show="$ctrl.formData.isMultisig" multisig-account="$ctrl.formData.multisigAccount"></multisig-select>
          <fieldset class="form-group" ng-show="$ctrl.isUpdate">
            <div class="input-group">
              <span class="input-group-btn">
                <label>{{'APOSTILLE_NTY_ACCOUNT' | translate}}: </label>
              </span>
              <input class="form-control" type="text" ng-model="$ctrl._$state.params.address" readOnly/>
            </div>
          </fieldset>
          <!-- TAGS SECTION -->
          <fieldset class="form-group">
            <div class="input-group">
              <span class="input-group-btn">
                <label ng-class="$ctrl.common.password.length && !$ctrl.formData.tags.length ? 'has-error' : ''">{{ 'GENERAL_TAGS' | translate }}: </label>
              </span>
              <input class="form-control" type="text" placeholder="{{ 'GENERAL_TAGS' | translate }}" ng-model="$ctrl.formData.tags" ng-disabled="!$ctrl.common.password" ng-class="$ctrl.common.password.length && !$ctrl.formData.tags.length ? 'has-error' : ''" ng-readonly="$ctrl.isUpdate"/>
            </div>
          </fieldset>
          <!-- HASH FUNCTION -->
          <fieldset class="form-group">
            <div class="input-group">
              <span class="input-group-btn">
                <label>{{ 'GENERAL_HASH_FUNCTION' | translate }}: </label>
              </span>
              <select class="form-control" ng-options="value.name for (key, value) in $ctrl.hashing" ng-model="$ctrl.formData.selectedHashing">
              </select>
            </div>
          </fieldset>
          <!-- STORAGE LOCATION -->
          <fieldset class="form-group">
            <div class="input-group">
              <span class="input-group-btn">
                <label>{{ 'GENERAL_STORAGE' | translate }}:</label>
              </span>
              <select class="form-control" ng-options="type.value as type.name for type in $ctrl.types" ng-model="$ctrl.formData.isPrivate" ng-disabled="$ctrl.isUpdate">
              </select>
            </div>
          </fieldset>
          <!-- SEND TRANSACTION -->
          <button class="btn btn-success" type="submit" ng-disabled="$ctrl.okPressed || !$ctrl.common.password.length || !$ctrl.apostilles.length" ng-click="$ctrl.send()">
            <i class="fa fa-send"></i> {{ 'GENERAL_SEND' | translate }}
          </button>

        </div>
      </div>
      <!-- ADD APOSTILLE DOC START -->
      <div class="col-sm-5">
      	<div class="form-group">
          <div class="addApostilleFile">
            <div class="panel-heading">
              <div class="tabDescription">
                <span ng-show="!$ctrl.formData.isText">{{ 'APOSTILLE_IMPORT_FILES' | translate }}</span>
                <span ng-show="$ctrl.formData.isText">{{ 'APOSTILLE_CREATE_TEXT' | translate }}</span>
              </div>
              <ul class="nav nav-tabs">
                <li ng-class="!$ctrl.formData.isText ? 'active' : ''"><a ng-click="$ctrl.formData.isText = false;$ctrl.showInfo = false;"><i class="fa fa-files-o"></i></a></li>
                <li ng-class="$ctrl.formData.isText ? 'active' : ''"><a ng-click="$ctrl.formData.isText = true;$ctrl.showInfo = false;"><i class="fa fa-edit"></i></a></li>
              </ul>
            </div>

            <div class="panel-body">
              <!-- ADD TEXT DOC -->
              <div ng-show="$ctrl.formData.isText">
                <input class="form-control" type="text" ng-disabled="$ctrl.common.password.length === 0 || $ctrl.formData.tags.length === 0" placeholder="{{ 'APOSTILLE_DOCUMENT_TITLE' | translate }}" ng-model="$ctrl.formData.textTitle"/>
                <textarea class="form-control" rows="7" cols="50" placeholder="{{ 'APOSTILLE_ENTER_TEXT' | translate }}" ng-disabled="$ctrl.common.password.length === 0 || $ctrl.formData.tags.length === 0" ng-model="$ctrl.formData.textContent"></textarea>
                <!-- ADD TEXT DOC BUTTON -->
                <button class="btn btn-success" type="submit" style="width:100%;" ng-disabled="$ctrl.common.password.length === 0 || $ctrl.formData.tags.length === 0 || !$ctrl.formData.textTitle.length || !$ctrl.formData.textContent.length" ng-click="$ctrl.processFile($ctrl.formData.textContent, $ctrl.formData.textTitle)">
                  <i class="fa fa-plus"></i> {{ 'GENERAL_ADD' | translate }}
                </button>
              </div>
              <!-- ADD FILE -->
              <div class="drop" ng-style="$ctrl.common.password.length===0 || $ctrl.formData.tags.length===0 ? { 'background-color':'#eeeeee', 'cursor': 'not-allowed'} : { 'background-color':'white', 'cursor': 'pointer' }" style="height:220px;" ng-show="!$ctrl.formData.isText">
              <p style="padding-top:100px;">
                <b class="text-muted" style="color:#444;">
                  <span ng-show="$ctrl.common.password.length && $ctrl.formData.tags.length"><span class="fa fa-cloud-upload"></span> <i>{{ 'GENERAL_DROPBOX' | translate }} </i></span>
                  <span ng-show="!$ctrl.common.password.length || !$ctrl.formData.tags.length"><span class="fa fa-lock"></span> <i>{{ 'APOSTILLE_DROPBOX_MESSAGE' | translate }}</i></span>
                </b>
              </p>
              <input type="file" multiple class="upload" id="fileToNotary" style="height: 220px; width: 100%; position: relative; margin-top: -130px;" import-apostille-files="$ctrl.processFile($fileContent, $fileData)" ng-disabled="$ctrl.common.password.length===0 || $ctrl.formData.tags.length===0" />
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <!-- APOSTILLE's LIST START -->
    <div class="row">
      <div class="col-sm-12">
        <div class="panel-heading">
              <h4>{{ 'APOSTILLE_FILES_TO_NOTARIZE' | translate }}</h4>
              <span ng-show="$ctrl.rejected.length" class="rejected"><b>{{ 'APOSTILLE_REJECTED' | translate }}: {{$ctrl.rejected.length}}</b> - <a><i ng-show="!$ctrl.viewRejected" class="fa fa-eye" ng-click="$ctrl.viewRejected = true" style="cursor:pointer"></i><i ng-show="$ctrl.viewRejected" class="fa fa-eye-slash" ng-click="$ctrl.viewRejected = false" style="cursor:pointer"></i></a></span>
              <paginate data="$ctrl.apostilles" current-page="$ctrl.currentPage" page-size="$ctrl.pageSize" ng-show="!$ctrl.viewRejected"></paginate>
              <paginate data="$ctrl.rejected" current-page="$ctrl.currentPageRej" page-size="$ctrl.pageSize" ng-show="$ctrl.viewRejected"></paginate>
        </div>
        <div class="panel-body" ng-show="!$ctrl.viewRejected">
          <table class="table table-condensed" style="table-layout:fixed;word-break:break-all;">
            <thead style="color:white;">
              <tr>
                <th>{{ 'APOSTILLE_FILENAME' | translate }}</th>
                <th>{{ 'GENERAL_TAGS' | translate }}</th>
                <th>{{ 'GENERAL_SINK' | translate }}</th>
                <th>{{ 'APOSTILLE_FILE_HASH' | translate }}</th>
                <th>{{ 'APOSTILLE_PRIVATE' | translate }}</th>
                <th>{{ 'GENERAL_NETWORK_FEE' | translate }}</th>
                <th>{{ 'GENERAL_REMOVE' | translate }}</th>
              </tr>
            </thead>
            <tbody>
              <tr ng-repeat="apostille in $ctrl.apostilles | reverse | startFrom:$ctrl.currentPage*$ctrl.pageSize | limitTo:$ctrl.pageSize">
                <td>{{apostille.data.file.name}}</td>
                <td>{{apostille.data.tags}}</td>
                <td>{{apostille.data.dedicatedAccount.address}}</td>
                <td>{{apostille.data.checksum + apostille.data.file.hash}}</td>
                <td><span ng-if="apostille.data.dedicatedAccount.privateKey.length === 64"><i class="fa fa-check" style="color:green;"></i></span><span ng-if="apostille.data.dedicatedAccount.privateKey.length !== 64"><i class="fa fa-times" style="color:red;"></i></span></td>
                <td>{{apostille.transaction.fee/1000000}} <span ng-if="apostille.transaction.otherTrans"><br>+<br>{{apostille.transaction.otherTrans.fee/1000000}}</span></td>
                <td class="pointer"><i class="fa fa-times" ng-click="$ctrl.removeFileFromList($ctrl.apostilles, apostille)"></i></td>
              </tr>
            </tbody>
          </table>
        </div>
        <div class="panel-body" ng-show="!$ctrl.apostilles.length && !$ctrl.viewRejected">
          <p>{{ 'GENERAL_NO_RESULTS' | translate }}</p>
        </div>
        <div class="panel-body">
          <table ng-show="$ctrl.viewRejected" class="table table-condensed">
            <thead>
              <tr>
                <th>{{ 'APOSTILLE_FILENAME' | translate }}</th>
                <th>{{ 'GENERAL_TAGS' | translate }}</th>
                <th>{{ 'GENERAL_REASON' | translate }}</th>
              </tr>
            </thead>
            <tbody>
              <tr ng-repeat="apostille in $ctrl.rejected | reverse | startFrom:currentPageRej*pageSize | limitTo:pageSize">
                <td>{{apostille.data.file.name}}</td>
                <td>{{apostille.data.tags}}</td>
                <td>{{apostille.reason}}</td> <!-- -->
              </tr>
            </tbody>
          </table>
        </div>
        <div class="panel-body" ng-show="!$ctrl.rejected.length && $ctrl.viewRejected">
          <p>{{ 'GENERAL_NO_RESULTS' | translate }}</p>
        </div>
        <div class="bg-info">
          <small><b><i>{{ 'APOSTILLE_MAX_NUMBER' | translate }}</i></b></small>
        </div>
      </div>
    </div>

  </div>
</div>

<!-- MODAL SECTION -->
<div id="apostilleHelp" class="modal fade" tabindex="-1" role="dialog">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title">{{ 'APOSTILLE_INFORMATION_TITLE' | translate }}</h4>
      </div>
      <div class="modal-body">
        <div>
          <p>{{ 'APOSTILLE_INFORMATION_1' | translate }} </p>
          <p><span ng-bind-html="'APOSTILLE_INFORMATION_2' | translate"></span></p>
          <p>{{ 'APOSTILLE_INFORMATION_3' | translate }} </p>
          <p>{{ 'APOSTILLE_INFORMATION_4' | translate }} </p>
          <p><span ng-bind-html="'APOSTILLE_INFORMATION_5' | translate"></span></p>
          <p>{{ 'APOSTILLE_INFORMATION_6' | translate }} </p>
          <p><span ng-bind-html="'APOSTILLE_INFORMATION_7' | translate"></span></p>
          <p>{{ 'APOSTILLE_INFORMATION_8' | translate }} </p>
        </div>
      </div>
      <div class="modal-footer">
        <button type="submit" class="btn btn-success" data-dismiss="modal">{{ 'GENERAL_CLOSE' | translate }}</button>

      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

'''
'''--- src/app/modules/apostille/history/apostilleHistory.config.js ---
function ApostilleHistoryConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.apostilleHistory', {
            url: '/apostille/history',
            controller: 'ApostilleHistoryCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/apostille/history/apostilleHistory.html',
            title: 'Apostille history'
        });

};

export default ApostilleHistoryConfig;
'''
'''--- src/app/modules/apostille/history/apostilleHistory.controller.js ---
import nem from 'nem-sdk';
import Helpers from '../../../utils/helpers';

class ApostilleHistoryCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Wallet, Alert, Nty) {
        'ngInject';

        //// Module dependencies region ////

        this._Wallet = Wallet;
        this._Alert = Alert;
        this._Nty = Nty;

        //// End dependencies region ////

        //// Module properties region ////

        // Get sink depending of network
        this.sink = nem.model.sinks.apostille[this._Wallet.network].toUpperCase().replace(/-/g, '');

        // User's apostilles pagination properties
        this.currentPage = 0;
        this.pageSize = 5;

        //// End properties region ////

        // Load nty Data from local storage if any
        this._Nty.set();
    }

    //// Module methods region ////

    /**
     * Trigger file uploading for nty
     */
    uploadNty() {
        document.getElementById("uploadNty").click();
    }

    /**
     * Save nty in Wallet service and local storage
     */
    loadNty($fileContent) {
        this._Nty.setInLocalStorage(JSON.parse($fileContent));
        if (this._Wallet.ntyData !== undefined) {
            this._Alert.ntyFileSuccess();
        }
    }

    /**
     * Trigger download of the nty file
     */
    download() {
        if (this._Wallet.ntyData !== undefined) {
            // Wallet object string to word array
            let wordArray = nem.crypto.js.enc.Utf8.parse(angular.toJson(this._Wallet.ntyData));
            // Word array to base64
            let base64 = nem.crypto.js.enc.Base64.stringify(wordArray);
            // Set download element attributes
            $("#downloadNty").attr('href', 'data:plain/text,' + angular.toJson(this._Wallet.ntyData));
            $("#downloadNty").attr('download', "Nty-file-" + Helpers.toShortDate(new Date()) + ".nty");
            // Simulate click to trigger download
            document.getElementById("downloadNty").click();
        }
    }

    /**
     * Purge nty data from local storage
     */
    purge() {
        return this._Nty.purgeLocalStorage();
    }

    //// End methods region ////

}

export default ApostilleHistoryCtrl;
'''
'''--- src/app/modules/apostille/history/apostilleHistory.html ---
<div class="apostille-history-page">
  <div class="container-fluid main">

    <div class="row">
      <div class="col-sm-9">
        <h2>{{ 'APOSTILLE_HISTORY_TITLE' | translate }}</h2>
      </div>
    </div>
    <div class="row">

      <p ng-show="$ctrl._Wallet.ntyData === undefined" class="bg-info" ng-click="$ctrl.uploadNty()" style="cursor:pointer">
        <b><i class="fa  fa-exclamation-triangle"></i> {{ 'EXPLORER_APOSTILLES_NO_NTY' | translate }}</b>
      </p>
      <input id="uploadNty" style="visibility:hidden;position:absolute;" import-nty-file="$ctrl.loadNty($fileContent)" type="file">

      <div class="col-md-12">
        <div class="row">
          <div class="col-md-6">
          <h4>{{ 'EXPLORER_APOSTILLES_YOURS' | translate }}</h4>
          </div>
          <div class="col-md-6">
            <div class="backupPurge">
              <span ng-click="$ctrl.download()"><i class="fa fa-download"></i> {{ 'APOSTILLE_HISTORY_BACKUP' | translate }}</span>
              <span ng-click="$ctrl.purge()"><i class="fa fa-trash"></i> {{ 'APOSTILLE_HISTORY_PURGE' | translate }}</span>
            </div>
            <paginate data="$ctrl._Wallet.ntyData.data" current-page="$ctrl.currentPage" page-size="$ctrl.pageSize"></paginate>
          </div>
        </div>

        <table class="table table-condensed">
          <thead>
            <tr>
              <th>{{ 'APOSTILLE_FILENAME' | translate }}</th>
              <th>{{ 'GENERAL_TAGS' | translate }}</th>
              <th>{{ 'APOSTILLE_NTY_ACCOUNT' | translate }}</th>
              <th>{{ 'APOSTILLE_FILE_HASH' | translate }}</th>
              <th>{{ 'GENERAL_DATE' | translate }}</th>
              <th>{{ 'GENERAL_ACTIONS' | translate }}</th>
            </tr>
          </thead>
        </table>
        <table class="table table-hover table-condensed">
          <tbody>
            <tr ng-repeat="ap in $ctrl._Wallet.ntyData.data | reverse | startFrom:$ctrl.currentPage*$ctrl.pageSize | limitTo:$ctrl.pageSize">
              <td>{{ap.filename}}</td>
              <td>{{ap.tags}}</td>
              <td ui-sref="app.accountsExplorer({address: ap.dedicatedAccount})" style="cursor:pointer"><a>{{ap.dedicatedAccount}}</a></td>
              <td>
                <span ng-show="!ap.txMultisigHash.length">
                  <a href="{{$ctrl._Wallet.chainLink}}{{ap.txHash}}" target="_blank">
                    {{ap.fileHash}}
                  </a>
                </span>
                <span ng-show="ap.txMultisigHash.length">
                  <a href="{{$ctrl._Wallet.chainLink}}{{ap.txMultisigHash}}" target="_blank">
                    {{ap.fileHash}}
                  </a>
                </span>
              </td>
              <td>{{ap.timeStamp}}</td>
              <td class="row buttans">
                <div class="col-md-6">
                  <button class="btn btn-success" type="button" ui-sref="app.createApostille({address: ap.dedicatedAccount, privateKey: ap.dedicatedPrivateKey, tags: ap.tags, isUpdate: true})" ng-show="ap.dedicatedAccount !== $ctrl.sink" ng-disabled="$ctrl._Wallet.algo === 'trezor' || $ctrl._Wallet.algo === 'ledger'">{{ 'GENERAL_UPDATE' | translate }}</button>
                </div>
                <div class="col-md-6">
                  <button class="btn btn-success" type="button" ui-sref="app.apostilleMessage({address: ap.dedicatedAccount, privateKey: ap.dedicatedPrivateKey})" ng-show="ap.dedicatedAccount !== $ctrl.sink">{{ 'GENERAL_MESSAGE' | translate }}</button>
                </div>
                <div class="col-md-12">
                  <button class="btn btn-success" type="button" ng-show="ap.dedicatedAccount !== $ctrl.sink" ui-sref="app.createMultisig({address: ap.dedicatedAccount, privateKey: ap.dedicatedPrivateKey})">{{ 'APOSTILLE_HISTORY_BTN_TRANSFER' | translate }}</button>
                </div>
                <p class="col-md-12" ng-show="ap.dedicatedAccount === $ctrl.sink">{{ 'GENERAL_NONE' | translate }}</p>
              </td>
            </tr>
          </tbody>
        </table>
          <div class="panel-body nothing" ng-show="!$ctrl._Wallet.ntyData.data">
                <p>{{ 'GENERAL_NO_RESULTS' | translate }}</p>
            </div>

      </div>

      <a id="downloadNty" style="visibility:hidden" target="_blank"></a>
    </div>
  </div>
</div>

'''
'''--- src/app/modules/apostille/index.js ---
import angular from 'angular';

// Create the module where our functionality can attach to
let createApostilleModule = angular.module('app.createApostille', []);

// Include our UI-Router config settings
import CreateApostilleConfig from './create/createApostille.config';
createApostilleModule.config(CreateApostilleConfig);

// Controllers
import CreateApostilleCtrl from './create/createApostille.controller';
createApostilleModule.controller('CreateApostilleCtrl', CreateApostilleCtrl);

// Create the module where our functionality can attach to
let auditApostilleModule = angular.module('app.auditApostille', []);

// Include our UI-Router config settings
import AuditApostilleConfig from './audit/auditApostille.config';
auditApostilleModule.config(AuditApostilleConfig);

// Controllers
import AuditApostilleCtrl from './audit/auditApostille.controller';
auditApostilleModule.controller('AuditApostilleCtrl', AuditApostilleCtrl);

// Create the module where our functionality can attach to
let apostilleHistoryModule = angular.module('app.apostilleHistory', []);

// Include our UI-Router config settings
import ApostilleHistoryConfig from './history/apostilleHistory.config';
apostilleHistoryModule.config(ApostilleHistoryConfig);

// Controllers
import ApostilleHistoryCtrl from './history/apostilleHistory.controller';
apostilleHistoryModule.controller('ApostilleHistoryCtrl', ApostilleHistoryCtrl);

// Create the module where our functionality can attach to
let apostilleMessageModule = angular.module('app.apostilleMessage', []);

// Include our UI-Router config settings
import ApostilleMessageConfig from './message/apostilleMessage.config';
apostilleMessageModule.config(ApostilleMessageConfig);

// Controllers
import ApostilleMessageCtrl from './message/apostilleMessage.controller';
apostilleMessageModule.controller('ApostilleMessageCtrl', ApostilleMessageCtrl);

export default createApostilleModule;

'''
'''--- src/app/modules/apostille/message/apostilleMessage.config.js ---
function ApostilleMessageConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.apostilleMessage', {
            url: '/apostille/message',
            controller: 'ApostilleMessageCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/apostille/message/apostilleMessage.html',
            title: 'Apostille message',
            params: {
                address: "",
                privateKey: ""
            }
        });

};

export default ApostilleMessageConfig;
'''
'''--- src/app/modules/apostille/message/apostilleMessage.controller.js ---
import nem from 'nem-sdk';
import Helpers from '../../../utils/helpers';

class ApostilleMessageCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Wallet, Alert, DataStore, $state, $timeout) {
        'ngInject';

        //// Module dependencies region ////

        this._Alert = Alert;
        this._Wallet = Wallet;
        this._DataStore = DataStore;
        this._$state = $state;
        this._$timeout = $timeout;
        this._Helpers = Helpers;

        //// End dependencies region ////

        // Initialization
        this.init();
    }

    //// Module methods region ////

    /**
     * Initialize module properties
     */
    init() {
        // Form is a transfer transaction object, pre-set recipient if any from state parameter
        this.formData = nem.model.objects.create("transferTransaction")(undefined !== this._$state.params.address ? this._$state.params.address : '');
        this.formData.recipientPublicKey = nem.crypto.keyPair.create(this._$state.params.privateKey).publicKey.toString();
        // Mosaics are null by default
        this.formData.mosaics = null;
        // Set first multisig account if any
        this.formData.multisigAccount = this._DataStore.account.metaData.meta.cosignatoryOf.length == 0 ? '' : this._DataStore.account.metaData.meta.cosignatoryOf[0];
        // Switch between mosaic transfer and normal transfers
        this.isMosaicTransfer = false;
        // Selected mosaic
        this.selectedMosaic = "nem:xem";
        // Mosaics data for current account
        this.currentAccountMosaicData = "";
        // Prevent user to click twice on send when already processing
        this.okPressed = false;
        // Character counter
        this.charactersLeft = 1024;
        // Object to contain our password & private key data
        this.common = nem.model.objects.get("common");
        //
        this.namespaceOwned = {};
        this.namespaceParent = "";
        //
        this.addNamespace = false;
        // Default namespaces owned
        this.namespaceOwned = this._DataStore.namespace.ownedBy[this._Wallet.currentAccount.address];
        // Store the prepared transaction
        this.preparedTransaction = {};
        // Update current account namespace
        this.updateCurrentAccountNS();
        // Update current account mosaics
        this.updateCurrentAccountMosaics();
        // Update the fee in view
        this.prepareTransaction();
    }

    /**
     * Set or unset data for mosaic transfer
     */
    setMosaicTransfer() {
        if (this.isMosaicTransfer) {
            this.formData.mosaics = [];
            // In case of mosaic transfer amount is used as multiplier,
            // set to 1 as default
            this.formData.amount = 1;
        } else {
            // Reset mosaics array
            this.formData.mosaics = null;
            // Reset amount
            this.formData.amount = 0;
        }
        this.prepareTransaction();
    }

    /**
     * Prepare the transaction
     */
    prepareTransaction() {
        // Create a new object to not affect the view
        let cleanTransferTransaction = nem.model.objects.get("transferTransaction");

        // Clean recipient
        cleanTransferTransaction.recipient = this.formData.recipient.toUpperCase().replace(/-/g, '');

        // Check entered amount
        if(!nem.utils.helpers.isTextAmountValid(this.formData.amount)) {
            return this._Alert.invalidAmount();
        } else {
            // Set cleaned amount
            cleanTransferTransaction.amount = nem.utils.helpers.cleanTextAmount(this.formData.amount);
        }

        // Set multisig, if selected
        if (this.formData.isMultisig) {
            cleanTransferTransaction.isMultisig = true;
            cleanTransferTransaction.multisigAccount = this.formData.multisigAccount;
        }

        // If user selected encrypted message but it is a multisig tx or the recipient has no public key, it reset to unencrypted
        if((this.formData.isMultisig || !this.formData.recipientPublicKey) && this.formData.messageType === 2) {
            if (this.formData.isMultisig) this._Alert.noEncryptionWithMultisig();
            else this._Alert.recipientHasNoPublicKey();
            this.formData.messageType = 1;
        }

        // Set recipient public key
        cleanTransferTransaction.recipientPublicKey = this.formData.recipientPublicKey;

        // Set the message
        cleanTransferTransaction.message = this.formData.message;
        cleanTransferTransaction.messageType = this.formData.messageType;

        // Prepare transaction object according to transfer type
        let entity;
        if(this.isMosaicTransfer) {
            // Set mosaics with cleaned amounts
            cleanTransferTransaction.mosaics = Helpers.cleanMosaicAmounts(this.formData.mosaics, this._DataStore.mosaic.metaData);
            // Prepare
            entity = nem.model.transactions.prepare("mosaicTransferTransaction")(this.common, cleanTransferTransaction, this._DataStore.mosaic.metaData, this._Wallet.network);
        } else {
            cleanTransferTransaction.mosaics = null;
            // Prepare
            entity = nem.model.transactions.prepare("transferTransaction")(this.common, cleanTransferTransaction, this._Wallet.network);
        }

        // Arrange message type if encrypted
        if(this.formData.messageType === 2) {
            if(this.formData.isMultisig) {
                entity.otherTrans.message.type = this.formData.messageType;
            } else {
                entity.message.type = this.formData.messageType;
            }
        }

        // Set the entity for fees in view
        this.preparedTransaction = entity;

        // Return prepared transaction
        return entity;
    }

    /**
     * Get current account mosaics names
     */
    updateCurrentAccountMosaics() {
        // Reset mosaics
        this.setMosaicTransfer();
        // Get current account
        let acct = this.formData.isMultisig ? this.formData.multisigAccount.address : this._Wallet.currentAccount.address;
        // Set current account mosaics names and data, if account owns any
        this.currentAccountMosaicData = undefined !== this._DataStore.mosaic.ownedBy[acct] ? this._DataStore.mosaic.ownedBy[acct]: "";
        // Default selected is nem:xem
        this.selectedMosaic = "nem:xem";
        return;
    }

    /**
     * Get current account namespaces & mosaic names
     *
     * @note: Used in view (ng-update) on multisig changes
     */
    updateCurrentAccountNS() {
        // Get current account
        let acct = this.formData.isMultisig ? this.formData.multisigAccount.address : this._Wallet.currentAccount.address;
        // Set current account mosaics names if namespaceOwned is not undefined in DataStore service
        if (undefined !== this._DataStore.namespace.ownedBy[acct]) {
            this.namespaceOwned = this._DataStore.namespace.ownedBy[acct];
            this.namespaceParent = this.namespaceOwned[Object.keys(this.namespaceOwned)[0]];
        } else {
            this.namespaceOwned = {};
            this.namespaceParent = "";
        }
        this.setMessage();
    }

    setMessage() {
        if(this.addNamespace && undefined !== this.namespaceParent.fqn) {
            this.formData.message = this.namespaceParent.fqn + ':';
        } else {
            this.formData.message = '';
        }
        this.prepareTransaction();
    }

    /**
     * Prepare and broadcast the transaction to the network
     */
    send() {
        // Disable send button
        this.okPressed = true;

        // Get account private key for preparation or return
        if (!this._Wallet.decrypt(this.common)) return this.okPressed = false;

        // Prepare the transaction
        let entity = this.prepareTransaction();

        // Sending will be blocked if recipient is an exchange and no message set
        if (!this._Helpers.isValidForExchanges(entity)) {
            this.okPressed = false;
            this._Alert.exchangeNeedsMessage();
            return;
        }

        // Use wallet service to serialize and send
        this._Wallet.transact(this.common, entity).then(() => {
            this._$timeout(() => {
                // Enable send button
                this.okPressed = false;
                // Reset all
                this.init();
                return;
            });
        }, () => {
            this._$timeout(() => {
                // Delete private key in common
                this.common.privateKey = '';
                // Enable send button
                this.okPressed = false;
                return;
            });
        });
    }

    //// End methods region ////

}

export default ApostilleMessageCtrl;
'''
'''--- src/app/modules/apostille/message/apostilleMessage.html ---
<div class="transferTransaction-page">
  <div class="container-fluid main">
    <div class="row">
      <div class="col-sm-8">
        <h2>{{ 'APOSTILLE_MESSAGE_TITLE' | translate }}</h2>
      </div>
    </div>
    <div class="row">
      <div class="col-lg-6 col-md-12">
        <div class="panel-heading">
          <div class="tabDescription">
            <!-- Title of panel -->
            <span ng-show="!$ctrl.formData.isMultisig">{{ 'TRANSFER_TRANSACTION_NAME' | translate }}</span>
            <span ng-show="$ctrl.formData.isMultisig ">{{ 'TRANSFER_TRANSACTION_MULTISIG_NAME' | translate }}</span>
          </div>
          <!-- Tabbed modes -->
          <ul class="nav nav-tabs">
            <!-- Normal mode -->
            <!-- On click it set multisig to false, update mosaics data of account and reset mosaics array -->
            <li ng-class="$ctrl.formData.isMultisig ? '' : 'active'"><a ng-click="$ctrl.formData.isMultisig = false;$ctrl.updateCurrentAccountNS();$ctrl.updateCurrentAccountMosaics();$ctrl.setMosaicTransfer();">{{ 'GENERAL_TAB_SEND' | translate }}</a></li>
            <!-- Multisig mode -->
            <!-- On click it set multisig to true, update mosaics data of account and reset mosaics array -->
            <li ng-show="$ctrl._DataStore.account.metaData.meta.cosignatoryOf.length" ng-class="$ctrl.formData.isMultisig ? 'active' : ''"><a ng-click="$ctrl.formData.isMultisig = true;$ctrl.formData.messageType = 1;$ctrl.updateCurrentAccountNS();$ctrl.updateCurrentAccountMosaics();$ctrl.setMosaicTransfer();">{{ 'GENERAL_TAB_MULTISIG' | translate }}</a></li>
          </ul>
        </div>
        <!-- Transaction form -->
        <div class="panel-body">
          <!-- Multisig select -->
          <multisig-select ng-show="$ctrl.formData.isMultisig" multisig-account="$ctrl.formData.multisigAccount" update-ctrl="$ctrl.updateCurrentAccountNS();$ctrl.updateCurrentAccountMosaics();"></multisig-select>
          <!-- NOTARIZATION ACCOUNT -->
          <fieldset class="form-group">
            <div class="input-group">
              <span class="input-group-btn">
                <label>{{'APOSTILLE_NTY_ACCOUNT' | translate}}</label>
              </span>
              <input class="form-control" type="text" ng-model="$ctrl.formData.recipient" readOnly/>
            </div>
          </fieldset>
          <!-- CHECKBOX FIELDS -->
          <div class="row checkboxes">
            <div class="col-sm-6">
              <!-- Enable / Disable mosaic transfer -->
              <fieldset class="form-group">
                <input id="box10" type="checkbox" ng-model="$ctrl.isMosaicTransfer" ng-change="$ctrl.setMosaicTransfer();">
                <label for="box10">{{'APOSTILLE_MESSAGE_ADD_MOSAIC' | translate}}</label>
              </fieldset>
            </div>
            <div class="col-sm-6">
              <fieldset class="form-group">
                <input id="box11" type="checkbox" ng-model="$ctrl.addNamespace" ng-change="$ctrl.setMessage();">
                <label for="box11">{{'APOSTILLE_MESSAGE_NS_BRAND' | translate}}</label>
              </fieldset>
            </div>
          </div>
          <!-- NAMESPACE TO USE AS BRAND -->
          <fieldset class="form-group" ng-show="$ctrl.addNamespace">
            <div class="input-group">
              <span class="input-group-btn">
                <label>{{'GENERAL_NAMESPACE' | translate}}</label>
              </span>
              <select class="form-control" ng-options="namespace.fqn for namespace in $ctrl.namespaceOwned | objValues" ng-model="$ctrl.namespaceParent" ng-change="$ctrl.setMessage();"></select>
            </div>
          </fieldset>
          <!-- Amount of XEM to send -->
          <fieldset class="form-group" ng-show="!$ctrl.isMosaicTransfer">
            <div class="input-group">
              <span class="input-group-btn">
                  <label>{{'GENERAL_AMOUNT' | translate}}: </label>
                </span>
              <div class="form-control formFloat" ng-disabled="$ctrl.isMosaicTransfer">
                <input type="text" ng-disabled="$ctrl.isMosaicTransfer" ng-model="$ctrl.formData.amount" maxlength="17" ng-change="$ctrl.prepareTransaction();" />
                <label class="floatRight"><small>XEM</small></label>
              </div>
            </div>
          </fieldset>
          <!-- Message Field -->
          <message-area message="$ctrl.formData.message" message-type="$ctrl.formData.messageType" characters-left="$ctrl.charactersLeft" update-ctrl="$ctrl.prepareTransaction();"></message-area>
          <!-- Transaction fee -->
          <fee-input tx="$ctrl.preparedTransaction" is-multisig="$ctrl.formData.isMultisig"></fee-input>
          <!-- Password Field -->
          <password-input common="$ctrl.common"></password-input>
          <!-- Send button is disabled if already pressed or no password or no clean recipient address or message is supposed to be encrypted but no recipient public key or is a mosaic transfer and no mosaics in array or if amount is invalid or if characters left are negative or if hex message is not hex only -->
          <button class="btn btn-success" type="submit" ng-disabled="$ctrl.okPressed || $ctrl._Wallet.algo !== 'trezor' && !$ctrl.common.password.length || $ctrl.formData.recipient.length !== 40 || $ctrl.formData.messageType === 2 && $ctrl.formData.recipientPublicKey.length !== 64 || $ctrl.isMosaicTransfer && $ctrl.formData.isMultisig && !$ctrl.preparedTransaction.otherTrans.mosaics.length || $ctrl.isMosaicTransfer && !$ctrl.formData.isMultisig && !$ctrl.preparedTransaction.mosaics.length || !$ctrl._Helpers.isTextAmountValid($ctrl.formData.amount) || $ctrl.charactersLeft < 0 || $ctrl.formData.messageType === 0 && $ctrl.formData.message.length && !$ctrl._Helpers.isHexadecimal($ctrl.formData.message)" ng-click="$ctrl.send()">
            <i class="fa fa-send"></i> {{ 'GENERAL_SEND' | translate }}
          </button>
          </fieldset>
        </div>
      </div>
      <!-- Attach mosaic component -->
      <attach-mosaic ng-show="$ctrl.isMosaicTransfer" form-data="$ctrl.formData" selected-mosaic="$ctrl.selectedMosaic" account-mosaics="$ctrl.currentAccountMosaicData" update-ctrl="$ctrl.prepareTransaction();"></attach-mosaic>
    </div>
  </div>
</div>
'''
'''--- src/app/modules/catapultOptin/catapultOptin/catapultOptin.config.js ---
function CatapultOptInConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.catapultOptin', {
            url: '/catapultOptin',
            controller: 'CatapultOptInCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/catapultOptin/catapultOptin/catapultOptin.html',
            title: 'Symbol Opt In'
        });

};

export default CatapultOptInConfig;

'''
'''--- src/app/modules/catapultOptin/catapultOptin/catapultOptin.controller.js ---
import nem from 'nem-sdk';
import {
    Account,
    NetworkType,
    Address
} from "symbol-sdk";
import {StatusCode} from "symbol-post-launch-optin-module";
import {PublicAccount} from "symbol-sdk";

class NormalOptInCtrl {
    // Set services as constructor parameter
    constructor(Wallet, Alert, $scope, $timeout, DataStore, $location, Recipient, CatapultOptin) {
        'ngInject';

        // Declaring services
        this._location = $location;
        this._Alert = Alert;
        this._Wallet = Wallet;
        this._scope = $scope;
        this._DataStore = DataStore;
        this._Recipient = Recipient;
        this._$timeout = $timeout;
        this._CatapultOptin = CatapultOptin;

        // If no wallet show alert and redirect to home
        if (!this._Wallet.current) {
            this._Alert.noWalletLoaded();
            this._location.path('/');
            return;
        }

        // Initialization
        this.init();
    }

    init() {
        // Object to contain our password & private key data.
        this.common = nem.model.objects.get("common");
        //Form Data model
        this.formData = {
            passwordDownloadWallet: '',
            confirmPasswordDownloadWallet: '',
        };
        // Set catapult network
        if (this._Wallet.network == nem.model.network.data.mainnet.id) {
            this.catapultNetwork = NetworkType.MAIN_NET;
        }
        else if (this._Wallet.network == nem.model.network.data.testnet.id) {
            this.catapultNetwork = NetworkType.TEST_NET;
        }
        else if (this._Wallet.network == nem.model.network.data.mijin.id) {
            this.catapultNetwork = NetworkType.MIJIN;
        }
        else {
            this.catapultNetwork = NetworkType.MIJIN_TEST;
        }
        //Optin step
       // this.step = 0;
        //Confirm modal step
        this.confirmStep = 0;
        //Optin status
        this.optinStatus = 0;
        this.optinError = null;
        this.optinAmount = 0;

        //Get Opt In Status
        this.checkOptinStatus(this._DataStore.account.metaData.account.address);

        //OPT IN REFACTOR METHODS
        this.step = 0;
        this.fee = 850000;
        this.optinPublicKey = "";
        this.optinAccount = null;
        this.optinAddress = "";
        this.cosignatoriesMapping = [];
        this.multisigDestinationPublicKey = "";
        this.multisigDestinationAddress = "";
        this.formData = {};
        this.formData.password = "";
        this.formData.confirmPassword = "";
        this.formData.acceptPrivacy = false;
        this.statusLoading = true;
        this.isOptedIn = false;
        this.formData.selectedAccount = this._DataStore.account.metaData.account;
        this.isMultisig = false;
        this.hasCosignatorySigned = true;
    }

    /**
     * Get Opt In Status
     */
    checkOptinStatus(address){
        this.statusLoading = true;
        nem.com.requests.account.data(this._Wallet.node, address).then( account =>  {
            this._CatapultOptin.getStatus(account).then( status => {
                const isMultisig = this.formData.selectedAccount.address !== this._DataStore.account.metaData.account.address;
                if (!isMultisig) {
                    this._CatapultOptin.getNormalCache(account).then(cache => {
                        this._$timeout(() => {
                            this.optinError = cache.errorDTO;
                        });
                    })
                } else {
                    this._CatapultOptin.getMultisigCache(account).then(cache => {
                        this._$timeout(() => {
                            this.optinError = cache.errorDTO;
                        });
                    })
                }
                this._CatapultOptin.getClaimAmount(address).then(amount => {
                    this._$timeout(() => {
                        this.optinAmount = amount;
                        this.optinStatus = status;
                        if (status === StatusCode.OPTIN_PROCESSED) {
                            if (isMultisig) {
                                this._CatapultOptin.getMultisigCache(account, true).then(cache => {
                                    this._$timeout(() => {
                                        this.hasCosignatorySigned = !!cache.multisigDTOs[this._DataStore.account.metaData.account.publicKey];
                                        this.multisigDestinationPublicKey = cache.multisigDestinationPublicKey;
                                        this.multisigDestinationAddress = PublicAccount.createFromPublicKey(this.multisigDestinationPublicKey, this.catapultNetwork).address.pretty();
                                        this.statusLoading = false;
                                    });
                                });
                            } else {
                                this._CatapultOptin.getNormalCache(account).then(cache => {
                                    this._$timeout(() => {
                                        this.optinAddress = PublicAccount.createFromPublicKey(cache.simpleDTO.destination, this.catapultNetwork).address.pretty();
                                        this.statusLoading = false;
                                    });
                                });
                            }
                        } else if (status === StatusCode.OPTIN_SM_DONE) {
                            this._CatapultOptin.getNormalCache(account).then(cache => {
                                this._$timeout(() => {
                                    this.optinAddress = PublicAccount.createFromPublicKey(cache.simpleDTO.destination, this.catapultNetwork).address.pretty();
                                    this.statusLoading = false;
                                });
                            });
                        } else if (status === StatusCode.OPTIN_MS_PENDING) {
                            this._CatapultOptin.getMultisigCache(account, true).then(cache => {
                                this._$timeout(() => {
                                    this.multisigDestinationPublicKey = "";
                                    this.multisigDestinationAddress = "";
                                    this.statusLoading = false;
                                });
                            });
                        } else if (status === StatusCode.OPTIN_MS_PENDING_SIGNATURES || status === StatusCode.OPTIN_MS_DONE ) {
                            this._CatapultOptin.getMultisigCache(account, true).then(cache => {
                                this._$timeout(() => {
                                    this.hasCosignatorySigned = !!cache.multisigDTOs[this._DataStore.account.metaData.account.publicKey];
                                    this.multisigDestinationPublicKey = cache.multisigDestinationPublicKey;
                                    this.multisigDestinationAddress = PublicAccount.createFromPublicKey(this.multisigDestinationPublicKey, this.catapultNetwork).address.pretty();
                                    this.statusLoading = false;
                                });
                            });
                        } else {
                            this.statusLoading = false;
                        }
                    });
                })
            });
        });
    }

    calculateMultisigDestinationAddress() {
        try {
            if (this.multisigDestinationPublicKey.length !== 64) {
                this.multisigDestinationAddress = null;
            } else {
                this.multisigDestinationAddress = PublicAccount.createFromPublicKey(this.multisigDestinationPublicKey, this.catapultNetwork).address.pretty();
            }
        } catch (e) {
            this.multisigDestinationAddress = null;
        }
    }

    isValidMultisigDestination() {
        if (!this.isMultisig) return true;
        try {
            if (this.multisigDestinationPublicKey.length !== 64) {
                return false;
            }
            PublicAccount.createFromPublicKey(this.multisigDestinationPublicKey, this.catapultNetwork);
            return true;
        } catch (e) {
            return false;
        }
    }

    onPrivateKeyChange() {
        try {
            if (this.optinPublicKey.length !== 64) {
                this.optinAccount = null;
            } else {
                this.optinAccount = PublicAccount.createFromPublicKey(this.optinPublicKey, this.catapultNetwork);
            }
        } catch (e) {
            this.optinAccount = null;
        }
    }

    onMultisigSelectorChange(){
        this.isMultisig = this.formData.selectedAccount.address !== this._DataStore.account.metaData.account.address;
        this.checkOptinStatus(this.formData.selectedAccount.address);
        if (this.isMultisig) {
            nem.com.requests.account.data(this._Wallet.node, this.formData.selectedAccount.address).then( account =>  {
                this._CatapultOptin.getMultisigCache(account, true).then(cache => {
                    this.cosignatoriesMapping = [];
                    for (let cosignatory of account.meta.cosignatories) {
                        this.cosignatoriesMapping.push([
                            cosignatory.address, cache.multisigDTOs[cosignatory.publicKey] ?
                                PublicAccount.createFromPublicKey(cache.multisigDTOs[cosignatory.publicKey].destination, this.catapultNetwork).address.plain()
                                : null
                        ]);
                    }
                });
            });
        }
    }

    /**
     * Sends optin simple or multisig account by a valid form
     */
    send() {
        if (this._Wallet.decrypt(this.common)) {
            if (this._DataStore.account.metaData.account.balance < this.fee) {
                this._$timeout(() => {
                    this._Alert.insufficientBalance();
                });
            }
            else {
                this.step = 0;
                this.statusLoading = true;
                this._$timeout(() => {
                    if (!this.isMultisig) {
                        this._CatapultOptin.sendSimpleOptin(this.common, this.optinPublicKey).then(result => {
                            this.checkOptinStatus(this.formData.selectedAccount.address);
                            this.optinAccount = null;
                            this.optinPublicKey = '';
                        }).catch(e => {
                            // this
                        });
                    } else {
                        this._CatapultOptin.sendMultisigOptin(this.common, this.formData.selectedAccount.publicKey, this.multisigDestinationPublicKey).then(result => {
                            this.checkOptinStatus(this.formData.selectedAccount.address);
                            this.onMultisigSelectorChange();
                            this.optinAccount = null;
                            this.optinPublicKey = '';
                            this.multisigDestinationPublicKey = '';
                            this.multisigDestinationAddress = '';
                        }).catch(e => {
                            // this
                        });
                    }
                });
            }
        }
        this.common.password = '';
        this.formData.acceptTerms = false;
        this.formData.acceptPrivacy = false;
    }

    /**
     * Copy the account address to clipboard
     */
    copyToClipboard(text) {
        var dummy = document.createElement("input");
        document.body.appendChild(dummy);
        dummy.setAttribute("id", "dummy_id");
        dummy.setAttribute('value', text);
        dummy.select();
        document.execCommand("copy");
        document.body.removeChild(dummy);
        this._Alert.copySuccess();
    }
}

export default NormalOptInCtrl;

'''
'''--- src/app/modules/catapultOptin/catapultOptin/catapultOptin.html ---
<div class="optin-page" ng-show="!$ctrl.isOptedIn">

    <video ng-show="$ctrl.step == 0;" class="videoLogo" autoplay="autoplay" loop="loop" muted="muted" defaultmuted="" playsinline="" src="images/welcome-background.mp4"></video>
    <video ng-show="$ctrl.step == 10;" class="videoLogo" autoplay="autoplay" loop="loop" muted="muted" defaultmuted="" playsinline="" data-src="https://s3.amazonaws.com/symbol/wp-content/uploads/2020/05/22103325/ENTERPRISE-HEADER.mp4" src="https://s3.amazonaws.com/symbol/wp-content/uploads/2020/05/22103325/ENTERPRISE-HEADER.mp4"></video>
    <img src="images/background-purple-small.png" class="imageLogo" ng-show="$ctrl.step == 15 || $ctrl.step == 16 || $ctrl.step == 2 || $ctrl.step == 3">
    <img src="images/background-white.png" class="imageLogo" ng-show="$ctrl.step == 17">

    <div class="container">
        <!-- LOADING SCREEN -->
        <div class="row welcome-page" ng-show="$ctrl.step == 0 && $ctrl.statusLoading">
            <div class="col-md-12">
                <h1 class="text-white">{{'OPTIN_LOADING' | translate }}</h1>
            </div>
        </div>
        <!-- STEP 0: WELCOME -->
        <!-- Welcome title -->
        <div class="row welcome-page" ng-show="$ctrl.step == 0 && !$ctrl.statusLoading">
            <div class="col-md-12">
                <h1 class="text-white">{{ 'OPTIN_WELCOME_TITLE' | translate }}</h1>
            </div>
        </div>
        <div class="col-md-10 welcome-page" style="top: 48%; margin-left: -15px;" ng-show="$ctrl.step == 0 && !$ctrl.statusLoading">
            <!-- Welcome text -->
            <div class="form-group" style="margin-bottom: 25px;">
                <h4 class="text-white">{{ 'POST_OPTIN_INFO_1' | translate }}</h4>
                <h4 class="text-white">{{ 'POST_OPTIN_INFO_2' | translate }} <br> {{ 'POST_OPTIN_INFO_3' | translate }}</h4>
                <h4 style="margin-top: 15px;"><a href="https://nemplatform.com/symbol-migration" target="_blank" class="symbol-link"><strong>{{ 'OPTIN_LINK_INFO' | translate }}<span style="text-decoration: underline">{{('HERE' | translate) }}</span></strong></a></h4>
            </div>
            <!-- Ready button -->
            <button class="btn symbol-button" ng-disabled="$ctrl.statusLoading" ng-click="$ctrl.step = 15;">{{ 'SIGNUP_CREATE_READY_BTN' | translate }}</button>
        </div>

        <!-- STEP 1: SELECT ACCOUNT -->
        <div class="row container-div" ng-show="$ctrl.step == 15">
            <div class="col-md-12">
                <img src="images/account.png">
                <h1>{{'SELECT_ACCOUNT_POST_OPTIN' | translate}}</h1>
            </div>
        </div>
        <div class="col-md-8 col-md-offset-2" ng-show="$ctrl.step == 15">
            <!-- Wallet type titles -->
            <div class="form-group" ng-show="$ctrl._DataStore.account.metaData.meta.cosignatoryOf.length > 0">
                <p>{{'GENERAL_SELECT_ACCOUNT' | translate}}</p>
                <simple-and-multisig-select account="$ctrl.formData.selectedAccount" update-ctrl="$ctrl.onMultisigSelectorChange()" class="optin-Selector" </simple-and-multisig-select>
            </div>
            <div class="form-group" ng-show="$ctrl._DataStore.account.metaData.meta.cosignatoryOf.length == 0">
                <p>{{'YOUR_NIS_ACCOUNT' | translate}}</p>
                <label class="optin-label-form">{{$ctrl._DataStore.account.metaData.account.address}}</label>
            </div>

            <div class="form-group" ng-show="$ctrl.statusLoading">
                <p>{{'LOADING' | translate}}...</p>
            </div>

            <div class="form-group" ng-show="!$ctrl.statusLoading">
                <p ng-show="$ctrl.optinAmount >= 2">{{'POST_OPTIN_STATUS' | translate}}</p>
                <label class="optin-label-form" ng-show="$ctrl.optinAmount >= 2">
                    <div ng-show="$ctrl.optinError && $ctrl.optinStatus !== 2 && $ctrl.optinStatus !== 4 && $ctrl.optinStatus !== 5 && $ctrl.optinStatus !== 6" class="status-color-error" style="margin-bottom: 20px;">
                        {{ ('OPTIN_ERROR_TITLE_' + $ctrl.optinError.code) | translate}}
                    </div>
                    <div class="status-color-{{$ctrl.optinStatus}}">
                        {{ ('OPTIN_STATUS_TITLE_' + $ctrl.optinStatus) | translate}}
                    </div>
                </label>

                <p>{{'POST_OPTIN_DETAILS' | translate}}</p>
                <div class="optin-label-form" ng-show="$ctrl.optinAmount >= 2">
                    <label style="font-weight: lighter">{{ ('OPTIN_STATUS_TEXT_' + $ctrl.optinStatus) | translate}}</label>
                    <div ng-show="$ctrl.isMultisig" style="margin: 14px 0; padding: 10px;">
                        <table style="width:100%" class="optin-table">
                            <tr>
                                <th style="width: 80%;">{{ 'NIS1_ADDRESS' | translate }}</th>
                                <th style="width: 20%;">{{ 'OPTIN_SIGNED' | translate }}</th>
                            </tr>
                            <tr ng-repeat="cosig in $ctrl.cosignatoriesMapping">
                                <td style="width: 80%;">{{ cosig[0] }}</td>
                                <td ng-show="!!cosig[1]" style="width: 80%;">
                                    <i style="color: rgb(0, 179, 0);" class="fa fa-check"></i>
                                </td>
                                <td ng-show="!cosig[1]" style="width: 20%;">
                                    <i style="color: rgb(179, 0, 0);" class="fa fa-times"></i>
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>
                <div class="optin-label-form" ng-show="$ctrl.optinAmount < 2">
                    <label style="font-weight: lighter">{{ 'OPTIN_NOT_AVAILABLE' | translate}}</label>
                </div>
            </div>
            <div class="form-group" ng-show="!$ctrl.statusLoading && ($ctrl.optinStatus === 2 || $ctrl.optinStatus === 4 || $ctrl.optinStatus === 5 || $ctrl.optinStatus === 6) && $ctrl.optinAmount >= 2">
                <p>{{'POST_OPTIN_DEST_ADDRESS' | translate}}</p>
                <label class="text-left optin-label-form">{{$ctrl.isMultisig ? $ctrl.multisigDestinationAddress : $ctrl.optinAddress}}</label>
            </div>
            <div class="form-group" ng-show="!$ctrl.statusLoading && $ctrl.optinAmount >= 2">
                <p>{{($ctrl.optinStatus === 1 || $ctrl.optinStatus === 3 || $ctrl.optinStatus === 4 || $ctrl.optinStatus === 5 ? 'POST_OPTIN_AMOUNT' : 'POST_OPTIN_AMOUNT_CLAIMED') | translate}}</p>
                <label class="text-left optin-label-form" style="width: 100%; text-align: left; padding-left: 30px;">{{$ctrl.optinAmount}} XYM</label>
            </div>
            <div class="mt-4" ng-show="!$ctrl.statusLoading && $ctrl.optinStatus !== 2 && $ctrl.optinStatus !== 5 && $ctrl.optinStatus !== 6 && !($ctrl.optinStatus === 4 && $ctrl.hasCosignatorySigned) ">
                <div class="row">
                    <div class="col-md-6" style="padding: 0 16px;">
                    </div>
                    <div class="col-md-6" style="padding: 0 16px;">
                        <button class="btn symbol-button symbol-button__block" style="float:left;" ng-click="$ctrl.step = 16;" ng-show="$ctrl.optinAmount >= 2">{{'POST_OPTIN_START' | translate}}</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- STEP 2: UNLOCK ACCOUNT -->
        <div class="row container-div" ng-show="$ctrl.step == 16">
            <div class="col-md-12">
                <img src="images/password.png">
                <h1>{{'CATAPULTOPTIN_ACCOUNT_UNLOCK' | translate}}</h1>
            </div>
        </div>
        <div class="col-md-8 col-md-offset-2" ng-show="$ctrl.step == 16">
            <!-- Wallet type titles -->
            <div class="form-group" ng-show="$ctrl.isMultisig && $ctrl.optinStatus === 3">
                <p>{{'POST_OPTIN_DEST_MSIG' | translate}}</p>
                <input ng-show="$ctrl.optinStatus === 3" type="text"  placeholder="{{ 'OPTIN_PUBLICKEY_PLACEHOLDER' | translate }}" class="optin-label-form" ng-model="$ctrl.multisigDestinationPublicKey" ng-change="$ctrl.calculateMultisigDestinationAddress()"/>
            </div>
            <div class="form-group" ng-show="$ctrl.isMultisig && $ctrl.multisigDestinationAddress">
                <p>{{'POST_OPTIN_DEST_MSIG_ADDRESS' | translate}}</p>
                <label class="optin-label-form">{{$ctrl.multisigDestinationAddress ? $ctrl.multisigDestinationAddress : ''}}</label>
            </div>

            <div class="form-group" ng-show="!$ctrl.isMultisig">
                <p>{{'CATAPULTOPTIN_ACCOUNT_UNLOCK' | translate}}</p>
                <input type="text" class="optin-label-form" placeholder="{{ 'OPTIN_PUBLICKEY_PLACEHOLDER' | translate }}" ng-model="$ctrl.optinPublicKey" ng-change="$ctrl.onPrivateKeyChange()"/>
            </div>
            <div class="form-group" ng-show="!$ctrl.isMultisig && $ctrl.optinAccount">
                <p>{{'YOUR_SYMBOL_ADDRESS' | translate}}</p>
                <label class="optin-label-form">{{$ctrl.optinAccount ? $ctrl.optinAccount.address.pretty() : ''}}</label>
            </div>
            <div class="mt-4">
                <div class="row">
                    <div class="col-md-6" style="padding: 0 16px;">
                        <button class="btn symbol-button symbol-button__block" style="float:left;" ng-click="$ctrl.step = 15; $ctrl.optinAccount = null; $ctrl.optinPublicKey = '';">{{'GENERAL_BACK' | translate}}</button>
                    </div>
                    <div class="col-md-6" style="padding: 0 16px;">
                        <button class="btn symbol-button symbol-button__block" style="float:left;" ng-show="(!$ctrl.isMultisig && !!$ctrl.optinAccount) || ($ctrl.isMultisig && $ctrl.isValidMultisigDestination())" ng-click="$ctrl.step = 17;">{{'GENERAL_NEXT' | translate}}</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- STEP 3: REVIEW INFO -->
        <div class="row container-div" ng-show="$ctrl.step == 17">
            <div class="col-md-12">
                <img src="images/terms.png">
                <h1 style="color: #44004E">{{'CATAPULTOPTIN_REVIEW_NORMAL_RESULT' | translate}}</h1>
            </div>
        </div>
        <div class="col-md-8 col-md-offset-2" ng-show="$ctrl.step == 17">
            <!-- Wallet type titles -->
            <div ng-show="!$ctrl.isMultisig">
                <div class="form-group">
                    <p class="purple-dark">{{'POST_OPTIN_DEST_ADDRESS' | translate}}</p>
                    <label class="text-left optin-label-form-white" style="width: 100%; text-align: left; padding-left: 30px;">{{$ctrl.optinAccount.address.pretty()}}</label>
                </div>
            </div>
            <div ng-show="$ctrl.isMultisig">
                <div class="form-group">
                    <p class="purple-dark">{{'POST_OPTIN_DEST_MULTISIG_ADDRESS' | translate}}</p>
                    <label class="text-left optin-label-form-white" style="width: 100%; text-align: left; padding-left: 30px;">{{$ctrl.multisigDestinationAddress}}</label>
                </div>
            </div>
            <div class="form-group">
                <p class="purple-dark">{{'GENERAL_AMOUNT' | translate}}</p>
                <label class="text-left optin-label-form-white" style="width: 100%; text-align: left; padding-left: 30px;">{{$ctrl.optinAmount}} XYM</label>
            </div>

            <!-- TERMS AND CONDITIONS-->
            <input id="accept_and_read_terms" type="checkbox" ng-model="$ctrl.formData.acceptTerms">
            <label class="mt-2" for="accept_and_read_terms" class="purple-dark"><b>{{ 'OPTIN_TAC_READ_ACCEPT' | translate }}<a href="https://symbolplatform.com/terms-conditions/" class="symbol-link" style="color: rgb(205,0,205);" target="_blank">{{ 'OPTIN_TAC_TEXT' | translate }}</a></b>{{ 'OPTIN_TAC_READ_ACCEPT_POST' | translate }}</label>
            <!-- PRIVACY POLICY-->
            <br>
            <input id="accept_and_read_privacy" type="checkbox" ng-model="$ctrl.formData.acceptPrivacy">
            <label class="mt-2" for="accept_and_read_privacy" class="purple-dark"><b>{{ 'OPTIN_TAC_READ_ACCEPT' | translate }}<a href="https://symbolplatform.com/terms-conditions/" class="symbol-link" style="color: rgb(205,0,205);" target="_blank">{{ 'OPTIN_PP_TEXT' | translate }}</a></b>{{ 'OPTIN_TAC_READ_ACCEPT_POST' | translate }}</label>

            <div class="mt-4">
                <p class="purple-dark">{{ 'GENERAL_FEE' | translate }}</p>
                <label class="text-left optin-label-form-white" style="width: 100%; text-align: left; padding-left: 30px;">{{ $ctrl.isMultisig ? '0.35': '0.2' }} XEM</label>
            </div>
            <div class="mt-4">
                <!-- Password sign -->
                <fieldset ng-show="$ctrl._Wallet.algo !== 'trezor' && $ctrl._Wallet.algo !== 'ledger'">
                    <p class="purple-dark">{{'OPTIN_ENTER_PASSWORD'| translate }}</p>
                    <input class="form-control optin-input purple-dark" type="password" ng-model="$ctrl.common.password"/>
                </fieldset>
            </div>
            <div class="mt-4">
                <div class="row">
                    <div class="col-md-6" style="padding: 0 16px;">
                        <button class="btn symbol-button symbol-button__block" style="float:left;" ng-click="$ctrl.step = 16;">{{'GENERAL_BACK' | translate}}</button>
                    </div>
                    <div class="col-md-6" style="padding: 0 16px;">
                        <button class="btn symbol-button symbol-button__block" style="float:left; background: rgb(255,0,255);
background: linear-gradient(42deg, rgba(255,0,255,1) 0%, rgba(255,255,255,1) 100%);"
                                ng-click="$ctrl.send()"
                                ng-disabled="!$ctrl.formData.acceptPrivacy || !$ctrl.formData.acceptTerms"
                        >{{ 'GENERAL_TAB_SEND' | translate }}</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

'''
'''--- src/app/modules/catapultOptin/index.js ---
import angular from 'angular';

// Create the module where our functionality can attach to
let catapultOptin = angular.module('app.catapultOptin', []);

// Include our UI-Router config settings
import CatapultOptInConfig from './catapultOptin/catapultOptin.config';
catapultOptin.config(CatapultOptInConfig);

// Controllers
import CatapultOptInCtrl from './catapultOptin/catapultOptin.controller';
catapultOptin.controller('CatapultOptInCtrl', CatapultOptInCtrl);

// Create the module where our functionality can attach to
let multisigOptin = angular.module('app.multisigOptin', []);

export default catapultOptin;

'''
'''--- src/app/modules/dashboard/dashboard.config.js ---
function DashboardConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.dashboard', {
            url: '/dashboard',
            controller: 'DashboardCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/dashboard/dashboard.html',
            title: 'Dashboard'
        });

};

export default DashboardConfig;
'''
'''--- src/app/modules/dashboard/dashboard.controller.js ---
import nem from 'nem-sdk';

class DashboardCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Wallet, Alert, $scope, $timeout, DataStore) {
        'ngInject';

        //// Module dependencies region ////

        this._Alert = Alert;
        this._Wallet = Wallet;
        this._$timeout = $timeout;
        this._DataStore = DataStore;

        //// End dependencies region ////

        //// Module properties region ////

        // Store blocks height as chart labels
        this.labels = [];

        // Store fee in blocks
        this.valuesInFee = [];

        // Indicate if chart is empty (no blocks with fee above 0 to show)
        this.chartEmpty = true;

        // Default tab on confirmed transactions
        this.tabConfirmed = true;

        // Current page for confirmed transactions pagination
        this.currentPage = 0;

        // Current page for unconfirmed transactions pagination
        this.currentPageUnc = 0;

        // Current page for harvested blocks pagination
        this.currentPageHb = 0;

        // Page size for all paginated elements
        this.pageSize = 5;

        //// End properties region ////

        /**
         * Watch harvested blocks in DataStore service for the chart
         */
        $scope.$watch(() => this._DataStore.account.harvesting.blocks, (val) => {
            if (!val) return;
            this.labels = [];
            this.valuesInFee = [];
            for (let i = 0; i < val.length; ++i) {
                // If fee > 0 we push the block as label and the fee as data for the chart
                if (val[i].totalFee / 1000000 > 0) {
                    this.labels.push(val[i].height)
                    this.valuesInFee.push(val[i].totalFee / 1000000);
                }
            }
            // If nothing above 0 XEM show message
            if (!this.valuesInFee.length) {
                this.chartEmpty = true;
            } else {
                this.chartEmpty = false;
            }
        });
    }

}

export default DashboardCtrl;
'''
'''--- src/app/modules/dashboard/dashboard.html ---
<div class="dashboard-page">
  <div class="container-fluid main">

    <div class="row">
      <div class="col-sm-9">
        <h2>{{'DASHBOARD_TITLE' | translate}}</h2>
      </div>
      <div class="col-sm-3 secondary">
        <!-- <h4>{{ 'DASHBOARD_NEWS_TITLE' | translate }}</h4> -->
      </div>
    </div>

    <div class="row">
      <div class="col-lg-8 col-md-9">
        <div class="row">
          <div class="col-lg-12">
            <div class="panel-heading">
              <ul class="nav nav-tabs">
                <li ng-class="$ctrl.tabConfirmed ? 'active' : ''">
                  <a ng-click="$ctrl.tabConfirmed = true;$ctrl.currentPageUnc = 0">{{ 'DASHBOARD_CONFIRMED' | translate }}</a>
                </li>
                <li ng-class="$ctrl.tabConfirmed ? '' : 'active'">
                  <a ng-click="$ctrl.tabConfirmed = false;$ctrl.currentPage = 0">{{ 'DASHBOARD_UNCONFIRMED' | translate }}
                    <span class="badge">{{$ctrl._DataStore.account.transactions.unconfirmed.length}}</span>
                  </a>
                </li>
              </ul>
              <paginate ng-show="$ctrl.tabConfirmed" data="$ctrl._DataStore.account.transactions.confirmed" current-page="$ctrl.currentPage" page-size="$ctrl.pageSize"></paginate>
              <paginate ng-show="!$ctrl.tabConfirmed" data="$ctrl._DataStore.account.transactions.unconfirmed" current-page="$ctrl.currentPageUnc" page-size="$ctrl.pageSize"></paginate>
            </div>
            <table class="table table-condensed top">
              <thead>
                <tr>
                  <th>{{ 'GENERAL_ACCOUNT' | translate }}</th>
                  <th>{{ 'GENERAL_AMOUNT' | translate }}</th>
                  <th>{{ 'GENERAL_MESSAGE' | translate }}</th>
                  <th>{{ 'GENERAL_DATE' | translate }}</th>
                </tr>
              </thead>
            </table>
            <table class="table">
              <tbody>
                <div ng-show="$ctrl.tabConfirmed">
                  <div ng-repeat="tx in $ctrl._DataStore.account.transactions.confirmed| orderBy:'-transaction.timeStamp' | startFrom:$ctrl.currentPage*$ctrl.pageSize | limitTo:$ctrl.pageSize">
                    <tag-transaction d="tx" tooltip-position="'left'"></tag-transaction>
                  </div>
                </div>
                <div ng-show="!$ctrl.tabConfirmed">
                  <div ng-repeat="tx in $ctrl._DataStore.account.transactions.unconfirmed | orderBy:'-transaction.timeStamp' | startFrom:$ctrl.currentPageUnc*$ctrl.pageSize | limitTo:$ctrl.pageSize">
                    <tag-transaction d="tx" tooltip-position="'left'"></tag-transaction>
                  </div>
                </div>
              </tbody>
            </table>
            <span class="col-lg-12" style="text-align: right;margin-top: 5px;" ng-show="$ctrl.tabConfirmed && $ctrl._DataStore.account.transactions.confirmed.length > 24"><a ui-sref="app.explorerTransactions">{{ 'DASHBOARD_MORE_TXES' | translate }}</a></span>
            <div class="panel-body nothing" ng-show="($ctrl._DataStore.account.transactions.confirmed.length == 0 && $ctrl.tabConfirmed) || ($ctrl._DataStore.account.transactions.unconfirmed.length == 0 && !$ctrl.tabConfirmed)">
              <p>{{ 'GENERAL_NO_RESULTS' | translate }}</p>
            </div>
          </div>
          <!-- HARVESTED INCOME -->
          <div class="col-xs-12 col-lg-9">
            <div class="panel-heading">
              <h4> {{ 'DASHBOARD_HARVEST_INCOME_TITLE' | translate }} </h4>
            </div>
            <div class="panel-body" ng-show="$ctrl._DataStore.account.harvesting.blocks.length && !$ctrl.chartEmpty">
              <canvas width='793' height='200' id="bar" class="chart chart-bar" chart-data="$ctrl.valuesInFee" chart-labels="$ctrl.labels"></canvas>
              <center><small>{{ 'DASHBOARD_HARVEST_INCOME_NOTE' | translate }}</small></center>
            </div>
            <div class="panel-body nothing" ng-show="!$ctrl._DataStore.account.harvesting.blocks.length">
              <p>{{ 'GENERAL_NO_RESULTS' | translate }}</p>
            </div>
            <div class="panel-body" ng-show="$ctrl.chartEmpty && $ctrl._DataStore.account.harvesting.blocks.length">
              <p>{{ 'DASHBOARD_HARVEST_INCOME_MESSAGE' | translate }}</p>
            </div>
          </div>
          <!-- HARVESTED BLOCKS -->
          <div class="col-xs-12 col-lg-3 harvestedBlocks">
            <div class="panel-heading">
              <h4>{{ 'DASHBOARD_HARVESTED_BLOCKS_TITLE' | translate }}</h4>
            </div>
            <table class="table table-condensed">
              <thead>
                <tr>
                  <th>{{ 'GENERAL_BLOCK' | translate }}</th>
                  <th>{{ 'DASHBOARD_HARVESTED_BLOCKS_TH' | translate }}</th>
                </tr>
              </thead>
            </table>
            <table ng-show="$ctrl._DataStore.account.harvesting.blocks.length" class="table table-condensed">
              <tbody>
                <tr ng-repeat="block in $ctrl._DataStore.account.harvesting.blocks | startFrom:$ctrl.currentPageHb*$ctrl.pageSize | limitTo:$ctrl.pageSize">
                  <td>{{block.height}}</td>
                  <td>{{block.totalFee/1000000}}</td>
                </tr>
              </tbody>
            </table>
            <div class="arrows harvested">
              <paginate data="$ctrl._DataStore.account.harvesting.blocks" current-page="$ctrl.currentPageHb" page-size="$ctrl.pageSize"></paginate>
            </div>
            <div class="panel-body nothing" ng-show="!$ctrl._DataStore.account.harvesting.blocks.length">
              <p>{{ 'GENERAL_NO_RESULTS' | translate }}</p>
            </div>
          </div>
        </div>
      </div>
      <!-- UPDATES SECTION -->
      <div class="col-lg-3 col-lg-offset-1 col-md-3 col-md-offset-0 col-sm-12 col-sm-offset-0 updates">
        <div>
          <h1>{{ 'DASHBOARD_NOTICE_1' | translate }}</h1>
          <h5 ng-bind-html="'DASHBOARD_NOTICE_2' | translate"></h5>
          <p>
            <span ng-bind-html="'DASHBOARD_NOTICE_3' | translate"></span>
            <br><br>
            {{ 'DASHBOARD_NOTICE_4' | translate }}
            <br><br>
            {{ 'DASHBOARD_NOTICE_5' | translate }}
          </p>
        </div>
        <!-- MARKET INFO WIDGET -->
        <market-data></market-data>

    </div>
  </div>
</div>
</div>

'''
'''--- src/app/modules/dashboard/index.js ---
import angular from 'angular';

// Create the module where our functionality can attach to
let dashboardModule = angular.module('app.dashboard', []);

// Include our UI-Router config settings
import DashboardConfig from './dashboard.config';
dashboardModule.config(DashboardConfig);

// Controllers
import DashboardCtrl from './dashboard.controller';
dashboardModule.controller('DashboardCtrl', DashboardCtrl);

export default dashboardModule;

'''
'''--- src/app/modules/domainNameSystem/domainNameSystem.config.js ---
function domainNameSystemConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.domainNameSystem', {
            url: '/domainNameSystem',
            controller: 'domainNameSystemCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/domainNameSystem/domainNameSystem.html',
            title: 'Configure DNS'
        });

};

export default domainNameSystemConfig;
'''
'''--- src/app/modules/domainNameSystem/domainNameSystem.controller.js ---
import nem from 'nem-sdk';
import Helpers from '../../utils/helpers';

class domainNameSystemCtrl {
    // Set services as constructor parameter
    constructor(Wallet, Alert, DataStore, $filter, $timeout, $http, $state) {
        'ngInject';

        //// Module dependencies region ////

        this._Alert = Alert;
        this._Wallet = Wallet;
        this._DataStore = DataStore;
        this._$filter = $filter;
        this._$timeout = $timeout;
        this._$http = $http;
        this._Helpers = Helpers;
        this._$state = $state;

        //// End dependencies region ////
         
        // Initialization
        this.init();
    }

    //// Module methods region ////

    /**
     * Initialize module properties
     */
    init() { 
        // Form is a transfer transaction object, pre-set recipient if any from state parameter
        this.formData = nem.model.objects.create("transferTransaction")(undefined !== this._$state.params.address ? this._$state.params.address : '');
        // Mosaics are null by default
        this.formData.mosaics = null;
        // Set first multisig account if any
        this.formData.multisigAccount = this._DataStore.account.metaData.meta.cosignatoryOf.length == 0 ? '' : this._DataStore.account.metaData.meta.cosignatoryOf[0];
        // Switch between mosaic transfer and normal transfers
        this.isMosaicTransfer = false;
        this.formData.messageType = 1; 
        this.formData.message = '';
        this.formData.amount = 0;
        this.formData.recipient ='';
        this.formData.recipientPublicKey = '';

        // Pointer add for view
        this.formData.pointerAdd = '';
        
        // Prevent user to click twice on send when already processing
        this.okPressed = false;
        // Is namespace selected
        this.nameSpaceSelected = true;
        // Object to contain our password & private key data.
        this.common = nem.model.objects.get("common");
        // Default namespaces owned
        this.namespaceOwned = this._DataStore.namespace.ownedBy[this._Wallet.currentAccount.address];
        //alert(JSON.stringify(this.namespaceOwned, null, 4));
        
        // Store the prepared transaction
        this.preparedTransaction = {};

        // Store transactions
        this.transactions = [];
        this.noMoreTxes = false;

        //DNS info holder
        this.ip1 = '';
        this.organization = '';
        this.country = '';
        this.address = '';
        this.phone = '';
        this.email = '';
        this.other = '';
        this.transMessage= '';
        // Character counter
        this.charactersLeft = 1024;
    }

    /**
     * Get current account namespaces & mosaic names
     *
     * @note: Used in view (ng-update) on multisig changes
     */
    updateCurrentAccountNS() {
        // Get current account
        let acct = this.formData.isMultisig ? this.formData.multisigAccount.address : this._Wallet.currentAccount.address;
        // Set current account namespace names if not undefined in DataStore service
        if (undefined !== this._DataStore.namespace.ownedBy[acct]) {
            this.namespaceOwned = this._DataStore.namespace.ownedBy[acct];
            this.formData.namespaceParent = this.namespaceOwned[Object.keys(this.namespaceOwned)[0]];
            this.selectNamespace();
        } else {
            this.namespaceOwned = {};
            this.formData.namespaceParent = "";
        }
    }

    /**
     * Check if a namespace id is level 3
     *
     * @param {object} elem - The element to check
     *
     * @return {boolean} - True if element is not a namespace level 3, false otherwise
     */
    isNotLevel3(elem) {
        return elem.fqn.split('.').length < 3;
    }

    /**
     * Respond to namespace selection
     */
    selectNamespace() {
        //alert(JSON.stringify(this.formData.namespaceParent, null, 4));
        var nameSpaceName = null;
        try {
            nameSpaceName = this.formData.namespaceParent['fqn'];
            this.getPointerAccount(nameSpaceName);
        } catch(err) {};
        
        if (nameSpaceName != null) {
            // clear json msg
            this.transMessage ='';
            // Get transactions
            this.getTransactions(false);

        } else { //clean if no namespace is selected
            this.formData.pointerAdd = '';
            this.formData.recipient = '';
            this.formData.recipientPublicKey = '';
            this.ip1 ='';
            this.organization = '';
            this.country = '';
            this.address = '';
            this.phone = '';
            this.email = '';
            this.other = '';
            this.charactersLeft = 1024;
            this.formData.message = '';
            this.transMessage ='';
        }
    }

    /**
     * Calculate pointer address from namespace
     */
    getPointerAccount(namespace) {
        var passphrase = nem.crypto.js.SHA256(namespace);
        var privateKey = nem.crypto.helpers.derivePassSha(passphrase, 1).priv;   
        var keyPair = nem.crypto.keyPair.create(privateKey);   
        var publicKey = keyPair.publicKey.toString();
        var address = nem.model.address.toAddress(publicKey, this._Wallet.network);
        this.formData.pointerAdd = address;
        this.formData.recipient = address;
        this.formData.recipientPublicKey = publicKey;
    }

    /**
     * Get transactions of the pointer address
     */
    getTransactions(isUpdate, txHash) {
        let obj = {
            'params': {
                'address': this.formData.pointerAdd, //pointer address here this.formData.pointerAdd
                'hash': txHash ? txHash : '',
                'pageSize': isUpdate ? 100 : 50
            }
        };
        return this._$http.get(this._Wallet.node.host + ':' + this._Wallet.node.port + '/account/transfers/all', obj).then((res) => {
            if (isUpdate) {
                // Check if txes left to load
                if (!res.data.data.length || res.data.data.length < 100) this.noMoreTxes = true;
                //
                for (let i = 0; i < res.data.data.length; i++) {
                    this.transactions.push(res.data.data[i]);
                }
            } else {
                this.transactions = res.data.data;
                this.analyzeTransactions();
            }
        });
    }

    /**
     * Analyze transactions from pointer address
     */
    analyzeTransactions() {
        var data = this.transactions;
        var stop = 0;
        var currNetwork = this._Wallet.network;
        var dnsResults = '';
        var ownerAdd = this.formData.namespaceParent['owner']
        //console.log(JSON.stringify(data));

        $.each(data, function(index, value) {

            //change if multisig
            if (value['transaction']['type'] == 4100) {
                value = value['transaction']['otherTrans'];
            } else {
                value = value['transaction'];    
            }
            
            // loop transactions to find DNS trans from namespace owner                
            if (nem.model.address.toAddress(value['signer'], currNetwork) == ownerAdd) {
                var hex = value['message']['payload'];
                hex = hex.toString();//force conversion
                var str = '';
                for (var i = 0; i < hex.length; i += 2)
                    str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));

                var objPayload = jQuery.parseJSON(str);
                if (objPayload['dns'] == 'yes' && stop == 0) {
                    stop = 1;
                    dnsResults = str;
                }
            }
        });

        if (stop == 1) { // we found DNS info
            var objDnsResults = jQuery.parseJSON(dnsResults);
            
            this.ip1 = objDnsResults['ip1'];
            this.organization = objDnsResults['organization'];
            this.country = objDnsResults['country'];
            this.address = objDnsResults['address'];
            this.phone = objDnsResults['phone'];
            this.email = objDnsResults['email'];
            this.other = objDnsResults['other'];

            if(this.ip1 == undefined){this.ip1 = ''};
            if(this.organization == undefined){this.organization = ''};
            if(this.country == undefined){this.country = ''};
            if(this.address == undefined){this.address = ''};
            if(this.phone == undefined){this.phone = ''};
            if(this.email == undefined){this.email = ''};
            if(this.other == undefined){this.other = ''};

            this._Alert.dnsMsgSuccess('');

            this.processTransMessage();
            
        } else { // we did not find info
            this.ip1 ='';
            this.organization = '';
            this.country = '';
            this.address = '';
            this.phone = '';
            this.email = '';
            this.other = '';
        }

        this.nameSpaceSelected = false;
    }

    processTransMessage() {
        //only include items with content
        var strIp = '';
        if (this.ip1.length > 0) { strIp = ',"ip1":"' + this.ip1 + '"' };
        var strOrg = '';
        if (this.organization.length > 0) { strOrg = ', "organization":"' + this.organization + '"' };
        var strCo = '';
        if (this.country.length > 0 ) { strCo = ', "country":"' + this.country + '"' };
        var strAdd = '';
        if (this.address.length > 0) { strAdd = ', "address":"' + this.address + '"' };
        var strPho = '';
        if (this.phone.length > 0) { strPho = ', "phone":"' + this.phone + '"' };
        var strEma = '';
        if (this.email.length > 0) { strEma = ', "email":"' + this.email + '"' };
        var strOth = '';
        if (this.other.length > 0) { strOth = ', "other":"' + this.other + '"' };

        this.transMessage= '{"dns":"yes"'+  strIp + strOrg + strCo + strAdd+ strPho + strEma + strOth +'}';

        //calculate characters used
        this.charactersLeft = 1024 - this.transMessage.length;
        this.formData.message = this.transMessage;

        // Prepare DNS transaction
        this.prepareTransaction();
    }
    

    /**
     * Prepare the DNS transaction
     */
    prepareTransaction() {
        
        // Create a new object to not affect the view
        let cleanTransferTransaction = nem.model.objects.get("transferTransaction");
        
        // Clean recipient
        cleanTransferTransaction.recipient = this.formData.recipient.toUpperCase().replace(/-/g, '');
        
        cleanTransferTransaction.amount = 0;

        // Set multisig, if selected
        if (this.formData.isMultisig) {
            cleanTransferTransaction.isMultisig = true;
            cleanTransferTransaction.multisigAccount = this.formData.multisigAccount;
        }       
        
        // Set recipient public key
        cleanTransferTransaction.recipientPublicKey = this.formData.recipientPublicKey;
        
        // Set the message
        cleanTransferTransaction.message = this.formData.message;
        cleanTransferTransaction.messageType = this.formData.messageType;
        
        // Prepare transaction object according to transfer type
        let entity;

        cleanTransferTransaction.mosaics = null;
        // Prepare
        entity = nem.model.transactions.prepare("transferTransaction")(this.common, cleanTransferTransaction, this._Wallet.network);
        
        // Set the entity for fees in view
        this.preparedTransaction = entity;

        // Return prepared transaction
        return entity;
    }

    /**
     * Prepare and broadcast the transaction to the network
     */
    send() {
        // Disable send button
        this.okPressed = true;

        // Get account private key for preparation or return
        if (!this._Wallet.decrypt(this.common)) return this.okPressed = false;

        // Prepare the transaction
        let entity = this.prepareTransaction();

        // Sending will be blocked if recipient is an exchange and no message set
        if (!this._Helpers.isValidForExchanges(entity)) {
            this.okPressed = false;
            this._Alert.exchangeNeedsMessage();
            return;
        }

        // Use wallet service to serialize and send
        this._Wallet.transact(this.common, entity).then(() => {
            this._$timeout(() => {
                // Enable send button
                this.okPressed = false;
                // Reset all
                this.init();
                return;
            });
        }, () => {
            this._$timeout(() => {
                // Delete private key in common
                this.common.privateKey = '';
                // Enable send button
                this.okPressed = false;
                return;
            });
        });
        $('#confirmation').modal({
            show: 'true'
        }); 
    }

    //// End methods region ////

}

export default domainNameSystemCtrl;
'''
'''--- src/app/modules/domainNameSystem/domainNameSystem.html ---
<div class="domainNameSystem-page">
  <div class="container-fluid main">

    <div class="row">
      <div class="col-sm-10">
        <h2>{{'DNS_CONFIGURE' | translate}}</h2>
      </div>
    </div>

    <div class="container-fluid" style="padding-left: 0px; padding-right: 0px;">
      <div class="col-md-9 col-lg-7">

        <!-- Multisig -->
        <div class="panel-heading">
              <div class="tabDescription">
                <span ng-show="!$ctrl.formData.isMultisig">{{ 'NAMESPACE_PROVISION_NAME' | translate }}</span>
                <span ng-show="$ctrl.formData.isMultisig">{{ 'NAMESPACE_PROVISION_MULTISIG_NAME' | translate }}</span>
              </div>
              <ul class="nav nav-tabs">
                <li ng-class="$ctrl.formData.isMultisig ? '' : 'active'"><a ng-click="$ctrl.formData.isMultisig = false;$ctrl.updateCurrentAccountNS();">{{ 'GENERAL_TAB_NORMAL' | translate }}</a></li>
                <li ng-show="$ctrl._DataStore.account.metaData.meta.cosignatoryOf.length" ng-class="$ctrl.formData.isMultisig ? 'active' : ''"><a ng-click="$ctrl.formData.isMultisig = true;$ctrl.updateCurrentAccountNS();">{{ 'GENERAL_TAB_MULTISIG' | translate }}</a></li>
              </ul>
        </div> <!-- end -->
        <br><br>

         <!-- Multisig select -->
         <multisig-select ng-show="$ctrl.formData.isMultisig" multisig-account="$ctrl.formData.multisigAccount" update-ctrl="$ctrl.updateCurrentAccountNS();"></multisig-select>
         <!-- end -->

        <!-- Parent namespace -->
        <fieldset class="form-group">
          <div class="input-group">
            <span class="input-group-btn">
              <label for="namespaceParent">{{ 'NAMESPACE_PROVISION_PARENT' | translate }}: </label>
            </span>
            <select class="form-control" ng-options="namespace.fqn for namespace in $ctrl.namespaceOwned | objValues | filter:$ctrl.isNotLevel3 "
              ng-model="$ctrl.formData.namespaceParent" ng-change="$ctrl.selectNamespace()">
              <option value=""> {{'DNS_SELECT_NAMESPACE' | translate}}</option>
            </select>
          </div>
        </fieldset>
        <!-- end -->

        <!-- Namespace pointer address -->
        <fieldset class="form-group">
          <div class="input-group">
            <span class="input-group-btn">
              <label>{{'DNS_POINTER_ADDRESS' | translate}}</label>
            </span>
            <input type="text" class="form-control" ng-model="$ctrl.formData.pointerAdd" readOnly>
          </div>
        </fieldset>
        <!-- end -->

        <!-- 2 row box -->
        <!-- 2 row box -->
        <div class="row" class="dualFees">
          <div class="col-sm-6">
            <!-- IP add -->
            <fieldset class="form-group">
              <div class="input-group">
                <span class="input-group-btn">
                      <label>{{'DNS_IP_ADDRESS' | translate}}</label>
                    </span>
                <input autofocus="autofocus" type="text" class="form-control" ng-disabled="$ctrl.nameSpaceSelected" ng-model="$ctrl.ip1"
                  placeholder="eg. 172.16.254.1"  ng-change="$ctrl.processTransMessage()">
              </div>
            </fieldset>
            <!-- end -->

          </div>

          <div class="col-sm-6">
            <!-- Organization-->
            <fieldset class="form-group">
              <div class="input-group">
                <span class="input-group-btn">
                      <label>{{'DNS_ORGA' | translate}}</label>
                    </span>
                <input autofocus="autofocus" type="text" class="form-control" ng-disabled="$ctrl.nameSpaceSelected" ng-model="$ctrl.organization"
                  placeholder="company inc."  ng-change="$ctrl.processTransMessage()">
              </div>
            </fieldset>
            <!-- end -->

          </div>
        </div>
        <!-- end 2 row box-->

        <!-- 2 row box -->
        <!-- 2 row box -->
        <div class="row" class="dualFees">
          <div class="col-sm-6">
            <!-- Country-->
            <fieldset class="form-group">
              <div class="input-group">
                <span class="input-group-btn">
                      <label>{{'DNS_COUNTRY' | translate}}</label>
                    </span>
                <input autofocus="autofocus" type="text" class="form-control" ng-disabled="$ctrl.nameSpaceSelected" ng-model="$ctrl.country"
                  placeholder="US"  ng-change="$ctrl.processTransMessage()">
              </div>
            </fieldset>
            <!-- end -->
          </div>

          <div class="col-sm-6">
            <!-- address-->
            <fieldset class="form-group">
              <div class="input-group">
                <span class="input-group-btn">
                      <label>{{'DNS_ADDRESS' | translate}}</label>
                    </span>
                <input autofocus="autofocus" type="text" class="form-control" ng-disabled="$ctrl.nameSpaceSelected" ng-model="$ctrl.address"
                  placeholder="eg. street, city"  ng-change="$ctrl.processTransMessage()">
              </div>
            </fieldset>
            <!-- end -->
          </div>
        </div>
        <!-- end 2 row box-->

        <!-- 2 row box -->
        <!-- 2 row box -->
        <div class="row" class="dualFees">
          <div class="col-sm-6">
            <!-- phone-->
            <fieldset class="form-group">
              <div class="input-group">
                <span class="input-group-btn">
                    <label>{{'DNS_PHONE' | translate}}</label>
                  </span>
                <input autofocus="autofocus" type="text" class="form-control" ng-disabled="$ctrl.nameSpaceSelected" ng-model="$ctrl.phone"
                  placeholder="eg. +1.6502000000" maxlength="64" ng-change="$ctrl.processTransMessage()">
              </div>
            </fieldset>
            <!-- end -->

          </div>

          <div class="col-sm-6">
            <!-- email-->
            <fieldset class="form-group">
              <div class="input-group">
                <span class="input-group-btn">
                    <label>{{'DNS_EMAIL' | translate}}</label>
                  </span>
                <input autofocus="autofocus" type="text" class="form-control" ng-disabled="$ctrl.nameSpaceSelected" ng-model="$ctrl.email"
                  placeholder="eg. mail@org.com"  ng-change="$ctrl.processTransMessage()">
              </div>
            </fieldset>
            <!-- end -->
          </div>
        </div>
        <!-- end 2 row box-->

        <!-- other-->
        <fieldset class="form-group">
          <div class="input-group">
            <span class="input-group-btn">
              <label>{{'DNS_OTHERINFO' | translate}}</label>
            </span>
            <input autofocus="autofocus" type="text" class="form-control" ng-disabled="$ctrl.nameSpaceSelected" ng-model="$ctrl.other"
              placeholder="..."  ng-change="$ctrl.processTransMessage()">
          </div>
        </fieldset>
        <!-- end -->

        <!-- json message-->
        <fieldset class="form-group">
          <div class="input-group">
            <span class="input-group-btn">
              <label>{{'DNS_JSONMSG' | translate}}</label>
            </span>
            <input autofocus="autofocus" type="text" class="form-control"  ng-model="$ctrl.transMessage" placeholder="" readOnly>
          </div>
        </fieldset>
        <!-- end -->

        <!-- 2 row box -->
        <!-- 2 row box -->
        <div class="row" class="dualFees">
            <div class="col-sm-6">
              <!-- char left-->
              <fieldset class="form-group">
                <div class="input-group">
                  <span class="input-group-btn">
                    <label>{{'DNS_CHAR_LEFT' | translate}}</label>
                  </span>
                  <input autofocus="autofocus" type="text" class="form-control" ng-disabled="true" ng-model="$ctrl.charactersLeft" placeholder="">
                </div>
              </fieldset>
              <!-- end -->
            </div>
    
            <div class="col-sm-6">
              <!-- Transaction fee -->
              <fee-input tx="$ctrl.preparedTransaction" is-multisig="$ctrl.formData.isMultisig"></fee-input><!-- end -->
            </div>
        </div>
         <!-- end 2 row box-->

        <!-- Password Field -->
        <password-input common="$ctrl.common"></password-input>
        <!-- Send button is disabled if already pressed or no password or no clean recipient address or message is supposed to be encrypted but no recipient public key or is a mosaic transfer and no mosaics in array or if amount is invalid or if characters left are negative or if hex message is not hex only -->
        <button class="btn btn-success" type="submit" ng-disabled="$ctrl.transMessage =='' || $ctrl.okPressed || $ctrl._Wallet.algo !== 'trezor' && $ctrl._Wallet.algo !== 'ledger' && !$ctrl.common.password.length || $ctrl.formData.recipient.length !== 40 || $ctrl.formData.messageType === 2 && $ctrl.formData.recipientPublicKey.length !== 64 || $ctrl.isMosaicTransfer && $ctrl.formData.isMultisig && !$ctrl.preparedTransaction.otherTrans.mosaics.length || $ctrl.isMosaicTransfer && !$ctrl.formData.isMultisig && !$ctrl.preparedTransaction.mosaics.length || $ctrl.charactersLeft < 0 || $ctrl.formData.messageType === 0 && $ctrl.formData.message.length && !$ctrl._Helpers.isHexadecimal($ctrl.formData.message) " ng-click="$ctrl.send()">
          <i class="fa fa-send"></i> {{ 'GENERAL_SEND' | translate }}
        </button>

      </div>

      <!-- Information panel -->
      <div class="col-md-3 col-lg-5">
        <div class="panel-heading">
          <h3>{{'DNS_SEARCH_HELP' | translate}}</h3>
        </div>
        <div class="panel-body row">
          <div class="col-md-12 col-lg-12">
            <p>{{'DNS_HELP1' | translate}} </p>
            <p>{{'DNS_HELP2' | translate}}</p>
            <pre>
              
                {{'DNS_HELP3' | translate}}
                {{'DNS_HELP4' | translate}}
                {{'DNS_HELP5' | translate}}
            </pre>

          </div>
        </div>
      </div><!-- end -->

    </div>
  </div>
</div>
'''
'''--- src/app/modules/domainNameSystem/index.js ---
import angular from 'angular';

// Create the module where our functionality can attach to
let domainNameSystem = angular.module('app.domainNameSystem', []);

// Include our UI-Router config settings
import domainNameSystemConfig from './domainNameSystem.config';
domainNameSystem.config(domainNameSystemConfig);

// Controllers
import domainNameSystemCtrl from './domainNameSystem.controller';
domainNameSystem.controller('domainNameSystemCtrl', domainNameSystemCtrl);

/////////////////////////////////////////////////////////////////

// Create the module where our functionality can attach to
let dnsSearch = angular.module('app.dnsSearch', []);

// Include our UI-Router config settings
import dnsSearchConfig from './search/dnsSearch.config';
dnsSearch.config(dnsSearchConfig);

// Controllers
import dnsSearchCtrl from './search/dnsSearch.controller';
dnsSearch.controller('dnsSearchCtrl', dnsSearchCtrl);

/////////////////////////////////////////////////////////////////

export default domainNameSystem;

'''
'''--- src/app/modules/domainNameSystem/search/dnsSearch.config.js ---
function dnsSearchConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.dnsSearch', {
            url: '/domainNameSystem/search',
            controller: 'dnsSearchCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/domainNameSystem/search/dnsSearch.html',
            title: 'DNS search'
        });
  
};

export default dnsSearchConfig;
'''
'''--- src/app/modules/domainNameSystem/search/dnsSearch.controller.js ---
import nem from 'nem-sdk';
import Helpers from '../../../utils/helpers';
import UrlParser from 'url-parse';

class dnsSearchCtrl {
    // Set services as constructor parameter
    constructor(Wallet, Alert, DataStore, $filter, $timeout, $http) {
        'ngInject';

        //// Module dependencies region ////

        this._Alert = Alert;
        this._Wallet = Wallet;
        this._DataStore = DataStore;
        this._$filter = $filter;
        this._$timeout = $timeout;
        this._$http = $http;
        this._Helpers = Helpers;

        //// End dependencies region ////

        // Initialization
        this.init();
    }

    //// Module methods region ////

    /**
     * Initialize module properties
     */
    init() {
        // Pointer add for view
        this.pointerAdd = '';
        this.namespaceOwner = '';
        // search string
        this.searchString = '';
        // Prevent user to click twice on send when already processing
        this.okPressed = false;
        // search type: redirect to web / get info
        this.searchType = 1;
        // dns results
        this.objDnsResults ='';
    }

    /**
     * Start search for dns info
     */
    startSearch(schType) {
        this.okPressed = true;
        this.pointerAdd = '';
        this.namespaceOwner = '';
        this.objDnsResults ='';
        this.searchType = schType;

        var namespace = this.searchString.replace(/.nem/g, '').toLowerCase();
        this.getPointerAccount(namespace);
    }

    /**
     * Calculate pointer address from namespace
     */
    getPointerAccount(namespace) {
        var passphrase = nem.crypto.js.SHA256(namespace);
        var privateKey = nem.crypto.helpers.derivePassSha(passphrase, 1).priv;
        var keyPair = nem.crypto.keyPair.create(privateKey);
        var publicKey = keyPair.publicKey.toString();
        var address = nem.model.address.toAddress(publicKey, this._Wallet.network);
        this.pointerAdd = address;

        return this._$http.get(this._Wallet.node.host + ':' + this._Wallet.node.port + '/namespace?namespace=' + namespace).then((res) => {

            this.namespaceOwner = res.data["owner"];

            // Get transactions / and analyze
            this.getTransactions(false);

        }, (err) => {
            console.log(JSON.stringify(err)); 
            this._Alert.invalidNamespaceName();
            this.okPressed = false;          
        }); 
    }

    /**
     * Get transactions of the pointer address
     */
    getTransactions(isUpdate, txHash) {
        let obj = {
            'params': {
                'address': this.pointerAdd, //pointer address here this.formData.pointerAdd
                'hash': txHash ? txHash : '',
                'pageSize': isUpdate ? 100 : 50
            }
        };
        return this._$http.get(this._Wallet.node.host + ':' + this._Wallet.node.port + '/account/transfers/all', obj).then((res) => {
            if (isUpdate) {
                // Check if txes left to load
                if (!res.data.data.length || res.data.data.length < 100) this.noMoreTxes = true;
                //
                for (let i = 0; i < res.data.data.length; i++) {
                    this.transactions.push(res.data.data[i]);
                }
            } else {
                this.transactions = res.data.data;
                this.analyzeTransactions();
            }
        });
    }

    /**
     * Analyze transactions from pointer address
     */
    analyzeTransactions() {
        var data = this.transactions;
        var stop = 0;
        var currNetwork = this._Wallet.network;
        var dnsResults = '';
        var ownerAdd = this.namespaceOwner;
        //console.log(JSON.stringify(data));

        $.each(data, function(index, value) {

            //change if multisig
            if (value['transaction']['type'] == 4100) {
                value = value['transaction']['otherTrans'];
            } else {
                value = value['transaction'];    
            }
                            
            if (nem.model.address.toAddress(value['signer'], currNetwork) == ownerAdd) {
                var hex = value['message']['payload'];
                hex = hex.toString();//force conversion
                var str = '';
                for (var i = 0; i < hex.length; i += 2)
                    str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));

                var objPayload = jQuery.parseJSON(str);
                if (objPayload['dns'] == 'yes' && stop == 0) {
                    stop = 1;
                    console.log(str);
                    dnsResults = str;     
                }
            }                                
        });

        if (stop == 1) {
            var objDnsResults = jQuery.parseJSON(dnsResults);

            this._Alert.dnsMsgSuccess(' for ' + this.searchString);
            this.objDnsResults = objDnsResults;

            if (this.searchType == 1) { //redirect to web
                let url = objDnsResults['ip1'];
                // Parse the url
                let parsed = new UrlParser(url);
                // Check if protocol is set or set default
                if (parsed.protocol !== 'http:' && parsed.protocol !== 'https:') url = 'http://' + url;
                //window.location ='http://'+objDnsResults['ip1'];
                var href = url;
                //window.open(href);

                var win = window.open(href, '_blank', 'noopener,noreferrer');
            }

        } else {
            this._Alert.dnsNoInfoFound(' for '+this.searchString);
        }

        this.okPressed = false;
    }

    //// End methods region ////

}

export default dnsSearchCtrl;
'''
'''--- src/app/modules/domainNameSystem/search/dnsSearch.html ---
<div class="dnsSearch-page">
  <div class="container-fluid main">

    <div class="row">
      <div class="col-sm-10">
        <h2>{{'DNS_SEARCH_HEADLINE' | translate}}</h2>
      </div>
    </div>

    <div class="container-fluid" style="padding-left: 0px; padding-right: 0px;">
      <div class="col-md-9 col-lg-7">

        <!-- Search-->
        <fieldset class="form-group">
            <div class="input-group">
              <span class="input-group-btn">
                <label>{{'DNS_SEARCH' | translate}}</label>
              </span>
              <input autofocus="autofocus" type="text" class="form-control"  ng-model="$ctrl.searchString" placeholder="namespace.nem" >
            </div>
        </fieldset>
        <!-- end -->
        

        <!-- 2 row box -->
        <!-- 2 row box -->
        <div class="row" class="dualFees">
            <div class="col-sm-6">
              <!-- Send button -->
              <button class="btn btn-success" type="submit" ng-disabled="$ctrl.okPressed || ($ctrl.searchString.length < 1)" ng-click="$ctrl.startSearch(1)">
                <i class="fa fa-external-link"></i> {{'DNS_GO_SEARCH' | translate}}
              </button>
              <!-- end-->
            </div>
    
            <div class="col-sm-6">
              <!-- Send button -->
              <button class="btn btn-success" type="submit" ng-disabled="$ctrl.okPressed || ($ctrl.searchString.length < 1)" ng-click="$ctrl.startSearch(2)">
                  <i class="fa fa-search"></i> {{'DNS_GET_INFO' | translate}}
                </button>
                <!-- end-->  
            </div>
        </div>
        <!-- end 2 row box-->

      </div>

      <!-- Information panel -->
      <div class="col-md-3 col-lg-5">
        <div class="panel-heading">
          <h3>{{'DNS_SEARCH_HELP' | translate}}</h3>
        </div>
        <div class="panel-body row">
          <div class="col-md-12 col-lg-12">

            <p>{{'DNS_SEARCH_HELP_INFO' | translate}} </p>

            <pre ng-repeat="(key, value) in $ctrl.objDnsResults"> {{ key }} : {{ value }} </pre>

            

          </div>
        </div>
      </div><!-- end -->

    </div>
  </div>
</div>
'''
'''--- src/app/modules/exchanges/changelly/changelly.config.js ---
function ChangellyConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.changelly', {
            url: '/changelly-buy-xem',
            controller: 'ChangellyCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/exchanges/changelly/changelly.html',
            title: 'Convert to XEM'
        });

};

export default ChangellyConfig;

'''
'''--- src/app/modules/exchanges/changelly/changelly.controller.js ---
class ChangellyCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Wallet) {
        'ngInject';

        //// Module dependencies region ////

        this._Wallet = Wallet;

        //// End dependencies region ////

        // Open the Changelly widget in a new window
        let child = window.open("https://widget.changelly.com?currencies=ada,etc,xmr,bch,usdc,trx,neo,eos,xlm,usdt,dash,xrp,ltc,xem,btc,eth&from=btc&to=xem&amount=1&address="+ this._Wallet.currentAccount.address +"&payment_id=&fiat=true&fixedTo=false&theme=jungle&merchant_id=9bad2685d41a",'1418115287605','width=700,height=500,toolbar=0,menubar=0,location=0,status=1,scrollbars=1,resizable=0,left=0,top=0,noopener=1');
        child.opener = null;
    }

}

export default ChangellyCtrl;
'''
'''--- src/app/modules/exchanges/changelly/changelly.html ---
<div class="changelly-page">
  <div class="container">
    <div class="row">
      <div class="col-md-6 col-md-offset-3">
        <div id="changwidget">
        	<h3>Changelly should have opened in a new window. If it did not, disable your popup blocker and try again.</h3>
        </div>
      </div>
    </div>
  </div>
</div>

'''
'''--- src/app/modules/exchanges/index.js ---
import angular from 'angular';

// Create the module where our functionality can attach to
let ChangellyModule = angular.module('app.changelly', []);

// Include our UI-Router config settings
import ChangellyConfig from './changelly/changelly.config';
ChangellyModule.config(ChangellyConfig);

// Controllers
import ChangellyCtrl from './changelly/changelly.controller';
ChangellyModule.controller('ChangellyCtrl', ChangellyCtrl);

// Create the module where our functionality can attach to
let ShapeshiftModule = angular.module('app.shapeshift', []);

// Include our UI-Router config settings
import ShapeshiftConfig from './shapeshift/shapeshift.config';
ShapeshiftModule.config(ShapeshiftConfig);

// Controllers
import ShapeshiftCtrl from './shapeshift/shapeshift.controller';
ShapeshiftModule.controller('ShapeshiftCtrl', ShapeshiftCtrl);

export default ChangellyModule;
'''
'''--- src/app/modules/exchanges/shapeshift/shapeshift.config.js ---
function ShapeshiftConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.shapeshift', {
            url: '/shapeshift-buy-xem',
            controller: 'ShapeshiftCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/exchanges/shapeshift/shapeshift.html',
            title: 'Convert to XEM'
        });

};

export default ShapeshiftConfig;
'''
'''--- src/app/modules/exchanges/shapeshift/shapeshift.controller.js ---
class ShapeshiftCtrl {

	/**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Wallet) {
        'ngInject';

        //// Module dependencies region ////

        this._Wallet = Wallet;

        //// End dependencies region ////

        // Open the ShapeShift widget in a new window
        let child = window.open("https://shapeshift.io/shifty.html?destination=" + this._Wallet.currentAccount.address + "&output=XEM&apiKey=cba4b2911aea0b94af00270748d38fc0dc045773970d1a2239521f2d952ecc109679d89fa1edbe6e1440395e7e41cf02c7647886df830d25bfd26b9c97dc884f&amount=",'1418115287605','width=700,height=500,toolbar=0,menubar=0,location=0,status=1,scrollbars=1,resizable=0,left=0,top=0,noopener=1');
    	child.opener = null;
    }

}

export default ShapeshiftCtrl;
'''
'''--- src/app/modules/exchanges/shapeshift/shapeshift.html ---
<div class="shapeshift-page">
  <div class="container">
    <div class="row">
      <div class="col-md-6 col-md-offset-3">
        <div id="shapewidget">
          <h3>Shapeshift should have opened in a new window. If it did not, disable your popup blocker and try again.</h3>
        </div>
      </div>
    </div>
  </div>
</div>
'''
'''--- src/app/modules/explorer/accounts/accountsExplorer.config.js ---
function AccountsExplorerConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.accountsExplorer', {
            url: '/explorer/accounts',
            controller: 'AccountsExplorerCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/explorer/accounts/accountsExplorer.html',
            title: 'Explorer - Accounts',
            params: {
			    address: ""
			 }
        });

};

export default AccountsExplorerConfig;
'''
'''--- src/app/modules/explorer/accounts/accountsExplorer.controller.js ---
import nem from 'nem-sdk';

class AccountsExplorerCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Wallet, Alert, $stateParams, $filter, $timeout) {
        'ngInject';

        //// Module dependencies region ////

        this._Wallet = Wallet;
        this._Alert = Alert;
        this._$stateParams = $stateParams;
        this._$filter = $filter;
        this._$timeout = $timeout;

        //// End dependencies region ////

        //// Module properties region ////

        this.rawInput = this._$stateParams.address;
        this.account = "";
        this.accountData = {};
        this.mosaicDefinitionMetaDataPair = {};
        this.transactions = [];

        // Transactions pagination
        this.currentPage = 0;
        this.pageSize = 5;

        //// End properties region ////

        if (this.rawInput.length) this.processRawInput();
    }

    //// Module methods region ////

    /**
     * Process user input
     */
    processRawInput() {
        // Check if value is an alias
        let isAlias = (this.rawInput.lastIndexOf("@", 0) === 0);

        // Return if no value or address is invalid AND it's not an alias
        if (!this.rawInput || !nem.model.address.isValid(this.rawInput) && !isAlias) return;

        // Get recipient data depending of address or alias used
        if (isAlias) {
            // Clean namespace name
            let nsForLookup = this.rawInput.substring(1);
            // Get cosignatory account data from network using @alias
            this.getAccountDataFromAlias(nsForLookup);
        } else {
            // Clean provided address
            let account = this.rawInput.toUpperCase().replace(/-/g, '');
            // Check if address is from network
            if (nem.model.address.isFromNetwork(account, this._Wallet.network)) {
                // Get account data from network
                this.getAccountData(account);
            } else {
                this._Alert.invalidAddressForNetwork(account, this._Wallet.network);
                return;
            }
        }
    }

    /**
     * Get the account data using @alias
     * 
     * @param {string} alias - An alias (@namespace)
     */
    getAccountDataFromAlias(alias) {
        return nem.com.requests.namespace.info(this._Wallet.node, alias).then((data) => {
            this._$timeout(() => {
                // Check if address is from network
                if (nem.model.address.isFromNetwork(data.owner, this._Wallet.network)) {
                    // Get recipient account data from network
                    this.getAccountData(data.owner);
                } else {
                    this._Alert.invalidAddressForNetwork(data.owner, this._Wallet.network);
                    return;
                }
            });
        },
        (err) => {
            this._$timeout(() => {
                this._Alert.getNamespacesByIdError(err.data.message);
            });
        });
    }

    /**
     * Get the account data
     * 
     * @param {string} address - An account address
     */
    getAccountData(address) {
        return nem.com.requests.account.data(this._Wallet.node, address).then((data) => {
            this._$timeout(() => {
                this.accountData = data;
                if (data.account.publicKey === null) {
                    this.accountData.account.publicKey = this._$filter("translate")("GENERAL_UNKNOWN");
                }
                this.getMosaicsDefinitions(data.account.address);
            });
        },
        (err) => {
            this._$timeout(() => {
                this._Alert.getAccountDataError(err.data.message);
            });
        });
    }

    /**
     * Get the account incoming transactions
     * 
     * @param {string|null} hash - The hash up to which transactions are returned, first 25 if null
     */
    getAllTransactions(hash) {
        return nem.com.requests.account.transactions.all(this._Wallet.node, this.accountData.account.address, hash).then((data) => {
            this._$timeout(() => {
                this.transactions = data.data;
            });
        }, 
        (err) => {
            this._$timeout(() => {
                this._Alert.errorGetTransactions(err.data.message);
            });
        });
    }

    /**
     *  Get mosaics definitions of an account
     *
     * @param {string} address - An account address
     */
    getMosaicsDefinitions(address) {
        return nem.com.requests.account.mosaics.allDefinitions(this._Wallet.node, address).then((res) => {
            this._$timeout(() => {
                if(res.data.length) {
                    for (let i = 0; i < res.data.length; ++i) {
                        this.mosaicDefinitionMetaDataPair[nem.utils.format.mosaicIdToName(res.data[i].id)] = {};
                        this.mosaicDefinitionMetaDataPair[nem.utils.format.mosaicIdToName(res.data[i].id)].mosaicDefinition = res.data[i];
                    }
                    this.getAllTransactions(null);
                }
            });
        }, 
        (err) => {
            this._$timeout(() => {
                this._Alert.errorGetMosaicsDefintions(err.data.message);
            });
        });
    }

    //// End methods region ////
}

export default AccountsExplorerCtrl;
'''
'''--- src/app/modules/explorer/accounts/accountsExplorer.html ---
<div class="explorer-accounts">
  <div class="container-fluid main">
    <div class="row">
      <div class="col-sm-11">
        <h2>{{'ACCOUNTS_EXPLORER_TITLE' | translate}}</h2>
      </div>
    </div>

    <explorer-nav></explorer-nav>

      <div class="row">
        <div class="col-md-6 searchBar">
          <fieldset class="form-group">
            <div class="input-group">
              <span class="input-group-btn short">
                <label>{{ 'ACCOUNTS_EXPLORER_SEARCH' | translate }}: </label>
              </span>
            <div class="form-control formFloat">
              <input type="text" ng-model="$ctrl.rawInput" ng-model-options="{debounce:500}" placeholder="{{'FORM_ADDRESS_ALIAS_PLACEHOLDER' | translate}}" ng-change="$ctrl.processRawInput()"/>
              <label class="floatRight"><i class="fa fa-search"></i></label>
            </div>
          </div>
          </fieldset>
        </div>
      </div>
      <div class="row">
        <div class="col-md-12">
          <div class="panel-heading">
            <h4>{{ 'ACCOUNT_ACCOUNT_INFORMATION' | translate }}</h4>
          </div>
        </div>
      </div>

      <div class="row">

        <div class="col-md-7">
          <div class="panel-body" ng-show="$ctrl.accountData.account">
            <!-- ADDRESS IN SEARCH RESULTS -->
            <fieldset class="form-group">
              <div class="input-group">
                <span class="input-group-btn short">
                  <label>{{ 'GENERAL_ADDRESS' | translate }}: </label>
                </span>
                <input type="text" class="form-control" value="{{ $ctrl.accountData.account.address }}" readOnly/>
              </div>
            </fieldset>
            <!-- PUBLIC KEY OF ADDRESS -->
            <fieldset class="form-group">
              <div class="input-group">
                <span class="input-group-btn short">
                  <label>{{ 'GENERAL_PUBLIC_KEY' | translate }}: </label>
                </span>
                <input type="text" class="form-control" value="{{ $ctrl.accountData.account.publicKey ? $ctrl.accountData.account.publicKey : '' }}" readOnly/>
              </div>
            </fieldset>
          </div>
          <div class="panel-body nothing" ng-show="!$ctrl.accountData.account">
            <p>{{ 'GENERAL_NO_RESULTS' | translate }}</p>
          </div>
        </div>
        <div class="col-md-5">
          <div class="panel-body" ng-show="$ctrl.accountData.account">
            <!-- BALANCE OF ADDRESS -->
            <fieldset class="form-group">
              <div class="input-group">
                <span class="input-group-btn short">
                  <label>{{ 'FORM_SIDE_BTN_BALANCE' | translate }}: </label>
                </span>
                <div class="form-control formFloat" readOnly>
                  <input class="readOnly accounts" type="text" value="{{ ($ctrl.accountData.account.balance | fmtNemValue)[0] }}.{{ ($ctrl.accountData.account.balance | fmtNemValue)[1] }}" readOnly/>
                  <label class="floatRight"><small>XEM</small></button>
                </div>
              </div>
            </fieldset>
            <!-- IMPORTANCE OF ADDRESS -->
            <fieldset class="form-group">
              <div class="input-group">
                <span class="input-group-btn short">
                  <label>{{ 'GENERAL_IMPORTANCE' | translate }}: </label>
                </span>
                <div class="form-control formFloat" readOnly>
                  <input class="readOnly accounts" type="text" value="{{ ($ctrl.accountData.account.importance | fmtNemImportanceScore)[0] }}.{{ ($ctrl.accountData.account.importance | fmtNemImportanceScore)[1] }}" readOnly/>
                  <label class="floatRight">* 10<sup>(-4)</sup></label>
                </div>
              </div>
            </fieldset>
          </div>
        </div>
      </div>

      <div class="row">
        <div class="col-md-12">
          <div class="panel-heading">
            <h4>{{ 'GENERAL_TRANSACTIONS' | translate }}</h4>
            <paginate data="$ctrl.transactions" current-page="$ctrl.currentPage" page-size="$ctrl.pageSize"></paginate>
          </div>
          <div class="panel-body" ng-show="$ctrl.transactions.length">
            <table class="table table-condensed top">
              <thead>
                <tr>
                  <th>{{ 'GENERAL_ACCOUNT' | translate }}</th>
                  <th>{{ 'GENERAL_AMOUNT' | translate }}</th>
                  <th>{{ 'GENERAL_MESSAGE' | translate }}</th>
                  <th>{{ 'GENERAL_DATE' | translate }}</th>
                </tr>
              </thead>
            </table>

            <table class="table table-condensed">
              <tbody>
                <div>
                  <div ng-repeat="tx in $ctrl.transactions | orderBy:'-transaction.timeStamp' | startFrom:$ctrl.currentPage*$ctrl.pageSize | limitTo:$ctrl.pageSize">
                    <tag-transaction d="tx" a="$ctrl.accountData.account.address" tooltip-position="'left'"></tag-transaction>
                  </div>
                </div>
              </tbody>
            </table>
          </div>
          <div class="panel-body nothing" ng-show="!$ctrl.transactions.length">
            <p>{{ 'GENERAL_NO_RESULTS' | translate }}</p>
          </div>
        </div>

    </div>
  </div>
</div>

'''
'''--- src/app/modules/explorer/apostilles/explorerApostilles.config.js ---
function ExplorerApostillesConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.explorerApostilles', {
            url: '/explorer/apostilles',
            controller: 'ExplorerApostillesCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/explorer/apostilles/explorerApostilles.html',
            title: 'Explorer - Apostilles'
        });

};

export default ExplorerApostillesConfig;
'''
'''--- src/app/modules/explorer/apostilles/explorerApostilles.controller.js ---
import nem from 'nem-sdk';

class ExplorerApostillesCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Wallet, Alert, $timeout) {
        'ngInject';

        //// Module dependencies region ////

        this._Wallet = Wallet;
        this._Alert = Alert;
        this._$timeout = $timeout;

        //// End dependencies region ////

        //// Module properties region ////

        // Store sink transactions
        this.sinkData = [];

        // Apostilles pagination properties
        this.currentPage = 0;
        this.pageSize = 5;

        //// End properties region ////

        // Get incoming transactions of the sink account
        this.getSinkTransactions();
    }

    //// Module methods region ////

    /**
     * Get incoming transaction of the sink account
     */
    getSinkTransactions() {
        // Get sink depending of network
        let sink = nem.model.sinks.apostille[this._Wallet.network].toUpperCase().replace(/-/g, '');
        return nem.com.requests.account.transactions.incoming(this._Wallet.node, sink).then((data) => {
            this._$timeout(() => {
                this.sinkData = this.cleanApostilles(data.data);
            });
        }, 
        (err) => {
            this._$timeout(() => {
                this._Alert.errorFetchingIncomingTxes(err.data.message);
            });
        });
    }

    /**
     * Keep only HEX messages in transaction array
     *
     * @param {array} array - An array of transactions
     *
     * @return {object} result - An array of transactions with HEX messages
     */
    cleanApostilles(array) {
        let result = [];
        let checksum = "fe4e5459";
        if(array.length) {
            for (let i = 0; i < array.length; i++){
                if(array[i].transaction.type === 257) {
                    if(!array[i].transaction.message || !array[i].transaction.message.payload || array[i].transaction.message.payload.substring(0, 8) !== checksum) {
                        //console.log("Not an apostille message")
                    } else {
                        result.push(array[i])
                    }
                } else if(array[i].transaction.type === 4100) {
                    if(!array[i].transaction.otherTrans.message|| !array[i].transaction.otherTrans.message.payload || array[i].transaction.otherTrans.message.payload.substring(0, 8) !== checksum) {
                        //console.log("Not an apostille message")
                    } else {
                      result.push(array[i])
                    }
                }
                if(i === array.length - 1) {
                  return result;
                }
            }
        }
    }

    //// End methods region ////
}

export default ExplorerApostillesCtrl;
'''
'''--- src/app/modules/explorer/apostilles/explorerApostilles.html ---
<div class="explorer-apostilles">
  <div class="container-fluid main">
    <div class="row">
      <div class="col-sm-8">
        <h2>{{ 'EXPLORER_APOSTILLES_TITLE' | translate }}</h2>
      </div>
    </div>

  	<explorer-nav></explorer-nav>

    <div class="row">
      <div class="col-md-12">
        <div class="panel-heading">
          <paginate data="$ctrl.sinkData" current-page="$ctrl.currentPage" page-size="$ctrl.pageSize"></paginate>
        </div>
        <table class="table table-condensed">
          <thead>
            <tr>
              <th>{{ 'GENERAL_OWNER' | translate }}</th>
              <th>{{ 'APOSTILLE_FILE_HASH' | translate }}</th>
              <th>{{ 'GENERAL_TRANSACTION_HASH' | translate }}</th>
              <th>{{ 'GENERAL_DATE' | translate }}</th>
            </tr>
          </thead>
        </table>
        <table class="table table-condensed">
          <tbody>
            <tr ng-repeat="tx in $ctrl.sinkData | startFrom:$ctrl.currentPage*$ctrl.pageSize | limitTo:$ctrl.pageSize">
              <td>
                <a ui-sref="app.accountsExplorer({address: (tx.transaction.signer | fmtPubToAddress:$ctrl._Wallet.network)})">{{tx.transaction.signer | fmtPubToAddress:$ctrl._Wallet.network | fmtAddress}}</a></td>
              <td>
                <span ng-show="tx.transaction.type === 257">
                  {{ tx.transaction.message.payload }}
                </span>
                <span ng-show="tx.transaction.type === 4100">
                  {{ tx.transaction.otherTrans.message.payload }}
                </span>
              </td>
              <td>
                <span ng-show="tx.transaction.type === 257">
                  <a href="{{$ctrl._Wallet.chainLink}}{{tx.meta.hash.data}}" target="_blank">
                    {{tx.meta.hash.data}}
                  </a>
                </span>
                <span ng-show="tx.transaction.type === 4100">
                  <a href="{{$ctrl._Wallet.chainLink}}{{tx.meta.innerHash.data}}" target="_blank">
                    {{ tx.meta.innerHash.data }}
                  </a>
                </span>
              </td>
              <td>{{tx.transaction.timeStamp | fmtNemDate}}</td>
            </tr>
          </tbody>
        </table>
        <div class="panel-body nothing" ng-show="!$ctrl.sinkData.length">
          <p>{{ 'GENERAL_NO_RESULTS' | translate }}</p>
        </div>
      </div>
    </div>

  </div>
</div>
'''
'''--- src/app/modules/explorer/home/explorerHome.config.js ---
function ExplorerHomeConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.explorerHome', {
            url: '/explorer/home',
            controller: 'ExplorerHomeCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/explorer/home/explorerHome.html',
            title: 'Explorer - Home'
        });

};

export default ExplorerHomeConfig;
'''
'''--- src/app/modules/explorer/home/explorerHome.controller.js ---
class ExplorerHomeCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Wallet, DataStore) {
        'ngInject';

        //// Module dependencies region ////

        this._Wallet = Wallet;
        this._DataStore = DataStore;

        //// End dependencies region ////

        //// Module properties region ////

        // Array for multisig namespaces
        this.multisigNamespaces = [];

        //// End properties region ////
        
        this.arrangeMultisigNamespaces();
    }

    //// Module methods region ////

    /**
     * Arrange all multisig namespaces in an array
     */
    arrangeMultisigNamespaces() {
        if(this._DataStore.account.metaData.meta.cosignatoryOf.length) {
            for(let i=0; i < this._DataStore.account.metaData.meta.cosignatoryOf.length; i++) {
                let multisig = this._DataStore.account.metaData.meta.cosignatoryOf[i].address;
                if(undefined !== this._DataStore.namespace.ownedBy[multisig]) {
                    let namesArray = Object.keys(this._DataStore.namespace.ownedBy[multisig]);
                    for (let k=0; k < namesArray.length; k++) {
                        let namespace = this._DataStore.namespace.ownedBy[multisig][namesArray[k]].fqn
                        this.multisigNamespaces.push(namespace);
                    }
                }
            }
        }
    }

    //// End methods region ////
}

export default ExplorerHomeCtrl;
'''
'''--- src/app/modules/explorer/home/explorerHome.html ---
<div class="explorer-home-page">
  <div class="container-fluid main">
    <div class="row">
      <div class="col-sm-11">
        <h2>{{ 'EXPLORER_HOME_TITLE' | translate }}</h2>
      </div>
    </div>

  	<explorer-nav></explorer-nav>

    <div class="row">
      <div class="col-lg-3 col-sm-12">
        <div class="row">
      <div class="col-lg-12 col-sm-6">
        <!-- YOUR NAMESPACES -->
        <div class="panel-heading">
          <h4>{{ 'EXPLORER_HOME_NS' | translate }}</h4>
        </div>
        <div class="panel-body">
          <ul class="list-group" ng-repeat="namespace in $ctrl._DataStore.namespace.ownedBy[$ctrl._Wallet.currentAccount.address] | objValues | orderBy:'fqn'" ng-show="$ctrl._DataStore.namespace.ownedBy[$ctrl._Wallet.currentAccount.address]">
            <li class="list-group-item">{{namespace.fqn}}</li>
          </ul>
          <p class="nothing" ng-show="!$ctrl._DataStore.namespace.ownedBy[$ctrl._Wallet.currentAccount.address]">{{ 'GENERAL_NO_RESULTS' | translate }}</p>
        </div>
      </div>
      <!-- YOUR MULTISIG OWNED NAMESPACES -->
      <div class="col-lg-12 col-sm-6">
        <div ng-show="$ctrl._DataStore.account.metaData.meta.cosignatoryOf.length">
          <div class="panel-heading">
            <h4>{{ 'EXPLORER_HOME_NS_MULTISIG' | translate }}</h4>
          </div>
          <div class="panel-body">
              <ul class="list-group" ng-repeat="namespace in $ctrl.multisigNamespaces | orderBy">
                <li class="list-group-item">{{namespace}}</li>
              </ul>
              <p  class="nothing" ng-show="!$ctrl.multisigNamespaces.length">{{ 'GENERAL_NO_RESULTS' | translate }}</p>
          </div>
        </div>
      </div>

    </div>
    </div>

      <div class="col-lg-9 col-sm-12">
        <div class="panel-heading">
          <h4>{{ 'EXPLORER_HOME_MOSAICS' | translate }}</h4>
        </div>
        <table class="table table-condensed">
          <thead>
            <tr>
              <th>{{ 'GENERAL_NAME' | translate }}</th>
              <th>{{ 'MOSAIC_DEFINITION_QUANTITY' | translate }}</th>
              <th>{{ 'EXPLORER_HOME_MOSAICS_LEVY' | translate }}</th>
              <th>{{ 'GENERAL_LEVY' | translate }}</th>
            </tr>
          </thead>
        </table>
        <table class="table" ng-show="$ctrl._DataStore.mosaic.ownedBy[$ctrl._Wallet.currentAccount.address]">
          <tbody>
            <tr ng-repeat="mos in $ctrl._DataStore.mosaic.ownedBy[$ctrl._Wallet.currentAccount.address] | objValues | orderBy:'mosaicId.namespaceId'">
              <td title="{{mos.mosaicId.namespaceId}}:{{mos.mosaicId.name}}"><b>{{mos.mosaicId.namespaceId}}</b>:{{mos.mosaicId.name}}</td>
              <td>{{(mos.quantity | fmtSupply:mos.mosaicId:$ctrl._DataStore.mosaic.metaData)[0]}}<span class="text-muted">.{{(mos.quantity | fmtSupply:mos.mosaicId:$ctrl._DataStore.mosaic.metaData)[1]}}</span></td>
              <td>
                <tag-levy mos="mos" tx="" mosaics="$ctrl._DataStore.mosaic.metaData">
                  <span ng-show="levy.type">
                    <b>{{levy.mosaicId.namespaceId}}</b>:{{levy.mosaicId.name}}
                  </span>
                  <span ng-show="!levy.type">
                      {{ 'GENERAL_NONE' | translate }}
                  </span>
                </tag-levy>
              </td>
              <td>
                <tag-levy mos="mos" tx="" mosaics="$ctrl._DataStore.mosaic.metaData">
                  <span ng-show="levy.type === 1">
                      I ({{mos | fmtLevyFee:tx.amount:levy:mosaics}})
                  </span>
                  <span ng-show="levy.type === 2">
                      II (x{{(levy.fee / 10000).toFixed(4)}})
                  </span>
                  <span ng-show="!levy.type">
                        {{ 'GENERAL_NONE' | translate }}
                  </span>
                </tag-levy>
              </td>
            </tr>
          </tbody>
        </table>
        <div class="panel-body nothing" ng-show="!$ctrl._DataStore.mosaic.ownedBy[$ctrl._Wallet.currentAccount.address]">
          <p>{{ 'GENERAL_NO_RESULTS' | translate }}</p>
        </div>
        <div class="panel-footer text-center bg-info">
          <small><i><b>{{ 'GENERAL_LEVY_TYPES' | translate }}: {{ 'GENERAL_LEVY_TYPES_NOTE' | translate }}</b></i></small>
        </div>
      </div>

    </div>
  </div>
</div>

'''
'''--- src/app/modules/explorer/index.js ---
import angular from 'angular';

// Create the module where our functionality can attach to
let explorerHomeModule = angular.module('app.explorerHome', []);

// Include our UI-Router config settings
import ExplorerHomeConfig from './home/explorerHome.config';
explorerHomeModule.config(ExplorerHomeConfig);

// Controllers
import ExplorerHomeCtrl from './home/explorerHome.controller';
explorerHomeModule.controller('ExplorerHomeCtrl', ExplorerHomeCtrl);

// Create the module where our functionality can attach to
let explorerApostillesModule = angular.module('app.explorerApostilles', []);

// Include our UI-Router config settings
import ExplorerApostillesConfig from './apostilles/explorerApostilles.config';
explorerApostillesModule.config(ExplorerApostillesConfig);

// Controllers
import ExplorerApostillesCtrl from './apostilles/explorerApostilles.controller';
explorerApostillesModule.controller('ExplorerApostillesCtrl', ExplorerApostillesCtrl);

// Create the module where our functionality can attach to
let explorerNamespacesMosaicsModule = angular.module('app.explorerNamespacesMosaics', []);

// Include our UI-Router config settings
import ExplorerNamespacesMosaicsConfig from './namespaces-mosaics/namespaces-mosaics.config';
explorerNamespacesMosaicsModule.config(ExplorerNamespacesMosaicsConfig);

// Controllers
import ExplorerNamespacesMosaicsCtrl from './namespaces-mosaics/namespaces-mosaics.controller';
explorerNamespacesMosaicsModule.controller('ExplorerNamespacesMosaicsCtrl', ExplorerNamespacesMosaicsCtrl);

// Create the module where our functionality can attach to
let accountsExplorerModule = angular.module('app.accountsExplorer', []);

// Include our UI-Router config settings
import AccountsExplorerConfig from './accounts/accountsExplorer.config';
accountsExplorerModule.config(AccountsExplorerConfig);

// Controllers
import AccountsExplorerCtrl from './accounts/accountsExplorer.controller';
accountsExplorerModule.controller('AccountsExplorerCtrl', AccountsExplorerCtrl);

// Create the module where our functionality can attach to
let transactionsExplorerModule = angular.module('app.explorerTransactions', []);

// Include our UI-Router config settings
import ExplorerTransactionsConfig from './transactions/explorerTransactions.config';
transactionsExplorerModule.config(ExplorerTransactionsConfig);

// Controllers
import ExplorerTransactionsCtrl from './transactions/explorerTransactions.controller';
transactionsExplorerModule.controller('ExplorerTransactionsCtrl', ExplorerTransactionsCtrl);

// Components
import ExplorerNav from './layout/nav.component';
explorerHomeModule.component('explorerNav', ExplorerNav);

export default explorerHomeModule;

'''
'''--- src/app/modules/explorer/layout/nav.component.js ---
class ExplorerNavCtrl {
	constructor() {
        'ngInject';

    }
}

let ExplorerNav = {
    controller: ExplorerNavCtrl,
    templateUrl: 'modules/explorer/layout/nav.html'
};

export default ExplorerNav;
'''
'''--- src/app/modules/explorer/layout/nav.html ---
<div class="row">
  <div class="col-md-12 explorerNav">
    <div class="panel-heading">
      <ul class="nav nav-tabs">
        <li>
          <a ui-sref-active="active" ui-sref="app.explorerHome">
            {{ 'EXPLORER_NAV_HOME' | translate }}
          </a>
        </li>
        <li>
          <a ui-sref-active="active" ui-sref="app.explorerNamespacesMosaics">
            {{ 'EXPLORER_NAV_NSM' | translate }}
          </a>
        </li>
        <li>
          <a ui-sref-active="active" ui-sref="app.accountsExplorer">
            {{ 'GENERAL_ACCOUNTS' | translate }}
          </a>
        </li>
        <li>
          <a ui-sref-active="active" ui-sref="app.explorerTransactions">
            {{ 'GENERAL_TRANSACTIONS' | translate }}
          </a>
        </li>
        <li>
          <a ui-sref-active="active" ui-sref="app.explorerApostilles">
            {{ 'EXPLORER_NAV_APOSTILLES' | translate }}
          </a>
        </li>
      </ul>
    </div>
  </div>
</div>

'''
'''--- src/app/modules/explorer/namespaces-mosaics/namespaces-mosaics.config.js ---
function NamespacesMosaicsConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.explorerNamespacesMosaics', {
            url: '/explorer/namespaces-and-mosaics',
            controller: 'ExplorerNamespacesMosaicsCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/explorer/namespaces-mosaics/namespaces-mosaics.html',
            title: 'Explorer - Namespaces & Mosaics'
        });

};

export default NamespacesMosaicsConfig;
'''
'''--- src/app/modules/explorer/namespaces-mosaics/namespaces-mosaics.controller.js ---
import nem from 'nem-sdk';

class ExplorerNamespacesMosaicsCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Wallet, Alert, $filter, DataStore, $timeout) {
        'ngInject';

        //// Module dependencies region ////

        this._Wallet = Wallet;
        this._Alert = Alert;
        this._$filter = $filter;
        this._DataStore = DataStore;
        this._$timeout = $timeout;

        //// End dependencies region ////

        //// Module properties region ////

        this.namespaces = [];
        this.subNamespaces = [];
        this.mosaics = [];
        this.selectedMosaic = undefined;
        this.selectedMosaicName = this._$filter("translate")("EXPLORER_NS_MOS_SELECT_MOS");
        this.selectedMosaicLevyDefinition = {};
        this.selectedNamespaceName = "";
        this.selectedSubNamespaceName = "";
        this.searchText = "";

        // General pagination
        this.pageSize = 10;
        // Namespaces pagination
        this.currentPage = 0;
        // Sub-namespaces pagination
        this.currentPageSubNs = 0;
        // Mosaics pagination
        this.currentPageMos = 0;

        //// End properties region ////

        // Get all root namespaces
        this.getNamespaces();
    }

    //// Module methods region ////

    /**
     * Gets all namespaces
     *
     * @param {number|undefined} id - The namespace id up to which to return the results, nothing for the most recent
     */
    getNamespaces(id) {
        return nem.com.requests.namespace.roots(this._Wallet.node, id).then((res) => {
            this._$timeout(() => {
                if(res.data.length == 100){
                    for(var i=0; i < res.data.length; i++){
                        this.namespaces.push(res.data[i]);
                    }
                    this.getNamespaces(res.data[99].meta.id);
                } else{
                    for(var i=0; i < res.data.length; i++){
                        this.namespaces.push(res.data[i]);
                    }
                    return;
                }
            });
        }, 
        (err) => {
            this._$timeout(() => {
                this._Alert.getNamespacesByIdError(err.data.message);
            });
        });
    }

    /**
     * Gets all sub-namespaces given an address and parent namespace
     *
     * @param {string} address - An account address
     * @param {string} parent - A parent namespace
     */
    getSubNamespaces(address, parent) {
        this.mosaics = [];
        this.selectedMosaic = undefined;
        this.selectedMosaicName = this._$filter("translate")("EXPLORER_NS_MOS_SELECT_MOS");
        this.selectedNamespaceName = parent;
        this.selectedSubNamespaceName = "";
        return nem.com.requests.account.namespaces.owned(this._Wallet.node, address, parent).then((res) => {
            this._$timeout(() => {
                if(!res.data.length) {
                    this.subNamespaces = [];
                    this.currentPageSubNs = 0;
                } else {
                    this.subNamespaces = res.data;
                    this.currentPageSubNs = 0;
                }
            });
        }, 
        (err) => {
            this._$timeout(() => {
                this._Alert.errorGetSubNamespaces(err.data.message);
            });
        });
    }

    /**
     * Gets all mosaics given an address and a parent namespace
     *
     * @param {string} address - An account address
     * @param {string} parent - A parent namespace
     */
    getMosaics(address, parent) {
        this.selectedMosaic = undefined;
        this.selectedMosaicName = this._$filter("translate")("EXPLORER_NS_MOS_SELECT_MOS");
        this.selectedSubNamespaceName = parent;
        return nem.com.requests.account.mosaics.definitions(this._Wallet.node, address, parent).then((res) => {
            this._$timeout(() => {
                if(!res.data.length) {
                    this.mosaics = [];
                    this.currentPageMos = 0;
                } else {
                    this.mosaics = res.data;
                    this.currentPageMos = 0;
                }
            });
        }, 
        (err) => {
            this._$timeout(() => {
                this._Alert.errorGetMosaics(err.data.message);
            });
        });
    };

    /**
     * Set mosaic data to display details
     *
     * @param {object} mosaic - A mosaic object
     */
    processMosaic(mosaic) {
        this.selectedMosaicLevyDefinition = {};
        this.selectedMosaic = mosaic;
        // Convert supply string to number
        mosaic.properties[1].value = parseInt(mosaic.properties[1].value, 10);
        this.selectedMosaicName = nem.utils.format.mosaicIdToName(mosaic.id);
        if (undefined !== mosaic.levy.type) {
            if(nem.utils.format.mosaicIdToName(mosaic.levy.mosaicId) === 'nem:xem' || undefined !== this._DataStore.mosaic.metaData[nem.utils.format.mosaicIdToName(mosaic.levy.mosaicId)]) {
                this.selectedMosaicLevyDefinition = this._DataStore.mosaic.metaData;
            } else {
                // Fetch all mosaic definitions owned by creator for levy
                nem.com.requests.account.mosaics.allDefinitions(this._Wallet.node, this._$filter("fmtPubToAddress")(mosaic.creator, this._Wallet.network)).then((res) => {
                    this._$timeout(() => {
                        if(res.data.length) {
                            for (let i = 0; i < res.data.length; ++i) {
                                this.selectedMosaicLevyDefinition[nem.utils.format.mosaicIdToName(res.data[i].id)] = {};
                                this.selectedMosaicLevyDefinition[nem.utils.format.mosaicIdToName(res.data[i].id)].mosaicDefinition = res.data[i];
                            }
                        }
                    });
                }, 
                (err) => {
                    this._$timeout(() => {
                        this._Alert.errorGetMosaicsDefintions(err.data.message);
                    });
                });
            }
        }

        // Get current supply
        this.getCurrentSupply(nem.utils.format.mosaicIdToName(mosaic.id));
    }

    /**
     * Get the current supply of a mosaic
     *
     * @param {string} id - A mosaic id
     */
    getCurrentSupply(id) {
        return nem.com.requests.mosaic.supply(this._Wallet.node, id).then((res) => {
            this._$timeout(() => {
                this.selectedMosaic.supply = res.supply;
            });
        }, 
        (err) => {
            this._$timeout(() => {
                this._Alert.getMosaicSupplyError(err.data.message)
            });
        });
    }

    /**
     * Clean a sub-namespace of it's parent root
     *
     * @param {string} str - The namespace id to clean
     */
    substringSubNs(str) {
        return str.substr(str.indexOf('.')+1);
    }

    formatMosaicId(id){
        return nem.utils.format.mosaicIdToName(id);
    }

    //// End methods region ////
}

export default ExplorerNamespacesMosaicsCtrl;
'''
'''--- src/app/modules/explorer/namespaces-mosaics/namespaces-mosaics.html ---
<div class="explorer-namespaces-mosaics-page">
  <div class="container-fluid main">
    <div class="row">
      <div class="col-sm-11">
        <h2>{{ 'EXPLORER_NS_MOS_TITLE' | translate }}</h2>
      </div>
    </div>

    <explorer-nav></explorer-nav>

    <div class="row namespaceRules">

      <div class="col-lg-3 col-md-6 col-sm-6">

        <div class="panel-heading">
              <h4>{{ 'GENERAL_NAMESPACES' | translate }}</h4>
            <paginate data="$ctrl.namespaces" current-page="$ctrl.currentPage" page-size="$ctrl.pageSize"></paginate>
        </div>

        <div class="row">
          <div class="col-md-12">
            <div class="panel-body" ng-show="$ctrl.namespaces.length">
              <!-- SEARCH NAMESPACES -->
              <div class="form-control formFloat">
                <input ng-model="$ctrl.searchText" type="text" placeholder="{{ 'EXPLORER_NS_MOS_SEARCH' | translate }}">
                <label><i class="fa fa-search"></i></label>
              </div>
              <br>
              <ul class="list-group" ng-repeat="ns in $ctrl.namespaces | orderBy:'namespace.fqn' | filter:$ctrl.searchText | startFrom:$ctrl.currentPage*$ctrl.pageSize | limitTo:$ctrl.pageSize">
                <li class="list-group-item" ng-class="$ctrl.selectedNamespaceName === ns.namespace.fqn ? 'active' : ''" ng-click="$ctrl.getSubNamespaces(ns.namespace.owner, ns.namespace.fqn);$ctrl.getMosaics(ns.namespace.owner, ns.namespace.fqn)">{{ns.namespace.fqn}}</li>
              </ul>
              <div class="panel-body nothing" ng-show="!$ctrl.namespaces.length">
                <p>{{ 'GENERAL_NO_RESULTS' | translate }}</p>
              </div>
            </div>
          </div>
        </div>

      </div>

      <!-- RESULTS SUBNAMESPACES -->
      <div class="col-lg-3 col-md-6 col-sm-6">
        <div class="panel-heading">
          <h4>{{ 'GENERAL_SUB_NAMESPACES' | translate }}</h4>
          <paginate data="$ctrl.subNamespaces" current-page="$ctrl.currentPageSubNs" page-size="$ctrl.pageSize"></paginate>
        </div>
        <div class="panel-body" ng-show="$ctrl.subNamespaces.length" >
          <ul class="list-group" ng-repeat="ns in $ctrl.subNamespaces | orderBy:'fqn' | startFrom:$ctrl.currentPageSubNs*$ctrl.pageSize | limitTo:$ctrl.pageSize">
            <li class="list-group-item" ng-class="$ctrl.selectedSubNamespaceName === ns.fqn ? 'active' : ''" ng-click="$ctrl.getMosaics(ns.owner, ns.fqn)">{{ $ctrl.substringSubNs(ns.fqn) }}</li>
          </ul>
        </div>
        <div class="panel-body nothing" ng-show="!$ctrl.subNamespaces.length">
          <p>{{ 'GENERAL_NO_RESULTS' | translate }}</p>
        </div>
      </div>
      <!-- RESULTS MOSAICS -->
      <div class="col-lg-3 col-md-6 col-sm-6">
        <div class="panel-heading">
          <h4>{{ 'GENERAL_MOSAICS' | translate }}</h4>
          <paginate data="$ctrl.mosaics" current-page="$ctrl.currentPageMos" page-size="$ctrl.pageSize"></paginate>
        </div>
        <div class="panel-body" ng-show="$ctrl.mosaics.length" >
          <ul class="list-group" ng-repeat="mos in $ctrl.mosaics | orderBy:'id.name' | startFrom:$ctrl.currentPageMos*$ctrl.pageSize | limitTo:$ctrl.pageSize">
            <li class="list-group-item" ng-class="$ctrl.selectedMosaicName === mos.id.namespaceId + ':' + mos.id.name ? 'active' : ''" ng-click="$ctrl.processMosaic(mos)">{{mos.id.name}}</li>
          </ul>
        </div>
        <div class="panel-body nothing" ng-show="!$ctrl.mosaics.length">
          <p>{{ 'GENERAL_NO_RESULTS' | translate }}</p>
        </div>
      </div>
      <!-- RESULTS MOSAICS DETAILS -->
      <div class="col-lg-3 col-md-6 col-sm-6">
        <div class="panel-heading">
          <h4>{{ $ctrl.selectedMosaicName }}</h4>
        </div>
        <div class="panel-body" ng-show="$ctrl.selectedMosaic" >
          <p class="bg-info"><span ng-bind="$ctrl.selectedMosaic.description"></span></p>
          <table class="table table-hover">
            <thead>
              <tr>
                <th>{{ 'GENERAL_NAME' | translate }}</th>
                <th>{{ 'GENERAL_VALUE' | translate }}</th>
              </tr>
            </thead>
            <tbody >
              <tr ng-show="$ctrl.selectedMosaic.supply && $ctrl.selectedMosaic.supply !== $ctrl.selectedMosaic.properties[1].value">
                <td>{{ 'MOSAIC_SUPPLY_CHANGE_SUPPLY' | translate }}</td>
                <td>{{$ctrl.selectedMosaic.supply}}</td>
              </tr>
              <tr>
                <td>{{ 'MOSAIC_DEFINITION_INITIAL_SUPPLY' | translate }}</td>
                <td>{{$ctrl.selectedMosaic.properties[1].value}}</td>
              </tr>
              <tr>
                <td>{{ 'MOSAIC_DEFINITION_DIV' | translate }}</td>
                <td>{{$ctrl.selectedMosaic.properties[0].value}}</td>
              </tr>
              <tr ng-show="$ctrl.selectedMosaic.levy.type">
                <td>{{ 'EXPLORER_HOME_MOSAICS_LEVY' | translate }}</td>
                <td>
                  <span>{{ $ctrl.formatMosaicId($ctrl.selectedMosaic.levy.mosaicId) }}</span>
                </td>
              </tr>
              <tr ng-show="$ctrl.selectedMosaic.levy.type">
                <td>{{ 'GENERAL_LEVY' | translate }}</td>
                <td>
                  <span ng-show="$ctrl.selectedMosaic.levy.type === 1 && $ctrl.selectedMosaicLevyDefinition[$ctrl.formatMosaicId($ctrl.selectedMosaic.id)]">{{ 'MOSAIC_DEFINITION_LEVY_FEE_TYPE_1' | translate }} ({{$ctrl.selectedMosaic | fmtLevyFee:1:$ctrl.selectedMosaic.levy:$ctrl.selectedMosaicLevyDefinition}})</span>
                  <span ng-show="$ctrl.selectedMosaic.levy.type === 2">{{ 'MOSAIC_DEFINITION_LEVY_FEE_TYPE_2' | translate }} (x{{($ctrl.selectedMosaic.levy.fee / 10000).toFixed(4)}})</span>
                </td>
              </tr>
              <tr>
                <td>{{ 'MOSAIC_DEFINITION_MUTABLE_SUPPLY' | translate }}</td>
                <td>{{$ctrl.selectedMosaic.properties[2].value}}</td>
              </tr>
              <tr>
                <td>{{ 'MOSAIC_DEFINITION_TRANSFERABLE' | translate }}</td>
                <td>{{$ctrl.selectedMosaic.properties[3].value}}</td>
              </tr>
            </tbody>
          </table>
        </div>
        <div class="panel-body nothing" ng-show="!$ctrl.selectedMosaic">
          <p>{{ 'GENERAL_NO_RESULTS' | translate }}</p>
        </div>
      </div>

    </div>
  </div>
</div>

'''
'''--- src/app/modules/explorer/transactions/explorerTransactions.config.js ---
function ExplorerTransactionsConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.explorerTransactions', {
            url: '/explorer/transactions',
            controller: 'ExplorerTransactionsCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/explorer/transactions/explorerTransactions.html',
            title: 'Explorer - Transactions'
        });

};

export default ExplorerTransactionsConfig;
'''
'''--- src/app/modules/explorer/transactions/explorerTransactions.controller.js ---
import nem from 'nem-sdk';
import Helpers from '../../../utils/helpers';

class ExplorerTransactionsCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Wallet, Alert, $timeout, $http) {
        'ngInject';

        //// Module dependencies region ////

        this._Wallet = Wallet;
        this._Alert = Alert;
        this._$timeout = $timeout;
        this._$http = $http;
        this._Helpers = Helpers;

        //// End dependencies region ////

        //// Module properties region ////

        // Store transactions
        this.transactions = [];
        this.noMoreTxes = false;

        // Pagination properties
        this.currentPage = 0;
        this.pageSize = 10;

        //// End properties region ////

        // Get transactions
        this.getTransactions(false);
    }

    //// Module methods region ////

    /**
     * Get transactions of the account
     */
    getTransactions(isUpdate, txId) {
        let obj = {
            'params': {
                'address': this._Wallet.currentAccount.address,
                'pageSize': isUpdate ? 100 : 50
            }
        };
        if (isUpdate) {
            obj['params']['id'] = txId;
        }
        return this._$http.get(this._Wallet.node.host + ':' + this._Wallet.node.port + '/account/transfers/all', obj).then((res) => {
            if (isUpdate) {
                // Check if txes left to load
                if (!res.data.data.length || res.data.data.length < 100) this.noMoreTxes = true;
                //
                for (let i = 0; i < res.data.data.length; i++) {
                    this.transactions.push(res.data.data[i]);
                }
            } else {
                this.transactions = res.data.data;
            }
        });
    }

    //// End methods region ////
}

export default ExplorerTransactionsCtrl;

'''
'''--- src/app/modules/explorer/transactions/explorerTransactions.html ---
<div class="explorer-transactions">
  <div class="container-fluid main">
    <div class="row">
      <div class="col-sm-8">
        <h2>{{ 'EXPLORER_TRANSACTIONS_TITLE' | translate }}</h2>
      </div>
    </div>

  	<explorer-nav></explorer-nav>

    <div class="row">
      <div class="col-md-12">
          <div class="panel-body">
            <div style="margin-top: 20px;">
              <paginate ng-show="$ctrl.transactions.length > 10" data="$ctrl.transactions" current-page="$ctrl.currentPage" page-size="$ctrl.pageSize"></paginate>
            </div>
            <table class="table table-condensed top">
              <thead>
                <tr>
                  <th>{{ 'GENERAL_ACCOUNT' | translate }}</th>
                  <th>{{ 'GENERAL_AMOUNT' | translate }}</th>
                  <th>{{ 'GENERAL_MESSAGE' | translate }}</th>
                  <th>{{ 'GENERAL_DATE' | translate }}</th>
                </tr>
              </thead>
            </table>

            <table class="table table-condensed">
              <tbody>
                <div>
                  <div ng-repeat="tx in $ctrl.transactions | orderBy:'-transaction.timeStamp' | startFrom:$ctrl.currentPage*$ctrl.pageSize | limitTo:$ctrl.pageSize">
                    <tag-transaction d="tx" tooltip-position="'left'"></tag-transaction>
                  </div>
                </div>
              </tbody>
            </table>
          </div>
          <div class="bg-info" style="cursor:pointer" ng-show="!$ctrl.noMoreTxes && $ctrl.transactions.length && $ctrl.currentPage+1 >= $ctrl._Helpers.calcNumberOfPages($ctrl.transactions, $ctrl.pageSize)" ng-click="$ctrl.getTransactions(true, $ctrl.transactions[$ctrl.transactions.length-1].meta.id)"><p>{{ 'EXPLORER_TRANSACTIONS_LOAD_MORE' | translate }}</p></div>
          <div class="panel-body nothing" ng-show="!$ctrl.transactions.length">
            <p>{{ 'GENERAL_NO_RESULTS' | translate }}</p>
          </div>
        </div>
    </div>

  </div>
</div>
'''
'''--- src/app/modules/faq/faq.config.js ---
function FAQConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.faq', {
            url: '/help',
            controller: 'FAQCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/faq/faq.html',
            title: 'FAQ'
        });

};

export default FAQConfig;
'''
'''--- src/app/modules/faq/faq.controller.js ---
class FAQCtrl {
    constructor() {
        'ngInject';
        
    }

}

export default FAQCtrl;
'''
'''--- src/app/modules/faq/faq.html ---
<div class="faq-page">
  <div class="container-fluid main">

    <div class="row">
      <div class="col-sm-8">
        <h2>{{ 'FAQ_TITLE' | translate }}</h2>
      </div>
    </div>

    <div class="row">
      <div class="col-md-6">

            <!-- START PRIMARY PANEL -->
            <div class="panel panel-default" style="border-radius:0px;margin-bottom:0">
                <div aria-expanded="false" class="panel-heading collapsed" data-toggle="collapse" data-target="#1" style="cursor:pointer;">
                    <b class="ng-binding" style="text-transform: uppercase;"><small>{{ 'FAQ_QUESTION_1' | translate }}</small></b>
                </div>
                <div style="height: 0px;" aria-expanded="false" class="collapse" id="1">
                    <div class="panel-body">
                        <p class="ng-binding" style="font-size:15px;">
                            {{ 'FAQ_ANSWER_1' | translate }}</p>
                    </div>
                </div>
            </div>
            <!-- END PRIMARY PANEL -->

            <!-- START PRIMARY PANEL -->
            <div class="panel panel-default" style="border-radius:0px;margin-bottom:0">
                <div aria-expanded="false" class="panel-heading collapsed" data-toggle="collapse" data-target="#2" style="cursor:pointer;">
                    <b class="ng-binding" style="text-transform: uppercase;"><small>{{ 'FAQ_QUESTION_2' | translate }}</small></b>
                </div>
                <div style="height: 0px;" aria-expanded="false" class="collapse" id="2">
                    <div class="panel-body">
                        <p class="ng-binding" style="font-size:15px;">
                            {{ 'FAQ_ANSWER_2' | translate }}</p>
                    </div>
                </div>
            </div>
            <!-- END PRIMARY PANEL -->

            <!-- START PRIMARY PANEL -->
            <div class="panel panel-default" style="border-radius:0px;margin-bottom:0">
                <div aria-expanded="false" class="panel-heading collapsed" data-toggle="collapse" data-target="#3" style="cursor:pointer;">
                    <b class="ng-binding" style="text-transform: uppercase;"><small>{{ 'FAQ_QUESTION_3' | translate }}</small></b>
                </div>
                <div style="height: 0px;" aria-expanded="false" class="collapse" id="3">
                    <div class="panel-body">
                        <p class="ng-binding" style="font-size:15px;">
                            {{ 'FAQ_ANSWER_3' | translate }}</p>
                    </div>
                </div>
            </div>
            <!-- END PRIMARY PANEL -->

            <!-- START PRIMARY PANEL -->
            <div class="panel panel-default" style="border-radius:0px;margin-bottom:0">
                <div aria-expanded="false" class="panel-heading collapsed" data-toggle="collapse" data-target="#7" style="cursor:pointer;">
                    <b class="ng-binding" style="text-transform: uppercase;"><small>{{ 'FAQ_QUESTION_7' | translate }}</small></b>
                </div>
                <div style="height: 0px;" aria-expanded="false" class="collapse" id="7">
                    <div class="panel-body">
                        <p class="ng-binding" style="font-size:15px;">
                            <span ng-bind-html="'FAQ_ANSWER_7' | translate"></span>
                        </p>
                    </div>
                </div>
            </div>
            <!-- END PRIMARY PANEL -->

            <!-- START PRIMARY PANEL -->
            <div class="panel panel-default" style="border-radius:0px;margin-bottom:0">
                <div aria-expanded="false" class="panel-heading collapsed" data-toggle="collapse" data-target="#8" style="cursor:pointer;">
                    <b class="ng-binding" style="text-transform: uppercase;"><small>{{ 'FAQ_QUESTION_8' | translate }}</small></b>
                </div>
                <div style="height: 0px;" aria-expanded="false" class="collapse" id="8">
                    <div class="panel-body">
                        <p class="ng-binding" style="font-size:15px;">
                            {{ 'FAQ_ANSWER_8' | translate }}
                        </p>
                    </div>
                </div>
            </div>
            <!-- START PRIMARY PANEL -->
                <div class="panel panel-default" style="border-radius:0px;margin-bottom:0">
                    <div aria-expanded="false" class="panel-heading collapsed" data-toggle="collapse" data-target="#12" style="cursor:pointer;">
                        <b class="ng-binding" style="text-transform: uppercase;"><small>{{ 'FAQ_QUESTION_12' | translate }}</small></b>
                    </div>
                    <div style="height: 0px;" aria-expanded="false" class="collapse" id="12">
                        <div class="panel-body">
                            <p ng-bind-html="'FAQ_ANSWER_12_1' | translate"></p>
                            <p ng-bind-html="'FAQ_ANSWER_12_2' | translate"></p>
                            <p>{{ 'FAQ_ANSWER_12_3' | translate }}</p>
                            <p>{{ 'FAQ_ANSWER_12_4' | translate }}</p>
                        </div>
                    </div>
                </div>
            <!-- END PRIMARY PANEL -->
            </div>
            <div class="col-md-6">
                <!-- START PRIMARY PANEL -->
                <div class="panel panel-default" style="border-radius:0px;margin-bottom:0">
                    <div aria-expanded="false" class="panel-heading collapsed" data-toggle="collapse" data-target="#10" style="cursor:pointer;">
                        <b class="ng-binding" style="text-transform: uppercase;"><small>{{ 'FAQ_QUESTION_10' | translate }}</small></b>
                    </div>
                    <div style="height: 0px;" aria-expanded="false" class="collapse" id="10">
                        <div class="panel-body">
                            <p ng-bind-html="'FAQ_ANSWER_10' | translate"></p>
                        </div>
                    </div>
                </div>
                <!-- START PRIMARY PANEL -->
                <div class="panel panel-default" style="border-radius:0px;margin-bottom:0">
                    <div aria-expanded="false" class="panel-heading collapsed" data-toggle="collapse" data-target="#11" style="cursor:pointer;">
                        <b class="ng-binding" style="text-transform: uppercase;"><small>{{ 'FAQ_QUESTION_11' | translate }}</small></b>
                    </div>
                    <div style="height: 0px;" aria-expanded="false" class="collapse" id="11">
                        <div class="panel-body">
                            <p ng-bind-html="'FAQ_ANSWER_11_1' | translate"></p>
                            <p>{{ 'FAQ_ANSWER_11_2' | translate }}</p>
                            <p>{{ 'FAQ_ANSWER_11_3' | translate }}</p>
                            <p>{{ 'FAQ_ANSWER_11_4' | translate }}</p>
                        </div>
                    </div>
                </div>
                <!-- START PRIMARY PANEL -->
                <div class="panel panel-default" style="border-radius:0px;margin-bottom:0">
                    <div aria-expanded="false" class="panel-heading collapsed" data-toggle="collapse" data-target="#9" style="cursor:pointer;">
                        <b class="ng-binding" style="text-transform: uppercase;"><small>{{ 'FAQ_QUESTION_9' | translate }}</small></b>
                    </div>
                    <div style="height: 0px;" aria-expanded="false" class="collapse" id="9">
                        <div class="panel-body">
                            <p class="ng-binding" style="font-size:15px;">
                                <span ng-bind-html="'FAQ_ANSWER_9' | translate"></span>
                            </p>
                        </div>
                    </div>
                </div>
                <!-- END PRIMARY PANEL -->
                <!-- START PRIMARY PANEL -->
                <div class="panel panel-default" style="border-radius:0px;margin-bottom:0">
                    <div aria-expanded="false" class="panel-heading collapsed" data-toggle="collapse" data-target="#4" style="cursor:pointer;">
                        <b class="ng-binding" style="text-transform: uppercase;"><small>{{ 'FAQ_QUESTION_4' | translate }}</small></b>
                    </div>
                    <div style="height: 0px;" aria-expanded="false" class="collapse" id="4">
                        <div class="panel-body">
                            <p class="ng-binding" style="font-size:15px;">
                                {{ 'FAQ_ANSWER_4' | translate }}</p>
                        </div>
                    </div>
                </div>
                <!-- END PRIMARY PANEL -->
                <!-- START PRIMARY PANEL -->
                <div class="panel panel-default" style="border-radius:0px;margin-bottom:0">
                    <div aria-expanded="false" class="panel-heading collapsed" data-toggle="collapse" data-target="#5" style="cursor:pointer;">
                        <b class="ng-binding" style="text-transform: uppercase;"><small>{{ 'FAQ_QUESTION_5' | translate }}</small></b>
                    </div>
                    <div style="height: 0px;" aria-expanded="false" class="collapse" id="5">
                        <div class="panel-body">
                            <p class="ng-binding" style="font-size:15px;">{{ 'FAQ_ANSWER_5' | translate }}</p>
                        </div>
                    </div>
                </div>
                <!-- END PRIMARY PANEL -->

                <!-- START PRIMARY PANEL -->
                <div class="panel panel-default" style="border-radius:0px;margin-bottom:0">
                    <div aria-expanded="false" class="panel-heading collapsed" data-toggle="collapse" data-target="#6" style="cursor:pointer;">
                        <b class="ng-binding" style="text-transform: uppercase;"><small>{{ 'FAQ_QUESTION_6' | translate }}</small></b>
                    </div>
                    <div style="height: 0px;" aria-expanded="false" class="collapse" id="6">
                        <div class="panel-body">
                            <p style="font-size:15px;">
                                <a class="ng-binding" href="http://nem.io" target="_blank">{{ 'FAQ_ANSWER_6_WEBSITE' | translate }}</a><br><a class="ng-binding" href="https://forum.nem.io" target="_blank">{{ 'FAQ_ANSWER_6_FORUM' | translate }}</a><br> <a class="ng-binding" href="https://bitcointalk.org/index.php?topic=654845" target="_blank">{{ 'FAQ_ANSWER_6_BTT' | translate }}</a>
                            </p>
                        </div>
                    </div>
                </div>
                <!-- END PRIMARY PANEL -->
            </div>
        </div>
    </div>
</div>

'''
'''--- src/app/modules/faq/index.js ---
import angular from 'angular';

// Create the module where our functionality can attach to
let faqModule = angular.module('app.faq', []);

// Include our UI-Router config settings
import FAQConfig from './faq.config';
faqModule.config(FAQConfig);

// Controllers
import FAQCtrl from './faq.controller';
faqModule.controller('FAQCtrl', FAQCtrl);

export default faqModule;

'''
'''--- src/app/modules/home/home.config.js ---
function HomeConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.home', {
            url: '/',
            controller: 'HomeCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/home/home.html',
            title: 'Home'
        });

};

export default HomeConfig;
'''
'''--- src/app/modules/home/home.controller.js ---
import nem from 'nem-sdk';
import Helpers from '../../utils/helpers';

class HomeCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(AppConstants, $localStorage, $http) {
        'ngInject';

        //// Module dependencies region ////

        this._storage = $localStorage;
        this._$http = $http;
        this._AppConstants = AppConstants;

        //// End dependencies region ////

        //// Module properties region ////

        this.appName = AppConstants.appName;
        this.newUpdate = false;
        this.updateInfo = {};

        //// End properties region ////

        this.checkBrowser();
        this.getGeolocation();
        this.checkLatestVersion();
    }

    //// Module methods region ////

    /**
     * Check if browser is supported or show an un-dismassable modal
     */
    checkBrowser() {
        // Detect recommended browsers
        let isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);
        let isSafari = /Safari/.test(navigator.userAgent) && /Apple Computer/.test(navigator.vendor);
        let isFirefox = /Firefox/.test(navigator.userAgent);

        // If no recommended browser used, open modal
        if(!isChrome && !isSafari && !isFirefox) {
            $('#noSupportModal').modal({
              backdrop: 'static',
              keyboard: false
            }); 
        }
    }

    /**
     * Get closest node from geolocation, if user agrees
     */
    getGeolocation() {
        // If no mainnet node in local storage
        if (navigator.geolocation && !this._storage.selectedMainnetNode) {
            // Get position
            navigator.geolocation.getCurrentPosition((res) => {
                // Get the closest nodes
                nem.com.requests.supernodes.nearest(res.coords).then((res) => {
                    // Pick a random node in the array
                    let node = res.data[Math.floor(Math.random()*res.data.length)];
                    // Set the node in local storage
                    this._storage.selectedMainnetNode = nem.model.objects.create("endpoint")("http://"+node.ip, 7890);
                }, (err) => {
                    // If error it will use default node
                    console.log(err);
                });
            }, (err) => {
                console.log(err);
                // Get all the active supernodes
                nem.com.requests.supernodes.get(1).then((res) => {
                    // Pick a random node in the array
                    let node = res.data[Math.floor(Math.random()*res.data.length)];
                    // Set the node in local storage
                    this._storage.selectedMainnetNode = nem.model.objects.create("endpoint")("http://"+node.ip, 7890);
                }, (err) => {
                    // If error it will use default node
                    console.log(err);
                });
            });
        }
    }

    /**
     * Check if a new version is available on Github
     */
    checkLatestVersion() {
        this._$http.get("https://api.github.com/repos/NemProject/NanoWallet/releases/latest").then((res) => {
            let currentVersion = this._AppConstants.version;
            let version = res.data.name;
            let isVersion2 = parseInt(version.split(".")[0]) > 1;
            if (isVersion2 && Helpers.versionCompare(currentVersion, version) < 0) {
                this.newUpdate = true;
                this.updateInfo = res.data;
            }
        });
    }

    //// End methods region ////
}

export default HomeCtrl;
'''
'''--- src/app/modules/home/home.html ---
<div class="alert alert-info text-center" style="margin-top: -20px;padding: 5px;" role="alert" ng-show="$ctrl.newUpdate">
   <b>New version available!</b> <a href="{{$ctrl.updateInfo.html_url}}" target="_blank" style="color:#337ab7;">Download {{$ctrl.updateInfo.name}}</a>
</div>
<div class="home-page">
   <div class="banner">
      <div class="container">
         <h1 ng-bind="::$ctrl.appName"></h1>
         <p>{{ 'APP_NAME_SUB' | translate }}</p>
      </div>
   </div>
   <div class="container">
      <div class="row row-center">
         <div class="col-md-1" ng-mouseover="$ctrl.showInfo = 1">
            <i class="fa fa-send fa-4x"></i>
         </div>
         <div class="col-md-1" ng-mouseover="$ctrl.showInfo = 2">
            <i class="fa fa-user-plus fa-4x"></i>
         </div>
         <div class="col-md-1" ng-mouseover="$ctrl.showInfo = 3">
            <i class="fa fa-sitemap fa-4x"></i>
         </div>
         <div class="col-md-1" ng-mouseover="$ctrl.showInfo = 4">
            <i class="fa fa-th fa-4x"></i>
         </div>
         <div class="col-md-1" ng-mouseover="$ctrl.showInfo = 5">
            <img src="images/symbol.jpg" style="width: 4em;"></i>
         </div>
         <div class="col-md-1" ng-mouseover="$ctrl.showInfo = 6">
            <i class="fa fa-chain fa-4x"></i>
         </div>
         <div class="col-md-1" ng-mouseover="$ctrl.showInfo = 7">
            <img src="images/apostille.png"/>
         </div>
         <div class="col-md-1" ng-mouseover="$ctrl.showInfo = 8">
            <i class="fa fa-4x">&#xf2bb; </i>
         </div>
         <div class="col-md-1" ng-mouseover="$ctrl.showInfo = 9">
            <i class="fa fa-exchange fa-4x"></i>
         </div>
      </div>
      <hr>
      <div class="col-md-offset-3 col-md-6">
         <div ng-show="!$ctrl.showInfo">
            <p>{{ 'HOME_FEATURE_STAND_BY' | translate }}</p>
         </div>
         <div ng-show="$ctrl.showInfo === 1">
            <p>{{ 'HOME_FEATURE_1' | translate }}</p>
         </div>
         <div ng-show="$ctrl.showInfo === 2">
            <p>{{ 'PORTAL_MULTISIG_TEXT' | translate }}</p>
         </div>
         <div ng-show="$ctrl.showInfo === 3">
            <p>{{ 'PORTAL_NS_TEXT' | translate }}</p>
         </div>
         <div ng-show="$ctrl.showInfo === 4">
            <p>{{ 'PORTAL_HARVESTING_TEXT' | translate }}</p>
         </div>
         <div ng-show="$ctrl.showInfo === 5">
            <p>{{ 'PORTAL_CATAPULTOPTIN_TEXT' | translate }}</p>
         </div>
         <div ng-show="$ctrl.showInfo === 6">
            <p>{{ 'PORTAL_APOSTILLE_TEXT' | translate }}</p>
         </div>
         <div ng-show="$ctrl.showInfo === 7">
            <p>{{ 'PORTAL_ADDRESS_BOOK_TEXT' | translate }}</p>
         </div>
         <div ng-show="$ctrl.showInfo === 8">
            <p>{{ 'PORTAL_EXCHANGE_TEXT' | translate }}</p>
         </div>
         <div ng-show="$ctrl.showInfo === 9">
            <p>{{ 'PORTAL_EXCHANGE_TEXT' | translate }}</p>
         </div>
      </div>
   </div>
   <!-- Modal -->
   <div class="modal fade" id="noSupportModal" tabindex="-1" role="dialog">
      <div class="modal-dialog" role="document">
         <div class="modal-content">
            <div class="modal-body" style="color:#444">
               <img src="images/logomark.png" style="width: 125px;" />
               <p>{{ 'HOME_UNSUPPORTED_BROWSER' | translate }}</p>
               <p><b><u>{{ 'HOME_RECOMMENDED_BROWSERS' | translate }}</u></b></p>
               <p>
                  <a href="https://www.mozilla.org" target="_blank" data-toggle="tooltip" data-placement="bottom" title="" class="ng-binding" data-original-title="Firefox">
                  <i class="fa fa-firefox fa-3x"></i>
                  </a>
                  <a href="https://www.google.com/chrome/" target="_blank" data-toggle="tooltip" data-placement="bottom" title="" class="ng-binding" data-original-title="Chrome">
                  <i class="fa fa-chrome fa-3x"></i>
                  </a>
                  <a href="http://www.apple.com/safari/" target="_blank" data-toggle="tooltip" data-placement="bottom" title="" class="ng-binding" data-original-title="Safari">
                  <i class="fa fa-safari fa-3x"></i>
                  </a>
               </p>
            </div>
         </div>
      </div>
   </div>
</div>

'''
'''--- src/app/modules/home/index.js ---
import angular from 'angular';

// Create the module where our functionality can attach to
let homeModule = angular.module('app.home', []);

// Include our UI-Router config settings
import HomeConfig from './home.config';
homeModule.config(HomeConfig);

// Controllers
import HomeCtrl from './home.controller';
homeModule.controller('HomeCtrl', HomeCtrl);

export default homeModule;

'''
'''--- src/app/modules/importWalletQrCode/importQrCode.config.js ---
function importWalletQrCodeConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.importWalletQrCode', {
            url: '/import-wallet-qr-code',
            controller: 'importWalletQrCodeCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/importWalletQrCode/index.html',
            title: 'Import wallet QR code'
        });

};

export default importWalletQrCodeConfig;
'''
'''--- src/app/modules/importWalletQrCode/importQrCode.controller.js ---
import nem from 'nem-sdk';
import Helpers from '../../utils/helpers';
import jsQR from "jsqr";

class importWalletQrCodeCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Alert, Wallet, $timeout, $localStorage, WalletBuilder, $state, $scope) {
        'ngInject';

        //// Module dependencies region ////
        this._$state = $state;
        this._Wallet = Wallet;
        this._Alert = Alert;
        this._$timeout = $timeout;
        this._WalletBuilder = WalletBuilder;
        this._storage = $localStorage;

        this.qrcodeWallet = {};
        this.common = nem.model.objects.get("common");
        this.walletName = '';
        this.scanStarted = false;

        this.init();

        // Will stop scan if user change page
        $scope.$on("$destroy", () => {
            this.stopScan();
        });
    }

    init() {
        this.adduploadQrcodeListener()
    }

    stopScan() {
      if (this.scanStarted) {
        this.scanStarted = false;
        clearInterval(this.continueDetectInterval); //clear interval
        this.openedVideoStream.getTracks()[0].stop(); //stop stream
        this.video.pause(); // video pause;
        $("#scanQrcode").html(""); //delete #camera content
      }
    }

    /**
     * read qrcode
     */  
    tick() {
        let self = this;
        if (self.video.readyState === self.video.HAVE_ENOUGH_DATA) {
          self.canvasElement.height = self.video.videoHeight;
          self.canvasElement.width = self.video.videoWidth;

          self.canvas.drawImage(self.video, 0, 0, self.canvasElement.width, self.canvasElement.height);
          var imageData = self.canvas.getImageData(0, 0, self.canvasElement.width, self.canvasElement.height);
          var code = jsQR(imageData.data, imageData.width, imageData.height);

          if (code) {
            try {
              let wallet = JSON.parse(code.data)
              console.log('success detect QR, close camera!');

              if(wallet && wallet.data && wallet.data.name){
                  
                  this.stopScan();

                  $("#importWalletName").text(wallet.data.name);
                  self.qrcodeWallet = wallet;
                  $('#importQrcodeModal').modal('show');
              }else{
                console.log('Detect qr, but not NEM qr. continue ...')
              }
            } catch (err) {
              console.log('continue to detect Qrcode...')
            }
          }
        }
    }

    /**
     * search qrcode in video realtime.
     */
    continueDetectQR () {
        let self = this;
        self.continueDetectInterval = setInterval(()=>{
            self.tick()
        }, 1000/60)
    }

    /**
     * scan qrcode image
     */
    scan() {
        this.scanStarted = true;
        let self = this;
        let cvsElement = document.createElement('canvas');
        cvsElement.id = "scanQrcodeCvs";
        cvsElement.hidden = true;

        let videoElement = document.createElement('video');
        videoElement.style.width = "500px";

        $('#scanQrcode').append(cvsElement);
        $('#scanQrcode').append(videoElement);

        this.video = document.getElementsByTagName('video')[0];
        this.canvasElement = document.getElementById("scanQrcodeCvs");
        this.canvas = this.canvasElement.getContext("2d");

        navigator.mediaDevices.getUserMedia({ video: { facingMode: "environment" } }).then(function(stream) {
          self.video.srcObject = stream;
          self.openedVideoStream = stream;
          self.video.setAttribute("playsinline", true); // required to tell iOS safari we don't want fullscreen
          self.video.play();
          self.continueDetectQR();
        });
    }    

    /**
     * upload qrcode image
     */  

    drawToCanvasAndReadQR(imgData) {
            let self = this;
            var cvs = document.getElementById('uploadQrcodeCvs');
            var ctx = cvs.getContext('2d');
            var img = new Image;
            img.src = imgData;

            img.onload = function(){//必须onload之后再画
                console.log('img W x H', img.naturalWidth, img.naturalHeight)
                cvs.width = img.naturalWidth
                cvs.height = img.naturalHeight
     
                ctx.drawImage(img, 0, 0, cvs.width, cvs.height);
                var imgageData = ctx.getImageData(0, 0, cvs.width, cvs.height);
                var code = jsQR(imgageData.data, imgageData.width, imgageData.height);
                
                try {
                  let wallet = JSON.parse(code.data)
                  if(wallet && wallet.data && wallet.data.name){
                      self.qrcodeWallet = wallet;
                      $("#importWalletName").text(wallet.data.name);
                      $('#importQrcodeModal').modal('show');
                  }else{
                    console.log('->Detect qr, but not NEM qr. continue ...')
                  }
                } catch (err) {
                  console.log('non json qr...')
                }                
            }     
        }

    adduploadQrcodeListener() {
        let self = this;
        document.getElementById('uploadQrcodeInput').addEventListener('change', function() {
          var file = this.files[0];//获取input输入的图片
          if(!/image\/\w+/.test(file.type)){
              alert("请确保文件为图像类型");
              return false;
          }//判断是否图片，在移动端由于浏览器对调用file类型处理不同，虽然加了accept = 'image/*'，但是还要再次判断
          var reader = new FileReader();
          reader.readAsDataURL(file);//转化成base64数据类型
          reader.onload = function(e){
            self.drawToCanvasAndReadQR(this.result);
          }
        });

    }

    importQrcodeWallet() {
        if(!this.common.password || !this.qrcodeWallet.data) {
          return
        }
        let truePassword = this.common.password
        if(this.qrcodeWallet.wxwallet && this.qrcodeWallet.wxwallet == "1") {
            truePassword = nem.crypto.helpers.derivePassSha(this.common.password, 6000).priv;
            console.log('found nem wechat wallet qrcode')
        }

        let encrypted = this.qrcodeWallet.data.priv_key;
        let salt = nem.crypto.js.enc.Hex.parse(this.qrcodeWallet.data.salt);
        let key = nem.crypto.js.PBKDF2(truePassword, salt, {
          keySize: 256 / 32,
          iterations: 2000
        })

        let iv = encrypted.substring(0, 32);
        let encryptedKey =  encrypted.substring(32,128);

        let obj = {
          ciphertext: nem.crypto.js.enc.Hex.parse(encryptedKey),
          iv: nem.utils.convert.hex2ua(iv),
          key: nem.utils.convert.hex2ua(key.toString())
        }      
        let priv = nem.crypto.helpers.decrypt(obj);
        if(priv.length === 64 || priv.length === 66) {

          this._WalletBuilder.createPrivateKeyWallet(this.qrcodeWallet.data.name + '.', this.common.password, priv, 104).then((wlt) => {
              this._$timeout(() => {
                  if (wlt && typeof wlt === 'object') {
                      this._storage.wallets = this._storage.wallets.concat(wlt);
                      this._Alert.createWalletSuccess();
                      //delete paddword and wallet
                      this.common.password = "";
                      this.qrcodeWallet = {};

                      $('#importQrcodeModal').modal('hide');

                      this._$state.go("app.login");
                  }
              }, 10);
          },
          (err) => {
              console.log('..._WalletBuilder.createPrivateKeyWallet err');
          });    
        }else{
          this._Alert.passwordsNotMatching();
        }
    }

    //// End methods region ////

}

export default importWalletQrCodeCtrl;
'''
'''--- src/app/modules/importWalletQrCode/index.html ---
<div class="importQrcode-page">
  <div class="container-fluid main">
    <div class="row">
      <div class="col-sm-8">
        <h2>{{ 'IMPORT_WALLET_QRCODE_TITLE' |  translate }}</h2>
      </div>
    </div>
    <div class="row">
      <div class="col-lg-6 col-md-12">
        <div class="panel-heading">
            <h3>{{ 'IMPORT_WALLET_QRCODE_LOAD' |  translate }}</h3>
        </div>
        <div class="panel-body">
          <div id="importWallet">
                <div id="scanQrcode"></div>
                <div id="uploadQrcode">
                  <canvas id="uploadQrcodeCvs" hidden></canvas>
                </div>
              </div>
          <div class="input-group">
            <div class="">
              <div class="col-md-6 col-sm-6">
                <button class="btn btn-success" type="submit" ng-click="$ctrl.scan()" ng-show="!$ctrl.scanStarted">
                    {{ 'IMPORT_WALLET_QRCODE_SCAN' | translate }}
                </button>
                <button class="btn btn-success" type="submit" ng-click="$ctrl.stopScan()" ng-show="$ctrl.scanStarted">
                    {{ 'IMPORT_WALLET_QRCODE_STOP_SCAN' | translate }}
                </button>
              </div>
              <div class="col-md-6 col-sm-6">
                  <input class="btn btn-success" style="font-size: unset;width: auto;" type="file" id="uploadQrcodeInput" accept="image/*"/>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="col-lg-6 col-md-12">
        <div class="panel-heading">
            <h3>{{ 'GENERAL_INFORMATION' |  translate }}</h3>
        </div>
        <div class="panel-body">
          <p>{{ 'IMPORT_WALLET_QRCODE_INFORMATION' |  translate }}</p>
        </div>      
      </div>
    </div>
  </div>
</div>

<!-- Import Wallet Qrcode modal -->
<div id="importQrcodeModal" class="modal fade" role="dialog">
  <div class="modal-dialog modal-sm" role="document">
    <!-- Modal content-->
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h3 class="modal-title">{{ 'IMPORT_WALLET_QRCODE_TITLE' |  translate }}</h3>
      </div>
      <div class="modal-body">
        <div class="row">
          <div class="col-sm-12">
            <fieldset class="form-group">
              <div class="input-group">
                <span class="input-group-btn">
                  <label>{{ 'FORM_WALLET_NAME_FIELD_PLACEHOLDER' | translate }}: </label>
                </span>
                <div class="form-control formFloat">
                  <span id="importWalletName"></span>
                </div>
              </div>
            </fieldset>
            <password-input common="$ctrl.common"></password-input>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <button class="btn btn-success" type="submit" ng-click="$ctrl.importQrcodeWallet()">
            <i class="fa fa-plus"></i> {{ 'LOGIN_IMPORT_BUTTON' | translate }}
          </button>
      </div>
    </div>
  </div>
</div>
'''
'''--- src/app/modules/importWalletQrCode/index.js ---
import angular from 'angular';

// Create the module where our functionality can attach to
let importWalletQrCodeModule = angular.module('app.importWalletQrCode', []);

// Include our UI-Router config settings
import importWalletQrCodeConfig from './importQrCode.config';
importWalletQrCodeModule.config(importWalletQrCodeConfig);

// Controllers
import importWalletQrCodeCtrl from './importQrCode.controller';
importWalletQrCodeModule.controller('importWalletQrCodeCtrl', importWalletQrCodeCtrl);

export default importWalletQrCodeModule;

'''
'''--- src/app/modules/importanceTransfer/index.js ---
import angular from 'angular';

// Create the module where our functionality can attach to
let importanceTransferModule = angular.module('app.importanceTransfer', []);

// Include our UI-Router config settings
import ImportanceTransferConfig from './normal/importanceTransfer.config';
importanceTransferModule.config(ImportanceTransferConfig);

// Controllers
import ImportanceTransferCtrl from './normal/importanceTransfer.controller';
importanceTransferModule.controller('ImportanceTransferCtrl', ImportanceTransferCtrl);

// Create the module where our functionality can attach to
let multisigImportanceTransferModule = angular.module('app.multisigImportanceTransfer', []);

// Include our UI-Router config settings
import MultisigImportanceTransferConfig from './multisig/importanceTransfer.config';
multisigImportanceTransferModule.config(MultisigImportanceTransferConfig);

// Controllers
import MultisigImportanceTransferCtrl from './multisig/importanceTransfer.controller';
multisigImportanceTransferModule.controller('MultisigImportanceTransferCtrl', MultisigImportanceTransferCtrl);

export default importanceTransferModule;

'''
'''--- src/app/modules/importanceTransfer/multisig/importanceTransfer.config.js ---
function MultisigImportanceTransferConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.multisigImportanceTransfer', {
            url: '/multisignature-importance-transfer',
            controller: 'MultisigImportanceTransferCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/importanceTransfer/multisig/importanceTransfer.html',
            title: 'Manage delegated account of multisignature accounts'
        });

};

export default MultisigImportanceTransferConfig;
'''
'''--- src/app/modules/importanceTransfer/multisig/importanceTransfer.controller.js ---
import nem from 'nem-sdk';

class MultisigImportanceTransferCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Wallet, Alert, $filter, DataStore, $timeout, Nodes) {
        'ngInject';

        //// Module dependencies region ////

        this._Alert = Alert;
        this._Wallet = Wallet;
        this._$filter = $filter;
        this._DataStore = DataStore;
        this._$timeout = $timeout;
        this._Nodes = Nodes;

        //// End dependencies region ////
 
        //// Module properties region ////

        // Form is an importance transfer transaction object
        this.formData = nem.model.objects.create("importanceTransferTransaction")("", 1);

        // Remote account address for view
        this.remoteAccountAddress = '',
        // Remote account public key
        this.formData.remoteAccount = '';
        // For the public key in harvesting panel
        this.remoteAccountPublicView = '';
        // Multisig data
        this.formData.isMultisig = true;
        this.formData.multisigAccount = '';
        // Address generated from the custom public key
        this.customGeneratedRemote = '';

        // Prevent user to click twice on send when already processing
        this.okPressed = false;

        // Store multisig account data 
        this.multisigData = '';

        // Object to contain our password & private key data.
        this.common = nem.model.objects.get("common");

        // Modes
        this.modes = [{
            name: this._$filter('translate')('IMPORTANCE_TRANSFER_MODE_1'),
            key: 1
        }, {
            name: this._$filter('translate')('IMPORTANCE_TRANSFER_MODE_2'),
            key: 2
        }];

        // Not using custom public key by default
        this.customKey = false;
        // Not using custom node by default
        this.isCustomNode = false;
        this.customHarvestingNode = "";
        // Get the harvesting endpoint from local storage or use default node
        this.harvestingNode = this._Nodes.getHarvestingEndpoint();
        // Consider node has no free slots by default
        this.hasFreeSlots = false;
        // Set the right nodes according to Wallet network
        this.setNodes();
        // Show supernodes by default on mainnet
        this.showSupernodes = this._Wallet.network !== nem.model.network.data.mainnet.id ? false : true;;
        // Used to store the remote account data
        this.delegatedData;
        //
        this.remotePrivateKey;
        this.isActivator = false;

        // Store the prepared transaction
        this.preparedTransaction = {};

        //// End properties region ////

        // Check node slots
        this.checkNode();

        // Update fee
        this.prepareTransaction();

    }

    //// Module methods region ////

    /**
     * Set available nodes according to network
     */
    setNodes() {
        if(this._Wallet.network !== nem.model.network.data.mainnet.id) {
            this.nodes = this._Nodes.get();
        } else {
            this.nodes = [];
            // Get supernodes
            nem.com.requests.supernodes.all().then((data) => {
                this._$timeout(() => {
                    this.nodes = this._$filter('toEndpoint')(data.nodes);
                });
            },
            (err) => {
                this._$timeout(() => {
                    this._Alert.supernodesError();
                    // Return default nodes
                    this.nodes = this._$filter('toEndpoint')(nem.model.nodes.mainnet);
                });
            });
        }
    }

    /**
     * Check node slots
     */
    checkNode() {
        this._Nodes.hasFreeSlots(this.isCustomNode ? this._Nodes.cleanEndpoint(this.customHarvestingNode) : this.harvestingNode).then((res) => {
            this._$timeout(() => {
                this.hasFreeSlots = res;
            });
        }, (err) => {
            this._$timeout(() => {
                this.hasFreeSlots = false;
            });
        });
    }

    /**
     * Update the delegated data and set chosen harvesting node if unlocked
     */
    updateDelegatedData() {
        if (this.isCustomNode) this.harvestingNode = this._Nodes.cleanEndpoint(this.customHarvestingNode);
        if (!this.harvestingNode) return;
        // Get account data
        nem.com.requests.account.data(this.harvestingNode, this.remoteAccountAddress).then((data) => {
            this._$timeout(() => {
                this.delegatedData = data
                if (data.meta.status === "UNLOCKED") {
                    // Set harvesting node in local storage
                    this._Nodes.saveHarvestingEndpoint(this.harvestingNode);
                }
            });
        },
        (err) => {
            this._$timeout(() => {
                this._Alert.getAccountDataError(err.data.message);
                return;
            });
        });
    }

    /**
     * Prepare the transaction
     */
    prepareTransaction() {
        let entity = nem.model.transactions.prepare("importanceTransferTransaction")(this.common, this.formData, this._Wallet.network);
        this.preparedTransaction = entity;
        return entity;
    }

    /**
     * Update the remote account public key
     */
    updateRemoteAccount() {
        if (this.customKey) {
            this.formData.remoteAccount = '';
            this.customGeneratedRemote = '';
        } else {
            this.generateData();
        }
    }

    /**
     * Generate address of the custom public key
     */
    generateAddress() {
        if(this.formData.remoteAccount.length === 64) {
           this.customGeneratedRemote = nem.model.address.toAddress(this.formData.remoteAccount, this._Wallet.network);
        } else {
            this.customGeneratedRemote = '';
        }
    }

    /**
     * Generate data for selected multisig account
     */
    generateData() {
        // Get account private key for preparation or return
        if (!this._Wallet.decrypt(this.common)) { 
            this.formData.multisigAccount = "";
            return; 
        }

        if (!this.formData.multisigAccount) return this.reset();

        let kp = nem.crypto.keyPair.create(nem.utils.helpers.fixPrivateKey(this.common.privateKey));
        // Create remote account from signed sha256 hash of the multisig account address
        this.remotePrivateKey = nem.utils.helpers.fixPrivateKey(kp.sign(nem.crypto.js.SHA256(this.formData.multisigAccount.address).toString(nem.crypto.js.enc.Hex)).toString());
        let remoteKp = nem.crypto.keyPair.create(this.remotePrivateKey);
        this.remoteAccountAddress = nem.model.address.toAddress(remoteKp.publicKey.toString(), this._Wallet.network);
        this.formData.remoteAccount = remoteKp.publicKey.toString();
        this.remoteAccountPublicView = remoteKp.publicKey.toString();

        // Update fee
        this.prepareTransaction();

        // Get multisig account data
        nem.com.requests.account.data(this._Wallet.node, this.formData.multisigAccount.address).then((data) => {
                this._$timeout(() => {
                    this.multisigData = data;
                });
            },
            (err) => {
                this._$timeout(() => {
                    this.multisigData = "";
                    this._Alert.getAccountDataError(err.data.message);
                });
            });
        this.updateDelegatedData()
        this.checkRemoteAccount();

    }

    /**
    * Reset generated data
    */
    reset() {
        this.remoteAccountAddress = '';
        this.formData.remoteAccount = '';
        this.remoteAccountPublicView = '';
        this.formData.multisigAccount = '';
        this.multisigData = '';
        this.delegatedData = '';
        this.remotePrivateKey = '';
        this.isActivator = false;
    }

    /**
     * Start delegated harvesting, set chosen node in wallet service and local storage
     */
    startDelegatedHarvesting() {
        // Get account private key or return
        if (!this._Wallet.decrypt(this.common)) return;

        // Start harvesting
        nem.com.requests.account.harvesting.start(this.harvestingNode, this.remotePrivateKey).then((data) => {
            this._$timeout(() => {
                // Update delegated data
                this.updateDelegatedData();
                // Clean data
                this.common = nem.model.objects.get("common");
            });
        },
        (err) => {
            this._$timeout(() => {
                this._Alert.unlockError(err.data.message);
                return;
            });
        });
    }

    /**
     * Stop delegated harvesting
     */
    stopDelegatedHarvesting() {
        // Get account private key or return
        if (!this._Wallet.decrypt(this.common)) return;

        // Stop harvesting
        nem.com.requests.account.harvesting.stop(this.harvestingNode, this.remotePrivateKey).then((data) => {
            this._$timeout(() => {
                // Check node slots
                this.checkNode();
                // Update delegated data
                this.updateDelegatedData();
                // Clean data
                this.common = nem.model.objects.get("common");
            });
        },
        (err) => {
            this._$timeout(() => {
                this._Alert.lockError(err.data.message);
                return;
            });
        });
    }

    /**
     * Check if the generated remote account is the remote account of the multisig
     */
    checkRemoteAccount() {
        nem.com.requests.account.forwarded(this._Wallet.node, this.remoteAccountAddress).then((data) => {
            this._$timeout(() => {
                if(data.account.address !== this.formData.multisigAccount.address) {
                    this.isActivator = false;
                } else {
                    this.isActivator = true;
                }
            });
        },
        (err) => {
            this._$timeout(() => {
                this._Alert.getAccountDataError(err.data.message);
            });
        });
    }

    /**
     * Reset data
     */
    resetData() {
        //this.formData = nem.model.objects.create("importanceTransferTransaction")("", 1);
        //this.formData.isMultisig = true;
        this.common = nem.model.objects.get("common");
        this.preparedTransaction = {};
        this.prepareTransaction();
    }

    /**
     * Prepare and broadcast the transaction to the network
     */
    send() {
        // Disable send button
        this.okPressed = true;

        // Get account private key for preparation or return
        if (!this._Wallet.decrypt(this.common)) return this.okPressed = false;

        // Build the entity to serialize
        let entity = this.prepareTransaction();

        // Use wallet service to serialize and send
        this._Wallet.transact(this.common, entity).then(() => {
            this._$timeout(() => {
                // Enable send button
                this.okPressed = false;
                // Reset form data
                this.resetData();
                return;
            });
        }, () => {
            this._$timeout(() => {
                // Delete private key in common
                this.common.privateKey = '';
                // Enable send button
                this.okPressed = false;
                return;
            });
        });
    }

    //// End methods region ////

}

export default MultisigImportanceTransferCtrl;
'''
'''--- src/app/modules/importanceTransfer/multisig/importanceTransfer.html ---
<div class="importance-transfer-page">
  <div class="container-fluid main">

    <div class="row">
      <div class="col-sm-10">
        <h2>{{ 'IMPORTANCE_TRANSFER_MULTISIGNATURE_TITLE' | translate }}</h2>
      </div>
    </div>

    <div class="row">

      <div class="col-md-6 col-sm-12">
        <div class="panel-heading">
            <h3>{{ 'IMPORTANCE_TRANSFER_HARVESTING_PANEL' | translate }}</h3>
        </div>
        <div class="panel-body">
          <!-- Password Field -->
          <password-input common="$ctrl.common"></password-input>

          <!-- Multisig select -->
          <multisig-select ng-show="$ctrl.formData.isMultisig" multisig-account="$ctrl.formData.multisigAccount" update-ctrl="$ctrl.generateData();" is-disabled="!$ctrl.common.password.length"></multisig-select>

          <div ng-show="$ctrl.multisigData">
            <div class="row" style="margin-bottom: 20px;">
               <div class="col-md-3">
                 <h5>{{ 'ACCOUNT_REMOTE_STATUS' | translate }}</h5>
                <span ng-show="$ctrl.multisigData.meta.remoteStatus === 'ACTIVE'" style="text-transform: uppercase;color: green;">{{ 'GENERAL_ACTIVE' | translate }}</span>
                <span ng-show="$ctrl.multisigData.meta.remoteStatus === 'INACTIVE'" style="text-transform: uppercase;color: red;">{{ 'GENERAL_INACTIVE' | translate }}</span>
                <span ng-show="$ctrl.multisigData.meta.remoteStatus === 'ACTIVATING'" style="text-transform: uppercase;">{{ 'GENERAL_ACTIVATING' | translate }}</span>
                <span ng-show="$ctrl.multisigData.meta.remoteStatus === 'DEACTIVATING'" style="text-transform: uppercase;">{{ 'GENERAL_DEACTIVATING' | translate }}</span>
                <span  ng-show="$ctrl.multisigData.meta.remoteStatus === 'REMOTE'" style="text-transform: uppercase;">{{ 'GENERAL_REMOTE' | translate }}</span>
               </div>
               <div class="col-md-3">
                <h5>{{ 'IMPORTANCE_TRANSFER_HARVESTING_STATUS' | translate }}</h5>
                <span ng-show="$ctrl.delegatedData.meta.status === 'UNLOCKED'" style="text-transform: uppercase;color: green;">{{ 'GENERAL_ACTIVE' | translate }}</span>
                <span ng-show="$ctrl.delegatedData.meta.status === 'LOCKED'" style="text-transform: uppercase;color: red;">{{ 'GENERAL_INACTIVE' | translate }}</span>
              </div>
               <div class="col-md-3">
                 <h5>{{ 'ACCOUNT_VESTED_BALANCE' | translate }}</h5>
                 <span>{{ ($ctrl.formData.multisigAccount.vestedBalance | fmtNemValue)[0] }}.{{ ($ctrl.formData.multisigAccount.vestedBalance | fmtNemValue)[1] }} <small><b>XEM</b></small></span>
               </div>
               <div class="col-md-3">
                <h5>{{ 'ACCOUNT_HARVESTED_BLOCKS' | translate }}</h5>
                <span>
                  <span ng-show="$ctrl.formData.multisigAccount.harvestedBlocks === 0">{{ 'IMPORTANCE_TRANSFER_NO_BLOCKS_HARVESTED' | translate }}</span>
                  <span ng-show="$ctrl.formData.multisigAccount.harvestedBlocks > 0">{{ $ctrl.formData.multisigAccount.harvestedBlocks }}</span>
                </span>
              </div>
            </div>
            <hr>
            <div class="row">
              <button class="btn btn-success" style="margin-bottom: 5px;width: auto;" ng-click="$ctrl.showStartStop = false;$ctrl.showDelegatedKeys = false;$ctrl.showImportanceTransfer = true;">{{ 'IMPORTANCE_TRANSFER_ACTIVATE_DEACTIVATE_REMOTE' | translate }}</button>
              <button class="btn btn-success" style="margin-bottom: 5px;width: auto;" ng-disabled="$ctrl.multisigData.meta.remoteStatus === 'DEACTIVATING'" ng-click="$ctrl.showImportanceTransfer = false;$ctrl.showDelegatedKeys = false;$ctrl.showStartStop = true;">{{ 'ACCOUNT_START_STOP_HARVESTING' | translate }}</button>
              <button class="btn btn-success" style="margin-bottom: 5px;width: auto;" ng-click="$ctrl.showImportanceTransfer = false;$ctrl.showStartStop = false;$ctrl.showDelegatedKeys = true;">{{ 'IMPORTANCE_TRANSFER_SHOW_DELEGATED_KEYS' | translate }}</button>
            </div>
          </div>

        </div>
      </div>

      <div class="col-md-6 col-sm-12">

        <div ng-show="$ctrl.showImportanceTransfer">
          <div class="panel-heading">
            <h3>{{ 'IMPORTANCE_TRANSFER_MULTISIG_NAME' | translate }}</h3>
          </div>

          <div class="panel-body">
            <!-- REMOTE ACCOUNT -->
            <div ng-show="$ctrl.remoteAccountAddress.length">
              <fieldset class="form-group" ng-show="!$ctrl.customKey">
                <div class="input-group">
                  <span class="input-group-btn">
                    <label>{{ 'IMPORTANCE_TRANSFER_REMOTE_ACCOUNT' | translate }}</label>
                  </span>
                  <input type="text" class="form-control" ng-model="$ctrl.remoteAccountAddress" readOnly>
                </div>
              </fieldset>
            </div>

            <!-- REMOTE ACCOUNT CUSTOM KEY-->
            <fieldset class="form-group" ng-show="$ctrl.customKey">
              <div class="input-group">
                <span class="input-group-btn">
                  <label>{{ 'IMPORTANCE_TRANSFER_REMOTE_PUBLIC' | translate }}: </label>
                </span>
                <input type="text" class="form-control" ng-model="$ctrl.formData.remoteAccount" placeholder="0257b05f601ff829fdff84956fb5e3c65470a62375a1cc285779edd5ca3b42f6" ng-change="$ctrl.generateAddress()">
              </div>
            </fieldset>

            <!-- CUSTOM PUBLIC KEY GENERATED REMOTE ACCOUNT -->
            <div ng-show="$ctrl.customGeneratedRemote.length && $ctrl.customKey">
              <fieldset class="form-group">
                <div class="input-group">
                  <span class="input-group-btn">
                    <label>{{ 'IMPORTANCE_TRANSFER_REMOTE_ACCOUNT' | translate }}</label>
                  </span>
                  <input type="text" class="form-control" ng-model="$ctrl.customGeneratedRemote" readOnly>
                </div>
              </fieldset>
            </div>

            <!-- CHECKBOX TO ALLOW ENTERING OF PUBLIC KEY -->
            <div class="row checkboxes">
              <div class="col-md-6">
                <fieldset class="form-group">
                  <input id="box5" type="checkbox" ng-model="$ctrl.customKey" ng-change="$ctrl.updateRemoteAccount()" ng-disabled="!$ctrl.common.password.length">
                  <label for="box5">{{ 'IMPORTANCE_TRANSFER_CUSTOM_KEY' | translate }}</label>
                </fieldset>
              </div>
            </div>

            <!-- ACTIVATE OR DEACTIVATE DELEGATED HARVESTING -->
            <fieldset class="form-group">
              <div class="input-group">
                <span class="input-group-btn">
                  <label>{{ 'IMPORTANCE_TRANSFER_MODE_SELECT' | translate }}: </label>
                </span>
                <select class="form-control" ng-options="mode.key as mode.name for mode in $ctrl.modes" ng-model="$ctrl.formData.mode" ng-disabled="!$ctrl.common.password.length">
                  <option value="" disabled>{{ 'IMPORTANCE_TRANSFER_MODE_SELECT' | translate }}</option>
                </select>
              </div>
            </fieldset>

            <!-- Transaction fee -->
            <fee-input tx="$ctrl.preparedTransaction" is-multisig="$ctrl.formData.isMultisig"></fee-input>

            <!-- SEND FIELD -->
            <button class="btn btn-success pull-xs-right"
              type="submit" ng-disabled="$ctrl.okPressed || !$ctrl.common.password.length || $ctrl.formData.remoteAccount.length !== 64" ng-click="$ctrl.send()">
              <i class="fa fa-send"></i> {{ 'GENERAL_SEND' | translate }}
            </button>
          </div>
        </div>

        <div ng-show="$ctrl.showDelegatedKeys">
          <div class="panel-heading">
              <h3>{{ 'IMPORTANCE_TRANSFER_DELEGATED_KEYS' | translate }}</h3>
            </div>
            <div class="panel-body">
            <!-- DELEGATED PUBLIC KEY -->
              <fieldset class="form-group">
                <div class="input-group">
                  <span class="input-group-btn">
                    <label>{{ 'ACCOUNT_DELEGATED_PUBLIC' | translate }}: </label>
                  </span>
                  <input type="text" class="form-control" ng-model="$ctrl.remoteAccountPublicView" readOnly>
                </div>
              </fieldset>
            <!-- DELEGATED PRIVATE KEY -->
              <fieldset class="form-group">
                <div class="input-group">
                  <span class="input-group-btn">
                    <label>{{ 'ACCOUNT_DELEGATED_PRIVATE_KEY' | translate }}: </label>
                  </span>
                  <input type="text" class="form-control" ng-model="$ctrl.remotePrivateKey" readOnly>
                </div>
              </fieldset>
            </div>
        </div>

        <div ng-show="$ctrl.showStartStop">
          <div class="panel-heading">
            <h3>{{ 'ACCOUNT_START_STOP_HARVESTING' | translate }}</h3>
          </div>

          <div class="panel-body" ng-show="$ctrl.isActivator && $ctrl.multisigData.meta.remoteStatus === 'ACTIVE'">

            <p class="bg-info" ng-show="$ctrl.formData.multisigAccount.vestedBalance / 1000000 > 10000">
              <span ng-bind-html="'ACCOUNT_HARVESTING_NOTE' | translate"></span>
            </p>

            <div class="form-group" ng-show="$ctrl.formData.multisigAccount.vestedBalance / 1000000 > 10000">
              <div class="input-group">
              <input class="form-control" type="text" ng-model="$ctrl.customHarvestingNode" ng-style="!$ctrl.isCustomNode ? {'display': 'none'} : ''" ng-model-options="{ debounce: 500 }" ng-disabled="$ctrl.delegatedData.meta.status === 'UNLOCKED'" ng-change="$ctrl.checkNode();$ctrl.updateDelegatedData();"/>
              <select class="form-control" ng-model="$ctrl.harvestingNode" ng-options="node as (node.host | toHostname) for node in $ctrl.nodes track by node.host" ng-style="$ctrl.isCustomNode ? {'display': 'none'} : $ctrl.showSupernodes ? {'display': 'none'} : ''" ng-disabled="$ctrl.delegatedData.meta.status === 'UNLOCKED'" ng-change="$ctrl.checkNode();$ctrl.updateDelegatedData();"><option value="" disabled selected>{{ 'ACCOUNT_HARVESTING_NODE_SELECT' | translate }}</option></select>
               <select class="form-control" ng-model="$ctrl.harvestingNode" ng-options="node as (node.host | toHostname) for node in $ctrl.nodes track by node.host" ng-style="$ctrl.isCustomNode ? {'display': 'none'} : !$ctrl.showSupernodes ? {'display': 'none'} : ''" ng-disabled="$ctrl.delegatedData.meta.status === 'UNLOCKED'" ng-change="$ctrl.checkNode();$ctrl.updateDelegatedData();"><option value="" disabled selected>{{ 'ACCOUNT_HARVESTING_NODE_SELECT' | translate }}</option></select>
                <span class="input-group-btn">
                  <button ng-class="!$ctrl.isCustomNode ? 'active' : ''" class="btn btn-primary" type="button" ng-click="$ctrl.isCustomNode = false;" title="{{ 'ACCOUNT_NODE_FROM_LIST' | translate}}"><i class="fa fa-cloud"></i></button>
                  <button ng-class="$ctrl.isCustomNode ? 'active' : ''" class="btn btn-primary" type="button" ng-click="$ctrl.isCustomNode = true;" title="{{'ACCOUNT_CUSTOM_NODE' | translate}}"><i class="fa fa-edit"></i></button>
                </span>
              </div>
              <button class="btn btn-success" type="button" ng-show="$ctrl.delegatedData.meta.status === 'LOCKED'" ng-disabled="!$ctrl.hasFreeSlots || !$ctrl.common.password.length" ng-click="$ctrl.startDelegatedHarvesting()" title="{{'ACCOUNT_HARVESTING_START' | translate}}" style="margin-top: 10px;width: 100%;"><i class="fa fa-play-circle-o"></i> {{ 'IMPORTANCE_TRANSFER_START_HARVESTING' | translate }}</button>
              <button class="btn btn-danger" type="button" ng-show="$ctrl.delegatedData.meta.status === 'UNLOCKED'" ng-click="$ctrl.stopDelegatedHarvesting()" title="{{'ACCOUNT_HARVESTING_STOP' | translate}}" ng-disabled="!$ctrl.common.password.length" style="margin-top: 10px;width: 100%;"><i class="fa fa-stop-circle-o"></i> {{ 'IMPORTANCE_TRANSFER_STOP_HARVESTING' | translate }}</button>
            </div>

            <p class="bg-info text-center" ng-show="!$ctrl.hasFreeSlots && $ctrl.delegatedData.meta.status === 'LOCKED' && $ctrl.formData.multisigAccount.vestedBalance  / 1000000 > 10000"><i class="fa fa-exclamation-triangle "></i> {{ 'ACCOUNT_HARVESTING_NO_SLOTS' | translate }}</p>
            <p class="bg-info" ng-show="$ctrl.formData.multisigAccount.vestedBalance / 1000000 < 10000"><i class="fa fa-exclamation-triangle "></i> {{ 'ACCOUNT_HARVESTING_BELOW_THRESHOLD' | translate }}</p>
          <!--</div>-->
          </div>
          <div class="panel-body" ng-show="!$ctrl.isActivator && $ctrl.multisigData.meta.remoteStatus === 'ACTIVE'">
            <p class="bg-info">{{ 'IMPORTANCE_TRANSFER_MULTISIG_NOT_INITIATOR' | translate }}</p>
          </div>
          <div class="panel-body" ng-show="$ctrl.multisigData.meta.remoteStatus === 'ACTIVATING'">
            <p class="bg-info"><i class="fa fa-exclamation-triangle "></i> {{ 'IMPORTANCE_TRANSFER_REMOTE_ACTIVATING' | translate }}</p>
          </div>
          <div class="panel-body" ng-show="$ctrl.multisigData.meta.remoteStatus === 'INACTIVE'">
            <p class="bg-info"><i class="fa fa-exclamation-triangle "></i> {{ 'IMPORTANCE_TRANSFER_REMOTE_INACTIVE' | translate }}</p>
          </div>
        </div>

      </div>
    </div>
  </div>
</div>

'''
'''--- src/app/modules/importanceTransfer/normal/importanceTransfer.config.js ---
function ImportanceTransferConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.importanceTransfer', {
            url: '/importance-transfer',
            controller: 'ImportanceTransferCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/importanceTransfer/normal/importanceTransfer.html',
            title: 'Manage delegated account'
        });

};

export default ImportanceTransferConfig;
'''
'''--- src/app/modules/importanceTransfer/normal/importanceTransfer.controller.js ---
import nem from 'nem-sdk';

class ImportanceTransferCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor($location, Wallet, Alert, $filter, DataStore, $timeout, AppConstants, $localStorage, Nodes) {
        'ngInject';

        //// Module dependencies region ////

        this._Alert = Alert;
        this._location = $location;
        this._Wallet = Wallet;
        this._$filter = $filter;
        this._DataStore = DataStore;
        this._$timeout = $timeout;
        this._storage = $localStorage;
        this._Nodes = Nodes;

        //// End dependencies region ////

        // Initialization
        this.init();
    }

    //// Module methods region ////

    /**
     * Initialize module properties
     */
    init() {
        // Form is an importance transfer transaction object
        this.formData = nem.model.objects.create("importanceTransferTransaction")(this._Wallet.currentAccount.child, 1);
        // Not using custom node by default
        this.isCustomNode = false;
        this.customHarvestingNode = "";
        // Get the harvesting endpoint from local storage or use default node
        this.harvestingNode = this._Nodes.getHarvestingEndpoint();
        // No node slots by default
        this.hasFreeSlots = false;
        // Set the right nodes according to Wallet network
        this.setNodes();
        // Show supernodes by default on mainnet or hide <select>
        this.showSupernodes = this._Wallet.network !== nem.model.network.data.mainnet.id ? false : true;
        // Initial delegated account data
        this.delegatedData = this._DataStore.account.delegated.metaData;
        // Prevent user to click twice on send when already processing
        this.okPressed = false;
        // Object to contain our password & private key data for importance transfer.
        this.common = nem.model.objects.get("common");
        // Object to contain our password & private key data to reveal delegated private key.
        this.commonDelegated =  nem.model.objects.get("common");
        this.commonDelegated.delegatedPrivateKey = "";
        // Object to contain our password & private key data to start/stop harvesting.
        this.commonHarvesting = nem.model.objects.get("common");
        // Modes
        this.modes = [{
            name: this._$filter('translate')('IMPORTANCE_TRANSFER_MODE_1'),
            key: 1
        }, {
            name: this._$filter('translate')('IMPORTANCE_TRANSFER_MODE_2'),
            key: 2
        }];
        // Not using custom public key by default
        this.customKey = false;
        // Store the prepared transaction
        this.preparedTransaction = {};
        // Update fee
        this.prepareTransaction();
        // Check node slots
        this.checkNode();
        // Update delegated data
        this.updateDelegatedData();
        // Arrange for hardware wallets
        this.arrangeHW();
    }

    /**
     * Set available nodes according to network
     */
    setNodes() {
        if(this._Wallet.network !== nem.model.network.data.mainnet.id) {
            this.nodes = this._Nodes.get();
        } else {
            this.nodes = [];
            // Get supernodes
            nem.com.requests.supernodes.all().then((data) => {
                this._$timeout(() => {
                    this.nodes = this._$filter('toEndpoint')(data.nodes);
                });
            },
            (err) => {
                this._$timeout(() => {
                    this._Alert.supernodesError();
                    // Return default nodes
                    this.nodes = this._$filter('toEndpoint')(nem.model.nodes.mainnet);
                });
            });
        }
    }

    /**
     * Create the remote for current account, if using hardware wallet
     */
    arrangeHW() {
        if ((this._Wallet.algo == "trezor" || this._Wallet.algo == "ledger") && !this._Wallet.currentAccount.child) {
            // Disable send button
            this.okPressed = true;

            this._Wallet.deriveRemote(this.common).then((res) => {
                this._$timeout(() => {
                    // Enable send button
                    this.okPressed = false;
                    this.formData.remoteAccount = this._Wallet.currentAccount.child;
                    this.prepareTransaction();
                }, 0)
            },
            (err) => {
                if (err === 'handledLedgerErrorSignal') {
                    return;
                } else {
                    this._$timeout(() => {
                        this._Alert.bip32GenerationFailed(err);
                         return;
                    }, 0);
                }
            });
        }
    }

    /**
     * Check node slots
     */
    checkNode() {
        this._Nodes.hasFreeSlots(this.isCustomNode ? this._Nodes.cleanEndpoint(this.customHarvestingNode) : this.harvestingNode).then((res) => {
            this._$timeout(() => {
                this.hasFreeSlots = res;
            });
        }, (err) => {
            this._$timeout(() => {
                this.hasFreeSlots = false;
            });
        });
    }

    /**
     * Prepare the transaction
     */
    prepareTransaction() {
        let entity = nem.model.transactions.prepare("importanceTransferTransaction")(this.common, this.formData, this._Wallet.network);
        // Store the prepared transaction
        this.preparedTransaction = entity;
        return entity;
    }

    /**
     * Update the remote account public key
     */
    updateRemoteAccount() {
        this.formData.remoteAccount = this.customKey ? '' : this._Wallet.currentAccount.child;
    }

    /**
     * Reveal the delegated private key
     */
    revealDelegatedPrivateKey() {
        // Get account private key or return
        if (!this._Wallet.decrypt(this.commonDelegated)) return this.okPressed = false;
        
        // Generate the bip32 seed for the new account
        this._Wallet.deriveRemote(this.commonDelegated).then((res) => {
            this._$timeout(() => {
                this.commonDelegated.delegatedPrivateKey = res.privateKey;
            }, 0)
        },
        (err) => {
            if (err === 'handledLedgerErrorSignal') {
                return;
            } else {
                this._$timeout(() => {
                    this._Alert.bip32GenerationFailed(err);
                    return;
                }, 0);
            }
        });
    }

    /**
     * Start delegated harvesting
     */
    startDelegatedHarvesting() {
        // Get account private key or return
        if (!this._Wallet.decrypt(this.commonHarvesting)) return this.okPressed = false;

        this._Wallet.deriveRemote(this.commonHarvesting).then((res) => {
            nem.com.requests.account.harvesting.start(this.harvestingNode, res.privateKey).then((data) => {
                this._$timeout(() => {
                    // Update delegated data
                    this.updateDelegatedData();
                    // Clean data
                    this.clearSensitiveData();
                });
            },
            (err) => {
                if (err === 'handledLedgerErrorSignal') {
                    return;
                } else {
                    this._$timeout(() => {
                        this._Alert.unlockError(err.data.message);
                        return;
                    });
                }
            });
        });
    }

    /**
     * Stop delegated harvesting
     */
    stopDelegatedHarvesting() {
        // Get account private key or return
        if (!this._Wallet.decrypt(this.commonHarvesting)) return this.okPressed = false;

        // Generate remote data of the account
        this._Wallet.deriveRemote(this.commonHarvesting).then((res) => {
            nem.com.requests.account.harvesting.stop(this.harvestingNode, res.privateKey).then((data) => {
                this._$timeout(() => {
                    // Check node slots
                    this.checkNode();
                    // Update delegated data
                    this.updateDelegatedData();
                    // Clean data
                    this.clearSensitiveData();
                });
            },
            (err) => {
                if (err === 'handledLedgerErrorSignal') {
                    return;
                } else {
                    this._$timeout(() => {
                        this._Alert.lockError(err.data.message);
                        return;
                    });
                }
            });
        });
    }

    /**
     * Update the delegated data and set chosen harvesting node if unlocked
     */
    updateDelegatedData() {
        if (this.isCustomNode) this.harvestingNode = this._Nodes.cleanEndpoint(this.customHarvestingNode);
        if (!this.harvestingNode) return;
        //
        nem.com.requests.account.data(this.harvestingNode, nem.model.address.toAddress(this._Wallet.currentAccount.child, this._Wallet.network)).then((data) => {
            this._$timeout(() => {
                this.delegatedData = data
                if (data.meta.status === "UNLOCKED") {
                    // Set harvesting node in local storage
                    this._Nodes.saveHarvestingEndpoint(this.harvestingNode);
                }
            });
        },
        (err) => {
            this._$timeout(() => {
                this._Alert.getAccountDataError(err.data.message);
                return;
            });
        });
    }

    /**
     * Reset the common objects
     */
    clearSensitiveData() {
        this.common = nem.model.objects.get("common");
        this.commonDelegated = nem.model.objects.get("common");
        this.commonDelegated.delegatedPrivateKey = "";
        this.commonHarvesting = nem.model.objects.get("common");
    }

    /**
     * Prepare and broadcast the transaction to the network
     */
    send() {
        // Disable send button
        this.okPressed = true;

        // Get account private key for preparation or return
        if (!this._Wallet.decrypt(this.common)) return this.okPressed = false;

        // Build the entity to serialize
        let entity = this.prepareTransaction();

        // Use wallet service to serialize and send
        this._Wallet.transact(this.common, entity).then(() => {
            this._$timeout(() => {
                // Enable send button
                this.okPressed = false;
                // Reset all
                this.init();
                return;
            });
        }, () => {
            this._$timeout(() => {
                // Delete private key in common
                this.common.privateKey = '';
                // Enable send button
                this.okPressed = false;
                return;
            });
        });
    }

    //// End methods region ////

}

export default ImportanceTransferCtrl;
'''
'''--- src/app/modules/importanceTransfer/normal/importanceTransfer.html ---
<div class="importance-transfer-page">
  <div class="container-fluid main">

    <div class="row">
      <div class="col-sm-10">
        <h2>{{ 'IMPORTANCE_TRANSFER_TITLE' | translate }}</h2>
      </div>
    </div>

    <div class="row">

      <div class="col-md-6 col-sm-12">
        <div class="panel-heading">
          <h3>{{ 'IMPORTANCE_TRANSFER_HARVESTING_PANEL' | translate }}</h3>
        </div>

        <div class="panel-body">
          <div class="row" style="margin-bottom: 20px;">
            <div class="col-md-3">
              <h5>{{ 'ACCOUNT_REMOTE_STATUS' | translate }}</h5>
               <span ng-show="$ctrl._DataStore.account.metaData.meta.remoteStatus === 'ACTIVE'" style="text-transform: uppercase;color: green;">{{ 'GENERAL_ACTIVE' | translate }}</span>
              <span ng-show="$ctrl._DataStore.account.metaData.meta.remoteStatus === 'INACTIVE'" style="text-transform: uppercase;color: red;">{{ 'GENERAL_INACTIVE' | translate }}</span>
              <span ng-show="$ctrl._DataStore.account.metaData.meta.remoteStatus === 'ACTIVATING'" style="text-transform: uppercase;">{{ 'GENERAL_ACTIVATING' | translate }}</span>
              <span ng-show="$ctrl._DataStore.account.metaData.meta.remoteStatus === 'DEACTIVATING'" style="text-transform: uppercase;">{{ 'GENERAL_DEACTIVATING' | translate }}</span>
              <span  ng-show="$ctrl._DataStore.account.metaData.meta.remoteStatus === 'REMOTE'" style="text-transform: uppercase;">{{ 'GENERAL_REMOTE' | translate }}</span>
            </div>
            <div class="col-md-3">
              <h5>{{ 'IMPORTANCE_TRANSFER_HARVESTING_STATUS' | translate }}</h5>
              <span ng-show="$ctrl.delegatedData.meta.status === 'UNLOCKED'" style="text-transform: uppercase;color: green;">{{ 'GENERAL_ACTIVE' | translate }}</span>
              <span ng-show="$ctrl.delegatedData.meta.status === 'LOCKED'" style="text-transform: uppercase;color: red;">{{ 'GENERAL_INACTIVE' | translate }}</span>
            </div>
            <div class="col-md-3">
              <h5>{{ 'ACCOUNT_VESTED_BALANCE' | translate }}</h5>
              <span>{{ ($ctrl._DataStore.account.metaData.account.vestedBalance | fmtNemValue)[0] }}.{{ ($ctrl._DataStore.account.metaData.account.vestedBalance | fmtNemValue)[1] }} <small><b>XEM</b></small></span>
            </div>
            <div class="col-md-3">
              <h5>{{ 'ACCOUNT_HARVESTED_BLOCKS' | translate }}</h5>
              <span>
                <span ng-show="$ctrl._DataStore.account.metaData.account.harvestedBlocks === 0">{{ 'IMPORTANCE_TRANSFER_NO_BLOCKS_HARVESTED' | translate }}</span>
                <span ng-show="$ctrl._DataStore.account.metaData.account.harvestedBlocks > 0">{{ $ctrl._DataStore.account.metaData.account.harvestedBlocks }}</span>
              </span>
            </div>
          </div>
          <hr>
          <div class="row">
             <button class="btn btn-success" style="margin-bottom: 5px;width: auto;" ng-click="$ctrl.showStartStop = false;$ctrl.showDelegatedKeys = false;$ctrl.showImportanceTransfer = true;">{{ 'IMPORTANCE_TRANSFER_ACTIVATE_DEACTIVATE_REMOTE' | translate }}</button>
             <button class="btn btn-success" style="margin-bottom: 5px;width: auto;" ng-disabled="$ctrl._DataStore.account.metaData.meta.remoteStatus === 'DEACTIVATING'" ng-click="$ctrl.showImportanceTransfer = false;$ctrl.showDelegatedKeys = false;$ctrl.showStartStop = true;">{{ 'ACCOUNT_START_STOP_HARVESTING' | translate }}</button>
             <button class="btn btn-success" style="margin-bottom: 5px;width: auto;" ng-click="$ctrl.showImportanceTransfer = false;$ctrl.showStartStop = false;$ctrl.showDelegatedKeys = true;">{{ 'IMPORTANCE_TRANSFER_SHOW_DELEGATED_KEYS' | translate }}</button>
          </div>
        </div>
      </div>

      <div class="col-md-6 col-sm-12">

        <div ng-show="$ctrl.showImportanceTransfer">
          <div class="panel-heading">
            <h3>{{ 'IMPORTANCE_TRANSFER_NAME' | translate }}</h3>
          </div>

        <div class="panel-body">

            <!-- REMOTE ACCOUNT CUSTOM KEY-->
            <fieldset class="form-group" ng-show="$ctrl.customKey">
              <div class="input-group">
                <span class="input-group-btn">
                  <label>{{ 'IMPORTANCE_TRANSFER_REMOTE_PUBLIC' | translate }}: </label>
                </span>
                <input type="text" class="form-control" ng-model="$ctrl.formData.remoteAccount" placeholder="0257b05f601ff829fdff84956fb5e3c65470a62375a1cc285779edd5ca3b42f6">
              </div>
            </fieldset>

            <!-- REMOTE ACCOUNT -->
            <fieldset class="form-group" ng-show="$ctrl.formData.remoteAccount.length === 64">
              <div class="input-group">
                <span class="input-group-btn">
                  <label>{{ 'IMPORTANCE_TRANSFER_REMOTE_ACCOUNT' | translate }}: </label>
                </span>
                <input type="text" class="form-control" value="{{$ctrl.formData.remoteAccount | fmtPubToAddress:$ctrl._Wallet.network}}" readOnly>
              </div>
            </fieldset>

            <!-- CHECKBOX TO ALLOW ENTERING OF PUBLIC KEY -->
            <div class="row checkboxes">
              <div class="col-sm-8">
                <fieldset class="form-group">
                  <input id="box5" type="checkbox" ng-model="$ctrl.customKey" ng-change="$ctrl.updateRemoteAccount()">
                  <label for="box5">{{ 'IMPORTANCE_TRANSFER_CUSTOM_KEY' | translate }}</label>
                </fieldset>
              </div>
            </div>

            <!-- ACTIVATE OR DEACTIVATE DELEGATED HARVESTING -->
            <fieldset class="form-group">
              <div class="input-group">
                <span class="input-group-btn">
                  <label>{{ 'IMPORTANCE_TRANSFER_MODE_SELECT' | translate }}: </label>
                </span>
                <select class="form-control" ng-options="mode.key as mode.name for mode in $ctrl.modes" ng-model="$ctrl.formData.mode">
                  <option value="" disabled>{{ 'IMPORTANCE_TRANSFER_MODE_SELECT' | translate }}</option>
                </select>
              </div>
            </fieldset>

            <!-- Transaction fee -->
            <fee-input tx="$ctrl.preparedTransaction" is-multisig="$ctrl.formData.isMultisig"></fee-input>

            <!-- Password Field -->
            <password-input common="$ctrl.common"></password-input>

            <!-- SEND FIELD -->
            <button class="btn btn-success pull-xs-right"
              type="submit" ng-disabled="$ctrl.okPressed || ($ctrl._Wallet.algo !== 'trezor' && $ctrl._Wallet.algo !== 'ledger') && !$ctrl.common.password.length || $ctrl.formData.remoteAccount.length !== 64" ng-click="$ctrl.send()">
              <i class="fa fa-send"></i> {{ 'GENERAL_SEND' | translate }}
            </button>
        </div>
        </div>

        <div ng-show="$ctrl.showDelegatedKeys">
          <div class="panel-heading">
            <h3>{{ 'IMPORTANCE_TRANSFER_DELEGATED_KEYS' | translate }}</h3>
          </div>
          <div class="panel-body">
          <!-- DELEGATED PUBLIC KEY -->
            <fieldset class="form-group">
              <div class="input-group">
                <span class="input-group-btn">
                  <label>{{ 'ACCOUNT_DELEGATED_PUBLIC' | translate }}: </label>
                </span>
                <input type="text" class="form-control" ng-model="$ctrl._Wallet.currentAccount.child" readOnly>
              </div>
            </fieldset>
            <!-- DELEGATED PRIVATE KEY -->
            <fieldset class="form-group">
              <div class="input-group">
                <span class="input-group-btn short">
                  <label ng-show="!$ctrl.commonDelegated.delegatedPrivateKey.length">{{ 'FORM_PASSWORD' | translate }}:</label>
                  <label ng-show="$ctrl.commonDelegated.delegatedPrivateKey.length">{{ 'ACCOUNT_DELEGATED_PRIVATE_KEY' | translate }}</label>
                </span>
                <input class="form-control" type="password" ng-model="$ctrl.commonDelegated.password" placeholder="{{ 'IMPORTANCE_TRANSFER_PRIVATE_KEY_PLACEHOLDER' | translate }}" ng-show="!$ctrl.commonDelegated.delegatedPrivateKey"/>
                <input class="form-control" ng-show="$ctrl.commonDelegated.delegatedPrivateKey" ng-model="$ctrl.commonDelegated.delegatedPrivateKey" readOnly></input>
                <span class="input-group-btn showHide">
                  <button class="btn btn-primary" type="button" ng-show="!$ctrl.commonDelegated.delegatedPrivateKey.length" ng-click="$ctrl.revealDelegatedPrivateKey()" title="{{ 'ACCOUNT_PRIVATE_KEY_SHOW' | translate }}">
                    <i class="fa fa-plus"></i>
                  </button>
                  <button class="btn btn-danger" type="button" ng-show="$ctrl.commonDelegated.delegatedPrivateKey.length" ng-click="$ctrl.clearSensitiveData()" title="{{ 'GENERAL_CLEAR_ALL' | translate }}">
                    <i class="fa fa-minus"></i>
                  </button>
                </span>
              </div>
            </fieldset>
          </div>
        </div>

        <div ng-show="$ctrl.showStartStop">
        <!-- START/STOP HARVESTING -->
        <div class="panel-heading">
          <h3>{{ 'ACCOUNT_START_STOP_HARVESTING' | translate }}</h3>
        </div>

        <div class="panel-body" ng-show="$ctrl._DataStore.account.metaData.meta.remoteStatus === 'ACTIVE'">

        <p class="bg-info" ng-show="$ctrl._DataStore.account.metaData.account.vestedBalance / 1000000 > 10000">
            <span ng-bind-html="'ACCOUNT_HARVESTING_NOTE' | translate"></span>
        </p>

        <div class="form-group" ng-show="$ctrl._DataStore.account.metaData.account.vestedBalance / 1000000 > 10000">

          <!-- Password Field -->
          <password-input common="$ctrl.commonHarvesting"></password-input>

          <div class="input-group">
          <input class="form-control" type="text" ng-model="$ctrl.customHarvestingNode" ng-style="!$ctrl.isCustomNode ? {'display': 'none'} : ''" ng-model-options="{ debounce: 500 }" ng-disabled="$ctrl.delegatedData.meta.status === 'UNLOCKED'" ng-change="$ctrl.checkNode();$ctrl.updateDelegatedData();"/>
          <select class="form-control" style="width:100%;" ng-model="$ctrl.harvestingNode" ng-options="node as (node.host | toHostname) for node in $ctrl.nodes track by node.host" ng-style="$ctrl.isCustomNode ? {'display': 'none'} : $ctrl.showSupernodes ? {'display': 'none'} : ''" ng-disabled="$ctrl.delegatedData.meta.status === 'UNLOCKED'" ng-change="$ctrl.checkNode();$ctrl.updateDelegatedData();"><option value="" disabled selected>{{ 'ACCOUNT_HARVESTING_NODE_SELECT' | translate }}</option></select>
           <select class="form-control" style="width:100%;" ng-model="$ctrl.harvestingNode" ng-options="node as (node.host | toHostname) for node in $ctrl.nodes track by node.host" ng-style="$ctrl.isCustomNode ? {'display': 'none'} : !$ctrl.showSupernodes ? {'display': 'none'} : ''" ng-disabled="$ctrl.delegatedData.meta.status === 'UNLOCKED'" ng-change="$ctrl.checkNode();$ctrl.updateDelegatedData();"><option value="" disabled selected>{{ 'ACCOUNT_HARVESTING_NODE_SELECT' | translate }}</option></select>
            <span class="input-group-btn">
              <button ng-class="!$ctrl.isCustomNode ? 'active' : ''" class="btn btn-primary" type="button" ng-click="$ctrl.isCustomNode = false;" title="{{ 'ACCOUNT_NODE_FROM_LIST' | translate}}"><i class="fa fa-cloud"></i></button>
              <button ng-class="$ctrl.isCustomNode ? 'active' : ''" class="btn btn-primary" type="button" ng-click="$ctrl.isCustomNode = true;" title="{{'ACCOUNT_CUSTOM_NODE' | translate}}"><i class="fa fa-edit"></i></button>
            </span>
          </div>
          <button class="btn btn-success" type="button" ng-show="$ctrl.delegatedData.meta.status === 'LOCKED'" ng-disabled="!$ctrl.hasFreeSlots || ($ctrl._Wallet.algo !== 'trezor' && $ctrl._Wallet.algo !== 'ledger') && !$ctrl.commonHarvesting.password.length" ng-click="$ctrl.startDelegatedHarvesting()" title="{{'ACCOUNT_HARVESTING_START' | translate}}" style="margin-top: 10px;width: 100%;"><i class="fa fa-play-circle-o"></i> {{ 'IMPORTANCE_TRANSFER_START_HARVESTING' | translate }}</button>
          <button class="btn btn-danger" type="button" ng-show="$ctrl.delegatedData.meta.status === 'UNLOCKED'" ng-click="$ctrl.stopDelegatedHarvesting()" title="{{'ACCOUNT_HARVESTING_STOP' | translate}}" ng-disabled="($ctrl._Wallet.algo !== 'trezor' && $ctrl._Wallet.algo !== 'ledger') && !$ctrl.commonHarvesting.password.length" style="margin-top: 10px;width: 100%;"><i class="fa fa-stop-circle-o"></i> {{ 'IMPORTANCE_TRANSFER_STOP_HARVESTING' | translate }}</button>
        </div>

        <p class="bg-info text-center" ng-show="!$ctrl.hasFreeSlots && $ctrl.delegatedData.meta.status === 'LOCKED' && $ctrl._DataStore.account.metaData.account.vestedBalance / 1000000 > 10000"><i class="fa fa-exclamation-triangle "></i> {{ 'ACCOUNT_HARVESTING_NO_SLOTS' | translate }}</p>
        <p class="bg-info" ng-show="$ctrl._DataStore.account.metaData.account.vestedBalance / 1000000 < 10000"><i class="fa fa-exclamation-triangle "></i> {{ 'ACCOUNT_HARVESTING_BELOW_THRESHOLD' | translate }}</p>
      </div>
      <div class="panel-body" ng-show="$ctrl._DataStore.account.metaData.meta.remoteStatus === 'ACTIVATING'">
        <p class="bg-info"><i class="fa fa-exclamation-triangle "></i> {{ 'IMPORTANCE_TRANSFER_REMOTE_ACTIVATING' | translate }}</p>
      </div>
      <div class="panel-body" ng-show="$ctrl._DataStore.account.metaData.meta.remoteStatus === 'INACTIVE'">
        <p class="bg-info"><i class="fa fa-exclamation-triangle "></i> {{ 'IMPORTANCE_TRANSFER_REMOTE_INACTIVE' | translate }}</p>
      </div>
    </div>

    </div>

    </div>
  </div>
</div>

'''
'''--- src/app/modules/invoice/index.js ---
import angular from 'angular';

// Create the module where our functionality can attach to
let invoiceModule = angular.module('app.invoice', []);

// Include our UI-Router config settings
import InvoiceConfig from './invoice.config';
invoiceModule.config(InvoiceConfig);

// Controllers
import InvoiceCtrl from './invoice.controller';
invoiceModule.controller('InvoiceCtrl', InvoiceCtrl);

export default invoiceModule;

'''
'''--- src/app/modules/invoice/invoice.config.js ---
function InvoiceConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.invoice', {
            url: '/invoice',
            controller: 'InvoiceCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/invoice/invoice.html',
            title: 'Create an invoice'
        });

};

export default InvoiceConfig;
'''
'''--- src/app/modules/invoice/invoice.controller.js ---
import nem from 'nem-sdk';
import Helpers from '../../utils/helpers';

class InvoiceCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Wallet, Alert, DataStore, $timeout) {
        'ngInject';

        //// Module dependencies region ////

        this._Alert = Alert;
        this._Wallet = Wallet;
        this._DataStore = DataStore;
        this._$timeout = $timeout;
        this._Helpers = Helpers;

        //// End dependencies region ////

        // Initialization
        this.init();
    }

    //// Module methods region ////

    /**
     * Initialize module properties
     */
    init() {
        // Form is a transfer transaction object, pre-set recipient if any from state parameter
        this.formData = nem.model.objects.create("transferTransaction")(this._Wallet.currentAccount.address);
        // No mosaics
        this.isMosaicTransfer = false;
        this.formData.mosaics = null;
        // No multisig
        this.formData.multisigAccount = '';
        // Prevent user to click twice on send when already processing
        this.okPressed = false;
        //
        // Character counter
        this.charactersLeft = 1024;
        // Object to contain our password & private key data
        this.common = nem.model.objects.get("common");
        // Store the prepared transaction
        this.preparedTransaction = {};
        // Update the fee in view
        this.prepareTransaction();
    }

    /**
     * Prepare the transaction
     */
    prepareTransaction() {
        // Create a new object to not affect the view
        let cleanTransferTransaction = nem.model.objects.get("transferTransaction");

        // Clean recipient
        cleanTransferTransaction.recipient = this.formData.recipient.toUpperCase().replace(/-/g, '');

        // Check entered amount
        if(!nem.utils.helpers.isTextAmountValid(this.formData.amount)) {
            return this._Alert.invalidAmount();
        } else {
            // Set cleaned amount
            cleanTransferTransaction.amount = nem.utils.helpers.cleanTextAmount(this.formData.amount);
        }

        // Set the message
        cleanTransferTransaction.message = this.formData.message;
        cleanTransferTransaction.messageType = 1;

        // No mosaics
        cleanTransferTransaction.mosaics = null;

        // Prepare
        let entity = nem.model.transactions.prepare("transferTransaction")(this.common, cleanTransferTransaction, this._Wallet.network);

        // Set the entity for fees in view
        this.preparedTransaction = entity;

        // Update the number of characters left in message
        this.charactersLeft = this.preparedTransaction.message.payload.length ? 1024 - (this.preparedTransaction.message.payload.length / 2) : 1024;

        // Return prepared transaction
        return entity;
    }

    //// End methods region ////

}

export default InvoiceCtrl;
'''
'''--- src/app/modules/invoice/invoice.html ---
<div class="transferTransaction-page">
  <div class="container-fluid main">
    <div class="row">
      <div class="col-sm-8">
        <h2>{{ 'CREATE_INVOICE_TITLE' | translate }}</h2>
      </div>
    </div>
    <div class="row">
      <div class="col-lg-6 col-md-12">
        <div class="panel-heading">
          <div class="tabDescription">
            <span>{{ 'TRANSFER_TRANSACTION_NAME' | translate }}</span>
          </div>
          <!-- Tabbed modes -->
          <ul class="nav nav-tabs"></ul>
        </div>
        <!-- Transaction form -->
        <div class="panel-body">
          <!-- Invoice recipient -->
          <fieldset class="form-group">
            <div class="input-group">
              <span class="input-group-btn">
                <label>{{ 'GENERAL_TO' | translate }}: </label>
              </span>
              <input class="form-control form-control-lg" type="text" ng-model="$ctrl.formData.recipient" readOnly/>
            </div>
          </fieldset>
          <!-- Amount of XEM to send -->
          <fieldset class="form-group">
            <div class="input-group">
              <span class="input-group-btn">
                  <label>{{'GENERAL_AMOUNT' | translate}}: </label>
                </span>
              <div class="form-control formFloat">
                <input type="text" ng-model="$ctrl.formData.amount" maxlength="17" ng-change="$ctrl.prepareTransaction();" />
                <label class="floatRight"><small>XEM</small></label>
              </div>
            </div>
          </fieldset>
          <!-- Message Field -->
          <fieldset class="form-group">
            <div class="input-group">
              <span class="input-group-btn message">
                <label>{{'FORM_MESSAGE_PLACEHOLDER' | translate}}: </label>
              </span>
              <textarea class="form-control" ng-model="$ctrl.formData.message" placeholder="{{'FORM_MESSAGE_PLACEHOLDER' | translate}}" rows="4" ng-change="$ctrl.prepareTransaction();" ng-class="$ctrl.charactersLeft < 0 ? 'has-error' : ''"></textarea>
              <p style="text-align:right;border-bottom:1px solid rgba(15, 122, 225, 0.6);background-color: #eee;"><span style="margin-right: 5px;"><b>{{ 'GENERAL_CHARACTERS_LEFT' | translate }}</b>: {{ $ctrl.charactersLeft }}</span></p>
            </div>
          </fieldset>
        </div>
      </div>
      <!-- Invoice -->
      <invoice form-data="$ctrl.preparedTransaction"></invoice>
    </div>
  </div>
</div>
'''
'''--- src/app/modules/languages/cn.js ---
function ChineseProvider($translateProvider) {
    'ngInject'

    $translateProvider.translations('cn', {

        // HEADER COMPONENT
        WALLET_NAME_1: 'NEM',
        WALLET_NAME_2: 'Wallet',
        APP_NAME_SUB: '安全界面正在连接NEM平台',
        HEADER_LOGIN_BUTTON: '登录',
        HEADER_SIGNUP_BUTTON: '注册',
        HEADER_DASHBOARD: '仪表板',
        HEADER_WALLET: '钱包',
        HEADER_SERVICES: '服务',
        HEADER_EXPLORER: '浏览器',
        HEADER_NODE: '节点',
        HEADER_ACCOUNT: '帐户',
        HEADER_LANG_TITLE: '语言',
        HEADER_LANG_SELECT: '选择语言',
        HEADER_NODE_BLOCK_HEIGHT: '区块高',
        HEADER_NODE_CURRENT_NODE: '当前节点',
        HEARDER_NODE_LIST: '节点清单',
        HEADER_NODE_SELECT: '选择节点',
        HEADER_NODE_CUSTOM: '自定义节点',
        HEADER_NODE_CONNECT: '连接',
        HEADER_NODE_CUSTOM_INFO: '节点IP或域名',
        HEADER_NODE_CUSTOM_TOOLTIP: '这里输入你自己的NIS节点',
        HEADER_PURGE: '清理',
        HEADER_PURGE_MESSAGE: '请确认清理功能将删除您本地保存的全部信息。如确认，点击OK，本地存储的所有钱包信息将被全部删除，请确认所有钱包均已做好备份，确保资金安全。',
        HEADER_OFFLINE_TX: '准备离线交易',
        HEADER_RELEASE_TX: '发布交易',

        // FOOTER COMPONENT
        FOOTER_POWERED_BY_1: '基于',
        FOOTER_POWERED_BY_2: 'NEM技术实现.',
        FOOTER_VERSION: '版本',

        // DASHBOARD MODULE
        DASHBOARD_TITLE: '仪表盘',
        DASHBOARD_UNCONFIRMED: '未确认',
        DASHBOARD_CONFIRMED: '已确认',
        DASHBOARD_HARVEST_INCOME_TITLE: '最近创建的25个块的收获',
        DASHBOARD_HARVEST_INCOME_NOTE: '仅包含费用高于0的块',
        DASHBOARD_HARVEST_INCOME_MESSAGE: '最近25个区块中无费用',
        DASHBOARD_NEWS_TITLE: '最新消息',
        DASHBOARD_HARVESTED_BLOCKS_TITLE: '已收获块',
        DASHBOARD_HARVESTED_BLOCKS_TH: '已获取费用',
        DASHBOARD_MARKET_INFO_TITLE: '市场信息',
        DASHBOARD_MARKET_INFO_CAP: '总市值',
        DASHBOARD_MARKET_INFO_PRICE: '价格',
        DASHBOARD_MARKET_INFO_VOLUME: '24小时交易量',
        DASHBOARD_MARKET_INFO_CHANGES: '换手率',
        DASHBOARD_MARKET_INFO_CHANGES_1H: '1小时',
        DASHBOARD_MARKET_INFO_CHANGES_24H: '24小时',
        DASHBOARD_MARKET_INFO_CHANGES_7D: '7天',
        DASHBOARD_MARKET_INFO_NOTE: '<a href="http://coinmarketcap.com/" target="_blank">CoinMarketCap</a> 数据每5分钟更新一次',
        DASHBOARD_NOTICE_1:  '欢迎来到 Nano Wallet Beta!',
        DASHBOARD_NOTICE_2: '请 <a href="https://github.com/NemProject/NanoWallet" target="_blank">在这里报告问题</a>',
        DASHBOARD_NOTICE_3: 'NEM team 不对由于在主网上使用此应用程序而导致的任何资金损失负责，以及我们建议您首先在测试网上进行测试，以便先熟悉NanoWallet. 用户自己负责其资金并具有其私钥。.',
        DASHBOARD_NOTICE_4: '如果您不确定您的所有资金是否安全，请勿使用该网络。我们建议在纸上写下私钥并将其存放在安全的地方。 此外，您可以将您的账户导入Lightwallet/NCC.',
        DASHBOARD_NOTICE_5: '感谢您的参与!',

        // GENERAL
        GENERAL_BLOCK: '块',
        GENERAL_BLOCKS: '分段',
        GENERAL_NO_RESULTS: '无结果',
        GENERAL_ACCOUNT: '账户',
        GENERAL_ACCOUNTS: '帐户',
        GENERAL_MULTISIG_ACCOUNT: '多重签名账户',
        GENERAL_AMOUNT: '量',
        GENERAL_MESSAGE: '消息',
        GENERAL_DATE: '日期',
        GENERAL_TAB_NORMAL: '普通',
        GENERAL_TAB_SEND: '发送',
        GENERAL_TAB_MULTISIG: '多重签名',
        GENERAL_TOTAL: '总量',
        GENERAL_REMOVE: '删除',
        GENERAL_MOSAIC: '马赛克',
        GENERAL_FEE: '费用',
        GENERAL_LEVY: '征费',
        GENERAL_LEVY_TYPES: '征费类型',
        GENERAL_LEVY_TYPES_NOTE: 'I - 固定费用; II - 百分比方式',
        GENERAL_LEVY_TYPE_1: '不变的费用',
        GENERAL_LEVY_TYPE_2: '利率',
        GENERAL_SEND: '发送',
        GENERAL_TO: '目标',
        GENERAL_HASH: '哈希',
        GENERAL_HASH_FUNCTION: '哈希函数',
        GENERAL_NAME: '名称',
        GENERAL_INFORMATION: '信息',
        GENERAL_ADDRESS: '地址',
        GENERAL_PUBLIC_KEY: '公钥',
        GENERAL_PRIVATE_KEY: '私钥',
        GENERAL_CLEAR_ALL: '全部清除',
        GENERAL_CLOSE: '关闭',
        GENERAL_COMING_SOON: '即将推出',
        GENERAL_NONE: '无',
        GENERAL_DROPBOX: '拖拽文件至此，点击或浏览',
        GENERAL_NETWORK_FEE: '网络费用',
        GENERAL_YES: '是',
        GENERAL_NO: '否',
        GENERAL_TAGS: '标签',
        GENERAL_SINK: 'Sink',
        GENERAL_SINK_ADDRESS: 'Sink 地址',
        GENERAL_STORAGE: '存储',
        GENERAL_REASON: '原因',
        GENERAL_TRANSACTION_HASH: '事务哈希',
        GENERAL_TRANSACTION_ID: '事务ID',
        GENERAL_OWNER: '属主',
        GENERAL_RESULTS: '结果集',
        GENERAL_RESULT: '结果',
        GENERAL_STATUS: '状态',
        GENERAL_LOCATION: '位置',
        GENERAL_ACTION: '行动',
        GENERAL_ACTIONS: '行动',
        GENERAL_ADD: '添加',
        GENERAL_ADDED: '已添加',
        GENERAL_REMOVED: '已删除',
        GENERAL_COSIGNATORY: '共签人',
        GENERAL_COSIGNATORIES: '共签人集',
        GENERAL_PROCESSING: '处理中',
        GENERAL_ACCOUNT_LABEL: '账户标签',
        GENERAL_OPTIONAL: '(可选)',
        GENERAL_ERROR: '错误',
        GENERAL_EXAMPLE: '例',
        GENERAL_PUBLIC: '公开',
        GENERAL_NAMESPACES: '命名空间门',
        GENERAL_NAMESPACE: '命名空间',
        GENERAL_SUB_NAMESPACES: '命名空间门子类别',
        GENERAL_SUB_NAMESPACE: '命名空间子类别e',
        GENERAL_MOSAICS: '马赛克',
        GENERAL_VALUE: '价钱',
        GENERAL_CONNECTION_ERROR: '发生错误，无论节点关闭还是脱机',
        GENERAL_HISTORY: '历史',
        GENERAL_REVEAL: '揭示',
        GENERAL_QR: 'QR代码',
        GENERAL_UPDATE:  '更新',
        GENERAL_UNKNOWN: '不明',
        GENERAL_IMPORTANCE: '重要性',
        GENERAL_TRANSACTIONS: '交易',
        GENERAL_REGISTER: '注册',
        GENERAL_CREATE: '创建',
        GENERAL_RENEW: '更新',
        GENERAL_CHARACTERS_LEFT: '剩余字符',
        GENERAL_CURRENCY: '货币',
        GENERAL_EDIT: '编辑',
        GENERAL_SEND_XEM: '发送 XEM',
        GENERAL_ACTIVE: '活性',
        GENERAL_INACTIVE: '待用',
        GENERAL_ACTIVATING: '激活',
        GENERAL_DEACTIVATING: '停用',
        GENERAL_REMOTE: '远程',
        GENERAL_WARNING: '警告',
        GENERAL_SCORE: '得分',
        GENERAL_LENGTH: '长度',
        GENERAL_GO_BACK: '回去',
        GENERAL_NEXT: '下一个',
        GENERAL_START: '开始',
        GENERAL_ALIAS: '别号',
        GENERAL_CONTACTS: '往来',
        GENERAL_ENCRYPTED: '加密',
        GENERAL_UNENCRYPTED: '未加密',
        GENERAL_HEXADECIMAL: '十六进制',
        GENERAL_SELECT_ACCOUNT: '选择帐户',
        GENERAL_INVOICE: '账单',

        // HOME MODULE
        HOME_UNSUPPORTED_BROWSER: '对不起，但你不能在这里安全地使用NanoWallet...',
        HOME_RECOMMENDED_BROWSERS: '推荐的浏览器:',
        HOME_FEATURE_STAND_BY: '将光标置于特征上以显示信息.',
        HOME_FEATURE_1: '只需1分钟的时间，几乎立即发送和接收XEM !',

        // TRANSFER TRANSACTION MODULE
        TRANSFER_TRANSACTION_TITLE: '发送和接收',
        TRANSFER_TRANSACTION_NAME: '传输事务',
        TRANSFER_TRANSACTION_MULTISIG_NAME: '多重签名传输事务',
        TRANSFER_TRANSACTION_INVOICE: '创建账单',
        TRANSFER_TRANSACTION_TAB_INVOICE: '账单',
        TRANSFER_TRANSACTION_MOSAIC_TRANSFER: '马赛克传输',
        TRANSFER_TRANSACTION_ATTACH_MOSAIC: '附加马赛克',
        TRANSFER_TRANSACTION_ATTACH: '附加',
        TRANSFER_TRANSACTION_MOSAICS_ATTACHED: '马赛克加入完成',
        TRANSFER_TRANSACTION_ENCRYPT_MESSAGE: '加密消息',
        TRANSFER_TRANSACTION_MESSAGE_TYPE: '消息类型',

        // TRANSACTION LINES
        LINE_TX_DETAILS_FROM: '来自',
        LINE_TX_DETAILS_FROM_MULTISIG: '来自多重签名',
        LINE_TX_DETAILS_WAITING: '事务正在等待成立',
        LINE_TX_DETAILS_NEED_SIG: '需要共签人签名',
        LINE_TX_DETAILS_NEED_SIG_2: '这个事务需要您的签名',
        //LINE_TX_DETAILS_MESS_ENC: '加密',
        LINE_TX_DETAILS_MESS_DEC: '解密',
        LINE_TX_DETAILS_HASH: 'Hash',
        LINE_TX_DETAILS_DEC_MESS: '解密消息',
        LINE_TX_DETAILS_MOS_ATTACHED: '已附加马赛克',
        LINE_TX_DETAILS_LEVY_TYPE_1: '常量',
        LINE_TX_DETAILS_LEVY_TYPE_2: '百分比方式',
        LINE_TX_DETAILS_ISSUER: '创建者',
        LINE_TX_DETAILS_MULTISIG_FEE: '多重签名费用',
        LINE_TX_DETAILS_MULTISIG_HASH: '多重签名hash',
        LINE_TX_DETAILS_COSIGN: '签名事务',
        LINE_TX_DETAILS_SIGNATURES: '签名',
        LINE_TX_DETAILS_COSIGNATORY: '共签人',
        LINE_TX_DETAILS_TIMESTAMP: '时间戳',
        LINE_TX_DETAILS_MOS_CREATE: '创建马赛克',
        LINE_TX_DETAILS_MOS_EDIT: '编辑马赛克',
        LINE_TX_DETAILS_NS_CREATE: '创建命名空间',
        LINE_TX_DETAILS_NS_NEW_SUB: '新建下属命名空间',
        LINE_TX_DETAILS_NS_ROOT: '根命名空间',
        LINE_TX_DETAILS_RECIPIENT: '接受者',
        LINE_TX_DETAILS_MULTISIG_CREATE: '创建多重签名账户',
        LINE_TX_DETAILS_MULTISIG_EDIT: '编辑多重签名账户',
        LINE_TX_DETAILS_MULTISIG_MOD: '修改',
        LINE_TX_DETAILS_MULTISIG_MIN_COSIG: '最小签署人数',
        LINE_TX_DETAILS_MULTISIG_AFFECTED: '相关账号',

        // IMPORTANCE MODULE
        IMPORTANCE_TRANSFER_NAME: '重要性传输事务',
        IMPORTANCE_TRANSFER_MULTISIG_NAME: '多重签名重要性传输事务',
        IMPORTANCE_TRANSFER_MODE: '模式',
        IMPORTANCE_TRANSFER_MODE_1: '激活',
        IMPORTANCE_TRANSFER_MODE_2: '取消激活',
        IMPORTANCE_TRANSFER_TITLE: '管理远程账户',
	      IMPORTANCE_TRANSFER_MULTISIGNATURE_TITLE: '管理委托的多重签名账户',
        IMPORTANCE_TRANSFER_CUSTOM_KEY: '使用远程公钥',
        IMPORTANCE_TRANSFER_MODE_SELECT: '选择模式',
        IMPORTANCE_TRANSFER_REMOTE_ACCOUNT: '远程账户',
        IMPORTANCE_TRANSFER_REMOTE_PUBLIC: '远程公钥',
        IMPORTANCE_TRANSFER_INFO_PART_1: '重要性传输事务产生后，需要等待6小时以完成激活。激活完成后，您将可以选择一个节点用于委托收获，点击账户页的Harvesting按钮开始收获。',
        IMPORTANCE_TRANSFER_INFO_PART_2: '如果您的账户属备份导入，请确认这个账户并未激活委托收获。如果已激活，您需要先使用旧公钥执行解除激活。',
        IMPORTANCE_TRANSFER_INFO_PART_MULTISIG: '对于多重签名账户，只有发起重要性转移操作的共同签字人才能启动/停止块的收集. 对于多重签名账户，只有发起重要性转移交易的合同可以启动和停止收获.',
        IMPORTANCE_TRANSFER_NO_BLOCKS_HARVESTED: '没有组装的块',
        IMPORTANCE_TRANSFER_HARVESTING_PANEL: '收集面板',
        IMPORTANCE_TRANSFER_REMOTE_ACTIVATING: '您必须等到删除的状态更改为“激活”才能开始授权的块集合.',
        IMPORTANCE_TRANSFER_REMOTE_INACTIVE: '您必须在左侧面板中发送交易以激活您的远程帐户.',
        IMPORTANCE_TRANSFER_MULTISIG_NOT_INITIATOR: '您不是激活已删除帐户的签署者, 所以您不能启动/停止代理块的集合.',
        IMPORTANCE_TRANSFER_PRIVATE_KEY_PLACEHOLDER: '显示委托帐户的私钥',
        IMPORTANCE_TRANSFER_DELEGATED_KEYS: '委托帐户密钥',
        IMPORTANCE_TRANSFER_HARVESTING_STATUS: '收获状态',
        IMPORTANCE_TRANSFER_START_HARVESTING: '开始授权收获',
        IMPORTANCE_TRANSFER_STOP_HARVESTING: '停止授权收割',
        IMPORTANCE_TRANSFER_ACTIVATE_DEACTIVATE_REMOTE: '激活/取消激活委托的帐户',
        IMPORTANCE_TRANSFER_SHOW_DELEGATED_KEYS: '显示委托的帐户密钥',

        // CREATE MOSAIC MODULE
        MOSAIC_DEFINITION_TITLE: '创建马赛克',
        MOSAIC_DEFINITION_NAME: '马赛克定义事务',
        MOSAIC_DEFINITION_MULTISIG_NAME: '多重签名马赛克定义事务',
        MOSAIC_DEFINITION_QUANTITY: '量',
        MOSAIC_DEFINITION_DIV: '可分割性',
        MOSAIC_DEFINITION_TOTAL_SUPPLY: '总供给',
        MOSAIC_DEFINITION_FINAL_NAME: '全名',
        MOSAIC_DEFINITION_DESCRPITION: '描述',
        MOSAIC_DEFINITION_INITIAL_SUPPLY: '初始供应',
        MOSAIC_DEFINITION_MUTABLE_SUPPLY: '可变供应量',
        MOSAIC_DEFINITION_TRANSFERABLE: '可传输',
        MOSAIC_DEFINITION_PROPERTIES: '属性',
        MOSAIC_DEFINITION_MOSAIC_PROPERTIES: '马赛克属性',
        MOSAIC_DEFINITION_REQUIRES_LEVY: '需要征费',
        MOSAIC_DEFINITION_LEVY_LIMITATION: 'UI限制： 当前仅允许已拥有的马赛克作为征费。',
        MOSAIC_DEFINITION_LEVY_SELECT_MOSAIC: '选择征费马赛克',
        MOSAIC_DEFINITION_LEVY_ADDRESS: '征费地址',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE: '征费类型',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_1: '绝对值',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2: '百分比值',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_1_NOTE: '选择绝对值，将会产生的常量征费',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE: '选择百分比，将会产生现行的征费为：',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE_2: '发送中',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE_3: '将包含征费',
        MOSAIC_DEFINITION_PARENT: '父命名空间',
        MOSAIC_DEFINITION_INFORMATION_TITLE: '创建马赛克',
        MOSAIC_DEFINITION_INFORMATION: '想要了解更多关于马赛克的信息?',
        MOSAIC_DEFINITION_INFORMATION_1: '马赛克允许最长32个字符：',
        MOSAIC_DEFINITION_INFORMATION_2: '第一个字符必须是英文字母。',
        MOSAIC_DEFINITION_INFORMATION_3: '描述必须在512个字符以内。描述文字中所使用的字符无限制。',
        MOSAIC_DEFINITION_INFORMATION_4: '马赛克的行为可由属性方式定制:',
        MOSAIC_DEFINITION_INFORMATION_5: '供给量需要以整数个单元马赛克描述，不可使用小数。 供应量必须在限制区间0到90亿内。',
        MOSAIC_DEFINITION_INFORMATION_6: '分割性将决定马赛克的最小单位可以精确到几位小数。当分割性为3时，这个马赛克可以被定义为最小0.001。分割性需要在0~6区间取值.',
        MOSAIC_DEFINITION_INFORMATION_7: '如果勾选，将允许以后变更马赛克的供应量，否则，将不能变更。',
        MOSAIC_DEFINITION_INFORMATION_8: '允许传输马赛克至创建者以外的账户。如果可传输性未勾选，则只有马赛克的属主作为发送者或者接收者的情形才能生成事务。如果勾选，马赛克将可以被传输至任何账户。',
        MOSAIC_DEFINITION_INFORMATION_9: '如果勾选，创建者可以向事务的发送者征收费用。(创建者可以指定任何有效账户作为费用接收账户)。征费的状态如下:',
        MOSAIC_DEFINITION_INFORMATION_10: '征费所用的马赛克类型，任何现有的马赛克都可以指定。',
        MOSAIC_DEFINITION_INFORMATION_11: '征费的接收者，可以使用任何有效账户。',
        MOSAIC_DEFINITION_INFORMATION_12: '征费量。根据以上类型的选择，指定百分比或绝对值。',
        MOSAIC_DEFINITION_INFORMATION_13: '支持百分比和绝对值两种征费类型。',
        MOSAIC_DEFINITION_INFORMATION_14: '征费已选择使用绝对值，它将不取决于传输的量。',
        MOSAIC_DEFINITION_INFORMATION_15: '征费已选择为百分比。费用将随传输的量线性增加。',
        MOSAIC_DEFINITION_INFORMATION_16: '在NEM区块链上发送马赛克需要收费. 确切的费用根据其总数和在交易期间发送的数量计算.对于任何<b>小型商业马赛克</ b>的转让佣金为0.05 XEM. 这是一个可分割度为0且金额≤10000的马赛克.',
        MOSAIC_DEFINITION_INFORMATION_17: '如果您拥有100％的供应量，则可以通过使用相同的“namespace：mosaic”名称再次发送创建事务来覆盖所有马赛克属性.',

        // EDIT MOSAIC MODULE
        MOSAIC_SUPPLY_CHANGE_TITLE: '变更马赛克供应量',
        MOSAIC_SUPPLY_CHANGE_NAME: '马赛克供应量变更事务',
        MOSAIC_SUPPLY_CHANGE_MULTISIG_NAME: '多重签名马赛克供应量变更事务',
        MOSAIC_SUPPLY_CHANGE_SELECT: '选择马赛克',
        MOSAIC_SUPPLY_CHANGE_TYPE: '变更类型',
        MOSAIC_SUPPLY_CHANGE_TYPE_1: '创建',
        MOSAIC_SUPPLY_CHANGE_TYPE_2: '删除',
        MOSAIC_SUPPLY_CHANGE_SUPPLY: '供应量',
        MOSAIC_SUPPLY_CHANGE_CURRENT_SUPPLY: '现有供应量',
        MOSAIC_SUPPLY_CHANGE_AMOUNT: '变更量',
        MOSAIC_SUPPLY_CHANGE_RES_SUPPLY: '变更后供应量',

        // NAMESPACE MODULE
        NAMESPACE_PROVISION_TITLE: '创建命名空间和子命名空间',
        NAMESPACE_PROVISION_NAME: '命名空间部署事务',
        NAMESPACE_PROVISION_MULTISIG_NAME: '多重签名命名空间部署事务',
        NAMESPACE_PROVISION_PARENT: '父命名空间 (不包括3层)',
        NAMESPACE_PROVISION_NEW_ROOT: '创建新的根命名空间',
        NAMESPACE_PROVISION_PARENT: '父命名空间',
        NAMESPACE_PROVISION_NEW_ROOT: '新的根命名空间',
        NAMESPACE_PROVISION_NS: '称空间',
        NAMESPACE_PROVISION_NS_NAME: '命名空间名',
        NAMESPACE_PROVISION_RESTRICTIONS: '命名空间限制',
        NAMESPACE_PROVISION_INFORMATION_1: '命名空间所使用的长度和字符均存在限制。根命名空间长度限制为16个字符以内，二级命名空间长度限制为64个字符以内。有效的字符有：',
        NAMESPACE_PROVISION_INFORMATION_2: '命名空间的首个字符必须使用英文字母。 \'alice\'是有效命名空间，而 \'1alice\'不是。部分字符串被保留，不可用于命名空间的申请。不被允许的命名空间包含字符串如下：',
        NAMESPACE_PROVISION_INFORMATION_3: '这个清单将可能会增加内容，请注意查看。 \'user.alice\' 和 \'alice.user\' 都不被NEM命名空间系统允许申请。命名空间最多可以被定义为三层，如\'gimre.metals.silver\' 有效，而 \'gimre.metals.silver.coin\' 无效。',

        // RENEW NAMESPACE MODULE
        RENEW_NS_TITLE: '更新命名空间',
        RENEW_NS_NONE: '没有要更新的命名空间',
        RENEW_NS_INFORMATION_TITLE: '更新命名空间',
        RENEW_NS_INFORMATION_TITLE_1: '费用',
        RENEW_NS_INFORMATION_TITLE_2: '根命名空间',
        RENEW_NS_INFORMATION_TITLE_3: '更新期',
        RENEW_NS_INFORMATION_1: '续订命名空间的花费与注册新命名空间的花费相同- 100XEM.',
        RENEW_NS_INFORMATION_2: '只有根命名空间需要更新. 所有子空间命名空间将在根命名空间扩展后自动扩展.',
        RENEW_NS_INFORMATION_3: '根据租赁协议，与命名空间签订的合同最长可达一年. 合同可以在其到期日之前或之后的一个月续约.',
        RENEW_NS_INFORMATION_4: '如果命名空间没有及时扩展，则在其下创建的名称和马赛克的所有子空间都将丢失.',
        RENEW_NS_ALERT_PART_1: '<b>警告 !</b> 命名空间:',
        RENEW_NS_ALERT_PART_2: '将在不到一个月内到期 ! ',
        RENEW_NS_ALERT_PART_3: '收到更多信息，请访问<b>命名空间扩展页面</ b>。.',

        // ACCOUNT MODULE
        ACCOUNT_TITLE: '账户',
        ACCOUNT_ACCOUNT_INFORMATION: '账户信息',
        ACCOUNT_IMPORTANCE_SCORE: '重要性得分',
        ACCOUNT_VESTED_BALANCE: '归属余额',
        ACCOUNT_HARVESTING: '收获',
        ACCOUNT_REMOTE_STATUS: '远程状态',
        ACCOUNT_DELEGATED_PUBLIC: '委托公钥',
        ACCOUNT_HARVESTED_BLOCKS: '已收获块',
        ACCOUNT_START_STOP_HARVESTING: '开始/停止委托收获',
        ACCOUNT_HARVESTING_NOTE: '如果您已经<b>使用纳米钱包</b>开始了收获，且您的本地数据执行过清理，请使用原电脑关闭委托以还原收获状态。 (您未停止收获).',
        ACCOUNT_HARVESTING_NODE_SELECT: '挑选一个用于收获的节点',
        ACCOUNT_HARVESTING_START: '开启委托收获',
        ACCOUNT_HARVESTING_STOP: '停止委托收获',
        ACCOUNT_HARVESTING_NO_SLOTS: '您选取的节点没有空闲收获席位，请选择其他',
        ACCOUNT_HARVESTING_BELOW_THRESHOLD: '您需要10000XEM归属余额以开始委托收获',
        ACCOUNT_ACCOUNT_SELECT: '选择其他账户',
        ACCOUNT_ACCOUNT_SELECT_LABEL: '使用其他账户',
        ACCOUNT_ACCOUNT_SELECT_BTN_NOTE: '变更账户',
        ACCOUNT_WALLET_KEYS: '钱包和密钥',
        ACCOUNT_ADD_NEW_ACCOUNT: '添加新账号',
        ACCOUNT_ADD_NEW_ACCOUNT_BTN: '向钱包中添加新账号',
        ACCOUNT_PRIVATE_KEY_NOTE: '您的私钥掌管着您账号的最高权限。请确保它被<b><u>离线</u></b>安全存储：存储加密的.wlt文件，写在纸张上缩入保险柜，以图片代替文档，或下载<b><u>导出的二维码</u></b>妥善保管。',
        ACCOUNT_PRIVATE_KEY_SHOW: '显示私钥',
        ACCOUNT_EXPORT_MOBILE: '导出至移动钱包',
        ACCOUNT_INFO_QR_BTN: '账户二维码',
        ACCOUNT_WALLET_QR_BTN: 'NEMpay二维码',
        ACCOUNT_WALLET_QR_BTN_2: '移动钱包二维码',
        ACCOUNT_BACKUP_WALLET: '备份钱包',
        ACCOUNT_BACKUP_WALLET_NOTE: '备份您的钱包<b><u>非常重要</u></b>否则您将可能丢失账户',
        ACCOUNT_BACKUP_WALLET_DOWNLOAD: '下载钱包',
        ACCOUNT_INFO_QR_TITLE: '账户信息二维码',
        ACCOUNT_WALLET_QR_NOTE: '这个二维码将被用于未推出的NEMpay移动应用',
        ACCOUNT_WALLET_QR_ANDROID_IOS_TITLE: '移动端钱包二维码',
        ACCOUNT_ADD_NEW_ACCOUNT_WARNING: '所有的账户均使用BIP32由主私钥获取，使用您的主私钥和密码您可以列出所有已导入其他账户信息。 <br><b><u>强烈建议</u></b>添加新账户后再次备份您的新账户私钥',
        ACCOUNT_CUSTOM_NODE: '使用自定义节点',
        ACCOUNT_NODE_FROM_LIST: '使用列表中的节点',
        ACCOUNT_DELEGATED_PRIVATE_KEY: '委托私钥',
        ACCOUNT_NO_PUBLIC_KEY: '您需要发布一条交易来获取公钥',
        ACCOUNT_SHOW_ON_TREZOR_BTN: '在Trezor上显示',
        ACCOUNT_SHOW_ON_LEDGER_BTN: '在Ledger上显示',

        // PORTAL MODULE
        PORTAL_TITLE: '服务',
        PORTAL_MULTISIG_TITLE: '多重签名或多用户账户',
        PORTAL_MULTISIG_TEXT: '多重签名账户中提供可编辑的链上协议，是存储资金，实现共有账户的最佳实现方式',
        PORTAL_MULTISIG_BTN_1: '转换账户为多重签名',
        PORTAL_MULTISIG_BTN_2: '编辑已有协议',
        PORTAL_MULTISIG_BTN_3: '签署多重签名事务',
        PORTAL_HARVESTING_TITLE: '委托收获',
        PORTAL_HARVESTING_TEXT: '委托收获是可以实现远程在线“挖矿”而不必保持原账号开启的途径',
        PORTAL_HARVESTING_BTN_1: '管理远程账户',
        PORTAL_HARVESTING_BTN_2: '管理多重签名远程账户',
        PORTAL_CHANGELLY_TITLE: 'Changelly实时交易',
        PORTAL_CHANGELLY_TEXT: '使用Changelly服务，以当前最优定价实时交易XEM!',
        PORTAL_CHANGELLY_BTN: '购买XEM',
        PORTAL_NS_TITLE: '命名空间和子空间',
        PORTAL_NS_TEXT: '命名空间是存储马赛克的域名，每个命名空间在区块链中唯一，可在多层子命名空间上定义和认证马赛克。',
        PORTAL_NS_BTN: '创建命名空间',
        PORTAL_MOSAIC_TITLE: '马赛克',
        PORTAL_MOSAIC_TEXT: 'NEM马赛克是具备丰富属性和功能的智能资产。如需创建马赛克，必须为账户置备根命名空间。',
        PORTAL_MOSAIC_BTN_1: '创建马赛克',
        PORTAL_MOSAIC_BTN_2: '编辑马赛克',
        PORTAL_APOSTILLE_TITLE: 'Apostille',
        PORTAL_APOSTILLE_TEXT: '使用NEM Apostille服务创建区块链公证时间戳,跟踪和审计文件认证状态。',
        PORTAL_APOSTILLE_BTN_1: '创建',
        PORTAL_APOSTILLE_BTN_2: '审计',
        PORTAL_ADDRESS_BOOK_TEXT: ' 将标签分配给地址以轻松跟踪联系人.',
        PORTAL_ADDRESS_BOOK_BTN: '地址簿管理',
        PORTAL_INVOICE_TEXT: '创建账单以通过QR码共享',

        // ADDRESS BOOK MODULE
        ADDRESS_BOOK_TITLE: '地址簿”',
        ADDRESS_BOOK_LIST: '联系人',
        ADDRESS_BOOK_NAVIGATION: '导航',
        ADDRESS_BOOK_NEW: '新联系人',
        ADDRESS_BOOK_EDIT: '修改联系人',
        ADDRESS_BOOK_REMOVE: '删除联系人',
        ADDRESS_BOOK_NEW_BTN: '添加',
        ADDRESS_BOOK_EDIT_BTN: '保存',
        ADDRESS_BOOK_REMOVE_BTN: '删除',
        ADDRESS_BOOK_EXPORT_BTN: '导出地址簿',
        ADDRESS_BOOK_IMPORT_BTN: '导入地址簿',
        ADDRESS_BOOK_CONTACT_LABEL: '标签',
        ADDRESS_BOOK_ACCOUNT_ADDRESS: '帐户地址',
        ADDRESS_BOOK_ACTIONS: '行动',
        ADDRESS_BOOK_CONFIRM_DELETE: '确认从地址簿中删除联系人',

        // EXPLORER MODULE NAV
        EXPLORER_NAV_HOME: '主页',
        EXPLORER_NAV_NSM: '命名空间和马赛克',
        EXPLORER_NAV_APOSTILLES: 'Apostilles',

        // EXPLORER HOME MODULE
        EXPLORER_HOME_TITLE: '浏览 - 主页',
        EXPLORER_HOME_NS: '您的命名空间',
        EXPLORER_HOME_MOSAICS: '您的马赛克',
        EXPLORER_HOME_NS_MULTISIG: '多重签名账户所属命名空间',
        EXPLORER_HOME_MOSAICS_LEVY: '征费马赛克',

        // EXPLORER NAMESPACES AND MOSAICS
        EXPLORER_NS_MOS_TITLE: '浏览器 - 名称和马赛克空间',
        EXPLORER_NS_MOS_SELECT_MOS: '所选马赛克的细节',
        EXPLORER_NS_MOS_SEARCH: '搜索命名空间',

        // EXPLORER APOSTILLES MODULE
        EXPLORER_APOSTILLES_TITLE: '浏览 - 公证',
        EXPLORER_APOSTILLES_YOURS: '您的公证',
        EXPLORER_APOSTILLES_PUBLIC: '公有池',
        EXPLORER_APOSTILLES_NO_NTY: '未加载nty文件，请点击这里检查并导入。',

        // ACCOUNT EXPLORER
        ACCOUNTS_EXPLORER_TITLE: '浏览器 - 帐号',
        ACCOUNTS_EXPLORER_SEARCH: '搜索',

        // APOSTILLE HISTORY MODULE
        APOSTILLE_HISTORY_TITLE: 'Apostille 历史',
        APOSTILLE_HISTORY_BTN_TRANSFER: '转让/分割财产',
        APOSTILLE_HISTORY_BACKUP: '公证数据备份',
        APOSTILLE_HISTORY_PURGE: '清理公证资料',

        // CREATE APOSTILLE MODULE
        APOSTILLE_CREATE_TITLE: '创建Apostille',
        APOSTILLE_CREATE_HELP: '想知道更多关于 apostille?',
        APOSTILLE_TRANSACTION_NAME: '公证事务',
        APOSTILLE_TRANSACTION_MULTISIG_NAME: '多重签名公证事务',
        APOSTILLE_KEEP_PRIVATE: '需保密',
        APOSTILLE_USE_DEDICATED: '使用专一账户',
        APOSTILLE_FILES_TO_NOTARIZE: '需要公证的文件',
        APOSTILLE_REJECTED: '拒绝',
        APOSTILLE_FILE_HASH: '文件hash',
        APOSTILLE_PRIVATE: '私有',
        APOSTILLE_FILENAME: '文件名',
        APOSTILLE_NAME_TOO_LONG: '文件名过长，最多允许40个字符。',
        APOSTILLE_MAX_NUMBER: '最大的一批公证文件数为25',
        APOSTILLE_INFORMATION_TITLE: '创建 Apostille',
        APOSTILLE_INFORMATION_1: '每个文件的上传均以在左栏的选项为准自动处理。您可以添加文件，变更类型或添加其他属性。您也可以切换至多重签名标签页添加更多文件.',
        APOSTILLE_INFORMATION_2: '"<b>保密机制</b>" 您文件的hash都会被您的私钥加密，并发送至一个分层账户。以这种方式，除了你以外的任何人都无法获取接受认证的信息或认证本身。',
        APOSTILLE_INFORMATION_3: '使用左窗格中安装的设置自动处理每个下载的文件.您可以添加新文件，更改设置，然后使用不同参数添加更多文件.您也可以切换到多重签名选项卡并添加更多文件.',
        APOSTILLE_INFORMATION_4: '如果需要两方或多方核准的功能,公证可存放于一个具备n-of-n 多重签名合约的账户中.',
        APOSTILLE_INFORMATION_5: '对于选择了“私人，传输和更新”选项的多重签名合同中的帐户，签名发起人的私钥用于对哈希进行签名并创建分层账户, 而不是多重签名的母账户.',
        APOSTILLE_INFORMATION_6: '分层账户是一个特殊帐户，由文件名称的哈希创建，然后使用您的私钥签名.在此过程中创建的哈希用于创建第二个私钥. 该私钥在文件的块中标记; 此技术属区块链应用创新，仅在Apostille中存在. ',
        APOSTILLE_INFORMATION_7: '特殊的分层帐户允许您存储文件的原始哈希并将其更新到特殊帐户.如果选择<b>公共<b />，交易将转到公共账户（默认）.',
        APOSTILLE_INFORMATION_8: '交易完成后，下载档案. 存档包含您的签名文件，此文件包含Apostille证书以及新的或更新的* .nty文件，文件名中存在NEM线程中跟踪您的时间戳记.',
        APOSTILLE_NO_NTY: '没有加载nty文件，请点击这里导入或自动生成。',
        APOSTILLE_IMPORT_FILES: '导入文件',
        APOSTILLE_CREATE_TEXT: '创建字符文档',
        APOSTILLE_ENTER_TEXT: '输入需要公证的信息',
        APOSTILLE_DOCUMENT_TITLE: '文件名',
        APOSTILLE_DROPBOX_MESSAGE: '选择文件之前，请输入您的密码和所需的标签',
        APOSTILLE_DROPBOX_MESSAGE_2: '选择文件之前，请输入您的密码',

        // AUDIT APOSTILLE MODULE
        APOSTILLE_AUDIT_TITLE: '审计公证',
        APOSTILLE_AUDIT_CHOOSE_NODE: '选择节点',
        APOSTILLE_AUDIT_CHOOSE_NODE_NOTE: '只有部分节点可以查阅所有的事务历史(NIS中默认关闭这一选项)。', //
        APOSTILLE_AUDIT_WRONG_FORMAT: '这个文件不符Apostille认证格式!',
        APOSTILLE_AUDIT_FAIL_NO_PUBLIC_KEY: '认证失败，所有者没有公钥。',
        APOSTILLE_AUDIT_SUCCESS: '文件认证成功！',
        APOSTILLE_AUDIT_FAIL: '认证失败！',
        APOSTILLE_AUDIT_WAITING: '公证事务正等待确认！',
        APOSTILLE_AUDIT_NOT_FOUND: '未发现事务，请查验它是否正在等待确认，否则这项公证不存在。',
        APOSTILLE_AUDIT_ERROR_UNCONFIRMED: '获取未确认数据时错误发生，事务不存在。',
        APOSTILLE_AUDIT_ERROR_SIGNER: '获取签署者信息发生错误',
        APOSTILLE_AUDIT_ERROR_SIGNATURE: '确认错误，签名确认中发生故障！',
        APOSTILLE_AUDIT_INFORMATION_1: '待审计文件必须以<b>Apostille格式</b>存在',
        APOSTILLE_AUDIT_INFORMATION_2: '您可通过文件名确认文件：',
        //APOSTILLE_AUDIT_NON_SIGNED: '未签名范例:',
        //APOSTILLE_AUDIT_SIGNED: '已签名范例:',
        APOSTILLE_AUDIT_FILES: '审核文件',
        APOSTILLE_AUDIT_FORMAT_EXAMPLE: 'Apostille 格式示例',
        APOSTILLE_AUDIT_REMOVE_RECORDS: '本地删除记录',

        // APOSTILLE MESSAGE MODULE
        APOSTILLE_MESSAGE_TITLE: '发送消息给公证账户',
        APOSTILLE_MESSAGE_NS_BRAND: '在品牌中使用我的命名空间',
        APOSTILLE_MESSAGE_ADD_MOSAIC: '添加马赛克',
        APOSTILLE_NTY_ACCOUNT: '公证帐户',
        APOSTILLE_REQUEST_MESSAGE: '请求消息',
        APOSTILLE_CREATE_MESSAGE_REQUEST: '创建消息请求',

        // TRANSFER APOSTILLE OWNLERSHIP MODULE
        APOSTILLE_TRANSFER_TITLE: '转让或分离所apostille有权 ',

        // UPADTE APOSTILLE MODULE
        APOSTILLE_UPDATE_TITLE: '更新apostille',

        // ERROR ALERTS
        ALERT_MISSING_FORM_DATA: '请完整填写表格！',
        ALERT_ERROR_WALLET_DOWNLOAD: '无法下载钱包，钱包不存在！',
        ALERT_PASSWORDS_NOT_MATCHING: '您提供的密码和密钥串不匹配！',
        ALERT_INVALID_KEY_FOR_ADDR: '您提供的私钥与地址不匹配！',
        ALERT_NO_WALLET_LOADED: '您无法在未登录钱包状态下访问仪表盘',
        ALERT_WALLET_NAME_EXISTS: '同名钱包已存在！',
        ALERT_INVALID_WALLET_FILE: '您导入的文件并非钱包文件！',
        ALERT_NO_NODE_SET: '请确认并输入合规节点名！',
        ALERT_INVALID_CUSTOM_NODE: '您的自定义节点名不合规！',
        ALERT_INVALID_WEBSOCKET_PORT: '自定义节点的端口不合规！',
        ALERT_MIJIN_DISABLED: '猕迅网络当前未开放服务，请选择其他网络！',
        ALERT_GET_NS_BY_ID_ERROR: '获取命名空间信息错误，原因： ',
        ALERT_GET_ACCOUNT_DATA_ERROR: '获取账户信息错误，原因：',
        ALERT_ERROR_OCCURRED: '错误发生！ ',
        ALERT_INVALID_ADDR_FOR_NETWORK: '地址与本网规范不符',
        ALERT_INVALID_PASSWORD: '您输入的密码不正确！',
        ALERT_COSIG_ALREADY_IN_LIST: '共签人在列表中已存在！',
        ALERT_COSIGNATORY_HAS_NO_PUBLIC: '共签人账户需要在加入前已发送至少1个事务以获取私钥！',
        ALERT_MULTISIG_HAS_NO_PUBLIC: '多重签名账户需要在加入前已发送至少1个事务以获取私钥！',
        ALERT_COSIG_CANNOT_BE_MULTISIG: '您所选择的带转换账户是其他多重签名账户的共签人，这样的转换无法进行。',
        ALERT_NO_NS_OWNED: '账户不拥有这个命名空间，请重新创建或使用别的账户执行.',
        ALERT_UNLOCKED_INFO_ERROR: '获取解锁信息错误',
        ALERT_LOCK_ERROR: '锁定账户错误，原因: ',
        ALERT_UNLOCK_ERROR: '解锁账户错误，原因: ',
        ALERT_SUPERNODES_ERROR: '获取超级节点数据错误！',
        ALERT_INVALID_NTY_FILE: '您所提供的文件不是合规的nty文件！',
        ALERT_CREATE_WALLET_FAILED: '创建钱包失败，原因: ',
        ALERT_REQUEST_FAILED: '请求失败，原因: ',
        ALERT_DERIVATION_FROM_SEED_FAILED: '从种子获取账户失败，原因: ',
        ALERT_BIP32_GENERATION_FAILED: '生成bip32数据失败，原因：',
        ALERT_NO_WALLET_DATA: '错误，空白的钱包数据！',
        ALERT_CANNOT_LOGIN_WITHOU_WALLET: '错误，无法在无钱包状态下登录！',
        ALERT_NO_WALLET_TO_SET: '错误，无法设置当前钱包为空白！',
        ALERT_INVALID_WALLET_INDEX: '错误，所选账户索引不正确！',
        ALERT_NO_CURRENT_WALLET: '错误，当前钱包不存在时无法设置钱包账户！',
        ALERT_ALREADY_MULTISIG: '所选账户已经是多重签名账户！',
        ALERT_INVALID_MODIFICATION_ARRAY: '一个多重签名账户不能作为自身的共签人，请检查并更换！',
        ALERT_GET_MARKET_INFO_ERROR: '获取市场信息失败！',
        ALERT_MULTISIG_CANNOT_BE_COSIG: '多重签名账户无法设为共同签署人！',
        ALERT_PURGE_CANCELLED: '清理已取消！',
        ALERT_MAINNET_DISABLED: '当前版本禁止主网络使用',
        ALERT_EMPTY_DECODED_MSG: '错误，无解密信息！',
        ALERT_INVALID_NS_NAME: '命名空间名不合规！',
        ALERT_INVALID_MOSAIC_NAME: '马赛克名不合规！',
        ALERT_MOSAIC_DESCRIPTION: '马赛克描述不合规！',
        //ALERT_GET_INCOMING_TXES_ERROR: '接收事务错误，请检查网络或更换节点后再次尝试',
        ALERT_GET_INCOMING_TXES_ERROR: '检索传入事务时发生错误，原因是: ',
        ALERT_GET_MOSAICS_DEFINITIONS_ERROR: '获取特定马赛克出错，原因: ',
        ALERT_GET_SUB_NS_ERROR: '获取某个子空间时出错，原因: ',
        ALERT_GET_MOSAICS_ERROR: '获取马赛克错误，原因: ',
        ALERT_GET_TRANSACTIONS_ERROR: '错误获取交易，原因: ',
        ALERT_INVALID_ADDRESS_BOOK_FILE: '该文件不是 *.adb格式 !',
        ALERT_INVALID_ADDRESS: '指定的地址无效 !',
        ALERT_INVALID_AMOUNT: '指定的金额无效 !',
        ALERT_INVALID_PRIVATE_KEY: '私人密钥无效 !',
        ALERT_FILE_SIZE_ERROR: ' 太大，最大大小为100 MB',
        ALERT_MESSAGE_DECODE_KEY_ERROR: '解密邮件时出错，因为该帐户在网络上没有可见的公钥',
        ALERT_FETCH_TIME_SYNC_ERROR: '检索网络时间时发生错误 !',
        ALERT_MULTISIG_MIN_SIGNATURE: '多重签名账户至少需要一个最小签名',
        ALERT_BTC_MARKET_ERROR: '尝试获取比特币价格时出错',
        ALERT_COSIG_REMOVAL_LIMIT: '一次只能有一个共享资源被删除',
        ALERT_MULTISIG_MIN_SIGNATURE_INVALID: '最小签名无效',
        ALERT_INSUFFICIENT_BALANCE: '操作平衡不够',
        ALERT_VOTING_ERROR: '投票无效',
        ALERT_BRAIN_PASSWORD_TOO_SHORT: '密码短语必须至少包含40个字符!',
        ALERT_NODE_SEEMS_OFFLINE: '节点似乎离线，请选择另一个节点',
        ALERT_WEAK_PASSPHRASE: '密码的安全分数必须至少为3',
        ALERT_BRAIN_WALLET_UPGRADE: '你的大脑钱包似乎很脆弱 ! 所有脑袋必须使用至少40个字符的密码.<br>我们建议您从注册页面创建一个新钱包，并将资金转入其中.<br>更多信息 <a href="https://forum.nem.io/t/2791" target="_blank"><u>here</u></a>.',
        ALERT_RECIPIENT_PUBLIC_KEY: '收件人没有公开密钥对网络可见的',
        ALERT_ENCRYPT_MULTISIG: '无法通过多会话帐户发送加密邮件',
        ALERT_EXCHANGE_NEEDS_MESSAGE: '收件人是交换钱包，因此它需要一条消息才能正确记入您的帐户，请仔细阅读交换存款说明 !',
        ALERT_ACCOUNT_ALREADY_IN_ADDRESS_BOOK: '联系人已经存在于地址簿中!',
        ALERT_MAX_MOSAIC_SUPPLY: '最大马赛克供应量为 9\'000\'000\'000',
        ALERT_GET_MOSAIC_SUPPLY_ERROR: '获取马赛克供应时出错，原因: ',
        ALERT_ENCRYPTED_MSG_OFFLINE: '在离线交易中未启用加密消息',

        // SUCCESS ALERTS
        ALERT_CREATE_WALLET_SUCCESS: '钱包成功创建和加载！',
        ALERT_SUCCESS_PURGE: '本地存储成功清理!',
        ALERT_SUCCESS_LOGOUT: '退出登录成功！',
        ALERT_LOAD_WALLET_SUCCESS: '钱包加载成功！',
        ALERT_TRANSACTION_SUCCESS: '事务发送成功！',
        ALERT_GENERATE_ACCOUNT_SUCCESS: '账户创建成功，请勿遗忘下载您创建的钱包文件 ！',
        ALERT_UPGRADE_SUCCESS: '钱包升级成功！',
        ALERT_SIGNATURE_SUCCESS: '事务已成功签署！',
        ALERT_NTY_FILE_SUCCESS: '成功加载nty文件！',
        ALERT_INCOMING_TX_FROM: '接收事务，来源',
        ALERT_ADDRESS_BOOK_FILE_SUCCESS: '地址簿已成功导入 !',
        ALERT_VOTING_SUCCESS: '语音消息发送成功',
        ALERT_POLL_CREATION_SUCCESS: '投票成功创建',
        ALERT_COPY_SIGNED_TX_SUCCESS: '签名的交易已复制 !',

        // CONVERT ACCOUNT TO MULTISIG
        AGGREGATE_MODIFICATION_TITLE: '变更账户至多重签名',
        AGGREGATE_MODIFICATION_NAME: '共有账户变更',
        AGGREGATE_MODIFICATION_MULTISIG_NAME: '多重签名账户变更事务',
        AGGREGATE_ACCOUNT_SELECT_TITLE: '可转换账户',
        AGGREGATE_ACCOUNT_SELECT: '选择一个待转换账户',
        AGGREGATE_CUSTOM_ACCOUNT: '使用自定义账户',
        AGGREGATE_ACCOUNT_TO_CONVERT_PRIVATE_TITLE: '私人账户密钥',
        AGGREGATE_ACCOUNT_TO_CONVERT: '待转换账户的地址',
        AGGREGATE_ACCOUNT_TO_CONVERT_PRIVATE: '待转换账户的私钥',
        AGGREGATE_ADD_PLACEHOLDER: '待添加的共签人账户或别名',
        AGGREGATE_ADD_BTN_TITLE: '添加共签人',
        AGGREGATE_MIN_SIGNATURES: '所需最小签名数量',
        AGGREGATE_MIN_SIGNATURES_PLACEHOLDER: '通过事务必须的最小签名数量',
        AGGREGATE_MODIFICATION_LIST: '变更清单',
        AGGREGATE_COSIG_LIST: '签署方的地址清单',
        AGGREGATE_MODIFICATION_EDIT_TITLE: '编辑多重签名协议',
        AGGREGATE_MODIFICATION_EDIT_SELECT_TITLE: '帐号进行编辑',
        AGGREGATE_MODIFICATION_EDIT_SELECT: '选择待编辑的账户',
        AGGREGATE_ADD_REMOVE_TITLE: '添加/删除签名',
        AGGREGATE_ADD_REMOVE_PLACEHOLDER: '带变更的共签人账户地址，或别名',
        AGGREGATE_MODIFICATION_RELATIVE_CHANGE: '最小签名数量变更',
        AGGREGATE_MODIFICATION_RELATIVE_CHANGE_PLACEHOLDER: '最小签名数量变更(自动计算）',
        AGGREGATE_SELECTED_ACCOUNT_INFO: '已选账户信息',
        AGGREGATE_MIN_SIGNATURES: '最少签名数',
        AGGREGATE_SELECT_WALLET_ACCOUNT: '使用您当前的钱包帐户',
        AGGREGATE_ADD_COSIG: '添加交易对手',
        AGGREGATE_REMOVE_COSIG: '删除交易对手',

        // SIGN MULTISIGNATURE TRANSACTIONS
        SIGN_MULTISIG_TRANSACTIONS_TITLE: '签署多重签名交易',

        // LOGIN MODULE
        LOGIN_MEMBER_TITLE: '进入钱包',
        LOGIN_UPGRADE_TITLE: '钱包需要升级',
        LOGIN_UPGRADE_MESSAGE: '您选择的钱包需要升级。这将创建一个子公钥添加至您的主账户。升级成功后将自动下载升级后的钱包，请<b><u>务必</u></b>下载和妥善保存！',
        LOGIN_UPGRADE_BUTTON: '升级钱包',
        LOGIN_IMPORT_BUTTON: '导入钱包',
        LOGIN_SELECT_WALLET_YOURS: '选择钱包',
        LOGIN_SELECT_WALLET: '从本地存储选择钱包',
        LOGIN_LOGIN_BUTTON: '登录',
        LOGIN_NOTE: '没有钱包？ 导入一个或 <a href="#!/signup">注册</a>.',

        // SIGNUP MODULE
        SIGNUP_TITLE: '创建一个新的钱包',
        SIGNUP_SELECT_WALLET_TYPE: '选择一种类型的钱包来创建',
        SIGNUP_SELECT_WALLET_TYPE_STAND_BY: '将光标放在钱包类型上以显示信息.',
        SIGNUP_CREATE_WALLET_TITLE: '简单钱包',
        SIGNUP_CREATE_WALLET_INFO: '简单的钱包包含一个随机生成的主私钥.',
        SIGNUP_PRIVATE_KEY_WALLET_TITLE: '私钥钱包',
        SIGNUP_PRIVATE_KEY_WALLET_INFO: '私钥钱包包含要导入的主私钥.',
        SIGNUP_BRAIN_WALLET_TITLE: '脑钱包',
        SIGNUP_BRAIN_WALLET_INFO: '脑钱包包含一个由密码生成的主密钥. 这允许仅通过知道确切的密码来检索钱包.',
        SIGNUP_CREATE_WALLET_BUTTON: '创建简单钱包',
        SIGNUP_PRIVATE_KEY_WALLET_BUTTON: '创建私钥钱包',
        SIGNUP_BRAIN_WALLET_BUTTON: '创建脑钱包',
        SIGNUP_CREATE_WALLET_WARNING: '请参阅获知客户端生成密钥的<a href="https://www.w3.org/TR/2014/WD-WebCryptoAPI-20140325/#RandomSource-interface" rel="nofollow" target="_blank">风险</a>。',
        SIGNUP_NETWORK_SELECT: '选择网络', //
        SIGNUP_NETWORK_MAINNET: 'Mainnet 是 <b> <u>真正的</ u> </ b> NEM网络. 地址以\'N \'开头.',
        SIGNUP_NETWORK_TESTNET: 'Testnet 是 <b><u>实验</u></b> 网络. 地址以 \'T\'开头.',
        SIGNUP_NETWORK_MIJIN: 'Mijin是NEM的私人版本. 地址以 \'M\'开头.',
        SIGNUP_BRAIN_WALLET_WARNING: '请阅读脑钱包的<a href="https://en.bitcoin.it/wiki/Brainwallet" rel="nofollow" target="_blank">风险</a>。脑钱包只使用hash处理的单一密码作为私钥，长期或不当使用会导致失窃。使用中选择一个安全的密码至关重要。 请遵从<a href="https://xkcd.com/936/" rel="nofollow" target="_blank">XKCD #936</a>国际密码安全标准。',
        SIGNUP_PRIVATE_KEY_WALLET_WARNING: '脑钱包只使用hash处理的单一密码作为私钥，长期或不当使用会导致失窃。使用中选择一个安全的密码至关重要。',
        SIGNUP_CREATE_START_WARNING: '请仔细按照每一步!',
        SIGNUP_CREATE_START_CONNECTION_WARNING: '建议您在创建钱包并备份数据时断开与互联网的连接.',
        SIGNUP_CREATE_READY_BTN: '准备',
        SIGNUP_CREATE_ENTER_NAME: '输入钱包名称',
        SIGNUP_CREATE_ENTER_PASSWORD: '输入密码',
        SIGNUP_CREATE_ENTER_PASSPHRASE: '输入代码短语',
        SIGNUP_CREATE_CONFIRM_PASSWORD: '确认以上密码',
        SIGNUP_CREATE_CONFIRM_PASSPHRASE: '确认以上代码短语',
        SIGNUP_CREATE_ENTER_PRIVATE_KEY: '输入一个私钥',
        SIGNUP_CREATE_ADDRESS_FROM_PK: '与上面的键相对应的地址',
        SIGNUP_CREATE_WALLET_ADD_ENTROPY_INFO: '我们现在要生成您的主私钥. <b>请点击开始并移动光标以添加更多熵.</b>',
        SIGNUP_COMMON_WALLET_WARNING_TITLE: '帐户安全协议',
        SIGNUP_COMMON_WALLET_WARNING_1: '钱包在 </ u> </ b>浏览器本地存储中<b> <u>暂时存储! 浏览器可以配置（例如通过附件）以便有时清除本地存储. 这将导致数据丢失，并且不能轻易撤销. 在我们的情况下，您的钱包将会消失，非常重要确保您有所有需要的信息来恢复你的帐户.',
        SIGNUP_COMMON_WALLET_WARNING_2: '请点击下面下载您的钱包.   如果您的浏览器的本地存储被删除，这就是 <b><i>.wlt</i></b> 用作备份并导入的文件.',
        SIGNUP_COMMON_WALLET_WARNING_3: '如果你没有得到备份 <b><i>.wlt</i></b> 文件, 点击下面的按钮显示原始钱包数据并手动创建文件:',
        SIGNUP_COMMON_WALLET_WARNING_4: '即使你有一个钱包文件，是<b> <u>强制性的</ u> </ b>来备份你的账户的私钥，点击下面的按钮来显示它:',
        SIGNUP_COMMON_WALLET_WARNING_5: '您有责任始终确保您已备份私钥, 在将任何资金发送到您的帐户之前.',
        SIGNUP_COMMON_WALLET_WARNING_6: '每个钱包都有一个<b> <u>主要私钥</ u> </ b>（您在上面显示），用于创建确定性辅助帐户（BIP32）. 此功能需要使用<b> <u>相同的密码</ u> </ b>，否则它将为同一主私钥生成不同的辅助帐户. 备份数据时，请勿忘记<b> <u>记下您的密码</ u> </ b>',
        SIGNUP_COMMON_WALLET_WARNING_BTN_1: '显示原始钱包文件',
        SIGNUP_COMMON_WALLET_WARNING_BTN_1_INFO: '要制作钱包文件，请创建空文本文件并将上面的base 64密钥放入其中. 另存为 <b><i>您的钱包名称.wlt</i></b>.',
        SIGNUP_COMMON_WALLET_WARNING_BTN_2: '显示私钥',
        SIGNUP_COMMON_WALLET_WARNING_BTN_2_INFO: '为了备份私钥，打印或保存在文本文件中. 强烈建议将私钥存储在安全和离线的位置.',
        SIGNUP_COMMON_WALLET_WARNING_FOOTER: '通过点击下方，您同意您已阅读并理解上述警告.',
        SIGNUP_COMMON_WALLET_WARNING_CONFIRM_1: '我有我的钱包文件',
        SIGNUP_COMMON_WALLET_WARNING_CONFIRM_2: '我有我的私钥',
        SIGNUP_COMMON_WALLET_WARNING_CONFIRM_3: '我同意',
        SIGNUP_COMMON_WALLET_WARNING_UNDERSTOOD: '了解',
        SIGNUP_COMMON_WALLET_WARNING_DOWNLOAD: '下载钱包',
        SIGNUP_ESTIMATED_PASSPHRASE_STRENGTH: '预计的密码强度',
        SIGNUP_ESTIMATED_GUESS_TIMES: '估计的猜测时间',

        // FAQ MODULE
        FAQ_TITLE: '疑难解答',
        FAQ_QUESTION_1: '纳米钱包如何工作？',
        FAQ_ANSWER_1: '纳米钱包使用最新的加密库及ES6和AngularJS开发而成。它是个完全的客户端程序，不会向网络发送任何敏感信息。包括创建私钥，签署事务等行为均发生在您的浏览器内。',
        FAQ_QUESTION_2: '它是免费提供的吗？',
        FAQ_ANSWER_2: '所有的操作都在客户端完成，只有您有权掌控您的账号，纳米钱包不会以任何形式收取费用。',
        FAQ_QUESTION_3: '我为何已经拥有了马赛克？',
        FAQ_ANSWER_3: '每个用户都拥有nem作为命名空间，以及xem作为马赛克。数字货币XEM也是马赛克的一种，即使您的余额为0，您仍拥有"nem:xem"命名空间。',
        FAQ_QUESTION_4: '未来计划?',
        FAQ_ANSWER_4: '当前的计划是集成所有的NEM客户端的功能，并将提供接口使得将来的社区开发项目能够在该钱包中使用。',
        FAQ_QUESTION_5: '我可以免费获得XEM吗？',
        FAQ_ANSWER_5: 'NEM水龙站目前关闭，但您可以在论坛中接受赏金项目以获取大量XEM',
        FAQ_QUESTION_6: '如何获取关于NEM的更多信息？',
        FAQ_ANSWER_6_FORUM: '官方论坛',
        FAQ_ANSWER_6_WEBSITE: '官方网站',
        FAQ_ANSWER_6_BTT: '官方BTT帖子',
        FAQ_QUESTION_7: '仪表板上没有显示任何内容',
        FAQ_ANSWER_7: '请您务必检查顶部导航栏中的节点圆. <br> 红色圆圈表示与节点的连接失败. <br> 点击“节点”并从下拉列表中选择另一个或使用自定义节点。. <br> <a href="https://supernodes.nem.io" target="_blank">Supernodes.nem.io</a> 有很多可以使用的节点.</a>',
        FAQ_QUESTION_8: '签署人不会看到签署交易。',
        FAQ_ANSWER_8: '在这种情况下，请转到“服务”, 寻找“多重签名和多用户帐户”并点击“签署多重交易”.',
        FAQ_QUESTION_9: '什么是最好的安全措施 ?',
        FAQ_ANSWER_9: '强烈建议始终将私钥存储在纸上.<br> 您可以打印它们并将它们归档到安全的地方. <br><br> 关于钱包文件，您应该始终在不同的寒冷地点保存多份副本，例如USB棒. <br> 密码必须始终独特而复杂，因此，请务必先写下密码. <br><br> 当您想要检查您的钱包或实现操作时：<br> - 插入USB棒 - 将钱包导入纳米<br> - 拔下USB棒.<br><br> 您的钱包副本会存储在浏览器本地存储器中，以备您需要.<br> 完成后，使用页脚右侧的清除按钮注销并清除本地存储中的钱包.',
        FAQ_QUESTION_10: '在哪里可以找到关于我的账户信息（地址等） ?',
        FAQ_ANSWER_10: '如果您查看顶部导航栏，您会看到<b> <i>“帐号”</ b> </ i>之间<b> </ i>Node</ b> </ i>和 <B> <I>“语言”</ b> </ I>. 在那里你可以找到你的地址，公钥，余额和其他重要数据.',
        FAQ_QUESTION_11: '我已将XEM存入交易所，但没有任何记入 ?',
        FAQ_ANSWER_11_1: '首先，您必须检查您的交易的哈希是否指向现有的交易，在 <a target="_blank" href="http://chain.nem.ninja">explorer</a> (请注意，浏览器落后几个块).',
        FAQ_ANSWER_11_2: '大多数交易所都要求提供身份证明信息以记入您的存款. 确保您已仔细遵守交换指示并添加了未加密的消息. ',
        FAQ_ANSWER_11_3: '即使您添加了一条消息，也可能发生交换可能无法处理您的存款，因为对面存在问题.',
        FAQ_ANSWER_11_4: '您必须联系交易所支持人员，说明情况并向他们提供交易的哈希.',
        FAQ_QUESTION_12: '如何检查我是否在分叉上 ?',
        FAQ_ANSWER_12_1: '点击 <b><i>"Node"</b></i>, 顶部导航栏中的，打开节点面板.',
        FAQ_ANSWER_12_2: '查看链条高度并将其与所示高度进行比较 <a target="_blank" href="http://hugealice.nem.ninja:7890/chain/height">here</a>.',
        FAQ_ANSWER_12_3: '如果超过5个区块不同，那么你很可能在分叉.',
        FAQ_ANSWER_12_4: '要解决这个问题，只需从节点面板的下拉菜单中选择另一个节点，它就会将您的帐户恢复到真实网络上的最新状态.',

        // FORM RELATED
        FORM_PASSWORD_FIELD_PLACEHOLDER: '输入您的钱包密码',
        FORM_WALLET_NAME_FIELD_PLACEHOLDER: '钱包名',
        FORM_SIGNUP_PASSWORD_FIELD_PLACEHOLDER: '密码',
        FORM_PASSWORD: '密码',
        FORM_PASSWORD_CONFIRM: '确认密码',
        FORM_PASSPHRASE_CONFIRM: '确认密码',
        FORM_CONFIRM_PASSWORD_FIELD_PLACEHOLDER: '确认您的密码',
        FORM_PASSPHRASE_FIELD_PLACEHOLDER: '密钥串',
        FORM_CONFIRM_PASSPHRASE_FIELD_PLACEHOLDER: '确认您的密钥串',
        FORM_ADDRESS_FIELD_PLACEHOLDER: '账户地址',
        FORM_PRIVATE_KEY_FIELD_PLACEHOLDER: '私钥',
        FORM_SIDE_BTN_BALANCE: '余额',
        FORM_SIDE_BTN_PAY_TO: '被支付人',
        FORM_SIDE_BTN_TX_FEE: '事务费',
        FORM_SIDE_BTN_RENTAL_FEE: '租金',
        FORM_SIDE_BTN_LEVY_FEE: '征费',
        FORM_RECIPIENT_PLACEHOLDER: '接收地址或别名',
        FORM_INVOICE_RECIPIENT_PLACEHOLDER: '接收地址',
        FORM_SIDE_BTN_ALIAS_OF: '别名',
        FORM_MESSAGE_PLACEHOLDER: '信息',
        FORM_MOSAIC_NAME_PLACEHOLDER: '马赛克名',
        FORM_ADDRESS_ALIAS_PLACEHOLDER: '帐户地址或 @别名',
        FORM_BTN_GET_ALIAS: '获取别名地址',
        FORM_BTN_OPEN_ADB: '打开地址簿',
        FORM_SELECT_NAMESPACE: '选择一个命名空间',

        // VOTING MODULE
        PORTAL_VOTING_TITLE: '表决',
        PORTAL_VOTING_TEXT: '创建投票并进行投票',
        PORTAL_VOTING_BTN1: '见民意调查',
        PORTAL_VOTING_BTN2: '创建意调查',
        FORM_TITLE_FIELD_PLACEHOLDER: '标题',
        FORM_DESCRIPTION_FIELD_PLACEHOLDER: '在这里写下你的描述',
        FORM_OPTION_FIELD_PLACEHOLDER: '写选项',
        FORM_WHITELIST_FIELD_PLACEHOLDER: '帐户地址',
        FORM_SELECT_MULTISIG: '选择一个多重签名帐户',
        FORM_SELECT_CONTACT: '选择一个联系人',

        // TREZOR RELATED
        TREZOR_TITLE: 'TREZOR',
        TREZOR_TEXT: 'The TREZOR hardware wallet allows you to secure your XEM, mosaics and multisig accounts',
        TREZOR_BUTTON: 'Login with TREZOR',

        // LEDGER NANO RELATED
        LEDGER_NANO_TITLE: 'LEDGER NANO',
        LEDGER_NANO_TEXT: '使用Ledger Nano硬件钱包保护您的XEM，马赛克和多重签名账户',
        LEDGER_NANO_BUTTON: 'Ledger Nano登录',
        LEDGER_NANO_NO_DEVICE: '未找到Ledger设备',
        LEDGER_NANO_CHECK_DEVICE: 'Please check your Ledger device!',
        LEDGER_NANO_NOT_USING_NEM_APP: '您没有在Ledger设备上使用NEM程序',
        LEDGER_NANO_NOT_USING_XYM_APP: '您没有在Ledger设备上使用Symbol程序',
        LEDGER_NANO_NOT_SUPPORTED_APP: '请检查您的Ledger设备是否使用最新的NEM程序',
        LEDGER_NANO_CONNECTED_OTHER_APP: 'Another app is already connected to your Ledger device. Please close it then try again',
        LEDGER_NANO_NOT_OPENED_NEM_APP: '请在Ledger设备上打开NEM程序',
        LEDGER_NANO_NOT_OPENED_XYM_APP: '请在Ledger设备上打开Symbol程序',
        LEDGER_NANO_DEVICE_LOCKED: '请解锁Ledger设备',
        LEDGER_NANO_USER_REJECT_LOGIN: '用户取消登录',
        LEDGER_NANO_USER_REJECT_REQUEST: '用户取消操作',
        LEDGER_NANO_FOLLOW_INSTRUCTION: '请按照Ledger设备上的指示继续',
        LEDGER_NANO_TRANSACTION_TOO_BIG: '交易字符串过长',
        LEDGER_NANO_TRANSACTION_USER_CANCEL: '用户取消签名',
        LEDGER_NANO_TRANSACTION_FAILED: '交易签署错误， 原因：',
        LEDGER_NANO_OPTIN_INFO_1: '您可以使用Symbol Ledger程序进行Symbol选择加入',
        LEDGER_NANO_OPTIN_INFO_2: '请在设备上打开Symbol程序并点击导入Symbol账户',
        LEDGER_NANO_IMPORT_SYMBOL: '导入Symbol账户',

        // CREATE OFFLINE TRANSACTION MODULE
        OFFLINE_TX_TITLE: '准备离线交易',
        OFFLINE_TX_NO_WALLET: '请从登录模块导入钱包以查看表单.',
        OFFLINE_TX_INFO_1: '确保在导入钱包并创建交易时断开互联网连接!',
        OFFLINE_TX_INFO_2: '由于需要连接才能从NEM节点获取马赛克和多重信息，因此只能创建简单的事务.',
        OFFLINE_TX_INFO_3: '点击左侧面板中的“创建”按钮后，下面您会找到签名的交易.',
        OFFLINE_TX_INFO_4: '已签名的交易是不可变的，并且只有在24小时的默认截止日期之前发布到网络才会生效.',
        OFFLINE_TX_SIGNED: '已签名的交易',
        OFFLINE_TX_RELEASE: '在发布模块中打开',

        // RELEASE OFFLINE TRANSACTION MODULE
        RELEASE_OFFLINE_TX_TITLE: '向网络发布交易',
        RELEASE_OFFLINE_TX_PARAMETERS: '交易参数',
        RELEASE_OFFLINE_TX_INFO_1: '要发布交易，您必须连接到互联网.',
        RELEASE_OFFLINE_TX_INFO_2: '确保您选择了正确的网络和工作节点，否则它将被拒绝.',
        RELEASE_OFFLINE_TX_INFO_3: '无法发送签名的交易两次. 一个签名的事务将总是生成相同的哈希，而两个事务不能具有相同的哈希.',
        RELEASE_OFFLINE_TX_INFO_4: '您可以安全地从任何计算机上发布签名的交易.',

        // INVOICE MODULE
        CREATE_INVOICE_TITLE: '创建账单',

        // IMPORT WALLET QRCODE
        IMPORT_WALLET_QRCODE_TITLE: 'Import wallet QR code',
        IMPORT_WALLET_QRCODE_INFORMATION: '支持导入钱包类型: NEM微信钱包, 苹果钱包, 安卓钱包．',
        IMPORT_WALLET_QRCODE_LOAD: 'Load wallet QR code',
        IMPORT_WALLET_QRCODE_SCAN: 'Scan',
        IMPORT_WALLET_QRCODE_STOP_SCAN: 'Stop scan',

        // CATAPULT OPT IN MODULE
        PORTAL_CATAPULTOPTIN_TITLE: 'Symbol选择加入',
        PORTAL_CATAPULTOPTIN_TEXT_LINK: '点击此处',
        PORTAL_CATAPULTOPTIN_MULTISIG_TEXT: '您的多签名的选择加入请求必须与共同签名者帐户一起发出',
        PORTAL_CATAPULTOPTIN_BTN_2: '在消息中签署多签名的选择加入 申请',
        PORTAL_CATAPULTOPTIN_TREZOR_TEXT: '用 trezor 进行选择加入的功能尚未就绪。如果您想选择加入，请将资金转移到普通账户。',
        TITLE_CATAPULTOPTIN: 'Symbol选择加入',
        CATAPULTOPTIN_CREATE_HELP: '想更多地了解 Symbol的选择加入？',
        CATAPULTOPTIN_TRANSACTION: '选择加入交易',
        CATAPULTOPTIN_ACCOUNT_UNLOCK_PLACEHOLDER: '请提供您选择加入的相关Symbol帐户的助记密码',
        CATAPULTOPTIN_ACCOUNT_STEP_1: '第 1 步：请选择要选择加入的帐户',
        CATAPULTOPTIN_ACCOUNT_STEP_1_NEW: '第 1 步：请选择要选择加入的帐户',
        CATAPULTOPTIN_ACCOUNT_STEP_2: '第 2 步：查看我的Symbol帐户选择加入信息 ',
        CATAPULTOPTIN_ACCOUNT_MS_STEP_2: '第 2 步：查看多签名Symbol帐户信息 ',
        CATAPULTOPTIN_ACCOUNT_STEP_3: '第 3 步：查看要选择加入的我的命名空间',
        CATAPULTOPTIN_ACCOUNT_STEP_4: '第 4 步：查看选择加入中的VRF 密钥',
        CATAPULTOPTIN_INCLUDE_VRF: '在选择加入时包括 VRF 密钥',
        CATAPULTOPTIN_VRF_KEYS: 'VRF密钥',
        CATAPULTOPTIN_VRF_PUBLIC_KEY: 'VRF 公钥',
        CATAPULTOPTIN_ACCOUNT_MS_STEP_3: '步骤 3：查看要选择加入的多签名命名空间',
        CATAPULTOPTIN_ACCOUNT_STEP_SIGN: '第 2 步：签署 Symbol的选择加入',
        CATAPULTOPTIN_REVIEW_MULTISIG_RESULT: '查看多签名的Symbol选择加入',
        CATAPULTOPTIN_REGISTER: '注册 Symbol的选择加入',
        CATAPULTOPTIN_CREATE_ADDRESS: '在Symbol上按助记词创建一个新地址。',
        CATAPULTOPTIN_INCLUDE_NAMESPACE: '在选择加入列表中包括我的命名空间',
        CATAPULTOPTIN_INCLUDE_MS_NAMESPACE: '在选择加入列表中包括多签名帐户命名空间',
        CATAPULTOPTIN_MULTISIG_CONTRACT_CONSIGNATURES: '多签名合约的共同签名 ',
        SIGN_MULTISIG_OPTIN_TRANSACTIONS_TITLE: '签署交易：多签名选择加入',
        CATAPULTOPTIN_NAMESPACE_TO_DELETE: '选择退出命名空间',
        CATAPULTOPTIN_NAMESPACE_REMOVE: '输入要删除的命名空间',
        CATAPULTOPTIN_ENTER_PK: '输入私钥以生成Symbol帐户',
        CATAPULTOPTIN_ENTER_PASSWORD: '输入密码以生成Symbol帐户',
        CATAPULTOPTIN_REMOVE_NAMESPACE: '删除命名空间 ',
        CATAPULTOPTIN_OPT_IN_SUCCESS: '成功完成了选择加入',
        CATAPULTOPTIN_OPT_IN_PENDING_SIGNATURES: '为待定的共同签名者进行选择加入',
        CATAPULTOPTIN_TRANSFER_TRANSACTION_MULTISIG_NAME: 'Symbol多签名帐户选择加入批准',
        CATAPULTOPTIN_NIS1: 'NIS1',
        CATAPULTOPTIN_OPTIN_ACCOUNT: '选择加入帐户',
        CATAPULTOPTIN_OPTIN_ACCOUNT_PK: '选择加入帐户公钥',
        CATAPULTOPTIN_NAMESPACES_OPTIN: '我已选择的命名空间',
        CATAPULTOPTIN_CATAPULT: 'Symbol',
        CATAPULTOPTIN_OPTIN_ACCOUNT_ADDRESS: '选择加入帐户地址',
        CATAPULTOPTIN_UNLOCK: '解锁Symbol账户',
        CATAPULTOPTIN_CONFIRM_OPTIN: '确认Symbol选择加入',
        CATAPULT_OPT_IN_RESUME: ' 选择加入交易确认',
        CATAPULT_OPT_IN_RESUME_TEXT:'以下交易将创建一个新的Symbol帐户。要申领您的资金，您需备份您的助记密码。',
        CATAPULT_OPT_IN_SUCCESS: '选择加入成功',
        CATAPULT_OPT_IN_BALANCE_SNAPSHOT: '将包含到Symbol中的余额',
        CATAPULT_OPT_IN_SUCCESS_SIGNING: '已成功签署选择加入',
        CATAPULT_OPT_IN_UNDERSTAND: '考虑到私钥在Symbol上使用时会有所改变，您需知道：Symbol上的您帐户私钥将不同于您的旧私钥。请确保您已复制了新的私钥，并通过在以下字段中输入“是的，我知道了”来确认。',
        CATAPULT_OPT_IN_CONFIRM_BACKUP: '我已备份了用于选择加入流程的助记密码， 并知道我应自己负责保存、备份。',
        CATAPULT_OPT_IN_UNDERSTAND_FUNDS: '我知道，只有我账户中的快照区块的资金将在Symbol发布时转入我的 XYM 账户余额中。在选择加入后、快照发布之前的任何帐户余额更改将会在Symbol发布时更新。',
        GENERAL_MIN_SIGNATURES_REQUIRED: '所需的最少签名',
        SYMBOL_OPTIN_INITIATOR: '选择加入启动器',
        CATAPULT_BACKUP_WALLET: '备份Symbol 钱包',
        CATAPULT_DOWNLOAD_WALLET: '下载加密的Symbol钱包',
        MNEMONIC: '助记词',
        CATAPULT_OPT_IN_LOADING: '正在获取选择加入状态...',
        COSIGNER_NOT_OPTIN: '共同签署人尚未启动选择加入过程',
        SYMBOL_ADDRESS: 'Symbol地址',
        YOUR_SYMBOL_ADDRESS: '您的Symbol地址',
        YOUR_SYMBOL_MNEMONIC: '您的Symbol助记词',
        SYMBOL_COSIGNERS: 'Symbol共同签名者',
        CATAPULTOPTIN_CONFIRM_SIGN: '签署Symbol的选择加入',
        CATAPULTOPTIN_FIRST_DO_NORMAL: '要进行多签名的选择加入，您必须首先进行正常的选择加入',
        CATAPULTOPTIN_ENCRYPTED_WALLET_TEXT: '请创建一个新密码来加密您的Symbol钱包备份，然后点击下载按钮。',
        CATAPULTOPTIN_GENERATE_NEW_SYMBOL: '生成新Symbol助记词',
        CATAPULTOPTIN_VRF_KEYS_DESCRIPTION: 'VRF 密钥用于在Symbol上进行收获。如果您有一个节点，想开始收获第一个区块，您应该激活此选项，保存这些密钥，在您的Symbol节点配置中使用这些密钥。如果您不选择此选项，待到主网处于活跃状态时，您可以再生成新密钥',
        OPTIN_FORM_PASSWORD_FIELD_PLACEHOLDER: '输入您常用的 NEM 钱包密码',
        OPTIN_NEW_PASSWORD: '新密码',
        SYMBOL_PASSWORD_REQUIREMENT: '密码必须至少为 8 个字符',
        SYMBOL_WALLET_CREATING_TYPE_INFO: '请选择创建Symbol账户方式',
        SYMBOL_WALLET_CREATING_BY_ENTROPY_TYPE_INFO: '随机创建账户',
        SYMBOL_WALLET_CREATING_BY_LEDGER_IMPORT_TYPE_INFO: '从Ledger导入Symbol账户',
        SYMBOL_SIGNUP_CREATE_WALLET_ADD_ENTROPY_INFO_1: '现在，我们将生成您的主私钥。',
        SYMBOL_SIGNUP_CREATE_WALLET_ADD_ENTROPY_INFO_2: '请单击 开始 并移动光标以添加更多熵。',
        OPTIN_WELCOME_TITLE: '欢迎来到Symbol选择加入',
        OPTIN_INFO_1: 'Symbol主网尚未发布。',
        OPTIN_INFO_2: '您可通过本模块选择加入您的 NEM NIS1 帐户，',
        OPTIN_INFO_3: '以迁移您的余额和命名空间到Symbol网络，进行准备。',
        OPTIN_LINK_INFO: '获取有关选择加入流程的所有信息',
        OPTIN_NAMESPACES_TITLE: '选择加入命名空间',
        OPTIN_NAMESPACES_INFO: '现在，您可选择加入您在 NEM NIS1 上拥有的命名空间。这将为Symbol区块链上相同的命名空间占据位置。',
        OPTIN_NAMESPACES_LINK: '获取有关命名空间选择加入的所有信息',
        OPTIN_NAMESPACES_SELECT: '选择您想选择加入的命名空间',
        OPTIN_VRF_TITLE: '加入 VRF 密钥',
        OPTIN_VRF_INFO:'VRF 密钥让您的帐户可收获区块奖励。如果您计划在发布后在您帐户中持有超过 10000 个 XYM，并希望在Symbol区块链上进行收获，则需将 VRF 密钥添加到选择加入流程中。',
        OPTIN_VRF_LINK: '获取有关 VRF 密钥的所有信息 ',
        OPTIN_VRF_KEYS:'添加 VRF 密钥',
        OPTIN_VRF_PUBLIC: 'VRF 公共地址',
        OPTIN_VRF_PRIVATE: 'VRF 私钥',
        OPTIN_TAC_TITLE:'条款和条件',
        OPTIN_TAC_TEXT:'条款和条件',
        OPTIN_TAC_INFO_1:'选择加入过程是由 NEM 集团有限公司推出的一项功能，旨在帮助 NIS1 用户将其余额迁移到新的Symbol网络。这是按某些参数而定义的一个过程，所有用户都必须遵守。',
        OPTIN_TAC_INFO_2:'КNEM 集团有限公司对以下条款和条件之外的任何事件不承担任何责任。',
        OPTIN_TAC_READ_ACCEPT: '我已阅读并接受 ',
        OPTIN_CONFIRM_TITLE:'确认Symbol选择加入',
        OPTIN_CONFIRM_INFO:'差不多完成了！这是将迁移到新Symbol区块链的信息。请仔细查看，并用NEM 密钥来签名，以完成选择加入。',
        OPTIN_CONFIRM_OPTIN:'确认选择加入',
        HERE:'请点击此处',
        OPTIN_ENTER_PASSWORD: '输入 NEM NIS1 密码以签署选择加入',
        OPTIN_LOADING: '取数',
        OPTIN_FINISHED: '发布后的Opt In即将开放。 Symbol启动后，请重新检查是否有新版本',
        GENERAL_BACK: '回去',
        CREATE_SYMBOL_ACCOUNT: '创建您的Symbol帐户',
        OPTIN_SYMBOL_READY: '您的Symbol账户已经准备就绪',
        OPTIN_COPY_SUCCESS: '复制成功!',
        OPTIN_TYPE_SELECT: '请选择选择加入方式',
        CATAPULT_OPT_IN_ERROR_TOO_MUCH_COSIGNATORIES: '选择加入最多支持少于9个多重签署人的多重签名账户',

        PORTAL_CATAPULTOPTIN_TEXT:              '使用此模块可以在Symbol网络上接收XYM。请阅读更多内容',
        PORTAL_CATAPULTOPTIN_BTN_1:             '通过选择加入获取XYM',
        CATAPULTOPTIN_ACCOUNT_UNLOCK:           '输入Symbol账户公钥',
        CATAPULTOPTIN_REVIEW_NORMAL_RESULT:     '查看我的Symbol帐户选择加入信息',
        OPTIN_PP_TEXT:                          '隐私政策',
        FORM_SELECT_ACCOUNT:                    '选择帐户',
        POST_OPTIN_INFO_3:                      '此模块可将您的余额迁移到Symbol网络。',
        POST_OPTIN_INFO_2:                      '如果您在选择加入快照时的账户里有XEM，您可以在快照后获取相应的XYM。',
        POST_OPTIN_INFO_1:                      'Symbol主网现已上线！',
        SELECT_ACCOUNT_POST_OPTIN:              '选择要加入的帐户',
        POST_OPTIN_STATUS:                      '状态',
        POST_OPTIN_DETAILS:                     '详细信息',
        POST_OPTIN_AMOUNT:                      '可申请数额',
        POST_OPTIN_AMOUNT_CLAIMED:              '已申请数额',
        POST_OPTIN_START:                       '开始选择加入',
        POST_OPTIN_DEST_MSIG:                   '请输入Symbol多签账户公钥。 NIS1和Symbol的多签账户的共同签名账户数量必须一致',
        POST_OPTIN_DEST_MSIG_ADDRESS:           'Symbol多签账户地址',
        POST_OPTIN_DEST_ADDRESS:                'Symbol账户地址',
        POST_OPTIN_DEST_MULTISIG_ADDRESS:       '多签Symbol账户地址',
        POST_OPTIN_COSIG_DEST_ADDRESS:          '共同签名Symbol账户地址',
        NIS1_ADDRESS:                           '共同签名账户地址',
        YOUR_NIS_ACCOUNT:                       '您的NIS1地址',
        OPTIN_NOT_DONE:                         '选择加入未完成',
        OPTIN_STATUS_TITLE_1:                   '选择加入未完成',
        OPTIN_STATUS_TEXT_1:                    '可以开始领取XYM',
        OPTIN_STATUS_TITLE_2:                   '单签账户选择加入处理中',
        OPTIN_STATUS_TEXT_2:                    '选择加入申请成功',
        OPTIN_STATUS_TITLE_3:                   '多签账户选择加入未启动',
        OPTIN_STATUS_TEXT_3:                    '可以为多签账户选择加入',
        OPTIN_STATUS_TITLE_4:                   '多签账户选择加入签名待定',
        OPTIN_STATUS_TEXT_4:                    '等待共同签名账户确认中',
        OPTIN_STATUS_TITLE_5:                   '多签账户选择加入处理中',
        OPTIN_STATUS_TEXT_5:                    '选择加入申请成功',
        OPTIN_STATUS_TITLE_6:                   '完成',
        OPTIN_STATUS_TEXT_6:                    '申请成功， 您的XYM已到账',
        OPTIN_ERROR_TITLE_0:                    '选择加入申请失败， 签名错误',
        OPTIN_ERROR_TITLE_1:                    '选择加入申请失败， 目标Symbol账户不正确',
        OPTIN_ERROR_TITLE_2:                    '选择加入申请失败， 一个或多个共同签名账户不正确',
        OPTIN_NOT_AVAILABLE:                    '您的快照模块上没有足够的余额， 亦或者您已在发布前选择加入。',
        OPTIN_PUBLICKEY_PLACEHOLDER:            '公钥只能是64位的Hex字符串',
        OPTIN_DONE:                             '完成',
    });

}

export default ChineseProvider;

'''
'''--- src/app/modules/languages/de.js ---
function GermanProvider($translateProvider) {
    'ngInject'

    $translateProvider.translations('de', {

        // HEADER COMPONENT
        WALLET_NAME_1: 'NEM',
        WALLET_NAME_2: 'Wallet',
        APP_NAME_SUB: 'Die sichere Schnittstelle zur NEM Plattform',
        HEADER_LOGIN_BUTTON: 'Anmelden',
        HEADER_SIGNUP_BUTTON: 'Registrieren',
        HEADER_DASHBOARD: 'Übersicht',
        HEADER_WALLET: 'Wallet',
        HEADER_SERVICES: 'Dienste',
        HEADER_EXPLORER: 'Explorer',
        HEADER_NODE: 'Netzwerk',
        HEADER_ACCOUNT: 'Konto',
        HEADER_LANG_TITLE: 'Sprache',
        HEADER_LANG_SELECT: 'Sprache wählen',
        HEADER_NODE_BLOCK_HEIGHT: 'Blockhöhe',
        HEADER_NODE_CURRENT_NODE: 'Aktueller Knoten',
        HEARDER_NODE_LIST: 'Liste aller Knoten',
        HEADER_NODE_SELECT: 'Knoten wählen',
        HEADER_NODE_CUSTOM: 'Eigener Knoten',
        HEADER_NODE_CONNECT: 'Verbinden',
        HEADER_NODE_CUSTOM_INFO: 'IP oder Domäne des Knoten',
        HEADER_NODE_CUSTOM_TOOLTIP: 'Tragen Sie hier Ihren eigenen NIS Knoten ein',
        HEADER_PURGE: 'Bereinigen',
        HEADER_PURGE_MESSAGE: 'Bitte bestätigen Sie die Bereinigung des lokalen Speichers. Sobald Sie "OK" klicken werden alle lokal gespeicherten Wallets entfernt und können nicht wiederhergestellt werden. Kontrollieren Sie unbedingt, ob Sie über ein Backup Ihrer Wallet verfügen!',
        HEADER_OFFLINE_TX: 'Prepare an offline transaction',
        HEADER_RELEASE_TX: 'Release a transaction',

        // FOOTER COMPONENT
        FOOTER_POWERED_BY_1: 'Basiert auf',
        FOOTER_POWERED_BY_2: 'NEM Technologie.',
        FOOTER_VERSION: 'Version',

        // DASHBOARD MODULE
        DASHBOARD_TITLE: 'Übersicht',
        DASHBOARD_UNCONFIRMED: 'Unbestätigt',
        DASHBOARD_CONFIRMED: 'Bestätigt',
        DASHBOARD_HARVEST_INCOME_TITLE: 'Ertrag aus Transaktionsgebühren der letzten 25 Blöcke',
        DASHBOARD_HARVEST_INCOME_NOTE: 'Nur Blöcke welche Transaktionsgebühren enthalten werden angezeigt',
        DASHBOARD_HARVEST_INCOME_MESSAGE: 'In den letzten 25 Blöcken waren keine Transaktionsgebühren enthalten',
        DASHBOARD_NEWS_TITLE: 'Neuigkeiten',
        DASHBOARD_HARVESTED_BLOCKS_TITLE: 'Generierte Blöcke',
        DASHBOARD_HARVESTED_BLOCKS_TH: 'TX Gebühren',
        DASHBOARD_MARKET_INFO_TITLE: 'Marktinformationen',
        DASHBOARD_MARKET_INFO_CAP: 'Marktwert',
        DASHBOARD_MARKET_INFO_PRICE: 'Preis',
        DASHBOARD_MARKET_INFO_VOLUME: '24h Volumen',
        DASHBOARD_MARKET_INFO_CHANGES: 'Trend (24h)',
        DASHBOARD_MARKET_INFO_CHANGES_1H: '1h',
        DASHBOARD_MARKET_INFO_CHANGES_24H: '24h',
        DASHBOARD_MARKET_INFO_CHANGES_7D: '7d',
        DASHBOARD_MARKET_INFO_NOTE: '<a href="http://coinmarketcap.com/" target="_blank">CoinMarketCap</a> Daten werden alle 5 Minuten aktualisiert',
        DASHBOARD_NOTICE_1: 'Willkommen zur NanoWallet Beta!',
        DASHBOARD_NOTICE_2: 'Fehler bitte <a href="https://github.com/NemProject/NanoWallet/issues" target="_blank">hier melden</a>.<br>Übersetzungsfehler bitte <a href="https://github.com/TheoRettisch/NanoWallet/issues" target="_blank">hier melden<a/>',
        DASHBOARD_NOTICE_3: 'Das NEM Team empfiehlt, die NanoWallet als erstes im Testnet einzusetzen um sich mit der Bedienung vertraut zu machen. Eine Bedienungsanleitung gibt es <a href="https://forum.nem.io/t/nanowallet-guide/3568/2" target="_blank">hier</a>. Alle Benutzer sind selbst Verantwortlich für Ihre Gelder und die Absicherung des privaten Schlüssels. Das NEM Team ist für eventuelle Verluste durch den Einsatz dieser Applikation im Mainnet nicht verantwortlich.',
        DASHBOARD_NOTICE_4: 'Wir empfehlen dringend den privaten Schlüssel auf einem Stück Papier zu notieren, und an einem sicheren Ort aufzubewahren. Zusätzlich können Sie Ihre Konten zur Absicherung in die Android oder iOS App importieren.',
        DASHBOARD_NOTICE_5: 'Vielen Dank für Ihre Unterstützung!',

        // GENERAL
        GENERAL_BLOCK: 'Block',
        GENERAL_BLOCKS: 'Blöcke',
        GENERAL_NO_RESULTS: 'Keine Ergebnisse gefunden',
        GENERAL_ACCOUNT: 'Konto',
        GENERAL_ACCOUNTS: 'Konten',
        GENERAL_MULTISIG_ACCOUNT: 'Multi-Signatur Konto',
        GENERAL_AMOUNT: 'Menge',
        GENERAL_MESSAGE: 'Nachricht',
        GENERAL_DATE: 'Datum',
        GENERAL_TAB_NORMAL: 'Normal',
        GENERAL_TAB_SEND: 'Senden',
        GENERAL_TAB_MULTISIG: 'Multi-Signatur',
        GENERAL_TOTAL: 'Total',
        GENERAL_REMOVE: 'Entfernen',
        GENERAL_MOSAIC: 'Mosaik',
        GENERAL_FEE: 'Transaktionsgebühr',
        GENERAL_LEVY: 'Levy',
        GENERAL_LEVY_TYPES: 'Levy Typ',
        GENERAL_LEVY_TYPES_NOTE: 'I - Konstante Gebühr; II - Prozentuale Gebühr',
        GENERAL_LEVY_TYPE_1: 'Konstante Gebühr',
        GENERAL_LEVY_TYPE_2: 'Prozentuale Gebühr',
        GENERAL_SEND: 'Senden',
        GENERAL_TO: 'Empfänger',
        GENERAL_HASH: 'Hash',
        GENERAL_HASH_FUNCTION: 'Hash Funktion',
        GENERAL_NAME: 'Name',
        GENERAL_INFORMATION: 'Information',
        GENERAL_ADDRESS: 'Adresse',
        GENERAL_PUBLIC_KEY: 'Öffentlicher Schlüssel',
        GENERAL_PRIVATE_KEY: 'Privater Schlüssel',
        GENERAL_CLEAR_ALL: 'Zurücksetzen',
        GENERAL_CLOSE: 'Schließen',
        GENERAL_COMING_SOON: 'Bald verfügbar',
        GENERAL_NONE: 'keine',
        GENERAL_DROPBOX: 'Datei hier ablegen oder Klicken zum durchsuchen',
        GENERAL_NETWORK_FEE: 'Transaktionsgebühren',
        GENERAL_YES: 'Ja',
        GENERAL_NO: 'Nein',
        GENERAL_TAGS: 'Markierungen',
        GENERAL_SINK: 'Senke',
        GENERAL_SINK_ADDRESS: 'Adresse der Senke',
        GENERAL_STORAGE: 'Speicher',
        GENERAL_REASON: 'Grund',
        GENERAL_TRANSACTION_HASH: 'Transaktion Hash',
        GENERAL_TRANSACTION_ID: 'Transaktion ID',
        GENERAL_OWNER: 'Besitzer',
        GENERAL_RESULTS: 'Ergebnisse',
        GENERAL_RESULT: 'Ergebnis',
        GENERAL_STATUS: 'Status',
        GENERAL_LOCATION: 'Standort',
        GENERAL_ACTION: 'Aktionen',
        GENERAL_ACTIONS: 'Aktion',
        GENERAL_ADD: 'Hinzufügen',
        GENERAL_ADDED: 'Hinzugefügt',
        GENERAL_REMOVED: 'Entfernt',
        GENERAL_COSIGNATORY: 'Mitunterzeichner',
        GENERAL_COSIGNATORIES: 'Mitunterzeichner',
        GENERAL_PROCESSING: 'Bearbeite',
        GENERAL_ACCOUNT_LABEL: 'Kontobeschriftung',
        GENERAL_OPTIONAL: '(optional)',
        GENERAL_ERROR: 'Fehler',
        GENERAL_EXAMPLE: 'Beispiel',
        GENERAL_PUBLIC: 'Öffentlich',
        GENERAL_NAMESPACES: 'Namensräume',
        GENERAL_NAMESPACE: 'Namensraum',
        GENERAL_SUB_NAMESPACES: 'Untergeordnete Namensräume',
        GENERAL_SUB_NAMESPACE: 'Untergeordneter Namensraum',
        GENERAL_MOSAICS: 'Mosaike',
        GENERAL_VALUE: 'Wert',
        GENERAL_CONNECTION_ERROR: 'Ein Fehler ist aufgetreten. Entweder ist der Konten nicht erreichbar oder Sie sind nicht mit dem Internet verbunden.',
        GENERAL_HISTORY: 'Historie',
        GENERAL_REVEAL: 'Anzeigen',
        GENERAL_QR: 'QR Code',
        GENERAL_UPDATE:  'Update',
        GENERAL_UNKNOWN: 'Unbekannt',
        GENERAL_IMPORTANCE: 'Gewichtungsfaktor',
        GENERAL_TRANSACTIONS: 'Transaktionen',
        GENERAL_REGISTER: 'Registrieren',
        GENERAL_CREATE: 'Erstellen',
        GENERAL_RENEW: 'Erneuern',
        GENERAL_CHARACTERS_LEFT: 'Zeichen verfügbar',
        GENERAL_CURRENCY: 'Währung',
        GENERAL_EDIT: 'Bearbeiten',
        GENERAL_SEND_XEM: 'XEM senden',
        GENERAL_ACTIVE: 'Aktiv',
        GENERAL_INACTIVE: 'Inaktiv',
        GENERAL_ACTIVATING: 'Aktivierung',
        GENERAL_DEACTIVATING: 'Deaktivierung',
        GENERAL_REMOTE: 'Remote',
        GENERAL_WARNING: 'Warning',
        GENERAL_SCORE: 'Score',
        GENERAL_LENGTH: 'Length',
        GENERAL_GO_BACK: 'Go back',
        GENERAL_NEXT: 'Next',
        GENERAL_START: 'Start',
        GENERAL_ALIAS: 'Alias',
        GENERAL_CONTACTS: 'Contacts',
        GENERAL_ENCRYPTED: 'Encrypted',
        GENERAL_UNENCRYPTED: 'Unencrypted',
        GENERAL_HEXADECIMAL: 'Hexadecimal',
        GENERAL_SELECT_ACCOUNT: 'Select account',
        GENERAL_INVOICE: 'Invoice',

        // HOME MODULE
        HOME_UNSUPPORTED_BROWSER: 'ACHTUNG! Es ist nicht sicher die Nano Wallet mit Ihrem Browser zu verwenden...',
        HOME_RECOMMENDED_BROWSERS: 'Unterstützte Browser:',
        HOME_FEATURE_STAND_BY: 'Place the cursor on a feature to show information.',
        HOME_FEATURE_1: 'Send and receive XEM easily and almost instantly, only 1 minute block time !',

        // TRANSFER TRANSACTION MODULE
        TRANSFER_TRANSACTION_TITLE: 'Senden & Empfangen',
        TRANSFER_TRANSACTION_NAME: 'Überweisung',
        TRANSFER_TRANSACTION_MULTISIG_NAME: 'Multi-Signatur Überweisung',
        TRANSFER_TRANSACTION_INVOICE: 'Rechnung erstellen',
        TRANSFER_TRANSACTION_TAB_INVOICE: 'Empfangen',
        TRANSFER_TRANSACTION_MOSAIC_TRANSFER: 'Mosaik transferieren',
        TRANSFER_TRANSACTION_ATTACH_MOSAIC: 'Mosaik anhängen',
        TRANSFER_TRANSACTION_ATTACH: 'Anhang',
        TRANSFER_TRANSACTION_MOSAICS_ATTACHED: 'Mosaik angehängt',
        TRANSFER_TRANSACTION_ENCRYPT_MESSAGE: 'Nachricht verschlüsseln',
        TRANSFER_TRANSACTION_MESSAGE_TYPE: 'Message type',
        //TRANSFER_TRANSACTION_HEX_MESSAGE: 'Hex message',
        //TRANSFER_TRANSACTION_ENCRYPT_TOOLTIP: 'Empfänger verfügt noch nicht über einen öffentlichen Schlüssel, hat also noch keine Transaktion im Netzwerk getätigt.',
        //TRANSFER_TRANSACTION_ENCRYPT_TOOLTIP_MULTISIG: 'Die Verschlüsselung von Nachrichten bei Multi-Signatur Konten wird aktuell nicht unterstützt.',

        // TRANSACTION LINES
        LINE_TX_DETAILS_FROM: 'Absender',
        LINE_TX_DETAILS_FROM_MULTISIG: 'Von Multi-Signatur',
        LINE_TX_DETAILS_WAITING: 'Transaktion wartet auf Bestätigung',
        LINE_TX_DETAILS_NEED_SIG: 'Benötigt Signaturen der Mitunterzeichner',
        LINE_TX_DETAILS_NEED_SIG_2: '# Benötigt Signatur',
        //LINE_TX_DETAILS_MESS_ENC: 'Verschlüsselt',
        LINE_TX_DETAILS_MESS_DEC: 'Entschlüsseln',
        LINE_TX_DETAILS_HASH: 'Hash',
        LINE_TX_DETAILS_DEC_MESS: 'Nachricht entschlüsseln',
        LINE_TX_DETAILS_MOS_ATTACHED: 'Mosaik angehängt',
        LINE_TX_DETAILS_LEVY_TYPE_1: 'Konstant',
        LINE_TX_DETAILS_LEVY_TYPE_2: 'Prozentual',
        LINE_TX_DETAILS_ISSUER: 'Aussteller',
        LINE_TX_DETAILS_MULTISIG_FEE: 'Multi-Signatur Gebühr',
        LINE_TX_DETAILS_MULTISIG_HASH: 'Multi-Signatur Hash',
        LINE_TX_DETAILS_COSIGN: 'Transaktion mit unterzeichnen',
        LINE_TX_DETAILS_SIGNATURES: 'Signatur(en)',
        LINE_TX_DETAILS_COSIGNATORY: 'Mitunterzeichner',
        LINE_TX_DETAILS_TIMESTAMP: 'Zeitstempel',
        LINE_TX_DETAILS_MOS_CREATE: 'Mosaik erstellen',
        LINE_TX_DETAILS_MOS_EDIT: 'Mosaik bearbeiten',
        LINE_TX_DETAILS_NS_CREATE: 'Namensraum erstellen',
        LINE_TX_DETAILS_NS_NEW_SUB: 'Untergeordneten Namensraum erstellen',
        LINE_TX_DETAILS_NS_ROOT: 'Root Namensraum',
        LINE_TX_DETAILS_RECIPIENT: 'Empfänger',
        LINE_TX_DETAILS_MULTISIG_CREATE: 'Multi-Signatur Konto erstellen',
        LINE_TX_DETAILS_MULTISIG_EDIT: 'Multi-Signatur Konto bearbeiten',
        LINE_TX_DETAILS_MULTISIG_MOD: 'Anpassungen',
        LINE_TX_DETAILS_MULTISIG_MIN_COSIG: 'Minimum an Mitunterzeichnern',
        LINE_TX_DETAILS_MULTISIG_AFFECTED: 'Konto bearbeitet',

        // IMPORTANCE MODULE
        IMPORTANCE_TRANSFER_NAME: 'Transfer von Gewichtung',
        IMPORTANCE_TRANSFER_MULTISIG_NAME: 'Multi-Signatur Transfer von Gewichtung',
        IMPORTANCE_TRANSFER_MODE: 'Modus',
        IMPORTANCE_TRANSFER_MODE_1: 'Aktivieren',
        IMPORTANCE_TRANSFER_MODE_2: 'Deaktivieren',
        IMPORTANCE_TRANSFER_TITLE: 'Delegiertes Konto verwalten',
        IMPORTANCE_TRANSFER_MULTISIGNATURE_TITLE: 'Delegiertes Konto des Multi-Signatur Kontos verwalten',
        IMPORTANCE_TRANSFER_CUSTOM_KEY: 'Einen eigenen öffentlichen Schlüssel verwenden',
        IMPORTANCE_TRANSFER_MODE_SELECT: 'Modus auswählen',
        IMPORTANCE_TRANSFER_REMOTE_ACCOUNT: 'Remote-Konto',
        IMPORTANCE_TRANSFER_REMOTE_PUBLIC: 'Öffentlicher Schlüssel des Remote-Kontos',
        IMPORTANCE_TRANSFER_INFO_PART_1: 'Sobald der Transfer der Gewichtung gestartet wurde, benötigt es 6 Stunden zur Aktivierung. Nach erfolgreicher Aktivierung können Sie einen Knoten auswählen und das delegierte Harvesting starten oder beenden.',
        IMPORTANCE_TRANSFER_INFO_PART_2: 'Stellen Sie sicher, dass Sie nicht bereits ein delegiertes Konto aktiviert haben (Wenn ein bereits bestehendes Konto importiert wurde). Sollte dies zutreffen verwenden Sie bitte den alten delegierten öffentlichen Schlüssel um die Funktion zuerst zu deaktivieren.',
        IMPORTANCE_TRANSFER_INFO_PART_MULTISIG: 'Bei Multi-Signatur Konten kann nur der Mitunterzeichner, welcher den Transfer initiiert hat, das delegierte Harvesting starten oder stoppen. Falls ein anderer Mitunterzeichner die Kontrolle übernehmen will muss der Transfer erneut von diesem Bitunterzeichner durchgeführt werden.',
        IMPORTANCE_TRANSFER_NO_BLOCKS_HARVESTED: 'Keine Blöcke generiert',
        IMPORTANCE_TRANSFER_HARVESTING_PANEL: 'Harvesting Status',
        IMPORTANCE_TRANSFER_REMOTE_ACTIVATING: 'Bitte warten Sie bis Ihr Status auf aktiv gesetzt wurde um mit dem delegierten Harvesting zu beginnen',
        IMPORTANCE_TRANSFER_REMOTE_INACTIVE: 'Sie müssen einen Transfer von Gewichtung auf der linken Seite vornehmen um das Remote-Konto zu aktivieren',
        IMPORTANCE_TRANSFER_MULTISIG_NOT_INITIATOR: 'Sie sind nicht der Mitunterzeichner, welcher den Transfer von Gewichtung initiiert hat. Es ist daher nicht möglich, dass Sie das delegierte Harversting an oder ausschalten. Bitte lesen Sie in den obenstehenden Informationen nach, wie Sie Kontrolle über diese Funktion erhalten können.',
        IMPORTANCE_TRANSFER_PRIVATE_KEY_PLACEHOLDER: 'Delegierten privaten Schlüssel anzeigen',
        IMPORTANCE_TRANSFER_DELEGATED_KEYS: 'Delegierte Kontoadresse',
        IMPORTANCE_TRANSFER_HARVESTING_STATUS: 'Harvesting Status',
        IMPORTANCE_TRANSFER_START_HARVESTING: 'Delegiertes Harvesting starten',
        IMPORTANCE_TRANSFER_STOP_HARVESTING: 'Delegiertes Harvesting beenden',
        IMPORTANCE_TRANSFER_ACTIVATE_DEACTIVATE_REMOTE: 'Activate / Deactivate the delegated account',
        IMPORTANCE_TRANSFER_SHOW_DELEGATED_KEYS: 'Show delegated account keys',

        // CREATE MOSAIC MODULE
        MOSAIC_DEFINITION_TITLE: 'Mosaik erstellen',
        MOSAIC_DEFINITION_NAME: 'Bereitstellung eines Mosaiks',
        MOSAIC_DEFINITION_MULTISIG_NAME: 'Multi-Signatur Bereitstellung eines Mosaiks',
        MOSAIC_DEFINITION_QUANTITY: 'Menge',
        MOSAIC_DEFINITION_DIV: 'Teilbarkeit',
        MOSAIC_DEFINITION_TOTAL_SUPPLY: 'Finaler Bestand',
        MOSAIC_DEFINITION_FINAL_NAME: 'Name',
        MOSAIC_DEFINITION_DESCRPITION: 'Beschreibung',
        MOSAIC_DEFINITION_INITIAL_SUPPLY: 'Initialer Bestand',
        MOSAIC_DEFINITION_MUTABLE_SUPPLY: 'Variabler Bestand',
        MOSAIC_DEFINITION_TRANSFERABLE: 'Übertragbar',
        MOSAIC_DEFINITION_PROPERTIES: 'Eigenschaften',
        MOSAIC_DEFINITION_MOSAIC_PROPERTIES: 'Mosaik Eigenschaften',
        MOSAIC_DEFINITION_REQUIRES_LEVY: 'Benötigt Levy',
        MOSAIC_DEFINITION_LEVY_LIMITATION: 'Einschränkung der UI: Momentan können nur Mosaike als Levy verwendet werden die sich im eigenen Besitz befinden.',
        MOSAIC_DEFINITION_LEVY_SELECT_MOSAIC: 'Levy Mosaik auswählen',
        MOSAIC_DEFINITION_LEVY_ADDRESS: 'Levy Adresse',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE: 'Gebührentyp',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_1: 'Absolut',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2: 'Prozentual',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_1_NOTE: 'Absolut -> Konstante Levy:',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE: 'Prozentual -> Lineare Levy:',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE_2: 'Senden',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE_3: 'beinhaltet einen Levy von',
        MOSAIC_DEFINITION_PARENT: 'Namensraum',
        MOSAIC_DEFINITION_INFORMATION_TITLE: 'Erstellen eines Mosaiks',
        MOSAIC_DEFINITION_INFORMATION: 'Want more info about mosaics?',
        MOSAIC_DEFINITION_INFORMATION_1: 'The maximum length for a mosaic name is 32 characters. Allowed characters are:',
        MOSAIC_DEFINITION_INFORMATION_2: 'The first character must be a letter from the alphabet.',
        MOSAIC_DEFINITION_INFORMATION_3: 'The description may not exceed a length of 512 characters. There is no limitation for the characters used in the description.',
        MOSAIC_DEFINITION_INFORMATION_4: 'The behavior of a mosaic can be customized by a set of properties:',
        MOSAIC_DEFINITION_INFORMATION_5: 'The supply is given in entire units of the mosaic, not in smallest sub-units. The initial supply must be in the range of 0 and 9,000,000,000.',
        MOSAIC_DEFINITION_INFORMATION_6: 'The divisibility determines up to what decimal place the mosaic can be divided into. Thus a divisibility of 3 means that a mosaic can be divided into smallest parts of 0.001 mosaics, i.e. milli mosaics is the smallest sub-unit. The divisibility must be in the range of 0 and 6.',
        MOSAIC_DEFINITION_INFORMATION_7: 'If checked, it allows a mosaic supply change at a later point, otherwise supply is immutable.',
        MOSAIC_DEFINITION_INFORMATION_8: 'Allow transfers of the mosaic among accounts other than the creator. If the property \'transferable\' is not checked, only transfer transactions having the creator as sender or as recipient can transfer mosaics of that type. If checked the mosaics can be transferred to and from arbitrary accounts.',
        MOSAIC_DEFINITION_INFORMATION_9: 'The creator can demand that a special fee is collected from the sender and sent to an account of his choice (thus the creator can specify his own account as recipient of this fee). The data for the levy is the following:',
        MOSAIC_DEFINITION_INFORMATION_10: 'The mosaic in which the fee has to be paid. Any existing mosaic can be specified.',
        MOSAIC_DEFINITION_INFORMATION_11: 'The recipient of the levy. This can be any account.',
        MOSAIC_DEFINITION_INFORMATION_12: 'The fee quantity. The interpretation is dependent on the field \'fee type\', see above.',
        MOSAIC_DEFINITION_INFORMATION_13: 'There are two fee types supported, absolute fee and percentile fee.',
        MOSAIC_DEFINITION_INFORMATION_14: 'The fee is specified as absolute quantity and thus does not depend on the quantity that is transferred.',
        MOSAIC_DEFINITION_INFORMATION_15: 'The fee is specified as multiple of the percentile of the quantity that is transferred. The fee is thus linearly increasing with the transferred mosaic quantity.',
        MOSAIC_DEFINITION_INFORMATION_16: 'Sending mosaics on the NEM blockchain requires a fee. The exact fee is calculated depending on their total number and how many are being sent during a transaction. <b>Small business mosaics</b> are given a discounted flat rate of 0.05 XEM per mosaic per transfer.  These are mosaics with a quantity of less than 10,000 and a divisibility of 0.',
        MOSAIC_DEFINITION_INFORMATION_17: 'If you own 100% of the supply, you can overwrite all the mosaic properties by sending a creation transaction again with the same "namespace:mosaic" name.',

        // EDIT MOSAIC MODULE
        MOSAIC_SUPPLY_CHANGE_TITLE: 'Bestand des Mosaiks ändern',
        MOSAIC_SUPPLY_CHANGE_NAME: 'Anpassung des Bestands eines Mosaiks',
        MOSAIC_SUPPLY_CHANGE_MULTISIG_NAME: 'Multi-Signatur Anpassung des Bestands eines Mosaiks',
        MOSAIC_SUPPLY_CHANGE_SELECT: 'Mosaik auswählen',
        MOSAIC_SUPPLY_CHANGE_TYPE: 'Typ ändern',
        MOSAIC_SUPPLY_CHANGE_TYPE_1: 'Erstellen',
        MOSAIC_SUPPLY_CHANGE_TYPE_2: 'Löschen',
        MOSAIC_SUPPLY_CHANGE_SUPPLY: 'Bestand',
        MOSAIC_SUPPLY_CHANGE_CURRENT_SUPPLY: 'Momentaner Bestand',
        MOSAIC_SUPPLY_CHANGE_AMOUNT: 'Menge ändern',
        MOSAIC_SUPPLY_CHANGE_RES_SUPPLY: 'Resultierender Bestand',

        // NAMESPACE MODULE
        NAMESPACE_PROVISION_TITLE: 'Erstellen von Namensräumen',
        NAMESPACE_PROVISION_NAME: 'Bereitstellung von Namensraum',
        NAMESPACE_PROVISION_MULTISIG_NAME: 'Multi-Signatur Bereitstellung von Namensraum',
        NAMESPACE_PROVISION_PARENT: 'Übergeordneter Namensraum',
        NAMESPACE_PROVISION_NEW_ROOT: 'Neuer Root Namensraum',
        NAMESPACE_PROVISION_NS: 'Namensraum',
        NAMESPACE_PROVISION_NS_NAME: 'Name',
        NAMESPACE_PROVISION_RESTRICTIONS: 'Einschränkungen bei der Verwendung von Namensräumen',
        NAMESPACE_PROVISION_INFORMATION_1: 'Namespaces have certain restrictions with respect to the characters being allowed in the parts as well as the length of a part. A root namespace may have a length of 16 characters while sub-namespaces may have a length of 64 characters. Valid characters are:',
        NAMESPACE_PROVISION_INFORMATION_2: 'However a part is only allowed to begin with a letter of the alphabet, thus \'alice\' is an allowed part for a root namespace while \'1alice\' is not. Certain strings are reserved and thus not allowed as namespace parts. Among the disallowed namespace parts are:',
        NAMESPACE_PROVISION_INFORMATION_3: 'This list is not final and can be extended in the future. Thus \'user.alice\' or \'alice.user\' are not allowed in the NEM namespace system. The namespace may have up to 3 parts, thus \'qm.metals.silver\' is valid while \'qm.metals.silver.coin\' is not.',

        // RENEW NAMESPACE MODULE
        RENEW_NS_TITLE: 'Namensraum erneuern',
        RENEW_NS_NONE: 'Kein Namensraum benötigt eine Erneuerung',
        RENEW_NS_INFORMATION_TITLE: 'Namensraum erneuern',
        RENEW_NS_INFORMATION_TITLE_1: 'Gebühren',
        RENEW_NS_INFORMATION_TITLE_2: 'Root Namensraum',
        RENEW_NS_INFORMATION_TITLE_3: 'Erneuerungsintervall',
        RENEW_NS_INFORMATION_1: 'Für die Erneuerung eines Namensraumes fallen wie bei der Registrierung Kosten in Höhe von 100 XEM an.',
        RENEW_NS_INFORMATION_2: 'Eine Erneuerung wird nur bei Root Namensräumen benötigt. Alle dem Namensraum untergeordnete Namensräume werden automatisch mit verlängert.',
        RENEW_NS_INFORMATION_3: 'Namensräume sind Verträge innerhalb der Blockchain mit einer Laufzeit von einem Jahr. Der Vertrag kann einen Monat vor Ablauf verlängert werden. Die Verlängerung kann bis zu einem Monat nach Ablauf des Vertrages durchgeführt werden.',
        RENEW_NS_INFORMATION_4: 'Wird die Verlängerung nicht rechtzeitig abgeschlossen, gehen alle untergeordneten Namensräume sowie alle zugeordneten Mosaike entgültig verloren.',
        RENEW_NS_ALERT_PART_1: '<b>Warnung !</b> Die Registrierung für den Namensraum:',
        RENEW_NS_ALERT_PART_2: 'wird in weniger als einem Monat auslaufen ! ',
        RENEW_NS_ALERT_PART_3: 'Mehr Informationen gibt es unter <b>Dienste -> Namensräume erneuern</b>.',

        // ACCOUNT MODULE
        ACCOUNT_TITLE: 'Konto',
        ACCOUNT_ACCOUNT_INFORMATION: 'Kontoinformationen',
        ACCOUNT_IMPORTANCE_SCORE: 'Gewichtung',
        ACCOUNT_VESTED_BALANCE: 'Verbrieftes Guthaben',
        ACCOUNT_HARVESTING: 'Harvesting',
        ACCOUNT_REMOTE_STATUS: 'Remote Status',
        ACCOUNT_DELEGATED_PUBLIC: 'Delegierter öffentlicher Schlüssel',
        ACCOUNT_HARVESTED_BLOCKS: 'Generierte Blöcke',
        ACCOUNT_START_STOP_HARVESTING: 'Start / Stopp delegiertes Harvesting',
        ACCOUNT_HARVESTING_NOTE: 'Die Informationen auf welchem Netzwerkknoten das delegierte Harvesting betrieben wird befinden sich im <b>lokalen Speicher des Browsers</b>. Wird der Speicher gelöscht erscheint der <b>Harvesting Status</b> als <b>Inaktiv</b>. In diesem Fall wählen Sie den vorher verwendeten Netzwerkknoten aus um den korrekten Status wiederherzustellen. Sollte sich der Status nicht ändern kann es sein, dass der Netzwerkknoten neu gestartet wurde. In diesem Fall muss das delegierte Harvesting wieder gestartet werden.',
        ACCOUNT_HARVESTING_NODE_SELECT: 'Einen Knoten für das delegierte Harvesting auswählen',
        ACCOUNT_HARVESTING_START: 'Start des delegierten Harvesting',
        ACCOUNT_HARVESTING_STOP: 'Stopp des delegierten Harvesting',
        ACCOUNT_HARVESTING_NO_SLOTS: 'Keine freien Plätze auf dem ausgewählten Knoten vorhanden, bitte einen anderen Knoten auswählen',
        ACCOUNT_HARVESTING_BELOW_THRESHOLD: 'Sie benötigen 10\'000 XEM verbrieftes Guthaben um mit dem delegierten Harvesting beginnen zu können',
        ACCOUNT_ACCOUNT_SELECT: 'Anderes Konto auswählen',
        ACCOUNT_ACCOUNT_SELECT_LABEL: 'Konto auswählen',
        ACCOUNT_WALLET_KEYS: 'Wallet & Schlüssel',
        ACCOUNT_ADD_NEW_ACCOUNT: 'Neues Konto hinzufügen',
        ACCOUNT_ADD_NEW_ACCOUNT_BTN: 'Der Wallet ein neues Konto hinzufügen',
        ACCOUNT_PRIVATE_KEY_NOTE: 'Ihr privater Schlüssel dient als Autorisierung für Ihr Konto. Er sollte an mehreren Stellen aufbewahrt werden: Passwortverschlüsselt in einer Wallet Datei, auf einem Stück Papier niedergeschrieben sowie als QR Code über den <b><u>Wallet QR exportieren</u></b> Button.',
        ACCOUNT_PRIVATE_KEY_SHOW: 'Privaten Schlüssel anzeigen',
        ACCOUNT_EXPORT_MOBILE: 'Wallet auf Handy exportieren',
        ACCOUNT_INFO_QR_BTN: 'QR mit Konto Informatione',
        ACCOUNT_WALLET_QR_BTN: 'Wallet QR',
        ACCOUNT_WALLET_QR_BTN_2: 'Wallet QR exportieren (Android & iOS)',
        ACCOUNT_BACKUP_WALLET: 'Wallet herunterladen',
        ACCOUNT_BACKUP_WALLET_NOTE: 'Es ist <b><u>unbedingt notwendig</u></b> mehrere Sicherheitskopien der Wallet anzufertigen. Andernfalls kann es zum Verlust Ihrer XEM kommen.',
        ACCOUNT_BACKUP_WALLET_DOWNLOAD: 'Wallet herunterladen',
        ACCOUNT_INFO_QR_TITLE: 'Kontoinformationen QR',
        ACCOUNT_WALLET_QR_NOTE: 'Dieser QR Code funktioniert nur mit der kommenden NEMpay App',
        ACCOUNT_WALLET_QR_ANDROID_IOS_TITLE: 'Wallet QR für Android & iOS',
        ACCOUNT_ADD_NEW_ACCOUNT_WARNING: 'Alle Konten einer Wallet werden mit dem gleichen Passwort und privatem Schlüssel nach dem BIP32 Verfahren abgesichert. Es werden also sowohl Ihr privater Schlüssel sowie das Passwort der Wallet benötigt um alle Konten wiederherzustellen. <br> Es wird <b>dringend Empfohlen</b> eine Sicherung der Wallet anzulegen nachdem weiter Konten hinzugefügt wurden.',
        ACCOUNT_CUSTOM_NODE: 'Eigenen Knoten verwenden',
        ACCOUNT_NODE_FROM_LIST: 'Knoten aus der Liste verwenden',
        ACCOUNT_DELEGATED_PRIVATE_KEY: 'Delegierter privater Schlüssel',
        ACCOUNT_NO_PUBLIC_KEY: 'You need to make a transaction to get a public key',
        ACCOUNT_SHOW_ON_TREZOR_BTN: 'Show on TREZOR',
        ACCOUNT_SHOW_ON_LEDGER_BTN: 'Show on LEDGER',

        // PORTAL MODULE
        PORTAL_TITLE: 'Dienste',
        PORTAL_MULTISIG_TITLE: 'Multi-Signatur und Mehrbenutzerkonten',
        PORTAL_MULTISIG_TEXT: 'Multi-Signatur Konten sind Verträge, welche in der Blockchain gespeichert werden. Sie stellen einen sehr vielseitigen und sicheren Weg bereit Vermögen abzusichern. Zudem wird die Nutzung von Mehrbenutzerkonten ermöglicht. Auf Basis von Multi-Signatur Konten können ebenfalls DAOs auf der NEM Plattform abgebildet werden.',
        PORTAL_MULTISIG_BTN_1: 'Ein Konto in ein Multi-Signatur Konto umwandeln',
        PORTAL_MULTISIG_BTN_2: 'Einen bereits bestehenden Vertrag bearbeiten',
        PORTAL_MULTISIG_BTN_3: 'Multi-Signatur Transaktion signieren',
        PORTAL_HARVESTING_TITLE: 'Delegiertes Harvesting',
        PORTAL_HARVESTING_TEXT: 'Delegiertes Harvesting ist eine Funktion die es ermöglicht, Blöcke zu generieren und Transaktionskosten einzusammeln, selbst wenn das Konto nicht geöffnet ist.',
        PORTAL_CHANGELLY_TITLE: 'Changelly Instant Exchange',
        PORTAL_CHANGELLY_TEXT: 'Das Changelly Plugin ermöglicht es, auf einfache Art und Weise XEM zu erwerben.',
        PORTAL_CHANGELLY_BTN: 'XEM Kaufen',
        PORTAL_NS_TITLE: 'Namensräume & Subdomänen',
        PORTAL_NS_TEXT: 'Namensräume sind Domänennamen. Jeder Namensraum ist eindeutig, und dient dazu Mosaike (Assets) zu identifizieren, welche einzelnen Namensräumen zugeordnet werden.',
        PORTAL_NS_BTN: 'Namensraum erstellen',
        PORTAL_MOSAIC_TITLE: 'Mosaik',
        PORTAL_MOSAIC_TEXT: 'NEM Mosaike sind Assets welche zusätzliche Eigenschaften und Funktionen bieten. Um Mosaike erstellen zu können, muss das Konto mindestens einen aktiven Root Namensraum registriert haben.',
        PORTAL_MOSAIC_BTN_1: 'Mosaik erstellen',
        PORTAL_MOSAIC_BTN_2: 'Mosaik bearbeiten',
        PORTAL_APOSTILLE_TITLE: 'Apostille',
        PORTAL_APOSTILLE_TEXT: 'Der NEM Apostille Dienst kann zum Ausstellen von notariellen Beglaubigungen auf Basis der Blockchain verwendet werden. Dokumente und Dateien könne mit einem Zeitstempel versehen werden. Zudem können Änderungen nachverfolgt werden und es kann die Authentizität von Dokumenten und Dateien nachgewiesen werden.',
        PORTAL_APOSTILLE_BTN_1: 'Erstellen',
        PORTAL_APOSTILLE_BTN_2: 'Auditieren',
        PORTAL_ADDRESS_BOOK_TEXT: 'Adressen können mit Labeln versehen werden. Diese vereinfachen die Verwaltung Ihrer Kontakte',
        PORTAL_ADDRESS_BOOK_BTN: 'Adressbuch verwalten',
        PORTAL_INVOICE_TEXT: 'Create an invoice to share via QR code',

        // ADDRESS BOOK MODULE
        ADDRESS_BOOK_TITLE: 'Adressbuch',
        ADDRESS_BOOK_LIST: 'Kontakte',
        ADDRESS_BOOK_NAVIGATION: 'Navigation',
        ADDRESS_BOOK_NEW: 'Neuer Kontakt',
        ADDRESS_BOOK_EDIT: 'Kontakt bearbeiten',
        ADDRESS_BOOK_REMOVE: 'Kontakt entfernen',
        ADDRESS_BOOK_NEW_BTN: 'Hinzufügen',
        ADDRESS_BOOK_EDIT_BTN: 'Speichern',
        ADDRESS_BOOK_REMOVE_BTN: 'Entfernen',
        ADDRESS_BOOK_EXPORT_BTN: 'Adressbuch exportieren',
        ADDRESS_BOOK_IMPORT_BTN: 'Adressbuch importieren',
        ADDRESS_BOOK_CONTACT_LABEL: 'Label',
        ADDRESS_BOOK_ACCOUNT_ADDRESS: 'Kontoadresse',
        ADDRESS_BOOK_ACTIONS: 'Aktionen',
        ADDRESS_BOOK_CONFIRM_DELETE: 'Eintrag wirklich aus dem Adressbuch entfernen?',

        // EXPLORER MODULE NAV
        EXPLORER_NAV_HOME: 'Startseite',
        EXPLORER_NAV_NSM: 'Namensräume & Mosaike',
        EXPLORER_NAV_APOSTILLES: 'Apostillen',

        // EXPLORER HOME MODULE
        EXPLORER_HOME_TITLE: 'Explorer - Startseite',
        EXPLORER_HOME_NS: 'Ihre Namensräume',
        EXPLORER_HOME_MOSAICS: 'Ihre Mosaike',
        EXPLORER_HOME_NS_MULTISIG: 'Verknüpfte Multi-Signatur Namensräume',
        EXPLORER_HOME_MOSAICS_LEVY: 'Levy Mosaik',

        // EXPLORER NAMESPACES AND MOSAICS
        EXPLORER_NS_MOS_TITLE: 'Explorer - Namensräume und Mosaike',
        EXPLORER_NS_MOS_SELECT_MOS: 'Mosaik Details auswählen',
        EXPLORER_NS_MOS_SEARCH: 'Namensraum durchsuchen',

        // EXPLORER APOSTILLES MODULE
        EXPLORER_APOSTILLES_TITLE: 'Explorer - Apostillen',
        EXPLORER_APOSTILLES_YOURS: 'Ihre Apostillen',
        EXPLORER_APOSTILLES_PUBLIC: 'Öffentliche Senke',
        EXPLORER_APOSTILLES_NO_NTY: 'Keine *.nty Datei geladen, hier Klicken um eine zu importieren.',

        // ACCOUNT EXPLORER
        ACCOUNTS_EXPLORER_TITLE: 'Explorer - Konten',
        ACCOUNTS_EXPLORER_SEARCH: 'Suchen',

        // APOSTILLE HISTORY MODULE
        APOSTILLE_HISTORY_TITLE: 'Apostille Historie',
        APOSTILLE_HISTORY_BTN_TRANSFER: 'Besitz übertragen / trennen',
        APOSTILLE_HISTORY_BACKUP: 'Beurkundete Daten sichern',
        APOSTILLE_HISTORY_PURGE: 'Beurkundete Daten löschen',

        // CREATE APOSTILLE MODULE
        APOSTILLE_CREATE_TITLE: 'Create apostilles',
        APOSTILLE_CREATE_HELP: 'Want more info on apostille?',
        APOSTILLE_TRANSACTION_NAME: 'Apostille transaction',
        APOSTILLE_TRANSACTION_MULTISIG_NAME: 'Multisignature apostille transaction',
        APOSTILLE_KEEP_PRIVATE: 'Private, transferable, and updateable',
        APOSTILLE_USE_DEDICATED: 'Use dedicated account',
        APOSTILLE_FILES_TO_NOTARIZE: 'Files to notarize',
        APOSTILLE_REJECTED: 'Rejected',
        APOSTILLE_FILE_HASH: 'File hash',
        APOSTILLE_PRIVATE: 'Private',
        APOSTILLE_FILENAME: 'File name',
        APOSTILLE_NAME_TOO_LONG: 'File name is too long, 32 characters maximum allowed.',
        APOSTILLE_MAX_NUMBER: 'Maximum apostilles per batch is 25',
        APOSTILLE_INFORMATION_TITLE: 'Creating an Apostille',
        APOSTILLE_INFORMATION_1: 'Each file uploaded is processed automatically with options set on the left panel. You can add new files, change parameters and then add more files with different options. It\'ll also work if you switch to the multisig tab and add more files.',
        APOSTILLE_INFORMATION_2: '"<b>Private, transferable, and updateable</b>" option means that the hashes of your files are signed with your private key and sent to a dedicated hierarchical deterministic (HD) account. This way it is not possible for anyone but you to know what content has been time stamped unless you share the content.',
        APOSTILLE_INFORMATION_3: 'The dedicated HD account can be put under a multisig contract so that it may be transferred to others via 1-of-1 or any m-of-n multisig contract combination. It can also have additional information sent to it via messages with updates and augments to the original document or the product it represents.',
        APOSTILLE_INFORMATION_4: 'When two or more parties want to both approve of a blockchain timestamp, e.g. binding contracts, the account making the blockchain notarization can be put in an n-of-n multisig contract.',
        APOSTILLE_INFORMATION_5: 'For accounts in a multisignature contract that have selected "<b>Private, transferable, and updateable</b>", the initiating cosigner\'s private key is used to sign the hash and create a dedicated HD account, not the account that was multisigged.',
        APOSTILLE_INFORMATION_6: 'The HD account is a dedicated account generated from a hash of the filename that is then signed by your private key. This resulting hash of this process is then used to form a second private key.  This is the time-stamped file\'s private key; a first in blockchain technology only found in Apostille.',
        APOSTILLE_INFORMATION_7: 'The dedicated HD account allows you to store the original file\'s signed hash and its updates on a dedicated account. If <b>"Public"</b> is selected, the transaction goes to the public sink address (default).',
        APOSTILLE_INFORMATION_8: 'After the transactions are sent the download of an archive is triggered. It contains your signed files, your Apostille certificate for that file, and the new or updated .nty file to keep track of every file you time stamped on the NEM chain.',
        APOSTILLE_NO_NTY: 'No nty file loaded, please click here to import one or a new will be created automatically.',
        APOSTILLE_IMPORT_FILES: 'Import files',
        APOSTILLE_CREATE_TEXT: 'Create text document',
        APOSTILLE_ENTER_TEXT: 'Enter text to notarize...',
        APOSTILLE_DOCUMENT_TITLE: 'Document title',
        APOSTILLE_DROPBOX_MESSAGE: 'Please enter your password and desired tag(s) before selecting files',
        APOSTILLE_DROPBOX_MESSAGE_2: 'Please enter your password before selecting files',

        // AUDIT APOSTILLE MODULE
        APOSTILLE_AUDIT_TITLE: 'Audit apostilles',
        APOSTILLE_AUDIT_CHOOSE_NODE: 'Choose a node',
        APOSTILLE_AUDIT_CHOOSE_NODE_NOTE: 'Only a few nodes are able to search into the whole transaction history (option is disabled by default in NIS).', //
        APOSTILLE_AUDIT_WRONG_FORMAT: 'This file is not in apostille format !',
        APOSTILLE_AUDIT_FAIL_NO_PUBLIC_KEY: 'Verification failed, owner has no public key !',
        APOSTILLE_AUDIT_SUCCESS: 'File successfully audited !',
        APOSTILLE_AUDIT_FAIL: 'Verification failed !',
        APOSTILLE_AUDIT_WAITING: 'Apostille transfer might be waiting for confirmation !',
        APOSTILLE_AUDIT_NOT_FOUND: 'Transaction not found, make sure it is not waiting for confirmations otherwise apostille is invalid',
        APOSTILLE_AUDIT_ERROR_UNCONFIRMED: 'An error occurred while fetching unconfirmed data but transaction was not found',
        APOSTILLE_AUDIT_ERROR_SIGNER: 'An error occured while fetching signer data',
        APOSTILLE_AUDIT_ERROR_SIGNATURE: 'Verification failed, an error occured at signature verification !',
        APOSTILLE_AUDIT_INFORMATION_1: 'Files that can be audited must be in <b>apostille format</b>',
        APOSTILLE_AUDIT_INFORMATION_2: 'You can recognize those by the filename:',
        //APOSTILLE_AUDIT_NON_SIGNED: 'Non signed exemple:',
        //APOSTILLE_AUDIT_SIGNED: 'Signed exemple:',
        APOSTILLE_AUDIT_FILES: 'Audit files',
        APOSTILLE_AUDIT_FORMAT_EXAMPLE: 'Apostille format example',
        APOSTILLE_AUDIT_REMOVE_RECORDS: 'Remove records locally',

        // APOSTILLE MESSAGE MODULE
        APOSTILLE_MESSAGE_TITLE: 'Send message to notarization account',
        APOSTILLE_MESSAGE_NS_BRAND: 'Use my namespace to brand message',
        APOSTILLE_MESSAGE_ADD_MOSAIC: 'Add mosaic',
        APOSTILLE_NTY_ACCOUNT: 'Notarization account',
        APOSTILLE_REQUEST_MESSAGE: 'Request message',
        APOSTILLE_CREATE_MESSAGE_REQUEST: 'Create a message request',

        // TRANSFER APOSTILLE OWNLERSHIP MODULE
        APOSTILLE_TRANSFER_TITLE: 'Transfer or Split apostille ownership',

        // UPADTE APOSTILLE MODULE
        APOSTILLE_UPDATE_TITLE: 'Update apostille',

        // ERROR ALERTS
        ALERT_MISSING_FORM_DATA: 'Bitte das Formular vollständig ausfüllen !',
        ALERT_ERROR_WALLET_DOWNLOAD: 'Es existiert keine Wallet die heruntergeladen werden kann',
        ALERT_PASSWORDS_NOT_MATCHING: 'Das eingegebene Passwort oder die Passphrase stimmen nicht überein !',
        ALERT_INVALID_KEY_FOR_ADDR: 'Der private Schlüssel stimmt nicht mit der eingegebene Kontoadresse überein !',
        ALERT_NO_WALLET_LOADED: 'Der Zugriff auf das Dashboard ist ohne Wallet nicht möglich',
        ALERT_WALLET_NAME_EXISTS: 'Es existiert bereits eine Wallet mit dem gleichen Namen !',
        ALERT_INVALID_WALLET_FILE: 'Sie versuchen eine Datei zu öffnen, bei der es sich nicht um eine Wallet handelt !',
        ALERT_NO_NODE_SET: 'Bitte geben Sie eine Knotenadresse ein !',
        ALERT_INVALID_CUSTOM_NODE: 'Die eingegebene Knotenadresse ist ungültig !',
        ALERT_INVALID_WEBSOCKET_PORT: 'Der Websocket der eingegebenen Knotenadresse ist ungültig !',
        ALERT_MIJIN_DISABLED: 'Das Mijin Netzwerk ist aktuell deaktiviert, bitte ein anderes Netzwerk auswählen !',
        ALERT_GET_NS_BY_ID_ERROR: 'Fehler beim Abrufen der Informationen für den Namensraum, Grund: ',
        ALERT_GET_ACCOUNT_DATA_ERROR: 'Fehler beim Abrufen der Kontoinformationen, Grund: ',
        ALERT_ERROR_OCCURRED: 'Es ist ein Fehler aufgetreten! ',
        ALERT_INVALID_ADDR_FOR_NETWORK: ' ist nicht Teil des Netzwerkes ',
        ALERT_INVALID_PASSWORD: 'Das eingegebene Passwort ist ungültig !',
        ALERT_COSIG_ALREADY_IN_LIST: 'Mitunterzeichner ist bereits in der Liste für die Anpassungen enthalten !',
        ALERT_COSIGNATORY_HAS_NO_PUBLIC: 'Mitunterzeichner muss mindestens eine ausgehen Transaktion tätigen um einen öffentlichen Schlüssel zu erhalten !',
        ALERT_MULTISIG_HAS_NO_PUBLIC: 'Multi-Signatur Konto muss mindestens eine ausgehen Transaktion tätigen um einen öffentlichen Schlüssel zu erhalten !',
        ALERT_COSIG_CANNOT_BE_MULTISIG: 'Das für die Umwandlung ausgewählte Konto ist bereits Mitunterzeichner in einem anderen Vertrag. Es kann daher nicht umgewandelt werden',
        ALERT_NO_NS_OWNED: 'Das Konto hat keine aktiven Namensräume, bitte einen Namensraum registrieren oder ein Konto mit aktiven Namensraum auswählen',
        ALERT_UNLOCKED_INFO_ERROR: 'Beim Entsperren ist ein Fehler aufgetreten',
        ALERT_LOCK_ERROR: 'Fehler beim Sperren des Kontos, Grund: ',
        ALERT_UNLOCK_ERROR: 'Fehler beim Entsperren des Kontos, Grund: ',
        ALERT_SUPERNODES_ERROR: 'Fehler beim Empfangen der Daten der Supernodes !',
        ALERT_INVALID_NTY_FILE: 'Die bereitgestellte Datei ist nicht vom Typ *.nty !',
        ALERT_CREATE_WALLET_FAILED: 'Fehler beim Erstellen der Wallet, Grund: ',
        ALERT_DERIVATION_FROM_SEED_FAILED: 'Fehler beim Wiederherstellen des Kontos anhand des Seeds, Grund: ',
        ALERT_BIP32_GENERATION_FAILED: 'Fehler beim Erstellen der bip 32 Daten, Grund: ',
        ALERT_NO_WALLET_DATA: 'Fehler, die Wallet enthält keine Daten !',
        ALERT_CANNOT_LOGIN_WITHOU_WALLET: 'Fehler, die Anmeldung ist ohne Wallet nicht möglich !',
        ALERT_NO_WALLET_TO_SET: 'Fehler, es muss eine Wallet ausgewählt werden !',
        ALERT_INVALID_WALLET_INDEX: 'Fehler, der Index des Kontos befindet sich außerhalb der gültigen Parameter !',
        ALERT_NO_CURRENT_WALLET: 'Fehler, ohne Wallet kann kein Konto angelegt werden !',
        ALERT_ALREADY_MULTISIG: 'Das ausgewählte Konto ist bereits ein Multi-Signatur Konto !',
        ALERT_INVALID_MODIFICATION_ARRAY: 'Ein Multi-Signatur Konto kann nicht Mitunterzeichner von sich selbst sein, bitte Überprüfen Sie die Anpassungsliste !',
        ALERT_GET_MARKET_INFO_ERROR: 'Beim Abrufen der Marktinformationen ist ein Fehler aufgetreten !',
        ALERT_MULTISIG_CANNOT_BE_COSIG: 'Ein Multi-Signatur Konto kann nicht als Mitunterzeichner verwendet werden !',
        ALERT_PURGE_CANCELLED: 'Löschvorgang abgebrochen !',
        ALERT_MAINNET_DISABLED: 'Mainnet ist deaktiviert, bitte ein anderes Netzwerk auswählen !',
        ALERT_EMPTY_DECODED_MSG: 'Es ist ein unbekannter Fehler aufgetreten, Fehlercode nicht verfügbar !',
        ALERT_INVALID_NS_NAME: 'Der Name des Namensraums ist nicht gültig !',
        ALERT_INVALID_MOSAIC_NAME: 'Der Name des Mosaiks ist nicht gültig !',
        ALERT_MOSAIC_DESCRIPTION: 'Die Beschreibung des Mosaiks ist ungültig !',
        ALERT_GET_INCOMING_TXES_ERROR: 'Beim Abrufen der eingehenden Transaktionen ist ein Fehler aufgetreten, Grund: ',
        ALERT_GET_MOSAICS_DEFINITIONS_ERROR: 'Fehler beim Abrufen der Definitionen für das Mosaik, Grund: ',
        ALERT_GET_SUB_NS_ERROR: 'Fehler beim Abrufen der Definitionen für das Mosaik, Grund: ',
        ALERT_GET_MOSAICS_ERROR: 'Fehler beim Abrufen des Mosaiks, Grund: ',
        ALERT_GET_TRANSACTIONS_ERROR: 'Fehler beim Abrufen der Transaktion, Grund: ',
        ALERT_INVALID_ADDRESS_BOOK_FILE: 'Die Datei besitzt kein gültiges .adb Format !',
        ALERT_INVALID_ADDRESS: 'Die eingegebene Adresse ist nicht gültig !',
        ALERT_INVALID_AMOUNT: 'Die eingegebene Menge ist nicht gültig !',
        ALERT_INVALID_PRIVATE_KEY: 'Der eingegebene private Schlüssel ist nicht gültig !',
        ALERT_FILE_SIZE_ERROR: ' ist zu groß, die maximale Größe beträgt 100 MB',
        ALERT_MESSAGE_DECODE_KEY_ERROR: 'Entschlüsselung der Nachricht nicht möglich da ein Konto keine im Netzwerk sichtbaren öffentlichen Schlüssel besitzt',
        ALERT_FETCH_TIME_SYNC_ERROR: 'Es ist ein Fehler beim Abrufen der Netzwerkzeit aufgetreten !',
        ALERT_MULTISIG_MIN_SIGNATURE: 'Multi-Signatur Konto benötigt mindestens eine Signatur',
        ALERT_BTC_MARKET_ERROR: 'Fehler beim Abrufen des Bitcoin Preises',
        ALERT_COSIG_REMOVAL_LIMIT: 'Es kann jeweils nur ein Mitunterzeichner gleichzeitig entfernt werden',
        ALERT_MULTISIG_MIN_SIGNATURE_INVALID: 'Ungültige minimale Anzahl von Signaturen',
        ALERT_INSUFFICIENT_BALANCE: 'Insufficient Balance for performing the operation',
        ALERT_VOTING_ERROR: 'Invalid Vote',
        ALERT_BRAIN_PASSWORD_TOO_SHORT: 'Brain wallet passphrase must be at least 40 characters!',
        ALERT_NODE_SEEMS_OFFLINE: 'Node seems offline, please select another one',
        ALERT_WEAK_PASSPHRASE: 'Security score of the passphrase must be at least 3',
        ALERT_BRAIN_WALLET_UPGRADE: 'Your brain wallet seems weak ! All brain wallets must use a passphrase with at least 40 characters.<br> We advise you to create a new wallet from the signup page and move your funds into it.<br> More info <a href="https://forum.nem.io/t/2791" target="_blank"><u>here</u></a>.',
        ALERT_RECIPIENT_PUBLIC_KEY: 'Recipient has no public key visible to the network',
        ALERT_ENCRYPT_MULTISIG: 'Can\'t send encrypted messages via multisig accounts',
        ALERT_EXCHANGE_NEEDS_MESSAGE: 'Recipient is an exchange wallet and thus it requires a message for your account to be correctly credited, please read carefully the exchange deposit instructions!',
        ALERT_ACCOUNT_ALREADY_IN_ADDRESS_BOOK: 'Contact already present in address book!',
        ALERT_MAX_MOSAIC_SUPPLY: 'Maximum mosaic supply is 9\'000\'000\'000',
        ALERT_GET_MOSAIC_SUPPLY_ERROR: 'Error at fetching mosaic supply, reason: ',
        ALERT_ENCRYPTED_MSG_OFFLINE: 'Encrypted messaging is not enabled in offline transactions',

        // SUCCESS ALERTS
        ALERT_CREATE_WALLET_SUCCESS: 'Die Wallet wurde erfolgreich Erstellt und geladen !',
        ALERT_SUCCESS_PURGE: 'Lokalen Speicher erfolgreich gelöscht !',
        ALERT_SUCCESS_LOGOUT: 'Erfolgreich abgemeldet !',
        ALERT_LOAD_WALLET_SUCCESS: 'Wallet erfolgreich geladen !',
        ALERT_TRANSACTION_SUCCESS: 'Transaktion erfolgreich versendet !',
        ALERT_GENERATE_ACCOUNT_SUCCESS: 'Konto erfolgreich Erstellt. Nicht vergessen die aktualisierte Wallet herunterzuladen !',
        ALERT_UPGRADE_SUCCESS: 'Wallet erfolgreich Aktualisiert !',
        ALERT_SIGNATURE_SUCCESS: 'Transaktion erfolgreich Signiert !',
        ALERT_NTY_FILE_SUCCESS: 'Öffnen der nty Datei war erfolgreich !',
        ALERT_INCOMING_TX_FROM: 'Eingehende Transaktion von ',
        ALERT_ADDRESS_BOOK_FILE_SUCCESS: 'Adressbuch erfolgreich Importiert !',
        ALERT_VOTING_SUCCESS: 'Vote Sent Successfully',
        ALERT_POLL_CREATION_SUCCESS: 'Poll Created Successfully',
        ALERT_COPY_SIGNED_TX_SUCCESS: 'Signed transaction copied!',

        // CONVERT ACCOUNT TO MULTISIG
        AGGREGATE_MODIFICATION_TITLE: 'Ein Konto in ein Multi-Signatur Konto umwandeln',
        AGGREGATE_MODIFICATION_NAME: 'Transaktion für Anpassungen',
        AGGREGATE_MODIFICATION_MULTISIG_NAME: 'Multi-Signatur Transaktion für Anpassungen',
        AGGREGATE_ACCOUNT_SELECT_TITLE: 'Konto',
        AGGREGATE_ACCOUNT_SELECT: 'Ein Konto zum umwandeln auswählen',
        AGGREGATE_CUSTOM_ACCOUNT: 'Schlüssel importieren',
        AGGREGATE_ACCOUNT_TO_CONVERT_PRIVATE_TITLE: 'Privater Schlüssel',
        AGGREGATE_ACCOUNT_TO_CONVERT: 'Adresse des umzuwandelnden Kontos',
        AGGREGATE_ACCOUNT_TO_CONVERT_PRIVATE: 'Privater Schlüssel des umzuwandelnden Kontos',
        AGGREGATE_ADD_PLACEHOLDER: 'Kontoadresse oder @alias hinzufügen',
        AGGREGATE_ADD_BTN_TITLE: 'Mitunterzeichner',
        AGGREGATE_MIN_SIGNATURES: 'Minimale Anzahl an benötigten Signaturen',
        AGGREGATE_MIN_SIGNATURES_PLACEHOLDER: 'Minimale Anzahl an benötigten Signaturen um eine Transaktion zu bestätigen',
        AGGREGATE_MODIFICATION_LIST: 'Liste der Anpassungen',
        AGGREGATE_COSIG_LIST: 'Adressliste der Mitunterzeichner',

        AGGREGATE_MODIFICATION_EDIT_TITLE: 'Einen Mulit-Signatur Vertrag anpassen',
        AGGREGATE_MODIFICATION_EDIT_SELECT_TITLE: 'Konto',
        AGGREGATE_MODIFICATION_EDIT_SELECT: 'Zu bearbeitendes Konto auswählen',
        AGGREGATE_ADD_REMOVE_TITLE: 'Unterzeichner',
        AGGREGATE_ADD_REMOVE_PLACEHOLDER: 'Kontoadresse oder @alias hinzufügen',
        AGGREGATE_MODIFICATION_RELATIVE_CHANGE: 'Signaturen',
        AGGREGATE_MODIFICATION_RELATIVE_CHANGE_PLACEHOLDER: 'Anzahl von benötigten Signaturen hinzufügen (n) oder entfernen (-n)',
        AGGREGATE_SELECTED_ACCOUNT_INFO: 'Kontoinformationen anpassen',
        AGGREGATE_MIN_SIGNATURES: 'Minimum Signaturen',
        AGGREGATE_SELECT_WALLET_ACCOUNT: 'Konto der Wallet benutzen',
        AGGREGATE_ADD_COSIG: 'Add cosignatory',
        AGGREGATE_REMOVE_COSIG: 'Remove cosignatory',

        // SIGN MULTISIGNATURE TRANSACTIONS
        SIGN_MULTISIG_TRANSACTIONS_TITLE: 'Multi-Signatur Transaktion signieren',

        // LOGIN MODULE
        LOGIN_MEMBER_TITLE: 'Bereits Teil der NEM Community ?',
        LOGIN_UPGRADE_TITLE: 'Wallet benötigt eine Aktualisierung',
        LOGIN_UPGRADE_MESSAGE: 'Die ausgewählte Wallet benötigt eine Aktualisierung. Diese Aktion erzeugt einen weiteren öffentlichen Schlüssel, welcher Ihrem Hauptkonto hinzugefügt wird. Der Download der angepassten Wallet wird nach der Aktualisierung automatisch angestoßen. Diese Datei <b><u>muss</u></b> auf jeden Fall heruntergeladen werden!',
        LOGIN_UPGRADE_BUTTON: 'Wallet aktualisieren',
        LOGIN_IMPORT_BUTTON: 'Wallet importieren',
        LOGIN_SELECT_WALLET_YOURS: 'Wallet auswählen',
        LOGIN_SELECT_WALLET: 'Eine Wallet im lokalen Speicher auswählen',
        LOGIN_LOGIN_BUTTON: 'Anmelden',
        LOGIN_NOTE: 'No wallet? Import one or <a href="#!/signup">signup</a>.',

        // SIGNUP MODULE
        SIGNUP_TITLE: 'Der NEM Community beitreten !',
        SIGNUP_SELECT_WALLET_TYPE: 'Select a type of wallet to create',
        SIGNUP_SELECT_WALLET_TYPE_STAND_BY: 'Place the cursor on a wallet type to show information.',
        SIGNUP_CREATE_WALLET_TITLE: 'Wallet',
        SIGNUP_CREATE_WALLET_INFO: 'Simple wallets contains a primary private key that is generated randomly.',
        SIGNUP_PRIVATE_KEY_WALLET_TITLE: 'Wallet aus privatem Schlüssel',
        SIGNUP_PRIVATE_KEY_WALLET_INFO: 'Private key wallets contains a primary private key that you want to import.',
        SIGNUP_BRAIN_WALLET_TITLE: 'Brain Wallet',
        SIGNUP_BRAIN_WALLET_INFO: 'Brain wallets contains a primary private key that is generated from a passphrase. This allow to retrieve the wallet only by knowing that exact passphrase.',
        SIGNUP_CREATE_WALLET_BUTTON: 'Wallet erstellen',
        SIGNUP_PRIVATE_KEY_WALLET_BUTTON: 'Wallet aus privatem Schlüssel erstellen',
        SIGNUP_BRAIN_WALLET_BUTTON: 'Brain Wallet erstellen',
        SIGNUP_CREATE_WALLET_WARNING: 'Bitte informieren Sie sich über die <a href="https://www.w3.org/TR/2014/WD-WebCryptoAPI-20140325/#RandomSource-interface" rel="nofollow" target="_blank">Risiken</a> welche durch clientseitig generierte Schlüssel entstehen können. Wir übernehmen keine Verantwortung für Verluste, die durch den Einsatz eines unsicheren Zufallszahlengenerators entstehen können. Die sicherste Methode zum Erstellen eines privaten Schlüssels stellt der NEM Client (NCC) dar.',
        SIGNUP_NETWORK_SELECT: 'Netzwerk auswählen',
        SIGNUP_NETWORK_MAINNET: 'Mainnet is the <b><u>real</u></b> NEM network. Addresses start with \'N\'.',
        SIGNUP_NETWORK_TESTNET: 'Testnet is the <b><u>test</u></b> network. Addresses start with \'T\'.',
        SIGNUP_NETWORK_MIJIN: 'Mijin is the private version of NEM. Addresses start with \'M\'.',
        SIGNUP_BRAIN_WALLET_WARNING: 'Bitte informieren Sie sich über die <a href="https://en.bitcoin.it/wiki/Brainwallet" rel="nofollow" target="_blank">Risiken</a> die von einer Brain Wallets ausgehen können. Brain Wallets benutzen NUR eine Passphrase, welche mehrfach gehasht wurde. Es ist daher unbedingt Erforderlich, dass Sie eine SICHERE Passphrase mit mindestens 40 Zeichen verwenden. <a href="https://xkcd.com/936/" rel="nofollow" target="_blank">XKCD #936</a>',
        SIGNUP_PRIVATE_KEY_WALLET_WARNING: 'Wallets, welche aus einem importierten privaten Schlüssel erzeugt werden, benutzen NUR das Passwort um den privaten Schlüssel vor unberechtigten Zugriffen zu schützen. Es ist daher unbedingt Erforderlich ein SICHERES Passwort auszuwählen.',
        SIGNUP_CREATE_START_WARNING: 'Please, follow each step carefully!',
        SIGNUP_CREATE_START_CONNECTION_WARNING: 'It is recommended to disconnect from internet while creating your wallet and backing up your data.',
        SIGNUP_CREATE_READY_BTN: 'Ready',
        SIGNUP_CREATE_ENTER_NAME: 'Enter a wallet name',
        SIGNUP_CREATE_ENTER_PASSWORD: 'Enter a password',
        SIGNUP_CREATE_ENTER_PASSPHRASE: 'Enter a passphrase',
        SIGNUP_CREATE_CONFIRM_PASSWORD: 'Confirm above password',
        SIGNUP_CREATE_CONFIRM_PASSPHRASE: 'Confirm above passphrase',
        SIGNUP_CREATE_ENTER_PRIVATE_KEY: 'Enter a private key',
        SIGNUP_CREATE_ADDRESS_FROM_PK: 'Address corresponding to above key',
        SIGNUP_CREATE_WALLET_ADD_ENTROPY_INFO: 'We are now going to generate your primary private key. <b>Please click on start and move your cursor around to add more entropy.</b>',
        SIGNUP_COMMON_WALLET_WARNING_TITLE: 'Sicherheitswarnung zur Benutzung der Wallet',
        SIGNUP_COMMON_WALLET_WARNING_1: 'Wallets werden <b>temporär</b> im lokalen Speicher des Browsers abgelegt. Add-Ons im Browser können dafür sorgen, dass dieser lokale Speicher regelmäßig geleert wird. Dies führt dazu, dass die Wallet bei der Anmeldung nicht mehr Ausgewählt werden kann. In diesem Fall muss die Wallet wiederhergestellt werden. Es ist also sehr wichtig, dass Sie alle Informationen zur Wiederherstellung der Wallet verfügbar haben.',
        SIGNUP_COMMON_WALLET_WARNING_2: 'Bei der Erstellung der Wallet sollte automatischer eine Datei heruntergeladen worden sein. Dies ist die <b><i>.wlt</i></b> Datei welche als Backup dient. Mit dieser Datei können Sie Ihre Wallet wiederherstellen falls der lokale Speicher des Browsers gelöscht wurde.',
        SIGNUP_COMMON_WALLET_WARNING_3: 'Es wurde keine <b><i>.wlt</i></b> Datei heruntergeladen? In diesem Fall benutzen Sie bitte den folgenden Button um den Inhalt der Wallet Datei anzuzeigen und eine manuelle Wallet zu erzeugen :',
        SIGNUP_COMMON_WALLET_WARNING_4: 'Zusätzlich zur Wallet ist es <b><u>Notwendig</u></b> den privaten Schlüssel zu sichern :',
        SIGNUP_COMMON_WALLET_WARNING_5: 'Es obliegt Ihrer Verantwortung ein Backup des privaten Schlüssels zu besitzen, bevor Sie Guthaben auf das Konto überweisen.',
        SIGNUP_COMMON_WALLET_WARNING_6: 'Jede Wallet hat einen <b><u>primären privaten Schlüssel</u></b> (Ihrer wird oben angezeigt) welcher für die Erstellung von weiteren Konten verwendet wird (BIP32). Bei der Wiederherstellung muss unbedingt das <b><u>gleiche Passwort</u></b> verwendet werden. Andernfalls kann nur das primäre Konto wiederhergestellt werden. Vergessen Sie also nicht auch Ihr <b><u>Passwort zu sichern</u></b>.',
        SIGNUP_COMMON_WALLET_WARNING_BTN_1: 'Inhalt der Wallet Datei anzeigen',
        SIGNUP_COMMON_WALLET_WARNING_BTN_1_INFO: 'Um eine Wallet Datei zu erstellen, kopieren Sie bitte den oben angezeigten Base64 kodierten Text in eine leere Datei. Speichern Sie die Datei als <b><i>IhrWalletName.wlt</i></b> ab. Anschließend kann die Datei importiert werden .',
        SIGNUP_COMMON_WALLET_WARNING_BTN_2: 'Privaten Schlüssel anzeigen',
        SIGNUP_COMMON_WALLET_WARNING_BTN_2_INFO: 'Es ist ratsam, den privaten Schlüssel nur Offline aufzubewahren. Achten Sie darauf, den privaten Schlüssel niemals unverschlüsselt abzuspeichern.',
        SIGNUP_COMMON_WALLET_WARNING_FOOTER: 'Mit dem Klick auf "Ich stimme zu" bestätigen Sie, dass Sie die oben aufgeführten Warnungen gelesen und verstanden haben.',
        SIGNUP_COMMON_WALLET_WARNING_CONFIRM_1: 'Wallet Datei gesichert',
        SIGNUP_COMMON_WALLET_WARNING_CONFIRM_2: 'Privater Schlüssels und Kennwort gesichert',
        SIGNUP_COMMON_WALLET_WARNING_CONFIRM_3: 'Ich stimme zu',
        SIGNUP_COMMON_WALLET_WARNING_UNDERSTOOD: 'Understood',
        SIGNUP_COMMON_WALLET_WARNING_DOWNLOAD: 'Download wallet',
        SIGNUP_ESTIMATED_PASSPHRASE_STRENGTH: 'Estimated passphrase strength',
        SIGNUP_ESTIMATED_GUESS_TIMES: 'Estimated guess times',

        // FAQ MODULE
        FAQ_TITLE: 'Häufig gestellte Fragen',
        FAQ_QUESTION_1: 'Wie funktioniert die NanoWallet ?',
        FAQ_ANSWER_1: 'Nano Wallet is built using the latest crypto libraries with ES6 and AngularJS. It is a full client-side application that never sends any sensitive data through the wire; everything happens in your browser from creating private keys to the signing of transactions.',
        FAQ_QUESTION_2: 'Ist die Nutzung kostenlos ?',
        FAQ_ANSWER_2: 'Alle Aktionen der NanoWallet werden Clientseitig durchgeführt. Es werden keine Dienste von Drittanbietern genutzt. Dadurch ist die Werwendung der NanoWallet kostenlos.',
        FAQ_QUESTION_3: 'Wieso befindet sich bereits ein Mosaik in meinem Besitz ?',
        FAQ_ANSWER_3: 'Because XEM is the default currency of the NEM blockchain, every user already has it registered to their wallet, even if their balance is 0. Its namespace is NEM and the mosaic name is XEM',
        FAQ_QUESTION_4: 'Gibt es eine Roadmap ?',
        FAQ_ANSWER_4: 'The current roadmap includes integration of all NEM client features and completion of community funded projects to work across this wallet.',
        FAQ_QUESTION_5: 'Werden irgendwo XEM verschenkt ?',
        FAQ_ANSWER_5: 'The NEM faucet is currently down, but you can consult the NEM forum to know about the available bounties.',
        FAQ_QUESTION_6: 'Wo kann ich mehr Informationen über NEM finden ?',
        FAQ_ANSWER_6_FORUM: 'Offizielles Forum',
        FAQ_ANSWER_6_WEBSITE: 'Offizielle Webseite',
        FAQ_ANSWER_6_BTT: 'Offizieller BitcoinTalk Thread',
        FAQ_QUESTION_7: 'Nothing is shown on the dashboard',
        FAQ_ANSWER_7: 'Please be sure to check the node circle in the top navigation bar. <br> Red circle means that connection to the node failed. <br> Click on "Node" and select another one from the dropdown list or use a custom node. <br> <a href="https://supernodes.nem.io" target="_blank">Supernodes.nem.io</a> has a lot of nodes that you can use.</a>',
        FAQ_QUESTION_8: 'Cosignatories cannot see the transaction to sign',
        FAQ_ANSWER_8: 'In this case go to "Services", look for "Multisignature and Multi-User Accounts" and click on "Sign multisig transactions".',
        FAQ_QUESTION_9: 'What are the best security practices ?',
        FAQ_ANSWER_9: 'It is hightly recommended to always store private keys on paper.<br> You can print them and archive them somewhere safe. <br><br> Regarding wallet files you should always keep multiple copies on different cold locations, like usb sticks. <br> Passwords must always be unique and complex, for this reason, always write it down first. <br><br> When you want to check your wallet or realise operations:<br> - Plug the usb stick <br> - Import the wallet in Nano<br> - Unplug the usb stick.<br><br> A copy of your wallet is stored in the browser local storage for all the time you need.<br> Once you are done, logout and purge the wallets in local storage using the purge button on the right side of the footer.',
        FAQ_QUESTION_10: 'Where to find information about my account (address, etc) ?',
        FAQ_ANSWER_10: 'If you look at the top navigation bar, you will see an <b><i>"Account"</b></i> button between <b><i>"Node"</b></i> and <b><i>"Language"</b></i>. There you can find your address, public key, vested balance and other important data.',
        FAQ_QUESTION_11: 'I have deposited XEM to an exchange but nothing has been credited ?',
        FAQ_ANSWER_11_1: 'First you must check that the hash of your transaction is pointing to an existing transaction on the <a target="_blank" href="http://chain.nem.ninja">explorer</a> (please, note that the explorer is a few blocks behind).',
        FAQ_ANSWER_11_2: 'Most exchanges are asking for an identification message to credit your deposit. Make sure that you have followed carefully the exchange instructions and added a message that is NOT encrypted. ',
        FAQ_ANSWER_11_3: 'Even if you have added a message, it can happen that exchanges may not process your deposit, because of issues on their side.',
        FAQ_ANSWER_11_4: 'You must contact the exchange support, explain the situation and provide them the hash of the transaction.',
        FAQ_QUESTION_12: 'How to check if I am on a fork ?',
        FAQ_ANSWER_12_1: 'Click on <b><i>"Node"</b></i>, in the top navigation bar, to open the node panel.',
        FAQ_ANSWER_12_2: 'Look at the chain height and compare it to the height shown <a target="_blank" href="http://hugealice.nem.ninja:7890/chain/height">here</a>.',
        FAQ_ANSWER_12_3: 'If different of more than 5 blocks then you are probably on a fork.',
        FAQ_ANSWER_12_4: 'To fix, just choose another node from the dropdown in the node panel, it will restore your account at it\'s latest state on the real network.',

        // FORM RELATED
        FORM_PASSWORD_FIELD_PLACEHOLDER: 'Wallet Passwort oder Passphrase eingeben',
        FORM_WALLET_NAME_FIELD_PLACEHOLDER: 'Name der Wallet',
        FORM_SIGNUP_PASSWORD_FIELD_PLACEHOLDER: 'Passwort',
        FORM_PASSWORD: 'Passwort',
        FORM_PASSWORD_CONFIRM: 'Bestätigen',
        FORM_PASSPHRASE_CONFIRM: 'Bestätigen',
        FORM_CONFIRM_PASSWORD_FIELD_PLACEHOLDER: 'Passwort zur Bestätigung erneut eingeben',
        FORM_PASSPHRASE_FIELD_PLACEHOLDER: 'Passphrase',
        FORM_CONFIRM_PASSPHRASE_FIELD_PLACEHOLDER: 'Passphrase zur Bestätigung erneut eingeben',
        FORM_ADDRESS_FIELD_PLACEHOLDER: 'Kontoadresse',
        FORM_PRIVATE_KEY_FIELD_PLACEHOLDER: 'Privater Schlüssel',
        FORM_SIDE_BTN_BALANCE: 'Kontostand',
        FORM_SIDE_BTN_PAY_TO: 'Empfängerkonto',
        FORM_SIDE_BTN_TX_FEE: 'Transaktionsgebühr',
        FORM_SIDE_BTN_RENTAL_FEE: 'Mietgebühr',
        FORM_SIDE_BTN_LEVY_FEE: 'Levy Gebühr',
        FORM_RECIPIENT_PLACEHOLDER: 'Empfängeradresse oder @alias',
        FORM_INVOICE_RECIPIENT_PLACEHOLDER: 'Empfängeradresse',
        FORM_SIDE_BTN_ALIAS_OF: 'Alias von',
        FORM_MESSAGE_PLACEHOLDER: 'Nachricht',
        FORM_MOSAIC_NAME_PLACEHOLDER: 'Name des Mosaik',
        FORM_ADDRESS_ALIAS_PLACEHOLDER: 'Kontoadresse oder @alias',
        FORM_BTN_GET_ALIAS: 'Get alias address',
        FORM_BTN_OPEN_ADB: 'Open address book',
        FORM_SELECT_NAMESPACE: 'Select a namespace',

        // VOTING MODULE
        PORTAL_VOTING_TITLE: 'Voting',
        PORTAL_VOTING_TEXT: 'Create and vote on polls',
        PORTAL_VOTING_BTN1: 'See Polls',
        PORTAL_VOTING_BTN2: 'Create Poll',
        FORM_TITLE_FIELD_PLACEHOLDER: 'Title',
        FORM_DESCRIPTION_FIELD_PLACEHOLDER: 'Write your description here',
        FORM_OPTION_FIELD_PLACEHOLDER: 'write option',
        FORM_WHITELIST_FIELD_PLACEHOLDER: 'account address',
        FORM_SELECT_MULTISIG: 'Select a multisignature account',
        FORM_SELECT_CONTACT: 'Select a contact',

        // TREZOR RELATED
        TREZOR_TITLE: 'TREZOR',
        TREZOR_TEXT: 'The TREZOR hardware wallet allows you to secure your XEM, mosaics and multisig accounts',
        TREZOR_BUTTON: 'Login with TREZOR',

        // LEDGER NANO RELATED
        LEDGER_NANO_TITLE: 'LEDGER NANO',
        LEDGER_NANO_TEXT: 'The LEDGER NANO hardware wallet allows you to secure your XEM, mosaics and multisig accounts',
        LEDGER_NANO_BUTTON: 'Login with LEDGER NANO',
        LEDGER_NANO_NO_DEVICE: 'Ledger device not found',
        LEDGER_NANO_CHECK_DEVICE: 'Please check your Ledger device!',
        LEDGER_NANO_NOT_USING_NEM_APP: 'You are not using NEM app on your Ledger device',
        LEDGER_NANO_NOT_USING_XYM_APP: 'You are not using Symbol app on your Ledger device',
        LEDGER_NANO_NOT_SUPPORTED_APP: 'Please check if you have an up-to-date NEM application open on your Ledger device',
        LEDGER_NANO_CONNECTED_OTHER_APP: 'Another app is already connected to your Ledger device. Please close it then try again',
        LEDGER_NANO_NOT_OPENED_NEM_APP: 'Please open NEM app on your Ledger device',
        LEDGER_NANO_NOT_OPENED_XYM_APP: 'Please open Symbol app on your Ledger device',
        LEDGER_NANO_DEVICE_LOCKED: 'Please unlock your Ledger device',
        LEDGER_NANO_USER_REJECT_LOGIN: 'Login cancelled by user',
        LEDGER_NANO_USER_REJECT_REQUEST: 'Request cancelled by user',
        LEDGER_NANO_FOLLOW_INSTRUCTION: 'Follow instructions on your Ledger device',
        LEDGER_NANO_TRANSACTION_TOO_BIG: 'The transaction is too big to sign on your Ledger device',
        LEDGER_NANO_TRANSACTION_USER_CANCEL: 'Signing cancelled by user',
        LEDGER_NANO_TRANSACTION_FAILED: 'Failed to sign transaction, reason: ',
        LEDGER_NANO_OPTIN_INFO_1: 'You can use Symbol Ledger app to get account for Symbol Opt-in.',
        LEDGER_NANO_OPTIN_INFO_2: 'Please open Symbol Ledger app on your device and click on Import Symbol account.',
        LEDGER_NANO_IMPORT_SYMBOL: 'Import Symbol account',

        // CREATE OFFLINE TRANSACTION MODULE
        OFFLINE_TX_TITLE: 'Prepare an offline transaction',
        OFFLINE_TX_NO_WALLET: 'Please import a wallet from login module to see the form.',
        OFFLINE_TX_INFO_1: 'Make sure to be disconnected of internet when importing your wallet and creating the transaction!',
        OFFLINE_TX_INFO_2: 'Only simple transactions can be created because a connection is needed to fetch mosaics and multisig information from NEM nodes.',
        OFFLINE_TX_INFO_3: 'After clicking the "create" button in the left panel, you will find the signed transaction below.',
        OFFLINE_TX_INFO_4: 'A signed transaction is immutable and will be effective only if released to the network before the default deadline of 24 hours.',
        OFFLINE_TX_SIGNED: 'Signed transaction',
        OFFLINE_TX_RELEASE: 'Open in release module',

        // RELEASE OFFLINE TRANSACTION MODULE
        RELEASE_OFFLINE_TX_TITLE: 'Release a transaction to the network',
        RELEASE_OFFLINE_TX_PARAMETERS: 'Transaction parameters',
        RELEASE_OFFLINE_TX_INFO_1: 'To release a transaction you must be connected to internet.',
        RELEASE_OFFLINE_TX_INFO_2: 'Make sure that you have selected the right network and a working node or it will be rejected.',
        RELEASE_OFFLINE_TX_INFO_3: 'It is not possible to send a signed transaction twice. One signed transaction will always generate the same hash and two transactions cannot have the same hash.',
        RELEASE_OFFLINE_TX_INFO_4: 'You can release a signed transaction from any computer safely.',

        // INVOICE MODULE
        CREATE_INVOICE_TITLE: 'Create an invoice',

        // CREATE SIGNED MESSAGE MODULE
        CREATE_SIGNED_MSG_TITLE: "Create a signed message",
        CREATE_SIGNED_MSG_NAME: 'Signed message',
        CREATE_SIGNED_MSG_SIGN: 'Sign message',

        // VERIFY SIGNED MESSAGE MODULE
        VERIFY_SIGNED_MSG_TITLE: "Verify a signed message",
        VERIFY_SIGNED_MSG_SIG_VALID: 'Signature is valid',
        VERIFY_SIGNED_MSG_SIG_NOT_VALID: 'Signature is <b>NOT</b> valid',
        VERIFY_SIGNED_MSG_NOT_VALID: 'Signed message is not valid!',

        // DNS MODULE
        DNS_SHORT_DESC: "Decentralized Domain Name System (DNS) service for namespace.nem domains",
        DNS_CONFIGURE: "Configure DNS",
        DNS_SEARCH_DNS: "Search DNS",
        DNS_GO_SEARCH: "GO!",
        DNS_GET_INFO: "Get info",
        DNS_SEARCH_HEADLINE: "Search DNS",
        DNS_SEARCH_HELP: "DNS help",
        DNS_SEARCH: "Search",
        DNS_SEARCH_HELP_INFO: "Type a namespace.nem to lookup associated DNS information or go directly to website. ",
        //DNS CONFIGURE
        DNS_SELECT_NAMESPACE:"select namespace",
        DNS_POINTER_ADDRESS:"Pointer address",
        DNS_IP_ADDRESS:"ip address",
        DNS_ORGA:"Organization",
        DNS_COUNTRY:"Country",
        DNS_ADDRESS:"Address",
        DNS_PHONE:"Phone",
        DNS_EMAIL:"Email",
        DNS_OTHERINFO:"Other info",
        DNS_JSONMSG:"Json message",
        DNS_CHAR_LEFT:"Characters Left",
        DNS_HELP1:"The owner of a NEM namespace can use the NEM DNS in a few easy steps. The DNS is built around the namespace platform in the NEM ecosystem and an associated pointer address (PA). The namespace owner needs to send a transaction to the namespace pointer address including a non-encrypted message in json format with information related to the namespace. The message can include relevant information such as IP address, ownership info, physical address, contact info and much more.",
        DNS_HELP2:"This is how you do it:",
        DNS_HELP3:"1. select namespace",
        DNS_HELP4:"2. write relevant or update DNS information",
        DNS_HELP5:"3. send transaction to pointer address",
        //DNS ALERTS
        ALERT_DNS_SUCCESS: "Information found",
        ALERT_DNS_NO_INFO_FOUND: "No DNS info found",

        // IMPORT WALLET QRCODE
        IMPORT_WALLET_QRCODE_TITLE: 'Import wallet QR code',
        IMPORT_WALLET_QRCODE_INFORMATION: 'Support wallet QR code: NEM wechat wallet, ios, android.',
        IMPORT_WALLET_QRCODE_LOAD: 'Load wallet QR code',
        IMPORT_WALLET_QRCODE_SCAN: 'Scan',
        IMPORT_WALLET_QRCODE_STOP_SCAN: 'Stop scan',

        //NEMonster
        NEMONSTER_SHORT_DESC: "Welcome to NEMonsters, a witty little collection game based on the NEM blockchain.",
        NEMONSTER_CATCH: "Catch",
        NEMONSTER_GET: "Get some monsters",
        NEMONSTER_DESC: "Welcome to NEMonsters, a witty little collection game based on the NEM blockchain. You can catch and collect over 110,000,000 different combinations of generated monsters; spanning from different colors, names and other spicy characteristics.  You catch a new monster by sending a fixed transaction; the monster is summoned when the transaction is confirmed. The characteristics of your new (evil) monster is based on the transaction hash – how cool is that. See if you can catch some of the monsters from the NEM foundation.",

        // CATAPULT OPT IN MODULE
        PORTAL_CATAPULTOPTIN_TITLE: 'Symbol Opt In',
        PORTAL_CATAPULTOPTIN_TEXT: 'Use this module to receive XYM on the Symbol network. You may also opt in to have your namespaces registered and multisig accounts opted in. Your mosaic balances, Apostille data, delegating harvesting contracts, and all other DAP content will not carry forward. Please, read more ',
        PORTAL_CATAPULTOPTIN_TEXT_LINK: 'here.',
        PORTAL_CATAPULTOPTIN_MULTISIG_TEXT: 'Your multi-signature opt-in request must be issued with cosigner accounts',
        PORTAL_CATAPULTOPTIN_BTN_1: 'Claim XYM and Namespaces with a Symbol Opt In',
        PORTAL_CATAPULTOPTIN_BTN_2: 'Sign a Multisig Opt In Message',
        PORTAL_CATAPULTOPTIN_TREZOR_TEXT: 'Opt in with trezor is not implemented yet. If you want to Opt in, please move your funds to a normal account.',
        TITLE_CATAPULTOPTIN: 'Symbol Opt In',
        CATAPULTOPTIN_CREATE_HELP: 'Want to know more about opting in to Symbol?',
        CATAPULTOPTIN_TRANSACTION: 'Opt In Transaction',
        CATAPULTOPTIN_ACCOUNT_UNLOCK: 'Enter your Symbol mnemonic',
        CATAPULTOPTIN_ACCOUNT_UNLOCK_PLACEHOLDER: 'Please provide the mnemonic passphrase for your Symbol Account that you opted in',
        CATAPULTOPTIN_ACCOUNT_STEP_1: 'Step 1: Please select an account to Opt In',
        CATAPULTOPTIN_ACCOUNT_STEP_1_NEW: 'Step 1: Please select an account to Opt In',
        CATAPULTOPTIN_ACCOUNT_STEP_2: 'Step 2: Review my Symbol account opt in information',
        CATAPULTOPTIN_ACCOUNT_MS_STEP_2: 'Step 2: Review multisig Symbol account information',
        CATAPULTOPTIN_ACCOUNT_STEP_3: 'Step 3: Review my namespaces to be opted in',
        CATAPULTOPTIN_ACCOUNT_STEP_4: 'Step 4: Review VRF keys in opt in',
        CATAPULTOPTIN_INCLUDE_VRF: 'Include VRF keys in opt in',
        CATAPULTOPTIN_VRF_KEYS: 'VRF keys',
        CATAPULTOPTIN_VRF_PUBLIC_KEY: 'VRF public key',
        CATAPULTOPTIN_ACCOUNT_MS_STEP_3: 'Step 3: Review multisig namespaces to be opted in',
        CATAPULTOPTIN_ACCOUNT_STEP_SIGN: 'Step 2: Sign Symbol Opt In',
        CATAPULTOPTIN_REVIEW_MULTISIG_RESULT: 'Review Multisig Symbol Opt In',
        CATAPULTOPTIN_REGISTER: 'Register Symbol Opt In',
        CATAPULTOPTIN_CREATE_ADDRESS: 'Create a new address on Symbol from mnemonic.',
        CATAPULTOPTIN_INCLUDE_NAMESPACE: 'Include my namespaces in the opt in',
        CATAPULTOPTIN_INCLUDE_MS_NAMESPACE: 'Include multisig account namespaces in the opt in',
        CATAPULTOPTIN_MULTISIG_CONTRACT_CONSIGNATURES: 'Multisig Contract Cosignatures',
        SIGN_MULTISIG_OPTIN_TRANSACTIONS_TITLE: 'Sign Multisignature Opt In Transactions',
        CATAPULTOPTIN_NAMESPACE_TO_DELETE: 'Opt Out of Namespace',
        CATAPULTOPTIN_NAMESPACE_REMOVE: 'Enter namespace to be removed',
        CATAPULTOPTIN_ENTER_PK: 'Enter a private key to generate Symbol account',
        CATAPULTOPTIN_ENTER_PASSWORD: 'Enter your password to generate Symbol account',
        CATAPULTOPTIN_REMOVE_NAMESPACE: 'Remove Namespace',
        CATAPULTOPTIN_OPT_IN_SUCCESS: 'Opt In completed successfully',
        CATAPULTOPTIN_OPT_IN_PENDING_SIGNATURES: 'Opt In pending cosignatories',
        CATAPULTOPTIN_TRANSFER_TRANSACTION_MULTISIG_NAME: 'Symbol Multisig Account Opt in Approval',
        CATAPULTOPTIN_NIS1: 'NIS1',
        CATAPULTOPTIN_OPTIN_ACCOUNT: 'Opt in account:',
        CATAPULTOPTIN_OPTIN_ACCOUNT_PK: 'Opt in account public key:',
        CATAPULTOPTIN_NAMESPACES_OPTIN: 'My opted in namespaces',
        CATAPULTOPTIN_CATAPULT: 'Symbol',
        CATAPULTOPTIN_OPTIN_ACCOUNT_ADDRESS: 'Opt in account address:',
        CATAPULTOPTIN_UNLOCK: 'Unlock Symbol Account',
        CATAPULTOPTIN_CONFIRM_OPTIN: 'Confirm Symbol Opt In',
        CATAPULT_OPT_IN_RESUME: 'Opt In Transaction Confirmation',
        CATAPULT_OPT_IN_RESUME_TEXT:'The following transaction will create a new Symbol account. To claim your funds, you need to back up your Mnemonic passphrase.',
        CATAPULT_OPT_IN_SUCCESS: 'Opt In Successful',
        CATAPULT_OPT_IN_BALANCE_SNAPSHOT: 'Balance to be included in Symbol',
        CATAPULT_OPT_IN_SUCCESS_SIGNING: 'Opt In signed successfully',
        CATAPULT_OPT_IN_UNDERSTAND: 'Considering the change of private key when used with Symbol, it is important that you understand that your account private key on Symbol will be different from your old private key. Please, confirm that you have made a copy of the new private key by entering ‘Yes, I understand’ in the field below.',
        CATAPULT_OPT_IN_CONFIRM_BACKUP: 'I have backed up my mnemonic passphrase for the opt in process and understand it is my responsibility to save and back it up.',
        CATAPULT_OPT_IN_UNDERSTAND_FUNDS: 'I understand that only the funds in my account on the snapshot block are the funds that will be included in my XYM account balance at Symbol launch. Any account balance changes after this opt transaction but before the snapshot will be reflected at Symbol launch.',
        GENERAL_MIN_SIGNATURES_REQUIRED: 'Minimum signatures required',
        SYMBOL_OPTIN_INITIATOR: 'Opt In initiator',
        CATAPULT_BACKUP_WALLET: 'Backup Symbol Wallet',
        CATAPULT_DOWNLOAD_WALLET: 'Download Encrypted Symbol Wallet',
        MNEMONIC: 'Mnemonic',
        CATAPULT_OPT_IN_LOADING: 'Fetching Opt In Status...',
        COSIGNER_NOT_OPTIN: 'Cosigner has not started the opt in process yet',
        SYMBOL_ADDRESS: 'Symbol Address',
        YOUR_SYMBOL_ADDRESS: 'Your Symbol Address',
        YOUR_SYMBOL_MNEMONIC: 'Your Symbol Mnemonic',
        SYMBOL_COSIGNERS: 'Symbol Cosigners',
        CATAPULTOPTIN_CONFIRM_SIGN: 'Sign Symbol Opt In',
        CATAPULTOPTIN_FIRST_DO_NORMAL: 'To do the Multisig Opt In you must first do the Normal Opt In',
        CATAPULTOPTIN_ENCRYPTED_WALLET_TEXT: 'Please create a new password to encrypt your Symbol wallet backup and then press the download button.',
        CATAPULTOPTIN_REVIEW_NORMAL_RESULT: 'Review my Symbol account opt in information',
        CATAPULTOPTIN_GENERATE_NEW_SYMBOL: 'Generate new Symbol Mnemonic',
        CATAPULTOPTIN_VRF_KEYS_DESCRIPTION: 'VRF keys are used for harvesting on symbol. If you own a node and want to start harvesting the first blocks, you should activate this option and save the keys to put them back in your symbol node configuration. If you don\'t select this option, you will also be able to generate new keys once mainnet is alive',
        OPTIN_FORM_PASSWORD_FIELD_PLACEHOLDER: 'Enter your regular NEM wallet password',
        OPTIN_NEW_PASSWORD: 'New Password',
        SYMBOL_PASSWORD_REQUIREMENT: "Password must be at least 8 characters",
        SYMBOL_WALLET_CREATING_TYPE_INFO: 'Please choose the way to create your Symbol account',
        SYMBOL_WALLET_CREATING_BY_ENTROPY_TYPE_INFO: 'Generate random account',
        SYMBOL_WALLET_CREATING_BY_LEDGER_IMPORT_TYPE_INFO: 'Import Symbol account from Ledger',
        SYMBOL_SIGNUP_CREATE_WALLET_ADD_ENTROPY_INFO_1: 'We are now going to generate your primary private key.',
        SYMBOL_SIGNUP_CREATE_WALLET_ADD_ENTROPY_INFO_2: 'Please click on start and move your cursor around to add more entropy.',
        OPTIN_WELCOME_TITLE: 'Welcome to Symbol Opt-in',
        OPTIN_INFO_1: 'The Symbol mainnet has not launched yet.',
        OPTIN_INFO_2: 'You can prepare by opting in your NEM NIS1 accounts with this module ',
        OPTIN_INFO_3: 'to migrate your balance and namespaces to the Symbol network.',
        OPTIN_LINK_INFO: 'Get all information about Opt-in process ',
        OPTIN_NAMESPACES_TITLE: 'Opt-in Namespaces',
        OPTIN_NAMESPACES_INFO:'Now you can Opt-in the Namespace(s) you own on NEM NIS1. This provides a placeholder for the same Namespace(s) on the Symbol blockchain.',
        OPTIN_NAMESPACES_LINK: 'Get all information about Namespace Opt-in ',
        OPTIN_NAMESPACES_SELECT: 'Select the Namespaces you want to Opt-in:',
        OPTIN_VRF_TITLE: 'Include VRF keys',
        OPTIN_VRF_INFO:'VRF keys allow your account to harvest block rewards. If you plan to hold over 10,000 XYM in your account after launch and would like to harvest on Symbol blockchain, you need to add VRF keys to the Opt-in process.',
        OPTIN_VRF_LINK: 'Get all information about VRF keys ',
        OPTIN_VRF_KEYS:'Add VRF Keys',
        OPTIN_VRF_PUBLIC: 'VRF Public Address',
        OPTIN_VRF_PRIVATE: 'VRF Private Key',
        OPTIN_TAC_TITLE:'Terms and Conditions',
        OPTIN_TAC_TEXT:'terms and conditions',
        OPTIN_TAC_INFO_1:'The Opt-in process is a feature launched by Symbol Chain Limited with the aim of helping NIS1 users migrate their balances to their new Symbol network. It is a process defined under certain parameters that all users who adhere to it have to comply with.',
        OPTIN_TAC_INFO_2:'Symbol Chain Limited will not be liable for any incidents outside of the terms and conditions specified below.',
        OPTIN_TAC_READ_ACCEPT: 'I have read and accept the ',
        OPTIN_CONFIRM_TITLE:'Confirm Symbol Opt-in',
        OPTIN_CONFIRM_INFO:'We are almost done! This will be the information that will be migrated to the new Symbol chain. Review it carefully and sign with your NEM key to finish your Opt-in.',
        OPTIN_CONFIRM_OPTIN:'Confirm Opt-in',
        HERE:'here',
        OPTIN_ENTER_PASSWORD: 'Enter your NEM NIS1 password to sign the Opt-in',
        OPTIN_LOADING: 'Fetching Opt In data...',
        OPTIN_FINISHED: 'Post launch Opt-in will open soon. Please check back for a new version after Symbol launch.',
        CREATE_SYMBOL_ACCOUNT: 'Create your Symbol account',
        OPTIN_SYMBOL_READY: 'Your Symbol account is ready',
        OPTIN_COPY_SUCCESS: 'Copied!',
        OPTIN_TYPE_SELECT: 'Select the way you opted in this wallet',
        CATAPULT_OPT_IN_ERROR_TOO_MUCH_COSIGNATORIES: 'This account has more than 8 cosignatories. Opt In protocol only allows multisig accounts with less than 9 cosignatories'

    });

}

export default GermanProvider;

'''
'''--- src/app/modules/languages/en.js ---
function EnglishProvider($translateProvider) {
    'ngInject'

    $translateProvider.translations('en', {

        // HEADER COMPONENT
        WALLET_NAME_1: 'NEM',
        WALLET_NAME_2: 'Wallet',
        APP_NAME_SUB: 'The secure interface connecting to the NEM platform',
        HEADER_LOGIN_BUTTON: 'Login',
        HEADER_SIGNUP_BUTTON: 'Sign Up',
        HEADER_DASHBOARD: 'Dashboard',
        HEADER_WALLET: 'Wallet',
        HEADER_SERVICES: 'Services',
        HEADER_EXPLORER: 'Explorer',
        HEADER_NODE: 'Node',
        HEADER_ACCOUNT: 'Account',
        HEADER_LANG_TITLE: 'Language',
        HEADER_LANG_SELECT: 'Select a language',
        HEADER_NODE_BLOCK_HEIGHT: 'Block height',
        HEADER_NODE_CURRENT_NODE: 'Current node',
        HEARDER_NODE_LIST: 'Nodes list',
        HEADER_NODE_SELECT: 'Select a node',
        HEADER_NODE_CUSTOM: 'Custom node',
        HEADER_NODE_CONNECT: 'Connect',
        HEADER_NODE_CUSTOM_INFO: 'Node ip or domain',
        HEADER_NODE_CUSTOM_TOOLTIP: 'Enter your own NIS node here',
        HEADER_PURGE: 'Purge',
        HEADER_PURGE_MESSAGE: 'Please confirm the purge of local storage. By clicking "Purge" all wallets in your browser local storage will be deleted and will not be recoverable. You agree that all wallets have been backed up and funds are secured.',
        HEADER_OFFLINE_TX: 'Prepare an offline transaction',
        HEADER_RELEASE_TX: 'Release a transaction',

        // FOOTER COMPONENT
        FOOTER_POWERED_BY_1: 'Powered by',
        FOOTER_POWERED_BY_2: 'NEM technology.',
        FOOTER_VERSION: 'Version',

        // DASHBOARD MODULE
        DASHBOARD_TITLE: 'Dashboard',
        DASHBOARD_UNCONFIRMED: 'Unconfirmed',
        DASHBOARD_CONFIRMED: 'Confirmed',
        DASHBOARD_HARVEST_INCOME_TITLE: 'Harvesting income on latest 25 blocks',
        DASHBOARD_HARVEST_INCOME_NOTE: 'Only blocks with fee above 0',
        DASHBOARD_HARVEST_INCOME_MESSAGE: 'No fees found in the latest 25 blocks',
        DASHBOARD_NEWS_TITLE: 'Latest news',
        DASHBOARD_HARVESTED_BLOCKS_TITLE: 'Harvested blocks',
        DASHBOARD_HARVESTED_BLOCKS_TH: 'Fees earned',
        DASHBOARD_MARKET_INFO_TITLE: 'Market information',
        DASHBOARD_MARKET_INFO_CAP: 'Market cap',
        DASHBOARD_MARKET_INFO_PRICE: 'Price',
        DASHBOARD_MARKET_INFO_VOLUME: '24h volume',
        DASHBOARD_MARKET_INFO_CHANGES: 'Percentage change (24h)',
        DASHBOARD_MARKET_INFO_CHANGES_1H: '1h',
        DASHBOARD_MARKET_INFO_CHANGES_24H: '24h',
        DASHBOARD_MARKET_INFO_CHANGES_7D: '7d',
        DASHBOARD_MARKET_INFO_NOTE: '<a href="http://coinmarketcap.com/" target="_blank">CoinMarketCap</a> data updated every 5 minutes',
        DASHBOARD_NOTICE_1: 'Welcome to the NEM Wallet Beta!',
        DASHBOARD_NOTICE_2: 'Please <a href="https://github.com/NemProject/NanoWallet" target="_blank">report issues here</a>.',
        DASHBOARD_NOTICE_3: 'The NEM Team suggests primarily testing on the testnet to familiarize yourself with the NEM Wallet first before using the mainnet. A simple guide can be found <a href="https://blog.nem.io/nanowallet-tutorial/" target="_blank">here</a>. Users are responsible for their funds and having their private keys backed up. The NEM team is not responsible for any loss of funds due to using this app on the mainnet.',
        DASHBOARD_NOTICE_4: 'We suggest writing down private keys on paper and storing it in a safe place. Additionally, you can import your accounts into the Android and iOS apps as a backup.',
        DASHBOARD_NOTICE_5: 'Thanks for your participation!',
        DASHBOARD_MORE_TXES: 'See more transactions',

        // GENERAL
        GENERAL_BLOCK: 'Block',
        GENERAL_BLOCKS: 'Blocks',
        GENERAL_NO_RESULTS: 'Nothing to show',
        GENERAL_ACCOUNT: 'Account',
        GENERAL_ACCOUNTS: 'Accounts',
        GENERAL_MULTISIG_ACCOUNT: 'Multisig account',
        GENERAL_AMOUNT: 'Amount',
        GENERAL_MESSAGE: 'Message',
        GENERAL_DATE: 'Date',
        GENERAL_TAB_NORMAL: 'Normal',
        GENERAL_TAB_SEND: 'Send',
        GENERAL_TAB_MULTISIG: 'Multisig',
        GENERAL_TOTAL: 'Total',
        GENERAL_REMOVE: 'Remove',
        GENERAL_MOSAIC: 'Mosaic',
        GENERAL_FEE: 'Fee',
        GENERAL_LEVY: 'Levy',
        GENERAL_LEVY_TYPES: 'Levy types',
        GENERAL_LEVY_TYPES_NOTE: 'I - constant fee; II - percentage based',
        GENERAL_LEVY_TYPE_1: 'Constant fee',
        GENERAL_LEVY_TYPE_2: 'Percentage based',
        GENERAL_SEND: 'Send',
        GENERAL_TO: 'To',
        GENERAL_HASH: 'Hash',
        GENERAL_HASH_FUNCTION: 'Hash Function',
        GENERAL_NAME: 'Name',
        GENERAL_INFORMATION: 'Information',
        GENERAL_ADDRESS: 'Address',
        GENERAL_PUBLIC_KEY: 'Public key',
        GENERAL_PRIVATE_KEY: 'Private key',
        GENERAL_CLEAR_ALL: 'Clear all',
        GENERAL_CLOSE: 'Close',
        GENERAL_COMING_SOON: 'Coming soon',
        GENERAL_NONE: 'None',
        GENERAL_DROPBOX: 'Drop files here or click to browse',
        GENERAL_NETWORK_FEE: 'Network fee',
        GENERAL_YES: 'Yes',
        GENERAL_NO: 'No',
        GENERAL_TAGS: 'Tags',
        GENERAL_SINK: 'Sink',
        GENERAL_SINK_ADDRESS: 'Sink Address',
        GENERAL_STORAGE: 'Storage',
        GENERAL_REASON: 'Reason',
        GENERAL_TRANSACTION_HASH: 'Transaction hash',
        GENERAL_TRANSACTION_ID: 'Transaction ID',
        GENERAL_OWNER: 'Owner',
        GENERAL_RESULTS: 'Results',
        GENERAL_RESULT: 'Result',
        GENERAL_STATUS: 'Status',
        GENERAL_LOCATION: 'Location',
        GENERAL_ACTION: 'Action',
        GENERAL_ACTIONS: 'Actions',
        GENERAL_ADD: 'Add',
        GENERAL_ADDED: 'Added',
        GENERAL_REMOVED: 'Removed',
        GENERAL_COSIGNATORY: 'Cosignatory',
        GENERAL_COSIGNATORIES: 'Cosignatories',
        GENERAL_PROCESSING: 'Processing',
        GENERAL_ACCOUNT_LABEL: 'Account label',
        GENERAL_OPTIONAL: '(optional)',
        GENERAL_ERROR: 'Error',
        GENERAL_EXAMPLE: 'Example',
        GENERAL_PUBLIC: 'Public',
        GENERAL_NAMESPACES: 'Namespaces',
        GENERAL_NAMESPACE: 'Namespace',
        GENERAL_SUB_NAMESPACES: 'Sub-namespaces',
        GENERAL_SUB_NAMESPACE: 'Sub-namespace',
        GENERAL_MOSAICS: 'Mosaics',
        GENERAL_VALUE: 'Value',
        GENERAL_CONNECTION_ERROR: 'An error occured, either node is down or you are offline',
        GENERAL_HISTORY: 'History',
        GENERAL_REVEAL: 'Reveal',
        GENERAL_QR: 'QR code',
        GENERAL_UPDATE:  'Update',
        GENERAL_UNKNOWN: 'Unknown',
        GENERAL_IMPORTANCE: 'Importance',
        GENERAL_TRANSACTIONS: 'Transactions',
        GENERAL_REGISTER: 'Register',
        GENERAL_CREATE: 'Create',
        GENERAL_RENEW: 'Renew',
        GENERAL_CHARACTERS_LEFT: 'Characters left',
        GENERAL_CURRENCY: 'Currency',
        GENERAL_EDIT: 'Edit',
        GENERAL_SEND_XEM: 'Send XEM',
        GENERAL_ACTIVE: 'Active',
        GENERAL_INACTIVE: 'Inactive',
        GENERAL_ACTIVATING: 'Activating',
        GENERAL_DEACTIVATING: 'Deactivating',
        GENERAL_REMOTE: 'Remote',
        GENERAL_WARNING: 'Warning',
        GENERAL_SCORE: 'Score',
        GENERAL_LENGTH: 'Length',
        GENERAL_GO_BACK: 'Go back',
        GENERAL_BACK: 'Back',
        GENERAL_NEXT: 'Next',
        GENERAL_START: 'Start',
        GENERAL_ALIAS: 'Alias',
        GENERAL_CONTACTS: 'Contacts',
        GENERAL_ENCRYPTED: 'Encrypted',
        GENERAL_UNENCRYPTED: 'Unencrypted',
        GENERAL_HEXADECIMAL: 'Hexadecimal',
        GENERAL_SELECT_ACCOUNT: 'Select account',
        GENERAL_INVOICE: 'Invoice',
        GENERAL_SIGNATURE: 'Signature',
        GENERAL_VERIFY: 'Verify',

        // HOME MODULE
        HOME_UNSUPPORTED_BROWSER: 'Sorry but you cannot use NEM Wallet safely with this browser...',
        HOME_RECOMMENDED_BROWSERS: 'Recommended browsers are:',
        HOME_FEATURE_STAND_BY: 'Place the cursor on a feature to show information.',
        HOME_FEATURE_1: 'Send and receive XEM easily and almost instantly, only 1 minute block time!',

        // TRANSFER TRANSACTION MODULE
        TRANSFER_TRANSACTION_TITLE: 'Send a transaction',
        TRANSFER_TRANSACTION_NAME: 'Transfer transaction',
        TRANSFER_TRANSACTION_MULTISIG_NAME: 'Multisignature transfer transaction',
        TRANSFER_TRANSACTION_INVOICE: 'Create invoice',
        TRANSFER_TRANSACTION_TAB_INVOICE: 'Receive',
        TRANSFER_TRANSACTION_MOSAIC_TRANSFER: 'Mosaic transfer',
        TRANSFER_TRANSACTION_ATTACH_MOSAIC: 'Attach mosaic',
        TRANSFER_TRANSACTION_ATTACH: 'Attach',
        TRANSFER_TRANSACTION_MOSAICS_ATTACHED: 'Mosaics attached',
        TRANSFER_TRANSACTION_ENCRYPT_MESSAGE: 'Encrypt message',
        TRANSFER_TRANSACTION_MESSAGE_TYPE: 'Message type',

        // TRANSACTION LINES
        LINE_TX_DETAILS_FROM: 'From',
        LINE_TX_DETAILS_FROM_MULTISIG: 'From multisig',
        LINE_TX_DETAILS_WAITING: 'Transaction waiting to be included',
        LINE_TX_DETAILS_NEED_SIG: 'Needs cosignatories signatures',
        LINE_TX_DETAILS_NEED_SIG_2: 'Needs your signature',
        LINE_TX_DETAILS_MESS_DEC: 'Decode',
        LINE_TX_DETAILS_HASH: 'Hash',
        LINE_TX_DETAILS_DEC_MESS: 'Decode message',
        LINE_TX_DETAILS_MOS_ATTACHED: 'Mosaics attached',
        LINE_TX_DETAILS_LEVY_TYPE_1: 'Constant',
        LINE_TX_DETAILS_LEVY_TYPE_2: 'Percentage-based',
        LINE_TX_DETAILS_ISSUER: 'Issuer',
        LINE_TX_DETAILS_MULTISIG_FEE: 'Multisig fee',
        LINE_TX_DETAILS_MULTISIG_HASH: 'Multisig hash',
        LINE_TX_DETAILS_COSIGN: 'Cosign transaction',
        LINE_TX_DETAILS_SIGNATURES: 'Signature(s)',
        LINE_TX_DETAILS_COSIGNATORY: 'Cosignatory',
        LINE_TX_DETAILS_TIMESTAMP: 'Timestamp',
        LINE_TX_DETAILS_MOS_CREATE: 'Create mosaic',
        LINE_TX_DETAILS_MOS_EDIT: 'Edit mosaic',
        LINE_TX_DETAILS_NS_CREATE: 'Create namespace',
        LINE_TX_DETAILS_NS_NEW_SUB: 'New sub-namespace',
        LINE_TX_DETAILS_NS_ROOT: 'Root namespace',
        LINE_TX_DETAILS_RECIPIENT: 'Recipient',
        LINE_TX_DETAILS_MULTISIG_CREATE: 'Create multisig account',
        LINE_TX_DETAILS_MULTISIG_EDIT: 'Edit multisig account',
        LINE_TX_DETAILS_MULTISIG_MOD: 'Modifications',
        LINE_TX_DETAILS_MULTISIG_MIN_COSIG: 'Min cosignatories',
        LINE_TX_DETAILS_MULTISIG_AFFECTED: 'Account affected',

        // IMPORTANCE MODULE
        IMPORTANCE_TRANSFER_NAME: 'Importance transfer transaction',
        IMPORTANCE_TRANSFER_MULTISIG_NAME: 'Multisignature importance transfer transaction',
        IMPORTANCE_TRANSFER_MODE: 'Mode',
        IMPORTANCE_TRANSFER_MODE_1: 'Activate',
        IMPORTANCE_TRANSFER_MODE_2: 'Deactivate',
        IMPORTANCE_TRANSFER_TITLE: 'Manage delegated account',
        IMPORTANCE_TRANSFER_MULTISIGNATURE_TITLE: 'Manage delegated account of multisignature accounts',
        IMPORTANCE_TRANSFER_CUSTOM_KEY: 'Use a custom public key',
        IMPORTANCE_TRANSFER_MODE_SELECT: 'Select a mode',
        IMPORTANCE_TRANSFER_REMOTE_ACCOUNT: 'Remote account',
        IMPORTANCE_TRANSFER_REMOTE_PUBLIC: 'Remote public key',
        IMPORTANCE_TRANSFER_INFO_PART_1: 'Once an importance transaction has been included in a block it needs 6 hours to become active. After that, you\'ll have access to node selection and start/stop commands.',
        IMPORTANCE_TRANSFER_INFO_PART_2: 'Make sure you do not have a delegated account activated already (if it is an imported account). If so you can use the old delegated public key to deactivate (if necessary).',
        IMPORTANCE_TRANSFER_INFO_PART_MULTISIG: 'For multisignature accounts only the cosignatory that initiated the importance transfer transaction can start and stop harvesting. If any other cosignatory want to take back power on harvesting, he just need to deactivate and reactivate the remote status.',
        IMPORTANCE_TRANSFER_NO_BLOCKS_HARVESTED: 'No blocks harvested',
        IMPORTANCE_TRANSFER_HARVESTING_PANEL: 'Harvesting panel',
        IMPORTANCE_TRANSFER_REMOTE_ACTIVATING: 'You must wait until your remote status is active to start delegated harvesting (6 hours)',
        IMPORTANCE_TRANSFER_REMOTE_INACTIVE: 'You must send an importance transfer from the left panel to activate your remote account',
        IMPORTANCE_TRANSFER_MULTISIG_NOT_INITIATOR: 'You are not the cosignatory that initiated the importance transfer, therefore it is not possible for you to see, start or stop the delegated harvesting status directly. Please, contact the cosignatory managing the remote account. You can kick a manager and take back the control of harvesting by deactivating and reactivating with your remote.',
        IMPORTANCE_TRANSFER_PRIVATE_KEY_PLACEHOLDER: 'Reveal delegated private key',
        IMPORTANCE_TRANSFER_DELEGATED_KEYS: 'Delegated account Key',
        IMPORTANCE_TRANSFER_HARVESTING_STATUS: 'Harvesting status',
        IMPORTANCE_TRANSFER_START_HARVESTING: 'Start delegated harvesting',
        IMPORTANCE_TRANSFER_STOP_HARVESTING: 'Stop delegated harvesting',
        IMPORTANCE_TRANSFER_ACTIVATE_DEACTIVATE_REMOTE: 'Activate / Deactivate the delegated account',
        IMPORTANCE_TRANSFER_SHOW_DELEGATED_KEYS: 'Show delegated account keys',

        // CREATE MOSAIC MODULE
        MOSAIC_DEFINITION_TITLE: 'Create a mosaic',
        MOSAIC_DEFINITION_NAME: 'Mosaic definition transaction',
        MOSAIC_DEFINITION_MULTISIG_NAME: 'Multisignature mosaic definition transaction',
        MOSAIC_DEFINITION_QUANTITY: 'Quantity',
        MOSAIC_DEFINITION_DIV: 'Divisibility',
        MOSAIC_DEFINITION_TOTAL_SUPPLY: 'Total supply',
        MOSAIC_DEFINITION_FINAL_NAME: 'Full Name',
        MOSAIC_DEFINITION_DESCRPITION: 'Description',
        MOSAIC_DEFINITION_INITIAL_SUPPLY: 'Initial supply',
        MOSAIC_DEFINITION_MUTABLE_SUPPLY: 'Mutable supply',
        MOSAIC_DEFINITION_TRANSFERABLE: 'Transferable',
        MOSAIC_DEFINITION_PROPERTIES: 'Properties',
        MOSAIC_DEFINITION_MOSAIC_PROPERTIES: 'Mosaic properties',
        MOSAIC_DEFINITION_REQUIRES_LEVY: 'Requires levy',
        MOSAIC_DEFINITION_LEVY_LIMITATION: 'UI-limitation: right now, only owned mosaics can be used as a levy.',
        MOSAIC_DEFINITION_LEVY_SELECT_MOSAIC: 'Select levy mosaic',
        MOSAIC_DEFINITION_LEVY_ADDRESS: 'Levy address',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE: 'Fee type',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_1: 'Absolute',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2: 'Percentile',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_1_NOTE: 'Selecting absolute, will cause constant levy of',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE: 'Selecting percentile, will cause linear levy:',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE_2: 'Sending',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE_3: 'will imply levy of',
        MOSAIC_DEFINITION_PARENT: 'Parent Namespace',
        MOSAIC_DEFINITION_INFORMATION_TITLE: 'Creating a Mosaic',
        MOSAIC_DEFINITION_INFORMATION: 'Want more info about mosaics?',
        MOSAIC_DEFINITION_INFORMATION_1: 'The maximum length for a mosaic name is 32 characters. Allowed characters are:',
        MOSAIC_DEFINITION_INFORMATION_2: 'The first character must be a letter from the alphabet or a number.',
        MOSAIC_DEFINITION_INFORMATION_3: 'The description may not exceed a length of 512 characters. There is no limitation for the characters used in the description.',
        MOSAIC_DEFINITION_INFORMATION_4: 'The behavior of a mosaic can be customized by a set of properties:',
        MOSAIC_DEFINITION_INFORMATION_5: 'The supply is given in entire units of the mosaic, not in smallest sub-units. The initial supply must be in the range of 0 and 9,000,000,000.',
        MOSAIC_DEFINITION_INFORMATION_6: 'The divisibility determines up to what decimal place the mosaic can be divided into. Thus a divisibility of 3 means that a mosaic can be divided into smallest parts of 0.001 mosaics, i.e. milli mosaics is the smallest sub-unit. The divisibility must be in the range of 0 and 6.',
        MOSAIC_DEFINITION_INFORMATION_7: 'If checked, it allows a mosaic supply change at a later point, otherwise supply is immutable.',
        MOSAIC_DEFINITION_INFORMATION_8: 'Allow transfers of the mosaic among accounts other than the creator. If the property \'transferable\' is not checked, only transfer transactions having the creator as sender or as recipient can transfer mosaics of that type. If checked the mosaics can be transferred to and from arbitrary accounts.',
        MOSAIC_DEFINITION_INFORMATION_9: 'The creator can demand that a special fee is collected from the sender and sent to an account of his choice (thus the creator can specify his own account as recipient of this fee). The data for the levy is the following:',
        MOSAIC_DEFINITION_INFORMATION_10: 'The mosaic in which the fee has to be paid. Any existing mosaic can be specified.',
        MOSAIC_DEFINITION_INFORMATION_11: 'The recipient of the levy. This can be any account.',
        MOSAIC_DEFINITION_INFORMATION_12: 'The fee quantity. The interpretation is dependent on the field \'fee type\', see above.',
        MOSAIC_DEFINITION_INFORMATION_13: 'There are two fee types supported, absolute fee and percentile fee.',
        MOSAIC_DEFINITION_INFORMATION_14: 'The fee is specified as absolute quantity and thus does not depend on the quantity that is transferred.',
        MOSAIC_DEFINITION_INFORMATION_15: 'The fee is specified as multiple of the percentile of the quantity that is transferred. The fee is thus linearly increasing with the transferred mosaic quantity.',
        MOSAIC_DEFINITION_INFORMATION_16: 'Sending mosaics on the NEM blockchain requires a fee. The exact fee is calculated depending on their total number and how many are being sent during a transaction. <b>Small business mosaics</b> are given a discounted flat rate of 0.05 XEM per mosaic per transfer. These are mosaics with a quantity of less than 10,000 and a divisibility of 0.',
        MOSAIC_DEFINITION_INFORMATION_17: 'If you own 100% of the supply, you can overwrite all the mosaic properties by sending a creation transaction again with the same "namespace:mosaic" name.',

        // EDIT MOSAIC MODULE
        MOSAIC_SUPPLY_CHANGE_TITLE: 'Change mosaic supply',
        MOSAIC_SUPPLY_CHANGE_NAME: 'Mosaic supply change transaction',
        MOSAIC_SUPPLY_CHANGE_MULTISIG_NAME: 'Multisignature mosaic supply change transaction',
        MOSAIC_SUPPLY_CHANGE_SELECT: 'Select mosaic',
        MOSAIC_SUPPLY_CHANGE_TYPE: 'Change type',
        MOSAIC_SUPPLY_CHANGE_TYPE_1: 'Create',
        MOSAIC_SUPPLY_CHANGE_TYPE_2: 'Delete',
        MOSAIC_SUPPLY_CHANGE_SUPPLY: 'Supply',
        MOSAIC_SUPPLY_CHANGE_CURRENT_SUPPLY: 'Current supply',
        MOSAIC_SUPPLY_CHANGE_AMOUNT: 'Change amount',
        MOSAIC_SUPPLY_CHANGE_RES_SUPPLY: 'Resulting supply',

        // NAMESPACE MODULE
        NAMESPACE_PROVISION_TITLE: 'Create namespace & sub-namespace',
        NAMESPACE_PROVISION_NAME: 'Provision namespace transaction',
        NAMESPACE_PROVISION_MULTISIG_NAME: 'Multisignature provision namespace transaction',
        NAMESPACE_PROVISION_PARENT: 'Parent Namespace',
        NAMESPACE_PROVISION_NEW_ROOT: 'New root Namespace',
        NAMESPACE_PROVISION_NS: 'Namespace',
        NAMESPACE_PROVISION_NS_NAME: 'Namespace name',
        NAMESPACE_PROVISION_RESTRICTIONS: 'Namespace Restrictions',
        NAMESPACE_PROVISION_INFORMATION_1: 'Namespaces have certain restrictions with respect to the characters being allowed in the parts as well as the length of a part. A root namespace may have a length of 16 characters while sub-namespaces may have a length of 64 characters. Valid characters are:',
        NAMESPACE_PROVISION_INFORMATION_2: 'However a part is only allowed to begin with a letter of the alphabet or a number, thus \'alice\' is an allowed part for a root namespace while \'_alice\' is not. Certain strings are reserved and thus not allowed as namespace parts. Among the disallowed namespace parts are:',
        NAMESPACE_PROVISION_INFORMATION_3: 'This list is not final and can be extended in the future. Thus \'user.alice\' or \'alice.user\' are not allowed in the NEM namespace system. The namespace may have up to 3 parts, thus \'qm.metals.silver\' is valid while \'qm.metals.silver.coin\' is not.',

        // RENEW NAMESPACE MODULE
        RENEW_NS_TITLE: 'Renew namespaces',
        RENEW_NS_NONE: 'No namespace to renew',
        RENEW_NS_INFORMATION_TITLE: 'Renewing Namespaces',
        RENEW_NS_INFORMATION_TITLE_1: 'Fees',
        RENEW_NS_INFORMATION_TITLE_2: 'Root Namespaces',
        RENEW_NS_INFORMATION_TITLE_3: 'Renewal Period',
        RENEW_NS_INFORMATION_1: 'Renewing a namespace costs the same amount as registering a new namespace, 100 XEM.',
        RENEW_NS_INFORMATION_2: 'Only root namespaces need to be renewed. All sub-namepsaces will be renewed automatically upon renewal of the root namespace.',
        RENEW_NS_INFORMATION_3: 'Namespace contracts are on-chain rental contracts good for one year. The contract may be renewed one month prior to or after their expiration date.',
        RENEW_NS_INFORMATION_4: 'If not renewed in time, all sub-namespaces and mosaics created under it will be lost.',
        RENEW_NS_ALERT_PART_1: '<b>Warning!</b> The namespace:',
        RENEW_NS_ALERT_PART_2: 'will expire in less than a month! ',
        RENEW_NS_ALERT_PART_3: 'Consult the <b>renew page</b> for more information.',

        // ACCOUNT MODULE
        ACCOUNT_TITLE: 'Account',
        ACCOUNT_ACCOUNT_INFORMATION: 'Account information',
        ACCOUNT_IMPORTANCE_SCORE: 'Importance score',
        ACCOUNT_VESTED_BALANCE: 'Vested balance',
        ACCOUNT_HARVESTING: 'Harvesting',
        ACCOUNT_REMOTE_STATUS: 'Remote status',
        ACCOUNT_DELEGATED_PUBLIC: 'Delegated public key',
        ACCOUNT_HARVESTED_BLOCKS: 'Harvested blocks',
        ACCOUNT_START_STOP_HARVESTING: 'Start / Stop delegated harvesting',
        ACCOUNT_HARVESTING_NOTE: 'The node used to harvest on this account is stored in your <b>browser local storage</b>. If the browser storage is erased the app won\'t know which node you were using and therefore the <b>harvesting status</b> will show <b>inactive</b>. In this case, select the node you were using, and it will restore the harvesting status automatically. If the status is not restored, check if you have selected the right node; otherwise, it means that the node has been rebooted and your account is no longer harvesting.',
        ACCOUNT_HARVESTING_NODE_SELECT: 'Select a node to harvest on',
        ACCOUNT_HARVESTING_START: 'Start delegated harvesting',
        ACCOUNT_HARVESTING_STOP: 'Stop delegated harvesting',
        ACCOUNT_HARVESTING_NO_SLOTS: 'No free slots on selected node, please choose another',
        ACCOUNT_HARVESTING_BELOW_THRESHOLD: 'You need 10\'000 vested XEM to start delegated harvesting',
        ACCOUNT_ACCOUNT_SELECT: 'Select another account',
        ACCOUNT_ACCOUNT_SELECT_LABEL: 'Choose Account',
        ACCOUNT_WALLET_KEYS: 'Wallet & keys',
        ACCOUNT_ADD_NEW_ACCOUNT: 'Add new account',
        ACCOUNT_ADD_NEW_ACCOUNT_BTN: 'Add a new account into wallet',
        ACCOUNT_PRIVATE_KEY_NOTE: 'Your private key holds all the power of your account. It is a priority to make sure it is stored safely somewhere <b><u>offline</u></b>: password encrypted into a .wlt file, written on a piece of paper, and on a picture or download the <b><u>export wallet QR</u></b>.',
        ACCOUNT_PRIVATE_KEY_SHOW: 'Show private key',
        ACCOUNT_EXPORT_MOBILE: 'Export to mobile',
        ACCOUNT_INFO_QR_BTN: 'Share account info QR',
        ACCOUNT_WALLET_QR_BTN: 'Wallet QR',
        ACCOUNT_WALLET_QR_BTN_2: 'Export wallet QR (Android and IOS)',
        ACCOUNT_QR_BTN_2: 'Export account QR (Android and IOS) [Opt In]',
        ACCOUNT_BACKUP_WALLET: 'Backup wallet',
        ACCOUNT_BACKUP_WALLET_NOTE: 'It is <b><u>very important</u></b> that you have backups of your wallets to log in with or your XEM will be lost.',
        ACCOUNT_BACKUP_WALLET_DOWNLOAD: 'Download wallet',
        ACCOUNT_INFO_QR_TITLE: 'Account information QR',
        ACCOUNT_WALLET_QR_NOTE: 'This QR is only working on upcoming NEMpay mobile app',
        ACCOUNT_WALLET_QR_ANDROID_IOS_TITLE: 'Wallet QR for Android & IOS apps',
        ACCOUNT_QR_ANDROID_IOS_TITLE: 'Account QR for Android & IOS apps',
        ACCOUNT_ADD_NEW_ACCOUNT_WARNING: 'All accounts are derived from your primary private key and password using BIP32, so both your primary private key and your password are needed to retrieve/recreate all your secondary accounts. <br> It is still <b>highly recommended</b> to backup your wallet after adding new accounts to not repeat the operation again if local storage is erased.',
        ACCOUNT_CUSTOM_NODE: 'Use custom node',
        ACCOUNT_NODE_FROM_LIST: 'Use node from list',
        ACCOUNT_DELEGATED_PRIVATE_KEY: 'Delegated private key',
        ACCOUNT_NO_PUBLIC_KEY: 'You need to make a transaction to get a public key',
        ACCOUNT_SHOW_ON_TREZOR_BTN: 'Show on TREZOR',
        ACCOUNT_SHOW_ON_LEDGER_BTN: 'Show on LEDGER',

        // PORTAL MODULE
        PORTAL_TITLE: 'Services',
        PORTAL_MULTISIG_TITLE: 'Multisignature and Multi-User Accounts',
        PORTAL_MULTISIG_TEXT: 'Multisig accounts are editable on-chain contracts, the most powerful way to secure funds, enable joint accounts, and are the foundation of DAOs.',
        PORTAL_MULTISIG_BTN_1: 'Convert an account to multisig',
        PORTAL_MULTISIG_BTN_2: 'Edit an exisiting contract',
        PORTAL_MULTISIG_BTN_3: 'Sign multisig transactions',
        PORTAL_HARVESTING_TITLE: 'Delegated Harvesting',
        PORTAL_HARVESTING_TEXT: 'Delegated harvesting is the feature that allows "mining" even while your account is closed.',
        PORTAL_EXCHANGE_TITLE: 'Instant Exchanges',
        PORTAL_EXCHANGE_TEXT: 'Use Changelly widget to buy XEM at the best rates!',
        PORTAL_EXCHANGE_BTN: 'Buy XEM',
        PORTAL_NS_TITLE: 'Namespaces & Subdomains',
        PORTAL_NS_TEXT: 'Namespaces are domain names. Each namespace is unique and authenticates mosaics (assets) issued on it or on its subdomains.',
        PORTAL_NS_BTN: 'Create namespace',
        PORTAL_MOSAIC_TITLE: 'Mosaics',
        PORTAL_MOSAIC_TEXT: 'NEM mosaics are assets that expose additional properties and other features. To be able to create a mosaic, an account must rent at least one root namespace.',
        PORTAL_MOSAIC_BTN_1: 'Create mosaic',
        PORTAL_MOSAIC_BTN_2: 'Edit mosaic',
        PORTAL_APOSTILLE_TITLE: 'Apostille',
        PORTAL_APOSTILLE_TEXT: 'Use the NEM Apostille service to create blockchain based notarizations to time stamp, follow and audit file authenticity.',
        PORTAL_APOSTILLE_BTN_1: 'Create',
        PORTAL_APOSTILLE_BTN_2: 'Audit',
        PORTAL_ADDRESS_BOOK_TEXT: 'Assign labels to addresses to easily keep track of your contacts.',
        PORTAL_ADDRESS_BOOK_BTN: 'Manage address book',
        PORTAL_INVOICE_TEXT: 'Create an invoice to share via QR code',
        PORTAL_SIGNED_MSG_TEXT: 'Create and verify signed messages to authenticate account ownership without transacting.',

        // ADDRESS BOOK MODULE
        ADDRESS_BOOK_TITLE: 'Address book',
        ADDRESS_BOOK_NAVIGATION: 'Navigation',
        ADDRESS_BOOK_NEW: 'New contact',
        ADDRESS_BOOK_EDIT: 'Edit contact',
        ADDRESS_BOOK_REMOVE: 'Remove contact',
        ADDRESS_BOOK_NEW_BTN: 'Add',
        ADDRESS_BOOK_EDIT_BTN: 'Save',
        ADDRESS_BOOK_REMOVE_BTN: 'Remove',
        ADDRESS_BOOK_EXPORT_BTN: 'Export address book',
        ADDRESS_BOOK_IMPORT_BTN: 'Import address book',
        ADDRESS_BOOK_CONTACT_LABEL: 'Label',
        ADDRESS_BOOK_ACCOUNT_ADDRESS: 'Account address',
        ADDRESS_BOOK_ACTIONS: 'Actions',
        ADDRESS_BOOK_CONFIRM_DELETE: 'Confirm deletion of address book entry',

        // EXPLORER MODULE NAV
        EXPLORER_NAV_HOME: 'Home',
        EXPLORER_NAV_NSM: 'Namespaces & Mosaics',
        EXPLORER_NAV_APOSTILLES: 'Apostilles',

        // EXPLORER HOME MODULE
        EXPLORER_HOME_TITLE: 'Explorer - Home',
        EXPLORER_HOME_NS: 'Your Namespaces',
        EXPLORER_HOME_MOSAICS: 'Your Mosaics',
        EXPLORER_HOME_NS_MULTISIG: 'Multisig Owned Namespaces',
        EXPLORER_HOME_MOSAICS_LEVY: 'Levy mosaic',

        // EXPLORER NAMESPACES AND MOSAICS
        EXPLORER_NS_MOS_TITLE: 'Explorer - Namespaces and Mosaics',
        EXPLORER_NS_MOS_SELECT_MOS: 'Selected Mosaic Details',
        EXPLORER_NS_MOS_SEARCH: 'Search namespace',

        // EXPLORER APOSTILLES MODULE
        EXPLORER_APOSTILLES_TITLE: 'Explorer - Apostilles',
        EXPLORER_APOSTILLES_YOURS: 'Your apostilles',
        EXPLORER_APOSTILLES_PUBLIC: 'Public sink',
        EXPLORER_APOSTILLES_NO_NTY: 'No nty file loaded, please click here to import one.',

        // ACCOUNT EXPLORER
        ACCOUNTS_EXPLORER_TITLE: 'Explorer - Accounts',
        ACCOUNTS_EXPLORER_SEARCH: 'Search',

        // TRANSACTIONS EXPLORER
        EXPLORER_TRANSACTIONS_TITLE: 'Your transactions history',
        EXPLORER_TRANSACTIONS_LOAD_MORE: 'Load more',

        // APOSTILLE HISTORY MODULE
        APOSTILLE_HISTORY_TITLE: 'Apostille history',
        APOSTILLE_HISTORY_BTN_TRANSFER: 'Transfer / Split ownership',
        APOSTILLE_HISTORY_BACKUP: 'Backup notary data',
        APOSTILLE_HISTORY_PURGE: 'Purge notary data',

        // CREATE APOSTILLE MODULE
        APOSTILLE_CREATE_TITLE: 'Create apostilles',
        APOSTILLE_CREATE_HELP: 'Want more info on apostille?',
        APOSTILLE_TRANSACTION_NAME: 'Apostille transaction',
        APOSTILLE_TRANSACTION_MULTISIG_NAME: 'Multisignature apostille transaction',
        APOSTILLE_KEEP_PRIVATE: 'Private, transferable, and updateable',
        APOSTILLE_USE_DEDICATED: 'Use dedicated account',
        APOSTILLE_FILES_TO_NOTARIZE: 'Files to notarize',
        APOSTILLE_REJECTED: 'Rejected',
        APOSTILLE_FILE_HASH: 'File hash',
        APOSTILLE_PRIVATE: 'Private',
        APOSTILLE_FILENAME: 'File name',
        APOSTILLE_NAME_TOO_LONG: 'File name is too long, 32 characters maximum allowed.',
        APOSTILLE_MAX_NUMBER: 'Maximum apostilles per batch is 25',
        APOSTILLE_INFORMATION_TITLE: 'Creating an Apostille',
        APOSTILLE_INFORMATION_1: 'Each file uploaded is processed automatically with options set on the left panel. You can add new files, change parameters and then add more files with different options. It\'ll also work if you switch to the multisig tab and add more files.',
        APOSTILLE_INFORMATION_2: '"<b>Private, transferable, and updateable</b>" option means that the hashes of your files are signed with your private key and sent to a dedicated hierarchical deterministic (HD) account. This way it is not possible for anyone but you to know what content has been time stamped unless you share the content.',
        APOSTILLE_INFORMATION_3: 'The dedicated HD account can be put under a multisig contract so that it may be transferred to others via 1-of-1 or any m-of-n multisig contract combination. It can also have additional information sent to it via messages with updates and augments to the original document or the product it represents.',
        APOSTILLE_INFORMATION_4: 'When two or more parties want to both approve of a blockchain timestamp, e.g. binding contracts, the account making the blockchain notarization can be put in an n-of-n multisig contract.',
        APOSTILLE_INFORMATION_5: 'For accounts in a multisignature contract that have selected "<b>Private, transferable, and updateable</b>", the initiating cosigner\'s private key is used to sign the hash and create a dedicated HD account, not the account that was multisigged.',
        APOSTILLE_INFORMATION_6: 'The HD account is a dedicated account generated from a hash of the filename that is then signed by your private key. This resulting hash of this process is then used to form a second private key.  This is the time-stamped file\'s private key; a first in blockchain technology only found in Apostille.',
        APOSTILLE_INFORMATION_7: 'The dedicated HD account allows you to store the original file\'s signed hash and its updates on a dedicated account. If <b>"Public"</b> is selected, the transaction goes to the public sink address (default).',
        APOSTILLE_INFORMATION_8: 'After the transactions are sent the download of an archive is triggered. It contains your signed files, your Apostille certificate for that file, and the new or updated .nty file to keep track of every file you time stamped on the NEM chain.',
        APOSTILLE_NO_NTY: 'No nty file loaded, please click here to import one or a new will be created automatically.',
        APOSTILLE_IMPORT_FILES: 'Import files',
        APOSTILLE_CREATE_TEXT: 'Create text document',
        APOSTILLE_ENTER_TEXT: 'Enter text to notarize...',
        APOSTILLE_DOCUMENT_TITLE: 'Document title',
        APOSTILLE_DROPBOX_MESSAGE: 'Please enter your password and desired tag(s) before selecting files',
        APOSTILLE_DROPBOX_MESSAGE_2: 'Please enter your password before selecting files',

        // AUDIT APOSTILLE MODULE
        APOSTILLE_AUDIT_TITLE: 'Audit apostilles',
        APOSTILLE_AUDIT_CHOOSE_NODE: 'Choose a node',
        APOSTILLE_AUDIT_CHOOSE_NODE_NOTE: 'Only a few nodes are able to search into the whole transaction history (option is disabled by default in NIS).',
        APOSTILLE_AUDIT_WRONG_FORMAT: 'This file is not in apostille format!',
        APOSTILLE_AUDIT_FAIL_NO_PUBLIC_KEY: 'Verification failed, owner has no public key!',
        APOSTILLE_AUDIT_SUCCESS: 'File successfully audited!',
        APOSTILLE_AUDIT_FAIL: 'Verification failed!',
        APOSTILLE_AUDIT_WAITING: 'Apostille transfer might be waiting for confirmation!',
        APOSTILLE_AUDIT_NOT_FOUND: 'Transaction not found, make sure it is not waiting for confirmations otherwise apostille is invalid',
        APOSTILLE_AUDIT_ERROR_UNCONFIRMED: 'An error occurred while fetching unconfirmed data but transaction was not found',
        APOSTILLE_AUDIT_ERROR_SIGNER: 'An error occurred while fetching signer data',
        APOSTILLE_AUDIT_ERROR_SIGNATURE: 'Verification failed, an error occurred at signature verification!',
        APOSTILLE_AUDIT_INFORMATION_1: 'Files that can be audited must be in <b>apostille format</b>',
        APOSTILLE_AUDIT_INFORMATION_2: 'You can recognize those by the filename:',
        //APOSTILLE_AUDIT_NON_SIGNED: 'Non signed exemple:',
        //APOSTILLE_AUDIT_SIGNED: 'Signed exemple:',
        APOSTILLE_AUDIT_FILES: 'Audit files',
        APOSTILLE_AUDIT_FORMAT_EXAMPLE: 'Apostille format example',
        APOSTILLE_AUDIT_REMOVE_RECORDS: 'Remove records locally',

        // APOSTILLE MESSAGE MODULE
        APOSTILLE_MESSAGE_TITLE: 'Send message to notarization account',
        APOSTILLE_MESSAGE_NS_BRAND: 'Use my namespace to brand message',
        APOSTILLE_MESSAGE_ADD_MOSAIC: 'Add mosaic',
        APOSTILLE_NTY_ACCOUNT: 'Notarization account',
        APOSTILLE_REQUEST_MESSAGE: 'Request message',
        APOSTILLE_CREATE_MESSAGE_REQUEST: 'Create a message request',

        // TRANSFER APOSTILLE OWNLERSHIP MODULE
        APOSTILLE_TRANSFER_TITLE: 'Transfer or Split apostille ownership',

        // UPADTE APOSTILLE MODULE
        APOSTILLE_UPDATE_TITLE: 'Update apostille',

        // ERROR ALERTS
        ALERT_MISSING_FORM_DATA: 'Please complete the form!',
        ALERT_ERROR_WALLET_DOWNLOAD: 'Can\'t download wallet because it doesn\'t exists!',
        ALERT_PASSWORDS_NOT_MATCHING: 'Provided passwords or passphrases does not match!',
        ALERT_INVALID_KEY_FOR_ADDR: 'Private key does not correspond to the address provided!',
        ALERT_NO_WALLET_LOADED: 'You can\'t access the dashboard without a wallet',
        ALERT_WALLET_NAME_EXISTS: 'A wallet with the same name is already loaded!',
        ALERT_INVALID_WALLET_FILE: 'You are trying to load a file that is not a wallet!',
        //ALERT_NO_NODE_SET: 'Please enter a node!',
        ALERT_INVALID_CUSTOM_NODE: 'Your custom node is invalid!',
        ALERT_INVALID_WEBSOCKET_PORT: 'Custom node\'s websocket port is invalid!',
        ALERT_MIJIN_DISABLED: 'Mijin network is disabled, please select another network!',
        ALERT_GET_NS_BY_ID_ERROR: 'Error at fetching namespace info, reason: ',
        ALERT_GET_ACCOUNT_DATA_ERROR: 'Error at fetching account data, reason: ',
        ALERT_ERROR_OCCURRED: 'An error ocurred! ',
        ALERT_INVALID_ADDR_FOR_NETWORK: ' does not correspond to the network ',
        ALERT_INVALID_PASSWORD: 'Provided password is not valid!',
        ALERT_COSIG_ALREADY_IN_LIST: 'Cosignatory is already present in modification list!',
        ALERT_COSIGNATORY_HAS_NO_PUBLIC: 'Cosignatory must have at least one transaction to get a public key!',
        ALERT_MULTISIG_HAS_NO_PUBLIC: 'Multisig account must have at least one transaction to get a public key!',
        ALERT_COSIG_CANNOT_BE_MULTISIG: 'Selected account to convert is cosignatory of another multisig account. Therefore it cannot be converted',
        ALERT_NO_NS_OWNED: 'Account does not own any namespace, please create one or change account',
        ALERT_UNLOCKED_INFO_ERROR: 'An error occurred at fetching unlock info',
        ALERT_LOCK_ERROR: 'Error at locking account, reason: ',
        ALERT_UNLOCK_ERROR: 'Error at unlocking account, reason: ',
        ALERT_SUPERNODES_ERROR: 'Error occurred at fetching supernodes data!',
        ALERT_INVALID_NTY_FILE: 'Provided file is not an nty file!',
        ALERT_CREATE_WALLET_FAILED: 'Failed to create wallet, reason: ',
        ALERT_REQUEST_FAILED: 'Request failed, reason: ',
        ALERT_DERIVATION_FROM_SEED_FAILED: 'Failed to derive account from seed, reason: ',
        ALERT_BIP32_GENERATION_FAILED: 'Failed to generate bip 32 data, reason: ',
        ALERT_NO_WALLET_DATA: 'Error, empty wallet data!',
        ALERT_CANNOT_LOGIN_WITHOU_WALLET: 'Error, can\'t login without wallet!',
        ALERT_NO_WALLET_TO_SET: 'Error, can\'t set nothing as current wallet!',
        ALERT_INVALID_WALLET_INDEX: 'Error, selected account index is out of bounds!',
        ALERT_NO_CURRENT_WALLET: 'Error, can\'t set a wallet account if no current wallet!',
        ALERT_ALREADY_MULTISIG: 'Selected account is already a multisig account!',
        ALERT_INVALID_MODIFICATION_ARRAY: 'A multisig account can\'t be cosignatory of itslef, please check your modification list!',
        ALERT_GET_MARKET_INFO_ERROR: 'An error occurred while trying to fetch market information!',
        ALERT_MULTISIG_CANNOT_BE_COSIG: 'A multisig account cannot be set as cosignatory!',
        ALERT_PURGE_CANCELLED: 'Purge cancelled!',
        ALERT_MAINNET_DISABLED: 'Mainnet is disabled, please select another network!',
        ALERT_EMPTY_DECODED_MSG: 'An error occured, no decoded message!',
        ALERT_INVALID_NS_NAME: 'Name of namespace is invalid!',
        ALERT_INVALID_MOSAIC_NAME: 'Name of mosaic is invalid!',
        ALERT_MOSAIC_DESCRIPTION: 'Description of mosaic is too long!',
        ALERT_GET_INCOMING_TXES_ERROR: 'An error occurred while trying to fetch incoming transactions, reason: ',
        ALERT_GET_MOSAICS_DEFINITIONS_ERROR: 'Error at fetching mosaics definitions, reason: ',
        ALERT_GET_SUB_NS_ERROR: 'Error at fetching namespaces definitions, reason: ',
        ALERT_GET_MOSAICS_ERROR: 'Error at fetching mosaics, reason: ',
        ALERT_GET_TRANSACTIONS_ERROR: 'Error at fetching transactions, reason: ',
        ALERT_INVALID_ADDRESS_BOOK_FILE: 'This file is not in .adb format!',
        ALERT_INVALID_ADDRESS: 'Provided address is not valid!',
        ALERT_INVALID_AMOUNT: 'Amount is not valid!',
        ALERT_INVALID_PRIVATE_KEY: 'Provided private key is not valid!',
        ALERT_FILE_SIZE_ERROR: ' is too big, maximum size allowed is 100 MB',
        ALERT_MESSAGE_DECODE_KEY_ERROR: 'Message decryption failed because an account has no public key visible on the network',
        ALERT_FETCH_TIME_SYNC_ERROR: 'An error occurred at fetching network time!',
        ALERT_MULTISIG_MIN_SIGNATURE: 'Multisignature account needs at least one minimum signature',
        ALERT_BTC_MARKET_ERROR: 'Error while trying to fetch Bitcoin price',
        ALERT_COSIG_REMOVAL_LIMIT: 'Only one cosignatory at a time can be removed',
        ALERT_MULTISIG_MIN_SIGNATURE_INVALID: 'Invalid number of minimum signatures',
        ALERT_INSUFFICIENT_BALANCE: 'Insufficient balance for performing the operation',
        ALERT_VOTING_ERROR: 'Invalid Vote',
        ALERT_BRAIN_PASSWORD_TOO_SHORT: 'Brain wallet passphrase must be at least 40 characters!',
        ALERT_NODE_SEEMS_OFFLINE: 'Node seems offline, please select another one',
        ALERT_WEAK_PASSPHRASE: 'Security score of the passphrase must be at least 3',
        ALERT_BRAIN_WALLET_UPGRADE: 'Your brain wallet seems weak! All brain wallets must use a passphrase with at least 40 characters.<br> We advise you to create a new simple wallet from the signup page and move your funds into it.<br> More info <a href="https://forum.nem.io/t/2791" target="_blank"><u>here</u></a>.',
        ALERT_RECIPIENT_PUBLIC_KEY: 'Recipient has no public key visible to the network',
        ALERT_ENCRYPT_MULTISIG: 'Can\'t send encrypted messages via multisig accounts',
        ALERT_EXCHANGE_NEEDS_MESSAGE: 'Recipient is an exchange wallet and thus it requires a message for your account to be correctly credited, please read carefully the exchange deposit instructions!',
        ALERT_ACCOUNT_ALREADY_IN_ADDRESS_BOOK: 'Contact already present in address book!',
        ALERT_MAX_MOSAIC_SUPPLY: 'Maximum mosaic supply is 9\'000\'000\'000',
        ALERT_GET_MOSAIC_SUPPLY_ERROR: 'Error at fetching mosaic supply, reason: ',
        ALERT_ENCRYPTED_MSG_OFFLINE: 'Encrypted messaging is not enabled in offline transactions',

        // SUCCESS ALERTS
        ALERT_CREATE_WALLET_SUCCESS: 'Wallet successfully created and loaded!',
        ALERT_SUCCESS_PURGE: 'Local storage successfully purged!',
        ALERT_SUCCESS_LOGOUT: 'Successfully logged out!',
        ALERT_LOAD_WALLET_SUCCESS: 'Wallet successfully loaded!',
        ALERT_TRANSACTION_SUCCESS: 'Transaction successfully sent!',
        ALERT_GENERATE_ACCOUNT_SUCCESS: 'Account successfully generated. Don\'t forget to download your updated wallet!',
        ALERT_UPGRADE_SUCCESS: 'Wallet successfully upgraded!',
        ALERT_SIGNATURE_SUCCESS: 'Transaction successfully signed!',
        ALERT_NTY_FILE_SUCCESS: 'Successfully loaded nty file!',
        ALERT_INCOMING_TX_FROM: 'Incoming transaction from ',
        ALERT_ADDRESS_BOOK_FILE_SUCCESS: 'Address book successfully imported!',
        ALERT_VOTING_SUCCESS: 'Vote Sent Successfully',
        ALERT_POLL_CREATION_SUCCESS: 'Poll Created Successfully',
        ALERT_COPY_SIGNED_TX_SUCCESS: 'Signed transaction copied!',
        ALERT_COPY_SIGNED_MSG_SUCCESS: 'Signed message copied!',

        // CONVERT ACCOUNT TO MULTISIG
        AGGREGATE_MODIFICATION_TITLE: 'Convert an account to multisig',
        AGGREGATE_MODIFICATION_NAME: 'Aggregate modification transaction',
        AGGREGATE_MODIFICATION_MULTISIG_NAME: 'Multisignature aggregate modification transaction',
        AGGREGATE_ACCOUNT_SELECT_TITLE: 'Account to Convert',
        AGGREGATE_ACCOUNT_SELECT: 'Select an account to convert',
        AGGREGATE_CUSTOM_ACCOUNT: 'Import Key',
        AGGREGATE_ACCOUNT_TO_CONVERT_PRIVATE_TITLE: 'Address private key',
        AGGREGATE_ACCOUNT_TO_CONVERT: 'Account to convert address',
        AGGREGATE_ACCOUNT_TO_CONVERT_PRIVATE: 'Account to convert private key',
        AGGREGATE_ADD_PLACEHOLDER: 'Cosignatory account or @alias to add',
        AGGREGATE_ADD_BTN_TITLE: 'Add Signer',
        AGGREGATE_MIN_SIGNATURES: 'Minimum signatures required',
        AGGREGATE_MIN_SIGNATURES_PLACEHOLDER: 'Minimum signatures needed to validate a transaction',
        AGGREGATE_MODIFICATION_LIST: 'Modifications list',
        AGGREGATE_COSIG_LIST: 'Cosignatory Address List',
        AGGREGATE_MODIFICATION_EDIT_TITLE: 'Edit a multisignature contract',
        AGGREGATE_MODIFICATION_EDIT_SELECT_TITLE: 'Account to edit',
        AGGREGATE_MODIFICATION_EDIT_SELECT: 'Select an account to edit',
        AGGREGATE_ADD_REMOVE_TITLE: 'Add/Remove signer',
        AGGREGATE_ADD_REMOVE_PLACEHOLDER: 'Cosignatory account or @alias to add',
        AGGREGATE_MODIFICATION_RELATIVE_CHANGE: 'Change Sigs Needed',
        AGGREGATE_MODIFICATION_RELATIVE_CHANGE_PLACEHOLDER: 'Number of signatures to add (n) or remove (-n) - Automated removals',
        AGGREGATE_SELECTED_ACCOUNT_INFO: 'Selected account information',
        AGGREGATE_MIN_SIGNATURES: 'Min signatures',
        AGGREGATE_SELECT_WALLET_ACCOUNT: 'Use wallet account',
        AGGREGATE_ADD_COSIG: 'Add cosignatory',
        AGGREGATE_REMOVE_COSIG: 'Remove cosignatory',

        // SIGN MULTISIGNATURE TRANSACTIONS
        SIGN_MULTISIG_TRANSACTIONS_TITLE: 'Sign multisignature transactions',

        // LOGIN MODULE
        LOGIN_MEMBER_TITLE: 'Already a NEMber?',
        LOGIN_UPGRADE_TITLE: 'Wallet needs an upgrade',
        LOGIN_UPGRADE_MESSAGE: 'Selected wallet needs an upgrade. This action will generate a child public key and add it into your primary account.',
        LOGIN_UPGRADE_BUTTON: 'Upgrade wallet',
        LOGIN_IMPORT_BUTTON: 'Import Wallet',
        LOGIN_SELECT_WALLET_YOURS: 'Select wallet',
        LOGIN_SELECT_WALLET: 'Select a wallet in local storage',
        LOGIN_LOGIN_BUTTON: 'Sign In',
        LOGIN_NOTE: 'No wallet? <a href="#!/import-wallet-qr-code">Import one</a> or <a href="#!/signup">sign up</a>.',

        // SIGNUP MODULE
        SIGNUP_TITLE: 'New to NEM?',
        SIGNUP_SELECT_WALLET_TYPE: 'Select a type of wallet to create',
        SIGNUP_SELECT_WALLET_TYPE_STAND_BY: 'Place the cursor on a wallet type to show information.',
        SIGNUP_CREATE_WALLET_TITLE: 'Simple wallet',
        SIGNUP_CREATE_WALLET_INFO: 'Simple wallets contains a primary private key that is generated randomly.',
        SIGNUP_PRIVATE_KEY_WALLET_TITLE: 'Private key wallet',
        SIGNUP_PRIVATE_KEY_WALLET_INFO: 'Private key wallets contains a primary private key that you want to import.',
        SIGNUP_BRAIN_WALLET_TITLE: 'Brain wallet',
        SIGNUP_BRAIN_WALLET_INFO: 'Brain wallets contains a primary private key that is generated from a passphrase. This allow to retrieve the wallet only by knowing that exact passphrase.',
        SIGNUP_CREATE_WALLET_BUTTON: 'Create simple wallet',
        SIGNUP_PRIVATE_KEY_WALLET_BUTTON: 'Create private key wallet',
        SIGNUP_BRAIN_WALLET_BUTTON: 'Create brain wallet',
        SIGNUP_CREATE_WALLET_WARNING: 'Please read about <a href="https://www.w3.org/TR/2014/WD-WebCryptoAPI-20140325/#RandomSource-interface" rel="nofollow" target="_blank"><b>dangers</b></a> that client side generated keys pose; we are not responsible for any loss that could be due to the entropy of key generation. Even if it is unlikely to happen, it is recommended to use a private key generated from a strong source of entropy.',
        SIGNUP_NETWORK_SELECT: 'Select a network',
        SIGNUP_NETWORK_MAINNET: 'Mainnet is the <b><u>real</u></b> NEM network. Addresses start with \'N\'.',
        SIGNUP_NETWORK_TESTNET: 'Testnet is the <b><u>test</u></b> network. Addresses start with \'T\'.',
        SIGNUP_NETWORK_MIJIN: 'Mijin is the private version of NEM. Addresses start with \'M\'.',
        SIGNUP_BRAIN_WALLET_WARNING: 'Please read about <a href="https://en.bitcoin.it/wiki/Brainwallet" rel="nofollow" target="_blank"><b>dangers</b></a> that brain wallets pose. Brain wallets use ONLY a passphrase hashed multiple times. Therefore it\'s crucial to select a SAFE passphrase with at least 40 characters. <a href="https://xkcd.com/936/" rel="nofollow" target="_blank"><b>XKCD #936</b></a>',
        SIGNUP_PRIVATE_KEY_WALLET_WARNING: 'Private key wallets use ONLY a password to encrypt the imported private key. Therefore it\'s crucial to select a SAFE password.',
        SIGNUP_CREATE_START_WARNING: 'Please, follow each step carefully!',
        SIGNUP_CREATE_START_CONNECTION_WARNING: 'It is recommended to disconnect from internet while creating your wallet and backing up your data.',
        SIGNUP_CREATE_READY_BTN: 'Ready',
        SIGNUP_CREATE_ENTER_NAME: 'Enter a wallet name',
        SIGNUP_CREATE_ENTER_PASSWORD: 'Enter a password',
        SIGNUP_CREATE_ENTER_PASSPHRASE: 'Enter a passphrase',
        SIGNUP_CREATE_CONFIRM_PASSWORD: 'Confirm above password',
        SIGNUP_CREATE_CONFIRM_PASSPHRASE: 'Confirm above passphrase',
        SIGNUP_CREATE_ENTER_PRIVATE_KEY: 'Enter a private key',
        SIGNUP_CREATE_ADDRESS_FROM_PK: 'Address corresponding to above key',
        SIGNUP_CREATE_WALLET_ADD_ENTROPY_INFO: 'We are now going to generate your primary private key. <b>Please click on start and move your cursor around to add more entropy.</b>',
        SIGNUP_COMMON_WALLET_WARNING_TITLE: 'Account safety protocol',
        SIGNUP_COMMON_WALLET_WARNING_1: 'Wallets are stored <b><u>temporarily</u></b> in the browser local storage! Browsers can be configured (e.g. by add-ons) to clear the local storage at times. This will lead to the loss of the data and which can\'t be undone easily. In such a case, your wallets will be gone, so it is very important to make sure you have all needed information to restore your accounts.',
        SIGNUP_COMMON_WALLET_WARNING_2: 'Please click below to download your wallet. It is the <b><i>.wlt</i></b> file used as a backup and to import back if your browser’s local storage is erased.',
        SIGNUP_COMMON_WALLET_WARNING_3: 'If you don\'t get a backup <b><i>.wlt</i></b> file, click on button below to reveal the raw wallet data and create the file manually:',
        SIGNUP_COMMON_WALLET_WARNING_4: 'Even if you have a wallet file it is <b><u>mandatory</u></b> to backup your account\'s private key, click on button below to reveal it:',
        SIGNUP_COMMON_WALLET_WARNING_5: 'It is your responsibility to always make sure you have your private key backed up before sending any funds to your account.',
        SIGNUP_COMMON_WALLET_WARNING_6: 'Each wallet has a <b><u>primary private key</u></b> (yours is shown above) that is used to create deterministic secondary accounts (BIP32). This feature requires to use the <b><u>same password</u></b> or it will generate different secondary accounts for the same primary private key. When backing up your data don\'t forget to <b><u>take note of your password</u></b>.',
        SIGNUP_COMMON_WALLET_WARNING_BTN_1: 'Show raw wallet file',
        SIGNUP_COMMON_WALLET_WARNING_BTN_1_INFO: 'To make a wallet file, create an empty text file and put the above base 64 key into it. Save the file as <b><i>yourWalletName.wlt</i></b>.',
        SIGNUP_COMMON_WALLET_WARNING_BTN_2: 'Show private key',
        SIGNUP_COMMON_WALLET_WARNING_BTN_2_INFO: 'Your private key holds all the power of your account and therefore it must be kept secret. <b>Never share it with anyone</b>. It is <b>highly recommend</b> to store the private key in a safe and offline location.',
        SIGNUP_COMMON_WALLET_WARNING_FOOTER: 'By clicking below, you agree that you have your private key, password and wallet file backed up.',
        SIGNUP_COMMON_WALLET_WARNING_CONFIRM_1: 'I have my wallet file',
        SIGNUP_COMMON_WALLET_WARNING_CONFIRM_2: 'I have my private key and password',
        SIGNUP_COMMON_WALLET_WARNING_CONFIRM_3: 'I agree',
        SIGNUP_COMMON_WALLET_WARNING_UNDERSTOOD: 'Understood',
        SIGNUP_COMMON_WALLET_WARNING_DOWNLOAD: 'Download wallet',
        SIGNUP_ESTIMATED_PASSPHRASE_STRENGTH: 'Estimated passphrase strength',
        SIGNUP_ESTIMATED_GUESS_TIMES: 'Estimated guess times',
        SIGNUP_CONGRATS_MSG: '<b>Congratulations!</b> Your NEM address is',

        // FAQ MODULE
        FAQ_TITLE: 'Frequently Asked Questions',
        FAQ_QUESTION_1: 'How the NEM Wallet works?',
        FAQ_ANSWER_1: 'The NEM Wallet is built with AngularJS and ES6. It is a full client-side application that never sends any sensitive data through the wire; everything happens in your browser from creating private keys to the signing of transactions.',
        FAQ_QUESTION_2: 'Is it free to use?',
        FAQ_ANSWER_2: 'Absolutely all operations are client-side, only you have control of your coins, no third parties, and no extra fees.',
        FAQ_QUESTION_3: 'Why do I already have one mosaic?',
        FAQ_ANSWER_3: 'Because XEM is the default currency of the NEM blockchain, every user already has it registered to their wallet, even if their balance is 0. Its namespace is NEM and the mosaic name is XEM',
        FAQ_QUESTION_4: 'Roadmap?',
        FAQ_ANSWER_4: 'The current roadmap includes integration of all features from NanoWallet v1.x.x and completion of community funded projects to work across this wallet.',
        FAQ_QUESTION_5: 'Can I get free XEM?',
        FAQ_ANSWER_5: 'The NEM faucet is currently down, but you can consult the NEM forum to know about the available bounties.',
        FAQ_QUESTION_6: 'Where to find more information about NEM?',
        FAQ_ANSWER_6_FORUM: 'Official forum',
        FAQ_ANSWER_6_WEBSITE: 'Official website',
        FAQ_ANSWER_6_BTT: 'Official BitcoinTalk thread',
        FAQ_QUESTION_7: 'Nothing is shown on the dashboard',
        FAQ_ANSWER_7: 'Please be sure to check the node circle in the top navigation bar. <br> Red circle means that connection to the node failed. <br> Click on "Node" and select another one from the dropdown list or use a custom node. <br> <a href="https://supernodes.nem.io" target="_blank">Supernodes.nem.io</a> has a lot of nodes that you can use.</a>',
        FAQ_QUESTION_8: 'Cosignatories cannot see the transaction to sign',
        FAQ_ANSWER_8: 'In this case go to "Services", look for "Multisignature and Multi-User Accounts" and click on "Sign multisig transactions".',
        FAQ_QUESTION_9: 'What are the best security practices ?',
        FAQ_ANSWER_9: 'It is hightly recommended to always store private keys on paper.<br> You can print them and archive them somewhere safe. <br><br> Regarding wallet files you should always keep multiple copies on different cold locations, like usb sticks. <br> Passwords must always be unique and complex, for this reason, always write it down first. <br><br> When you want to check your wallet or realise operations:<br> - Plug the usb stick <br> - Import the wallet file in the NEM Wallet<br> - Unplug the usb stick.<br><br> A copy of your wallet is stored in the browser local storage for all the time you need.<br> Once you are done, logout and purge the wallets in local storage using the purge button on the right side of the footer.',
        FAQ_QUESTION_10: 'Where to find information about my account (address, etc) ?',
        FAQ_ANSWER_10: 'If you look at the top navigation bar, you will see an <b><i>"Account"</b></i> button between <b><i>"Node"</b></i> and <b><i>"Language"</b></i>. There you can find your address, public key, vested balance and other important data.',
        FAQ_QUESTION_11: 'I have deposited XEM to an exchange but nothing has been credited ?',
        FAQ_ANSWER_11_1: 'First you must check that the hash of your transaction is pointing to an existing transaction on the <a target="_blank" href="http://chain.nem.ninja">explorer</a> (please, note that the explorer is a few blocks behind).',
        FAQ_ANSWER_11_2: 'Most exchanges are asking for an identification message to credit your deposit. Make sure that you have followed carefully the exchange instructions and added a message that is NOT encrypted. ',
        FAQ_ANSWER_11_3: 'Even if you have added a message, it can happen that exchanges may not process your deposit, because of issues on their side.',
        FAQ_ANSWER_11_4: 'You must contact the exchange support, explain the situation and provide them the hash of the transaction.',
        FAQ_QUESTION_12: 'How to check if I am on a fork ?',
        FAQ_ANSWER_12_1: 'Click on <b><i>"Node"</b></i>, in the top navigation bar, to open the node panel.',
        FAQ_ANSWER_12_2: 'Look at the chain height and compare it to the height shown <a target="_blank" href="http://hugealice.nem.ninja:7890/chain/height">here</a>.',
        FAQ_ANSWER_12_3: 'If different of more than 5 blocks then you are probably on a fork.',
        FAQ_ANSWER_12_4: 'To fix, just choose another node from the dropdown in the node panel, it will restore your account at it\'s latest state on the real network.',

        // FORM RELATED
        FORM_PASSWORD_FIELD_PLACEHOLDER: 'Enter your wallet password or passphrase',
        FORM_WALLET_NAME_FIELD_PLACEHOLDER: 'Wallet name',
        FORM_SIGNUP_PASSWORD_FIELD_PLACEHOLDER: 'Password',
        FORM_PASSWORD: 'Password',
        FORM_PASSWORD_CONFIRM: 'Confirm Password',
        FORM_PASSPHRASE_CONFIRM: 'Confirm Passphrase',
        FORM_CONFIRM_PASSWORD_FIELD_PLACEHOLDER: 'Confirm your password',
        FORM_PASSPHRASE_FIELD_PLACEHOLDER: 'Passphrase',
        FORM_CONFIRM_PASSPHRASE_FIELD_PLACEHOLDER: 'Confirm your passphrase',
        FORM_ADDRESS_FIELD_PLACEHOLDER: 'Account address',
        FORM_PRIVATE_KEY_FIELD_PLACEHOLDER: 'Private key',
        FORM_SIDE_BTN_BALANCE: 'Balance',
        FORM_SIDE_BTN_PAY_TO: 'Pay to',
        FORM_SIDE_BTN_TX_FEE: 'Transaction fee',
        FORM_SIDE_BTN_RENTAL_FEE: 'Rental fee',
        FORM_SIDE_BTN_LEVY_FEE: 'Levy fee',
        FORM_RECIPIENT_PLACEHOLDER: 'Recipient address or @alias',
        FORM_INVOICE_RECIPIENT_PLACEHOLDER: 'Recipient address',
        FORM_SIDE_BTN_ALIAS_OF: 'Alias of',
        FORM_MESSAGE_PLACEHOLDER: 'Message',
        FORM_MOSAIC_NAME_PLACEHOLDER: 'Mosaic name',
        FORM_ADDRESS_ALIAS_PLACEHOLDER: 'Account address or @alias',
        FORM_BTN_GET_ALIAS: 'Get namespace address',
        FORM_BTN_OPEN_ADB: 'Open address book',
        FORM_SELECT_NAMESPACE: 'Select a namespace',

        // VOTING MODULE
        PORTAL_VOTING_TITLE: 'Voting',
        PORTAL_VOTING_TEXT: 'Create and vote on polls',
        PORTAL_VOTING_BTN1: 'See Polls',
        PORTAL_VOTING_BTN2: 'Create Poll',
        FORM_TITLE_FIELD_PLACEHOLDER: 'Title',
        FORM_DESCRIPTION_FIELD_PLACEHOLDER: 'Write your description here',
        FORM_OPTION_FIELD_PLACEHOLDER: 'write option',
        FORM_WHITELIST_FIELD_PLACEHOLDER: 'account address',
        FORM_SELECT_MULTISIG: 'Select a multisignature account',
        FORM_SELECT_CONTACT: 'Select a contact',

        // TREZOR RELATED
        TREZOR_TITLE: 'TREZOR',
        TREZOR_TEXT: 'The TREZOR hardware wallet allows you to secure your XEM, mosaics and multisig accounts',
        TREZOR_BUTTON: 'Login with TREZOR',

        // LEDGER NANO RELATED
        LEDGER_NANO_TITLE: 'LEDGER NANO',
        LEDGER_NANO_TEXT: 'The LEDGER NANO hardware wallet allows you to secure your XEM, mosaics and multisig accounts',
        LEDGER_NANO_BUTTON: 'Login with LEDGER NANO',
        LEDGER_NANO_NO_DEVICE: 'Ledger device not found',
        LEDGER_NANO_CHECK_DEVICE: 'Please check your Ledger device!',
        LEDGER_NANO_NOT_USING_NEM_APP: 'You are not using NEM app on your Ledger device',
        LEDGER_NANO_NOT_USING_XYM_APP: 'You are not using Symbol app on your Ledger device',
        LEDGER_NANO_NOT_SUPPORTED_APP: 'Please check if you have an up-to-date NEM application open on your Ledger device',
        LEDGER_NANO_CONNECTED_OTHER_APP: 'Another app is already connected to your Ledger device. Please close it then try again',
        LEDGER_NANO_NOT_OPENED_NEM_APP: 'Please open NEM app on your Ledger device',
        LEDGER_NANO_NOT_OPENED_XYM_APP: 'Please open Symbol app on your Ledger device',
        LEDGER_NANO_DEVICE_LOCKED: 'Please unlock your Ledger device',
        LEDGER_NANO_USER_REJECT_LOGIN: 'Login cancelled by user',
        LEDGER_NANO_USER_REJECT_REQUEST: 'Request cancelled by user',
        LEDGER_NANO_FOLLOW_INSTRUCTION: 'Follow instructions on your Ledger device',
        LEDGER_NANO_TRANSACTION_TOO_BIG: 'The transaction is too big to sign on your Ledger device',
        LEDGER_NANO_TRANSACTION_USER_CANCEL: 'Signing cancelled by user',
        LEDGER_NANO_TRANSACTION_FAILED: 'Failed to sign transaction, reason: ',
        LEDGER_NANO_OPTIN_INFO_1: 'You can use Symbol Ledger app to get account for Symbol Opt-in.',
        LEDGER_NANO_OPTIN_INFO_2: 'Please open Symbol Ledger app on your device and click on Import Symbol account.',
        LEDGER_NANO_IMPORT_SYMBOL: 'Import Symbol account',

        // CREATE OFFLINE TRANSACTION MODULE
        OFFLINE_TX_TITLE: 'Prepare an offline transaction',
        OFFLINE_TX_NO_WALLET: 'Please import a wallet from login module to see the form.',
        OFFLINE_TX_INFO_1: 'To be completely safe, make sure to use a computer that is <b>NEVER</b> connected to internet.',
        OFFLINE_TX_INFO_2: 'Only simple transactions can be created because a connection is needed to fetch mosaics and multisig information from NEM nodes.',
        OFFLINE_TX_INFO_3: 'After clicking the "create" button in the left panel, you will find the signed transaction below.',
        OFFLINE_TX_INFO_4: 'A signed transaction is immutable and will be effective only if released to the network before the default deadline of 24 hours.',
        OFFLINE_TX_SIGNED: 'Signed transaction',
        OFFLINE_TX_RELEASE: 'Open in release module',
        OFFLINE_TX_MODAL_ALERT: 'This computer seems connected to internet, please note that creating offline transactions is safe <b>ONLY</b> on a computer that is <b>NEVER</b> connected to internet.',

        // RELEASE OFFLINE TRANSACTION MODULE
        RELEASE_OFFLINE_TX_TITLE: 'Release a transaction to the network',
        RELEASE_OFFLINE_TX_PARAMETERS: 'Transaction parameters',
        RELEASE_OFFLINE_TX_INFO_1: 'To release a transaction you must be connected to internet.',
        RELEASE_OFFLINE_TX_INFO_2: 'Make sure that you have selected the right network and a working node or it will be rejected.',
        RELEASE_OFFLINE_TX_INFO_3: 'It is not possible to send a signed transaction twice. One signed transaction will always generate the same hash and two transactions cannot have the same hash.',
        RELEASE_OFFLINE_TX_INFO_4: 'You can release a signed transaction from any computer safely.',

        // INVOICE MODULE
        CREATE_INVOICE_TITLE: 'Create an invoice',

        // CREATE SIGNED MESSAGE MODULE
        CREATE_SIGNED_MSG_TITLE: "Create a signed message",
        CREATE_SIGNED_MSG_NAME: 'Signed message',
        CREATE_SIGNED_MSG_SIGN: 'Sign message',

        // VERIFY SIGNED MESSAGE MODULE
        VERIFY_SIGNED_MSG_TITLE: "Verify a signed message",
        VERIFY_SIGNED_MSG_SIG_VALID: 'Signature is valid',
        VERIFY_SIGNED_MSG_SIG_NOT_VALID: 'Signature is <b>NOT</b> valid',
        VERIFY_SIGNED_MSG_NOT_VALID: 'Signed message is not valid!',

        // DNS MODULE
        DNS_SHORT_DESC: "Decentralized Domain Name System (DNS) service for namespace.nem domains",
        DNS_CONFIGURE: "Configure DNS",
        DNS_SEARCH_DNS: "Search DNS",
        DNS_GO_SEARCH: "GO!",
        DNS_GET_INFO: "Get info",
        DNS_SEARCH_HEADLINE: "Search DNS",
        DNS_SEARCH_HELP: "DNS help",
        DNS_SEARCH: "Search",
        DNS_SEARCH_HELP_INFO: "Type a namespace.nem to lookup associated DNS information or go directly to website. ",
        //DNS CONFIGURE
        DNS_SELECT_NAMESPACE:"select namespace",
        DNS_POINTER_ADDRESS:"Pointer address",
        DNS_IP_ADDRESS:"ip address",
        DNS_ORGA:"Organization",
        DNS_COUNTRY:"Country",
        DNS_ADDRESS:"Address",
        DNS_PHONE:"Phone",
        DNS_EMAIL:"Email",
        DNS_OTHERINFO:"Other info",
        DNS_JSONMSG:"Json message",
        DNS_CHAR_LEFT:"Characters Left",
        DNS_HELP1:"The owner of a NEM namespace can use the NEM DNS in a few easy steps. The DNS is built around the namespace platform in the NEM ecosystem and an associated pointer address (PA). The namespace owner needs to send a transaction to the namespace pointer address including a non-encrypted message in json format with information related to the namespace. The message can include relevant information such as IP address, ownership info, physical address, contact info and much more.",
        DNS_HELP2:"This is how you do it:",
        DNS_HELP3:"1. select namespace",
        DNS_HELP4:"2. write relevant or update DNS information",
        DNS_HELP5:"3. send transaction to pointer address",
        //DNS ALERTS
        ALERT_DNS_SUCCESS: "Information found",
        ALERT_DNS_NO_INFO_FOUND: "No DNS info found",

        // IMPORT WALLET QRCODE
        IMPORT_WALLET_QRCODE_TITLE: 'Import wallet QR code',
        IMPORT_WALLET_QRCODE_INFORMATION: 'Support wallet QR code: NEM wechat wallet, ios, android.',
        IMPORT_WALLET_QRCODE_LOAD: 'Load wallet QR code',
        IMPORT_WALLET_QRCODE_SCAN: 'Scan',
        IMPORT_WALLET_QRCODE_STOP_SCAN: 'Stop scan',

        //NEMonster
        NEMONSTER_SHORT_DESC: "Welcome to NEMonsters, a witty little collection game based on the NEM blockchain.",
        NEMONSTER_CATCH: "Catch",
        NEMONSTER_GET: "Get some monsters",
        NEMONSTER_DESC: "Welcome to NEMonsters, a witty little collection game based on the NEM blockchain. You can catch and collect over 110,000,000 different combinations of generated monsters; spanning from different colors, names and other spicy characteristics.  You catch a new monster by sending a fixed transaction; the monster is summoned when the transaction is confirmed. The characteristics of your new (evil) monster is based on the transaction hash – how cool is that. See if you can catch some of the monsters from the NEM foundation.",

        // CATAPULT OPT IN MODULE
        PORTAL_CATAPULTOPTIN_TITLE: 'Symbol Opt In',
        PORTAL_CATAPULTOPTIN_TEXT: 'Use this module to receive XYM on the Symbol network. Please, read more ',
        PORTAL_CATAPULTOPTIN_TEXT_LINK: 'here.',
        PORTAL_CATAPULTOPTIN_MULTISIG_TEXT: 'Your multi-signature opt-in request must be issued with cosigner accounts',
        PORTAL_CATAPULTOPTIN_BTN_1: 'Claim XYM with the Symbol opt-in',
        PORTAL_CATAPULTOPTIN_BTN_2: 'Sign a Multisig Opt In Message',
        PORTAL_CATAPULTOPTIN_TREZOR_TEXT: 'Opt in with trezor is not implemented yet. If you want to Opt in, please move your funds to a normal account.',
        TITLE_CATAPULTOPTIN: 'Symbol Opt In',
        CATAPULTOPTIN_CREATE_HELP: 'Want to know more about opting in to Symbol?',
        CATAPULTOPTIN_TRANSACTION: 'Opt In Transaction',
        CATAPULTOPTIN_ACCOUNT_UNLOCK: 'Enter your Symbol public key',
        CATAPULTOPTIN_ACCOUNT_UNLOCK_PLACEHOLDER: 'Please provide the mnemonic passphrase for your Symbol Account that you opted in',
        CATAPULTOPTIN_ACCOUNT_STEP_1: 'Step 1: Please select an account to Opt In',
        CATAPULTOPTIN_ACCOUNT_STEP_1_NEW: 'Step 1: Please select an account to Opt In',
        CATAPULTOPTIN_ACCOUNT_STEP_2: 'Step 2: Review my Symbol account opt in information',
        CATAPULTOPTIN_ACCOUNT_MS_STEP_2: 'Step 2: Review multisig Symbol account information',
        CATAPULTOPTIN_ACCOUNT_STEP_3: 'Step 3: Review my namespaces to be opted in',
        CATAPULTOPTIN_ACCOUNT_STEP_4: 'Step 4: Review VRF keys in opt in',
        CATAPULTOPTIN_INCLUDE_VRF: 'Include VRF keys in opt in',
        CATAPULTOPTIN_VRF_KEYS: 'VRF keys',
        CATAPULTOPTIN_VRF_PUBLIC_KEY: 'VRF public key',
        CATAPULTOPTIN_ACCOUNT_MS_STEP_3: 'Step 3: Review multisig namespaces to be opted in',
        CATAPULTOPTIN_ACCOUNT_STEP_SIGN: 'Step 2: Sign Symbol Opt In',
        CATAPULTOPTIN_REVIEW_MULTISIG_RESULT: 'Review Multisig Symbol Opt In',
        CATAPULTOPTIN_REGISTER: 'Register Symbol Opt In',
        CATAPULTOPTIN_CREATE_ADDRESS: 'Create a new address on Symbol from mnemonic.',
        CATAPULTOPTIN_INCLUDE_NAMESPACE: 'Include my namespaces in the opt in',
        CATAPULTOPTIN_INCLUDE_MS_NAMESPACE: 'Include multisig account namespaces in the opt in',
        CATAPULTOPTIN_MULTISIG_CONTRACT_CONSIGNATURES: 'Multisig Contract Cosignatures',
        SIGN_MULTISIG_OPTIN_TRANSACTIONS_TITLE: 'Sign Multisignature Opt In Transactions',
        CATAPULTOPTIN_NAMESPACE_TO_DELETE: 'Opt Out of Namespace',
        CATAPULTOPTIN_NAMESPACE_REMOVE: 'Enter namespace to be removed',
        CATAPULTOPTIN_ENTER_PK: 'Enter a private key to generate Symbol account',
        CATAPULTOPTIN_ENTER_PASSWORD: 'Enter your password to generate Symbol account',
        CATAPULTOPTIN_REMOVE_NAMESPACE: 'Remove Namespace',
        CATAPULTOPTIN_OPT_IN_SUCCESS: 'Opt In completed successfully',
        CATAPULTOPTIN_OPT_IN_PENDING_SIGNATURES: 'Opt In pending cosignatories',
        CATAPULTOPTIN_TRANSFER_TRANSACTION_MULTISIG_NAME: 'Symbol Multisig Account Opt in Approval',
        CATAPULTOPTIN_NIS1: 'NIS1',
        CATAPULTOPTIN_OPTIN_ACCOUNT: 'Opt in account:',
        CATAPULTOPTIN_OPTIN_ACCOUNT_PK: 'Opt in account public key:',
        CATAPULTOPTIN_NAMESPACES_OPTIN: 'My opted in namespaces',
        CATAPULTOPTIN_CATAPULT: 'Symbol',
        CATAPULTOPTIN_OPTIN_ACCOUNT_ADDRESS: 'Opt in account address:',
        CATAPULTOPTIN_UNLOCK: 'Unlock Symbol Account',
        CATAPULTOPTIN_CONFIRM_OPTIN: 'Confirm Symbol Opt In',
        CATAPULT_OPT_IN_RESUME: 'Opt In Transaction Confirmation',
        CATAPULT_OPT_IN_RESUME_TEXT:'The following transaction will create a new Symbol account. To claim your funds, you need to back up your Mnemonic passphrase.',
        CATAPULT_OPT_IN_SUCCESS: 'Opt In Successful',
        CATAPULT_OPT_IN_BALANCE_SNAPSHOT: 'Balance to be included in Symbol',
        CATAPULT_OPT_IN_SUCCESS_SIGNING: 'Opt In signed successfully',
        CATAPULT_OPT_IN_UNDERSTAND: 'Considering the change of private key when used with Symbol, it is important that you understand that your account private key on Symbol will be different from your old private key. Please, confirm that you have made a copy of the new private key by entering ‘Yes, I understand’ in the field below.',
        CATAPULT_OPT_IN_CONFIRM_BACKUP: 'I have backed up my mnemonic passphrase for the opt in process and understand it is my responsibility to save and back it up.',
        CATAPULT_OPT_IN_UNDERSTAND_FUNDS: 'I understand that only the funds in my account on the snapshot block are the funds that will be included in my XYM account balance at Symbol launch. Any account balance changes after this opt transaction but before the snapshot will be reflected at Symbol launch.',
        GENERAL_MIN_SIGNATURES_REQUIRED: 'Minimum signatures required',
        SYMBOL_OPTIN_INITIATOR: 'Opt In initiator',
        CATAPULT_BACKUP_WALLET: 'Backup Symbol Wallet',
        CATAPULT_DOWNLOAD_WALLET: 'Download Encrypted Symbol Wallet',
        MNEMONIC: 'Mnemonic',
        CATAPULT_OPT_IN_LOADING: 'Fetching Opt In Status...',
        COSIGNER_NOT_OPTIN: 'Cosigner has not started the opt in process yet',
        SYMBOL_ADDRESS: 'Symbol Address',
        YOUR_SYMBOL_ADDRESS: 'Your Symbol Address',
        YOUR_SYMBOL_MNEMONIC: 'Your Symbol Mnemonic',
        SYMBOL_COSIGNERS: 'Symbol Cosigners',
        CATAPULTOPTIN_CONFIRM_SIGN: 'Sign Symbol Opt In',
        CATAPULTOPTIN_FIRST_DO_NORMAL: 'To do the Multisig Opt In you must first do the Normal Opt In',
        CATAPULTOPTIN_ENCRYPTED_WALLET_TEXT: 'Please create a new password to encrypt your Symbol wallet backup and then press the download button.',
        CATAPULTOPTIN_REVIEW_NORMAL_RESULT: 'Review my Symbol account opt-in information',
        CATAPULTOPTIN_GENERATE_NEW_SYMBOL: 'Generate new Symbol Mnemonic',
        CATAPULTOPTIN_VRF_KEYS_DESCRIPTION: 'VRF keys are used for harvesting on symbol. If you own a node and want to start harvesting the first blocks, you should activate this option and save the keys to put them back in your symbol node configuration. If you don\'t select this option, you will also be able to generate new keys once mainnet is alive',
        OPTIN_FORM_PASSWORD_FIELD_PLACEHOLDER: 'Enter your regular NEM wallet password',
        OPTIN_NEW_PASSWORD: 'New Password',
        SYMBOL_PASSWORD_REQUIREMENT: "Password must be at least 8 characters",
        SYMBOL_WALLET_CREATING_TYPE_INFO: 'Please choose the way to create your Symbol account',
        SYMBOL_WALLET_CREATING_BY_ENTROPY_TYPE_INFO: 'Generate random account',
        SYMBOL_WALLET_CREATING_BY_LEDGER_IMPORT_TYPE_INFO: 'Import Symbol account from Ledger',
        SYMBOL_SIGNUP_CREATE_WALLET_ADD_ENTROPY_INFO_1: 'We are now going to generate your primary private key.',
        SYMBOL_SIGNUP_CREATE_WALLET_ADD_ENTROPY_INFO_2: 'Please click on start and move your cursor around to add more entropy.',
        OPTIN_WELCOME_TITLE: 'Welcome to Symbol Opt-in',
        OPTIN_INFO_1: 'The Symbol mainnet has not launched yet.',
        OPTIN_INFO_2: 'You can prepare by opting in your NEM NIS1 accounts with this module ',
        OPTIN_INFO_3: 'to migrate your balance and namespaces to the Symbol network.',
        OPTIN_LINK_INFO: 'Get all information about Opt-in process ',
        OPTIN_NAMESPACES_TITLE: 'Opt-in Namespaces',
        OPTIN_NAMESPACES_INFO:'Now you can Opt-in the Namespace(s) you own on NEM NIS1. This provides a placeholder for the same Namespace(s) on the Symbol blockchain.',
        OPTIN_NAMESPACES_LINK: 'Get all information about Namespace Opt-in ',
        OPTIN_NAMESPACES_SELECT: 'Select the Namespaces you want to Opt-in:',
        OPTIN_VRF_TITLE: 'Include VRF keys',
        OPTIN_VRF_INFO:'VRF keys allow your account to harvest block rewards. If you plan to hold over 10,000 XYM in your account after launch and would like to harvest on Symbol blockchain, you need to add VRF keys to the Opt-in process.',
        OPTIN_VRF_LINK: 'Get all information about VRF keys ',
        OPTIN_VRF_KEYS:'Add VRF Keys',
        OPTIN_VRF_PUBLIC: 'VRF Public Address',
        OPTIN_VRF_PRIVATE: 'VRF Private Key',
        OPTIN_TAC_TITLE:'Terms and Conditions',
        OPTIN_TAC_TEXT:'terms and conditions',
        OPTIN_PP_TEXT:'privacy policy',
        OPTIN_TAC_INFO_1:'The Opt-in process is a feature launched by Symbol Chain Limited with the aim of helping NIS1 users migrate their balances to their new Symbol network. It is a process defined under certain parameters that all users who adhere to it have to comply with.',
        OPTIN_TAC_INFO_2:'Symbol Chain Limited will not be liable for any incidents outside of the terms and conditions specified below.',
        OPTIN_TAC_READ_ACCEPT: 'I have read and accept the ',
        OPTIN_TAC_READ_ACCEPT_POST: '',
        OPTIN_CONFIRM_TITLE:'Confirm Symbol Opt-in',
        OPTIN_CONFIRM_INFO:'We are almost done! This will be the information that will be migrated to the new Symbol chain. Review it carefully and sign with your NEM key to finish your Opt-in.',
        OPTIN_CONFIRM_OPTIN:'Confirm Opt-in',
        HERE:'here',
        OPTIN_ENTER_PASSWORD: 'Enter your NEM NIS1 password to sign the Opt-in',
        OPTIN_LOADING: 'Fetching Opt In data...',
        OPTIN_FINISHED: 'Post launch Opt-in will open soon. Please check back for a new version after Symbol launch.',
        CREATE_SYMBOL_ACCOUNT: 'Create your Symbol account',
        OPTIN_SYMBOL_READY: 'Your Symbol account is ready',
        OPTIN_COPY_SUCCESS: 'Copied!',
        OPTIN_TYPE_SELECT: 'Select the way you opted in this wallet',
        CATAPULT_OPT_IN_ERROR_TOO_MUCH_COSIGNATORIES: 'This account has more than 8 cosignatories. Opt In protocol only allows multisig accounts with less than 9 cosignatories',

        FORM_SELECT_ACCOUNT: 'Select account',

        POST_OPTIN_INFO_3: 'this module to migrate your balance to the Symbol network.',
        POST_OPTIN_INFO_2: 'If you had XEM on the Snapshot block, you can claim your XYM ',
        POST_OPTIN_INFO_1: 'The Symbol mainnet is now live!',
        SELECT_ACCOUNT_POST_OPTIN: 'Select account to opt-in',
        POST_OPTIN_STATUS: 'Opt-in status',
        POST_OPTIN_DETAILS: 'Opt-in details',
        POST_OPTIN_AMOUNT: 'Amount to claim',
        POST_OPTIN_AMOUNT_CLAIMED: 'Amount claimed',
        POST_OPTIN_START: 'START OPT-IN',
        POST_OPTIN_DEST_MSIG: 'Enter your destination Symbol account\'s public key. This account must be a multisig and must have the same amount of cosigners as the current NIS1 multisig account.',
        POST_OPTIN_DEST_MSIG_ADDRESS: 'Symbol multisig address',
        POST_OPTIN_DEST_ADDRESS: 'Symbol destination address',
        POST_OPTIN_DEST_MULTISIG_ADDRESS: 'Symbol multisig destination address',
        POST_OPTIN_COSIG_DEST_ADDRESS: 'Symbol cosignatory destination address',
        NIS1_ADDRESS: 'Cosigner Address',
        YOUR_NIS_ACCOUNT: 'Your NIS1 Address',
        OPTIN_NOT_DONE: 'Opt-in not done',
        OPTIN_STATUS_TITLE_1: 'Opt-in not done',
        OPTIN_STATUS_TEXT_1: 'You can start claiming XYM',
        OPTIN_STATUS_TITLE_2: 'Simple opt-in pending',
        OPTIN_STATUS_TEXT_2: 'Your opt-in request has been successfully created.',
        OPTIN_STATUS_TITLE_3: 'Multisig opt-in not started',
        OPTIN_STATUS_TEXT_3: 'You can claim XYM for the multisig account',
        OPTIN_STATUS_TITLE_4: 'Multisig opt-in has pending signatures',
        OPTIN_STATUS_TEXT_4: 'Pending cosigners to opt-in',
        OPTIN_STATUS_TITLE_5: 'Multisig opt-in pending',
        OPTIN_STATUS_TEXT_5: 'Your opt-in request has been successfully created.',
        OPTIN_STATUS_TITLE_6: 'Opt-in done',
        OPTIN_STATUS_TEXT_6: 'You have claimed your XYM successfully. You should now have received a Symbol transaction with the amount.',
        OPTIN_ERROR_TITLE_0: 'This opt-in request has failed because the signature was not valid.',
        OPTIN_ERROR_TITLE_1: 'This opt-in request has failed because the destination account was not valid',
        OPTIN_ERROR_TITLE_2: 'This opt-in request has failed because one or more cosignatories were not valid.',
        OPTIN_NOT_AVAILABLE: 'You didn\'t have enough XEM in Snapshot or you already claimed them in a pre-launch opt-in.',
        OPTIN_PUBLICKEY_PLACEHOLDER: 'Public key must be 64 hexadecimal characters long.',
        OPTIN_SIGNED: 'Signed',
    });
}

export default EnglishProvider;

'''
'''--- src/app/modules/languages/es.js ---
function SpanishProvider($translateProvider) {
    'ngInject'

    $translateProvider.translations('es', {

        // HEADER COMPONENT
        WALLET_NAME_1: 'NEM',
        WALLET_NAME_2: 'Wallet',
        APP_NAME_SUB: 'La aplicación segura que se conecta a la plataforma NEM',
        HEADER_LOGIN_BUTTON: 'Ingresar',
        HEADER_SIGNUP_BUTTON: 'Crear Cuenta',
        HEADER_DASHBOARD: 'Escritorio',
        HEADER_WALLET: 'Cartera',
        HEADER_SERVICES: 'Servicios',
        HEADER_EXPLORER: 'Explorador',
        HEADER_NODE: 'Nodo',
        HEADER_ACCOUNT: 'Cuenta',
        HEADER_LANG_TITLE: 'Idioma',
        HEADER_LANG_SELECT: 'Selecciona un idioma',
        HEADER_NODE_BLOCK_HEIGHT: 'Tamaño del bloque',
        HEADER_NODE_CURRENT_NODE: 'Nodo actual',
        HEARDER_NODE_LIST: 'Lista de nodos',
        HEADER_NODE_SELECT: 'Selecciona un nodo',
        HEADER_NODE_CUSTOM: 'Nodo personalizado',
        HEADER_NODE_CONNECT: 'Conectar',
        HEADER_NODE_CUSTOM_INFO: 'Ip o dominio del nodo',
        HEADER_NODE_CUSTOM_TOOLTIP: 'Ingresa tu propio nodo NIS aquí',
        HEADER_PURGE: 'Limpiar',
        HEADER_PURGE_MESSAGE: 'Por favor confirma la limpieza del almacenamiento local. Haciendo clic en "Limpiar" todas las carteras almacenadas de manera local serán eliminadas y no podran ser recuperadas. Usted acepta que todas las carteras han sido respaldadas y los fondos están asegurados.',
        HEADER_OFFLINE_TX: 'Preparar una transacción sin conexión',
        HEADER_RELEASE_TX: 'Lanzar una transacción',

        // FOOTER COMPONENT
        FOOTER_POWERED_BY_1: 'Creado por',
        FOOTER_POWERED_BY_2: 'NEM technology.',
        FOOTER_VERSION: 'Versión',

        // DASHBOARD MODULE
        DASHBOARD_TITLE: 'Escritorio',
        DASHBOARD_UNCONFIRMED: 'No confirmado',
        DASHBOARD_CONFIRMED: 'Confirmado',
        DASHBOARD_HARVEST_INCOME_TITLE: 'Cosecha obtenida en los últimos 25 bloques',
        DASHBOARD_HARVEST_INCOME_NOTE: 'Solo bloques con tarifa superior a 0',
        DASHBOARD_HARVEST_INCOME_MESSAGE: 'No se encontraron tarifas en los últimos 25 bloques.',
        DASHBOARD_NEWS_TITLE: 'Últimas noticias',
        DASHBOARD_HARVESTED_BLOCKS_TITLE: 'Bloques cosechados',
        DASHBOARD_HARVESTED_BLOCKS_TH: 'Tarifas ganadas',
        DASHBOARD_MARKET_INFO_TITLE: 'Información del mercado',
        DASHBOARD_MARKET_INFO_CAP: 'Capitalización de mercado',
        DASHBOARD_MARKET_INFO_PRICE: 'Precio',
        DASHBOARD_MARKET_INFO_VOLUME: 'Volumen 24h',
        DASHBOARD_MARKET_INFO_CHANGES: 'Porcentaje de cambio (24h)',
        DASHBOARD_MARKET_INFO_CHANGES_1H: '1h',
        DASHBOARD_MARKET_INFO_CHANGES_24H: '24h',
        DASHBOARD_MARKET_INFO_CHANGES_7D: '7d',
        DASHBOARD_MARKET_INFO_NOTE: '<a href="http://coinmarketcap.com/" target="_blank">CoinMarketCap</a> datos actualizados cada 5 minutos',
        DASHBOARD_NOTICE_1: 'Bienvenido(a) a la NanoWallet Beta!',
        DASHBOARD_NOTICE_2: 'Por favor <a href="https://github.com/NemProject/NanoWallet" target="_blank">reportar incidencias aquí</a>.',
        DASHBOARD_NOTICE_3: 'El equipo de NEM sugiere hacer pruebas en el testnet para familiarizarse primero con NanoWallet antes de usar el mainnet. Se puede encontrar una guía simple <a href="https://blog.nem.io/nanowallet-tutorial/" target="_blank"> aquí </a>. Los usuarios son responsables de sus fondos y de realizar una copia de seguridad de sus claves privadas. El equipo de NEM no es responsable de ninguna pérdida de fondos debido al uso de esta aplicación en la red mainnet.',
        DASHBOARD_NOTICE_4: 'Sugerimos escribir las claves privadas en papel y almacenarlas en un lugar seguro. Además, puedes importar tus cuentas en las aplicaciones oficiales para Android e iOS.',
        DASHBOARD_NOTICE_5: '!Gracias por tu participación!',

        // GENERAL
        GENERAL_BLOCK: 'Bloque',
        GENERAL_BLOCKS: 'Bloques',
        GENERAL_NO_RESULTS: 'Nada que mostrar',
        GENERAL_ACCOUNT: 'Cuenta',
        GENERAL_ACCOUNTS: 'Cuentas',
        GENERAL_MULTISIG_ACCOUNT: 'Cuenta multifirma',
        GENERAL_AMOUNT: 'Cantidad',
        GENERAL_MESSAGE: 'Mensaje',
        GENERAL_DATE: 'Fecha',
        GENERAL_TAB_NORMAL: 'Normal',
        GENERAL_TAB_SEND: 'Enviar',
        GENERAL_TAB_MULTISIG: 'Multifirma',
        GENERAL_TOTAL: 'Total',
        GENERAL_REMOVE: 'Eliminar',
        GENERAL_MOSAIC: 'Mosaico',
        GENERAL_FEE: 'Tarifa',
        GENERAL_LEVY: 'Impuesto',
        GENERAL_LEVY_TYPES: 'Tipos de impuesto',
        GENERAL_LEVY_TYPES_NOTE: 'I - Tarifa constante; II - Basado en porcentaje',
        GENERAL_LEVY_TYPE_1: 'Tarifa fija',
        GENERAL_LEVY_TYPE_2: 'Basada en porcentaje',
        GENERAL_SEND: 'Enviar',
        GENERAL_TO: 'A',
        GENERAL_HASH: 'Hash',
        GENERAL_HASH_FUNCTION: 'Función Hash',
        GENERAL_NAME: 'Nombre',
        GENERAL_INFORMATION: 'Información',
        GENERAL_ADDRESS: 'Dirección',
        GENERAL_PUBLIC_KEY: 'Clave pública',
        GENERAL_PRIVATE_KEY: 'Clave privada',
        GENERAL_CLEAR_ALL: 'Limpiar todo',
        GENERAL_CLOSE: 'Cerrar',
        GENERAL_COMING_SOON: 'Próximamente',
        GENERAL_NONE: 'Ninguno',
        GENERAL_DROPBOX: 'Suelta los archivos aquí o haz clic para navegar',
        GENERAL_NETWORK_FEE: 'Tarifa de red ',
        GENERAL_YES: 'Sí',
        GENERAL_NO: 'No',
        GENERAL_TAGS: 'Etiquetas',
        GENERAL_SINK: 'Sink', //No está traducido, por desconocimiento
        GENERAL_SINK_ADDRESS: 'Dirección Sink',//No está traducido, por desconocimiento
        GENERAL_STORAGE: 'Almacenamiento',
        GENERAL_REASON: 'Razón',
        GENERAL_TRANSACTION_HASH: 'Hash de transacción',
        GENERAL_TRANSACTION_ID: 'ID de transacción',
        GENERAL_OWNER: 'Propietario',
        GENERAL_RESULTS: 'Resultados',
        GENERAL_RESULT: 'Resultado',
        GENERAL_STATUS: 'Estado',
        GENERAL_LOCATION: 'Ubicación',
        GENERAL_ACTION: 'Acción',
        GENERAL_ACTIONS: 'Acciones',
        GENERAL_ADD: 'Agregar',
        GENERAL_ADDED: 'Agregado',
        GENERAL_REMOVED: 'Eliminar',
        GENERAL_COSIGNATORY: 'Cofirmante',
        GENERAL_COSIGNATORIES: 'Cofirmantes',
        GENERAL_PROCESSING: 'Procesando',
        GENERAL_ACCOUNT_LABEL: 'Etiqueta de la cuenta',
        GENERAL_OPTIONAL: '(opcional)',
        GENERAL_ERROR: 'Error',
        GENERAL_EXAMPLE: 'Ejemplo',
        GENERAL_PUBLIC: 'Público',
        GENERAL_NAMESPACES: 'Namespaces',
        GENERAL_NAMESPACE: 'Namespace',
        GENERAL_SUB_NAMESPACES: 'Sub-namespaces',
        GENERAL_SUB_NAMESPACE: 'Sub-namespace',
        GENERAL_MOSAICS: 'Mosaicos',
        GENERAL_VALUE: 'Valor',
        GENERAL_CONNECTION_ERROR: 'Ha ocurrido un error, el nodo se encuentra inactivo o estas desconectado',
        GENERAL_HISTORY: 'Historial',
        GENERAL_REVEAL: 'Mostrar',
        GENERAL_QR: 'Código QR',
        GENERAL_UPDATE:  'Actualizar',
        GENERAL_UNKNOWN: 'Desconocido',
        GENERAL_IMPORTANCE: 'Importancia',
        GENERAL_TRANSACTIONS: 'Transacciones',
        GENERAL_REGISTER: 'Registrar',
        GENERAL_CREATE: 'Crear',
        GENERAL_RENEW: 'Renovar',
        GENERAL_CHARACTERS_LEFT: 'Caracteres restantes',
        GENERAL_CURRENCY: 'Moneda',
        GENERAL_EDIT: 'Editar',
        GENERAL_SEND_XEM: 'Enviar XEM',
        GENERAL_ACTIVE: 'Activo',
        GENERAL_INACTIVE: 'Inactivo',
        GENERAL_ACTIVATING: 'Activando',
        GENERAL_DEACTIVATING: 'Desactivando',
        GENERAL_REMOTE: 'Remoto',
        GENERAL_WARNING: 'Advertencia',
        GENERAL_SCORE: 'Puntuación',
        GENERAL_LENGTH: 'Longitud',
        GENERAL_GO_BACK: 'Volver',
        GENERAL_NEXT: 'Siguiente',
        GENERAL_START: 'Iniciar',
        GENERAL_ALIAS: 'Alias',
        GENERAL_CONTACTS: 'Contactos',
        GENERAL_ENCRYPTED: 'Encriptado',
        GENERAL_UNENCRYPTED: 'No encriptado',
        GENERAL_HEXADECIMAL: 'Hexadecimal',
        GENERAL_SELECT_ACCOUNT: 'Seleccionar cuenta',
        GENERAL_INVOICE: 'Factura',

        // HOME MODULE
        HOME_UNSUPPORTED_BROWSER: 'Disculpa, pero no puedes usar Nano Wallet de forma segura con este explorador...',
        HOME_RECOMMENDED_BROWSERS: 'Los navegadores recomendados son:',
        HOME_FEATURE_STAND_BY: 'Sitúa el cursor en una imagen para mostrar información',
        HOME_FEATURE_1: 'Envía y recibe XEM de manera sencilla y casi instantanea, solo un 1 minuto de confirmación!',

        // TRANSFER TRANSACTION MODULE HAsta aquí nos quedamos
        TRANSFER_TRANSACTION_TITLE: 'Enviar una transacción',
        TRANSFER_TRANSACTION_NAME: 'Transferir transacción', //buscar sinónimo de transferir
        TRANSFER_TRANSACTION_MULTISIG_NAME: 'Transferir transacción multifirma',
        TRANSFER_TRANSACTION_INVOICE: 'Crear factura',
        TRANSFER_TRANSACTION_TAB_INVOICE: 'Recibir',
        TRANSFER_TRANSACTION_MOSAIC_TRANSFER: 'Transferir de mosaico',
        TRANSFER_TRANSACTION_ATTACH_MOSAIC: 'Adjuntar mosaico',
        TRANSFER_TRANSACTION_ATTACH: 'Adjuntar',
        TRANSFER_TRANSACTION_MOSAICS_ATTACHED: 'Mosaicos adjuntados',
        TRANSFER_TRANSACTION_ENCRYPT_MESSAGE: 'Encriptar mensaje',
        TRANSFER_TRANSACTION_MESSAGE_TYPE: 'Tipo de mensaje',

        // TRANSACTION LINES
        LINE_TX_DETAILS_FROM: 'Desde',
        LINE_TX_DETAILS_FROM_MULTISIG: 'Desde multifirma',
        LINE_TX_DETAILS_WAITING: 'Transacción esperando a ser incluida',
        LINE_TX_DETAILS_NEED_SIG: 'Necesita las firmas de cofirmantes',
        LINE_TX_DETAILS_NEED_SIG_2: 'Necesita tu firma',
        LINE_TX_DETAILS_MESS_DEC: 'Decodificar',
        LINE_TX_DETAILS_HASH: 'Hash',
        LINE_TX_DETAILS_DEC_MESS: 'Decodificar mensaje',
        LINE_TX_DETAILS_MOS_ATTACHED: 'Mosaicos adjuntos',
        LINE_TX_DETAILS_LEVY_TYPE_1: 'Fijo',
        LINE_TX_DETAILS_LEVY_TYPE_2: 'Basado en porcentaje',
        LINE_TX_DETAILS_ISSUER: 'Editor',
        LINE_TX_DETAILS_MULTISIG_FEE: 'Tarifa multifirma',
        LINE_TX_DETAILS_MULTISIG_HASH: 'Hash multifirma',
        LINE_TX_DETAILS_COSIGN: 'Transacción de firma conjunta (confirmantes)',
        LINE_TX_DETAILS_SIGNATURES: 'Firma(s)',
        LINE_TX_DETAILS_COSIGNATORY: 'Cofirmante',
        LINE_TX_DETAILS_TIMESTAMP: 'Marca de fecha',
        LINE_TX_DETAILS_MOS_CREATE: 'Crear mosaico',
        LINE_TX_DETAILS_MOS_EDIT: 'Editar mosaico',
        LINE_TX_DETAILS_NS_CREATE: 'Crear namespace',
        LINE_TX_DETAILS_NS_NEW_SUB: 'Nuevo sub-namespace',
        LINE_TX_DETAILS_NS_ROOT: 'Namespace raíz',
        LINE_TX_DETAILS_RECIPIENT: 'Recipiente',
        LINE_TX_DETAILS_MULTISIG_CREATE: 'Crear cuenta multifirma',
        LINE_TX_DETAILS_MULTISIG_EDIT: 'Editar cuenta multifirma',
        LINE_TX_DETAILS_MULTISIG_MOD: 'Modificaciones',
        LINE_TX_DETAILS_MULTISIG_MIN_COSIG: 'Cofirmantes mínimos',
        LINE_TX_DETAILS_MULTISIG_AFFECTED: 'Cuenta afectada',

        // IMPORTANCE MODULE
        IMPORTANCE_TRANSFER_NAME: 'Transacción de transferencia de importancia',//Duda al traducir
        IMPORTANCE_TRANSFER_MULTISIG_NAME: 'Transacción de transferencia multifirma de importancia', //Duda al traducir
        IMPORTANCE_TRANSFER_MODE: 'Modo',
        IMPORTANCE_TRANSFER_MODE_1: 'Activar',
        IMPORTANCE_TRANSFER_MODE_2: 'Desactivar',
        IMPORTANCE_TRANSFER_TITLE: 'Administrar cuenta delegada',
        IMPORTANCE_TRANSFER_MULTISIGNATURE_TITLE: 'Administrar cuenta delegada de cuentas multifirma',
        IMPORTANCE_TRANSFER_CUSTOM_KEY: 'Usar una clave pública personalizada',
        IMPORTANCE_TRANSFER_MODE_SELECT: 'Seleccionar un modo',
        IMPORTANCE_TRANSFER_REMOTE_ACCOUNT: 'Cuenta remota',
        IMPORTANCE_TRANSFER_REMOTE_PUBLIC: 'Clave pública remota',
        IMPORTANCE_TRANSFER_INFO_PART_1: 'Una vez que se ha incluido una transacción de importancia en un bloque, necesita 6 horas para activarse. Después de eso, tendrás acceso a la selección de nodos y comandos de Iniciar / Parar.',
        IMPORTANCE_TRANSFER_INFO_PART_2: 'Asegúrate de que ya no tienes una cuenta delegada activada (si es una cuenta importada). De ser así, puedes usar la antigua clave pública delegada para desactivar (si es necesario).',
        IMPORTANCE_TRANSFER_INFO_PART_MULTISIG: 'Para las cuentas multifirma, solo el propietario que inició la transacción de transferencia de importancia, puede iniciar y detener la cosecha. Si cualquier otro cofirmante desea obtener el poder de cosecha, solo necesita desactivar y reactivar el estado remoto.',
        IMPORTANCE_TRANSFER_NO_BLOCKS_HARVESTED: 'No hay bloques cosechados',
        IMPORTANCE_TRANSFER_HARVESTING_PANEL: 'Panel de cosecha',
        IMPORTANCE_TRANSFER_REMOTE_ACTIVATING: 'Debes esperar hasta que su estado remoto esté activo para comenzar la cosecha delegada (6 horas)',
        IMPORTANCE_TRANSFER_REMOTE_INACTIVE: 'Debes enviar una transferencia de importancia desde el panel izquierdo para activar su cuenta remota',
        IMPORTANCE_TRANSFER_MULTISIG_NOT_INITIATOR: 'No eres el cofirmante que ha iniciado la transferencia de importancia, por lo tanto, no puedes ver, iniciar o detener directamente el estado de la cosecha delegada. Por favor, contacta al cofirmante que administra la cuenta remota. Puedes desconectar a un administrador y obtener el control de la cosecha, desactivando y reactivando con su control remoto.',
        IMPORTANCE_TRANSFER_PRIVATE_KEY_PLACEHOLDER: 'Mostrar clave privada delegada',
        IMPORTANCE_TRANSFER_DELEGATED_KEYS: 'Clave de cuenta delegada',
        IMPORTANCE_TRANSFER_HARVESTING_STATUS: 'Estado de cosecha',
        IMPORTANCE_TRANSFER_START_HARVESTING: 'Iniciar la cosecha delegada',
        IMPORTANCE_TRANSFER_STOP_HARVESTING: 'Detener cosecha delegada',
        IMPORTANCE_TRANSFER_ACTIVATE_DEACTIVATE_REMOTE: 'Activar / Desactivar la cuenta delegada',
        IMPORTANCE_TRANSFER_SHOW_DELEGATED_KEYS: 'Mostrar claves de cuenta delegada',

        // CREATE MOSAIC MODULE
        MOSAIC_DEFINITION_TITLE: 'Crear un mosaico',
        MOSAIC_DEFINITION_NAME: 'Definir transacción de mosaico',
        MOSAIC_DEFINITION_MULTISIG_NAME: 'Definir transacción multifirma de mosaico',
        MOSAIC_DEFINITION_QUANTITY: 'Cantidad',
        MOSAIC_DEFINITION_DIV: 'Divisibilidad',
        MOSAIC_DEFINITION_TOTAL_SUPPLY: 'Total emitido',
        MOSAIC_DEFINITION_FINAL_NAME: 'Nombre completo',
        MOSAIC_DEFINITION_DESCRPITION: 'Descripción',
        MOSAIC_DEFINITION_INITIAL_SUPPLY: 'Emisión inicial',
        MOSAIC_DEFINITION_MUTABLE_SUPPLY: 'Emisión mutable',
        MOSAIC_DEFINITION_TRANSFERABLE: 'Transferible',
        MOSAIC_DEFINITION_PROPERTIES: 'Propiedades',
        MOSAIC_DEFINITION_MOSAIC_PROPERTIES: 'Propiedades de mosaico',
        MOSAIC_DEFINITION_REQUIRES_LEVY: 'Impuesto requerido',
        MOSAIC_DEFINITION_LEVY_LIMITATION: 'Limitación de la interfaz de usuario: en este momento, solo los mosaicos en propiedad pueden ser usados como un impuesto.',
        MOSAIC_DEFINITION_LEVY_SELECT_MOSAIC: 'Seleccionar el mosaico del impuesto',
        MOSAIC_DEFINITION_LEVY_ADDRESS: 'Dirección de impuesto',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE: 'Tipo de tarifa',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_1: 'Fija',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2: 'Porcentual',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_1_NOTE: 'Seleccionando fija, causará un impuesto fijo de',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE: 'Seleccionando porcentual, causará un impuesto en proporción:',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE_2: 'Enviando',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE_3: 'implicará un impuesto de',
        MOSAIC_DEFINITION_PARENT: 'Namespace padre',
        MOSAIC_DEFINITION_INFORMATION_TITLE: 'Creando un Mosaico',
        MOSAIC_DEFINITION_INFORMATION: '¿Quieres más información sobre mosaicos?',
        MOSAIC_DEFINITION_INFORMATION_1: 'La longitud máxima para un nombre de mosaico es de 32 caracteres. Los caracteres permitidos son:',
        MOSAIC_DEFINITION_INFORMATION_2: 'El primer carácter debe ser una letra del alfabeto o un número.',
        MOSAIC_DEFINITION_INFORMATION_3: 'La descripción no puede exceder una longitud de 512 caracteres. No hay ninguna limitación para los caracteres utilizados en la descripción.', //duda de traducción debería o debe
        MOSAIC_DEFINITION_INFORMATION_4: 'El comportamiento de un mosaico se puede personalizar mediante un conjunto de propiedades:',
        MOSAIC_DEFINITION_INFORMATION_5: 'La emisión se da en unidades enteras del mosaico, no en subunidades. La emisión inicial debe estar en el rango de 0 y 9,000,000,000.',
        MOSAIC_DEFINITION_INFORMATION_6: 'La divisibilidad determina hasta qué punto decimal se puede dividir el mosaico. Por lo tanto, una divisibilidad de 3 significa que un mosaico se puede dividir en partes más pequeñas de 0.001 mosaicos, es decir, mili mosaicos es la subunidad más pequeña. La divisibilidad debe estar en el rango de 0 y 6.',
        MOSAIC_DEFINITION_INFORMATION_7: 'Si es marcado, permite cambiar la emisión del mosaico en un momento posterior, de lo contrario, la emisión es inmutable.',
        MOSAIC_DEFINITION_INFORMATION_8: 'Permitir transferencias del mosaico entre cuentas que no sean la del creador. Si la propiedad \'transferible\' no está marcada, solo las transacciones transferidas que tengan al creador como remitente o como destinatario pueden transferir mosaicos de ese tipo. Si está marcado, los mosaicos se pueden transferir hacia y desde cuentas arbitrarias.',
        MOSAIC_DEFINITION_INFORMATION_9: 'El propietario puede exigir que se cobre una tarifa especial del remitente y se envíe a una cuenta de su elección (por lo tanto, el creador puede especificar su propia cuenta como destinatario de esta tarifa). Los datos para el impuesto son los siguientes:',
        MOSAIC_DEFINITION_INFORMATION_10: 'El mosaico en el que se debe pagar la tarifa. Se puede especificar cualquier mosaico existente.',
        MOSAIC_DEFINITION_INFORMATION_11: 'El destinatario del impuesto. Esta puede ser cualquier cuenta.',
        MOSAIC_DEFINITION_INFORMATION_12: 'La cantidad de la tarifa. La interpretación depende del campo \'Tipo de tarifa\', ver arriba.',
        MOSAIC_DEFINITION_INFORMATION_13: 'Hay dos tipos de tarifas admitidas, tarifa fija y tarifa porcentual.',
        MOSAIC_DEFINITION_INFORMATION_14: 'La tarifa se especifica como cantidad absoluta y, por lo tanto, no depende de la cantidad que se transfiere.',
        MOSAIC_DEFINITION_INFORMATION_15: 'La tarifa se especifica como múltiplo del porcentaje de la cantidad que se transfiere. Por lo tanto, la tarifa aumenta linealmente con la cantidad de mosaico transferida.',
        MOSAIC_DEFINITION_INFORMATION_16: 'Enviar mosaicos en el blockchain NEM requiere una tarifa. La tarifa exacta se calcula según su número total y cuántos se envían durante una transacción. <b>Mosaicos de pequeños negocios</b> reciben una tarifa plana con descuento de 0.05 XEM por mosaico por transferencia. Estos son mosaicos con una cantidad de menos de 10,000 y una divisibilidad de 0.',
        MOSAIC_DEFINITION_INFORMATION_17: 'Si posees el 100% de la emisión, puedes sobrescribir todas las propiedades del mosaico, enviando una transacción de creación nuevamente con el mismo nombre de "namespace:mosaic".',

        // EDIT MOSAIC MODULE
        MOSAIC_SUPPLY_CHANGE_TITLE: 'Cambiar emisión de mosaico',
        MOSAIC_SUPPLY_CHANGE_NAME: 'Transacción de cambio de emisión de mosaico',
        MOSAIC_SUPPLY_CHANGE_MULTISIG_NAME: 'Transacción de cambio de emisión de mosaico multifirma',
        MOSAIC_SUPPLY_CHANGE_SELECT: 'Seleccionar mosaico',
        MOSAIC_SUPPLY_CHANGE_TYPE: 'Cambiar tipo',
        MOSAIC_SUPPLY_CHANGE_TYPE_1: 'Crear',
        MOSAIC_SUPPLY_CHANGE_TYPE_2: 'Eliminar',
        MOSAIC_SUPPLY_CHANGE_SUPPLY: 'Emisión',
        MOSAIC_SUPPLY_CHANGE_CURRENT_SUPPLY: 'Emisión actual',
        MOSAIC_SUPPLY_CHANGE_AMOUNT: 'Cambiar cantidad',
        MOSAIC_SUPPLY_CHANGE_RES_SUPPLY: 'Emisión resultante',

        // NAMESPACE MODULE
        NAMESPACE_PROVISION_TITLE: 'Crear namespace & sub-namespace',
        NAMESPACE_PROVISION_NAME: 'Transacción de namespace de provisión', //Dudas de la traducción
        NAMESPACE_PROVISION_MULTISIG_NAME: 'Transacción de namespace multifirma de provisión', //Dudas de la traducción
        NAMESPACE_PROVISION_PARENT: 'Namespace padre',
        NAMESPACE_PROVISION_NEW_ROOT: 'Nuevo namespace raíz',
        NAMESPACE_PROVISION_NS: 'Namespace',
        NAMESPACE_PROVISION_NS_NAME: 'Nombre del namespace',
        NAMESPACE_PROVISION_RESTRICTIONS: 'Restricciones del Namespace',
        NAMESPACE_PROVISION_INFORMATION_1: 'Los namespace tienen ciertas restricciones con respecto a los caracteres permitidos en las partes, así como la longitud de una parte. Un namespace raíz puede tener una longitud de 16 caracteres, mientras que los namespace secundarios pueden tener una longitud de 64 caracteres. Los caracteres válidos son:',
        NAMESPACE_PROVISION_INFORMATION_2: 'Sin embargo, una parte solo puede comenzar con una letra del alfabeto o un número, así \'alice\' es una parte permitida para un namespace raíz, mientras que \'_ alice\' no lo es. Algunas cadenas están reservadas y, por lo tanto, no están permitidas como partes de namespace. Entre las partes del namespace no permitidas están:',
        NAMESPACE_PROVISION_INFORMATION_3: 'Esta lista no es definitiva y puede ampliarse en el futuro. Por lo tanto, \'user.alice\' o \'alice.user\' no están permitidos en el sistema de espacio de nombres NEM. El espacio de nombre puede tener hasta 3 partes, por lo tanto, \'qm.metals.silver\' es válido, mientras que \'qm.metals.silver.coin\' no lo es.',

        // RENEW NAMESPACE MODULE // nos quedamos hasta aquí 2
        RENEW_NS_TITLE: 'Renovar namespace',
        RENEW_NS_NONE: 'Ningún namespace por renovar',
        RENEW_NS_INFORMATION_TITLE: 'Renovando namespaces',
        RENEW_NS_INFORMATION_TITLE_1: 'Tarifas',
        RENEW_NS_INFORMATION_TITLE_2: 'Raíz de los namespaces',
        RENEW_NS_INFORMATION_TITLE_3: 'Periodo de renovación',
        RENEW_NS_INFORMATION_1: 'El Renovar un namespace cuesta la misma cantidad que registrar un nuevo namespace, 100 XEM.',
        RENEW_NS_INFORMATION_2: 'Solo se deben renovar los namespace raíz. Todos los namespace secundarios se renovarán automáticamente al renovar el namespace raíz.',
        RENEW_NS_INFORMATION_3: 'Los contratos de namespaces son contratos de alquiler en cadena válidos por un año. El contrato puede renovarse un mes antes o después de su fecha de vencimiento.',
        RENEW_NS_INFORMATION_4: 'Si no se renueva a tiempo, se perderán todos los subnamespaces y mosaicos creados dentro del namespace.',
        RENEW_NS_ALERT_PART_1: '<b>¡Cuidado!</b> El namespace:',
        RENEW_NS_ALERT_PART_2: '¡Expirará en menos de un mes! ',
        RENEW_NS_ALERT_PART_3: 'Consulta la <b>página de renovación</b> para más información.',

        // ACCOUNT MODULE
        ACCOUNT_TITLE: 'Cuenta',
        ACCOUNT_ACCOUNT_INFORMATION: 'Información de la cuenta',
        ACCOUNT_IMPORTANCE_SCORE: 'Puntaje de importancia',
        ACCOUNT_VESTED_BALANCE: 'Balance consolidado',
        ACCOUNT_HARVESTING: 'Cosechando',
        ACCOUNT_REMOTE_STATUS: 'Estado remoto',
        ACCOUNT_DELEGATED_PUBLIC: 'Clave pública delegada',
        ACCOUNT_HARVESTED_BLOCKS: 'Bloques cosechados',
        ACCOUNT_START_STOP_HARVESTING: 'Iniciar / Detener cosecha delegada',
        ACCOUNT_HARVESTING_NOTE: 'El nodo utilizado para cosechar en esta cuenta se guarda en el <b>almacenamiento local del navegador</b>. Si se borra el almacenamiento del navegador, la aplicación no sabrá qué nodo estaba usando y, por lo tanto, el <b>estado de cosecha se </b> mostrará <b>inactivo</b>. En este caso, seleccione el nodo que estaba usando y restaurará el estado de cosecha automáticamente. Si el estado no se restaura, verifica si has seleccionado el nodo derecho; de lo contrario, significa que el nodo se ha reiniciado y que tu cuenta ya no se está cosechando.',
        ACCOUNT_HARVESTING_NODE_SELECT: 'Seleccionar un nodo para iniciar la cosecha',
        ACCOUNT_HARVESTING_START: 'Iniciar la cosecha delegada',
        ACCOUNT_HARVESTING_STOP: 'Detener la cosecha delegada',
        ACCOUNT_HARVESTING_NO_SLOTS: 'No hay espacios libres en el nodo seleccionado, elija otro por favor',
        ACCOUNT_HARVESTING_BELOW_THRESHOLD: 'Necesita 10,000 XEM consolidados para iniciar la cosecha delegada',
        ACCOUNT_ACCOUNT_SELECT: 'Selecciona otra cuenta',
        ACCOUNT_ACCOUNT_SELECT_LABEL: 'Elige una cuenta',
        ACCOUNT_WALLET_KEYS: 'Cartera y claves',
        ACCOUNT_ADD_NEW_ACCOUNT: 'Agregar nueva cuenta',
        ACCOUNT_ADD_NEW_ACCOUNT_BTN: 'Agregar nueva cuenta dentro de la Wallet',
        ACCOUNT_PRIVATE_KEY_NOTE: 'Tu clave privada contiene el acceso a tu cuenta. Es una prioridad asegurarse de que está almacenada de forma segura <b><u>sin conexión</u></b>: la contraseña se cifra en un archivo .wlt, se escribe en una hoja de papel y en una imagen o se descarga <b><u>QR de exportación de cartera</u></b>.',
        ACCOUNT_PRIVATE_KEY_SHOW: 'Mostrar clave privada',
        ACCOUNT_EXPORT_MOBILE: 'Exportar al móvil',
        ACCOUNT_INFO_QR_BTN: 'Compartir información de la cuenta QR', //duda de traducción
        ACCOUNT_WALLET_QR_BTN: 'QR de la cartera',
        ACCOUNT_WALLET_QR_BTN_2: 'Exportar QR de la cartera (Android e IOS)',
        ACCOUNT_BACKUP_WALLET: 'Respaldar cartera',
        ACCOUNT_BACKUP_WALLET_NOTE: 'Es <b><u>muy importante</u></b> que tengas copias de seguridad de tus carteras para iniciar sesión o se perderán tus monedas XEM.',
        ACCOUNT_BACKUP_WALLET_DOWNLOAD: 'Descargar cartera',
        ACCOUNT_INFO_QR_TITLE: 'QR de la información de la cuenta',
        ACCOUNT_WALLET_QR_NOTE: 'Este QR solo funciona en la nueva aplicación móvil NEMpay',
        ACCOUNT_WALLET_QR_ANDROID_IOS_TITLE: 'QR de la cartera para aplicaciones Android e IOS',
        ACCOUNT_ADD_NEW_ACCOUNT_WARNING: 'Todas las cuentas están derivadas de tu clave privada principal y contraseña usando BIP32, por lo que tu clave privada primaria y tu contraseña son necesarias para obtener / reconstruir todas tus cuentas secundarias. <br> Es <b> muy recomendable </b> hacer una copia de seguridad de tu cartera después de agregar nuevas cuentas para no repetir la operación nuevamente si se borra el almacenamiento local.',
        ACCOUNT_CUSTOM_NODE: 'Usar un nodo personalizado',
        ACCOUNT_NODE_FROM_LIST: 'Usar nodo de la lista',
        ACCOUNT_DELEGATED_PRIVATE_KEY: 'Clave privada delegada',
        ACCOUNT_NO_PUBLIC_KEY: 'Debes realizar una transacción para obtener una clave pública',
        ACCOUNT_SHOW_ON_TREZOR_BTN: 'Mostrar en TREZOR',
        ACCOUNT_SHOW_ON_LEDGER_BTN: 'Mostrar en LEDGER',

        // PORTAL MODULE
        PORTAL_TITLE: 'Servicios',
        PORTAL_MULTISIG_TITLE: 'Cuentas multifirma y multiusuario',
        PORTAL_MULTISIG_TEXT: 'Las cuentas multifirma son contratos editables en cadena, la forma más poderosa de asegurar fondos, habilitar cuentas conjuntas y son la base de los DAOs.',
        PORTAL_MULTISIG_BTN_1: 'Convertir una cuenta a cuenta multifirma',
        PORTAL_MULTISIG_BTN_2: 'Editar un contrato existente',
        PORTAL_MULTISIG_BTN_3: 'Firmar transacciones multifirma',
        PORTAL_HARVESTING_TITLE: 'Cosecha delegada',
        PORTAL_HARVESTING_TEXT: 'La cosecha delegada es la característica que permite "minar" incluso cuando tu cuenta está cerrada.',
        PORTAL_EXCHANGE_TITLE: 'Casas de intercambios instantáneas',
        PORTAL_EXCHANGE_TEXT: '¡Utiliza los widgets Changelly y ShapeShift para comprar XEM a los mejores precios!',
        PORTAL_EXCHANGE_BTN: 'Comprar XEM',
        PORTAL_NS_TITLE: 'Namespaces y subnamespaces',
        PORTAL_NS_TEXT: 'Los namespaces son nombres de dominio. Cada namespace es único y autentica los mosaicos (activos) emitidos en él o en sus subnamespaces.',
        PORTAL_NS_BTN: 'Crear namespace',
        PORTAL_MOSAIC_TITLE: 'Mosaicos',
        PORTAL_MOSAIC_TEXT: 'Los mosaicos NEM son activos que exponen propiedades adicionales y otras características. Para poder crear un mosaico, una cuenta debe rentar al menos un namespace raíz.',
        PORTAL_MOSAIC_BTN_1: 'Crear mosaico',
        PORTAL_MOSAIC_BTN_2: 'Editar mosaico',
        PORTAL_APOSTILLE_TITLE: 'Apostilla',
        PORTAL_APOSTILLE_TEXT: 'Utilice el servicio de Apostilla NEM para crear notarizaciones basadas en blockchain para fecharlo, seguir y auditar la autenticidad del archivo.',
        PORTAL_APOSTILLE_BTN_1: 'Crear',
        PORTAL_APOSTILLE_BTN_2: 'Auditar',
        PORTAL_ADDRESS_BOOK_TEXT: 'Asignar etiquetas a las direcciones para realizar un seguimiento de sus contactos fácilmente.',
        PORTAL_ADDRESS_BOOK_BTN: 'Administrar libreta de direcciones',
        PORTAL_INVOICE_TEXT: 'Crear una factura para compartir a través del código QR',

        // ADDRESS BOOK MODULE
        ADDRESS_BOOK_TITLE: 'Libreta de direcciones',
        ADDRESS_BOOK_NAVIGATION: 'Navegación',
        ADDRESS_BOOK_NEW: 'Contacto nuevo',
        ADDRESS_BOOK_EDIT: 'Editar contacto',
        ADDRESS_BOOK_REMOVE: 'Eliminar contacto',
        ADDRESS_BOOK_NEW_BTN: 'Agregar',
        ADDRESS_BOOK_EDIT_BTN: 'Guardar',
        ADDRESS_BOOK_REMOVE_BTN: 'Eliminar',
        ADDRESS_BOOK_EXPORT_BTN: 'Exportar libreta de direcciones',
        ADDRESS_BOOK_IMPORT_BTN: 'Importar libreta de direcciones',
        ADDRESS_BOOK_CONTACT_LABEL: 'Etiqueta',
        ADDRESS_BOOK_ACCOUNT_ADDRESS: 'Dirección de cuenta',
        ADDRESS_BOOK_ACTIONS: 'Acciones',
        ADDRESS_BOOK_CONFIRM_DELETE: 'Confirmar el eliminado de la entrada de la libreta de direcciones',

        // EXPLORER MODULE NAV
        EXPLORER_NAV_HOME: 'Inicio',
        EXPLORER_NAV_NSM: 'Namespaces y Mosaicos',
        EXPLORER_NAV_APOSTILLES: 'Apostillas',

        // EXPLORER HOME MODULE
        EXPLORER_HOME_TITLE: 'Explorador - Inicio',
        EXPLORER_HOME_NS: 'Tus Namespaces',
        EXPLORER_HOME_MOSAICS: 'Tus Mosaicos',
        EXPLORER_HOME_NS_MULTISIG: 'Namespaces en propiedad multifirma',
        EXPLORER_HOME_MOSAICS_LEVY: 'Impuesto del mosaico',

        // EXPLORER NAMESPACES AND MOSAICS
        EXPLORER_NS_MOS_TITLE: 'Explorador - Namespaces y  Mosaicos',
        EXPLORER_NS_MOS_SELECT_MOS: 'Detalles del Mosaico seleccionado',
        EXPLORER_NS_MOS_SEARCH: 'Buscar namespace',

        // EXPLORER APOSTILLES MODULE
        EXPLORER_APOSTILLES_TITLE: 'Explorador - Apostillas',
        EXPLORER_APOSTILLES_YOURS: 'Tus apostillas',
        EXPLORER_APOSTILLES_PUBLIC: 'Public sink', //No está traducido, por desconocimiento
        EXPLORER_APOSTILLES_NO_NTY: 'No se ha cargado el archivo nty, por favor haz clic aquí para importar uno.',

        // ACCOUNT EXPLORER
        ACCOUNTS_EXPLORER_TITLE: 'Explorador - Cuentas',
        ACCOUNTS_EXPLORER_SEARCH: 'Buscar',

        // APOSTILLE HISTORY MODULE
        APOSTILLE_HISTORY_TITLE: 'Historial de la apostilla',
        APOSTILLE_HISTORY_BTN_TRANSFER: 'Transferir / Dividir propiedad',
        APOSTILLE_HISTORY_BACKUP: 'Copia de seguridad de la información notarial',
        APOSTILLE_HISTORY_PURGE: 'Limpiar la información notarial',

        // CREATE APOSTILLE MODULE
        APOSTILLE_CREATE_TITLE: 'Crear apostillas',
        APOSTILLE_CREATE_HELP: '¿Deseas saber más sobre la Apostilla?',
        APOSTILLE_TRANSACTION_NAME: 'Transacción de la Apostilla',
        APOSTILLE_TRANSACTION_MULTISIG_NAME: 'Transacción de la apostilla multifirma',
        APOSTILLE_KEEP_PRIVATE: ' Privada, transferible y actualizable',
        APOSTILLE_USE_DEDICATED: 'Usar cuenta dedicada',
        APOSTILLE_FILES_TO_NOTARIZE: 'Documentos para notarizar',
        APOSTILLE_REJECTED: 'Rechazado',
        APOSTILLE_FILE_HASH: 'Hash del archivo',
        APOSTILLE_PRIVATE: 'Privado',
        APOSTILLE_FILENAME: 'Nombre del archivo',
        APOSTILLE_NAME_TOO_LONG: 'El nombre del archivo es demasiado largo, el máximo permitido es 32 caracteres.',
        APOSTILLE_MAX_NUMBER: 'Máximo de 25 apostillas por lote',
        APOSTILLE_INFORMATION_TITLE: 'Creando una Apostilla',
        APOSTILLE_INFORMATION_1: 'Cada archivo cargado se procesa automáticamente con las opciones establecidas en el panel izquierdo. Puedes agregar nuevos archivos, cambiar parámetros y luego agregar más archivos con diferentes opciones. También funcionará si cambias a la pestaña multifirma y agregas más archivos',
        APOSTILLE_INFORMATION_2: '"<b>La opción privada, transferible y actualizable</b>" significa que los valores hash de tus archivos se firman con tu clave privada y se envían a una cuenta determinista jerárquica (HD por sus siglas en inglés) dedicada. De esta forma, no es posible para nadie, más que para ti saber qué contenido ha sido fechado a menos que compartas el contenido.',
        APOSTILLE_INFORMATION_3: 'La cuenta HD dedicada puede someterse a un contrato multifirma para que pueda ser transferida a otros a través de 1 a 1 o cualquier combinación de contrato multifirma m-a-n. También puedes recibir información adicional a través de mensajes con actualizaciones y aumentos del documento original o del producto que representa.',
        APOSTILLE_INFORMATION_4: 'Cuando dos o más partes desean que ambas aprueben un fechado en una blockchain, por ejemplo, contratos vinculantes, la cuenta que realiza la notarización de la blockchain se puede incluir en un contrato multifirma m-a-n.',
        APOSTILLE_INFORMATION_5: 'Para las cuentas en un contrato multifirma que han seleccionado "<b>Privada, transferible y actualizable</b>", la clave privada del cofirmante inicial se utiliza para firmar el hash y crear una cuenta de HD dedicada, no la cuenta que fue firmada por múltiples firmas.',
        APOSTILLE_INFORMATION_6: 'La cuenta HD es una cuenta dedicada generada de un hash del nombre del archivo que luego se firma con tu clave privada. El hash resultante de este proceso se usa para crear una segunda clave privada. Esta es la clave privada del archivo con el fechado; el primero en la tecnología blockchain que solo se encuentra en la Apostilla.',
        APOSTILLE_INFORMATION_7: 'La cuenta HD dedicada le permite almacenar el hash firmado del archivo original y sus actualizaciones en una cuenta dedicada. Si <b>"Público"</b> está seleccionado, la transacción se dirige a la dirección pública del receptor (predeterminado).', //aquíe va la palabra sink, validar traducción
        APOSTILLE_INFORMATION_8: 'Después de enviar las transacciones, se inicia la descarga de un archivo. Contiene tus archivos firmados, tu certificado de Apostilla para ese archivo y el archivo .nty nuevo o actualizado para realizar un seguimiento de cada archivo que hayas fechado en la cadena NEM.',
        APOSTILLE_NO_NTY: 'No se ha cargado ningún archivo nty, haz clic aquí para importar uno o se creará uno nuevo automáticamente.',
        APOSTILLE_IMPORT_FILES: 'Importar archivos',
        APOSTILLE_CREATE_TEXT: 'Crear documento de texto',
        APOSTILLE_ENTER_TEXT: 'Ingresa el texto para notarizar...',
        APOSTILLE_DOCUMENT_TITLE: 'Título del documento',
        APOSTILLE_DROPBOX_MESSAGE: 'Por favor, ingresa tu contraseña y la (s) etiqueta (s) deseada (s) antes de seleccionar los archivos',
        APOSTILLE_DROPBOX_MESSAGE_2: 'Por favor ingresa su contraseña antes de seleccionar archivos',

        // AUDIT APOSTILLE MODULE
        APOSTILLE_AUDIT_TITLE: 'Auditar apostillas',
        APOSTILLE_AUDIT_CHOOSE_NODE: 'Elige un nodo',
        APOSTILLE_AUDIT_CHOOSE_NODE_NOTE: 'Solo unos pocos nodos pueden buscar en todo el historial de transacciones (la opción está deshabilitada por defecto en NIS).',
        APOSTILLE_AUDIT_WRONG_FORMAT: '¡Este archivo no está en formato apostilla!',
        APOSTILLE_AUDIT_FAIL_NO_PUBLIC_KEY: 'Verificación fallida, ¡el propietario no tiene clave pública!',
        APOSTILLE_AUDIT_SUCCESS: '¡Archivo auditado con éxito!',
        APOSTILLE_AUDIT_FAIL: '¡Verificación fallida!',
        APOSTILLE_AUDIT_WAITING: '¡La transferencia de apostillas podría estar esperando la confirmación!',
        APOSTILLE_AUDIT_NOT_FOUND: 'Transacción no encontrada, asegúrate de que no está esperando confirmaciones, de lo contrario la apostilla no es válida',
        APOSTILLE_AUDIT_ERROR_UNCONFIRMED: 'Ha ocurrido un error al obtener datos no confirmados, pero no se encontró la transacción',
        APOSTILLE_AUDIT_ERROR_SIGNER: 'Ha ocurrido un error al obtener datos del firmante',
        APOSTILLE_AUDIT_ERROR_SIGNATURE: 'La verificación falló, ha ocurrido un error en la verificación de la firma.',
        APOSTILLE_AUDIT_INFORMATION_1: 'Los archivos que se pueden auditar deben estar en <b>formato de apostilla</b>',
        APOSTILLE_AUDIT_INFORMATION_2: 'Puedes reconocerlos por el nombre del archivo:',
        //APOSTILLE_AUDIT_NON_SIGNED: 'Ejemplo no firmado:',
        //APOSTILLE_AUDIT_SIGNED: 'Ejemplo firmado:',
        APOSTILLE_AUDIT_FILES: 'Archivos de auditoría',
        APOSTILLE_AUDIT_FORMAT_EXAMPLE: 'Ejemplo de formato de Apostilla',
        APOSTILLE_AUDIT_REMOVE_RECORDS: 'Eliminar registros localmente',

        // APOSTILLE MESSAGE MODULE
        APOSTILLE_MESSAGE_TITLE: 'Enviar mensaje a cuenta notarial',
        APOSTILLE_MESSAGE_NS_BRAND: 'Usar mi namespace para marcar el mensaje',
        APOSTILLE_MESSAGE_ADD_MOSAIC: 'Agregar mosaico',
        APOSTILLE_NTY_ACCOUNT: 'Cuenta notarial',
        APOSTILLE_REQUEST_MESSAGE: 'Mensaje de solicitud', //validar traducción por el contexto
        APOSTILLE_CREATE_MESSAGE_REQUEST: 'Crear una solicitud de mensaje',//validar traducción por el contexto

        // TRANSFER APOSTILLE OWNLERSHIP MODULE
        APOSTILLE_TRANSFER_TITLE: 'Transferir o dividir la propiedad de la apostilla',

        // UPADTE APOSTILLE MODULE
        APOSTILLE_UPDATE_TITLE: 'Actualizar apostilla',

        // ERROR ALERTS
        ALERT_MISSING_FORM_DATA: '¡Por favor completa el formulario!',
        ALERT_ERROR_WALLET_DOWNLOAD: '¡No puedes descargar la cartera porque no existe!',
        ALERT_PASSWORDS_NOT_MATCHING: '¡Las contraseñas proporcionadas o frases de contraseña no coinciden!',
        ALERT_INVALID_KEY_FOR_ADDR: '¡La clave privada no coincide con la dirección proporcionada!',
        ALERT_NO_WALLET_LOADED: 'No puedes acceder al escritorio sin una cartera',
        ALERT_WALLET_NAME_EXISTS: '¡Ya hay cargada una cartera con el mismo nombre!',
        ALERT_INVALID_WALLET_FILE: '¡Estás intentando cargar un archivo que no es una cartera!',
        //ALERT_NO_NODE_SET: '¡Por favor selecciona un nodo!',
        ALERT_INVALID_CUSTOM_NODE: '¡Tu nodo personalizado no es válido!',
        ALERT_INVALID_WEBSOCKET_PORT: '¡El puerto websocket del nodo personalizado no es válido!',
        ALERT_MIJIN_DISABLED: '¡La red de Mijin está deshabilitada, por favor seleccione otra red!',
        ALERT_GET_NS_BY_ID_ERROR: 'Error al obtener información del namespace, razón:',
        ALERT_GET_ACCOUNT_DATA_ERROR: 'Error al obtener los datos de la cuenta, razón:',
        ALERT_ERROR_OCCURRED: '¡Ocurrió un error!',
        ALERT_INVALID_ADDR_FOR_NETWORK: ' no corresponde a la red ',
        ALERT_INVALID_PASSWORD: '¡La contraseña proporcionada no es válida!',
        ALERT_COSIG_ALREADY_IN_LIST: '¡El cofirmante ya está presente en la lista de modificaciones!',
        ALERT_COSIGNATORY_HAS_NO_PUBLIC: 'El cofirmante debe tener al menos una transacción para obtener una clave pública.',
        ALERT_MULTISIG_HAS_NO_PUBLIC: '¡La cuenta multifirma debe tener al menos una transacción para obtener una clave pública!',
        ALERT_COSIG_CANNOT_BE_MULTISIG: 'La cuenta seleccionada para convertir es cofirmante de otra cuenta multifirma. Por lo tanto, no se puede convertir',
        ALERT_NO_NS_OWNED: 'La cuenta no posee ningún namespace, crea una o cambia de cuenta',
        ALERT_UNLOCKED_INFO_ERROR: 'Ha ocurrido un error al obtener la información de desbloqueo',
        ALERT_LOCK_ERROR: 'Error al bloquear la cuenta, razón:',
        ALERT_UNLOCK_ERROR: 'Error al desbloquear la cuenta, razón:',
        ALERT_SUPERNODES_ERROR: '¡Ha ocurrido un error al obtener los datos de los supernodos!',
        ALERT_INVALID_NTY_FILE: '¡El archivo proporcionado no es un archivo nty!',
        ALERT_CREATE_WALLET_FAILED: 'Error al crear la cartera, razón:',
        ALERT_REQUEST_FAILED: 'Error en la solicitud, motivo: ',
        ALERT_DERIVATION_FROM_SEED_FAILED: 'Error al derivar la cuenta desde la semilla, razón:',
        ALERT_BIP32_GENERATION_FAILED: 'Error al generar datos 32 bip, razón: ',
        ALERT_NO_WALLET_DATA: '¡Error, información de la cartera vacía!',
        ALERT_CANNOT_LOGIN_WITHOU_WALLET: '¡Error, no se puede iniciar sesión sin una cartera!',
        ALERT_NO_WALLET_TO_SET: '¡Error, no puedes establecer nada como la cartera actual!',
        ALERT_INVALID_WALLET_INDEX: '¡Error, el índice de cuenta seleccionado está fuera del límite!',
        ALERT_NO_CURRENT_WALLET: '¡Error, no se puede establecer una cuenta de cartera si no hay una cartera seleccionada.!',
        ALERT_ALREADY_MULTISIG: '¡La cuenta seleccionada ya es una cuenta multifirma!',
        ALERT_INVALID_MODIFICATION_ARRAY: 'Una cuenta multifirma no puede ser cofirmante de sí misma, por favor revisa tu lista de modificaciones.',
        ALERT_GET_MARKET_INFO_ERROR: '¡Ha ocurrido un error al intentar obtener información del mercado!',
        ALERT_MULTISIG_CANNOT_BE_COSIG: '¡Una cuenta multifirma no se puede establecer como cofirmante!',
        ALERT_PURGE_CANCELLED: '¡Limpieza cancelada!',
        ALERT_MAINNET_DISABLED: '¡La red Mainnet está deshabilitada, por favor selecciona otra red!',
        ALERT_EMPTY_DECODED_MSG: '¡Ha ocurrido un error, no se ha decodificado el mensaje!',
        ALERT_INVALID_NS_NAME: '¡El nombre del namespace no es válido!',
        ALERT_INVALID_MOSAIC_NAME: '¡El nombre del mosaico no es válido!',
        ALERT_MOSAIC_DESCRIPTION: 'La descripción del mosaico es demasiado larga.',
        ALERT_GET_INCOMING_TXES_ERROR: 'Ha ocurrido un error al intentar obtener transacciones entrantes, razón: ',
        ALERT_GET_MOSAICS_DEFINITIONS_ERROR: 'Ha ocurrido un error al obtener definiciones de mosaicos, razón: ',
        ALERT_GET_SUB_NS_ERROR: 'Error al buscar definiciones de namespaces, razón:',
        ALERT_GET_MOSAICS_ERROR: 'Error al buscar mosaicos, razón:',
        ALERT_GET_TRANSACTIONS_ERROR: 'Error al obtener transacciones, razón:',
        ALERT_INVALID_ADDRESS_BOOK_FILE: '¡Este archivo no está en formato .adb!',
        ALERT_INVALID_ADDRESS: '¡La dirección proporcionada no es válida!',
        ALERT_INVALID_AMOUNT: '¡La cantidad no es válida!',
        ALERT_INVALID_PRIVATE_KEY: '¡La clave privada proporcionada no es válida!',
        ALERT_FILE_SIZE_ERROR: ' es demasiado grande, el tamaño máximo permitido es de 100 MB',
        ALERT_MESSAGE_DECODE_KEY_ERROR: 'El proceso de desencriptación del mensaje ha fallado porque una cuenta no tiene una clave pública visible en la red',
        ALERT_FETCH_TIME_SYNC_ERROR: '¡Ha ocurrido un error al obtener el tiempo de red!',
        ALERT_MULTISIG_MIN_SIGNATURE: 'La cuenta multifirma necesita al menos una firma',
        ALERT_BTC_MARKET_ERROR: 'Ha ocurrido un error al intentar obtener el precio de Bitcoin',
        ALERT_COSIG_REMOVAL_LIMIT: 'Solo puedes eliminar un cofirmante a la vez',
        ALERT_MULTISIG_MIN_SIGNATURE_INVALID: 'Número no válido de firmas mínimas',
        ALERT_INSUFFICIENT_BALANCE: 'Balance insuficiente para realizar la operación',
        ALERT_VOTING_ERROR: 'Voto no válido',
        ALERT_BRAIN_PASSWORD_TOO_SHORT: '¡La frase clave de la cartera mnemónica debe tener al menos 40 caracteres!',
        ALERT_NODE_SEEMS_OFFLINE: 'El nodo parece sin conexión, selecciona otro',
        ALERT_WEAK_PASSPHRASE: 'El puntaje de seguridad de la frase de contraseña debe ser de al menos 3',
        ALERT_BRAIN_WALLET_UPGRADE: '¡Tu cartera mnemónica parece débil! Todas las carteras mnemónicas deben usar una frase de contraseña con al menos 40 caracteres. <br>Recomendamos crear una nueva cartera simple desde la página de registro y mover sus fondos en ella.<br> Más información <a href = "https://forum.nem.io/t/2791 "target =" _ blank "><u>aquí</u> </a>.',
        ALERT_RECIPIENT_PUBLIC_KEY: 'El destinatario no tiene una clave pública visible para la red',
        ALERT_ENCRYPT_MULTISIG: 'No se pueden enviar mensajes encriptados a través de cuentas multifirma',
        ALERT_EXCHANGE_NEEDS_MESSAGE: 'El destinatario es una cartera de una casa de intercambio y, por lo tanto, requiere un mensaje para que tu cuenta se acredite correctamente. Lee atentamente las instrucciones de depósito.',
        ALERT_ACCOUNT_ALREADY_IN_ADDRESS_BOOK: '¡El contacto ya existe en la libreta de direcciones!',
        ALERT_MAX_MOSAIC_SUPPLY: 'La emisión máximo de mosaicos es de 9\'000\'000\'000',
        ALERT_GET_MOSAIC_SUPPLY_ERROR: 'Ha ocurrido un error al obtener la emisión de mosaico, razón: ',
        ALERT_ENCRYPTED_MSG_OFFLINE: 'La mensajería encriptada no está habilitada en transacciones sin conexión',

        // SUCCESS ALERTS
        ALERT_CREATE_WALLET_SUCCESS: '¡Cartera creada y cargada satisfactoriamente!',
        ALERT_SUCCESS_PURGE: '¡El almacenamiento local ha sido limpiado!',
        ALERT_SUCCESS_LOGOUT: '¡Desconectado satisfactoriamente!',
        ALERT_LOAD_WALLET_SUCCESS: '¡Cartera cargada satisfactoriamente!',
        ALERT_TRANSACTION_SUCCESS: '¡Transacción enviada con éxito!',
        ALERT_GENERATE_ACCOUNT_SUCCESS: 'Cuenta creada con éxito. ¡No olvides descargar su cartera actualizada!',
        ALERT_UPGRADE_SUCCESS: '¡Cartera actualizada con éxito!',
        ALERT_SIGNATURE_SUCCESS: '¡Transacción firmada con éxito!',
        ALERT_NTY_FILE_SUCCESS: '¡Archivo nty cargado con éxito!',
        ALERT_INCOMING_TX_FROM: ' Transacción entrante de ',
        ALERT_ADDRESS_BOOK_FILE_SUCCESS: '¡Libreta de direcciones importada con éxito!',
        ALERT_VOTING_SUCCESS: ' Voto enviado con éxito ',
        ALERT_POLL_CREATION_SUCCESS: 'Encuesta creada con éxito',
        ALERT_COPY_SIGNED_TX_SUCCESS: '¡Transacción firmada copiada!',

        // CONVERT ACCOUNT TO MULTISIG
        AGGREGATE_MODIFICATION_TITLE: 'Convertir una cuenta a multifirma',
        AGGREGATE_MODIFICATION_NAME: 'Agregar transacción de modificación',
        AGGREGATE_MODIFICATION_MULTISIG_NAME: 'Agregar transacción de modificación de múltiples firmas',
        AGGREGATE_ACCOUNT_SELECT_TITLE: 'Cuenta a convertir',
        AGGREGATE_ACCOUNT_SELECT: 'Seleccione una cuenta a convertir',
        AGGREGATE_CUSTOM_ACCOUNT: 'Importar clave',
        AGGREGATE_ACCOUNT_TO_CONVERT_PRIVATE_TITLE: 'Clave privada de dirección',
        AGGREGATE_ACCOUNT_TO_CONVERT: 'Cuenta para convertir dirección',
        AGGREGATE_ACCOUNT_TO_CONVERT_PRIVATE: 'Cuenta para convertir clave privada',
        AGGREGATE_ADD_PLACEHOLDER: 'Cuenta cofirmante o @alias a agregar',
        AGGREGATE_ADD_BTN_TITLE: 'Agregar cofirmante',
        AGGREGATE_MIN_SIGNATURES: 'Se requiere un mínimo de firmas',
        AGGREGATE_MIN_SIGNATURES_PLACEHOLDER: 'Firmas mínimas necesarias para validar una transacción',
        AGGREGATE_MODIFICATION_LIST: 'Lista de modificaciones',
        AGGREGATE_COSIG_LIST: 'Lista de direcciones de cofirmantes',
        AGGREGATE_MODIFICATION_EDIT_TITLE: 'Editar un contrato multifirma',
        AGGREGATE_MODIFICATION_EDIT_SELECT_TITLE: 'Cuenta a editar',
        AGGREGATE_MODIFICATION_EDIT_SELECT: 'Selecciona una cuenta a editar',
        AGGREGATE_ADD_REMOVE_TITLE: 'Agregar/Quitar cofirmante',
        AGGREGATE_ADD_REMOVE_PLACEHOLDER: ' Cuenta cofirmante o @alias a agregar ',
        AGGREGATE_MODIFICATION_RELATIVE_CHANGE: 'Cambiar firmas necesarias',
        AGGREGATE_MODIFICATION_RELATIVE_CHANGE_PLACEHOLDER: 'Número de firmas para agregar (n) o eliminar (-n) - Eliminaciones automáticas',
        AGGREGATE_SELECTED_ACCOUNT_INFO: 'Información de cuenta seleccionada',
        AGGREGATE_MIN_SIGNATURES: 'Firmas mínimas',
        AGGREGATE_SELECT_WALLET_ACCOUNT: 'Usar cuenta de cartera',
        AGGREGATE_ADD_COSIG: 'Agregar cofirmante',
        AGGREGATE_REMOVE_COSIG: 'Eliminar cofirmante',

        // SIGN MULTISIGNATURE TRANSACTIONS
        SIGN_MULTISIG_TRANSACTIONS_TITLE: 'Firmar transacciones multifirma',

        // LOGIN MODULE
        LOGIN_MEMBER_TITLE: '¿Ya eres NEMber?',
        LOGIN_UPGRADE_TITLE: 'La cartera necesita actualizarse',
        LOGIN_UPGRADE_MESSAGE: 'La cartera seleccionada necesita una actualización. Esta acción generará una clave pública secundaria y la agregará a tu cuenta principal.',
        LOGIN_UPGRADE_BUTTON: 'Actualizar cartera',
        LOGIN_IMPORT_BUTTON: 'Importar cartera',
        LOGIN_SELECT_WALLET_YOURS: 'Seleccionar cartera',
        LOGIN_SELECT_WALLET: 'Seleccionar una cartera del almacenamiento local',
        LOGIN_LOGIN_BUTTON: 'Ingresar',
        LOGIN_NOTE: '¿No cuentas con una cartera? Importa una o <a href="#!/signup">Regístrate</a>.',

        // SIGNUP MODULE
        SIGNUP_TITLE: '¿Nuevo en NEM?',
        SIGNUP_SELECT_WALLET_TYPE: 'Selecciona un tipo de cartera a crear',
        SIGNUP_SELECT_WALLET_TYPE_STAND_BY: ' Coloca el cursor en un tipo de cartera para mostrar información.',
        SIGNUP_CREATE_WALLET_TITLE: 'Cartera simple',
        SIGNUP_CREATE_WALLET_INFO: 'Las carteras simples contienen una clave privada primaria que se genera aleatoriamente.',
        SIGNUP_PRIVATE_KEY_WALLET_TITLE: 'Cartera de contraseña',
        SIGNUP_PRIVATE_KEY_WALLET_INFO: 'Las carteras de contraseña requieren una clave privada para ser generadas.',
        SIGNUP_BRAIN_WALLET_TITLE: 'Cartera mnemónica',
        SIGNUP_BRAIN_WALLET_INFO: 'Las carteras mnemónicas contienen una clave privada primaria que se genera a partir de una frase de contraseña. Esto permite recuperar la cartera solo con la frase de contraseña.',
        SIGNUP_CREATE_WALLET_BUTTON: 'Crear cartera simple',
        SIGNUP_PRIVATE_KEY_WALLET_BUTTON: 'Crear cartera de clave privada',
        SIGNUP_BRAIN_WALLET_BUTTON: 'Crear cartera mnemónica',
        SIGNUP_CREATE_WALLET_WARNING: 'Lee sobre <a href="https://www.w3.org/TR/2014/WD-WebCryptoAPI-20140325/#RandomSource-interface" rel="nofollow" target="_blank"><b>las advertencias</b></a> que la generación de claves del lado del cliente suponen; no somos responsables de ninguna pérdida que pueda deberse a la entropía de la generación de claves. Incluso si no es probable que suceda, se recomienda utilizar una clave privada generada a partir de una fuerte fuente de entropía.',
        SIGNUP_NETWORK_SELECT: 'Seleccionar una red', //
        SIGNUP_NETWORK_MAINNET: 'Mainnet es la <b><u>red de producción</u></b> de NEM. Las direcciones comienzan con \'N\'.',
        SIGNUP_NETWORK_TESTNET: 'Testnet es la <b><u>red de pruebas</u></b> de NEM. Las direcciones comienzan con \'T\'.',
        SIGNUP_NETWORK_MIJIN: 'Mijin es la versión privada de NEM. Las direcciones comienzan con \'M\'.',
        SIGNUP_BRAIN_WALLET_WARNING: 'Lee sobre <a href="https://en.bitcoin.it/wiki/Brainwallet" rel="nofollow" target="_blank"> <b>las advertencias</b></a> que suponen las carteras mnemónicas. Las carteras mnemónicas usan solo una frase de contraseña hasheada varias veces. Por lo tanto, es crucial seleccionar una frase segura con al menos 40 caracteres. <a href="https://xkcd.com/936/" rel="nofollow" target="_blank"><b>XKCD # 936</b></a>',
        SIGNUP_PRIVATE_KEY_WALLET_WARNING: 'Las carteras de clave privada usan SOLO una contraseña para encriptar la clave privada importada. Por lo tanto, es crucial seleccionar una contraseña SEGURA.',
        SIGNUP_CREATE_START_WARNING: '¡Por favor, sigue cada paso cuidadosamente!',
        SIGNUP_CREATE_START_CONNECTION_WARNING: 'Se recomienda desconectarse de Internet mientras creas tu cartera y realizas una copia de seguridad de tus datos.',
        SIGNUP_CREATE_READY_BTN: 'Listo',
        SIGNUP_CREATE_ENTER_NAME: 'Introduce un nombre para la cartera',
        SIGNUP_CREATE_ENTER_PASSWORD: 'Introduce una contraseña',
        SIGNUP_CREATE_ENTER_PASSPHRASE: 'Introduce una frase de contraseña',
        SIGNUP_CREATE_CONFIRM_PASSWORD: 'Confirma la contraseña anterior',
        SIGNUP_CREATE_CONFIRM_PASSPHRASE: 'Confirma la frase de contraseña anterior',
        SIGNUP_CREATE_ENTER_PRIVATE_KEY: 'Introduce una clave privada',
        SIGNUP_CREATE_ADDRESS_FROM_PK: 'La dirección corresponde a la clave privada especificada anteriormente',
        SIGNUP_CREATE_WALLET_ADD_ENTROPY_INFO: 'Ahora vamos a generar tu clave privada primaria. <b>Por favor haz clic en iniciar y mueve el cursor para agregar más entropía.</b>',
        SIGNUP_COMMON_WALLET_WARNING_TITLE: 'Protocolo de seguridad de la cuenta',
        SIGNUP_COMMON_WALLET_WARNING_1: '¡Las carteras se guardan <b><u>temporalmente</u></b> en el almacenamiento local del navegador! Los navegadores se pueden configurar (por ejemplo, mediante add-ons) para borrar el almacenamiento local. Esto provocará la pérdida de datos y no se podrá obtener de manera sencilla. En tal caso, tus carteras desaparecerán, por lo que es muy importante que te asegures de tener toda la información necesaria para restaurar tus cuentas.',
        SIGNUP_COMMON_WALLET_WARNING_2: 'Por favor haz clic en el botón de abajo para descargar tu cartera. Este es el archivo <b><i>.wlt</i></b> usado como copia de seguridad, y podrá ser usado para importarlo si el almacenamiento local de su navegador es eliminado.',
        SIGNUP_COMMON_WALLET_WARNING_3: 'Si no tienes una copia de seguridad del archivo <b><i>.wlt</i></b>, haz clic en el botón de abajo para mostrar los datos de la cartera sin tratar y crear el archivo manualmente:',
        SIGNUP_COMMON_WALLET_WARNING_4: 'Incluso si tienes un archivo de tu cartera es <b><u>obligatorio</u></b> hacer copia de seguridad de tus claves privadas de las cuentas, haz clic en el botón de abajo para mostrarlas:',
        SIGNUP_COMMON_WALLET_WARNING_5: 'Es tu responsabilidad asegurarte de tener una copia de seguridad de tu clave privada antes de enviar fondos a tu cuenta.',
        SIGNUP_COMMON_WALLET_WARNING_6: 'Cada cartera tiene una <b><u>clave privada primaria</u></b> (la tuya se muestra arriba) que es usada para crear cuentas secundarias deterministas (BIP32). Esta característica requiere usar la <b><u>misma contraseña </u></b> o se generarán cuentas secundarias diferentes para la misma clave privada primaria. Cuando hagas copia de seguridad de tus datos no olvides <b><u>anotar tu contraseña </u></b>.',
        SIGNUP_COMMON_WALLET_WARNING_BTN_1: 'Mostrar archivo de cartera sin tratar',
        SIGNUP_COMMON_WALLET_WARNING_BTN_1_INFO: 'Para hacer un archivo de cartera, crea un archivo de texto vacío, escribe la clave pivada en ellas (en base64). Guarda el archivo como <b><i>nombredetuCartera.wlt</i></b>.',
        SIGNUP_COMMON_WALLET_WARNING_BTN_2: 'Mostrar clave privada',
        SIGNUP_COMMON_WALLET_WARNING_BTN_2_INFO: 'Para crear una copia de seguridad de una clave privada, imprímala o guárdela en un archivo de texto. Es altamente recomendado almacenar la clave privada en un lugar seguro y sin conexión.',
        SIGNUP_COMMON_WALLET_WARNING_FOOTER: 'Al hacer clic a continuación, aceptas que tienes una copia de seguridad de tu clave privada, contraseña y tu archivo de cartera.',
        SIGNUP_COMMON_WALLET_WARNING_CONFIRM_1: 'Tengo mi archivo de cartera',
        SIGNUP_COMMON_WALLET_WARNING_CONFIRM_2: 'Tengo mi clave privada y contraseña',
        SIGNUP_COMMON_WALLET_WARNING_CONFIRM_3: 'Estoy de acuerdo',
        SIGNUP_COMMON_WALLET_WARNING_UNDERSTOOD: 'Entendido',
        SIGNUP_COMMON_WALLET_WARNING_DOWNLOAD: 'Descargar cartera',
        SIGNUP_ESTIMATED_PASSPHRASE_STRENGTH: 'Fuerza de tu frase de contraseña',
        SIGNUP_ESTIMATED_GUESS_TIMES: 'Tiempo previsto',

        // FAQ MODULE
        FAQ_TITLE: 'Preguntas Frecuentes',
        FAQ_QUESTION_1: '¿Cómo funciona la Nano Wallet?',
        FAQ_ANSWER_1: 'Nano Wallet está construida con AngularJS and ES6. Es una aplicación completa del lado del cliente que nunca envía ningún dato sensible de forma insegura a través de la red; Todo sucede en tu navegador, desde la creación de claves privadas hasta la firma de transacciones.',
        FAQ_QUESTION_2: '¿Es de uso libre/gratuito? ',
        FAQ_ANSWER_2: 'Absolutamente todas las operaciones son del lado del cliente, solo tu tienes control sobre tus monedas, sin terceros, y sin tarifas adicionales.',
        FAQ_QUESTION_3: '¿Por qué ya tengo un mosaico?',
        FAQ_ANSWER_3: 'Porque XEM es la moneda por defecto del blockchain NEM, cada usuario ya lo tiene registrado en su cartera, incluso si tu saldo es 0. Tu namespace es NEM y el nombre del mosaico es XEM',
        FAQ_QUESTION_4: '¿Hoja de ruta?',
        FAQ_ANSWER_4: 'La hoja de ruta actual incluye integración de todas las características de Nano Wallet v1.x.x y la finalización de proyectos financiados por la comunidad para trabajar a través de esta cartera.',
        FAQ_QUESTION_5: '¿Puedo obtener XEM gratis?',
        FAQ_ANSWER_5: 'El NEM faucet está actualmente fuera de servicio, pero puedes consultar el foro NEM para conocer las recompensas disponibles.',
        FAQ_QUESTION_6: '¿Dónde encontrar más información de NEM?',
        FAQ_ANSWER_6_FORUM: 'Foro Oficial',
        FAQ_ANSWER_6_WEBSITE: 'Sitio web oficial',
        FAQ_ANSWER_6_BTT: 'Hilo ficial de BitcoinTalk',
        FAQ_QUESTION_7: 'No se muestra nada en el escritorio',
        FAQ_ANSWER_7: 'Por favor asegúrate de verificar el círculo del nodo en la barra de navegación superior. <br> El círculo rojo significa que la conexión al nodo falló. <br> Haz clic en "Nodo" y selecciona otro de la lista desplegable o usa un nodo personalizado. <br> <a href="https://supernodes.nem.io" target="_blank">Supernodes.nem.io</a> tiene una lista de nodos que puedes usar.</a>',
        FAQ_QUESTION_8: 'Los cofirmantes no pueden ver la transacción para firmar',
        FAQ_ANSWER_8: 'En este caso ve a "Servicios", busca "Cuentas multifirma y multiusuario " y haz clic en "Firmar transacciones multifirma ".',
        FAQ_QUESTION_9: '¿Cuáles son las mejores prácticas de seguridad?',
        FAQ_ANSWER_9: 'Se recomienda encarecidamente almacenar siempre las claves privadas en papel.<br> Puedes imprimirlas y archivarlas en un lugar seguro. <br><br> Con respecto a los archivos de cartera debes siempre mantener múltiples copias en diferentes lugares, como memorias usb. <br> Las contraseñas siempre deben ser únicas y complejas, por esta razón, siempre escríbalas primero en papel. <br><br> Cuando desees consultar tu cartera o realizar operaciones:<br> - Conecta la memoria usb <br> - Importa la cartera en Nano<br> - Desconecta la memoria usb.<br><br> Una copia de tu cartera se guarda en el almacenamiento local del navegador durante todo el tiempo que necesites.<br> Una vez que hayas terminado, cierra la sesión y limpia las carteras en el almacenamiento local usando el botón de limpieza en el lado derecho del pie de página.',
        FAQ_QUESTION_10: '¿Dónde puedo encontrar información sobre mi cuenta (dirección, etc.)?',
        FAQ_ANSWER_10: 'Si observas la barra de navegación superior, verás un botón <b><i>"Cuenta"</b></i> entre <b><i>"Nodo"</b></i> e <b><i>"Idioma"</b></i>. Allí puedes encontrar tu dirección, clave pública, saldo y otros datos importantes.',
        FAQ_QUESTION_11: 'He depositado XEM en una casa de intercambio pero no ha sido acreditado',
        FAQ_ANSWER_11_1: 'Primero debes verificar que el hash de tu transacción apunte a una transacción existente en el <a target="_blank" href="http://chain.nem.ninja">explorador</a> (ten en cuenta que el explorador está a unos pocos bloques por detrás).',
        FAQ_ANSWER_11_2: 'La mayoría de las casas de intercambios solicitan un mensaje de identificación para acreditar su depósito. Asegúrate de haber seguido cuidadosamente las instrucciones de la casa intercambio y haber agregado un mensaje que NO esté encriptado.',
        FAQ_ANSWER_11_3: 'Incluso si has agregado un mensaje, puede ocurrir que las casas de intercambio no procesen tu depósito debido a incidencias por su parte.',
        FAQ_ANSWER_11_4: 'Debes ponerte en contacto con el soporte de la casa de intercambio, explicar la situación y proporcionarles el hasg de la transacción.',
        FAQ_QUESTION_12: '¿Cómo comprobar si estoy en un fork?',
        FAQ_ANSWER_12_1: 'Haz clic en <b><i>"Nodo"</b></i>, en la barra de navegación superior, para abrir el panel de nodos.',
        FAQ_ANSWER_12_2: 'Mira el tamaño de la cadena y compárala con el tamaño que se muestra <a target = "_ blank" href="http://hugealice.nem.ninja:7890/chain/height">aquí</a>.',
        FAQ_ANSWER_12_3: 'Si es diferente de más de 5 bloques, entonces probablemente estas en un fork.',
        FAQ_ANSWER_12_4: 'Para solucionarlo, simplemente elige otro nodo del menú desplegable en el panel de nodo, restaurará su cuenta en el estado más reciente de la red de producción.',

        // FORM RELATED
        FORM_PASSWORD_FIELD_PLACEHOLDER: 'Ingresa tu contraseña o frase de contraseña',
        FORM_WALLET_NAME_FIELD_PLACEHOLDER: 'Nombre de la cartera',
        FORM_SIGNUP_PASSWORD_FIELD_PLACEHOLDER: 'Contraseña',
        FORM_PASSWORD: 'Contraseña',
        FORM_PASSWORD_CONFIRM: 'Confirmar contraseña',
        FORM_PASSPHRASE_CONFIRM: 'Confirmar frase de contraseña',
        FORM_CONFIRM_PASSWORD_FIELD_PLACEHOLDER: 'Confirmar tu contraseña',
        FORM_PASSPHRASE_FIELD_PLACEHOLDER: 'Frase de contraseña',
        FORM_CONFIRM_PASSPHRASE_FIELD_PLACEHOLDER: 'Confirmar tu frase de contraseña',
        FORM_ADDRESS_FIELD_PLACEHOLDER: 'Dirección de cuenta',
        FORM_PRIVATE_KEY_FIELD_PLACEHOLDER: 'Clave privada ',
        FORM_SIDE_BTN_BALANCE: 'Saldo',
        FORM_SIDE_BTN_PAY_TO: 'Pagar a',
        FORM_SIDE_BTN_TX_FEE: 'Tarifa de transacción',
        FORM_SIDE_BTN_RENTAL_FEE: 'Tarifa de alquiler',
        FORM_SIDE_BTN_LEVY_FEE: 'Tarifa de impuesto',
        FORM_RECIPIENT_PLACEHOLDER: 'Dirección del destinario o @alias',
        FORM_INVOICE_RECIPIENT_PLACEHOLDER: 'Dirección del destinatario',
        FORM_SIDE_BTN_ALIAS_OF: 'Alias de',
        FORM_MESSAGE_PLACEHOLDER: 'Mensaje',
        FORM_MOSAIC_NAME_PLACEHOLDER: 'Nombre del Mosaico',
        FORM_ADDRESS_ALIAS_PLACEHOLDER: 'Dirección de la cuenta o @alias',
        FORM_BTN_GET_ALIAS: 'Obtener dirección del namespace',
        FORM_BTN_OPEN_ADB: 'Abrir libreta de direcciones',
        FORM_SELECT_NAMESPACE: 'Seleccionar un namespace',

        // VOTING MODULE
        PORTAL_VOTING_TITLE: 'Votación',
        PORTAL_VOTING_TEXT: 'Crear y votar en votaciones',
        PORTAL_VOTING_BTN1: 'Ver votaciones',
        PORTAL_VOTING_BTN2: 'Crear votación',
        FORM_TITLE_FIELD_PLACEHOLDER: 'Título',
        FORM_DESCRIPTION_FIELD_PLACEHOLDER: 'Escribe tu descripción aquí',
        FORM_OPTION_FIELD_PLACEHOLDER: 'Escribir opción',
        FORM_WHITELIST_FIELD_PLACEHOLDER: 'Dirección de cuenta',
        FORM_SELECT_MULTISIG: 'Seleccionar una cuenta multifirma',
        FORM_SELECT_CONTACT: 'Seleccionar un contacto',

        // TREZOR RELATED
        TREZOR_TITLE: 'TREZOR',
        TREZOR_TEXT: 'La cartera de TREZOR te permite asegurar tu XEM, mosaicos y cuentas multifirma',
        TREZOR_BUTTON: 'Ingresar con TREZOR',

        // LEDGER NANO RELATED
        LEDGER_NANO_TITLE: 'LEDGER NANO',
        LEDGER_NANO_TEXT: 'La cartera de hardware LEDGER NANO le permite asegurar sus cuentas XEM, mosaics y cuentas multisig',
        LEDGER_NANO_BUTTON: 'Inicia sesión con LEDGER NANO',
        LEDGER_NANO_NO_DEVICE: 'Dispositivo Ledger no encontrado',
        LEDGER_NANO_CHECK_DEVICE: 'Please check your Ledger device!',
        LEDGER_NANO_NOT_USING_NEM_APP: 'No estás utilizando la aplicación NEM en tu dispositivo Ledger',
        LEDGER_NANO_NOT_USING_XYM_APP: 'No estás utilizando la aplicación Symbol en tu dispositivo Ledger',
        LEDGER_NANO_NOT_SUPPORTED_APP: 'Comprueba si tienes abierta una aplicación NEM actualizada en tu dispositivo Ledger',
        LEDGER_NANO_CONNECTED_OTHER_APP: 'Another app is already connected to your Ledger device. Please close it then try again',
        LEDGER_NANO_NOT_OPENED_NEM_APP: 'Abre la aplicación NEM en tu dispositivo Ledger',
        LEDGER_NANO_NOT_OPENED_XYM_APP: 'Por favor, abre la aplicación Symbol en tu dispositivo Ledger',
        LEDGER_NANO_DEVICE_LOCKED: 'Por favor, desbloquea tu dispositivo Ledger',
        LEDGER_NANO_USER_REJECT_LOGIN: 'Inicio de sesión cancelado por el usuario',
        LEDGER_NANO_USER_REJECT_REQUEST: 'Solicitud cancelada por el usuario',
        LEDGER_NANO_FOLLOW_INSTRUCTION: 'Sigue las instrucciones de tu dispositivo Ledger',
        LEDGER_NANO_TRANSACTION_TOO_BIG: 'La transacción es demasiado grande para firmar en tu dispositivo Ledger',
        LEDGER_NANO_TRANSACTION_USER_CANCEL: 'Firma cancelada por el usuario',
        LEDGER_NANO_TRANSACTION_FAILED: 'Error al firmar la transacción, motivo: ',
        LEDGER_NANO_OPTIN_INFO_1: 'Puedes usar la aplicación Ledger de Symbol para obtener la cuenta de Opt-In de Symbol',
        LEDGER_NANO_OPTIN_INFO_2: 'Abre la aplicación Symbol Ledger en tu dispositivo y haz clic en Importar cuenta Symbol.',
        LEDGER_NANO_IMPORT_SYMBOL: 'Importar cuenta Symbol',

        // CREATE OFFLINE TRANSACTION MODULE
        OFFLINE_TX_TITLE: 'Preparar una transacción fuera de línea',
        OFFLINE_TX_NO_WALLET: 'Por favor importa una cartera desde el módulo de ingresar, para ver el formulario.',
        OFFLINE_TX_INFO_1: '¡Asegúrate de desconectarte de internet cuando importes tu cartera y crees la transacción!',
        OFFLINE_TX_INFO_2: 'Solo se pueden crear transacciones simples, porque se necesita una conexión para usar mosaicos e información de cuentas multifirma de nodos NEM.',
        OFFLINE_TX_INFO_3: 'Después de hacer clic en el botón "crear" en el panel izquierdo, encontrarás la transacción firmada debajo.',
        OFFLINE_TX_INFO_4: 'Una transacción firmada es inmutable y solo será efectiva si se envía a la red antes del tiempo límite predeterminado de 24 horas.',
        OFFLINE_TX_SIGNED: 'Transacción firmada',
        OFFLINE_TX_RELEASE: 'Abrir en el módulo de liberación',

        // RELEASE OFFLINE TRANSACTION MODULE
        RELEASE_OFFLINE_TX_TITLE: 'Liberar una transacción a la red',
        RELEASE_OFFLINE_TX_PARAMETERS: 'Parámetros de transacción',
        RELEASE_OFFLINE_TX_INFO_1: 'Para liberar una transacción, debes estar conectado a internet.',
        RELEASE_OFFLINE_TX_INFO_2: 'Asegúrate de haber seleccionado la red correcta y un nodo de trabajo o será rechazada.',
        RELEASE_OFFLINE_TX_INFO_3: 'No es posible enviar una transacción firmada dos veces. Una transacción firmada siempre generará el mismo hash y dos transacciones no pueden tener el mismo hash.',
        RELEASE_OFFLINE_TX_INFO_4: 'Puedes liberar una transacción firmada desde cualquier computadora de forma segura.',

        // INVOICE MODULE
        CREATE_INVOICE_TITLE: 'Crear una factura',

        // CATAPULT OPT IN MODULE
        PORTAL_CATAPULTOPTIN_TITLE: 'Symbol Opt in',
        PORTAL_CATAPULTOPTIN_TEXT_LINK: 'aquí.',
        PORTAL_CATAPULTOPTIN_MULTISIG_TEXT: 'Your multi-signature opt-in request must be issued with cosigner accounts',
        PORTAL_CATAPULTOPTIN_BTN_2: 'Firmar un mensaje multifirma de Opt In',
        PORTAL_CATAPULTOPTIN_TREZOR_TEXT: 'Opt in no soporta trezor todavía. Si quieres realizar el proceso de Opt In, mueve tus fondos a una cuenta normal',
        TITLE_CATAPULTOPTIN: 'Symbol Opt in',
        CATAPULTOPTIN_CREATE_HELP: 'Quieres saber más acerca del proceso de Symbol Opt in?',
        CATAPULTOPTIN_TRANSACTION: 'Transacción Opt in',
        CATAPULTOPTIN_ACCOUNT_UNLOCK_PLACEHOLDER: 'Por favor, introduce el mnemonic que obtuviste al realizar Opt In a tu cuenta Symbol',
        CATAPULTOPTIN_ACCOUNT_STEP_1: 'Paso 1: Selecciona una cuenta para realizar el Opt in',
        CATAPULTOPTIN_ACCOUNT_STEP_1_NEW: 'Paso 1: Selecciona una cuenta para realizar el Opt in',
        CATAPULTOPTIN_ACCOUNT_STEP_2: 'Paso 2: Revisar la información Opt In de mi cuenta Symbol',
        CATAPULTOPTIN_ACCOUNT_MS_STEP_2: 'Paso 2: Revisar la información de mi cuenta multifirma Symbol',
        CATAPULTOPTIN_ACCOUNT_STEP_3: 'Paso 3: Revisar mis namespaces para el Opt in',
        CATAPULTOPTIN_ACCOUNT_STEP_4: 'Paso 4: Revisar mis claves VRF para el Opt in',
        CATAPULTOPTIN_INCLUDE_VRF: 'Incluir claves VRF en el Opt in',
        CATAPULTOPTIN_VRF_KEYS: 'Claves VRF',
        CATAPULTOPTIN_VRF_PUBLIC_KEY: 'Clave pública VRF',
        CATAPULTOPTIN_ACCOUNT_MS_STEP_3: 'Paso 3: Revisar los namespaces multifirma para Opt in',
        CATAPULTOPTIN_ACCOUNT_STEP_SIGN: 'Paso 2: Firmar Opt in a Symbol',
        CATAPULTOPTIN_REVIEW_MULTISIG_RESULT: 'Revisar Opt in multifirma a Symbol',
        CATAPULTOPTIN_REGISTER: 'Registrar Symbol Opt In',
        CATAPULTOPTIN_CREATE_ADDRESS: 'Crear una nueva dirección a Symbol desde un mnemonic.',
        CATAPULTOPTIN_INCLUDE_NAMESPACE: 'Incluir namespaces en el opt in',
        CATAPULTOPTIN_INCLUDE_MS_NAMESPACE: 'Incluir los namespaces de mi cuenta multifirma en el opt in',
        CATAPULTOPTIN_MULTISIG_CONTRACT_CONSIGNATURES: 'Cofirmantes de mi contrato multifirma',
        SIGN_MULTISIG_OPTIN_TRANSACTIONS_TITLE: 'Firmar transacciones opt in multifirma',
        CATAPULTOPTIN_NAMESPACE_TO_DELETE: 'Opt Out de Namespace',
        CATAPULTOPTIN_NAMESPACE_REMOVE: 'Introduce un namespace para eliminar',
        CATAPULTOPTIN_ENTER_PK: 'Introduce una clave privada para generar una cuenta Symbol',
        CATAPULTOPTIN_ENTER_PASSWORD: 'Introduce tu contraseña para generar una cuenta Symbol',
        CATAPULTOPTIN_REMOVE_NAMESPACE: 'Eliminar Namespace',
        CATAPULTOPTIN_OPT_IN_SUCCESS: 'Opt in completado correctamente',
        CATAPULTOPTIN_OPT_IN_PENDING_SIGNATURES: 'Opt in pendiente de cofirmantes',
        CATAPULTOPTIN_TRANSFER_TRANSACTION_MULTISIG_NAME: 'Aprovación de cuenta Symbol multifirma',
        CATAPULTOPTIN_NIS1: 'NIS1',
        CATAPULTOPTIN_OPTIN_ACCOUNT: 'Cuenta Opt in:',
        CATAPULTOPTIN_OPTIN_ACCOUNT_PK: 'Clave pública de la cuenta Opt in:',
        CATAPULTOPTIN_NAMESPACES_OPTIN: 'Mis namespaces en Opt in',
        CATAPULTOPTIN_CATAPULT: 'Symbol',
        CATAPULTOPTIN_OPTIN_ACCOUNT_ADDRESS: 'Dirección de mi cuenta Opt in:',
        CATAPULTOPTIN_UNLOCK: 'Desbloquear cuenta Symbol',
        CATAPULTOPTIN_CONFIRM_OPTIN: 'Confirmar Opt in a Symbol',
        CATAPULT_OPT_IN_RESUME: 'Confirmación de transacción Opt in',
        CATAPULT_OPT_IN_RESUME_TEXT:'La siguiente transacción creará una nueva cuenta Symbol. Para reclamar tus fondos necesitas guardar tu Mnemonic.',
        CATAPULT_OPT_IN_SUCCESS: 'Opt In correcto',
        CATAPULT_OPT_IN_BALANCE_SNAPSHOT: 'Balance que se incluirá en Symbol',
        CATAPULT_OPT_IN_SUCCESS_SIGNING: 'Opt in firmado correctamente',
        CATAPULT_OPT_IN_UNDERSTAND: 'Considerando el cambio de clave privada cuando uses Symbol, es importante que entiendas que tu clave privada en Symbol será distinta a la antigua. Por favor, confirma que has hecho una copia de tu nueva clave privada escribiendo ‘Yes, I understand‘ en el siguiente espacio.',
        CATAPULT_OPT_IN_CONFIRM_BACKUP: 'He guardado mi mnemonic para Opt in y entiendo que es mi responsabilidad guardarlo y crear una copia de seguridad.',
        CATAPULT_OPT_IN_UNDERSTAND_FUNDS: 'Entiendo que los únicos fondos en mi cuenta durante el bloque de captura son los fondos que serán incluidos en XYM en mi cuenta Symbol en el lanzamiento. Cualquier cambio en los balances de mi cuenta después de este Opt in se verán reflejados en mi cuenta Symbol.',
        GENERAL_MIN_SIGNATURES_REQUIRED: 'Firmas mínimas requeridas',
        SYMBOL_OPTIN_INITIATOR: 'Iniciador de Opt in',
        CATAPULT_BACKUP_WALLET: 'Copia de seguridad de la cartera Symbol',
        CATAPULT_DOWNLOAD_WALLET: 'Descargar cartera Symbol encriptada',
        MNEMONIC: 'Mnemonic',
        CATAPULT_OPT_IN_LOADING: 'Comprovando el estado de Opt in...',
        COSIGNER_NOT_OPTIN: 'El cofirmante aún no ha iniciado el proceso de Opt in',
        SYMBOL_ADDRESS: 'Dirección Symbol',
        YOUR_SYMBOL_ADDRESS: 'Tu dirección Symbol',
        YOUR_SYMBOL_MNEMONIC: 'Tu Symbol Mnemonic',
        SYMBOL_COSIGNERS: 'Cofirmantes en Symbol',
        CATAPULTOPTIN_CONFIRM_SIGN: 'Firmar Symbol Opt In',
        CATAPULTOPTIN_FIRST_DO_NORMAL: 'Para realizar el Opt in multifirma necesitas hacer el Opt in normal primero',
        CATAPULTOPTIN_ENCRYPTED_WALLET_TEXT: 'Por favor, crea una nueva contraseña para encriptar tu la copia de seguridad de tu cartera Symbol y haz click en el botón de descarga.',
        CATAPULTOPTIN_GENERATE_NEW_SYMBOL: 'Generar un nuevo Mnemonic de Symbol',
        CATAPULTOPTIN_VRF_KEYS_DESCRIPTION: 'Las claves VRF se usan para la cosecha en Symbol. Si eres propietario de un nodo y quieres empezar a cosechar los primeros bloques, puedes activar esta opción y guardar las claves para ponerlas en la configuración de tu nodo Symbol. Si no activas esta opción podrás generar las claves igualmente cuando se lance la cadena principal.',
        OPTIN_FORM_PASSWORD_FIELD_PLACEHOLDER: 'Introduce la contraseña de tu cartera NEM',
        OPTIN_NEW_PASSWORD: 'Nueva contraseña',
        SYMBOL_PASSWORD_REQUIREMENT: "La contraseña debe tener por lo menos 8 carácteres",
        SYMBOL_WALLET_CREATING_TYPE_INFO: 'Por favor, selecciona la forma de crear tu cuenta Symbol',
        SYMBOL_WALLET_CREATING_BY_ENTROPY_TYPE_INFO: 'Generar cuenta aleatoria',
        SYMBOL_WALLET_CREATING_BY_LEDGER_IMPORT_TYPE_INFO: 'Importar cuenta Symbol desde Ledger',
        SYMBOL_SIGNUP_CREATE_WALLET_ADD_ENTROPY_INFO_1: 'Vamos a generar tu clave primaria.',
        SYMBOL_SIGNUP_CREATE_WALLET_ADD_ENTROPY_INFO_2: 'Por favor, pulsa iniciar y mueve tu cursor para añadir más aleatoriedad.',
        OPTIN_WELCOME_TITLE: 'Bienvenido al Opt-in de Symbol',
        OPTIN_INFO_1: 'La cadena principal de Symbol aún no ha sido lanzada.',
        OPTIN_INFO_2: 'Puedes prepararte haciendo Opt in de tus cuentas NEM NIS1 con este módulo ',
        OPTIN_INFO_3: 'para migrar tus balances y namespaces a la red de Symbol,',
        OPTIN_LINK_INFO: 'Consulta toda la información sobre el proceso de Opt-in ',
        OPTIN_NAMESPACES_TITLE: 'Opt-in Namespaces',
        OPTIN_NAMESPACES_INFO:'Puedes hacer Opt-in de los Namespace(s) que posees en NEM NIS1. Esto guardará un espacio para los mismos Namespace(s) en la red de Symbol.',
        OPTIN_NAMESPACES_LINK: 'Consulta toda la información sobre el Opt-in de Namespace(s) ',
        OPTIN_NAMESPACES_SELECT: 'Selecciona los Namespaces que quieras hacer Opt-in:',
        OPTIN_VRF_TITLE: 'Incluye claves VRF',
        OPTIN_VRF_INFO:'Las claves VRF permiten a tu cuenta cosechar recompensas de bloque. Si planeas mantener más de 10,000 XYM en tu cuenta después del lanzamiento y quieres cosechar en la red de Symbol, necesitar incluir estas claves en el proceso Opt-in.',
        OPTIN_VRF_KEYS:'Incluir claves VRF',
        OPTIN_VRF_PUBLIC: 'Dirección pública VRF',
        OPTIN_VRF_PRIVATE: 'Clave privada VRF',
        OPTIN_TAC_TITLE:'Términos y condiciones',
        OPTIN_TAC_TEXT:'términos y condiciones',
        OPTIN_TAC_INFO_1:'El proceso de Opt-in es una funcionalidad lanzada por Symbol Chain Limited con el ánimo de ayudar a los usuarios de NEM NIS1 a migrar sus balances a la nueva red Symbol. Se trata de un proceso definido bajo ciertos parámetros sobre los que los usuarios tienen que adherirse para completarlo.',
        OPTIN_TAC_INFO_2:'Symbol Chain Limited no se hace responsable de ningún inicidente que pueda suceder fuera de los términos y condiciones especificados a continuación.',
        OPTIN_TAC_READ_ACCEPT: 'He leído y acepto los ',
        OPTIN_CONFIRM_TITLE:'Confirmar Opt-in a Symbol',
        OPTIN_CONFIRM_INFO:'Ya casi hemos terminado! Esta es la información que será migrada a la nueva red de Symbol. Revisala detenidamente y firma con tu clave NEM NIS1 para finalizar el Opt-in.',
        OPTIN_CONFIRM_OPTIN:'Confirmar Opt-in',
        HERE:'aquí',
        OPTIN_ENTER_PASSWORD: 'Introduce tu contraseña de NEM NIS1 para firmar el Opt-in',
        OPTIN_LOADING: 'Comprovando los datos de Opt-in...',
        OPTIN_FINISHED: 'El proceso de opt-in post lanzamiento se abirá pronto. Por favor comprueba nuevas versiones después del lanzamiento de Symbol',
        CREATE_SYMBOL_ACCOUNT: 'Crea tu cuenta Symbol',
        OPTIN_SYMBOL_READY: 'Tu cuenta Symbol está lista',
        GENERAL_BACK: 'atrás',
        OPTIN_COPY_SUCCESS: 'Copied!',
        OPTIN_TYPE_SELECT: 'Selecciona la forma en la cual optaste por esta cartera',
        CATAPULT_OPT_IN_ERROR_TOO_MUCH_COSIGNATORIES: 'This account has more than 8 cosignatories. Opt In protocol only allows multisig accounts with less than 9 cosignatories',

        PORTAL_CATAPULTOPTIN_TEXT:              'Usa este módulo para recibir XYM en la red de Symbol. Para más información',
        PORTAL_CATAPULTOPTIN_BTN_1:             'Reclama XYM con el Symbol opt in',
        CATAPULTOPTIN_ACCOUNT_UNLOCK:           'Escribe tu llave pública de Symbol',
        CATAPULTOPTIN_REVIEW_NORMAL_RESULT:     'política de privacidad',
        OPTIN_PP_TEXT:                          'Revisa la información del opt In de Symbol',
        FORM_SELECT_ACCOUNT:                    'Seleccionar cuenta',
        POST_OPTIN_INFO_3:                      'este modulo para migrar tu balance a la red de Symbol',
        POST_OPTIN_INFO_2:                      'Si tenias XEM en el bloque de captura, puedes reclamar XYM',
        POST_OPTIN_INFO_1:                      'La red principal de Symbol está lanzada!',
        SELECT_ACCOUNT_POST_OPTIN:              'Seleccionar cuenta para hacer el opt In',
        POST_OPTIN_STATUS:                      'Estado del opt-in',
        POST_OPTIN_DETAILS:                     'Detalles del opt-in',
        POST_OPTIN_AMOUNT:                      'Cantidad para reclamar',
        POST_OPTIN_AMOUNT_CLAIMED:              'Cantidad reclamada',
        POST_OPTIN_START:                       'EMPEZAR OPT-IN',
        POST_OPTIN_DEST_MSIG:                   'Introduce la clave pública de tu cuenta destino de Symbol. Esta cuenta tiene que ser multifirma y tener el mismo numero de firmantes que la actual cuenta multifirma de NIS1.',
        POST_OPTIN_DEST_MSIG_ADDRESS:           'Dirección multifirma de Symbol',
        POST_OPTIN_DEST_ADDRESS:                'Dirección destino de Symbol',
        POST_OPTIN_DEST_MULTISIG_ADDRESS:       'Dirección multifirma destino de Symbol',
        POST_OPTIN_COSIG_DEST_ADDRESS:          'Dirección cofirmante destino de Symbol',
        NIS1_ADDRESS:                           'Dirección del cofirmante',
        YOUR_NIS_ACCOUNT:                       'Tu dirección NIS1',
        OPTIN_NOT_DONE:                         'Opt-in no completado',
        OPTIN_STATUS_TITLE_1:                   'Opt-in no completado',
        OPTIN_STATUS_TEXT_1:                    'Ya puedes empezar a reclamar XYM',
        OPTIN_STATUS_TITLE_2:                   'Opt-in simple pendiente',
        OPTIN_STATUS_TEXT_2:                    'Tu petición de opt-in ha sido creada satisfactoriamente.',
        OPTIN_STATUS_TITLE_3:                   'Opt-in multifirma no empezado.',
        OPTIN_STATUS_TEXT_3:                    'Puedes reclamar XYM para la cuenta multifirma.',
        OPTIN_STATUS_TITLE_4:                   'El opt-in multifirma tiene firmas pendientes.',
        OPTIN_STATUS_TEXT_4:                    'Cofirmantes pendientes de hacer opt-in.',
        OPTIN_STATUS_TITLE_5:                   'Opt-in multifirma pendiente',
        OPTIN_STATUS_TEXT_5:                    'Tu petición de opt-in ha sido creada satisfactoriamente.',
        OPTIN_STATUS_TITLE_6:                   'Opt-in completado',
        OPTIN_STATUS_TEXT_6:                    'Has reclamado tu XYM satisfactoriamente. Deberias haber recibido una transacion en Symbol.',
        OPTIN_NOT_AVAILABLE:                    'No tuviste XEM en el bloque snapshot o ya has reclamado los XYM en el pre-launch opt-in.',
        OPTIN_PUBLICKEY_PLACEHOLDER:            'La llave pública tiene que ser de 64 caracteres.',
        OPTIN_DONE:                             'Hecho',
        OPTIN_ERROR_TITLE_0:                    'El opt-in hecho anteriormente ha fallado por que la signatura no era valida.',
        OPTIN_ERROR_TITLE_1:                    'El opt-in hecho anteriormente ha fallado por que la cuenta destino no era valida.',
        OPTIN_ERROR_TITLE_2:                    'Esta opt-in request ha fallado por que uno o mas cofirmantes no eran validos.',
        OPTIN_SIGNED:                           'Firmado',
    });

}

export default SpanishProvider;

'''
'''--- src/app/modules/languages/index.js ---
import angular from 'angular';

// Create the module where our functionality can attach to
let app = angular.module('app.lang', ['pascalprecht.translate']);

// Include languages
import EnglishProvider from './en';
app.config(EnglishProvider);

import ChineseProvider from './cn';
app.config(ChineseProvider);

import ItalianProvider from './it';
app.config(ItalianProvider);

import PolishProvider from './pl';
app.config(PolishProvider);

import PortugueseBRProvider from './ptbr';
app.config(PortugueseBRProvider);

import GermanProvider from './de';
app.config(GermanProvider);

import JapaneseProvider from './jp';
app.config(JapaneseProvider);

import RussianProvider from './ru';
app.config(RussianProvider);

import DutchProvider from './nl';
app.config(DutchProvider);

import SpanishProvider from './es';
app.config(SpanishProvider);

import UkrainianProvider from './uk';
app.config(UkrainianProvider);

// Comment this while developing to see untranslated strings
app.config(['$translateProvider', function($translateProvider) {
    $translateProvider.fallbackLanguage('en');
}]);

export default app;

'''
'''--- src/app/modules/languages/it.js ---
function ItalianProvider($translateProvider) {
    'ngInject'

    $translateProvider.translations('it', {

        // HEADER COMPONENT
        WALLET_NAME_1: 'NEM',
        WALLET_NAME_2: 'Wallet',
        APP_NAME_SUB: 'L"interfaccia wallet più sicura per la tua connessione alla piattaforma NEM',
        HEADER_LOGIN_BUTTON: 'Accedi',
        HEADER_SIGNUP_BUTTON: 'Crea portafoglio',
        HEADER_DASHBOARD: 'Pannello',
        HEADER_WALLET: 'Portafoglio',
        HEADER_SERVICES: 'Servizi',
        HEADER_EXPLORER: 'Esploratore',
        HEADER_NODE: 'Nodo',
        HEADER_ACCOUNT: 'Fattura',
        HEADER_LANG_TITLE: 'Lingua',
        HEADER_LANG_SELECT: 'Seleziona la lingua',
        HEADER_NODE_BLOCK_HEIGHT: 'Numero di blocco',
        HEADER_NODE_CURRENT_NODE: 'Nodo corrente',
        HEARDER_NODE_LIST: 'Elenco di nodi',
        HEADER_NODE_SELECT: 'Seleziona un nodo',
        HEADER_NODE_CUSTOM: 'Nodo personalizzato',
        HEADER_NODE_CONNECT: 'Connettersi',
        HEADER_NODE_CUSTOM_INFO: 'Dominio IP o nodo',
        HEADER_NODE_CUSTOM_TOOLTIP: 'Inserisci qui il tuo nodo NIS',
        HEADER_PURGE: 'Pulito',
        HEADER_PURGE_MESSAGE: 'Conferma la pulizia della tua memoria locale. Facendo clic su "Cancella" tutti i portafogli nella memoria locale del tuo browser verranno eliminati e non potranno essere recuperati. Confermate di aver eseguito il backup di tutti i portafogli e che i vostri fondi sono sicuri.',
        HEADER_OFFLINE_TX: 'Preparare una transazione offline',
        HEADER_RELEASE_TX: 'Segnala una transazione alla rete',

        // FOOTER COMPONENT
        FOOTER_POWERED_BY_1: 'Alimentato da',
        FOOTER_POWERED_BY_2: 'NEM technology.',
        FOOTER_VERSION: 'Versione',

        // DASHBOARD MODULE
        DASHBOARD_TITLE: 'Pannello',
        DASHBOARD_UNCONFIRMED: 'Non confermato',
        DASHBOARD_CONFIRMED: 'Confermato',
        DASHBOARD_HARVEST_INCOME_TITLE: 'Ricette con raccolte negli ultimi 25 blocchi',
        DASHBOARD_HARVEST_INCOME_NOTE: 'Solo blocchi con tassi sopra lo zero',
        DASHBOARD_HARVEST_INCOME_MESSAGE: 'Nessuna commissione di transazione trovata negli ultimi 25 blocchi.',
        DASHBOARD_NEWS_TITLE: 'Ultime notizie',
        DASHBOARD_HARVESTED_BLOCKS_TITLE: 'Blocchi raccolti',
        DASHBOARD_HARVESTED_BLOCKS_TH: 'Addebiti raccolti',
        DASHBOARD_MARKET_INFO_TITLE: 'Informazioni di mercato',
        DASHBOARD_MARKET_INFO_CAP: 'Capitalizzazione di mercato',
        DASHBOARD_MARKET_INFO_PRICE: 'Prezzo',
        DASHBOARD_MARKET_INFO_VOLUME: 'Volume acceso 24h',
        DASHBOARD_MARKET_INFO_CHANGES: 'Variação % in (24h)',
        DASHBOARD_MARKET_INFO_CHANGES_1H: '1h',
        DASHBOARD_MARKET_INFO_CHANGES_24H: '24h',
        DASHBOARD_MARKET_INFO_CHANGES_7D: '7d',
        DASHBOARD_MARKET_INFO_NOTE: '<a href="http://coinmarketcap.com/" target="_blank">CoinMarketCap</a> dati aggiornati ogni 5 minuti.',
        DASHBOARD_NOTICE_1: 'Benvenuto in Nano Wallet Beta!',
        DASHBOARD_NOTICE_2: 'Prego <a href="https://github.com/NemProject/NanoWallet" target="_blank">segnalare problemi qui</a>.',
        DASHBOARD_NOTICE_3: 'Il team NEM suggerisce di testare prima su TestNet per familiarizzare con NanoWallet prima di utilizzare la rete principale MainNet. Una guida semplice può essere trovata <a href="https://blog.nem.io/nanowallet-tutorial/" target="_blank">qui</a>. Gli utenti sono responsabili della sicurezza dei fondi e del mantenimento di un backup sicuro di tutte le proprie chiavi private.Il team NEM non è responsabile per eventuali perdite di fondi dovute a un uso improprio di questa applicazione sulla rete principale (MainNet).',
        DASHBOARD_NOTICE_4: 'Ti suggeriamo di scrivere le tue chiavi private su carta e tenerle in un posto sicuro. Puoi anche importare i tuoi account in app Android e iOS come backup.',
        DASHBOARD_NOTICE_5: 'Grazie per la tua partecipazione!',

        // GENERAL
        GENERAL_BLOCK: 'blocco',
        GENERAL_BLOCKS: 'blochi',
        GENERAL_NO_RESULTS: 'Niente da mostrare',
        GENERAL_ACCOUNT: 'fattura',
        GENERAL_ACCOUNTS: 'Conti',
        GENERAL_MULTISIG_ACCOUNT: 'Account con firma multipla',
        GENERAL_AMOUNT: 'Valore totale',
        GENERAL_MESSAGE: 'Messaggio',
        GENERAL_DATE: 'Data',
        GENERAL_TAB_NORMAL: 'Normale',
        GENERAL_TAB_SEND: 'Inviare',
        GENERAL_TAB_MULTISIG: 'Multi firma',
        GENERAL_TOTAL: 'Totale',
        GENERAL_REMOVE: 'Rimuovere',
        GENERAL_MOSAIC: 'Mosaico',
        GENERAL_FEE: 'Tasso',
        GENERAL_LEVY: 'Imposta',
        GENERAL_LEVY_TYPES: 'Tipi di tasse',
        GENERAL_LEVY_TYPES_NOTE: 'I - tasso costante; II - tasso percentuale',
        GENERAL_LEVY_TYPE_1: 'Tasso costante',
        GENERAL_LEVY_TYPE_2: 'Tasso basato percentuale',
        GENERAL_SEND: 'Inviare',
        GENERAL_TO: 'a',
        GENERAL_HASH: 'Hash',
        GENERAL_HASH_FUNCTION: 'Funzione Hash',
        GENERAL_NAME: 'Nome',
        GENERAL_INFORMATION: 'Informazioni',
        GENERAL_ADDRESS: 'Indirizzo',
        GENERAL_PUBLIC_KEY: 'Chiave pubblica',
        GENERAL_PRIVATE_KEY: 'Chave privato',
        GENERAL_CLEAR_ALL: 'Cancella tutto',
        GENERAL_CLOSE: 'Vicino',
        GENERAL_COMING_SOON: 'Prossimamente',
        GENERAL_NONE: 'Qualsiasi',
        GENERAL_DROPBOX: 'Trascina i file qui o fai clic per aprire il browser dei file',
        GENERAL_NETWORK_FEE: 'Velocità di rete',
        GENERAL_YES: 'Si',
        GENERAL_NO: 'No',
        GENERAL_TAGS: 'Tags',
        GENERAL_SINK: 'Collettore',
        GENERAL_SINK_ADDRESS: 'Indirizzo collettore',
        GENERAL_STORAGE: 'immagazzinamento',
        GENERAL_REASON: 'Motivi',
        GENERAL_TRANSACTION_HASH: 'Transazione hash',
        GENERAL_TRANSACTION_ID: 'ID transazione',
        GENERAL_OWNER: 'Proprietario',
        GENERAL_RESULTS: 'Risultati',
        GENERAL_RESULT: 'Risultato',
        GENERAL_STATUS: 'Stato',
        GENERAL_LOCATION: "Posizione",
        GENERAL_ACTION: 'Action',
        GENERAL_ACTIONS: "Azioni",
        GENERAL_ADD: 'Aggiungi',
        GENERAL_ADDED: "Aggiunto",
        GENERAL_REMOVED: "Rimosso",
        GENERAL_COSIGNATORY: 'Cosignee',
        GENERAL_COSIGNATORIES: 'Cosignatarios',
        GENERAL_PROCESSING: 'Processing',
        GENERAL_ACCOUNT_LABEL: "Nome Conto",
        GENERAL_OPTIONAL: '(opzionale)',
        GENERAL_ERROR: 'Errore',
        GENERAL_EXAMPLE: 'Esempio',
        GENERAL_PUBLIC: "Pubblico",
        GENERAL_NAMESPACES: "Registrazione dei nomi",
        GENERAL_NAMESPACE: 'Name Registration',
        GENERAL_SUB_NAMESPACES: "Registrazione dei nomi secondari",
        GENERAL_SUB_NAMESPACE: "Registrazione del nome secondario",
        GENERAL_MOSAICS: 'Mosaics',
        GENERAL_VALUE: "Valore",
        GENERAL_CONNECTION_ERROR: 'Si è verificato un errore, il tuo nodo potrebbe riscontrare un problema o la tua connessione è offline.',
        GENERAL_HISTORY: "Storia",
        GENERAL_REVEAL: 'Rivelazione',
        GENERAL_QR: "QR code",
        GENERAL_UPDATE: 'Aggiorna',
        GENERAL_UNKNOWN: 'Sconosciuto',
        GENERAL_IMPORTANCE: 'importanza',
        GENERAL_TRANSACTIONS: 'transazioni',
        GENERAL_REGISTER: 'Registro',
        GENERAL_CREATE: 'Creare',
        GENERAL_RENEW: 'Rinnovare',
        GENERAL_CHARACTERS_LEFT: 'Caratteri rimanenti',
        GENERAL_CURRENCY: 'Mosaico/Valuta',
        GENERAL_EDIT: 'Modifica',
        GENERAL_SEND_XEM: 'Inviare XEM',
        GENERAL_ACTIVE: 'Attivare',
        GENERAL_INACTIVE: 'Inattivare',
        GENERAL_ACTIVATING: 'Abilitazione',
        GENERAL_DEACTIVATING: 'disabilitazione',
        GENERAL_REMOTE: 'Remoto',
        GENERAL_WARNING: 'Allarme',
        GENERAL_SCORE: 'Punteggiatura',
        GENERAL_LENGTH: 'Lunghezza',
        GENERAL_GO_BACK: 'Ritorno',
        GENERAL_NEXT: 'Prossimo',
        GENERAL_START: 'Inizio',
        GENERAL_ALIAS: 'Soprannomi',
        GENERAL_CONTACTS: 'Contatti',
        GENERAL_ENCRYPTED: 'criptato',
        GENERAL_UNENCRYPTED: 'Senza crittografia',
        GENERAL_HEXADECIMAL: 'esadecimale',
        GENERAL_SELECT_ACCOUNT: 'Selezionare conto',
        GENERAL_INVOICE: 'Fattura',

        // HOME MODULE
        HOME_UNSUPPORTED_BROWSER: 'Mi dispiace, ma con questo browser non è possibile utilizzare Nano Wallet in modo sicuro ...',
        HOME_RECOMMENDED_BROWSERS: 'I browser consigliati sono:',
        HOME_FEATURE_STAND_BY: 'Passa il mouse su una delle funzioni per visualizzare le tue informazioni.',
        HOME_FEATURE_1: 'Invia e ricevi XEM facilmente e quasi istantaneamente con blocchi di tempo di solo 1 minuto!',

        // TRANSFER TRANSACTION MODULE
        TRANSFER_TRANSACTION_TITLE: 'Invia una transazione',
        TRANSFER_TRANSACTION_NAME: 'Transazione di trasferimento',
        TRANSFER_TRANSACTION_MULTISIG_NAME: 'Transazione di trasferimento multi firmato',
        TRANSFER_TRANSACTION_INVOICE: 'Crea fattura',
        TRANSFER_TRANSACTION_TAB_INVOICE: 'Per ricevere',
        TRANSFER_TRANSACTION_MOSAIC_TRANSFER: 'Trasferimento del mosaico',
        TRANSFER_TRANSACTION_ATTACH_MOSAIC: 'Attacca il mosaico',
        TRANSFER_TRANSACTION_ATTACH: 'allegare',
        TRANSFER_TRANSACTION_MOSAICS_ATTACHED: 'Mosaici allegati',
        TRANSFER_TRANSACTION_ENCRYPT_MESSAGE: 'Crittografare il messaggio',
        TRANSFER_TRANSACTION_MESSAGE_TYPE: 'Tipo di messaggio',

        // TRANSACTION LINES
        LINE_TX_DETAILS_FROM: 'Da',
        LINE_TX_DETAILS_FROM_MULTISIG: 'Da Multi firma',
        LINE_TX_DETAILS_WAITING: 'Transazione in attesa di essere inclusa',
        LINE_TX_DETAILS_NEED_SIG: 'Sono richieste le firme dei destinatari',
        LINE_TX_DETAILS_NEED_SIG_2: 'La tua firma è richiesta.',
        LINE_TX_DETAILS_MESS_DEC: 'Decodificare',
        LINE_TX_DETAILS_HASH: 'Hash',
        LINE_TX_DETAILS_DEC_MESS: 'Decodifica messaggio',
        LINE_TX_DETAILS_MOS_ATTACHED: 'Mosaici allegati',
        LINE_TX_DETAILS_LEVY_TYPE_1: 'Constante',
        LINE_TX_DETAILS_LEVY_TYPE_2: 'Base percentuale',
        LINE_TX_DETAILS_ISSUER: 'Emittente',
        LINE_TX_DETAILS_MULTISIG_FEE: 'Tariffa multi abbonamento',
        LINE_TX_DETAILS_MULTISIG_HASH: 'Hash firma multipla',
        LINE_TX_DETAILS_COSIGN: 'Commerciante della transazione',
        LINE_TX_DETAILS_SIGNATURES: 'Chi siamo',
        LINE_TX_DETAILS_COSIGNATORY: 'destinatario',
        LINE_TX_DETAILS_TIMESTAMP: 'Timestamp',
        LINE_TX_DETAILS_MOS_CREATE: 'Creare mosaico',
        LINE_TX_DETAILS_MOS_EDIT: 'Modifica tessera',
        LINE_TX_DETAILS_NS_CREATE: 'Crea un nome',
        LINE_TX_DETAILS_NS_NEW_SUB: 'Nuovo record del cognome',
        LINE_TX_DETAILS_NS_ROOT: 'Registrazione del nome radice',
        LINE_TX_DETAILS_RECIPIENT: 'Destinatario',
        LINE_TX_DETAILS_MULTISIG_CREATE: 'Crea un account con più firme',
        LINE_TX_DETAILS_MULTISIG_EDIT: 'Modifica account con firma multipla',
        LINE_TX_DETAILS_MULTISIG_MOD: 'modifiche',
        LINE_TX_DETAILS_MULTISIG_MIN_COSIG: 'Minimo di destinatari',
        LINE_TX_DETAILS_MULTISIG_AFFECTED: 'Conti influenzato',

        // IMPORTANCE MODULE
        IMPORTANCE_TRANSFER_NAME: 'Importa transazione di trasferimento',
        IMPORTANCE_TRANSFER_MULTISIG_NAME: 'Transazione di trasferimento di più firme',
        IMPORTANCE_TRANSFER_MODE: 'Modo',
        IMPORTANCE_TRANSFER_MODE_1: 'Attivare',
        IMPORTANCE_TRANSFER_MODE_2: 'Disattivare',
        IMPORTANCE_TRANSFER_TITLE: 'Gestisci account delegati',
        IMPORTANCE_TRANSFER_MULTISIGNATURE_TITLE: 'Gestisci account delegato per account con firma multipla',
        IMPORTANCE_TRANSFER_CUSTOM_KEY: 'Utilizzare una chiave pubblica personalizzata',
        IMPORTANCE_TRANSFER_MODE_SELECT: 'Seleziona una modalità',
        IMPORTANCE_TRANSFER_REMOTE_ACCOUNT: 'Account remoto',
        IMPORTANCE_TRANSFER_REMOTE_PUBLIC: 'Chiave pubblica remota',
        IMPORTANCE_TRANSFER_INFO_PART_1: 'Una volta che una transazione di trasferimento di importanza è inclusa in un blocco, occorrono 6 ore prima che diventi attiva. Dopo lattivazione, si ha accesso alla selezione dei nodi e ai comandi di avvio / arresto.',
        IMPORTANCE_TRANSFER_INFO_PART_2: 'Assicurarsi di non avere un account delegato già attivato (se si tratta di un account importato). In questo caso, se necessario, è possibile utilizzare la vecchia chiave pubblica delegata per disattivarla.',
        IMPORTANCE_TRANSFER_INFO_PART_MULTISIG: 'Per gli account con più lati, solo il co-firmatario che ha avviato la transazione di trasferimento di importanza può avviare o interrompere la raccolta. Se un altro co-firmatario vuole riprendere il controllo del raccolto, ha solo bisogno di disattivare e riattivare lo stato remoto.',
        IMPORTANCE_TRANSFER_NO_BLOCKS_HARVESTED: 'Non ci sono blocchi prelevati',
        IMPORTANCE_TRANSFER_HARVESTING_PANEL: 'Pannello raccolto',
        IMPORTANCE_TRANSFER_REMOTE_ACTIVATING: 'È necessario attendere fino a quando lo stato remoto è attivo per avviare la raccolta delegata (6 ore).',
        IMPORTANCE_TRANSFER_REMOTE_INACTIVE: 'È necessario inviare un trasferimento di peso dal riquadro di sinistra per attivare laccount remoto.',
        IMPORTANCE_TRANSFER_MULTISIG_NOT_INITIATOR: 'Non sei il co-firmatario che ha avviato il trasferimento dell"importanza, quindi non ti è consentito visualizzare, avviare o interrompere direttamente il raccolto delegato. Si prega di contattare il co-firmatario che amministra l"account remoto. Puoi rimuovere un amministratore per inviare nuovamente la raccolta disattivando e riattivando laccount remoto.',
        IMPORTANCE_TRANSFER_PRIVATE_KEY_PLACEHOLDER: 'Rivela la chiave privata dell"account delegato',
        IMPORTANCE_TRANSFER_DELEGATED_KEYS: 'Chiave dell"account delegato',
        IMPORTANCE_TRANSFER_HARVESTING_STATUS: 'Stato di raccolta',
        IMPORTANCE_TRANSFER_START_HARVESTING: 'Inizia la raccolta delegata',
        IMPORTANCE_TRANSFER_STOP_HARVESTING: 'Fermare la raccolta delegata',
        IMPORTANCE_TRANSFER_ACTIVATE_DEACTIVATE_REMOTE: 'Abilita / Disabilita account delegato',
        IMPORTANCE_TRANSFER_SHOW_DELEGATED_KEYS: 'Visualizza le chiavi degli account delegati',

        // CREATE MOSAIC MODULE
        MOSAIC_DEFINITION_TITLE: 'Crea un mosaico',
        MOSAIC_DEFINITION_NAME: 'Transazione di definizione del mosaico',
        MOSAIC_DEFINITION_MULTISIG_NAME: 'Transazione di definizione mosaico con più firme',
        MOSAIC_DEFINITION_QUANTITY: 'Quantità',
        MOSAIC_DEFINITION_DIV: 'Divisibilità',
        MOSAIC_DEFINITION_TOTAL_SUPPLY: 'Offerta totale',
        MOSAIC_DEFINITION_FINAL_NAME: 'Nome completo',
        MOSAIC_DEFINITION_DESCRPITION: 'Descrizione del prodotto',
        MOSAIC_DEFINITION_INITIAL_SUPPLY: 'Fornitura iniziale',
        MOSAIC_DEFINITION_MUTABLE_SUPPLY: 'Fornitura variabile',
        MOSAIC_DEFINITION_TRANSFERABLE: 'Trasferibile',
        MOSAIC_DEFINITION_PROPERTIES: 'Proprietà',
        MOSAIC_DEFINITION_MOSAIC_PROPERTIES: 'Proprietà del mosaico',
        MOSAIC_DEFINITION_REQUIRES_LEVY: 'Richiede tasse',
        MOSAIC_DEFINITION_LEVY_LIMITATION: 'Limitazione dell"interfaccia: per ora, solo i mosaici già creati possono essere utilizzati come tasse.',
        MOSAIC_DEFINITION_LEVY_SELECT_MOSAIC: 'Seleziona una tessera per le tasse',
        MOSAIC_DEFINITION_LEVY_ADDRESS: 'Indirizzo account di destinazione fiscale',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE: 'Tipo di tariffa',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_1: 'Assoluto',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2: 'Percentuale',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_1_NOTE: 'La selezione assoluta, comporterà una tassa costante di:',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE: 'La selezione della percentuale comporterà una tassa lineare di:',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE_2: 'Invio',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE_3: 'Risulterà nel',
        MOSAIC_DEFINITION_PARENT: 'Registrazione del nome genitore',
        MOSAIC_DEFINITION_INFORMATION_TITLE: 'Creazione di un mosaico',
        MOSAIC_DEFINITION_INFORMATION: 'Vuoi maggiori informazioni sui mosaici?',
        MOSAIC_DEFINITION_INFORMATION_1: 'La lunghezza massima per un nome di mosaico è di 32 caratteri. I personaggi ammessi sono:',
        MOSAIC_DEFINITION_INFORMATION_2: 'Il primo carattere deve essere una lettera dell"alfabeto o un numero.',
        MOSAIC_DEFINITION_INFORMATION_3: 'La descrizione non deve superare i 512 caratteri di lunghezza. Non ci sono limitazioni sui caratteri usati nella descrizione.',
        MOSAIC_DEFINITION_INFORMATION_4: 'Il comportamento di un mosaico può essere personalizzato da un insieme di proprietà:',
        MOSAIC_DEFINITION_INFORMATION_5: 'L"offerta è data in unità intere del mosaico, non nelle sue più piccole sottounità in cifre decimali. L"offerta iniziale deve essere compresa tra 0 (zero) e 9.000.000.000 (9 miliardi).',
        MOSAIC_DEFINITION_INFORMATION_6: 'La divisibilità determina in altrettante decimali il mosaico può essere suddiviso. Pertanto, la divisibilità di 3 significa che un mosaico può essere diviso nella sua parte più piccola composta da 0,001 mosaici (i mili mosaici sono la più piccola subunità possibile). La divisibilità deve essere compresa tra i limiti di 0 (zero) e 6 (sei).',
        MOSAIC_DEFINITION_INFORMATION_7: 'Se abilitato, consente di modificare la fornitura del mosaico in futuro, altrimenti la fornitura non verrà modificata.',
        MOSAIC_DEFINITION_INFORMATION_8: 'Consenti trasferimenti di mosaici tra account diversi da quelli del tuo creatore. Se la proprietà trasferibile non è abilitata, solo i trasferimenti che hanno l"indirizzo dell"autore come mittente o destinatario possono trasferire tessere di questo tipo. Se abilitato mosaici possono essere liberamente trasferiti tra tutti gli account.',
        MOSAIC_DEFINITION_INFORMATION_9: 'Il creatore può richiedere che venga prelevata un"aliquota speciale dal mittente e inviata a un account di sua scelta (in modo che il creatore possa specificare il proprio account come titolare della tariffa). I dati per impostare l"aliquota fiscale sono i seguenti:',
        MOSAIC_DEFINITION_INFORMATION_10: 'Il mosaico in cui la tassa dovrebbe essere pagata. È possibile specificare qualsiasi mosaico esistente.',
        MOSAIC_DEFINITION_INFORMATION_11: 'L"indirizzo del conto fiscale. Può essere qualsiasi account.',
        MOSAIC_DEFINITION_INFORMATION_12: 'L"importo della tassa. L"interpretazione del calcolo dipende dal valore inserito nel campo "tipo di tasso", come sopra.',
        MOSAIC_DEFINITION_INFORMATION_13: 'Esistono due tipi di tassi possibili, tasso assoluto e tasso percentuale.',
        MOSAIC_DEFINITION_INFORMATION_14: 'Il tasso è specificato con quantità assoluta e quindi non dipende dalla quantità che verrà trasferita.',
        MOSAIC_DEFINITION_INFORMATION_15: 'Il tasso è specificato come una percentuale multipla della quantità che verrà trasferita. La velocità viene quindi aumentata linearmente in base alla quantità di mosaico trasferito.',
        MOSAIC_DEFINITION_INFORMATION_16: 'L"invio di tessere alla catena di blocchi NEM richiede una commissione. Il tasso esatto viene calcolato in base al numero totale e alla quantità inviata durante la transazione. <b> Mosaici per le piccole imprese </b> ricevono uno sconto di 0,05 XEM per tile per download. Questi sono mosaici con una quantità inferiore a 10.000 e una divisibilità di 0 (zero).',
        MOSAIC_DEFINITION_INFORMATION_17: 'Se si possiede il 100% della fornitura, è possibile modificare tutte le proprietà del mosaico inviando una nuova transazione di definizione mosaico con lo stesso nome "registrazione del nome: mosaico".',

        // EDIT MOSAIC MODULE
        MOSAIC_SUPPLY_CHANGE_TITLE: 'Sostituire la fornitura di piastrelle',
        MOSAIC_SUPPLY_CHANGE_NAME: 'Transazione modifica fornitura piastrella',
        MOSAIC_SUPPLY_CHANGE_MULTISIG_NAME: 'Transazioni multilaterali di modifica del rifornimento di mosaico',
        MOSAIC_SUPPLY_CHANGE_SELECT: 'Seleziona una tessera',
        MOSAIC_SUPPLY_CHANGE_TYPE: 'Cambia tipo',
        MOSAIC_SUPPLY_CHANGE_TYPE_1: 'Creare',
        MOSAIC_SUPPLY_CHANGE_TYPE_2: 'Cancellare',
        MOSAIC_SUPPLY_CHANGE_SUPPLY: 'Fornitura',
        MOSAIC_SUPPLY_CHANGE_CURRENT_SUPPLY: 'Fornitura corrente',
        MOSAIC_SUPPLY_CHANGE_AMOUNT: 'Cambia quantità',
        MOSAIC_SUPPLY_CHANGE_RES_SUPPLY: 'Suprimento resultante',

        // NAMESPACE MODULE
        NAMESPACE_PROVISION_TITLE: 'Crea il record del nome e del cognome',
        NAMESPACE_PROVISION_NAME: 'Nome transazione di registrazione',
        NAMESPACE_PROVISION_MULTISIG_NAME: 'Transazione di registrazione nome multi-tasking...',
        NAMESPACE_PROVISION_PARENT: 'Registrazione del nome genitore',
        NAMESPACE_PROVISION_NEW_ROOT: 'Nuova registrazione del nome radice',
        NAMESPACE_PROVISION_NS: 'Registrazione del nome',
        NAMESPACE_PROVISION_NS_NAME: 'Nome del record',
        NAMESPACE_PROVISION_RESTRICTIONS: 'Restrizioni per la registrazione del nome',
        NAMESPACE_PROVISION_INFORMATION_1: 'I nomi delle registrazioni hanno alcune restrizioni sui personaggi consentiti nella loro composizione, nonché sulla dimensione delle loro parti. Un record del nome radice può avere una lunghezza massima di 16 caratteri, mentre i nomi secondari possono avere una lunghezza massima di 64 caratteri. I caratteri validi sono:',
        NAMESPACE_PROVISION_INFORMATION_2: 'Una parte può iniziare solo con una lettera dell"alfabeto o un numero, quindi \ alice \' è una parte consentita per un record del nome radice, ma \ "_ alice \" non lo è. Alcune parole sono riservate e quindi non sono consentite come record del nome. La registrazione del nome disabilitato:',
        NAMESPACE_PROVISION_INFORMATION_3: 'Questo elenco non è finalizzato e potrebbe essere esteso in futuro. così \'user.alice\' ou \'alice.user\' non sono ammessi nel sistema di registrazione del nome NEM. Il record del nome può avere fino a 3 parti, quindi \'qm.metals.silver\' è valido mentre \'qm.metals.silver.coin\' non lo è.',

        // RENEW NAMESPACE MODULE
        RENEW_NS_TITLE: 'Rinomina record di nomi',
        RENEW_NS_NONE: "Non ci sono record dei nomi da rinnovare",
        RENEW_NS_INFORMATION_TITLE: "Rinnovo dei record dei nomi",
        RENEW_NS_INFORMATION_TITLE_1: "Tariffe",
        RENEW_NS_INFORMATION_TITLE_2: "Record nome radice",
        RENEW_NS_INFORMATION_TITLE_3: "Periodo di rinnovo",
        RENEW_NS_INFORMATION_1: 'Rinnovare un record del nome ha lo stesso costo di registrare un nuovo nome, 100 XEM.',
        RENEW_NS_INFORMATION_2: 'È necessario rinnovare solo i record dei nomi di root. Tutti i record dei sottonome verranno automaticamente rinnovati al momento del rinnovo del record del nome radice.',
        RENEW_NS_INFORMATION_3: 'I contratti di registrazione del nome sono contratti di locazione registrati nella catena di blocchi validi per 1 anno. Il contratto deve essere rinnovato un mese prima o dopo la data di scadenza.',
        RENEW_NS_INFORMATION_4: 'Se non viene rinnovato in tempo, tutti i sottoreti e i record di mosaico creati al suo interno andranno persi.',
        RENEW_NS_ALERT_PART_1: '<b>allarme!</b> La registrazione del nome:',
        RENEW_NS_ALERT_PART_2: 'scade tra meno di un mese! ',
        RENEW_NS_ALERT_PART_3: 'Fare riferimento a<b>pagina di rinnovo</b> per maggiori informazioni',

        // ACCOUNT MODULE
        ACCOUNT_TITLE: "Account",
        ACCOUNT_ACCOUNT_INFORMATION: "Informazioni sull'account",
        ACCOUNT_IMPORTANCE_SCORE: "Punteggio di importanza",
        ACCOUNT_VESTED_BALANCE: "Bilancio di libero passaggio",
        ACCOUNT_HARVESTING: 'Vendemmia',
        ACCOUNT_REMOTE_STATUS: "Stato Remoto",
        ACCOUNT_DELEGATED_PUBLIC: "Chiave pubblica delegata",
        ACCOUNT_HARVESTED_BLOCKS: "Blocchi raccolti",
        ACCOUNT_START_STOP_HARVESTING: "Avvia / arresta raccolta delegata",
        ACCOUNT_HARVESTING_NOTE: 'Il nodo utilizzato per la raccolta in questo account è archiviato nel <b>memorizzazione locale del tuo browser</b>. Se la memoria locale del tuo browser viene cancellata, l"applicazione non saprà quale nodo è stato utilizzato, e quindi il<b>stato di raccolta</b> sarà visualizzato come <b>inattivo</b>. In questo caso, seleziona il nodo che stavi utilizzando e questo ripristinerà automaticamente lo stato della raccolta. Se lo stato non viene ripristinato, controllare di aver selezionato il nodo corretto; in caso contrario, significa che il nodo è stato riavviato e il tuo account non sta più raccogliendo.',
        ACCOUNT_HARVESTING_NODE_SELECT: 'Seleziona un nodo per delegare la raccolta',
        ACCOUNT_HARVESTING_START: 'Inizia la raccolta delegata',
        ACCOUNT_HARVESTING_STOP: 'Smetti di raccogliere delegatia',
        ACCOUNT_HARVESTING_NO_SLOTS: 'Non ci sono spazi liberi nel nodo selezionato, per favore scegline un altro',
        ACCOUNT_HARVESTING_BELOW_THRESHOLD: 'Avete bisogno di 10.000 coperti (vestiti) XEM per iniziare il raccolto delegato',
        ACCOUNT_ACCOUNT_SELECT: 'Seleziona un altro account',
        ACCOUNT_ACCOUNT_SELECT_LABEL: 'Seleziona account',
        ACCOUNT_WALLET_KEYS: 'Portafoglio & chiavi',
        ACCOUNT_ADD_NEW_ACCOUNT: 'Aggiungi un nuovo account',
        ACCOUNT_ADD_NEW_ACCOUNT_BTN: 'Aggiungi un nuovo account nel portafoglio',
        ACCOUNT_PRIVATE_KEY_NOTE: 'La tua chiave privata mantiene la massima potenza sull"intero account. È prioritario assicurare che sia archiviato in modo sicuro, da qualche parte<b><u>offline</u></b>: crittografato con una password in un file .wlt, scritto su un pezzo di carta e in un"immagine, o scaricare il codice QR in<b><u>Esporta portafoglio QR</u></b>.',
        ACCOUNT_PRIVATE_KEY_SHOW: 'Mostra la chiave privata',
        ACCOUNT_EXPORT_MOBILE: 'Esporta su dispositivi mobili',
        ACCOUNT_INFO_QR_BTN: 'Condividi le informazioni sull"account QR',
        ACCOUNT_WALLET_QR_BTN: 'Portafogli QR',
        ACCOUNT_WALLET_QR_BTN_2: 'Esporta portafoglio QR(Android i iOS)',
        ACCOUNT_BACKUP_WALLET: 'Portafoglio di riserva',
        ACCOUNT_BACKUP_WALLET_NOTE: 'Lo è <b><u>molto importante</u></b> di eseguire il backup dei portafogli per accedere con essi o il tuo XEM andrà perso.',
        ACCOUNT_BACKUP_WALLET_DOWNLOAD: 'Scarica portfolio',
        ACCOUNT_INFO_QR_TITLE: 'Informazioni sull"account QR',
        ACCOUNT_WALLET_QR_NOTE: 'Questo QR funziona solo nell"app NEMpay che verrà rilasciata',
        ACCOUNT_WALLET_QR_ANDROID_IOS_TITLE: 'Portafogli QR per app Android e iOS',
        ACCOUNT_ADD_NEW_ACCOUNT_WARNING: 'Tutti gli account sono derivati dalla tua chiave privata e password primaria utilizzando BIP32, quindi sia la tua chiave primaria che la tua password sono necessarie per recuperare / ricreare tutti i tuoi account secondari. <br> Pertanto, si consiglia vivamente di eseguire un backup del proprio portafoglio dopo l"aggiunta di nuovi account in modo da non ripetere l"operazione nuovamente se la memoria locale viene eliminata.',
        ACCOUNT_CUSTOM_NODE: 'Utilizza un nodo personalizzato',
        ACCOUNT_NODE_FROM_LIST: 'Utilizzare un nodo di lista',
        ACCOUNT_DELEGATED_PRIVATE_KEY: 'Chiave privata delegata',
        ACCOUNT_NO_PUBLIC_KEY: 'È necessario effettuare una transazione per generare automaticamente una chiave pubblica',
        ACCOUNT_SHOW_ON_TREZOR_BTN: 'Mostra su TREZOR',
        ACCOUNT_SHOW_ON_LEDGER_BTN: 'Mostra su LEDGER',

        // PORTAL MODULE
        PORTAL_TITLE: 'Acquista casa chester',
        PORTAL_MULTISIG_TITLE: 'Conti multi firma o multiutente',
        PORTAL_MULTISIG_TEXT: 'Gli account a più lati sono contratti modificabili registrati nella catena di blocchi, il modo più efficace per rendere sicuri i vostri fondi, consentire conti congiunti e sono la base dei DAO.',
        PORTAL_MULTISIG_BTN_1: 'Converti un account in multi-segno',
        PORTAL_MULTISIG_BTN_2: 'Modifica un contratto multipartito esistente',
        PORTAL_MULTISIG_BTN_3: 'Iscriviti alle transazioni multi-firma',
        PORTAL_HARVESTING_TITLE: 'Delegato alla vendemmia',
        PORTAL_HARVESTING_TEXT: 'Delegate Harvesting è la funzione che consente di "estrarre" anche quando il tuo account non è aperto nel tuo browser.',
        PORTAL_EXCHANGE_TITLE: 'Intermediazione istantanea',
        PORTAL_EXCHANGE_TEXT: 'Usa i widget di Changelly o ShapeShift per acquistare XEM ai migliori prezzi!',
        PORTAL_EXCHANGE_BTN: 'Acquista ora XEM',
        PORTAL_NS_TITLE: 'Nome Registrazione e sottodomini',
        PORTAL_NS_TEXT: 'I record di nomi sono nomi di dominio. Ogni record di nome è unico e autentica i mosaici (attivi) emessi in essi o nei relativi sottodomini.',
        PORTAL_NS_BTN: 'Crea un nome',
        PORTAL_MOSAIC_TITLE: 'Mosaici',
        PORTAL_MOSAIC_TEXT: 'Le tessere NEM sono risorse che hanno proprietà speciali e altre caratteristiche. Per essere in grado di creare un mosaico, un account deve affittare almeno un record del nome di root.',
        PORTAL_MOSAIC_BTN_1: 'Crea mosaico',
        PORTAL_MOSAIC_BTN_2: 'Modifica tessera',
        PORTAL_APOSTILLE_TITLE: 'Apostille',
        PORTAL_APOSTILLE_TEXT: 'Usa NEM Apostille per creare un servizio di notarile basato su catene di blocchi per registrare, tracciare e controllare l"autenticità dei file.',
        PORTAL_APOSTILLE_BTN_1: 'Creare',
        PORTAL_APOSTILLE_BTN_2: 'Per controllare',
        PORTAL_ADDRESS_BOOK_TEXT: 'Associe nomes de etiqueta aos endereços para gerenciar mais facilmente os seus contatos.',
        PORTAL_ADDRESS_BOOK_BTN: 'Gestisci rubrica',
        PORTAL_INVOICE_TEXT: 'Crea una fattura da condividere con il codice QR',

        // ADDRESS BOOK MODULE
        ADDRESS_BOOK_TITLE: "Rubrica",
        ADDRESS_BOOK_NAVIGATION: 'Navigazione',
        ADDRESS_BOOK_NEW: "Nuovo contatto",
        ADDRESS_BOOK_EDIT: "Modifica contatto",
        ADDRESS_BOOK_REMOVE: "Rimuovi contatto",
        ADDRESS_BOOK_NEW_BTN: 'Aggiungi',
        ADDRESS_BOOK_EDIT_BTN: "Salva",
        ADDRESS_BOOK_REMOVE_BTN: 'Rimuovi',
        ADDRESS_BOOK_EXPORT_BTN: "Esporta rubrica",
        ADDRESS_BOOK_IMPORT_BTN: "Importa rubrica",
        ADDRESS_BOOK_CONTACT_LABEL: "Tag",
        ADDRESS_BOOK_ACCOUNT_ADDRESS: "Indirizzo dell'account",
        ADDRESS_BOOK_ACTIONS: "Azioni",
        ADDRESS_BOOK_CONFIRM_DELETE: "Conferma elimina tutti gli indirizzi della rubrica",

        // EXPLORER MODULE NAV
        EXPLORER_NAV_HOME: 'Home',
        EXPLORER_NAV_NSM: 'Registrazione nomi e piastrelle',
        EXPLORER_NAV_APOSTILLES: "Apostille",

        // EXPLORER HOME MODULE
        EXPLORER_HOME_TITLE: 'Explorer - Home',
        EXPLORER_HOME_NS: "I tuoi record dei nomi",
        EXPLORER_HOME_MOSAICS: "I tuoi mosaici",
        EXPLORER_HOME_NS_MULTISIG: "Record di nomi tenuti in multi-firme",
        EXPLORER_HOME_MOSAICS_LEVY: 'Tax Mosaic',

        // EXPLORER NAMESPACES AND MOSAICS
        EXPLORER_NS_MOS_TITLE: 'Explorer - Registrazione nomi e piastrelle',
        EXPLORER_NS_MOS_SELECT_MOS: "Dettagli mosaico selezionati",
        EXPLORER_NS_MOS_SEARCH: 'Cerca la registrazione del nome',

        // EXPLORER APOSTILLES MODULE
        EXPLORER_APOSTILLES_TITLE: 'Explorer - Apostille',
        EXPLORER_APOSTILLES_YOURS: "Le tue apostole",
        EXPLORER_APOSTILLES_PUBLIC: "Public Collector",
        EXPLORER_APOSTILLES_NO_NTY: 'Nessun file di notarile caricato, fare clic qui per importarne uno.',

        // ACCOUNT EXPLORER
        ACCOUNTS_EXPLORER_TITLE: 'Explorador - Contas',
        ACCOUNTS_EXPLORER_SEARCH: 'Ricercare',

        // APOSTILLE HISTORY MODULE
        APOSTILLE_HISTORY_TITLE: 'Storia Apostille',
        APOSTILLE_HISTORY_BTN_TRANSFER: "Divisione trasferimento / proprietà",
        APOSTILLE_HISTORY_BACKUP: "Backup dei dati di autenticazione notarile",
        APOSTILLE_HISTORY_PURGE: "Elimina i dati di notarile",

        // CREATE APOSTILLE MODULE
        APOSTILLE_CREATE_TITLE: 'Crea apostille',
        APOSTILLE_CREATE_HELP: "Vuoi ulteriori informazioni su Apostille?",
        APOSTILLE_TRANSACTION_NAME: "Transazione Apostile",
        APOSTILLE_TRANSACTION_MULTISIG_NAME: "Transazione di apostille su più lati",
        APOSTILLE_KEEP_PRIVATE: "Privato, scaricabile e modificabile",
        APOSTILLE_USE_DEDICATED: 'Usa account dedicato',
        APOSTILLE_FILES_TO_NOTARIZE: "File da autenticare",
        APOSTILLE_REJECTED: "Rifiutato",
        APOSTILLE_FILE_HASH: 'File Hash',
        APOSTILLE_PRIVATE: 'Privato',
        APOSTILLE_FILENAME: "Nome file",
        APOSTILLE_NAME_TOO_LONG: 'Il nome file è troppo lungo, 32 caratteri è il massimo consentito.',
        APOSTILLE_MAX_NUMBER: "Il massimo di apostille per lotto è 25",
        APOSTILLE_INFORMATION_TITLE: 'Creazione di un"apostille',
        APOSTILLE_INFORMATION_1: 'Ogni file caricato viene elaborato automaticamente con le opzioni impostate nel riquadro di sinistra. È possibile aggiungere nuovi file, modificare parametri e aggiungere altri file con opzioni diverse. Funzionerà anche se si passa alla firma multipla e si aggiungono altri file.',
        APOSTILLE_INFORMATION_2: 'Le opzioni "Privato, scaricabile e aggiornabile" significano che gli hash dei tuoi file saranno firmati con la tua chiave privata e saranno inviati ad un account dedicato alla gerarchia deterministica (HD). nessuno tranne te, sapere quali contenuti sono stati registrati a meno che tu non condivida i tuoi contenuti.',
        APOSTILLE_INFORMATION_3: 'L"account HD dedicato può essere inserito in un contratto multi firma in modo che possa essere trasferito ad altri utilizzando contratti multi-segno con combinazioni di 1-di-1 o m-de-n. Potrebbero inoltre esserci ulteriori informazioni inviate tramite messaggi con aggiornamenti o aggiunte al documento originale o al prodotto rappresentato.',
        APOSTILLE_INFORMATION_4: 'Quando due o più parti desiderano approvare un record nella catena di blocchi, ad es. L"associazione del contratto, l"account che esegue l"autenticazione notarile nella catena di blocco può essere inserito in un contratto multi-firma di n-of-n.',
        APOSTILLE_INFORMATION_5: 'Per gli account in un contratto multi-abbonamento che hai selezionato "<b> Privato, trasferibile e aggiornabile </ b>", la chiave privata iniziale del cofirmatario verrà utilizzata per firmare l"hash e creare un account HD dedicato, non il multi.',
        APOSTILLE_INFORMATION_6: 'L"account HD è un account dedicato generato da un hash del nome del file che è firmato dalla tua chiave privata. Questo hash risultante di questo processo viene quindi utilizzato per formare una seconda chiave privata. Questa è la chiave privata del file con data e ora; un"innovazione nella tecnologia a catena di blocchi trovata solo in Apostille.',
        APOSTILLE_INFORMATION_7: 'L"account HD dedicato consente di archiviare l"hash firmato del file originale e i relativi aggiornamenti in un account dedicato. Se è selezionato <b> "Pubblico" </b>, la transazione passa all"indirizzo di account pubblico (predefinito).',
        APOSTILLE_INFORMATION_8: 'Dopo l"invio delle transazioni, viene attivato un download di file. Contiene i file firmati, il certificato Apostille per quel file e il nuovo file .nty o aggiornato per tenere traccia di tutti i file registrati nella catena NEM.',
        APOSTILLE_NO_NTY: 'Non è stato aggiunto alcun file di notarile, fai clic qui per importarne uno o ne verrà creato uno nuovo automaticamente.',
        APOSTILLE_IMPORT_FILES: 'Importa file',
        APOSTILLE_CREATE_TEXT: 'Crea un documento di testo',
        APOSTILLE_ENTER_TEXT: 'Immettere il testo da autenticare...',
        APOSTILLE_DOCUMENT_TITLE: 'Titolo del documento',
        APOSTILLE_DROPBOX_MESSAGE: 'Inserisci la tua password e i tag che desideri prima di selezionare i file',
        APOSTILLE_DROPBOX_MESSAGE_2: 'Si prega di inserire la password prima di selezionare i file',

        // AUDIT APOSTILLE MODULE
        APOSTILLE_AUDIT_TITLE: 'Audit apostilles',
        APOSTILLE_AUDIT_CHOOSE_NODE: 'Seleziona un nodo',
        APOSTILLE_AUDIT_CHOOSE_NODE_NOTE: 'Solo pochi nodi sono in grado di effettuare ricerche nella cronologia delle transazioni (l"opzione è disabilitata per impostazione predefinita in NIS).',
        APOSTILLE_AUDIT_WRONG_FORMAT: 'Questo file non è in formato Apostille!',
        APOSTILLE_AUDIT_FAIL_NO_PUBLIC_KEY: 'Verifica fallita, il proprietario non ha la chiave pubblica!',
        APOSTILLE_AUDIT_SUCCESS: 'File verificato correttamente!',
        APOSTILLE_AUDIT_FAIL: 'Verifica fallita!',
        APOSTILLE_AUDIT_WAITING: 'Il download di Apostille deve essere in attesa di verifica!',
        APOSTILLE_AUDIT_NOT_FOUND: 'Transazione non trovata, controlla che non stai aspettando la conferma, perché in questo caso l"Apostille non è ancora valida',
        APOSTILLE_AUDIT_ERROR_UNCONFIRMED: 'Si è verificato un errore durante il recupero dei dati non confermati, ma la transazione non è stata trovata.',
        APOSTILLE_AUDIT_ERROR_SIGNER: 'Si è verificato un errore durante la ricerca dei dati del firmatario',
        APOSTILLE_AUDIT_ERROR_SIGNATURE: 'Verifica non riuscita, si è verificato un errore nella verifica della firma!',
        APOSTILLE_AUDIT_INFORMATION_1: 'I file che possono essere controllati devono essere nel formato <b> apostille </ b>',
        APOSTILLE_AUDIT_INFORMATION_2: 'Puoi riconoscerli per nome del file:',
        //APOSTILLE_AUDIT_NON_SIGNED: 'Exemplo não assinado:',
        //APOSTILLE_AUDIT_SIGNED: 'Exemplo assinado:',
        APOSTILLE_AUDIT_FILES: 'Controlla i file',
        APOSTILLE_AUDIT_FORMAT_EXAMPLE: 'Esempio di formato di Apostille',
        APOSTILLE_AUDIT_REMOVE_RECORDS: 'Rimuovi i record localmente',

        // APOSTILLE MESSAGE MODULE
        APOSTILLE_MESSAGE_TITLE: 'Invia un messaggio all"account di notarile',
        APOSTILLE_MESSAGE_NS_BRAND: 'Usa il mio nome per il messaggio di marca',
        APOSTILLE_MESSAGE_ADD_MOSAIC: 'Aggiungi mosaico',
        APOSTILLE_NTY_ACCOUNT: 'Account notarile',
        APOSTILLE_REQUEST_MESSAGE: 'Richiedi un messaggio',
        APOSTILLE_CREATE_MESSAGE_REQUEST: 'Crea un messaggio di richiesta',

        // TRANSFER APOSTILLE OWNLERSHIP MODULE
        APOSTILLE_TRANSFER_TITLE: 'Trasferisci o dividi la proprietà Apostille',

        // UPADTE APOSTILLE MODULE
        APOSTILLE_UPDATE_TITLE: 'Aggiorna apostille',

        // ERROR ALERTS
        ALERT_MISSING_FORM_DATA: 'Compila il modulo!',
        ALERT_ERROR_WALLET_DOWNLOAD: 'Impossibile scaricare il portafoglio perché non esiste!',
        ALERT_PASSWORDS_NOT_MATCHING: 'Le password fornite sono diverse!',
        ALERT_INVALID_KEY_FOR_ADDR: 'La chiave privata non corrisponde all"indirizzo specificato!',
        ALERT_NO_WALLET_LOADED: 'Non puoi accedere al dashboard senza portafoglio',
        ALERT_WALLET_NAME_EXISTS: 'Esiste già un portafoglio con lo stesso nome!',
        ALERT_INVALID_WALLET_FILE: 'Stai provando a caricare un file che non è un portafoglio!',
        //ALERT_NO_NODE_SET: 'Por favor entre com um nodo!',
        ALERT_INVALID_CUSTOM_NODE: 'Il tuo nodo personalizzato non è valido!',
        ALERT_INVALID_WEBSOCKET_PORT: 'La porta websocket del nodo personalizzato non è valida!',
        ALERT_MIJIN_DISABLED: 'La rete Mijin è disabilitata, scegli un"altra rete!',
        ALERT_GET_NS_BY_ID_ERROR: 'Errore durante il recupero delle informazioni di registrazione del nome, per motivo:',
        ALERT_GET_ACCOUNT_DATA_ERROR: 'Errore nel recupero dei dati dell"account, per motivo:',
        ALERT_ERROR_OCCURRED: 'Si è verificato un errore!',
        ALERT_INVALID_ADDR_FOR_NETWORK: 'non corrisponde alla rete',
        ALERT_INVALID_PASSWORD: 'La password fornita non è valida!',
        ALERT_COSIG_ALREADY_IN_LIST: 'destinatario è già presente nell"elenco delle modifiche!',
        ALERT_COSIGNATORY_HAS_NO_PUBLIC: 'Destinatario deve avere almeno una transazione per possedere una chiave pubblica!',
        ALERT_MULTISIG_HAS_NO_PUBLIC: 'Gli account con firma multipla devono avere almeno una transazione per possedere una chiave pubblica!',
        ALERT_COSIG_CANNOT_BE_MULTISIG: 'L"account selezionato per la conversione è destinatario in un altro account multi-lato. Pertanto non può essere convertito.',
        ALERT_NO_NS_OWNED: 'L"account non ha la registrazione del nome, per favore creane uno o cambia account.',
        ALERT_UNLOCKED_INFO_ERROR: 'Si è verificato un errore durante il recupero delle informazioni di sblocco',
        ALERT_LOCK_ERROR: 'Errore dell"account di cattura, per motivo: ',
        ALERT_UNLOCK_ERROR: 'Errore durante lo sblocco dell"account, per motivo: ',
        ALERT_SUPERNODES_ERROR: 'Si è verificato un errore durante il recupero dei dati dal supernodo!',
        ALERT_INVALID_NTY_FILE: 'Il file fornito non è un file di autenticazione notarile!',
        ALERT_CREATE_WALLET_FAILED: 'Impossibile creare il portafoglio, per ragioni: ',
        ALERT_REQUEST_FAILED: 'Request failed, reason: ',
        ALERT_DERIVATION_FROM_SEED_FAILED: 'Impossibile ottenere l"account seme, per il motivo: ',
        ALERT_BIP32_GENERATION_FAILED: 'Impossibile generare dati BIP32, per il motivo: ',
        ALERT_NO_WALLET_DATA: 'Errore, dati del portafoglio vuoti!',
        ALERT_CANNOT_LOGIN_WITHOU_WALLET: 'Errore, impossibile accedere senza portafoglio!',
        ALERT_NO_WALLET_TO_SET: 'Bug, non puoi non scegliere un portafoglio!',
        ALERT_INVALID_WALLET_INDEX: 'Errore, l"indice dell"account selezionato è fuori limite!',
        ALERT_NO_CURRENT_WALLET: 'Errore, impossibile impostare l"account del wallet se non esiste un portafoglio corrente!',
        ALERT_ALREADY_MULTISIG: 'L"account selezionato è già un account multi-lato!',
        ALERT_INVALID_MODIFICATION_ARRAY: 'Un account multi-lato non può essere un simbolo di sé stesso, per favore controlla il tuo elenco di modifiche!',
        ALERT_GET_MARKET_INFO_ERROR: 'Si è verificato un errore durante il tentativo di recuperare informazioni di mercato!',
        ALERT_MULTISIG_CANNOT_BE_COSIG: 'Un account multi-lato non può essere configurato come co-firmatario!',
        ALERT_PURGE_CANCELLED: 'Rimozione annullata!',
        ALERT_MAINNET_DISABLED: 'Mainnet è disabilitato, per favore scegli un"altra rete!',
        ALERT_EMPTY_DECODED_MSG: 'Si è verificato un errore, nessun messaggio decodificato!',
        ALERT_INVALID_NS_NAME: 'Il nome di registrazione del nome non è valido!',
        ALERT_INVALID_MOSAIC_NAME: 'Il nome del mosaico non è valido!',
        ALERT_MOSAIC_DESCRIPTION: 'La descrizione del mosaico è troppo lunga!',
        ALERT_GET_INCOMING_TXES_ERROR: 'Si è verificato un errore durante la ricerca delle transazioni in entrata, per il motivo: ',
        ALERT_GET_MOSAICS_DEFINITIONS_ERROR: 'Errore durante il recupero della definizione del mosaico, per il motivo: ',
        ALERT_GET_SUB_NS_ERROR: 'Errore durante il recupero dell"impostazione di registrazione del nome, per il motivo: ',
        ALERT_GET_MOSAICS_ERROR: 'Errore nel recupero delle tessere, per il motivo: ',
        ALERT_GET_TRANSACTIONS_ERROR: 'Errore durante il recupero delle transazioni, per motivo:',
        ALERT_INVALID_ADDRESS_BOOK_FILE: 'Questo file non è nel formato .adb!',
        ALERT_INVALID_ADDRESS: 'L"indirizzo fornito non è valido!',
        ALERT_INVALID_AMOUNT: 'La quantità non è valida!',
        ALERT_INVALID_PRIVATE_KEY: 'La chiave privata fornita non è valida!',
        ALERT_FILE_SIZE_ERROR: ' è troppo grande, la dimensione massima consentita è 100 MB',
        ALERT_MESSAGE_DECODE_KEY_ERROR: 'Si è verificato un errore di decodifica del messaggio perché l"account non ha una chiave pubblica visibile sulla rete',
        ALERT_FETCH_TIME_SYNC_ERROR: 'Si è verificato un errore durante il recupero del tempo di rete!',
        ALERT_MULTISIG_MIN_SIGNATURE: 'Un account con più firme richiede almeno un destinatario',
        ALERT_BTC_MARKET_ERROR: 'Errore durante il recupero del prezzo di Bitcoin',
        ALERT_COSIG_REMOVAL_LIMIT: 'Solo un cofirmatario può essere rimosso alla volta.',
        ALERT_MULTISIG_MIN_SIGNATURE_INVALID: 'Numero non valido per iscrizioni minime.',
        ALERT_INSUFFICIENT_BALANCE: 'Equilibrio insufficiente per completare la transazione.',
        ALERT_VOTING_ERROR: 'Voto non valido',
        ALERT_BRAIN_PASSWORD_TOO_SHORT: 'La password per il portafoglio mentale deve contenere almeno 40 caratteri!',
        ALERT_NODE_SEEMS_OFFLINE: 'Il nodo sembra essere offline, per favore selezionane un altro',
        ALERT_WEAK_PASSPHRASE: 'Il punteggio della password deve essere almeno 3',
        ALERT_BRAIN_WALLET_UPGRADE: 'La password per il tuo portafoglio mentale sembra debole! Tutti i portafogli della mente devono utilizzare una password di almeno 40 caratteri. Ti consigliamo di creare un semplice portafoglio, dalla pagina di registrazione, e spostare i fondi su di esso. Maggiori informazioni <a href="https://forum.nem.io/t/2791" target="_blank"><u>qui</u></a>.',
        ALERT_RECIPIENT_PUBLIC_KEY: 'Il destinatario non ha una chiave pubblica visibile sulla rete.',
        ALERT_ENCRYPT_MULTISIG: 'Non è possibile inviare messaggi crittografati da un account multi-dominio.',
        ALERT_EXCHANGE_NEEDS_MESSAGE: 'Il destinatario è un intermediario di portafoglio e pertanto richiede che venga accreditato correttamente un messaggio per il deposito. Per favore leggi attentamente le istruzioni per il deposito del tuo broker!',
        ALERT_ACCOUNT_ALREADY_IN_ADDRESS_BOOK: 'L"indirizzo esiste già nel libro dei contatti!',
        ALERT_MAX_MOSAIC_SUPPLY: 'L"offerta massima per il mosaico è 9\'000\'000\'000',
        ALERT_GET_MOSAIC_SUPPLY_ERROR: 'Errore nel recupero dell"offerta di mosaico, per la ragione:',
        ALERT_ENCRYPTED_MSG_OFFLINE: 'I messaggi crittografati non sono abilitati per le transazioni offline.',

        // SUCCESS ALERTS
        ALERT_CREATE_WALLET_SUCCESS: 'Portafoglio creato e caricato con successo!',
        ALERT_SUCCESS_PURGE: 'Memoria locale rimossa con successo!',
        ALERT_SUCCESS_LOGOUT: 'Logout fatto con successo!',
        ALERT_LOAD_WALLET_SUCCESS: 'Wallet caricato con successo!',
        ALERT_TRANSACTION_SUCCESS: 'Transazione inviata con successo!',
        ALERT_GENERATE_ACCOUNT_SUCCESS: 'Account generato con successo. Ricordati di scaricare il file .wlt aggiornato dal tuo portafoglio!',
        ALERT_UPGRADE_SUCCESS: 'Portfolio aggiornato con successo!',
        ALERT_SIGNATURE_SUCCESS: 'Transazione firmata con successo!',
        ALERT_NTY_FILE_SUCCESS: '.nty file caricato con successo!',
        ALERT_INCOMING_TX_FROM: 'Transazione in arrivo proveniente da ',
        ALERT_ADDRESS_BOOK_FILE_SUCCESS: 'Importazione dei contatti con successo!',
        ALERT_VOTING_SUCCESS: 'Vota inviata con successo!',
        ALERT_POLL_CREATION_SUCCESS: 'Sondaggio creato con successo!',
        ALERT_COPY_SIGNED_TX_SUCCESS: 'Transazione firmata copiata con successo!',

        // CONVERT ACCOUNT TO MULTISIG
        AGGREGATE_MODIFICATION_TITLE: 'Converti un account in multi-segno',
        AGGREGATE_MODIFICATION_NAME: 'Operazione di modifica aggregata',
        AGGREGATE_MODIFICATION_MULTISIG_NAME: "Aggrega transazione di modifica multi-firma",
        AGGREGATE_ACCOUNT_SELECT_TITLE: 'Account da convertire',
        AGGREGATE_ACCOUNT_SELECT: 'Seleziona un account da convertire',
        AGGREGATE_CUSTOM_ACCOUNT: 'Chiave di importazione',
        AGGREGATE_ACCOUNT_TO_CONVERT_PRIVATE_TITLE: 'Private Address Key',
        AGGREGATE_ACCOUNT_TO_CONVERT: 'Account per convertire l"indirizzo',
        AGGREGATE_ACCOUNT_TO_CONVERT_PRIVATE: 'Account per convertire la chiave privata',
        AGGREGATE_ADD_PLACEHOLDER: 'Account co-firmatario o L"Aggiungi approvato',
        AGGREGATE_ADD_BTN_TITLE: 'Aggiungi firmatario',
        AGGREGATE_MIN_SIGNATURES: 'Richieste firme minime',
        AGGREGATE_MIN_SIGNATURES_PLACEHOLDER: 'Minimo di firme necessarie per convalidare una transazione',
        AGGREGATE_MODIFICATION_LIST: 'Elenco delle modifiche',
        AGGREGATE_COSIG_LIST: 'Elenco indirizzi di Cosignatarios',
        AGGREGATE_MODIFICATION_EDIT_TITLE: 'Modifica un contratto multi firma',
        AGGREGATE_MODIFICATION_EDIT_SELECT_TITLE: 'Account da modificare',
        AGGREGATE_MODIFICATION_EDIT_SELECT: 'Seleziona un account da modificare',
        AGGREGATE_ADD_REMOVE_TITLE: 'Aggiungi / Rimuovi firmatario',
        AGGREGATE_ADD_REMOVE_PLACEHOLDER: 'Account del co-firmatario o @approvato per aggiungere',
        AGGREGATE_MODIFICATION_RELATIVE_CHANGE: 'Modifiche richieste alla firma',
        AGGREGATE_MODIFICATION_RELATIVE_CHANGE_PLACEHOLDER: 'Numero di firme da aggiungere (n) o rimuovere (-n) - Rimozioni automatizzate',
        AGGREGATE_SELECTED_ACCOUNT_INFO: 'Informazioni sull"account selezionato',
        AGGREGATE_MIN_SIGNATURES: 'Firme minime',
        AGGREGATE_SELECT_WALLET_ACCOUNT: 'Usa l"account di portafoglio',
        AGGREGATE_ADD_COSIG: 'Aggiungi destinatario',
        AGGREGATE_REMOVE_COSIG: 'Rimuovere il destinatario',

        // SIGN MULTISIGNATURE TRANSACTIONS
        SIGN_MULTISIG_TRANSACTIONS_TITLE: 'Iscriviti a transazioni multi-firma',

        // LOGIN MODULE
        LOGIN_MEMBER_TITLE: 'Sei già un NEMBer?',
        LOGIN_UPGRADE_TITLE: 'Il portafoglio ha bisogno di un aggiornamento',
        LOGIN_UPGRADE_MESSAGE: 'Il portafoglio selezionato ha bisogno di un aggiornamento. Questa azione genererà una chiave pubblica secondaria e la aggiungerà al tuo account principale.',
        LOGIN_UPGRADE_BUTTON: 'Portafoglio degli aggiornamenti',
        LOGIN_IMPORT_BUTTON: 'Importa portafoglio',
        LOGIN_SELECT_WALLET_YOURS: 'Seleziona il portafoglio',
        LOGIN_SELECT_WALLET: 'Seleziona un portafoglio dalla tua memoria locale',
        LOGIN_LOGIN_BUTTON: 'Accedi',
        LOGIN_NOTE: 'Non hai i portafogli? Importa uno o <a href="#!/signup">Creerò un portfolio</a>.',

        // SIGNUP MODULE
        SIGNUP_TITLE: 'Nuovo per NEM?',
        SIGNUP_SELECT_WALLET_TYPE: 'Seleziona un tipo di portafoglio da creare',
        SIGNUP_SELECT_WALLET_TYPE_STAND_BY: 'Posiziona il cursore su un tipo di portafoglio per visualizzare le tue informazioni.',
        SIGNUP_CREATE_WALLET_TITLE: 'Simple Wallet',
        SIGNUP_CREATE_WALLET_INFO: "I portafogli semplici contengono una chiave privata primaria generata casualmente.",
        SIGNUP_PRIVATE_KEY_WALLET_TITLE: "Portafoglio chiave privata",
        SIGNUP_PRIVATE_KEY_WALLET_INFO: "I portafogli con chiave privata contengono una chiave privata che desideri importare.",
        SIGNUP_BRAIN_WALLET_TITLE: 'Mental Wallet',
        SIGNUP_BRAIN_WALLET_INFO: 'I portafogli mentali contengono una chiave privata generata da una password. Ciò rende possibile il recupero del portafoglio solo utilizzando esattamente la stessa password.',
        SIGNUP_CREATE_WALLET_BUTTON: "Crea portafoglio semplice",
        SIGNUP_PRIVATE_KEY_WALLET_BUTTON: "Crea portafoglio a chiave privata",
        SIGNUP_BRAIN_WALLET_BUTTON: "Crea portfolio mentale",
        SIGNUP_CREATE_WALLET_WARNING: 'Si prega di saperne di più <a href="https://www.w3.org/TR/2014/WD-WebCryptoAPI-20140325/#RandomSource-interface" rel="nofollow" target="_blank"><b>pericoli</b></a> che le chiavi generate sul lato client possono contenere; non siamo responsabili per eventuali perdite che possono verificarsi a causa di problemi relativi all"entropia nella generazione delle chiavi. Anche se è molto difficile da fare, si consiglia di utilizzare una chiave privata generata da una fonte con una forte entropia.',
        SIGNUP_NETWORK_SELECT: 'Seleziona una rete',
        SIGNUP_NETWORK_MAINNET: 'Mainnet è la rete principale <b><u>reale</u></b>di NEM. Gli indirizzi iniziano con \'N\'.',
        SIGNUP_NETWORK_TESTNET: 'Testnet è la rete per <b><u>testes</u></b>. Gli indirizzi iniziano con\'T\'.',
        SIGNUP_NETWORK_MIJIN: 'Mijin è la versione privata di NEM. Gli indirizzi iniziano con \'M\'.',
        SIGNUP_BRAIN_WALLET_WARNING: 'Si prega di saperne di più <a href="https://en.bitcoin.it/wiki/Brainwallet" rel="nofollow" target="_blank"><b>perigos</b></a> cosa possono contenere i portafogli mentali. I portafogli mentali utilizzano solo una password che passa attraverso più hash. Pertanto è fondamentale selezionare una password SEGURO di almeno 40 caratteri. <a href="https://xkcd.com/936/" rel="nofollow" target="_blank"><b>XKCD #936</b></a>',
        SIGNUP_PRIVATE_KEY_WALLET_WARNING: 'I wallet delle chiavi private utilizzano SOLO una password per crittografare la chiave privata importata. Pertanto è fondamentale selezionare una password SAFE.',
        SIGNUP_CREATE_START_WARNING: 'Por favor, siga cada passo com muita atenção!',
        SIGNUP_CREATE_START_CONNECTION_WARNING: 'Si consiglia di disconnettersi da Internet mentre si sta creando il portafoglio e il backup dei dati.',
        SIGNUP_CREATE_READY_BTN: "Pronto",
        SIGNUP_CREATE_ENTER_NAME: "Inserisci il nome del portafoglio",
        SIGNUP_CREATE_ENTER_PASSWORD: 'Inserisci una password',
        SIGNUP_CREATE_ENTER_PASSPHRASE: 'Inserisci una pass password',
        SIGNUP_CREATE_CONFIRM_PASSWORD: 'Conferma password inserita sopra',
        SIGNUP_CREATE_CONFIRM_PASSPHRASE: 'Conferma la password che hai inserito sopra',
        SIGNUP_CREATE_ENTER_PRIVATE_KEY: "Inserisci la chiave privata",
        SIGNUP_CREATE_ADDRESS_FROM_PK: "Indirizzo corrispondente alla chiave sopra",
        SIGNUP_CREATE_WALLET_ADD_ENTROPY_INFO: 'Ora genereremo la tua chiave privata primaria. <b> Fai clic su start e sposta il cursore sullo schermo per aggiungere più entropia.</b>',
        SIGNUP_COMMON_WALLET_WARNING_TITLE: 'Protocollo di sicurezza dell"account',
        SIGNUP_COMMON_WALLET_WARNING_1: 'I portfolio sono temporaneamente <b> <u> </ b> memorizzati nella memoria locale del tuo browser! I browser possono essere configurati (ad es. Da componenti aggiuntivi) per pulire di tanto in tanto lo storage locale. Questo può portare alla perdita di dati e non può essere annullato facilmente. In questo caso, il tuo portafoglio andrà perso, quindi è molto importante assicurarsi di aver eseguito il backup di tutte le informazioni necessarie per ripristinare il tuo portafoglio.',
        SIGNUP_COMMON_WALLET_WARNING_2: 'Clicca qui sotto per scaricare il tuo portafoglio. Questo è il file <b> <i> .wlt </ i> </ b> utilizzato per eseguire il backup del tuo portafoglio se la memoria locale del tuo browser viene cancellata.',
        SIGNUP_COMMON_WALLET_WARNING_3: 'Se non hai scaricato il file <b> <i> .wlt </ i> </ b>, fai clic sul pulsante qui sotto per visualizzare i dati del portafoglio originale e creare il file manualmente:',
        SIGNUP_COMMON_WALLET_WARNING_4: 'Anche se hai il file di portafoglio <b> <u> richiesto </ b> per eseguire il backup della chiave primaria del tuo account, fai clic sul pulsante in basso per visualizzare:',
        SIGNUP_COMMON_WALLET_WARNING_5: 'È tua responsabilità assicurarti di avere un backup sicuro della tua chiave privata prima di inviare fondi nel tuo account.',
        SIGNUP_COMMON_WALLET_WARNING_6: 'Ogni portafoglio ha una <b> <u> chiave privata primaria </ b> (la tua è mostrata sotto) che viene utilizzata per creare account secondari deterministici (BIP32). Questa funzione richiede l"uso della stessa password </u> </b> o genererà account secondari diversi per la stessa chiave privata primaria. Quando esegui il backup dei tuoi dati, non dimenticare <b> <u> annotare la tua password </u> </b>.',
        SIGNUP_COMMON_WALLET_WARNING_BTN_1: 'Visualizza il file del portafoglio originale',
        SIGNUP_COMMON_WALLET_WARNING_BTN_1_INFO: 'Per creare un file di portafoglio, creare un file di testo vuoto e posizionare la chiave sopra, codificata in base64, al suo interno. Salva il file come <b> <i> wallet_name.wlt </i> </b>.',
        SIGNUP_COMMON_WALLET_WARNING_BTN_2: 'Mostra la chiave privata',
        SIGNUP_COMMON_WALLET_WARNING_BTN_2_INFO: 'Per eseguire il backup della chiave privata, stamparla o salvarla in un file di testo. Ti consigliamo vivamente di salvare la tua chiave privata in un luogo disconnesso sicuro.',
        SIGNUP_COMMON_WALLET_WARNING_FOOTER: 'Facendo clic di seguito, si accetta di avere la chiave privata, la password e il file del portafoglio archiviato in un backup sicuro.',
        SIGNUP_COMMON_WALLET_WARNING_CONFIRM_1: "Possiedo il file nel mio portafoglio",
        SIGNUP_COMMON_WALLET_WARNING_CONFIRM_2: "Ho la chiave privata e la password",
        SIGNUP_COMMON_WALLET_WARNING_CONFIRM_3: "Sono d'accordo",
        SIGNUP_COMMON_WALLET_WARNING_UNDERSTOOD: "Compreso",
        SIGNUP_COMMON_WALLET_WARNING_DOWNLOAD: "Scarica Wallet",
        SIGNUP_ESTIMATED_PASSPHRASE_STRENGTH: "Stima della password",
        SIGNUP_ESTIMATED_GUESS_TIMES: "Tempo stimato per indovinare",

        // FAQ MODULE
        FAQ_TITLE: 'Domande frequenti',
        FAQ_QUESTION_1: 'Come funziona Nano Wallet?',
        FAQ_ANSWER_1: 'Il portafoglio Nano è realizzato con AngularJS ed ES6. È un"applicazione che funziona totalmente sul lato client e non invia mai alcuna informazione sensibile attraverso i cavi; tutto accade nel tuo browser locale, dalla creazione delle chiavi private alla firma delle transazioni.',
        FAQ_QUESTION_2: 'È gratuito da usare?',
        FAQ_ANSWER_2: 'Assolutamente tutte le operazioni sono a carico del cliente, solo tu controlli le tue monete, nessun terzo coinvolto e nessun costo aggiuntivo.',
        FAQ_QUESTION_3: 'Perché possiedo già un mosaico?',
        FAQ_ANSWER_3: 'Poiché XEM è la valuta predefinita della catena di blocchi NEM, ogni utente lo ha già registrato nel proprio portafoglio anche quando il saldo è pari a 0. La sua registrazione del nome è NEM e il nome del mosaico è XEM',
        FAQ_QUESTION_4: 'Mappa dello sviluppo?',
        FAQ_ANSWER_4: 'L"attuale mappa di sviluppo include l"integrazione di tutte le funzionalità di Nano Wallet v1.x.x e il completamento di progetti finanziati dalla comunità per lavorare attraverso questo portfolio.',
        FAQ_QUESTION_5: 'Come posso ottenere XEM gratuitamente?',
        FAQ_ANSWER_5: 'I tap XEM sono attualmente fuori servizio ma puoi consultare il forum NEM per saperne di più sul programma di premi NEM.',
        FAQ_QUESTION_6: 'Dove trovare ulteriori informazioni su NEM?',
        FAQ_ANSWER_6_FORUM: 'Forum ufficiale',
        FAQ_ANSWER_6_WEBSITE: 'Sito ufficiale',
        FAQ_ANSWER_6_BTT: 'Argomento ufficiale su BitcoinTalk',
        FAQ_QUESTION_7: 'Nulla viene visualizzato sul pannello.',
        FAQ_ANSWER_7: 'Si prega di controllare il cerchio del nodo nella barra di navigazione in alto. <br> Cerchio rosso indica che la connessione al nodo non è riuscita. <br> Fai clic sul "Nodo" e seleziona un altro dall"elenco o utilizza un nodo personalizzato. <br> <a href="https://supernodes.nem.io" target="_blank"> Supernodes.nem.io </a> ha un elenco di nodi che puoi utilizzare.</a>',
        FAQ_QUESTION_8: 'I pignoratori non possono vedere la transazione da firmare.',
        FAQ_ANSWER_8: 'In questo caso, andare su "Servizi", cercare "Account multi-firma o multi-utente" e fare clic su "Firma transazioni multi-firma".',
        FAQ_QUESTION_9: 'Quali sono le migliori pratiche di sicurezza?',
        FAQ_ANSWER_9: 'Ti consigliamo vivamente di conservare sempre le tue chiavi private su carta. <br> Puoi stamparli e salvarli in un posto sicuro. <br> <br> Per quanto riguarda i file di portafoglio, è necessario conservare sempre più copie in diversi ambienti freddi (scollegati) come le schede USB. <br> Le password devono essere uniche e complesse, quindi scrivile sempre prima. <br> <br> Quando vuoi controllare il tuo portafoglio o eseguire operazioni: <br> - Collega la tua scheda usb <br> - Importa il tuo portafoglio in Nano <br> <br> Scollega la tua scheda USB. <br> < Una copia del tuo portafoglio verrà archiviata nella memoria locale non appena ne avrai bisogno.Una volta terminato, esci e rimuovi i portafogli dalla tua memoria locale con il pulsante Elimina sul lato destro della barra dei piè di pagina.',
        FAQ_QUESTION_10: 'Dove posso trovare informazioni sul mio account (indirizzo, ecc.)?',
        FAQ_ANSWER_10: 'Se guardi nella barra di navigazione in alto, vedrai il pulsante <b> <i> "Account" </ b> </ i> tra <b> <i> "Nodo" </ i> e <b> <i> "Lingua" </ b> </ i>. Qui puoi trovare il tuo indirizzo, la chiave pubblica, il saldo coperto e altri dati importanti.',
        FAQ_QUESTION_11: 'Ho depositato XEM in una casa di brokeraggio ma nulla è stato accreditato?',
        FAQ_ANSWER_11_1: 'Prima devi verificare che l"hash della tua transazione stia puntando a una transazione esistente in <a target="_blank" href="http://chain.nem.ninja"> explorer </a> (tieni presente che la explorer è sempre a pochi isolati di distanza).',
        FAQ_ANSWER_11_2: 'La maggior parte degli intermediari richiedono un ID transazione per accreditare il deposito. Assicurati di aver seguito attentamente le istruzioni del broker e aggiunto il messaggio non criptato come richiesto.',
        FAQ_ANSWER_11_3: 'Anche se hai aggiunto il messaggio, potrebbe accadere che le intermediazioni non elaborino il tuo deposito, a causa di problemi dalla loro parte.',
        FAQ_ANSWER_11_4: 'È necessario contattare l"assistenza di brokeraggio e spiegare la situazione inviando loro l"hash della transazione.',
        FAQ_QUESTION_12: 'Come verificare se sono su una forcella?',
        FAQ_ANSWER_12_1: 'Clicca su<b><i>"Nodo"</b></i>, nella barra di navigazione in alto, per aprire il pannello del nodo.',
        FAQ_ANSWER_12_2: 'Controllare il numero del blocco e confrontarlo con il numero visualizzato <a target="_blank" href="http://hugealice.nem.ninja:7890/chain/height">qui</a>.',
        FAQ_ANSWER_12_3: 'Se è diverso in più di 5 blocchi, probabilmente sei su una biforcazione.',
        FAQ_ANSWER_12_4: 'Per correggere, basta scegliere un altro nodo dall"elenco nel pannello dei nodi, questo ripristinerà il tuo account allo stato corrente nella rete reale.',

        // FORM RELATED
        FORM_PASSWORD_FIELD_PLACEHOLDER: 'Inserisci la password per il tuo portafoglio',
        FORM_WALLET_NAME_FIELD_PLACEHOLDER: 'Nome del portafoglio',
        FORM_SIGNUP_PASSWORD_FIELD_PLACEHOLDER: 'Password',
        FORM_PASSWORD: 'Password',
        FORM_PASSWORD_CONFIRM: 'Conferma password',
        FORM_PASSPHRASE_CONFIRM: 'Conferma passcode',
        FORM_CONFIRM_PASSWORD_FIELD_PLACEHOLDER: 'Conferma la password',
        FORM_PASSPHRASE_FIELD_PLACEHOLDER: 'Passkey',
        FORM_CONFIRM_PASSPHRASE_FIELD_PLACEHOLDER: 'Conferma la password',
        FORM_ADDRESS_FIELD_PLACEHOLDER: 'Indirizzo dell"account',
        FORM_PRIVATE_KEY_FIELD_PLACEHOLDER: 'Chiave privata',
        FORM_SIDE_BTN_BALANCE: 'Balance',
        FORM_SIDE_BTN_PAY_TO: 'Paga per',
        FORM_SIDE_BTN_TX_FEE: 'Tariffa di transazione',
        FORM_SIDE_BTN_RENTAL_FEE: 'Tasso di noleggio',
        FORM_SIDE_BTN_LEVY_FEE: 'Aliquota fiscale',
        FORM_RECIPIENT_PLACEHOLDER: 'Indirizzo destinatario o @apelid',
        FORM_INVOICE_RECIPIENT_PLACEHOLDER: 'Indirizzo destinatario',
        FORM_SIDE_BTN_ALIAS_OF: 'Nickname',
        FORM_MESSAGE_PLACEHOLDER: 'Messaggio',
        FORM_MOSAIC_NAME_PLACEHOLDER: 'Nome tessera',
        FORM_ADDRESS_ALIAS_PLACEHOLDER: 'Indirizzo dell"account o @apelid',
        FORM_BTN_GET_ALIAS: 'Ottieni l"indirizzo di registrazione del nome',
        FORM_BTN_OPEN_ADB: 'Apri rubrica',
        FORM_SELECT_NAMESPACE: 'Seleziona un record del nome',

        // MODULO VOTAZIONI
        PORTAL_VOTING_TITLE: 'Votazione',
        PORTAL_VOTING_TEXT: 'Crea e vota nei sondaggi',
        PORTAL_VOTING_BTN1: 'Visualizza sondaggi',
        PORTAL_VOTING_BTN2: 'Crea votazioni',
        FORM_TITLE_FIELD_PLACEHOLDER: 'Titolo',
        FORM_DESCRIPTION_FIELD_PLACEHOLDER: 'Scrivi la tua descrizione qui',
        FORM_OPTION_FIELD_PLACEHOLDER: 'scrivi un"opzione',
        FORM_WHITELIST_FIELD_PLACEHOLDER: 'indirizzo dell"account',
        FORM_SELECT_MULTISIG: 'Seleziona un account multi-firma',
        FORM_SELECT_CONTACT: 'Seleziona un contatto',

        // TREZOR RELATED
        TREZOR_TITLE: 'TREZOR',
        TREZOR_TEXT: 'Il portafoglio hardware TREZOR ti consente di conservare le tue XEM, bollette a più conti con mosaico',
        TREZOR_BUTTON: 'Accedi con TREZOR',

        // LEDGER NANO RELATED
        LEDGER_NANO_TITLE: 'LEDGER NANO',
        LEDGER_NANO_TEXT: 'Il portafoglio hardware LEDGER NANO ti consente di conservare le tue XEM, bollette a più conti con mosaico',
        LEDGER_NANO_BUTTON: 'Accedi con LEDGER NANO',
        LEDGER_NANO_NO_DEVICE: 'Ledger device not found',
        LEDGER_NANO_CHECK_DEVICE: 'Please check your Ledger device!',
        LEDGER_NANO_NOT_USING_NEM_APP: 'You are not using NEM app on your Ledger device',
        LEDGER_NANO_NOT_USING_XYM_APP: 'You are not using Symbol app on your Ledger device',
        LEDGER_NANO_NOT_SUPPORTED_APP: 'Please check if you have an up-to-date NEM application open on your Ledger device',
        LEDGER_NANO_CONNECTED_OTHER_APP: 'Another app is already connected to your Ledger device. Please close it then try again',
        LEDGER_NANO_NOT_OPENED_NEM_APP: 'Please open NEM app on your Ledger device',
        LEDGER_NANO_NOT_OPENED_XYM_APP: 'Please open Symbol app on your Ledger device',
        LEDGER_NANO_DEVICE_LOCKED: 'Please unlock your Ledger device',
        LEDGER_NANO_USER_REJECT_LOGIN: 'Login cancelled by user',
        LEDGER_NANO_USER_REJECT_REQUEST: 'Request cancelled by user',
        LEDGER_NANO_FOLLOW_INSTRUCTION: 'Follow instructions on your Ledger device',
        LEDGER_NANO_TRANSACTION_TOO_BIG: 'The transaction is too big to sign on your Ledger device',
        LEDGER_NANO_TRANSACTION_USER_CANCEL: 'Signing cancelled by user',
        LEDGER_NANO_TRANSACTION_FAILED: 'Failed to sign transaction, reason: ',
        LEDGER_NANO_OPTIN_INFO_1: 'You can use Symbol Ledger app to get account for Symbol Opt-in.',
        LEDGER_NANO_OPTIN_INFO_2: 'Please open Symbol Ledger app on your device and click on Import Symbol account.',
        LEDGER_NANO_IMPORT_SYMBOL: 'Import Symbol account',

        // CREATE OFFLINE TRANSACTION MODULE
        OFFLINE_TX_TITLE: 'Preparare una transazione offline',
        OFFLINE_TX_NO_WALLET: 'Si prega di importare un portafoglio dal modulo di login per visualizzare il modulo.',
        OFFLINE_TX_INFO_1: 'Assicurati di essere disconnesso da Internet quando stai importando il tuo portafoglio e creando la transazione!',
        OFFLINE_TX_INFO_2: 'È possibile creare solo transazioni semplici perché è richiesta la connessione per recuperare mosaici e informazioni multi-firma dai nodi NEM.',
        OFFLINE_TX_INFO_3: 'Dopo aver fatto clic sul pulsante "crea" nel pannello di sinistra, troverai la transazione firmata di seguito.',
        OFFLINE_TX_INFO_4: 'Una transazione firmata è immutabile e sarà efficace solo se verrà trasmessa alla rete prima della scadenza predefinita di 24 ore.',
        OFFLINE_TX_SIGNED: 'Transazione firmata',
        OFFLINE_TX_RELEASE: 'Aprire sul modulo di trasmissione',

        // RELEASE OFFLINE TRANSACTION MODULE
        RELEASE_OFFLINE_TX_TITLE: 'Trasmettere una transazione alla rete',
        RELEASE_OFFLINE_TX_PARAMETERS: 'Parametri di transazione',
        RELEASE_OFFLINE_TX_INFO_1: 'Per trasmettere una transazione devi essere connesso a Internet.',
        RELEASE_OFFLINE_TX_INFO_2: 'Assicurarsi di aver selezionato la rete corretta e un nodo in esecuzione o la transazione è stata rifiutata.',
        RELEASE_OFFLINE_TX_INFO_3: 'Non è possibile inviare una transazione firmata due volte. Una transazione firmata genererà sempre lo stesso hash e due transazioni non possono avere lo stesso hash.',
        RELEASE_OFFLINE_TX_INFO_4: 'È possibile trasmettere la transazione firmata da qualsiasi computer in modo sicuro.',

        // INVOICE MODULE
        CREATE_INVOICE_TITLE: 'Crea una fattura',

        // CATAPULT OPT IN MODULE
        PORTAL_CATAPULTOPTIN_TITLE: 'Symbol Opt In',
        PORTAL_CATAPULTOPTIN_TEXT: 'Usa questo modulo per ricevere token XYM sulla rete Symbol. È inoltre possibile eseguire il processo di Opt In (abbonamento) per registrare i propri spazi dei nomi e account con più firme. Il tuo saldo mosaico, i dati di Apostille, i contratti di harvesting delegati e altri parametri non verranno trasferiti alla rete Symbol. Per favore leggi di più ',
        PORTAL_CATAPULTOPTIN_TEXT_LINK: 'maggiori dettagli qui.',
        PORTAL_CATAPULTOPTIN_MULTISIG_TEXT:'La tua richiesta di Opt In multi-sig deve essere completata insieme al firmatario dell account',
        PORTAL_CATAPULTOPTIN_BTN_1: 'Requisito per ottenere il token XYM e lo spazio dei nomi utilizzando Symbol Opt In',
        PORTAL_CATAPULTOPTIN_BTN_2: 'Sign MultiSig Opt In via message',
        PORTAL_CATAPULTOPTIN_TREZOR_TEXT: 'Opt In with Trezor non è stato ancora implementato. Se desideri effettuare opt-in, trasferisci i tuoi token su un account normale.',
        TITLE_CATAPULTOPTIN: 'Symbol Opt In',
        CATAPULTOPTIN_CREATE_HELP: 'Vuoi saperne di più su Opt In Symbol?',
        CATAPULTOPTIN_TRANSACTION: 'Opt In Transazione',
        CATAPULTOPTIN_ACCOUNT_UNLOCK: 'Inserisci il tuo Symbol mnemonico',
        CATAPULTOPTIN_ACCOUNT_UNLOCK_PLACEHOLDER: 'Inserisci la passphrase mnemonica per il tuo account Symbol che hai scelto',
        CATAPULTOPTIN_ACCOUNT_STEP_1: 'Passaggio 1: selezionare un account per Opt In',
        CATAPULTOPTIN_ACCOUNT_STEP_1_NEW: 'Passaggio 1: selezionare un account per Opt In',
        CATAPULTOPTIN_ACCOUNT_STEP_2: 'Passaggio 2: visualizza le informazioni su Opt In sul tuo account',
        CATAPULTOPTIN_ACCOUNT_MS_STEP_2: 'Passaggio 2: visualizza le informazioni Opt In al tuo account multisig',
        CATAPULTOPTIN_ACCOUNT_STEP_3: 'Passaggio 3: rivedi i tuoi spazi dei nomi in modo che possano essere migrati',
        CATAPULTOPTIN_ACCOUNT_STEP_4: 'Passaggio 4: visualizza le tue chiavi VRF per attivazione Opt In',
        CATAPULTOPTIN_INCLUDE_VRF: 'Includi chiavi VRF in Opt In',
        CATAPULTOPTIN_VRF_KEYS: 'Chiavi VRF',
        CATAPULTOPTIN_VRF_PUBLIC_KEY: 'Chiave pubblica VRF',
        CATAPULTOPTIN_ACCOUNT_MS_STEP_3: 'Passaggio 3: sfoglia gli spazi dei nomi con multisig, per la procedura Opt In',
        CATAPULTOPTIN_ACCOUNT_STEP_SIGN: 'Passaggio 2: consenso Opt In del Symbol',
        CATAPULTOPTIN_REVIEW_MULTISIG_RESULT: 'Revisione del simbolo multisig Opt In',
        CATAPULTOPTIN_REGISTER: 'Registrazione Symbol opt-in',
        CATAPULTOPTIN_CREATE_ADDRESS: 'Crea un nuovo indirizzo nella rete dei Symbol dallo mnemonico.',
        CATAPULTOPTIN_INCLUDE_NAMESPACE: 'Includi i miei namespace in Opt-In',
        CATAPULTOPTIN_INCLUDE_MS_NAMESPACE: 'Includi i miei namespace dagli account multisig nel processo di Opt In',
        CATAPULTOPTIN_MULTISIG_CONTRACT_CONSIGNATURES: 'Contrattuali Firme multisig',
        SIGN_MULTISIG_OPTIN_TRANSACTIONS_TITLE: 'Firma transazione multi-firma',
        CATAPULTOPTIN_NAMESPACE_TO_DELETE: 'Rifiuta namespace',
        CATAPULTOPTIN_NAMESPACE_REMOVE: 'Immettere lo spazio dei nomi che si desidera rimuovere',
        CATAPULTOPTIN_ENTER_PK: 'Inserisci la tua chiave privata per generare un account Symbol',
        CATAPULTOPTIN_ENTER_PASSWORD: 'Inserisci la tua password per generare un account Symbol',
        CATAPULTOPTIN_REMOVE_NAMESPACE: 'Rimuovi (spazio dei nomi)',
        CATAPULTOPTIN_OPT_IN_SUCCESS: 'Procedura Opt In completata con successo',
        CATAPULTOPTIN_OPT_IN_PENDING_SIGNATURES: 'Op In, in attesa di co-firmatario',
        CATAPULTOPTIN_TRANSFER_TRANSACTION_MULTISIG_NAME: 'Conferma opt-in per un account multisig Symbol',
        CATAPULTOPTIN_NIS1: 'NIS1',
        CATAPULTOPTIN_OPTIN_ACCOUNT: 'Opt In account:',
        CATAPULTOPTIN_OPTIN_ACCOUNT_PK: 'Opt In chiave pubblica dell account:',
        CATAPULTOPTIN_NAMESPACES_OPTIN: 'I miei spazi dei namespace',
        CATAPULTOPTIN_CATAPULT: 'Symbol',
        CATAPULTOPTIN_OPTIN_ACCOUNT_ADDRESS: 'Opt In indirizzo account:',
        CATAPULTOPTIN_UNLOCK: 'Sblocca l account Symbol',
        CATAPULTOPTIN_CONFIRM_OPTIN: 'Conferma Symbol Opt In',
        CATAPULT_OPT_IN_RESUME: 'Conferma transazione Opt In',
        CATAPULT_OPT_IN_RESUME_TEXT:'Una transazione successiva creerà un nuovo account Symbol. Per ottenere i tuoi fondi, devi eseguire il backup della tua passphrase mnemonica.',
        CATAPULT_OPT_IN_SUCCESS: 'Opt In Conferma',
        CATAPULT_OPT_IN_BALANCE_SNAPSHOT: 'Balance, da inserire nella rete Symbol',
        CATAPULT_OPT_IN_SUCCESS_SIGNING: 'Opt In completato con successo',
        CATAPULT_OPT_IN_UNDERSTAND: 'Tenendo conto della modifica della chiave privata quando si utilizza Symbol sulla rete, è importante comprendere che la chiave privata dell account Symbol sarà diversa dalla precedente chiave privata NEM. Conferma di aver creato una copia della nuova chiave privata inserendo "Sì, ho capito" nel campo sottostante.',
        CATAPULT_OPT_IN_CONFIRM_BACKUP: 'Ho eseguito il backup della mia passphrase mnemonica per il processo di adesione e comprendo che è mia responsabilità salvare e creare un backup.',
        CATAPULT_OPT_IN_UNDERSTAND_FUNDS: 'Comprendo che solo i fondi nel mio account al momento dell istantanea sono fondi che verranno aggiunti al mio saldo Symbol sotto forma di token XYM quando viene avviata la rete Symbol. Qualsiasi modifica al saldo del conto dopo inizializzazione della transazione opt-in, ma prima dell istantanea stessa, verrà replicata al momento dell avvio di Symbol.',
        GENERAL_MIN_SIGNATURES_REQUIRED: 'Numero minimo richiesto di firme',
        SYMBOL_OPTIN_INITIATOR: 'Opt In iniziatore',
        CATAPULT_BACKUP_WALLET: 'Crea un wallet di Symbol di backup',
        CATAPULT_DOWNLOAD_WALLET: 'Scarica Encrypted Symbol Wallet',
        MNEMONIC: 'Mnemonici',
        CATAPULT_OPT_IN_LOADING: ' Ottenere uno stato Opt-In...',
        COSIGNER_NOT_OPTIN: 'Il co-firmatario non ha ancora avviato il processo Opt In',
        SYMBOL_ADDRESS: 'Symbol Indirizzo',
        YOUR_SYMBOL_ADDRESS: 'Il tuo indirizzo Symbol',
        YOUR_SYMBOL_MNEMONIC: 'Il tuo Symbol mnemonico',
        SYMBOL_COSIGNERS: 'Co-firmatari del Symbol',
        CATAPULTOPTIN_CONFIRM_SIGN: 'Inizializza Symbol Opt In',
        CATAPULTOPTIN_FIRST_DO_NORMAL: 'To Complete the opt-in of a Multisig account, you must first complete the regular Opt-In',
        CATAPULTOPTIN_ENCRYPTED_WALLET_TEXT: 'Crea una nuova password per crittografare il backup del tuo portafoglio Symbol e fai clic sul pulsante di download.',
        CATAPULTOPTIN_REVIEW_NORMAL_RESULT: 'Visualizza le informazioni Opt In sul mio account Symbol',
        CATAPULTOPTIN_GENERATE_NEW_SYMBOL: 'Generazione di nuovi Symbol mnemonici',
        CATAPULTOPTIN_VRF_KEYS_DESCRIPTION: 'Le chiavi VRF vengono utilizzate per harvesting il Symbol. Se si dispone di un nodo e si desidera iniziare a harvesting i primi blocchi utilizzando la harvesting, è necessario abilitare questa opzione e salvare queste chiavi per aggiungerle alla configurazione del nodo Symbol. Se non selezioni questa opzione, puoi anche generare nuove chiavi VRF non appena la rete principale è attiva e funzionante.',
        OPTIN_FORM_PASSWORD_FIELD_PLACEHOLDER: 'Inserisci la tua password per NEM Wallet',
        OPTIN_NEW_PASSWORD: 'Nuova password',
        SYMBOL_PASSWORD_REQUIREMENT: "La password deve contenere almeno 8 caratteri",
        SYMBOL_WALLET_CREATING_TYPE_INFO: 'Please choose the way to create your Symbol account',
        SYMBOL_WALLET_CREATING_BY_ENTROPY_TYPE_INFO: 'Generate random account',
        SYMBOL_WALLET_CREATING_BY_LEDGER_IMPORT_TYPE_INFO: 'Import Symbol account from Ledger',
        SYMBOL_SIGNUP_CREATE_WALLET_ADD_ENTROPY_INFO_1: 'Ora generare la tua chiave privata primaria.',
        SYMBOL_SIGNUP_CREATE_WALLET_ADD_ENTROPY_INFO_2: 'Premere "Start" e spostare il cursore continuamente per terminare entropia.',
        OPTIN_WELCOME_TITLE: 'Benvenuti in Symbol Opt In',
        OPTIN_INFO_1: 'La mainnet di Symbol non è stata ancora lanciata.',
        OPTIN_INFO_2: 'Puoi prepararti selezionando i tuoi account NEM (NIS1) utilizzando questo modulo',
        OPTIN_INFO_3: 'per migrare il saldo e namespace alla rete Symbol.',
        OPTIN_LINK_INFO: 'Ottieni tutte le informazioni sul processo Opt In',
        OPTIN_NAMESPACES_TITLE: 'Opt In Namespaces',
        OPTIN_NAMESPACES_INFO: 'Ora puoi opt-in da solo namespace in NEM (NIS1). Ciò consentirà il completamento automatico, per lo stesso spazio namespace, ma nella rete blockchain di Symbol.',
        OPTIN_NAMESPACES_LINK: 'Ottieni tutte le informazioni sullo spazio dei nomi Opt Ying',
        OPTIN_NAMESPACES_SELECT: 'Seleziona gli spazi (dei nomi) per i quali desideri eseguire opt-in:',
        OPTIN_VRF_TITLE: 'Abilita tasti VRF',
        OPTIN_VRF_INFO:'Le chiavi VRF consentono al tuo account di harvesting premi in blocco. Se prevedi di memorizzare più di 10.000 XYM sul tuo account dopo il lancio e desideri utilizzare la blockchain di Symbol, devi aggiungere le tue chiavi VRF al processo di attivazione.',
        OPTIN_VRF_LINK: 'Ottieni tutte le informazioni necessarie sulle chiavi VRF',
        OPTIN_VRF_KEYS:'Aggiungi chiavi VRF',
        OPTIN_VRF_PUBLIC: 'VRF Public Address',
        OPTIN_VRF_PRIVATE: 'Indirizzo privato VRF',
        OPTIN_TAC_TITLE:'Termini e condizioni',
        OPTIN_TAC_TEXT:'termini e condizioni',
        OPTIN_TAC_INFO_1:'Process Opt In è una funzionalità lanciata da Symbol Chain Limited per aiutare gli utenti NIS1 a migrare i propri saldi sulla nuova rete Symbol. Questo processo contiene alcune regole che devono essere rigorosamente seguite da tutti i partecipanti che lo eseguono.',
        OPTIN_TAC_INFO_2: 'Symbol Chain Limited non sarà ritenuta responsabile per eventuali incidenti al di fuori delle condizioni specificate di seguito.',
        OPTIN_TAC_READ_ACCEPT: 'Ho letto e accetto',
        OPTIN_CONFIRM_TITLE:'Conferma Symbol Opt In',
        OPTIN_CONFIRM_INFO:'Abbiamo quasi finito! I dati verranno migrati nella nuova rete blockchain di Symbol. Guarda attentamente i dati e firma con la tua chiave NEM per completare la procedura di Opt In.',
        OPTIN_CONFIRM_OPTIN:'Conferma processo Opt-In',
        HERE:'maggiori dettagli qui',
        OPTIN_ENTER_PASSWORD: 'Inserisci la tua password NEM (NIS1) per confermare il processo Opt In',
        OPTIN_LOADING: 'Recupero dati di attivazione',
        OPTIN_FINISHED: 'Il processo di attivazione (opt-in) si aprirà dopo il lancio della blockchain di Symbol.  Attendi la nuova versione del portafoglio.',
        GENERAL_BACK: 'Indietro',
        CREATE_SYMBOL_ACCOUNT: 'Crea il tuo account Symbol',
        OPTIN_SYMBOL_READY: 'il tuo account Symbol è pronto',
        OPTIN_COPY_SUCCESS: 'Copied!',
        OPTIN_TYPE_SELECT: 'Select the way you opted in this wallet',
        CATAPULT_OPT_IN_ERROR_TOO_MUCH_COSIGNATORIES: 'This account has more than 8 cosignatories. Opt In protocol only allows multisig accounts with less than 9 cosignatories'

});

}

export default ItalianProvider;

'''
'''--- src/app/modules/languages/jp.js ---
function JapaneseProvider($translateProvider) {
    'ngInject'

    $translateProvider.translations('jp', {

      // HEADER COMPONENT
      WALLET_NAME_1: 'NEM',
      WALLET_NAME_2: 'Wallet',
      APP_NAME_SUB: "NEM プラットフォームに接続するための安全な方法\n(ボランティアによる日本語翻訳版)",
      HEADER_LOGIN_BUTTON: "ログイン",
      HEADER_SIGNUP_BUTTON: "アカウントの作成",
      HEADER_DASHBOARD: 'ダッシュボード',
      HEADER_WALLET: 'ウォレット',
      HEADER_SERVICES: 'サービス',
      HEADER_EXPLORER: 'エクスプローラー',
      HEADER_NODE: 'ノード',
      HEADER_ACCOUNT: 'アカウント',
      HEADER_LANG_TITLE: "言語",
      HEADER_LANG_SELECT: "言語選択",
      HEADER_NODE_BLOCK_HEIGHT: "ブロック高",
      HEADER_NODE_CURRENT_NODE: "現在のノード",
      HEARDER_NODE_LIST: "ノードリスト",
      HEADER_NODE_SELECT: "ノード選択",
      HEADER_NODE_CUSTOM: "カスタムノード",
      HEADER_NODE_CONNECT: "接続",
      HEADER_NODE_CUSTOM_INFO: "ノードの IP もしくは、ドメイン",
      HEADER_NODE_CUSTOM_TOOLTIP: 'あなた自身のNISノードを入力',
      HEADER_PURGE: "アカウントデータの削除(パージ)",
      HEADER_PURGE_MESSAGE: "必ずバックアップを行った上で実行して下さい。OK をクリックすると、ローカルストレージに登録されているすべてのウォレットが削除(パージ)されます。すべてのウォレットをバックアップしていた場合、残高は安全です（回復にはバックアップファイルの再読み込みが必要です）。",
      HEADER_OFFLINE_TX: 'オフライントランザクションの準備',
      HEADER_RELEASE_TX: 'トランザクションのリリース',

      // FOOTER COMPONENT
      FOOTER_POWERED_BY_1: 'Powered by',
      FOOTER_POWERED_BY_2: 'NEM technology.',
      FOOTER_VERSION: "Version",

      // DASHBOARD MODULE
      DASHBOARD_TITLE: "ダッシュボード",
      DASHBOARD_UNCONFIRMED: "未承認",
      DASHBOARD_CONFIRMED: "承認済",
      DASHBOARD_HARVEST_INCOME_TITLE: "直近 25 ブロックのハーベスト収入",
      DASHBOARD_HARVEST_INCOME_NOTE: "ハーベスト報酬0を除いたブロック",
      DASHBOARD_HARVEST_INCOME_MESSAGE: "直近 25 ブロックの手数料は見つかりませんでした",
      DASHBOARD_NEWS_TITLE: "最新情報",
      DASHBOARD_HARVESTED_BLOCKS_TITLE: "ハーベストしたブロック",
      DASHBOARD_HARVESTED_BLOCKS_TH: "ハーベスト報酬",
      DASHBOARD_MARKET_INFO_TITLE: "相場情報",
      DASHBOARD_MARKET_INFO_CAP: "時価総額",
      DASHBOARD_MARKET_INFO_PRICE: "価格",
      DASHBOARD_MARKET_INFO_VOLUME: "24時間の出来高",
      DASHBOARD_MARKET_INFO_CHANGES: "24時間の変動率",
      DASHBOARD_MARKET_INFO_CHANGES_1H: "1時間",
      DASHBOARD_MARKET_INFO_CHANGES_24H: "24時間",
      DASHBOARD_MARKET_INFO_CHANGES_7D: "7日間",
      DASHBOARD_MARKET_INFO_NOTE: "<a href=\"http://coinmarketcap.com/\" target=\"_blank\">CoinMarketCap</a> CoinMarketCapのデータは 5 分毎に更新されます。",
      DASHBOARD_NOTICE_1: 'NEM Wallet Beta にようこそ！',
      DASHBOARD_NOTICE_2: '問題の報告は<a href="https://github.com/NemProject/NanoWallet" target="_blank">こちら</a>へお願いします。',
      DASHBOARD_NOTICE_3: 'NEM チームは、メインネットを利用する前に、最初にテストネットにて NEM Wallet の操作を行い、利用方法を習得する事をお勧めします。英文のガイドブックは<a href="https://blog.nem.io/nanowallet-tutorial/" target="_blank">こちら</a>にあります。利用者は自身の資金を管理し、秘密鍵をバックアップしてください。NEM チームは、メインネット上でこのアプリケーションを利用することに起因する、資金の消失について責任を負いません。',
      DASHBOARD_NOTICE_4: '紙に秘密鍵を書き留めて、安全な場所に保存することをお勧めします。また、あなたのアカウントをAndroid 及び iOS アプリにインポートして、バックアップする事もできます。',
      DASHBOARD_NOTICE_5: 'Thanks for your participation!', //すまねぇ、ここどう訳すか迷ってそのままｗ
      DASHBOARD_MORE_TXES: 'もっとトランザクションを見る',

      // GENERAL
      GENERAL_BLOCK: "ブロック",
      GENERAL_BLOCKS: 'ブロック',
      GENERAL_NO_RESULTS: "なし",
      GENERAL_ACCOUNT: "アカウント",
      GENERAL_ACCOUNTS: 'アカウント',
      GENERAL_MULTISIG_ACCOUNT: "マルチシグアカウント",
      GENERAL_AMOUNT: "数量",
      GENERAL_MESSAGE: "メッセージ",
      GENERAL_DATE: "日時",
      GENERAL_TAB_NORMAL: "ノーマル", // こちらは現在使われてない模様
      GENERAL_TAB_SEND: '送信', //GENERAL_TAB_NORMAL:だったのが新規にこちらが使われる様になった
      GENERAL_TAB_MULTISIG: "マルチシグ",
      GENERAL_TOTAL: "トータル",
      GENERAL_REMOVE: "削除",
      GENERAL_MOSAIC: "モザイク",
      GENERAL_FEE: "手数料",
      GENERAL_LEVY: "徴収",
      GENERAL_LEVY_TYPES: "徴収タイプ",
      GENERAL_LEVY_TYPES_NOTE: "I - コンスタント型手数料; II - パーセンタイル型手数料",
      GENERAL_LEVY_TYPE_1: 'コンスタント型手数料',
      GENERAL_LEVY_TYPE_2: 'パーセンタイル型手数料',
      GENERAL_SEND: "送信",
      GENERAL_TO: "宛先",
      GENERAL_HASH: "ハッシュ",
      GENERAL_HASH_FUNCTION: 'ハッシュ関数',
      GENERAL_NAME: "名前",
      GENERAL_INFORMATION: "情報",
      GENERAL_ADDRESS: "アドレス",
      GENERAL_PUBLIC_KEY: "公開鍵",
      GENERAL_PRIVATE_KEY: "秘密鍵",
      GENERAL_CLEAR_ALL: "全て消去",
      GENERAL_CLOSE: "閉じる",
      GENERAL_COMING_SOON: "近日公開",
      GENERAL_NONE: "なし",
      GENERAL_DROPBOX: "ファイルをここへドラッグ & ドロップするか、ファイル選択ウィンドウを開いてください。",
      GENERAL_NETWORK_FEE: "ネットワーク手数料",
      GENERAL_YES: "はい",
      GENERAL_NO: "いいえ",
      GENERAL_TAGS: "タグ",
      GENERAL_SINK: "シンク（受信側）",
      GENERAL_SINK_ADDRESS: 'アドレス（受信側）',
      GENERAL_STORAGE: '保管先',
      GENERAL_REASON: "理由",
      GENERAL_TRANSACTION_HASH: "トランザクションハッシュ",
      GENERAL_TRANSACTION_ID: "トランザクション ID",
      GENERAL_OWNER: "オーナー",
      GENERAL_RESULTS: "結果",
      GENERAL_RESULT: "結果",
      GENERAL_STATUS: "状態",
      GENERAL_LOCATION: "場所",
      GENERAL_ACTION: "アクション",
      GENERAL_ACTIONS: "アクション",
      GENERAL_ADD: "追加",
      GENERAL_ADDED: "追加済",
      GENERAL_REMOVED: "削除済",
      GENERAL_COSIGNATORY: "署名者",
      GENERAL_COSIGNATORIES: "複数署名者",
      GENERAL_PROCESSING: "処理中",
      GENERAL_ACCOUNT_LABEL: "アカウントラベル",
      GENERAL_OPTIONAL: "（オプション）",
      GENERAL_ERROR: "エラー",
      GENERAL_EXAMPLE: "例",
      GENERAL_PUBLIC: "パブリック",
      GENERAL_NAMESPACES: "ネームスペース",
      GENERAL_NAMESPACE: "ネームスペース",
      GENERAL_SUB_NAMESPACES: "サブネームスペース",
      GENERAL_SUB_NAMESPACE: "サブネームスペース",
      GENERAL_MOSAICS: "モザイク",
      GENERAL_VALUE: "値",
      GENERAL_CONNECTION_ERROR: "エラーが発生しました。ノードが停止しているかオフラインになっています。",
      GENERAL_HISTORY: "履歴",
      GENERAL_REVEAL: "公開",
      GENERAL_QR: 'QR コード',
      GENERAL_UPDATE: 'アップデート',
      GENERAL_UNKNOWN: '不明',
      GENERAL_IMPORTANCE: 'インポータンス',
      GENERAL_TRANSACTIONS: 'トランザクション',
      GENERAL_REGISTER: '登録',
      GENERAL_CREATE: '作成',
      GENERAL_RENEW: '更新',
      GENERAL_CHARACTERS_LEFT: '残り文字数',
      GENERAL_CURRENCY: '通貨',
      GENERAL_EDIT: '編集',
      GENERAL_SEND_XEM: 'XEMの送金',
      GENERAL_ACTIVE: '有効',
      GENERAL_INACTIVE: '無効',
      GENERAL_ACTIVATING: '有効化中',
      GENERAL_DEACTIVATING: '無効化中',
      GENERAL_REMOTE: 'リモート',
      GENERAL_WARNING: '警告',
      GENERAL_SCORE: 'スコア',
      GENERAL_LENGTH: '長さ',
      GENERAL_GO_BACK: '戻る',
      GENERAL_NEXT: '次へ',
      GENERAL_START: 'スタート',
      GENERAL_ALIAS: 'エイリアス',
      GENERAL_CONTACTS: 'コンタクト',
      GENERAL_ENCRYPTED: '暗号化',
      GENERAL_UNENCRYPTED: '平文',
      GENERAL_HEXADECIMAL: '16進数',
      GENERAL_SELECT_ACCOUNT: 'アカウントを選択',
      GENERAL_INVOICE: '請求書',
      GENERAL_SIGNATURE: '署名',
      GENERAL_VERIFY: '検証',

      // HOME MODULE
      HOME_UNSUPPORTED_BROWSER: '申し訳ありません。このブラウザでは安全に NEM Wallet を使用する事ができません。',
      HOME_RECOMMENDED_BROWSERS: '推奨ブラウザ：',
      HOME_FEATURE_STAND_BY: '各機能の説明はカーソルを合わせると表示されます。',
      HOME_FEATURE_1: 'XEMの送受信は早くて簡単、ブロックタイムは1分です！',

      // TRANSFER TRANSACTION MODULE
      TRANSFER_TRANSACTION_TITLE: "送信",
      TRANSFER_TRANSACTION_NAME: "トランスファートランザクション", //画面崩れ防止の為短く変更："トランスファートランザクション（通常トランザクション）"
      TRANSFER_TRANSACTION_MULTISIG_NAME: "マルチシグトランスファートランザクション", //画面崩れ防止の為短く変更："マルチシグトランスファートランザクション（通常トランザクション）"
      TRANSFER_TRANSACTION_INVOICE: "請求書を作成",
      TRANSFER_TRANSACTION_TAB_INVOICE: "請求書",
      TRANSFER_TRANSACTION_MOSAIC_TRANSFER: "モザイクを送信",
      TRANSFER_TRANSACTION_ATTACH_MOSAIC: "モザイクを添付",
      TRANSFER_TRANSACTION_ATTACH: "添付",
      TRANSFER_TRANSACTION_MOSAICS_ATTACHED: "添付するモザイク",
      TRANSFER_TRANSACTION_ENCRYPT_MESSAGE: "メッセージを暗号化",
      TRANSFER_TRANSACTION_MESSAGE_TYPE: 'メッセージタイプ',
      /*TRANSFER_TRANSACTION_HEX_MESSAGE: 'Hex メッセージ',
      TRANSFER_TRANSACTION_ENCRYPT_TOOLTIP: 'ネットワーク上に受信者の公開鍵がありません',
      TRANSFER_TRANSACTION_ENCRYPT_TOOLTIP_MULTISIG: "マルチシグアカウントを介した暗号化メッセージはありません",*/

      // TRANSACTION LINES
      LINE_TX_DETAILS_FROM: "送り主（From）",
      LINE_TX_DETAILS_FROM_MULTISIG: "マルチシグ（From）",
      LINE_TX_DETAILS_WAITING: "認証中のトランザクション",
      LINE_TX_DETAILS_NEED_SIG: "複数署名を要求",
      LINE_TX_DETAILS_NEED_SIG_2: "このトランザクションはあなたの署名を必要としています。",
      //LINE_TX_DETAILS_MESS_ENC: "暗号化されている",
      LINE_TX_DETAILS_MESS_DEC: "復号する",
      LINE_TX_DETAILS_HASH: "ハッシュ",
      LINE_TX_DETAILS_DEC_MESS: "メッセージを復号",
      LINE_TX_DETAILS_MOS_ATTACHED: "添付されたモザイク",
      LINE_TX_DETAILS_LEVY_TYPE_1: "コンスタント（定額）",
      LINE_TX_DETAILS_LEVY_TYPE_2: "パーセンタイル",
      LINE_TX_DETAILS_ISSUER: "発行者",
      LINE_TX_DETAILS_MULTISIG_FEE: "マルチシグ手数料",
      LINE_TX_DETAILS_MULTISIG_HASH: "マルチシグハッシュ",
      LINE_TX_DETAILS_COSIGN: "複数署名トランザクション",
      LINE_TX_DETAILS_SIGNATURES: "署名",
      LINE_TX_DETAILS_COSIGNATORY: "複数署名",
      LINE_TX_DETAILS_TIMESTAMP: "タイムスタンプ",
      LINE_TX_DETAILS_MOS_CREATE: "モザイクを作成",
      LINE_TX_DETAILS_MOS_EDIT: "モザイクを編集",
      LINE_TX_DETAILS_NS_CREATE: "ネームスペースを作成",
      LINE_TX_DETAILS_NS_NEW_SUB: "新規サブネームスペースを作成",
      LINE_TX_DETAILS_NS_ROOT: "ルートネームスペース",
      LINE_TX_DETAILS_RECIPIENT: "受信者",
      LINE_TX_DETAILS_MULTISIG_CREATE: "マルチシグアカウントを作成",
      LINE_TX_DETAILS_MULTISIG_EDIT: "マルチシグアカウントを編集",
      LINE_TX_DETAILS_MULTISIG_MOD: "変更点",
      LINE_TX_DETAILS_MULTISIG_MIN_COSIG: "最小署名者数",
      LINE_TX_DETAILS_MULTISIG_AFFECTED: "影響するアカウント",

      // IMPORTANCE MODULE
      IMPORTANCE_TRANSFER_NAME: "インポータンストランスファートランザクション",//長すぎて崩れる："インポータンストランスファートランザクション（委任モード操作等）"
      IMPORTANCE_TRANSFER_MULTISIG_NAME: "マルチシグインポータンストランスファートランザクション",//長すぎて崩れる："マルチシグインポータンストランスファートランザクション（委任モード操作等）"
      IMPORTANCE_TRANSFER_MODE: "モード選択",
      IMPORTANCE_TRANSFER_MODE_1: "委任有効化（Activate）",
      IMPORTANCE_TRANSFER_MODE_2: "委任無効化（Deactivate）",
      IMPORTANCE_TRANSFER_TITLE: "デリゲートアカウント(委任アカウント)管理",
      IMPORTANCE_TRANSFER_MULTISIGNATURE_TITLE: "マルチシグデリゲートアカウント(委任アカウント)の管理",
      IMPORTANCE_TRANSFER_CUSTOM_KEY: "カスタムされた公開鍵を使用",
      IMPORTANCE_TRANSFER_MODE_SELECT: "モード選択",
      IMPORTANCE_TRANSFER_REMOTE_ACCOUNT: "リモートアカウント",
      IMPORTANCE_TRANSFER_REMOTE_PUBLIC: "リモート公開鍵",
      IMPORTANCE_TRANSFER_INFO_PART_1: "インポータンストランザクションがブロックに入れられてから有効になるまで6時間かかります。6時間の後、ノードの選択や起動/停止を行うことができます。",
      IMPORTANCE_TRANSFER_INFO_PART_2: "既に委任アクティベート要求済のアカウントを NEM Wallet にインポートした場合は、一旦過去の委任公開鍵を停止させてから再度要求して下さい。\n",
      IMPORTANCE_TRANSFER_INFO_PART_MULTISIG: "マルチシグの場合、インポータンストランスファートランザクションを実施した連署者のみハーベストの開始停止が可能です。その他の連署人が処理を行う場合は Deactivate → Activate が必要になります。",
      IMPORTANCE_TRANSFER_NO_BLOCKS_HARVESTED: "収穫ブロック無し",
      IMPORTANCE_TRANSFER_HARVESTING_PANEL: "収穫パネル",
      IMPORTANCE_TRANSFER_REMOTE_ACTIVATING: "委任収穫を開始するためにはリモートステータスがアクティブになるまで待つ必要があります。",
      IMPORTANCE_TRANSFER_REMOTE_INACTIVE: "リモートアカウントをアクティブにするために左パネルからインポータンストランスファートランザクションを送信する必要があります。",
      IMPORTANCE_TRANSFER_MULTISIG_NOT_INITIATOR: "あなたは、インポータンストランスファートランザクションを開始した連署者ではありません。従って委任収穫を開始または停止することができません。収穫操作権限を取り戻す方法をタブから確認してください。",
      IMPORTANCE_TRANSFER_PRIVATE_KEY_PLACEHOLDER: '委任秘密鍵の参照',
      IMPORTANCE_TRANSFER_DELEGATED_KEYS: 'デリゲートアカウントキー',
      IMPORTANCE_TRANSFER_HARVESTING_STATUS: 'ハーベスティング',
      IMPORTANCE_TRANSFER_START_HARVESTING: 'デリゲートハーベスティングの開始',
      IMPORTANCE_TRANSFER_STOP_HARVESTING: 'デリゲートハーベスティングの停止',
      IMPORTANCE_TRANSFER_ACTIVATE_DEACTIVATE_REMOTE: 'デリゲートアカウントの有効化 / 無効化',
      IMPORTANCE_TRANSFER_SHOW_DELEGATED_KEYS: 'デリゲートアカウントのキーを表示する',

      // CREATE MOSAIC MODULE
      MOSAIC_DEFINITION_TITLE: "モザイクを作成",
      MOSAIC_DEFINITION_NAME: "モザイクディフィニショントランザクション",
      MOSAIC_DEFINITION_MULTISIG_NAME: "マルチシグモザイクディフィニショントランザクション",
      MOSAIC_DEFINITION_QUANTITY: "数量",
      MOSAIC_DEFINITION_DIV: "可分性（小数点の有無）",
      MOSAIC_DEFINITION_TOTAL_SUPPLY: '総供給量',
      MOSAIC_DEFINITION_FINAL_NAME: 'フルネーム',
      MOSAIC_DEFINITION_DESCRPITION: "説明",
      MOSAIC_DEFINITION_INITIAL_SUPPLY: "初期供給量",
      MOSAIC_DEFINITION_MUTABLE_SUPPLY: "供給量変更可",
      MOSAIC_DEFINITION_TRANSFERABLE: "譲渡許可（チェック有で自由送信許可)",
      MOSAIC_DEFINITION_PROPERTIES: "プロパティ",
      MOSAIC_DEFINITION_MOSAIC_PROPERTIES: "モザイクのプロパティ",
      MOSAIC_DEFINITION_REQUIRES_LEVY: "徴収を要求",
      MOSAIC_DEFINITION_LEVY_LIMITATION: "UI制限：現在はモザイク作成者のみ徴収設定が可能です。",
      MOSAIC_DEFINITION_LEVY_SELECT_MOSAIC: "徴収するモザイクを選択",
      MOSAIC_DEFINITION_LEVY_ADDRESS: "徴収モザイク送信先アドレス",
      MOSAIC_DEFINITION_LEVY_FEE_TYPE: "手数料タイプ",
      MOSAIC_DEFINITION_LEVY_FEE_TYPE_1: "固定徴収方式",
      MOSAIC_DEFINITION_LEVY_FEE_TYPE_2: "パーセンタイル徴収方式",
      MOSAIC_DEFINITION_LEVY_FEE_TYPE_1_NOTE: "固定徴収方式を選択すると、固定の徴収が発生します。",
      MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE: "パーセンタイル徴収方式を選択すると、送信量により徴収量が変動します。",
      MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE_2: "送信モザイク",
      MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE_3: "の場合、徴収されるモザイクは",
      MOSAIC_DEFINITION_PARENT: "親ネームスペース（名前空間）",
      MOSAIC_DEFINITION_INFORMATION_TITLE: 'モザイクの作成',
      MOSAIC_DEFINITION_INFORMATION: 'モザイクについての詳細',
      MOSAIC_DEFINITION_INFORMATION_1: "モザイク名は32文字が最長です。使用できる文字は以下の通りです。",
      MOSAIC_DEFINITION_INFORMATION_2: "最初の文字はアルファベット又は数字で始めて下さい。",
      MOSAIC_DEFINITION_INFORMATION_3: "「説明」は512文字以内で記述できます。使用できる文字の制限はありません。",
      MOSAIC_DEFINITION_INFORMATION_4: "モザイクの動作は、プロパティ設定によってカスタマイズする事ができます：",
      MOSAIC_DEFINITION_INFORMATION_5: "供給量はモザイク全体の単位で、最小のサブユニットではありません。\n設定できる最小供給量の範囲は 0～90 億です。",
      MOSAIC_DEFINITION_INFORMATION_6: "可分性の変更はモザイクを小数点以下のどこまで分割できるかを決定する事です。可分性を 3 に設定した場合はモザイクを 0.001 まで分割できます。可分性は 0～6 の範囲でなければなりません。",
      MOSAIC_DEFINITION_INFORMATION_7: "チェックすると、後からモザイク供給量を変更できます。チェックしない場合、供給量は後から変更できません。",
      MOSAIC_DEFINITION_INFORMATION_8: "モザイク作成者以外でもモザイク送信は可能です。\nしかし、作成時、プロパティ内の譲渡可能（transferable）の項目にチェックをしなかった場合は、モザイク作成者のみ送信が可能となります。\nチェックがある場合はモザイク所有者の任意で送受信できます。",
      MOSAIC_DEFINITION_INFORMATION_9: "モザイク作成者はモザイクの利用者に対して徴収料を要求することができます。（送信時に指定したアドレスに徴収料が送られます)\n徴収のためのデータは次の通りです。",
      MOSAIC_DEFINITION_INFORMATION_10: "手数料として徴収されるモザイク: 既存の任意のモザイクを指定する事ができます。",
      MOSAIC_DEFINITION_INFORMATION_11: "徴収の受信者: 任意のアカウントを指定できます。",
      MOSAIC_DEFINITION_INFORMATION_12: "徴収量: 手数料の種類（fee type）により異なります。以下を参照ください。",
      MOSAIC_DEFINITION_INFORMATION_13: "手数料の種類: 固定徴収方式とパーセンタイル徴収方式の2種類があります。",
      MOSAIC_DEFINITION_INFORMATION_14: "固定徴収方式の場合、徴収額は転送される量に依存しません。",
      MOSAIC_DEFINITION_INFORMATION_15: "パーセンタイル徴収方式の場合、徴収額は送信するモザイクの量に従って変化します。",
      MOSAIC_DEFINITION_INFORMATION_16: "モザイクを NEM ブロックチェーンに送信するには手数料がかかります。実際の手数料はそのモザイクの総量と送信量に依存します。<b>スモールビジネスモザイク</b>は割引が適用され、一回の送信あたり0.05 XEMが定額手数料となります。",
      MOSAIC_DEFINITION_INFORMATION_17: 'あなたが供給量の100%を保有している場合、同名の"namespace:mosaic"にて、モザイク作成トランザクションを再度送信することで、全てのモザイクプロパティを上書きすることができます。',

      // EDIT MOSAIC MODULE
      MOSAIC_SUPPLY_CHANGE_TITLE: "モザイク供給量を変更",
      MOSAIC_SUPPLY_CHANGE_NAME: "モザイクサプライチェンジトランザクション",
      MOSAIC_SUPPLY_CHANGE_MULTISIG_NAME: "マルチシグモザイクサプライチェンジトランザクション",
      MOSAIC_SUPPLY_CHANGE_SELECT: "モザイクを選択",
      MOSAIC_SUPPLY_CHANGE_TYPE: "変更タイプ",
      MOSAIC_SUPPLY_CHANGE_TYPE_1: "作成",
      MOSAIC_SUPPLY_CHANGE_TYPE_2: "削除",
      MOSAIC_SUPPLY_CHANGE_SUPPLY: "供給量",
      MOSAIC_SUPPLY_CHANGE_CURRENT_SUPPLY: "現在の供給量",
      MOSAIC_SUPPLY_CHANGE_AMOUNT: "変更する供給量",
      MOSAIC_SUPPLY_CHANGE_RES_SUPPLY: "変更後の供給量",

      // NAMESPACE MODULE
      NAMESPACE_PROVISION_TITLE: "ネームスペース & サブネームスペースを作成",
      NAMESPACE_PROVISION_NAME: "プロビジョンネームスペーストランザクション",
      NAMESPACE_PROVISION_MULTISIG_NAME: "マルチシグプロビジョンネームスペーストランザクション",
      NAMESPACE_PROVISION_PARENT: "親（上位側）ネームスペース（レベル3を除く）",
      NAMESPACE_PROVISION_NEW_ROOT: "新規ルート",
      NAMESPACE_PROVISION_NS: 'ネームスペース',
      NAMESPACE_PROVISION_NS_NAME: "ネームスペースの名前",
      NAMESPACE_PROVISION_RESTRICTIONS: 'ネームスペースの制限',
      NAMESPACE_PROVISION_INFORMATION_1: "ネームスペースには制約があります。ルートネームスペースは16字以内で、ルート以下のネームスペースは64文字までです。使用できる文字は以下の通りです。",
      NAMESPACE_PROVISION_INFORMATION_2: "ネームスペースの頭文字はアルファベット又は数字で始めて下さい。\’alice\’はルートネームスペースとしては妥当ですが、\'_alice\'では作成できません。予約語（システムとして既に使われている文字列）もネームスペースとしては認められません。許可されない語は以下の通りです。",
      NAMESPACE_PROVISION_INFORMATION_3: 'このリストは最終的なものではなく、将来拡張される事があります。 したがって、\'user.alice\' または \'alice.user\' はNEMのネームスペースでは使用できません。ネームスペースには最大3つの部分で構成されるので、\'gimre.metals.silver\'は有効ですが、\'gimre.metals.silver.coin\' は有効ではありません。',

      // RENEW NAMESPACE MODULE
      RENEW_NS_TITLE: 'ネームスペースの更新',
      RENEW_NS_NONE: '更新するネームスペースがありません',
      RENEW_NS_INFORMATION_TITLE: 'ネームスペースの更新',
      RENEW_NS_INFORMATION_TITLE_1: '手数料',
      RENEW_NS_INFORMATION_TITLE_2: 'ルートネームスペース',
      RENEW_NS_INFORMATION_TITLE_3: '更新期間',
      RENEW_NS_INFORMATION_1: 'ネームスペースを更新すると、新しいネームスペースを取得するのと同額のコストがかかります（100 XEM）.',
      RENEW_NS_INFORMATION_2: 'ルートネームスペースのみを更新する必要があります。すべてのサブネームスペースは、ルートネームスペースの更新時に自動的に更新されます。',
      RENEW_NS_INFORMATION_3: 'ネームスペース契約は、1年間有効なレンタル契約です。契約は有効期限の1ヶ月前から更新することができます。',
      RENEW_NS_INFORMATION_4: '期限内に更新されない場合は、その下に作成されたすべてのサブネームスペースとモザイクが失われます。',
      RENEW_NS_ALERT_PART_1: '<b>注意!</b> ネームスペース:',
      RENEW_NS_ALERT_PART_2: '1ヶ月以内に有効期限が切れます！',
      RENEW_NS_ALERT_PART_3: '詳細は、<b>ネームスペースの更新</b>ページを参照してください。',

      // ACCOUNT MODULE
      ACCOUNT_TITLE: "アカウント",
      ACCOUNT_ACCOUNT_INFORMATION: "アカウント情報",
      ACCOUNT_IMPORTANCE_SCORE: "重要性スコア",
      ACCOUNT_VESTED_BALANCE: "既得バランス",
      ACCOUNT_HARVESTING: "ハーベスティング",
      ACCOUNT_REMOTE_STATUS: "リモートステータス",
      ACCOUNT_DELEGATED_PUBLIC: "委任公開鍵",
      ACCOUNT_HARVESTED_BLOCKS: "ハーベストされたブロック",
      ACCOUNT_START_STOP_HARVESTING: "デリゲートハーベスティングを開始 / 停止",
      ACCOUNT_HARVESTING_NOTE: "このアカウントでハーベストに利用したノードは、<b>ブラウザのローカルストレージ</b>に保存されます。ブラウザのローカルストレージが削除されると NEM Wallet はどのノードを利用していたのかわからない為、<b>ハーベスティング</b>に<b>無効</b>と表示されます。この場合、使用していたノードを再度選択すると、収穫情報が自動的に復元されます。ステータスが復元されない場合は、正しいノードが選択されているかを確認してください。それ以外の場合は、ノードが再起動されたために、このアカウントでハーベストされていないことを意味します。",
      ACCOUNT_HARVESTING_NODE_SELECT: "ハーベストを行うノードを選択",
      ACCOUNT_HARVESTING_START: "デリゲートハーベスティング（委任収穫）を開始",
      ACCOUNT_HARVESTING_STOP: "デリゲートハーベスティング（委任収穫）を停止",
      ACCOUNT_HARVESTING_NO_SLOTS: "選択したノードが接続制限に達しているので、別のノードを指定してください。",
      ACCOUNT_HARVESTING_BELOW_THRESHOLD: "デリゲートハーベスティングを開始する為には既得バランスが 10,000 XEM 以上必要です。",
      ACCOUNT_ACCOUNT_SELECT: "別のアカウントを選択",
      ACCOUNT_ACCOUNT_SELECT_LABEL: "別のアカウントに切り替える",
      ACCOUNT_WALLET_KEYS: "ウォレット ＆ 鍵",
      ACCOUNT_ADD_NEW_ACCOUNT: "新規アカウントを追加",
      ACCOUNT_ADD_NEW_ACCOUNT_BTN: "ウォレットに新規アカウント(アドレス)を追加",
      ACCOUNT_PRIVATE_KEY_NOTE: "秘密鍵は最重要機密であり全ての権限を保有します。パスワードで暗号化された .wlt ファイル、紙に書きとめたもの、そして写真又は<b><u>エクスポートウォレット QR</u></b>のダウンロードなど、<b><u>オフライン</u></b>で安全に保管してしてください。\n",
      ACCOUNT_PRIVATE_KEY_SHOW: "秘密鍵を表示",
      ACCOUNT_EXPORT_MOBILE: "モバイル版に出力",
      ACCOUNT_INFO_QR_BTN: "アカウント情報を QR で共有",
      ACCOUNT_WALLET_QR_BTN: "ウォレットの QR",
      ACCOUNT_WALLET_QR_BTN_2: "ウォレットを QR でエクスポート（アンドロイド &  iOS）",
      ACCOUNT_BACKUP_WALLET: "ウォレットをバックアップ",
      ACCOUNT_BACKUP_WALLET_NOTE: "ウォレットのバックアップはXEMを紛失しない為の<b><u>重要</u></b>な作業です。",
      ACCOUNT_BACKUP_WALLET_DOWNLOAD: "ウォレットをダウンロード",
      ACCOUNT_INFO_QR_TITLE: "アカウント情報 QR",
      ACCOUNT_WALLET_QR_NOTE: "この QR はまもなく公開予定の NEMpay モバイルアプリにのみ対応しています。",
      ACCOUNT_WALLET_QR_ANDROID_IOS_TITLE: "Android & iOS アプリ用のウォレット QR",
      ACCOUNT_ADD_NEW_ACCOUNT_WARNING: "全てのアカウントは、BIP32 方式を使用して主秘密鍵とパスワードから派生して作られており、他の全ての複アカウントを取得・再作成するためにも必要になります。<br>ローカルストレージが消去された場合に再度操作を繰り返すことをしない為にも、新しいアカウントを追加した場合には、ウォレットのバックアップを<b>強くお勧めします</b>。",
      ACCOUNT_CUSTOM_NODE: "カスタムノードを使う",
      ACCOUNT_NODE_FROM_LIST: "一覧からノードを使う",
      ACCOUNT_DELEGATED_PRIVATE_KEY: "委任秘密鍵",
      ACCOUNT_NO_PUBLIC_KEY: '公開鍵を取得するためにはトランザクションを発行してください。',
      ACCOUNT_SHOW_ON_TREZOR_BTN: 'TREZORで見る',
      ACCOUNT_SHOW_ON_LEDGER_BTN: 'LEDGERで見る',

      // PORTAL MODULE
      PORTAL_TITLE: "各種機能",
      PORTAL_MULTISIG_TITLE: "マルチシグおよびマルチユーザーアカウント",
      PORTAL_MULTISIG_TEXT: "NEMのマルチシグは編集可能なオンチェーンのコントラクトであり、連署アカウントを有効にすることで最も強力な資金保護方法にもなり、非中央集権型組織の基盤にもなります。",
      PORTAL_MULTISIG_BTN_1: "アカウントをマルチシグに変更",
      PORTAL_MULTISIG_BTN_2: "既存コントラクトを編集",
      PORTAL_MULTISIG_BTN_3: 'マルチシグトランザクションの署名',
      PORTAL_HARVESTING_TITLE: "デリゲートハーベスティング（委任）",
      PORTAL_HARVESTING_TEXT: "デリゲートハーベスティングは、アカウントが起動していない時間でもリモート・ノードを介して「マイニング（ハーベスト）」を可能にする機能です。",
      PORTAL_EXCHANGE_TITLE: 'インスタントエクスチェンジ',
      PORTAL_EXCHANGE_TEXT: 'Changellyウィジェットを使って、最適レートでXEMを購入しましょう！',
      PORTAL_EXCHANGE_BTN: 'XEMを購入',
      PORTAL_NS_TITLE: "ネームスペースとサブドメイン",
      PORTAL_NS_TEXT: "ネームスペースはドメイン名のようなものです。ネームスペース名はユニーク(他に同一の名称無し)であり、その配下にサブネームスペースやモザイク （アセット） を発行する事ができます。",
      PORTAL_NS_BTN: "ネームスペースを作成",
      PORTAL_MOSAIC_TITLE: "モザイク",
      PORTAL_MOSAIC_TEXT: "NEM のモザイクは追加プロパティ、及びその他の機能を有するアセットです。\nモザイクを作成する為には少なくとも１つのネームスペースをレンタルする必要があります。",
      PORTAL_MOSAIC_BTN_1: "モザイク作成",
      PORTAL_MOSAIC_BTN_2: "モザイク編集",
      PORTAL_APOSTILLE_TITLE: "アポスティーユ （公証機能）",
      PORTAL_APOSTILLE_TEXT: "NEM アポスティーユ（公証機能）はブロックチェーンにファイルの情報とタイムスタンプを刻んだ公証を作成し、ファイルの信頼性を監査できるようにする機能です。",
      PORTAL_APOSTILLE_BTN_1: "作成",
      PORTAL_APOSTILLE_BTN_2: "監査（公証の確認）",
      PORTAL_ADDRESS_BOOK_TEXT: 'アドレスにラベルを付けることによって、 連絡先を簡単に管理する事ができます。',
      PORTAL_ADDRESS_BOOK_BTN: 'アドレス帳の管理',
      PORTAL_INVOICE_TEXT: '共有するためのQRコード請求書を作成します',
      PORTAL_SIGNED_MSG_TEXT: 'トランザクションなしにアカウントの所有認証をするための署名済みメッセージの作成と検証を行います。',

      // ADDRESS BOOK MODULE
      ADDRESS_BOOK_TITLE: 'アドレス帳',
      ADDRESS_BOOK_LIST: '連絡先',
      ADDRESS_BOOK_NAVIGATION: 'ナビゲーション',
      ADDRESS_BOOK_NEW: '新規',
      ADDRESS_BOOK_EDIT: '編集',
      ADDRESS_BOOK_REMOVE: '削除',
      ADDRESS_BOOK_NEW_BTN: '追加',
      ADDRESS_BOOK_EDIT_BTN: '保存',
      ADDRESS_BOOK_REMOVE_BTN: '削除',
      ADDRESS_BOOK_EXPORT_BTN: 'アドレス帳のバックアップ',
      ADDRESS_BOOK_IMPORT_BTN: 'バックアップからの復元',
      ADDRESS_BOOK_CONTACT_LABEL: 'ラベル',
      ADDRESS_BOOK_ACCOUNT_ADDRESS: 'アカウントのアドレス',
      ADDRESS_BOOK_ACTIONS: '操作',
      ADDRESS_BOOK_CONFIRM_DELETE: 'アドレス帳からこの連絡先を本当に削除しますか？',

      // EXPLORER MODULE NAV
      EXPLORER_NAV_HOME: "ホーム",
      EXPLORER_NAV_NSM: "ネームスペースとモザイク",
      EXPLORER_NAV_APOSTILLES: "アポスティーユ（公証機能）",

      // EXPLORER HOME MODULE
      EXPLORER_HOME_TITLE: "エクスプローラ - ホーム",
      EXPLORER_HOME_NS: "ネームスペース一覧",
      EXPLORER_HOME_MOSAICS: "モザイク一覧",
      EXPLORER_HOME_NS_MULTISIG: "マルチシグアカウントが保有しているネームスペース",
      EXPLORER_HOME_MOSAICS_LEVY: "送信時に徴収されるモザイク（Levy）",

      // EXPLORER NAMESPACES AND MOSAICS
      EXPLORER_NS_MOS_TITLE: "エクスプローラー - ネームスペースとモザイク",
      EXPLORER_NS_MOS_SELECT_MOS: "モザイクの詳細",//"モザイクを選択して詳細を表示"だと長過ぎて”イクを選択して詳細を表示”になってしまう
      EXPLORER_NS_MOS_SEARCH: 'ネームスペースの検索',

      // EXPLORER APOSTILLES MODULE
      EXPLORER_APOSTILLES_TITLE: "エクスプローラー - アポスティーユ（公証機能）\n",
      EXPLORER_APOSTILLES_YOURS: "所有している公証",
      EXPLORER_APOSTILLES_PUBLIC: "公開受信（パブリック）",
      EXPLORER_APOSTILLES_NO_NTY: "NTYファイルがロードされていません。ここをクリックしてインポートを行って下さい。",

      // ACCOUNT EXPLORER
      ACCOUNTS_EXPLORER_TITLE: 'エクスプローラ - アカウント',
      ACCOUNTS_EXPLORER_SEARCH: '検索',

      // TRANSACTIONS EXPLORER
      EXPLORER_TRANSACTIONS_TITLE: 'あなたのトランザクション履歴',
      EXPLORER_TRANSACTIONS_LOAD_MORE: 'もっと読み込む',

      // APOSTILLE HISTORY MODULE
      APOSTILLE_HISTORY_TITLE: "アポスティーユの履歴",
      APOSTILLE_HISTORY_BTN_TRANSFER: "所有権の譲渡 / 分割",
      APOSTILLE_HISTORY_BACKUP: "公証データのバックアップ",
      APOSTILLE_HISTORY_PURGE: "公証データのパージ",

      // CREATE APOSTILLE MODULE
      APOSTILLE_CREATE_TITLE: "アポスティーユ（公証）を作成",
      APOSTILLE_CREATE_HELP: 'アポスティーユの詳細が必要ですか？',
      APOSTILLE_TRANSACTION_NAME: "アポスティーユトランザクション",
      APOSTILLE_TRANSACTION_MULTISIG_NAME: "マルチシグアポスティーユトランザクション",
      APOSTILLE_KEEP_PRIVATE: "プライベート、譲渡、アップデート可能",
      APOSTILLE_USE_DEDICATED: "専用アカウントを使用",
      APOSTILLE_FILES_TO_NOTARIZE: "公証するファイル",
      APOSTILLE_REJECTED: "拒否されました。",
      APOSTILLE_FILE_HASH: "ファイルハッシュ",
      APOSTILLE_PRIVATE: "秘密",
      APOSTILLE_FILENAME: "ファイル名",
      APOSTILLE_NAME_TOO_LONG: "ファイル名が長すぎます。40文字以下にしてください。",
      APOSTILLE_MAX_NUMBER: "バッチあたりの最大アポスティーユ（公証）は25ファイルです。",
      APOSTILLE_INFORMATION_TITLE: '公証の作成',
      APOSTILLE_INFORMATION_1: "アップロードされたファイルはそれぞれ左側のパネルに配置されたオプションを使って自動的に処理されます。新しいファイルを追加したり、パラメーターを変更したり、そしてさらに様々なオプションがついたファイルを加えることもできます。それはマルチシグのタブに切り替えて新しいファイルを追加していくときにも使用することができます。",
      APOSTILLE_INFORMATION_2: "<b>プライベート、譲渡、アップデート可能</b>を選択をすれば、あなたのファイルのハッシュはあなたのプライベートキーで署名され、専用の階層的決定性（HD）アカウントへと送られることになります。このように、あなたがそれを共有しない限り、あなた以外の人間がどのような内容がタイムスタンプされたのかを知ることは不可能です。",
      APOSTILLE_INFORMATION_3: "専用のHDアカウントはマルチシグのコントラクトの下に置くことができ、1-of-1 やあらゆる m-of-n のマルチシグのコントラクトの組合せを通じて他者へ譲渡することができます。オリジナルのドキュメントやそれが表す製品へのアップデートもしくは拡張を通知するメッセージを送ることで、アカウントへ追加の情報を記載することもできます。",
      APOSTILLE_INFORMATION_4: "二人以上の関係者が全員ブロックチェーンのタイムスタンプを承認したい、つまりコントラクトをバインディングしたい場合には、ブロックチェーンの公証を行うアカウントを n-of-n のマルチシグのコントラクトの下に置くことができます。",
      APOSTILLE_INFORMATION_5: "<b>プライベートで、譲渡とアップデートが可能</b>なように設定されたマルチシグネチャのコントラクトのアカウントでは、発案者である連署人のプライベートキーを使ってハッシュに署名を行い、専用の HD アカウントを作成します（マルチシグ化されたアカウントではありません）",
      APOSTILLE_INFORMATION_6: "HDアカウントは、あなたのプライベートキーで署名されることになるファイル名のハッシュを元に作られた専用のアカウントです。そのプロセスの結果として生まれるハッシュは、その後に第二のプライベートキーを作るために使用します。これが、タイムスタンプされたファイルのプライベートキーです。これはブロックチェーン技術で初のものであり、アポスティーユにしか存在しないものです。",
      APOSTILLE_INFORMATION_7: "専用のHDカウントによって、ハッシュに署名されたオリジナルのファイルや、それのアップデートをHDアカウントに保存しておくことが可能になります。<b>\"パブリック\"</b>を選択した場合には、トランザクションはオープンなシンクのアドレスへ送られることになります（デフォルト設定）",
      APOSTILLE_INFORMATION_8: "そのトランザクションが送られた後に、アーカイブのダウンロードが開始します。そこには以下のものが入っています。署名されたファイル、そのファイルについてのアポスティーユの証明書、NEM のチェーン上であなたがタイムスタンプを押したすべてのファイルを記録している新規もしくはアップデートされた .nty ファイルといったものです。",
      APOSTILLE_NO_NTY: "NTYファイルがロードされていません、自動的にインポートするにはこちらをクリックしてください。もしくは自動的に生成されます。",
      APOSTILLE_IMPORT_FILES: "ファイルのインポート",
      APOSTILLE_CREATE_TEXT: "テキストドキュメントを作成",
      APOSTILLE_ENTER_TEXT: "公証するテキストを入力してください...",
      APOSTILLE_DOCUMENT_TITLE: "ドキュメントタイトル",
      APOSTILLE_DROPBOX_MESSAGE: 'ファイルを選択する前に、パスワードと必要なタグを入力してください',
      APOSTILLE_DROPBOX_MESSAGE_2: 'ファイルを選択する前にパスワードを入力してください',

      // AUDIT APOSTILLE MODULE
      APOSTILLE_AUDIT_TITLE: "アポスティーユ（公証）を監査",
      APOSTILLE_AUDIT_CHOOSE_NODE: "ノードを選んでください。",
      APOSTILLE_AUDIT_CHOOSE_NODE_NOTE: "どんな少数のノードであっても、全取引履歴を検索する事ができます。 (オプションはNISにてデフォルト無効となっています。)",
      APOSTILLE_AUDIT_WRONG_FORMAT: "このファイルはアポスティーユ（公証）のフォーマットではありません。",
      APOSTILLE_AUDIT_FAIL_NO_PUBLIC_KEY: "認証に失敗しました。オーナーは公開鍵を持っていません。",
      APOSTILLE_AUDIT_SUCCESS: "ファイル監査に成功しました。",
      APOSTILLE_AUDIT_FAIL: "認証に失敗しました。",
      APOSTILLE_AUDIT_WAITING: "アポスティーユトランスファー（公証転送）は承認待ちの可能性があります。",
      APOSTILLE_AUDIT_NOT_FOUND: "トランザクションが見つかりません。トランザクションの承認待ち状態を確認できなかった場合、このアポスティーユ（公証）は無効です。",
      APOSTILLE_AUDIT_ERROR_UNCONFIRMED: "未承認データの取り込み中にトランザクションが見つからないエラーが発生しました",
      APOSTILLE_AUDIT_ERROR_SIGNER: "署名者データの取り込み中にエラーが発生しました。",
      APOSTILLE_AUDIT_ERROR_SIGNATURE: "署名認証に失敗したためエラーが発生しました。",
      APOSTILLE_AUDIT_INFORMATION_1: "監査できるファイルは、<b>アポスティーユ形式（公証済形式）</ b>でなければなりません。",
      APOSTILLE_AUDIT_INFORMATION_2: "ファイル名でそれらを認識できます。",
      //APOSTILLE_AUDIT_NON_SIGNED: "署名なしの例:",
      //APOSTILLE_AUDIT_SIGNED: "署名の例:",
      APOSTILLE_AUDIT_FILES: "監査ファイル",
      APOSTILLE_AUDIT_FORMAT_EXAMPLE: "アポスティーユ形式の例",
      APOSTILLE_AUDIT_REMOVE_RECORDS: "ローカルの検証結果を削除",

      // APOSTILLE MESSAGE MODULE
      APOSTILLE_MESSAGE_TITLE: '公証アカウントにメッセージを送信する',
      APOSTILLE_MESSAGE_NS_BRAND: 'ブランドメッセージにネームスペースを使用する',
      APOSTILLE_MESSAGE_ADD_MOSAIC: 'モザイクの追加',
      APOSTILLE_NTY_ACCOUNT: '公証アカウント',
      APOSTILLE_REQUEST_MESSAGE: 'リクエストメッセージ',
      APOSTILLE_CREATE_MESSAGE_REQUEST: 'メッセージリクエストの作成',

      // TRANSFER APOSTILLE OWNLERSHIP MODULE
      APOSTILLE_TRANSFER_TITLE: 'アポスティーユ所有権の譲渡または分割',

      // UPADTE APOSTILLE MODULE
      APOSTILLE_UPDATE_TITLE: 'アポスティーユを更新する',

      // ERROR ALERTS
      ALERT_MISSING_FORM_DATA: "フォームの必須事項を全て入力してください。",
      ALERT_ERROR_WALLET_DOWNLOAD: "ウォレットが見つからなかった為ダウンロードできません。",
      ALERT_PASSWORDS_NOT_MATCHING: "入力されたパスワード・フレーズが適合しませんでした。",
      ALERT_INVALID_KEY_FOR_ADDR: "入力されたアドレスに秘密鍵が対応していません。",
      ALERT_NO_WALLET_LOADED: "ウォレットなしにダッシュボードにアクセスすることはできません。",
      ALERT_WALLET_NAME_EXISTS: "すでに同じ名前のウォレットがロードされています。",
      ALERT_INVALID_WALLET_FILE: "ウォレットではないファイルをロードしようとしています。",
      ALERT_NO_NODE_SET: "ノードをセットしてください。",
      ALERT_INVALID_CUSTOM_NODE: "カスタムノードが正しくありません。",
      ALERT_INVALID_WEBSOCKET_PORT: "カスタムノードの websocket ポートが正しくありません。",
      ALERT_MIJIN_DISABLED: "Mijin ネットワークは無効です。他のネットワークを選択してください。",
      ALERT_GET_NS_BY_ID_ERROR: "ネームスペースを取得時にエラーが発生しました。要因：",
      ALERT_GET_ACCOUNT_DATA_ERROR: "アカウントデータを取得時にエラーが発生しました。要因：",
      ALERT_ERROR_OCCURRED: "エラーが発生しました。",
      ALERT_INVALID_ADDR_FOR_NETWORK: "ネットワークに対応していません。",
      ALERT_INVALID_PASSWORD: "パスワードが正しくありません。",
      ALERT_COSIG_ALREADY_IN_LIST: "署名者はすでに存在しています。",
      ALERT_COSIGNATORY_HAS_NO_PUBLIC: "署名者は公開鍵を取得するために最低１回はトランザクションを発生させる必要があります。",
      ALERT_MULTISIG_HAS_NO_PUBLIC: "マルチシグアカウントは公開鍵を取得するために、最低１回はトランザクションを発生させる必要があります。",
      ALERT_COSIG_CANNOT_BE_MULTISIG: "選択されたアカウントは他のマルチシグアカウントの連署者となりますので、これは変換できません。",
      ALERT_NO_NS_OWNED: "アカウントは1つもネームスペースを所持していません。ネームスペースを最低1つ作成するかアカウントを変更してください。",
      ALERT_UNLOCKED_INFO_ERROR: "アンロック情報の取り込み中にエラーが発生しました。",
      ALERT_LOCK_ERROR: "アカウントロックのエラー。要因:",
      ALERT_UNLOCK_ERROR: "アカウントのロック解除エラー。要因:",
      ALERT_SUPERNODES_ERROR: "スーパーノードデータの取り込み中にエラーが発生しました。",
      ALERT_INVALID_NTY_FILE: "提供されるファイルは .nty ファイルではありません。",
      ALERT_CREATE_WALLET_FAILED: "ウォレットの作成に失敗しました。要因:",
      ALERT_REQUEST_FAILED: 'リクエストは失敗しました。 原因: ',
      ALERT_DERIVATION_FROM_SEED_FAILED: "シードからアカウントを導出するのに失敗しました。要因:",
      ALERT_BIP32_GENERATION_FAILED: "BIP32 データの生成に失敗しました。要因:",
      ALERT_NO_WALLET_DATA: "ウォレットデータが空です。",
      ALERT_CANNOT_LOGIN_WITHOU_WALLET: "ウォレットなしではログインできません。",
      ALERT_NO_WALLET_TO_SET: "現在のウォレットとしてセットすることはできません。",
      ALERT_INVALID_WALLET_INDEX: "選択されたアカウントのインデックスは範囲外です。",
      ALERT_NO_CURRENT_WALLET: "アカウントに現在のウォレットの設定ができません。",
      ALERT_ALREADY_MULTISIG: "選択されたアカウントはすでにマルチシグアカウントです。",
      ALERT_INVALID_MODIFICATION_ARRAY: "このマルチシグアカウントは署名者になれません。変更履歴を確認してください。",
      ALERT_GET_MARKET_INFO_ERROR: "市場情報の取得中にエラーが発生しました。",
      ALERT_MULTISIG_CANNOT_BE_COSIG: "このマルチシグアカウントに連署者を設定できません。",
      ALERT_PURGE_CANCELLED: "アカウントデータ消去処理（パージ）はキャンセルされました。",
      ALERT_MAINNET_DISABLED: "Mainnetは無効です。別のネットワークを選択してください。",
      ALERT_EMPTY_DECODED_MSG: "復号されたメッセージはありません。",
      ALERT_INVALID_NS_NAME: "ネームスペース名が無効です。",
      ALERT_INVALID_MOSAIC_NAME: "モザイク名が無効です。",
      ALERT_MOSAIC_DESCRIPTION: "モザイクの概要が無効です。",
      ALERT_GET_INCOMING_TXES_ERROR: '入力トランザクションの取得エラー, 理由: ',
      ALERT_GET_MOSAICS_DEFINITIONS_ERROR: 'モザイク定義の取得エラー, 理由: ',
      ALERT_GET_SUB_NS_ERROR: 'ネームスペース定義の取得エラー（SUB_NS）, 理由: ',
      ALERT_GET_MOSAICS_ERROR: 'モザイク取得エラー, 理由: ',
      ALERT_GET_TRANSACTIONS_ERROR: 'トランザクション取得エラー, 理由: ',
      ALERT_INVALID_ADDRESS_BOOK_FILE: 'これは .adb ファイルではありません!',
      ALERT_INVALID_ADDRESS: '指定されたアドレスは無効です!',
      ALERT_INVALID_AMOUNT: '金額が無効です!',
      ALERT_INVALID_PRIVATE_KEY: '提供された秘密鍵は無効です!',
      ALERT_FILE_SIZE_ERROR: ' が大きすぎます。最大サイズは100MBです。',
      ALERT_MESSAGE_DECODE_KEY_ERROR: 'アカウントの公開鍵がネットワーク上にないため、メッセージの暗号化に失敗しました。',
      ALERT_FETCH_TIME_SYNC_ERROR: 'ネットワークから時刻を取得中にエラーが発生しました!',
      ALERT_MULTISIG_MIN_SIGNATURE: 'マルチシグアカウントは、最低1名の署名者が必要です',
      ALERT_BTC_MARKET_ERROR: 'Bitcoinの価格の取得に失敗しました',
      ALERT_COSIG_REMOVAL_LIMIT: '一度に削除できる署名者は1名だけです',
      ALERT_MULTISIG_MIN_SIGNATURE_INVALID: '最小署名者数が無効な値です',
      ALERT_INSUFFICIENT_BALANCE: '操作をするために必要な残高が不足しています',
      ALERT_VOTING_ERROR: '無効な投票です',
      ALERT_BRAIN_PASSWORD_TOO_SHORT: 'ブレインウォレットのパスフレーズは最低でも40文字以上にしてください！',
      ALERT_NODE_SEEMS_OFFLINE: 'ノードがオフラインになっています。別のノードを選択してください。',
      ALERT_WEAK_PASSPHRASE: 'パスフレーズのセキュリティースコアは少なくとも3でなければなりません。',
      ALERT_BRAIN_WALLET_UPGRADE: 'ブレインウォレットのパスフレーズが弱すぎます! 全てのブレインウォレットは、少なくとも40文字以上のパスフレーズを使用する必要があります。<br>アカウント作成ページから新しいウォレットを作成し、それに資金を移すことをお勧めします。<br>詳しくは<a href="https://forum.nem.io/t/2791" target="_blank"><u>こちら</u></a>をご覧ください。',
      ALERT_RECIPIENT_PUBLIC_KEY: '受信者はネットワーク上で確認できる公開鍵を持っていません',
      ALERT_ENCRYPT_MULTISIG: 'マルチシグアカウント経由では暗号化メッセージを送信できません',
      ALERT_EXCHANGE_NEEDS_MESSAGE: '受信者は取引所のウォレットなので、あなたのアカウントに正しく入金されるにはメッセージが必要です。取引所の入金方法をよく確認してください！',
      ALERT_ACCOUNT_ALREADY_IN_ADDRESS_BOOK: 'コンタクトは既にアドレスブックに登録されています！',
      ALERT_MAX_MOSAIC_SUPPLY: 'モザイク最大供給量は 9\'000\'000\'000 です。',
      ALERT_GET_MOSAIC_SUPPLY_ERROR: 'モザイクの供給量取得エラーです。理由: ',
      ALERT_ENCRYPTED_MSG_OFFLINE: '暗号化されたメッセージングは​​オフライントランザクションでは有効になっていません',

      // SUCCESS ALERTS
      ALERT_CREATE_WALLET_SUCCESS: "ウォレットが正常に作成され、ロードされました。",
      ALERT_SUCCESS_PURGE: "アカウントはローカルストレージから正常に消去（パージ）されました。",
      ALERT_SUCCESS_LOGOUT: "正常にログアウトされました。",
      ALERT_LOAD_WALLET_SUCCESS: "ウォレットが正常にロードされました。",
      ALERT_TRANSACTION_SUCCESS: "トランザクションが正常に送信されました。",
      ALERT_GENERATE_ACCOUNT_SUCCESS: "アカウントが正常に生成されました。ウォレットのアップデートをお忘れなく。",
      ALERT_UPGRADE_SUCCESS: "ウォレットは正常にアップグレードされました。",
      ALERT_SIGNATURE_SUCCESS: "トランザクションは正常にサインされました。",
      ALERT_NTY_FILE_SUCCESS: ".nty ファイルは正常にロードされました。",
      ALERT_INCOMING_TX_FROM: "トランザクションを受信",
      ALERT_ADDRESS_BOOK_FILE_SUCCESS: 'アドレス帳のインポートに成功しました!',
      ALERT_VOTING_SUCCESS: '投票の送信に成功しました。',
      ALERT_POLL_CREATION_SUCCESS: '投票の作成に成功しました。',
      ALERT_COPY_SIGNED_TX_SUCCESS: '署名済みトランザクションをコピーしました！',
      ALERT_COPY_SIGNED_MSG_SUCCESS: '署名済みメッセージをコピーしました！',

      // CONVERT ACCOUNT TO MULTISIG
      AGGREGATE_MODIFICATION_TITLE: "マルチシグアカウントへ変換",
      AGGREGATE_MODIFICATION_NAME: "アグリゲートモディフィケーショントランザクション（マルチシグ連署者追加・削除等)",
      AGGREGATE_MODIFICATION_MULTISIG_NAME: "マルチシグアグリゲートモディフィケーショントランザクション(マルチシグ連署者追加・削除等)",
      AGGREGATE_ACCOUNT_SELECT_TITLE: 'アカウントの変換',
      AGGREGATE_ACCOUNT_SELECT: "変換するアカウントを選択",
      AGGREGATE_CUSTOM_ACCOUNT: "カスタムアカウントを使用",
      AGGREGATE_ACCOUNT_TO_CONVERT_PRIVATE_TITLE: 'アドレスの秘密鍵',
      AGGREGATE_ACCOUNT_TO_CONVERT: "マルチシグ変換するアカウントのアドレス",
      AGGREGATE_ACCOUNT_TO_CONVERT_PRIVATE: "マルチシグ変換するアカウントの秘密鍵",
      AGGREGATE_ADD_PLACEHOLDER: "連署アカウント、または @alias名 を追加",
      AGGREGATE_ADD_BTN_TITLE: "連署アカウントを追加",
      AGGREGATE_MIN_SIGNATURES: "最小署名数",
      AGGREGATE_MIN_SIGNATURES_PLACEHOLDER: "署名トランザクションを検証するために必要な最小連署者数",
      AGGREGATE_MODIFICATION_LIST: "修正リスト",
      AGGREGATE_COSIG_LIST: '連署者のリスト',

      AGGREGATE_MODIFICATION_EDIT_TITLE: "マルチシグネイチャーコントラクトを編集",
      AGGREGATE_MODIFICATION_EDIT_SELECT_TITLE: 'アカウントの編集',
      AGGREGATE_MODIFICATION_EDIT_SELECT: "編集するアカウントを選択",
      AGGREGATE_ADD_REMOVE_TITLE: '署名者の追加・削除',
      AGGREGATE_ADD_REMOVE_PLACEHOLDER: "連署アカウント、または @alias を追加",
      AGGREGATE_MODIFICATION_RELATIVE_CHANGE: "最小署名数の相対変化",
      AGGREGATE_MODIFICATION_RELATIVE_CHANGE_PLACEHOLDER: "\n追加 (n) または削除(-n) する署名の数 - 自動除去",
      AGGREGATE_SELECTED_ACCOUNT_INFO: "選択されたアカウントの情報",
      AGGREGATE_MIN_SIGNATURES: '最小署名者数',
      AGGREGATE_SELECT_WALLET_ACCOUNT: "使用するウォレットアカウント",
      AGGREGATE_ADD_COSIG: '連署者の追加',
      AGGREGATE_REMOVE_COSIG: '連署者の削除',

      // SIGN MULTISIGNATURE TRANSACTIONS
      SIGN_MULTISIG_TRANSACTIONS_TITLE: 'マルチシグトランザクションの署名',

      // LOGIN MODULE
      LOGIN_MEMBER_TITLE: "あなたは NEMber ですか？",
      LOGIN_UPGRADE_TITLE: "ウォレットのアップグレードが必要です",
      LOGIN_UPGRADE_MESSAGE: "選択されたウォレットは、アップグレードが必要です。このアクションでは、サブの公開鍵を生成し、メインのアカウントに追加されます。更新されたウォレットのダウンロードが自動的に開始される為には、それを <b><u>ダウンロード</u></b>する必要があります。",
      LOGIN_UPGRADE_BUTTON: "ウォレットをアップグレード",
      LOGIN_IMPORT_BUTTON: "ウォレットをインポート",
      LOGIN_SELECT_WALLET_YOURS: 'ウォレットの選択',
      LOGIN_SELECT_WALLET: "ローカルストレージからウォレットを選択してください。",
      LOGIN_LOGIN_BUTTON: "サインイン",
      LOGIN_NOTE: 'ウォレットがない？インポートするか<a href="#!/signup">作成しましょう</a>',

      // SIGNUP MODULE
      SIGNUP_TITLE: "NEM を始めますか?",
      SIGNUP_SELECT_WALLET_TYPE: 'ウォレットのタイプを選んでください',
      SIGNUP_SELECT_WALLET_TYPE_STAND_BY: 'ウォレットタイプの説明はカーソルを合わせると表示されます。',
      SIGNUP_CREATE_WALLET_TITLE: "シンプルウォレット",
      SIGNUP_CREATE_WALLET_INFO: 'シンプルウォレットはランダムに生成された秘密鍵を含みます。',
      SIGNUP_PRIVATE_KEY_WALLET_TITLE: "プライベートキーウォレット",
      SIGNUP_PRIVATE_KEY_WALLET_INFO: 'プライベートキーウォレットはインポートしたい主秘密鍵を含みます。',
      SIGNUP_BRAIN_WALLET_TITLE: "ブレインウォレット",
      SIGNUP_BRAIN_WALLET_INFO: 'ブレインウォレットはパスフレーズからなる主秘密鍵を含みます。正確なパスフレーズを知っている場合だけウォレットを取り出すことができます。',
      SIGNUP_CREATE_WALLET_BUTTON: "シンプルウォレットを作成",
      SIGNUP_PRIVATE_KEY_WALLET_BUTTON: "プライベートキーウォレットを作成",
      SIGNUP_BRAIN_WALLET_BUTTON: "ブレインウォレットを作成",
      SIGNUP_CREATE_WALLET_WARNING: "クライアント側で生成された鍵の<a href=\"https://www.w3.org/TR/2014/WD-WebCryptoAPI-20140325/#RandomSource-interface\" rel=\"nofollow\" target=\"_blank\">危険性</a>についてお読みください。鍵生成の偏りなどが原因で損失が発生しても保証できません。損失が発生する可能性は極めて低いですが、NEM クライアントから生成された秘密鍵を使用することをお勧めします。",
      SIGNUP_NETWORK_SELECT: "ネットワークを選択してください。",
      SIGNUP_NETWORK_MAINNET: 'Mainnetは<b><u>現実に価値を持つ</u></b>NEMのネットワークです。アドレスは\'N\'から始まります。',
      SIGNUP_NETWORK_TESTNET: 'Testnetは<b><u>テスト用</u></b>のNEMのネットワークです。アドレスは\'T\'から始まります。',
      SIGNUP_NETWORK_MIJIN: 'MijinはNEMのプライベート版です。アドレスは\'M\'から始まります。',
      SIGNUP_BRAIN_WALLET_WARNING: "ブレインウォレットの<a href=\"https://en.bitcoin.it/wiki/Brainwallet\" rel=\"nofollow\" target=\"_blank\">危険性</a>について留意してください。ブレインウォレットはハッシュ化されたパスフレーズのみを利用し何度も使用されます。したがって、少なくとも40文字以上の「安全な」パスフレーズを選んでください。<a href=\"https://xkcd.com/936/\" rel=\"nofollow\" target=\"_blank\">XKCD #936</a>",
      SIGNUP_PRIVATE_KEY_WALLET_WARNING: "プライベートキーウォレットは、インポートされた秘密鍵を暗号化するためにパスワードのみを使用します。したがって、「安全な」パスワードを利用する事が重要です。 ",
      SIGNUP_CREATE_START_WARNING: '各ステップは慎重に行ってください！',
      SIGNUP_CREATE_START_CONNECTION_WARNING: 'ウォレットの作成とデータのバックアップ中にはインターネットから切断することを推奨します。',
      SIGNUP_CREATE_READY_BTN: '準備できました',
      SIGNUP_CREATE_ENTER_NAME: 'ウォレット名を入力してください',
      SIGNUP_CREATE_ENTER_PASSWORD: 'パスワードを入力してください',
      SIGNUP_CREATE_ENTER_PASSPHRASE: 'パスフレーズを入力してください',
      SIGNUP_CREATE_CONFIRM_PASSWORD: 'パスワードを再入力してください',
      SIGNUP_CREATE_CONFIRM_PASSPHRASE: 'パスフレーズを再入力してください',
      SIGNUP_CREATE_ENTER_PRIVATE_KEY: '秘密鍵を入力してください',
      SIGNUP_CREATE_ADDRESS_FROM_PK: '上記のキーに対応するアドレス',
      SIGNUP_CREATE_WALLET_ADD_ENTROPY_INFO: 'これからあなたの秘密鍵を生成します。<b>スタートボタンを押して、エントロピーを増大させるためにカーソルを動かしてください。</b>',
      //SIGNUP_COMMON_WALLET_WARNING: 'ウォレットは、<a><b>一時的に</b></a>ブラウザ内のローカルストレージに保存されます。ウォレット作成後に自動的にダウンロードされる .wlt ファイルはバックアップとして利用します。ブラウザのローカルストレージが削除された場合は、このファイルからインポート可能です。バックアップとして、.wlt ファイルを保存していない場合は、アカウントにログインして、秘密鍵をコピーし安全な場所にバックアップして下さい。バックアップされている事を確認してから、自己の責任に於いてアカウントに資金を送金してください。',
      //SIGNUP_COMMON_WALLET_WARNING_FOOTER: '以下をクリックすると、上記の警告を読み、理解したことに同意したことになります。',
      SIGNUP_COMMON_WALLET_WARNING_TITLE: 'アカウントを安全に使用する為に',
      SIGNUP_COMMON_WALLET_WARNING_1: 'ウォレットはブラウザのローカルストレージに<b>一時的に</b>保存されます。ブラウザは、任意のアドオン等によりローカルストレージがクリアされてしまう事があります。 これはデータの損失につながり、簡単に取り消すことはできません。 このような場合、ウォレットはなくなりますので、アカウントを復元するために必要な情報がすべてそろっていることを確認することが非常に重要です。',
      SIGNUP_COMMON_WALLET_WARNING_2: 'ウォレットを作成した後、ダウンロードが開始されます。バックアップとして使用され、ブラウザのローカルストレージが消去された場合にインポートする <b><i>.wlt</i></b> ファイルです。',
      SIGNUP_COMMON_WALLET_WARNING_3: 'バックアップした <b><i>.wlt</i></b> ファイルがない場合は、下のボタンをクリックしてウォレットデータを表示し、ファイルを手動で作成します。',
      SIGNUP_COMMON_WALLET_WARNING_4: 'ウォレットファイルを持っていても、アカウントの秘密鍵のバックアップは<b><u>必修</u></b>です。下記ボタンをクリックすると表示されます。',
      SIGNUP_COMMON_WALLET_WARNING_5: 'あなたの秘密鍵がバックアップされていることを確認した後に、あなたのアカウントに自己の責任において資金を送金してください。',
      SIGNUP_COMMON_WALLET_WARNING_6: 'それぞれのウォレットは、<b><u>主秘密鍵</u></b>（上に表示される）を持っています。それは2番目のアカウントを作成するためにも使用されます(BIP32)。この機能は<b><u>同じパスワード</u></b>を使用する必要があり、そうでない場合には同じ主秘密鍵を利用しても、異なるセカンダリアカウントを生成します。あなたがデータをバックアップする際には、忘れずに<b><u>あなたのパスワードを書き留めてください</u></b>。',
      SIGNUP_COMMON_WALLET_WARNING_BTN_1: 'ウォレットファイルの表示',
      SIGNUP_COMMON_WALLET_WARNING_BTN_1_INFO: 'ウォレットファイルを作成するには、空のテキストファイルを作成し、上記のBase64で作成されたキーを記入します。ファイルを<b><i>yourWalletName.wlt</i></b>という名前で保存し、インポートすることができます。',
      SIGNUP_COMMON_WALLET_WARNING_BTN_2: 'プライベートキーの表示',
      SIGNUP_COMMON_WALLET_WARNING_BTN_2_INFO: '秘密鍵はアカウントの全ての権限を持つので必ず秘密にしてください。<b>絶対に誰にも教えてはいけません</b>。秘密鍵は安全でオフラインな場所に保管することを<b>強く推奨します</b>。',
      SIGNUP_COMMON_WALLET_WARNING_FOOTER: '以下をクリックすると、上記全ての警告を読み理解し同意したことになります。',
      SIGNUP_COMMON_WALLET_WARNING_CONFIRM_1: 'ウォレットファイルをバックアップしました',
      SIGNUP_COMMON_WALLET_WARNING_CONFIRM_2: '秘密鍵とパスワードをバックアップしました',
      SIGNUP_COMMON_WALLET_WARNING_CONFIRM_3: '私は全ての内容を理解し同意しました',  //このあたりは、英文より厳しく書いてます。
      SIGNUP_COMMON_WALLET_WARNING_UNDERSTOOD: '理解し同意しました',
      SIGNUP_COMMON_WALLET_WARNING_DOWNLOAD: 'ウォレットをダウンロードする',
      SIGNUP_ESTIMATED_PASSPHRASE_STRENGTH: '推定パスフレーズ強度',
      SIGNUP_ESTIMATED_GUESS_TIMES: '推定解析時間',
      SIGNUP_CONGRATS_MSG: '<b>おめでとう！</b> あなたの NEM アドレスは',

      // FAQ MODULE
      FAQ_TITLE: "よくある質問",
      FAQ_QUESTION_1: "どのように NEM Wallet は動作しますか？",
      FAQ_ANSWER_1: "NEM Wallet は ES6, AngularJS そして 最新の暗号ライブラリを使用して構築されています。これは完全なクライアントサイドアプリケーションで、ネット上に機密データが送信されることはありません。秘密鍵の作成からトランザクションの署名まで全てあなたのブラウザ上で完結します。",
      FAQ_QUESTION_2: "このウォレットは無料で使えますか？",
      FAQ_ANSWER_2: "はい。追加使用料等は発生しません。全処理は完全にクライアント側で行われます。あなたのコインは第三者の干渉を受けずあなたしか操作することができません。",
      FAQ_QUESTION_3: "なぜ最初からに モザイク を1つ所有しているのですか？",
      FAQ_ANSWER_3: "XEMはNEMブロックチェーンのデフォルトの通貨なので、その残高がゼロであっても、すべてのユーザーのウォレットにはそれが登録されています。そのネームスペースは NEM であり、モザイクの名前は XEM です。",
      FAQ_QUESTION_4: "今後の予定は？",
      FAQ_ANSWER_4: "現在のロードマップには、NEM クライアントの機能を組み込むこと、NEM Wallet の中で機能するコミュニティによって出資されたプロジェクトの完成などが含まれています。",
      FAQ_QUESTION_5: "無料で XEM を入手することはできますか？",
      FAQ_ANSWER_5: "現在 NEM フォーセットは停止していますが、NEM フォーラムで報酬として受け取る方法について相談できます。",
      FAQ_QUESTION_6: "どこで NEM に関するもっと詳しい情報を得ることができますか？",
      FAQ_ANSWER_6_FORUM: "公式フォーラム",
      FAQ_ANSWER_6_WEBSITE: "公式ウェブサイト",
      FAQ_ANSWER_6_BTT: "公式 BitcoinTalk スレッド",
      FAQ_QUESTION_7: 'ダッシュボードに何も表示されません',
      FAQ_ANSWER_7: 'トップのナビゲーションバーにあるノードの円アイコンを確認してください。<br>赤い円はノードへの接続に失敗していることを表します。<br>"ノード"をクリックし、ほかのノードをドロップダウンリストから選択するかカスタムノードを指定してください。<br><a href="https://supernodes.nem.io" target="_blank">Supernodes.nem.io</a>に利用可能なノードが掲載されています。</a>',
      FAQ_QUESTION_8: '連署者に署名してほしいトランザクション表示されません。',
      FAQ_ANSWER_8: 'この場合、"サービス"へ移動し、"マルチシグおよびマルチユーザーアカウント"の項目から"マルチシグトランザクションの署名"を選択してください。',
      FAQ_QUESTION_9: '最適なセキュリティは？',
      FAQ_ANSWER_9: '特に推奨するのは秘密鍵を紙に保存することです。<br>プリントアウトしてどこか安全な所で保管してください。<br><br>ウォレットファイルについても同様に、複数のコピーをUSBメモリなどのオフラインな場所に保存してください。<br>パスワードは一意で複雑にしてください。そのため、まずは書き留めておいてください。<br><br>ウォレットを確認する、もしくは操作をしたいときは:<br> - USBメモリを指します<br> - NEM Walletにインポートします<br> - USBメモリを抜きます<br><br> ウォレットのコピーは必要な時にブラウザのローカルストレージに保存されます。<br>作業が終わったら、ログアウトし、フッターの右端にある削除ボタンでローカルストレージ内のウォレットを削除してください。',
      FAQ_QUESTION_10: 'どこに自分のアカウントの情報(アドレスなど)がありますか？',
      FAQ_ANSWER_10: '上部のナビゲーションバーにある<b><i>"ノード"</b></i>と<b><i>"言語"</b></i>の間に<b><i>"アカウント"</b></i>ボタンがあります。ここでアドレスや公開鍵、既得バランスなどの重要な情報を得られます。',
      FAQ_QUESTION_11: '交換所にXEMを入金しましたが、残高に反映されません。',
      FAQ_ANSWER_11_1: '最初にあなたのトランザクションを<a target="_blank" href="http://chain.nem.ninja">エクスプローラー</a>上に表示されるか確認してください。(エクスプローラーには数ブロック程度の遅延があります)',
      FAQ_ANSWER_11_2: 'ほとんどの交換所はあなたの入金を識別するためにメッセージを要求します。各交換所においての手順をよく理解し、暗号化していないメッセージを添付してください。',
      FAQ_ANSWER_11_3: '交換所の問題によって、メッセージを添付しているにも関わらずあなたの入金が処理されない場合もあります。',
      FAQ_ANSWER_11_4: '交換所のサポートへトランザクションのハッシュを提供して状態を説明してください。',
      FAQ_QUESTION_12: 'フォーク上にいるかを確認するためには？',
      FAQ_ANSWER_12_1: '上部のナビゲーションバーから<b><i>"ノード"</b></i>をクリックし、ノードパネルを開きます。',
      FAQ_ANSWER_12_2: 'ブロック高について<a target="_blank" href="http://hugealice.nem.ninja:7890/chain/height">ここ</a>で表示できる高さと比較してみてください。',
      FAQ_ANSWER_12_3: 'もし5ブロック以上差がある場合はフォークしているかもしれません。',
      FAQ_ANSWER_12_4: '補正するためにはノードパネルのドロップダウンリストから他のノードを選択してください。ネットワーク上の最新の情報でアカウントが再読込されます。',

      // FORM RELATED
      FORM_PASSWORD_FIELD_PLACEHOLDER: "ウォレットのパスワード、もしくはパスフレーズを入力してください。",
      FORM_WALLET_NAME_FIELD_PLACEHOLDER: "ウォレット名",
      FORM_SIGNUP_PASSWORD_FIELD_PLACEHOLDER: "パスワード",
      FORM_PASSWORD: 'パスワード',
      FORM_PASSWORD_CONFIRM: 'パスワードを確認',
      FORM_PASSPHRASE_CONFIRM: 'パスプレーズを確認',
      FORM_CONFIRM_PASSWORD_FIELD_PLACEHOLDER: "パスワードを確認",
      FORM_PASSPHRASE_FIELD_PLACEHOLDER: "パスフレーズ",
      FORM_CONFIRM_PASSPHRASE_FIELD_PLACEHOLDER: "パスフレーズを確認",
      FORM_ADDRESS_FIELD_PLACEHOLDER: "アカウントアドレス",
      FORM_PRIVATE_KEY_FIELD_PLACEHOLDER: "秘密鍵",
      FORM_SIDE_BTN_BALANCE: "バランス（残高）",
      FORM_SIDE_BTN_PAY_TO: "支払先",
      FORM_SIDE_BTN_TX_FEE: "取引手数料",
      FORM_SIDE_BTN_RENTAL_FEE: "レンタル料",
      FORM_SIDE_BTN_LEVY_FEE: "徴収料",
      FORM_RECIPIENT_PLACEHOLDER: "受信者のアドレスまたは @alias",
      FORM_INVOICE_RECIPIENT_PLACEHOLDER: "受信者のアドレス",
      FORM_SIDE_BTN_ALIAS_OF: "エイリアス",
      FORM_MESSAGE_PLACEHOLDER: "メッセージ",
      FORM_MOSAIC_NAME_PLACEHOLDER: "モザイク名",
      FORM_ADDRESS_ALIAS_PLACEHOLDER: 'アカウントアドレス 又は @エイリアス名',
      FORM_BTN_GET_ALIAS: 'エイリアスアドレスを取得',
      FORM_BTN_OPEN_ADB: 'アドレス張を開く',
      FORM_SELECT_NAMESPACE: 'ネームスペースを選択する',

      // VOTING MODULE
      PORTAL_VOTING_TITLE: 'Voting',
      PORTAL_VOTING_TEXT: 'Create and vote on polls',
      PORTAL_VOTING_BTN1: 'See Polls',
      PORTAL_VOTING_BTN2: 'Create Poll',
      FORM_TITLE_FIELD_PLACEHOLDER: 'Title',
      FORM_DESCRIPTION_FIELD_PLACEHOLDER: 'Write your description here',
      FORM_OPTION_FIELD_PLACEHOLDER: 'write option',
      FORM_WHITELIST_FIELD_PLACEHOLDER: 'account address',
      FORM_SELECT_MULTISIG: 'Select a multisignature account',
      FORM_SELECT_CONTACT: 'Select a contact',

      // TREZOR RELATED
      TREZOR_TITLE: 'TREZOR',
      TREZOR_TEXT: 'ハードウェアウォレットのTREZORはXEM、モザイク、マルチシグアカウントを保護できます。',
      TREZOR_BUTTON: 'TREZORでログイン',

      // LEDGER NANO RELATED
      LEDGER_NANO_TITLE: 'LEDGER NANO',
      LEDGER_NANO_TEXT: 'LEDGER NANO ハードウェアウォレットを使用すると、XEM、モザイク、マルチシグアカウントを安全に管理出来ます。',
      LEDGER_NANO_BUTTON: 'LEDGER NANOでログイン',
      LEDGER_NANO_NO_DEVICE: 'Ledgerデバイスが見つかりません。',
      LEDGER_NANO_CHECK_DEVICE: 'Please check your Ledger device!',
      LEDGER_NANO_NOT_USING_NEM_APP: 'Ledgerデバイスで NEMアプリが使用されていません。',
      LEDGER_NANO_NOT_USING_XYM_APP: 'Ledgerデバイスで Symbolアプリが使用されていません。',
      LEDGER_NANO_NOT_SUPPORTED_APP: 'Ledgerデバイスで最新の NEMアプリケーションを開いているか確認してください。',
      LEDGER_NANO_CONNECTED_OTHER_APP: 'Another app is already connected to your Ledger device. Please close it then try again',
      LEDGER_NANO_NOT_OPENED_NEM_APP: 'Ledgerデバイスで NEMアプリを開いてください。',
      LEDGER_NANO_NOT_OPENED_XYM_APP: 'Ledgerデバイスで Symbolアプリを開いてください。',
      LEDGER_NANO_DEVICE_LOCKED: 'Ledgerデバイスのロックを解除してください。',
      LEDGER_NANO_USER_REJECT_LOGIN: 'ユーザーによってログインはキャンセルされました。',
      LEDGER_NANO_USER_REJECT_REQUEST: 'ユーザーによってリクエストはキャンセルされました。',
      LEDGER_NANO_FOLLOW_INSTRUCTION: 'Ledgerデバイスの指示に従ってください。',
      LEDGER_NANO_TRANSACTION_TOO_BIG: 'トランザクション文字列が長すぎます。',
      LEDGER_NANO_TRANSACTION_USER_CANCEL: 'ユーザーによって署名がキャンセルされました。',
      LEDGER_NANO_TRANSACTION_FAILED: 'トランザクションの署名に失敗しました。　原因: ',
      LEDGER_NANO_OPTIN_INFO_1: 'Symbol Ledgerアプリを使用して、Symbolオプトインのアカウントを取得できます。',
      LEDGER_NANO_OPTIN_INFO_2: 'デバイスでSymbol Ledgerアプリを開き、Symbolアカウントのインポートをクリックしてください。',
      LEDGER_NANO_IMPORT_SYMBOL: 'Symbol アカウントをインポートする。',

      // CREATE OFFLINE TRANSACTION MODULE
      OFFLINE_TX_TITLE: 'オフライントランザクションの準備',
      OFFLINE_TX_NO_WALLET: 'フォームを表示するためにログイン画面からウォレットをインポートしてください。',
      OFFLINE_TX_INFO_1: '安全性を確保するため、コンピュータがインターネットに<b>接続していない</b>ことを確認してください。',
      OFFLINE_TX_INFO_2: 'NEMノードからモザイクやマルチシグ情報を取得するにインターネット接続が必要なので、単純なトランザクションだけ作成できます。',
      OFFLINE_TX_INFO_3: '左側のパネルの"作成"ボタンをクリックすると、下部に署名済みトランザクションが表示されます。',
      OFFLINE_TX_INFO_4: '署名済みトランザクションは変更不可であり、デフォルト期限の24時間以内にリリースされた場合にだけ有効になります。',
      OFFLINE_TX_SIGNED: '署名済みトランザクション',
      OFFLINE_TX_RELEASE: 'リリースモジュールで開く',
      OFFLINE_TX_MODAL_ALERT: 'このコンピュータはインターネットに接続されているようです。安全にオフライントランザクションを作るために<b>インターネットに接続されていないコンピュータ上だけ</b>で行ってください。',

      // RELEASE OFFLINE TRANSACTION MODULE
      RELEASE_OFFLINE_TX_TITLE: 'トランザクションをネットワークにリリース',
      RELEASE_OFFLINE_TX_PARAMETERS: 'トランザクションのパラメータ',
      RELEASE_OFFLINE_TX_INFO_1: 'トランザクションをリリースするにはインターネットへの接続が必要です。',
      RELEASE_OFFLINE_TX_INFO_2: '対応するネットワークの稼働中ノードを選択していることを確認してください。間違っている場合は拒否されます。',
      RELEASE_OFFLINE_TX_INFO_3: '署名済みトランザクションを2度送信することはできません。トランザクションは常に同じハッシュを生成し、2つのトランザクションは同じハッシュを持つことができません。',
      RELEASE_OFFLINE_TX_INFO_4: '署名済みトランザクションはいかなるコンピュータからでも安全にリリースできます。',

      // INVOICE MODULE
      CREATE_INVOICE_TITLE: '請求書を作成',

      // CREATE SIGNED MESSAGE MODULE
      CREATE_SIGNED_MSG_TITLE: "署名済みメッセージの作成",
      CREATE_SIGNED_MSG_NAME: '署名済みメッセージ',
      CREATE_SIGNED_MSG_SIGN: 'メッセージに署名',

      // VERIFY SIGNED MESSAGE MODULE
      VERIFY_SIGNED_MSG_TITLE: "署名済みメッセージの検証",
      VERIFY_SIGNED_MSG_SIG_VALID: '署名は有効です',
      VERIFY_SIGNED_MSG_SIG_NOT_VALID: '署名は<b>不正</b>です',
      VERIFY_SIGNED_MSG_NOT_VALID: '署名済みメッセージが不正です！',

      // DNS MODULE
      DNS_SHORT_DESC: "namespace.nemドメイン用の分散ドメインネームシステム(DNS)サービス",
      DNS_CONFIGURE: "DNSの設定",
      DNS_SEARCH_DNS: "DNSの検索",
      DNS_GO_SEARCH: "検索",
      DNS_GET_INFO: "情報取得",
      DNS_SEARCH_HEADLINE: "DNSの検索",
      DNS_SEARCH_HELP: "DNSのヘルプ",
      DNS_SEARCH: "検索",
      DNS_SEARCH_HELP_INFO: "namespace.nemを入力して関連するDNS情報を参照するか、直接ウェブサイトに移動します。",
      //DNS CONFIGURE
      DNS_SELECT_NAMESPACE:"ネームスペースの選択",
      DNS_POINTER_ADDRESS:"ポインタアドレス",
      DNS_IP_ADDRESS:"IPアドレス",
      DNS_ORGA:"組織",
      DNS_COUNTRY:"国籍",
      DNS_ADDRESS:"住所",
      DNS_PHONE:"電話番号",
      DNS_EMAIL:"Eメール",
      DNS_OTHERINFO:"その他",
      DNS_JSONMSG:"JSONメッセージ",
      DNS_CHAR_LEFT:"残り文字数",
      DNS_HELP1:"NEMネームスペースの所有者はNEM DNSが簡単な数ステップで使用できます。DNSはNEMエコシステムの名前空間プラットフォームと、関連付けられたポインターアドレス(PA)を中心に構築されています。ネームスペースの所有者は、ネームスペースに関連する情報を使用して、JSON形式の暗号化されていないメッセージを含む、ネームスペースポインタアドレスにトランザクションを送信する必要があります。メッセージには、IPアドレス、所有権情報、物理アドレス、連絡先情報などの関連情報を含めることができます。",
      DNS_HELP2:"このように使います:",
      DNS_HELP3:"1. ネームスペースを選ぶ",
      DNS_HELP4:"2. 関連を書き込むかDNS情報を更新する",
      DNS_HELP5:"3. ポインタアドレスへトランザクションを送る",
      //DNS ALERTS
      ALERT_DNS_SUCCESS: "情報が見つかりました",
      ALERT_DNS_NO_INFO_FOUND: "DNS情報が見つかりませんでした",

      // IMPORT WALLET QRCODE
      IMPORT_WALLET_QRCODE_TITLE: 'ウォレットQRコードのインポート',
      IMPORT_WALLET_QRCODE_INFORMATION: 'サポートしているウォレットQRコード: NEM wechat wallet, ios, android.',
      IMPORT_WALLET_QRCODE_LOAD: 'ウォレットQRコードを読み込む',
      IMPORT_WALLET_QRCODE_SCAN: 'スキャン',
      IMPORT_WALLET_QRCODE_STOP_SCAN: 'スキャン停止',

      //NEMonster
      NEMONSTER_SHORT_DESC: "NEMonsters へようこそ！NEMブロックチェーン上のウィットに富んだちょっとしたコレクションゲームです。",
      NEMONSTER_CATCH: "捕まえる",
      NEMONSTER_GET: "モンスターをゲットする",
      NEMONSTER_DESC: "NEMonstersへようこそ！NEMブロックチェーン上のウィットに富んだちょっとしたコレクションゲームです。あなたは色、名前、特徴付けのスパイスより110,000,000種の異なる組み合わせから作られたモンスターを捕獲して集めることができます。決まったトランザクションを送ることでモンスターを捕獲できます。モンスターはトランザクションが承認されると召喚されます。あなたの新しい(邪悪な)モンスターの特徴はトランザクションハッシュに基づきます。クールでしょ？NEM基盤からモンスターを捕まえられるか確かめてみよう。",

      // CATAPULT OPT IN MODULE
      PORTAL_CATAPULTOPTIN_TITLE: 'Symbolへのオプトイン',
      PORTAL_CATAPULTOPTIN_TEXT_LINK: 'こちらをお読みください。',
      PORTAL_CATAPULTOPTIN_MULTISIG_TEXT: 'マルチシグアカウントのオプトイン申請は、連署人のアカウントと一緒に発行しなければなりません',
      PORTAL_CATAPULTOPTIN_BTN_2: 'マルチシグアカウントのオプトインメッセージに署名する',
      PORTAL_CATAPULTOPTIN_TREZOR_TEXT: 'Trezorによるオプトインは、まだ導入されていません。オプトインをご希望の場合は、通常アカウントに資金を移動してください。',
      TITLE_CATAPULTOPTIN: 'Symbolへのオプトイン',
      CATAPULTOPTIN_CREATE_HELP: 'Symbolへのオプトインについて、さらに詳しい情報が必要ですか？',
      CATAPULTOPTIN_TRANSACTION: 'オプトインのトランザクション',
      CATAPULTOPTIN_ACCOUNT_UNLOCK_PLACEHOLDER: 'オプトインしたSymbolアカウント用のニーモニック・パスフレーズを入力してください',
      CATAPULTOPTIN_ACCOUNT_STEP_1: 'ステップ1：オプトインするアカウントを選択する',
      CATAPULTOPTIN_ACCOUNT_STEP_1_NEW: 'ステップ1：オプトインするアカウントを選択する',
      CATAPULTOPTIN_ACCOUNT_STEP_2: 'ステップ2：Symbolアカウントのオプトイン情報を再確認する',
      CATAPULTOPTIN_ACCOUNT_MS_STEP_2: 'ステップ2：マルチシグSymbolアカウントの情報を再確認する',
      CATAPULTOPTIN_ACCOUNT_STEP_3: 'ステップ3：オプトインするネームスペースを再確認する',
      CATAPULTOPTIN_ACCOUNT_STEP_4: 'ステップ4：オプトインに含めるVRFキーを再確認する',
      CATAPULTOPTIN_INCLUDE_VRF: 'オプトインにVRFキーを含める',
      CATAPULTOPTIN_VRF_KEYS: 'VRF（検証可能疑似乱数関数）キー（VRF鍵',
      CATAPULTOPTIN_VRF_PUBLIC_KEY: 'VRFパブリックキー',
      CATAPULTOPTIN_ACCOUNT_MS_STEP_3: 'ステップ3：オプトインするマルチシグアカウントのネームスペースを再確認する',
      CATAPULTOPTIN_ACCOUNT_STEP_SIGN: 'ステップ2：Symbolへのオプトインに署名する',
      CATAPULTOPTIN_REVIEW_MULTISIG_RESULT: 'マルチシグアカウントのSymbolへのオプトインを再確認する',
      CATAPULTOPTIN_REGISTER: 'Symbolへのオプトインを登録する',
      CATAPULTOPTIN_CREATE_ADDRESS: 'ニーモニックで、Symbol上の新しいアドレスを作成する',
      CATAPULTOPTIN_INCLUDE_NAMESPACE: 'オプトインにネームスペースを含める',
      CATAPULTOPTIN_INCLUDE_MS_NAMESPACE: 'オプトインにマルチシグアカウントのネームスペースを含める',
      CATAPULTOPTIN_MULTISIG_CONTRACT_CONSIGNATURES: 'マルチシグコントラクトの連署人署名',
      SIGN_MULTISIG_OPTIN_TRANSACTIONS_TITLE: 'マルチシグ（複数署名）によるオプトインのトランザクションに署名する',
      CATAPULTOPTIN_NAMESPACE_TO_DELETE: 'ネームスペースをオプトアウトする',
      CATAPULTOPTIN_NAMESPACE_REMOVE: '削除するネームスペースを入力する',
      CATAPULTOPTIN_ENTER_PK: 'プライベートキーを入力して、Symbolアカウントを生成する',
      CATAPULTOPTIN_ENTER_PASSWORD: 'パスワードを入力して、Symbolアカウントを生成する',
      CATAPULTOPTIN_REMOVE_NAMESPACE: 'ネームスペースを削除する',
      CATAPULTOPTIN_OPT_IN_SUCCESS: 'オプトインが正常に完了しました',
      CATAPULTOPTIN_OPT_IN_PENDING_SIGNATURES: 'オプトインは、連署人を待つ間保留中です',
      CATAPULTOPTIN_TRANSFER_TRANSACTION_MULTISIG_NAME: 'Symbolのマルチシグアカウントのオプトイン承認',
      CATAPULTOPTIN_NIS1: 'NIS1',
      CATAPULTOPTIN_OPTIN_ACCOUNT: 'オプトインするアカウント',
      CATAPULTOPTIN_OPTIN_ACCOUNT_PK: 'オプトインするアカウントのパブリックキー',
      CATAPULTOPTIN_NAMESPACES_OPTIN: 'オプトインしたネームスペース',
      CATAPULTOPTIN_CATAPULT: 'Symbol',
      CATAPULTOPTIN_OPTIN_ACCOUNT_ADDRESS: 'オプトインするアカウントのアドレス',
      CATAPULTOPTIN_UNLOCK: 'Symbolアカウントのロックを解除する',
      CATAPULTOPTIN_CONFIRM_OPTIN: 'Symbolへのオプトインを確定する',
      CATAPULT_OPT_IN_RESUME: 'オプトインのトランザクションを確定',
      CATAPULT_OPT_IN_RESUME_TEXT:'以下のトランザクションにより、新しいSymbolアカウントが作られます。ご自分の資金を請求するには、ニーモニックのパスフレーズのバックアップを取っておく必要があります。',
      CATAPULT_OPT_IN_SUCCESS: 'オプトインが正常に実行されました',
      CATAPULT_OPT_IN_BALANCE_SNAPSHOT: 'Symbolに入る残高',
      CATAPULT_OPT_IN_SUCCESS_SIGNING: 'オプトインの署名が正常に実行されました',
      CATAPULT_OPT_IN_UNDERSTAND: 'Symbolで使用するプライベートキーが変わることを考え、Symbolアカウント用のプライベートキーは古いプライベートキーと異なることを理解しておかなければなりません。以下の欄に「はい、理解しました」と入力して、新しいプライベートキーをコピーしてあることをご確認ください。',
      CATAPULT_OPT_IN_CONFIRM_BACKUP: '私は、オプトインプロセス用のニーモニックによるパスフレーズのバックアップを取りました。また、それを保存してバックアップすることは自分の責任だということを理解しました。',
      CATAPULT_OPT_IN_UNDERSTAND_FUNDS: 'Symbolのローンチ時に自分のXYMアカウント残高に入る資金は、スナップショットのブロック高度上にある自分のアカウントの資金のみであることを理解しました。このオプトインのトランザクション後にアカウント残高に変更があり、それがスナップショットより前だった場合は、すべてSymbolのローンチ時に反映されることになります。',
      GENERAL_MIN_SIGNATURES_REQUIRED: '最低必要な署名の数',
      SYMBOL_OPTIN_INITIATOR: 'オプトイン開始者',
      CATAPULT_BACKUP_WALLET: 'Symbolウォレットをバックアップする',
      CATAPULT_DOWNLOAD_WALLET: '暗号化されたSymbolウォレットをダウンロードする',
      MNEMONIC: 'ニーモニック',
      CATAPULT_OPT_IN_LOADING: 'オプトインのステータスをフェッチしています…',
      COSIGNER_NOT_OPTIN: '連署人がまだオプトインプロセスを開始していません',
      SYMBOL_ADDRESS: 'Symbolアドレス',
      YOUR_SYMBOL_ADDRESS: 'あなたのSymbolアドレス',
      YOUR_SYMBOL_MNEMONIC: 'あなたのSymbol用ニーモニック',
      SYMBOL_COSIGNERS: 'Symbol連署人',
      CATAPULTOPTIN_CONFIRM_SIGN: 'Symbolのオプトインに署名する',
      CATAPULTOPTIN_FIRST_DO_NORMAL: 'マルチシグアカウントのオプトインには、まず通常のオプトインを実行しなければなりません',
      CATAPULTOPTIN_ENCRYPTED_WALLET_TEXT: 'Symbolウォレットのバックアップを暗号化するために、新しいパスワードを作成してから、ダウンロードボタンを押してください。',
      CATAPULTOPTIN_GENERATE_NEW_SYMBOL: '新しいSymbol用ニーモニックを生成する',
      CATAPULTOPTIN_VRF_KEYS_DESCRIPTION: 'VRFキーは、Symbol上でハーベストをするために使用します。ノードをお持ちで、最初のブロックのハーベストを開始したい場合は、このオプションを有効化してキーを保存し、ご自分のSymbol用ノードのコンフィギュレーション設定に入れてください。このオプションを選択しない場合でも、メインネットの本稼働後に新しいキーを生成することが可能です。',
      OPTIN_FORM_PASSWORD_FIELD_PLACEHOLDER: '通常のNEMウォレットのパスワードを入力します',
      OPTIN_NEW_PASSWORD: '新しいパスワード',
      SYMBOL_PASSWORD_REQUIREMENT: "パスワードには、最低8文字が必要です",
      SYMBOL_WALLET_CREATING_TYPE_INFO: 'Symbolアカウントの作成方法を選択してください。',
      SYMBOL_WALLET_CREATING_BY_ENTROPY_TYPE_INFO: 'ランダムアカウントを生成する。',
      SYMBOL_WALLET_CREATING_BY_LEDGER_IMPORT_TYPE_INFO: 'LedgerからSymbolアカウントをインポートする。',
      SYMBOL_SIGNUP_CREATE_WALLET_ADD_ENTROPY_INFO_1: 'これから、初期プライベートキーを生成します',
      SYMBOL_SIGNUP_CREATE_WALLET_ADD_ENTROPY_INFO_2: '「開始する」をクリックして、カーソルをランダムに動かしてください。',
      OPTIN_WELCOME_TITLE: 'Symbolのオプトインにようこそ',
      OPTIN_INFO_1: 'Symbolのメインネットは、まだローンチしていません。',
      OPTIN_INFO_2: 'このモジュールで、NEM NIS1アカウントをオプトインし、',
      OPTIN_INFO_3: '残高やネームスペースをSymbolのネットワークに移行する準備ができます。',
      OPTIN_LINK_INFO: 'オプトインのプロセスについて、すべての情報を入手する ',
      OPTIN_NAMESPACES_TITLE: 'ネームスペースをオプトインする',
      OPTIN_NAMESPACES_INFO:'NEM NIS1上で保有するネームスペースをオプトインすることができます。これにより、保有者はSymbolブロックチェーン上でも同じネームスペースを使用することができます。',
      OPTIN_NAMESPACES_LINK: 'ネームスペースのオプトインについて、すべての情報を入手する ',
      OPTIN_NAMESPACES_SELECT: 'オプトインを希望するネームスペースを選択する',
      OPTIN_VRF_TITLE: 'VRFキーを含める',
      OPTIN_VRF_INFO:'VRFキーにより、アカウントはブロックをハーベストして報酬を受けることができます。ローンチ後、アカウントに10,000 XYM以上を保有する予定があり、Symbolブロックチェーンでハーベストを行いたい場合は、VRFキーをオプトインプロセスに追加する必要があります。',
      OPTIN_VRF_LINK: 'VRFキーについて、すべての情報を入手する ',
      OPTIN_VRF_KEYS:'VRFキーを追加する',
      OPTIN_VRF_PUBLIC: 'VRFパブリックアドレス',
      OPTIN_VRF_PRIVATE: 'VRFプライベートキー',
      OPTIN_TAC_TITLE:'利用規約',
      OPTIN_TAC_TEXT:'利用規約',
      OPTIN_TAC_INFO_1:'オプトインのプロセスは、NIS1ユーザーの残高を新たなSymbolネットワークに移行するための支援を目的として、Symbol Chain Limitedがローンチした機能です。これは一定のパラメータによって定義されるプロセスで、それを実行する全ユーザーが遵守しなければなりません。',
      OPTIN_TAC_INFO_2:'Symbol Chain Limitedは、以下に明記する利用規約の範囲外で発生した一切の事故に対する法的責任を負いません。',
      OPTIN_TAC_READ_ACCEPT: '私は、',
      OPTIN_CONFIRM_TITLE:'Symbolへのオプトインを確定する',
      OPTIN_CONFIRM_INFO:'もうすぐ完了です！　新しいSymbolチェーンに移行されるのは、こちらの情報です。内容を注意してご確認いただき、NEMキーで署名して、オプトインを完了してください。',
      OPTIN_CONFIRM_OPTIN:'オプトインを確定するには、',
      HERE:'こちらをクリックしてください。',
      OPTIN_ENTER_PASSWORD: 'オプトインに署名する為、NEM NIS1 のパスワードを入力してください。',
      OPTIN_LOADING: 'オプトインのステータスをフェッチしています…',
      OPTIN_FINISHED: 'ローンチ後のオプトインは、間もなく開始されます。Symbolローンチ後、新しいバージョンを確認してください。',
      GENERAL_BACK: '戻る',
      CREATE_SYMBOL_ACCOUNT: 'Symbol アカウントを作成して下さい',
      OPTIN_SYMBOL_READY: 'Symbol アカウントが準備出来ました。',
      OPTIN_COPY_SUCCESS: 'コピー!',
      OPTIN_TYPE_SELECT: 'ウォレットへの参加方法を選択してください。',
      CATAPULT_OPT_IN_ERROR_TOO_MUCH_COSIGNATORIES: 'このアカウントには8つ以上の署名者がいます。オプトインプロトコルでは、署名者が9人未満のマルチシグアカウントのみが許可されます',

      PORTAL_CATAPULTOPTIN_TEXT:              'Symbolネットワーク上でXYMを受け取るには、このモジュールを使用します。続きをご覧ください',
      PORTAL_CATAPULTOPTIN_BTN_1:             'SymbolオプトインでXYMを請求する',
      CATAPULTOPTIN_ACCOUNT_UNLOCK:           'Symbolの公開鍵を入力してください',
      CATAPULTOPTIN_REVIEW_NORMAL_RESULT:     'Symbolアカウントのオプトイン情報を確認する',
      OPTIN_PP_TEXT:                          'プライバシーポリシー',
      FORM_SELECT_ACCOUNT:                    'アカウントの選択',
      POST_OPTIN_INFO_3:                      'このモジュールを使用して、残高をSymbolネットワークに移行します',
      POST_OPTIN_INFO_2:                      'スナップショットブロックでXEMを保有していた場合、XYMを請求できます。',
      POST_OPTIN_INFO_1:                      'Symbolのメインネットは現在稼働しています！',
      SELECT_ACCOUNT_POST_OPTIN:              'オプトインを行うアカウントを選択してください',
      POST_OPTIN_STATUS:                      'オプトインステータス',
      POST_OPTIN_DETAILS:                     'オプトインの詳細',
      POST_OPTIN_AMOUNT:                      '請求する金額',
      POST_OPTIN_AMOUNT_CLAIMED:              '請求額',
      POST_OPTIN_START:                       'オプトイン開始',
      POST_OPTIN_DEST_MSIG:                   '送信先Symbolアカウントの公開鍵を入力してください。このアカウントはマルチシグでなければならず、現在のNIS1マルチシグアカウントと同じ数の連署者がいなければなりません。',
      POST_OPTIN_DEST_MSIG_ADDRESS:           'Symbolマルチシグアドレス',
      POST_OPTIN_DEST_ADDRESS:                'Symbol送信先アドレス',
      POST_OPTIN_DEST_MULTISIG_ADDRESS:       'Symbolマルチシグ送信先アドレス',
      POST_OPTIN_COSIG_DEST_ADDRESS:          'Symbol連署者送信先アドレス',
      NIS1_ADDRESS:                           '連署者のアドレス',
      YOUR_NIS_ACCOUNT:                       'あなたのNIS1アドレス',
      OPTIN_NOT_DONE:                         'オプトインは完了していません',
      OPTIN_STATUS_TITLE_1:                   'オプトインは完了していません',
      OPTIN_STATUS_TEXT_1:                    'XYMの請求を開始できます',
      OPTIN_STATUS_TITLE_2:                   'シンプルオプトイン保留中',
      OPTIN_STATUS_TEXT_2:                    'あなたのオプトインリクエストは正常に行われました。',
      OPTIN_STATUS_TITLE_3:                   'マルチシグオプトインは開始されません',
      OPTIN_STATUS_TEXT_3:                    'マルチシグアカウントのXYMを請求できます',
      OPTIN_STATUS_TITLE_4:                   'マルチシグオプトイン署名保留中',
      OPTIN_STATUS_TEXT_4:                    '連署者のオプトインを保留中',
      OPTIN_STATUS_TITLE_5:                   'マルチシグオプトイン保留中',
      OPTIN_STATUS_TEXT_5:                    'オプトインリクエストは正常に行われました。',
      OPTIN_STATUS_TITLE_6:                   'オプトイン完了',
      OPTIN_STATUS_TEXT_6:                    'XYMの請求が完了しました。残高のあるSymbolのトランザクションを受け取ることができます。',
      OPTIN_NOT_AVAILABLE:                    'スナップショット時に十分なXEMを保有していないか、ローンチ前のオプトインですでに請求されています。',
      OPTIN_PUBLICKEY_PLACEHOLDER:            '公開鍵は16進数で64文字です',
      OPTIN_DONE:                             '完了',
      OPTIN_ERROR_TITLE_0:                    '署名が有効でないため、このオプトインリクエストは失敗しました。',
      OPTIN_ERROR_TITLE_1:                    '送信先アカウントが有効でないため、このオプトインリクエストは失敗しました。',
      OPTIN_ERROR_TITLE_2:                    '1名または複数の連署者が有効でないため、このオプトインリクエストは失敗しました。',
      OPTIN_SIGNED:                           '署名済み',
      OPTIN_TAC_READ_ACCEPT_POST:             'を読んだ上で承諾します。',
    });

}

export default JapaneseProvider;

'''
'''--- src/app/modules/languages/nl.js ---
function DutchProvider($translateProvider) {
    'ngInject'

    $translateProvider.translations('nl', {

        // HEADER COMPONENT
        WALLET_NAME_1: 'NEM',
        WALLET_NAME_2: 'Wallet',
        APP_NAME_SUB: 'De veilige interface naar het NEM platform',
        HEADER_LOGIN_BUTTON: 'Inloggen',
        HEADER_SIGNUP_BUTTON: 'Aanmelden',
        HEADER_DASHBOARD: 'Dashboard',
        HEADER_WALLET: 'Portemonnee',
        HEADER_SERVICES: 'Diensten',
        HEADER_EXPLORER: 'Verkenner',
        HEADER_NODE: 'Node',
        HEADER_ACCOUNT: 'Account',
        HEADER_LANG_TITLE: 'Taal',
        HEADER_LANG_SELECT: 'Selecteer een taal',
        HEADER_NODE_BLOCK_HEIGHT: 'Blokhoogte',
        HEADER_NODE_CURRENT_NODE: 'Huidige node',
        HEARDER_NODE_LIST: 'Nodelijst',
        HEADER_NODE_SELECT: 'Selecteer een node',
        HEADER_NODE_CUSTOM: 'Aangepaste node',
        HEADER_NODE_CONNECT: 'Verbinden',
        HEADER_NODE_CUSTOM_INFO: 'Node ip of domein',
        HEADER_NODE_CUSTOM_TOOLTIP: 'Vul hier je eigen NIS node in',
        HEADER_PURGE: 'Opschonen',
        HEADER_PURGE_MESSAGE: 'Bevestig het opschonen van de lokale opslag. Door op "OK" te klikken worden alle portemonnees in de lokale opslag verwijderd en kunnen niet worden hersteld. U gaat akkoord dat alle portemonnees zijn gebackupped en uw geld veilig is opgeslagen.',
        HEADER_OFFLINE_TX: 'Bereid een offline transactie voor',
        HEADER_RELEASE_TX: 'Offline transactie vrijgeven',

        // FOOTER COMPONENT
        FOOTER_POWERED_BY_1: 'Powered by',
        FOOTER_POWERED_BY_2: 'NEM technology.',
        FOOTER_VERSION: 'Versie',

        // DASHBOARD MODULE
        DASHBOARD_TITLE: 'Dashboard',
        DASHBOARD_UNCONFIRMED: 'Onbevestigd',
        DASHBOARD_CONFIRMED: 'Bevestigd',
        DASHBOARD_HARVEST_INCOME_TITLE: 'Oogstinkomsten van de laatste 25 blokken',
        DASHBOARD_HARVEST_INCOME_NOTE: 'Alleen blokken met oogstinkomsten meer dan 0',
        DASHBOARD_HARVEST_INCOME_MESSAGE: 'Geen oogstinkomsten gevonden in de laatste 25 blokken',
        DASHBOARD_NEWS_TITLE: 'Laatste nieuws',
        DASHBOARD_HARVESTED_BLOCKS_TITLE: 'Geoogste blokken',
        DASHBOARD_HARVESTED_BLOCKS_TH: 'Oogstinkomsten ontvangen',
        DASHBOARD_MARKET_INFO_TITLE: 'Marktinformatie',
        DASHBOARD_MARKET_INFO_CAP: 'Beurskapitalisatie',
        DASHBOARD_MARKET_INFO_PRICE: 'Prijs',
        DASHBOARD_MARKET_INFO_VOLUME: '24u volume',
        DASHBOARD_MARKET_INFO_CHANGES: 'Verandering (24u)',
        DASHBOARD_MARKET_INFO_CHANGES_1H: '1u',
        DASHBOARD_MARKET_INFO_CHANGES_24H: '24u',
        DASHBOARD_MARKET_INFO_CHANGES_7D: '7d',
        DASHBOARD_MARKET_INFO_NOTE: '<a href="http://coinmarketcap.com/" target="_blank">CoinMarketCap</a> data wordt elke 5 minuten bijgewerkt',
        DASHBOARD_NOTICE_1: 'Welkom bij NEM Wallet!',
        DASHBOARD_NOTICE_2: '<a href="https://github.com/NemProject/NanoWallet" target="_blank">Meldt hier problemen</a>.',
        DASHBOARD_NOTICE_3: 'Het NEM-team adviseert je om eerst op het Testnet vertrouwd te raken met NEM Wallet voordat je het Mainnet gaat gebruiken. Een eenvoudige gids vindt je <a href="https://blog.nem.io/nanowallet-tutorial/" target="_blank"> hier</a>. Gebruikers zijn zelf verantwoordelijk voor hun geld en moeten zelf van de persoonlijke sleutels een back-up maken. Het NEM-team is niet verantwoordelijk voor het verlies van geld door deze applicatie op het Mainnet te gebruiken.',
        DASHBOARD_NOTICE_4: 'Wij raden je aan om persoonlijke sleutels op papier te zetten en op een veilige plaats op te slaan. Daarnaast kun je je accounts importeren in de Android- en iOS-apps als back-up.',
        DASHBOARD_NOTICE_5: 'Bedankt voor het gebruik!',
        DASHBOARD_MORE_TXES: 'Bekijk meer transacties',

        // GENERAL
        GENERAL_BLOCK: 'Blok',
        GENERAL_BLOCKS: 'Blokken',
        GENERAL_NO_RESULTS: 'Niets om weer te geven',
        GENERAL_ACCOUNT: 'Account',
        GENERAL_ACCOUNTS: 'Accounts',
        GENERAL_MULTISIG_ACCOUNT: 'Multi-handtekening account',
        GENERAL_AMOUNT: 'Hoeveelheid',
        GENERAL_MESSAGE: 'Bericht',
        GENERAL_DATE: 'Datum',
        GENERAL_TAB_NORMAL: 'Normaal',
        GENERAL_TAB_SEND: 'Verzend',
        GENERAL_TAB_MULTISIG: 'Multi-handtekening',
        GENERAL_TOTAL: 'Totaal',
        GENERAL_REMOVE: 'Verwijder',
        GENERAL_MOSAIC: 'Mozaïek',
        GENERAL_FEE: 'Kosten',
        GENERAL_LEVY: 'Heffing',
        GENERAL_LEVY_TYPES: 'Heffingstypes',
        GENERAL_LEVY_TYPES_NOTE: 'I - constant; II - percentage',
        GENERAL_LEVY_TYPE_1: 'Constant',
        GENERAL_LEVY_TYPE_2: 'Percentage',
        GENERAL_SEND: 'Verzend',
        GENERAL_TO: 'Aan',
        GENERAL_HASH: 'Hash',
        GENERAL_HASH_FUNCTION: 'Hash Functie',
        GENERAL_NAME: 'Naam',
        GENERAL_INFORMATION: 'Informatie',
        GENERAL_ADDRESS: 'Adres',
        GENERAL_PUBLIC_KEY: 'Openbare sleutel',
        GENERAL_PRIVATE_KEY: 'Persoonlijke sleutel',
        GENERAL_CLEAR_ALL: 'Wis alles',
        GENERAL_CLOSE: 'Sluiten',
        GENERAL_COMING_SOON: 'Binnenkort',
        GENERAL_NONE: 'Geen',
        GENERAL_DROPBOX: 'Sleep bestanden hier naartoe of klik op verkennen',
        GENERAL_NETWORK_FEE: 'Netwerkkosten',
        GENERAL_YES: 'Ja',
        GENERAL_NO: 'Nee',
        GENERAL_TAGS: 'Tags',
        GENERAL_SINK: 'Vergaarbak',
        GENERAL_SINK_ADDRESS: 'Vergaarbakadres',
        GENERAL_STORAGE: 'Opslag',
        GENERAL_REASON: 'Reden',
        GENERAL_TRANSACTION_HASH: 'Transactie hash',
        GENERAL_TRANSACTION_ID: 'Transactie ID',
        GENERAL_OWNER: 'Eigenaar',
        GENERAL_RESULTS: 'Resultaten',
        GENERAL_RESULT: 'Resultaat',
        GENERAL_STATUS: 'Status',
        GENERAL_LOCATION: 'Locatie',
        GENERAL_ACTION: 'Actie',
        GENERAL_ACTIONS: 'Acties',
        GENERAL_ADD: 'Toevoegen',
        GENERAL_ADDED: 'Toegevoegd',
        GENERAL_REMOVED: 'Verwijderd',
        GENERAL_COSIGNATORY: 'Mede-ondertekenaar',
        GENERAL_COSIGNATORIES: 'Mede-ondertekenaars',
        GENERAL_PROCESSING: 'Verwerken',
        GENERAL_ACCOUNT_LABEL: 'Account label',
        GENERAL_OPTIONAL: '(optioneel)',
        GENERAL_ERROR: 'Fout',
        GENERAL_EXAMPLE: 'Voorbeeld',
        GENERAL_PUBLIC: 'Openbaar',
        GENERAL_NAMESPACES: 'Namespaces',
        GENERAL_NAMESPACE: 'Namespace',
        GENERAL_SUB_NAMESPACES: 'Sub-namespaces',
        GENERAL_SUB_NAMESPACE: 'Sub-namespace',
        GENERAL_MOSAICS: 'Mozaïeken',
        GENERAL_VALUE: 'Waarde',
        GENERAL_CONNECTION_ERROR: 'Er is een foutmelding opgetreden, de node is niet beschikbaar of je bent offline',
        GENERAL_HISTORY: 'Historie',
        GENERAL_REVEAL: 'Onthullen',
        GENERAL_QR: 'QR code',
        GENERAL_UPDATE:  'Bijwerken',
        GENERAL_UNKNOWN: 'Onbekend',
        GENERAL_IMPORTANCE: 'Belangrijkheid',
        GENERAL_TRANSACTIONS: 'Transacties',
        GENERAL_REGISTER: 'Registreren',
        GENERAL_CREATE: 'Creëren',
        GENERAL_RENEW: 'Vernieuwen',
        GENERAL_CHARACTERS_LEFT: 'Tekens over',
        GENERAL_CURRENCY: 'Valuta',
        GENERAL_EDIT: 'Bewerken',
        GENERAL_SEND_XEM: 'Verzend XEM',
        GENERAL_ACTIVE: 'Actief',
        GENERAL_INACTIVE: 'Inactief',
        GENERAL_ACTIVATING: "Activeren",
        GENERAL_DEACTIVATING: "Deactiveren",
        GENERAL_REMOTE: "Extern",
        GENERAL_WARNING: 'Waarschuwing',
        GENERAL_SCORE: 'Score',
        GENERAL_LENGTH: 'Lengte',
        GENERAL_GO_BACK: 'Ga terug',
        GENERAL_NEXT: 'Volgende',
        GENERAL_START: 'Start',
        GENERAL_ALIAS: 'Alias',
        GENERAL_CONTACTS: 'Contacten',
        GENERAL_ENCRYPTED: 'Gecodeerd',
        GENERAL_UNENCRYPTED: 'Ongecodeerd',
        GENERAL_HEXADECIMAL: 'Hexadecimaal',
        GENERAL_SELECT_ACCOUNT: 'Selecteer account',
        GENERAL_INVOICE: 'Factuur',
        GENERAL_SIGNATURE: 'Handtekening',
        GENERAL_VERIFY: 'Verifieer',

        // HOME MODULE
        HOME_UNSUPPORTED_BROWSER: 'Sorry, je kan NEM Wallet niet veilig gebruiken met deze browser...',
        HOME_RECOMMENDED_BROWSERS: 'Aanbevolen browsers zijn:',
        HOME_FEATURE_STAND_BY: 'Plaats de cursor op een functie om informatie weer te geven.',
        HOME_FEATURE_1: 'Verzend en ontvang XEM eenvoudig en bijna onmiddellijk, slechts 1 minuut bloktijd!',

        // TRANSFER TRANSACTION MODULE
        TRANSFER_TRANSACTION_TITLE: 'Verzend een transactie',
        TRANSFER_TRANSACTION_NAME: 'Transactie overdragen',
        TRANSFER_TRANSACTION_MULTISIG_NAME: 'Multi-handtekening transactie overdragen',
        TRANSFER_TRANSACTION_INVOICE: 'Maak een factuur',
        TRANSFER_TRANSACTION_TAB_INVOICE: 'Factuur',
        TRANSFER_TRANSACTION_MOSAIC_TRANSFER: 'Mozaïek overdragen',
        TRANSFER_TRANSACTION_ATTACH_MOSAIC: 'Mozaïek bijvoegen',
        TRANSFER_TRANSACTION_ATTACH: 'Bijvoegen',
        TRANSFER_TRANSACTION_MOSAICS_ATTACHED: 'Mozaïek bijgevoegd',
        TRANSFER_TRANSACTION_ENCRYPT_MESSAGE: 'Versleutel bericht',
        TRANSFER_TRANSACTION_HEX_MESSAGE: 'Hex bericht',

        // TRANSACTION LINES
        LINE_TX_DETAILS_FROM: 'Van',
        LINE_TX_DETAILS_FROM_MULTISIG: 'Van multi-handtekening',
        LINE_TX_DETAILS_WAITING: 'Transactie in de wachtrij',
        LINE_TX_DETAILS_NEED_SIG: 'Heeft mede-ondertekenaars nodig',
        LINE_TX_DETAILS_NEED_SIG_2: 'Heeft je handtekening nodig',
        LINE_TX_DETAILS_MESS_DEC: 'Decoderen',
        LINE_TX_DETAILS_HASH: 'Hash',
        LINE_TX_DETAILS_DEC_MESS: 'Decodeer bericht',
        LINE_TX_DETAILS_MOS_ATTACHED: 'Mozaïek bijgevoegd',
        LINE_TX_DETAILS_LEVY_TYPE_1: 'Constant',
        LINE_TX_DETAILS_LEVY_TYPE_2: 'Percentage gebaseerd',
        LINE_TX_DETAILS_ISSUER: 'Aanvrager',
        LINE_TX_DETAILS_MULTISIG_FEE: 'Multi-handtekeningkosten',
        LINE_TX_DETAILS_MULTISIG_HASH: 'Multi-handtekening hash',
        LINE_TX_DETAILS_COSIGN: 'Mede-ondertekenaarstransactie',
        LINE_TX_DETAILS_SIGNATURES: 'Handtekening(en)',
        LINE_TX_DETAILS_COSIGNATORY: 'Mede-ondertekenaar',
        LINE_TX_DETAILS_TIMESTAMP: 'Tijdstempel',
        LINE_TX_DETAILS_MOS_CREATE: 'Creëer mozaïek',
        LINE_TX_DETAILS_MOS_EDIT: 'Bewerk mozaïek',
        LINE_TX_DETAILS_NS_CREATE: 'Creëer namespace',
        LINE_TX_DETAILS_NS_NEW_SUB: 'Nieuwe sub-namespace',
        LINE_TX_DETAILS_NS_ROOT: 'Root namespace',
        LINE_TX_DETAILS_RECIPIENT: 'Ontvanger',
        LINE_TX_DETAILS_MULTISIG_CREATE: 'Creëer multi-handtekening account',
        LINE_TX_DETAILS_MULTISIG_EDIT: 'Bewerk multi-handtekening account',
        LINE_TX_DETAILS_MULTISIG_MOD: 'Modificaties',
        LINE_TX_DETAILS_MULTISIG_MIN_COSIG: 'Min. Mede-ondertekenaars',
        LINE_TX_DETAILS_MULTISIG_AFFECTED: 'Account beïnvloed',

        // IMPORTANCE MODULE
        IMPORTANCE_TRANSFER_NAME: 'Belangrijkheidstransactie',
        IMPORTANCE_TRANSFER_MULTISIG_NAME: 'Multi-handtekening belangrijkheidstransactie',
        IMPORTANCE_TRANSFER_MODE: 'Modus',
        IMPORTANCE_TRANSFER_MODE_1: 'Activeren',
        IMPORTANCE_TRANSFER_MODE_2: 'Deactiveren',
        IMPORTANCE_TRANSFER_TITLE: 'Beheer gedelegeerd account',
        IMPORTANCE_TRANSFER_MULTISIGNATURE_TITLE: 'Beheer gedelegeerd account van multi-handtekening accounts',
        IMPORTANCE_TRANSFER_CUSTOM_KEY: 'Gebruik een aangepaste openbare sleutel',
        IMPORTANCE_TRANSFER_MODE_SELECT: 'Selecteer een modus',
        IMPORTANCE_TRANSFER_REMOTE_ACCOUNT: 'Extern account',
        IMPORTANCE_TRANSFER_REMOTE_PUBLIC: 'Externe openbare sleutel',
        IMPORTANCE_TRANSFER_INFO_PART_1: 'Zodra de belangrijke transactie in een blok is opgenomen, heeft het nog 6 uur nodig om actief te worden. Daarna heb je toegang tot de node selectie en de start / stop commando\'s.',
        IMPORTANCE_TRANSFER_INFO_PART_2: 'Zorg ervoor dat je geen gedelegeerd account geactiveerd hebt (als het een geïmporteerd account is). Je kunt de oude gedelegeerde openbare sleutel gebruiken om te deactiveren (indien nodig).',
        IMPORTANCE_TRANSFER_INFO_PART_MULTISIG: 'Voor multi-handtekening accounts kan alleen de mede-ondertekenaar die de transactie voor de belangrijke transactie startte, starten en stoppen met het oogsten. Als een andere mede-ondertekenaar de status van het oogsten wil overnemen, hoeft hij alleen de externe status te deactiveren en opnieuw te activeren.',
        IMPORTANCE_TRANSFER_NO_BLOCKS_HARVESTED: 'Geen blokken geoogst',
        IMPORTANCE_TRANSFER_HARVESTING_PANEL: 'Oogstpaneel',
        IMPORTANCE_TRANSFER_REMOTE_ACTIVATING: 'Je moet wachten tot de externe status actief is om gedelegeerd oogsten te starten',
        IMPORTANCE_TRANSFER_REMOTE_INACTIVE: 'Je moet een belangrijke transactie sturen (vanaf het linkse paneel) om je extern account te activeren',
        IMPORTANCE_TRANSFER_MULTISIG_NOT_INITIATOR: 'Je bent niet de mede-ondertekenaar die de belangrijke transactie heeft geïnitieerd, daarom is het niet mogelijk om gedelegeerd oogsten te starten of te stoppen. Raadpleeg bovenstaande tab met informatie om te zien hoe je de controle terug krijgt over het gedelegeerd oogsten.',
        IMPORTANCE_TRANSFER_MULTISIG_SELECT: 'Selecteer een multi-handtekening account',
        IMPORTANCE_TRANSFER_MULTISIG_SELECT_MESSAGE: 'Selecteer een multi-handtekening account om de status weer te geven',
        IMPORTANCE_TRANSFER_PRIVATE_KEY_PLACEHOLDER: 'Onthul gedelegeerde persoonlijke sleutel',
        IMPORTANCE_TRANSFER_DELEGATED_KEYS: 'Sleutel van gedelegeerd account ',
        IMPORTANCE_TRANSFER_HARVESTING_STATUS: 'Oogststatus',
        IMPORTANCE_TRANSFER_START_HARVESTING: 'Start gedelegeerd oogsten',
        IMPORTANCE_TRANSFER_STOP_HARVESTING: 'Stop gedelegeerd oogsten',

        // CREATE MOSAIC MODULE
        MOSAIC_DEFINITION_TITLE: 'Creëer mozaïek',
        MOSAIC_DEFINITION_NAME: 'Mozaïek definitie transactie',
        MOSAIC_DEFINITION_MULTISIG_NAME: 'Multi-handtekening mozaïek definitie transactie',
        MOSAIC_DEFINITION_QUANTITY: 'Aantal',
        MOSAIC_DEFINITION_DIV: 'Deelbaarheid',
        MOSAIC_DEFINITION_TOTAL_SUPPLY: 'Totale voorraad',
        MOSAIC_DEFINITION_FINAL_NAME: 'Volledige naam',
        MOSAIC_DEFINITION_DESCRPITION: 'Omschrijving',
        MOSAIC_DEFINITION_INITIAL_SUPPLY: 'Initiële voorraad',
        MOSAIC_DEFINITION_MUTABLE_SUPPLY: 'Variabele voorraad',
        MOSAIC_DEFINITION_TRANSFERABLE: 'Overdraagbaar',
        MOSAIC_DEFINITION_PROPERTIES: 'Eigenschappen',
        MOSAIC_DEFINITION_MOSAIC_PROPERTIES: 'Mozaïek eigenschappen',
        MOSAIC_DEFINITION_REQUIRES_LEVY: 'Vereist heffing',
        MOSAIC_DEFINITION_LEVY_LIMITATION: 'UI-beperking: voor nu, alleen eigen mozaïeks kunnen als heffing worden gebruikt.',
        MOSAIC_DEFINITION_LEVY_SELECT_MOSAIC: 'Selecteer een heffingsmozaïek',
        MOSAIC_DEFINITION_LEVY_ADDRESS: 'Heffingsadres',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE: 'Heffingstype',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_1: 'Constant',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2: 'Percentage',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_1_NOTE: 'Constant geselecteerd, zorgt voor een constante heffing van:',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE: 'Percentage geselecteerd, zorgt voor een lineaire heffing van:',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE_2: 'Verzenden',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE_3: 'zal de heffing van',
        MOSAIC_DEFINITION_PARENT: 'Bovenliggende namespace',
        MOSAIC_DEFINITION_INFORMATION_TITLE: 'Creëren van een mozaïek',
        MOSAIC_DEFINITION_INFORMATION: 'Wil je meer informatie over mozaïeken?',
        MOSAIC_DEFINITION_INFORMATION_1: 'De maximale lengte voor een mozaïeknaam is 32 karakters. Toegestane karakters zijn:',
        MOSAIC_DEFINITION_INFORMATION_2: 'Het eerste karakter moet een letter of cijfer zijn.',
        MOSAIC_DEFINITION_INFORMATION_3: 'De omschrijving mag niet langer dan 512 karakters zijn. Er is geen beperking op de te gebruiken karakters in de omschrijving.',
        MOSAIC_DEFINITION_INFORMATION_4: 'Het gedrag van een mozaïek kan worden aangepast door middel van eigenschappen:',
        MOSAIC_DEFINITION_INFORMATION_5: 'De voorraad wordt gegeven in gehele eenheden van het mozaïek, niet in de kleinste subeenheden. De initiële voorraad moet in het bereik van 0 en 9.000.000.000 liggen.',
        MOSAIC_DEFINITION_INFORMATION_6: 'De deelbaarheid bepaalt tot welke decimale plaats het mozaïek kan worden verdeeld. Zo betekent een verdeelbaarheid van 3 dat een mozaiek kan worden verdeeld in kleinste delen van 0.001 mozaïeken, dat wil zeggen milli mozaïeken is de kleinste subeenheid. De verdeelbaarheid moet in het bereik van 0 en 6 liggen.',
        MOSAIC_DEFINITION_INFORMATION_7: 'Indien geselecteerd, mag de mozaïekvoorraad later worden veranderd, anders is de voorraad onveranderlijk.',
        MOSAIC_DEFINITION_INFORMATION_8: 'Laat overdrachten van het mozaïek toe onder andere accounts dan de maker. Als de eigenschap \'overdraagbaar\' niet is geselecteerd, kunnen alleen transacties die de maker als afzender of als ontvanger hebben de mozaïeken van dat type worden overgedragen. Indien geselecteerd, kunnen de mozaïeken worden overgedragen naar en vanuit willekeurige accounts.',
        MOSAIC_DEFINITION_INFORMATION_9: 'De maker kan eisen dat een speciale heffing van de afzender wordt verzameld en naar een rekening van zijn keuze wordt verzonden (dus de maker kan zijn eigen rekening als ontvanger van deze heffing opgeven). De gegevens voor de heffing zijn de volgende:',
        MOSAIC_DEFINITION_INFORMATION_10: 'Het mozaïek waarin de heffing moet worden betaald. Elk bestaand mozaïek kan worden geselecteerd.',
        MOSAIC_DEFINITION_INFORMATION_11: 'De ontvanger van de heffing. Dit kan elk account zijn.',
        MOSAIC_DEFINITION_INFORMATION_12: 'De hoogte van de heffing. De interpretatie hangt af van het veld \'heffingstype\', zie hierboven.',
        MOSAIC_DEFINITION_INFORMATION_13: 'Er zijn twee soorten heffing, constante heffing en procentuele heffing.',
        MOSAIC_DEFINITION_INFORMATION_14: 'De heffing wordt opgegeven als constante hoeveelheid en hangt dus niet af van de hoeveelheid die wordt overgedragen.',
        MOSAIC_DEFINITION_INFORMATION_15: 'De heffing wordt opgegeven als percentage van de overgedragen hoeveelheid. De heffing stijgt dus lineair met de overgedragen mozaïekhoeveelheid.',
        MOSAIC_DEFINITION_INFORMATION_16: 'Het verzenden van mozaïeken op het NEM blockchain vereist een heffing. De exacte heffing wordt berekend afhankelijk van het totale aantal en hoeveel worden verzonden tijdens een transactie. <b>Kleinschalige mozaïeken</b> krijgen een kortingstarief van 0.05 XEM per mozaiek per overdracht. Dit zijn mozaïeken met een hoeveelheid van minder dan 10.000 en een verdeelbaarheid van 0.',
        MOSAIC_DEFINITION_INFORMATION_17: 'Wanneer je 100% van de voorraad bezit, dan kun je alle mozaïek eigenschappen overschrijven door opnieuw een transactie te creëeren en te verzenden met dezelfde naam: "namespace:mosaic".',

        // EDIT MOSAIC MODULE
        MOSAIC_SUPPLY_CHANGE_TITLE: 'Verander mozaïekvoorraad',
        MOSAIC_SUPPLY_CHANGE_NAME: 'Mozaïekvoorraad wijzigingstransactie',
        MOSAIC_SUPPLY_CHANGE_MULTISIG_NAME: 'Multi-handtekening mozaïekvoorraad wijzigingstransactie',
        MOSAIC_SUPPLY_CHANGE_SELECT: 'Selecteer mozaïek',
        MOSAIC_SUPPLY_CHANGE_TYPE: 'Verander type',
        MOSAIC_SUPPLY_CHANGE_TYPE_1: 'Creëer',
        MOSAIC_SUPPLY_CHANGE_TYPE_2: 'Verwijder',
        MOSAIC_SUPPLY_CHANGE_SUPPLY: 'Voorraad',
        MOSAIC_SUPPLY_CHANGE_CURRENT_SUPPLY: 'Huidige voorraad',
        MOSAIC_SUPPLY_CHANGE_AMOUNT: 'Verander hoeveelheid',
        MOSAIC_SUPPLY_CHANGE_RES_SUPPLY: 'Resulterende voorraad',

        // NAMESPACE MODULE
        NAMESPACE_PROVISION_TITLE: 'Creëer namespace & sub-namespace',
        NAMESPACE_PROVISION_NAME: 'Verstrekken van namespace',
        NAMESPACE_PROVISION_MULTISIG_NAME: 'Multi-handtekening verstrekken van namespace',
        NAMESPACE_PROVISION_PARENT: 'Bovenliggende namespace',
        NAMESPACE_PROVISION_NEW_ROOT: 'Nieuwe root namespace',
        NAMESPACE_PROVISION_NS: 'Namespace',
        NAMESPACE_PROVISION_NS_NAME: 'Namespace naam',
        NAMESPACE_PROVISION_RESTRICTIONS: 'Namespace beperkingen',
        NAMESPACE_PROVISION_INFORMATION_1: 'Namespaces hebben bepaalde beperkingen met betrekking tot de karakters die in de delen zijn toegestaan evenals de lengte van een deel. Een root namespace kan een lengte hebben van 16 karakters terwijl sub-namespaces een lengte van 64 karakters kunnen hebben. Geldige karakters zijn:',
        NAMESPACE_PROVISION_INFORMATION_2: 'Een deel moet beginnen met een letter of cijfer, dus \'alice\' is een toegestaan deel voor een root namespace terwijl \'_alice\' dat niet is. Bepaalde teksten zijn gereserveerd en dus niet toegestaan als namespace-onderdelen. Onder de niet-toegelaten namespace delen zijn:',
        NAMESPACE_PROVISION_INFORMATION_3: 'Deze lijst is niet definitief en kan in de toekomst worden uitgebreid. Dus \'user.alice\' of \'alice.user\' zijn niet toegestaan in het NEM namespace-systeem. De namespace kan maximaal 3 delen bevatten, dus \'qm.metals.silver\' is geldig terwijl \'qm.metals.silver.coin\' dat niet is.',

        // RENEW NAMESPACE MODULE
        RENEW_NS_TITLE: 'Vernieuw namespaces',
        RENEW_NS_NONE: 'Geen namespace om te vernieuwen',
        RENEW_NS_INFORMATION_TITLE: 'Vernieuweing van namespaces',
        RENEW_NS_INFORMATION_TITLE_1: 'Kosten',
        RENEW_NS_INFORMATION_TITLE_2: 'Root namespaces',
        RENEW_NS_INFORMATION_TITLE_3: 'Vernieuw periode',
        RENEW_NS_INFORMATION_1: 'Het vernieuwen van een namespace kost hetzelfde bedrag als het registreren van een nieuwe namespace, 100 XEM.',
        RENEW_NS_INFORMATION_2: 'Alleen root namespaces moeten worden vernieuwd. Alle sub-namespaces worden automatisch vernieuwd bij vernieuwing van de root namespace.',
        RENEW_NS_INFORMATION_3: 'Namespace-contracten zijn huurcontracten voor een jaar. Het contract kan een maand voor of na de vervaldatum verlengd worden.',
        RENEW_NS_INFORMATION_4: 'Als ze niet op tijd worden vernieuwd, gaan alle sub-namespaces en mozaïeken die erin zijn gemaakt verloren.',
        RENEW_NS_ALERT_PART_1: '<b>Waarschuwing!</b> De namespace:',
        RENEW_NS_ALERT_PART_2: 'verloopt binnen een maand!',
        RENEW_NS_ALERT_PART_3: 'Raadpleeg de <b>vernieuw pagina</b> voor meer informatie.',

        // ACCOUNT MODULE
        ACCOUNT_TITLE: 'Account',
        ACCOUNT_ACCOUNT_INFORMATION: 'Account informatie',
        ACCOUNT_IMPORTANCE_SCORE: 'Belangrijkheidsscore',
        ACCOUNT_VESTED_BALANCE: 'Toegekende balans',
        ACCOUNT_HARVESTING: 'Oogsten',
        ACCOUNT_REMOTE_STATUS: 'Status extern oogsten',
        ACCOUNT_DELEGATED_PUBLIC: 'Gedelegeerde openbare sleutel',
        ACCOUNT_HARVESTED_BLOCKS: 'Geoogste blokken',
        ACCOUNT_START_STOP_HARVESTING: 'Start / Stop gedelegeerd oogsten',
        ACCOUNT_HARVESTING_NOTE: 'De node waarop je oogst wordt opgeslagen in je <b>locale browsergeschiedenis</b>. Als je lokale browsergeschiedenis verwijderd wordt dan weet de app niet meer welke node je gebruikte. De <b>oogst status</b> zal dan <b>inactief</b> lijken. Selecteer als dit het geval is de node die je gebruikte en dan wordt de oogst status automatisch weer bijgewerkt. Mocht de status niet herstelt zijn, check dan eerst of je de goede node heeft geselecteerd. Als dit het geval is dat betekend dit dat de node opnieuw is opgestart en dat je account niet meer oogst.',
        ACCOUNT_HARVESTING_NODE_SELECT: 'Selecteer een node om op te oogsten',
        ACCOUNT_HARVESTING_START: 'Start gedelegeerd oogsten',
        ACCOUNT_HARVESTING_STOP: 'Stop gedelegeerd oogsten',
        ACCOUNT_HARVESTING_NO_SLOTS: 'Er zijn geen vrije plekken op de door je gekozen node, kies een andere',
        ACCOUNT_HARVESTING_BELOW_THRESHOLD: 'Je hebt op zijn minst een balans van 10.000 toegekende XEM nodig om gedelegeerd oogsten te starten',
        ACCOUNT_ACCOUNT_SELECT: 'Selecteer een ander Account',
        ACCOUNT_ACCOUNT_SELECT_LABEL: 'Kies Account',
        ACCOUNT_WALLET_KEYS: 'Portemonnee & sleutels',
        ACCOUNT_ADD_NEW_ACCOUNT: 'Voeg nieuw account toe',
        ACCOUNT_ADD_NEW_ACCOUNT_BTN: 'Voeg een nieuw account toe aan je portemonnee',
        ACCOUNT_PRIVATE_KEY_NOTE: 'Je persoonlijke sleutel geeft volledige toegang tot je account. Het is uiterst belangrijk dat je deze ergens <b><u>offline</u></b> op slaat. Zorg dat je deze versleuteld in een .wlt bestand hebt, hebt opgeschreven op een stukje papier, er een foto van heeft gemaakt of de <b><u>exporteer portemonnee</u></b> hebt.',
        ACCOUNT_PRIVATE_KEY_SHOW: 'Toon persoonlijke sleutel',
        ACCOUNT_EXPORT_MOBILE: 'Exporteer naar mobiel',
        ACCOUNT_INFO_QR_BTN: 'Deel de account-informatie QR',
        ACCOUNT_WALLET_QR_BTN: 'Portemonnee QR',
        ACCOUNT_WALLET_QR_BTN_2: 'Exporteer portemonnee QR (Android en IOS)',
        ACCOUNT_BACKUP_WALLET: 'Back-up portemonnee',
        ACCOUNT_BACKUP_WALLET_NOTE: 'Het is <b><u>uiterst belangrijk</u></b> dat je back-ups hebt van je portemonnees. Heb je dit niet dan loopt je het risico dat je XEM verloren gaat.',
        ACCOUNT_BACKUP_WALLET_DOWNLOAD: 'Download portemonnee',
        ACCOUNT_INFO_QR_TITLE: 'Account informatie QR',
        ACCOUNT_WALLET_QR_NOTE: 'Deze QR werkt alleen met de NEMpay mobiele app die binnenkort uit komt',
        ACCOUNT_WALLET_QR_ANDROID_IOS_TITLE: 'Portemonnee QR voor Android & IOS apps',
        ACCOUNT_ADD_NEW_ACCOUNT_WARNING: 'Alle accounts zijn afgeleid van je primaire persoonlijke sleutel en wachtwoord doormiddel van BIP32, dus je primaire persoonlijke sleutel en je wachtwoord zijn beide nodig om je secundaire accounts te laden. Het wordt <b>sterk aangeraden</b> om een back-up te maken van je portemonnee nadat je nieuwe accounts hebt toegevoegd om te voorkomen dat je de acties moet herhalen als je lokale opslag verwijderd wordt.',
        ACCOUNT_CUSTOM_NODE: 'Gebruik aangepaste node',
        ACCOUNT_NODE_FROM_LIST: 'Gebruik node uit de lijstt',
        ACCOUNT_DELEGATED_PRIVATE_KEY: 'Gedelegeerde persoonlijke sleutel',
        ACCOUNT_NO_PUBLIC_KEY: 'Je moet een transactie maken om een publieke sleutel te krijgen',
        ACCOUNT_SHOW_ON_TREZOR_BTN: 'Weergeven op TREZOR',
        ACCOUNT_SHOW_ON_LEDGER_BTN: 'Weergeven op LEDGER',

        // PORTAL MODULE
        PORTAL_TITLE: 'Diensten',
        PORTAL_MULTISIG_TITLE: 'Multi-handtekening en multi-gebruiker accounts',
        PORTAL_MULTISIG_TEXT: 'Multi-handtekening accounts zijn bewerkbare "on-chain" contracten, de meest krachtige manier om geld te beveiligen, gezamenlijke accounts te maken en de basis vormen voor DAO\'s.',
        PORTAL_MULTISIG_BTN_1: 'Converteer een account naar een multi-handtekening account',
        PORTAL_MULTISIG_BTN_2: 'Bewerk een bestaand contract',
        PORTAL_MULTISIG_BTN_3: 'Teken een multi-handtekening transactie',
        PORTAL_HARVESTING_TITLE: 'Gedelegeerd oogsten',
        PORTAL_HARVESTING_TEXT: 'Gedelegeerd oogsten is een functie die "mining" toelaat, zelfs terwijl je bent afgemeld.',
        PORTAL_CHANGELLY_TITLE: 'Changelly Instant Exchange',
        PORTAL_CHANGELLY_TEXT: 'Gebruik de Changelly widget om XEM te kopen tegen de beste tarieven!',
        PORTAL_CHANGELLY_BTN: 'Koop XEM',
        PORTAL_NS_TITLE: 'Namespaces & Subdomeinen',
        PORTAL_NS_TEXT: 'Namespaces zijn domeinnamen. Elke domeinnaam is uniek en verifieert mozaïeken (bezittingen) die erop zijn uitgegeven of op de subdomeinen ervan.',
        PORTAL_NS_BTN: 'Creëer namespace',
        PORTAL_MOSAIC_TITLE: 'Mozaïeken',
        PORTAL_MOSAIC_TEXT: 'NEM mozaïeken zijn bezittingen die extra eigenschappen en andere kenmerken hebben. Om een mozaïek te kunnen creëren, moet een account ten minste één root namespace huren.',
        PORTAL_MOSAIC_BTN_1: 'Creëer mozaïek',
        PORTAL_MOSAIC_BTN_2: 'Bewerk mozaïek',
        PORTAL_APOSTILLE_TITLE: 'Apostille',
        PORTAL_APOSTILLE_TEXT: 'Gebruik de NEM Apostille-dienst om blockchain gebaseerde notariële aktes te maken met een tijdstempel en het volgen en controleren van de bestandsechtheid.',
        PORTAL_APOSTILLE_BTN_1: 'Creëer',
	PORTAL_APOSTILLE_BTN_2: 'Verifieer',
        PORTAL_ADDRESS_BOOK_TEXT: 'Ken labels toe aan adressen om je contacten gemakkelijk bij te houden.',
        PORTAL_ADDRESS_BOOK_BTN: 'Beheer adressenboek',
        PORTAL_INVOICE_TEXT: 'Creëer een factuur om via QR code te delen',
 	PORTAL_SIGNED_MSG_TEXT: 'Creëer en verifieer een ondertekend bericht om het accounteigendom te verifiëren zonder transacties uit te voeren.',

        // ADDRESS BOOK MODULE
        ADDRESS_BOOK_TITLE: 'Adressenboek',
        ADDRESS_BOOK_NAVIGATION: 'Navigatie',
        ADDRESS_BOOK_NEW: 'Nieuw contact',
        ADDRESS_BOOK_EDIT: 'Bewerk contact',
        ADDRESS_BOOK_REMOVE: 'Verwijder contact',
        ADDRESS_BOOK_NEW_BTN: 'Toevoegen',
        ADDRESS_BOOK_EDIT_BTN: 'Opslaan',
        ADDRESS_BOOK_REMOVE_BTN: 'Verwijder',
        ADDRESS_BOOK_EXPORT_BTN: 'Exporteer adressenboek',
        ADDRESS_BOOK_IMPORT_BTN: 'Importeer adressenboek',
        ADDRESS_BOOK_CONTACT_LABEL: 'Label',
        ADDRESS_BOOK_ACCOUNT_ADDRESS: 'Accountadres',
        ADDRESS_BOOK_ACTIONS: 'Acties',
        ADDRESS_BOOK_CONFIRM_DELETE: 'Bevestig het verwijderen van een contact',

        // EXPLORER MODULE NAV
        EXPLORER_NAV_HOME: 'Thuis',
        EXPLORER_NAV_NSM: 'Namespaces & Mozaïeken',
        EXPLORER_NAV_APOSTILLES: 'Apostilles',

        // EXPLORER HOME MODULE
        EXPLORER_HOME_TITLE: 'Verkenner - Thuis',
        EXPLORER_HOME_NS: 'Je namespaces',
        EXPLORER_HOME_MOSAICS: 'Je mozaïeken',
        EXPLORER_HOME_NS_MULTISIG: 'Multi-handtekening namespaces in bezit',
        EXPLORER_HOME_MOSAICS_LEVY: 'Mozaïekheffing',

        // EXPLORER NAMESPACES AND MOSAICS
        EXPLORER_NS_MOS_TITLE: 'Verkenner - Namespaces en mozaïeken',
        EXPLORER_NS_MOS_SELECT_MOS: 'Geselecteerde mozaïek details',
        EXPLORER_NS_MOS_SEARCH: 'Zoek namespace',

        // EXPLORER APOSTILLES MODULE
        EXPLORER_APOSTILLES_TITLE: 'Verkenner - Apostilles',
        EXPLORER_APOSTILLES_YOURS: 'Je apostilles',
        EXPLORER_APOSTILLES_PUBLIC: 'Openbare vergaarbak',
        EXPLORER_APOSTILLES_NO_NTY: 'Geen .nty-bestand geladen, klik hier om te importeren.',

        // ACCOUNT EXPLORER
        ACCOUNTS_EXPLORER_TITLE: 'Verkenner - Accounts',
        ACCOUNTS_EXPLORER_SEARCH: 'Zoeken',

        // TRANSACTIONS EXPLORER
        EXPLORER_TRANSACTIONS_TITLE: 'Je transactie geschiedenis',
        EXPLORER_TRANSACTIONS_LOAD_MORE: 'Laad meer',

        // APOSTILLE HISTORY MODULE
        APOSTILLE_HISTORY_TITLE: 'Apostille historie',
        APOSTILLE_HISTORY_BTN_TRANSFER: 'Overdragen / splitsen eigenaarsschap',
        APOSTILLE_HISTORY_BACKUP: 'Back-up notariële data',
        APOSTILLE_HISTORY_PURGE: 'Notariële data opschonen',

        // CREATE APOSTILLE MODULE
        APOSTILLE_CREATE_TITLE: 'Creëer apostilles',
        APOSTILLE_CREATE_HELP: 'Wil je meer informatie over apostille?',
        APOSTILLE_TRANSACTION_NAME: 'Apostille transactie',
        APOSTILLE_TRANSACTION_MULTISIG_NAME: 'Multi-handtekening apostille transactie',
        APOSTILLE_KEEP_PRIVATE: 'Persoonlijk, overdraagbaar and bewerkbaar',
        APOSTILLE_USE_DEDICATED: 'Gebruik toegewijd account',
        APOSTILLE_FILES_TO_NOTARIZE: 'Bestanden om notarieel vast te leggen',
        APOSTILLE_REJECTED: 'Afgewezen',
        APOSTILLE_FILE_HASH: 'Bestand hash',
        APOSTILLE_PRIVATE: 'Persoonlijk',
        APOSTILLE_FILENAME: 'Bestandsnaam',
        APOSTILLE_NAME_TOO_LONG: 'Bestandsnaam is te lang, maximaal 32 karakters toegestaan.',
        APOSTILLE_MAX_NUMBER: 'Maximaal aantal apostilles per batch is 25',
        APOSTILLE_INFORMATION_TITLE: 'Creëren van een Apostille',
        APOSTILLE_INFORMATION_1: 'Elk ge-upload bestand wordt automatisch verwerkt met opties die in het linker paneel zijn ingesteld. Je kunt nieuwe bestanden toevoegen, parameters wijzigen en vervolgens meer bestanden toevoegen met verschillende opties. Het werkt ook als je naar het multi-handtekening tabblad schakelt en meer bestanden toevoegt.',
        APOSTILLE_INFORMATION_2: '"<b>Persoonlijk, overdraagbaar en bewerkbaar</b>" optie betekent dat de hashes van je bestanden zijn ondertekend met je persoonlijke sleutel en verzonden naar een specifiek hiërarchisch deterministisch (HD) account. Op deze manier is het niet mogelijk voor iemand anders om te weten welke inhoud gemarkeerd is met de tijd, tenzij je de inhoud deelt.',
        APOSTILLE_INFORMATION_3: 'Het speciale HD-account kan onder een multi-handtekeningcontract worden geplaatst, zodat het via 1-van-1 of een m-van-n multi-handtekeningcontractcombinatie kan worden overgedragen aan anderen. Het kan ook aanvullende informatie bevatten en verzonden worden via berichten met updates en toevoegingen aan het originele document of het product dat het vertegenwoordigt.',
        APOSTILLE_INFORMATION_4: 'Wanneer twee of meer partijen een blockchain tijdstempel willen goedkeuren, bijvoorbeeld bindende contracten, kan het account die de blockchain notarisatie maakt worden geplaatst in een n-van-n multi-handtekeningcontract.',
        APOSTILLE_INFORMATION_5: 'Voor accounts in een multi-handtekeningcontract waar "<b>Persoonlijk, overdraagbaar en bewerkbaar</b>" is geselecteerd, wordt de persoonlijke sleutel van de initiële mede-ondertekenaar gebruikt om de hash te ondertekenen en een speciaal HD-account aan te maken, niet het multi-handtekening account.',
        APOSTILLE_INFORMATION_6: 'Het HD-account is een speciaal account dat wordt gegenereerd van de hash van de bestandsnaam die vervolgens door je persoonlijke sleutel is ondertekend. De resulterende hash van dit proces wordt dan gebruikt om een tweede persoonlijke sleutel te maken. Dit is de persoonlijke sleutel van het bestand met de tijdstempel; de eerste in blockchain technologie die alleen in Apostille wordt gevonden.',
        APOSTILLE_INFORMATION_7: 'Met het speciale HD-account kun je de originele ondertekende hash en de updates van een speciaal account opslaan. Als "<b>Openbaar</b>" is geselecteerd, gaat de transactie naar de openbare vergaarbak (standaard).',
        APOSTILLE_INFORMATION_8: 'Nadat de transacties zijn verzonden, wordt de download van een archief geactiveerd. Het bevat uw ondertekende bestanden, uw Apostille-certificaat voor dat bestand en het nieuwe of bijgewerkte .nty-bestand om elk bestand bij te houden die is gemarkeerd met de tijd in de NEM-keten.',
        APOSTILLE_NO_NTY: 'Geen nty bestand geladen, klik hier om er één te importeren anders wordt een nieuwe aangemaakt.',
        APOSTILLE_IMPORT_FILES: 'Geïmporteerde bestanden',
        APOSTILLE_CREATE_TEXT: 'Creëer een tekst document',
        APOSTILLE_ENTER_TEXT: 'Voer de tekst in om notarieel vast te leggen...',
        APOSTILLE_DOCUMENT_TITLE: 'Document titel',
        APOSTILLE_DROPBOX_MESSAGE: 'Vul je wachtwoord en gewenst(e) label(s) in voordat je bestanden selecteerd',
        APOSTILLE_DROPBOX_MESSAGE_2: 'Vul je wachtwoord in voordat je bestanden selecteerd',

        // AUDIT APOSTILLE MODULE
        APOSTILLE_AUDIT_TITLE: 'Verifieer apostilles',
        APOSTILLE_AUDIT_CHOOSE_NODE: 'Selecteer een node',
        APOSTILLE_AUDIT_CHOOSE_NODE_NOTE: 'Er zijn maar een paar nodes die in de hele transactie historie kunnen zoeken (optie is standaard uitgeschakeld in een NIS).',
        APOSTILLE_AUDIT_WRONG_FORMAT: 'Dit bestand is geen apostille formaat!',
        APOSTILLE_AUDIT_FAIL_NO_PUBLIC_KEY: 'Verificatie mislukt, gebruiker heeft geen openbare sleutel!',
        APOSTILLE_AUDIT_SUCCESS: 'Bestand succesvol geverifieerd!',
        APOSTILLE_AUDIT_FAIL: 'Verificatie mislukt!',
        APOSTILLE_AUDIT_WAITING: 'Apostille overdracht wacht wellicht op een bevestiging!',
        APOSTILLE_AUDIT_NOT_FOUND: 'Transactie niet gevonden, wees er zeker van dat het niet wacht op een bevestiging anders is de apostille ongeldig',
        APOSTILLE_AUDIT_ERROR_UNCONFIRMED: 'Er is een fout opgetreden tijdens het ophalen van onbevestigde informatie, de transactie is niet gevonden',
        APOSTILLE_AUDIT_ERROR_SIGNER: 'Er is een fout opgetreden tijdens het ophalen van de informatie van de ondertekenaar',
        APOSTILLE_AUDIT_ERROR_SIGNATURE: 'Verificatie mislukt, er is een fout opgetreden in de handtekeningverificatie!',
        APOSTILLE_AUDIT_INFORMATION_1: 'Bestanden die geverifieerd kunnen worden moeten in <b>apostille formaat</b> zijn',
        APOSTILLE_AUDIT_INFORMATION_2: 'Je kan deze herkennen aan de bestandsnaam:',
        //APOSTILLE_AUDIT_NON_SIGNED: 'Non signed example:',
        //APOSTILLE_AUDIT_SIGNED: 'Signed example:',
        APOSTILLE_AUDIT_FILES: 'Verificatie-bestanden',
        APOSTILLE_AUDIT_FORMAT_EXAMPLE: 'Apostille voorbeeldformaat',
        APOSTILLE_AUDIT_REMOVE_RECORDS: 'Verwijder records lokaal',

        // APOSTILLE MESSAGE MODULE
        APOSTILLE_MESSAGE_TITLE: 'Zend een bericht naar een notaris account',
        APOSTILLE_MESSAGE_NS_BRAND: 'Gebruik mijn namespace om het bericht te markeren',
        APOSTILLE_MESSAGE_ADD_MOSAIC: 'Voeg mozaïek toe',
        APOSTILLE_NTY_ACCOUNT: 'Notaris account',
        APOSTILLE_REQUEST_MESSAGE: 'Berichtverzoek',
        APOSTILLE_CREATE_MESSAGE_REQUEST: 'Creëer een berichtverzoek',

        // TRANSFER APOSTILLE OWNLERSHIP MODULE
        APOSTILLE_TRANSFER_TITLE: 'Draag over of splits de apostille eigenaarsschap',

        // UPADTE APOSTILLE MODULE
        APOSTILLE_UPDATE_TITLE: 'Apostille bijwerken',

        // ERROR ALERTS
        ALERT_MISSING_FORM_DATA: 'Vul het formulier in!',
        ALERT_ERROR_WALLET_DOWNLOAD: 'Kan deze portemonnee niet downloaden omdat het niet bestaat!',
        ALERT_PASSWORDS_NOT_MATCHING: 'Wachtwoord of wachtwoorden komen niet overeen!',
        ALERT_INVALID_KEY_FOR_ADDR: 'Persoonlijke sleutel komt niet overeen met het verstrekte adres!',
        ALERT_NO_WALLET_LOADED: 'Je kunt het dashboard niet openen zonder een portemonnee',
        ALERT_WALLET_NAME_EXISTS: 'Een portemonnee met dezelfde naam is al geladen!',
        ALERT_INVALID_WALLET_FILE: 'Je probeert een bestand te laden dat geen portemonnee is!',
        ALERT_NO_NODE_SET: 'Vul een node in!',
        ALERT_INVALID_CUSTOM_NODE: 'Je aangepaste node is ongeldig!',
        ALERT_INVALID_WEBSOCKET_PORT: 'Aangepaste nodes websocket poort is ongeldig!',
        ALERT_MIJIN_DISABLED: 'Mijin netwerk is uitgeschakeld, selecteer een ander netwerk!',
        ALERT_GET_NS_BY_ID_ERROR: 'Fout bij het ophalen van namespace informatie, reden: ',
        ALERT_GET_ACCOUNT_DATA_ERROR: 'Fout bij het ophalen van accountgegevens, reden: ',
        ALERT_ERROR_OCCURRED: 'Er is een fout opgetreden!',
        ALERT_INVALID_ADDR_FOR_NETWORK: ' komt niet overeen met het netwerk',
        ALERT_INVALID_PASSWORD: 'Het verstrekte wachtwoord is niet geldig!',
        ALERT_COSIG_ALREADY_IN_LIST: 'Mede-ondertekenaar is al aanwezig in de modificatielijst! Mede-ondertekenaar ',
        ALERT_COSIGNATORY_HAS_NO_PUBLIC: 'Mede-ondertekenaar  moet minstens één transactie hebben om een openbare sleutel te krijgen! ',
        ALERT_MULTISIG_HAS_NO_PUBLIC: 'Multi-handtekening account moet tenminste één transactie hebben om een openbare sleutel te krijgen!',
        ALERT_COSIG_CANNOT_BE_MULTISIG: 'Om het geselecteerde account om te zetten is een mede-ondertekenaar nodig van een ander multi-handtekening account nodig. Daarom kan deze niet worden omgezet',
        ALERT_NO_NS_OWNED: 'Rekening bezit geen naamruimte, maak alsjeblieft één aan of verander van rekening',
        ALERT_UNLOCKED_INFO_ERROR: 'Er is een fout opgetreden bij het ophalen van ontgrendelingsinfo',
        ALERT_LOCK_ERROR: 'Fout bij vergrendeling account, reden: ',
        ALERT_UNLOCK_ERROR: 'Fout bij het ontgrendelen van account, reden: ',
        ALERT_SUPERNODES_ERROR: 'Er is een fout opgetreden bij het ophalen van supernodes data!',
        ALERT_INVALID_NTY_FILE: 'Het verstrekte bestand is geen nty bestand!',
        ALERT_CREATE_WALLET_FAILED: 'Kon geen portemonnee maken, reden: ',
        ALERT_REQUEST_FAILED: 'Request failed, reason: ',
        ALERT_DERIVATION_FROM_SEED_FAILED: 'Mislukt om rekening te ontlenen van zaad, reden: ',
        ALERT_BIP32_GENERATION_FAILED: 'Mislukt om bip32-gegevens te genereren, reden: ',
        ALERT_NO_WALLET_DATA: 'Fout, lege portemonnee gegevens!',
        ALERT_CANNOT_LOGIN_WITHOU_WALLET: 'Fout, kan niet inloggen zonder portemonnee!',
        ALERT_NO_WALLET_TO_SET: 'Fout, kan niets als huidige portemonnee instellen!',
        ALERT_INVALID_WALLET_INDEX: 'Fout, de geselecteerde accountindex is onbeperkt!',
        ALERT_NO_CURRENT_WALLET: 'Fout, kan geen portemonnee account instellen als er geen huidige portemonnee is!',
        ALERT_ALREADY_MULTISIG: 'Geselecteerde account is al een multi-handtekening account!',
        ALERT_INVALID_MODIFICATION_ARRAY: 'Een multi-handtekening account kan niet vanzelfsprekend zijn, controleer uw wijzigingslijst!',
        ALERT_GET_MARKET_INFO_ERROR: 'Er is een fout opgetreden tijdens het ophalen van marktinformatie!',
        ALERT_MULTISIG_CANNOT_BE_COSIG: 'Een multi-handtekening account kan niet als mede-ondertekenaar worden ingesteld!',
        ALERT_PURGE_CANCELLED: 'Verwijderen geannuleerd!',
        ALERT_MAINNET_DISABLED: 'Hoofdnetwerk is uitgeschakeld, selecteer een ander netwerk!',
        ALERT_EMPTY_DECODED_MSG: 'Er is een fout opgetreden, geen gedecodeerd bericht!',
        ALERT_INVALID_NS_NAME: 'Naam van de namespace is ongeldig!',
        ALERT_INVALID_MOSAIC_NAME: 'Naam van mozaïek is ongeldig!',
        ALERT_MOSAIC_DESCRIPTION: 'Beschrijving van mozaïek is ongeldig!',
        ALERT_GET_INCOMING_TXES_ERROR: 'Er is een fout opgetreden tijdens het ophalen van inkomende transacties, reden: ',
        ALERT_GET_MOSAICS_DEFINITIONS_ERROR: 'Fout bij het ophalen van mozaïekdefinities, reden:',
        ALERT_GET_SUB_NS_ERROR: 'Fout bij het ophalen van namespace-definities, reden: ',
        ALERT_GET_MOSAICS_ERROR: 'Fout bij het ophalen van mozaïeken, reden: ',
        ALERT_GET_TRANSACTIONS_ERROR: 'Fout bij het ophalen van transacties, reden: ',
        ALERT_INVALID_ADDRESS_BOOK_FILE: 'Dit bestand is niet in .adb formaat!',
        ALERT_INVALID_ADDRESS: 'Het opgegeven adres is niet geldig!',
        ALERT_INVALID_AMOUNT: 'Bedrag is niet geldig!',
        ALERT_INVALID_PRIVATE_KEY: 'Ingegeven persoonlijke sleutel is niet geldig!',
        ALERT_FILE_SIZE_ERROR: ' is te groot, maximaal toegestane grootte is 100MB',
        ALERT_MESSAGE_DECODE_KEY_ERROR: 'Bericht decryptie is mislukt omdat een account geen publieke sleutel heeft dat zichtbaar is op het netwerk',
        ALERT_FETCH_TIME_SYNC_ERROR: 'Er is een fout opgetreden bij het ophalen van netwerktijd!',
        ALERT_MULTISIG_MIN_SIGNATURE: 'Multi-handtekening account heeft ten minste een minimale handtekening nodig',
        ALERT_BTC_MARKET_ERROR: 'Fout bij het proberen om de Bitcoin-prijs op te halen',
        ALERT_COSIG_REMOVAL_LIMIT: 'Slechts één mede-ondertekenaar kan op het moment worden verwijderd',
        ALERT_MULTISIG_MIN_SIGNATURE_INVALID: 'Ongeldig aantal minimale handtekeningen',
        ALERT_INSUFFICIENT_BALANCE: 'Onvoldoende saldo voor het uitvoeren van de opdracht',
        ALERT_VOTING_ERROR: 'Ongeldige stem',
        ALERT_BRAIN_PASSWORD_TOO_SHORT: 'Brain wallet wachtwoord moet minimaal 40 karakters lang zijn!',
        ALERT_NODE_SEEMS_OFFLINE: 'Node lijkt offline, selecteer een andere node',
        ALERT_WEAK_PASSPHRASE: 'Beveiligingsscore van het wachtwoord moet minimaal 3 zijn',
        ALERT_BRAIN_WALLET_UPGRADE: 'Je brein portemonnee is zwak! Alle brein portemonnees moeten een wachtwoord van minimaal 40 karakters hebben.<br> We adviseren je een nieuwe portemonnee aan te maken op de inlogpagina en dan je saldo naar deze portemonnee te verzenden.<br> Meer informatie <a href="https://forum.nem.io/t/2791" target="_blank"><u>hier</u></a>.',
        ALERT_RECIPIENT_PUBLIC_KEY: 'Ontvanger heeft geen openbare sleutel zichtbaar voor het netwerk',
        ALERT_ENCRYPT_MULTISIG: 'Kan geen versleutelde berichten via multi-handtekening accounts verzenden',
        ALERT_EXCHANGE_NEEDS_MESSAGE: 'De ontvanger is een Exchange en daarom moet er een bericht worden meegestuurd, lees zorgvuldig de instructies van de desbetreffende Exchange!',
        ALERT_ACCOUNT_ALREADY_IN_ADDRESS_BOOK: 'Het contact bestaat al in het adressenboek!',
        ALERT_MAX_MOSAIC_SUPPLY: 'Maximale mozaïekvoorraad is 9.000.000.000',
        ALERT_GET_MOSAIC_SUPPLY_ERROR: 'Fout tijdens ophalen van mozaïekvoorraad, reden: ',
        ALERT_ENCRYPTED_MSG_OFFLINE: 'Versleutelde berichten is niet geactiveerd in offline transacties',

        // SUCCESS ALERTS
        ALERT_CREATE_WALLET_SUCCESS: 'Portemonnee is succesvol aangemaakt en geladen!',
        ALERT_SUCCESS_PURGE: 'Lokale opslag succesvol verwijderd!',
        ALERT_SUCCESS_LOGOUT: 'Succesvol uitgelogd!',
        ALERT_LOAD_WALLET_SUCCESS: 'Portemonnee succesvol geladen!',
        ALERT_TRANSACTION_SUCCESS: 'Transactie succesvol verzonden!',
        ALERT_GENERATE_ACCOUNT_SUCCESS: 'Account succesvol gegenereerd. Vergeet niet je bijgewerkte portemonnee te downloaden!',
        ALERT_UPGRADE_SUCCESS: 'Portemonnee is succesvol opgewaardeerd!',
        ALERT_SIGNATURE_SUCCESS: 'Transactie succesvol ondertekend!',
        ALERT_NTY_FILE_SUCCESS: 'Succesvol geladen nty bestand!',
        ALERT_INCOMING_TX_FROM: 'Inkomende transactie van ',
        ALERT_ADDRESS_BOOK_FILE_SUCCESS: 'Adresboek succesvol geïmporteerd!',
        ALERT_VOTING_SUCCESS: 'Stem succesvol verzonden',
        ALERT_POLL_CREATION_SUCCESS: 'Poll succesvol aangemaakt',
        ALERT_COPY_SIGNED_TX_SUCCESS: 'Ondertekende transactie gekopieerd!',
        ALERT_COPY_SIGNED_MSG_SUCCESS: 'Ondertekend bericht gekopieerd!',

        // CONVERT ACCOUNT TO MULTISIG
        AGGREGATE_MODIFICATION_TITLE: 'Een account converteren naar multi-handtekening',
        AGGREGATE_MODIFICATION_NAME: 'Samengevoegde modificatie transactie',
        AGGREGATE_MODIFICATION_MULTISIG_NAME: 'Multi-handtekening samengevoegde modificatie transactie',
        AGGREGATE_ACCOUNT_SELECT_TITLE: 'Account om te converteren',
        AGGREGATE_ACCOUNT_SELECT: 'Selecteer een account om te converteren',
        AGGREGATE_CUSTOM_ACCOUNT: 'Import sleutel',
        AGGREGATE_ACCOUNT_TO_CONVERT_PRIVATE_TITLE: 'Adres persoonlijke sleutel',
        AGGREGATE_ACCOUNT_TO_CONVERT: 'Account om adres te converteren',
        AGGREGATE_ACCOUNT_TO_CONVERT_PRIVATE: 'Account om persoonlijke sleutel te converteren',
        AGGREGATE_ADD_PLACEHOLDER: 'Mede-ondertekenaar account of @alias om toe te voegen',
        AGGREGATE_ADD_BTN_TITLE: 'Voeg ondertekenaar toe',
        AGGREGATE_MIN_SIGNATURES: 'Minimale handtekeningen vereist',
        AGGREGATE_MIN_SIGNATURES_PLACEHOLDER: 'Minimale handtekeningen nodig om een transactie te valideren',
        AGGREGATE_MODIFICATION_LIST: 'Wijzigingslijst',
        AGGREGATE_COSIG_LIST: ' Mede-ondertekenaar adreslijst',
        AGGREGATE_MODIFICATION_EDIT_TITLE: 'Bewerk een multi-handtekening contract',
        AGGREGATE_MODIFICATION_EDIT_SELECT_TITLE: 'Account om te bewerken',
        AGGREGATE_MODIFICATION_EDIT_SELECT: 'Selecteer een account om te bewerken',
        AGGREGATE_ADD_REMOVE_TITLE: 'Toevoegen/Verwijder ondertekenaar',
        AGGREGATE_ADD_REMOVE_PLACEHOLDER: 'Mede-ondertekenaar account of @alias om toe te voegen',
        AGGREGATE_MODIFICATION_RELATIVE_CHANGE: 'Wijzig handtekeningen benodigd',
        AGGREGATE_MODIFICATION_RELATIVE_CHANGE_PLACEHOLDER: 'Aantal handtekeningen om (n) toe te voegen of verwijderen (-n) - Geautomatiseerde verwijderingen',
        AGGREGATE_SELECTED_ACCOUNT_INFO: 'Geselecteerde account informatie',
        // Declared already AGGREGATE_MIN_SIGNATURES: 'Minimale handtekeningen vereist',
        AGGREGATE_SELECT_WALLET_ACCOUNT: 'Gebruik portemonnee account',
        AGGREGATE_ADD_COSIG: 'Mede-ondertekenaar toevoegen',
        AGGREGATE_REMOVE_COSIG: 'Mede-ondertekenaar verwijderen',

        // SIGN MULTISIGNATURE TRANSACTIONS
        SIGN_MULTISIG_TRANSACTIONS_TITLE: 'Teken multi-handtekening transacties',

        // LOGIN MODULE
        LOGIN_MEMBER_TITLE: 'Heb je al een portemonnee?',
        LOGIN_UPGRADE_TITLE: 'Portemonnee heeft een upgrade nodig',
        LOGIN_UPGRADE_MESSAGE: 'Geselecteerde portemonnee heeft een upgrade nodig. Met deze actie wordt een openbare sleutel genereerd en toegevoegd aan uw hoofdaccount. Downloaden van de bijgewerkte portemonnee wordt automatisch geactiveerd met succes, u <b> <u> moet </ u> </ b> het downloaden!',
        LOGIN_UPGRADE_BUTTON: 'Upgrade portemonnee',
        LOGIN_IMPORT_BUTTON: 'Portemonnee importeren',
        LOGIN_SELECT_WALLET_YOURS: 'Selecteer portemonnee',
        LOGIN_SELECT_WALLET: 'Selecteer een portemonnee...',
        LOGIN_LOGIN_BUTTON: 'Inloggen',
        LOGIN_NOTE: 'Geen portemonnee? Importeer er één of <a href="#!/signup">Meld je aan</a>.',

        // SIGNUP MODULE
        SIGNUP_TITLE: 'Nieuw bij NEM?',
        SIGNUP_SELECT_WALLET_TYPE: 'Selecteer een type portemonnee die je wilt creëren',
        SIGNUP_SELECT_WALLET_TYPE_STAND_BY: 'Plaats de cursor op een type portemonnee om informatie te tonen.',
        SIGNUP_CREATE_WALLET_TITLE: 'Eenvoudige portemonnee',
        SIGNUP_CREATE_WALLET_INFO: 'Eenvoudige portemonnees bevatten een primaire privésleutel die willekeurig wordt gegenereerd.',
        SIGNUP_PRIVATE_KEY_WALLET_TITLE: 'Persoonlijke sleutel portemonnee',
        SIGNUP_PRIVATE_KEY_WALLET_INFO: 'Persoonlijke sleutel portemonnees bevatten een primaire persoonlijke sleutel die je wilt importeren.',
        SIGNUP_BRAIN_WALLET_TITLE: 'Brein portemonnee',
        SIGNUP_BRAIN_WALLET_INFO: 'Brein portemonnees bevatten een primaire persoonlijke sleutel die is gegenereerd op basis van een wachtwoordzin. Hiermee kun je de portemonnee alleen ophalen door die exacte wachtwoordzin te kennen.',
        SIGNUP_CREATE_WALLET_BUTTON: 'Maak een eenvoudige portemonnee',
        SIGNUP_PRIVATE_KEY_WALLET_BUTTON: 'Maak een persoonlijke sleutel portemonnee',
        SIGNUP_BRAIN_WALLET_BUTTON: 'Maak een brein portemonnee',
        SIGNUP_CREATE_WALLET_WARNING: 'Lees over <a href="https://www.w3.org/TR/2014/WD-WebCryptoAPI-20140325/#RandomSource-interface" rel="nofollow" target="_blank"><b>gevaren</b></a> die door de klant gegenereerde sleutels vormen; Wij zijn niet verantwoordelijk voor enig verlies dat zou kunnen zijn door de entropie van de belangrijkste generatie. Zelfs als het onwaarschijnlijk zal gebeuren, wordt het nog steeds aanbevolen om een persoonlijke sleutel te gebruiken die is gegenereerd vanuit een NEM-client (NCC).',
        SIGNUP_NETWORK_SELECT: 'Selecteer een netwerk',
        SIGNUP_NETWORK_MAINNET: 'Mainnet is het <b><u>echte</u></b> NEM netwerk. Adressen beginnen met \'N\'.',
        SIGNUP_NETWORK_TESTNET: 'Testnet is het <b><u>test</u></b> netwerk. Adressen beginnen met \'T\'.',
        SIGNUP_NETWORK_MIJIN: 'Mijin is de privé versie van NEM. Adressen beginnen met \'M\'.',
        SIGNUP_BRAIN_WALLET_WARNING: 'Lees over <a href="https://en.bitcoin.it/wiki/Brainwallet" rel="nofollow" target="_blank"> gevaren </a> die brein portemonnee vormen. Brein portemonnees gebruikt ALLEEN de wachtwoordzin-hash meerdere keren. Daarom is het van cruciaal belang een VEILIGE wachtwoordzin te selecteren met minstens 40 karakters. <a href="https://xkcd.com/936/" rel="nofollow" target="_blank"> XKCD #936 </a>',
        SIGNUP_PRIVATE_KEY_WALLET_WARNING: 'Persoonlijke sleutel portemonnees gebruiken ALLEEN een wachtwoord om de geïmporteerde persoonlijke sleutel te coderen. Daarom is het van cruciaal belang om een veilig wachtwoord te selecteren.',
        SIGNUP_CREATE_START_WARNING: 'Volg alstublieft elke stap zorgvuldig!',
        SIGNUP_CREATE_START_CONNECTION_WARNING: 'Het wordt aanbevolen om de verbinding met internet te verbreken tijdens het maken van uw portemonnee en dan een back-up van uw gegevens te maken.',
        SIGNUP_CREATE_READY_BTN: 'Klaar',
        SIGNUP_CREATE_ENTER_NAME: 'Vul een portemonneenaam in',
        SIGNUP_CREATE_ENTER_PASSWORD: 'Vul een wachtwoord in',
        SIGNUP_CREATE_ENTER_PASSPHRASE: 'Vul een wachtwoordzin in',
        SIGNUP_CREATE_CONFIRM_PASSWORD: 'Bevestig bovenstaand wachtwoord',
        SIGNUP_CREATE_CONFIRM_PASSPHRASE: 'Bevestig bovenstaande wachtwoordzin',
        SIGNUP_CREATE_ENTER_PRIVATE_KEY: 'Vul een persoonlijke sleutel in',
        SIGNUP_CREATE_ADDRESS_FROM_PK: 'Adres dat overeenkomt met de bovenstaande sleutel',
        SIGNUP_CREATE_WALLET_ADD_ENTROPY_INFO: 'We gaan nu je primaire persoonlijke sleutel genereren. <b>Klik op Start en verplaats de cursor rond om meer onwaarschijnlijkheid toe te voegen.</b>',
        SIGNUP_COMMON_WALLET_WARNING_TITLE: 'Waarschuwing voor de veiligheid van het account',
        SIGNUP_COMMON_WALLET_WARNING_1: 'Portemonnees worden <b><u>tijdelijk</u></b> opgeslagen in de lokale opslagruimte van de browser! Browsers kunnen worden geconfigureerd (bijvoorbeeld door add-ons) om de lokale opslag soms af te schaffen. Dit leidt tot verlies van de gegevens en kan niet gemakkelijk worden ongedaan gemaakt. In zo een geval is je portemonnees weg, dus het is heel belangrijk om ervoor te zorgen dat je alle benodigde informatie hebt om je accounts te herstellen.',
        SIGNUP_COMMON_WALLET_WARNING_2: 'Je zou een download moeten hebben geactiveerd nadat je de portemonnee hebt gemaakt. Het is het bestand <b><i>.wlt</i></b> dat als back-up wordt gebruikt en terug te importeren als de lokale opslag van je browser is gewist.',
        SIGNUP_COMMON_WALLET_WARNING_3: 'Als je het bestand <b><i>.wlt</i></b> niet krijgt, klik je op onderstaande knop om de ruwe portemonneegegevens te openen en het bestand handmatig te maken:',
        SIGNUP_COMMON_WALLET_WARNING_4: 'Zelfs als je een portemonnee hebt, is het <b><u>verplicht</u></b> om de persoonlijke sleutel van je account te maken, klik op onderstaande knop om het te onthullen:',
        SIGNUP_COMMON_WALLET_WARNING_5: 'Het is je eigen verantwoordelijkheid om er altijd voor te zorgen dat je van je persoonlijke sleutel een back-up hebt voordat je geld naar je account verzendt.',
        SIGNUP_COMMON_WALLET_WARNING_6: 'Elke portemonnee heeft een <b><u>primaire persoonlijke sleutel</u></b> (hierboven wordt weergegeven) die gebruikt wordt om deterministische secundaire accounts te maken (BIP32). Deze functie vereist het gebruik van het <b><u>zelfde wachtwoord</u></b> of het zal verschillende secundaire accounts genereren voor dezelfde primaire persoonlijke sleutel. Wanneer je je gegevens reserveert, vergeet niet je <b><u>wachtwoord op te slaan</u></b>.',
        SIGNUP_COMMON_WALLET_WARNING_BTN_1: 'Toon ruw portemonnee bestand',
        SIGNUP_COMMON_WALLET_WARNING_BTN_1_INFO: 'Om een portemonneebestand te maken, maak een leeg tekstbestand en zet de bovenstaande BASE64-sleutel erin. Sla het bestand op als <b><i>JePortemonneeNaam.wlt</i></b> en het kan nu geïmporteerd worden.',
        SIGNUP_COMMON_WALLET_WARNING_BTN_2: 'Toon persoonlijke sleutel',
        SIGNUP_COMMON_WALLET_WARNING_BTN_2_INFO: 'Als je van een persoonlijke sleutel een back-up wilt maken, sla het op in een tekstbestand, druk of schrijf het ergens veilig op. Het is aan te bevelen om de persoonlijke sleutels offline op te slaan.',
        SIGNUP_COMMON_WALLET_WARNING_FOOTER: 'Door hieronder te klikken ga je akkoord dat je de bovenstaande waarschuwingen hebt gelezen en begrepen.',
        SIGNUP_COMMON_WALLET_WARNING_CONFIRM_1: 'Ik heb mijn portemonneebestand',
        SIGNUP_COMMON_WALLET_WARNING_CONFIRM_2: 'Ik heb mijn persoonlijke sleutel en wachtwoord',
        SIGNUP_COMMON_WALLET_WARNING_CONFIRM_3: 'Ik ga akkoord',
        SIGNUP_COMMON_WALLET_WARNING_UNDERSTOOD: 'Begrepen',
        SIGNUP_COMMON_WALLET_WARNING_DOWNLOAD: 'Download portemonnee',
        SIGNUP_ESTIMATED_PASSPHRASE_STRENGTH: 'Geschatte wachtwoord sterkte',
        SIGNUP_ESTIMATED_GUESS_TIMES: 'Geschat aantal keer raden',
        SIGNUP_CONGRATS_MSG: '<b>Gefeliciteerd!</b> Je NEM adres is',

        // FAQ MODULE
        FAQ_TITLE: 'Vaak gestelde vragen',
        FAQ_QUESTION_1: 'Hoe werkt NEM Wallet?',
        FAQ_ANSWER_1: 'De NEM Wallet is gebouwd met behulp van de nieuwste cryptobibliotheken met ES6 en AngularJS. Het is een volledige client-applicatie die nooit gevoelige gegevens verzendt; Alles gebeurt in je browser m.b.t. het creëren van persoonlijke sleutels voor het ondertekenen van transacties.',
        FAQ_QUESTION_2: 'Is het vrij om te gebruiken?',
        FAQ_ANSWER_2: 'Absoluut alle handelingen zijn klant-kant, alleen jij hebt controle over je munten, geen derden en geen extra kosten.',
        FAQ_QUESTION_3: 'Waarom heb ik al een Mozaïek ?',
        FAQ_ANSWER_3: 'Omdat XEM de standaardvaluta van de NEM blockchain is, heeft elke gebruiker het al in hun portemonnee geregistreerd, zelfs als hun saldo 0. De namepsace is NEM en de mozaïeknaam is XEM',
        FAQ_QUESTION_4: 'Roadmap?',
        FAQ_ANSWER_4: 'De huidige roadmap omvat integratie van alle NEM-clientfuncties en de voltooiing van door de gemeenschap gefinancierde projecten te integreren.',
        FAQ_QUESTION_5: 'Kan ik gratis XEM krijgen?',
        FAQ_ANSWER_5: 'De NEM Faucet is momenteel leeg, maar je kunt het NEM forum raadplegen om te weten te komen over de beschikbare bounties.',
        FAQ_QUESTION_6: 'Waar vindt je meer informatie over NEM?',
        FAQ_ANSWER_6_FORUM: 'Officieel forum',
        FAQ_ANSWER_6_WEBSITE: 'Officiële website',
        FAQ_ANSWER_6_BTT: 'Officiële BitcoinTalk thread',
        FAQ_QUESTION_7: 'Er is niets weergegeven op het dashboard',
        FAQ_ANSWER_7: 'Controleer de node-circel in de navigatiebar. <br> Rood betekent dat de connectie met de node is mislukt. <br> Klik op "Node" en selcteer een andere van de lijst of gebruik een aangepaste node. <br> <a href="https://supernodes.nem.io" target="_blank">Supernodes.nem.io</a> bevat een lijst met nodes die je kunt gebruiken.</a>',
        FAQ_QUESTION_8: 'Mede-ondertekenaars kunnen de transactie die getekend moet worden niet zien',
        FAQ_ANSWER_8: 'Ga in dit geval naar "Diensten", ga naar "Multi-handtekening en multi-gebruiker accounts" en klik op "Teken een multi-handtekening transactie".',
        FAQ_QUESTION_9: 'Wat zijn de beste veiligheidsoverwegingen?',
        FAQ_ANSWER_9: 'Het is ten strengste aan te bevelen om je persoonlijke sleutel op papier op te slaan.<br> Je kan hem printen en hem dan ergens veilig opslaan.<br><br>Met betrekking tot de portemonnee bestanden, hiervan altijd meerdere kopieën opslaan op verschillende locaties, zoals USB sitcks.<br>Wachtwoord moet uniek en complex zijn, schrijf hem daarom altijd eerst op.<br><br>Wanneer je je portemonnee wilt controleren of bewerkingen wilt uitvoeren:<br> - Sluit de USB-stick aan - Importeer de portemonnee in de NEM Wallet<br> - Koppel de USB-stick los.<br><br>Een kopie van uw portemonnee wordt opgeslagen in de lokale cache van de browser. <br> Als je klaar bent, log je uit en verwijder je de portemonnee uit de lokale cache via de knop voor opschonen aan de rechterkant van de footer.',
        FAQ_QUESTION_10: 'Waar vind ik informatie over mijn account (adres, enz.)?',
        FAQ_ANSWER_10: 'Als u naar de bovenste navigatiebalk kijkt, ziet u een <b><i>"Account"</b></i> knop tussen <b><i>"Node"</b></i> en <b><i>"Taal"</b></i>. Daar kunt u uw adres, openbare sleutel, toegekende balans en andere belangrijke gegevens vinden.',
        FAQ_QUESTION_11: 'Ik heb XEM naar een Exchange overgemaakt, maar er is niets bijgeschreven?',
        FAQ_ANSWER_11_1: 'Eerst moet u controleren of de hash van uw transactie naar een bestaande transactie in de <a target="_blank" href="http://chain.nem.ninja">verkenner</a> verwijst (houd er rekening mee dat de verkenner een paar blokken achter kan lopen).',
        FAQ_ANSWER_11_2: 'De meeste Exchanges vragen om een identificatiebericht om uw storting op uw account te zetten. Zorg ervoor dat je de instructies voor van de Exchange zorgvuldig hebt gevolgd en een bericht hebt toegevoegd dat NIET is gecodeerd.',
        FAQ_ANSWER_11_3: 'Zelfs als u een bericht hebt toegevoegd, kan het gebeuren dat Exchange uw storting mogelijk niet kan verwerken vanwege problemen aan hun kant.',
        FAQ_ANSWER_11_4: 'U moet contact opnemen met de helpdesk van de Exchange, de situatie uitleggen en hun de hash van de transactie verstrekken.',
        FAQ_QUESTION_12: 'Hoe controleer ik of ik verbonden ben met een "Fork"?',
        FAQ_ANSWER_12_1: 'Klik op <b><i>"Node"</b></i> in de bovenste navigatiebalk om het node-scherm te openen.',
        FAQ_ANSWER_12_2: 'Kijk naar de blokhoogte en controleer het met de hoogte zoals <a target="_blank" href="http://hugealice.nem.ninja:7890/chain/height">hier</a> weergegeven.',
        FAQ_ANSWER_12_3: 'Als er een verschil is van 5 blokken, dan ben je waarschijnlijk verbonden met een "Fork".',
        FAQ_ANSWER_12_4: 'Als je dit wilt herstellen, kiest u gewoon een andere node in de keuzelijst in het node-scherm. Het haalt de laatste status op vanaf het echter netwerk.',

        // FORM RELATED
        FORM_PASSWORD_FIELD_PLACEHOLDER: 'Voer je wachtwoord of wachtwoordzin in',
        FORM_WALLET_NAME_FIELD_PLACEHOLDER: 'Portemonneenaam',
        FORM_SIGNUP_PASSWORD_FIELD_PLACEHOLDER: 'Wachtwoord',
        FORM_PASSWORD: 'Wachtwoord',
        FORM_PASSWORD_CONFIRM: 'Bevestig wachtwoord',
        FORM_PASSPHRASE_CONFIRM: 'Bevestig wachtwoordzin',
        FORM_CONFIRM_PASSWORD_FIELD_PLACEHOLDER: 'Bevestig je wachtwoord',
        FORM_PASSPHRASE_FIELD_PLACEHOLDER: 'Wachtwoordzin',
        FORM_CONFIRM_PASSPHRASE_FIELD_PLACEHOLDER: 'Bevestig je wachtwoordzin',
        FORM_ADDRESS_FIELD_PLACEHOLDER: 'Accountadres',
        FORM_PRIVATE_KEY_FIELD_PLACEHOLDER: 'Persoonlijke sleutel',
        FORM_SIDE_BTN_BALANCE: 'Balans',
        FORM_SIDE_BTN_PAY_TO: 'Betaal aan',
        FORM_SIDE_BTN_TX_FEE: 'Transactiekosten',
        FORM_SIDE_BTN_RENTAL_FEE: 'Huurprijs',
        FORM_SIDE_BTN_LEVY_FEE: 'Heffingskosten',
        FORM_RECIPIENT_PLACEHOLDER: 'Adres van ontvanger of @alias',
        FORM_INVOICE_RECIPIENT_PLACEHOLDER: 'Adres van ontvanger',
        FORM_SIDE_BTN_ALIAS_OF: 'Alias van',
        FORM_MESSAGE_PLACEHOLDER: 'Bericht',
        FORM_MOSAIC_NAME_PLACEHOLDER: 'Mozaïeknaam',
        FORM_ADDRESS_ALIAS_PLACEHOLDER: 'Accountadres of @alias',
        FORM_BTN_GET_ALIAS: 'Haal namespace adres op',
        FORM_BTN_OPEN_ADB: 'Open adressenboek',
        FORM_SELECT_NAMESPACE: 'Selecteer een namespace',

        // VOTING MODULE
        PORTAL_VOTING_TITLE: 'Stemmen',
        PORTAL_VOTING_TEXT: 'Maak en stem over polls',
        PORTAL_VOTING_BTN1: 'Zie Polls',
        PORTAL_VOTING_BTN2: 'Creëer Poll',
        FORM_TITLE_FIELD_PLACEHOLDER: 'Titel',
        FORM_DESCRIPTION_FIELD_PLACEHOLDER: 'Schrijf je omschrijving hier',
        FORM_OPTION_FIELD_PLACEHOLDER: 'schrijf optie',
        FORM_WHITELIST_FIELD_PLACEHOLDER: 'account adres',
        FORM_SELECT_MULTISIG: 'Selecteer een multi-handtekening account',
        FORM_SELECT_CONTACT: 'Selecteer een contact',

        // TREZOR RELATED
        TREZOR_TITLE: 'TREZOR',
        TREZOR_TEXT: 'De TREZOR hardware portemonnee maakt veilig werken met XEM, Mozaïeken en Multi-handtekening accounts mogelijk',
        TREZOR_BUTTON: 'Aanmelden met TREZOR',

        // LEDGER NANO RELATED
        LEDGER_NANO_TITLE: 'LEDGER NANO',
        LEDGER_NANO_TEXT: 'De LEDGER NANO hardware portemonnee maakt veilig werken met XEM, Mozaïeken en Multi-handtekening accounts mogelijk',
        LEDGER_NANO_BUTTON: 'Aanmelden met LEDGER NANO',
        LEDGER_NANO_NO_DEVICE: 'Ledger device not found',
        LEDGER_NANO_CHECK_DEVICE: 'Please check your Ledger device!',
        LEDGER_NANO_NOT_USING_NEM_APP: 'You are not using NEM app on your Ledger device',
        LEDGER_NANO_NOT_USING_XYM_APP: 'You are not using Symbol app on your Ledger device',
        LEDGER_NANO_NOT_SUPPORTED_APP: 'Please check if you have an up-to-date NEM application open on your Ledger device',
        LEDGER_NANO_CONNECTED_OTHER_APP: 'Another app is already connected to your Ledger device. Please close it then try again',
        LEDGER_NANO_NOT_OPENED_NEM_APP: 'Please open NEM app on your Ledger device',
        LEDGER_NANO_NOT_OPENED_XYM_APP: 'Please open Symbol app on your Ledger device',
        LEDGER_NANO_DEVICE_LOCKED: 'Please unlock your Ledger device',
        LEDGER_NANO_USER_REJECT_LOGIN: 'Login cancelled by user',
        LEDGER_NANO_USER_REJECT_REQUEST: 'Request cancelled by user',
        LEDGER_NANO_FOLLOW_INSTRUCTION: 'Follow instructions on your Ledger device',
        LEDGER_NANO_TRANSACTION_TOO_BIG: 'The transaction is too big to sign on your Ledger device',
        LEDGER_NANO_TRANSACTION_USER_CANCEL: 'Signing cancelled by user',
        LEDGER_NANO_TRANSACTION_FAILED: 'Failed to sign transaction, reason: ',
        LEDGER_NANO_OPTIN_INFO_1: 'You can use Symbol Ledger app to get account for Symbol Opt-in.',
        LEDGER_NANO_OPTIN_INFO_2: 'Please open Symbol Ledger app on your device and click on Import Symbol account.',
        LEDGER_NANO_IMPORT_SYMBOL: 'Import Symbol account',

        // CREATE OFFLINE TRANSACTION MODULE
        OFFLINE_TX_TITLE: 'Bereid een offline transactie voor',
        OFFLINE_TX_NO_WALLET: 'Importeer een portemonnee vanuit de login module om dit formulier te zien.',
        OFFLINE_TX_INFO_1: 'Zorg ervoor dat de verbinding met internet is verbroken tijdens het importeren van uw portemonnee en het maken van de transactie!',
        OFFLINE_TX_INFO_2: 'Er kunnen alleen eenvoudige transacties worden gemaakt, omdat een verbinding nodig is om mozaïeken en multi-handtekeningsinformatie op te halen uit NEM-nodes.',
        OFFLINE_TX_INFO_3: 'Na het klikken op "Creëren" in het linkse paneel, dan vind je de ondertekende transactie hieronder.',
        OFFLINE_TX_INFO_4: 'Een ondertekende transactie is onveranderbaar en zal alleen van kracht zijn als deze vóór het verstrijken van de standaardtermijn van 24 uur op het netwerk wordt vrijgegeven.',
        OFFLINE_TX_SIGNED: 'Ondertekende transactie',
        OFFLINE_TX_RELEASE: 'Open in vrijgave module',
        OFFLINE_TX_MODAL_ALERT: 'Deze computer lijkt verbonden met internet, houd er rekening mee dat het maken van offline transacties <b>ALLEEN</b> veilig is op een computer die <b>NOOIT</b> is verbonden met internet.',

        // RELEASE OFFLINE TRANSACTION MODULE
        RELEASE_OFFLINE_TX_TITLE: 'Offline transactie vrijgeven naar het netwerk',
        RELEASE_OFFLINE_TX_PARAMETERS: 'Transactie parameters',
        RELEASE_OFFLINE_TX_INFO_1: 'Om een transactie vrij te geven moet je met internet zijn verbonden.',
        RELEASE_OFFLINE_TX_INFO_2: 'Zorg ervoor dat je het juiste netwerk en een werkende node hebt geselecteerd, anders wordt de transactie geweigerd.',
        RELEASE_OFFLINE_TX_INFO_3: 'Het is niet mogelijk om een ondertekende transactie twee keer te verzenden. Eén ondertekende transactie genereert altijd dezelfde hash en twee transacties kunnen niet dezelfde hash hebben.',
        RELEASE_OFFLINE_TX_INFO_4: 'Je kunt een ondertekende transactie veilig vrijgeven vanaf elke computer.',

        // INVOICE MODULE
        CREATE_INVOICE_TITLE: 'Creëer een factuur',

        // CREATE SIGNED MESSAGE MODULE
        CREATE_SIGNED_MSG_TITLE: 'Creëer een ondertekend bericht',
        CREATE_SIGNED_MSG_NAME: 'Ondertekend bericht',
        CREATE_SIGNED_MSG_SIGN: 'Onderteken een bericht',

        // VERIFY SIGNED MESSAGE MODULE
        VERIFY_SIGNED_MSG_TITLE: 'Verifieer een ondertekend bericht',
        VERIFY_SIGNED_MSG_SIG_VALID: 'Handtekening is geldig',
        VERIFY_SIGNED_MSG_SIG_NOT_VALID: 'Handtekening is <b>NIET</b> geldig',
        VERIFY_SIGNED_MSG_NOT_VALID: 'Ondertekend bericht is niet geldig!',

        // DNS MODULE
        DNS_SHORT_DESC: "Gedecentraliseerd Domain Name System (DNS) service voor namespace.nem domeinen",
        DNS_CONFIGURE: "Configureer DNS",
        DNS_SEARCH_DNS: "Zoek DNS",
        DNS_GO_SEARCH: "START!",
        DNS_GET_INFO: "Informatie ophalen",
        DNS_SEARCH_HEADLINE: "Zoek DNS",
        DNS_SEARCH_HELP: "DNS help",
        DNS_SEARCH: "Zoek",
        DNS_SEARCH_HELP_INFO: "Type een namespace.nem om de DNS informatie op te halen of direct naar de website te gaan.",
        //DNS CONFIGURE
        DNS_SELECT_NAMESPACE:"selecteer namespace",
        DNS_POINTER_ADDRESS:"'Pointer'-adres",
        DNS_IP_ADDRESS:"IP adres",
        DNS_ORGA:"Organisatie",
        DNS_COUNTRY:"Land",
        DNS_ADDRESS:"Adres",
        DNS_PHONE:"Telefoon",
        DNS_EMAIL:"E-mail",
        DNS_OTHERINFO:"Overige info",
        DNS_JSONMSG:"Json bericht",
        DNS_CHAR_LEFT:"Tekens over",
        DNS_HELP1:"De eigenaar van een NEM namespace kan de NEM DNS in enkele eenvoudige stappen gebruiken. De DNS is gebouwd rond het namespace-platform in het NEM-ecosysteem en een bijbehorend 'pointer'-adres (PA). De eigenaar van de namespace moet een transactie naar het namespace 'pointer'-adres verzenden, inclusief een ongecodeerd bericht in json-formaat met informatie over de namespace. Het bericht kan relevante informatie bevatten, zoals IP-adres, eigendomsinformatie, fysiek adres, contactgegevens en nog veel meer.",
        DNS_HELP2:"Zo kun je het doen:",
        DNS_HELP3:"1. selecteer namespace",
        DNS_HELP4:"2. schrijf relevante of update DNS informatie",
        DNS_HELP5:"3. verzend transactie naar 'pointer'-adres",
        //DNS ALERTS
        ALERT_DNS_SUCCESS: "Informatie gevonden",
        ALERT_DNS_NO_INFO_FOUND: "Geen DNS informatie gevonden",

        // IMPORT WALLET QRCODE
        IMPORT_WALLET_QRCODE_TITLE: 'Importeer portemonnee QR Code',
        IMPORT_WALLET_QRCODE_INFORMATION: 'Ondersteuning voor portemonnee QR Code: NEM WeChat Wallet, iOS, Android.',
        IMPORT_WALLET_QRCODE_LOAD: 'Laad portemonnee QR Code',
        IMPORT_WALLET_QRCODE_SCAN: 'Scan',
        IMPORT_WALLET_QRCODE_STOP_SCAN: 'Stop scannen',

        //NEMonster
        NEMONSTER_SHORT_DESC: "Welkom bij NEMonsters, een grappig klein verzamelspel gebaseerd op de NEM-blockchain.",
        NEMONSTER_CATCH: "Vang",
        NEMONSTER_GET: "Vang wat monsters",
        NEMONSTER_DESC: "Welkom bij NEMonsters, een grappig klein verzamelspel gebaseerd op de NEM-blockchain. Je kunt meer dan 110.000.000 verschillende combinaties van gegenereerde monsters verzamelen met verschillende kleuren, namen en andere pittige kenmerken. Je vang een nieuw monster door een vaste transactie te sturen, het monster wordt opgeroepen wanneer de transactie wordt bevestigd. De kenmerken van je nieuwe (kwaadaardige) monster zijn gebaseerd op de transactiehash - hoe gaaf is dat. Kijk of je een aantal van de monsters kunt vangen van de NEM Foundation.",

        // CATAPULT OPT IN MODULE
        PORTAL_CATAPULTOPTIN_TITLE: 'Symbol Opt In',
        PORTAL_CATAPULTOPTIN_TEXT: 'Use this module to receive XYM on the Symbol network. You may also opt in to have your namespaces registered and multisig accounts opted in. Your mosaic balances, Apostille data, delegating harvesting contracts, and all other DAP content will not carry forward. Please, read more ',
        PORTAL_CATAPULTOPTIN_TEXT_LINK: 'here.',
        PORTAL_CATAPULTOPTIN_MULTISIG_TEXT: 'Your multi-signature opt-in request must be issued with cosigner accounts',
        PORTAL_CATAPULTOPTIN_BTN_1: 'Claim XYM and Namespaces with a Symbol Opt In',
        PORTAL_CATAPULTOPTIN_BTN_2: 'Sign a Multisig Opt In Message',
        PORTAL_CATAPULTOPTIN_TREZOR_TEXT: 'Opt in with trezor is not implemented yet. If you want to Opt in, please move your funds to a normal account.',
        TITLE_CATAPULTOPTIN: 'Symbol Opt In',
        CATAPULTOPTIN_CREATE_HELP: 'Want to know more about opting in to Symbol?',
        CATAPULTOPTIN_TRANSACTION: 'Opt In Transaction',
        CATAPULTOPTIN_ACCOUNT_UNLOCK: 'Enter your Symbol mnemonic',
        CATAPULTOPTIN_ACCOUNT_UNLOCK_PLACEHOLDER: 'Please provide the mnemonic passphrase for your Symbol Account that you opted in',
        CATAPULTOPTIN_ACCOUNT_STEP_1: 'Step 1: Please select an account to Opt In',
        CATAPULTOPTIN_ACCOUNT_STEP_1_NEW: 'Step 1: Please select an account to Opt In',
        CATAPULTOPTIN_ACCOUNT_STEP_2: 'Step 2: Review my Symbol account opt in information',
        CATAPULTOPTIN_ACCOUNT_MS_STEP_2: 'Step 2: Review multisig Symbol account information',
        CATAPULTOPTIN_ACCOUNT_STEP_3: 'Step 3: Review my namespaces to be opted in',
        CATAPULTOPTIN_ACCOUNT_STEP_4: 'Step 4: Review VRF keys in opt in',
        CATAPULTOPTIN_INCLUDE_VRF: 'Include VRF keys in opt in',
        CATAPULTOPTIN_VRF_KEYS: 'VRF keys',
        CATAPULTOPTIN_VRF_PUBLIC_KEY: 'VRF public key',
        CATAPULTOPTIN_ACCOUNT_MS_STEP_3: 'Step 3: Review multisig namespaces to be opted in',
        CATAPULTOPTIN_ACCOUNT_STEP_SIGN: 'Step 2: Sign Symbol Opt In',
        CATAPULTOPTIN_REVIEW_MULTISIG_RESULT: 'Review Multisig Symbol Opt In',
        CATAPULTOPTIN_REGISTER: 'Register Symbol Opt In',
        CATAPULTOPTIN_CREATE_ADDRESS: 'Create a new address on Symbol from mnemonic.',
        CATAPULTOPTIN_INCLUDE_NAMESPACE: 'Include my namespaces in the opt in',
        CATAPULTOPTIN_INCLUDE_MS_NAMESPACE: 'Include multisig account namespaces in the opt in',
        CATAPULTOPTIN_MULTISIG_CONTRACT_CONSIGNATURES: 'Multisig Contract Cosignatures',
        SIGN_MULTISIG_OPTIN_TRANSACTIONS_TITLE: 'Sign Multisignature Opt In Transactions',
        CATAPULTOPTIN_NAMESPACE_TO_DELETE: 'Opt Out of Namespace',
        CATAPULTOPTIN_NAMESPACE_REMOVE: 'Enter namespace to be removed',
        CATAPULTOPTIN_ENTER_PK: 'Enter a private key to generate Symbol account',
        CATAPULTOPTIN_ENTER_PASSWORD: 'Enter your password to generate Symbol account',
        CATAPULTOPTIN_REMOVE_NAMESPACE: 'Remove Namespace',
        CATAPULTOPTIN_OPT_IN_SUCCESS: 'Opt In completed successfully',
        CATAPULTOPTIN_OPT_IN_PENDING_SIGNATURES: 'Opt In pending cosignatories',
        CATAPULTOPTIN_TRANSFER_TRANSACTION_MULTISIG_NAME: 'Symbol Multisig Account Opt in Approval',
        CATAPULTOPTIN_NIS1: 'NIS1',
        CATAPULTOPTIN_OPTIN_ACCOUNT: 'Opt in account:',
        CATAPULTOPTIN_OPTIN_ACCOUNT_PK: 'Opt in account public key:',
        CATAPULTOPTIN_NAMESPACES_OPTIN: 'My opted in namespaces',
        CATAPULTOPTIN_CATAPULT: 'Symbol',
        CATAPULTOPTIN_OPTIN_ACCOUNT_ADDRESS: 'Opt in account address:',
        CATAPULTOPTIN_UNLOCK: 'Unlock Symbol Account',
        CATAPULTOPTIN_CONFIRM_OPTIN: 'Confirm Symbol Opt In',
        CATAPULT_OPT_IN_RESUME: 'Opt In Transaction Confirmation',
        CATAPULT_OPT_IN_RESUME_TEXT:'The following transaction will create a new Symbol account. To claim your funds, you need to back up your Mnemonic passphrase.',
        CATAPULT_OPT_IN_SUCCESS: 'Opt In Successful',
        CATAPULT_OPT_IN_BALANCE_SNAPSHOT: 'Balance to be included in Symbol',
        CATAPULT_OPT_IN_SUCCESS_SIGNING: 'Opt In signed successfully',
        CATAPULT_OPT_IN_UNDERSTAND: 'Considering the change of private key when used with Symbol, it is important that you understand that your account private key on Symbol will be different from your old private key. Please, confirm that you have made a copy of the new private key by entering ‘Yes, I understand’ in the field below.',
        CATAPULT_OPT_IN_CONFIRM_BACKUP: 'I have backed up my mnemonic passphrase for the opt in process and understand it is my responsibility to save and back it up.',
        CATAPULT_OPT_IN_UNDERSTAND_FUNDS: 'I understand that only the funds in my account on the snapshot block are the funds that will be included in my XYM account balance at Symbol launch. Any account balance changes after this opt transaction but before the snapshot will be reflected at Symbol launch.',
        GENERAL_MIN_SIGNATURES_REQUIRED: 'Minimum signatures required',
        SYMBOL_OPTIN_INITIATOR: 'Opt In initiator',
        CATAPULT_BACKUP_WALLET: 'Backup Symbol Wallet',
        CATAPULT_DOWNLOAD_WALLET: 'Download Encrypted Symbol Wallet',
        MNEMONIC: 'Mnemonic',
        CATAPULT_OPT_IN_LOADING: 'Fetching Opt In Status...',
        COSIGNER_NOT_OPTIN: 'Cosigner has not started the opt in process yet',
        SYMBOL_ADDRESS: 'Symbol Address',
        YOUR_SYMBOL_ADDRESS: 'Your Symbol Address',
        YOUR_SYMBOL_MNEMONIC: 'Your Symbol Mnemonic',
        SYMBOL_COSIGNERS: 'Symbol Cosigners',
        CATAPULTOPTIN_CONFIRM_SIGN: 'Sign Symbol Opt In',
        CATAPULTOPTIN_FIRST_DO_NORMAL: 'To do the Multisig Opt In you must first do the Normal Opt In',
        CATAPULTOPTIN_ENCRYPTED_WALLET_TEXT: 'Please create a new password to encrypt your Symbol wallet backup and then press the download button.',
        CATAPULTOPTIN_REVIEW_NORMAL_RESULT: 'Review my Symbol account opt in information',
        CATAPULTOPTIN_GENERATE_NEW_SYMBOL: 'Generate new Symbol Mnemonic',
        CATAPULTOPTIN_VRF_KEYS_DESCRIPTION: 'VRF keys are used for harvesting on symbol. If you own a node and want to start harvesting the first blocks, you should activate this option and save the keys to put them back in your symbol node configuration. If you don\'t select this option, you will also be able to generate new keys once mainnet is alive',
        OPTIN_FORM_PASSWORD_FIELD_PLACEHOLDER: 'Enter your regular NEM wallet password',
        OPTIN_NEW_PASSWORD: 'New Password',
        SYMBOL_PASSWORD_REQUIREMENT: "Password must be at least 8 characters",
        SYMBOL_WALLET_CREATING_TYPE_INFO: 'Please choose the way to create your Symbol account',
        SYMBOL_WALLET_CREATING_BY_ENTROPY_TYPE_INFO: 'Generate random account',
        SYMBOL_WALLET_CREATING_BY_LEDGER_IMPORT_TYPE_INFO: 'Import Symbol account from Ledger',
        SYMBOL_SIGNUP_CREATE_WALLET_ADD_ENTROPY_INFO_1: 'We are now going to generate your primary private key.',
        SYMBOL_SIGNUP_CREATE_WALLET_ADD_ENTROPY_INFO_2: 'Please click on start and move your cursor around to add more entropy.',
        OPTIN_WELCOME_TITLE: 'Welcome to Symbol Opt-in',
        OPTIN_INFO_1: 'The Symbol mainnet has not launched yet.',
        OPTIN_INFO_2: 'You can prepare by opting in your NEM NIS1 accounts with this module ',
        OPTIN_INFO_3: 'to migrate your balance and namespaces to the Symbol network.',
        OPTIN_LINK_INFO: 'Get all information about Opt-in process ',
        OPTIN_NAMESPACES_TITLE: 'Opt-in Namespaces',
        OPTIN_NAMESPACES_INFO:'Now you can Opt-in the Namespace(s) you own on NEM NIS1. This provides a placeholder for the same Namespace(s) on the Symbol blockchain.',
        OPTIN_NAMESPACES_LINK: 'Get all information about Namespace Opt-in ',
        OPTIN_NAMESPACES_SELECT: 'Select the Namespaces you want to Opt-in:',
        OPTIN_VRF_TITLE: 'Include VRF keys',
        OPTIN_VRF_INFO:'VRF keys allow your account to harvest block rewards. If you plan to hold over 10,000 XYM in your account after launch and would like to harvest on Symbol blockchain, you need to add VRF keys to the Opt-in process.',
        OPTIN_VRF_LINK: 'Get all information about VRF keys ',
        OPTIN_VRF_KEYS:'Add VRF Keys',
        OPTIN_VRF_PUBLIC: 'VRF Public Address',
        OPTIN_VRF_PRIVATE: 'VRF Private Key',
        OPTIN_TAC_TITLE:'Terms and Conditions',
        OPTIN_TAC_TEXT:'terms and conditions',
        OPTIN_TAC_INFO_1:'The Opt-in process is a feature launched by Symbol Chain Limited with the aim of helping NIS1 users migrate their balances to their new Symbol network. It is a process defined under certain parameters that all users who adhere to it have to comply with.',
        OPTIN_TAC_INFO_2:'Symbol Chain Limited will not be liable for any incidents outside of the terms and conditions specified below.',
        OPTIN_TAC_READ_ACCEPT: 'I have read and accept the ',
        OPTIN_CONFIRM_TITLE:'Confirm Symbol Opt-in',
        OPTIN_CONFIRM_INFO:'We are almost done! This will be the information that will be migrated to the new Symbol chain. Review it carefully and sign with your NEM key to finish your Opt-in.',
        OPTIN_CONFIRM_OPTIN:'Confirm Opt-in',
        HERE:'here',
        OPTIN_ENTER_PASSWORD: 'Enter your NEM NIS1 password to sign the Opt-in',
        OPTIN_LOADING: 'Fetching Opt In data...',
        OPTIN_FINISHED: 'Post launch Opt-in will open soon. Please check back for a new version after Symbol launch.',
        CREATE_SYMBOL_ACCOUNT: 'Create your Symbol account',
        OPTIN_SYMBOL_READY: 'Your Symbol account is ready',
        OPTIN_COPY_SUCCESS: 'Copied!',
        OPTIN_TYPE_SELECT: 'Select the way you opted in this wallet',
        CATAPULT_OPT_IN_ERROR_TOO_MUCH_COSIGNATORIES: 'This account has more than 8 cosignatories. Opt In protocol only allows multisig accounts with less than 9 cosignatories'

    });
}

export default DutchProvider;

'''
'''--- src/app/modules/languages/pl.js ---
function PolishProvider($translateProvider) {
    'ngInject'

    $translateProvider.translations('pl', {

        // HEADER COMPONENT
        WALLET_NAME_1: 'NEM',
        WALLET_NAME_2: 'Wallet',
        APP_NAME_SUB: 'Bezpieczny interfejs łączący z platformą NEM',
        HEADER_LOGIN_BUTTON: 'Logowanie',
        HEADER_SIGNUP_BUTTON: 'Rejestracja',
        HEADER_DASHBOARD: 'Dashboard',
        HEADER_WALLET: 'Portfel',
        HEADER_SERVICES: 'Usługi',
        HEADER_EXPLORER: 'Explorer',
        HEADER_NODE: 'Serwer',
        HEADER_ACCOUNT: 'Konto',
        HEADER_LANG_TITLE: 'Język',
        HEADER_LANG_SELECT: 'Wybierz język',
        HEADER_NODE_BLOCK_HEIGHT: 'Bieżący blok',
        HEADER_NODE_CURRENT_NODE: 'Aktualny serwer',
        HEARDER_NODE_LIST: 'Lista serwerów',
        HEADER_NODE_SELECT: 'Wybierz serwer',
        HEADER_NODE_CUSTOM: 'Własny serwer',
        HEADER_NODE_CONNECT: 'Połącz',
        HEADER_NODE_CUSTOM_INFO: 'IP serwera lub domena',
        HEADER_NODE_CUSTOM_TOOLTIP: 'Dodaj własny serwer NIS',
        HEADER_PURGE: 'Wyczyść',
        HEADER_PURGE_MESSAGE: 'Proszę potwierdzić czyszczenie pamięci przeglądarki. Po wciśnięciu "OK" wszystkie portfele w lokalnej pamięci zostaną usunięte i nie będzie można ich odzyskać. Zgadzasz się z tym, że posiadasz kopie zapasowe portfeli i że fundusze są zabezpieczone.',
        HEADER_OFFLINE_TX: 'Prepare an offline transaction',
        HEADER_RELEASE_TX: 'Release a transaction',

        // FOOTER COMPONENT
        FOOTER_POWERED_BY_1: 'Zasilany',
        FOOTER_POWERED_BY_2: 'technologią NEM.',
        FOOTER_VERSION: 'Wersja',

        // DASHBOARD MODULE
        DASHBOARD_TITLE: 'Panel główny',
        DASHBOARD_UNCONFIRMED: 'Niepotwierdzone',
        DASHBOARD_CONFIRMED: 'Potwierdzone',
        DASHBOARD_HARVEST_INCOME_TITLE: 'Przychody z ostatnich 25 zebranych bloków',
        DASHBOARD_HARVEST_INCOME_NOTE: 'Tylko bloki z opłatą powyżej 0',
        DASHBOARD_HARVEST_INCOME_MESSAGE: 'Nie znaleziono opłat w ostatnich 25 blokach',
        DASHBOARD_NEWS_TITLE: 'Najnowsze informacje',
        DASHBOARD_HARVESTED_BLOCKS_TITLE: 'Zebrane bloki',
        DASHBOARD_HARVESTED_BLOCKS_TH: 'Uzyskane opłaty',
        DASHBOARD_MARKET_INFO_TITLE: 'Informacje o rynku',
        DASHBOARD_MARKET_INFO_CAP: 'Kapitalizacja',
        DASHBOARD_MARKET_INFO_PRICE: 'Cena',
        DASHBOARD_MARKET_INFO_VOLUME: 'Wolumen dobowy',
        DASHBOARD_MARKET_INFO_CHANGES: 'Zmiana w procentach',
        DASHBOARD_MARKET_INFO_CHANGES_1H: '1h',
        DASHBOARD_MARKET_INFO_CHANGES_24H: '24h',
        DASHBOARD_MARKET_INFO_CHANGES_7D: '7d',
        DASHBOARD_MARKET_INFO_NOTE: '<a href="http://coinmarketcap.com/" target="_blank">CoinMarketCap</a> dane aktulizowane co 5 minut',
        DASHBOARD_NOTICE_1: 'Witamy w Nano Wallet Beta!',
        DASHBOARD_NOTICE_2: 'Proszę <a href="https://github.com/NemProject/NanoWallet" target="_blank">wypełnić raport o błędzie.</a>',
        DASHBOARD_NOTICE_3: 'Zespół NEM nie ponosi odpowiedzialności za straty związane z używaniem tej aplikacji w sieci głównej NEM (mainnet). Sugerowane jest zapoznanie się z aplikacją używając sieci testowej NEM (testnet). Użytkownicy ponoszą odpowiedzialność za swoje środki i zabezpieczenie swoich kluczy prywatnych.',
        DASHBOARD_NOTICE_4: 'Proszę nie używać sieci głównej jeśli nie ma się pewności, że środki są zabezpieczone na kopii zapasowej. Sugerowane jest zapisanie klucza prywatnego w formie papierowej i przechowywanie w bezpiecznym miejscu. Dodatkowo istnieje możliwość importu kont do programu Lightwallet/NCC.',
        DASHBOARD_NOTICE_5: 'Dziękujemy za współpracę!',

        // GENERAL
        GENERAL_BLOCK: 'Blok',
        GENERAL_BLOCKS: 'Bloki',
        GENERAL_NO_RESULTS: 'Nic do pokazania',
        GENERAL_ACCOUNT: 'Konto',
        GENERAL_ACCOUNTS: 'Konta',
        GENERAL_MULTISIG_ACCOUNT: 'Konto z multipodpisem',
        GENERAL_AMOUNT: 'Ilość',
        GENERAL_MESSAGE: 'Wiadomość',
        GENERAL_DATE: 'Data',
        GENERAL_TAB_NORMAL: 'Zwykły',
        GENERAL_TAB_SEND: 'Wyślij',
        GENERAL_TAB_MULTISIG: 'Multipodpis',
        GENERAL_TOTAL: 'Łącznie',
        GENERAL_REMOVE: 'Usuń',
        GENERAL_MOSAIC: 'Mozaika',
        GENERAL_FEE: 'Opłata',
        GENERAL_LEVY: 'Podatek',
        GENERAL_LEVY_TYPES: 'Typy podatku',
        GENERAL_LEVY_TYPES_NOTE: 'I - stała opłata; II - podatek procentowy',
        GENERAL_LEVY_TYPE_1: 'Opłata stała',
        GENERAL_LEVY_TYPE_2: 'Opłata procentowa',
        GENERAL_SEND: 'Wyślij',
        GENERAL_TO: 'Do',
        GENERAL_HASH: 'Hasz',
        GENERAL_HASH_FUNCTION: 'Funkcja haszująca',
        GENERAL_NAME: 'Nazwa',
        GENERAL_INFORMATION: 'Informacja',
        GENERAL_ADDRESS: 'Adres',
        GENERAL_PUBLIC_KEY: 'Klucz publiczny',
        GENERAL_PRIVATE_KEY: 'Klucz prywatny',
        GENERAL_CLEAR_ALL: 'Wyczyść',
        GENERAL_CLOSE: 'Zamknij',
        GENERAL_COMING_SOON: 'Wkrótce',
        GENERAL_NONE: 'Żaden',
        GENERAL_DROPBOX: 'Upuść tu pliki lub kliknij aby przeglądać',
        GENERAL_NETWORK_FEE: 'Opłata sieci',
        GENERAL_YES: 'Tak',
        GENERAL_NO: 'Nie',
        GENERAL_TAGS: 'Tagi',
        GENERAL_SINK: 'Sink',
        GENERAL_SINK_ADDRESS: 'Sink Adres',
        GENERAL_STORAGE: 'Pamięć',
        GENERAL_REASON: 'Powód',
        GENERAL_TRANSACTION_HASH: 'Hasz transakcji',
        GENERAL_TRANSACTION_ID: 'ID Transakcji',
        GENERAL_OWNER: 'Właściciel',
        GENERAL_RESULTS: 'Wyniki',
        GENERAL_RESULT: 'Wynik',
        GENERAL_STATUS: 'Status',
        GENERAL_LOCATION: 'Lokacja',
        GENERAL_ACTION: 'Akcja',
        GENERAL_ACTIONS: 'Akcje',
        GENERAL_ADD: 'Dodaj',
        GENERAL_ADDED: 'Dodany',
        GENERAL_REMOVED: 'Usunięty',
        GENERAL_COSIGNATORY: 'Sygnatariusz',
        GENERAL_COSIGNATORIES: 'Sygnatariusze',
        GENERAL_PROCESSING: 'Przetwarzanie',
        GENERAL_ACCOUNT_LABEL: 'Etykieta konta',
        GENERAL_OPTIONAL: '(opcjonalnie)',
        GENERAL_ERROR: 'Błąd',
        GENERAL_EXAMPLE: 'Przykład',
        GENERAL_PUBLIC: 'Publiczny',
        GENERAL_NAMESPACES: 'Namespaces',
        GENERAL_NAMESPACE: 'Namespace',
        GENERAL_SUB_NAMESPACES: 'Sub-namespaces',
        GENERAL_SUB_NAMESPACE: 'Sub-namespace',
        GENERAL_MOSAICS: 'Mozaiki',
        GENERAL_VALUE: 'Wartość',
        GENERAL_CONNECTION_ERROR: 'Wystąpił błąd, nie działa serwer lub jesteś offline',
        GENERAL_HISTORY: 'Historia',
        GENERAL_REVEAL: 'Odsłoń',
        GENERAL_QR: 'QR code',
        GENERAL_UPDATE:  'Aktualizacja',
        GENERAL_UNKNOWN: 'Nieznany',
        GENERAL_IMPORTANCE: 'Waga',
        GENERAL_TRANSACTIONS: 'Transakcje',
        GENERAL_REGISTER: 'Zarejestruj',
        GENERAL_CREATE: 'Stwórz',
        GENERAL_RENEW: 'Odnów',
        GENERAL_CHARACTERS_LEFT: 'Znaków zostało',
        GENERAL_CURRENCY: 'Waluta',
        GENERAL_EDIT: 'Edycja',
        GENERAL_SEND_XEM: 'Wyślij XEM',
        GENERAL_ACTIVE: 'Aktywny',
        GENERAL_INACTIVE: 'Nieaktywny',
        GENERAL_ACTIVATING: 'Aktywowanie',
        GENERAL_DEACTIVATING: 'Dezaktywacja',
        GENERAL_REMOTE: 'Zdalny',
        GENERAL_WARNING: 'Warning',
        GENERAL_SCORE: 'Score',
        GENERAL_LENGTH: 'Length',
        GENERAL_GO_BACK: 'Go back',
        GENERAL_NEXT: 'Next',
        GENERAL_START: 'Start',
        GENERAL_ALIAS: 'Alias',
        GENERAL_CONTACTS: 'Contacts',
        GENERAL_ENCRYPTED: 'Encrypted',
        GENERAL_UNENCRYPTED: 'Unencrypted',
        GENERAL_HEXADECIMAL: 'Hexadecimal',
        GENERAL_SELECT_ACCOUNT: 'Select account',
        GENERAL_INVOICE: 'Invoice',

        // HOME MODULE
        HOME_UNSUPPORTED_BROWSER: 'Przykro nam, ale nie możesz bezpiecznie użyć Nano Wallet\'a za pomocą tej przeglądarki...',
        HOME_RECOMMENDED_BROWSERS: 'Lista rekomendowanych przeglądarek:',
        HOME_FEATURE_STAND_BY: 'Place the cursor on a feature to show information.',
        HOME_FEATURE_1: 'Send and receive XEM easily and almost instantly, only 1 minute block time !',

        // TRANSFER TRANSACTION MODULE
        TRANSFER_TRANSACTION_TITLE: 'Wyślij / Odbierz',
        TRANSFER_TRANSACTION_NAME: 'Transakcja transferu',
        TRANSFER_TRANSACTION_MULTISIG_NAME: 'Transakcja transferu z multipodpisem',
        TRANSFER_TRANSACTION_INVOICE: 'Utwórz fakturę',
        TRANSFER_TRANSACTION_TAB_INVOICE: 'Faktura',
        TRANSFER_TRANSACTION_MOSAIC_TRANSFER: 'Transfer mozaiki',
        TRANSFER_TRANSACTION_ATTACH_MOSAIC: 'Załącz mozaikę',
        TRANSFER_TRANSACTION_ATTACH: 'Załącz',
        TRANSFER_TRANSACTION_MOSAICS_ATTACHED: 'Załączone mozaiki',
        TRANSFER_TRANSACTION_ENCRYPT_MESSAGE: 'Szyfruj wiadomość',
        TRANSFER_TRANSACTION_MESSAGE_TYPE: 'Message type',
        /*TRANSFER_TRANSACTION_HEX_MESSAGE: 'Hex message',
        TRANSFER_TRANSACTION_ENCRYPT_TOOLTIP: 'Odbiorca nie ma klucza publicznego widocznego w sieci.',
        TRANSFER_TRANSACTION_ENCRYPT_TOOLTIP_MULTISIG: 'Brak zaszyfrowanych wiadomości przez konta z multipodpisem.',*/

        // TRANSACTION LINES
        LINE_TX_DETAILS_FROM: 'Od',
        LINE_TX_DETAILS_FROM_MULTISIG: 'Od konta z multipodpisem',
        LINE_TX_DETAILS_WAITING: 'Transakcja czeka na włączenie do bloku',
        LINE_TX_DETAILS_NEED_SIG: 'Potrzeba podpisów sygnatariuszy',
        LINE_TX_DETAILS_NEED_SIG_2: 'Ta transakcja wymaga twojego podpisu',
        //LINE_TX_DETAILS_MESS_ENC: 'Zaszyfrowane',
        LINE_TX_DETAILS_MESS_DEC: 'Odszyfruj',
        LINE_TX_DETAILS_HASH: 'Hasz',
        LINE_TX_DETAILS_DEC_MESS: 'Odszyfruj wiadomość',
        LINE_TX_DETAILS_MOS_ATTACHED: 'Załączone mozaiki',
        LINE_TX_DETAILS_LEVY_TYPE_1: 'Stała',
        LINE_TX_DETAILS_LEVY_TYPE_2: 'Procentowa',
        LINE_TX_DETAILS_ISSUER: 'Emitent',
        LINE_TX_DETAILS_MULTISIG_FEE: 'Opłata Multipodpis',
        LINE_TX_DETAILS_MULTISIG_HASH: 'Hasz Multipodpis',
        LINE_TX_DETAILS_COSIGN: 'Podpisz transakcję',
        LINE_TX_DETAILS_SIGNATURES: 'Podpis(y)',
        LINE_TX_DETAILS_COSIGNATORY: 'Sygnatariusz',
        LINE_TX_DETAILS_TIMESTAMP: 'Znacznik czasu',
        LINE_TX_DETAILS_MOS_CREATE: 'Utwórz mozaikę',
        LINE_TX_DETAILS_MOS_EDIT: 'Edytuj mozaikę',
        LINE_TX_DETAILS_NS_CREATE: 'Utwórz namespace',
        LINE_TX_DETAILS_NS_NEW_SUB: 'Nowa sub-namespace',
        LINE_TX_DETAILS_NS_ROOT: 'Główna namespace',
        LINE_TX_DETAILS_RECIPIENT: 'Odbiorca',
        LINE_TX_DETAILS_MULTISIG_CREATE: 'Utwórz konto z multipodpisem',
        LINE_TX_DETAILS_MULTISIG_EDIT: 'Edytuj konto z multipodpisem',
        LINE_TX_DETAILS_MULTISIG_MOD: 'Modyfikacje',
        LINE_TX_DETAILS_MULTISIG_MIN_COSIG: 'Minimum sygnatariuszy',
        LINE_TX_DETAILS_MULTISIG_AFFECTED: 'Konto rozpatrywane',

        // IMPORTANCE MODULE
        IMPORTANCE_TRANSFER_NAME: 'Transakcja transferu ważności',
        IMPORTANCE_TRANSFER_MULTISIG_NAME: 'Transakcja transferu ważności z multipodpisem',
        IMPORTANCE_TRANSFER_MODE: 'Tryb',
        IMPORTANCE_TRANSFER_MODE_1: 'Aktywuj',
        IMPORTANCE_TRANSFER_MODE_2: 'Deaktywuj',
        IMPORTANCE_TRANSFER_TITLE: 'Zarządzaj delegowanym kontem',
        IMPORTANCE_TRANSFER_MULTISIGNATURE_TITLE: 'Zarządzaj delegowanym kontem rachunków z multipodpisem',
        IMPORTANCE_TRANSFER_CUSTOM_KEY: 'Użyj własnego klucza publicznego',
        IMPORTANCE_TRANSFER_MODE_SELECT: 'Wybierz tryb',
        IMPORTANCE_TRANSFER_REMOTE_ACCOUNT: 'Konto zdalne',
        IMPORTANCE_TRANSFER_REMOTE_PUBLIC: 'Zdalny klucz publiczny',
        IMPORTANCE_TRANSFER_INFO_PART_1: 'Gdy transakcja ważności zostanie uwzględniona w bloku, potrzebuje 6 godzin, by stać się aktywną. Po tym czasie będziesz mieć dostęp do wyboru serwera i poleceń start/stop.',
        IMPORTANCE_TRANSFER_INFO_PART_2: 'Upewnij się, że delegowane konto nie jest już aktywowane (jeżeli jest to konto importowane). Jeśli jest, możesz użyć starego delegowanego klucza publicznego, aby je dezaktywować (jeśli to konieczne).',
        IMPORTANCE_TRANSFER_INFO_PART_MULTISIG: 'W kontach z  multipodpisem tylko sygnatariusz, który zainicjował transakcję transferu znaczenia może rozpocząć i zakończyć zbieranie. Jeśli jakikolwiek inny sygnatariusz chce przejąć kontrolę nad zbieraniem bloków, musi tylko dezaktywować i ponownie aktywować zdalny status.',
        IMPORTANCE_TRANSFER_NO_BLOCKS_HARVESTED: 'Brak zebranych bloków',
        IMPORTANCE_TRANSFER_HARVESTING_PANEL: 'Panel zbierania bloków',
        IMPORTANCE_TRANSFER_REMOTE_ACTIVATING: 'Musisz zaczekać, aż zdalny status będzie aktywny, aby rozpocząć delegowane zbieranie.',
        IMPORTANCE_TRANSFER_REMOTE_INACTIVE: 'Musisz wysłać transakcję transferu znaczenia z lewego panelu, aby aktywować swoje zdalne konto',
        IMPORTANCE_TRANSFER_MULTISIG_NOT_INITIATOR: 'Nie jesteś sygnatariuszem, który zainicjował transfer przeniesienia znaczenia, dlatego nie możesz uruchomić lub zatrzymać delegowanego zbierania bloków. Proszę przeczytaj powyżej jak przejąć spowrotem kontrolę nad zbieraniem.',
        IMPORTANCE_TRANSFER_PRIVATE_KEY_PLACEHOLDER: 'Odsłoń delegowany klucz prywatny.',
        IMPORTANCE_TRANSFER_DELEGATED_KEYS: 'Klucze konta delegowanego.',
        IMPORTANCE_TRANSFER_HARVESTING_STATUS: 'Status zbierania',
        IMPORTANCE_TRANSFER_START_HARVESTING: 'Zacznij delegowane zbieranie.',
        IMPORTANCE_TRANSFER_STOP_HARVESTING: 'Zakończ delegowane zbieranie.',
        IMPORTANCE_TRANSFER_ACTIVATE_DEACTIVATE_REMOTE: 'Activate / Deactivate the delegated account',
        IMPORTANCE_TRANSFER_SHOW_DELEGATED_KEYS: 'Show delegated account keys',

        // CREATE MOSAIC MODULE
        MOSAIC_DEFINITION_TITLE: 'Utwórz mozaikę',
        MOSAIC_DEFINITION_NAME: 'Transakcja tworzenia mozaiki',
        MOSAIC_DEFINITION_MULTISIG_NAME: 'Transakcja tworzenia mozaiki z multipodpisem',
        MOSAIC_DEFINITION_QUANTITY: 'Ilość',
        MOSAIC_DEFINITION_DIV: 'Podzielność',
        MOSAIC_DEFINITION_TOTAL_SUPPLY: 'Cały zasób',
        MOSAIC_DEFINITION_FINAL_NAME: 'Pełna nazwa',
        MOSAIC_DEFINITION_DESCRPITION: 'Opis',
        MOSAIC_DEFINITION_INITIAL_SUPPLY: 'Początkowy zapas',
        MOSAIC_DEFINITION_MUTABLE_SUPPLY: 'Zmienna ilość',
        MOSAIC_DEFINITION_TRANSFERABLE: 'Zbywalna',
        MOSAIC_DEFINITION_PROPERTIES: 'Właściwości',
        MOSAIC_DEFINITION_MOSAIC_PROPERTIES: 'Właściwości mozaiki',
        MOSAIC_DEFINITION_REQUIRES_LEVY: 'Wymaga specjalnej opłaty',
        MOSAIC_DEFINITION_LEVY_LIMITATION: 'Ogranieczenie UI: obecnie tylko posiadane mozaiki mogą zostać użyte do specjalnej opłaty.',
        MOSAIC_DEFINITION_LEVY_SELECT_MOSAIC: 'Wybierz mozaikę do specjalnej opłaty',
        MOSAIC_DEFINITION_LEVY_ADDRESS: 'Adres specjalej opłaty',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE: 'Typ opłaty',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_1: 'Stała',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2: 'Procentowa',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_1_NOTE: 'Wybierając stała, otrzymamy stałą opłatę:',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE: 'Wybierają procentowa, otrzymamy opłatę liniową:',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE_2: 'Wysyłanie',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE_3: 'należny podatek',
        MOSAIC_DEFINITION_PARENT: 'Główna Namespace',
        MOSAIC_DEFINITION_INFORMATION_TITLE: 'Tworzenie mozaiki',
        MOSAIC_DEFINITION_INFORMATION: 'Więcej informacji na temat mozaik?',
        MOSAIC_DEFINITION_INFORMATION_1: 'Maksymalna długość nazwy mozaiki wynosi 32 znaki. Dozwolone znaki to:',
        MOSAIC_DEFINITION_INFORMATION_2: 'Pierwszy znak musi być literą z alfabetu.',
        MOSAIC_DEFINITION_INFORMATION_3: 'Opis nie może przekraczać długości 512 znaków. Nie ma ograniczeń co do  znaków użytych w opisie.',
        MOSAIC_DEFINITION_INFORMATION_4: 'Zachowanie mozaiki można dostosować poprzez zestaw właściwości:',
        MOSAIC_DEFINITION_INFORMATION_5: 'Podaż jest podana w całych jednostkach mozaiki, a nie w najmniejszych podjednostkach. Początkowa ilość musi być w zakresie od 0 do 9,000,000,000.',
        MOSAIC_DEFINITION_INFORMATION_6: 'Podzielność określa do jakiego miejsca dziesiętnego można podzielić mozaikę. Tak więc podzielność 3 oznacza, że mozaikę można podzielić na tysiąc części, a najmniejsza jednostka to 0,001 mozaiki. Podzielność musi zawierać się w zakresie od 0 do 6.',
        MOSAIC_DEFINITION_INFORMATION_7: 'Jeśli zaznaczone, pozwala na zmianę ilości mozaiki w późniejszym momencie, w przeciwnym razie podaż jest niezmienna.',
        MOSAIC_DEFINITION_INFORMATION_8: 'Pozwala na transfery mozaiki między kontami innymi niż twórcy. Jeśli właściwość \'zbywalna\' nie jest zaznaczona, tylko transakcje zawierające twórcę jako nadawcę albo odbiorcę są możliwe. Jeśli jest zaznaczona, mozaiki mogą być przenoszone pomiędzy dowolnymi kontami.',
        MOSAIC_DEFINITION_INFORMATION_9: 'Twórca może żądać specjalnej opłaty(podatku) pobieranej od nadawcy i wysłanej na wybrane przez siebie konto (wobec tego twórca może określić własne konto jako odbiorcę tej opłaty). Dane dla specjalnej opłaty są następujące:',
        MOSAIC_DEFINITION_INFORMATION_10: 'Mozaika, w której opłata musi być zapłacona. Każda istniejąca mozaika może być użyta.',
        MOSAIC_DEFINITION_INFORMATION_11: 'Odbiorca opłaty. Może to być dowolne konto.',
        MOSAIC_DEFINITION_INFORMATION_12: 'Wielkość opłaty. Interpretacja zależy od pola \'typ opłaty\', patrz wyżej.',
        MOSAIC_DEFINITION_INFORMATION_13: 'Dostępne są dwa rodzaje opłat: stała i procentowa.',
        MOSAIC_DEFINITION_INFORMATION_14: 'Opłata jest określona jako stała, a więc nie jest uzależniona od ilości mozaiki, która jest przekazywana.',
        MOSAIC_DEFINITION_INFORMATION_15: 'Opłata jest określona jako iloczn oprocentowania i transferowanej ilości. Wobc tego opłata wzrasta liniowo wraz z ilością transferowanej mozaiki.',
        MOSAIC_DEFINITION_INFORMATION_16: 'Wysyłanie mozaiki na blockchainie NEM wymaga opłaty. Dokładna wartość opłaty jest obliczana w zależności od ich łącznej liczby i ilości wysyłanej podczas transakcji. <b>Mozaiki małych firm</b> otrzymują tańszą, stałą stawkę 0.05 XEM za transfer mozaiki. To mozaiki z ilością mniejszą niż 10 000 i podzielnością 0.',
        MOSAIC_DEFINITION_INFORMATION_17: 'If you own 100% of the supply, you can overwrite all the mosaic properties by sending a creation transaction again with the same "namespace:mosaic" name.',

        // EDIT MOSAIC MODULE
        MOSAIC_SUPPLY_CHANGE_TITLE: 'Zmień ilość mozaiki',
        MOSAIC_SUPPLY_CHANGE_NAME: 'Transakcja zmiany ilości mozaiki',
        MOSAIC_SUPPLY_CHANGE_MULTISIG_NAME: 'Transakcja zmiany ilości mozaiki z multipodpisem',
        MOSAIC_SUPPLY_CHANGE_SELECT: 'Wybierz mozaikę',
        MOSAIC_SUPPLY_CHANGE_TYPE: 'Zmień typ',
        MOSAIC_SUPPLY_CHANGE_TYPE_1: 'Utwórz',
        MOSAIC_SUPPLY_CHANGE_TYPE_2: 'Usuń',
        MOSAIC_SUPPLY_CHANGE_SUPPLY: 'Ilość',
        MOSAIC_SUPPLY_CHANGE_CURRENT_SUPPLY: 'Aktualna ilość',
        MOSAIC_SUPPLY_CHANGE_AMOUNT: 'Zmień ilość',
        MOSAIC_SUPPLY_CHANGE_RES_SUPPLY: 'Uzyskana ilość',

        // NAMESPACE MODULE
        NAMESPACE_PROVISION_TITLE: 'Tworzenie namespace i sub-namespace',
        NAMESPACE_PROVISION_NAME: 'Transakcja tworzenia namespace',
        NAMESPACE_PROVISION_MULTISIG_NAME: 'Transakcja tworzenia namespace z multipodpisem',
        NAMESPACE_PROVISION_PARENT: 'Macierzysta Namespace (wyłączając poziom 3)',
        NAMESPACE_PROVISION_NEW_ROOT: 'Nowa Główna',
        NAMESPACE_PROVISION_PARENT: 'Macierzysta Namespace',
        NAMESPACE_PROVISION_NEW_ROOT: 'Nowa główna Namespace',
        NAMESPACE_PROVISION_NS: 'Namespace',
        NAMESPACE_PROVISION_NS_NAME: 'Nazwa Namespace',
        NAMESPACE_PROVISION_RESTRICTIONS: 'Ograniczenia Namespace',
        NAMESPACE_PROVISION_INFORMATION_1: 'Namespaces mają pewne ograniczenia w odniesieniu do akceptowanych znaków jak również długości nazw. Namespace główna może mieć długość do 16 znaków, podczas gdy sub-namespace może mieć długość 64 znaków. Poprawne znaki to:',
        NAMESPACE_PROVISION_INFORMATION_2: 'Nazwa Namespace musi zaczynać się od litery z alfabetu, wobec tego \'alice\' jest dozwoloną nazwą dla Głównej Namespace, podczas gdy \'1alice\' nie jest. Pewne ciągi znaków są zarezerwowane i nie można ich użyć jako nazwy Namespace. Wśród tych ciągów znaków są:',
        NAMESPACE_PROVISION_INFORMATION_3: '这个清单将可能会增加内容，请注意查看。 \'user.alice\' 和 \'alice.user\' 都不被NEM命名空间系统允许申请。命名空间最多可以被定义为三层，如\'gimre.metals.silver\' 有效，而 \'gimre.metals.silver.coin\' 无效。',

        // RENEW NAMESPACE MODULE
        RENEW_NS_TITLE: 'Odnów namespaces',
        RENEW_NS_NONE: 'Brak namespace do odnowienia',
        RENEW_NS_INFORMATION_TITLE: 'Odnawianie Namespace',
        RENEW_NS_INFORMATION_TITLE_1: 'Opłaty',
        RENEW_NS_INFORMATION_TITLE_2: 'Główna Namespace',
        RENEW_NS_INFORMATION_TITLE_3: 'Okres odnowienia',
        RENEW_NS_INFORMATION_1: 'Odnowienie namespace kosztuje tyle samo co rejestracja nowej namespace, 100XEM.',
        RENEW_NS_INFORMATION_2: 'Tylko główne namespace potrzebują odnawiania. Wszystkie sub-namespace zostaną odnowione automatycznie po odnowieniu głównej namespace.',
        RENEW_NS_INFORMATION_3: 'Kotnrakty namespace są kontraktami zapisanymi w łańcuchu ważnymi przez rok. Kontrakt może zostać odnowiony nie wcześniej niż miesiąc przed jego datą wygaśnięcia.',
        RENEW_NS_INFORMATION_4: 'Jeśli nie zostanie odnowiona na czas, wszystkie sub-namespaces i mozaiki utworzone pod nią zostaną utracone.',
        RENEW_NS_ALERT_PART_1: '<b>Uwaga !</b> Twój namespace:',
        RENEW_NS_ALERT_PART_2: 'wygaśnie w czasie krótszym niż miesiąc ! ',
        RENEW_NS_ALERT_PART_3: 'Sprawdź <b>stronę odnawiania</b> by dowiedzieć się więcej.',

        // ACCOUNT MODULE
        ACCOUNT_TITLE: 'Konto',
        ACCOUNT_ACCOUNT_INFORMATION: 'Informacje o koncie',
        ACCOUNT_IMPORTANCE_SCORE: 'Wskaźnik ważności POI',
        ACCOUNT_VESTED_BALANCE: 'Saldo usankcjonowane',
        ACCOUNT_HARVESTING: 'Zbieranie',
        ACCOUNT_REMOTE_STATUS: 'Status zdalny',
        ACCOUNT_DELEGATED_PUBLIC: 'Delegowany klucz publiczny',
        ACCOUNT_HARVESTED_BLOCKS: 'Zebrane bloki',
        ACCOUNT_START_STOP_HARVESTING: 'Rozpocznij / Zatrzymaj delegowane zbieranie',
        ACCOUNT_HARVESTING_NOTE: 'Jeśli zbierałeś bloki <b>używając Nano</b> i twoja lokalna pamięć została wykasowana, wybierz serwer, którego używałeś, aby przywrócić stan aplikacji. (Twoje zbieranie nie zatrzymało się).',
        ACCOUNT_HARVESTING_NODE_SELECT: 'Wybierz serwer do zbierania',
        ACCOUNT_HARVESTING_START: 'Rozpocznij delegowane zbieranie',
        ACCOUNT_HARVESTING_STOP: 'Zatrzymaj delegowane zbieranie',
        ACCOUNT_HARVESTING_NO_SLOTS: 'Brak wolnych miejsc na wybranym serwerze, proszę wybierz inny',
        ACCOUNT_HARVESTING_BELOW_THRESHOLD: 'Potrzebujesz 10\'000 usankcjonowanych XEM aby rozpocząć delegowane zbieranie',
        ACCOUNT_ACCOUNT_SELECT: 'Wybierz inne konto',
        ACCOUNT_ACCOUNT_SELECT_LABEL: 'Użyj innego konta',
        ACCOUNT_WALLET_KEYS: 'Portfel i klucze',
        ACCOUNT_ADD_NEW_ACCOUNT: 'Dodaj nowe konto',
        ACCOUNT_ADD_NEW_ACCOUNT_BTN: 'Dodaj nowe konto do portfela',
        ACCOUNT_PRIVATE_KEY_NOTE: 'Klucz prywatny posiada całkowitą władzę nad Twoim kontem. Jest priorytetem, aby upewnić się, że jest bezpiecznie przechowywany <b><u>offline</u></b>: hasło zaszyfrowane w pliku .wlt , zapisane na kartce papieru, na obrazku lub pobierz <b><u>eksportowany QR portfela </u></b>.',
        ACCOUNT_PRIVATE_KEY_SHOW: 'Pokaż klucz prywatny',
        ACCOUNT_EXPORT_MOBILE: 'Eksportuj na komórkę',
        ACCOUNT_INFO_QR_BTN: 'Informacje o koncie QR',
        ACCOUNT_WALLET_QR_BTN: 'QR portfela',
        ACCOUNT_WALLET_QR_BTN_2: 'QR portfela (Android i IOS)',
        ACCOUNT_BACKUP_WALLET: 'Zrób kopię bezpieczeństwa portfela',
        ACCOUNT_BACKUP_WALLET_NOTE: 'Jest <b><u>bardzo ważne</u></b> aby mieć kopie bezpieczeństwa swoich portfeli aby nie stracić XEM',
        ACCOUNT_BACKUP_WALLET_DOWNLOAD: 'Pobierz portfel',
        ACCOUNT_INFO_QR_TITLE: 'Informacje o koncie QR',
        ACCOUNT_WALLET_QR_NOTE: 'Ten kod QR działa tylko z nadciągającą aplikacją mobilną NEMpay',
        ACCOUNT_WALLET_QR_ANDROID_IOS_TITLE: 'QR portfela dla aplikacji na Androida i IOS',
        ACCOUNT_ADD_NEW_ACCOUNT_WARNING: 'Wszystkie konta uzyskiwane są z klucza prywatnego przy użyciu BIP32, czyli tylko jeden klucz prywatny i Twoje hasło są potrzebne, aby pobrać wszystkie pozostałe konta. <br>Jest <b><u>wysoce zalecane</u></b> aby wykonać kopię bezpieczeństwa portfela po dodaniu nowych kont, aby nie dodawać ich ponownie kiedy lokalna pamięć zostanie wyczyszczona.',
        ACCOUNT_CUSTOM_NODE: 'Użyj własnego serwera',
        ACCOUNT_NODE_FROM_LIST: 'Użyj serwer z listy',
        ACCOUNT_DELEGATED_PRIVATE_KEY: 'Delegowany klucz publiczny',

        // PORTAL MODULE
        PORTAL_TITLE: 'Usługi',
        PORTAL_MULTISIG_TITLE: 'Konta z multipodpisem i Multi-User',
        PORTAL_MULTISIG_TEXT: 'Konta z multipodpisem to edytowalne kontrakty oparte na łańcuchu bloków, są najlepszym sposobem zabezpieczenia środków finansowych, umożliwiają wspólne rachunki i są podstawą DAO.',
        PORTAL_MULTISIG_BTN_1: 'Konwertuj na konto z multipodpisem',
        PORTAL_MULTISIG_BTN_2: 'Edytuj istniejący kontrakt',
        PORTAL_MULTISIG_BTN_3: 'Zatwierdź transakcję z multipodpisem',
        PORTAL_HARVESTING_TITLE: 'Delegowane Zbieranie',
        PORTAL_HARVESTING_TEXT: 'Delegowane zbieranie to cecha, która umożliwia "kopanie" nawet kiedy Twoje konto jest zamknięte.',
        PORTAL_CHANGELLY_TITLE: 'Changelly Szybka Giełda',
        PORTAL_CHANGELLY_TEXT: 'Użyj widgeta Changelly aby wymienić XEM po najlepszym kursie !',
        PORTAL_CHANGELLY_BTN: 'Kup XEM',
        PORTAL_NS_TITLE: 'Namespaces i Subdomeny',
        PORTAL_NS_TEXT: 'Namespaces to nazwy domen. Każda namespace jest unikalna i  uwierzytelnia mozaiki (aktywa) wyemitowane przez nią lub przez jej subdomeny.',
        PORTAL_NS_BTN: 'Utwórz namespace',
        PORTAL_MOSAIC_TITLE: 'Mozaiki',
        PORTAL_MOSAIC_TEXT: 'Mozaiki NEM to aktywa, które posiadają dodatkowe właściwości i funkcje. Aby móc stworzyć mozaikę, konto musi posiadać przynajmniej jedną Główną Namespace.',
        PORTAL_MOSAIC_BTN_1: 'Utwórz mozaikę',
        PORTAL_MOSAIC_BTN_2: 'Edytuj mozaikę',
        PORTAL_APOSTILLE_TITLE: 'Apostille',
        PORTAL_APOSTILLE_TEXT: 'Użyj usługi NEM Apostille, aby stworzyć notaryzacje oparte na blockchainie w celu datowania, śledzenia i  badania autentyczności plików.',
        PORTAL_APOSTILLE_BTN_1: 'Utwórz',
        PORTAL_APOSTILLE_BTN_2: 'Audytuj',
        PORTAL_ADDRESS_BOOK_TEXT: 'Przydziel etykiety do adresu\' by prosto zarządzać swoimi kontaktami.',
        PORTAL_ADDRESS_BOOK_BTN: 'Zarządzaj książką adresową',
        PORTAL_INVOICE_TEXT: 'Create an invoice to share via QR code',

        // ADDRESS BOOK MODULE
        ADDRESS_BOOK_TITLE: 'Książka adresowa',
        ADDRESS_BOOK_LIST: 'Kontakty',
        ADDRESS_BOOK_NAVIGATION: 'Nawigacja',
        ADDRESS_BOOK_NEW: 'Nowy kontakt',
        ADDRESS_BOOK_EDIT: 'Edytuj kontakt',
        ADDRESS_BOOK_REMOVE: 'Usuń kontakt',
        ADDRESS_BOOK_NEW_BTN: 'Dodaj',
        ADDRESS_BOOK_EDIT_BTN: 'Zapisz',
        ADDRESS_BOOK_REMOVE_BTN: 'Usuń',
        ADDRESS_BOOK_EXPORT_BTN: 'Eksportuj książkę adresową',
        ADDRESS_BOOK_IMPORT_BTN: 'Importuj książkę adresową',
        ADDRESS_BOOK_CONTACT_LABEL: 'Etykieta',
        ADDRESS_BOOK_ACCOUNT_ADDRESS: 'Adres konta',
        ADDRESS_BOOK_ACTIONS: 'Akcje',
        ADDRESS_BOOK_CONFIRM_DELETE: 'Potwierdź usunięcie pozycji w książce adresowej.',

        // EXPLORER MODULE NAV
        EXPLORER_NAV_HOME: 'Strona domowa',
        EXPLORER_NAV_NSM: 'Namespace i Mozaiki',
        EXPLORER_NAV_APOSTILLES: 'Apostille',

        // EXPLORER HOME MODULE
        EXPLORER_HOME_TITLE: 'Explorer - Strona domowa',
        EXPLORER_HOME_NS: 'Twoje Namespace',
        EXPLORER_HOME_MOSAICS: 'Twoje Mozaiki',
        EXPLORER_HOME_NS_MULTISIG: 'Namespace posiadane przez konta z multipodpisem',
        EXPLORER_HOME_MOSAICS_LEVY: 'Podatek mozaiki',

        // EXPLORER NAMESPACES AND MOSAICS
        EXPLORER_NS_MOS_TITLE: 'Explorer - Namespace i Mozaiki',
        EXPLORER_NS_MOS_SELECT_MOS: 'Wybierz mozaikę, aby zobaczyć szczegóły',
        EXPLORER_NS_MOS_SEARCH: 'Szukaj namespace',

        // EXPLORER APOSTILLES MODULE
        EXPLORER_APOSTILLES_TITLE: 'Explorer - Apostille',
        EXPLORER_APOSTILLES_YOURS: 'Twoje apostille',
        EXPLORER_APOSTILLES_PUBLIC: 'Publiczny sink',
        EXPLORER_APOSTILLES_NO_NTY: 'Plik nty nie załadowany, proszę tu kliknąć aby go importować.',

        // ACCOUNT EXPLORER
        ACCOUNTS_EXPLORER_TITLE: 'Explorer - Konta',
        ACCOUNTS_EXPLORER_SEARCH: 'Szukaj',

        // APOSTILLE HISTORY MODULE
        APOSTILLE_HISTORY_TITLE: 'Apostille historia',
        //APOSTILLE_HISTORY_BTN_MESSAGE: 'Aktualizuj / Wiadomość',
        APOSTILLE_HISTORY_BTN_TRANSFER: 'Transferuj / Podziel własność',
        APOSTILLE_HISTORY_BACKUP: 'Zabezpiecz dane notarialne',
        APOSTILLE_HISTORY_PURGE: 'Wyczyść dane notarialne',

        // CREATE APOSTILLE MODULE
        APOSTILLE_CREATE_TITLE: 'Utwórz apostille',
        APOSTILLE_CREATE_HELP: 'Więcej informacji o apostille?',
        APOSTILLE_TRANSACTION_NAME: 'Transakcja apostille',
        APOSTILLE_TRANSACTION_MULTISIG_NAME: 'Transakcja apostille z multipodpisem',
        APOSTILLE_KEEP_PRIVATE: 'Prywatne, transferowalne i aktualizowalne',
        APOSTILLE_USE_DEDICATED: 'Użyj konta dedykowanego ',
        APOSTILLE_FILES_TO_NOTARIZE: 'Pliki do notaryzowania',
        APOSTILLE_REJECTED: 'Odrzucony',
        APOSTILLE_FILE_HASH: 'Hasz pliku',
        APOSTILLE_PRIVATE: 'Prywatny',
        APOSTILLE_FILENAME: 'Nazwa pliku',
        APOSTILLE_NAME_TOO_LONG: 'Nazwa pliku jest zbyt długa, dozwolone maksimum 40 znaków.',
        APOSTILLE_MAX_NUMBER: 'Maksimum apostilli w partii to 25',
        APOSTILLE_INFORMATION_TITLE: 'Tworzenie Apostille',
        APOSTILLE_INFORMATION_1: 'Każdy przesłany plik jest automatycznie przetwarzany z użyciem opcji ustawionych na lewym panelu. Możesz dodać nowe pliki, zmienić parametry, a następnie dodać więcej plików z innymi ustawieniami. Możesz również przełączyć na zakładkę Multipodpis i dodać więcej plików.',
        APOSTILLE_INFORMATION_2: 'Opcja "<b>Prywatne, transferowalne i aktualizowalne</b>" oznacza, że hasze Twoich plików są podpisane za pomocą twojego klucza prywatnego i wysłane do dedykowanego hierarchicznie deterministycznego (HD) konta. Tym sposobem tylko ty wiesz jaka zawartość została oznakowana, chyba, że ujawnisz tą zawartość.',
        APOSTILLE_INFORMATION_3: 'Dedykowane konto HD może zostać przekonwertowane na kontrakt z multipodpisem tak, aby można je było przesyłać poprzez kontrakt 1-z-1 lub m-z-n. Może posiadać również dodatkowe informacje przesyłane do niego za pośrednictwem wiadomości z aktualizacjami oraz zmianami w oryginalnym dokumencie lub produkcie, który reprezentuje.',
        APOSTILLE_INFORMATION_4: 'Kiedy dwie lub więcej stron chce zatwierdzić transakcję na przykład wiążący kontrakt, konto dokonujące notaryzacji można umieścić w kontrakcie z multipodpisem n-z-n',
        APOSTILLE_INFORMATION_5: 'W przypadku kont w kontrakcie z multipodpisem, które wybrały opcję "<b>Prywatne, transferowalne i aktualizowalne</b>", do podpisania haszu i utworzenia dedykowanego konta HD użyty jest klucz prywatny inicjującego sygnatariusza, a nie konto, które zostało przekonwertowane na multipodpis.',
        APOSTILLE_INFORMATION_6: 'Konto HD jest kontem dedykowanym wygenerowanym z hasza pliku, który następnie jest podpisany przez twoj klucz prywatny. Hasz powstały w tym procesie stosuje się następnie do wytworzenia drugiego klucza prywatnego. To jest klucz prywatny oznaczonego w łańcuchu bloków pliku; pierwszy w technologii blockchain, dostępny tylko w technologii Apostille.',
        APOSTILLE_INFORMATION_7: 'Dedykowane konto HD pozwala na przechowywanie oryginalnego hasza pliku i jego aktualizacje na dedykowanym koncie. Jeśli <b>"Publiczny"</b> jest wybrany, transakcja idzie na adres pulicznego konta zbiorczego(domyślnie).',
        APOSTILLE_INFORMATION_8: 'Po wysłaniu transakcji uruchamiane jest pobieranie zarchiwizowanego pliku. Zawiera on Twoje podpisane pliki, Twój certyfikat Apostille dla tego pliku i nowy lub zaktualizowany plik .nty aby śledzić wszystkie pliki, które oznaczyłeś na łańcuchu bloków NEM.',
        APOSTILLE_NO_NTY: 'Plik nty nie załadowany, kliknij tutaj, aby go zaimportować lub automatycznie utworzony zostanie nowy plik.',
        APOSTILLE_IMPORT_FILES: 'Importuj pliki',
        APOSTILLE_CREATE_TEXT: 'Utwórz dokument tekstowy',
        APOSTILLE_ENTER_TEXT: 'Wpisz tekst do notaryzowania...',
        APOSTILLE_DOCUMENT_TITLE: 'Tytuł dokumentu',
        APOSTILLE_DROPBOX_MESSAGE: 'Proszę wprowadzić hasło i wymagany tag(i) przed wyborem plików.',
        APOSTILLE_DROPBOX_MESSAGE_2: 'Proszę wprowadzić swoje hasło przed wyborem plików',

        // AUDIT APOSTILLE MODULE
        APOSTILLE_AUDIT_TITLE: 'Weryfikuj apostille',
        APOSTILLE_AUDIT_CHOOSE_NODE: 'Wybierz serwer',
        APOSTILLE_AUDIT_CHOOSE_NODE_NOTE: 'Tylko nieliczne węzły mogą wyszukiwać w całej historii transakcji (opcja jest domyślnie wyłączona w NIS).', //
        APOSTILLE_AUDIT_WRONG_FORMAT: 'Plik nie jest w formacie apostille !',
        APOSTILLE_AUDIT_FAIL_NO_PUBLIC_KEY: 'Weryfikacja nieudana, właściciel nie ma klucza pulicznego !',
        APOSTILLE_AUDIT_SUCCESS: 'Plik zweryfikowany pomyślnie !',
        APOSTILLE_AUDIT_FAIL: 'Weryfikacja nieudana !',
        APOSTILLE_AUDIT_WAITING: 'Transfer Apostille może czekać na potwierdzenie !',
        APOSTILLE_AUDIT_NOT_FOUND: 'Transakcja nie znaleziona, upewnij się, że nie czeka na zatwierdzenie, w przeciwnym wypadku apostille jet nieważny',
        APOSTILLE_AUDIT_ERROR_UNCONFIRMED: 'Wystąpił błąd podczas pobierania niepotwierdzonych danych ale transakcja nie została znaleziona',
        APOSTILLE_AUDIT_ERROR_SIGNER: 'Wystąpił błąd podczas pobierania danych o podpisie',
        APOSTILLE_AUDIT_ERROR_SIGNATURE: 'Weryfikacja nie powiodła się, wystąpił błąd przy weryfikacji podpisu !',
        APOSTILLE_AUDIT_INFORMATION_1: 'Pliki do autoryzacji muszą być w <b>formacie apostille</b>',
        APOSTILLE_AUDIT_INFORMATION_2: 'Możesz je rozpoznać po nazwie pliku:',
        //APOSTILLE_AUDIT_NON_SIGNED: 'Niepodpisany przykład:',
        //APOSTILLE_AUDIT_SIGNED: 'Podpisany przykład:',
        APOSTILLE_AUDIT_FILES: 'Audytuj pliki',
        APOSTILLE_AUDIT_FORMAT_EXAMPLE: 'Apostille format example',
        APOSTILLE_AUDIT_REMOVE_RECORDS: 'Remove records locally',

        // APOSTILLE MESSAGE MODULE
        APOSTILLE_MESSAGE_TITLE: 'Wyślij wiadomość do konta notaryzującego.',
        APOSTILLE_MESSAGE_NS_BRAND: 'Use my namespace to brand message',
        APOSTILLE_MESSAGE_ADD_MOSAIC: 'Dodaj mozaikę',
        APOSTILLE_NTY_ACCOUNT: 'Konto notaryzujące',
        APOSTILLE_REQUEST_MESSAGE: 'Żądanie wiadomości',
        APOSTILLE_CREATE_MESSAGE_REQUEST: 'Stwórz żądanie wiadomości',

        // TRANSFER APOSTILLE OWNLERSHIP MODULE
        APOSTILLE_TRANSFER_TITLE: 'Transfer lub podział własności apostille\'a',

        // UPADTE APOSTILLE MODULE
        APOSTILLE_UPDATE_TITLE: 'Zaktualizuj apostille',

        // ERROR ALERTS
        ALERT_MISSING_FORM_DATA: 'Proszę wypełnić formularz !',
        ALERT_ERROR_WALLET_DOWNLOAD: 'Nie można pobrać portfela ponieważ nie istnieje !',
        ALERT_PASSWORDS_NOT_MATCHING: 'Podane hasła nie pasują do siebie !',
        ALERT_INVALID_KEY_FOR_ADDR: 'Klucz prywatny nie odpowiada podanemu adresowi !',
        ALERT_NO_WALLET_LOADED: 'Nie możesz otworzyć panelu głównego bez portfela',
        ALERT_WALLET_NAME_EXISTS: 'Portfel o tej samej nazwie jest już załadowany !',
        ALERT_INVALID_WALLET_FILE: 'Próbujesz załadować plik, który nie jest portfelem !',
        ALERT_NO_NODE_SET: 'Proszę podaj adres serwera !',
        ALERT_INVALID_CUSTOM_NODE: 'Twój adres serwera jest nieprawidłowy !',
        ALERT_INVALID_WEBSOCKET_PORT: 'Port websocket własnego serwera jest nieprawidłowy !',
        ALERT_MIJIN_DISABLED: 'Sieć Mijin jest wyłączona, proszę wybierz inną sieć !',
        ALERT_GET_NS_BY_ID_ERROR: 'Błąd przy pobieraniu informacji o namespace, powód: ',
        ALERT_GET_ACCOUNT_DATA_ERROR: 'Błąd przy pobieraniu informacji o koncie, powód: ',
        ALERT_ERROR_OCCURRED: 'Wystąpił błąd ! ',
        ALERT_INVALID_ADDR_FOR_NETWORK: ' nie odpowiada sieci ',
        ALERT_INVALID_PASSWORD: 'Podane hasło nie jest prawidłowe !',
        ALERT_COSIG_ALREADY_IN_LIST: 'Sygnatariusz jest już obecny na liście modyfikacji !',
        ALERT_COSIGNATORY_HAS_NO_PUBLIC: 'Sygnatariusz musi wykonać przynajmniej jedną transakcję aby otrzymać klucz publiczny !',
        ALERT_MULTISIG_HAS_NO_PUBLIC: 'Konto z multipodpisem musi wykonać przynajmniej jedną transakcję aby otrzymać klucz publiczny !',
        ALERT_COSIG_CANNOT_BE_MULTISIG: 'Konto wybrane do przekształenia jest sygnatariuszem innego konta z multipodpisem. Wobec tego nie może być przekształcone',
        ALERT_NO_NS_OWNED: 'Konto nie posiada żadnej namespace, proszę utwórz jedną lub zmień konto',
        ALERT_UNLOCKED_INFO_ERROR: 'Wystąpił błąd przy pobieraniu informacji o odblokowaniu',
        ALERT_LOCK_ERROR: 'Błąd przy blokowaniu konta, powód: ',
        ALERT_UNLOCK_ERROR: 'Błąd przy odblokowywaniu konta, powód: ',
        ALERT_SUPERNODES_ERROR: 'Wystąpił błąd przy pobieraniu danych supernodes !',
        ALERT_INVALID_NTY_FILE: 'Dostarczony plik nie jest plikiem nty !',
        ALERT_CREATE_WALLET_FAILED: 'Nie udało się utworzyć portfela, powód: ',
        ALERT_DERIVATION_FROM_SEED_FAILED: 'Nie udało się uzyskać konta z seeda, powód: ',
        ALERT_BIP32_GENERATION_FAILED: 'Nie udało się wygenerować danych bip 32, powód: ',
        ALERT_NO_WALLET_DATA: 'Błąd, puste dane portfela !',
        ALERT_CANNOT_LOGIN_WITHOU_WALLET: 'Błąd, nie można zalogować bez portfela !',
        ALERT_NO_WALLET_TO_SET: 'Błąd, nie można ustawić -nic- jako bieżący portfel !',
        ALERT_INVALID_WALLET_INDEX: 'Błąd, wybrany indeks konta jest poza granicami !',
        ALERT_NO_CURRENT_WALLET: 'Błąd, nie można ustawić konta portfela jeśli nie jest bieżącym portfelem !',
        ALERT_ALREADY_MULTISIG: 'Wybrane konto jest już kontem z multipodpisem !',
        ALERT_INVALID_MODIFICATION_ARRAY: 'Konto z multipodpisem nie może być sygnatariuszem samego siebie, proszę sprawdź listę modyfikacji !',
        ALERT_GET_MARKET_INFO_ERROR: 'Wystąpił błąd podczas pobierania informacji rynkowych !',
        ALERT_MULTISIG_CANNOT_BE_COSIG: 'Konto z multipodpisem nie może być sygnatariuszem !',
        ALERT_PURGE_CANCELLED: 'Czyszczenie anulowane !',
        ALERT_MAINNET_DISABLED: 'Mainnet jest niedostępny, proszę wybierz inną sieć !',
        ALERT_EMPTY_DECODED_MSG: 'Wystąpił błąd, brak odszyfrowanej wiadomości !',
        ALERT_INVALID_NS_NAME: 'Nazwa namespace jest nieprawidłowa !',
        ALERT_INVALID_MOSAIC_NAME: 'Nazwa mozaiki jest nieprawidłowa !',
        ALERT_MOSAIC_DESCRIPTION: 'Opis mozaiki jest nieprawidłowy !',
        //ALERT_GET_INCOMING_TXES_ERROR: 'Wystąpił błąd podczas próby pobrania przychodzących transakcji, zmień serwer lub sprawdź połączenie i spróbuj ponownie',
        ALERT_GET_INCOMING_TXES_ERROR: 'Wystąpił błąd podczas próby pobrania transakcji przychodzących, powód: ',
        ALERT_GET_MOSAICS_DEFINITIONS_ERROR: 'Błąd przy pobieraniu definicji mozaiki, powód: ',
        ALERT_GET_SUB_NS_ERROR: 'Błąd przy pobieraniu definicji namespace, powód: ',
        ALERT_GET_MOSAICS_ERROR: 'Błąd przy pobieraniu mozaiki, powód: ',
        ALERT_GET_TRANSACTIONS_ERROR: 'Błąd przy pobieraniu transakcji, powód: ',
        ALERT_INVALID_ADDRESS_BOOK_FILE: 'Ten plik nie posiada formatu .adb !',
        ALERT_INVALID_ADDRESS: 'Podany adres nie jest poprawny !',
        ALERT_INVALID_AMOUNT: 'Kwota nie jest poprawna !',
        ALERT_INVALID_PRIVATE_KEY: 'Podany klucz prywatny nie jest poprawny !',
        ALERT_FILE_SIZE_ERROR: ' jest za duży, maksymalny dozwolony rozmiar pliku to 100 MB',
        ALERT_MESSAGE_DECODE_KEY_ERROR: 'Odkodowanie wiadomości nie powiodło się, konto nie posiada klucza publicznego widocznego w sieci',
        ALERT_FETCH_TIME_SYNC_ERROR: 'Wystąpił błąd przy pobieraniu czasu sieci !',
        ALERT_MULTISIG_MIN_SIGNATURE: 'Konto z multipodpisem wymaga przynajmniej jednego podpisu',
        ALERT_BTC_MARKET_ERROR: 'Błąd przy próbie pobrania ceny Bitcoina',
        ALERT_COSIG_REMOVAL_LIMIT: 'Tylko jeden sygnatariusz może być usunięty za każdym podejściem',
        ALERT_MULTISIG_MIN_SIGNATURE_INVALID: 'Nieprawidłowa liczba minimum wymaganych sygnatur',
        ALERT_INSUFFICIENT_BALANCE: 'Insufficient Balance for performing the operation',
        ALERT_VOTING_ERROR: 'Invalid Vote',
        ALERT_BRAIN_PASSWORD_TOO_SHORT: 'Brain wallet passphrase must be at least 40 characters!',
        ALERT_NODE_SEEMS_OFFLINE: 'Node seems offline, please select another one',
        ALERT_WEAK_PASSPHRASE: 'Security score of the passphrase must be at least 3',
        ALERT_BRAIN_WALLET_UPGRADE: 'Your brain wallet seems weak ! All brain wallets must use a passphrase with at least 40 characters.<br> We advise you to create a new wallet from the signup page and move your funds into it.<br> More info <a href="https://forum.nem.io/t/2791" target="_blank"><u>here</u></a>.',
        ALERT_RECIPIENT_PUBLIC_KEY: 'Recipient has no public key visible to the network',
        ALERT_ENCRYPT_MULTISIG: 'Can\'t send encrypted messages via multisig accounts',
        ALERT_EXCHANGE_NEEDS_MESSAGE: 'Recipient is an exchange wallet and thus it requires a message for your account to be correctly credited, please read carefully the exchange deposit instructions!',
        ALERT_ACCOUNT_ALREADY_IN_ADDRESS_BOOK: 'Contact already present in address book!',
        ALERT_MAX_MOSAIC_SUPPLY: 'Maximum mosaic supply is 9\'000\'000\'000',
        ALERT_GET_MOSAIC_SUPPLY_ERROR: 'Error at fetching mosaic supply, reason: ',
        ALERT_ENCRYPTED_MSG_OFFLINE: 'Encrypted messaging is not enabled in offline transactions',

        // SUCCESS ALERTS
        ALERT_CREATE_WALLET_SUCCESS: 'Portfel utworzony i załadowany !',
        ALERT_SUCCESS_PURGE: 'Pamięć podręczna wyczyszczona !',
        ALERT_SUCCESS_LOGOUT: 'Wylogowanie powiodło się !',
        ALERT_LOAD_WALLET_SUCCESS: 'Ładowanie portfela powiodło się !',
        ALERT_TRANSACTION_SUCCESS: 'Wysłanie transakcji powiodło się !',
        ALERT_GENERATE_ACCOUNT_SUCCESS: 'Generowanie konta powiodło się. Nie zapomnij pobrać zaktualizowanego portfela!',
        ALERT_UPGRADE_SUCCESS: 'Aktualizacja portfela powiodła się !',
        ALERT_SIGNATURE_SUCCESS: 'Podpisanie transakcji powiodło się !',
        ALERT_NTY_FILE_SUCCESS: 'Udało się załadować plik nty !',
        ALERT_INCOMING_TX_FROM: 'Transakcja przychodząca od ',
        ALERT_ADDRESS_BOOK_FILE_SUCCESS: 'Książka adresowa została zaimportowana !',
        ALERT_VOTING_SUCCESS: 'Vote Sent Successfully',
        ALERT_POLL_CREATION_SUCCESS: 'Poll Created Successfully',
        ALERT_COPY_SIGNED_TX_SUCCESS: 'Signed transaction copied!',

        // CONVERT ACCOUNT TO MULTISIG
        AGGREGATE_MODIFICATION_TITLE: 'Zamień konto na konto z multipodpisem',
        AGGREGATE_MODIFICATION_NAME: 'Transakcja łącznej modyfikacji',
        AGGREGATE_MODIFICATION_MULTISIG_NAME: 'Transakcja łącznej modyfikacji z multipodpisem',
        AGGREGATE_ACCOUNT_SELECT_TITLE: 'Konto do Zmiany',
        AGGREGATE_ACCOUNT_SELECT: 'Wybierz konto do zamiany',
        AGGREGATE_CUSTOM_ACCOUNT: 'Użyj własnego konta',
        AGGREGATE_ACCOUNT_TO_CONVERT_PRIVATE_TITLE: 'Adres klucza prywatnego',
        AGGREGATE_ACCOUNT_TO_CONVERT: 'Adres konta do zamiany',
        AGGREGATE_ACCOUNT_TO_CONVERT_PRIVATE: 'Klucz prywatny konta do zamiany',
        AGGREGATE_ADD_PLACEHOLDER: 'Konto sygnatariusza lub @alias',
        AGGREGATE_ADD_BTN_TITLE: 'Dodaj sygnatariusza',
        AGGREGATE_MIN_SIGNATURES: 'Minimum wymaganych sygnatur',
        AGGREGATE_MIN_SIGNATURES_PLACEHOLDER: 'Minimum wymaganych sygnatur do uprawomocnienia transakcji',
        AGGREGATE_MODIFICATION_LIST: 'Lista modyfikacji',
        AGGREGATE_COSIG_LIST: 'Książka Adresowa Sygnatariuszy',
        AGGREGATE_MODIFICATION_EDIT_TITLE: 'Edytuj kontrakt z multipodpisem',
        AGGREGATE_MODIFICATION_EDIT_SELECT_TITLE: 'Konto do edycji',
        AGGREGATE_MODIFICATION_EDIT_SELECT: 'Wybierz konto do edycji',
        AGGREGATE_ADD_REMOVE_TITLE: 'Dodaj/Usuń sygnatariusza',
        AGGREGATE_ADD_REMOVE_PLACEHOLDER: 'Konto sygnatariusza lub @alias',
        AGGREGATE_MODIFICATION_RELATIVE_CHANGE: 'Relatywna zmiana minimum sygnatur',
        AGGREGATE_MODIFICATION_RELATIVE_CHANGE_PLACEHOLDER: 'Liczba sygnatur do dodania (n) lub usunięcia (-n)',
        AGGREGATE_SELECTED_ACCOUNT_INFO: 'Informacja o wybranym koncie',
        AGGREGATE_MIN_SIGNATURES: 'Minimum sygnatur',
        AGGREGATE_SELECT_WALLET_ACCOUNT: 'Użyj portfela konta',
        AGGREGATE_ADD_COSIG: 'Add cosignatory',
        AGGREGATE_REMOVE_COSIG: 'Remove cosignatory',

        // SIGN MULTISIGNATURE TRANSACTIONS
        SIGN_MULTISIG_TRANSACTIONS_TITLE: 'Zatwierdź transakcję z multipodpisem',

        // LOGIN MODULE
        LOGIN_MEMBER_TITLE: 'Jesteś już członkiem NEM ?',
        LOGIN_UPGRADE_TITLE: 'Portfel wymaga aktualizacji',
        LOGIN_UPGRADE_MESSAGE: 'Wybrany portfel wymaga aktualizacji. Ta czynność spowoduje wygenerowanie pochodnego klucza publicznego i dodanie go do konta głównego. Pobieranie zaktualizowanego portfela zostanie automatycznie rozpoczęte. <b><u>Musisz</u></b> go pobrać !',
        LOGIN_UPGRADE_BUTTON: 'Aktualizuj portfel',
        LOGIN_IMPORT_BUTTON: 'Importuj Portfel',
        LOGIN_SELECT_WALLET_YOURS: 'Wybierz Portfel',
        LOGIN_SELECT_WALLET: 'Wybierz portfel w lokalnej pamięci',
        LOGIN_LOGIN_BUTTON: 'Zaloguj',
        LOGIN_NOTE: 'No wallet? Import one or <a href="#!/signup">signup</a>.',

        // SIGNUP MODULE
        SIGNUP_TITLE: 'Nowy w NEM ?',
        SIGNUP_SELECT_WALLET_TYPE: 'Select a type of wallet to create',
        SIGNUP_SELECT_WALLET_TYPE_STAND_BY: 'Place the cursor on a wallet type to show information.',
        SIGNUP_CREATE_WALLET_TITLE: 'Prosty portfel',
        SIGNUP_CREATE_WALLET_INFO: 'Simple wallets contains a primary private key that is generated randomly.',
        SIGNUP_PRIVATE_KEY_WALLET_TITLE: 'Portfel z klucza prywatnego',
        SIGNUP_PRIVATE_KEY_WALLET_INFO: 'Private key wallets contains a primary private key that you want to import.',
        SIGNUP_BRAIN_WALLET_TITLE: 'Brain wallet',
        SIGNUP_BRAIN_WALLET_INFO: 'Brain wallets contains a primary private key that is generated from a passphrase. This allow to retrieve the wallet only by knowing that exact passphrase.',
        SIGNUP_CREATE_WALLET_BUTTON: 'Utwórz prosty portfel',
        SIGNUP_PRIVATE_KEY_WALLET_BUTTON: 'Utwórz portfel z klucza prywatnego',
        SIGNUP_BRAIN_WALLET_BUTTON: 'Utwórz brain wallet',
        SIGNUP_CREATE_WALLET_WARNING: 'Proszę, przeczytaj o <a href="https://www.w3.org/TR/2014/WD-WebCryptoAPI-20140325/#RandomSource-interface" rel="nofollow" target="_blank">niebezpieczeństwach</a> związanych z własnoręcznie generowanymi kluczami, nie jesteśmy odpowiedzialni za ewentualne straty, które mogłyby być spowodowane entropią generowania kluczy. Mimo, że szansa na to jest bardzo mała, zaleca się użycie klucza prywatnego generowanego przez klienta NEM.',
        SIGNUP_NETWORK_SELECT: 'Wybierz sieć',
        SIGNUP_NETWORK_MAINNET: 'Mainnet is the <b><u>real</u></b> NEM network. Addresses start with \'N\'.',
        SIGNUP_NETWORK_TESTNET: 'Testnet is the <b><u>test</u></b> network. Addresses start with \'T\'.',
        SIGNUP_NETWORK_MIJIN: 'Mijin is the private version of NEM. Addresses start with \'M\'.',
        SIGNUP_BRAIN_WALLET_WARNING: 'Proszę, przeczytaj o <a href="https://en.bitcoin.it/wiki/Brainwallet" rel="nofollow" target="_blank">niebezpieczeństwach</a> związanych z używaniem brain wallet. Brain wallet używa tylko zakodowanego wielokrotnie hasła, dlatego istotne jest, aby wybrać BEZPIECZNE hasło. <a href="https://xkcd.com/936/" rel="nofollow" target="_blank">XKCD #936</a>',
        SIGNUP_PRIVATE_KEY_WALLET_WARNING: 'Portfel z klucza prywatnego używa TYLKO wielokrotnie zakodowanego hasła, dlatego istotne jest, aby wybrać BEZPIECZNE hasło.',
        SIGNUP_CREATE_START_WARNING: 'Please, follow each step carefully!',
        SIGNUP_CREATE_START_CONNECTION_WARNING: 'It is recommended to disconnect from internet while creating your wallet and backing up your data.',
        SIGNUP_CREATE_READY_BTN: 'Ready',
        SIGNUP_CREATE_ENTER_NAME: 'Enter a wallet name',
        SIGNUP_CREATE_ENTER_PASSWORD: 'Enter a password',
        SIGNUP_CREATE_ENTER_PASSPHRASE: 'Enter a passphrase',
        SIGNUP_CREATE_CONFIRM_PASSWORD: 'Confirm above password',
        SIGNUP_CREATE_CONFIRM_PASSPHRASE: 'Confirm above passphrase',
        SIGNUP_CREATE_ENTER_PRIVATE_KEY: 'Enter a private key',
        SIGNUP_CREATE_ADDRESS_FROM_PK: 'Address corresponding to above key',
        SIGNUP_CREATE_WALLET_ADD_ENTROPY_INFO: 'We are now going to generate your primary private key. <b>Please click on start and move your cursor around to add more entropy.</b>',
        SIGNUP_COMMON_WALLET_WARNING_TITLE: 'Ostrzeżenie o bezpieczeństwie konta',
        SIGNUP_COMMON_WALLET_WARNING_1: 'Portfele są przechowywane <b><u>tymczasowo</u></b> W lokalnej pamięci przeglądarki! Przeglądarki mogą zostać skonfigurowane (np. przez wtyczki) do regularnego czyszczenia pamięci lokalnej. Może to prowadzić do bezpowrotnej utraty danych. W danym przypadku portfele zostaną stracone dlatego bardzo ważne jest posiadanie wszystkich informacji wymaganych do odtworzenia portfeli.',
        SIGNUP_COMMON_WALLET_WARNING_2: 'Po stworzeniu portfela powinno się pobrać plik. Ten <b><i>.wlt</i></b> plik służy jako kopia zapasowa i można zaimportować z niego portfel w razie gdy pamięć lokalna przeglądarki zostanie wyczyszczona.',
        SIGNUP_COMMON_WALLET_WARNING_3: 'Jeśli nie pobrałeś pliku <b><i>.wlt</i></b>, kliknij na przycisk poniżej by odsłonić dane portfela i stworzyć plik manualnie:',
        SIGNUP_COMMON_WALLET_WARNING_4: 'Nawet jeżeli posiadasz plik portfela jest <b><u>wymagane</u></b> stworzenie kopii zapasowej klucza prywatnego, kliknij na przysk poniżej by go odsłonić:',
        SIGNUP_COMMON_WALLET_WARNING_5: 'Na użytkowniku leży odpowiedzialność posiadania kopii klucza prywatnego przed zdeponowaniem środków na koncie.',
        SIGNUP_COMMON_WALLET_WARNING_6: 'Każdy portfel posiada <b><u>główny klucz prywatny</u></b> (Twój znajduje się powyżej), który służy do stworzenia zależnych kont podrzędnych (BIP32). Ta cecha wymaga użycia <b><u>tego samego hasła</u></b> lub wygeneruje ona inne konta podrzędne dla tego samego klucza prywatnego. Podczas tworzenia kopii zapasowej danych nie zapomnij <b><u>zanotować swojego hasła</u></b>.',
        SIGNUP_COMMON_WALLET_WARNING_BTN_1: 'Pokaż czysty plik portfela',
        SIGNUP_COMMON_WALLET_WARNING_BTN_1_INFO: 'By stworzyć plik portfela, utwórz pusty plik tekstowy i skopiuj do niego powyższy klucz base 64. Zapisz plik jako <b><i>Twoja_nazwa_porfela.wlt</i></b> by był możliwy do zaimportowania.',
        SIGNUP_COMMON_WALLET_WARNING_BTN_2: 'Pokaż klucz prywatny',
        SIGNUP_COMMON_WALLET_WARNING_BTN_2_INFO: 'By stworzyć kopię zapasową klucza prywatnego, zapisz go w pliku tekstowym, wydrukuj lub zapisz na kartce. Sugerowane jest przechowywanie klucza prywatnego offline.',
        SIGNUP_COMMON_WALLET_WARNING_FOOTER: 'Kliknięcie poniżej stanowi potwierdzenie przeczytania i zrozumienia powyższych ostrzeżeń.',
        SIGNUP_COMMON_WALLET_WARNING_CONFIRM_1: 'Posiadam plik portfela',
        SIGNUP_COMMON_WALLET_WARNING_CONFIRM_2: 'Posiadam klucz prywatny',
        SIGNUP_COMMON_WALLET_WARNING_CONFIRM_3: 'Zgadzam się',
        SIGNUP_COMMON_WALLET_WARNING_UNDERSTOOD: 'Understood',
        SIGNUP_COMMON_WALLET_WARNING_DOWNLOAD: 'Download wallet',
        SIGNUP_ESTIMATED_PASSPHRASE_STRENGTH: 'Estimated passphrase strength',
        SIGNUP_ESTIMATED_GUESS_TIMES: 'Estimated guess times',

        // FAQ MODULE
        FAQ_TITLE: 'Często zadawane pytania',
        FAQ_QUESTION_1: 'Jak działa Portfel Nano ?',
        FAQ_ANSWER_1: 'Portfel Nano jest zbudowany przy użyciu najnowszych bibliotek z ES6 i AngularJS. To aplikacja client-side , nidgy nie wysyła wrażliwych danych; wszystko dzieje się w przeglądarce od tworzenia kluczy prywatnych do podpisywania transakcji.',
        FAQ_QUESTION_2: 'Czy jest bezpłatny?',
        FAQ_ANSWER_2: 'Absolutnie wszystkie operacje wykonywane są po stronie klienta, tylko ty masz kontrolę nad swoimi monetami, bez osób trzecich, bez dodatkowych opłat.',
        FAQ_QUESTION_3: 'Dlaczego posiadam już jedną mozaikę ?',
        FAQ_ANSWER_3: 'Ponieważ XEM jest domyślną walutą blockchaina NEM, każdy użytkownik ma ją już zarejestrowaną w portfelu, nawet jeśli jej bilans wynosi 0. Nazwa jej Namespace to NEM a nazwa mozaiki to XEM.',
        FAQ_QUESTION_4: 'Plan działań ?',
        FAQ_ANSWER_4: 'Bieżący plan to zintegrowanie z portfelem Nano wszystkich funkcji klienta NEM i projektów finansowanych przez społeczność.',
        FAQ_QUESTION_5: 'Czy mogę otrzymać darmowe XEM ?',
        FAQ_ANSWER_5: 'Faucet NEM jest w tej chwili niedostępny, ale możesz odwiedzić forum NEM aby dowiedzieć się o dostępnych nagrodach za pomoc w testowaniu i programowaniu.',
        FAQ_QUESTION_6: 'Gdzie znaleźć więcej informacji na temat NEM ?',
        FAQ_ANSWER_6_FORUM: 'Oficjalne forum',
        FAQ_ANSWER_6_WEBSITE: 'Oficjalna strona',
        FAQ_ANSWER_6_BTT: 'Oficjalny wątek BitcoinTalk',
        FAQ_QUESTION_7: 'Nothing is shown on the dashboard',
        FAQ_ANSWER_7: 'Please be sure to check the node circle in the top navigation bar. <br> Red circle means that connection to the node failed. <br> Click on "Node" and select another one from the dropdown list or use a custom node. <br> <a href="https://supernodes.nem.io" target="_blank">Supernodes.nem.io</a> has a lot of nodes that you can use.</a>',
        FAQ_QUESTION_8: 'Cosignatories cannot see the transaction to sign',
        FAQ_ANSWER_8: 'In this case go to "Services", look for "Multisignature and Multi-User Accounts" and click on "Sign multisig transactions".',
        FAQ_QUESTION_9: 'What are the best security practices ?',
        FAQ_ANSWER_9: 'It is hightly recommended to always store private keys on paper.<br> You can print them and archive them somewhere safe. <br><br> Regarding wallet files you should always keep multiple copies on different cold locations, like usb sticks. <br> Passwords must always be unique and complex, for this reason, always write it down first. <br><br> When you want to check your wallet or realise operations:<br> - Plug the usb stick <br> - Import the wallet in Nano<br> - Unplug the usb stick.<br><br> A copy of your wallet is stored in the browser local storage for all the time you need.<br> Once you are done, logout and purge the wallets in local storage using the purge button on the right side of the footer.',
        FAQ_QUESTION_10: 'Where to find information about my account (address, etc) ?',
        FAQ_ANSWER_10: 'If you look at the top navigation bar, you will see an <b><i>"Account"</b></i> button between <b><i>"Node"</b></i> and <b><i>"Language"</b></i>. There you can find your address, public key, vested balance and other important data.',
        FAQ_QUESTION_11: 'I have deposited XEM to an exchange but nothing has been credited ?',
        FAQ_ANSWER_11_1: 'First you must check that the hash of your transaction is pointing to an existing transaction on the <a target="_blank" href="http://chain.nem.ninja">explorer</a> (please, note that the explorer is a few blocks behind).',
        FAQ_ANSWER_11_2: 'Most exchanges are asking for an identification message to credit your deposit. Make sure that you have followed carefully the exchange instructions and added a message that is NOT encrypted. ',
        FAQ_ANSWER_11_3: 'Even if you have added a message, it can happen that exchanges may not process your deposit, because of issues on their side.',
        FAQ_ANSWER_11_4: 'You must contact the exchange support, explain the situation and provide them the hash of the transaction.',
        FAQ_QUESTION_12: 'How to check if I am on a fork ?',
        FAQ_ANSWER_12_1: 'Click on <b><i>"Node"</b></i>, in the top navigation bar, to open the node panel.',
        FAQ_ANSWER_12_2: 'Look at the chain height and compare it to the height shown <a target="_blank" href="http://hugealice.nem.ninja:7890/chain/height">here</a>.',
        FAQ_ANSWER_12_3: 'If different of more than 5 blocks then you are probably on a fork.',
        FAQ_ANSWER_12_4: 'To fix, just choose another node from the dropdown in the node panel, it will restore your account at it\'s latest state on the real network.',

        // FORM RELATED
        FORM_PASSWORD_FIELD_PLACEHOLDER: 'Wpisz hasło portfela lub hasło wielowyrazowe',
        FORM_WALLET_NAME_FIELD_PLACEHOLDER: 'Nazwa portfela',
        FORM_SIGNUP_PASSWORD_FIELD_PLACEHOLDER: 'Hasło',
        FORM_PASSWORD: 'Hasło',
        FORM_PASSWORD_CONFIRM: 'Potwierdź Password',
        FORM_PASSPHRASE_CONFIRM: 'Potwierdź Hasło wielowyrazowe',
        FORM_CONFIRM_PASSWORD_FIELD_PLACEHOLDER: 'Potwierdź hasło',
        FORM_PASSPHRASE_FIELD_PLACEHOLDER: 'Hasło wielowyrazowe',
        FORM_CONFIRM_PASSPHRASE_FIELD_PLACEHOLDER: 'Potwierdź hasło wielowyrazowe',
        FORM_ADDRESS_FIELD_PLACEHOLDER: 'Adres konta',
        FORM_PRIVATE_KEY_FIELD_PLACEHOLDER: 'Klucz prywatny',
        FORM_SIDE_BTN_BALANCE: 'Saldo',
        FORM_SIDE_BTN_PAY_TO: 'Zapłać',
        FORM_SIDE_BTN_TX_FEE: 'Opłata transakcyjna',
        FORM_SIDE_BTN_RENTAL_FEE: 'Opłata dzierżawcza',
        FORM_SIDE_BTN_LEVY_FEE: 'Podatek',
        FORM_RECIPIENT_PLACEHOLDER: 'Adres odbiorcy lub @alias',
        FORM_INVOICE_RECIPIENT_PLACEHOLDER: 'Adres odbiorcy',
        FORM_SIDE_BTN_ALIAS_OF: 'Alias konta',
        FORM_MESSAGE_PLACEHOLDER: 'Wiadomość',
        FORM_MOSAIC_NAME_PLACEHOLDER: 'Nazwa mozaiki',
        FORM_ADDRESS_ALIAS_PLACEHOLDER: 'Adres konta lub @alias',
        FORM_BTN_GET_ALIAS: 'Get alias address',
        FORM_BTN_OPEN_ADB: 'Open address book',
        FORM_SELECT_NAMESPACE: 'Select a namespace',

        RENEW_NS_TITLE: 'Odnów namespace',
        RENEW_NS_NONE: 'Brak namespace do odnowienia',
        RENEW_NS_INFORMATION_1: 'Możesz odnowić namespace nie wcześniej niż miesiąc przed jego planowym wygaśnięciem.',
        RENEW_NS_INFORMATION_2: 'Jeśli nie zostanie odnowiona na czas, wszystkie sub-namespaces i mozaiki utworzone pod nią zostaną utracone.',
        RENEW_NS_ALERT_PART_1: '<b>OSTRZEŻENIE !</b> Namespace:',
        RENEW_NS_ALERT_PART_2: 'wygaśnie w czasie krótszym niż 1 miesiąc ! ',
        RENEW_NS_ALERT_PART_3: 'Sprawdź <b>stronę odnawiania</b> by dowiedzieć się więcej.',

        // VOTING MODULE
        PORTAL_VOTING_TITLE: 'Voting',
        PORTAL_VOTING_TEXT: 'Create and vote on polls',
        PORTAL_VOTING_BTN1: 'See Polls',
        PORTAL_VOTING_BTN2: 'Create Poll',
        FORM_TITLE_FIELD_PLACEHOLDER: 'Title',
        FORM_DESCRIPTION_FIELD_PLACEHOLDER: 'Write your description here',
        FORM_OPTION_FIELD_PLACEHOLDER: 'write option',
        FORM_WHITELIST_FIELD_PLACEHOLDER: 'account address',
        FORM_SELECT_MULTISIG: 'Select a multisignature account',
        FORM_SELECT_CONTACT: 'Select a contact',

        // TREZOR RELATED
        TREZOR_TITLE: 'TREZOR',
        TREZOR_TEXT: 'The TREZOR hardware wallet allows you to secure your XEM, mosaics and multisig accounts',
        TREZOR_BUTTON: 'Login with TREZOR',

        // LEDGER NANO RELATED
        LEDGER_NANO_TITLE: 'LEDGER NANO',
        LEDGER_NANO_TEXT: 'The LEDGER NANO hardware wallet allows you to secure your XEM, mosaics and multisig accounts',
        LEDGER_NANO_BUTTON: 'Login with LEDGER NANO',
        LEDGER_NANO_NO_DEVICE: 'Ledger device not found',
        LEDGER_NANO_CHECK_DEVICE: 'Please check your Ledger device!',
        LEDGER_NANO_NOT_USING_NEM_APP: 'You are not using NEM app on your Ledger device',
        LEDGER_NANO_NOT_USING_XYM_APP: 'You are not using Symbol app on your Ledger device',
        LEDGER_NANO_NOT_SUPPORTED_APP: 'Please check if you have an up-to-date NEM application open on your Ledger device',
        LEDGER_NANO_CONNECTED_OTHER_APP: 'Another app is already connected to your Ledger device. Please close it then try again',
        LEDGER_NANO_NOT_OPENED_NEM_APP: 'Please open NEM app on your Ledger device',
        LEDGER_NANO_NOT_OPENED_XYM_APP: 'Please open Symbol app on your Ledger device',
        LEDGER_NANO_DEVICE_LOCKED: 'Please unlock your Ledger device',
        LEDGER_NANO_USER_REJECT_LOGIN: 'Login cancelled by user',
        LEDGER_NANO_USER_REJECT_REQUEST: 'Request cancelled by user',
        LEDGER_NANO_FOLLOW_INSTRUCTION: 'Follow instructions on your Ledger device',
        LEDGER_NANO_TRANSACTION_TOO_BIG: 'The transaction is too big to sign on your Ledger device',
        LEDGER_NANO_TRANSACTION_USER_CANCEL: 'Signing cancelled by user',
        LEDGER_NANO_TRANSACTION_FAILED: 'Failed to sign transaction, reason: ',
        LEDGER_NANO_OPTIN_INFO_1: 'You can use Symbol Ledger app to get account for Symbol Opt-in.',
        LEDGER_NANO_OPTIN_INFO_2: 'Please open Symbol Ledger app on your device and click on Import Symbol account.',
        LEDGER_NANO_IMPORT_SYMBOL: 'Import Symbol account',

        // CREATE OFFLINE TRANSACTION MODULE
        OFFLINE_TX_TITLE: 'Prepare an offline transaction',
        OFFLINE_TX_NO_WALLET: 'Please import a wallet from login module to see the form.',
        OFFLINE_TX_INFO_1: 'Make sure to be disconnected of internet when importing your wallet and creating the transaction!',
        OFFLINE_TX_INFO_2: 'Only simple transactions can be created because a connection is needed to fetch mosaics and multisig information from NEM nodes.',
        OFFLINE_TX_INFO_3: 'After clicking the "create" button in the left panel, you will find the signed transaction below.',
        OFFLINE_TX_INFO_4: 'A signed transaction is immutable and will be effective only if released to the network before the default deadline of 24 hours.',
        OFFLINE_TX_SIGNED: 'Signed transaction',
        OFFLINE_TX_RELEASE: 'Open in release module',

        // RELEASE OFFLINE TRANSACTION MODULE
        RELEASE_OFFLINE_TX_TITLE: 'Release a transaction to the network',
        RELEASE_OFFLINE_TX_PARAMETERS: 'Transaction parameters',
        RELEASE_OFFLINE_TX_INFO_1: 'To release a transaction you must be connected to internet.',
        RELEASE_OFFLINE_TX_INFO_2: 'Make sure that you have selected the right network and a working node or it will be rejected.',
        RELEASE_OFFLINE_TX_INFO_3: 'It is not possible to send a signed transaction twice. One signed transaction will always generate the same hash and two transactions cannot have the same hash.',
        RELEASE_OFFLINE_TX_INFO_4: 'You can release a signed transaction from any computer safely.',

        // INVOICE MODULE
        CREATE_INVOICE_TITLE: 'Create an invoice',

        // CREATE SIGNED MESSAGE MODULE
        CREATE_SIGNED_MSG_TITLE: "Create a signed message",
        CREATE_SIGNED_MSG_NAME: 'Signed message',
        CREATE_SIGNED_MSG_SIGN: 'Sign message',

        // VERIFY SIGNED MESSAGE MODULE
        VERIFY_SIGNED_MSG_TITLE: "Verify a signed message",
        VERIFY_SIGNED_MSG_SIG_VALID: 'Signature is valid',
        VERIFY_SIGNED_MSG_SIG_NOT_VALID: 'Signature is <b>NOT</b> valid',
        VERIFY_SIGNED_MSG_NOT_VALID: 'Signed message is not valid!',

        // DNS MODULE
        DNS_SHORT_DESC: "Decentralized Domain Name System (DNS) service for namespace.nem domains",
        DNS_CONFIGURE: "Configure DNS",
        DNS_SEARCH_DNS: "Search DNS",
        DNS_GO_SEARCH: "GO!",
        DNS_GET_INFO: "Get info",
        DNS_SEARCH_HEADLINE: "Search DNS",
        DNS_SEARCH_HELP: "DNS help",
        DNS_SEARCH: "Search",
        DNS_SEARCH_HELP_INFO: "Type a namespace.nem to lookup associated DNS information or go directly to website. ",
        //DNS CONFIGURE
        DNS_SELECT_NAMESPACE:"select namespace",
        DNS_POINTER_ADDRESS:"Pointer address",
        DNS_IP_ADDRESS:"ip address",
        DNS_ORGA:"Organization",
        DNS_COUNTRY:"Country",
        DNS_ADDRESS:"Address",
        DNS_PHONE:"Phone",
        DNS_EMAIL:"Email",
        DNS_OTHERINFO:"Other info",
        DNS_JSONMSG:"Json message",
        DNS_CHAR_LEFT:"Characters Left",
        DNS_HELP1:"The owner of a NEM namespace can use the NEM DNS in a few easy steps. The DNS is built around the namespace platform in the NEM ecosystem and an associated pointer address (PA). The namespace owner needs to send a transaction to the namespace pointer address including a non-encrypted message in json format with information related to the namespace. The message can include relevant information such as IP address, ownership info, physical address, contact info and much more.",
        DNS_HELP2:"This is how you do it:",
        DNS_HELP3:"1. select namespace",
        DNS_HELP4:"2. write relevant or update DNS information",
        DNS_HELP5:"3. send transaction to pointer address",
        //DNS ALERTS
        ALERT_DNS_SUCCESS: "Information found",
        ALERT_DNS_NO_INFO_FOUND: "No DNS info found",

        // IMPORT WALLET QRCODE
        IMPORT_WALLET_QRCODE_TITLE: 'Import wallet QR code',
        IMPORT_WALLET_QRCODE_INFORMATION: 'Support wallet QR code: NEM wechat wallet, ios, android.',
        IMPORT_WALLET_QRCODE_LOAD: 'Load wallet QR code',
        IMPORT_WALLET_QRCODE_SCAN: 'Scan',
        IMPORT_WALLET_QRCODE_STOP_SCAN: 'Stop scan',

        //NEMonster
        NEMONSTER_SHORT_DESC: "Welcome to NEMonsters, a witty little collection game based on the NEM blockchain.",
        NEMONSTER_CATCH: "Catch",
        NEMONSTER_GET: "Get some monsters",
        NEMONSTER_DESC: "Welcome to NEMonsters, a witty little collection game based on the NEM blockchain. You can catch and collect over 110,000,000 different combinations of generated monsters; spanning from different colors, names and other spicy characteristics.  You catch a new monster by sending a fixed transaction; the monster is summoned when the transaction is confirmed. The characteristics of your new (evil) monster is based on the transaction hash – how cool is that. See if you can catch some of the monsters from the NEM foundation.",

        // CATAPULT OPT IN MODULE
        PORTAL_CATAPULTOPTIN_TITLE: 'Symbol Opt In',
        PORTAL_CATAPULTOPTIN_TEXT_LINK: 'here.',
        PORTAL_CATAPULTOPTIN_MULTISIG_TEXT: 'Your multi-signature opt-in request must be issued with cosigner accounts',
        PORTAL_CATAPULTOPTIN_BTN_2: 'Sign a Multisig Opt In Message',
        PORTAL_CATAPULTOPTIN_TREZOR_TEXT: 'Opt in with trezor is not implemented yet. If you want to Opt in, please move your funds to a normal account.',
        TITLE_CATAPULTOPTIN: 'Symbol Opt In',
        CATAPULTOPTIN_CREATE_HELP: 'Want to know more about opting in to Symbol?',
        CATAPULTOPTIN_TRANSACTION: 'Opt In Transaction',
        CATAPULTOPTIN_ACCOUNT_UNLOCK_PLACEHOLDER: 'Please provide the mnemonic passphrase for your Symbol Account that you opted in',
        CATAPULTOPTIN_ACCOUNT_STEP_1: 'Step 1: Please select an account to Opt In',
        CATAPULTOPTIN_ACCOUNT_STEP_1_NEW: 'Step 1: Please select an account to Opt In',
        CATAPULTOPTIN_ACCOUNT_STEP_2: 'Step 2: Review my Symbol account opt in information',
        CATAPULTOPTIN_ACCOUNT_MS_STEP_2: 'Step 2: Review multisig Symbol account information',
        CATAPULTOPTIN_ACCOUNT_STEP_3: 'Step 3: Review my namespaces to be opted in',
        CATAPULTOPTIN_ACCOUNT_STEP_4: 'Step 4: Review VRF keys in opt in',
        CATAPULTOPTIN_INCLUDE_VRF: 'Include VRF keys in opt in',
        CATAPULTOPTIN_VRF_KEYS: 'VRF keys',
        CATAPULTOPTIN_VRF_PUBLIC_KEY: 'VRF public key',
        CATAPULTOPTIN_ACCOUNT_MS_STEP_3: 'Step 3: Review multisig namespaces to be opted in',
        CATAPULTOPTIN_ACCOUNT_STEP_SIGN: 'Step 2: Sign Symbol Opt In',
        CATAPULTOPTIN_REVIEW_MULTISIG_RESULT: 'Review Multisig Symbol Opt In',
        CATAPULTOPTIN_REGISTER: 'Register Symbol Opt In',
        CATAPULTOPTIN_CREATE_ADDRESS: 'Create a new address on Symbol from mnemonic.',
        CATAPULTOPTIN_INCLUDE_NAMESPACE: 'Include my namespaces in the opt in',
        CATAPULTOPTIN_INCLUDE_MS_NAMESPACE: 'Include multisig account namespaces in the opt in',
        CATAPULTOPTIN_MULTISIG_CONTRACT_CONSIGNATURES: 'Multisig Contract Cosignatures',
        SIGN_MULTISIG_OPTIN_TRANSACTIONS_TITLE: 'Sign Multisignature Opt In Transactions',
        CATAPULTOPTIN_NAMESPACE_TO_DELETE: 'Opt Out of Namespace',
        CATAPULTOPTIN_NAMESPACE_REMOVE: 'Enter namespace to be removed',
        CATAPULTOPTIN_ENTER_PK: 'Enter a private key to generate Symbol account',
        CATAPULTOPTIN_ENTER_PASSWORD: 'Enter your password to generate Symbol account',
        CATAPULTOPTIN_REMOVE_NAMESPACE: 'Remove Namespace',
        CATAPULTOPTIN_OPT_IN_SUCCESS: 'Opt In completed successfully',
        CATAPULTOPTIN_OPT_IN_PENDING_SIGNATURES: 'Opt In pending cosignatories',
        CATAPULTOPTIN_TRANSFER_TRANSACTION_MULTISIG_NAME: 'Symbol Multisig Account Opt in Approval',
        CATAPULTOPTIN_NIS1: 'NIS1',
        CATAPULTOPTIN_OPTIN_ACCOUNT: 'Opt in account:',
        CATAPULTOPTIN_OPTIN_ACCOUNT_PK: 'Opt in account public key:',
        CATAPULTOPTIN_NAMESPACES_OPTIN: 'My opted in namespaces',
        CATAPULTOPTIN_CATAPULT: 'Symbol',
        CATAPULTOPTIN_OPTIN_ACCOUNT_ADDRESS: 'Opt in account address:',
        CATAPULTOPTIN_UNLOCK: 'Unlock Symbol Account',
        CATAPULTOPTIN_CONFIRM_OPTIN: 'Confirm Symbol Opt In',
        CATAPULT_OPT_IN_RESUME: 'Opt In Transaction Confirmation',
        CATAPULT_OPT_IN_RESUME_TEXT:'The following transaction will create a new Symbol account. To claim your funds, you need to back up your Mnemonic passphrase.',
        CATAPULT_OPT_IN_SUCCESS: 'Opt In Successful',
        CATAPULT_OPT_IN_BALANCE_SNAPSHOT: 'Balance to be included in Symbol',
        CATAPULT_OPT_IN_SUCCESS_SIGNING: 'Opt In signed successfully',
        CATAPULT_OPT_IN_UNDERSTAND: 'Considering the change of private key when used with Symbol, it is important that you understand that your account private key on Symbol will be different from your old private key. Please, confirm that you have made a copy of the new private key by entering ‘Yes, I understand’ in the field below.',
        CATAPULT_OPT_IN_CONFIRM_BACKUP: 'I have backed up my mnemonic passphrase for the opt in process and understand it is my responsibility to save and back it up.',
        CATAPULT_OPT_IN_UNDERSTAND_FUNDS: 'I understand that only the funds in my account on the snapshot block are the funds that will be included in my XYM account balance at Symbol launch. Any account balance changes after this opt transaction but before the snapshot will be reflected at Symbol launch.',
        GENERAL_MIN_SIGNATURES_REQUIRED: 'Minimum signatures required',
        SYMBOL_OPTIN_INITIATOR: 'Opt In initiator',
        CATAPULT_BACKUP_WALLET: 'Backup Symbol Wallet',
        CATAPULT_DOWNLOAD_WALLET: 'Download Encrypted Symbol Wallet',
        MNEMONIC: 'Mnemonic',
        CATAPULT_OPT_IN_LOADING: 'Fetching Opt In Status...',
        COSIGNER_NOT_OPTIN: 'Cosigner has not started the opt in process yet',
        SYMBOL_ADDRESS: 'Symbol Address',
        YOUR_SYMBOL_ADDRESS: 'Your Symbol Address',
        YOUR_SYMBOL_MNEMONIC: 'Your Symbol Mnemonic',
        SYMBOL_COSIGNERS: 'Symbol Cosigners',
        CATAPULTOPTIN_CONFIRM_SIGN: 'Sign Symbol Opt In',
        CATAPULTOPTIN_FIRST_DO_NORMAL: 'To do the Multisig Opt In you must first do the Normal Opt In',
        CATAPULTOPTIN_ENCRYPTED_WALLET_TEXT: 'Please create a new password to encrypt your Symbol wallet backup and then press the download button.',
        CATAPULTOPTIN_GENERATE_NEW_SYMBOL: 'Generate new Symbol Mnemonic',
        CATAPULTOPTIN_VRF_KEYS_DESCRIPTION: 'VRF keys are used for harvesting on symbol. If you own a node and want to start harvesting the first blocks, you should activate this option and save the keys to put them back in your symbol node configuration. If you don\'t select this option, you will also be able to generate new keys once mainnet is alive',
        OPTIN_FORM_PASSWORD_FIELD_PLACEHOLDER: 'Enter your regular NEM wallet password',
        OPTIN_NEW_PASSWORD: 'New Password',
        SYMBOL_PASSWORD_REQUIREMENT: "Password must be at least 8 characters",
        SYMBOL_WALLET_CREATING_TYPE_INFO: 'Please choose the way to create your Symbol account',
        SYMBOL_WALLET_CREATING_BY_ENTROPY_TYPE_INFO: 'Generate random account',
        SYMBOL_WALLET_CREATING_BY_LEDGER_IMPORT_TYPE_INFO: 'Import Symbol account from Ledger',
        SYMBOL_SIGNUP_CREATE_WALLET_ADD_ENTROPY_INFO_1: 'We are now going to generate your primary private key.',
        SYMBOL_SIGNUP_CREATE_WALLET_ADD_ENTROPY_INFO_2: 'Please click on start and move your cursor around to add more entropy.',
        OPTIN_WELCOME_TITLE: 'Welcome to Symbol Opt-in',
        OPTIN_INFO_1: 'The Symbol mainnet has not launched yet.',
        OPTIN_INFO_2: 'You can prepare by opting in your NEM NIS1 accounts with this module ',
        OPTIN_INFO_3: 'to migrate your balance and namespaces to the Symbol network.',
        OPTIN_LINK_INFO: 'Get all information about Opt-in process ',
        OPTIN_NAMESPACES_TITLE: 'Opt-in Namespaces',
        OPTIN_NAMESPACES_INFO:'Now you can Opt-in the Namespace(s) you own on NEM NIS1. This provides a placeholder for the same Namespace(s) on the Symbol blockchain.',
        OPTIN_NAMESPACES_LINK: 'Get all information about Namespace Opt-in ',
        OPTIN_NAMESPACES_SELECT: 'Select the Namespaces you want to Opt-in:',
        OPTIN_VRF_TITLE: 'Include VRF keys',
        OPTIN_VRF_INFO:'VRF keys allow your account to harvest block rewards. If you plan to hold over 10,000 XYM in your account after launch and would like to harvest on Symbol blockchain, you need to add VRF keys to the Opt-in process.',
        OPTIN_VRF_LINK: 'Get all information about VRF keys ',
        OPTIN_VRF_KEYS:'Add VRF Keys',
        OPTIN_VRF_PUBLIC: 'VRF Public Address',
        OPTIN_VRF_PRIVATE: 'VRF Private Key',
        OPTIN_TAC_TITLE:'Terms and Conditions',
        OPTIN_TAC_TEXT:'terms and conditions',
        OPTIN_TAC_INFO_1:'The Opt-in process is a feature launched by Symbol Chain Limited with the aim of helping NIS1 users migrate their balances to their new Symbol network. It is a process defined under certain parameters that all users who adhere to it have to comply with.',
        OPTIN_TAC_INFO_2:'Symbol Chain Limited will not be liable for any incidents outside of the terms and conditions specified below.',
        OPTIN_TAC_READ_ACCEPT: 'I have read and accept the ',
        OPTIN_CONFIRM_TITLE:'Confirm Symbol Opt-in',
        OPTIN_CONFIRM_INFO:'We are almost done! This will be the information that will be migrated to the new Symbol chain. Review it carefully and sign with your NEM key to finish your Opt-in.',
        OPTIN_CONFIRM_OPTIN:'Confirm Opt-in',
        HERE:'here',
        OPTIN_ENTER_PASSWORD: 'Enter your NEM NIS1 password to sign the Opt-in',
        OPTIN_LOADING: 'Fetching Opt In data...',
        OPTIN_FINISHED: 'Post launch Opt-in will open soon. Please check back for a new version after Symbol launch.',
        CREATE_SYMBOL_ACCOUNT: 'Create your Symbol account',
        OPTIN_SYMBOL_READY: 'Your Symbol account is ready',
        OPTIN_COPY_SUCCESS: 'Copied!',
        OPTIN_TYPE_SELECT: 'Select the way you opted in this wallet',
        CATAPULT_OPT_IN_ERROR_TOO_MUCH_COSIGNATORIES: 'This account has more than 8 cosignatories. Opt In protocol only allows multisig accounts with less than 9 cosignatories' ,

        PORTAL_CATAPULTOPTIN_TEXT:              'Użyj tego modułu, aby otrzymać XYM w sieci Symbol. Proszę, czytaj więcej',
        PORTAL_CATAPULTOPTIN_BTN_1:             'Wystąp o XYM używając Symbol opt-in',
        CATAPULTOPTIN_ACCOUNT_UNLOCK:           'Wprowadź Twój klucz publiczny do konta Symbol',
        CATAPULTOPTIN_REVIEW_NORMAL_RESULT:     'Zweryfikuj informacje opt-in dla Twojego konta Symbol',
        OPTIN_PP_TEXT:                          'polityka prywatności',
        FORM_SELECT_ACCOUNT:                    'Wybierz konto',
        POST_OPTIN_INFO_3:                      'tego modułu do zmigrowania Twojego salda do sieci Symbol.',
        POST_OPTIN_INFO_2:                      'Jeśli miałeś XEM w momencie bloku migrawki, to możesz wysłać prośbę o XYM ',
        POST_OPTIN_INFO_1:                      'Sieć główna Symbol została uruchomiona!',
        SELECT_ACCOUNT_POST_OPTIN:              'Wybierz konto dla którego chcesz przeprowadzić opt-In',
        POST_OPTIN_STATUS:                      'Status opt-in',
        POST_OPTIN_DETAILS:                     'Szczegóły opt-in',
        POST_OPTIN_AMOUNT:                      'Kwota o którą można wystąpić',
        POST_OPTIN_AMOUNT_CLAIMED:              'Kwota o którą wystąpiłeś',
        POST_OPTIN_START:                       'ROZPOCZNIJ OPT-IN',
        POST_OPTIN_DEST_MSIG:                   'Wprowadź Twój docelowy klucz publiczny konta w sieci Symbol. To konto musi być kontem z multipodpisem oraz musi mieć taką samą ilość sygnatariuszy jak Twoje aktualne konto z multipodpisem w sieci NIS1.',
        POST_OPTIN_DEST_MSIG_ADDRESS:           'Adres Symbol z multipodpisem',
        POST_OPTIN_DEST_ADDRESS:                'Docelowy adres Symbol',
        POST_OPTIN_DEST_MULTISIG_ADDRESS:       'Docelowy adres Symbol z multipodpisem',
        POST_OPTIN_COSIG_DEST_ADDRESS:          'Docelowy adres Symbol sygnatariusza',
        NIS1_ADDRESS:                           'Adres sygnatariusza',
        YOUR_NIS_ACCOUNT:                       'Twój adres NIS1',
        OPTIN_NOT_DONE:                         'Opt-in nie wykonany',
        OPTIN_STATUS_TITLE_1:                   'Opt-in nie wykonany',
        OPTIN_STATUS_TEXT_1:                    'Możesz rozpocząć wysłanie prośby o XYM',
        OPTIN_STATUS_TITLE_2:                   'Opt-In w oczekiwaniu',
        OPTIN_STATUS_TEXT_2:                    'Twoja prośba opt-in została pomyślnie utworzona.',
        OPTIN_STATUS_TITLE_3:                   'Prośba opt-in z multipodpisem nierozpoczęta.',
        OPTIN_STATUS_TEXT_3:                    'Możesz wysłać prośbę o XYM dla konta z multipodpisem.',
        OPTIN_STATUS_TITLE_4:                   'Prośba opt-in z multipodpisem w oczekiwaniu na podpisy.',
        OPTIN_STATUS_TEXT_4:                    'W oczekiwaniu na opt-In sygnatariuszy.',
        OPTIN_STATUS_TITLE_5:                   'Prośba opt-in z multipodpisem w oczekiwaniu.',
        OPTIN_STATUS_TEXT_5:                    'Twoja prośba opt-in została poprawnie utworzona.',
        OPTIN_STATUS_TITLE_6:                   'Opt-in zakończony',
        OPTIN_STATUS_TEXT_6:                    'Żądanie opt-in zostało zakończone pomyślnie. Powinieneś teraz otrzymać transakcje w sieci Symbol.',
        OPTIN_NOT_AVAILABLE:                    'Nie miałeś wystarczającej liczby XEM w momencie Snapshotu lub już otrzymałeś je podczas opt-in przed uruchomieniem sieci',
        OPTIN_PUBLICKEY_PLACEHOLDER:            'Klucz publiczny musi mieć długość 64 znaków w zapisie szestnastkowym',
        OPTIN_DONE:                             'Gotowe',
        OPTIN_ERROR_TITLE_0:                    'Ta prośba opt-in nie powiodła się ponieważ podpis nie był poprawny.',
        OPTIN_ERROR_TITLE_1:                    'Ta prośba opt-in nie powiodła się ponieważ konto docelowe nie jest poprawne',
        OPTIN_ERROR_TITLE_2:                    'Ta prośba opt-in nie powiodła się ponieważ jeden lub więcej sygnatariuszy nie było poprawnych.',
        OPTIN_SIGNED:                           'Podpisano',
    });

}

export default PolishProvider;

'''
'''--- src/app/modules/languages/ptbr.js ---
function PortugueseBRProvider($translateProvider) {
    'ngInject'

    $translateProvider.translations('ptbr', {

        // HEADER COMPONENT
        WALLET_NAME_1: 'NEM',
        WALLET_NAME_2: 'Wallet',
        APP_NAME_SUB: 'A interface de carteiras mais segura para sua conexão com a plataforma NEM',
        HEADER_LOGIN_BUTTON: 'Entrar',
        HEADER_SIGNUP_BUTTON: 'Criar carteira',
        HEADER_DASHBOARD: 'Painel',
        HEADER_WALLET: 'Carteira',
        HEADER_SERVICES: 'Serviços',
        HEADER_EXPLORER: 'Explorador',
        HEADER_NODE: 'Nodo',
        HEADER_ACCOUNT: 'Conta',
        HEADER_LANG_TITLE: 'Idioma',
        HEADER_LANG_SELECT: 'Selecione um idioma',
        HEADER_NODE_BLOCK_HEIGHT: 'Número do bloco',
        HEADER_NODE_CURRENT_NODE: 'Nodo atual',
        HEARDER_NODE_LIST: 'Lista de nodos',
        HEADER_NODE_SELECT: 'Selecione um nodo',
        HEADER_NODE_CUSTOM: 'Nodo personalizado',
        HEADER_NODE_CONNECT: 'Conectar',
        HEADER_NODE_CUSTOM_INFO: 'IP ou domínio do nodo',
        HEADER_NODE_CUSTOM_TOOLTIP: 'Preencha aqui o seu próprio nodo NIS',
        HEADER_PURGE: 'Limpar',
        HEADER_PURGE_MESSAGE: 'Por favor, confirme a limpeza de seu armazenamento local. Clicando em "Limpar" todas as carteiras no armazenamento local de seu navegador serão excluídas e não poderão ser recuperadas. Você confirma que fez o backup de todas as suas carteiras e que seus fundos estão seguros.',
        HEADER_OFFLINE_TX: 'Preparar uma transação offline',
        HEADER_RELEASE_TX: 'Comunicar uma transação à rede',

        // FOOTER COMPONENT
        FOOTER_POWERED_BY_1: 'Powered by',
        FOOTER_POWERED_BY_2: 'NEM technology.',
        FOOTER_VERSION: 'Versão',

        // DASHBOARD MODULE
        DASHBOARD_TITLE: 'Painel',
        DASHBOARD_UNCONFIRMED: 'Não confirmado',
        DASHBOARD_CONFIRMED: 'Confirmado',
        DASHBOARD_HARVEST_INCOME_TITLE: 'Receitas com coletas nos últimos 25 blocos',
        DASHBOARD_HARVEST_INCOME_NOTE: 'Apenas blocos com taxas acima de zero',
        DASHBOARD_HARVEST_INCOME_MESSAGE: 'Nenhuma taxa de transação encontrada nos últimos 25 blocos.',
        DASHBOARD_NEWS_TITLE: 'Últimas notícias',
        DASHBOARD_HARVESTED_BLOCKS_TITLE: 'Blocos coletados',
        DASHBOARD_HARVESTED_BLOCKS_TH: 'Taxas coletadas',
        DASHBOARD_MARKET_INFO_TITLE: 'Informações de mercado',
        DASHBOARD_MARKET_INFO_CAP: 'Capitalização de mercado',
        DASHBOARD_MARKET_INFO_PRICE: 'Preço',
        DASHBOARD_MARKET_INFO_VOLUME: 'Volume em 24h',
        DASHBOARD_MARKET_INFO_CHANGES: 'Variação % em (24h)',
        DASHBOARD_MARKET_INFO_CHANGES_1H: '1h',
        DASHBOARD_MARKET_INFO_CHANGES_24H: '24h',
        DASHBOARD_MARKET_INFO_CHANGES_7D: '7d',
        DASHBOARD_MARKET_INFO_NOTE: '<a href="http://coinmarketcap.com/" target="_blank">CoinMarketCap</a> dados atualizados a cada 5 minutos.',
        DASHBOARD_NOTICE_1: 'Bem vindo a Nano Wallet Beta!',
        DASHBOARD_NOTICE_2: 'Por favor <a href="https://github.com/NemProject/NanoWallet" target="_blank">reporte problemas aqui</a>.',
        DASHBOARD_NOTICE_3: 'O time da NEM sugere que você faça testes primeiramente na TestNet para familiarizar-se com a NanoWallet, antes de utilizar a rede principal MainNet. Um guia simples pode ser encontrado <a href="https://blog.nem.io/nanowallet-tutorial/" target="_blank">aqui</a>. Os usuários são responsáveis pela segurança de seus fundos e por manter um backup seguro de todas as suas chaves privadas. O time da NEM não é responsável por nenhuma perda de fundos pelo uso indevido deste aplicativo na rede principal (MainNet).',
        DASHBOARD_NOTICE_4: 'Sugerimos que escreva suas chaves privadas em um papel e as guarde em um lugar seguro. Você também pode importar suas contas em aplications para Android e iOS como backup.',
        DASHBOARD_NOTICE_5: 'Obrigado por sua participação!',

        // GENERAL
        GENERAL_BLOCK: 'Bloco',
        GENERAL_BLOCKS: 'Blocos',
        GENERAL_NO_RESULTS: 'Nada para exibir',
        GENERAL_ACCOUNT: 'Conta',
        GENERAL_ACCOUNTS: 'Contas',
        GENERAL_MULTISIG_ACCOUNT: 'Conta multiassinada',
        GENERAL_AMOUNT: 'Valor total',
        GENERAL_MESSAGE: 'Mensagem',
        GENERAL_DATE: 'Data',
        GENERAL_TAB_NORMAL: 'Normal',
        GENERAL_TAB_SEND: 'Enviar',
        GENERAL_TAB_MULTISIG: 'Multiassinatura',
        GENERAL_TOTAL: 'Total',
        GENERAL_REMOVE: 'Remover',
        GENERAL_MOSAIC: 'Mosaico',
        GENERAL_FEE: 'Taxa',
        GENERAL_LEVY: 'Imposto',
        GENERAL_LEVY_TYPES: 'Tipos de Imposto',
        GENERAL_LEVY_TYPES_NOTE: 'I - taxa constante; II - taxa com base percentual',
        GENERAL_LEVY_TYPE_1: 'Taxa constante',
        GENERAL_LEVY_TYPE_2: 'Taxa com base percentual',
        GENERAL_SEND: 'Enviar',
        GENERAL_TO: 'Para',
        GENERAL_HASH: 'Hash',
        GENERAL_HASH_FUNCTION: 'Função Hash',
        GENERAL_NAME: 'Nome',
        GENERAL_INFORMATION: 'Informação',
        GENERAL_ADDRESS: 'Endereço',
        GENERAL_PUBLIC_KEY: 'Chave pública',
        GENERAL_PRIVATE_KEY: 'Chave privada',
        GENERAL_CLEAR_ALL: 'Limpar todos',
        GENERAL_CLOSE: 'Fechar',
        GENERAL_COMING_SOON: 'Em breve',
        GENERAL_NONE: 'Nenhum',
        GENERAL_DROPBOX: 'Arreste e solte arquivos aqui ou clique para abrir o navegador de arquivos',
        GENERAL_NETWORK_FEE: 'Taxa da rede',
        GENERAL_YES: 'Sim',
        GENERAL_NO: 'Não',
        GENERAL_TAGS: 'Tags',
        GENERAL_SINK: 'Coletor',
        GENERAL_SINK_ADDRESS: 'Endereço coletor',
        GENERAL_STORAGE: 'Armazenamento',
        GENERAL_REASON: 'Razões',
        GENERAL_TRANSACTION_HASH: 'Hash da transação',
        GENERAL_TRANSACTION_ID: 'ID da transação',
        GENERAL_OWNER: 'Proprietário',
        GENERAL_RESULTS: 'Resultados',
        GENERAL_RESULT: 'Resultado',
        GENERAL_STATUS: 'Status',
        GENERAL_LOCATION: 'Localização',
        GENERAL_ACTION: 'Ação',
        GENERAL_ACTIONS: 'Ações',
        GENERAL_ADD: 'Adicionar',
        GENERAL_ADDED: 'Adicionado',
        GENERAL_REMOVED: 'Removido',
        GENERAL_COSIGNATORY: 'Cosignatário',
        GENERAL_COSIGNATORIES: 'Cosignatários',
        GENERAL_PROCESSING: 'Processando',
        GENERAL_ACCOUNT_LABEL: 'Nome da conta',
        GENERAL_OPTIONAL: '(opcional)',
        GENERAL_ERROR: 'Erro',
        GENERAL_EXAMPLE: 'Exemplo',
        GENERAL_PUBLIC: 'Público',
        GENERAL_NAMESPACES: 'Registro de nomes',
        GENERAL_NAMESPACE: 'Registro de nome',
        GENERAL_SUB_NAMESPACES: 'Registro de subnomes',
        GENERAL_SUB_NAMESPACE: 'Registro de subnome',
        GENERAL_MOSAICS: 'Mosaicos',
        GENERAL_VALUE: 'Valor',
        GENERAL_CONNECTION_ERROR: 'Houve um erro, talvez seu node esteja com problema ou sua conexão está offline.',
        GENERAL_HISTORY: 'Histórico',
        GENERAL_REVEAL: 'Revelação',
        GENERAL_QR: 'QR code',
        GENERAL_UPDATE:  'Atualização',
        GENERAL_UNKNOWN: 'Desconhecido',
        GENERAL_IMPORTANCE: 'Importância',
        GENERAL_TRANSACTIONS: 'Transações',
        GENERAL_REGISTER: 'Registrar',
        GENERAL_CREATE: 'Criar',
        GENERAL_RENEW: 'Renovar',
        GENERAL_CHARACTERS_LEFT: 'Caracteres restantes',
        GENERAL_CURRENCY: 'Mosaico/Moeda',
        GENERAL_EDIT: 'Editar',
        GENERAL_SEND_XEM: 'Enviar XEM',
        GENERAL_ACTIVE: 'Ativar',
        GENERAL_INACTIVE: 'Inativar',
        GENERAL_ACTIVATING: 'Ativando',
        GENERAL_DEACTIVATING: 'Desativando',
        GENERAL_REMOTE: 'Remoto',
        GENERAL_WARNING: 'Alerta',
        GENERAL_SCORE: 'Pontuação',
        GENERAL_LENGTH: 'Comprimento',
        GENERAL_GO_BACK: 'Voltar',
        GENERAL_NEXT: 'Próximo',
        GENERAL_START: 'Iniciar',
        GENERAL_ALIAS: 'Apelidos',
        GENERAL_CONTACTS: 'Contatos',
        GENERAL_ENCRYPTED: 'Criptografado',
        GENERAL_UNENCRYPTED: 'Sem criptografia',
        GENERAL_HEXADECIMAL: 'Hexadecimal',
        GENERAL_SELECT_ACCOUNT: 'Selecionar conta',
        GENERAL_INVOICE: 'Fatura',

        // HOME MODULE
        HOME_UNSUPPORTED_BROWSER: 'Sinto muito, mas você não pode usar a Nano Wallet de forma segura com este navegador...',
        HOME_RECOMMENDED_BROWSERS: 'Os navegadores recomendados são:',
        HOME_FEATURE_STAND_BY: 'Posicione o cursor sobre uma das funcionalidades para exibir suas informações.',
        HOME_FEATURE_1: 'Envie e receba XEM de forma fácil e quase instantaneamente com tempo de blocos de apenas 1 minuto!',

        // TRANSFER TRANSACTION MODULE
        TRANSFER_TRANSACTION_TITLE: 'Enviar uma transação',
        TRANSFER_TRANSACTION_NAME: 'Transação de transferência',
        TRANSFER_TRANSACTION_MULTISIG_NAME: 'Transação de transferência multiassinada',
        TRANSFER_TRANSACTION_INVOICE: 'Criar fatura',
        TRANSFER_TRANSACTION_TAB_INVOICE: 'Receber',
        TRANSFER_TRANSACTION_MOSAIC_TRANSFER: 'Transferência de mosaico',
        TRANSFER_TRANSACTION_ATTACH_MOSAIC: 'Anexar mosaico',
        TRANSFER_TRANSACTION_ATTACH: 'Anexar',
        TRANSFER_TRANSACTION_MOSAICS_ATTACHED: 'Mosaicos anexados',
        TRANSFER_TRANSACTION_ENCRYPT_MESSAGE: 'Encriptar mensagem',
        TRANSFER_TRANSACTION_MESSAGE_TYPE: 'Tipo de mensagem',

        // TRANSACTION LINES
        LINE_TX_DETAILS_FROM: 'De',
        LINE_TX_DETAILS_FROM_MULTISIG: 'De multiassinatura',
        LINE_TX_DETAILS_WAITING: 'Transação aguardando para ser incluída',
        LINE_TX_DETAILS_NEED_SIG: 'São necessárias as assinaturas dos cossignatários',
        LINE_TX_DETAILS_NEED_SIG_2: 'Sua assinatura é requerida',
        LINE_TX_DETAILS_MESS_DEC: 'Decodificar',
        LINE_TX_DETAILS_HASH: 'Hash',
        LINE_TX_DETAILS_DEC_MESS: 'Decodificar mensagem',
        LINE_TX_DETAILS_MOS_ATTACHED: 'Mosaicos anexados',
        LINE_TX_DETAILS_LEVY_TYPE_1: 'Constante',
        LINE_TX_DETAILS_LEVY_TYPE_2: 'Base percentual',
        LINE_TX_DETAILS_ISSUER: 'Emissor',
        LINE_TX_DETAILS_MULTISIG_FEE: 'Taxa de multiassinatura',
        LINE_TX_DETAILS_MULTISIG_HASH: 'Hash de multiassinatura',
        LINE_TX_DETAILS_COSIGN: 'Cossignatário da transação',
        LINE_TX_DETAILS_SIGNATURES: 'Assinatura(s)',
        LINE_TX_DETAILS_COSIGNATORY: 'Cossignatário',
        LINE_TX_DETAILS_TIMESTAMP: 'Timestamp',
        LINE_TX_DETAILS_MOS_CREATE: 'Criar mosaico',
        LINE_TX_DETAILS_MOS_EDIT: 'Editar mosaico',
        LINE_TX_DETAILS_NS_CREATE: 'Criar registro de nome',
        LINE_TX_DETAILS_NS_NEW_SUB: 'Novo registro de subnome',
        LINE_TX_DETAILS_NS_ROOT: 'Registro de nome raiz',
        LINE_TX_DETAILS_RECIPIENT: 'Destinatário',
        LINE_TX_DETAILS_MULTISIG_CREATE: 'Criar conta multiassinada',
        LINE_TX_DETAILS_MULTISIG_EDIT: 'Editar conta multiassinada',
        LINE_TX_DETAILS_MULTISIG_MOD: 'Modificações',
        LINE_TX_DETAILS_MULTISIG_MIN_COSIG: 'Mínimo de cossignatários',
        LINE_TX_DETAILS_MULTISIG_AFFECTED: 'Contas afetadas',

        // IMPORTANCE MODULE
        IMPORTANCE_TRANSFER_NAME: 'Transação de transferência de importância',
        IMPORTANCE_TRANSFER_MULTISIG_NAME: 'Transação de transferência de importância multiassinada',
        IMPORTANCE_TRANSFER_MODE: 'Modo',
        IMPORTANCE_TRANSFER_MODE_1: 'Ativar',
        IMPORTANCE_TRANSFER_MODE_2: 'Desativar',
        IMPORTANCE_TRANSFER_TITLE: 'Gerenciar contas delegadas',
        IMPORTANCE_TRANSFER_MULTISIGNATURE_TITLE: 'Gerenciar conta delegada de contas multiassinadas',
        IMPORTANCE_TRANSFER_CUSTOM_KEY: 'Usar uma chave pública personalizada',
        IMPORTANCE_TRANSFER_MODE_SELECT: 'Selecione um modo',
        IMPORTANCE_TRANSFER_REMOTE_ACCOUNT: 'Conta remota',
        IMPORTANCE_TRANSFER_REMOTE_PUBLIC: 'Chave pública remota',
        IMPORTANCE_TRANSFER_INFO_PART_1: 'Assim que uma transação de transferência de importância é incluída em um bloco, são necessárias 6 horas até que se torne ativa. Após a ativação, você terá acesso à seleção de nodos e aos comandos iniciar/parar colheita.',
        IMPORTANCE_TRANSFER_INFO_PART_2: 'Assegure-se de que você não tem uma conta delegada já ativada (se for uma conta importada). Nesse caso, se necessário, você pode usar a antiga chave pública delegada para desativar.',
        IMPORTANCE_TRANSFER_INFO_PART_MULTISIG: 'Para contas multiassinadas apenas o cossignatário que iniciou a transação de transferência de importância pode iniciar ou parar a colheita. Se algum outro cossignatário desejar retomar o controle sobre a colheita, ele apenas precisa desativar e reativar o estado remoto.',
        IMPORTANCE_TRANSFER_NO_BLOCKS_HARVESTED: 'Não há blocos colhidos',
        IMPORTANCE_TRANSFER_HARVESTING_PANEL: 'Painel de colheitas',
        IMPORTANCE_TRANSFER_REMOTE_ACTIVATING: 'Você deve esperar até que o estado remoto esteja ativo para iniciar a colheita delegada (6 horas).',
        IMPORTANCE_TRANSFER_REMOTE_INACTIVE: 'Você deve enviar uma transferência de importância, do painel à esquerda, para ativar a sua conta remota.',
        IMPORTANCE_TRANSFER_MULTISIG_NOT_INITIATOR: 'Você não é o cossignatário que iniciou a transferência de importância, portanto não é permitido que você visualize, inicie ou pare a colheita delegada diretamente. Por favor, entre em contato com o cossignatário que administra a conta remota. Você pode remover um administrador para controlar novamente a colheita desativando e reativando sua conta remota.',
        IMPORTANCE_TRANSFER_PRIVATE_KEY_PLACEHOLDER: 'Revelar chave privada da conta delegada',
        IMPORTANCE_TRANSFER_DELEGATED_KEYS: 'Chave da conta delegada',
        IMPORTANCE_TRANSFER_HARVESTING_STATUS: 'Estado da colheita',
        IMPORTANCE_TRANSFER_START_HARVESTING: 'Iniciar colheita delegada',
        IMPORTANCE_TRANSFER_STOP_HARVESTING: 'Parar colheita delegada',
        IMPORTANCE_TRANSFER_ACTIVATE_DEACTIVATE_REMOTE: 'Ativar / Desativar a conta delegada',
        IMPORTANCE_TRANSFER_SHOW_DELEGATED_KEYS: 'Exibir chaves das contas delegadas',

        // CREATE MOSAIC MODULE
        MOSAIC_DEFINITION_TITLE: 'Criar um mosaico',
        MOSAIC_DEFINITION_NAME: 'Transação de definição de mosaico',
        MOSAIC_DEFINITION_MULTISIG_NAME: 'Transação de definição de mosaico multiassinada',
        MOSAIC_DEFINITION_QUANTITY: 'Quantidade',
        MOSAIC_DEFINITION_DIV: 'Divisibilidade',
        MOSAIC_DEFINITION_TOTAL_SUPPLY: 'Suprimento total',
        MOSAIC_DEFINITION_FINAL_NAME: 'Nome completo',
        MOSAIC_DEFINITION_DESCRPITION: 'Descrição',
        MOSAIC_DEFINITION_INITIAL_SUPPLY: 'Suprimento inicial',
        MOSAIC_DEFINITION_MUTABLE_SUPPLY: 'Suprimento mutável',
        MOSAIC_DEFINITION_TRANSFERABLE: 'Transferível',
        MOSAIC_DEFINITION_PROPERTIES: 'Propriedades',
        MOSAIC_DEFINITION_MOSAIC_PROPERTIES: 'Propriedades do mosaico',
        MOSAIC_DEFINITION_REQUIRES_LEVY: 'Requer imposto',
        MOSAIC_DEFINITION_LEVY_LIMITATION: 'Limitação da interface: por enquanto, apenas mosaicos já criados podem ser usados como imposto.',
        MOSAIC_DEFINITION_LEVY_SELECT_MOSAIC: 'Selecione um mosaico para imposto',
        MOSAIC_DEFINITION_LEVY_ADDRESS: 'Endereço da conta destino de impostos',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE: 'Tipo de taxa',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_1: 'Absoluta',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2: 'Percentual',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_1_NOTE: 'Selecionando absoluta, resultará em um imposto constante de:',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE: 'Selecionando percentual, resultará em um imposto linear de:',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE_2: 'Enviando',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE_3: 'resultará no imposto de',
        MOSAIC_DEFINITION_PARENT: 'Registro de nome pai',
        MOSAIC_DEFINITION_INFORMATION_TITLE: 'Criando um Mosaico',
        MOSAIC_DEFINITION_INFORMATION: 'Deseja mais informações sobre mosaicos?',
        MOSAIC_DEFINITION_INFORMATION_1: 'O comprimento máximo para o nome de um mosaico é de 32 caracteres. Os caracteres permitidos são:',
        MOSAIC_DEFINITION_INFORMATION_2: 'O primeiro caractere deve ser uma letra do alfabeto ou um número.',
        MOSAIC_DEFINITION_INFORMATION_3: 'A descrição não deve exceder o comprimento de 512 caracteres. Não há limitações para os caracteres utilizados na descrição.',
        MOSAIC_DEFINITION_INFORMATION_4: 'O comportamento de um mosaico pode ser personalizado por um conjunto de propriedades:',
        MOSAIC_DEFINITION_INFORMATION_5: 'O suprimento é dado em unidades inteiras do mosaico, não nas suas menores sub-unidades em casas decimais. O suprimento inicial deve estar entre os limites de 0 (zero) e 9,000,000,000 (9 bilhões).',
        MOSAIC_DEFINITION_INFORMATION_6: 'A divisibilidade determina em até quantas casas decimais o mosaico pode ser subdividido. Assim, a divisibilidade de 3 significa que um mosaico pode ser dividido em sua menor parte composta por 0.001 mosaicos (mili mosaicos são a menor subunidade possível). A divisibilidade deve estar entre os limites de 0 (zero) e 6 (seis).',
        MOSAIC_DEFINITION_INFORMATION_7: 'Se habilitado, permite que o suprimento do mosaico seja alterado futuramente, caso o contrário o suprimento será imutável.',
        MOSAIC_DEFINITION_INFORMATION_8: 'Permite transferências do mosaico entre outras contas que não sejam a do seu criador. Se a propriedade \'transferível\' não está habilitada, apenas transferências que tenham o endereço do criador como remetente ou destinatário podem transferir mosaicos deste tipo. Se habilitado os mosaicos poderão ser transferidos livremente entre quaisquer contas.',
        MOSAIC_DEFINITION_INFORMATION_9: 'O criador pode exigir que uma taxa especial de imposto seja coletada do remetente e seja enviada para uma conta de sua escolha (assim o criador pode especificar sua própria conta como o recebedor da taxa). Os dados para configuração da taxa de imposto são os seguintes:',
        MOSAIC_DEFINITION_INFORMATION_10: 'O mosaico no qual a taxa deve ser paga. Qualquer mosaico já existente pode ser especificado.',
        MOSAIC_DEFINITION_INFORMATION_11: 'O endereço da conta de recebimento do imposto. Pode ser qualquer conta.',
        MOSAIC_DEFINITION_INFORMATION_12: 'A quantidade da taxa. A interpretação do cálculo depende do valor preenchido no campo \'tipo de taxa\', conforme acima.',
        MOSAIC_DEFINITION_INFORMATION_13: 'Há dois tipos de taxas possíveis, taxa absoluta e taxa percentual.',
        MOSAIC_DEFINITION_INFORMATION_14: 'A taxa é especificada com quantidade absoluta e assim não depende da quantidade que será transferida.',
        MOSAIC_DEFINITION_INFORMATION_15: 'A taxa é especificada como múltiplo percentual da quantidade que será transferida. A taxa é assim linearmente incrementada de acordo com a quantidade de mosaico transferida.',
        MOSAIC_DEFINITION_INFORMATION_16: 'Enviar mosaicos na cadeia de blocos da NEM requer uma taxa. A taxa exata é calculada dependendo do número total e da quantidade que está sendo enviada durante a transação. <b>Mosaicos para pequenos negócios</b> recebem um desconto de 0.05 XEM por mosaico por transferência. Estes são mosaicos com uma quantidade menor que 10,000 e uma divisibilidade de 0 (zero).',
        MOSAIC_DEFINITION_INFORMATION_17: 'Se você é dono de 100% do suprimento, você pode alterar todas as propriedades do mosaico, enviando uma nova transação de definição de mosaico com o mesmo nome "registrodenome:mosaico".',

        // EDIT MOSAIC MODULE
        MOSAIC_SUPPLY_CHANGE_TITLE: 'Alterar suprimento de mosaico',
        MOSAIC_SUPPLY_CHANGE_NAME: 'Transação de alteração de suprimento de mosaico',
        MOSAIC_SUPPLY_CHANGE_MULTISIG_NAME: 'Transação de alteração de suprimento de mosaico multiassinada',
        MOSAIC_SUPPLY_CHANGE_SELECT: 'Selecione um mosaico',
        MOSAIC_SUPPLY_CHANGE_TYPE: 'Alterar o tipo',
        MOSAIC_SUPPLY_CHANGE_TYPE_1: 'Criar',
        MOSAIC_SUPPLY_CHANGE_TYPE_2: 'Apagar',
        MOSAIC_SUPPLY_CHANGE_SUPPLY: 'Suprimento',
        MOSAIC_SUPPLY_CHANGE_CURRENT_SUPPLY: 'Suprimento atual',
        MOSAIC_SUPPLY_CHANGE_AMOUNT: 'Alterar quantidade',
        MOSAIC_SUPPLY_CHANGE_RES_SUPPLY: 'Suprimento resultante',

        // NAMESPACE MODULE
        NAMESPACE_PROVISION_TITLE: 'Criar registro de nome e subnome',
        NAMESPACE_PROVISION_NAME: 'Transação de registro de nome',
        NAMESPACE_PROVISION_MULTISIG_NAME: 'Transação de registro de nome multiassinada',
        NAMESPACE_PROVISION_PARENT: 'Registro de nome pai',
        NAMESPACE_PROVISION_NEW_ROOT: 'Novo registro de nome raiz',
        NAMESPACE_PROVISION_NS: 'Registro de nome',
        NAMESPACE_PROVISION_NS_NAME: 'Nome do registro',
        NAMESPACE_PROVISION_RESTRICTIONS: 'Restrições para registro de nome',
        NAMESPACE_PROVISION_INFORMATION_1: 'Registro de nomes possuem certas restrições em relação aos caracteres permitidos em sua composição, assim como no tamanho de suas partes. Um registro de nome raiz pode ter um comprimento de até 16 caracteres enquanto subnomes podem ter um comprimento de até 64 caracteres. Os caracteres válidos são:',
        NAMESPACE_PROVISION_INFORMATION_2: 'Uma parte só pode iniciar com uma letra do alfabeto ou um número, assim \'alice\' é uma parte permitida par um registro de nome raiz, mas \'_alice\' não é. Algumas palavras são reservadas e assim não são permitidas como registro de nome. Entre as partes de registro de nome desabilitadas estão:',
        NAMESPACE_PROVISION_INFORMATION_3: 'Esta lista não está finalizada e pode ser estendida no futuro. Assim \'user.alice\' ou \'alice.user\' não são permitidos no sistema de registro de nomes da NEM. O registro de nome pode ter até 3 partes, assim \'qm.metals.silver\' é válido enquanto \'qm.metals.silver.coin\' não é.',

        // RENEW NAMESPACE MODULE
        RENEW_NS_TITLE: 'Renovar registros de nome',
        RENEW_NS_NONE: 'Não há registros de nome para renovar',
        RENEW_NS_INFORMATION_TITLE: 'Renovação de Registros de Nomes',
        RENEW_NS_INFORMATION_TITLE_1: 'Taxas',
        RENEW_NS_INFORMATION_TITLE_2: 'Registros de Nome Raiz',
        RENEW_NS_INFORMATION_TITLE_3: 'Período de Renovação',
        RENEW_NS_INFORMATION_1: 'A renovação de um registro de nome tem o mesmo custo do registro de um novo nome, 100 XEM.',
        RENEW_NS_INFORMATION_2: 'Apenas registros de nome raiz precisam ser renovados. Todos os registros de subnomes serão renovados automaticamente na renovação do registro de nome raiz.',
        RENEW_NS_INFORMATION_3: 'Contratos de registro de nome são contratos de aluguel registrados na cadeia de blocos válidos por 1 ano. O contrato deve ser renovado um mês antes ou após a sua data de vencimento.',
        RENEW_NS_INFORMATION_4: 'Se não for renovado a tempo, todos os registros de subnome e mosaicos criados sob eles estarão perdidos.',
        RENEW_NS_ALERT_PART_1: '<b>Alerta!</b> O registro de nome:',
        RENEW_NS_ALERT_PART_2: 'vencerá em menos de um mês! ',
        RENEW_NS_ALERT_PART_3: 'Consulte a <b>página de renovação</b> para mais informações.',

        // ACCOUNT MODULE
        ACCOUNT_TITLE: 'Conta',
        ACCOUNT_ACCOUNT_INFORMATION: 'Informações de conta',
        ACCOUNT_IMPORTANCE_SCORE: 'Pontuação de importância',
        ACCOUNT_VESTED_BALANCE: 'Saldo coberto (vested)',
        ACCOUNT_HARVESTING: 'Colheita',
        ACCOUNT_REMOTE_STATUS: 'Estado Remoto',
        ACCOUNT_DELEGATED_PUBLIC: 'Chave pública delegada',
        ACCOUNT_HARVESTED_BLOCKS: 'Blocos coletados',
        ACCOUNT_START_STOP_HARVESTING: 'Iniciar / Parar colheita delegada',
        ACCOUNT_HARVESTING_NOTE: 'O nodo utilizado para colheita nesta conta está armazenado no <b>armazenamento local do seu navegador</b>. Se o armazenamento local de seu navegador for excluído o aplicativo não saberá qual nodo estava sendo utilizado, e então o <b>estado da colheita</b> será exibido como <b>inativo</b>. Neste caso, selecione o nodo que você estava utilizando, e isso irá restaurar o estado de colheita automaticamente. Se o estado não for restaurado, verifique se selecionou o nodo correto; caso contrário, significa que o nodo foi reiniciado e sua conta não está mais fazendo colheita.',
        ACCOUNT_HARVESTING_NODE_SELECT: 'Selecione um nodo para delegar a colheita',
        ACCOUNT_HARVESTING_START: 'Iniciar colheita delegada',
        ACCOUNT_HARVESTING_STOP: 'Parar colheita delegada',
        ACCOUNT_HARVESTING_NO_SLOTS: 'Não há espaços livres no nodo selecionado, por favor, escolha outro',
        ACCOUNT_HARVESTING_BELOW_THRESHOLD: 'Você precisa de 10,000 XEM cobertos (vested) para iniciar a colheita delegada',
        ACCOUNT_ACCOUNT_SELECT: 'Selecione outra conta',
        ACCOUNT_ACCOUNT_SELECT_LABEL: 'Selecionar Conta',
        ACCOUNT_WALLET_KEYS: 'Carteira & chaves',
        ACCOUNT_ADD_NEW_ACCOUNT: 'Adicionar nova conta',
        ACCOUNT_ADD_NEW_ACCOUNT_BTN: 'Adicionar nova conta na carteira',
        ACCOUNT_PRIVATE_KEY_NOTE: 'Sua chave privada detem o poder máximo sobre toda a sua conta. É uma prioridade garantir que ela está armazenada de forma segura, em algum lugar <b><u>offline</u></b>: encriptado com senha em um arquivo .wlt, escrito em um pedaço de papel, e em uma imagem, ou baixe o código QR em <b><u>Exportar carteira QR</u></b>.',
        ACCOUNT_PRIVATE_KEY_SHOW: 'Exibir chave privada',
        ACCOUNT_EXPORT_MOBILE: 'Exportar para dispositivos móveis (mobile)',
        ACCOUNT_INFO_QR_BTN: 'Compartilhar informações da conta QR',
        ACCOUNT_WALLET_QR_BTN: 'Carteira QR',
        ACCOUNT_WALLET_QR_BTN_2: 'Exportar carteira QR (Android e iOS)',
        ACCOUNT_BACKUP_WALLET: 'Backup carteira',
        ACCOUNT_BACKUP_WALLET_NOTE: 'É <b><u>muito importante</u></b> que você faça backups de suas carteiras para logar com elas ou suas XEM serão perdidas.',
        ACCOUNT_BACKUP_WALLET_DOWNLOAD: 'Baixar carteira',
        ACCOUNT_INFO_QR_TITLE: 'Informações da Conta QR',
        ACCOUNT_WALLET_QR_NOTE: 'Este QR só funciona no aplicativo NEMpay que será lançado',
        ACCOUNT_WALLET_QR_ANDROID_IOS_TITLE: 'Carteira QR para aplicativos Android & iOS',
        ACCOUNT_ADD_NEW_ACCOUNT_WARNING: 'Todas as contas são derivadas de sua chave privada primária e de sua senha, usando BIP32, então tanto sua chave primária como sua senha são necessárias para recuperar/recriar todas as suas contas secundárias. <br> Portanto é <b>altamente recomendável</b> que faça um backup de sua carteira, depois de adicionar novas contas, para não repetir a operação novamente se o armazenamento local for apagado.',
        ACCOUNT_CUSTOM_NODE: 'Usar um nodo personalizado',
        ACCOUNT_NODE_FROM_LIST: 'Usar um nodo da lista',
        ACCOUNT_DELEGATED_PRIVATE_KEY: 'Chave privada delegada',
        ACCOUNT_NO_PUBLIC_KEY: 'Você deve fazer uma transação para gerar uma chave pública automaticamente',
        ACCOUNT_SHOW_ON_TREZOR_BTN: 'Exibir na TREZOR',
        ACCOUNT_SHOW_ON_LEDGER_BTN: 'Exibir na LEDGER',

        // PORTAL MODULE
        PORTAL_TITLE: 'Serviços',
        PORTAL_MULTISIG_TITLE: 'Contas Multiassinatura ou Multiusuários',
        PORTAL_MULTISIG_TEXT: 'Contas multiassinadas são contratos editáveis registrados na cadeia de blocos, a forma mais poderosa de tornar seus fundos seguros, permitir contas conjuntas, e são a fundação das DAOs.',
        PORTAL_MULTISIG_BTN_1: 'Converter uma conta para multiassinatura',
        PORTAL_MULTISIG_BTN_2: 'Editar um contrato multiassinado já existente',
        PORTAL_MULTISIG_BTN_3: 'Assinar transações de multiassinatura',
        PORTAL_HARVESTING_TITLE: 'Colheita Delegada',
        PORTAL_HARVESTING_TEXT: 'Colheita Delegada é a funcionalidade que permite "minerar" mesmo quando a sua conta não estiver aberta no seu navegador.',
        PORTAL_EXCHANGE_TITLE: 'Corretoras Instantâneas',
        PORTAL_EXCHANGE_TEXT: 'Use os widgets da Changelly ou ShapeShift para comprar XEM nos melhores preços!',
        PORTAL_EXCHANGE_BTN: 'Comprar XEM',
        PORTAL_NS_TITLE: 'Registro de nomes & Subdomínios',
        PORTAL_NS_TEXT: 'Registros de nomes são nomes de domínios. Cada registro de nome é único e autentica mosaicos (ativos) emitidos neles ou em seus subdomínios.',
        PORTAL_NS_BTN: 'Criar registro de nome',
        PORTAL_MOSAIC_TITLE: 'Mosaicos',
        PORTAL_MOSAIC_TEXT: 'Mosaicos NEM são ativos que possuem propriedades especiais e outras funcionalidades. Para ser capaz de criar um mosaico, uma conta deve alugar pelo menos um registro de nome raiz.',
        PORTAL_MOSAIC_BTN_1: 'Criar mosaico',
        PORTAL_MOSAIC_BTN_2: 'Editar mosaico',
        PORTAL_APOSTILLE_TITLE: 'Apostille',
        PORTAL_APOSTILLE_TEXT: 'Use o NEM Apostille para criar um serviço de notarização baseado na cadeia de blocos para registrar, acompanhar e auditar autenticidade de arquivos.',
        PORTAL_APOSTILLE_BTN_1: 'Criar',
        PORTAL_APOSTILLE_BTN_2: 'Auditar',
        PORTAL_ADDRESS_BOOK_TEXT: 'Associe nomes de etiqueta aos endereços para gerenciar mais facilmente os seus contatos.',
        PORTAL_ADDRESS_BOOK_BTN: 'Gerenciar caderno de contatos',
        PORTAL_INVOICE_TEXT: 'Criar uma fatura para compartilhar através de QR code',

        // ADDRESS BOOK MODULE
        ADDRESS_BOOK_TITLE: 'Caderno de contatos',
        ADDRESS_BOOK_NAVIGATION: 'Navegação',
        ADDRESS_BOOK_NEW: 'Novo contato',
        ADDRESS_BOOK_EDIT: 'Editar contato',
        ADDRESS_BOOK_REMOVE: 'Remover contato',
        ADDRESS_BOOK_NEW_BTN: 'Adicionar',
        ADDRESS_BOOK_EDIT_BTN: 'Salvar',
        ADDRESS_BOOK_REMOVE_BTN: 'Remover',
        ADDRESS_BOOK_EXPORT_BTN: 'Exportar caderno de contatos',
        ADDRESS_BOOK_IMPORT_BTN: 'Importar caderno de contatos',
        ADDRESS_BOOK_CONTACT_LABEL: 'Etiqueta',
        ADDRESS_BOOK_ACCOUNT_ADDRESS: 'Endereço da conta',
        ADDRESS_BOOK_ACTIONS: 'Ações',
        ADDRESS_BOOK_CONFIRM_DELETE: 'Confirma apagar todos os endereços do caderno de contatos',

        // EXPLORER MODULE NAV
        EXPLORER_NAV_HOME: 'Home',
        EXPLORER_NAV_NSM: 'Registro de nomes & Mosaicos',
        EXPLORER_NAV_APOSTILLES: 'Apostilles',

        // EXPLORER HOME MODULE
        EXPLORER_HOME_TITLE: 'Explorador - Home',
        EXPLORER_HOME_NS: 'Seus Registros de Nomes',
        EXPLORER_HOME_MOSAICS: 'Seus Mosaicos',
        EXPLORER_HOME_NS_MULTISIG: 'Registros de Nomes possuídos em multiassinatura',
        EXPLORER_HOME_MOSAICS_LEVY: 'Mosaico de Imposto',

        // EXPLORER NAMESPACES AND MOSAICS
        EXPLORER_NS_MOS_TITLE: 'Explorador - Registro de nomes e Mosaicos',
        EXPLORER_NS_MOS_SELECT_MOS: 'Detalhes do Mosaico selecionado',
        EXPLORER_NS_MOS_SEARCH: 'Buscar registro de nomes',

        // EXPLORER APOSTILLES MODULE
        EXPLORER_APOSTILLES_TITLE: 'Explorador - Apostilles',
        EXPLORER_APOSTILLES_YOURS: 'Seus apostilles',
        EXPLORER_APOSTILLES_PUBLIC: 'Coletor público',
        EXPLORER_APOSTILLES_NO_NTY: 'Nenhum arquivo de notarização carregado, por favor, clique aqui para importar um.',

        // ACCOUNT EXPLORER
        ACCOUNTS_EXPLORER_TITLE: 'Explorador - Contas',
        ACCOUNTS_EXPLORER_SEARCH: 'Buscar',

        // APOSTILLE HISTORY MODULE
        APOSTILLE_HISTORY_TITLE: 'Histórico Apostille',
        APOSTILLE_HISTORY_BTN_TRANSFER: 'Transferência / Divisão de posse',
        APOSTILLE_HISTORY_BACKUP: 'Backup dos dados de notarização',
        APOSTILLE_HISTORY_PURGE: 'Excluir dados de notarização',

        // CREATE APOSTILLE MODULE
        APOSTILLE_CREATE_TITLE: 'Criar apostilles',
        APOSTILLE_CREATE_HELP: 'Deseja mais informações sobre Apostille?',
        APOSTILLE_TRANSACTION_NAME: 'Transação Apostille',
        APOSTILLE_TRANSACTION_MULTISIG_NAME: 'Transação Apostille Multiassinada',
        APOSTILLE_KEEP_PRIVATE: 'Privado, transferível e editável',
        APOSTILLE_USE_DEDICATED: 'Usar conta dedicada',
        APOSTILLE_FILES_TO_NOTARIZE: 'Arquivos para notarizar',
        APOSTILLE_REJECTED: 'Rejeitado',
        APOSTILLE_FILE_HASH: 'Hash do arquivo',
        APOSTILLE_PRIVATE: 'Privado',
        APOSTILLE_FILENAME: 'Nome do arquivo',
        APOSTILLE_NAME_TOO_LONG: 'Nome do arquivo é muito longo, 32 caracteres é o máximo permitido.',
        APOSTILLE_MAX_NUMBER: 'O máximo de apostilles por lote é 25',
        APOSTILLE_INFORMATION_TITLE: 'Criando um Apostille',
        APOSTILLE_INFORMATION_1: 'Cada arquivo enviado é processado automaticamente com as opções configuradas no painel à esquerda. Você pode adicionar novos arquivos, mudar parâmetros e adicionar mais arquivos com diferentes opções. Também funcionará se você alternar para multiassinatura e adicionar mais arquivos.',
        APOSTILLE_INFORMATION_2: '"As opções <b>Privado, transferível e atualizável</b>" significa que os hashs de seus arquivos serão assinados com a sua chave privada e serão enviados para uma conta dedicada de hierarquia determinística (HD). Desta forma, não será possível que ninguém além de você, conhecer qual conteúdo foi registrado a não ser que você compartilhe o seu conteúdo.',
        APOSTILLE_INFORMATION_3: 'A conta dedicada HD pode ser colocada sob um contrato multiassinatura de forma que poderá ser transferido para outros utilizando-se de contratos multiassinaturas com combinações de 1-de-1 ou m-de-n. Também poderá haver informações adicionais enviadas através de mensagens com atualizações ou acréscimos ao documento original ou ao produto representado.',
        APOSTILLE_INFORMATION_4: 'Quando duas ou mais partes querem ambas aprovar um registro na cadeia de blocos, ex: vinculação de contratos, a conta fazendo a notarização na cadeia de blocos pode ser colocada em um contrato multiassinatura de n-de-n.',
        APOSTILLE_INFORMATION_5: 'Para contas em um contrato de multiassinatura que selecionou "<b>Privado, transferível e atualizável</b>", a chave privada inicial do cossignatário será utilizada para assinar o hash e criar uma conta HD dedicada, e não a conta que foi multiassinada.',
        APOSTILLE_INFORMATION_6: 'A conta HD é uma conta dedicada gerada a partir de um hash do nome do arquivo que é assinado pela sua chave privada. Este hash resultante desse processo é então usado para formar uma segunda chave privada. Esta é a chave privada do arquivo com data e hora; uma inovação na tecnologia de cadeia de blocos encontrada apenas na Apostille.',
        APOSTILLE_INFORMATION_7: 'A conta HD dedicada permite armazenar o hash assinado do arquivo original e suas atualizações em uma conta dedicada. Se <b>"Público"</b> estiver selecionado, a transação vai para o endereço da conta coletora pública (padrão).',
        APOSTILLE_INFORMATION_8: 'Depois que as transações são enviadas, o download de um arquivo é acionado. Ele contém seus arquivos assinados, seu certificado Apostille para esse arquivo e o novo arquivo .nty, ou atualizado, para acompanhar todos os arquivos que você registrou na cadeia NEM.',
        APOSTILLE_NO_NTY: 'Nenhum arquivo de notarização adicionado, por favor, clique aqui para importar um, ou um novo será criado automaticamente.',
        APOSTILLE_IMPORT_FILES: 'Importar arquivos',
        APOSTILLE_CREATE_TEXT: 'Criar um documento de texto',
        APOSTILLE_ENTER_TEXT: 'Entre o texto para notarizar...',
        APOSTILLE_DOCUMENT_TITLE: 'Título do documento',
        APOSTILLE_DROPBOX_MESSAGE: 'Por favor, digite sua senha e as tags desejadas antes de selecionar arquivos',
        APOSTILLE_DROPBOX_MESSAGE_2: 'Por favor, digite a sua senha antes de selecionar arquivos',

        // AUDIT APOSTILLE MODULE
        APOSTILLE_AUDIT_TITLE: 'Auditar apostilles',
        APOSTILLE_AUDIT_CHOOSE_NODE: 'Selecionar um nodo',
        APOSTILLE_AUDIT_CHOOSE_NODE_NOTE: 'Apenas alguns nodos são capazes de buscar em todo o histórico de transações (opção está desabilitada por padrão no NIS).',
        APOSTILLE_AUDIT_WRONG_FORMAT: 'Este arquivo não está no formato Apostille!',
        APOSTILLE_AUDIT_FAIL_NO_PUBLIC_KEY: 'A verificação falhou, o proprietário não possui chave pública!',
        APOSTILLE_AUDIT_SUCCESS: 'Arquivo auditado com sucesso!',
        APOSTILLE_AUDIT_FAIL: 'Verificação falhou!',
        APOSTILLE_AUDIT_WAITING: 'A transferência do Apostille deve estar aguardando pela confirmação!',
        APOSTILLE_AUDIT_NOT_FOUND: 'Transação não encontrada, verifique se não está aguardando pela confirmação, pois nesse caso o Apostille ainda é inválido',
        APOSTILLE_AUDIT_ERROR_UNCONFIRMED: 'Ocorreu um erro ao buscar dados não confirmados, mas a transação não foi encontrada',
        APOSTILLE_AUDIT_ERROR_SIGNER: 'Ocorreu um erro enquanto buscava pelos dados do signatário',
        APOSTILLE_AUDIT_ERROR_SIGNATURE: 'A verificação falhou, um erro ocorreu na verificação da assinatura!',
        APOSTILLE_AUDIT_INFORMATION_1: 'Arquivos que podem ser auditados devem estar no <b>formato apostille</b>',
        APOSTILLE_AUDIT_INFORMATION_2: 'Você pode reconhecê-los pelo nome do arquivo:',
        //APOSTILLE_AUDIT_NON_SIGNED: 'Exemplo não assinado:',
        //APOSTILLE_AUDIT_SIGNED: 'Exemplo assinado:',
        APOSTILLE_AUDIT_FILES: 'Auditar arquivos',
        APOSTILLE_AUDIT_FORMAT_EXAMPLE: 'Exemplo do formato Apostille',
        APOSTILLE_AUDIT_REMOVE_RECORDS: 'Remover registros localmente',

        // APOSTILLE MESSAGE MODULE
        APOSTILLE_MESSAGE_TITLE: 'Enviar mensagem para a conta de notarização',
        APOSTILLE_MESSAGE_NS_BRAND: 'Usar meu registro de nome para mensagem de marca',
        APOSTILLE_MESSAGE_ADD_MOSAIC: 'Adicionar mosaico',
        APOSTILLE_NTY_ACCOUNT: 'Conta de Notarização',
        APOSTILLE_REQUEST_MESSAGE: 'Mensagem de requisição',
        APOSTILLE_CREATE_MESSAGE_REQUEST: 'Criar uma mensagem de requisição',

        // TRANSFER APOSTILLE OWNLERSHIP MODULE
        APOSTILLE_TRANSFER_TITLE: 'Transferir ou dividir propriedade de Apostille',

        // UPADTE APOSTILLE MODULE
        APOSTILLE_UPDATE_TITLE: 'Atualizar apostille',

        // ERROR ALERTS
        ALERT_MISSING_FORM_DATA: 'Por favor, complete o formulário!',
        ALERT_ERROR_WALLET_DOWNLOAD: 'Não foi possível baixar a carteira pois ela não existe!',
        ALERT_PASSWORDS_NOT_MATCHING: 'As senhas fornecidas são diferentes!',
        ALERT_INVALID_KEY_FOR_ADDR: 'A chave privada não corresponde ao endereço fornecido!',
        ALERT_NO_WALLET_LOADED: 'Você não pode acessar o painel sem uma carteira',
        ALERT_WALLET_NAME_EXISTS: 'Uma carteira com o mesmo nome já existe carregada!',
        ALERT_INVALID_WALLET_FILE: 'Você está tentando carregar um arquivo que não é uma carteira!',
        //ALERT_NO_NODE_SET: 'Por favor entre com um nodo!',
        ALERT_INVALID_CUSTOM_NODE: 'Seu nodo personalizado é inválido!',
        ALERT_INVALID_WEBSOCKET_PORT: 'A porta websocket do nodo customizado é inválida!',
        ALERT_MIJIN_DISABLED: 'A rede Mijin está desabilitada, por favor, escolha outra rede!',
        ALERT_GET_NS_BY_ID_ERROR: 'Erro ao buscar informações do registro de nome, pela razão: ',
        ALERT_GET_ACCOUNT_DATA_ERROR: 'Erro ao buscar dados da conta, pela razão: ',
        ALERT_ERROR_OCCURRED: 'Um erro ocorreu! ',
        ALERT_INVALID_ADDR_FOR_NETWORK: ' não corresponde a rede ',
        ALERT_INVALID_PASSWORD: 'Senha fornecida não é válida!',
        ALERT_COSIG_ALREADY_IN_LIST: 'Cossignatário já está presente na lista de modificações!',
        ALERT_COSIGNATORY_HAS_NO_PUBLIC: 'Cossignatário deve ter ao menos uma transação para possuir uma chave pública!',
        ALERT_MULTISIG_HAS_NO_PUBLIC: 'Contas multiassinadas devem possuir ao menos uma transação para possuir uma chave pública!',
        ALERT_COSIG_CANNOT_BE_MULTISIG: 'A conta selecionada para conversão é cossignatário em outra conta multiassinada. Portanto não pode ser convertida.',
        ALERT_NO_NS_OWNED: 'A conta não possui nenhum registro de nome, por favor crie um ou mude de conta.',
        ALERT_UNLOCKED_INFO_ERROR: 'Um erro ocorreu ao buscar pelas informações de destravamento',
        ALERT_LOCK_ERROR: 'Erro ao travar conta, pela razão: ',
        ALERT_UNLOCK_ERROR: 'Erro ao destravar conta, pela razão: ',
        ALERT_SUPERNODES_ERROR: 'Um erro ocorreu ao buscar dados do supernodo!',
        ALERT_INVALID_NTY_FILE: 'Arquivo fornecido não é um arquivo de notarização!',
        ALERT_CREATE_WALLET_FAILED: 'Falha ao criar a carteira, pela razão: ',
        ALERT_REQUEST_FAILED: 'Request failed, reason: ',
        ALERT_DERIVATION_FROM_SEED_FAILED: 'Falhou ao derivar a conta da semente (seed), pela razão: ',
        ALERT_BIP32_GENERATION_FAILED: 'Falha ao gerar dados BIP32, pela razão: ',
        ALERT_NO_WALLET_DATA: 'Erro, dados da carteira vazios!',
        ALERT_CANNOT_LOGIN_WITHOU_WALLET: 'Erro, não é possível logar sem uma carteira!',
        ALERT_NO_WALLET_TO_SET: 'Erro, não é possível não escolher uma carteira!',
        ALERT_INVALID_WALLET_INDEX: 'Erro, índice da conta selecionada está fora dos limites!',
        ALERT_NO_CURRENT_WALLET: 'Erro, não é possível configurar uma conta de carteira se não há uma carteira atual!',
        ALERT_ALREADY_MULTISIG: 'Conta selecionada já é uma conta multiassinada!',
        ALERT_INVALID_MODIFICATION_ARRAY: 'Uma conta multiassinada não pode ser cossignatária de si mesmo, por favor verifique a sua lista de modificações!',
        ALERT_GET_MARKET_INFO_ERROR: 'Um erro ocorreu ao tentar buscar informações de mercado!',
        ALERT_MULTISIG_CANNOT_BE_COSIG: 'Uma conta multiassinada não pode ser configurada como cossignatária!',
        ALERT_PURGE_CANCELLED: 'Remoção cancelada!',
        ALERT_MAINNET_DISABLED: 'Mainnet está desabilitada, por favor escolha outra rede!',
        ALERT_EMPTY_DECODED_MSG: 'Um erro ocorreu, não há mensagem decodificada!',
        ALERT_INVALID_NS_NAME: 'Nome do registro de nomes é inválido!',
        ALERT_INVALID_MOSAIC_NAME: 'Nome do mosaico é inválido!',
        ALERT_MOSAIC_DESCRIPTION: 'Descrição do mosaico é muito comprida!',
        ALERT_GET_INCOMING_TXES_ERROR: 'Um erro ocorreu enquanto buscava por transações de entrada, pela razão: ',
        ALERT_GET_MOSAICS_DEFINITIONS_ERROR: 'Erro ao buscar definição de mosaicos, pela razão: ',
        ALERT_GET_SUB_NS_ERROR: 'Erro ao busca definição de registro de nomes, pela razão: ',
        ALERT_GET_MOSAICS_ERROR: 'Erro ao buscar mosaicos, pela razão: ',
        ALERT_GET_TRANSACTIONS_ERROR: 'Erro ao buscar transações, pela razão: ',
        ALERT_INVALID_ADDRESS_BOOK_FILE: 'Este arquivo não está no formato .adb!',
        ALERT_INVALID_ADDRESS: 'Endereço fornecido não é válido!',
        ALERT_INVALID_AMOUNT: 'Quantidade não é valida!',
        ALERT_INVALID_PRIVATE_KEY: 'Chave privada fornecida não é válida!',
        ALERT_FILE_SIZE_ERROR: ' é muito grande, o tamanho máximo permitido é de 100 MB',
        ALERT_MESSAGE_DECODE_KEY_ERROR: 'Houve uma falha ao desencriptar a mensagem pois a conta não possui uma chave pública visível na rede',
        ALERT_FETCH_TIME_SYNC_ERROR: 'Um erro ocorreu ao buscar o horário da rede!',
        ALERT_MULTISIG_MIN_SIGNATURE: 'Uma conta multiassinada precisa de pelo menos um cossignatário',
        ALERT_BTC_MARKET_ERROR: 'Erro ao buscar o preço do Bitcoin',
        ALERT_COSIG_REMOVAL_LIMIT: 'Apenas um cossignatário pode ser removido de cada vez.',
        ALERT_MULTISIG_MIN_SIGNATURE_INVALID: 'Número inválido para mínimo de assinaturas.',
        ALERT_INSUFFICIENT_BALANCE: 'Saldo insuficiente para realizar a transação.',
        ALERT_VOTING_ERROR: 'Voto inválido',
        ALERT_BRAIN_PASSWORD_TOO_SHORT: 'A senha para a carteira mental deve conter no mínimo 40 caracteres!',
        ALERT_NODE_SEEMS_OFFLINE: 'O nodo aparenta estar desconectado, por favor selecione outro',
        ALERT_WEAK_PASSPHRASE: 'A pontuação da senha deve ser de no mínimo 3',
        ALERT_BRAIN_WALLET_UPGRADE: 'A senha para a sua carteira mental parece fraca! Todas as carteiras mentais deve utilizar uma senha de no mínimo 40 caracteres. Aconselhamos que você crie uma carteira simples, a partir da página de registro, e mova seus fundos para ela. Mais informações <a href="https://forum.nem.io/t/2791" target="_blank"><u>aqui</u></a>.',
        ALERT_RECIPIENT_PUBLIC_KEY: 'O destinatário não possui uma chave pública visível na rede.',
        ALERT_ENCRYPT_MULTISIG: 'Não é possível enviar mensagens encriptadas a partir de uma conta multiassinatura.',
        ALERT_EXCHANGE_NEEDS_MESSAGE: 'O destinatário é uma carteira de corretora e por isso requer uma mensagem para que o depósito seja corretamente creditado. Por favor, leia atentamente as instruções de depósito de sua corretora!',
        ALERT_ACCOUNT_ALREADY_IN_ADDRESS_BOOK: 'O endereço já existe no caderno de contatos!',
        ALERT_MAX_MOSAIC_SUPPLY: 'O suprimento máximo para o mosaico é de 9\'000\'000\'000',
        ALERT_GET_MOSAIC_SUPPLY_ERROR: 'Erro ao buscar o suprimento do mosaic, pela razão: ',
        ALERT_ENCRYPTED_MSG_OFFLINE: 'Mensagens encriptadas não estão habilitadas para transações offline.',

        // SUCCESS ALERTS
        ALERT_CREATE_WALLET_SUCCESS: 'Carteira criada e carregada com sucesso!',
        ALERT_SUCCESS_PURGE: 'Armazenamento local removido com sucesso!',
        ALERT_SUCCESS_LOGOUT: 'Logout feito com sucesso!',
        ALERT_LOAD_WALLET_SUCCESS: 'Carteira carregada com sucesso!',
        ALERT_TRANSACTION_SUCCESS: 'Transação enviada com sucesso!',
        ALERT_GENERATE_ACCOUNT_SUCCESS: 'Conta gerada com sucesso. Lembre-se de baixar o arquivo .wlt atualizado de sua carteira!',
        ALERT_UPGRADE_SUCCESS: 'Carteira atualizada com sucesso!',
        ALERT_SIGNATURE_SUCCESS: 'Transação assinada com sucesso!',
        ALERT_NTY_FILE_SUCCESS: 'Arquivo .nty carregado com sucesso!',
        ALERT_INCOMING_TX_FROM: 'Transação de entrada vinda de ',
        ALERT_ADDRESS_BOOK_FILE_SUCCESS: 'Caderno de contatos importado com sucesso!',
        ALERT_VOTING_SUCCESS: 'Voto enviado com sucesso!',
        ALERT_POLL_CREATION_SUCCESS: 'Votação criada com sucesso!',
        ALERT_COPY_SIGNED_TX_SUCCESS: 'Transação assinada copiada com sucesso!',

        // CONVERT ACCOUNT TO MULTISIG
        AGGREGATE_MODIFICATION_TITLE: 'Converter uma conta para multiassinatura',
        AGGREGATE_MODIFICATION_NAME: 'Transação de modificação agregada',
        AGGREGATE_MODIFICATION_MULTISIG_NAME: 'Transação de modificação agregada multiassinatura',
        AGGREGATE_ACCOUNT_SELECT_TITLE: 'Conta para Converter',
        AGGREGATE_ACCOUNT_SELECT: 'Selecione uma conta para converter',
        AGGREGATE_CUSTOM_ACCOUNT: 'Chave de Importação',
        AGGREGATE_ACCOUNT_TO_CONVERT_PRIVATE_TITLE: 'Chave privada do endereço',
        AGGREGATE_ACCOUNT_TO_CONVERT: 'Conta para converter o endereço',
        AGGREGATE_ACCOUNT_TO_CONVERT_PRIVATE: 'Conta para converter a chave privada',
        AGGREGATE_ADD_PLACEHOLDER: 'Conta do cosignatário ou @apelido para adicionar',
        AGGREGATE_ADD_BTN_TITLE: 'Adicionar signatário',
        AGGREGATE_MIN_SIGNATURES: 'Mínimo de assinaturas requeridos',
        AGGREGATE_MIN_SIGNATURES_PLACEHOLDER: 'Mínimo de assinaturas necessárias para validar uma transação',
        AGGREGATE_MODIFICATION_LIST: 'Lista de modificações',
        AGGREGATE_COSIG_LIST: 'Lista de Endereços de Cosignatários',
        AGGREGATE_MODIFICATION_EDIT_TITLE: 'Editar um contrato multiassinatura',
        AGGREGATE_MODIFICATION_EDIT_SELECT_TITLE: 'Conta para editar',
        AGGREGATE_MODIFICATION_EDIT_SELECT: 'Selecione uma conta para editar',
        AGGREGATE_ADD_REMOVE_TITLE: 'Adicionar/Remover signatário',
        AGGREGATE_ADD_REMOVE_PLACEHOLDER: 'Conta do cosignatário ou @apelido para adicionar',
        AGGREGATE_MODIFICATION_RELATIVE_CHANGE: 'Mudanças de assinaturas necessárias',
        AGGREGATE_MODIFICATION_RELATIVE_CHANGE_PLACEHOLDER: 'Número de assinaturas para adicionar (n) ou remover (-n) - Remoções automatizadas',
        AGGREGATE_SELECTED_ACCOUNT_INFO: 'Informações da conta selecionada',
        AGGREGATE_MIN_SIGNATURES: 'Mínimo de assinaturas',
        AGGREGATE_SELECT_WALLET_ACCOUNT: 'Usar conta da carteira',
        AGGREGATE_ADD_COSIG: 'Adicionar cosignatário',
        AGGREGATE_REMOVE_COSIG: 'Remover cosignatário',

        // SIGN MULTISIGNATURE TRANSACTIONS
        SIGN_MULTISIG_TRANSACTIONS_TITLE: 'Assinar transações multiassinatura',

        // LOGIN MODULE
        LOGIN_MEMBER_TITLE: 'Você já é um NEMber?',
        LOGIN_UPGRADE_TITLE: 'A carteira necessita de uma atualização',
        LOGIN_UPGRADE_MESSAGE: 'A carteira selecionada precisa de uma atualização. Esta ação irá gerar uma chave pública filha e a adicionará à sua conta primária.',
        LOGIN_UPGRADE_BUTTON: 'Atualizar Carteira',
        LOGIN_IMPORT_BUTTON: 'Importar Carteira',
        LOGIN_SELECT_WALLET_YOURS: 'Selecionar carteira',
        LOGIN_SELECT_WALLET: 'Selecione uma carteira de seu armazenamento local',
        LOGIN_LOGIN_BUTTON: 'Entrar',
        LOGIN_NOTE: 'Não possui carteiras? Importe uma ou <a href="#!/signup">crie uma carteira</a>.',

        // SIGNUP MODULE
        SIGNUP_TITLE: 'Novo na NEM?',
        SIGNUP_SELECT_WALLET_TYPE: 'Selecione um tipo de carteira para criar',
        SIGNUP_SELECT_WALLET_TYPE_STAND_BY: 'Posicione o cursor em um tipo de carteira para exibir suas informações.',
        SIGNUP_CREATE_WALLET_TITLE: 'Carteira Simples',
        SIGNUP_CREATE_WALLET_INFO: 'Carteiras simples contêm uma chave privada primária que é gerada aleatoriamente.',
        SIGNUP_PRIVATE_KEY_WALLET_TITLE: 'Carteira de chave privada',
        SIGNUP_PRIVATE_KEY_WALLET_INFO: 'Carteiras de chave privada contêm uma chave privada que você deseja importar.',
        SIGNUP_BRAIN_WALLET_TITLE: 'Carteira Mental',
        SIGNUP_BRAIN_WALLET_INFO: 'Carteiras mentais contêm uma chave privada que é gerada a partir de uma senha. Isto faz com que a recuperação da carteira só seja possível utilizando-se exatamente desta mesma senha.',
        SIGNUP_CREATE_WALLET_BUTTON: 'Criar carteira simples',
        SIGNUP_PRIVATE_KEY_WALLET_BUTTON: 'Criar carteira de chave privada',
        SIGNUP_BRAIN_WALLET_BUTTON: 'Criar carteira mental',
        SIGNUP_CREATE_WALLET_WARNING: 'Por favor, saiba mais sobre os  <a href="https://www.w3.org/TR/2014/WD-WebCryptoAPI-20140325/#RandomSource-interface" rel="nofollow" target="_blank"><b>perigos</b></a> que as chaves geradas no lado do cliente podem conter; não nos responsabilizamos por quaisquer perdas que venham a ocorrer por problemas relacionados a entropia na geração das chaves. Mesmo que seja muito difícil de acontecer, é recomendado que você use uma chave privada gerada a partir de uma fonte com forte entropia.',
        SIGNUP_NETWORK_SELECT: 'Selecione uma rede',
        SIGNUP_NETWORK_MAINNET: 'Mainnet é a rede principal <b><u>real</u></b> da NEM. Endereços começam com \'N\'.',
        SIGNUP_NETWORK_TESTNET: 'Testnet é a rede para <b><u>testes</u></b>. Endereços começam com \'T\'.',
        SIGNUP_NETWORK_MIJIN: 'Mijin é a versão privada da NEM. Endereços começam com \'M\'.',
        SIGNUP_BRAIN_WALLET_WARNING: 'Por favor, saiba mais sobre os <a href="https://en.bitcoin.it/wiki/Brainwallet" rel="nofollow" target="_blank"><b>perigos</b></a> que carteiras mentais podem conter. Carteiras mentais usam apenas uma senha que passa por múltiplos hashes. Portanto é crucial que você selecione uma senha SEGURA com no mínimo 40 caracteres. <a href="https://xkcd.com/936/" rel="nofollow" target="_blank"><b>XKCD #936</b></a>',
        SIGNUP_PRIVATE_KEY_WALLET_WARNING: 'Carteiras de chave privada usam APENAS uma senha para encriptar a chave privada importada. Portanto é crucial selecionar uma senha SEGURA.',
        SIGNUP_CREATE_START_WARNING: 'Por favor, siga cada passo com muita atenção!',
        SIGNUP_CREATE_START_CONNECTION_WARNING: 'É recomendado desconectar-se da internet enquanto estiver criando a sua carteira e fazendo backup de seus dados.',
        SIGNUP_CREATE_READY_BTN: 'Pronto',
        SIGNUP_CREATE_ENTER_NAME: 'Digite o nome da carteira',
        SIGNUP_CREATE_ENTER_PASSWORD: 'Digite uma senha',
        SIGNUP_CREATE_ENTER_PASSPHRASE: 'Digite uma senha de passe',
        SIGNUP_CREATE_CONFIRM_PASSWORD: 'Confirme a senha digitada acima',
        SIGNUP_CREATE_CONFIRM_PASSPHRASE: 'Confirme a senha de passe digitada acima',
        SIGNUP_CREATE_ENTER_PRIVATE_KEY: 'Entre com a chave privada',
        SIGNUP_CREATE_ADDRESS_FROM_PK: 'Endereço correspondente à chave acima',
        SIGNUP_CREATE_WALLET_ADD_ENTROPY_INFO: 'Agora iremos gerar a sua chave privada primária. <b>Por favor, clique em iniciar e mova o seu cursor ao redor da tela para adicionar mais entropia.</b>',
        SIGNUP_COMMON_WALLET_WARNING_TITLE: 'Protocolo de segurança da conta',
        SIGNUP_COMMON_WALLET_WARNING_1: 'As carteiras são armazenadas <b><u>temporariamente</u></b> no armazenamento local de seu navegador! Navegadores podem ser configurados (ex: por add-ons) para limpar o armazenamento local de vez em quando. Isto pode levar a perda dos dados e não pode ser desfeito de forma fácil. Neste caso, sua carteira estará perdida, por isso é muito importante se assegurar que você possui backup de todas as informações necessárias para restaurar a sua carteira.',
        SIGNUP_COMMON_WALLET_WARNING_2: 'Por favor, clique abaixo para baixar sua carteira. Trata-se do arquivo <b><i>.wlt</i></b> utilizado como backup para importar de volta a sua carteira, caso o armazenamento local de seu navegador seja apagado.',
        SIGNUP_COMMON_WALLET_WARNING_3: 'Se você não baixou o backup do arquivo <b><i>.wlt</i></b>, clique no botão abaixo para revelar os dados originais da carteira e criar o arquivo manualmente:',
        SIGNUP_COMMON_WALLET_WARNING_4: 'Mesmo que você possua o arquivo de sua carteira é <b><u>obrigatório</u></b> fazer o backup da chave primária de sua conta, clique no botão abaixo para revelar:',
        SIGNUP_COMMON_WALLET_WARNING_5: 'É a sua responsabilidade garantir que possui um backup seguro de sua chave privada antes de enviar quaisquer fundos para a sua conta.',
        SIGNUP_COMMON_WALLET_WARNING_6: 'Cada carteira possui uma <b><u>chave privada primária</u></b> (a sua é exibida abaixo) que é usada para criar contas secundárias determinísticas (BIP32). Este recurso requer o uso da <b><u>mesma senha</u></b> ou gerará contas secundárias diferentes para a mesma chave privada primária. Quando fizer backup de seus dados não se esqueça de <b><u>anotar a sua senha</u></b>.',
        SIGNUP_COMMON_WALLET_WARNING_BTN_1: 'Exibir o arquivo original da carteira',
        SIGNUP_COMMON_WALLET_WARNING_BTN_1_INFO: 'Para fazer um arquivo de carteira, crie um arquivo texto vazio e coloque a chave acima, codificada em base64, dentro dele. Salve o arquivo como <b><i>nomeDeSuaCarteira.wlt</i></b>.',
        SIGNUP_COMMON_WALLET_WARNING_BTN_2: 'Exibir chave privada',
        SIGNUP_COMMON_WALLET_WARNING_BTN_2_INFO: 'Para fazer backup de sua chave privada, imprima-a ou salve-a em um arquivo texto. É altamente recomendável salvar sua chave privada em uma local seguro desconectado.',
        SIGNUP_COMMON_WALLET_WARNING_FOOTER: 'Ao clicar abaixo, você concorda que possui sua chave privada, senha e arquivo de carteira guardados em um backup seguro.',
        SIGNUP_COMMON_WALLET_WARNING_CONFIRM_1: 'Eu possuo o arquivo de minha carteira',
        SIGNUP_COMMON_WALLET_WARNING_CONFIRM_2: 'Eu possuo a chave privada e a senha',
        SIGNUP_COMMON_WALLET_WARNING_CONFIRM_3: 'Eu concordo',
        SIGNUP_COMMON_WALLET_WARNING_UNDERSTOOD: 'Entendido',
        SIGNUP_COMMON_WALLET_WARNING_DOWNLOAD: 'Baixar Carteira',
        SIGNUP_ESTIMATED_PASSPHRASE_STRENGTH: 'Força estimada da senha',
        SIGNUP_ESTIMATED_GUESS_TIMES: 'Tempo estimado de suposição',

        // FAQ MODULE
        FAQ_TITLE: 'Perguntas Mais Frequentes',
        FAQ_QUESTION_1: 'Como a Nano Wallet funciona?',
        FAQ_ANSWER_1: 'A Nano Wallet é feita com AngularJS e ES6. É um aplicativo que funciona totalmente do lado do cliente e nunca envia nenhuma informação sensível através dos cabos; tudo acontece no seu navegador local, desde criar as chaves privadas até a assinatura das transações.',
        FAQ_QUESTION_2: 'É livre para utilizar?',
        FAQ_ANSWER_2: 'Absolutamente todas as operações são do lado do cliente, apenas você controla as suas moedas, sem terceiros envolvidos, e sem taxas extras.',
        FAQ_QUESTION_3: 'Porque eu já possuo um mosaico?',
        FAQ_ANSWER_3: 'Por que a XEM é a moeda padrão da cadeia de blocos da NEM, todo usuário já possui ela registrada em sua própria carteira, mesmo quando o saldo é 0. Seu registro de nome é NEM e o nome do mosaico é XEM',
        FAQ_QUESTION_4: 'Mapa de desenvolvimento?',
        FAQ_ANSWER_4: 'O atual mapa de desenvolvimento inclui integração de todos os recursos da Nano Wallet v1.x.x e a conclusão de projetos financiados pela comunidade para trabalhar através desta carteira.',
        FAQ_QUESTION_5: 'Como eu consigo XEM grátis?',
        FAQ_ANSWER_5: 'As torneiras de XEM estão atualmente fora de funcionamento, mas você pode consultar o fórum da NEM para saber mais sobre o programa de recompensas da NEM.',
        FAQ_QUESTION_6: 'Onde encontrar mais informações sobre a NEM?',
        FAQ_ANSWER_6_FORUM: 'Fórum oficial',
        FAQ_ANSWER_6_WEBSITE: 'Website oficial',
        FAQ_ANSWER_6_BTT: 'Assunto oficial na BitcoinTalk',
        FAQ_QUESTION_7: 'Nada é exibido no painel.',
        FAQ_ANSWER_7: 'Por favor, verifique o círculo do nodo na barra de navegação do topo. <br> Círculo vermelho significa que a conexão com o nodo falhou. <br> Clique no "Nodo" e selecione outro da lista ou use um nodo customizado. <br> <a href="https://supernodes.nem.io" target="_blank">Supernodes.nem.io</a> possui uma lista de nodos que você pode utilizar.</a>',
        FAQ_QUESTION_8: 'Cosignatários não podem ver a transação para assinar.',
        FAQ_ANSWER_8: 'Neste caso vá para "Serviços", procure por "Contas Multiassinatura ou Multiusuários" e clique em "Assinar transações multiassinatura".',
        FAQ_QUESTION_9: 'Quais são as melhores práticas de segurança?',
        FAQ_ANSWER_9: 'É altamente recomendável que sempre armazene suas chaves privadas em papel. <br> Você pode imprimí-las e arquivá-las em algum lugar seguro. <br><br> No que diz respeito aos arquivos de carteira, você sempre deve manter várias cópias em diferentes locais a frio (desconectados), como cartões usb. <br> Senhas devem ser únicas e complexas, por esta razão, sempre escreva-a primeiro. <br><br> Quando você desejar verificar a sua carteira ou realizar operações:<br> - Conecte o seu cartão usb <br> - Importe sua carteira para a Nano<br> - Desconecte o seu cartão usb.<br><br> Uma cópia da sua carteira ficará armazenada no armazenamento local para o momento que você precisar.<br> Assim que terminar, saia e remova as carteiras do seu armazenamento local com o botão de exclusão ao lado direito da barra do rodapé da página.',
        FAQ_QUESTION_10: 'Onde encontrar informações sobre a minha conta (endereço, etc) ?',
        FAQ_ANSWER_10: 'Se você olhar na barra de navegação do topo, você verá o botão <b><i>"Conta"</b></i> entre <b><i>"Nodo"</b></i> e <b><i>"Idioma"</b></i>. Lá você poderá encontrar seu endereço, chave pública, saldo coberto e outros dados importantes.',
        FAQ_QUESTION_11: 'Depositei XEM em uma corretora mas nada foi creditado?',
        FAQ_ANSWER_11_1: 'Primeiro você deve verificar que o hash da sua transação está apontando para uma transação existente no <a target="_blank" href="http://chain.nem.ninja">explorador</a> (por favor, saiba que o explorador está sempre alguns blocos atrasado).',
        FAQ_ANSWER_11_2: 'A maioria das corretoras exige uma mensagem de identificação da transação para creditar o seu depósito. Assegure-se que você seguiu cuidadosamente as instruções da corretora e adicionou a mensagem não encriptada conforme solicitado.',
        FAQ_ANSWER_11_3: 'Mesmo que tenha adicionado a mensagem, pode acontecer que as corretoras não processem o seu depósito, por motivos de problemas do lado deles.',
        FAQ_ANSWER_11_4: 'Você deve contatar o suporte da corretora, e explicar a situação enviando-os o hash da sua transação.',
        FAQ_QUESTION_12: 'Como verificar se eu estou em um fork?',
        FAQ_ANSWER_12_1: 'Clique em <b><i>"Nodo"</b></i>, na barra de navegação do topo, para abrir o painel do nodo.',
        FAQ_ANSWER_12_2: 'Verifique o número do bloco e compare com o número exibido <a target="_blank" href="http://hugealice.nem.ninja:7890/chain/height">aqui</a>.',
        FAQ_ANSWER_12_3: 'Se for diferente em mais de 5 blocos, então, provavelmente você está em um fork.',
        FAQ_ANSWER_12_4: 'Para consertar, apenas escolha outro nodo da lista no painel de nodos, isso restaurará sua conta para o seu estado atual na rede real.',

        // FORM RELATED
        FORM_PASSWORD_FIELD_PLACEHOLDER: 'Digite a senha de sua carteira',
        FORM_WALLET_NAME_FIELD_PLACEHOLDER: 'Nome da carteira',
        FORM_SIGNUP_PASSWORD_FIELD_PLACEHOLDER: 'Senha',
        FORM_PASSWORD: 'Senha',
        FORM_PASSWORD_CONFIRM: 'Confirmar Senha',
        FORM_PASSPHRASE_CONFIRM: 'Confirmar Senha de Passe',
        FORM_CONFIRM_PASSWORD_FIELD_PLACEHOLDER: 'Confirmar sua senha',
        FORM_PASSPHRASE_FIELD_PLACEHOLDER: 'Senha de Passe',
        FORM_CONFIRM_PASSPHRASE_FIELD_PLACEHOLDER: 'Confirmar sua senha de passe',
        FORM_ADDRESS_FIELD_PLACEHOLDER: 'Endereço da conta',
        FORM_PRIVATE_KEY_FIELD_PLACEHOLDER: 'Chave privada',
        FORM_SIDE_BTN_BALANCE: 'Saldo',
        FORM_SIDE_BTN_PAY_TO: 'Pagar para',
        FORM_SIDE_BTN_TX_FEE: 'Taxa de transação',
        FORM_SIDE_BTN_RENTAL_FEE: 'Taxa de aluguel',
        FORM_SIDE_BTN_LEVY_FEE: 'Taxa de imposto',
        FORM_RECIPIENT_PLACEHOLDER: 'Endereço do destinatário ou @apelido',
        FORM_INVOICE_RECIPIENT_PLACEHOLDER: 'Endereço do destinatário',
        FORM_SIDE_BTN_ALIAS_OF: 'Apelido de',
        FORM_MESSAGE_PLACEHOLDER: 'Mensagem',
        FORM_MOSAIC_NAME_PLACEHOLDER: 'Nome do Mosaico',
        FORM_ADDRESS_ALIAS_PLACEHOLDER: 'Endereço da conta ou @apelido',
        FORM_BTN_GET_ALIAS: 'Pegar endereço de registro de nome',
        FORM_BTN_OPEN_ADB: 'Abrir caderno de contatos',
        FORM_SELECT_NAMESPACE: 'Selecione um registro de nome',

        // VOTING MODULE
        PORTAL_VOTING_TITLE: 'Votação',
        PORTAL_VOTING_TEXT: 'Criar e votar em votações',
        PORTAL_VOTING_BTN1: 'Ver Votações',
        PORTAL_VOTING_BTN2: 'Criar Votação',
        FORM_TITLE_FIELD_PLACEHOLDER: 'Título',
        FORM_DESCRIPTION_FIELD_PLACEHOLDER: 'Escreva a sua descrição aqui',
        FORM_OPTION_FIELD_PLACEHOLDER: 'escreva uma opção',
        FORM_WHITELIST_FIELD_PLACEHOLDER: 'endereço da conta',
        FORM_SELECT_MULTISIG: 'Selecione uma conta multiassinatura',
        FORM_SELECT_CONTACT: 'Selecione um contato',

        // TREZOR RELATED
        TREZOR_TITLE: 'TREZOR',
        TREZOR_TEXT: 'A carteira em hardware TREZOR permite que você segure suas XEM, mosaicos contas multiassinatura',
        TREZOR_BUTTON: 'Entrar com TREZOR',

        // LEDGER NANO RELATED
        LEDGER_NANO_TITLE: 'LEDGER NANO',
        LEDGER_NANO_TEXT: 'A carteira em hardware LEDGER NANO permite que você segure suas XEM, mosaicos contas multiassinatura',
        LEDGER_NANO_BUTTON: 'Entrar com LEDGER NANO',
        LEDGER_NANO_NO_DEVICE: 'Ledger device not found',
        LEDGER_NANO_CHECK_DEVICE: 'Please check your Ledger device!',
        LEDGER_NANO_NOT_USING_NEM_APP: 'You are not using NEM app on your Ledger device',
        LEDGER_NANO_NOT_USING_XYM_APP: 'You are not using Symbol app on your Ledger device',
        LEDGER_NANO_NOT_SUPPORTED_APP: 'Please check if you have an up-to-date NEM application open on your Ledger device',
        LEDGER_NANO_CONNECTED_OTHER_APP: 'Another app is already connected to your Ledger device. Please close it then try again',
        LEDGER_NANO_NOT_OPENED_NEM_APP: 'Please open NEM app on your Ledger device',
        LEDGER_NANO_NOT_OPENED_XYM_APP: 'Please open Symbol app on your Ledger device',
        LEDGER_NANO_DEVICE_LOCKED: 'Please unlock your Ledger device',
        LEDGER_NANO_USER_REJECT_LOGIN: 'Login cancelled by user',
        LEDGER_NANO_USER_REJECT_REQUEST: 'Request cancelled by user',
        LEDGER_NANO_FOLLOW_INSTRUCTION: 'Follow instructions on your Ledger device',
        LEDGER_NANO_TRANSACTION_TOO_BIG: 'The transaction is too big to sign on your Ledger device',
        LEDGER_NANO_TRANSACTION_USER_CANCEL: 'Signing cancelled by user',
        LEDGER_NANO_TRANSACTION_FAILED: 'Failed to sign transaction, reason: ',
        LEDGER_NANO_OPTIN_INFO_1: 'You can use Symbol Ledger app to get account for Symbol Opt-in.',
        LEDGER_NANO_OPTIN_INFO_2: 'Please open Symbol Ledger app on your device and click on Import Symbol account.',
        LEDGER_NANO_IMPORT_SYMBOL: 'Import Symbol account',

        // CREATE OFFLINE TRANSACTION MODULE
        OFFLINE_TX_TITLE: 'Preparar uma transação offline',
        OFFLINE_TX_NO_WALLET: 'Por favor, importe uma carteira do módulo de login para ver o formulário.',
        OFFLINE_TX_INFO_1: 'Assegure-se de que está desconectado da internet quando estiver importando sua carteira e criando a transação!',
        OFFLINE_TX_INFO_2: 'Somente transações simples podem ser criadas por que a conexão é necessária para buscar mosaicos e informações de multiassinatura dos nodos da NEM.',
        OFFLINE_TX_INFO_3: 'Depois de clicar no botão "criar" no painel da esquerda, você encontrará a transação assinada abaixo.',
        OFFLINE_TX_INFO_4: 'Uma transação assinada é imutável e será efetivada apenas se transmitida para a rede antes do prazo padrão de 24 horas.',
        OFFLINE_TX_SIGNED: 'Transação assinada',
        OFFLINE_TX_RELEASE: 'Abrir no módulo de transmissão',

        // RELEASE OFFLINE TRANSACTION MODULE
        RELEASE_OFFLINE_TX_TITLE: 'Transmitir uma transação para a rede',
        RELEASE_OFFLINE_TX_PARAMETERS: 'Parâmetros da transação',
        RELEASE_OFFLINE_TX_INFO_1: 'Para transmitir uma transação você deve estar conectado à internet.',
        RELEASE_OFFLINE_TX_INFO_2: 'Assegure-se de que selecionou a rede correta e um nodo em funcionamento ou a transação será rejeitada.',
        RELEASE_OFFLINE_TX_INFO_3: 'Não é possível enviar uma transação assinada duas vezes. Uma transação assinada sempre gerará o mesmo hash e duas transações não podem possuir o mesmo hash.',
        RELEASE_OFFLINE_TX_INFO_4: 'Você pode transmitir a transação assinada de qualquer computador de forma segura.',

        // INVOICE MODULE
        CREATE_INVOICE_TITLE: 'Criar uma fatura',

        // CREATE SIGNED MESSAGE MODULE
        CREATE_SIGNED_MSG_TITLE: "Create a signed message",
        CREATE_SIGNED_MSG_NAME: 'Signed message',
        CREATE_SIGNED_MSG_SIGN: 'Sign message',

        // VERIFY SIGNED MESSAGE MODULE
        VERIFY_SIGNED_MSG_TITLE: "Verify a signed message",
        VERIFY_SIGNED_MSG_SIG_VALID: 'Signature is valid',
        VERIFY_SIGNED_MSG_SIG_NOT_VALID: 'Signature is <b>NOT</b> valid',
        VERIFY_SIGNED_MSG_NOT_VALID: 'Signed message is not valid!',

        // DNS MODULE
        DNS_SHORT_DESC: "Decentralized Domain Name System (DNS) service for namespace.nem domains",
        DNS_CONFIGURE: "Configure DNS",
        DNS_SEARCH_DNS: "Search DNS",
        DNS_GO_SEARCH: "GO!",
        DNS_GET_INFO: "Get info",
        DNS_SEARCH_HEADLINE: "Search DNS",
        DNS_SEARCH_HELP: "DNS help",
        DNS_SEARCH: "Search",
        DNS_SEARCH_HELP_INFO: "Type a namespace.nem to lookup associated DNS information or go directly to website. ",
        //DNS CONFIGURE
        DNS_SELECT_NAMESPACE:"select namespace",
        DNS_POINTER_ADDRESS:"Pointer address",
        DNS_IP_ADDRESS:"ip address",
        DNS_ORGA:"Organization",
        DNS_COUNTRY:"Country",
        DNS_ADDRESS:"Address",
        DNS_PHONE:"Phone",
        DNS_EMAIL:"Email",
        DNS_OTHERINFO:"Other info",
        DNS_JSONMSG:"Json message",
        DNS_CHAR_LEFT:"Characters Left",
        DNS_HELP1:"The owner of a NEM namespace can use the NEM DNS in a few easy steps. The DNS is built around the namespace platform in the NEM ecosystem and an associated pointer address (PA). The namespace owner needs to send a transaction to the namespace pointer address including a non-encrypted message in json format with information related to the namespace. The message can include relevant information such as IP address, ownership info, physical address, contact info and much more.",
        DNS_HELP2:"This is how you do it:",
        DNS_HELP3:"1. select namespace",
        DNS_HELP4:"2. write relevant or update DNS information",
        DNS_HELP5:"3. send transaction to pointer address",
        //DNS ALERTS
        ALERT_DNS_SUCCESS: "Information found",
        ALERT_DNS_NO_INFO_FOUND: "No DNS info found",

        // IMPORT WALLET QRCODE
        IMPORT_WALLET_QRCODE_TITLE: 'Import wallet QR code',
        IMPORT_WALLET_QRCODE_INFORMATION: 'Support wallet QR code: NEM wechat wallet, ios, android.',
        IMPORT_WALLET_QRCODE_LOAD: 'Load wallet QR code',
        IMPORT_WALLET_QRCODE_SCAN: 'Scan',
        IMPORT_WALLET_QRCODE_STOP_SCAN: 'Stop scan',

        //NEMonster
        NEMONSTER_SHORT_DESC: "Welcome to NEMonsters, a witty little collection game based on the NEM blockchain.",
        NEMONSTER_CATCH: "Catch",
        NEMONSTER_GET: "Get some monsters",
        NEMONSTER_DESC: "Welcome to NEMonsters, a witty little collection game based on the NEM blockchain. You can catch and collect over 110,000,000 different combinations of generated monsters; spanning from different colors, names and other spicy characteristics.  You catch a new monster by sending a fixed transaction; the monster is summoned when the transaction is confirmed. The characteristics of your new (evil) monster is based on the transaction hash – how cool is that. See if you can catch some of the monsters from the NEM foundation.",

        // CATAPULT OPT IN MODULE
        PORTAL_CATAPULTOPTIN_TITLE: 'Symbol Opt In',
        PORTAL_CATAPULTOPTIN_TEXT: 'Use this module to receive XYM on the Symbol network. You may also opt in to have your namespaces registered and multisig accounts opted in. Your mosaic balances, Apostille data, delegating harvesting contracts, and all other DAP content will not carry forward. Please, read more ',
        PORTAL_CATAPULTOPTIN_TEXT_LINK: 'here.',
        PORTAL_CATAPULTOPTIN_MULTISIG_TEXT: 'Your multi-signature opt-in request must be issued with cosigner accounts',
        PORTAL_CATAPULTOPTIN_BTN_1: 'Claim XYM and Namespaces with a Symbol Opt In',
        PORTAL_CATAPULTOPTIN_BTN_2: 'Sign a Multisig Opt In Message',
        PORTAL_CATAPULTOPTIN_TREZOR_TEXT: 'Opt in with trezor is not implemented yet. If you want to Opt in, please move your funds to a normal account.',
        TITLE_CATAPULTOPTIN: 'Symbol Opt In',
        CATAPULTOPTIN_CREATE_HELP: 'Want to know more about opting in to Symbol?',
        CATAPULTOPTIN_TRANSACTION: 'Opt In Transaction',
        CATAPULTOPTIN_ACCOUNT_UNLOCK: 'Enter your Symbol mnemonic',
        CATAPULTOPTIN_ACCOUNT_UNLOCK_PLACEHOLDER: 'Please provide the mnemonic passphrase for your Symbol Account that you opted in',
        CATAPULTOPTIN_ACCOUNT_STEP_1: 'Step 1: Please select an account to Opt In',
        CATAPULTOPTIN_ACCOUNT_STEP_1_NEW: 'Step 1: Please select an account to Opt In',
        CATAPULTOPTIN_ACCOUNT_STEP_2: 'Step 2: Review my Symbol account opt in information',
        CATAPULTOPTIN_ACCOUNT_MS_STEP_2: 'Step 2: Review multisig Symbol account information',
        CATAPULTOPTIN_ACCOUNT_STEP_3: 'Step 3: Review my namespaces to be opted in',
        CATAPULTOPTIN_ACCOUNT_STEP_4: 'Step 4: Review VRF keys in opt in',
        CATAPULTOPTIN_INCLUDE_VRF: 'Include VRF keys in opt in',
        CATAPULTOPTIN_VRF_KEYS: 'VRF keys',
        CATAPULTOPTIN_VRF_PUBLIC_KEY: 'VRF public key',
        CATAPULTOPTIN_ACCOUNT_MS_STEP_3: 'Step 3: Review multisig namespaces to be opted in',
        CATAPULTOPTIN_ACCOUNT_STEP_SIGN: 'Step 2: Sign Symbol Opt In',
        CATAPULTOPTIN_REVIEW_MULTISIG_RESULT: 'Review Multisig Symbol Opt In',
        CATAPULTOPTIN_REGISTER: 'Register Symbol Opt In',
        CATAPULTOPTIN_CREATE_ADDRESS: 'Create a new address on Symbol from mnemonic.',
        CATAPULTOPTIN_INCLUDE_NAMESPACE: 'Include my namespaces in the opt in',
        CATAPULTOPTIN_INCLUDE_MS_NAMESPACE: 'Include multisig account namespaces in the opt in',
        CATAPULTOPTIN_MULTISIG_CONTRACT_CONSIGNATURES: 'Multisig Contract Cosignatures',
        SIGN_MULTISIG_OPTIN_TRANSACTIONS_TITLE: 'Sign Multisignature Opt In Transactions',
        CATAPULTOPTIN_NAMESPACE_TO_DELETE: 'Opt Out of Namespace',
        CATAPULTOPTIN_NAMESPACE_REMOVE: 'Enter namespace to be removed',
        CATAPULTOPTIN_ENTER_PK: 'Enter a private key to generate Symbol account',
        CATAPULTOPTIN_ENTER_PASSWORD: 'Enter your password to generate Symbol account',
        CATAPULTOPTIN_REMOVE_NAMESPACE: 'Remove Namespace',
        CATAPULTOPTIN_OPT_IN_SUCCESS: 'Opt In completed successfully',
        CATAPULTOPTIN_OPT_IN_PENDING_SIGNATURES: 'Opt In pending cosignatories',
        CATAPULTOPTIN_TRANSFER_TRANSACTION_MULTISIG_NAME: 'Symbol Multisig Account Opt in Approval',
        CATAPULTOPTIN_NIS1: 'NIS1',
        CATAPULTOPTIN_OPTIN_ACCOUNT: 'Opt in account:',
        CATAPULTOPTIN_OPTIN_ACCOUNT_PK: 'Opt in account public key:',
        CATAPULTOPTIN_NAMESPACES_OPTIN: 'My opted in namespaces',
        CATAPULTOPTIN_CATAPULT: 'Symbol',
        CATAPULTOPTIN_OPTIN_ACCOUNT_ADDRESS: 'Opt in account address:',
        CATAPULTOPTIN_UNLOCK: 'Unlock Symbol Account',
        CATAPULTOPTIN_CONFIRM_OPTIN: 'Confirm Symbol Opt In',
        CATAPULT_OPT_IN_RESUME: 'Opt In Transaction Confirmation',
        CATAPULT_OPT_IN_RESUME_TEXT:'The following transaction will create a new Symbol account. To claim your funds, you need to back up your Mnemonic passphrase.',
        CATAPULT_OPT_IN_SUCCESS: 'Opt In Successful',
        CATAPULT_OPT_IN_BALANCE_SNAPSHOT: 'Balance to be included in Symbol',
        CATAPULT_OPT_IN_SUCCESS_SIGNING: 'Opt In signed successfully',
        CATAPULT_OPT_IN_UNDERSTAND: 'Considering the change of private key when used with Symbol, it is important that you understand that your account private key on Symbol will be different from your old private key. Please, confirm that you have made a copy of the new private key by entering ‘Yes, I understand’ in the field below.',
        CATAPULT_OPT_IN_CONFIRM_BACKUP: 'I have backed up my mnemonic passphrase for the opt in process and understand it is my responsibility to save and back it up.',
        CATAPULT_OPT_IN_UNDERSTAND_FUNDS: 'I understand that only the funds in my account on the snapshot block are the funds that will be included in my XYM account balance at Symbol launch. Any account balance changes after this opt transaction but before the snapshot will be reflected at Symbol launch.',
        GENERAL_MIN_SIGNATURES_REQUIRED: 'Minimum signatures required',
        SYMBOL_OPTIN_INITIATOR: 'Opt In initiator',
        CATAPULT_BACKUP_WALLET: 'Backup Symbol Wallet',
        CATAPULT_DOWNLOAD_WALLET: 'Download Encrypted Symbol Wallet',
        MNEMONIC: 'Mnemonic',
        CATAPULT_OPT_IN_LOADING: 'Fetching Opt In Status...',
        COSIGNER_NOT_OPTIN: 'Cosigner has not started the opt in process yet',
        SYMBOL_ADDRESS: 'Symbol Address',
        YOUR_SYMBOL_ADDRESS: 'Your Symbol Address',
        YOUR_SYMBOL_MNEMONIC: 'Your Symbol Mnemonic',
        SYMBOL_COSIGNERS: 'Symbol Cosigners',
        CATAPULTOPTIN_CONFIRM_SIGN: 'Sign Symbol Opt In',
        CATAPULTOPTIN_FIRST_DO_NORMAL: 'To do the Multisig Opt In you must first do the Normal Opt In',
        CATAPULTOPTIN_ENCRYPTED_WALLET_TEXT: 'Please create a new password to encrypt your Symbol wallet backup and then press the download button.',
        CATAPULTOPTIN_REVIEW_NORMAL_RESULT: 'Review my Symbol account opt in information',
        CATAPULTOPTIN_GENERATE_NEW_SYMBOL: 'Generate new Symbol Mnemonic',
        CATAPULTOPTIN_VRF_KEYS_DESCRIPTION: 'VRF keys are used for harvesting on symbol. If you own a node and want to start harvesting the first blocks, you should activate this option and save the keys to put them back in your symbol node configuration. If you don\'t select this option, you will also be able to generate new keys once mainnet is alive',
        OPTIN_FORM_PASSWORD_FIELD_PLACEHOLDER: 'Enter your regular NEM wallet password',
        OPTIN_NEW_PASSWORD: 'New Password',
        SYMBOL_PASSWORD_REQUIREMENT: "Password must be at least 8 characters",
        SYMBOL_WALLET_CREATING_TYPE_INFO: 'Please choose the way to create your Symbol account',
        SYMBOL_WALLET_CREATING_BY_ENTROPY_TYPE_INFO: 'Generate random account',
        SYMBOL_WALLET_CREATING_BY_LEDGER_IMPORT_TYPE_INFO: 'Import Symbol account from Ledger',
        SYMBOL_SIGNUP_CREATE_WALLET_ADD_ENTROPY_INFO_1: 'We are now going to generate your primary private key.',
        SYMBOL_SIGNUP_CREATE_WALLET_ADD_ENTROPY_INFO_2: 'Please click on start and move your cursor around to add more entropy.',
        OPTIN_WELCOME_TITLE: 'Welcome to Symbol Opt-in',
        OPTIN_INFO_1: 'The Symbol mainnet has not launched yet.',
        OPTIN_INFO_2: 'You can prepare by opting in your NEM NIS1 accounts with this module ',
        OPTIN_INFO_3: 'to migrate your balance and namespaces to the Symbol network.',
        OPTIN_LINK_INFO: 'Get all information about Opt-in process ',
        OPTIN_NAMESPACES_TITLE: 'Opt-in Namespaces',
        OPTIN_NAMESPACES_INFO:'Now you can Opt-in the Namespace(s) you own on NEM NIS1. This provides a placeholder for the same Namespace(s) on the Symbol blockchain.',
        OPTIN_NAMESPACES_LINK: 'Get all information about Namespace Opt-in ',
        OPTIN_NAMESPACES_SELECT: 'Select the Namespaces you want to Opt-in:',
        OPTIN_VRF_TITLE: 'Include VRF keys',
        OPTIN_VRF_INFO:'VRF keys allow your account to harvest block rewards. If you plan to hold over 10,000 XYM in your account after launch and would like to harvest on Symbol blockchain, you need to add VRF keys to the Opt-in process.',
        OPTIN_VRF_LINK: 'Get all information about VRF keys ',
        OPTIN_VRF_KEYS:'Add VRF Keys',
        OPTIN_VRF_PUBLIC: 'VRF Public Address',
        OPTIN_VRF_PRIVATE: 'VRF Private Key',
        OPTIN_TAC_TITLE:'Terms and Conditions',
        OPTIN_TAC_TEXT:'terms and conditions',
        OPTIN_TAC_INFO_1:'The Opt-in process is a feature launched by Symbol Chain Limited with the aim of helping NIS1 users migrate their balances to their new Symbol network. It is a process defined under certain parameters that all users who adhere to it have to comply with.',
        OPTIN_TAC_INFO_2:'Symbol Chain Limited will not be liable for any incidents outside of the terms and conditions specified below.',
        OPTIN_TAC_READ_ACCEPT: 'I have read and accept the ',
        OPTIN_CONFIRM_TITLE:'Confirm Symbol Opt-in',
        OPTIN_CONFIRM_INFO:'We are almost done! This will be the information that will be migrated to the new Symbol chain. Review it carefully and sign with your NEM key to finish your Opt-in.',
        OPTIN_CONFIRM_OPTIN:'Confirm Opt-in',
        HERE:'here',
        OPTIN_ENTER_PASSWORD: 'Enter your NEM NIS1 password to sign the Opt-in',
        OPTIN_LOADING: 'Fetching Opt In data...',
        OPTIN_FINISHED: 'Post launch Opt-in will open soon. Please check back for a new version after Symbol launch.',
        CREATE_SYMBOL_ACCOUNT: 'Create your Symbol account',
        OPTIN_SYMBOL_READY: 'Your Symbol account is ready',
        OPTIN_COPY_SUCCESS: 'Copied!',
        OPTIN_TYPE_SELECT: 'Select the way you opted in this wallet',
        CATAPULT_OPT_IN_ERROR_TOO_MUCH_COSIGNATORIES: 'This account has more than 8 cosignatories. Opt In protocol only allows multisig accounts with less than 9 cosignatories'

    });

}

export default PortugueseBRProvider;

'''
'''--- src/app/modules/languages/ru.js ---
function RussianProvider($translateProvider) {
    'ngInject'

    $translateProvider.translations('ru', {

        // HEADER COMPONENT
        WALLET_NAME_1: 'NEM',
        WALLET_NAME_2: 'Wallet',
        APP_NAME_SUB: 'Интерфейс безопасного подключения к платформе NEM',
        HEADER_LOGIN_BUTTON: 'Вход',
        HEADER_SIGNUP_BUTTON: 'Регистрация',
        HEADER_DASHBOARD: 'Главная',
        HEADER_WALLET: 'Кошелёк',
        HEADER_SERVICES: 'Сервис',
        HEADER_EXPLORER: 'Обозреватель',
        HEADER_NODE: 'Узел',
        HEADER_ACCOUNT: 'Аккаунт',
        HEADER_LANG_TITLE: 'Язык интерфейса',
        HEADER_LANG_SELECT: 'Выбрать язык',
        HEADER_NODE_BLOCK_HEIGHT: 'Высота блока',
        HEADER_NODE_CURRENT_NODE: 'Текущий узел',
        HEARDER_NODE_LIST: 'Список узлов',
        HEADER_NODE_SELECT: 'Выбрать узел',
        HEADER_NODE_CUSTOM: 'Другой узел',
        HEADER_NODE_CONNECT: 'Подключиться',
        HEADER_NODE_CUSTOM_INFO: 'IP-адрес узла или домен',
        HEADER_NODE_CUSTOM_TOOLTIP: 'Введите здесь собственный IP-адрес узла NIS',
        HEADER_PURGE: 'Очистка',
        HEADER_PURGE_MESSAGE: 'Пожалуйста, подтвердите очистку локального хранилища. Нажав на кнопку "OK" все сведения о Ваших кошельках в локальном хранилище текущего браузера будут удалены. Пожалуйста, убедитесь в том, что Вы сделали резервную копию всех кошельков для гарантии безопасности Ваших средств.',
        HEADER_OFFLINE_TX: 'Prepare an offline transaction',
        HEADER_RELEASE_TX: 'Release a transaction',

        // FOOTER COMPONENT
        FOOTER_POWERED_BY_1: 'При поддержке',
        FOOTER_POWERED_BY_2: 'NEM technology.',
        FOOTER_VERSION: 'Версия',

        // DASHBOARD MODULE
        DASHBOARD_TITLE: 'Главная',
        DASHBOARD_UNCONFIRMED: 'Неподтвержденные',
        DASHBOARD_CONFIRMED: 'Подтвержденные',
        DASHBOARD_HARVEST_INCOME_TITLE: 'Сбор комиссий на последних 25 блоках',
        DASHBOARD_HARVEST_INCOME_NOTE: 'Только блоки с комиссией выше 0',
        DASHBOARD_HARVEST_INCOME_MESSAGE: 'Нет комиссий на последних 25 блоках',
        DASHBOARD_NEWS_TITLE: 'Последние новости',
        DASHBOARD_HARVESTED_BLOCKS_TITLE: 'Собранные блоки',
        DASHBOARD_HARVESTED_BLOCKS_TH: 'Комиссия',
        DASHBOARD_MARKET_INFO_TITLE: 'Информация о рынке',
        DASHBOARD_MARKET_INFO_CAP: 'Рыночная капитализация',
        DASHBOARD_MARKET_INFO_PRICE: 'Цена',
        DASHBOARD_MARKET_INFO_VOLUME: 'Объем за 24ч.',
        DASHBOARD_MARKET_INFO_CHANGES: 'Изменения в процентах',
        DASHBOARD_MARKET_INFO_CHANGES_1H: '1ч.',
        DASHBOARD_MARKET_INFO_CHANGES_24H: '24ч.',
        DASHBOARD_MARKET_INFO_CHANGES_7D: '7д.',
        DASHBOARD_MARKET_INFO_NOTE: '<a href="http://coinmarketcap.com/" target="_blank">CoinMarketCap</a> данные обновляются каждые 5 минут',
        DASHBOARD_NOTICE_1: 'Добро пожаловать в NanoWallet Beta!',
        DASHBOARD_NOTICE_2: 'Пожалуйста, <a href="https://github.com/NemProject/NanoWallet" target="_blank">сообщите об ошибке.</a>',
        DASHBOARD_NOTICE_3: 'Команда NEM не несёт ответственности за любые потери средств, в связи с использованием NanoWallet в главной сети (mainnet). Мы рекомендуем, в первую очередь, ознакомиться с NanoWallet в тестовой сети (testnet). Пользователи несут ответственность за сохранность своих средств, резервных копий и закрытых ключей.',
        DASHBOARD_NOTICE_4: 'Не используйте главную сеть (mainnet), если не уверены, что Ваши средства надежно защищены. Мы рекомендуем записать закрытые ключи на бумаге и хранить её в безопасном месте. Кроме того, Вы можете импортировать свои аккаунты в LightWallet/NCC.',
        DASHBOARD_NOTICE_5: 'Благодарим за Ваше участие!',

        // GENERAL
        GENERAL_BLOCK: 'Блок',
        GENERAL_BLOCKS: 'Блоки',
        GENERAL_NO_RESULTS: 'Нет результатов',
        GENERAL_ACCOUNT: 'Аккаунт',
        GENERAL_ACCOUNTS: 'Аккаунты',
        GENERAL_MULTISIG_ACCOUNT: 'Мультиподписной аккаунт',
        GENERAL_AMOUNT: 'Сумма',
        GENERAL_MESSAGE: 'Сообщение',
        GENERAL_DATE: 'Дата',
        GENERAL_TAB_NORMAL: 'Обычная',
        GENERAL_TAB_SEND: 'Отправка',
        GENERAL_TAB_MULTISIG: 'Мультиподпись',
        GENERAL_TOTAL: 'Всего',
        GENERAL_REMOVE: 'Удалить',
        GENERAL_MOSAIC: 'Мозайка',
        GENERAL_FEE: 'Комиссия',
        GENERAL_LEVY: 'Сбор',
        GENERAL_LEVY_TYPES: 'Типы сборов',
        GENERAL_LEVY_TYPES_NOTE: 'I - постоянная комиссия; II - процентное соотношение',
        GENERAL_LEVY_TYPE_1: 'Постоянная комиссия',
        GENERAL_LEVY_TYPE_2: 'Процентное соотношение',
        GENERAL_SEND: 'Отправить',
        GENERAL_TO: 'Получатель',
        GENERAL_HASH: 'Hash',
        GENERAL_HASH_FUNCTION: 'Hash функция',
        GENERAL_NAME: 'Имя',
        GENERAL_INFORMATION: 'Информация',
        GENERAL_ADDRESS: 'Адрес',
        GENERAL_PUBLIC_KEY: 'Публичный ключ',
        GENERAL_PRIVATE_KEY: 'Приватный ключ',
        GENERAL_CLEAR_ALL: 'Очистить всё',
        GENERAL_CLOSE: 'Закрыть',
        GENERAL_COMING_SOON: 'Скоро',
        GENERAL_NONE: 'Ничего',
        GENERAL_DROPBOX: 'Переместите файлы сюда или нажмите, чтобы выбрать',
        GENERAL_NETWORK_FEE: 'Комиссия сети',
        GENERAL_YES: 'Да',
        GENERAL_NO: 'Нет',
        GENERAL_TAGS: 'Теги',
        GENERAL_SINK: 'Sink',
        GENERAL_SINK_ADDRESS: 'Sink Address',
        GENERAL_STORAGE: 'Хранение',
        GENERAL_REASON: 'Причина',
        GENERAL_TRANSACTION_HASH: 'Hash транзакции',
        GENERAL_TRANSACTION_ID: 'ID транзакции',
        GENERAL_OWNER: 'Создатель',
        GENERAL_RESULTS: 'Результаты',
        GENERAL_RESULT: 'Результат',
        GENERAL_STATUS: 'Статус',
        GENERAL_LOCATION: 'Местонахождение',
        GENERAL_ACTION: 'Действие',
        GENERAL_ACTIONS: 'Действия',
        GENERAL_ADD: 'Добавить',
        GENERAL_ADDED: 'Добавлено',
        GENERAL_REMOVED: 'Удалено',
        GENERAL_COSIGNATORY: 'Подписант',
        GENERAL_COSIGNATORIES: 'Подписанты',
        GENERAL_PROCESSING: 'В процессе',
        GENERAL_ACCOUNT_LABEL: 'Метка аккаунта',
        GENERAL_OPTIONAL: '(не обязательно)',
        GENERAL_ERROR: 'Ошибка',
        GENERAL_EXAMPLE: 'Пример',
        GENERAL_PUBLIC: 'Публичный',
        GENERAL_NAMESPACES: 'Пространства имён',
        GENERAL_NAMESPACE: 'Пространство имён',
        GENERAL_SUB_NAMESPACES: 'Подпространства имён',
        GENERAL_SUB_NAMESPACE: 'Подпространство имён',
        GENERAL_MOSAICS: 'Мозайки',
        GENERAL_VALUE: 'Значение',
        GENERAL_CONNECTION_ERROR: 'Ошибка подключения: узел недоступен или отсутствует подключение к интернету',
        GENERAL_HISTORY: 'История',
        GENERAL_REVEAL: 'Раскрыть',
        GENERAL_QR: 'QR-код',
        GENERAL_UPDATE:  'Обновить',
        GENERAL_UNKNOWN: 'Неизвестно',
        GENERAL_IMPORTANCE: 'Важность',
        GENERAL_TRANSACTIONS: 'Транзакции',
        GENERAL_REGISTER: 'Зарегистрировать',
        GENERAL_CREATE: 'Создать',
        GENERAL_RENEW: 'Продлить',
        GENERAL_CHARACTERS_LEFT: 'Осталось символов',
        GENERAL_CURRENCY: 'Валюта',
        GENERAL_EDIT: 'Редактировать',
        GENERAL_SEND_XEM: 'Отправить XEM',
        GENERAL_ACTIVE: 'Active',
        GENERAL_INACTIVE: 'Inactive',
        GENERAL_ACTIVATING: 'Activating',
        GENERAL_DEACTIVATING: 'Deactivating',
        GENERAL_REMOTE: 'Remote',
        GENERAL_WARNING: 'Warning',
        GENERAL_SCORE: 'Score',
        GENERAL_LENGTH: 'Length',
        GENERAL_GO_BACK: 'Go back',
        GENERAL_NEXT: 'Next',
        GENERAL_START: 'Start',
        GENERAL_ALIAS: 'Alias',
        GENERAL_CONTACTS: 'Contacts',
        GENERAL_ENCRYPTED: 'Encrypted',
        GENERAL_UNENCRYPTED: 'Unencrypted',
        GENERAL_HEXADECIMAL: 'Hexadecimal',
        GENERAL_SELECT_ACCOUNT: 'Select account',
        GENERAL_INVOICE: 'Invoice',

        // HOME MODULE
        HOME_UNSUPPORTED_BROWSER: 'Простите, но Вы не можете безопасно использовать NanoWallet в этом браузере...',
        HOME_RECOMMENDED_BROWSERS: 'Рекомендуемые браузеры:',
        HOME_FEATURE_STAND_BY: 'Place the cursor on a feature to show information.',
        HOME_FEATURE_1: 'Send and receive XEM easily and almost instantly, only 1 minute block time !',

        // TRANSFER TRANSACTION MODULE
        TRANSFER_TRANSACTION_TITLE: 'Отправка и получение',
        TRANSFER_TRANSACTION_NAME: 'Отправка транзакции',
        TRANSFER_TRANSACTION_MULTISIG_NAME: 'Отправки транзакции с мультиподписью',
        TRANSFER_TRANSACTION_INVOICE: 'Создание счёта',
        TRANSFER_TRANSACTION_TAB_INVOICE: 'Счёт',
        TRANSFER_TRANSACTION_MOSAIC_TRANSFER: 'Отправить мозайку',
        TRANSFER_TRANSACTION_ATTACH_MOSAIC: 'Прикрепить мозайку',
        TRANSFER_TRANSACTION_ATTACH: 'Прикрепить',
        TRANSFER_TRANSACTION_MOSAICS_ATTACHED: 'Прикреплённые мозайки',
        TRANSFER_TRANSACTION_ENCRYPT_MESSAGE: 'Зашифровать сообщение',
        TRANSFER_TRANSACTION_MESSAGE_TYPE: 'Message type',
        /*TRANSFER_TRANSACTION_HEX_MESSAGE: 'Hex message',
        TRANSFER_TRANSACTION_ENCRYPT_TOOLTIP: 'У получателя нет открытого ключа, видимого в сети',
        TRANSFER_TRANSACTION_ENCRYPT_TOOLTIP_MULTISIG: 'Нет зашифрованных сообщение через мультиподписной аккаунт',*/

        // TRANSACTION LINES
        LINE_TX_DETAILS_FROM: 'Отправитель',
        LINE_TX_DETAILS_FROM_MULTISIG: 'Мультиподписи',
        LINE_TX_DETAILS_WAITING: 'Транзакция ожидает очереди',
        LINE_TX_DETAILS_NEED_SIG: 'Требуется подпись соподписанта',
        LINE_TX_DETAILS_NEED_SIG_2: 'Эта транзакция нуждается в Вашей подписи',
        //LINE_TX_DETAILS_MESS_ENC: 'Зашифровано',
        LINE_TX_DETAILS_MESS_DEC: 'Расшифровать',
        LINE_TX_DETAILS_HASH: 'Hash',
        LINE_TX_DETAILS_DEC_MESS: 'Расшифровать сообщение',
        LINE_TX_DETAILS_MOS_ATTACHED: 'Прикреплённые мозайки',
        LINE_TX_DETAILS_LEVY_TYPE_1: 'Постоянная',
        LINE_TX_DETAILS_LEVY_TYPE_2: 'Процентное соотношение',
        LINE_TX_DETAILS_ISSUER: 'Эмитент',
        LINE_TX_DETAILS_MULTISIG_FEE: 'Комиссия за мультиподпись',
        LINE_TX_DETAILS_MULTISIG_HASH: 'Hash мультиподписи',
        LINE_TX_DETAILS_COSIGN: 'Подпись транзакции',
        LINE_TX_DETAILS_SIGNATURES: 'Подпись(и)',
        LINE_TX_DETAILS_COSIGNATORY: 'Соподписант',
        LINE_TX_DETAILS_TIMESTAMP: 'Отметка времени',
        LINE_TX_DETAILS_MOS_CREATE: 'Создание мозайки',
        LINE_TX_DETAILS_MOS_EDIT: 'Редактирование мозайки',
        LINE_TX_DETAILS_NS_CREATE: 'Создание пространства имён',
        LINE_TX_DETAILS_NS_NEW_SUB: 'Новое подпространство имён',
        LINE_TX_DETAILS_NS_ROOT: 'Корневое пространство имён',
        LINE_TX_DETAILS_RECIPIENT: 'Получатель',
        LINE_TX_DETAILS_MULTISIG_CREATE: 'Создание мультиподписного аккаунта',
        LINE_TX_DETAILS_MULTISIG_EDIT: 'Редактирование мультиподписного аккаунта',
        LINE_TX_DETAILS_MULTISIG_MOD: 'Модификации',
        LINE_TX_DETAILS_MULTISIG_MIN_COSIG: 'Мин. соподписантов',
        LINE_TX_DETAILS_MULTISIG_AFFECTED: 'Затронутый аккаунт',

        // IMPORTANCE MODULE
        IMPORTANCE_TRANSFER_NAME: 'Транзакция передачи важности',
        IMPORTANCE_TRANSFER_MULTISIG_NAME: 'Транзакций передачи важности с мультиподписью',
        IMPORTANCE_TRANSFER_MODE: 'Режим',
        IMPORTANCE_TRANSFER_MODE_1: 'Активация',
        IMPORTANCE_TRANSFER_MODE_2: 'Деактивация',
        IMPORTANCE_TRANSFER_TITLE: 'Управление делегированным аккаунтом',
        IMPORTANCE_TRANSFER_MULTISIGNATURE_TITLE: 'Управление делегированным аккаунтом мультиподписного аккаунта',
        IMPORTANCE_TRANSFER_CUSTOM_KEY: 'Использовать другой публичный ключ',
        IMPORTANCE_TRANSFER_MODE_SELECT: 'Выбрать режим',
        IMPORTANCE_TRANSFER_REMOTE_ACCOUNT: 'Удалённый аккаунт',
        IMPORTANCE_TRANSFER_REMOTE_PUBLIC: 'Публичный ключ удалённого аккаунта',
        IMPORTANCE_TRANSFER_INFO_PART_1: 'После включения транзакции за активацию/деактивацию в блок, должно пройти 6 часов, чтобы изменения вступили в силу.',
        IMPORTANCE_TRANSFER_INFO_PART_2: 'Убедитесь, что Вы уже не активировали делегирование аккаунта ранее (если аккаунт импортирован). Если это так, Вы можете использовать старый публичный ключ делегированного аккаунт, для отключения делегирования (при необходимости)',
        IMPORTANCE_TRANSFER_INFO_PART_MULTISIG: 'Для мультиподписных аккаунтов, только соподписант, который инициировал операцию передачи важности, может запускать/останавливать сбор блоков. Если какой-то другой соподписант желает вернуть контроль на сбор блоков, ему просто необходимо деактивировать/актировать сбор блоков.',
        IMPORTANCE_TRANSFER_NO_BLOCKS_HARVESTED: 'Нет собранных блоков',
        IMPORTANCE_TRANSFER_HARVESTING_PANEL: 'Панель сбора блоков',
        IMPORTANCE_TRANSFER_REMOTE_ACTIVATING: 'Вы должны подождать, пока удаленный статус изменится на «Активирован», чтобы начать делегированный сбор блоков.',
        IMPORTANCE_TRANSFER_REMOTE_INACTIVE: 'Вы должны отправить транзакцию в левой панели, чтобы активировать Ваш удалённый аккаунт.',
        IMPORTANCE_TRANSFER_MULTISIG_NOT_INITIATOR: 'Вы не соподписант, который активировал удаленный аккаунт, поэтому не можете запускать/останавливать делегированный сбор блоков.',
        IMPORTANCE_TRANSFER_PRIVATE_KEY_PLACEHOLDER: 'Показать приватный ключ делегированного аккаунта',
        IMPORTANCE_TRANSFER_DELEGATED_KEYS: 'Ключ делегированного аккаунта',
        IMPORTANCE_TRANSFER_HARVESTING_STATUS: 'Harvesting status',
        IMPORTANCE_TRANSFER_START_HARVESTING: 'Start delegated harvesting',
        IMPORTANCE_TRANSFER_STOP_HARVESTING: 'Stop delegated harvesting',
        IMPORTANCE_TRANSFER_ACTIVATE_DEACTIVATE_REMOTE: 'Activate / Deactivate the delegated account',
        IMPORTANCE_TRANSFER_SHOW_DELEGATED_KEYS: 'Show delegated account keys',

        // CREATE MOSAIC MODULE
        MOSAIC_DEFINITION_TITLE: 'Создание мозайки',
        MOSAIC_DEFINITION_NAME: 'Транзакция создания мозайки',
        MOSAIC_DEFINITION_MULTISIG_NAME: 'Мультиподписная транзакция создания мозайки',
        MOSAIC_DEFINITION_QUANTITY: 'Количество',
        MOSAIC_DEFINITION_DIV: 'Делимость',
        MOSAIC_DEFINITION_TOTAL_SUPPLY: 'Общая поставка',
        MOSAIC_DEFINITION_FINAL_NAME: 'Полное имя',
        MOSAIC_DEFINITION_DESCRPITION: 'Описание',
        MOSAIC_DEFINITION_INITIAL_SUPPLY: 'Первоначальная поставка',
        MOSAIC_DEFINITION_MUTABLE_SUPPLY: 'Изменяемый объем поставок',
        MOSAIC_DEFINITION_TRANSFERABLE: 'Разрешить передачу',
        MOSAIC_DEFINITION_PROPERTIES: 'Свойства',
        MOSAIC_DEFINITION_MOSAIC_PROPERTIES: 'Свойства мозайки',
        MOSAIC_DEFINITION_REQUIRES_LEVY: 'Требовать налог',
        MOSAIC_DEFINITION_LEVY_LIMITATION: 'UI-ограничение: в настоящее время в качестве налога допускается только мозайка.',
        MOSAIC_DEFINITION_LEVY_SELECT_MOSAIC: 'Выберите облагаемую налогом мозайку',
        MOSAIC_DEFINITION_LEVY_ADDRESS: 'Номер счёта налоговой',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE: 'Тип сбора',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_1: 'Фиксированный',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2: 'Процент',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_1_NOTE: 'Выбрав фиксированный сбор, будет взиматься постоянная плата в размере:',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE: 'Выбрав процент, будет взиматься линейная плата:',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE_2: 'Отправка',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE_3: 'будет означать взимание',
        MOSAIC_DEFINITION_PARENT: 'Родительское пространство имён',
        MOSAIC_DEFINITION_INFORMATION_TITLE: 'Создание мозайки',
        MOSAIC_DEFINITION_INFORMATION: 'Хотите узнать больше о мозайках?',
        MOSAIC_DEFINITION_INFORMATION_1: 'Максимальная длина имени мозайки составляет 32 символа. Разрешённые символы:',
        MOSAIC_DEFINITION_INFORMATION_2: 'Первым символом должна быть буква из алфавита.',
        MOSAIC_DEFINITION_INFORMATION_3: 'Описание не может привышать длину 512 символов. Нет никаких ограничений на символы, используемые в описании.',
        MOSAIC_DEFINITION_INFORMATION_4: 'Поведение мозайки может быть настроено с помощью набора свойства:',
        MOSAIC_DEFINITION_INFORMATION_5: 'Объем поставки должен быть целым числом. Поставка должна быть в пределах диапозона от 0 до 9,000,000,000.',
        MOSAIC_DEFINITION_INFORMATION_6: 'Делимость определяет, до какого десятичного знака мозайку можно разделить. Например, делимость равную 3-м означает, что мозайку можно разделить на мельчайшие части до 0.001 мозайки. Делимость должна быть в диапазоне от 0 до 6.',
        MOSAIC_DEFINITION_INFORMATION_7: 'Если этот флажок установлен, то Вы сможете изменить объем поставки на более позднем этапе, в противном случае объём поставки будет неизменым.',
        MOSAIC_DEFINITION_INFORMATION_8: 'Разрешить передачу мозайки между аккаунтами, кроме создателя мозайки. Если свойство \'Передаваемый\' не выбано, то получателем или отправителем может быть только создатель мозайки. Если этот флажок установлен, мозайка можете быть передана на любой счёт.',
        MOSAIC_DEFINITION_INFORMATION_9: 'Создатель мозайки может совершать специальную комиссию с отправителя и отправлять сборы на аккаунт по своему выбору (таким образом, создатель может указать собственный счёт в качестве получателя этой пошлины). Сбор комиссии выглядит следующим образом:',
        MOSAIC_DEFINITION_INFORMATION_10: 'Мозайка использующая сбор. Можно выбрать любую существующую мозайку.',
        MOSAIC_DEFINITION_INFORMATION_11: 'Получатель пошлины. Это может быть любой счёт.',
        MOSAIC_DEFINITION_INFORMATION_12: 'Размер комиссии. Интерпретация зависит от поля \'тип комиссии\', смотрите выше.',
        MOSAIC_DEFINITION_INFORMATION_13: 'Поддреживаются два типа оплаты комиссий: фиксированная и оплата в процентах.',
        MOSAIC_DEFINITION_INFORMATION_14: 'Плата определяется фиксированной и, таким образом, не зависит от количества, которе передается.',
        MOSAIC_DEFINITION_INFORMATION_15: 'Плата определяется в процентах и, таким образом, линейно возрастает, в зависимости от количество передаваемых мозайк.',
        MOSAIC_DEFINITION_INFORMATION_16: 'Отправка мозайки в блокчейне NEM требует комиссию. Точная комиссия расчитывается в зависимости от их общего количества и сколько будет отправлено в течении транзакции. За передачу любой <b>мозайки малого бизнеса</b> комиссия составляет 0.05 XEM. Это мозайки с делимостью 0 и количеством ≤ 10000.',
        MOSAIC_DEFINITION_INFORMATION_17: 'If you own 100% of the supply, you can overwrite all the mosaic properties by sending a creation transaction again with the same "namespace:mosaic" name.',

        // EDIT MOSAIC MODULE
        MOSAIC_SUPPLY_CHANGE_TITLE: 'Изменить объём поставки мозайки',
        MOSAIC_SUPPLY_CHANGE_NAME: 'Транзакция изменения объёма поставки мозайки',
        MOSAIC_SUPPLY_CHANGE_MULTISIG_NAME: 'Мультиподписная транзакция изменения объёма поставки мозайки',
        MOSAIC_SUPPLY_CHANGE_SELECT: 'Выбрать мозайку',
        MOSAIC_SUPPLY_CHANGE_TYPE: 'Изменить тип',
        MOSAIC_SUPPLY_CHANGE_TYPE_1: 'Создать',
        MOSAIC_SUPPLY_CHANGE_TYPE_2: 'Удалить',
        MOSAIC_SUPPLY_CHANGE_SUPPLY: 'Объём поставки',
        MOSAIC_SUPPLY_CHANGE_CURRENT_SUPPLY: 'Текущий объём поставки',
        MOSAIC_SUPPLY_CHANGE_AMOUNT: 'Изменить сумму',
        MOSAIC_SUPPLY_CHANGE_RES_SUPPLY: 'Итоговый объём поставки',

        // NAMESPACE MODULE
        NAMESPACE_PROVISION_TITLE: 'Создать пространство и субпространство имён',
        NAMESPACE_PROVISION_NAME: 'Транзакция создания пространства имён',
        NAMESPACE_PROVISION_MULTISIG_NAME: 'Мультиподписная транзакция создания пространства имён',
        NAMESPACE_PROVISION_PARENT: 'Родительское пространство имён (не включая 3 уровень)',
        NAMESPACE_PROVISION_NEW_ROOT: 'Новое корневое пространство имён',
        NAMESPACE_PROVISION_NS: 'Пространство имён',
        NAMESPACE_PROVISION_NS_NAME: 'Название пространства имён',
        NAMESPACE_PROVISION_RESTRICTIONS: 'Ограничения пространства имён',
        NAMESPACE_PROVISION_INFORMATION_1: 'Пространства имён имеют определённые ограничения в отношении разрешённых символов в частях, а также длины части. Корневому пространству имён разрешено иметь длину до 16 символов, в то время как подпространствам имён разрешено иметь длину до 64 символов. Допустимые символы:',
        NAMESPACE_PROVISION_INFORMATION_2: 'Название части должно начинаться с буквы алфавита, например \'1alice\' не разрешено. Некоторые названия зарезервированы, следовательно, не допускаются в качества названия части пространства имён. Среди недопустимых названий частей пространства имён:',
        NAMESPACE_PROVISION_INFORMATION_3: 'Этот список не является окончательным и может быть расширен в будущем. Таким образом, \'user.alice\' или \'alice.user\' не разрешены в системе имён NEM. Пространство имён может иметь до 3-х частей, например, \'qm.metals.silver\' допустимо, в то время как \'qm.metals.silver.coin\' не допустимо.',

        // RENEW NAMESPACE MODULE
        RENEW_NS_TITLE: 'Продление пространства имён',
        RENEW_NS_NONE: 'Нет пространств имён для продления',
        RENEW_NS_INFORMATION_TITLE: 'Продление пространства имён',
        RENEW_NS_INFORMATION_TITLE_1: 'Комиссии',
        RENEW_NS_INFORMATION_TITLE_2: 'Корневые пространства имён',
        RENEW_NS_INFORMATION_TITLE_3: 'Период продления',
        RENEW_NS_INFORMATION_1: 'Продление пространства имён стоит столько же, сколько и регистрация нового пространства имён - 100 XEM',
        RENEW_NS_INFORMATION_2: 'Необходимо продлить только корневое пространство имён. Все подпространства пространства имён будут автоматически продлены, после продления корневого пространства имён.',
        RENEW_NS_INFORMATION_3: 'Контракты с пространством имён заключаются на основе договоров аренды на срок до одного года. Контракт может быть продлен за один месяц до или после даты его истечения.',
        RENEW_NS_INFORMATION_4: 'Если пространство имён не продлить во время, все подпространства имён и мозайки, созданые под ним, будут потеряны.',
        RENEW_NS_ALERT_PART_1: '<b>Предупреждение!</b> Пространство имён:',
        RENEW_NS_ALERT_PART_2: 'истекает через месяц! ',
        RENEW_NS_ALERT_PART_3: 'Чтобы получить дополнительную информацию, перейдите на <b>страницу продления пространства имён</b>.',

        // ACCOUNT MODULE
        ACCOUNT_TITLE: 'Аккаунт',
        ACCOUNT_ACCOUNT_INFORMATION: 'Информация об аккаунте',
        ACCOUNT_IMPORTANCE_SCORE: 'Важность',
        ACCOUNT_VESTED_BALANCE: 'Активный баланс',
        ACCOUNT_HARVESTING: 'Сбор блоков',
        ACCOUNT_REMOTE_STATUS: 'Удаленный статус',
        ACCOUNT_DELEGATED_PUBLIC: 'Публичный ключ',
        ACCOUNT_HARVESTED_BLOCKS: 'Собранные блоки',
        ACCOUNT_START_STOP_HARVESTING: 'Старт / Стоп делегированного сбора блоков',
        ACCOUNT_HARVESTING_NOTE: 'Если Вы уже запускали сбор блоков <b>используя NanoWallet</b> и Ваше локальное хранилище было очищено, выберите узел, который использовался, для восстановления прежнего состояния. (Ваш сбор блоков не останавливался).',
        ACCOUNT_HARVESTING_NODE_SELECT: 'Выберите узел для сбора блоков',
        ACCOUNT_HARVESTING_START: 'Запустить делегированный сбор блоков',
        ACCOUNT_HARVESTING_STOP: 'Остановить делегированный сбор блоков',
        ACCOUNT_HARVESTING_NO_SLOTS: 'Нет свободных слотов на выбранном узле, пожалуйста, выберите другой',
        ACCOUNT_HARVESTING_BELOW_THRESHOLD: 'Вам необходимо иметь 10,000 XEM на активном балансе, чтобы начать делегированный сбор блоков',
        ACCOUNT_ACCOUNT_SELECT: 'Выбрать другой аккаунт',
        ACCOUNT_ACCOUNT_SELECT_LABEL: 'Сменить аккаунт',
        ACCOUNT_WALLET_KEYS: 'Кошелёк и ключи',
        ACCOUNT_ADD_NEW_ACCOUNT: 'Добавить новый аккаунт',
        ACCOUNT_ADD_NEW_ACCOUNT_BTN: 'Добавить новый аккаунт в кошелёк',
        ACCOUNT_PRIVATE_KEY_NOTE: 'Ваш приватный ключ хранит всю информацию о Вашем аккаунте. Убедитесь, что он хранится в надёжном месте, где-нибудь <b><u>не в сети</u></b>: зашифруйте с помощью пароля в .wlt файл, запишите на листе бумаги, на картинке или скачайте <b><u>экспортировав QR кошелёк</u></b>.',
        ACCOUNT_PRIVATE_KEY_SHOW: 'Показать приватный ключ',
        ACCOUNT_EXPORT_MOBILE: 'Экспорт в мобильный телефон',
        ACCOUNT_INFO_QR_BTN: 'Информация об аккаунте (QR)',
        ACCOUNT_WALLET_QR_BTN: 'QR-код кошелька',
        ACCOUNT_WALLET_QR_BTN_2: 'QR-код кошелька (Android и IOS)',
        ACCOUNT_BACKUP_WALLET: 'Резервная копия',
        ACCOUNT_BACKUP_WALLET_NOTE: 'Это <b><u>очень важно</u></b>, потому что резервные копии необходимы для восстановления Ваших кошельков, иначе Ваши XEM будут потеряны.',
        ACCOUNT_BACKUP_WALLET_DOWNLOAD: 'Скачать кошелёк',
        ACCOUNT_INFO_QR_TITLE: 'Информация об аккаунте (QR)',
        ACCOUNT_WALLET_QR_NOTE: 'Этот QR-код будет использоватся для входа в мобильное приложение NEMpay',
        ACCOUNT_WALLET_QR_ANDROID_IOS_TITLE: 'QR-код кошелька для Android и IOS приложений',
        ACCOUNT_ADD_NEW_ACCOUNT_WARNING: 'Все средства выводятся с помощью Вашего приватного ключа используя BIP32, только один приватный ключ и Ваш пароль нужны для получения всех ваших других аккаунтов. <br>Поэтому <b><u>настоятельно рекомендуется</u></b> сделать резеревную копию кошелька, после добавления нового аккаунта, чтобы не пришлось повторять операцию еще раз, если локальное хранилище будет очищено.',
        ACCOUNT_CUSTOM_NODE: 'Использовать другой узел',
        ACCOUNT_NODE_FROM_LIST: 'Использовать узел из списка',
        ACCOUNT_DELEGATED_PRIVATE_KEY: 'Приватный ключ делегированного аккаунта',

        // PORTAL MODULE
        PORTAL_TITLE: 'Сервис',
        PORTAL_MULTISIG_TITLE: 'Мультиподписные аккаунты',
        PORTAL_MULTISIG_TEXT: 'Мультиподписные аккаунты являются редактируемыми контрактами, основаными на цепочке блоков. Они являются самым мощным средством финансовой защиты, позволяющие нескольким пользователям совместно управлять учётной записью.',
        PORTAL_MULTISIG_BTN_1: 'Конвертировать аккаунт в мультиподписной',
        PORTAL_MULTISIG_BTN_2: 'Редактировать существующий контракт',
        PORTAL_MULTISIG_BTN_3: 'Sign multisig transactions',
        PORTAL_HARVESTING_TITLE: 'Делегированный сбор блоков',
        PORTAL_HARVESTING_TEXT: 'Делегированный сбор блоков позволяет «майнить», даже когда Ваш аккаунт закрыт.',
        PORTAL_CHANGELLY_TITLE: 'Changelly - мгновенный обмен',
        PORTAL_CHANGELLY_TEXT: 'Используйте виджет Changelly для покупки XEM по лучшей цене!',
        PORTAL_CHANGELLY_BTN: 'Купить XEM',
        PORTAL_NS_TITLE: 'Пространства имён и подпространства',
        PORTAL_NS_TEXT: 'Пространства имён - это имена доменов. Каждое пространство имён уникально и аутентифицирует мозайки (активы), выпущенные на нём или на его поддоменах.',
        PORTAL_NS_BTN: 'Создать пространство имён',
        PORTAL_MOSAIC_TITLE: 'Мозайки',
        PORTAL_MOSAIC_TEXT: 'Мозайки NEM - это активы, которые раскрывают дополнительные свойства и другие функции. Чтобы иметь возможность создавать мозайки, учётная запись должна зарегистрировать хотя бы одно корневое пространство имён.',
        PORTAL_MOSAIC_BTN_1: 'Создать мозайку',
        PORTAL_MOSAIC_BTN_2: 'Редактировать мозайку',
        PORTAL_APOSTILLE_TITLE: 'Apostille',
        PORTAL_APOSTILLE_TEXT: 'Используйте сервис NEM Apostille для создания нотариальных заверений на основе технологии «Блокчейн», например для передачи права собственности и проверки документов.',
        PORTAL_APOSTILLE_BTN_1: 'Создать',
        PORTAL_APOSTILLE_BTN_2: 'Проверить',
        PORTAL_ADDRESS_BOOK_TEXT: 'Назначьте метки адресам, чтобы легко отслеживать контакты.',
        PORTAL_ADDRESS_BOOK_BTN: 'Управление адресной книгой',
        PORTAL_INVOICE_TEXT: 'Create an invoice to share via QR code',

        // ADDRESS BOOK MODULE
        ADDRESS_BOOK_TITLE: 'Адресная книга',
        ADDRESS_BOOK_LIST: 'Контакты',
        ADDRESS_BOOK_NAVIGATION: 'Навигация',
        ADDRESS_BOOK_NEW: 'Новый контакт',
        ADDRESS_BOOK_EDIT: 'Редактировать контакт',
        ADDRESS_BOOK_REMOVE: 'Удалить контакт',
        ADDRESS_BOOK_NEW_BTN: 'Добавить',
        ADDRESS_BOOK_EDIT_BTN: 'Сохранить',
        ADDRESS_BOOK_REMOVE_BTN: 'Удалить',
        ADDRESS_BOOK_EXPORT_BTN: 'Экспорт адресной книги',
        ADDRESS_BOOK_IMPORT_BTN: 'Импорт адресной книги',
        ADDRESS_BOOK_CONTACT_LABEL: 'Метка',
        ADDRESS_BOOK_ACCOUNT_ADDRESS: 'Адрес аккаунта',
        ADDRESS_BOOK_ACTIONS: 'Действия',
        ADDRESS_BOOK_CONFIRM_DELETE: 'Подтвердите удаление контакта из адресной книги',

        // EXPLORER MODULE NAV
        EXPLORER_NAV_HOME: 'Главная',
        EXPLORER_NAV_NSM: 'Пространства имён и мозайки',
        EXPLORER_NAV_APOSTILLES: 'Apostilles',

        // EXPLORER HOME MODULE
        EXPLORER_HOME_TITLE: 'Обозреватель - Главная',
        EXPLORER_HOME_NS: 'Ваши пространства имён',
        EXPLORER_HOME_MOSAICS: 'Ваши мозайки',
        EXPLORER_HOME_NS_MULTISIG: 'Мультиподписные владельцы пространств имён',
        EXPLORER_HOME_MOSAICS_LEVY: 'Налог мозайки',

        // EXPLORER NAMESPACES AND MOSAICS
        EXPLORER_NS_MOS_TITLE: 'Обозреватель - Пространства имён и мозайки',
        EXPLORER_NS_MOS_SELECT_MOS: 'Детали выбранной мозайки',
        EXPLORER_NS_MOS_SEARCH: 'Поиск пространства имён',

        // EXPLORER APOSTILLES MODULE
        EXPLORER_APOSTILLES_TITLE: 'Обозреватель - Apostilles',
        EXPLORER_APOSTILLES_YOURS: 'Ваши apostilles',
        EXPLORER_APOSTILLES_PUBLIC: 'Публичный sink',
        EXPLORER_APOSTILLES_NO_NTY: 'Файл nty не загружен, пожалуйста, нажмите здесь, для того, чтобы импортировать его.',

        // ACCOUNT EXPLORER
        ACCOUNTS_EXPLORER_TITLE: 'Обозреватель - Аккаунты',
        ACCOUNTS_EXPLORER_SEARCH: 'Поиск',

        // APOSTILLE HISTORY MODULE
        APOSTILLE_HISTORY_TITLE: 'Apostille история',
        APOSTILLE_HISTORY_BTN_TRANSFER: 'Передача / Разделение собственности',
        APOSTILLE_HISTORY_BACKUP: 'Резервная копия нотариальных данных',
        APOSTILLE_HISTORY_PURGE: 'Очистка нотариальных данных',

        // CREATE APOSTILLE MODULE
        APOSTILLE_CREATE_TITLE: 'Создать apostilles',
        APOSTILLE_CREATE_HELP: 'Желаете узнать больше об apostille?',
        APOSTILLE_TRANSACTION_NAME: 'Apostille транзакция',
        APOSTILLE_TRANSACTION_MULTISIG_NAME: 'Мультиподписная apostille транзакция',
        APOSTILLE_KEEP_PRIVATE: 'Приватный, передаваемый и обновляемый', // перевести
        APOSTILLE_USE_DEDICATED: 'Использовать выделенный аккаунт',
        APOSTILLE_FILES_TO_NOTARIZE: 'Файлы для нотариального заверения',
        APOSTILLE_REJECTED: 'Отклонёны',
        APOSTILLE_FILE_HASH: 'Hash файла',
        APOSTILLE_PRIVATE: 'Приватный',
        APOSTILLE_FILENAME: 'Название файла',
        APOSTILLE_NAME_TOO_LONG: 'Имя файла слишком длинное, разрешено максимум 40 символов.',
        APOSTILLE_MAX_NUMBER: 'Максимальное количество нотариально заверенных документов - 25',
        APOSTILLE_INFORMATION_TITLE: 'Создание Apostille',
        APOSTILLE_INFORMATION_1: 'Каждый загруженный файл автоматически обрабатывается с использованием параметров, установленных в левой панели. Вы можете добавить новые файлы, изменять параметры, а затем добавить несколько файлов с другими параметрами. Вы можете также переключиться на вкладку «Мультиподпись» и добавить больше файлов.',
        APOSTILLE_INFORMATION_2: '«<b>Приватный, передаваемый, и обновляемый</b>» опция означает, что хэши ваших файлов будут подписаны вашим личным ключом и отправлены на выделенную, иерархическую, детерминированную учётную запись (HD). Таким образом, никто, кроме Вас, не сможет узнать, какое содержимое было отправлено ',
        APOSTILLE_INFORMATION_3: 'Специальный HD аккаунт может быть преобразован в мультиподписной контракт, так, чтобы его можно было передавать через контракт 1 из 1 или любую m из n комбинацию. Он также может иметь дополнительную информацию, передаваемую на него с помощью сообщений с обновлениями и изменениями в исходном документе или продукте, который он представляет.',
        APOSTILLE_INFORMATION_4: 'Когда две или более стороны хотят одобрить временную метку блокчейна, например, обязывающие контракты, аккаунт, выполняющий нотариальное заверение в блокчейне, может быть помещен в n из n мультиподписной контракт.',
        APOSTILLE_INFORMATION_5: 'Для учетных записей в мультиподписном контракте, которые выбрали опцию «Приватный, передаваемый и обновляемый», закрытый ключ инициатора соподписей, используется, чтобы подписывать хэш и создавать специальный HD аккаунт, а не аккаунт, который был мультиподписным.',
        APOSTILLE_INFORMATION_6: 'HD аккаунт - это специальный аккаунт, созданный из хэш имени файла, который затем подписывается Вашим приватным ключом. Хэш, созданный в этом процессе, затем используется для создания второго приватного ключа. Этот приватный ключ отмечен в блокчейне в файле; Первая блокчейн технология, доступная только в технологии Apostille.',
        APOSTILLE_INFORMATION_7: 'Специальный HD аккаунт позволяет хранить исходный хэш файла и его обновления на специальном аккаунте. Если выбрана опция <b>«Публичный»<b/>, транзакция переходит к общедоступному аккаунту-приёмнику (по умолчанию).',
        APOSTILLE_INFORMATION_8: 'После отправки транзакции, запускается загрузка архива. Архив содержит ваши подписанные файлы, ваш сертификат Apostille для этого файла и новый или обновленный файл *.nty, чтобы отслеживать каждый файл с вашей временной меткой в NEM цепочке.',
        APOSTILLE_NO_NTY: 'Файл nty не загружен, пожалуйста, нажмите здесь для того, чтобы его импортировать или он будет создан автоматически.',
        APOSTILLE_IMPORT_FILES: 'Импорт файлов',
        APOSTILLE_CREATE_TEXT: 'Создать текстовый документ',
        APOSTILLE_ENTER_TEXT: 'Введите текст, чтобы заверить...',
        APOSTILLE_DOCUMENT_TITLE: 'Название документа',
        APOSTILLE_DROPBOX_MESSAGE: 'Прежде, чем выбрать файлы, пожалуйста, введите Ваш пароль и нужный тег(и).',
        APOSTILLE_DROPBOX_MESSAGE_2: 'Прежде, чем выбрать файлы, пожалуйста, введите Ваш пароль',

        // AUDIT APOSTILLE MODULE
        APOSTILLE_AUDIT_TITLE: 'Аудит apostilles',
        APOSTILLE_AUDIT_CHOOSE_NODE: 'Выберите узел',
        APOSTILLE_AUDIT_CHOOSE_NODE_NOTE: 'Только некоторые узлы могут получить доступ ко всей истории транзакций (по умолчанию эта опция отключена в NIS).', //
        APOSTILLE_AUDIT_WRONG_FORMAT: 'Этот файл не в формате apostille !',
        APOSTILLE_AUDIT_FAIL_NO_PUBLIC_KEY: 'Проверка завершилась неудачей, владелец не имеет публичного ключа !',
        APOSTILLE_AUDIT_SUCCESS: 'Файл успешно прошёл аудит!',
        APOSTILLE_AUDIT_FAIL: 'Проверка завершилась неудачей!',
        APOSTILLE_AUDIT_WAITING: 'Apostille передача ожидает подтверждения !',
        APOSTILLE_AUDIT_NOT_FOUND: 'Транзакция не найдена, убедитесь, что она не ожидает подтверждений, в противном случае apostille недействительный.',
        APOSTILLE_AUDIT_ERROR_UNCONFIRMED: 'Произошла ошибка при получении неподтвержденных данных, так как транзакция не найдена.',
        APOSTILLE_AUDIT_ERROR_SIGNER: 'Произшла ошибка при получении данных подписанта.',
        APOSTILLE_AUDIT_ERROR_SIGNATURE: 'Верификация не удалась, произошла ошибка при проверке подписи !',
        APOSTILLE_AUDIT_INFORMATION_1: 'Файлы, которые могут быть проверены, должны быть <b>в формате apostille</b>',
        APOSTILLE_AUDIT_INFORMATION_2: 'Вы можете распознать их по имени файла:',
        //APOSTILLE_AUDIT_NON_SIGNED: 'Non signed exemple:',
        //APOSTILLE_AUDIT_SIGNED: 'Signed exemple:',
        APOSTILLE_AUDIT_FILES: 'Аудит файлов',
        APOSTILLE_AUDIT_FORMAT_EXAMPLE: 'Apostille format example',
        APOSTILLE_AUDIT_REMOVE_RECORDS: 'Remove records locally',

        // APOSTILLE MESSAGE MODULE
        APOSTILLE_MESSAGE_TITLE: 'Отправить сообщение на счёт нотариального заверения',
        APOSTILLE_MESSAGE_NS_BRAND: 'Использовать моё пространство имён в бренде',
        APOSTILLE_MESSAGE_ADD_MOSAIC: 'Добавить мозайку',
        APOSTILLE_NTY_ACCOUNT: 'Аккаунт нотариального заверения',
        APOSTILLE_REQUEST_MESSAGE: 'Запросить сообщение',
        APOSTILLE_CREATE_MESSAGE_REQUEST: 'Созание запроса сообщения',

        // TRANSFER APOSTILLE OWNLERSHIP MODULE
        APOSTILLE_TRANSFER_TITLE: 'Перенос или разделение права собственности apostille',

        // UPADTE APOSTILLE MODULE
        APOSTILLE_UPDATE_TITLE: 'Обновление apostille',

        // ERROR ALERTS
        ALERT_MISSING_FORM_DATA: 'Пожалуйста, заполните форму!',
        ALERT_ERROR_WALLET_DOWNLOAD: 'Невозможно скачать кошелёк, потому что его не существует!',
        ALERT_PASSWORDS_NOT_MATCHING: 'Указанные пароли или кодовые фразы не совпадают!',
        ALERT_INVALID_KEY_FOR_ADDR: 'Приватный ключ не соответствует указанному адресу!',
        ALERT_NO_WALLET_LOADED: 'Нет доступа к главной странице кошелька',
        ALERT_WALLET_NAME_EXISTS: 'Кошелёк с такими именем уже загружен!',
        ALERT_INVALID_WALLET_FILE: 'Вы пытаетесь загрузить файл, который не является кошельком!',
        ALERT_NO_NODE_SET: 'Пожалуйста, введите узел!',
        ALERT_INVALID_CUSTOM_NODE: 'Пользовательский узел является недействительным!',
        ALERT_INVALID_WEBSOCKET_PORT: 'Порт веб-сокета пользовательского узла является недействительным!',
        ALERT_MIJIN_DISABLED: 'Сеть mijin недоступна, пожалуйста, выберите другую сеть!',
        ALERT_GET_NS_BY_ID_ERROR: 'Ошибка при загрузке информации о пространстве имён, причина: ',
        ALERT_GET_ACCOUNT_DATA_ERROR: 'Ошибка при получении данных аккаунта, причина: ',
        ALERT_ERROR_OCCURRED: 'Произошла ошибка! ',
        ALERT_INVALID_ADDR_FOR_NETWORK: ' не соответствует сети ',
        ALERT_INVALID_PASSWORD: 'Указанный пароль не действителен!',
        ALERT_COSIG_ALREADY_IN_LIST: 'Соподписант уже присутствует в списке!',
        ALERT_COSIGNATORY_HAS_NO_PUBLIC: 'Соподписант должен иметь хотя бы одну исходящую транзакцию для получения публичного ключа!',
        ALERT_MULTISIG_HAS_NO_PUBLIC: 'У мультиподписного аккаунта должна быть хотя бы одна исходящая транзакция для получения публичного ключа!',
        ALERT_COSIG_CANNOT_BE_MULTISIG: 'Выбранный аккаунт является участником другого мультиподписного аккаунта, поэтому не может быть выбран',
        ALERT_NO_NS_OWNED: 'Аккаунт не имеет какого-либо пространства имён, пожалуйста, создайте его или выберите другой аккаунт',
        ALERT_UNLOCKED_INFO_ERROR: 'При получении информации о разблокироваке аккаунта произошла ошибка',
        ALERT_LOCK_ERROR: 'Ошибка блокировки аккаунта, причина: ',
        ALERT_UNLOCK_ERROR: 'Ошибка разблокировки аккаунта, причина: ',
        ALERT_SUPERNODES_ERROR: 'Ошибка при получении данных о суперноде!',
        ALERT_INVALID_NTY_FILE: 'Предоставленный файл не является файлом *.nty!',
        ALERT_CREATE_WALLET_FAILED: 'Не удалось создать кошелёк, причина: ',
        ALERT_DERIVATION_FROM_SEED_FAILED: 'Не удалось получить учетную запись из seed, причина: ',
        ALERT_BIP32_GENERATION_FAILED: 'Ошибка генерации bip 32 данных, причина: ',
        ALERT_NO_WALLET_DATA: 'Ошибка, пустые данные кошелька!',
        ALERT_CANNOT_LOGIN_WITHOU_WALLET: 'Ошибка, не возможно войти в систему без кошелька!',
        ALERT_NO_WALLET_TO_SET: 'Ошибка, невозможно ничего установить в качестве текущего кошелька!',
        ALERT_INVALID_WALLET_INDEX: 'Ошибка, индекс выбранного аккаунта выходит за пределы!',
        ALERT_NO_CURRENT_WALLET: 'Ошибка, невозможно установить текущий аккаунт, потому что нет кошелька!',
        ALERT_ALREADY_MULTISIG: 'Выбранный аккаунт уже является мультиподписным аккаунтом!',
        ALERT_INVALID_MODIFICATION_ARRAY: 'Мультиподписной аккаунт не может быть соподписантом самого себя, пожалуйста, проверьте список изменений!',
        ALERT_GET_MARKET_INFO_ERROR: 'Произошла ошибка при попытке получить информацию о рынке!',
        ALERT_MULTISIG_CANNOT_BE_COSIG: 'Мультиподписной аккаунт нельзя установить как соподписанта!',
        ALERT_PURGE_CANCELLED: 'Очистка отменена!',
        ALERT_MAINNET_DISABLED: 'Сеть мainnet недоступна, пожалуйста, выберите другую сеть!',
        ALERT_EMPTY_DECODED_MSG: 'Произошла ошибка, сообщение не расшифровано!',
        ALERT_INVALID_NS_NAME: 'Недопустимое имя пространства имён!',
        ALERT_INVALID_MOSAIC_NAME: 'Недопустимое имя мозайки!',
        ALERT_MOSAIC_DESCRIPTION: 'Недопустимое описание мозайки!',
        ALERT_GET_INCOMING_TXES_ERROR: 'Произошла ошибка при получении входящих транзакций, причина: ',
        ALERT_GET_MOSAICS_DEFINITIONS_ERROR: 'Ошибка при получении определенной мозайки, причина: ',
        ALERT_GET_SUB_NS_ERROR: 'Ошибка при получении определенного подпространства, причина: ',
        ALERT_GET_MOSAICS_ERROR: 'Ошибка при получении мозайки, причина: ',
        ALERT_GET_TRANSACTIONS_ERROR: 'Ошибка при получении транзакций, причина: ',
        ALERT_INVALID_ADDRESS_BOOK_FILE: 'Этот файл не в формате *.adb!',
        ALERT_INVALID_ADDRESS: 'Указан недопустимый адрес!',
        ALERT_INVALID_AMOUNT: 'Указана недопустимая сумма!',
        ALERT_INVALID_PRIVATE_KEY: 'Недопустимый приватный ключ!',
        ALERT_FILE_SIZE_ERROR: ' слишком большой, максимальный размер 100 MB',
        ALERT_MESSAGE_DECODE_KEY_ERROR: 'Ошибка расшифровки сообщения, потому что аккаунт не имеет публичного ключ видимого в сети',
        ALERT_FETCH_TIME_SYNC_ERROR: 'Произошла ошибка при получении времени сети!',
        ALERT_MULTISIG_MIN_SIGNATURE: 'Multisignature account needs at least one minimum signature',
        ALERT_BTC_MARKET_ERROR: 'Error while trying to fetch Bitcoin price',
        ALERT_COSIG_REMOVAL_LIMIT: 'Only one cosignatory at a time can be removed',
        ALERT_MULTISIG_MIN_SIGNATURE_INVALID: 'Invalid number of minimum signatures',
        ALERT_INSUFFICIENT_BALANCE: 'Insufficient Balance for performing the operation',
        ALERT_VOTING_ERROR: 'Invalid Vote',
        ALERT_BRAIN_PASSWORD_TOO_SHORT: 'Brain wallet passphrase must be at least 40 characters!',
        ALERT_NODE_SEEMS_OFFLINE: 'Node seems offline, please select another one',
        ALERT_WEAK_PASSPHRASE: 'Security score of the passphrase must be at least 3',
        ALERT_BRAIN_WALLET_UPGRADE: 'Your brain wallet seems weak ! All brain wallets must use a passphrase with at least 40 characters.<br> We advise you to create a new wallet from the signup page and move your funds into it.<br> More info <a href="https://forum.nem.io/t/2791" target="_blank"><u>here</u></a>.',
        ALERT_RECIPIENT_PUBLIC_KEY: 'Recipient has no public key visible to the network',
        ALERT_ENCRYPT_MULTISIG: 'Can\'t send encrypted messages via multisig accounts',
        ALERT_EXCHANGE_NEEDS_MESSAGE: 'Recipient is an exchange wallet and thus it requires a message for your account to be correctly credited, please read carefully the exchange deposit instructions!',
        ALERT_ACCOUNT_ALREADY_IN_ADDRESS_BOOK: 'Contact already present in address book!',
        ALERT_MAX_MOSAIC_SUPPLY: 'Maximum mosaic supply is 9\'000\'000\'000',
        ALERT_GET_MOSAIC_SUPPLY_ERROR: 'Error at fetching mosaic supply, reason: ',
        ALERT_ENCRYPTED_MSG_OFFLINE: 'Encrypted messaging is not enabled in offline transactions',

        // SUCCESS ALERTS
        ALERT_CREATE_WALLET_SUCCESS: 'Кошелёк успешно создан и загружен!',
        ALERT_SUCCESS_PURGE: 'Локальное хранилище успешно очищено!',
        ALERT_SUCCESS_LOGOUT: 'Успешный выход!',
        ALERT_LOAD_WALLET_SUCCESS: 'Кошелёк успешно загружен!',
        ALERT_TRANSACTION_SUCCESS: 'Транзакция успешно отправлена!',
        ALERT_GENERATE_ACCOUNT_SUCCESS: 'Аккаунт успешно сгенерирован. Не забудьте скачать обновленный кошелёк!',
        ALERT_UPGRADE_SUCCESS: 'Кошелёк успешно обновлён!',
        ALERT_SIGNATURE_SUCCESS: 'Транзакция успешно подписана!',
        ALERT_NTY_FILE_SUCCESS: '*.nty файл успешно загружен!',
        ALERT_INCOMING_TX_FROM: 'Входящая транзакция от ',
        ALERT_ADDRESS_BOOK_FILE_SUCCESS: 'Адресная книга успешно импортирована!',
        ALERT_VOTING_SUCCESS: 'Vote Sent Successfully',
        ALERT_POLL_CREATION_SUCCESS: 'Poll Created Successfully',
        ALERT_COPY_SIGNED_TX_SUCCESS: 'Signed transaction copied!',

        // CONVERT ACCOUNT TO MULTISIG
        AGGREGATE_MODIFICATION_TITLE: 'Конвертировать аккаунт в мультиподписной',
        AGGREGATE_MODIFICATION_NAME: 'Транзакция общего изменения',
        AGGREGATE_MODIFICATION_MULTISIG_NAME: 'Мультиподписная транзакция общего изменения',
        AGGREGATE_ACCOUNT_SELECT_TITLE: 'Конвертируемый аккаунт',
        AGGREGATE_ACCOUNT_SELECT: 'Выбрать аккаунт для конвертирования',
        AGGREGATE_CUSTOM_ACCOUNT: 'Другой аккаунт',
        AGGREGATE_ACCOUNT_TO_CONVERT_PRIVATE_TITLE: 'Приватный ключ аккаунта',
        AGGREGATE_ACCOUNT_TO_CONVERT: 'Адрес конвертируемого аккаунта',
        AGGREGATE_ACCOUNT_TO_CONVERT_PRIVATE: 'Приватный ключ конвертируемого аккаунта',
        AGGREGATE_ADD_PLACEHOLDER: 'Аккаунт соподписанта или @псевдоним для добавления',
        AGGREGATE_ADD_BTN_TITLE: 'Добавить соподписанта',
        AGGREGATE_MIN_SIGNATURES: 'Мин. количество подписей',
        AGGREGATE_MIN_SIGNATURES_PLACEHOLDER: 'Минимальное количество подписей, необходимых для проверки транзакции',
        AGGREGATE_MODIFICATION_LIST: 'Список соподписантов',
        AGGREGATE_COSIG_LIST: 'Список адресов соподписантов',

        AGGREGATE_MODIFICATION_EDIT_TITLE: 'Редактировать мультиподписной контракт',
        AGGREGATE_MODIFICATION_EDIT_SELECT_TITLE: 'Аккаунт для редактирования',
        AGGREGATE_MODIFICATION_EDIT_SELECT: 'Выберите аккаунт для редактирования',
        AGGREGATE_ADD_REMOVE_TITLE: 'Добавить/удалить подпись',
        AGGREGATE_ADD_REMOVE_PLACEHOLDER: 'Аккаунт соподписанта или @псевдоним для добавления',
        AGGREGATE_MODIFICATION_RELATIVE_CHANGE: 'Изменение минимального количества подписей',
        AGGREGATE_MODIFICATION_RELATIVE_CHANGE_PLACEHOLDER: 'Номера подписей для добавления (n) или удаления (-n) - автоматическое удаление',
        AGGREGATE_SELECTED_ACCOUNT_INFO: 'Информакция о выбранном аккаунте',
        AGGREGATE_SELECT_WALLET_ACCOUNT: 'Использовать текущий аккаунт кошелька',
        AGGREGATE_ADD_COSIG: 'Add cosignatory',
        AGGREGATE_REMOVE_COSIG: 'Remove cosignatory',

        // SIGN MULTISIGNATURE TRANSACTIONS
        SIGN_MULTISIG_TRANSACTIONS_TITLE: 'Sign multisignature transactions',

        // LOGIN MODULE
        LOGIN_MEMBER_TITLE: 'Вход в кошелёк',
        LOGIN_UPGRADE_TITLE: 'Кошелёк необходимо обновить',
        LOGIN_UPGRADE_MESSAGE: 'Выбранный кошелёк необходимо обновить. Это действие сгенерирует дочерний открытый ключ и добавит его в основную учетную запись. После успешного завершения обновления, автоматически запустится загрузка обновленного кошелька, вы <b><u>обязаны</u></b> сохранить его!',
        LOGIN_UPGRADE_BUTTON: 'Обновление кошелька',
        LOGIN_IMPORT_BUTTON: 'Импорт кошелька',
        LOGIN_SELECT_WALLET_YOURS: 'Кошелёк',
        LOGIN_SELECT_WALLET: 'Выберите кошелёк из локального хранилища',
        LOGIN_LOGIN_BUTTON: 'Войти',
        LOGIN_NOTE: 'No wallet? Import one or <a href="#!/signup">signup</a>.',

        // SIGNUP MODULE
        SIGNUP_TITLE: 'Создание нового кошелька',
        SIGNUP_SELECT_WALLET_TYPE: 'Select a type of wallet to create',
        SIGNUP_SELECT_WALLET_TYPE_STAND_BY: 'Place the cursor on a wallet type to show information.',
        SIGNUP_CREATE_WALLET_TITLE: 'Простой кошелёк',
        SIGNUP_CREATE_WALLET_INFO: 'Simple wallets contains a primary private key that is generated randomly.',
        SIGNUP_PRIVATE_KEY_WALLET_TITLE: 'Кошелёк из приватного ключа',
        SIGNUP_PRIVATE_KEY_WALLET_INFO: 'Private key wallets contains a primary private key that you want to import.',
        SIGNUP_BRAIN_WALLET_TITLE: 'Умный кошелёк',
        SIGNUP_BRAIN_WALLET_INFO: 'Brain wallets contains a primary private key that is generated from a passphrase. This allow to retrieve the wallet only by knowing that exact passphrase.',
        SIGNUP_CREATE_WALLET_BUTTON: 'Создать простой кошелёк',
        SIGNUP_PRIVATE_KEY_WALLET_BUTTON: 'Создать кошелёк из приватного ключа',
        SIGNUP_BRAIN_WALLET_BUTTON: 'Создать умный кошелёк',
        SIGNUP_CREATE_WALLET_WARNING: 'Пожалуйста, ознакомьтесь с <a href="https://www.w3.org/TR/2014/WD-WebCryptoAPI-20140325/#RandomSource-interface" rel="nofollow" target="_blank"><b>опасностями</b></a> генерирования ключей на стороне клиента; Мы не несём ответственности за любые убытки, которые могут быть связаны с энтропией генерации ключей. Даже если это маловероятно, всё же рекомендуется использовать закрытый ключ, сгенерированный клиентом NEM (NCC).',
        SIGNUP_NETWORK_SELECT: 'Сеть',
        SIGNUP_NETWORK_MAINNET: 'Mainnet is the <b><u>real</u></b> NEM network. Addresses start with \'N\'.',
        SIGNUP_NETWORK_TESTNET: 'Testnet is the <b><u>test</u></b> network. Addresses start with \'T\'.',
        SIGNUP_NETWORK_MIJIN: 'Mijin is the private version of NEM. Addresses start with \'M\'.',
        SIGNUP_BRAIN_WALLET_WARNING: 'Пожалуйста, ознакомьтесь с <a href="https://en.bitcoin.it/wiki/Brainwallet" rel="nofollow" target="_blank">опасностями</a> генерирования умных кошельков. Умный кошелёк использует ТОЛЬКО пароль, хэшированный несколько раз, поэтому крайне важно выбрать БЕЗОПАСНЫЙ пароль. <a href="https://xkcd.com/936/" rel="nofollow" target="_blank">XKCD #936</a>',
        SIGNUP_PRIVATE_KEY_WALLET_WARNING: 'Закрытый ключ кошелька использует только пароль, хэшированный несколько раз, поэтому крайне важно выбрать БЕЗОПАСНЫЙ пароль.',
        SIGNUP_CREATE_START_WARNING: 'Please, follow each step carefully!',
        SIGNUP_CREATE_START_CONNECTION_WARNING: 'It is recommended to disconnect from internet while creating your wallet and backing up your data.',
        SIGNUP_CREATE_READY_BTN: 'Ready',
        SIGNUP_CREATE_ENTER_NAME: 'Enter a wallet name',
        SIGNUP_CREATE_ENTER_PASSWORD: 'Enter a password',
        SIGNUP_CREATE_ENTER_PASSPHRASE: 'Enter a passphrase',
        SIGNUP_CREATE_CONFIRM_PASSWORD: 'Confirm above password',
        SIGNUP_CREATE_CONFIRM_PASSPHRASE: 'Confirm above passphrase',
        SIGNUP_CREATE_ENTER_PRIVATE_KEY: 'Enter a private key',
        SIGNUP_CREATE_ADDRESS_FROM_PK: 'Address corresponding to above key',
        SIGNUP_CREATE_WALLET_ADD_ENTROPY_INFO: 'We are now going to generate your primary private key. <b>Please click on start and move your cursor around to add more entropy.</b>',
        //SIGNUP_COMMON_WALLET_WARNING: 'Кошельки хранятся <a><b>временно</b></a> в локальном хранилище браузера! После создания кошелька, Вы должны запустить загрузку резервной копии кошелька. Это файл *.wlt, используемый в качестве резервной копии, и для импорта обратно, если локальное хранилище вашего браузера очистится. Если после создания кошелька Вы не получили резервный *.wlt файл, войдите в свой аккаунт, скопируйте приватный ключ и сохраните его в безопасном месте. Прежде чем отправлять средства на Ваш счёт, убедитесь что у Вас сохранён приватный ключ.',
        //SIGNUP_COMMON_WALLET_WARNING_FOOTER: 'Нажимая ниже, Вы соглашаетесь с тем, что прочитали и поняли приведенные выше предупреждения.',
        SIGNUP_COMMON_WALLET_WARNING_TITLE: 'Account safety protocol',
        SIGNUP_COMMON_WALLET_WARNING_1: 'Wallets are stored <b><u>temporarily</u></b> in the browser local storage! Browsers can be configured (e.g. by add-ons) to clear the local storage at times. This will lead to the loss of the data and it can\'t be undone easily. In our case your wallets would be gone so it is very important to make sure you have all needed informations to restore your accounts.',
        SIGNUP_COMMON_WALLET_WARNING_2: 'Please click below to download your wallet. It is the <b><i>.wlt</i></b> file used as a backup and to import back if your browser’s local storage is erased.',
        SIGNUP_COMMON_WALLET_WARNING_3: 'If you don\'t get a backup <b><i>.wlt</i></b> file, click on button below to reveal the raw wallet data and create the file manually:',
        SIGNUP_COMMON_WALLET_WARNING_4: 'Even if you have a wallet file it is <b><u>mandatory</u></b> to backup your account\'s private key, click on button below to reveal it:',
        SIGNUP_COMMON_WALLET_WARNING_5: 'It is your responsibility to always make sure you have your private key backed up before sending any funds to your account.',
        SIGNUP_COMMON_WALLET_WARNING_6: 'Each wallet has a <b><u>primary private key</u></b> (yours is shown above) that is used to create deterministic secondary accounts (BIP32). This feature requires to use the <b><u>same password</u></b> or it will generate different secondary accounts for the same primary private key. When backing up your data don\'t forget to <b><u>take note of your password</u></b>.',
        SIGNUP_COMMON_WALLET_WARNING_BTN_1: 'Show raw wallet file',
        SIGNUP_COMMON_WALLET_WARNING_BTN_1_INFO: 'To make a wallet file, create an empty text file and put the above base 64 key into it. Save the file as <b><i>yourWalletName.wlt</i></b>.',
        SIGNUP_COMMON_WALLET_WARNING_BTN_2: 'Show private key',
        SIGNUP_COMMON_WALLET_WARNING_BTN_2_INFO: 'To backup a private key, print it or save it in a text file. It is highly recommend to store the private key in a safe and offline location.',
        SIGNUP_COMMON_WALLET_WARNING_FOOTER: 'By clicking below, you agree that you have read and understood the above warnings.',
        SIGNUP_COMMON_WALLET_WARNING_CONFIRM_1: 'I have my wallet file',
        SIGNUP_COMMON_WALLET_WARNING_CONFIRM_2: 'I have my private key',
        SIGNUP_COMMON_WALLET_WARNING_CONFIRM_3: 'I agree',
        SIGNUP_COMMON_WALLET_WARNING_UNDERSTOOD: 'Understood',
        SIGNUP_COMMON_WALLET_WARNING_DOWNLOAD: 'Download wallet',
        SIGNUP_ESTIMATED_PASSPHRASE_STRENGTH: 'Estimated passphrase strength',
        SIGNUP_ESTIMATED_GUESS_TIMES: 'Estimated guess times',

        // FAQ MODULE
        FAQ_TITLE: 'Frequently Asked Questions',
        FAQ_QUESTION_1: 'How Nano Wallet works ?',
        FAQ_ANSWER_1: 'Nano Wallet is built using the latest crypto libraries with ES6 and AngularJS. It is a full client-side application that never sends any sensitive data through the wire; everything happens in your browser from creating private keys to the signing of transactions.',
        FAQ_QUESTION_2: 'Is it free to use ?',
        FAQ_ANSWER_2: 'Absolutely all operations are client-side, only you have control of your coins, no third parties, and no extra fees.',
        FAQ_QUESTION_3: 'Why do I already have one mosaic ?',
        FAQ_ANSWER_3: 'Because XEM is the default currency of the NEM blockchain, every user already has it registered to their wallet, even if their balance is 0. Its namespace is NEM and the mosaic name is XEM',
        FAQ_QUESTION_4: 'Roadmap ?',
        FAQ_ANSWER_4: 'The current roadmap includes integration of all NEM client features and completion of community funded projects to work across this wallet.',
        FAQ_QUESTION_5: 'Can I get free XEM ?',
        FAQ_ANSWER_5: 'The NEM faucet is currently down, but you can consult the NEM forum to know about the available bounties.',
        FAQ_QUESTION_6: 'Where to find more information about NEM ?',
        FAQ_ANSWER_6_FORUM: 'Official forum',
        FAQ_ANSWER_6_WEBSITE: 'Official website',
        FAQ_ANSWER_6_BTT: 'Official BitcoinTalk thread',
        FAQ_QUESTION_7: 'Nothing is shown on the dashboard',
        FAQ_ANSWER_7: 'Please be sure to check the node circle in the top navigation bar. <br> Red circle means that connection to the node failed. <br> Click on "Node" and select another one from the dropdown list or use a custom node. <br> <a href="https://supernodes.nem.io" target="_blank">Supernodes.nem.io</a> has a lot of nodes that you can use.</a>',
        FAQ_QUESTION_8: 'Cosignatories cannot see the transaction to sign',
        FAQ_ANSWER_8: 'In this case go to "Services", look for "Multisignature and Multi-User Accounts" and click on "Sign multisig transactions".',
        FAQ_QUESTION_9: 'What are the best security practices ?',
        FAQ_ANSWER_9: 'It is hightly recommended to always store private keys on paper.<br> You can print them and archive them somewhere safe. <br><br> Regarding wallet files you should always keep multiple copies on different cold locations, like usb sticks. <br> Passwords must always be unique and complex, for this reason, always write it down first. <br><br> When you want to check your wallet or realise operations:<br> - Plug the usb stick <br> - Import the wallet in Nano<br> - Unplug the usb stick.<br><br> A copy of your wallet is stored in the browser local storage for all the time you need.<br> Once you are done, logout and purge the wallets in local storage using the purge button on the right side of the footer.',
        FAQ_QUESTION_10: 'Where to find information about my account (address, etc) ?',
        FAQ_ANSWER_10: 'If you look at the top navigation bar, you will see an <b><i>"Account"</b></i> button between <b><i>"Node"</b></i> and <b><i>"Language"</b></i>. There you can find your address, public key, vested balance and other important data.',
        FAQ_QUESTION_11: 'I have deposited XEM to an exchange but nothing has been credited ?',
        FAQ_ANSWER_11_1: 'First you must check that the hash of your transaction is pointing to an existing transaction on the <a target="_blank" href="http://chain.nem.ninja">explorer</a> (please, note that the explorer is a few blocks behind).',
        FAQ_ANSWER_11_2: 'Most exchanges are asking for an identification message to credit your deposit. Make sure that you have followed carefully the exchange instructions and added a message that is NOT encrypted. ',
        FAQ_ANSWER_11_3: 'Even if you have added a message, it can happen that exchanges may not process your deposit, because of issues on their side.',
        FAQ_ANSWER_11_4: 'You must contact the exchange support, explain the situation and provide them the hash of the transaction.',
        FAQ_QUESTION_12: 'How to check if I am on a fork ?',
        FAQ_ANSWER_12_1: 'Click on <b><i>"Node"</b></i>, in the top navigation bar, to open the node panel.',
        FAQ_ANSWER_12_2: 'Look at the chain height and compare it to the height shown <a target="_blank" href="http://hugealice.nem.ninja:7890/chain/height">here</a>.',
        FAQ_ANSWER_12_3: 'If different of more than 5 blocks then you are probably on a fork.',
        FAQ_ANSWER_12_4: 'To fix, just choose another node from the dropdown in the node panel, it will restore your account at it\'s latest state on the real network.',

        // FORM RELATED
        FORM_PASSWORD_FIELD_PLACEHOLDER: 'Введите пароль или кодовую фразу от кошелька',
        FORM_WALLET_NAME_FIELD_PLACEHOLDER: 'Имя кошелька',
        FORM_SIGNUP_PASSWORD_FIELD_PLACEHOLDER: 'Пароль',
        FORM_PASSWORD: 'Пароль',
        FORM_PASSWORD_CONFIRM: 'Повторите пароль',
        FORM_PASSPHRASE_CONFIRM: 'Повторите кодовую фразу',
        FORM_CONFIRM_PASSWORD_FIELD_PLACEHOLDER: 'Повторите пароль',
        FORM_PASSPHRASE_FIELD_PLACEHOLDER: 'Кодовая фраза',
        FORM_CONFIRM_PASSPHRASE_FIELD_PLACEHOLDER: 'Повторите кодовую фразу',
        FORM_ADDRESS_FIELD_PLACEHOLDER: 'Адресс аккаунта',
        FORM_PRIVATE_KEY_FIELD_PLACEHOLDER: 'Приватный ключ',
        FORM_SIDE_BTN_BALANCE: 'Баланс',
        FORM_SIDE_BTN_PAY_TO: 'Плательщик',
        FORM_SIDE_BTN_TX_FEE: 'Комиссия',
        FORM_SIDE_BTN_RENTAL_FEE: 'Комиссия аренды',
        FORM_SIDE_BTN_LEVY_FEE: 'Налоговая комиссия',
        FORM_RECIPIENT_PLACEHOLDER: 'Адрес получателя или @псевдоним',
        FORM_INVOICE_RECIPIENT_PLACEHOLDER: 'Адрес получателя',
        FORM_SIDE_BTN_ALIAS_OF: 'Псевдоним',
        FORM_MESSAGE_PLACEHOLDER: 'Сообщение',
        FORM_MOSAIC_NAME_PLACEHOLDER: 'Имя мозайки',
        FORM_ADDRESS_ALIAS_PLACEHOLDER: 'Адрес аккаунта или @псевдоним',
        FORM_BTN_GET_ALIAS: 'Get alias address',
        FORM_BTN_OPEN_ADB: 'Open address book',
        FORM_SELECT_NAMESPACE: 'Select a namespace',

        // VOTING MODULE
        PORTAL_VOTING_TITLE: 'Voting',
        PORTAL_VOTING_TEXT: 'Create and vote on polls',
        PORTAL_VOTING_BTN1: 'See Polls',
        PORTAL_VOTING_BTN2: 'Create Poll',
        FORM_TITLE_FIELD_PLACEHOLDER: 'Title',
        FORM_DESCRIPTION_FIELD_PLACEHOLDER: 'Write your description here',
        FORM_OPTION_FIELD_PLACEHOLDER: 'write option',
        FORM_WHITELIST_FIELD_PLACEHOLDER: 'account address',
        FORM_SELECT_MULTISIG: 'Select a multisignature account',
        FORM_SELECT_CONTACT: 'Select a contact',

        // TREZOR RELATED
        TREZOR_TITLE: 'TREZOR',
        TREZOR_TEXT: 'The TREZOR hardware wallet allows you to secure your XEM, mosaics and multisig accounts',
        TREZOR_BUTTON: 'Login with TREZOR',

        // LEDGER NANO RELATED
        ACCOUNT_SHOW_ON_LEDGER_BTN: 'Показать в Ledger',
        ALERT_REQUEST_FAILED: 'Запрос не выполнен, причина: ',
        LEDGER_NANO_TITLE: 'LEDGER NANO',
        LEDGER_NANO_TEXT: 'Кошелек LEDGER NANO позволяет защитить ваши XEM, мозаики и мультисиг аккаунты',
        LEDGER_NANO_BUTTON: 'Вход с LEDGER NANO',
        LEDGER_NANO_NO_DEVICE: 'Устройство Ledger не найдено',
        LEDGER_NANO_CHECK_DEVICE: 'Please check your Ledger device!',
        LEDGER_NANO_NOT_USING_NEM_APP: 'Вы не используете приложение NEM на своем Ledger устройстве',
        LEDGER_NANO_NOT_USING_XYM_APP: 'Вы не используете приложение Symbol на своем Ledger устройстве',
        LEDGER_NANO_NOT_SUPPORTED_APP: 'Пожалуйста, проверьте, открыто ли на вашем Ledger устройстве актуальное приложение NEM',
        LEDGER_NANO_CONNECTED_OTHER_APP: 'Another app is already connected to your Ledger device. Please close it then try again',
        LEDGER_NANO_NOT_OPENED_NEM_APP: 'Пожалуйста, откройте приложение NEM на вашем Ledger устройстве',
        LEDGER_NANO_NOT_OPENED_XYM_APP: 'Пожалуйста, откройте приложение Symbol на вашем Ledger устройстве',
        LEDGER_NANO_DEVICE_LOCKED: 'Пожалуйста, разблокируйте свое Ledger устройство',
        LEDGER_NANO_USER_REJECT_LOGIN: 'Вход отменен пользователем',
        LEDGER_NANO_USER_REJECT_REQUEST: 'Запрос отменен пользователем',
        LEDGER_NANO_FOLLOW_INSTRUCTION: 'Следуйте инструкциям на вашем Ledger устройстве',
        LEDGER_NANO_TRANSACTION_TOO_BIG: 'Транзакция слишком велика для подписи на вашем Ledger устройстве',
        LEDGER_NANO_TRANSACTION_USER_CANCEL: 'Подписание отменено пользователем',
        LEDGER_NANO_TRANSACTION_FAILED: 'Не удалось подписать транзакцию, причина: ',
        LEDGER_NANO_OPTIN_INFO_1: 'Вы можете использовать приложение Symbol Ledger, чтобы получить аккаунт, для Опт-Ин Symbol.',
        LEDGER_NANO_OPTIN_INFO_2: 'Откройте приложение Symbol Ledger на своем девайсе и нажмите на «Импортировать аккаунт Symbol».',
        LEDGER_NANO_IMPORT_SYMBOL: 'Импортировать Symbol аккаунт',

        // CREATE OFFLINE TRANSACTION MODULE
        OFFLINE_TX_TITLE: 'Prepare an offline transaction',
        OFFLINE_TX_NO_WALLET: 'Please import a wallet from login module to see the form.',
        OFFLINE_TX_INFO_1: 'Make sure to be disconnected of internet when importing your wallet and creating the transaction!',
        OFFLINE_TX_INFO_2: 'Only simple transactions can be created because a connection is needed to fetch mosaics and multisig information from NEM nodes.',
        OFFLINE_TX_INFO_3: 'After clicking the "create" button in the left panel, you will find the signed transaction below.',
        OFFLINE_TX_INFO_4: 'A signed transaction is immutable and will be effective only if released to the network before the default deadline of 24 hours.',
        OFFLINE_TX_SIGNED: 'Signed transaction',
        OFFLINE_TX_RELEASE: 'Open in release module',

        // RELEASE OFFLINE TRANSACTION MODULE
        RELEASE_OFFLINE_TX_TITLE: 'Release a transaction to the network',
        RELEASE_OFFLINE_TX_PARAMETERS: 'Transaction parameters',
        RELEASE_OFFLINE_TX_INFO_1: 'To release a transaction you must be connected to internet.',
        RELEASE_OFFLINE_TX_INFO_2: 'Make sure that you have selected the right network and a working node or it will be rejected.',
        RELEASE_OFFLINE_TX_INFO_3: 'It is not possible to send a signed transaction twice. One signed transaction will always generate the same hash and two transactions cannot have the same hash.',
        RELEASE_OFFLINE_TX_INFO_4: 'You can release a signed transaction from any computer safely.',

        // INVOICE MODULE
        CREATE_INVOICE_TITLE: 'Create an invoice',

        // CATAPULT OPT IN MODULE
        PORTAL_CATAPULTOPTIN_TITLE: 'Symbol Опт Ин',
        PORTAL_CATAPULTOPTIN_TEXT: 'Используйте данный модуль, для получения токенов XYM в сети Symbol. Вы также можете произвести процесс Опт Ин (Подписки), для регистрации своих пространств имен и мультиподписных акканутов. Ваш баланс мозаик, данные Апостиля, контракты делегированного харвестинга и другие параметры не будут перенесены в сеть Symbol. Пожалуйста, прочтите больше ',
        PORTAL_CATAPULTOPTIN_TEXT_LINK: 'здесь.',
        PORTAL_CATAPULTOPTIN_MULTISIG_TEXT: 'Ваш мультиподписной Опт Ин запрос, должен быть оформлен совместно с подписантом аккаунта',
        PORTAL_CATAPULTOPTIN_BTN_1: 'Требование на получение токена XYM и пространства имен с помощью Symbol Опт Ин',
        PORTAL_CATAPULTOPTIN_BTN_2: 'Подписать Мультисиг Опт Ин, через сообщение',
        PORTAL_CATAPULTOPTIN_TREZOR_TEXT: 'Опт Ин с Trezor пока не реализован. Если вы хотите произвести Опт Ин, переведите ваши средства на обычный аккаунт.',
        TITLE_CATAPULTOPTIN: 'Symbol Опт Ин',
        CATAPULTOPTIN_CREATE_HELP: 'Хотите узнать больше о Опт Ин Symbol?',
        CATAPULTOPTIN_TRANSACTION: 'Опт Ин Транзакция',
        CATAPULTOPTIN_ACCOUNT_UNLOCK: 'Введите вашу Symbol мнемонику',
        CATAPULTOPTIN_ACCOUNT_UNLOCK_PLACEHOLDER: 'Пожалуйста, укажите мнемоническую кодовую фразу, для своего аккаунта Symbol, которую вы выбрали',
        CATAPULTOPTIN_ACCOUNT_STEP_1: 'Шаг 1: Пожалуйста, выберите аккаунт для Опт Ин',
        CATAPULTOPTIN_ACCOUNT_STEP_1_NEW: 'Шаг 1: Пожалуйста, выберите аккаунт для Опт Ин',
        CATAPULTOPTIN_ACCOUNT_STEP_2: 'Шаг 2: Посмотрите информацию о Опт Ин на свой аккаунт ',
        CATAPULTOPTIN_ACCOUNT_MS_STEP_2: 'Шаг 2: Посмотрите информацию о Опт Ин на свой мультисиг аккаунт ',
        CATAPULTOPTIN_ACCOUNT_STEP_3: 'Шаг 3: Проверьте свои пространства имен, чтобы их можно было перенести',
        CATAPULTOPTIN_ACCOUNT_STEP_4: 'Шаг 4: Посмотрите свои VRF ключи для Опт Ин',
        CATAPULTOPTIN_INCLUDE_VRF: 'Включите VRF ключи в Опт Ин процесс',
        CATAPULTOPTIN_VRF_KEYS: 'VRF ключи',
        CATAPULTOPTIN_VRF_PUBLIC_KEY: 'VRF публичный ключ',
        CATAPULTOPTIN_ACCOUNT_MS_STEP_3: 'Шаг 3: Посмотрите пространства имен на мультисиг, для процедуры опт ин',
        CATAPULTOPTIN_ACCOUNT_STEP_SIGN: 'Шаг 2: Согласие на Symbol Опт Ин',
        CATAPULTOPTIN_REVIEW_MULTISIG_RESULT: 'Пересмотр мультисиг Symbol Опт Ин',
        CATAPULTOPTIN_REGISTER: 'Регистрация Symbol Опт Ин',
        CATAPULTOPTIN_CREATE_ADDRESS: 'Создать новый адрес в сети Symbol из мнемоники.',
        CATAPULTOPTIN_INCLUDE_NAMESPACE: 'Включить мои пространства имен в Опт Ин',
        CATAPULTOPTIN_INCLUDE_MS_NAMESPACE: 'Включить мои пространства имен из мультисиг аккаунтов в процесс Опт Ин',
        CATAPULTOPTIN_MULTISIG_CONTRACT_CONSIGNATURES: 'Контрактные Мультисиг подписи',
        SIGN_MULTISIG_OPTIN_TRANSACTIONS_TITLE: 'Подписать мультиподписную транзакцию',
        CATAPULTOPTIN_NAMESPACE_TO_DELETE: 'Отказаться от пространств имен',
        CATAPULTOPTIN_NAMESPACE_REMOVE: 'Введите пространство имен, которое необходимо удалить',
        CATAPULTOPTIN_ENTER_PK: 'Введите ваш приватный ключ, для генерации аккаунта Symbol',
        CATAPULTOPTIN_ENTER_PASSWORD: 'Введите ваш пароль, для генерации аккаунта Symbol',
        CATAPULTOPTIN_REMOVE_NAMESPACE: 'Удалите пространство имен',
        CATAPULTOPTIN_OPT_IN_SUCCESS: 'Процедура Опт Ин успешно выполнена',
        CATAPULTOPTIN_OPT_IN_PENDING_SIGNATURES: 'Оп Ин в ожидании со-подписанта',
        CATAPULTOPTIN_TRANSFER_TRANSACTION_MULTISIG_NAME: 'Подтверждение Опт Ин, для мультисиг аккаунта Symbol',
        CATAPULTOPTIN_NIS1: 'NIS1',
        CATAPULTOPTIN_OPTIN_ACCOUNT: 'Опт Ин аккаунт:',
        CATAPULTOPTIN_OPTIN_ACCOUNT_PK: 'Опт Ин аккаунт публичный ключ:',
        CATAPULTOPTIN_NAMESPACES_OPTIN: 'Мои выбранные пространства имен',
        CATAPULTOPTIN_CATAPULT: 'Symbol',
        CATAPULTOPTIN_OPTIN_ACCOUNT_ADDRESS: 'Опт Ин адрес аккаунта:',
        CATAPULTOPTIN_UNLOCK: 'Разблокировать Symbol аккаунт',
        CATAPULTOPTIN_CONFIRM_OPTIN: 'Подтвердить Symbol Опт Ин',
        CATAPULT_OPT_IN_RESUME: 'Подтверждение транзакции Опт Ин',
        CATAPULT_OPT_IN_RESUME_TEXT:'Последующая транзакция создаст новый аккаунт Symbol. Чтобы получить свои средства, вам необходимо создать резервную копию своей мнемонической кодовой фразы.',
        CATAPULT_OPT_IN_SUCCESS: 'Опт Ин Подтверждение',
        CATAPULT_OPT_IN_BALANCE_SNAPSHOT: 'Баланс для включения в сеть Symbol',
        CATAPULT_OPT_IN_SUCCESS_SIGNING: 'Опт Ин успешно выполнен',
        CATAPULT_OPT_IN_UNDERSTAND: 'Принимая во внимание изменение приватного ключа при использовании в сети Symbol, важно понимать что ваш приватный ключ аккаунта Symbol, будет отличаться от вашего прежнего приватного ключа NEM. Подтвердите, что вы сделали копию нового приватного ключа, введя ‘Да, я понимаю’ в поле ниже.',
        CATAPULT_OPT_IN_CONFIRM_BACKUP: 'Я создал резервную копию своей мнемонической кодовой фразы, для процесса Опт Ин и понимаю, что это моя обязанность сохранить и создать резервную копию.',
        CATAPULT_OPT_IN_UNDERSTAND_FUNDS: 'Я понимаю, что только средства на моем аккаунте на момент снапшота - это средства, которые будут добавлены на мой баланс Symbol в виде токенов XYM при запуске сети Symbol. Любое изменение баланса аккаунта, после инициализации транзакции опт ин, но до самого снапшота, будет отзеркалено на момент запуска Symbol.',
        GENERAL_MIN_SIGNATURES_REQUIRED: 'Требуется минимальное количество подписей',
        SYMBOL_OPTIN_INITIATOR: 'Опт Ин инициатор',
        CATAPULT_BACKUP_WALLET: 'Бэкап Symbol Кошелька',
        CATAPULT_DOWNLOAD_WALLET: 'Загрузка зашифрованного Symbol кошелек',
        MNEMONIC: 'Мнемоника',
        CATAPULT_OPT_IN_LOADING: 'Получение Статуса Опт Ин...',
        COSIGNER_NOT_OPTIN: 'Со-подписант еще не начал процесс Опт Ин',
        SYMBOL_ADDRESS: 'Symbol Адрес',
        YOUR_SYMBOL_ADDRESS: 'Ваш Symbol Адрес',
        YOUR_SYMBOL_MNEMONIC: 'Ваша мнемоника Symbol',
        SYMBOL_COSIGNERS: 'Symbol Со-подписанты',
        CATAPULTOPTIN_CONFIRM_SIGN: 'Подписать Symbol Опт Ин',
        CATAPULTOPTIN_FIRST_DO_NORMAL: 'Чтобы выполнить Опт Ин (Подписку) Мультисиг аккаунта, Вам необходимо сначала выполнить обычную Опт Ин (Подписку)',
        CATAPULTOPTIN_ENCRYPTED_WALLET_TEXT: 'Создайте новый пароль для шифрования резервной копии вашего кошелька Symbol и нажмите кнопку загрузки.',
        CATAPULTOPTIN_REVIEW_NORMAL_RESULT: 'Просмотреть информацию о Опт Ин (Подписки) на мой аккаунт Symbol',
        CATAPULTOPTIN_GENERATE_NEW_SYMBOL: 'Генерация новой мнемоники Symbol',
        CATAPULTOPTIN_VRF_KEYS_DESCRIPTION: 'VRF ключи используются для харвестинга в блокчейне Symbol. Если у вас есть нода и вы хотите начать сбор первых блоков с помощью харвестинга, вам следует активировать данную опцию и сохранить эти ключи, чтобы добавить их в конфигурацию узла Symbol. Если Вы не выберете эту опцию, вы также сможете сгенерировать новые VRF ключи, как только основная сеть заработает',
        OPTIN_FORM_PASSWORD_FIELD_PLACEHOLDER: 'Введите свой пароль, для NEM Wallet',
        OPTIN_NEW_PASSWORD: 'Новый Пароль',
        SYMBOL_PASSWORD_REQUIREMENT: " 'Пароль должен состоять не менее чем из 8 символов",
        SYMBOL_WALLET_CREATING_TYPE_INFO: 'Выберите способ создания Symbol аккаунта',
        SYMBOL_WALLET_CREATING_BY_ENTROPY_TYPE_INFO: 'Создать рандомный аккаунт ',
        SYMBOL_WALLET_CREATING_BY_LEDGER_IMPORT_TYPE_INFO: 'Импортировать Symbol аккаунт из Ledger',
        SYMBOL_SIGNUP_CREATE_WALLET_ADD_ENTROPY_INFO_1: 'Теперь мы собираемся сгенерировать ваш первичный приватный ключ.',
        SYMBOL_SIGNUP_CREATE_WALLET_ADD_ENTROPY_INFO_2: 'Нажмите "Пуск" и непрерывно перемещайте курсор, чтобы завершить энтропию. ',
        OPTIN_WELCOME_TITLE: 'Добро пожаловать в Symbol Опт Ин',
        OPTIN_INFO_1: 'Основная сеть Symbol еще не запущена.',
        OPTIN_INFO_2: 'Вы можете подготовиться, выбрав свои аккаунты NEM (NIS1), с помощью этого модуля.',
        OPTIN_INFO_3: 'для миграции вашего баланса и пространств имен в сеть Symbol.',
        OPTIN_LINK_INFO: 'Получите всю необходимую информацию о процессе Опт Ин ',
        OPTIN_NAMESPACES_TITLE: 'Опт Ин Пространства имен',
        OPTIN_NAMESPACES_INFO: 'Теперь вы можете произвести Опт Ин на принадлежащие Вам пространства имен в NEM (NIS1). Это позволит обеспечить автозаполняемость, для того же пространства имен, но в блокчейн сети Symbol.',
        OPTIN_NAMESPACES_LINK: 'Получить всю информацию о Опт Ин пространства имен',
        OPTIN_NAMESPACES_SELECT: 'Выберите пространства имен, для которых вы хотите произвести Опт Ин:',
        OPTIN_VRF_TITLE: 'Включить VRF ключи',
        OPTIN_VRF_INFO:'Ключи VRF позволяют вашему аккаунту собирать награды за блоки. Если вы планируете хранить более 10000 XYM на своем аккаунте, после запуска и хотели бы использовать блокчейн Symbol, вам необходимо добавить свои VRF ключи в процесс Опт Ин.',
        OPTIN_VRF_LINK: 'Получить всю необходимую информацию о VRF ключах ',
        OPTIN_VRF_KEYS:'Добавить VRF Ключи',
        OPTIN_VRF_PUBLIC: 'Публичный Адрес VRF',
        OPTIN_VRF_PRIVATE: 'Приватный Адрес VRF',
        OPTIN_TAC_TITLE:'Условия и Положения',
        OPTIN_TAC_TEXT:'условия и положения',
        OPTIN_TAC_INFO_1:'Процесс Опт Ин - это функция, которая запущенна от Symbol Chain Limited с целью помочь пользователям сети NIS1 отзеркалить свои балансы в новую сеть Symbol. Данный процесс, содержит определенные правила, которые должны строго соблюдаться всеми участниками, которые его выполняют.',
        OPTIN_TAC_INFO_2:'Компания Symbol Chain Limited не будет нести ответственность, за любые инциденты, выходящие за рамки условий, указанных ниже.',
        OPTIN_TAC_READ_ACCEPT: 'Я прочитал и принимаю ',
        OPTIN_CONFIRM_TITLE:'Подтверждаю Symbol Опт Ин',
        OPTIN_CONFIRM_INFO:'Мы почти закончили! Данные будут мигрированы в новую блокчейн сеть Symbol. Внимательно просмотрите данные и подпишите вашим NEM ключом, чтобы завершить процедуру Опт Ин.',
        OPTIN_CONFIRM_OPTIN:'Подтвердить процесс Опт Ин',
        HERE:'здесь',
        OPTIN_ENTER_PASSWORD: 'Введите свой пароль NEM (NIS1), чтобы подтвердить процесс Опт Ин',
        OPTIN_LOADING: 'Извлечение Опт Ин данных',
        OPTIN_FINISHED: 'Опт-Ин процесс откроется, после запуска блокчейна Symbol. Пожалуйста, ожидайте новую версию кошелька.',
        GENERAL_BACK: 'Назад',
        CREATE_SYMBOL_ACCOUNT: 'Создайте свой Symbol аккаунт',
        OPTIN_SYMBOL_READY: 'Ваш Symbol аккаунт успешно создан',
        OPTIN_COPY_SUCCESS: 'Copied!',
        OPTIN_TYPE_SELECT: 'Выберите способ, с помощью которого вы произвели опт-ин процесс, в этом кошельке',
        CATAPULT_OPT_IN_ERROR_TOO_MUCH_COSIGNATORIES: 'У этого аккаунта более 8 подписантов. Протокол Opt In позволяет использовать мультисиг аккаунты не более чем с 9 подписантами.'

});

}

export default RussianProvider;

'''
'''--- src/app/modules/languages/uk.js ---
function UkrainianProvider($translateProvider) {
    'ngInject'

    $translateProvider.translations('uk', {

        // HEADER COMPONENT
        WALLET_NAME_1: 'NEM',
        WALLET_NAME_2: 'Wallet',
        APP_NAME_SUB: 'Інтерфейс безпечного підключення до платформи NEM',
        HEADER_LOGIN_BUTTON: 'Вхід',
        HEADER_SIGNUP_BUTTON: 'Реєстрація',
        HEADER_DASHBOARD: 'Інформаційна панель',
        HEADER_WALLET: 'Гаманець',
        HEADER_SERVICES: 'Сервіси',
        HEADER_EXPLORER: 'Провідник',
        HEADER_NODE: 'Вузол',
        HEADER_ACCOUNT: 'Рахунок',
        HEADER_LANG_TITLE: 'Мова',
        HEADER_LANG_SELECT: 'Вибрати мову',
        HEADER_NODE_BLOCK_HEIGHT: 'Висота блоку',
        HEADER_NODE_CURRENT_NODE: 'Поточний вузол',
        HEARDER_NODE_LIST: 'Список вузлів',
        HEADER_NODE_SELECT: 'Вибрати вузол',
        HEADER_NODE_CUSTOM: 'Користувацький вузол',
        HEADER_NODE_CONNECT: 'Підключитись',
        HEADER_NODE_CUSTOM_INFO: 'Іp вузла або домен',
        HEADER_NODE_CUSTOM_TOOLTIP: 'Додати власний NIS вузол',
        HEADER_PURGE: 'Очищення',
        HEADER_PURGE_MESSAGE: 'Будь-ласка підтвердить очищення локального сховища. Натискаючи кнопку "ОК" Ви погоджуєтесь, що вся інформація про ваші локальні сховища у цьому браузері буде видалена без можливості відновлення. Будь-ласка, переконайтесь у тому, що у всіх гаманців створена резервна копія для гарантії безпеки Ваших коштів.',
        HEADER_OFFLINE_TX: 'Підготовка offline транзакції',
        HEADER_RELEASE_TX: 'Провести транзакцію',

        // FOOTER COMPONENT
        FOOTER_POWERED_BY_1: 'За підтримки',
        FOOTER_POWERED_BY_2: 'технології NEM.',
        FOOTER_VERSION: 'Версія',

        // DASHBOARD MODULE
        DASHBOARD_TITLE: 'Головна панель',
        DASHBOARD_UNCONFIRMED: 'Не підтверджені',
        DASHBOARD_CONFIRMED: 'Підтверджені',
        DASHBOARD_HARVEST_INCOME_TITLE: 'Прибуток/надходження з останніх 25 блоків',
        DASHBOARD_HARVEST_INCOME_NOTE: 'Тільки блоки із комісією вище 0',
        DASHBOARD_HARVEST_INCOME_MESSAGE: 'В останніх 25 блоках комісію не знайдено',
        DASHBOARD_NEWS_TITLE: 'Останні новини',
        DASHBOARD_HARVESTED_BLOCKS_TITLE: 'Зібрані блоки',
        DASHBOARD_HARVESTED_BLOCKS_TH: 'Зароблені комісії',
        DASHBOARD_MARKET_INFO_TITLE: 'Інформація про ринок',
        DASHBOARD_MARKET_INFO_CAP: 'Ринкова капіталізація',
        DASHBOARD_MARKET_INFO_PRICE: 'Ціна',
        DASHBOARD_MARKET_INFO_VOLUME: 'Обсяг за 24 години',
        DASHBOARD_MARKET_INFO_CHANGES: 'Зміна у відсотках (24години)',
        DASHBOARD_MARKET_INFO_CHANGES_1H: '1 година',
        DASHBOARD_MARKET_INFO_CHANGES_24H: '24 години',
        DASHBOARD_MARKET_INFO_CHANGES_7D: '7 діб',
        DASHBOARD_MARKET_INFO_NOTE: '<a href="http://coinmarketcap.com/" target="_blank">CoinMarketCap</a> інформація оновлюється кожні 5 хвилин',
        DASHBOARD_NOTICE_1: 'Вітаємо у NanoWallet Beta!',
        DASHBOARD_NOTICE_2: 'Будь-ласка, <a href="https://github.com/NemProject/NanoWallet" target="_blank">повідомте про помилку тут</a>.',
        DASHBOARD_NOTICE_3: 'Команда NEM радить, перед тим, як користуватись основною мережею (mainnet), ознайомитись з усіма функціями NanoWallet у тестовій мережі (testnet). Простий довідник можна знайти <a href="https://blog.nem.io/nanowallet-tutorial/" target="_blank"> тут </a>. Користувачі самі несуть відповідальність за збереження своїх коштів та створення резервних копій приватних ключів. Команда NEM не несе відповідальності за будь-яку втрату коштів через використання цього додатку в головній мережі (mainnet).',
        DASHBOARD_NOTICE_4: 'Ми рекомендуємо записати приватні ключі на папері та зберігати у безпечному місці. Додатково, для створення резервної копії, Ви можете здійснити імпорт своїх рахунків до додатку на Android чи iOS.',
        DASHBOARD_NOTICE_5: 'Дякуємо за Вашу участь!',
        DASHBOARD_MORE_TXES: 'Подивитись більше транзакцій',

        // GENERAL
        GENERAL_BLOCK: 'Блок',
        GENERAL_BLOCKS: 'Блоки',
        GENERAL_NO_RESULTS: 'Нема результату для показу',
        GENERAL_ACCOUNT: 'Обліковий запис',
        GENERAL_ACCOUNTS: 'Облікові записи',
        GENERAL_MULTISIG_ACCOUNT: 'Мультипідписний обліковий запис',
        GENERAL_AMOUNT: 'Сума',
        GENERAL_MESSAGE: 'Повідомлення',
        GENERAL_DATE: 'Дата',
        GENERAL_TAB_NORMAL: 'Звичайний',
        GENERAL_TAB_SEND: 'Надіслати',
        GENERAL_TAB_MULTISIG: 'Мультипідпис',
        GENERAL_TOTAL: 'Разом',
        GENERAL_REMOVE: 'Видалити',
        GENERAL_MOSAIC: 'Мозаїка',
        GENERAL_FEE: 'Комісія',
        GENERAL_LEVY: 'Збір',
        GENERAL_LEVY_TYPES: 'Види зборів',
        GENERAL_LEVY_TYPES_NOTE: 'I - постійна комісія; II - на основі відсотку',
        GENERAL_LEVY_TYPE_1: 'Постійна комісія',
        GENERAL_LEVY_TYPE_2: 'На основі відсотку',
        GENERAL_SEND: 'Надіслати',
        GENERAL_TO: 'Одержувач',
        GENERAL_HASH: 'Хеш',
        GENERAL_HASH_FUNCTION: 'Хеш функція',
        GENERAL_NAME: 'Ім"я',
        GENERAL_INFORMATION: 'Інформація',
        GENERAL_ADDRESS: 'Адреса',
        GENERAL_PUBLIC_KEY: 'Публічний ключ',
        GENERAL_PRIVATE_KEY: 'Приватний ключ',
        GENERAL_CLEAR_ALL: 'Очистити все',
        GENERAL_CLOSE: 'Закрити',
        GENERAL_COMING_SOON: 'Незабаром',
        GENERAL_NONE: 'Нічого',
        GENERAL_DROPBOX: 'Перемістіть файли сюди або натисніть, щоб вибрати',
        GENERAL_NETWORK_FEE: 'Комісія мережі',
        GENERAL_YES: 'Так',
        GENERAL_NO: 'Ні',
        GENERAL_TAGS: 'Теги',
        GENERAL_SINK: 'Sink',
        GENERAL_SINK_ADDRESS: 'Sink адреса',
        GENERAL_STORAGE: 'Сховище',
        GENERAL_REASON: 'Причина',
        GENERAL_TRANSACTION_HASH: 'Хеш транзакції',
        GENERAL_TRANSACTION_ID: 'ID транзакції',
        GENERAL_OWNER: 'Власник',
        GENERAL_RESULTS: 'Результати',
        GENERAL_RESULT: 'Результат',
        GENERAL_STATUS: 'Статус',
        GENERAL_LOCATION: 'Місцезнаходження',
        GENERAL_ACTION: 'Дія',
        GENERAL_ACTIONS: 'Дії',
        GENERAL_ADD: 'Додати',
        GENERAL_ADDED: 'Додано',
        GENERAL_REMOVED: 'Видалено',
        GENERAL_COSIGNATORY: 'Підписант',
        GENERAL_COSIGNATORIES: 'Підписанти',
        GENERAL_PROCESSING: 'Обробка',
        GENERAL_ACCOUNT_LABEL: 'Мітка облікового запису',
        GENERAL_OPTIONAL: '(не обов"язково)',
        GENERAL_ERROR: 'Помилка',
        GENERAL_EXAMPLE: 'Приклад',
        GENERAL_PUBLIC: 'Публічний',
        GENERAL_NAMESPACES: 'Простори імен',
        GENERAL_NAMESPACE: 'Простір імен',
        GENERAL_SUB_NAMESPACES: 'Підпростори імен',
        GENERAL_SUB_NAMESPACE: 'Підпростір імен',
        GENERAL_MOSAICS: 'Мозаїки',
        GENERAL_VALUE: 'Значення',
        GENERAL_CONNECTION_ERROR: 'Виникла помилка: вузол недоступний, або відсутнє підключення до мережі',
        GENERAL_HISTORY: 'Історія',
        GENERAL_REVEAL: 'Показати',
        GENERAL_QR: 'QR код',
        GENERAL_UPDATE:  'Оновити',
        GENERAL_UNKNOWN: 'Невідомо',
        GENERAL_IMPORTANCE: 'Важливість',
        GENERAL_TRANSACTIONS: 'Транзакції',
        GENERAL_REGISTER: 'Зареєструвати',
        GENERAL_CREATE: 'Створити',
        GENERAL_RENEW: 'Продовжити',
        GENERAL_CHARACTERS_LEFT: 'Залишилось символів',
        GENERAL_CURRENCY: 'Валюта',
        GENERAL_EDIT: 'Редагувати',
        GENERAL_SEND_XEM: 'Надіслати XEM',
        GENERAL_ACTIVE: 'Активний',
        GENERAL_INACTIVE: 'Не активний',
        GENERAL_ACTIVATING: 'Активація',
        GENERAL_DEACTIVATING: 'Деактивація',
        GENERAL_REMOTE: 'Віддалений',
        GENERAL_WARNING: 'Попередження',
        GENERAL_SCORE: 'Оцінка',
        GENERAL_LENGTH: 'Довжина',
        GENERAL_GO_BACK: 'Повернутись',
        GENERAL_NEXT: 'Наступний',
        GENERAL_START: 'Початок',
        GENERAL_ALIAS: 'Псевдонім',
        GENERAL_CONTACTS: 'Контакти',
        GENERAL_ENCRYPTED: 'Зашифрований',
        GENERAL_UNENCRYPTED: 'Нешифрований',
        GENERAL_HEXADECIMAL: 'Шістнадцятковий',
        GENERAL_SELECT_ACCOUNT: 'Вибрати обліковий запис',
        GENERAL_INVOICE: 'Рахунок-фактура',
        GENERAL_SIGNATURE: 'Підпис',
        GENERAL_VERIFY: 'Завірити',

        // HOME MODULE
        HOME_UNSUPPORTED_BROWSER: 'Вибачте, але користування NanoWallet у цьому браузері небезпечно...',
        HOME_RECOMMENDED_BROWSERS: 'Рекомендовані браузери:',
        HOME_FEATURE_STAND_BY: 'Наведіть курсор на функцію для відображення інформації.',
        HOME_FEATURE_1: 'Надсилати та отримувати XEM легко та майже миттево, лише 1 хвилина на появу блоку!',

        // TRANSFER TRANSACTION MODULE
        TRANSFER_TRANSACTION_TITLE: 'Відправлення та отримання',
        TRANSFER_TRANSACTION_NAME: 'Передача транзакції',
        TRANSFER_TRANSACTION_MULTISIG_NAME: 'Передача мультипідписної транзакції',
        TRANSFER_TRANSACTION_INVOICE: 'Створити рахунок-фактуру',
        TRANSFER_TRANSACTION_TAB_INVOICE: 'Отримати',
        TRANSFER_TRANSACTION_MOSAIC_TRANSFER: 'Передача мозаїки',
        TRANSFER_TRANSACTION_ATTACH_MOSAIC: 'Прикрипіти мозаїку',
        TRANSFER_TRANSACTION_ATTACH: 'Прикрипіти',
        TRANSFER_TRANSACTION_MOSAICS_ATTACHED: 'Мозаїка прикріплена',
        TRANSFER_TRANSACTION_ENCRYPT_MESSAGE: 'Зашифрувати повідомлення',
        TRANSFER_TRANSACTION_MESSAGE_TYPE: 'Тип повідомлення',

        // TRANSACTION LINES
        LINE_TX_DETAILS_FROM: 'Відправник',
        LINE_TX_DETAILS_FROM_MULTISIG: 'Мультипідписи',
        LINE_TX_DETAILS_WAITING: 'Транзакція очікує на включення',
        LINE_TX_DETAILS_NEED_SIG: 'Потребує підпису підписантами',
        LINE_TX_DETAILS_NEED_SIG_2: 'Потребує Ваш підпис',
        LINE_TX_DETAILS_MESS_DEC: 'Розшифрувати',
        LINE_TX_DETAILS_HASH: 'Хеш',
        LINE_TX_DETAILS_DEC_MESS: 'Розшифрувати повідомлення',
        LINE_TX_DETAILS_MOS_ATTACHED: 'Прикріплені мозаїки',
        LINE_TX_DETAILS_LEVY_TYPE_1: 'Постійна',
        LINE_TX_DETAILS_LEVY_TYPE_2: 'На основі відсотку',
        LINE_TX_DETAILS_ISSUER: 'Емітент',
        LINE_TX_DETAILS_MULTISIG_FEE: 'Комісія за мультипідпис',
        LINE_TX_DETAILS_MULTISIG_HASH: 'Хеш мультипідпису',
        LINE_TX_DETAILS_COSIGN: 'Підписати транзакцію',
        LINE_TX_DETAILS_SIGNATURES: 'Підпис(и)',
        LINE_TX_DETAILS_COSIGNATORY: 'Підписант',
        LINE_TX_DETAILS_TIMESTAMP: 'Тимчасова мітка',
        LINE_TX_DETAILS_MOS_CREATE: 'Створити мозаїку',
        LINE_TX_DETAILS_MOS_EDIT: 'Редагувати мозаїку',
        LINE_TX_DETAILS_NS_CREATE: 'Створити простір імен',
        LINE_TX_DETAILS_NS_NEW_SUB: 'Новий підпростір імен',
        LINE_TX_DETAILS_NS_ROOT: 'Кореневий простір імен',
        LINE_TX_DETAILS_RECIPIENT: 'Одержувач',
        LINE_TX_DETAILS_MULTISIG_CREATE: 'Створити мультипідписний обліковий запис',
        LINE_TX_DETAILS_MULTISIG_EDIT: 'Редагувати мультипідписний обліковий запис',
        LINE_TX_DETAILS_MULTISIG_MOD: 'Модифікації',
        LINE_TX_DETAILS_MULTISIG_MIN_COSIG: 'Мінімальна кількість підписантів',
        LINE_TX_DETAILS_MULTISIG_AFFECTED: 'Обліковий запис під впливом',

        // IMPORTANCE MODULE
        IMPORTANCE_TRANSFER_NAME: 'Транзакція предачі важливості',
        IMPORTANCE_TRANSFER_MULTISIG_NAME: 'Транзакція передачі важливості з мультипідписом',
        IMPORTANCE_TRANSFER_MODE: 'Режим',
        IMPORTANCE_TRANSFER_MODE_1: 'Активувати',
        IMPORTANCE_TRANSFER_MODE_2: 'Деактивувати',
        IMPORTANCE_TRANSFER_TITLE: 'Управління делегованим обліковим записом',
        IMPORTANCE_TRANSFER_MULTISIGNATURE_TITLE: 'Управління делегованим обліковим записом мультипідписного облвкового запису',
        IMPORTANCE_TRANSFER_CUSTOM_KEY: 'Використати спеціальний публічний ключ',
        IMPORTANCE_TRANSFER_MODE_SELECT: 'Вибрати режим',
        IMPORTANCE_TRANSFER_REMOTE_ACCOUNT: 'Віддалений обліковий запис',
        IMPORTANCE_TRANSFER_REMOTE_PUBLIC: 'Публічний ключ віддаленого облікового запису',
        IMPORTANCE_TRANSFER_INFO_PART_1: 'Після включення транзакції передачі важливості до блоку, для її активації необхідно 6 годин. Після цього, Вам буде надано доступ до вибору вузла та команд старт/стоп.',
        IMPORTANCE_TRANSFER_INFO_PART_2: 'Переконайтесь, що Ви раніше не активували делегований обліковий запис (у разі, якщо він імпортований). Якщо це так, Ви можете використати старий публічний ключ делегованого облікового запису для його деактивації (при необхідності).',
        IMPORTANCE_TRANSFER_INFO_PART_MULTISIG: 'Для мультипідписних облікових записів тільки підписант, який ініціював транзакцію передачі важливості, може розпочати чи зупинити збір блоків (харвестінг). Якщо будь-який інший підписант має бажання повернути контроль за збором блоків, йому потрібно лише деактивувати та відновити віддалений статус.',
        IMPORTANCE_TRANSFER_NO_BLOCKS_HARVESTED: 'Жодного блоку не зібрано',
        IMPORTANCE_TRANSFER_HARVESTING_PANEL: 'Панель збору блоків',
        IMPORTANCE_TRANSFER_REMOTE_ACTIVATING: 'Почекайте, доки Ваш віддалений статус буде активовано для початку делегованого збору блоків (6 годин)',
        IMPORTANCE_TRANSFER_REMOTE_INACTIVE: 'Вам потрібно зробити відправлення важливості з лівої панелі для активації Вашого віддаленого облікового запису.',
        IMPORTANCE_TRANSFER_MULTISIG_NOT_INITIATOR: 'Ви не є підписантом-ініціатором передачі важливості, тому Ви не можете бачити, розпочати, чи зупинити статус делегованого збору блоків. Будь-ласка, зверніться до підписанта, який управляє віддаленим обліковим записом. Ви можете змістити менеджера та повернути контроль за збором блоків через деактивацію та відновлення Вашого віддаленого статусу.',
        IMPORTANCE_TRANSFER_PRIVATE_KEY_PLACEHOLDER: 'Показати приватний ключ делегованого облікового запису',
        IMPORTANCE_TRANSFER_DELEGATED_KEYS: 'Ключ делегованого облікового запису',
        IMPORTANCE_TRANSFER_HARVESTING_STATUS: 'Статус збору блоків (харвестінгу)',
        IMPORTANCE_TRANSFER_START_HARVESTING: 'Розпочати делегований збір блоків (харвестінг)',
        IMPORTANCE_TRANSFER_STOP_HARVESTING: 'Зупинити делегований збір блоків (харвестінг)',
        IMPORTANCE_TRANSFER_ACTIVATE_DEACTIVATE_REMOTE: 'Активувати / Деактивувати делегований обліковий запис',
        IMPORTANCE_TRANSFER_SHOW_DELEGATED_KEYS: 'Показати ключі делегованого облікового запису',

        // CREATE MOSAIC MODULE
        MOSAIC_DEFINITION_TITLE: 'Створення мозаїки',
        MOSAIC_DEFINITION_NAME: 'Транзакція визначення мозаїки',
        MOSAIC_DEFINITION_MULTISIG_NAME: 'Транзакція визначення мультипідписної мозаїки',
        MOSAIC_DEFINITION_QUANTITY: 'Кількість',
        MOSAIC_DEFINITION_DIV: 'Подільність',
        MOSAIC_DEFINITION_TOTAL_SUPPLY: 'Загальний випуск',
        MOSAIC_DEFINITION_FINAL_NAME: 'Повне ім\'я',
        MOSAIC_DEFINITION_DESCRPITION: 'Опис',
        MOSAIC_DEFINITION_INITIAL_SUPPLY: 'Первинний випуск',
        MOSAIC_DEFINITION_MUTABLE_SUPPLY: 'Змінний обсяг випуску',
        MOSAIC_DEFINITION_TRANSFERABLE: 'Можливість передачі',
        MOSAIC_DEFINITION_PROPERTIES: 'Властивості',
        MOSAIC_DEFINITION_MOSAIC_PROPERTIES: 'Властивості мозаїки',
        MOSAIC_DEFINITION_REQUIRES_LEVY: 'Потребує оподаткування',
        MOSAIC_DEFINITION_LEVY_LIMITATION: 'Обмеження інтерфейсу користувача: на даний час у якості податку дозволяється використовувати тільки власні мозаїки',
        MOSAIC_DEFINITION_LEVY_SELECT_MOSAIC: 'Вибрати мозаїку для оподаткування',
        MOSAIC_DEFINITION_LEVY_ADDRESS: 'Рахунок для податку',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE: 'Тип комісії',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_1: 'Абсолютна',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2: 'Відсоткова',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_1_NOTE: 'Вибираючи абсолютний податок, буде стягуватись постійна плата у розмірі',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE: 'Вибираючи відсотковий податок, буде стягуватись лінійна плата:',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE_2: 'Відправлення',
        MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE_3: 'буде означати стягнення',
        MOSAIC_DEFINITION_PARENT: 'Батьківський простір імен',
        MOSAIC_DEFINITION_INFORMATION_TITLE: 'Створення мозаїки',
        MOSAIC_DEFINITION_INFORMATION: 'Потрібно більше інформації про мозаїки?',
        MOSAIC_DEFINITION_INFORMATION_1: 'Максимальна довжина імені мозаїки не повинна перевищувати 32 символа. Дозволено використання таких символів:',
        MOSAIC_DEFINITION_INFORMATION_2: 'Перший символ повинен бути літерою або цифрою.',
        MOSAIC_DEFINITION_INFORMATION_3: 'Опис не повинен перевищувати 512 символів у довжину. Немає обмежень у використанні типу символів в описі.',
        MOSAIC_DEFINITION_INFORMATION_4: 'Поведінка мозаїки може бути налаштована за допомогою набору властивостей:',
        MOSAIC_DEFINITION_INFORMATION_5: 'Обсяг випуску мозаїки повинен бути цілим числом, не дробним. Первинний випуск повинен бути в діапазоні від 0 до 9,000,000,000.',
        MOSAIC_DEFINITION_INFORMATION_6: 'Подільнсть визначає, до якого знаку після коми може бути поділена мозаїка. Так, подільність 3 означає, що мозаїка може бути поділена на малі частини до 0.001 мозаїки, тобто 1 мілімозаїка є найменшою часткою. Подільність має бути в діапазоні від 0 до 6.',
        MOSAIC_DEFINITION_INFORMATION_7: 'Якщо вибрати даний пункт, то обсяг випуску мозаїки можна у подальшому змінити, в іншому випадку обсяг випуску є незмінним.',
        MOSAIC_DEFINITION_INFORMATION_8: 'Дозволяє передачу мозаїк між іншими обліковими записами, які відмінні від облікового запису, на якому вони створені. При відсутності вибору властивості \'переказуваний\', передача мозаїк даного типу можлива. тільки якщо відправником або отримувачем є обліковий запис, на якому створено мозаїку. При виборі даної властивості передача мозаїки дозволена до та з будь-якого облікового запису.',
        MOSAIC_DEFINITION_INFORMATION_9: 'Обліковий запис, на якому створено мозаїку, може стягувати з відправника особливу комісію та направляти її на обліковий запис за власним вибором (тобто, даний обліковий запис може встановити себе за отримувача даної комісії). Дані для стягнення комісії такі:',
        MOSAIC_DEFINITION_INFORMATION_10: 'Мозаїка, в якій повинна бути оплачена комісія. Можна вибрати будь-яку існуючу мозаїку.',
        MOSAIC_DEFINITION_INFORMATION_11: 'Отримувач комісії. Може бути будь-який обліковий запис.',
        MOSAIC_DEFINITION_INFORMATION_12: 'Розмір комісії. Інтерпретація залежить від вибору \'тип комісії\', дивись вище.',
        MOSAIC_DEFINITION_INFORMATION_13: 'Підтримується два типи комісії: абсолютна та відсоткова.',
        MOSAIC_DEFINITION_INFORMATION_14: 'Комісія встановлена як абсолютна, таким чином не залежить від обсягу, який передається.',
        MOSAIC_DEFINITION_INFORMATION_15: 'Комісія, встановлена у відсотках від кількості, що передається. Таким чином, комісія лінійно зростає зі збільшенням кількості мозаїки, яка передається.',
        MOSAIC_DEFINITION_INFORMATION_16: 'Відправка мозаїк у блокчейні NEM потребує комісію. Точна комісія розраховується залежно від остаточної кількості мозаїк та Їх обсягу в одній транзакції. За одну відправку <b>мозаїки малого бізнесу</b> встановлена ставка зі знижкою у 0.05 XEM. Це мозаїки загальною кількістю меньше ніж 10,000 та подільністю, яка дорівнює 0.',
        MOSAIC_DEFINITION_INFORMATION_17: 'Якщо Ви володієте 100% загального випуску, Ви можете переписати всі властивості мозаїки через надсилання знов транзакції створення із таким же "namespace:mosaic" ім"ям.',

        // EDIT MOSAIC MODULE
        MOSAIC_SUPPLY_CHANGE_TITLE: 'Змінити загальний обсяг випуску мозаїки',
        MOSAIC_SUPPLY_CHANGE_NAME: 'Транзакція зміни загального обсягу випуску мозаїки',
        MOSAIC_SUPPLY_CHANGE_MULTISIG_NAME: 'Транзакція зміни загального обсягу випуску мозаїки з мультипідписом',
        MOSAIC_SUPPLY_CHANGE_SELECT: 'Вибрати мозаїку',
        MOSAIC_SUPPLY_CHANGE_TYPE: 'Змінити тип',
        MOSAIC_SUPPLY_CHANGE_TYPE_1: 'Створити',
        MOSAIC_SUPPLY_CHANGE_TYPE_2: 'Видалити',
        MOSAIC_SUPPLY_CHANGE_SUPPLY: 'Загальний обсяг випуску',
        MOSAIC_SUPPLY_CHANGE_CURRENT_SUPPLY: 'Поточний обсяг випуску',
        MOSAIC_SUPPLY_CHANGE_AMOUNT: 'Змінити суму',
        MOSAIC_SUPPLY_CHANGE_RES_SUPPLY: 'Підсумковий обсяг випуску',

        // NAMESPACE MODULE
        NAMESPACE_PROVISION_TITLE: 'Створити простір імен та підпростір імен',
        NAMESPACE_PROVISION_NAME: 'Транзакція створення простору імен',
        NAMESPACE_PROVISION_MULTISIG_NAME: 'Мультипідписна транзакція створення простору імен',
        NAMESPACE_PROVISION_PARENT: 'Батьківський простір імен',
        NAMESPACE_PROVISION_NEW_ROOT: 'Новий головний простір імен',
        NAMESPACE_PROVISION_NS: 'Простір імен',
        NAMESPACE_PROVISION_NS_NAME: 'Назва простору імен',
        NAMESPACE_PROVISION_RESTRICTIONS: 'Обмеження простору імен',
        NAMESPACE_PROVISION_INFORMATION_1: 'Простори імен мають певні обмеження щодо дозволених до використання символів в частках та щодо довжини частки. Головний простір імен може бути довжиною не більше 16 символів, а підпростори імен - довжиною не більше 64 символів. Символи, дозволені до використання:',
        NAMESPACE_PROVISION_INFORMATION_2: 'Назва частки повинна починатись з літери або числа, таким чином назва \'alice\' є дозволеною назвою для головного простору імен, а назва \'_alice\' - ні. Деякі назви зарезервовані та недоступні до використання у назвах часток простору імен. Серед таких частин простору імен:',
        NAMESPACE_PROVISION_INFORMATION_3: 'Цей перелік не є остаточним та може бути розширений у майбутньому. Наприклад, назва \'user.alice\' або \'alice.user\' не дозволені до використання в системі простору імен NEM. Назва простору імен може мати до 3 частин, наприклад \'qm.metals.silver\' є дозволеною назвою, а \'qm.metals.silver.coin\' - не дозволеною.',

        // RENEW NAMESPACE MODULE
        RENEW_NS_TITLE: 'Відновити простір імен',
        RENEW_NS_NONE: 'Немає просторів імен для відновлення',
        RENEW_NS_INFORMATION_TITLE: 'Простори імен, які відновлюються',
        RENEW_NS_INFORMATION_TITLE_1: 'Комісії',
        RENEW_NS_INFORMATION_TITLE_2: 'Головні простори імен',
        RENEW_NS_INFORMATION_TITLE_3: 'Період відновлення',
        RENEW_NS_INFORMATION_1: 'Відновлення простору імен коштує так само, як і реєстрація нового, а саме 100 XEM.',
        RENEW_NS_INFORMATION_2: 'Відновленню підлягає тільки головний простір імен. Всі підпростори будуть відновлені автоматично після відновлення головного.',
        RENEW_NS_INFORMATION_3: 'Створення простору імен є контрактом оренди на основі ланцюжків блоків з терміном дії один рік. Контракт може бути відновлений за місяць до, чи після дати його закінчення.',
        RENEW_NS_INFORMATION_4: 'Якщо вчасно не відновити простір імен, то всі підпростори імен та мозаїки будуть втрачені.',
        RENEW_NS_ALERT_PART_1: '<b>Попередження!</b> Термін дії простору імен:',
        RENEW_NS_ALERT_PART_2: 'закінчується меньше ніж через місяць! ',
        RENEW_NS_ALERT_PART_3: 'Для отримання додаткової інформації, перейдіть на <b>сторінку відновлення простору імен</b>.',

        // ACCOUNT MODULE
        ACCOUNT_TITLE: 'Обліковий запис',
        ACCOUNT_ACCOUNT_INFORMATION: 'Інформація про обліковий запис',
        ACCOUNT_IMPORTANCE_SCORE: 'Оцінка важливості',
        ACCOUNT_VESTED_BALANCE: 'Активний баланс',
        ACCOUNT_HARVESTING: 'Збір блоків',
        ACCOUNT_REMOTE_STATUS: 'Віддалений статус',
        ACCOUNT_DELEGATED_PUBLIC: 'Публічний ключ делегованого облікового запису',
        ACCOUNT_HARVESTED_BLOCKS: 'Зібрані блоки',
        ACCOUNT_START_STOP_HARVESTING: 'Старт / Стоп делегованого збору блоків',
        ACCOUNT_HARVESTING_NOTE: 'Інформація про вузол, який збирав блоки для цього облікового запису, збережена у Вашому <b>локальному сховищі браузера</b>. Якщо сховище браузера очистити, то гаманець не матиме інформації, який вузол Ви використовували, тому <b>статус збору блоків</b> буде відображений як <b>неактивний</b>. У цьому випадку, виберіть вузол, який Ви використовували до цього, і статус збору блоків буде відновлений автоматично. Якщо статус не відновився, перевірте, чи правильний вузол Ви обрали; в іншому випадку це означатиме, що вузол було перезавантажено і ваш обліковий запис більше не проводить збір блоків.',
        ACCOUNT_HARVESTING_NODE_SELECT: 'Виберіть вузол для збору блоків',
        ACCOUNT_HARVESTING_START: 'Розпочати делегований збір блоків',
        ACCOUNT_HARVESTING_STOP: 'Зупинити делегований збір блоків',
        ACCOUNT_HARVESTING_NO_SLOTS: 'На даному вузлі немає вільних слотів, будь-ласка, оберіть інший',
        ACCOUNT_HARVESTING_BELOW_THRESHOLD: 'Для початку делегованого збору блоків Вам необхідно мати на балансі 10 000 XEM',
        ACCOUNT_ACCOUNT_SELECT: 'Виберіть інший обліковий запис',
        ACCOUNT_ACCOUNT_SELECT_LABEL: 'Виберіть обліковий запис',
        ACCOUNT_WALLET_KEYS: 'Гаманець та ключі',
        ACCOUNT_ADD_NEW_ACCOUNT: 'Додати новий обліковий запис',
        ACCOUNT_ADD_NEW_ACCOUNT_BTN: 'Додати новий обліковий запис до гаманця',
        ACCOUNT_PRIVATE_KEY_NOTE: 'Ваш приватний ключ зберігає всю інформацію Вашого облікового запису. Переконайтесь, що він збережений у надійному місці <b><u>не в мережі</u></b>: зашифруйте за допомогою паролю у файл із розширенням .wlt, запішіть на папері, або на картинці, чи завантажте через <b><u>експорт QR коду гаманця</u></b>.',
        ACCOUNT_PRIVATE_KEY_SHOW: 'Показати приватний ключ',
        ACCOUNT_EXPORT_MOBILE: 'Експортувати на мобільний телефон',
        ACCOUNT_INFO_QR_BTN: 'Поділитись інформацією про обліковий запис за допомогою QR коду',
        ACCOUNT_WALLET_QR_BTN: 'QR код гаманця',
        ACCOUNT_WALLET_QR_BTN_2: 'Експортувати QR код гаманця до присторою (Android чи IOS)',
        ACCOUNT_BACKUP_WALLET: 'Зробити резервне копіювання гаманця',
        ACCOUNT_BACKUP_WALLET_NOTE: 'Це <b><u>дуже важливо</u></b>, тому що резервні копії Ваших гаманців використовуються для відновлення входу в систему, в іншому випадку Ваші XEM буде втрачено.',
        ACCOUNT_BACKUP_WALLET_DOWNLOAD: 'Завантажити гаманець',
        ACCOUNT_INFO_QR_TITLE: 'Інформація про обліковий запис (QR код)',
        ACCOUNT_WALLET_QR_NOTE: 'Даний QR код використовуватиметься для входу у майбутніх версіях мобільного додатку NEMpay',
        ACCOUNT_WALLET_QR_ANDROID_IOS_TITLE: 'QR гаманця для додатків на базі Android та IOS',
        ACCOUNT_ADD_NEW_ACCOUNT_WARNING: 'Вся інформація про облікові записи отримується з Вашого основного приватного ключа та паролю, використовуючи BIP32, тобто, як Ваш основний приватний ключ, так і пароль, необхідні для доступу/відновлення всіх Ваших інших облікових записів. <br> Через це <b>дуже рекомендується</b> робити резервні копії Вашого гаманця після додавання нових облікових записів, щоб не робити операцію повторно, якщо інформація у локальному сховищі буде стерта.',
        ACCOUNT_CUSTOM_NODE: 'Використати інший вузол',
        ACCOUNT_NODE_FROM_LIST: 'Використати вузол зі списку',
        ACCOUNT_DELEGATED_PRIVATE_KEY: 'Приватний ключ делегованого облікового запису',
        ACCOUNT_NO_PUBLIC_KEY: 'Для отримання публічного ключа Вам необхідно провести транзакцію',
        ACCOUNT_SHOW_ON_TREZOR_BTN: 'Показати у гаманці TREZOR',
        ACCOUNT_SHOW_ON_LEDGER_BTN: 'Показати у гаманці LEDGER',

        // PORTAL MODULE
        PORTAL_TITLE: 'Сервіси',
        PORTAL_MULTISIG_TITLE: 'Мультипідписні та Багатокористувацькі облікові записи',
        PORTAL_MULTISIG_TEXT: 'Мультипідписні облікові записи - це контракти на основі ланцюжків блоків, які редагуються. Вони є найпотужнішим засобом захисту коштів, дозволяють кільком користувачам управляти одним обліковим записом та є основою для створення децентралізованих автономних організацій (DAOs).',
        PORTAL_MULTISIG_BTN_1: 'Перетворити обліковий запис на мультипідписний',
        PORTAL_MULTISIG_BTN_2: 'Редагувати існуючий контракт',
        PORTAL_MULTISIG_BTN_3: 'Підписати мультипідписні транзакції',
        PORTAL_HARVESTING_TITLE: 'Делегований збір блоків',
        PORTAL_HARVESTING_TEXT: 'Делегований збір блоків є ознакою, що дозволяє "майнінг" навіть коли Ваш обліковий запис зачинено.',
        PORTAL_EXCHANGE_TITLE: 'Миттєвий обмін',
        PORTAL_EXCHANGE_TEXT: 'Використовуйте віджети Changelly та ShapeShift для купівлі XEM за найкращим курсом!',
        PORTAL_EXCHANGE_BTN: 'Купити XEM',
        PORTAL_NS_TITLE: 'Простори імен та Піддомени',
        PORTAL_NS_TEXT: 'Простори імен - це імена доменів. Кожен простір імен унікальний та є аутентифікатором мозаїк (активів), які випущені на ньому чи його піддоменах.',
        PORTAL_NS_BTN: 'Створити простір імен',
        PORTAL_MOSAIC_TITLE: 'Мозаїки',
        PORTAL_MOSAIC_TEXT: 'NEM мозаїки є активами, які мають додаткові властивості та функції. Щоб мати можливість створювати мозаїки, обліковий запис повинен орендувати щонайменше один головний простір імен.',
        PORTAL_MOSAIC_BTN_1: 'Створити мозаїку',
        PORTAL_MOSAIC_BTN_2: 'Редагувати мозаїку',
        PORTAL_APOSTILLE_TITLE: 'Апостиль',
        PORTAL_APOSTILLE_TEXT: 'Користуйтеся сервісом NEM Апостиль для створення нотаріальних посвідчень на основі технології блокчейн із тимчасовою міткою, для відстеження прав власності та перевірки автентичності документів.',
        PORTAL_APOSTILLE_BTN_1: 'Створити',
        PORTAL_APOSTILLE_BTN_2: 'Авдитувати',
        PORTAL_ADDRESS_BOOK_TEXT: 'Призначити мітки адресам, щоб легко відстежувати контакти.',
        PORTAL_ADDRESS_BOOK_BTN: 'Управління адресною книгою',
        PORTAL_INVOICE_TEXT: 'Створити рахунок-фактуру для передачі за допомогою QR коду',
        PORTAL_SIGNED_MSG_TEXT: 'Створити та підтвердити підписані повідомлення для автентифікації права власності на обліковий запис без здійснення транзакції.',

        // ADDRESS BOOK MODULE
        ADDRESS_BOOK_TITLE: 'Адресна книга',
        ADDRESS_BOOK_NAVIGATION: 'Навігація',
        ADDRESS_BOOK_NEW: 'Новий контакт',
        ADDRESS_BOOK_EDIT: 'Редагувати контакт',
        ADDRESS_BOOK_REMOVE: 'Видалити контакт',
        ADDRESS_BOOK_NEW_BTN: 'Додати',
        ADDRESS_BOOK_EDIT_BTN: 'Зберегти',
        ADDRESS_BOOK_REMOVE_BTN: 'Видалити',
        ADDRESS_BOOK_EXPORT_BTN: 'Експортувати адресну книгу',
        ADDRESS_BOOK_IMPORT_BTN: 'Імпортувати адресну книгу',
        ADDRESS_BOOK_CONTACT_LABEL: 'Мітка',
        ADDRESS_BOOK_ACCOUNT_ADDRESS: 'Адреса облікового запису',
        ADDRESS_BOOK_ACTIONS: 'Дії',
        ADDRESS_BOOK_CONFIRM_DELETE: 'Підтвердити видалення запису в адресній книзі',

        // EXPLORER MODULE NAV
        EXPLORER_NAV_HOME: 'Головна',
        EXPLORER_NAV_NSM: 'Простори імен та мозаїки',
        EXPLORER_NAV_APOSTILLES: 'Апостилі',

        // EXPLORER HOME MODULE
        EXPLORER_HOME_TITLE: 'Провідник - Головна',
        EXPLORER_HOME_NS: 'Ваші простори імен',
        EXPLORER_HOME_MOSAICS: 'Ваші мозаїки',
        EXPLORER_HOME_NS_MULTISIG: 'Простори імен із мультипідписом',
        EXPLORER_HOME_MOSAICS_LEVY: 'Податок мозаїки',

        // EXPLORER NAMESPACES AND MOSAICS
        EXPLORER_NS_MOS_TITLE: 'Провідник - Простори імен та мозаїки',
        EXPLORER_NS_MOS_SELECT_MOS: 'Деталі обраної мозаїки',
        EXPLORER_NS_MOS_SEARCH: 'Пошук простору імен',

        // EXPLORER APOSTILLES MODULE
        EXPLORER_APOSTILLES_TITLE: 'Провідник - Апостилі',
        EXPLORER_APOSTILLES_YOURS: 'Ваші Апостилі',
        EXPLORER_APOSTILLES_PUBLIC: 'Публічний sink',
        EXPLORER_APOSTILLES_NO_NTY: 'Файл nty не завантажено, будь-ласка, натисніть тут для його імпорту.',

        // ACCOUNT EXPLORER
        ACCOUNTS_EXPLORER_TITLE: 'Провідник - Облікові записи',
        ACCOUNTS_EXPLORER_SEARCH: 'Пошук',

        // TRANSACTIONS EXPLORER
        EXPLORER_TRANSACTIONS_TITLE: 'Історія Ваших транзакцій',
        EXPLORER_TRANSACTIONS_LOAD_MORE: 'Завантажити більше',

        // APOSTILLE HISTORY MODULE
        APOSTILLE_HISTORY_TITLE: 'Історія Апостилів',
        APOSTILLE_HISTORY_BTN_TRANSFER: 'Передача / Розподіл прав власності',
        APOSTILLE_HISTORY_BACKUP: 'Резервне копіювання нотаріальних даних',
        APOSTILLE_HISTORY_PURGE: 'Очищення нотаріальних даних',

        // CREATE APOSTILLE MODULE
        APOSTILLE_CREATE_TITLE: 'Створити Апостилі',
        APOSTILLE_CREATE_HELP: 'Потрібно більше інформації про Апостиль?',
        APOSTILLE_TRANSACTION_NAME: 'Апостиль транзакція',
        APOSTILLE_TRANSACTION_MULTISIG_NAME: 'Мультипідписна апостиль транзакція',
        APOSTILLE_KEEP_PRIVATE: 'Приватний, доступний для передачі та оновлюваний',
        APOSTILLE_USE_DEDICATED: 'Використати виділений обліковий запис',
        APOSTILLE_FILES_TO_NOTARIZE: 'Файли для нотаріального завірення',
        APOSTILLE_REJECTED: 'Відхилені',
        APOSTILLE_FILE_HASH: 'Хеш файлу',
        APOSTILLE_PRIVATE: 'Приватні',
        APOSTILLE_FILENAME: 'Назва файлу',
        APOSTILLE_NAME_TOO_LONG: 'Назва файлу занадто довга, максимально дозволена довжина складає 32 символи.',
        APOSTILLE_MAX_NUMBER: 'Максимальна кількість апостилів у групі - 25',
        APOSTILLE_INFORMATION_TITLE: 'Створення Апостилю',
        APOSTILLE_INFORMATION_1: 'Кожен завантажений файл обробляється автоматично відповідно до параметрів, встановлених на лівій панелі. Ви можете додати нові файли, змінити параметри, а потім додати більше файлів з іншими параметрами. Ви також можете переключитися на вкладку "Мультипідпис" та додати більше файлів.',
        APOSTILLE_INFORMATION_2: 'Опція "<b>Приватний, доступний для передачі, та оновлюваний</b>" означає, що хеши Ваших файлів підписані Вашим приватним ключем та надіслані до виділеного, ієрархічного, детермінованого (HD) облікового запису. Це означає, що ніхто, крім Вас, не зможе дізнатися, який зміст отримав тимчасову мітку блокчейну, якщо тільки Ви самі не поділитись цим змістом.',
        APOSTILLE_INFORMATION_3: 'Спеціальний HD обліковий запис може бути перетворений у мультипідписний контракт, таким чином, він може бути переданий іншим особам з використанням комбінації підтвердження 1 із 1, або будь-яку m із n комбінацій підтвердження. Він також може мати додаткову інформацію, надіслану йому через повідомлення, з оновленнями та доповненнями до оригінального документа або продукту, який він представляє.',
        APOSTILLE_INFORMATION_4: 'Коли дві чи більше сторін мають бажання разом схвалити тимчасову мітку блокчейну, наприклад при контрактах забов\'язання, обліковий запис, який здійснює нотаріальне посвідчення на блокчейні,  може бути розміщений у мультипідписний контракт з використанням комбінації підтвердження n із n.',
        APOSTILLE_INFORMATION_5: 'Для облікових записів у мультипідписних контрактах, які обрали опцію "<b>Приватний, доступний для передачі та оновлюваний</b>", приватний ключ ініціатора підписів використовується, щоб підписувати хеш та створювати спеціальний HD обліковий запис, а не мультипідписний обліковий запис.',
        APOSTILLE_INFORMATION_6: 'HD обліковий запис - це спеціальний обліковий запис, який створюється із хеш назви файла, а потім підписується Вашим приватним ключем. Хеш, отриманий під час цього процесу, використовується для створення іншого приватного ключа. Це приватний ключ файлу(-ів) з тимчасовою міткою; це єдина технологія на блокчейні, яка використовується тільки в Апостилі.',
        APOSTILLE_INFORMATION_7: 'Спеціальний HD обліковий запис дозволяє Вам зберігати вихідний підписаний хеш файла(-ів) та його оновлення на спеціальному обліковому записі. Якщо обрано опцію <b>"Публічний"</b>, то транзакція передається на публічну sink адресу (за замовчуванням).',
        APOSTILLE_INFORMATION_8: 'Після відправлення транзакцій, відбувається запуск завантаження архіву. Цей архів містить Ваші підписані файли, Ваш сертифікат Апостилю для цього файлу, а також новий чи оновлений файл  .nty для відстеження кожного Вашого файлу, який має Вашу тимчасову мітку у NEM мережі.',
        APOSTILLE_NO_NTY: 'Файл nty не завантажений, будь-ласка, натисніть тут для його імпорту, або він буде створений автоматично.',
        APOSTILLE_IMPORT_FILES: 'Імпортувати файли',
        APOSTILLE_CREATE_TEXT: 'Створити текстовий документ',
        APOSTILLE_ENTER_TEXT: 'Ввести текст для нотаріального посвідчення...',
        APOSTILLE_DOCUMENT_TITLE: 'Назва документу',
        APOSTILLE_DROPBOX_MESSAGE: 'Будь-ласка, перед тим, як вибрати файли введіть Ваш пароль та необхідний тег(-и)',
        APOSTILLE_DROPBOX_MESSAGE_2: 'Будь-ласка, перед тим, як вибрати файли, введіть Ваш пароль',

        // AUDIT APOSTILLE MODULE
        APOSTILLE_AUDIT_TITLE: 'Аудит Апостилів',
        APOSTILLE_AUDIT_CHOOSE_NODE: 'Вибрати вузол',
        APOSTILLE_AUDIT_CHOOSE_NODE_NOTE: 'Тільки деякі вузли можуть отримати доступ до всієї історії транзакцій (за замовчуванням ця опція у NIS відключена).',
        APOSTILLE_AUDIT_WRONG_FORMAT: 'Даний файл не в форматі Апостилю!',
        APOSTILLE_AUDIT_FAIL_NO_PUBLIC_KEY: 'Верифікація не вдалася, власник немає публічного ключа!',
        APOSTILLE_AUDIT_SUCCESS: 'Файл успішно пройшов аудит!',
        APOSTILLE_AUDIT_FAIL: 'Перевірка завершилася невдачею!',
        APOSTILLE_AUDIT_WAITING: 'Передача апостилю очікує підтвердження!',
        APOSTILLE_AUDIT_NOT_FOUND: 'Транзакція не знайдена, переконайтеся, що вона не очікує підтвердження, в іншому випадку апостиль не є дійсним',
        APOSTILLE_AUDIT_ERROR_UNCONFIRMED: 'Виникла помилка при отриманні непідтверждених даних, транзакцію не знайдено.',
        APOSTILLE_AUDIT_ERROR_SIGNER: 'Виникла помилка при отриманні даних підписанта',
        APOSTILLE_AUDIT_ERROR_SIGNATURE: 'Верифікація не вдалася, виникла помилка при перевірці підпису!',
        APOSTILLE_AUDIT_INFORMATION_1: 'Файли, які можуть бути перевірені, повинні бути у <b>форматі апостилю</b>',
        APOSTILLE_AUDIT_INFORMATION_2: 'Ви можете розпізнати їх за ім\'ям файла:',
        //APOSTILLE_AUDIT_NON_SIGNED: 'Non signed exemple:',
        //APOSTILLE_AUDIT_SIGNED: 'Signed exemple:',
        APOSTILLE_AUDIT_FILES: 'Аудит файлів',
        APOSTILLE_AUDIT_FORMAT_EXAMPLE: 'Приклад формату апостилю',
        APOSTILLE_AUDIT_REMOVE_RECORDS: 'Видалити записи локально',

        // APOSTILLE MESSAGE MODULE
        APOSTILLE_MESSAGE_TITLE: 'Відправити повідомлення до облікового запису нотаріального посвідчення',
        APOSTILLE_MESSAGE_NS_BRAND: 'Використовувати мій простір імен для бренду повідомлення',
        APOSTILLE_MESSAGE_ADD_MOSAIC: 'Додати мозаїку',
        APOSTILLE_NTY_ACCOUNT: 'Обліковий запис нотаріального посвідчення',
        APOSTILLE_REQUEST_MESSAGE: 'Запросити повідомлення',
        APOSTILLE_CREATE_MESSAGE_REQUEST: 'Створити запит на повідомлення',

        // TRANSFER APOSTILLE OWNLERSHIP MODULE
        APOSTILLE_TRANSFER_TITLE: 'Передача або Розподіл права власності апостилю',

        // UPADTE APOSTILLE MODULE
        APOSTILLE_UPDATE_TITLE: 'Оновити апостиль',

        // ERROR ALERTS
        ALERT_MISSING_FORM_DATA: 'Будь-ласка, заповніть форму!',
        ALERT_ERROR_WALLET_DOWNLOAD: 'Неможливо завантажити гаманець, тому що його не існує!',
        ALERT_PASSWORDS_NOT_MATCHING: 'Надані паролі або кодові фрази не збігаються!',
        ALERT_INVALID_KEY_FOR_ADDR: 'Приватний ключ не відповідає зазначеній адресі!',
        ALERT_NO_WALLET_LOADED: 'Ви не маєте доступу до інформаційної панелі, якщо у Вас немає гаманця',
        ALERT_WALLET_NAME_EXISTS: 'Гаманець із таким ім\'ям вже завантажено!',
        ALERT_INVALID_WALLET_FILE: 'Ви намагаєтесь завантажити файл, який не є гаманцем!',
        //ALERT_NO_NODE_SET: 'Будь-ласка, введіть вузол!',
        ALERT_INVALID_CUSTOM_NODE: 'Ваш користувацький вузол недійсний!',
        ALERT_INVALID_WEBSOCKET_PORT: 'Порт веб-сокета користувацького вузла недійсний!',
        ALERT_MIJIN_DISABLED: 'Mijin мережа недоступна, будь-ласка, оберіть іншу мережу!',
        ALERT_GET_NS_BY_ID_ERROR: 'Помилка при отриманні інформації про простір імен, причина: ',
        ALERT_GET_ACCOUNT_DATA_ERROR: 'Помилка при отриманні інформації про обліковий запис, причина: ',
        ALERT_ERROR_OCCURRED: 'Виникла помилка! ',
        ALERT_INVALID_ADDR_FOR_NETWORK: ' не відповідає мережі ',
        ALERT_INVALID_PASSWORD: 'Зазначений пароль недійсний!',
        ALERT_COSIG_ALREADY_IN_LIST: 'Підписант вже присутній в списку модифікацій!',
        ALERT_COSIGNATORY_HAS_NO_PUBLIC: 'Для отримання публічного ключа підписанту необхідно провести хоча б одну транзакцію!',
        ALERT_MULTISIG_HAS_NO_PUBLIC: 'Для отримання публічного ключа мультипідписний обліковий запис повинен провести хоча б одну транзакцію!',
        ALERT_COSIG_CANNOT_BE_MULTISIG: 'Вибраний для зміни обліковий запис належить до іншого мультипідписного облікового запису, тому не може бути змінений.',
        ALERT_NO_NS_OWNED: 'У даного облікового запису немає жодного простору імен, будь-ласка, створіть його, або змініть обліковий запис',
        ALERT_UNLOCKED_INFO_ERROR: 'Виникла помилка при отриманні інформації про розблокування облікового запису',
        ALERT_LOCK_ERROR: 'Помилка блокування облікового запису, причина: ',
        ALERT_UNLOCK_ERROR: 'Помилка розблокування облікового запису, причина: ',
        ALERT_SUPERNODES_ERROR: 'Виникла помилка при отриманні даних про супервузол!',
        ALERT_INVALID_NTY_FILE: 'Наданий файл не є файлом nty!',
        ALERT_CREATE_WALLET_FAILED: 'Не вдалося створити гаманець, причина: ',
        ALERT_REQUEST_FAILED: 'Запит не виконано, причина: ',
        ALERT_DERIVATION_FROM_SEED_FAILED: 'Не вдалося одержати дані облікового запису з парольної seed фрази, причина: ',
        ALERT_BIP32_GENERATION_FAILED: 'Помилка генерації даних bip 32, причина: ',
        ALERT_NO_WALLET_DATA: 'Помилка, порожні дані гаманця!',
        ALERT_CANNOT_LOGIN_WITHOU_WALLET: 'Помилка, неможливо зробити вхід без гаманця!',
        ALERT_NO_WALLET_TO_SET: 'Помилка, неможливо встановити нічого, у якості поточного гаманця!',
        ALERT_INVALID_WALLET_INDEX: 'Помилка, вибраний індекс облікового запису виходить поза межі!',
        ALERT_NO_CURRENT_WALLET: 'Помилка, через відсутність поточного гаманця, неможливо встановити обліковий запис гаманця!',
        ALERT_ALREADY_MULTISIG: 'Вибраний облікой запис вже встановлено як мультипідписний!',
        ALERT_INVALID_MODIFICATION_ARRAY: 'Мультипідписний обліковий запис не може бути підписантом самого себе, будь-ласка, перевірте список модифікацій!',
        ALERT_GET_MARKET_INFO_ERROR: 'Виникла помилка під час спроби отримання інформації про ринок',
        ALERT_MULTISIG_CANNOT_BE_COSIG: 'Мультипідписний обліковий запис не може бути встановлений як підписант!',
        ALERT_PURGE_CANCELLED: 'Очищення скасовано!',
        ALERT_MAINNET_DISABLED: 'Mainnet мережа недоступна, будь-ласка, оберіть іншу мережу!',
        ALERT_EMPTY_DECODED_MSG: 'Виникла помилка, відсутнє розшифроване повідомлення!',
        ALERT_INVALID_NS_NAME: 'Назва простору імен недійсна!',
        ALERT_INVALID_MOSAIC_NAME: 'Назва мозаїки недійсна!',
        ALERT_MOSAIC_DESCRIPTION: 'Опис мозаїки занадто довгий!',
        ALERT_GET_INCOMING_TXES_ERROR: 'Виникла помилка під час отримання вхідних транзакцій, причина: ',
        ALERT_GET_MOSAICS_DEFINITIONS_ERROR: 'Помилка під час отримання мозаїки, причина: ',
        ALERT_GET_SUB_NS_ERROR: 'Помилка під час отримання просторів імен, причина: ',
        ALERT_GET_MOSAICS_ERROR: 'Помилка під час отримання мозаїк, причина: ',
        ALERT_GET_TRANSACTIONS_ERROR: 'Помилка під час отримання транзакцій, причина: ',
        ALERT_INVALID_ADDRESS_BOOK_FILE: 'Цей файл не у форматі .adb!',
        ALERT_INVALID_ADDRESS: 'Надана адреса недійсна!',
        ALERT_INVALID_AMOUNT: 'Сума недійсна!',
        ALERT_INVALID_PRIVATE_KEY: 'Наданий приватний ключ недійсний!',
        ALERT_FILE_SIZE_ERROR: ' дуже великий, максимально дозволений розмір складає 100 Mб',
        ALERT_MESSAGE_DECODE_KEY_ERROR: 'Розшифровка повідомлення скасована, тому що обліковий запис немає публічного ключа, видимого у мережі',
        ALERT_FETCH_TIME_SYNC_ERROR: 'Помилка при отриманні часу мережі!',
        ALERT_MULTISIG_MIN_SIGNATURE: 'Мультипідписний обліковий запис повинен мати щонайменше один підпис',
        ALERT_BTC_MARKET_ERROR: 'Помилка при отриманні інформації щодо ціни Bitcoin',
        ALERT_COSIG_REMOVAL_LIMIT: 'За один раз можна видалити лише одного підписанта',
        ALERT_MULTISIG_MIN_SIGNATURE_INVALID: 'Невірна кількість мінімальних підписів',
        ALERT_INSUFFICIENT_BALANCE: 'Недостатній баланс для здійснення операції',
        ALERT_VOTING_ERROR: 'Недійсний голос',
        ALERT_BRAIN_PASSWORD_TOO_SHORT: 'Кодова фраза Brain гаманця повинна містити якнайменше 40 символів!',
        ALERT_NODE_SEEMS_OFFLINE: 'Вузол не в мережі, будь-ласка, оберіть інший',
        ALERT_WEAK_PASSPHRASE: 'Оцінка безпечності кодової фрази повинна бути не менше 3',
        ALERT_BRAIN_WALLET_UPGRADE: 'Ваш brain гаманець недостатньо захищений! Всі brain гаманці повинні використовувати кодові фрази якнайменше із 40 символів.<br> Ми радимо Вам створити новий простий гаманець на стартовій сторінці та перемістити свої кошти до нього.<br> Більше інформації за посиланням <a href="https://forum.nem.io/t/2791" target="_blank"><u>тут</u></a>.',
        ALERT_RECIPIENT_PUBLIC_KEY: 'Отримувач немає публічного ключа, видимого у мережі',
        ALERT_ENCRYPT_MULTISIG: 'Неможна надсилати зашифровані повідомлення через мультипідписні облікові записи',
        ALERT_EXCHANGE_NEEDS_MESSAGE: 'Отримувачем є гаманець біржі, тому необхідно вказати повідомлення Вашого облікового запису для правильного нарахування коштів. Будь-ласка, уважно ознайомтесь з інструкціями біржі, як робити депозит!',
        ALERT_ACCOUNT_ALREADY_IN_ADDRESS_BOOK: 'Контакт вже існує в адресній книзі!',
        ALERT_MAX_MOSAIC_SUPPLY: 'Максимальний обсяг запасу мозаїки складає 9\'000\'000\'000',
        ALERT_GET_MOSAIC_SUPPLY_ERROR: 'Помилка отримання інформації щодо обсягу постачання мозаїки, причина: ',
        ALERT_ENCRYPTED_MSG_OFFLINE: 'Функція здійснення зашифрованих повідомлень не активна при використанні offline транзакцій',

        // SUCCESS ALERTS
        ALERT_CREATE_WALLET_SUCCESS: 'Гаманець успішно створений та завантажений!',
        ALERT_SUCCESS_PURGE: 'Локальне сховище успішно очищено!',
        ALERT_SUCCESS_LOGOUT: 'Вихід здійснено успішно!',
        ALERT_LOAD_WALLET_SUCCESS: 'Гаманець успішно завантажений!',
        ALERT_TRANSACTION_SUCCESS: 'Транзакція надіслана успішно!',
        ALERT_GENERATE_ACCOUNT_SUCCESS: 'Обліковий запис створено успішно. Не забудьте завантажити Ваш оновлений гаманець!',
        ALERT_UPGRADE_SUCCESS: 'Гаманець успішно оновлений!',
        ALERT_SIGNATURE_SUCCESS: 'Транзакція успішно підписана!',
        ALERT_NTY_FILE_SUCCESS: 'Файл nty завантажено успішно!',
        ALERT_INCOMING_TX_FROM: 'Вхідна транзакція від ',
        ALERT_ADDRESS_BOOK_FILE_SUCCESS: 'Адресна книга успішно імпортована!',
        ALERT_VOTING_SUCCESS: 'Ваш голос успішно відпралено',
        ALERT_POLL_CREATION_SUCCESS: 'Опитування створено успішно',
        ALERT_COPY_SIGNED_TX_SUCCESS: 'Підписана транзакція скопійована!',
        ALERT_COPY_SIGNED_MSG_SUCCESS: 'Підписане повідомлення скопійовано!',

        // CONVERT ACCOUNT TO MULTISIG
        AGGREGATE_MODIFICATION_TITLE: 'Перетворити обліковий запис у мультипідписний',
        AGGREGATE_MODIFICATION_NAME: 'Транзакція сукупної зміни',
        AGGREGATE_MODIFICATION_MULTISIG_NAME: 'Мультипідписна транзакція сукупної зміни',
        AGGREGATE_ACCOUNT_SELECT_TITLE: 'Обліковий запис для перетворення',
        AGGREGATE_ACCOUNT_SELECT: 'Виберіть обліковий запис для перетворення',
        AGGREGATE_CUSTOM_ACCOUNT: 'Імпортуйте ключ',
        AGGREGATE_ACCOUNT_TO_CONVERT_PRIVATE_TITLE: 'Адреса приватного ключа',
        AGGREGATE_ACCOUNT_TO_CONVERT: 'Адреса облікового запису для перетворення',
        AGGREGATE_ACCOUNT_TO_CONVERT_PRIVATE: 'Приватний ключ облікового запису для перетворення',
        AGGREGATE_ADD_PLACEHOLDER: 'Обліковий запис підписанта або @псевдонім для додавання',
        AGGREGATE_ADD_BTN_TITLE: 'Додати підписанта',
        AGGREGATE_MIN_SIGNATURES: 'Мінімальна необхідна кількість підписів',
        AGGREGATE_MIN_SIGNATURES_PLACEHOLDER: 'Мінімальна кількість підписів, яка необхідна для перевірки транзакції',
        AGGREGATE_MODIFICATION_LIST: 'Список модифікацій',
        AGGREGATE_COSIG_LIST: 'Список адрес підписантів',
        AGGREGATE_MODIFICATION_EDIT_TITLE: 'Редагувати мультипідписний контракт',
        AGGREGATE_MODIFICATION_EDIT_SELECT_TITLE: 'Обліковий запис для редагування',
        AGGREGATE_MODIFICATION_EDIT_SELECT: 'Вибрати обліковий запис для редагування',
        AGGREGATE_ADD_REMOVE_TITLE: 'Додати/Видалити підписанта',
        AGGREGATE_ADD_REMOVE_PLACEHOLDER: 'Обліковий запис підписанта або @псевдонім для додавання',
        AGGREGATE_MODIFICATION_RELATIVE_CHANGE: 'Потрібно змінити підписи',
        AGGREGATE_MODIFICATION_RELATIVE_CHANGE_PLACEHOLDER: 'Кількість підписів для додавання (n) або видалення (-n) - Автоматичне видалення',
        AGGREGATE_SELECTED_ACCOUNT_INFO: 'Інформація про вибраний обліковий запис',
        AGGREGATE_MIN_SIGNATURES: 'Мін. підписи',
        AGGREGATE_SELECT_WALLET_ACCOUNT: 'Використати поточний обліковий запис гаманця',
        AGGREGATE_ADD_COSIG: 'Додати підписанта',
        AGGREGATE_REMOVE_COSIG: 'Видалити підписанта',

        // SIGN MULTISIGNATURE TRANSACTIONS
        SIGN_MULTISIG_TRANSACTIONS_TITLE: 'Підписати мультипідписні транзакції',

        // LOGIN MODULE
        LOGIN_MEMBER_TITLE: 'Чи Ви NEMber?',
        LOGIN_UPGRADE_TITLE: 'Гаманець потребує оновлення',
        LOGIN_UPGRADE_MESSAGE: 'Вибраинй гаманець потребує оновлення. Результатом даної дії буде створення дочірнього публічного ключа і додавання його до вашого основного облікового запису.',
        LOGIN_UPGRADE_BUTTON: 'Оновити гаманець',
        LOGIN_IMPORT_BUTTON: 'Імпортувати гаманець',
        LOGIN_SELECT_WALLET_YOURS: 'Вибрати гаманець',
        LOGIN_SELECT_WALLET: 'Вибрати гаманець із локального сховища',
        LOGIN_LOGIN_BUTTON: 'Увійти',
        LOGIN_NOTE: 'Немає гаманця? Імпортуйте його або <a href="#!/signup">зареєструйтесь</a>.',

        // SIGNUP MODULE
        SIGNUP_TITLE: 'Новачок у NEM?',
        SIGNUP_SELECT_WALLET_TYPE: 'Вибрати тип гаманця для створення',
        SIGNUP_SELECT_WALLET_TYPE_STAND_BY: 'Для показу інформації про тип гаманця, наведіть на нього курсор.',
        SIGNUP_CREATE_WALLET_TITLE: 'Простий гаманець',
        SIGNUP_CREATE_WALLET_INFO: 'Прості гаманці містять основний приватний ключ, який генерується випадковим способом.',
        SIGNUP_PRIVATE_KEY_WALLET_TITLE: 'Гаманець з приватного ключа',
        SIGNUP_PRIVATE_KEY_WALLET_INFO: 'Гаманці з приватного ключа містять основний приватний ключ, який ви хочете імпортувати.',
        SIGNUP_BRAIN_WALLET_TITLE: 'Brain гаманець',
        SIGNUP_BRAIN_WALLET_INFO: 'Brain гаманці містять основний приватний ключ, який генерується з кодової фрази. Це дозволяє отримати доступ до гаманця, лише знаючи точно цю фразу.',
        SIGNUP_CREATE_WALLET_BUTTON: 'Створити простий гаманець',
        SIGNUP_PRIVATE_KEY_WALLET_BUTTON: 'Створити гаманець з приватного ключа',
        SIGNUP_BRAIN_WALLET_BUTTON: 'Створити brain гаманець',
        SIGNUP_CREATE_WALLET_WARNING: 'Будь-ласка, ознайомтеся з <a href="https://www.w3.org/TR/2014/WD-WebCryptoAPI-20140325/#RandomSource-interface" rel="nofollow" target="_blank"><b>небезпеками</b></a> генерації ключів з боку клієнта; Ми не несемо відповідальності за будь-які збитки, що можуть бути пов\'язані з ентропією генерації ключів. Навіть якщо це навряд чи відбудеться, рекомендується використовувати приватний ключ згенерований сильним джерелом ентропії.',
        SIGNUP_NETWORK_SELECT: 'Вибрати мережу',
        SIGNUP_NETWORK_MAINNET: 'Mainnet є <b><u>реальною</u></b> NEM мережею. Адреси починаються з літери \'N\'.',
        SIGNUP_NETWORK_TESTNET: 'Testnet є <b><u>тестовою</u></b> мережею. Адреси починаються з літери \'T\'.',
        SIGNUP_NETWORK_MIJIN: 'Mijin є приватною версією NEM мережі. Адреси починаються з літери \'M\'.',
        SIGNUP_BRAIN_WALLET_WARNING: 'Будь-ласка, ознайомтесь із <a href="https://en.bitcoin.it/wiki/Brainwallet" rel="nofollow" target="_blank"><b>небезпеками</b></a> генерації brain гаманців. Brain гаманці використовують ТІЛЬКИ кодову фразу, яка хеширується декілька разів. Тому дуже важливо вибрати БЕЗПЕЧНУ кодову фразу довжиною якнайменше у 40 символів. <a href="https://xkcd.com/936/" rel="nofollow" target="_blank"><b>XKCD #936</b></a>',
        SIGNUP_PRIVATE_KEY_WALLET_WARNING: 'Гаманці з приватного ключа використовують ТІЛЬКИ пароль для шифрування імпортованого приватного ключа. Тому дуже важливо вибрати БЕЗПЕЧНИЙ пароль.',
        SIGNUP_CREATE_START_WARNING: 'Будь-ласка, ретельно перевіряйте кожну дію!',
        SIGNUP_CREATE_START_CONNECTION_WARNING: 'Під час створення Вашого гаманця та резервного копіювання Вашої інформації рекомендовано відключитись від мережі internet.',
        SIGNUP_CREATE_READY_BTN: 'Готовий',
        SIGNUP_CREATE_ENTER_NAME: 'Введіть назву гаманця',
        SIGNUP_CREATE_ENTER_PASSWORD: 'Введіть пароль',
        SIGNUP_CREATE_ENTER_PASSPHRASE: 'Введіть кодову фразу',
        SIGNUP_CREATE_CONFIRM_PASSWORD: 'Підтвердіть наведений вище пароль',
        SIGNUP_CREATE_CONFIRM_PASSPHRASE: 'Підтвердіть наведену вище кодову фразу',
        SIGNUP_CREATE_ENTER_PRIVATE_KEY: 'Введіть приватний ключ',
        SIGNUP_CREATE_ADDRESS_FROM_PK: 'Адреса, що відповідає наведеному вище ключу',
        SIGNUP_CREATE_WALLET_ADD_ENTROPY_INFO: 'Зараз система згенерує Ваш основний приватний ключ. <b>Будь-ласка, натисніть на старт та рухайте курсор миші навколо для додавання більшої ентропії.</b>',
        SIGNUP_COMMON_WALLET_WARNING_TITLE: 'Протокол безпеки облікового запису',
        SIGNUP_COMMON_WALLET_WARNING_1: 'Відомості про гаманці зберігаються <b><u>тимчасово</u></b> у локальному сховищі браузера! Браузер може бути налаштований (наприклад, за допомогою add-ons) на періодичне очищення локального сховища. Це призведе до втрати інформації, яка не може бути легко відновлена. У цьому випадку, відомості про Ваші гаманці зникнуть, тому дуже важливо переконатись у тому, що у вас є вся необхідна інформація для відновлення ваших облікових записів.',
        SIGNUP_COMMON_WALLET_WARNING_2: 'Будь-ласка, натисніть нижче для завантаження Вашого гаманця у файл <b><i>.wlt</i></b>, який використовується для створення резервної копії, а також для зворотного імпорту, якщо локальне сховище браузеру буде очищено.',
        SIGNUP_COMMON_WALLET_WARNING_3: 'Якщо Ви не отримали резервний файл <b><i>.wlt</i></b>, натисніть на кнопку нижче для показу сирих даних та створення даного файлу вручну:',
        SIGNUP_COMMON_WALLET_WARNING_4: 'Навіть, якщо у Вас є файл гаманця, <b><u>обов\'язково</u></b> зробіть резервну копію приватного ключа від Вашого облікового запису, натисніть на кнопку нижче, щоб його показати:',
        SIGNUP_COMMON_WALLET_WARNING_5: 'Це Ваша особиста відповідальність - завжди бути переконаним, що ви маєте створену резерну копію Вашого приватного ключа, перед тим як надсилати кошти до Вашого облікового запису.',
        SIGNUP_COMMON_WALLET_WARNING_6: 'Кожен гаманець має <b><u>основний приватний ключ</u></b> (Ваш показано вище), який використовується для створення детермінованих вторинних облікових записів (BIP32). Дана функція потребує використання <b><u>того ж самого паролю</u></b>, бо в іншому випадку буде створено інші вторинні облікові записи для цього приватного ключа. При створенні резервних копій не забувайте <b><u>записувати ваш пароль</u></b>.',
        SIGNUP_COMMON_WALLET_WARNING_BTN_1: 'Показати сирий файл гаманця',
        SIGNUP_COMMON_WALLET_WARNING_BTN_1_INFO: 'Щоб зробити файл гаманця, створіть пустий текстовий файл та внесіть до нього дані базового 64 ключа, які наведені вище. Збережіть файл у форматі <b><i>НазваВашогоГаманця.wlt</i></b>.',
        SIGNUP_COMMON_WALLET_WARNING_BTN_2: 'Показати приватний ключ',
        SIGNUP_COMMON_WALLET_WARNING_BTN_2_INFO: 'Ваш приватний ключ містить всю інформацію вашого облікового запису, тому його треба тримати в секреті. <b>Ніколи не діліться ним з ким-небудь</b>. Ми <b>дуже рекомендуємо</b> зберігати приватний ключ у безпечному місці не в мережі.',
        SIGNUP_COMMON_WALLET_WARNING_FOOTER: 'Натискаючи кнопку нижче, Ви погоджуєтесь, що Ви зробили резервну копію Вашого приватного ключа, паролю та файлу гаманця.',
        SIGNUP_COMMON_WALLET_WARNING_CONFIRM_1: 'У мене є файл мого гаманця',
        SIGNUP_COMMON_WALLET_WARNING_CONFIRM_2: 'У мене є мій приватний ключ та пароль',
        SIGNUP_COMMON_WALLET_WARNING_CONFIRM_3: 'Я погоджуюсь',
        SIGNUP_COMMON_WALLET_WARNING_UNDERSTOOD: 'Зрозуміло',
        SIGNUP_COMMON_WALLET_WARNING_DOWNLOAD: 'Завантажити гаманець',
        SIGNUP_ESTIMATED_PASSPHRASE_STRENGTH: 'Оцінка міцності кодової фрази',
        SIGNUP_ESTIMATED_GUESS_TIMES: 'Оцінка часу очікування',
        SIGNUP_CONGRATS_MSG: '<b>Вітаємо!</b> Ваша NEM адреса',

        // FAQ MODULE
        FAQ_TITLE: 'Питання, що часто задаються',
        FAQ_QUESTION_1: 'Як працює гаманець Nano Wallet?',
        FAQ_ANSWER_1: 'Nano Wallet побудований з використанням криптографічних бібліотек на AngularJS та ES6. Це самодостатній клієнтський додаток, який ніколи не надсилає жодних конфіденційних даних до мережі; всі дії відбуваються всередені Вашого браузера: від створення приватних ключів до підписання транзакцій.',
        FAQ_QUESTION_2: 'Чи безкоштовне його використання?',
        FAQ_ANSWER_2: 'Абсолютно всі операції здійснюються на стороні клієнта, тільки Ви маєте повний контроль над Вашими коштами, жодних сторонніх клієнтів та жодних додаткових комісій.',
        FAQ_QUESTION_3: 'Чому в мене вже є одна мозаїка?',
        FAQ_ANSWER_3: 'Тому, що XEM є валютою за замовчуванням у блокчейні NEM, кожен користувач одразу ж має її після реєстрації гаманця, навіть якщо баланс дорівнює 0. Його простором імен є NEM та назва мозаїки XEM',
        FAQ_QUESTION_4: 'Дорожня карта розвитку?',
        FAQ_ANSWER_4: 'Поточна дорожня карта розвитку включає інтеграцію усіх функцій з гаманця NanoWallet v1.x.x та завершення проектів, що фінансуються спільнотою, для роботи через цей гаманець.',
        FAQ_QUESTION_5: 'Чи можу я отримати XEM безкоштовно?',
        FAQ_ANSWER_5: 'Кран NEM зараз неактивний, але Ви можете звернутись з цим питанням на NEM форумі, щодо наявності доступних баунті винагород.',
        FAQ_QUESTION_6: 'Де я можу знайти більш детальну інформацію про NEM?',
        FAQ_ANSWER_6_FORUM: 'На офіційному форумі',
        FAQ_ANSWER_6_WEBSITE: 'Офіційному вебсайті',
        FAQ_ANSWER_6_BTT: 'Офіційній сторінці на BitcoinTalk',
        FAQ_QUESTION_7: 'На інформаційній панелі нічого не відображається',
        FAQ_ANSWER_7: 'Будь-ласка, перевірте колір кола, яке знаходиться на верхній навігаційній панелі та відображає стан вузла. <br> Червоне коло означає, що немає підключення до вузла. <br> Натисніть на кнопку "Вузол" та виберіть інший з випадаючого списку, або вкажіть свій вузол. <br> <a href="https://supernodes.nem.io" target="_blank">Supernodes.nem.io</a> містить перелік вузлів, які Ви можете використовувати.</a>',
        FAQ_QUESTION_8: 'У підписантів не відображається транзакція, яку їм треба підписати',
        FAQ_ANSWER_8: 'У цьому випадку треба перейти до меню "Сервіси", знайти розділ "Мультипідписи та Багатокористувацькі облікові записи" та натиснути на "Підписати мультипідписні транзакції".',
        FAQ_QUESTION_9: 'Які найкращі практики з безпеки ?',
        FAQ_ANSWER_9: 'Дуже рекомендовано завжди записувати приватні ключі на папері.<br> Ви можете роздрукувати їх та зберігати у безпечному місці. <br><br> Стосовно файлів гаманців, Ви повинні завжди мати багато копій на різних носіях, таких як usb флеш-накопичувач. <br> Паролі завжди повинні бути унікальними та комплексними, тому завжди записуйте їх. <br><br> Коли Вам потрібно перевірити Ваш гаманець, або провести операції, то виконайте наступне:<br> - Вставте usb флеш-накопичувач <br> - Імпортуйте файл гаманця до Nano<br> - Відключіть usb флеш-накопичувач.<br><br> Тепер копія Вашого гаманця збережена у локальному сховищі браузера, доки  вона Вам буде необхідна для роботи.<br> Як тільки Ви завершили роботу, вийдіть з облікового запису та зробіть очищення всіх гаманців з локального сховища браузера, натиснувши кнопку очищення у правому нижньому куті браузера.',
        FAQ_QUESTION_10: 'Де знайти інформацію про мій обліковий запис (адресу тощо) ?',
        FAQ_ANSWER_10: 'Якщо Ви подивитесь на верхню навігаційну панель, Ви побачите кнопку <b><i>"Обліковий запис"</b></i> між кнопками <b><i>"Вузол"</b></i> та <b><i>"Вибір мови"</b></i>. Натиснувши на неї Ви знайдете свою адресу, публічний ключ, активний баланс та іншу важливу інформацію.',
        FAQ_QUESTION_11: 'Я зробив депозит у XEM на свій рахунок на біржі, але кошти не потрапили на рахунок ?',
        FAQ_ANSWER_11_1: 'По-перше, Ви повинні перевірити, що хеш Вашої транзакції дійсно вказує на існуючу транзакцію у <a target="_blank" href="http://chain.nem.ninja">провіднику</a> (будь-ласка, майте на увазі, що провідник відображає інформацію із запізненням на декілька блоків).',
        FAQ_ANSWER_11_2: 'Більшість бірж потребують вказувати ідентифікаційне повідомлення, щоб переказати кошти саме на Ваш рахунок. Переконайтесь, що Ви уважно стежили за виконанням інструкцій біржі та додали відповідне повідомлення, НЕ шифруючи його. ',
        FAQ_ANSWER_11_3: 'Навіть якщо Ви додали це повідомлення, може так статися, що біржі не обробили Ваш депозит, через проблеми з їхнього боку.',
        FAQ_ANSWER_11_4: 'Вам необхідно звернутись до служби підтримки даної біржі, пояснити ситуацію та надати їм хеш Вашої транзакції.',
        FAQ_QUESTION_12: 'Як перевірити, використовую я форк, чи ні ?',
        FAQ_ANSWER_12_1: 'Натисніть на кнопку <b><i>"Вузол"</b></i>, на верхній навігаційній панелі, для відкриття панелі вузлів.',
        FAQ_ANSWER_12_2: 'Подивіться на висоту блоків та порівняйте її з показником, який відображений <a target="_blank" href="http://hugealice.nem.ninja:7890/chain/height">тут</a>.',
        FAQ_ANSWER_12_3: 'Якщо різниця склдає більше, ніж 5 блоків, то Ви, напевно, використовуєте форк.',
        FAQ_ANSWER_12_4: 'Для виправлення, просто виберіть інший вузол з випадаючого списку на панелі вузлів, це відновить Ваш обліковий запис на його останньому стані в реальній мережі.',

        // FORM RELATED
        FORM_PASSWORD_FIELD_PLACEHOLDER: 'Ввести пароль чи кодову фразу від Вашого гаманця',
        FORM_WALLET_NAME_FIELD_PLACEHOLDER: 'Назва гаманця',
        FORM_SIGNUP_PASSWORD_FIELD_PLACEHOLDER: 'Пароль',
        FORM_PASSWORD: 'Пароль',
        FORM_PASSWORD_CONFIRM: 'Підтвердити пароль',
        FORM_PASSPHRASE_CONFIRM: 'Підтвердити кодову фразу',
        FORM_CONFIRM_PASSWORD_FIELD_PLACEHOLDER: 'Підтвердіть Ваш пароль',
        FORM_PASSPHRASE_FIELD_PLACEHOLDER: 'Кодова фраза',
        FORM_CONFIRM_PASSPHRASE_FIELD_PLACEHOLDER: 'Підтвердіть Вашу кодову фразу',
        FORM_ADDRESS_FIELD_PLACEHOLDER: 'Адреса облікового запису',
        FORM_PRIVATE_KEY_FIELD_PLACEHOLDER: 'Приватний ключ',
        FORM_SIDE_BTN_BALANCE: 'Баланс',
        FORM_SIDE_BTN_PAY_TO: 'Сплатити',
        FORM_SIDE_BTN_TX_FEE: 'Комісія за транзакцію',
        FORM_SIDE_BTN_RENTAL_FEE: 'Орендна плата',
        FORM_SIDE_BTN_LEVY_FEE: 'Плата за користування',
        FORM_RECIPIENT_PLACEHOLDER: 'Адреса одержувача або @псевдонім',
        FORM_INVOICE_RECIPIENT_PLACEHOLDER: 'Адреса одержувача',
        FORM_SIDE_BTN_ALIAS_OF: 'Псевдонім',
        FORM_MESSAGE_PLACEHOLDER: 'Повідомлення',
        FORM_MOSAIC_NAME_PLACEHOLDER: 'Назва мозаїки',
        FORM_ADDRESS_ALIAS_PLACEHOLDER: 'Адреса облікового запису або @псевдонім',
        FORM_BTN_GET_ALIAS: 'Отримати адресу простору імен',
        FORM_BTN_OPEN_ADB: 'Відкрити адресну книгу',
        FORM_SELECT_NAMESPACE: 'Вибрати простір імен',

        // VOTING MODULE
        PORTAL_VOTING_TITLE: 'Голосування',
        PORTAL_VOTING_TEXT: 'Створення голосувань та проведення опитувань',
        PORTAL_VOTING_BTN1: 'Переглянути опитування',
        PORTAL_VOTING_BTN2: 'Створити опитування',
        FORM_TITLE_FIELD_PLACEHOLDER: 'Заголовок',
        FORM_DESCRIPTION_FIELD_PLACEHOLDER: 'Напишіть свій опис тут',
        FORM_OPTION_FIELD_PLACEHOLDER: 'написати свій варіант',
        FORM_WHITELIST_FIELD_PLACEHOLDER: 'адреса облікового запису',
        FORM_SELECT_MULTISIG: 'Вибрати мультипідписний обліковий запис',
        FORM_SELECT_CONTACT: 'Вибрати контакт',

        // TREZOR RELATED
        TREZOR_TITLE: 'TREZOR',
        TREZOR_TEXT: 'Апаратний гаманець TREZOR дозволяє захистити Ваші XEM, мозаїки та мультипідписні облікові записи',
        TREZOR_BUTTON: 'Здійснити вхід за допомогою апаратного гаманця TREZOR',

        // LEDGER NANO RELATED
        LEDGER_NANO_TITLE: 'LEDGER NANO',
        LEDGER_NANO_TEXT: 'Апаратний гаманець LEDGER NANO дозволяє захистити ваші XEM, мозаїки та мультисиг акаунти',
        LEDGER_NANO_BUTTON: 'Увійти з LEDGER NANO',
        LEDGER_NANO_NO_DEVICE: 'Пристрій Ledger не знайдено',
        LEDGER_NANO_CHECK_DEVICE: 'Please check your Ledger device!',
        LEDGER_NANO_NOT_USING_NEM_APP: 'Ви не використовуєте додаток NEM на вашому пристрої Ledger',
        LEDGER_NANO_NOT_USING_XYM_APP: 'Ви не використовуєте додаток Symbol на вашому пристрої Ledger',
        LEDGER_NANO_NOT_SUPPORTED_APP: 'Будь ласка, перевірте чи відкрита остання версія додатку NEM на Вашому пристрої Ledger',
        LEDGER_NANO_CONNECTED_OTHER_APP: 'Another app is already connected to your Ledger device. Please close it then try again',
        LEDGER_NANO_NOT_OPENED_NEM_APP: 'Будь ласка, відкрийте додаток NEM на вашому пристрої Ledger',
        LEDGER_NANO_NOT_OPENED_XYM_APP: 'Будь ласка, відкрийте додаток Symbol на вашому пристрої Ledger',
        LEDGER_NANO_DEVICE_LOCKED: 'Будь ласка, розблокуйте ваш пристрій Ledger',
        LEDGER_NANO_USER_REJECT_LOGIN: 'Вхід скасовано користувачем',
        LEDGER_NANO_USER_REJECT_REQUEST: 'Запит скасовано користувачем',
        LEDGER_NANO_FOLLOW_INSTRUCTION: 'Дотримуйтесь інструкцій на своєму пристрої Ledger',
        LEDGER_NANO_TRANSACTION_TOO_BIG: 'Транзакція завелика, щоб підписати її на вашому пристрої Ledger',
        LEDGER_NANO_TRANSACTION_USER_CANCEL: 'Підписання скасовано користувачем',
        LEDGER_NANO_TRANSACTION_FAILED: 'Не вдалося підписати транзакцію, причина: ',
        LEDGER_NANO_OPTIN_INFO_1: 'Ви можете скористатися додатком Symbol Ledger, щоб отримати рахунок для Опт-ін підписки Symbol.',
        LEDGER_NANO_OPTIN_INFO_2: 'Будь ласка, відкрийте додаток Symbol Ledger на своєму пристрої та натисніть Імпортувати акаунт Symbol.',
        LEDGER_NANO_IMPORT_SYMBOL: 'Імпортувати акаунт Symbol',

        // CREATE OFFLINE TRANSACTION MODULE
        OFFLINE_TX_TITLE: 'Підготувати offline транзакцію',
        OFFLINE_TX_NO_WALLET: 'Будь-ласка, імпортуйте гаманець із модулю входу, щоб побачити форму.',
        OFFLINE_TX_INFO_1: 'Для повної безпеки, переконайтеся, що використовуєте компьютер, який <b>НІКОЛИ</b> не має з\'єднання з мережею internet.',
        OFFLINE_TX_INFO_2: 'Можливе створення тільки простих транзакцій, тому що для отримання даних про мозаїки і мультипідписної інформації від вузлів NEM, потрібно з\'єднання з мережею.',
        OFFLINE_TX_INFO_3: 'Після натискання кнопки "створити" на лівій панелі, Ваша підписана транзакція з\'явиться знизу.',
        OFFLINE_TX_INFO_4: 'Підписана транзакція є незмінною та буде ефективною лише в тому випадку, якщо буде передана до мережі до закінчення граничного терміну її дії, встановленого за замовчуванням у 24 години.',
        OFFLINE_TX_SIGNED: 'Підписана транзакція',
        OFFLINE_TX_RELEASE: 'Відкрити у модулі випуску',
        OFFLINE_TX_MODAL_ALERT: 'Даний компьютер має підключення до мережі internet, будь-ласка майте на увазі, що створення offline транзакції безпечно <b>ТІЛЬКИ</b> на компьютері, який <b>НІКОЛИ</b> не підключається до мережі internet.',

        // RELEASE OFFLINE TRANSACTION MODULE
        RELEASE_OFFLINE_TX_TITLE: 'Передати транзакцію до мережі',
        RELEASE_OFFLINE_TX_PARAMETERS: 'Параметри транзакції',
        RELEASE_OFFLINE_TX_INFO_1: 'Для передачі транзакції Ви повинні мати підключення до мережі internet.',
        RELEASE_OFFLINE_TX_INFO_2: 'Переконайтесь, що Ви вибрали правильну мережу та робочий вузол,або дію буде відхилено.',
        RELEASE_OFFLINE_TX_INFO_3: 'Неможливо передати підписану транзакцію двічі. Після підпису транзакція генерує завжди один і той самий хеш та дві транзакції не можуть мати однаковий хеш.',
        RELEASE_OFFLINE_TX_INFO_4: 'Ви можете безпечно передати підписану транзакцію з будь-якого компьютера.',

        // INVOICE MODULE
        CREATE_INVOICE_TITLE: 'Створити рахунок-фактуру',

        // CREATE SIGNED MESSAGE MODULE
        CREATE_SIGNED_MSG_TITLE: "Створити повідомлення з підписом",
        CREATE_SIGNED_MSG_NAME: 'Підписане повідомлення',
        CREATE_SIGNED_MSG_SIGN: 'Підписати повідомлення',

        // VERIFY SIGNED MESSAGE MODULE
        VERIFY_SIGNED_MSG_TITLE: "Перевірте підписане повідомлення",
        VERIFY_SIGNED_MSG_SIG_VALID: 'Підпис дійсний',
        VERIFY_SIGNED_MSG_SIG_NOT_VALID: 'Підпис <b>НЕ</b> дійсний',
        VERIFY_SIGNED_MSG_NOT_VALID: 'Підписане повідомлення не дійсне!',

        // DNS MODULE
        DNS_SHORT_DESC: "Decentralized Domain Name System (DNS) service for namespace.nem domains",
        DNS_CONFIGURE: "Configure DNS",
        DNS_SEARCH_DNS: "Search DNS",
        DNS_GO_SEARCH: "GO!",
        DNS_GET_INFO: "Get info",
        DNS_SEARCH_HEADLINE: "Search DNS",
        DNS_SEARCH_HELP: "DNS help",
        DNS_SEARCH: "Search",
        DNS_SEARCH_HELP_INFO: "Type a namespace.nem to lookup associated DNS information or go directly to website. ",
        //DNS CONFIGURE
        DNS_SELECT_NAMESPACE:"select namespace",
        DNS_POINTER_ADDRESS:"Pointer address",
        DNS_IP_ADDRESS:"ip address",
        DNS_ORGA:"Organization",
        DNS_COUNTRY:"Country",
        DNS_ADDRESS:"Address",
        DNS_PHONE:"Phone",
        DNS_EMAIL:"Email",
        DNS_OTHERINFO:"Other info",
        DNS_JSONMSG:"Json message",
        DNS_CHAR_LEFT:"Characters Left",
        DNS_HELP1:"The owner of a NEM namespace can use the NEM DNS in a few easy steps. The DNS is built around the namespace platform in the NEM ecosystem and an associated pointer address (PA). The namespace owner needs to send a transaction to the namespace pointer address including a non-encrypted message in json format with information related to the namespace. The message can include relevant information such as IP address, ownership info, physical address, contact info and much more.",
        DNS_HELP2:"This is how you do it:",
        DNS_HELP3:"1. select namespace",
        DNS_HELP4:"2. write relevant or update DNS information",
        DNS_HELP5:"3. send transaction to pointer address",
        //DNS ALERTS
        ALERT_DNS_SUCCESS: "Information found",
        ALERT_DNS_NO_INFO_FOUND: "No DNS info found",

        // IMPORT WALLET QRCODE
        IMPORT_WALLET_QRCODE_TITLE: 'Import wallet QR code',
        IMPORT_WALLET_QRCODE_INFORMATION: 'Support wallet QR code: NEM wechat wallet, ios, android.',
        IMPORT_WALLET_QRCODE_LOAD: 'Load wallet QR code',
        IMPORT_WALLET_QRCODE_SCAN: 'Scan',
        IMPORT_WALLET_QRCODE_STOP_SCAN: 'Stop scan',

        //NEMonster
        NEMONSTER_SHORT_DESC: "Welcome to NEMonsters, a witty little collection game based on the NEM blockchain.",
        NEMONSTER_CATCH: "Catch",
        NEMONSTER_GET: "Get some monsters",
        NEMONSTER_DESC: "Welcome to NEMonsters, a witty little collection game based on the NEM blockchain. You can catch and collect over 110,000,000 different combinations of generated monsters; spanning from different colors, names and other spicy characteristics.  You catch a new monster by sending a fixed transaction; the monster is summoned when the transaction is confirmed. The characteristics of your new (evil) monster is based on the transaction hash – how cool is that. See if you can catch some of the monsters from the NEM foundation.",

        // CATAPULT OPT IN MODULE
        PORTAL_CATAPULTOPTIN_TITLE: 'Symbol Opt In',
        PORTAL_CATAPULTOPTIN_TEXT_LINK: 'here.',
        PORTAL_CATAPULTOPTIN_MULTISIG_TEXT: 'Your multi-signature opt-in request must be issued with cosigner accounts',
        PORTAL_CATAPULTOPTIN_BTN_2: 'Sign a Multisig Opt In Message',
        PORTAL_CATAPULTOPTIN_TREZOR_TEXT: 'Opt in with trezor is not implemented yet. If you want to Opt in, please move your funds to a normal account.',
        TITLE_CATAPULTOPTIN: 'Symbol Opt In',
        CATAPULTOPTIN_CREATE_HELP: 'Want to know more about opting in to Symbol?',
        CATAPULTOPTIN_TRANSACTION: 'Opt In Transaction',
        CATAPULTOPTIN_ACCOUNT_UNLOCK_PLACEHOLDER: 'Please provide the mnemonic passphrase for your Symbol Account that you opted in',
        CATAPULTOPTIN_ACCOUNT_STEP_1: 'Step 1: Please select an account to Opt In',
        CATAPULTOPTIN_ACCOUNT_STEP_1_NEW: 'Step 1: Please select an account to Opt In',
        CATAPULTOPTIN_ACCOUNT_STEP_2: 'Step 2: Review my Symbol account opt in information',
        CATAPULTOPTIN_ACCOUNT_MS_STEP_2: 'Step 2: Review multisig Symbol account information',
        CATAPULTOPTIN_ACCOUNT_STEP_3: 'Step 3: Review my namespaces to be opted in',
        CATAPULTOPTIN_ACCOUNT_STEP_4: 'Step 4: Review VRF keys in opt in',
        CATAPULTOPTIN_INCLUDE_VRF: 'Include VRF keys in opt in',
        CATAPULTOPTIN_VRF_KEYS: 'VRF keys',
        CATAPULTOPTIN_VRF_PUBLIC_KEY: 'VRF public key',
        CATAPULTOPTIN_ACCOUNT_MS_STEP_3: 'Step 3: Review multisig namespaces to be opted in',
        CATAPULTOPTIN_ACCOUNT_STEP_SIGN: 'Step 2: Sign Symbol Opt In',
        CATAPULTOPTIN_REVIEW_MULTISIG_RESULT: 'Review Multisig Symbol Opt In',
        CATAPULTOPTIN_REGISTER: 'Register Symbol Opt In',
        CATAPULTOPTIN_CREATE_ADDRESS: 'Create a new address on Symbol from mnemonic.',
        CATAPULTOPTIN_INCLUDE_NAMESPACE: 'Include my namespaces in the opt in',
        CATAPULTOPTIN_INCLUDE_MS_NAMESPACE: 'Include multisig account namespaces in the opt in',
        CATAPULTOPTIN_MULTISIG_CONTRACT_CONSIGNATURES: 'Multisig Contract Cosignatures',
        SIGN_MULTISIG_OPTIN_TRANSACTIONS_TITLE: 'Sign Multisignature Opt In Transactions',
        CATAPULTOPTIN_NAMESPACE_TO_DELETE: 'Opt Out of Namespace',
        CATAPULTOPTIN_NAMESPACE_REMOVE: 'Enter namespace to be removed',
        CATAPULTOPTIN_ENTER_PK: 'Enter a private key to generate Symbol account',
        CATAPULTOPTIN_ENTER_PASSWORD: 'Enter your password to generate Symbol account',
        CATAPULTOPTIN_REMOVE_NAMESPACE: 'Remove Namespace',
        CATAPULTOPTIN_OPT_IN_SUCCESS: 'Opt In completed successfully',
        CATAPULTOPTIN_OPT_IN_PENDING_SIGNATURES: 'Opt In pending cosignatories',
        CATAPULTOPTIN_TRANSFER_TRANSACTION_MULTISIG_NAME: 'Symbol Multisig Account Opt in Approval',
        CATAPULTOPTIN_NIS1: 'NIS1',
        CATAPULTOPTIN_OPTIN_ACCOUNT: 'Opt in account:',
        CATAPULTOPTIN_OPTIN_ACCOUNT_PK: 'Opt in account public key:',
        CATAPULTOPTIN_NAMESPACES_OPTIN: 'My opted in namespaces',
        CATAPULTOPTIN_CATAPULT: 'Symbol',
        CATAPULTOPTIN_OPTIN_ACCOUNT_ADDRESS: 'Opt in account address:',
        CATAPULTOPTIN_UNLOCK: 'Unlock Symbol Account',
        CATAPULTOPTIN_CONFIRM_OPTIN: 'Confirm Symbol Opt In',
        CATAPULT_OPT_IN_RESUME: 'Opt In Transaction Confirmation',
        CATAPULT_OPT_IN_RESUME_TEXT:'The following transaction will create a new Symbol account. To claim your funds, you need to back up your Mnemonic passphrase.',
        CATAPULT_OPT_IN_SUCCESS: 'Opt In Successful',
        CATAPULT_OPT_IN_BALANCE_SNAPSHOT: 'Balance to be included in Symbol',
        CATAPULT_OPT_IN_SUCCESS_SIGNING: 'Opt In signed successfully',
        CATAPULT_OPT_IN_UNDERSTAND: 'Considering the change of private key when used with Symbol, it is important that you understand that your account private key on Symbol will be different from your old private key. Please, confirm that you have made a copy of the new private key by entering ‘Yes, I understand’ in the field below.',
        CATAPULT_OPT_IN_CONFIRM_BACKUP: 'I have backed up my mnemonic passphrase for the opt in process and understand it is my responsibility to save and back it up.',
        CATAPULT_OPT_IN_UNDERSTAND_FUNDS: 'I understand that only the funds in my account on the snapshot block are the funds that will be included in my XYM account balance at Symbol launch. Any account balance changes after this opt transaction but before the snapshot will be reflected at Symbol launch.',
        GENERAL_MIN_SIGNATURES_REQUIRED: 'Minimum signatures required',
        SYMBOL_OPTIN_INITIATOR: 'Opt In initiator',
        CATAPULT_BACKUP_WALLET: 'Backup Symbol Wallet',
        CATAPULT_DOWNLOAD_WALLET: 'Download Encrypted Symbol Wallet',
        MNEMONIC: 'Mnemonic',
        CATAPULT_OPT_IN_LOADING: 'Fetching Opt In Status...',
        COSIGNER_NOT_OPTIN: 'Cosigner has not started the opt in process yet',
        SYMBOL_ADDRESS: 'Symbol Address',
        YOUR_SYMBOL_ADDRESS: 'Your Symbol Address',
        YOUR_SYMBOL_MNEMONIC: 'Your Symbol Mnemonic',
        SYMBOL_COSIGNERS: 'Symbol Cosigners',
        CATAPULTOPTIN_CONFIRM_SIGN: 'Sign Symbol Opt In',
        CATAPULTOPTIN_FIRST_DO_NORMAL: 'To do the Multisig Opt In you must first do the Normal Opt In',
        CATAPULTOPTIN_ENCRYPTED_WALLET_TEXT: 'Please create a new password to encrypt your Symbol wallet backup and then press the download button.',
        CATAPULTOPTIN_GENERATE_NEW_SYMBOL: 'Generate new Symbol Mnemonic',
        CATAPULTOPTIN_VRF_KEYS_DESCRIPTION: 'VRF keys are used for harvesting on symbol. If you own a node and want to start harvesting the first blocks, you should activate this option and save the keys to put them back in your symbol node configuration. If you don\'t select this option, you will also be able to generate new keys once mainnet is alive',
        OPTIN_FORM_PASSWORD_FIELD_PLACEHOLDER: 'Enter your regular NEM wallet password',
        OPTIN_NEW_PASSWORD: 'New Password',
        SYMBOL_PASSWORD_REQUIREMENT: "Password must be at least 8 characters",
        SYMBOL_WALLET_CREATING_TYPE_INFO: 'Виберіть спосіб створення акаунту Symbol',
        SYMBOL_WALLET_CREATING_BY_ENTROPY_TYPE_INFO: 'Створити випадковий рахунок',
        SYMBOL_WALLET_CREATING_BY_LEDGER_IMPORT_TYPE_INFO: 'Імпортувати акаунт Symbol з Ledger',
        SYMBOL_SIGNUP_CREATE_WALLET_ADD_ENTROPY_INFO_1: 'We are now going to generate your primary private key.',
        SYMBOL_SIGNUP_CREATE_WALLET_ADD_ENTROPY_INFO_2: 'Please click on start and move your cursor around to add more entropy.',
        OPTIN_WELCOME_TITLE: 'Welcome to Symbol Opt-in',
        OPTIN_INFO_1: 'The Symbol mainnet has not launched yet.',
        OPTIN_INFO_2: 'You can prepare by opting in your NEM NIS1 accounts with this module ',
        OPTIN_INFO_3: 'to migrate your balance and namespaces to the Symbol network.',
        OPTIN_LINK_INFO: 'Get all information about Opt-in process ',
        OPTIN_NAMESPACES_TITLE: 'Opt-in Namespaces',
        OPTIN_NAMESPACES_INFO:'Now you can Opt-in the Namespace(s) you own on NEM NIS1. This provides a placeholder for the same Namespace(s) on the Symbol blockchain.',
        OPTIN_NAMESPACES_LINK: 'Get all information about Namespace Opt-in ',
        OPTIN_NAMESPACES_SELECT: 'Select the Namespaces you want to Opt-in:',
        OPTIN_VRF_TITLE: 'Include VRF keys',
        OPTIN_VRF_INFO:'VRF keys allow your account to harvest block rewards. If you plan to hold over 10,000 XYM in your account after launch and would like to harvest on Symbol blockchain, you need to add VRF keys to the Opt-in process.',
        OPTIN_VRF_LINK: 'Get all information about VRF keys ',
        OPTIN_VRF_KEYS:'Add VRF Keys',
        OPTIN_VRF_PUBLIC: 'VRF Public Address',
        OPTIN_VRF_PRIVATE: 'VRF Private Key',
        OPTIN_TAC_TITLE:'Terms and Conditions',
        OPTIN_TAC_TEXT:'terms and conditions',
        OPTIN_TAC_INFO_1:'The Opt-in process is a feature launched by Symbol Chain Limited with the aim of helping NIS1 users migrate their balances to their new Symbol network. It is a process defined under certain parameters that all users who adhere to it have to comply with.',
        OPTIN_TAC_INFO_2:'Symbol Chain Limited will not be liable for any incidents outside of the terms and conditions specified below.',
        OPTIN_TAC_READ_ACCEPT: 'I have read and accept the ',
        OPTIN_CONFIRM_TITLE:'Confirm Symbol Opt-in',
        OPTIN_CONFIRM_INFO:'We are almost done! This will be the information that will be migrated to the new Symbol chain. Review it carefully and sign with your NEM key to finish your Opt-in.',
        OPTIN_CONFIRM_OPTIN:'Confirm Opt-in',
        HERE:'here',
        OPTIN_ENTER_PASSWORD: 'Enter your NEM NIS1 password to sign the Opt-in',
        OPTIN_LOADING: 'Fetching Opt In data...',
        OPTIN_FINISHED: 'Підписку Опт-ін буде відкрито після запуску основної мережі Symbol. Будь ласка, очікуйте на нову версію гаманця.',
        CREATE_SYMBOL_ACCOUNT: 'Create your Symbol account',
        OPTIN_SYMBOL_READY: 'Your Symbol account is ready',
        OPTIN_COPY_SUCCESS: 'Copied!',
        OPTIN_TYPE_SELECT: 'Выберите способ, с помощью которого вы произвели опт-ин процесс, в этом кошельке',
        CATAPULT_OPT_IN_ERROR_TOO_MUCH_COSIGNATORIES: 'У этого аккаунта более 8 подписантов. Протокол Opt In позволяет использовать мультисиг аккаунты не более чем с 9 подписантами. ',

        PORTAL_CATAPULTOPTIN_TEXT:              'Використовуйте цей модуль для того, щоб отримати XYM у мережі Symbol. Будь ласка, читайте далі',
        PORTAL_CATAPULTOPTIN_BTN_1:             'Зробити запит на XYM з Symbol opt-in',
        CATAPULTOPTIN_ACCOUNT_UNLOCK:           'Введіть свій відкритий ключ акаунту Symbol',
        CATAPULTOPTIN_REVIEW_NORMAL_RESULT:     'Перегляд інформації про мій акаунт Symbol account opt in information',
        OPTIN_PP_TEXT:                          'політика конфіденційності',
        FORM_SELECT_ACCOUNT:                    'Виберіть акаунт',
        POST_OPTIN_INFO_3:                      'цей модуль для перенесення вашого балансу до мережі Symbol.',
        POST_OPTIN_INFO_2:                      'Якщо Ваш акаунт мав баланс XEM на момент блоку снапшоту, Ви можете зробити запит на отримання XYM.',
        POST_OPTIN_INFO_1:                      'Мережа Symbol запущена! ',
        SELECT_ACCOUNT_POST_OPTIN:              'Виберіть акаунт для процесу opt-in',
        POST_OPTIN_STATUS:                      'Статус opt-in',
        POST_OPTIN_DETAILS:                     'Деталі opt-in',
        POST_OPTIN_AMOUNT:                      'Сума, на яку можна зробити запит',
        POST_OPTIN_AMOUNT_CLAIMED:              'Сума, на яку було зроблено запит',
        POST_OPTIN_START:                       'РОЗПОЧАТИ OPT-IN',
        POST_OPTIN_DEST_MSIG:                   'Уведіть публічний ключ мультисиг акаунта для нарахування XYM. Цей акаунт повинен мати однакову кількість підпісників що й поточний NEM NIS1 мультисиг акаунт',
        POST_OPTIN_DEST_MSIG_ADDRESS:           'Адреса мультисиг акаунта Symbol',
        POST_OPTIN_DEST_ADDRESS:                'Цільова адреса для нарахування в мережі Symbol',
        POST_OPTIN_DEST_MULTISIG_ADDRESS:       'Цільова мультисиг адреса для нарахування в мережі Symbol',
        POST_OPTIN_COSIG_DEST_ADDRESS:          'Цільова адреса підписанта в мережі Symbol',
        NIS1_ADDRESS:                           'Адреса Підписанта',
        YOUR_NIS_ACCOUNT:                       'Ваша NEM NIS1 Адреса',
        OPTIN_NOT_DONE:                         'Opt-in не виконано',
        OPTIN_STATUS_TITLE_1:                   'Opt-in не виконано',
        OPTIN_STATUS_TEXT_1:                    'Ви можете зробити запит на отримання XYM',
        OPTIN_STATUS_TITLE_2:                   'Очікується opt-in',
        OPTIN_STATUS_TEXT_2:                    'Ваш запит на отримання XYM успішно створено. ',
        OPTIN_STATUS_TITLE_3:                   'Opt-in для мультисиг акаунту не розпочато',
        OPTIN_STATUS_TEXT_3:                    'Ви можете зробити запит на отримання XYM для мультисиг акаунту',
        OPTIN_STATUS_TITLE_4:                   'Очікуються підписи для мультисиг opt-in',
        OPTIN_STATUS_TEXT_4:                    'Очікуються підписанти для виконання opt-in',
        OPTIN_STATUS_TITLE_5:                   'Очікується мултисиг opt-in',
        OPTIN_STATUS_TEXT_5:                    'Ви успішно виконали opt-in. Ваш запит на отримання XYM може зайняти до 2 тижнів. ',
        OPTIN_STATUS_TITLE_6:                   'Opt-in виконано',
        OPTIN_STATUS_TEXT_6:                    'Запит на отримання XYM успішно виконано. Ви маєте отримати транзакцію з сумою на Symbol акаунт.',
        OPTIN_NOT_AVAILABLE:                    'У Вас не було достатньої кількості XEM на момент снапшоту, або Ви вже виконали підписку opt-in до запуску мережі Symbol',
        OPTIN_PUBLICKEY_PLACEHOLDER:            'Відкритий ключ повинен містити 64 шістнадцяткові символи',
        OPTIN_DONE:                             'Виконано',
        OPTIN_ERROR_TITLE_0:                    'Цей opt-in запит не вдався, оскільки підпис був недійсним.',
        OPTIN_ERROR_TITLE_1:                    'Цей opt-in запит не вдався, оскільки цільовий рахунок для нарахування не був дійсним.',
        OPTIN_ERROR_TITLE_2:                    'Цей opt-in запит не вдався, оскільки один або декілька підписантів не були дійсними.',
        OPTIN_SIGNED:                           'Підписано',
    });

}

export default UkrainianProvider;

'''
'''--- src/app/modules/ledger/hw-app-nem.js ---
import BIPPath from "bip32-path";

/**
 * NEM API
 *
 * @example
 * import Nem from "@ledgerhq/hw-app-nem";
 * const nem = new Nem(transport);
   recognize networkId by bip32Path;
      "44'/43'/networkId'/walletIndex'/accountIndex'"

   const bip32path_mijin_testnet = "44'/43'/144'/1'/2'"
   const bip32path_mijin_mainnet "44'/43'/96'/3'/1'"
   const bip32path_nem_mainnet = "44'/43'/104'/5'/1'"

 */

const MAX_CHUNK_SIZE = 255;
const CLA_FIELD = 0xe0

export default class Nem {

    constructor(transport, scrambleKey = "NEM") {
        this.transport = transport;
        transport.decorateAppAPIMethods(this,
            ["getAppVersion", "getAddress", "getRemoteAccount", "signTransaction"],
            scrambleKey);
    }

    /**
     * get the version of the NEM app installed on the hardware device
     *
     * @return an object with a version
     * @example
     * const result = await nem.getAppVersion();
     *
     * {
     *   "majorVersion": "0",
     *   "minorVersion": "0",
     *   "patchVersion": "2"
     * }
     */
    async getAppVersion() {
        // APDU fields configuration
        const apdu = {
            cla: 0xe0,
            ins: 0x06,
            p1: 0x00,
            p2: 0x00,
            data: Buffer.alloc(1, 0x00, 'hex'),
        };
        // Response from Ledger
        const response = await this.transport.send(apdu.cla, apdu.ins, apdu.p1, apdu.p2, apdu.data);
        const result = {
            majorVersion: '',
            minorVersion: '',
            patchVersion: '',
        };
        result.majorVersion = response[1];
        result.minorVersion = response[2];
        result.patchVersion = response[3];
        return result;
    }

    /**
     * get NEM address for a given BIP 32 path.
     *
     * @param path a path in BIP 32 format
     * @param networkType network type of NEM
     * @return an object with a publicKey, address and chainCode
     * @example
     * const result = await nem.getAddress(bip32path, networkType);
     * const { address, publicKey, chainCode } = result;
     */
    async getAddress(path, networkType) {
        const GET_ADDRESS_INS_FIELD = 0x02
        const display = true;
        const chainCode = false;
        const ed25519 = true;

        const bipPath = BIPPath.fromString(path).toPathArray();
        const curveMask = ed25519 ? 0x80 : 0x40;

        // APDU fields configuration
        const apdu = {
            cla: CLA_FIELD,
            ins: GET_ADDRESS_INS_FIELD,
            p1: display ? 0x01 : 0x00,
            p2: curveMask | (chainCode ? 0x01 : 0x00),
            data: Buffer.alloc(1 + bipPath.length * 4 + 1),
        };

        apdu.data.writeInt8(bipPath.length, 0);
        bipPath.forEach((segment, index) => {
            apdu.data.writeUInt32BE(segment, 1 + index * 4);
        });
        apdu.data.writeUInt8(networkType, 1 + bipPath.length * 4);

        // Response from Ledger
        const response = await this.transport.send(apdu.cla, apdu.ins, apdu.p1, apdu.p2, apdu.data);

        const result = {};
        const addressLength = response[0];
        const publicKeyLength = response[1 + addressLength];
        if (addressLength !== 40 || publicKeyLength !== 32) {
            throw { statusCode: 27264 }
        }
        result.address = response.slice(1, 1 + addressLength).toString("ascii");
        result.publicKey = response.slice(1 + addressLength + 1, 1 + addressLength + 1 + publicKeyLength).toString("hex");
        result.path = path;
        return result;
    }

    /**
     * get NEM remote account for a given BIP 32 path.
     *
     * @param path a path in BIP 32 format
     * @return an object with a remote account and chainCode
     * @example
     * const result = await nem.getRemoteAccount(bip32path);
     * const { remoteAccount, path } = result;
     */
    async getRemoteAccount(path) {
        const GET_REMOTE_ACCOUNT_INS_FIELD = 0x05
        const display = true;
        const chainCode = false;
        const ed25519 = true;

        const bipPath = BIPPath.fromString(path).toPathArray();
        const curveMask = ed25519 ? 0x80 : 0x40;

        // APDU fields configuration
        const apdu = {
            cla: CLA_FIELD,
            ins: GET_REMOTE_ACCOUNT_INS_FIELD,
            p1: display ? 0x01 : 0x00,
            p2: curveMask | (chainCode ? 0x01 : 0x00),
            data: Buffer.alloc(1 + bipPath.length * 4),
        };

        apdu.data.writeInt8(bipPath.length, 0);
        bipPath.forEach((segment, index) => {
            apdu.data.writeUInt32BE(segment, 1 + index * 4);
        });

        // Response from Ledger
        const response = await this.transport.send(apdu.cla, apdu.ins, apdu.p1, apdu.p2, apdu.data);

        const result = {};
        const remoteAccountLength = response[0];
        result.remoteAccount = response.slice(1, 1 + remoteAccountLength).toString("hex");
        result.path = path;
        return result;
    }

    /**
     * sign a NEM transaction with a given BIP 32 path
     *
     * @param path a path in BIP 32 format
     * @param rawTxHex a raw transaction hex string
     * @return a signature as hex string
     * @example
     * const signature = await nem.signTransaction(bip32path, "0390544100000000000000008A440493150000009029ECB35BFB8D51833381AA7947B9A4A21BA83712F338054B190001005369676E2066726F6D204C6564676572204E616E6F20532E44B262C46CEABB852823000000000000");
     */
    async signTransaction(path, rawTxHex) {
        const TX_INS_FIELD = 0x04;
        const bipPath = BIPPath.fromString(path).toPathArray();
        const rawTx = Buffer.from(rawTxHex, "hex");

        const chainCode = false;
        const ed25519 = true;

        const curveMask = ed25519 ? 0x80 : 0x40;

        const apdus = [];
        let offset = 0;

        while (offset !== rawTx.length) {
            const maxChunkSize = offset === 0 ? MAX_CHUNK_SIZE - 1 - bipPath.length * 4 : MAX_CHUNK_SIZE;
            const chunkSize = offset + maxChunkSize > rawTx.length ? rawTx.length - offset : maxChunkSize;
            // APDU fields configuration
            const apdu = {
                cla: CLA_FIELD,
                ins: TX_INS_FIELD,
                p1: offset === 0 ? (chunkSize < maxChunkSize ? 0x00 : 0x80) : chunkSize < maxChunkSize ? 0x01 : 0x81,
                p2: curveMask | (chainCode ? 0x01 : 0x00),
                data: offset === 0 ? Buffer.alloc(1 + bipPath.length * 4 + chunkSize) : Buffer.alloc(chunkSize)
            };

            if (offset === 0) {
                apdu.data.writeInt8(bipPath.length, 0);
                bipPath.forEach((segment, index) => {
                    apdu.data.writeUInt32BE(segment, 1 + index * 4);
                });
                rawTx.copy(apdu.data, 1 + bipPath.length * 4, offset, offset + chunkSize);
            } else {
                rawTx.copy(apdu.data, 0, offset, offset + chunkSize);
            }
            apdus.push(apdu);
            offset += chunkSize;
        }

        let response = Buffer.alloc(0);
        for (let apdu of apdus) {
            response = await this.transport.send(apdu.cla, apdu.ins, apdu.p1, apdu.p2, apdu.data);
        }

        // the last 2 bytes are status code from the hardware
        //return response.slice(0, response.length - 2).toString("hex");

        let h = response.toString("hex");

        return {
            signature: h.slice(0, 128),
            publicKey: rawTxHex.slice(32, 96),
            path: path
        };
    }
}

'''
'''--- src/app/modules/ledger/hw-app-symbol.js ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// internal dependencies
import * as BIPPath from 'bip32-path';
import { Transaction, SignedTransaction, CosignatureSignedTransaction, Convert } from 'symbol-sdk';

export default class SymbolLedger {

    constructor(transport, scrambleKey = "Symbol") {
        this.transport = transport;
        transport.decorateAppAPIMethods(
            this,
            ['getAppVersion', 'getAccount', 'signTransaction'],
            scrambleKey,
        );
    }

    /**
     * get the version of the Symbol app installed on the Ledger devices
     *
     * @return an object with a version
     * @example
     * const result = await symbolLedger.getAppVersion();
     *
     * {
     *   "majorVersion": "0",
     *   "minorVersion": "0",
     *   "patchVersion": "2"
     * }
     */
    async getAppVersion() {
        // APDU fields configuration
        const apdu = {
            cla: 0xe0,
            ins: 0x06,
            p1: 0x00,
            p2: 0x00,
            data: Buffer.alloc(1, 0x00, 'hex'),
        };
        // Response from Ledger
        const response = await this.transport.send(apdu.cla, apdu.ins, apdu.p1, apdu.p2, apdu.data);
        const result = {
            majorVersion: '',
            minorVersion: '',
            patchVersion: '',
        };
        result.majorVersion = response[1];
        result.minorVersion = response[2];
        result.patchVersion = response[3];
        return result;
    }

    /**
     * get Symbol public key from a given BIP 44 path from the Ledger
     *
     * @param accountPath a path in BIP 44 format to Symbol account
     * @param networkType network type of Symbol
     * @param display optionally enable or not the display
     * @return an object with a publicKey
     */
    async getAccount(accountPath, networkType, display) {
        const CLA_FIELD = 0xe0;
        const GET_ACCOUNT_INS_FIELD = 0x02;

        const bipPath = BIPPath.fromString(accountPath).toPathArray();
        const curveMask = 0x80; // use Curve25519

        // APDU fields configuration
        const apdu = {
            cla: CLA_FIELD,
            ins: GET_ACCOUNT_INS_FIELD,
            p1: display ? 0x01 : 0x00,
            p2: curveMask,
            data: Buffer.alloc(1 + bipPath.length * 4 + 1),
        };

        apdu.data.writeInt8(bipPath.length, 0);
        bipPath.forEach((segment, index) => {
            apdu.data.writeUInt32BE(segment, 1 + index * 4);
        });
        apdu.data.writeUInt8(networkType, 1 + bipPath.length * 4);

        // Response from Ledger
        const response = await this.transport.send(apdu.cla, apdu.ins, apdu.p1, apdu.p2, apdu.data);
        const result = {
            publicKey: '',
        };

        const publicKeyLength = response[0];
        if (publicKeyLength !== 32) {
            throw { statusCode: 27904 };
        }
        result.publicKey = response.slice(1, 1 + publicKeyLength).toString('hex');
        return result;
    }

    /**
     * sign a Symbol transaction by account on Ledger at given BIP 44 path
     *
     * @param path a path in BIP 44 format
     * @param transaction a transaction needs to be signed
     * @param networkGenerationHash the network generation hash of block 1
     * @param signerPublicKey the public key of signer
     * @return a signed Transaction which is signed by account at path on Ledger
     */
    async signTransaction(path, transaction, networkGenerationHash, signerPublicKey) {
        const rawPayload = transaction.serialize();
        const signingBytes = networkGenerationHash + rawPayload.slice(216);
        const rawTx = Buffer.from(signingBytes, 'hex');
        const response = await this.ledgerMessageHandler(path, rawTx);
        // Response from Ledger
        const h = response.toString('hex');
        const signature = h.slice(0, 128);
        const payload = rawPayload.slice(0, 16) + signature + signerPublicKey + rawPayload.slice(16 + 128 + 64, rawPayload.length);
        const generationHashBytes = Array.from(Convert.hexToUint8(networkGenerationHash));
        const transactionHash = Transaction.createTransactionHash(payload, generationHashBytes);
        const signedTransaction = new SignedTransaction(
            payload,
            transactionHash,
            signerPublicKey,
            transaction.type,
            transaction.networkType,
        );
        return signedTransaction;
    }

    /**
     * sign a Symbol Cosignature transaction with a given BIP 44 path
     *
     * @param path a path in BIP 44 format
     * @param cosignatureTransaction a cosinature transaction needs to be signed
     * @param signerPublicKey the public key of signer
     * @param isOptinSymbolWallet if Opt-in Symbol wallet uses curve Secp256K1 else uses curve Ed25519
     * @return a Signed Cosignature Transaction which is signed by account at path on Ledger
     */
    async signCosignatureTransaction(path, cosignatureTransaction, signerPublicKey, isOptinSymbolWallet, transactionHash) {
        const rawPayload = cosignatureTransaction.serialize();
        const signingBytes = transactionHash + rawPayload.slice(216);
        const rawTx = Buffer.from(signingBytes, 'hex');
        const response = await this.ledgerMessageHandler(path, rawTx, false, isOptinSymbolWallet);
        // Response from Ledger
        const h = response.toString('hex');
        const signature = h.slice(0, 128);
        const cosignatureSignedTransaction = new CosignatureSignedTransaction(
            transactionHash,
            signature,
            signerPublicKey,
        );
        return cosignatureSignedTransaction;
    }

    /**
     * handle sending and receiving packages between Ledger and Wallet
     * @param path a path in BIP 44 format
     * @param rawTx a raw payload transaction hex string
     * @returns respond package from Ledger
     */
    async ledgerMessageHandler(path, rawTx) {
        const CLA_FIELD = 0xe0;
        const TX_INS_FIELD = 0x04;
        const MAX_CHUNK_SIZE = 255;
        const CONTINUE_SENDING = '0x9000';

        const curveMask = 0x80;  // user Ed25519 curve
        const bipPath = BIPPath.fromString(path).toPathArray();
        const apduArray = [];
        let offset = 0;

        while (offset !== rawTx.length) {
            const maxChunkSize = offset === 0 ? MAX_CHUNK_SIZE - 1 - bipPath.length * 4 : MAX_CHUNK_SIZE;
            const chunkSize = offset + maxChunkSize > rawTx.length ? rawTx.length - offset : maxChunkSize;
            // APDU fields configuration
            const apdu = {
                cla: CLA_FIELD,
                ins: TX_INS_FIELD,
                p1: offset === 0 ? (chunkSize < maxChunkSize ? 0x00 : 0x80) : chunkSize < maxChunkSize ? 0x01 : 0x81,
                p2: curveMask,
                data: offset === 0 ? Buffer.alloc(1 + bipPath.length * 4 + chunkSize) : Buffer.alloc(chunkSize),
            };

            if (offset === 0) {
                apdu.data.writeInt8(bipPath.length, 0);
                bipPath.forEach((segment, index) => {
                    apdu.data.writeUInt32BE(segment, 1 + index * 4);
                });
                rawTx.copy(apdu.data, 1 + bipPath.length * 4, offset, offset + chunkSize);
            } else {
                rawTx.copy(apdu.data, 0, offset, offset + chunkSize);
            }
            apduArray.push(apdu);
            offset += chunkSize;
        }
        let response = Buffer.alloc(0);
        for (const apdu of apduArray) {
            response = await this.transport.send(apdu.cla, apdu.ins, apdu.p1, apdu.p2, apdu.data);
        }

        if (response.toString() != CONTINUE_SENDING) {
            return response;
        }
    }
}

'''
'''--- src/app/modules/ledger/index.js ---
import angular from 'angular';

// Create the module where our functionality can attach to
let ledgerModule = angular.module('app.ledger', []);

// Include our UI-Router config settings
import ledgerConfig from './ledger.config';
ledgerModule.config(ledgerConfig);

// Controllers
import ledgerCtrl from './ledger.controller';
ledgerModule.controller('LedgerCtrl', ledgerCtrl);

// Services
import ledgerService from './ledger.service';
ledgerModule.service('Ledger', ledgerService);

export default ledgerModule;

'''
'''--- src/app/modules/ledger/ledger.config.js ---
function LedgerConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.ledger', {
            url: '/ledger',
            controller: 'LedgerCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/ledger/ledger.html',
            title: 'LEDGER'
        });

};

export default LedgerConfig;

'''
'''--- src/app/modules/ledger/ledger.controller.js ---
import nem from 'nem-sdk';
const TransportNodeHid = window['TransportNodeHid'] && window['TransportNodeHid'].default;
import NemH from "../../modules/ledger/hw-app-nem";
const SUPPORT_VERSION = {
    LEDGER_MAJOR_VERSION: 0,
    LEDGER_MINOR_VERSION: 0,
    LEDGER_PATCH_VERSION: 4
}
class LedgerCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(AppConstants, $filter, $timeout, Alert, Login, Ledger) {
        'ngInject';

        //// Module dependencies region ////

        this._AppConstants = AppConstants;
        this._$filter = $filter;
        this._$timeout = $timeout;
        this._Alert = Alert;
        this._Login = Login;
        this._Ledger = Ledger;

        //// End dependencies region ////

        //// Module properties region ////

        /**
         * Default network
         *
         * @type {number}
         */
        this.network = this._AppConstants.defaultNetwork;

        /**
         * Available networks
         *
         * @type {object} - An object of objects
         */
        this.networks = nem.model.network.data;

        // Prevent user to click twice on send when already processing
        this.okPressed = false;

        //// End properties region ////
    }

    //// Module methods region ////

    /**
     * Change wallet network
     *
     * @param {number} id - The network id to use at wallet creation
     */
    changeNetwork(id) {
        if (id == nem.model.network.data.mijin.id && this._AppConstants.mijinDisabled) {
            this._Alert.mijinDisabled();
            // Reset network to default
            this.network = this._AppConstants.defaultNetwork;
            return;
        } else if (id == nem.model.network.data.mainnet.id && this._AppConstants.mainnetDisabled) {
            this._Alert.mainnetDisabled();
            // Reset network to default
            this.network = this._AppConstants.defaultNetwork;
            return;
        }
        // Set Network
        this.network = id;
    }

    /**
     * Pop-up alert handler
     */
    alertHandler(inputErrorCode) {
        if (inputErrorCode.message && inputErrorCode.message.includes("cannot open device with path")) {
            inputErrorCode = 3;
        }
        switch (inputErrorCode) {
            case 'NoDevice':
                this._Alert.ledgerDeviceNotFound();
                break;
            case 26628:
            case 27904:
                this._Alert.ledgerNotOpenApp();
                break;
            case 27264:
                this._Alert.ledgerNotUsingCorrectApp();
                break;
            case 27013:
                this._Alert.ledgerLoginCancelByUser();
                break;
            case 26368:
                this._Alert.ledgerNotOpenApp(false);
                break;
            case 2:
                this._Alert.ledgerNotSupportApp();
                break;
            case 3:
                this._Alert.ledgerConnectedOtherApp();
                break;
            default:
                this._Alert.createWalletFailed(inputErrorCode);
                break;
        }
    }

    /**
     * Login with LEDGER
     */
    login() {
        this.okPressed = true;
        this._Ledger.getAppVersion().then(checkVersion => {
            if (checkVersion === 1) {
                alert(this._$filter('translate')('LEDGER_NANO_CHECK_DEVICE'));
                this._$timeout(() => {
                    this._Alert.ledgerFollowInstruction();
                });
                this._Ledger.createWallet(this.network)
                    .then(wallet => {
                        this._Login.login({}, wallet);
                        this.okPressed = false;
                    })
                    .catch(error => {
                        this._$timeout(() => {
                            this.alertHandler(error);
                        });
                        this.okPressed = false;
                    });
            } else {
                this._$timeout(() => {
                    this.alertHandler(checkVersion);
                });
                this.okPressed = false;
            }
        })
        .catch(error => {
            this._$timeout(() => {
                this.alertHandler(error);
            });
            this.okPressed = false;
        });
    }
    //// End methods region ////
}

export default LedgerCtrl;

'''
'''--- src/app/modules/ledger/ledger.html ---
<div class="signup-page">

    <div class="container">
        <div class="row text-center">
            <div class="col-md-12">
                <h1>{{'LEDGER_NANO_TITLE' | translate}}</h1>
                <p>{{'LEDGER_NANO_TEXT' | translate }}</p>
            </div>
        </div>

        <div class="col-md-offset-3 col-md-6">
            <fieldset class="form-group">
                <p class="text-center">{{'SIGNUP_NETWORK_SELECT' | translate}}</p>
                <select class="form-control" ng-model="$ctrl.network" ng-change="$ctrl.changeNetwork($ctrl.network)" ng-options="network.id as (network.id | toNetworkName) for network in $ctrl.networks">
            <option value="" disabled selected>{{'SIGNUP_NETWORK_SELECT' | translate}}</option>
          </select>
            </fieldset>
            <div class="form-group text-center">
                <p ng-show="$ctrl.network === 104"><span ng-bind-html="'SIGNUP_NETWORK_MAINNET' | translate"></span></p>
                <p ng-show="$ctrl.network === -104"><span ng-bind-html="'SIGNUP_NETWORK_TESTNET' | translate"></span></p>
                <p ng-show="$ctrl.network === 96"><span ng-bind-html="'SIGNUP_NETWORK_MIJIN' | translate"></span></p>
            </div>
            <div class="form-group">
                <hr style="border-color:#444;">
                <div class="row">
                    <div class="col-md-12 col-sm-6">
                        <button class="btn btn-primary" style="width:100%;" ng-click="$ctrl.login()" ng-disabled="$ctrl.okPressed">
                {{ 'GENERAL_NEXT' | translate }} <span class="fa fa-chevron-right" aria-hidden="true"></span>
              </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

'''
'''--- src/app/modules/ledger/ledger.service.js ---
import nem from "nem-sdk";
const TransportNodeHid = window['TransportNodeHid'] && window['TransportNodeHid'].default;
import NemH from "./hw-app-nem";
import SymbolH from "./hw-app-symbol";

const NEM_SUPPORT_VERSION = {
    LEDGER_MAJOR_VERSION: 0,
    LEDGER_MINOR_VERSION: 0,
    LEDGER_PATCH_VERSION: 8
}

const SYMBOL_SUPPORT_VERSION = {
    LEDGER_MAJOR_VERSION: 0,
    LEDGER_MINOR_VERSION: 0,
    LEDGER_PATCH_VERSION: 8
}

/** Service storing Ledger utility functions. */
class Ledger {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Alert, $filter, $timeout) {
        'ngInject';

        // Service dependencies region //
        this._Alert = Alert;
        this._$filter = $filter;
        this._$timeout = $timeout;

        // End dependencies region //

        // Service properties region //

        // End properties region //

        // Initialization
    }

    // Service methods region //

    /**
     * Pop-up alert handler
     */
    alertHandler(inputErrorCode, isSymbolOptin, isTxSigning, txStatusText) {
        if (inputErrorCode.message && inputErrorCode.message.includes("cannot open device with path")) {
            inputErrorCode = 3;
        }
        switch (inputErrorCode) {
            case 'NoDevice':
                this._Alert.ledgerDeviceNotFound();
                break;
            case 26628:
                if (isTxSigning) {
                    this._Alert.ledgerDeviceLocked();
                    break;
                }
            case 27904:
                this._Alert.ledgerNotOpenApp(isSymbolOptin);
                break;
            case 27264:
                this._Alert.ledgerNotUsingCorrectApp(isSymbolOptin);
                break;
            case 27013:
                isTxSigning ? this._Alert.ledgerTransactionCancelByUser() : this._Alert.ledgerRequestCancelByUser();
                break;
            case 26368:
                isTxSigning ? this._Alert.ledgerNotOpenApp(isSymbolOptin) : this._Alert.ledgerTransactionTooBig();
                break;
            case 2:
                this._Alert.ledgerNotSupportApp();
                break;
            case 3:
                this._Alert.ledgerConnectedOtherApp();
                break;
            default:
                isTxSigning ? this._Alert.transactionError(txStatusText) : this._Alert.requestFailed(inputErrorCode);
                break;
        }
    }

    async createWallet(network) {
        return this.createAccount(network, 0, "Primary")
            .then((account) => ({
                "name": "LEDGER",
                "accounts": {
                    "0": account
                }
            }))
            .catch((err) => {
                throw err;
            });
    }

    bip44(network, index) {
        const coinType = network == 104 ? 43 : 1;
        return `m/44'/${coinType}'/${index}'/0'/0'`;
    }

    createAccount(network, index, label) {
        const hdKeypath = this.bip44(network, index);
        return this.getAccount(hdKeypath, network, label);
    }

    addAccount(network, index, label) {
        const hdKeypath = this.bip44(network, index);
        return new Promise((resolve, reject) => {
            this.getAppVersion().then(checkVersion => {
                if (checkVersion === 1) {
                    alert(this._$filter('translate')('LEDGER_NANO_CHECK_DEVICE'));
                    this._$timeout(() => {
                        this._Alert.ledgerFollowInstruction();
                    });

                    this.getAccount(hdKeypath, network, label).then((result) => {
                        resolve(result)
                    }).catch((error) => {
                        this._$timeout(() => {
                            this.alertHandler(error, false, false);
                        });
                        reject(true);
                    });

                } else {
                    this._$timeout(() => {
                        this.alertHandler(checkVersion, false, false);
                    });
                    reject(true);
                }
            }).catch(error => {
                this._$timeout(() => {
                    this.alertHandler(error, false, false);
                });
                reject(true);
            });
        });
    }

    getSymbolAccount(hdKeypath, network, display) {
        return new Promise((resolve, reject) => {
            this.getAppVersion(true).then(checkVersion => {
                if (checkVersion === 1) {
                    if (display) {
                        alert(this._$filter('translate')('LEDGER_NANO_CHECK_DEVICE'));
                        this._$timeout(() => {
                            this._Alert.ledgerFollowInstruction();
                        });
                    }

                    this.getAccount(hdKeypath, network, 'Symbol', true, display).then((account) => {
                        resolve(account.publicKey);
                    }).catch((error) => {
                        this._$timeout(() => {
                            this.alertHandler(error, true, false);
                        });
                        reject(true);
                    });

                } else {
                    this._$timeout(() => {
                        this.alertHandler(checkVersion, true, false);
                    });
                    reject(true);
                }
            }).catch(error => {
                this._$timeout(() => {
                    this.alertHandler(error, true, false);
                });
                reject(true);
            });
        });
    }

    async signSymbolTransaction(path, transaction, networkGenerationHash, signerPublicKey) {
        return new Promise((resolve, reject) => {
            this.getAppVersion(true).then(checkVersion => {
                if (checkVersion === 1) {
                    this._signSymbolTransaction(path, transaction, networkGenerationHash, signerPublicKey).then((result) => {
                        resolve(result);
                    }).catch((error) => {
                        reject({ ledgerError: [error, true, false] });
                    });

                } else {
                    reject({ ledgerError: [checkVersion, true, false] });
                }
            }).catch(error => {
                reject({ ledgerError: [error, true, false] });
            });
        });
    }

    async _signSymbolTransaction(path, transaction, networkGenerationHash, signerPublicKey) {
        try {
            const transport = await TransportNodeHid.open("");
            const symbolH = new SymbolH(transport);
            try {
                const result = await symbolH.signTransaction(path, transaction, networkGenerationHash, signerPublicKey);
                return Promise.resolve(result);
            } catch (err) {
                throw err
            } finally {
                transport.close();
            }
        } catch (err) {
            if (err.statusCode != null) {
                return Promise.reject(err.statusCode);
            } else if (err.id != null) {
                return Promise.reject(err.id);
            } else if (err.name == "TransportError") {
                Promise.reject(err.message);
                return;
            } else {
                return Promise.reject(err);
            }
        }
    }

    async signSymbolAggregateTransaction(path, transaction, networkGenerationHash, signerPublicKey, transactionHash) {
        return new Promise((resolve, reject) => {
            this.getAppVersion(true).then(checkVersion => {
                if (checkVersion === 1) {
                    this._signSymbolAggregateTransaction(path, transaction, networkGenerationHash, signerPublicKey, transactionHash).then((result) => {
                        resolve(result);
                    }).catch((error) => {
                        reject({ ledgerError: [error, true, false] });
                    });

                } else {
                    reject({ ledgerError: [checkVersion, true, false] });
                }
            }).catch(error => {
                reject({ ledgerError: [error, true, false] });
            });
        });
    }

    async _signSymbolAggregateTransaction(path, cosignatureTransaction, networkGenerationHash, signerPublicKey, transactionHash) {
        try {
            const transport = await TransportNodeHid.open("");
            const symbolH = new SymbolH(transport);
            try {
                const result = await symbolH.signCosignatureTransaction(path, cosignatureTransaction, networkGenerationHash, signerPublicKey, transactionHash);
                return Promise.resolve(result);
            } catch (err) {
                throw err
            } finally {
                transport.close();
            }
        } catch (err) {
            if (err.statusCode != null) {
                return Promise.reject(err.statusCode);
            } else if (err.id != null) {
                return Promise.reject(err.id);
            } else if (err.name == "TransportError") {
                Promise.reject(err.message);
                return;
            } else {
                return Promise.reject(err);
            }
        }
    }

    showAccount(account) {
        alert(this._$filter('translate')('LEDGER_NANO_CHECK_DEVICE'));
        this._Alert.ledgerFollowInstruction();
        return new Promise((resolve, reject) => {
            this.getAccount(account.hdKeypath, account.network, (result) => {
                if (result.success) {
                    resolve(result.address);
                } else {
                    reject(result.error);
                }
            });
        });
    }

    async getAccount(hdKeypath, network, label, isSymbol, display) {
        try {
            const transport = await TransportNodeHid.open("");
            const ledgerH = isSymbol ? new SymbolH(transport) : new NemH(transport);
            try {
                let account;
                if (isSymbol) {
                    account = await ledgerH.getAccount(hdKeypath, network, display);
                } else {
                    const networkType = network < 0 ? 256 + network : network;
                    const result = await ledgerH.getAddress(hdKeypath, networkType);
                    account = {
                        "brain": false,
                        "algo": "ledger",
                        "encrypted": "",
                        "iv": "",
                        "address": result.address,
                        "label": label,
                        "network": network,
                        "child": "",
                        "hdKeypath": hdKeypath,
                        "publicKey": result.publicKey
                    }
                }
                return Promise.resolve(account);
            } catch (err) {
                throw err
            } finally {
                transport.close();
            }
        } catch (err) {
            if (err.statusCode != null) {
                return Promise.reject(err.statusCode);
            } else if (err.id != null) {
                return Promise.reject(err.id);
            } else {
                return Promise.reject(err);
            }
        }
    }

    async getRemoteAccount(hdKeypath) {
        try {
            const transport = await TransportNodeHid.open("");
            const nemH = new NemH(transport);
            try {
                const result = await nemH.getRemoteAccount(hdKeypath)
                return Promise.resolve(
                    {
                        "hdKeypath": hdKeypath,
                        "remoteAccount": result.remoteAccount
                    }
                );
            } catch (err) {
                throw err
            } finally {
                transport.close();
            }
        } catch (err) {
            if (err.statusCode != null) {
                return Promise.reject(err.statusCode);
            } else if (err.id != null) {
                return Promise.reject(err.id);
            } else {
                return Promise.reject(err);
            }
        }
    }

    deriveRemote(account, network) {
        return new Promise((resolve, reject) => {
            this.getAppVersion().then(checkVersion => {
                if (checkVersion == 1) {
                    alert(this._$filter('translate')('LEDGER_NANO_CHECK_DEVICE'));
                    this._$timeout(() => {
                        this._Alert.ledgerFollowInstruction();
                    });

                    this.getRemoteAccount(account.hdKeypath).then((result) => {
                        const privateKey = result.remoteAccount;
                        const keyPair = nem.crypto.keyPair.create(privateKey);
                        const publicKey = keyPair.publicKey.toString();
                        const address = nem.model.address.toAddress(publicKey, network);
                        resolve({
                            address,
                            privateKey,
                            publicKey
                        });
                    }).catch((error) => {
                        this._$timeout(() => {
                            this.alertHandler(error, false, false);
                        });
                        reject('handledLedgerErrorSignal');
                    });
                } else {
                    this._$timeout(() => {
                        this.alertHandler(checkVersion, false, false);
                    });
                    reject('handledLedgerErrorSignal');
                }
            }).catch(error => {
                this._$timeout(() => {
                    this.alertHandler(error, false, false);
                });
                reject('handledLedgerErrorSignal');
            });
        });
    }

    serialize(transaction, account) {
        return new Promise(async (resolve, reject) => {
            this.getAppVersion().then(async checkVersion => {
                if (checkVersion === 1) {
                    alert(this._$filter('translate')('LEDGER_NANO_CHECK_DEVICE'));
                    this._$timeout(() => {
                        this._Alert.ledgerFollowInstruction();
                    });
                    //Transaction with testnet and mainnet
                    //Correct the signer
                    transaction.signer = account.publicKey;
                    //If it is a MosaicDefinition Creation Transaction, then correct the creator
                    if (transaction.type == 0x4001) {
                        transaction.mosaicDefinition.creator = account.publicKey;
                    }

                    //Serialize the transaction
                    let serializedTx = nem.utils.convert.ua2hex(nem.utils.serialization.serializeTransaction(transaction));
                    // If it is a Multisig Signature Transaction, then add more transaction payload to the serialized transaction
                    if (transaction.type == 0x1002) {
                        // If the inner transaction is mosaic creation and there's no levy field in it
                        if (transaction.otherTrans.type == 0x4001 && transaction.otherTrans.mosaicDefinition.levy != null && transaction.otherTrans.mosaicDefinition.levy.type == undefined) {
                            transaction.otherTrans.mosaicDefinition.levy = null;
                        }
                        // If the inner transaction is transfer and there's no message field in it
                        if (transaction.otherTrans.type == 0x0101 && transaction.otherTrans.message.type == undefined) {
                            transaction.otherTrans.message.type = 1;
                            transaction.otherTrans.message.payload = "";
                        }
                        let otherTrans = nem.utils.convert.ua2hex(nem.utils.serialization.serializeTransaction(transaction.otherTrans));
                        let otherTransLength = ("00000000" + (otherTrans.length / 2).toString(16)).substr(-8);
                        let otherTransLengthReverse = otherTransLength.match(/[a-fA-F0-9]{2}/g).reverse().join('');
                        serializedTx = serializedTx + otherTransLengthReverse + otherTrans;
                    }
                    let payload = await this.signTransaction(account, serializedTx);
                    if (payload.signature) {
                        resolve(payload);
                    } else {
                        this._$timeout(() => {
                            this.alertHandler(payload.statusCode, false, true, payload.statusText);
                        });
                        reject(payload);
                    }
                } else {
                    this._$timeout(() => {
                        this.alertHandler(checkVersion, false, true);
                    });
                    reject(true);
                }
            }).catch(error => {
                this._$timeout(() => {
                    this.alertHandler(error, false, true);
                });
                reject(true);
            });
        });
    }

    async signTransaction(account, serializedTx) {
        try {
            const transport = await TransportNodeHid.open("");
            const nemH = new NemH(transport);
            try {
                const sig = await nemH.signTransaction(account.hdKeypath, serializedTx);
                let payload = {
                    data: serializedTx,
                    signature: sig.signature
                }
                return Promise.resolve(payload);
            }
            catch (err) {
                throw err
            } finally {
                transport.close();
            }
        } catch (err) {
            if (err.statusCode != null) {
                return Promise.resolve(err);
            } else if (err.id != null) {
                return Promise.resolve(err.id);
            } else if (err.name == "TransportError") {
                this._Alert.ledgerFailedToSignTransaction(err.message);
                return;
            } else {
                return Promise.resolve(err);
            }
        }
    }

    /**
     * Get Ledger app version
     */
    async getAppVersion(isSymbol) {
        try {
            const transport = await TransportNodeHid.open("");
            const supportVersion = isSymbol ? SYMBOL_SUPPORT_VERSION : NEM_SUPPORT_VERSION;
            const ledgerH = isSymbol ? new SymbolH(transport) : new NemH(transport);
            try {
                const result = await ledgerH.getAppVersion();
                let appVersion = result;
                if (appVersion.majorVersion == null && appVersion.minorVersion == null && appVersion.patchVersion == null) {
                    if (result.statusCode != null) {
                        return Promise.reject(result.statusCode);
                    } else {
                        return Promise.reject(result.id);
                    }
                } else {
                    let statusCode;
                    if (appVersion.majorVersion < supportVersion.LEDGER_MAJOR_VERSION) {
                        statusCode = 2;
                    } else if (appVersion.minorVersion < supportVersion.LEDGER_MINOR_VERSION) {
                        statusCode = 2;
                    } else if (appVersion.patchVersion < supportVersion.LEDGER_PATCH_VERSION) {
                        statusCode = 2;
                    } else {
                        statusCode = 1;
                    }
                    return Promise.resolve(statusCode);
                }
            } catch (err) {
                throw err
            } finally {
                transport.close();
            }
        } catch (err) {
            if (err.statusCode != null) {
                return Promise.reject(err.statusCode);
            } else if (err.id != null) {
                return Promise.reject(err.id);
            } else {
                return Promise.reject(err);
            }
        }
    }

}

// End methods region //

export default Ledger;

'''
'''--- src/app/modules/ledger/optin/BroadcastLedger.js ---
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const symbol_sdk_1 = require("symbol-sdk");
const simpleOptinDTO_1 = require("catapult-optin-module/dist/src/model/simpleOptinDTO");
const namespaceOptinDTO_1 = require("./namespaceOptinDTOLedger");
const vrfOptinDTO_1 = require("./vrfOptinDTOLedger");
const signalOptinDTO_1 = require("catapult-optin-module/dist/src/model/signalOptinDTO");
const convertOptinDTO_1 = require("catapult-optin-module/dist/src/model/convertOptinDTO");
const MultisigCache_1 = require("catapult-optin-module/dist/src/MultisigCache");
const cosigOptinDTO_1 = require("./cosigOptinDTOLedger");

/**
 * Prepares Simple dto
 * @param destination
 */
const buildSimpleDTO = (destination) => __awaiter(void 0, void 0, void 0, function* () {
  return new simpleOptinDTO_1.SimpleOptinDTO(destination.publicKey);
});
exports.buildSimpleDTO = buildSimpleDTO;

/**
 * Prepares Namespace dto
 * @param destination
 * @param namespace
 * @param config
 */
const buildNamespaceDTO = (destination, destinationPath, namespace, config) => __awaiter(void 0, void 0, void 0, function* () {
    return namespaceOptinDTO_1.NamespaceOptinDTOLedger.createLedger(destination, destinationPath, namespace, config.CATNetwork);
});
exports.buildNamespaceDTO = buildNamespaceDTO;

/**
 * Prepares Vrf dto
 * @param destination
 * @param vrfAccount
 * @param config
 */
const buildVrfDTO = (destination, destinationPath, vrfAccount, config) => __awaiter(void 0, void 0, void 0, function* () {
  return vrfOptinDTO_1.VrfOptinDTOLedger.createLedger(destination, destinationPath, vrfAccount, config.CATNetwork);
});

/**
 * Build normal opt in DTOs
 *
 * @param destination
 * @param namespaces
 * @param vrfAccount
 * @param config
 */
const buildNormalOptInDTOsLedger = (destination, destinationPath, namespaces, vrfAccount, config = 0) => __awaiter(void 0, void 0, void 0, function* () {
  const buildDTOs = [];
  buildDTOs.push(buildSimpleDTO(destination.publicAccount));
  for (let namespace of namespaces) {
      buildDTOs.push(yield buildNamespaceDTO(destination, destinationPath, namespace, config));
  }
  if (vrfAccount) {
      buildDTOs.push(yield buildVrfDTO(destination, destinationPath, vrfAccount, config));
  }
  return yield Promise.all(buildDTOs);
});
exports.buildNormalOptInDTOsLedger = buildNormalOptInDTOsLedger;

/**
 * Build Start Multisig Opt in DTOs
 * @param origin
 * @param cosigner
 * @param destination
 * @param namespaces
 * @param config
 */

const buildStartMultisigOptInDTOsLedger = (origin, cosigner, cosignerPath, destination, namespaces, config) => __awaiter(void 0, void 0, void 0, function* () {
  const cache = new MultisigCache_1.MultisigCache(origin, config);
  yield cache.loadFromChain();
  const signalDTO = yield buildSignalDTO(origin, destination.publicAccount);
  cache.signalDTO = signalDTO;
  const namespaceDTOs = [];
  for (let namespace of namespaces) {
      namespaceDTOs.push(yield buildNamespaceDTO(destination, cosignerPath, namespace, config));
  }
  cache.namespaceDTOs = namespaceDTOs;
  const convertDTO = yield buildConvertDTO(origin, destination, config, cache);
  cache.convertDTO = convertDTO;
  const cosignDTO = yield buildCosignDTOLedger(origin, cosigner, cosignerPath, destination.publicAccount, config, cache);
  return [signalDTO, ...namespaceDTOs, convertDTO, cosignDTO];
});
exports.buildStartMultisigOptInDTOsLedger = buildStartMultisigOptInDTOsLedger;

/**
 * Prepares Signal dto
 * @param origin
 * @param destination
 */
const buildSignalDTO = (origin, destination) => __awaiter(void 0, void 0, void 0, function* () {
  return new signalOptinDTO_1.SignalOptinDTO(origin.account.publicKey, destination.publicKey);
});
exports.buildSignalDTO = buildSignalDTO;

/**
 * Prepares Convert dto
 * @param origin
 * @param destination
 * @param config
 * @param cache
 */
const buildConvertDTO = (origin, destination, config, cache) => __awaiter(void 0, void 0, void 0, function* () {
  if (!cache) {
      cache = new MultisigCache_1.MultisigCache(origin, config);
      yield cache.loadFromChain();
  }
  if (!cache.signalDTO) {
      throw new Error('Signal transaction not done yet');
  }
  if (cache.signalDTO.destination !== destination.publicKey) {
      throw new Error('SignalDTO destination is not the same that you are trying to convert');
  }
  const NISCosignerPublicKeys = origin.meta.cosignatories.map(cosignatory => cosignatory.publicKey);
  const cosignersDestinations = cache.cosignersDestinations;
  for (let pubKey of NISCosignerPublicKeys) {
      if (!cosignersDestinations[pubKey]) {
          throw new Error('Some cosignatories are pending to make simple OptIn');
      }
  }
  const cosigners = Object.values(cosignersDestinations)
      .map((pubKey) => symbol_sdk_1.PublicAccount.createFromPublicKey(pubKey, config.CATNetwork));
  const n = origin.account.multisigInfo.minCosignatories;
  const m = origin.account.multisigInfo.cosignatoriesCount;
  let minRemoval;
  if (m === 1) {
      minRemoval = 1;
  }
  else if (n === m || n === 0) {
      minRemoval = m - 1;
  }
  else if (n < m) {
      minRemoval = n;
  }
  else {
      throw new Error('Invalid minApproval/totalCosignatories values');
  }
  return convertOptinDTO_1.ConvertOptinDTO.create(destination, cosigners, n, minRemoval, config.CATNetwork);
});
exports.buildConvertDTO = buildConvertDTO;

/**
 * Prepares Cosign dto
 * @param origin
 * @param cosigner
 * @param destination
 * @param config
 * @param cache
 */
const buildCosignDTOLedger = (origin, cosigner, cosignerPath, destination, config, cache) => __awaiter(void 0, void 0, void 0, function* () {
  if (!cache) {
      cache = new MultisigCache_1.MultisigCache(origin, config);
      yield cache.loadFromChain();
  }
  if (!cache.signalDTO) {
      throw new Error('Signal transaction not done yet');
  }
  if (cache.signalDTO.destination !== destination.publicKey) {
      throw new Error('SignalDTO destination is not the same that you are trying to cosign');
  }
  if (!cache.convertDTO) {
      throw new Error('No Convert DTO found');
  }
  return cosigOptinDTO_1.CosigOptinDTOLedger.createLedger(cosigner, cosignerPath, cache.convertDTO, destination, config.CATNetwork);
});
exports.buildCosignDTOLedger = buildCosignDTOLedger;

'''
'''--- src/app/modules/ledger/optin/OptInDTO.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var OptInDTOType;
(function (OptInDTOType) {
    OptInDTOType[OptInDTOType["SIMPLE_DTO_TYPE"] = 1] = "SIMPLE_DTO_TYPE";
    OptInDTOType[OptInDTOType["SIGNAL_DTO_TYPE"] = 2] = "SIGNAL_DTO_TYPE";
    OptInDTOType[OptInDTOType["CONVERT_DTO_TYPE"] = 3] = "CONVERT_DTO_TYPE";
    OptInDTOType[OptInDTOType["COSIGN_DTO_TYPE"] = 4] = "COSIGN_DTO_TYPE";
    OptInDTOType[OptInDTOType["NAMESPACE_DTO_TYPE"] = 5] = "NAMESPACE_DTO_TYPE";
    OptInDTOType[OptInDTOType["VRF_DTO_TYPE"] = 6] = "VRF_DTO_TYPE";
})(OptInDTOType = exports.OptInDTOType || (exports.OptInDTOType = {}));
class OptInDTO {
    constructor(type) {
        this.type = type;
    }
    toMessage() {
        return JSON.stringify(this);
    }
}
exports.OptInDTO = OptInDTO;

'''
'''--- src/app/modules/ledger/optin/cosigOptinDTOLedger.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const nem_sdk_1 = require("nem-sdk");
const symbol_sdk_1 = require("symbol-sdk");
const constants_1 = require("catapult-optin-module/dist/src/constants");
const OptInDTO_1 = require("./OptInDTO");
import { CosigOptinDTO } from 'catapult-optin-module/dist/src/model/cosigOptinDTO';
import LedgerService from '../ledger.service';

class CosigOptinDTOLedger extends OptInDTO_1.OptInDTO {
    constructor(multisig, signature) {
        super(OptInDTO_1.OptInDTOType.COSIGN_DTO_TYPE);
        if (symbol_sdk_1.PublicAccount.createFromPublicKey(multisig, symbol_sdk_1.NetworkType.MAIN_NET) == null)
            throw new Error('Invalid multisig public key');
        this.multisig = multisig;
        this.signature = signature;
    }
    /**
     * Create NamespaceOptinDTO from transaction
     * @param transaction
     */
    static createFromTransaction(transaction) {
        try {
            const message = nem_sdk_1.default.utils.format.hexMessage(transaction.transaction.message);
            const dto = JSON.parse(message);
            if (dto.hasOwnProperty('type') && dto.type === OptInDTO_1.OptInDTOType.COSIGN_DTO_TYPE &&
                dto.hasOwnProperty('multisig') &&
                dto.hasOwnProperty('signature')) {
                return new CosigOptinDTOLedger(dto.multisig, dto.signature);
            }
            else
                return null;
        }
        catch (e) {
            return null;
        }
    }
}
exports.CosigOptinDTOLedger = CosigOptinDTOLedger;
/**
 * Sign Convert Optin Transaction
 *
 * @param cosigner
 * @param convertDTO
 * @param multisigDestination
 */
CosigOptinDTOLedger.createLedger = async (cosigner, cosignerAccountPath, convertDTO, multisigDestination, network) => {
    const transaction = symbol_sdk_1.TransactionMapping.createFromPayload(convertDTO.p);
    if (transaction instanceof symbol_sdk_1.AggregateTransaction) {
        const cosignatureTransaction = symbol_sdk_1.CosignatureTransaction.create(transaction);
        let signature;
        const ledgerService = new LedgerService();
        if (cosigner.privateKey === undefined) {
            const result = await ledgerService.signSymbolAggregateTransaction(cosignerAccountPath, cosignatureTransaction.transactionToCosign, constants_1.OptinConstants[network].CATAPULT_GENERATION_HASH, cosigner.publicKey, convertDTO.h);
            signature = result.signature;
        } else {
            signature = cosignatureTransaction.signWith(cosigner, convertDTO.h).signature;
        }
        return new CosigOptinDTOLedger(multisigDestination.publicKey, signature);
    }
    else {
        throw Error('Wrong transaction payload');
    }
};

'''
'''--- src/app/modules/ledger/optin/namespaceOptinDTOLedger.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const symbol_sdk_1 = require("symbol-sdk");
const nem_sdk_1 = require("nem-sdk");
const constants_1 = require("catapult-optin-module/dist/src/constants");
const OptInDTO_1 = require("./OptInDTO");
import LedgerService from '../ledger.service';

class NamespaceOptinDTO extends OptInDTO_1.OptInDTO {
    constructor(destination, payload, hash) {
        super(OptInDTO_1.OptInDTOType.NAMESPACE_DTO_TYPE);
        if (symbol_sdk_1.PublicAccount.createFromPublicKey(destination, symbol_sdk_1.NetworkType.MAIN_NET) == null)
            throw new Error('Invalid destination public key');
        this.destination = destination;
        const namespaceTx = symbol_sdk_1.TransactionMapping.createFromPayload(payload);
        if (!(namespaceTx instanceof symbol_sdk_1.NamespaceRegistrationTransaction))
            throw new Error('Invalid payload');
        this.payload = payload;
        this.hash = hash;
    }
    /**
     * Create NamespaceOptinDTO from transaction
     * @param transaction
     */
    static createFromTransaction(transaction) {
        try {
            const message = nem_sdk_1.default.utils.format.hexMessage(transaction.transaction.message);
            const dto = JSON.parse(message);
            if (dto.hasOwnProperty('type') && dto.type === OptInDTO_1.OptInDTOType.NAMESPACE_DTO_TYPE &&
                dto.hasOwnProperty('destination') &&
                dto.hasOwnProperty('payload') &&
                dto.hasOwnProperty('hash')) {
                return new NamespaceOptinDTO(dto.destination, dto.payload, dto.hash);
            }
            else
                return null;
        }
        catch (e) {
            return null;
        }
    }
}
exports.NamespaceOptinDTOLedger = NamespaceOptinDTO;
/**
 *
 * @param destination
 * @param namespace
 * @param network
 */
NamespaceOptinDTO.createLedger = async (destination, destinationPath, namespace, network) => {
    let signedTransaction;
    const isLedger = destination.privateKey === undefined;
    const registerNamespaceTransaction = symbol_sdk_1.NamespaceRegistrationTransaction.createRootNamespace(symbol_sdk_1.Deadline['createFromDTO']('1'), namespace, symbol_sdk_1.UInt64.fromUint(2102400), network);
    if (isLedger) {
        const ledgerService = new LedgerService();
        signedTransaction = await ledgerService.signSymbolTransaction(destinationPath, registerNamespaceTransaction, constants_1.OptinConstants[network].CATAPULT_GENERATION_HASH, destination.publicAccount.publicKey);
    } else {
        signedTransaction = destination.sign(registerNamespaceTransaction, constants_1.OptinConstants[network].CATAPULT_GENERATION_HASH);
    }
    return new NamespaceOptinDTO(isLedger ? destination.publicAccount.publicKey : destination.publicKey, signedTransaction.payload, signedTransaction.hash);
};

'''
'''--- src/app/modules/ledger/optin/vrfOptinDTOLedger.js ---
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const symbol_sdk_1 = require("symbol-sdk");
const nem_sdk_1 = require("nem-sdk");
const constants_1 = require("../../../../../node_modules/catapult-optin-module/dist/src/constants");
const OptInDTO_1 = require("./OptInDTO");
import LedgerService from '../ledger.service';

class VrfOptinDTOLedger extends OptInDTO_1.OptInDTO {
    constructor(destination, payload, hash) {
        super(OptInDTO_1.OptInDTOType.VRF_DTO_TYPE);
        if (symbol_sdk_1.PublicAccount.createFromPublicKey(destination, symbol_sdk_1.NetworkType.MAIN_NET) == null)
            throw new Error('Invalid destination public key');
        this.destination = destination;
        const vrfTx = symbol_sdk_1.TransactionMapping.createFromPayload(payload);
        if (!(vrfTx instanceof symbol_sdk_1.VrfKeyLinkTransaction))
            throw new Error('Invalid payload');
        this.payload = payload;
        this.hash = hash;
    }
    /**
     * Create NamespaceOptinDTO from transaction
     * @param transaction
     */
    static createFromTransaction(transaction) {
        try {
            const message = nem_sdk_1.default.utils.format.hexMessage(transaction.transaction.message);
            const dto = JSON.parse(message);
            if (dto.hasOwnProperty('type') && dto.type === OptInDTO_1.OptInDTOType.VRF_DTO_TYPE &&
                dto.hasOwnProperty('destination') &&
                dto.hasOwnProperty('payload') &&
                dto.hasOwnProperty('hash')) {
                return new VrfOptinDTOLedger(dto.destination, dto.payload, dto.hash);
            }
            else
                return null;
        }
        catch (e) {
            return null;
        }
    }
}
exports.VrfOptinDTOLedger = VrfOptinDTOLedger;
/**
 *
 * @param destinationAccount
 * @param vrfAccount
 * @param network
 */
VrfOptinDTOLedger.createLedger = async (destinationAccount, destinationAccountPath, vrfAccount, network) => {
    let signedTransaction;
    const isLedger = destinationAccount.privateKey === undefined;
    const vrfKeyLinkTransaction = symbol_sdk_1.VrfKeyLinkTransaction.create(symbol_sdk_1.Deadline['createFromDTO']('1'), isLedger ? vrfAccount.publicAccount.publicKey : vrfAccount.publicKey, symbol_sdk_1.LinkAction.Link, network);
    if (isLedger) {
        const ledgerService = new LedgerService();
        signedTransaction = await ledgerService.signSymbolTransaction(destinationAccountPath, vrfKeyLinkTransaction, constants_1.OptinConstants[network].CATAPULT_GENERATION_HASH, vrfAccount.publicAccount.publicKey);
    } else {
        signedTransaction = destinationAccount.sign(vrfKeyLinkTransaction, constants_1.OptinConstants[network].CATAPULT_GENERATION_HASH);
    }
    return new VrfOptinDTOLedger(isLedger ? destinationAccount.publicAccount.publicKey : destinationAccount.publicKey, signedTransaction.payload, signedTransaction.hash);
};

'''
'''--- src/app/modules/login/index.js ---
import angular from 'angular';

// Create the module where our functionality can attach to
let loginModule = angular.module('app.login', []);

// Include our UI-Router config settings
import loginConfig from './login.config';
loginModule.config(loginConfig);

// Controllers
import LoginCtrl from './login.controller';
loginModule.controller('LoginCtrl', LoginCtrl);

export default loginModule;

'''
'''--- src/app/modules/login/login.config.js ---
function LoginConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.login', {
            url: '/login',
            controller: 'LoginCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/login/login.html',
            title: 'Login'
        });

};

export default LoginConfig;
'''
'''--- src/app/modules/login/login.controller.js ---
import nem from 'nem-sdk';

class LoginCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor($localStorage, Wallet, Login, $timeout) {
        'ngInject';

        //// Module dependencies region ////

        this._storage = $localStorage;
        this._Wallet = Wallet;
        this._Login = Login;
        this._$timeout = $timeout;

        //// End dependencies region ////

        //// Module properties region ////

        // Selected wallet
        this.selectedWallet = undefined;

        // Get wallets from local storage or set an empty array
        this._storage.wallets = this._storage.wallets || [];

        // Common object to contain our password & private key data.
        this.common = nem.model.objects.get("common");

        //// End properties region ////

        // Hide trezor & ledger button if using chrome builds
        if (typeof nw !== 'undefined') {
            this.hideTrezor = true;
            this.hideLedger = true;
        }

        // Hide ledger button if not running on Electron environment
        if (!window['isElectronEnvironment']) {
            this.hideLedger = true;
        }
    }

    //// Module methods region ////

    /**
     * Load a wallet in browser local storage
     *
     * @param {string} data - Base 64 string from .wlt file
     * @param {boolean} isNCC - True if NCC wallet, false otherwise
     */
    loadWallet(data, isNCC) {
        this._Wallet.load(data, isNCC);
        return;
    }

    /**
     * Log into the application if no need to upgrade
     *
     * @param {object} wallet - A wallet object
     */
    login(wallet) {
        // Check if wallet needs upgrade
        if (this._Wallet.needsUpgrade(wallet)) {
            this.needsUpgrade = true;
            return;
        }

        if (this._Login.login(this.common, wallet)) {
            // Clean common object
            this.common = nem.model.objects.get("common");
        }
    }

    /**
     * Derive a child account using bip32 for each accounts of the selected wallet
     */
    upgradeWallet() {
        // Lock button
        this.okPressed = true;
        // Upgrade
        return this._Wallet.upgrade(this.common, this.selectedWallet).then(()=> {
            this._$timeout(() => {
                // Unlock button
                this.okPressed = false;
                // Clean common object
                this.common = nem.model.objects.get("common");
                // Prepare wallet download link
                this._Wallet.prepareDownload(this.selectedWallet);
                // Store base64 format for safety protocol
                this.rawWallet = this._Wallet.base64Encode(this.selectedWallet);
                //
                this.needsUpgrade = false;
                this.showSafetyMeasure = true;
            });
        }, 
        (err) => {
            this._$timeout(() => {
                // Unlock button
                this.okPressed = false;
                // Clean common object
                this.common = nem.model.objects.get("common");
            });
        })
    }

    //// End methods region ////

}

export default LoginCtrl;
'''
'''--- src/app/modules/login/login.html ---
<div class="login-page">
  <div class="container">
    <div class="row text-center">
      <div class="col-md-12">
        <h1>{{ 'LOGIN_MEMBER_TITLE' | translate }}</h1>
      </div>
    </div>

    <div ng-show="!$ctrl.needsUpgrade && !$ctrl.showSafetyMeasure">
      <div class="row">
        <div class="col-md-6 col-md-offset-3">
          <div class="form-group">
            <div class="input-group">
              <span class="input-group-btn">
                <p class="control-label">{{ 'LOGIN_SELECT_WALLET_YOURS' | translate }}: </p>
              </span>
              <select class="form-control" ng-model="$ctrl.selectedWallet" ng-options="wallet.name group by (wallet.accounts[0].network | toNetworkName) for wallet in $ctrl._storage.wallets">
                <option value="" disabled selected>{{ 'LOGIN_SELECT_WALLET' | translate }}</option>
              </select>
            </div>
          </div>

          <div class="form-group">
            <div class="input-group">
              <span class="input-group-btn">
                <p>{{ 'FORM_PASSWORD' | translate }}: </p>
              </span>
              <input class="form-control" type="password" ng-model="$ctrl.common.password" placeholder="{{ 'FORM_PASSWORD_FIELD_PLACEHOLDER' | translate }}"/>
            </div>
          </div>
        </div>
      </div>

      <div class="row loginButtons">
        <div class="col-md-3 col-md-offset-3 col-sm-6">
          <button class="btn btn-lg btn-success btn-block"
                type="submit" ng-click="$ctrl.login($ctrl.selectedWallet)" ng-disabled="!$ctrl.selectedWallet || !$ctrl.common.password.length">
                {{ 'LOGIN_LOGIN_BUTTON' | translate }}
          </button>
        </div>
        <div class="col-md-3 col-sm-6">
          <div class="form-group">
            <div type="button" class="fileUpload btn btn-lg btn-block btn-import">
              <span>{{ 'LOGIN_IMPORT_BUTTON' | translate }}</span>
              <input type="file" class="upload" multiple='multiple' read-wallet-files="$ctrl.loadWallet($fileContent, $isNCC)" />
            </div>
          </div>
        </div>
      </div>

      <div class="row loginButtons" ng-show="!$ctrl.hideTrezor">
        <div class="col-md-4 col-md-offset-4 col-sm-6">
          <button class="btn btn-lg btn-success btn-block" ui-sref="app.trezor">
                {{ 'TREZOR_BUTTON' | translate }}
          </button>
        </div>
      </div>

      <div class="row loginButtons ledger" ng-show="!$ctrl.hideLedger">
        <div class="col-md-4 col-md-offset-4 col-sm-6">
          <button class="btn btn-lg btn-success btn-block" ui-sref="app.ledger">
                {{ 'LEDGER_NANO_BUTTON' | translate }}
          </button>
        </div>
      </div>
    </div>

    <div ng-show="$ctrl.needsUpgrade">
      <div class="row">
        <div class="col-md-6 col-md-offset-3">
          <div class="form-group text-center">
            <h4>{{ 'LOGIN_UPGRADE_TITLE' | translate }}</h4>
            <hr>
          </div>
          <div class="form-group" ng-show="$ctrl.needsUpgrade">
            <p><i class="fa fa-exclamation-triangle"></i> <span ng-bind-html="'LOGIN_UPGRADE_MESSAGE' | translate"></span></p>
            <hr>
          </div>
          <div class="form-group">
            <div class="input-group">
              <span class="input-group-btn">
                <p>{{ 'FORM_PASSWORD' | translate }}: </p>
              </span>
              <input class="form-control" type="password" ng-model="$ctrl.common.password" placeholder="{{ 'FORM_PASSWORD_FIELD_PLACEHOLDER' | translate }}"/>
            </div>
          </div>
          <div class="row form-group">
            <div class="col-md-2 col-sm-6">
            <button class="btn btn-dark" style="width: auto;"
              type="submit" ng-click="$ctrl.needsUpgrade = false;">
              <span class="fa fa-chevron-left" aria-hidden="true"></span> {{ 'GENERAL_GO_BACK' | translate }}
              </button>
            </div>
            <div class="col-md-10 col-sm-6">
              <button class="btn btn-success"
              type="submit" ng-disabled="$ctrl.okPressed || !$ctrl.common.password.length" ng-click="$ctrl.upgradeWallet()">
              {{ 'LOGIN_UPGRADE_BUTTON' | translate }}
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div ng-show="$ctrl.showSafetyMeasure">
      <div class="row">
        <div class="col-md-6 col-md-offset-3">
          <div class="form-group text-center">
            <h4>{{ 'SIGNUP_COMMON_WALLET_WARNING_TITLE' | translate }}</h4>
            <hr>
          </div>
          <div class="form-group">
            <p><span ng-bind-html="'SIGNUP_COMMON_WALLET_WARNING_2' | translate"></span></p>
            <div class="form-group">
              <a class="btn btn-dark" style="width: 100%;" id="downloadWallet"><span class="fa fa-download" aria-hidden="true"></span> {{ 'SIGNUP_COMMON_WALLET_WARNING_DOWNLOAD' | translate }}</a>
            </div>
            <p><span ng-bind-html="'SIGNUP_COMMON_WALLET_WARNING_3' | translate"></span></p>
            <div class="form-group">
              <button type="button" class="btn btn-dark" style="width:100%;" ng-click="!$ctrl.showRawWallet ? $ctrl.showRawWallet = true : $ctrl.showRawWallet = false"><span class="fa fa-file-text" aria-hidden="true"></span> {{ 'SIGNUP_COMMON_WALLET_WARNING_BTN_1' | translate }}</button>
            </div>
            <div ng-show="$ctrl.showRawWallet">
              <pre style="color: white;background-color: #444;font-weight: bold;"><code>{{ $ctrl.rawWallet }}</code></pre>
              <p><i class="fa fa-info-circle"></i> <span ng-bind-html="'SIGNUP_COMMON_WALLET_WARNING_BTN_1_INFO' | translate"></span></p>
           </div>
            <div class="form-group">
              <hr style="border-color:#444;">
              <button class="btn btn-primary" style="width:100%;" ng-click="$ctrl.showSafetyMeasure = false;">{{ 'SIGNUP_COMMON_WALLET_WARNING_CONFIRM_1' | translate }}</button>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="col-md-6 col-md-offset-3" ng-show="!$ctrl.needsUpgrade && !$ctrl.showSafetyMeasure">
      <hr>
      <p class="text-center"><span ng-bind-html="'LOGIN_NOTE' | translate"></span></p>
    </div>
  </div>
</div>
'''
'''--- src/app/modules/mosaics/create/createMosaic.config.js ---
function CreateMosaicConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.createMosaic', {
            url: '/create-mosaic',
            controller: 'CreateMosaicCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/mosaics/create/createMosaic.html',
            title: 'Create a mosaic'
        });

};

export default CreateMosaicConfig;
'''
'''--- src/app/modules/mosaics/create/createMosaic.controller.js ---
import nem from 'nem-sdk';

class createMosaicCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Wallet, Alert, DataStore, $filter, $timeout) {
        'ngInject';

        //// Module dependencies region ////

        this._Alert = Alert;
        this._Wallet = Wallet;
        this._DataStore = DataStore;
        this._$filter = $filter;
        this._$timeout = $timeout;

        //// End dependencies region ////

        // Initialization
        this.init();
    }

    //// Module methods region ////

    /**
     * Initialize module properties
     */
    init() {
        // Form is a namespace provision transaction object 
        this.formData = nem.model.objects.get("mosaicDefinitionTransaction");
        // Sink account for view
        this.formData.mosaicFeeSink = nem.model.sinks.mosaic[this._Wallet.network];
        // Current address as default levy recipient
        this.formData.levy.address = this._Wallet.currentAccount.address;
        // Set first multisig account if any
        this.formData.multisigAccount = this._DataStore.account.metaData.meta.cosignatoryOf.length == 0 ? '' : this._DataStore.account.metaData.meta.cosignatoryOf[0];
        // Has no levy by default
        this.hasLevy = false;
        // Mosaics owned names for current account
        this.currentAccountMosaicNames = '';
        // Selected mosaic from view
        this.selectedMosaic = '';
        // Prevent user to click twice on send when already processing
        this.okPressed = false;
        // Character counter
        this.charsLeft = 512;
        // Object to contain our password & private key data.
        this.common = nem.model.objects.get("common");
        // Default namespaces owned
        this.namespaceOwned = this._DataStore.namespace.ownedBy[this._Wallet.currentAccount.address];
        // Default mosaics owned
        this.mosaicOwned = this._DataStore.mosaic.ownedBy[this._Wallet.currentAccount.address];
        // Store the prepared transaction
        this.preparedTransaction = {};
        // Init mosaics and namespaces for current account
        this.updateCurrentAccountNSM();
        // Update the fee in view
        this.prepareTransaction();
    }

    /**
     * Set name to lowercase and check it
     */
    processMosaicName(){
        // Lowercase mosaic name
        this.formData.mosaicName = this._$filter('lowercase')(this.formData.mosaicName);
        // Check mosaic name validity
        if(!this.mosaicIsValid(this.formData.mosaicName)) {
            this._Alert.invalidMosaicName();
            return;
        }
        this.prepareTransaction();
    }

    /**
     * Calculate characters left and check length of description
     */
    processMosaicDescription() {
        let raw = nem.utils.convert.utf8ToHex(this.formData.mosaicDescription);
        this.charsLeft = raw.length ? 512 - (raw.length / 2) : 512;
        if (!this.mosaicDescriptionIsValid(this.formData.mosaicDescription)) return this._Alert.invalidMosaicDescription();
        this.prepareTransaction();
    }

    /**
     * Prevent supply above limit
     */
    validateSupply() {
        if(this.formData.properties.initialSupply > 9000000000) {
            this.formData.properties.initialSupply = 9000000000;
            this._Alert.maxMosaicSupply();
        }
    }

    /**
     * Update levy mosaic data
     *
     * @note: Used in view (ng-update) on hasLevy and selectedMosaic changes
     *
     * @param {boolean} val - true or false
     */
    updateLevyMosaic(val) {
        if (val) {
            this.formData.levy.mosaic = this.mosaicOwned[this.selectedMosaic].mosaicId;
        } else {
            this.formData.levy.mosaic = null;
        }
    }

    /**
     * Get current account namespaces & mosaic names
     *
     * @note: Used in view (ng-update) on multisig changes
     */
    updateCurrentAccountNSM() {
        // Get current account
        let acct = this.formData.isMultisig ? this.formData.multisigAccount.address : this._Wallet.currentAccount.address;

        // Set current account mosaics names if mosaicOwned is not undefined
        if (undefined !== this._DataStore.mosaic.ownedBy[acct]) {
            this.currentAccountMosaicNames = Object.keys(this._DataStore.mosaic.ownedBy[acct]).sort();
            this.mosaicOwned = this._DataStore.mosaic.ownedBy[acct];
        } else {
            // 'nem:xem' is default
            this.currentAccountMosaicNames = ['nem:xem'];
            this.mosaicOwned = {};
        }
        
        // Default mosaic selected
        this.selectedMosaic = "nem:xem";

        // Set current account mosaics names if namespaceOwned is not undefined
        if (undefined !== this._DataStore.namespace.ownedBy[acct]) {
            this.namespaceOwned = this._DataStore.namespace.ownedBy[acct];
            this.formData.namespaceParent = this.namespaceOwned[Object.keys(this.namespaceOwned)[0]];
        } else {
            this._Alert.noNamespaceOwned();
            this.formData.namespaceParent = '';
        }
        this.prepareTransaction();
    }

     /**
     * Check validity of mosaic name
     */
    mosaicIsValid(m) {
        // Test if correct length and if name starts with hyphens
        if (m.length > 32 || /^([_-])/.test(m)) return false;

        let pattern = /^[a-z0-9\-_]*$/;

        // Test if has special chars or space excluding hyphens
        if (pattern.test(m) == false) {
            return false;
          } else {
            return true;
          }
    }

    /**
     * Check validity of mosaic description
     */
    mosaicDescriptionIsValid(m) {
        let raw = nem.utils.convert.utf8ToHex(m);
        if (raw.length > 1024) return false;
        return true;
    }

    /**
     * Prepare the transaction
     */
    prepareTransaction() {
        let entity = nem.model.transactions.prepare("mosaicDefinitionTransaction")(this.common, this.formData, this._Wallet.network);
        // Store the prepared transaction
        this.preparedTransaction = entity;
        return entity;
    }

    /**
     * Prepare and broadcast the transaction to the network
     */
    send() {
        // Disable send button;
        this.okPressed = true;

        // Get account private key for preparation or return
        if (!this._Wallet.decrypt(this.common)) return this.okPressed = false;

        // Build the entity to serialize
        let entity = this.prepareTransaction();

        // Use wallet service to serialize and send
        this._Wallet.transact(this.common, entity).then(() => {
            this._$timeout(() => {
                // Enable send button
                this.okPressed = false;
                // Reset all
                this.init();
                return;
            });
        }, () => {
            this._$timeout(() => {
                // Delete private key in common
                this.common.privateKey = '';
                // Enable send button
                this.okPressed = false;
                return;
            });
        });
    }

    //// End methods region ////

}

export default createMosaicCtrl;

'''
'''--- src/app/modules/mosaics/create/createMosaic.html ---
<div class="create-mosaic-page">
  <div class="container-fluid main">

    <div class="row">
      <div class="col-sm-8">
        <h2>{{ 'MOSAIC_DEFINITION_TITLE' | translate }}</h2>
      </div>
      <div class="col-sm-4 helper">
        <h5 data-toggle="modal" data-target="#mosaicHelp"><i class="fa fa-question-circle"></i> <b>{{ 'MOSAIC_DEFINITION_INFORMATION' | translate }}</b></h5>
      </div>
    </div>

    <div class="row">
      <div class="col-lg-7 col-md-12">

        <div class="panel-heading">
          <div class="tabDescription">
            <span ng-show="!$ctrl.formData.isMultisig">{{ 'MOSAIC_DEFINITION_NAME' | translate }}</span>
            <span ng-show="$ctrl.formData.isMultisig">{{ 'MOSAIC_DEFINITION_MULTISIG_NAME' | translate }}</span>
          </div>
          <ul class="nav nav-tabs">
            <li ng-class="$ctrl.formData.isMultisig ? '' : 'active'"><a ng-click="$ctrl.formData.isMultisig = false;$ctrl.updateCurrentAccountNSM();">{{ 'GENERAL_TAB_NORMAL' | translate }}</a></li>
            <li ng-show="$ctrl._DataStore.account.metaData.meta.cosignatoryOf.length" ng-class="$ctrl.formData.isMultisig ? 'active' : ''"><a ng-click="$ctrl.formData.isMultisig = true;$ctrl.updateCurrentAccountNSM();">{{ 'GENERAL_TAB_MULTISIG' | translate }}</a></li>
          </ul>
        </div>

        <div class="panel-body">

          <!-- Multisig select -->
          <multisig-select ng-show="$ctrl.formData.isMultisig" multisig-account="$ctrl.formData.multisigAccount" update-ctrl="$ctrl.updateCurrentAccountNSM();"></multisig-select>

            <!-- Parent namespace selection -->
            <div class="form-group">
              <div class="input-group">
                <span class="input-group-btn">
                  <label for="namespaceParent" class="control-label">{{ 'MOSAIC_DEFINITION_PARENT' | translate }}:</label>
                </span>
                <select class="form-control" ng-options="namespace.fqn for namespace in $ctrl.namespaceOwned track by namespace.fqn" ng-model="$ctrl.formData.namespaceParent">
                </select>
              </div>
            </div>

            <!-- Mosaic name -->
            <fieldset class="form-group">
              <div class="input-group">
                <span class="input-group-btn">
                  <label for="namespaceParent" class="control-label">{{ 'FORM_MOSAIC_NAME_PLACEHOLDER' | translate }}:</label>
                </span>
                <input autofocus="autofocus" type="text" class="form-control" ng-model="$ctrl.formData.mosaicName" placeholder="{{ 'GENERAL_MOSAIC' | translate }}" maxlength="32" ng-change="$ctrl.processMosaicName();">
              </div>
            </fieldset>

            <!-- Mosaic description -->
            <fieldset class="form-group">
              <div class="input-group">
                <span class="input-group-btn message">
                  <label>{{'MOSAIC_DEFINITION_DESCRPITION' | translate}}:</label>
                </span>
                <textarea class="form-control" style="white-space: pre-wrap;" ng-model="$ctrl.formData.mosaicDescription" rows="5" placeholder="{{ 'MOSAIC_DEFINITION_DESCRPITION' | translate }}" maxlength="512" ng-change="$ctrl.processMosaicDescription();" ng-class="!$ctrl.mosaicDescriptionIsValid($ctrl.formData.mosaicDescription) ? 'has-error' : ''"></textarea>
                <p style="text-align:right;border-bottom:1px solid rgba(15, 122, 225, 0.6);background-color: #eee;"><span style="margin-right: 5px;"><b>{{ 'GENERAL_CHARACTERS_LEFT' | translate }}</b>: {{ $ctrl.charsLeft }}</span></p>
              </div>
            </fieldset>

            <!-- Mosaic sink address -->
            <fieldset class="form-group">
              <div class="input-group">
                <span class="input-group-btn">
                  <label>{{ 'GENERAL_SINK_ADDRESS' | translate }}: </label>
                </span>
                <input type="text" class="form-control" ng-model="$ctrl.formData.mosaicFeeSink" readOnly>
              </div>
            </fieldset>

            <!-- Transaction and rental fee -->
            <div class="row" class="dualFees">
              <div class="col-sm-6">
                <!-- Transaction fee -->
                <fee-input tx="$ctrl.preparedTransaction" is-multisig="$ctrl.formData.isMultisig"></fee-input>
              </div>
              <!-- Rental fee -->
              <div class="col-sm-6">
                <fieldset class="form-group">
                  <div class="input-group">
                    <span class="input-group-btn short">
                      <label>{{ 'FORM_SIDE_BTN_RENTAL_FEE' | translate }}: </label>
                    </span>
                    <div class="form-control formFloat" readOnly>
                      <span class="feeAmount">
                        <span ng-show="$ctrl.formData.isMultisig">{{($ctrl.preparedTransaction.otherTrans.creationFee | fmtNemValue)[0]}}.{{($ctrl.preparedTransaction.otherTrans.creationFee | fmtNemValue)[1]}}</span>
                        <span ng-show="!$ctrl.formData.isMultisig">{{($ctrl.preparedTransaction.creationFee | fmtNemValue)[0]}}.{{($ctrl.preparedTransaction.creationFee | fmtNemValue)[1]}}</span>
                      </span>
                      <label class="floatRight"><small>XEM</small></label>
                    </div>
                  </div>
                </fieldset>
              </div>
            </div>
            
            <!-- Password Field -->
            <password-input common="$ctrl.common"></password-input>

            <!-- Send transaction -->
            <button class="btn btn-success pull-xs-right" type="submit" ng-disabled="$ctrl.okPressed || $ctrl._Wallet.algo !== 'trezor' && $ctrl._Wallet.algo !== 'ledger' && !$ctrl.common.password.length || !$ctrl.formData.namespaceParent || !$ctrl.formData.mosaicName || !$ctrl.formData.mosaicDescription || $ctrl.hasLevy && !$ctrl.formData.levy.address || !$ctrl.formData.properties.initialSupply || $ctrl.hasLevy && !$ctrl.formData.levy.fee || $ctrl.formData.properties.divisibility == undefined || !$ctrl.mosaicIsValid($ctrl.formData.mosaicName) || !$ctrl.mosaicDescriptionIsValid($ctrl.formData.mosaicDescription)" ng-click="$ctrl.send()">
              <i class="fa fa-send"></i> {{ 'GENERAL_SEND' | translate }}
            </button>
        </div>
      </div>

      <div class="col-lg-5 col-md-6 col-sm-12">

        <div class="panel-heading">
          <h3>{{ 'MOSAIC_DEFINITION_MOSAIC_PROPERTIES' | translate }}</h3>
        </div>
        <div class="panel-body">
          <div class="row">
            <!-- Set mosaic supply -->
            <div class="col-md-8 inner">
              <div class="col-md-12">
                <fieldset class="form-group">
                  <div class="input-group">
                    <span class="input-group-btn">
                      <label style="cursor:default;opacity:1;">{{ 'MOSAIC_DEFINITION_INITIAL_SUPPLY' | translate }}:</label>
                    </span>
                    <input type="number" class="form-control" ng-model="$ctrl.formData.properties.initialSupply" placeholder="" min="0" ng-change="$ctrl.validateSupply();">
                  </div>
                </fieldset>
              </div>
              <!-- Set divisibility -->
              <div class="col-md-12">
                 <fieldset class="form-group">
                   <div class="input-group">
                     <span class="input-group-btn">
                       <label>{{ 'MOSAIC_DEFINITION_DIV' | translate }}:</label>
                     </span>
                     <input type="number" class="form-control short" ng-model="$ctrl.formData.properties.divisibility" placeholder="" min="0" max="6">
                   </div>
                 </fieldset>
              </div>
            </div>
            <div class="col-md-4">
              <!-- Option checkboxes -->
              <fieldset class="form-group row mosaicCheckboxes">
                <input id="box3" type="checkbox" ng-model="$ctrl.formData.properties.transferable">
                <label for="box3" class="col-md-12 control-label">{{ 'MOSAIC_DEFINITION_TRANSFERABLE' | translate }}</label>
                <input id="box4" type="checkbox" ng-model="$ctrl.formData.properties.supplyMutable">
                <label for="box4" class="col-md-12 control-label">{{ 'MOSAIC_DEFINITION_MUTABLE_SUPPLY' | translate }}</label>
                <input id="box5" type="checkbox" ng-model="$ctrl.hasLevy" ng-change="$ctrl.updateLevyMosaic($ctrl.hasLevy)">
                <label for="box5" class="col-md-12 control-label">{{ 'MOSAIC_DEFINITION_REQUIRES_LEVY' | translate }}</label>
              </fieldset>
            </div>
          </div>
          <div class="row">
            <!-- Total supply -->
            <div class="col-md-12">
              <fieldset class="form-group">
                <div class="input-group">
                  <span class="input-group-btn">
                    <label>{{ 'MOSAIC_DEFINITION_TOTAL_SUPPLY' | translate }}: </label>
                  </span>
                  <span class="form-control" readOnly>
                    <span>{{($ctrl.formData.properties.initialSupply)}}</span>
                    <span class="text-muted" ng-show="$ctrl.formData.properties.divisibility > 0">.{{(0 | fmtSupplyRaw:$ctrl.formData.properties.divisibility)[1]}}</span>
                  </span>
                </div>
              </fieldset>
            </div>
            <!-- Namespace and mosaic final name -->
            <div class="col-md-12">
              <fieldset class="form-group">
                <div class="input-group">
                  <span class="input-group-btn">
                    <label>{{ 'MOSAIC_DEFINITION_FINAL_NAME' | translate }}: </label>
                  </span>
                  <span class="form-control" readOnly>{{ $ctrl.formData.namespaceParent.fqn }}:{{ $ctrl.formData.mosaicName }}</span>
                </div>
              </fieldset>
            </div>
          </div>
        </div>
        </div>

        <div class="col-lg-5 col-md-6 col-sm-12">
          <!-- LEVY PANEL -->
          <div ng-show="$ctrl.hasLevy">
            <div class="panel-heading">
              <h3>{{ 'GENERAL_LEVY' | translate }}</h3>
            </div>
            <!-- Mosaic to be levy -->
            <div class="panel-body">
              <div class="row">

                <div class="col-md-12">
                  <fieldset class="form-group">
                    <div class="input-group">
                      <span class="input-group-btn">
                        <label>{{ 'MOSAIC_DEFINITION_LEVY_SELECT_MOSAIC' | translate }}: </label>
                      </span>
                      <select class="form-control" ng-options="mosaicName for mosaicName in $ctrl.currentAccountMosaicNames" ng-model="$ctrl.selectedMosaic" ng-change="$ctrl.updateLevyMosaic(true)"></select>
                    </div>
                  </fieldset>
                </div>
                <!-- Address to receive levy -->
                <div class="col-md-12">
                  <fieldset class="form-group">
                    <div class="input-group">
                      <span class="input-group-btn">
                        <label>{{ 'MOSAIC_DEFINITION_LEVY_ADDRESS' | translate }}: </label>
                      </span>
                      <input type="text" class="form-control" ng-model="$ctrl.formData.levy.address">
                    </div>
                  </fieldset>
                </div>
                <!-- Levy fee -->
                <div class="col-md-12">
                  <fieldset class="form-group">
                    <div class="input-group">
                      <span class="input-group-btn">
                        <label>{{ 'FORM_SIDE_BTN_LEVY_FEE' | translate }}: </label>
                      </span>
                      <div class="form-control formFloat">
                        <input class="levy" type="number" ng-model="$ctrl.formData.levy.fee" min="0" max="9000000000">
                        <label class="floatRight">{{ $ctrl.selectedMosaic }} (μ)</label>
                      </div>
                    </div>
                  </fieldset>
                </div>
                <!-- Levy fee type options -->
                <div class="col-md-12">
                  <fieldset class="form-group">
                    <div class="input-group">
                      <span class="input-group-btn">
                        <label>{{ 'MOSAIC_DEFINITION_LEVY_FEE_TYPE' | translate }}: </label>
                      </span>
                      <label class="col-md-6 control-label" style="margin-top:0;word-break: break-all;">
                        <input type="radio" ng-model="$ctrl.formData.levy.feeType" ng-value="1"> {{ 'MOSAIC_DEFINITION_LEVY_FEE_TYPE_1' | translate }}
                      </label>
                      <label class="col-md-6 control-label" style="margin-top:0;word-break: break-all;">
                        <input type="radio" ng-model="$ctrl.formData.levy.feeType" ng-value="2"> {{ 'MOSAIC_DEFINITION_LEVY_FEE_TYPE_2' | translate }}
                      </label>
                    </div>
                  </fieldset>
                </div>
              </div>

              <!-- Levy fee examples -->
              <div class="panel-footer bg-info">
                <div ng-show="$ctrl.formData.levy.feeType === 1">
                  {{ 'MOSAIC_DEFINITION_LEVY_FEE_TYPE_1_NOTE' | translate }}
                  <strong>{{($ctrl.formData.levy.fee | fmtSupply:$ctrl.mosaicOwned[$ctrl.selectedMosaic].mosaicId:$ctrl._DataStore.mosaic.metaData)[0]}}</strong>
                  <span class="text-muted">.{{($ctrl.formData.levy.fee | fmtSupply:$ctrl.mosaicOwned[$ctrl.selectedMosaic].mosaicId:$ctrl._DataStore.mosaic.metaData)[1]}}</span> {{$ctrl.selectedMosaic}}
                </div>
                <div ng-show="$ctrl.formData.levy.feeType === 2">
                  {{ 'MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE' | translate }}
                  <ul style="list-style:none">
                     <li ng-repeat="amountSend in [100, 1000, 3145, 10000, $ctrl.formData.properties.initialSupply] track by $index">
                        {{ 'MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE_2' | translate }}
                        <strong>{{(amountSend | fmtSupplyRaw:$ctrl.formData.properties.divisibility)[0]}}</strong>
                        <span class="text-muted">.{{(amountSend | fmtSupplyRaw:$ctrl.formData.properties.divisibility)[1]}}</span>
                        <span class="text-muted">{{$ctrl.formData.namespaceParent.fqn}}:</span>{{$ctrl.formData.mosaicName}} {{ 'MOSAIC_DEFINITION_LEVY_FEE_TYPE_2_NOTE_3' | translate }}
                        <strong>{{( (amountSend * $ctrl.formData.levy.fee / 10000) | fmtSupply:$ctrl.mosaicOwned[$ctrl.selectedMosaic].mosaicId:$ctrl._DataStore.mosaic.metaData)[0]}}</strong>
                        <span class="text-muted">.{{( (amountSend * $ctrl.formData.levy.fee / 10000) | fmtSupply:$ctrl.mosaicOwned[$ctrl.selectedMosaic].mosaicId:$ctrl._DataStore.mosaic.metaData)[1]}}</span> {{$ctrl.selectedMosaic}}
                     </li>
                  </ul>
                </div>
              </div>
            </div>
        </div>
      </div>
      </div>
    </div>
  </div>
</div>

<!-- Information modal -->
<div id="mosaicHelp" class="modal fade" tabindex="-1" role="dialog">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title">{{ 'MOSAIC_DEFINITION_INFORMATION_TITLE' | translate }}</h4>
      </div>
      <div class="modal-body">
        <div>
        <p>{{ 'MOSAIC_DEFINITION_INFORMATION_1' | translate }}</p>
        <pre>a, b, c, ..., z, 0, 1, 2, ..., 9, ', _ , -</pre>
        <p>{{ 'MOSAIC_DEFINITION_INFORMATION_2' | translate }}</p>
        <p>{{ 'MOSAIC_DEFINITION_INFORMATION_3' | translate }}</p>
        <p>{{ 'MOSAIC_DEFINITION_INFORMATION_4' | translate }}</p>
        <ul>
         <li>
           <b>{{ 'MOSAIC_DEFINITION_INITIAL_SUPPLY' | translate }}:</b> {{ 'MOSAIC_DEFINITION_INFORMATION_5' | translate }}
         </li>
         <li>
            <b>{{ 'MOSAIC_DEFINITION_DIV' | translate }}:</b> {{ 'MOSAIC_DEFINITION_INFORMATION_6' | translate }}
         </li>
         <li>
           <b>{{ 'MOSAIC_DEFINITION_MUTABLE_SUPPLY' | translate }}:</b> {{ 'MOSAIC_DEFINITION_INFORMATION_7' | translate }}
         </li>
         <li>
           <b>{{ 'MOSAIC_DEFINITION_TRANSFERABLE' | translate }}:</b> {{ 'MOSAIC_DEFINITION_INFORMATION_8' | translate }}
        </li>
        </ul>
        <li style="list-style: outside none none;"><b>{{ 'GENERAL_LEVY' | translate }}:</b></li>
        <p>{{ 'MOSAIC_DEFINITION_INFORMATION_9' | translate }}</p>
           <ul>
              <li>
                 <b>{{ 'GENERAL_MOSAIC' | translate }}:</b> {{ 'MOSAIC_DEFINITION_INFORMATION_10' | translate }} ({{ 'MOSAIC_DEFINITION_LEVY_LIMITATION' | translate }})
              </li>
              <li>
                 <b>{{ 'GENERAL_ADDRESS' | translate }}:</b> {{ 'MOSAIC_DEFINITION_INFORMATION_11' | translate }}
              </li>
              <li>
                 <b>{{ 'GENERAL_FEE' | translate }}:</b> {{ 'MOSAIC_DEFINITION_INFORMATION_12' | translate }}
              </li>
              <li>
                 <b>{{ 'MOSAIC_DEFINITION_LEVY_FEE_TYPE' | translate }}:</b> {{ 'MOSAIC_DEFINITION_INFORMATION_13' | translate }}
                 <ul>
                    <li>
                       <b>{{ 'MOSAIC_DEFINITION_LEVY_FEE_TYPE_1' | translate }}:</b> {{ 'MOSAIC_DEFINITION_INFORMATION_14' | translate }}
                    </li>
                    <li>
                      <b>{{ 'MOSAIC_DEFINITION_LEVY_FEE_TYPE_2' | translate }}:</b> {{ 'MOSAIC_DEFINITION_INFORMATION_15' | translate }}
                    </li>
                 </ul>
              </li>
           </ul>
           <p ng-bind-html="'MOSAIC_DEFINITION_INFORMATION_16' | translate"></p>

           <p><b>{{ 'MOSAIC_DEFINITION_INFORMATION_17' | translate }}</b></p>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-primary" data-dismiss="modal">{{ 'GENERAL_CLOSE' | translate }}</button>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
'''
'''--- src/app/modules/mosaics/edit/editMosaic.config.js ---
function EditMosaicConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.editMosaic', {
            url: '/edit-mosaic',
            controller: 'EditMosaicCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/mosaics/edit/editMosaic.html',
            title: 'Edit a mosaic'
        });

};

export default EditMosaicConfig;
'''
'''--- src/app/modules/mosaics/edit/editMosaic.controller.js ---
import nem from 'nem-sdk';

class editMosaicCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Wallet, Alert, DataStore, $timeout) {
        'ngInject';

        //// Module dependencies region ////

        this._Alert = Alert;
        this._Wallet = Wallet;
        this._DataStore = DataStore;
        this._$timeout = $timeout;

        //// End dependencies region ////

        // Initialization
        this.init();
    }

    //// Module methods region ////

    /**
     * Initialize module properties
     */
    init() {
        // Form is a mosaic supply change transaction object
        this.formData = nem.model.objects.get("mosaicSupplyChangeTransaction");
        // Set first multisig account if any
        this.formData.multisigAccount = this._DataStore.account.metaData.meta.cosignatoryOf.length == 0 ? '' : this._DataStore.account.metaData.meta.cosignatoryOf[0];
        // Default mosaics owned
        this.mosaicOwned = this._DataStore.mosaic.ownedBy[this._Wallet.currentAccount.address];
        // Mosaics owned names for current account
        this.currentAccountMosaicNames = '';
        // Selected mosaic
        this.selectedMosaic = '';
        // Prevent user to click twice on send when already processing
        this.okPressed = false;
        // Object to contain our password & private key data.
        this.common = nem.model.objects.get("common");
        // Store the prepared transaction
        this.preparedTransaction = {};
        // Init mosaics for current account
        this.updateCurrentAccountMosaics();
        // Update the fee in view
        this.prepareTransaction();
    }

    /**
     * Update mosaic data for selected mosaic
     *
     * @note: Used in view (ng-update) on selected mosaic changes
     */
    updateMosaic() {
        this.formData.mosaic = this.mosaicOwned[this.selectedMosaic].mosaicId;
    }

    /**
     * Get current account mosaics owned names
     *
     * @note: Used in view (ng-update) on multisig changes
     */
    updateCurrentAccountMosaics() {
        // Get current account
        let acct = this.formData.isMultisig ? this.formData.multisigAccount.address : this._Wallet.currentAccount.address;
        // Set current account mosaics names if mosaicOwned is not undefined
        if (undefined !== this._DataStore.mosaic.ownedBy[acct]) {
            this.currentAccountMosaicNames = Object.keys(this._DataStore.mosaic.ownedBy[acct]).sort();
            this.mosaicOwned = this._DataStore.mosaic.ownedBy[acct];
        } else {
            this.currentAccountMosaicNames = ['nem:xem'];
            this.mosaicOwned = {};
        }
        // Default mosaic selected
        this.selectedMosaic = "nem:xem";
        this.prepareTransaction();
    }

    /**
     * Prepare the transaction
     */
    prepareTransaction() {
        let entity = nem.model.transactions.prepare("mosaicSupplyChangeTransaction")(this.common, this.formData, this._Wallet.network);
        this.preparedTransaction = entity;
        return entity;
    }

    /**
     * Prepare and broadcast the transaction to the network
     */
    send() {
        // Disable send button;
        this.okPressed = true;

        // Get account private key for preparation or return
        if (!this._Wallet.decrypt(this.common)) return this.okPressed = false;

        // Prepare the transaction
        let entity = this.prepareTransaction();

        // Use wallet service to serialize and send
        this._Wallet.transact(this.common, entity).then(() => {
            this._$timeout(() => {
                // Enable send button
                this.okPressed = false;
                // Reset all
                this.init();
                return;
            });
        }, () => {
            this._$timeout(() => {
                // Delete private key in common
                this.common.privateKey = '';
                // Enable send button
                this.okPressed = false;
                return;
            });
        });
    }

    //// End methods region ////

}

export default editMosaicCtrl;
'''
'''--- src/app/modules/mosaics/edit/editMosaic.html ---
<div class="create-mosaic-page">
  <div class="container-fluid main">

    <div class="row">
      <div class="col-md-10">
        <h2>{{ 'MOSAIC_SUPPLY_CHANGE_TITLE' | translate }}</h2>
      </div>
    </div>

    <div class="row">
  	  <div class="col-md-6">

        <div class="panel-heading">
          <div class="tabDescription">
            <span ng-show="!$ctrl.formData.isMultisig">{{ 'MOSAIC_SUPPLY_CHANGE_NAME' | translate }}</span>
            <span ng-show="$ctrl.formData.isMultisig">{{ 'MOSAIC_SUPPLY_CHANGE_MULTISIG_NAME' | translate }}</span>
          </div>
          <ul class="nav nav-tabs">
            <li ng-class="$ctrl.formData.isMultisig ? '' : 'active'"><a ng-click="$ctrl.formData.isMultisig = false;$ctrl.updateCurrentAccountMosaics()">{{ 'GENERAL_TAB_NORMAL' | translate }}</a></li>
            <li ng-show="$ctrl._DataStore.account.metaData.meta.cosignatoryOf.length" ng-class="$ctrl.formData.isMultisig ? 'active' : ''"><a ng-click="$ctrl.formData.isMultisig = true;$ctrl.updateCurrentAccountMosaics()">{{ 'GENERAL_TAB_MULTISIG' | translate }}</a></li>
          </ul>
        </div>
        <div class="panel-body">

          <!-- Multisig select -->
          <multisig-select ng-show="$ctrl.formData.isMultisig" multisig-account="$ctrl.formData.multisigAccount" update-ctrl="$ctrl.updateCurrentAccountMosaics();"></multisig-select>

          <!-- Select the mosaic -->
          <fieldset class="form-group">
            <div class="input-group">
              <span class="input-group-btn">
                <label for="namespaceParent" class="control-label">{{ 'MOSAIC_SUPPLY_CHANGE_SELECT' | translate }}: </label>
              </span>
          	  <select class="form-control" ng-options="mosaicName for mosaicName in $ctrl.currentAccountMosaicNames" ng-model="$ctrl.selectedMosaic" ng-change="$ctrl.updateMosaic()">
              </select>
            </div>
          </fieldset>

          <!-- Transaction fee -->
          <fee-input tx="$ctrl.preparedTransaction" is-multisig="$ctrl.formData.isMultisig"></fee-input>

          <!-- Password Field -->
          <password-input common="$ctrl.common"></password-input>

          <!-- Send transaction -->
          <button class="btn btn-success pull-xs-right" type="submit" style="width:100%;" ng-disabled="$ctrl.okPressed || $ctrl._Wallet.algo !== 'trezor' && $ctrl._Wallet.algo !== 'ledger' && !$ctrl.common.password.length || !$ctrl.formData.delta || $ctrl.selectedMosaic == 'nem:xem'" ng-click="$ctrl.send()">
            <i class="fa fa-send"></i> {{ 'GENERAL_SEND' | translate }}
          </button>
        </div>
      </div>

      <div class="col-md-6">
        <div class="panel-heading">
          <h3>{{ 'MOSAIC_SUPPLY_CHANGE_SUPPLY' | translate }}</h3>
        </div>
        <div class="panel-body">
          
          <!-- Original mosaic supply -->
          <fieldset class="form-group">
            <div class="input-group">
              <span class="input-group-btn">
                <label>{{ 'MOSAIC_SUPPLY_CHANGE_CURRENT_SUPPLY' | translate }}: </label>
              </span>
              <div class="form-control formFloat mosaic block" disabled >
                <strong>{{$ctrl._DataStore.mosaic.metaData[$ctrl.selectedMosaic].supply}}</strong>
                <span class="text-muted">.{{(0 | fmtSupply:$ctrl.mosaicOwned[$ctrl.selectedMosaic].mosaicId:$ctrl._DataStore.mosaic.metaData)[1]}}</span>
                <label class="floatRight"><small>{{ $ctrl.selectedMosaic }}</small></label>
              </div>
            </div>
          </fieldset>

          <!-- Create / Delete types -->
          <fieldset class="form-group row changeType">
            <div class="col-sm-4">
              <label>{{ 'MOSAIC_SUPPLY_CHANGE_TYPE' | translate }}: </label>
            </div>
            <div class="col-sm-4">
              <label>
                <input type="radio" ng-model="$ctrl.formData.supplyType" ng-value="1"> {{ 'MOSAIC_SUPPLY_CHANGE_TYPE_1' | translate }}
              </label>
            </div>
            <div class="col-sm-4">
              <label>
                <input type="radio" ng-model="$ctrl.formData.supplyType" ng-value="2"> {{ 'MOSAIC_SUPPLY_CHANGE_TYPE_2' | translate }}
              </label>
            </div>
          </fieldset>

          <!-- Create / Delete amount -->
          <fieldset class="form-group">
            <div class="input-group">
              <span class="input-group-btn">
                <label>{{ 'MOSAIC_SUPPLY_CHANGE_AMOUNT' | translate }}: </label>
              </span>
              <div class="form-control formFloat">
                <input class="levy" type="number" ng-model="$ctrl.formData.delta" min="0">
                <label class="floatRight"><small>{{ $ctrl.selectedMosaic }}</small></label>
              </div>
            </div>
          </fieldset>

          <!-- Resulting mosaic supply -->
          <fieldset class="form-group">
            <div class="input-group">
              <span class="input-group-btn">
                <label>{{ 'MOSAIC_SUPPLY_CHANGE_RES_SUPPLY' | translate }}</label>
              </span>
              <div class="form-control formFloat" disabled >
                <span ng-show="$ctrl.formData.supplyType === 1">
                  <strong>{{($ctrl.formData.delta + $ctrl._DataStore.mosaic.metaData[$ctrl.selectedMosaic].supply)}}</strong>
                  <span class="text-muted">.{{(0 | fmtSupply:$ctrl.mosaicOwned[$ctrl.selectedMosaic].mosaicId:$ctrl._DataStore.mosaic.metaData)[1]}}</span>
                </span>
                <span ng-show="$ctrl.formData.supplyType === 2">
                  <strong>{{(-$ctrl.formData.delta + $ctrl._DataStore.mosaic.metaData[$ctrl.selectedMosaic].supply)}}</strong>
                  <span class="text-muted">.{{(0 | fmtSupply:$ctrl.mosaicOwned[$ctrl.selectedMosaic].mosaicId:$ctrl._DataStore.mosaic.metaData)[1]}}</span>
                </span>
                <label class="floatRight"><small>{{ $ctrl.selectedMosaic }}</small></label>
              </div>
            </div>
          </fieldset>
        </div>
      </div>

    </div>
  </div>
</div>

'''
'''--- src/app/modules/mosaics/index.js ---
import angular from 'angular';

// Create the module where our functionality can attach to
let createMosaicModule = angular.module('app.createMosaic', []);

// Include our UI-Router config settings
import CreateMosaicConfig from './create/createMosaic.config';
createMosaicModule.config(CreateMosaicConfig);

// Controllers
import CreateMosaicCtrl from './create/createMosaic.controller';
createMosaicModule.controller('CreateMosaicCtrl', CreateMosaicCtrl);

// Create the module where our functionality can attach to
let editMosaicModule = angular.module('app.editMosaic', []);

// Include our UI-Router config settings
import EditMosaicConfig from './edit/editMosaic.config';
editMosaicModule.config(EditMosaicConfig);

// Controllers
import EditMosaicCtrl from './edit/editMosaic.controller';
editMosaicModule.controller('EditMosaicCtrl', EditMosaicCtrl);

export default createMosaicModule;

'''
'''--- src/app/modules/multisignature/create/createMultisig.config.js ---
function CreateMultisigConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.createMultisig', {
            url: '/create-multisignature-contract',
            controller: 'CreateMultisigCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/multisignature/create/createMultisig.html',
            title: 'Create a multisignature contract',
            params: {
                address: "",
                privateKey: ""
            }
        });

};

export default CreateMultisigConfig;
'''
'''--- src/app/modules/multisignature/create/createMultisig.controller.js ---
import nem from 'nem-sdk';

class CreateMultisigCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Wallet, Alert, Recipient, $timeout, $state) {
        'ngInject';

        //// Module dependencies region ////

        this._Wallet = Wallet;
        this._Alert = Alert;
        this._Recipient = Recipient;
        this._$timeout = $timeout;
        this._$state = $state;

        //// End dependencies region ////

        // Initialization
        this.init();
    }

    //// Module methods region ////

    /**
     * Initialize module properties
     */
    init() {
        // Form is a multisig agregate modification transaction object
        this.formData = nem.model.objects.get("multisigAggregateModification");
        // Default relative change is 1 for creation
        this.formData.relativeChange = 1;
        // Cosignatory to add
        this.cosignatoryToAdd = '';
        // Cosignatory public key
        this.cosignatoryPubKey = '';
        // Account to convert empty by default
        this.accountToConvert = undefined;
        // Prevent user to click twice on send when already processing
        this.okPressed = false;
        // Store info about the multisig account to show balance
        this.multisigInfoData = undefined;
        // Object to contain our password & private key data
        this.common = nem.model.objects.get("common");
        // Modifications list pagination properties
        this.currentPage = 0;
        this.pageSize = 5;
        // Store the prepared transaction
        this.preparedTransaction = {};
        // Check number of accounts and arrange
        this.checkAccounts();
        // Update the fee in view
        this.prepareTransaction();
    }

    /**
     * If more than one account in wallet, we show a select element in view or a private key input otherwise
     */
    checkAccounts() {
        if (Object.keys(this._Wallet.current.accounts).length > 1) {
            this.haveMoreThanOneAccount = true;
            this.useCustomAccount = false;
        } else {
            this.haveMoreThanOneAccount = false;
            this.useCustomAccount = true;
        }
        // Set account if any passed in parameters
        if (this._$state.params.privateKey.length) {
            this.common.privateKey = this._$state.params.privateKey;
            this.useCustomAccount = true;
            this.generateAccountToConvert();
        }
    }

    /**
     * Generate the address of the account to convert from provided private key
     */
    generateAccountToConvert() {
        if (nem.utils.helpers.isHexadecimal(this.common.privateKey) && (this.common.privateKey.length === 64 || this.common.privateKey.length === 66)) {
            this.accountToConvert = nem.model.address.toAddress(nem.crypto.keyPair.create(this.common.privateKey).publicKey.toString(), this._Wallet.network);
            // Get account data of account to convert
            this.processMultisigInput();
        } else {
            this.accountToConvert = undefined;
        }
    }

    /**
     * Process multisig account input and get data from network
     */
    processMultisigInput() {
        if (!this.accountToConvert) return;
        // Reset recipient data
        this.resetMultisigData();
        //
        return this._Recipient.getAccount(this.useCustomAccount ? nem.model.address.clean(this.accountToConvert) : this.accountToConvert.address).then((res) => {
            this._$timeout(() => {
                //
                this.setMultisigData(res);
                return;
            });
        },
        (err) => {
            this._$timeout(() => {
                // Reset recipient data
                this.resetMultisigData();
                return;
            });
        });
    }

    /**
     * Set data received from Recipient service
     *
     * @param {object} data - An [AccountInfo]{@link http://bob.nem.ninja/docs/#accountInfo} object
     */
    setMultisigData(data) {
        if (data.meta.cosignatories.length) return this._Alert.alreadyMultisig();
        // Store data
        this.multisigInfoData = data.account;
        return;
    }

    /**
     * Reset data stored for multisig
     */
    resetMultisigData() {
        this.multisigInfoData = undefined;
        this.formData.modifications = [];
    }

    /**
     * Prepare the transaction
     */
    prepareTransaction() {
        let entity = nem.model.transactions.prepare("multisigAggregateModificationTransaction")(this.common, this.formData, this._Wallet.network);
        this.preparedTransaction = entity;
        return entity;
    }

    /**
     * Remove a cosignatory from the modifications list
     *
     * @param {array} array - A modification array
     * @param {object} elem - An object to remove from the array
     */
    removeCosignFromList(array, elem) {
        // If the deleted element is the elem 0 and length of array mod 5 gives 0 (means it is the last object of the page), 
        // we return a page behind unless it is page 1.
        if (array.indexOf(elem) === 0 && this.currentPage + 1 > 1 && (array.length - 1) % 5 === 0) {
            this.currentPage = this.currentPage - 1;
        }
        array.splice(array.indexOf(elem), 1);
        // Update the fee
        this.prepareTransaction();
    }

    /**
     * Add cosignatory to array
     */
    addCosig() {
        // Arrange
        let cleanMultisig = this.useCustomAccount ? nem.model.address.clean(this.accountToConvert) : nem.model.address.clean(this.accountToConvert.address);
        let cleanCosignatory = nem.model.address.clean(this.cosignatoryToAdd);
        // Cosignatory needs a public key
        if (!this.cosignatoryPubKey) return this._Alert.cosignatoryhasNoPubKey();
        // Multisig cannot be cosignatory
        if(cleanMultisig === cleanCosignatory) return this._Alert.multisigCannotBeCosignatory();
        // Check presence in modification array
        if (nem.utils.helpers.haveCosig(this.cosignatoryPubKey, this.formData.modifications)) {
            this._Alert.cosignatoryAlreadyPresentInList();
        } else {
            this.formData.modifications.push(nem.model.objects.create("multisigCosignatoryModification")(1, this.cosignatoryPubKey));
            this.prepareTransaction();
        }
    }

    /**
     * Build and broadcast the transaction to the network
     */
    send() {
        // Disable send button;
        this.okPressed = true;

        // If user use a custom account, private key is already in common no need to decrypt 
        if (this.useCustomAccount) {
            // Check if private key is correct
            if (!(nem.utils.helpers.isHexadecimal(this.common.privateKey) && (this.common.privateKey.length === 64 || this.common.privateKey.length === 66))) {
                // Enable send button
                this.okPressed = false;
                this._Alert.invalidPrivateKey();
                return;
            }
        } else {
            // Get account private key for preparation or return
            if (!this._Wallet.decrypt(this.common, this.accountToConvert)) return this.okPressed = false;
        }

        // Prepare the transaction
        let entity = this.prepareTransaction();

        // Use wallet service to serialize and send
        this._Wallet.transact(this.common, entity, this.accountToConvert).then(() => {
            this._$timeout(() => {
                // Reset all
                this.init();
                return;
            });
        }, () => {
            this._$timeout(() => {
                // Delete private key in common
                this.common.privateKey = '';
                // Enable send button
                this.okPressed = false;
                return;
            });
        });
    }

    //// End methods region ////

}

export default CreateMultisigCtrl;
'''
'''--- src/app/modules/multisignature/create/createMultisig.html ---
<div class="create-multisig-page">
  <div class="container-fluid main">

    <div class="row">
      <div class="col-sm-8">
        <h2>{{ 'AGGREGATE_MODIFICATION_TITLE' | translate }}</h2>
      </div>
    </div>

    <div class="row">
      <div class="col-md-6">
        <div class="panel-heading">
          <div class="tabDescription">
            <span >{{ 'AGGREGATE_MODIFICATION_NAME' | translate }}</span>
          </div>
          <ul class="nav nav-tabs">
            <li ng-show="$ctrl.haveMoreThanOneAccount" ng-class="$ctrl.useCustomAccount ? '' : 'active'"><a ng-click="$ctrl.useCustomAccount = false;$ctrl.accountToConvert = undefined;$ctrl.common.privateKey = '';$ctrl.resetMultisigData();">{{ 'GENERAL_TAB_NORMAL' | translate }}</a></li>
            <li ng-class="$ctrl.useCustomAccount ? 'active' : ''"><a ng-click="$ctrl.useCustomAccount = true;$ctrl.accountToConvert = undefined;$ctrl.resetMultisigData();">{{ 'AGGREGATE_CUSTOM_ACCOUNT' | translate }}</a></li>
          </ul>
        </div>
        <div class="panel-body">

            <!-- Wallet account to convert -->
            <fieldset class="form-group" ng-show="$ctrl.haveMoreThanOneAccount && !$ctrl.useCustomAccount">
            	<div class="input-group">
                <span class="input-group-btn">
                  <label>{{ 'AGGREGATE_ACCOUNT_SELECT_TITLE' | translate }}: </label>
                </span>
               	<select class="form-control" ng-options="account as (account.label || account.address) for (index, account) in $ctrl._Wallet.current.accounts" ng-model="$ctrl.accountToConvert" ng-model-options="{debounce:500}" ng-change="$ctrl.processMultisigInput();">
               		<option value="" disabled selected> {{ 'AGGREGATE_ACCOUNT_SELECT' | translate }}</option>
              	</select>
              </div>
            </fieldset>

            <!-- Private key of account to convert -->
            <fieldset class="form-group" ng-show="!$ctrl.haveMoreThanOneAccount || $ctrl.useCustomAccount">
              <div class="input-group">
                <span class="input-group-btn">
                  <label ng-class="!$ctrl.common.privateKey.length ? 'has-error': ''">{{ 'AGGREGATE_ACCOUNT_TO_CONVERT_PRIVATE_TITLE' | translate }}</label>
                </span>
                <input class="form-control"
                  type="password"
                  placeholder="{{ 'AGGREGATE_ACCOUNT_TO_CONVERT_PRIVATE' | translate }}"
                  ng-model="$ctrl.common.privateKey" ng-class="!$ctrl.common.privateKey.length ? 'has-error': ''" ng-change="$ctrl.generateAccountToConvert();"/>
              </div>
            </fieldset>

            <!-- Show address of account if private key provided -->
            <fieldset class="form-group" ng-if="$ctrl.useCustomAccount && $ctrl.accountToConvert.length">
              <div class="input-group">
                <span class="input-group-btn">
                  <label>{{ 'GENERAL_ADDRESS' | translate }}: </label>
                </span>
                <input class="form-control"
                  type="text"
                  value="{{ $ctrl.accountToConvert | fmtAddress }}" readOnly/>
              </div>
            </fieldset>

            <!-- Balance of account to edit -->
            <fieldset class="form-group" ng-show="$ctrl.multisigInfoData">
              <div class="input-group">
                <span class="input-group-btn">
                  <label>{{ 'FORM_SIDE_BTN_BALANCE' | translate }}: </label>
                </span>
                <div class="form-control formFloat" readOnly>
                  <input class="readOnly" type="text" value="{{ ($ctrl.multisigInfoData.balance | fmtNemValue)[0] }}.{{ ($ctrl.multisigInfoData.balance | fmtNemValue)[1] }}" readOnly/>
                  <label class="floatRight"><small>XEM</small></label>
                </div>
              </div>
            </fieldset>

            <!-- Cosignatory via address book, recipient address, alias -->
            <account-input account="$ctrl.cosignatoryToAdd" public-key="$ctrl.cosignatoryPubKey"></account-input>

            <!-- Add cosignatory button -->
            <fieldset class="form-group">
              <div class="col-md-3"></div>
              <div class="col-md-9 row">
              <button style="border-radius: 0px;width: 100%" type="button" class="btn btn-warning" ng-click="$ctrl.addCosig()" ng-disabled="!$ctrl.cosignatoryToAdd || !$ctrl.accountToConvert">
                <i class="fa fa-plus"></i> {{ 'AGGREGATE_ADD_COSIG' | translate }}
              </button>
              </div>
            </fieldset>

            <!-- # of signers required -->
            <fieldset class="form-group">
              <div class="input-group">
                <span class="input-group-btn">
                  <label>{{ 'AGGREGATE_MIN_SIGNATURES' | translate }}: </label>
                </span>
                <input class="form-control"
                  type="number"
                  placeholder="{{ 'AGGREGATE_MIN_SIGNATURES_PLACEHOLDER' | translate }}"
                  ng-model="$ctrl.formData.relativeChange" min="1" ng-change="$ctrl.prepareTransaction();"/>
              </div>
            </fieldset>

            <!-- Transaction fee -->
            <fee-input tx="$ctrl.preparedTransaction" is-multisig="$ctrl.formData.isMultisig"></fee-input>

            <!-- Password Field -->
            <password-input common="$ctrl.common" ng-show="!$ctrl.useCustomAccount"></password-input>

            <!-- Send transaction -->
            <button class="btn btn-success"
              type="submit" ng-disabled="$ctrl.okPressed || !$ctrl.useCustomAccount && !$ctrl.common.password.length && $ctrl._Wallet.algo !== 'trezor' && $ctrl._Wallet.algo !== 'ledger'|| $ctrl.useCustomAccount && !$ctrl.common.privateKey || !$ctrl.formData.modifications.length || !$ctrl.accountToConvert || !$ctrl.formData.relativeChange" ng-click="$ctrl.send()">
              <i class="fa fa-send"></i> {{ 'GENERAL_SEND' | translate }}
            </button>
        </div>
      </div>

      <div class="col-md-6">
        <!-- List of signer to be added -->
        <div class="panel-heading">
          <h3>{{ 'AGGREGATE_COSIG_LIST' | translate }}</h3>
          <paginate data="$ctrl.formData.modifications" current-page="$ctrl.currentPage" page-size="$ctrl.pageSize"></paginate>
        </div>
        <table class="table table-condensed">
          <thead>
            <tr>
              <th>{{ 'GENERAL_ADDRESS' | translate }}</th>
              <th>{{ 'GENERAL_ACTION' | translate }}</th>
              <th>{{ 'GENERAL_REMOVE' | translate }}</th>
            </tr>
          </thead>
        </table>
        <table class="table table-condensed" style="table-layout:fixed" ng-show="$ctrl.formData.modifications.length">
          <tbody>
            <tr ng-repeat="acct in $ctrl.formData.modifications | reverse | startFrom:$ctrl.currentPage*$ctrl.pageSize | limitTo:$ctrl.pageSize">
              <td style="word-break:break-all">{{acct.cosignatoryAccount | fmtPubToAddress:$ctrl._Wallet.network | fmtAddress}}</td>
              <td>{{ 'GENERAL_ADD' | translate }}</td>
              <td><i class="fa fa-times" style="color:red;cursor:pointer;" ng-click="$ctrl.removeCosignFromList($ctrl.formData.modifications, acct)"></i></td>
            </tr>
          </tbody>
        </table>
        <div class="panel-body" ng-show="!$ctrl.formData.modifications.length">
          <p>{{ 'GENERAL_NO_RESULTS' | translate }}</p>
        </div>
      </div>

    </div>
  </div>
</div>

'''
'''--- src/app/modules/multisignature/edit/editMultisig.config.js ---
function EditMultisigConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.editMultisig', {
            url: '/edit-multisignature-contract',
            controller: 'EditMultisigCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/multisignature/edit/editMultisig.html',
            title: 'Edit a multisignature contract'
        });

};

export default EditMultisigConfig;
'''
'''--- src/app/modules/multisignature/edit/editMultisig.controller.js ---
import nem from 'nem-sdk';

class EditMultisigCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Wallet, Alert, DataStore, Recipient, $timeout) {
        'ngInject';

        //// Module dependencies region ////

        this._Wallet = Wallet;
        this._Alert = Alert;
        this._DataStore = DataStore;
        this._Recipient = Recipient;
        this._$timeout = $timeout;

        //// End dependencies region ////

        // Initialization
        this.init();
    }

    //// Module methods region ////

    /**
     * Initialize module properties
     */
    init() {
        // Form is a multisig agregate modification transaction object
        this.formData = nem.model.objects.get("multisigAggregateModification");
        // Modification is always multisig
        this.formData.isMultisig = true;
        // Set first multisig account if any
        this.formData.multisigAccount = this._DataStore.account.metaData.meta.cosignatoryOf.length == 0 ? '' : this._DataStore.account.metaData.meta.cosignatoryOf[0];
        // Cosignatory to add
        this.cosignatoryToAdd = '';
        // Cosignatory public key
        this.cosignatoryPubKey = '';
        // No min cosignatory modification by default
        this.formData.relativeChange = null;
        // Store info about the multisig account to show balance, cosigs and min signatures
        this.multisigInfoData = undefined;
        // Prevent user to click twice on send when already processing
        this.okPressed = false;
        // Modifications list pagination properties
        this.currentPage = 0;
        this.pageSize = 5;
        // Object to contain our password & private key data
        this.common = nem.model.objects.get("common");
        // Store the prepared transaction
        this.preparedTransaction = {};
        // Get data of default multisig account
        this.processMultisigInput();
        // Init fees
        this.prepareTransaction();
    }

    /**
     * Calculate the minimum signature change needed
     */
    calculateMinSignaturesChange() {
        // If no modifications, change is null
        if (!this.formData.modifications.length) return this.formData.relativeChange = null;
        // Default number of account deleted
        let numberDeleted = 0;
        // Default number of account added
        let numberAdded = 0;
        // Increment above properties depending of type
        for (let i = 0; i < this.formData.modifications.length; i++) {
            if (this.formData.modifications[i].modificationType === 2) {
                numberDeleted++;
            } else {
                numberAdded++;
            }
        }
        // Update min cosigs if total cosignatories - deleted accounts + added accounts is < min cosig number
        if (this.multisigInfoData.cosignatories.length - numberDeleted + numberAdded < this.multisigInfoData.minCosigs) {
            // Calculate the number to add or remove of min signatures
            let sigs = this.multisigInfoData.cosignatories.length - numberDeleted - this.multisigInfoData.minCosigs + numberAdded;
            this.formData.relativeChange = sigs;
        } else if(this.isMinSignaturesValid(false)) {
            this.formData.relativeChange = null;
        } else {
            this._Alert.errorMultisigMinSignatureInvalid();
        }
    }

    /**
     * Process multisig account input and get data from network
     */
    processMultisigInput() {
        if (!this.formData.multisigAccount) return;
        // Reset recipient data
        this.resetMultisigData();
        //
        return this._Recipient.getAccount(this.formData.multisigAccount.address).then((res) => {
            this._$timeout(() => {
                //
                this.setMultisigData(res);
                return;
            });
        },
        (err) => {
            this._$timeout(() => {
                // Reset recipient data
                this.resetMultisigData();
                return;
            });
        });
    }

    /**
     * Set data received from Recipient service
     *
     * @param {object} data - An [AccountInfo]{@link http://bob.nem.ninja/docs/#accountInfo} object
     */
    setMultisigData(data) {
        // Store data
        this.multisigInfoData = {
            'minCosigs': data.account.multisigInfo.minCosignatories,
            'cosignatories': data.meta.cosignatories
        }
        return;
    }

    /**
     * Prepare the transaction
     */
    prepareTransaction() {
        let entity = nem.model.transactions.prepare("multisigAggregateModificationTransaction")(this.common, this.formData, this._Wallet.network);
        this.isMinSignaturesValid(false);
        this.preparedTransaction = entity;
        return entity;
    }

    /**
     * Reset data stored and properties for multisig account
     */
    resetMultisigData() {
        this.multisigInfoData = undefined;
        // Reset modifications array
        this.formData.modifications = [];
        // Reset relativeChange
        this.formData.relativeChange = null;
    }

    /**
     * Remove a cosignatory from the modifications list
     *
     * @param {array} array - A modification array
     * @param {object} elem - An object to remove from the array
     */
    removeCosignFromList(array, elem) {
        // If the deleted element is the elem 0 and length of array mod 5 gives 0 (means it is the last object of the page), 
        // we return a page behind unless it is page 1.
        if (array.indexOf(elem) === 0 && this.currentPage + 1 > 1 && (array.length - 1) % 5 === 0) {
            this.currentPage = this.currentPage - 1;
        }
        array.splice(array.indexOf(elem), 1);
        // Calculate min signatures change
        this.calculateMinSignaturesChange();
        // Update the fee
        this.prepareTransaction();
    }

    /**
     * Push cosignatory to array with add or delete type
     *
     * @param {number} type - modification type (1 to add or 2 to remove)
     */
    addCosig(type) {
        // Cosignatory needs a public key
        if (!this.cosignatoryPubKey) return this._Alert.cosignatoryhasNoPubKey();
        // Check if removal already present in modifications array
        if (type === 2) {
            for (let i = 0; i < this.formData.modifications.length; i++) {
                if (this.formData.modifications[i].modificationType === 2) return this._Alert.cosignatoryRemovalLimit();
            }
        }
        if (nem.utils.helpers.haveCosig(this.cosignatoryPubKey, this.formData.modifications)) {
            // Alert
            this._Alert.cosignatoryAlreadyPresentInList();
        } else {
            this.formData.modifications.push(nem.model.objects.create("multisigCosignatoryModification")(type, this.cosignatoryPubKey));
            // Calculate min signatures change
            this.calculateMinSignaturesChange();
            // Update the fee
            this.prepareTransaction();
        }
    }

    /**
     * Check if multisig account has at least one minimum signature remaining after change
     *
     * @param {boolean} isSend - True if the check is in send button, false otherwise 
     * Without the boolean the check in send button will trigger infinite digest cycles for the alert
     */
    isMinSignaturesValid(isSend) {
        if (undefined !== this.multisigInfoData && null !== this.formData.relativeChange) {
            if(isNaN(this.formData.relativeChange)) return false;
            let sigs = this.formData.relativeChange + this.multisigInfoData.minCosigs;
            // If number of sigs is below one and if there is not only one cosignatory
            if (sigs < 1 && this.multisigInfoData.cosignatories.length > 1) {
                if(!isSend) {
                    this._$timeout(() => {
                        this._Alert.errorMultisigMinSignature();
                    });
                }
                return false;
            } else {
                return true;
            }
        } else {
            return true;
        }
    }

    /**
     * Build and broadcast the transaction to the network
     */
    send() {
        // Disable send button;
        this.okPressed = true;

        // Get account private key for preparation or return
        if (!this._Wallet.decrypt(this.common)) return this.okPressed = false;

        // Prepare the transaction
        let entity = this.prepareTransaction();

        // Use wallet service to serialize and send
        this._Wallet.transact(this.common, entity).then(() => {
            this._$timeout(() => {
                // Reset all
                this.init();
                return;
            });
        }, () => {
            this._$timeout(() => {
                // Delete private key in common
                this.common.privateKey = '';
                // Enable send button
                this.okPressed = false;
                return;
            });
        });
    }

    //// End methods region ////

}

export default EditMultisigCtrl;
'''
'''--- src/app/modules/multisignature/edit/editMultisig.html ---
<div class="edit-multisig-page">
  <div class="container-fluid main">

    <div class="row">
      <div class="col-sm-8">
        <h2>{{ 'AGGREGATE_MODIFICATION_EDIT_TITLE' | translate }}</h2>
      </div>
    </div>

    <div class="row">
      <div class="col-md-7">

        <div class="panel-heading">
          <h3>{{ 'AGGREGATE_MODIFICATION_MULTISIG_NAME' | translate }}</h3>
        </div>
        <div class="panel-body">

            <!-- Multisig to edit selection -->
            <fieldset class="form-group">
              <div class="input-group">
                <span class="input-group-btn">
                  <label>{{ 'AGGREGATE_MODIFICATION_EDIT_SELECT_TITLE' |translate }}: </label>
                </span>
               	<select class="form-control" ng-options="(acc.address | fmtContact:$ctrl._Wallet.current) for acc in $ctrl._DataStore.account.metaData.meta.cosignatoryOf" ng-model="$ctrl.formData.multisigAccount" ng-change="$ctrl.processMultisigInput();">
               		<option value="" disabled selected> {{ 'AGGREGATE_MODIFICATION_EDIT_SELECT' | translate }}</option>
              	</select>
              </div>
            </fieldset>

            <!-- Balance of selected account to edit -->
            <fieldset class="form-group" ng-show="$ctrl.formData.multisigAccount">
              <div class="input-group">
                <span class="input-group-btn">
                  <label>{{ 'FORM_SIDE_BTN_BALANCE' | translate }}: </label>
                </span>
                <div class="form-control formFloat" readOnly>
                  <input class="readOnly" type="text" value="{{ ($ctrl.formData.multisigAccount.balance | fmtNemValue)[0] }}.{{ ($ctrl.formData.multisigAccount.balance | fmtNemValue)[1] }}" readOnly/>
                  <label class="floatRight"><small>XEM</small></label>
                </div>
              </div>
            </fieldset>

            <!-- Cosignatory via address book, recipient address, alias -->
            <account-input account="$ctrl.cosignatoryToAdd" public-key="$ctrl.cosignatoryPubKey"></account-input>

            <!-- Add / remove cosignatory buttons -->
            <fieldset class="form-group">
              <div class="col-md-2"></div>
              <div class="col-md-10">
                <button type="button" class="btn btn-warning col-md-6" style="border-radius: 0px;" ng-click="$ctrl.addCosig(1)" ng-disabled="!$ctrl.cosignatoryToAdd || $ctrl.cosignatoryToAdd === $ctrl.formData.multisigAccount.address || !$ctrl.formData.multisigAccount"><i class="fa fa-plus"></i> {{ 'AGGREGATE_ADD_COSIG' | translate }}</button>
                <button type="button" class="btn btn-danger col-md-6" style="border-radius: 0px;" ng-click="$ctrl.addCosig(2)" ng-disabled="!$ctrl.cosignatoryToAdd || $ctrl.cosignatoryToAdd === $ctrl.formData.multisigAccount.address || !$ctrl.formData.multisigAccount"><i class="fa fa-minus"></i> {{ 'AGGREGATE_REMOVE_COSIG' | translate }}</button>
              </div>
            </fieldset>

            <!-- Number of signature to remove/add -->
            <fieldset class="form-group">
              <div class="input-group">
                <span class="input-group-btn">
            	    <label>{{'AGGREGATE_MODIFICATION_RELATIVE_CHANGE' | translate}}: </label>
                </span>
                <input class="form-control"
                  type="number"
                  placeholder="{{'AGGREGATE_MODIFICATION_RELATIVE_CHANGE_PLACEHOLDER' | translate}}"
                  ng-model="$ctrl.formData.relativeChange" min="-64" max="64" ng-change="$ctrl.prepareTransaction()"/>
              </div>
            </fieldset>

            <!-- Transaction fee -->
            <fee-input tx="$ctrl.preparedTransaction" is-multisig="$ctrl.formData.isMultisig"></fee-input>

            <!-- Password Field -->
            <password-input common="$ctrl.common"></password-input>

            <!-- Send transaction -->
            <button class="btn btn-success pull-xs-right"
              type="submit" style="width:100%;" ng-disabled="$ctrl.okPressed || $ctrl._Wallet.algo !== 'trezor' && $ctrl._Wallet.algo !== 'ledger' && !$ctrl.common.password.length || !$ctrl.formData.modifications.length && !$ctrl.formData.relativeChange || !$ctrl.isMinSignaturesValid(true)" ng-click="$ctrl.send()">
              <i class="fa fa-send"></i> {{'GENERAL_SEND' | translate}}
            </button>
        </div>
      </div>

      <div class="col-md-5">
        <!-- Information of selected multisig account -->
        <div class="panel-heading">
          <h3>{{'AGGREGATE_SELECTED_ACCOUNT_INFO' | translate}}</h3>
        </div>
        <div class="panel-body" ng-show="$ctrl.multisigInfoData.cosignatories.length && $ctrl.formData.multisigAccount">
          <div class="row">
            <div class="col-sm-9 col-md-8 col-lg-8">
            <h5>{{'GENERAL_COSIGNATORIES' | translate}}</h5>
            <span ng-repeat="cosig in $ctrl.multisigInfoData.cosignatories">{{cosig.address}}<br></span>
            </div>
            <div class="col-sm-3 col-md-4 col-lg-4">
              <h5>{{'AGGREGATE_MIN_SIGNATURES' | translate}}</h5>
               {{$ctrl.multisigInfoData.minCosigs}}
            </div>
          </div>
        </div>
        <div class="panel-body" ng-show="!$ctrl.multisigInfoData.cosignatories.length || !$ctrl.formData.multisigAccount">
          <p>{{ 'GENERAL_NO_RESULTS' | translate }}</p>
        </div>
        <!-- List of signer to be added / deleted -->
        <div class="panel-heading">
          <h3>{{ 'AGGREGATE_MODIFICATION_LIST' | translate }}</h3>
          <paginate data="$ctrl.formData.modifications" current-page="$ctrl.currentPage" page-size="$ctrl.pageSize"></paginate>
        </div>
        <table class="table table-condensed" style="table-layout:fixed">
          <thead>
            <tr>
              <th>{{ 'GENERAL_ADDRESS' | translate }}</th>
              <th>{{ 'GENERAL_ACTION' | translate }}</th>
              <th>{{ 'GENERAL_REMOVE' | translate }}</th>
            </tr>
          </thead>
        </table>
        <table class="table table-condensed" style="table-layout:fixed" ng-show="$ctrl.formData.modifications.length">
          <tbody>
            <tr ng-repeat="acct in $ctrl.formData.modifications | reverse | startFrom:$ctrl.currentPage*$ctrl.pageSize | limitTo:$ctrl.pageSize">
              <td style="word-break:break-all">{{acct.cosignatoryAccount | fmtPubToAddress:$ctrl._Wallet.network | fmtAddress}}</td>
              <td ng-show="acct.modificationType == 1">{{ 'GENERAL_ADD' | translate }}</td>
              <td ng-show="acct.modificationType == 2">{{ 'GENERAL_REMOVE' | translate }}</td>
              <td><i class="fa fa-times" style="color:red;cursor:pointer;" ng-click="$ctrl.removeCosignFromList($ctrl.formData.modifications, acct)"></i></td>
            </tr>
          </tbody>
        </table>
        <div class="panel-body" ng-show="!$ctrl.formData.modifications.length">
          <p>{{ 'GENERAL_NO_RESULTS' | translate }}</p>
        </div>
      </div>

    </div>
  </div>
</div>

'''
'''--- src/app/modules/multisignature/index.js ---
import angular from 'angular';

// Create the module where our functionality can attach to
let createMultisigModule = angular.module('app.createMultisig', []);

// Include our UI-Router config settings
import CreateMultisigConfig from './create/createMultisig.config';
createMultisigModule.config(CreateMultisigConfig);

// Controllers
import CreateMultisigCtrl from './create/createMultisig.controller';
createMultisigModule.controller('CreateMultisigCtrl', CreateMultisigCtrl);

// Create the module where our functionality can attach to
let editMultisigModule = angular.module('app.editMultisig', []);

// Include our UI-Router config settings
import EditMultisigConfig from './edit/editMultisig.config';
editMultisigModule.config(EditMultisigConfig);

// Controllers
import EditMultisigCtrl from './edit/editMultisig.controller';
editMultisigModule.controller('EditMultisigCtrl', EditMultisigCtrl);

// Create the module where our functionality can attach to
let signMultisigModule = angular.module('app.signMultisig', []);

// Include our UI-Router config settings
import SignMultisigConfig from './sign/sign.config';
signMultisigModule.config(SignMultisigConfig);

// Controllers
import SignMultisigCtrl from './sign/sign.controller';
signMultisigModule.controller('SignMultisigCtrl', SignMultisigCtrl);

export default createMultisigModule;

'''
'''--- src/app/modules/multisignature/sign/sign.config.js ---
function SignMultisigConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.signMultisig', {
            url: '/sign-multisignature-transactions',
            controller: 'SignMultisigCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/multisignature/sign/sign.html',
            title: 'Sign multisignature transactions'
        });

};

export default SignMultisigConfig;
'''
'''--- src/app/modules/multisignature/sign/sign.controller.js ---
import nem from 'nem-sdk';

class SignMultisigCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Wallet, Alert, $timeout) {
        'ngInject';

        //// Module dependencies region ////

        this._Alert = Alert;
        this._Wallet = Wallet;
        this._$timeout = $timeout;

        //// End dependencies region ////

        //// Module properties region ////

        // Store unconfirmed txes
        this.unconfirmed = [];

        // Unconfirmed txes pagination properties
        this.currentPage = 0;
        this.pageSize = 5;

        //// End properties region ////

        // Get unconfirmed transactions
        this.getUnconfirmedTransactions();

    }

    //// Module methods region ////

    /**
     * Fetch unconfirmed transactions for the current account
     */
    getUnconfirmedTransactions() {
        // Reset to initial page
        this.currentPage = 0;
        // 
        nem.com.requests.account.transactions.unconfirmed(this._Wallet.node, this._Wallet.currentAccount.address).then((res) => {
            this._$timeout(() => {
                this.unconfirmed = res.data;
                for (let i = 0; i < res.data.length; i++) {
                    this.unconfirmed[i].meta.innerHash = {
                        "data": res.data[i].meta.data
                    }
                    this.unconfirmed[i].meta.height = 9007199254740991;
                }
            });
        },
        (err) => {
            this._$timeout(() => {
                if(err.code < 0) {
                    this._Alert.connectionError();
                }  else {
                    this._Alert.errorGetTransactions(err.data.message);
                }
            });
        });
    }

    //// End methods region ////

}

export default SignMultisigCtrl;
'''
'''--- src/app/modules/multisignature/sign/sign.html ---
<div class="dashboard-page">
  <div class="container-fluid main">

    <div class="row">
      <div class="col-sm-9">
        <h2>{{ 'SIGN_MULTISIG_TRANSACTIONS_TITLE' | translate }}</h2>
      </div>
    </div>

    <div class="row">
      <div class="col-lg-8 col-md-9">
        <div class="row">
          <div class="col-lg-12">
            <div class="panel-heading">
              <ul class="nav nav-tabs">
                <li style="color: grey;letter-spacing: .8px;">{{ 'DASHBOARD_UNCONFIRMED' | translate }}</li>
                <li style="margin-left: 15px;"><i class="fa fa-refresh" style="cursor:pointer;" ng-click="$ctrl.getUnconfirmedTransactions();"></i></li>
              </ul>
                <paginate data="$ctrl.unconfirmed" current-page="$ctrl.currentPage" page-size="$ctrl.pageSize"></paginate> 
            </div>
            <table class="table table-condensed top">
              <thead>
                <tr>
                  <th>{{ 'GENERAL_ACCOUNT' | translate }}</th>
                  <th>{{ 'GENERAL_AMOUNT' | translate }}</th>
                  <th>{{ 'GENERAL_MESSAGE' | translate }}</th>
                  <th>{{ 'GENERAL_DATE' | translate }}</th>
                </tr>
              </thead>
            </table>
            <table class="table">
              <tbody>
                  <div ng-repeat="tx in $ctrl.unconfirmed | orderBy:'-transaction.timeStamp' | startFrom:$ctrl.currentPage*$ctrl.pageSize | limitTo:$ctrl.pageSize">
                    <tag-transaction d="tx" tooltip-position="'left'"></tag-transaction>
                  </div>
              </tbody>
            </table>
            <div class="panel-body nothing" ng-show="!$ctrl.unconfirmed.length">
              <p>{{ 'GENERAL_NO_RESULTS' | translate }}</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

'''
'''--- src/app/modules/namespaces/create/namespaces.config.js ---
function NamespacesConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.namespaces', {
            url: '/namespaces',
            controller: 'NamespacesCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/namespaces/create/namespaces.html',
            title: 'Create namespace or sub-namespace'
        });

};

export default NamespacesConfig;
'''
'''--- src/app/modules/namespaces/create/namespaces.controller.js ---
import nem from 'nem-sdk';
import Helpers from '../../../utils/helpers';

class NamespacesCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Wallet, Alert, DataStore, $filter, $timeout) {
        'ngInject';

        //// Module dependencies region ////

        this._Alert = Alert;
        this._Wallet = Wallet;
        this._DataStore = DataStore;
        this._$filter = $filter;
        this._$timeout = $timeout;

        //// End dependencies region ////
        
        // Initialization
        this.init();
    }

    //// Module methods region ////

    /**
     * Initialize module properties
     */
    init() {
        // Form is a namespace provision transaction object 
        this.formData = nem.model.objects.get("namespaceProvisionTransaction");
        // Sink account for view
        this.formData.rentalFeeSink = nem.model.sinks.namespace[this._Wallet.network];
        // Set first multisig account if any
        this.formData.multisigAccount = this._DataStore.account.metaData.meta.cosignatoryOf.length == 0 ? '' : this._DataStore.account.metaData.meta.cosignatoryOf[0];
        // Prevent user to click twice on send when already processing
        this.okPressed = false;
        // Object to contain our password & private key data.
        this.common = nem.model.objects.get("common");
        // Default namespaces owned
        this.namespaceOwned = this._DataStore.namespace.ownedBy[this._Wallet.currentAccount.address];
        // Store the prepared transaction
        this.preparedTransaction = {};
        // Update current account namespace
        this.updateCurrentAccountNS();
        // Update the fee in view
        this.prepareTransaction();
    }

    /**
     * Check if a namespace id is level 3
     *
     * @param {object} elem - The element to check
     *
     * @return {boolean} - True if element is not a namespace level 3, false otherwise
     */
    isNotLevel3(elem) {
        return elem.fqn.split('.').length < 3;
    };

    /**
     * Set name to lowercase and check it
     */
    processNamespaceName() {
        // Lowercase namespace name
        this.formData.namespaceName = this._$filter('lowercase')(this.formData.namespaceName);
        // Check namespace validity
        if (!this.namespaceIsValid(this.formData.namespaceName)) return this._Alert.invalidNamespaceName();
    }

    /**
     * Get current account namespaces & mosaic names
     *
     * @note: Used in view (ng-update) on multisig changes
     */
    updateCurrentAccountNS() {
        // Get current account
        let acct = this.formData.isMultisig ? this.formData.multisigAccount.address : this._Wallet.currentAccount.address;
        // Set current account mosaics names if namespaceOwned is not undefined in DataStore service
        if (undefined !== this._DataStore.namespace.ownedBy[acct]) {
            this.namespaceOwned = this._DataStore.namespace.ownedBy[acct];
            this.formData.namespaceParent = this.namespaceOwned[Object.keys(this.namespaceOwned)[0]];
        } else {
            this.namespaceOwned = {};
            this.formData.namespaceParent = "";
        }
        this.prepareTransaction();
    }

    /**
     * Prepare the transaction
     */
    prepareTransaction() {
        let entity = nem.model.transactions.prepare("namespaceProvisionTransaction")(this.common, this.formData, this._Wallet.network);
        // Store the prepared transaction
        this.preparedTransaction = entity;
        return entity;
    }

    /**
     * Check validity of namespace name
     *
     * @param {string} ns - A namespace name
     *
     * @return {boolean} - True if valid, false otherwise
     */
    namespaceIsValid(ns) {
        let isParent = this.formData.namespaceParent ? true : false;
        return Helpers.namespaceIsValid(ns, isParent);
    }

    /**
     * Prepare and broadcast the transaction to the network
     */
    send() {
        // Disable send button
        this.okPressed = true;

        // Get account private key for preparation or return
        if (!this._Wallet.decrypt(this.common)) return this.okPressed = false;

        // Build the entity to serialize
        let entity = this.prepareTransaction(this.common, this.formData);

        // Use wallet service to serialize and send
        this._Wallet.transact(this.common, entity).then(() => {
            this._$timeout(() => {
                // Enable send button
                this.okPressed = false;
                // Reset all
                this.init();
                return;
            });
        }, () => {
            this._$timeout(() => {
                // Delete private key in common
                this.common.privateKey = '';
                // Enable send button
                this.okPressed = false;
                return;
            });
        });
    }

    //// End methods region ////

}

export default NamespacesCtrl;
'''
'''--- src/app/modules/namespaces/create/namespaces.html ---
<div class="namespace-provision-page">
  <div class="container-fluid main">

    <div class="row">
      <div class="col-sm-11">
        <h2>{{ 'NAMESPACE_PROVISION_TITLE' | translate }}</h2>
      </div>
    </div>

    <div class="row">
      <div class="col-md-9 col-lg-7">

        <div class="panel-heading">
          <div class="tabDescription">
            <span ng-show="!$ctrl.formData.isMultisig">{{ 'NAMESPACE_PROVISION_NAME' | translate }}</span>
            <span ng-show="$ctrl.formData.isMultisig">{{ 'NAMESPACE_PROVISION_MULTISIG_NAME' | translate }}</span>
          </div>
          <ul class="nav nav-tabs">
            <li ng-class="$ctrl.formData.isMultisig ? '' : 'active'"><a ng-click="$ctrl.formData.isMultisig = false;$ctrl.updateCurrentAccountNS();">{{ 'GENERAL_TAB_NORMAL' | translate }}</a></li>
            <li ng-show="$ctrl._DataStore.account.metaData.meta.cosignatoryOf.length" ng-class="$ctrl.formData.isMultisig ? 'active' : ''"><a ng-click="$ctrl.formData.isMultisig = true;$ctrl.updateCurrentAccountNS();">{{ 'GENERAL_TAB_MULTISIG' | translate }}</a></li>
          </ul>
        </div>

        <div class="panel-body">
             <!-- Multisig select -->
            <multisig-select ng-show="$ctrl.formData.isMultisig" multisig-account="$ctrl.formData.multisigAccount" update-ctrl="$ctrl.updateCurrentAccountNS();"></multisig-select>

            <!-- Parent namespace -->
            <fieldset class="form-group">
              <div class="input-group">
                <span class="input-group-btn">
                  <label for="namespaceParent">{{ 'NAMESPACE_PROVISION_PARENT' | translate }}: </label>
                </span>
                <select class="form-control" ng-options="namespace.fqn for namespace in $ctrl.namespaceOwned | objValues | filter:$ctrl.isNotLevel3 " ng-model="$ctrl.formData.namespaceParent" ng-change="$ctrl.prepareTransaction()">
                  <option value=""> . ({{ 'NAMESPACE_PROVISION_NEW_ROOT' | translate }}) </option>
                </select>
              </div>
            </fieldset>

            <!-- Namespace name -->
            <fieldset class="form-group">
              <div class="input-group">
                <span class="input-group-btn">
                  <label>{{ 'NAMESPACE_PROVISION_NS' | translate }}: </label>
                </span>
               <input autofocus="autofocus" type="text" class="form-control" ng-model="$ctrl.formData.namespaceName" placeholder="{{ 'NAMESPACE_PROVISION_NS_NAME' | translate }}" maxlength="64" ng-change="$ctrl.processNamespaceName()">
             </div>
            </fieldset>

            <!-- Namespace sink address -->
            <fieldset class="form-group">
              <div class="input-group">
                <span class="input-group-btn">
                  <label>{{ 'GENERAL_SINK_ADDRESS' | translate }}: </label>
                </span>
                <input type="text" class="form-control" ng-model="$ctrl.formData.rentalFeeSink" readOnly>
              </div>
            </fieldset>

            <!-- Transaction and rental fee -->
            <div class="row" class="dualFees">
              <div class="col-sm-6">
                <!-- Transaction fee -->
                <fee-input tx="$ctrl.preparedTransaction" is-multisig="$ctrl.formData.isMultisig"></fee-input>
              </div>
              <!-- Rental fee -->
              <div class="col-sm-6">
                <fieldset class="form-group">
                  <div class="input-group">
                    <span class="input-group-btn">
                      <label>{{ 'FORM_SIDE_BTN_RENTAL_FEE' | translate }}:</label>
                    </span>
                    <div class="form-control formFloat" readOnly>
                      <span class="feeAmount">
                        <span ng-show="$ctrl.formData.isMultisig">{{($ctrl.preparedTransaction.otherTrans.rentalFee | fmtNemValue)[0]}}.{{($ctrl.preparedTransaction.otherTrans.rentalFee | fmtNemValue)[1]}}</span>
                        <span ng-show="!$ctrl.formData.isMultisig">{{($ctrl.preparedTransaction.rentalFee | fmtNemValue)[0]}}.{{($ctrl.preparedTransaction.rentalFee | fmtNemValue)[1]}}</span>
                      </span>
                      <label class="floatRight"><small>XEM</small></label>
                    </div>
                  </div>
                </fieldset>
              </div>
            </div>

            <!-- Password Field -->
            <password-input common="$ctrl.common"></password-input>

            <!-- Send transaction -->
            <button class="btn btn-success pull-xs-right" type="submit" ng-disabled="$ctrl.okPressed || $ctrl._Wallet.algo !== 'trezor' && $ctrl._Wallet.algo !== 'ledger' && !$ctrl.common.password.length || !$ctrl.formData.namespaceName.length || !$ctrl.namespaceIsValid($ctrl.formData.namespaceName)" ng-click="$ctrl.send()">
              <i class="fa fa-send"></i> {{ 'GENERAL_REGISTER' | translate }}
            </button>
        </div>
      </div>

      <!-- Information panel -->
      <div class="col-md-3 col-lg-5">
        <div class="panel-heading">
          <h3>{{ 'NAMESPACE_PROVISION_RESTRICTIONS' | translate }}</h3>
        </div>
        <div class="panel-body row">
          <div class="col-md-12 col-lg-12">
            <p>{{ 'NAMESPACE_PROVISION_INFORMATION_1' | translate }}</p>
            <pre>a, b, c, ..., z, 0, 1, 2, ..., 9, _ , -</pre>
            <p>{{ 'NAMESPACE_PROVISION_INFORMATION_2' | translate }}</p>
            <pre>nem, user, account, org, com, biz, net, edu, mil, gov and info.</pre>
            <p>{{ 'NAMESPACE_PROVISION_INFORMATION_3' | translate }}</p>
          </div>
        </div>
      </div>

    </div>
  </div>
</div>

'''
'''--- src/app/modules/namespaces/index.js ---
import angular from 'angular';

// Create the module where our functionality can attach to
let namespacesModule = angular.module('app.namespaces', []);

// Include our UI-Router config settings
import NamespacesConfig from './create/namespaces.config';
namespacesModule.config(NamespacesConfig);

// Controllers
import NamespacesCtrl from './create/namespaces.controller';
namespacesModule.controller('NamespacesCtrl', NamespacesCtrl);

// Create the module where our functionality can attach to
let renewNamespacesModule = angular.module('app.renewNamespaces', []);

// Include our UI-Router config settings
import RenewNamespacesConfig from './renew/renew.config';
renewNamespacesModule.config(RenewNamespacesConfig);

// Controllers
import RenewNamespacesCtrl from './renew/renew.controller';
renewNamespacesModule.controller('RenewNamespacesCtrl', RenewNamespacesCtrl);

export default namespacesModule;

'''
'''--- src/app/modules/namespaces/renew/renew.config.js ---
function RenewNamespacesConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.renewNamespaces', {
            url: '/namespaces/renew',
            controller: 'RenewNamespacesCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/namespaces/renew/renew.html',
            title: 'Renew namespaces'
        });

};

export default RenewNamespacesConfig;
'''
'''--- src/app/modules/namespaces/renew/renew.controller.js ---
import nem from 'nem-sdk';
import Helpers from '../../../utils/helpers';

class RenewNamespacesCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Wallet, Alert, DataStore, $timeout) {
        'ngInject';

        //// Module dependencies region ////

        this._Alert = Alert;
        this._Wallet = Wallet;
        this._DataStore = DataStore;
        this._$timeout = $timeout;

        //// End dependencies region ////

        // Initialization
        this.init();
    }

    //// Module methods region ////

    /**
     * Initialize module properties
     */
    init() {
        // Form is a namespace provision transaction object 
        this.formData = nem.model.objects.get("namespaceProvisionTransaction");
        // Set the sink account for view
        this.formData.rentalFeeSink = nem.model.sinks.namespace[this._Wallet.network];
        // Set first multisig account if any
        this.formData.multisigAccount = this._DataStore.account.metaData.meta.cosignatoryOf.length == 0 ? '' : this._DataStore.account.metaData.meta.cosignatoryOf[0];
        // Prevent user to click twice on send when already processing
        this.okPressed = false;
        // Show / hide ns dropdown
        this.needRenew = false;
        // Object to contain our password & private key data.
        this.common = nem.model.objects.get("common");
        // Default namespaces owned
        this.namespaceOwned = this._DataStore.namespace.ownedBy[this._Wallet.currentAccount.address];
        // Store the prepared transaction
        this.preparedTransaction = {};
        // Update current account namespace
        this.updateCurrentAccountNS();
        // Update the fee in view
        this.prepareTransaction();
    }

    /**
     * Get current account namespaces & mosaic names
     *
     * @note: Used in view (ng-update) on multisig changes
     */
    updateCurrentAccountNS() {
        //
        this.needRenew = false;
        // Get current account
        let acct = this.formData.isMultisig ? this.formData.multisigAccount.address : this._Wallet.currentAccount.address;
        // Set current account mosaics names if namespaceOwned is not undefined
        if (undefined !== this._DataStore.namespace.ownedBy[acct]) {
            this.namespaceOwned = this._DataStore.namespace.ownedBy[acct];
            for (let i = 0; i < Object.keys(this.namespaceOwned).length; i++) {
                if (this.namespaceOwned[Object.keys(this.namespaceOwned)[i]].height + 525600 - this._DataStore.chain.height <= 43200 && this.namespaceOwned[Object.keys(this.namespaceOwned)[i]].fqn.indexOf('.') === -1) {
                    this.formData.namespaceName = this.namespaceOwned[Object.keys(this.namespaceOwned)[i]].fqn;
                    this.needRenew = true;
                    this.prepareTransaction();
                    return;
                }
            }
            this.resetNamespaceData();
        } else {
            this.resetNamespaceData();
        }
        this.prepareTransaction();
    }

    /**
     * Reset namespace data
     */
    resetNamespaceData() {
        this.namespaceOwned = {};
        this.formData.namespaceName = '';
        this.formData.namespaceParent = '';
    }

    /**
     * Get array of namespaces expiring in less than a month
     *
     * @param {array} elem - An array of namespaces
     *
     * @return {array} - An array of namespaces
     */
    getExpiringNamespaces(elem) {
        if (undefined === elem) return;
        let array = [];
        for (let i = 0; i < Object.keys(elem).length; i++) {
            if (elem[Object.keys(elem)[i]].height + 525600 - this._DataStore.chain.height <= 43200 && elem[Object.keys(elem)[i]].fqn.indexOf('.') === -1) {
                array.push(elem[Object.keys(elem)[i]]);
            }
        }
        return array;
    };

    /**
     * Prepare the transaction
     */
    prepareTransaction() {
        let entity = nem.model.transactions.prepare("namespaceProvisionTransaction")(this.common, this.formData, this._Wallet.network);
        // Store the prepared transaction
        this.preparedTransaction = entity;
        return entity;
    }

    /**
     * Check validity of namespace name
     *
     * @param {string} ns - A namespace name
     *
     * @return {boolean} - True if valid, false otherwise
     */
    namespaceIsValid(ns) {
        let isParent = this.formData.namespaceParent ? true : false;
        return Helpers.namespaceIsValid(ns, isParent);
    }

    /**
     * Prepare and broadcast the transaction to the network
     */
    send() {
        // Disable send button
        this.okPressed = true;

        // Get account private key for preparation or return
        if (!this._Wallet.decrypt(this.common)) return this.okPressed = false;

        // Build the entity to serialize
        let entity = this.prepareTransaction(this.common, this.formData);

        // Use wallet service to serialize and send
        this._Wallet.transact(this.common, entity).then(() => {
            this._$timeout(() => {
                // Enable send button
                this.okPressed = false;
                // Reset all
                this.init();
                return;
            });
        }, () => {
            this._$timeout(() => {
                // Delete private key in common
                this.common.privateKey = '';
                // Enable send button
                this.okPressed = false;
                return;
            });
        });
    }

    //// End methods region ////

}

export default RenewNamespacesCtrl;
'''
'''--- src/app/modules/namespaces/renew/renew.html ---
<div class="namespace-provision-page">
  <div class="container-fluid main">

    <div class="row">
      <div class="col-sm-8">
        <h2>{{ 'RENEW_NS_TITLE' | translate }}</h2>
      </div>
    </div>

    <div class="row">
      <div class="col-md-9 col-lg-7">

        <div class="panel-heading">
          <div class="tabDescription">
            <span ng-show="!$ctrl.formData.isMultisig">{{ 'NAMESPACE_PROVISION_NAME' | translate }}</span>
            <span ng-show="$ctrl.formData.isMultisig">{{ 'NAMESPACE_PROVISION_MULTISIG_NAME' | translate }}</span>
          </div>
          <ul class="nav nav-tabs">
            <li ng-class="$ctrl.formData.isMultisig ? '' : 'active'"><a ng-click="$ctrl.formData.isMultisig = false;$ctrl.updateCurrentAccountNS();">{{ 'GENERAL_TAB_NORMAL' | translate }}</a></li>
            <li ng-show="$ctrl._DataStore.account.metaData.meta.cosignatoryOf.length" ng-class="$ctrl.formData.isMultisig ? 'active' : ''"><a ng-click="$ctrl.formData.isMultisig = true;$ctrl.updateCurrentAccountNS();">{{ 'GENERAL_TAB_MULTISIG' | translate }}</a></li>
          </ul>
        </div>

        <div class="panel-body">

            <!-- Multisig select -->
            <multisig-select ng-show="$ctrl.formData.isMultisig" multisig-account="$ctrl.formData.multisigAccount" update-ctrl="$ctrl.updateCurrentAccountNS();"></multisig-select>

            <!-- List of renewable namespaces -->
            <fieldset class="form-group" ng-show="$ctrl.needRenew">
              <div class="input-group">
                <span class="input-group-btn">
                  <label>{{ 'GENERAL_NAMESPACES' | translate }}: </label>
                </span>
                <select class="form-control" ng-options="namespace.fqn as namespace.fqn for namespace in $ctrl.getExpiringNamespaces($ctrl.namespaceOwned)" ng-model="$ctrl.formData.namespaceName" ng-change="$ctrl.prepareTransaction()">
                  <option value="" selected disabled>{{ 'FORM_SELECT_NAMESPACE' | translate }}</option>
                </select>
              </div>
            </fieldset>

            <!-- Text if no renewable namespaces -->
            <fieldset class="form-group" ng-show="!$ctrl.needRenew">
              <div class="input-group">
                <span class="input-group-btn">
                  <label>{{ 'GENERAL_NAMESPACES' | translate }}: </label>
                </span>
                <input class="form-control" value="{{ 'RENEW_NS_NONE' | translate }}" disabled />
              </div>
            </fieldset>

            <!-- Namespace sink address -->
            <fieldset class="form-group">
              <div class="input-group">
                <span class="input-group-btn">
                  <label>{{ 'GENERAL_SINK_ADDRESS' | translate }}: </label>
                </span>
                <input type="text" class="form-control" ng-model="$ctrl.formData.rentalFeeSink" readOnly>
              </div>
            </fieldset>
            
            <!-- Transaction and rental fee -->
            <div class="row" class="dualFees">
              <div class="col-sm-6">
                <!-- Transaction fee -->
                <fee-input tx="$ctrl.preparedTransaction" is-multisig="$ctrl.formData.isMultisig"></fee-input>
              </div>
              <!-- Rental fee -->
              <div class="col-sm-6">
                <fieldset class="form-group">
                  <div class="input-group">
                    <span class="input-group-btn">
                      <label>{{ 'FORM_SIDE_BTN_RENTAL_FEE' | translate }}:</label>
                    </span>
                    <div class="form-control formFloat" readOnly>
                      <span class="feeAmount">
                        <span ng-show="$ctrl.formData.isMultisig">{{($ctrl.preparedTransaction.otherTrans.rentalFee | fmtNemValue)[0]}}.{{($ctrl.preparedTransaction.otherTrans.rentalFee | fmtNemValue)[1]}}</span>
                        <span ng-show="!$ctrl.formData.isMultisig">{{($ctrl.preparedTransaction.rentalFee | fmtNemValue)[0]}}.{{($ctrl.preparedTransaction.rentalFee | fmtNemValue)[1]}}</span>
                      </span>
                      <label class="floatRight"><small>XEM</small></label>
                    </div>
                  </div>
                </fieldset>
              </div>
            </div>

            <!-- Password Field -->
            <password-input common="$ctrl.common"></password-input>

            <!-- Send transaction -->
            <button class="btn btn-success pull-xs-right"
              type="submit" ng-disabled="$ctrl.okPressed || $ctrl._Wallet.algo !== 'trezor' && $ctrl._Wallet.algo !== 'ledger' && !$ctrl.common.password.length || !$ctrl.formData.namespaceName.length || !$ctrl.namespaceIsValid($ctrl.formData.namespaceName)" ng-click="$ctrl.send()">
              <i class="fa fa-angle-double-right"></i> {{ 'GENERAL_RENEW' | translate }}
            </button>
        </div>
      </div>

      <!-- Information panel -->
      <div class="col-md-3 col-lg-5">
        <div class="panel-heading">
          <h3>{{ 'RENEW_NS_INFORMATION_TITLE' | translate }}</h3>
        </div>
        <div class="panel-body">
          <h5>{{ 'RENEW_NS_INFORMATION_TITLE_1' | translate }}</h5>
          <p>{{ 'RENEW_NS_INFORMATION_1' | translate }}</p>
          <h5>{{ 'RENEW_NS_INFORMATION_TITLE_2' | translate }}</h5>
          <p>{{ 'RENEW_NS_INFORMATION_2' | translate }}</p>
          <h5>{{ 'RENEW_NS_INFORMATION_TITLE_3' | translate }}</h5>
          <p>{{ 'RENEW_NS_INFORMATION_3' | translate }}</p>
          <p>{{ 'RENEW_NS_INFORMATION_4' | translate }}</p>
        </div>
      </div>

    </div>
  </div>
</div>

'''
'''--- src/app/modules/offlineTransaction/broadcast/broadcast.config.js ---
function OfflineTransactionSendConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.offlineTransactionSend', {
            url: '/broadcast-offline-transaction',
            controller: 'OfflineTransactionSendCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/offlineTransaction/broadcast/broadcast.html',
            title: 'Oflline transaction - Broadcast',
            params: {
            	signedTransaction: ''
            }
        });

};

export default OfflineTransactionSendConfig;
'''
'''--- src/app/modules/offlineTransaction/broadcast/broadcast.controller.js ---
import nem from 'nem-sdk';

class OfflineTransactionSendCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Alert, AppConstants, $timeout, $state) {
        'ngInject';

        //// Module dependencies region ////

        this._Alert = Alert;
        this._AppConstants = AppConstants;
        this._$timeout = $timeout;
        this._$state = $state;

        //// End dependencies region ////

        /*if(/Firefox/.test(navigator.userAgent)) {
            this.hideScan = false;
        } else {
            this.hideScan = true;
        }*/

        // Initialization
        this.init();
    }

    //// Module methods region ////

    /**
     * Initialize module properties
     */
    init() {
        this.okPressed = false;
        this.network = this._AppConstants.defaultNetwork;
        // Available networks
        this.networks = nem.model.network.data;
        this.nodes = nem.model.nodes.mainnet;
        this.selectedNode = this.nodes[0].uri;
        this.transaction = this._$state.params.signedTransaction ? this._$state.params.signedTransaction : '';
        this.scanner = undefined;
    }

    changeNodes() {
        if (this.network == nem.model.network.data.mainnet.id) {
            this.nodes = nem.model.nodes.mainnet;
        } else if (this.network == nem.model.network.data.testnet.id) {
            this.nodes = nem.model.nodes.testnet;
        } else {
            this.nodes = nem.model.nodes.mijin;
        }
        this.selectedNode = this.nodes[0].uri;
        return;
    }

    /*showHideReader() {
        if(this.showReader === true) {
            this.showReader = false;
            this.scanner.stop();
            this.scanner = undefined;
        } else {
            this.showReader = true
            this.startReader();
        }
    }

    startReader() {
        this.scanner = new Instascan.Scanner({ video: document.getElementById('preview') });
        this.scanner.addListener('scan', (content) => {
            this._$timeout(() => {
                this.transaction = content;
                this.scanner.stop();
                this.showReader = false;
            });
        });
        Instascan.Camera.getCameras().then((cameras) => {
            if (cameras.length > 0) {
                this.scanner.start(cameras[0]);
            } else {
                console.error('No cameras found.');
            }
        }).catch((e) => {
            console.error(e);
        });
    }*/

    /**
     * Broadcast the transaction to the network
     */
    send() {
        this.okPressed = true;
        // Check form for errors
        if(!this.transaction) return;

        let endpoint = nem.model.objects.create("endpoint")(this.selectedNode, this.network === nem.model.network.data.mijin.id ? nem.model.nodes.mijinPort : nem.model.nodes.defaultPort);

        // Send
        nem.com.requests.transaction.announce(endpoint, this.transaction).then((res) => {
            this._$timeout(() => {
                // If res code >= 2, it's an error
                if (res.code >= 2) {
                    this._Alert.transactionError(res.message);
                } else {
                    this._Alert.transactionSuccess();
                    let audio = new Audio('vendors/ding.ogg');
                    audio.play();
                }
                // Enable send button
                this.okPressed = false;
                if (this._$state.params.signedTransaction) this._$state.params.signedTransaction = '';
                // Reset all
                this.init();
                return;
            });
        }, (err) => {
            this._$timeout(() => {
                if(err.code < 0) {
                    this._Alert.connectionError();
                }  else {
                    this._Alert.transactionError('Failed: '+ err.data.message);
                }
                // Enable send button
                this.okPressed = false;
                return;
            });
        })
    }

    //// End methods region ////

}

export default OfflineTransactionSendCtrl;
'''
'''--- src/app/modules/offlineTransaction/broadcast/broadcast.html ---
<div class="transferTransaction-page">
  <div class="container-fluid main">
    <div class="row">
      <div class="col-sm-8">
        <h2>{{'RELEASE_OFFLINE_TX_TITLE' | translate}}</h2>
      </div>
    </div>
    <div class="row">
      <div class="col-lg-6 col-md-12">
        <div class="panel-heading">
          <h3>{{'RELEASE_OFFLINE_TX_PARAMETERS' | translate}}</h3>
        </div>
        <!-- Transaction form -->
        <div class="panel-body">
          <fieldset class="form-group">
            <div class="input-group">
              <span class="input-group-btn">
                <label>{{'SIGNUP_NETWORK_SELECT' | translate}}: </label>
              </span>
              <select class="form-control" ng-model="$ctrl.network" ng-change="$ctrl.changeNodes()" ng-options="network.id as (network.id | toNetworkName) for network in $ctrl.networks">
                <option value="" disabled selected>{{'SIGNUP_NETWORK_SELECT' | translate}}</option>
              </select>
            </div>
          </fieldset>
          <fieldset class="form-group">
            <div class="input-group">
              <span class="input-group-btn">
                <label>{{ 'HEADER_NODE_SELECT' | translate }}: </label>
              </span>
              <select class="form-control" ng-model="$ctrl.selectedNode" ng-options="node.uri as (node.uri | toHostname) for node in $ctrl.nodes"><option value="" disabled selected>{{ 'HEADER_NODE_SELECT' | translate }}</option></select>
            </div>
          </fieldset>
          <fieldset class="form-group">
            <div class="input-group">
              <span class="input-group-btn">
                <label>{{ 'OFFLINE_TX_SIGNED' | translate }}: </label>
              </span>
              <textarea class="form-control" rows="8" cols="25" ng-model="$ctrl.transaction" style="white-space: normal;" ng-show="!$ctrl.showReader"></textarea>
              <!--<video id="preview" width="100%" height="250" ng-show="$ctrl.showReader"></video>
              <span class="input-group-addon btn" ng-click="$ctrl.showHideReader();" style="background-color:#444;color:#fff;cursor:pointer;border-left:1px solid #ccc;" ng-show="!$ctrl.hideScan"><i class="fa fa-qrcode" ></i></span>-->
            </div>
          </fieldset>
          <button class="btn btn-success" type="submit" ng-disabled="$ctrl.okPressed || !$ctrl.transaction" ng-click="$ctrl.send()">
            <i class="fa fa-send"></i> {{ 'GENERAL_SEND' | translate }}
          </button>
        </div>
      </div>

      <div class="col-lg-6 col-md-12">
        <div class="panel-heading">
            <h3>{{ 'GENERAL_INFORMATION' |  translate }}</h3>
        </div>
        <div class="panel-body">
          <p>{{ 'RELEASE_OFFLINE_TX_INFO_1' |  translate }}</p>
          <p>{{ 'RELEASE_OFFLINE_TX_INFO_2' |  translate }}</p>
          <p>{{ 'RELEASE_OFFLINE_TX_INFO_3' |  translate }}</p>
          <p>{{ 'RELEASE_OFFLINE_TX_INFO_4' |  translate }}</p>
        </div>
      </div>
    </div>
  </div>
</div>
'''
'''--- src/app/modules/offlineTransaction/create/create.config.js ---
function OfflineTransactionCreateConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.offlineTransactionCreate', {
            url: '/create-offline-transaction',
            controller: 'OfflineTransactionCreateCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/offlineTransaction/create/create.html',
            title: 'Oflline transaction - Create'
        });

};

export default OfflineTransactionCreateConfig;
'''
'''--- src/app/modules/offlineTransaction/create/create.controller.js ---
import nem from 'nem-sdk';
import Helpers from '../../../utils/helpers';

class OfflineTransactionCreateCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Wallet, Alert, DataStore, $state, $timeout, $localStorage, AddressBook) {
        'ngInject';

        //// Module dependencies region ////

        this._Alert = Alert;
        this._Wallet = Wallet;
        this._DataStore = DataStore;
        this._$state = $state;
        this._$timeout = $timeout;
        this._Helpers = Helpers;
        this._storage = $localStorage;
        this._AddressBook = AddressBook;

        //// End dependencies region ////

        // Initialization
        this.init();
    }

    //// Module methods region ////

    /**
     * Initialize module properties
     */
    init() {
        // Show warning if connection detected
        if (navigator.onLine) $('#connectionWarning').modal('show');
        // Get wallets from local storage or set an empty array
        this._storage.wallets = this._storage.wallets || [];
        if (this._storage.wallets.length) {
            //
            this.selectedWallet = this._storage.wallets[0];
            this.setAccount();
            this.setContacts();
            // Form is a transfer transaction object, pre-set recipient if any from state parameter
            this.formData = nem.model.objects.get("transferTransaction");
            // Mosaics are null by default
            this.formData.mosaics = null;
            // Set first multisig account if any
            this.formData.multisigAccount = '';
            // Switch between mosaic transfer and normal transfers
            this.isMosaicTransfer = false;
            // Prevent user to click twice on send when already processing
            this.okPressed = false;
            // Character counter
            this.charactersLeft = 1024;
            // Object to contain our password & private key data
            this.common = nem.model.objects.get("common");
            // Store the prepared transaction
            this.preparedTransaction = {};
            //
            this.resultSafeTransaction = "";
            // Update the fee in view
            this.prepareTransaction();
        }
    }

    /**
     * Show / Hide address book <select>
     */
    showHideAddressBook() {
        this.showContacts = this.showContacts ? this.showContacts = false : this.showContacts = true;
    }

    setContacts() {
        this.contacts = this._AddressBook.getContacts(this.selectedWallet);
    }

    setAccount() {
        this.selectedAccount = this.selectedWallet.accounts[0];
    }

    /**
     * Prepare the transaction
     */
    prepareTransaction() {
        // Create a new object to not affect the view
        let cleanTransferTransaction = nem.model.objects.get("transferTransaction");

        // Clean recipient
        cleanTransferTransaction.recipient = this.formData.recipient.toUpperCase().replace(/-/g, '');

        // Check entered amount
        if(!nem.utils.helpers.isTextAmountValid(this.formData.amount)) {
            return this._Alert.invalidAmount();
        } else {
            // Set cleaned amount
            cleanTransferTransaction.amount = nem.utils.helpers.cleanTextAmount(this.formData.amount);
        }

        // Set multisig, if selected
        if (this.formData.isMultisig) {
            cleanTransferTransaction.isMultisig = true;
            cleanTransferTransaction.multisigAccount = this.formData.multisigAccount;
        }

        // If user selected encrypted message
        if(this.formData.messageType === 2) {
            this._Alert.noEncryptedMessageOffline();
            this.formData.messageType = 1;
        }

        // Set recipient public key
        cleanTransferTransaction.recipientPublicKey = this.formData.recipientPublicKey;

        // Set the message
        cleanTransferTransaction.message = this.formData.message;
        cleanTransferTransaction.messageType = this.formData.messageType;

        // Prepare transaction object according to transfer type
        cleanTransferTransaction.mosaics = null;
        // Prepare
        let entity = nem.model.transactions.prepare("transferTransaction")(this.common, cleanTransferTransaction, this.selectedWallet.accounts[0].network);

        // Arrange message type if encrypted
        if(this.formData.messageType === 2) {
            if(this.formData.isMultisig) {
                entity.otherTrans.message.type = this.formData.messageType;
            } else {
                entity.message.type = this.formData.messageType;
            }
        }

        // Set the entity for fees in view
        this.preparedTransaction = entity;

        // Return prepared transaction
        return entity;
    }

    /**
     * Copy the signed transaction to clipboard
     */
    copyTransaction() {
        if(!this.resultSafeTransaction) return;
        let dummy = document.createElement("input");
        document.body.appendChild(dummy);
        dummy.setAttribute("id", "dummy_id");
        dummy.setAttribute('value', this.resultSafeTransaction);
        dummy.select();
        document.execCommand("copy");
        document.body.removeChild(dummy);
        this._Alert.signedTxCopySuccess();
    }

    /**
     * Generate a transaction QR
     */
    generateTransactionQR() {
        // Account info model for QR
        let code = kjua({
            size: 300,
            text: this.resultSafeTransaction,
            fill: '#000',
            quiet: 0,
            ratio: 2,
            ecLevel: 'L'
        });
        $('#signedTransactionQR').html("");
        $('#signedTransactionQR').append(code);
        return;
}

    /**
     * Create the signed transaction
     */
    create() {
        // Disable send button
        this.okPressed = true;

        // Get account private key for preparation or return
        let primary = this.selectedWallet.accounts[0];
        if (!this._Wallet.decrypt(this.common, this.selectedAccount, primary.algo, primary.network)) return this.okPressed = false;

        // Prepare the transaction
        let entity = this.prepareTransaction();

        // Sending will be blocked if recipient is an exchange and no message set
        if (!this._Helpers.isValidForExchanges(entity)) {
            this.okPressed = false;
            this._Alert.exchangeNeedsMessage();
            return;
        }

        // Create a key pair object from private key
        let kp = nem.crypto.keyPair.create(nem.utils.helpers.fixPrivateKey(this.common.privateKey));

        // Serialize the transaction
        let serialized = nem.utils.serialization.serializeTransaction(entity);

        // Sign the serialized transaction with keypair object
        let signature = kp.sign(serialized);

        // Build the object to send
        this.resultSafeTransaction = JSON.stringify({
            'data': nem.utils.convert.ua2hex(serialized),
            'signature': signature.toString()
        });

        this.generateTransactionQR();

        this.okPressed = false;
    }

    //// End methods region ////

}

export default OfflineTransactionCreateCtrl;
'''
'''--- src/app/modules/offlineTransaction/create/create.html ---
<div class="transferTransaction-page">
  <div class="container-fluid main">
    <div class="row">
      <div class="col-sm-8">
        <h2>{{ 'OFFLINE_TX_TITLE' | translate }}</h2>
      </div>
    </div>
    <div class="row">
      <div class="col-lg-6 col-md-12">
        <div class="panel-heading">
          <div class="tabDescription">
            <!-- Title of panel -->
            <span ng-show="!$ctrl.formData.isMultisig">{{ 'TRANSFER_TRANSACTION_NAME' | translate }}</span>
            <span ng-show="$ctrl.formData.isMultisig ">{{ 'TRANSFER_TRANSACTION_MULTISIG_NAME' | translate }}</span>
          </div>
          <!-- Tabbed modes -->
          <ul class="nav nav-tabs"></ul>
        </div>
        <!-- Transaction form -->
        <div class="panel-body" ng-if="$ctrl.selectedWallet">
          <!-- Wallet select -->
          <fieldset class="form-group">
            <div class="input-group">
              <span class="input-group-btn">
                <label>{{ 'LOGIN_SELECT_WALLET_YOURS' | translate }}:</label>
              </span>
              <select class="form-control" ng-model="$ctrl.selectedWallet" ng-options="wallet.name group by (wallet.accounts[0].network | toNetworkName) for wallet in $ctrl._storage.wallets" ng-change="$ctrl.setAccount();$ctrl.setContacts();">
                <option value="" disabled selected>{{ 'LOGIN_SELECT_WALLET' | translate }}</option>
              </select>
            </div>
          </fieldset>
           <!--Account select -->
            <fieldset class="form-group" ng-show="$ctrl.selectedWallet">
              <div class="input-group">
                <span class="input-group-btn">
                  <label>{{ 'GENERAL_SELECT_ACCOUNT' | translate }}: </label>
                </span>
                <select class="form-control" ng-options="account as (account.label || account.address) for (index, account) in $ctrl.selectedWallet.accounts" ng-model="$ctrl.selectedAccount" ng-change="$ctrl.prepareTransaction();">
                  <option value="" disabled selected>{{ 'GENERAL_SELECT_ACCOUNT' | translate }}</option>
                </select>
              </div>
            </fieldset>
          <!-- Multisig select -->
          <multisig-select ng-show="$ctrl.formData.isMultisig" multisig-account="$ctrl.formData.multisigAccount"></multisig-select>
          <!-- Recipient address -->
          <fieldset class="form-group">
            <div class="input-group">
              <span class="input-group-btn">
                <label>{{'GENERAL_TO' | translate}}:</label>
              </span>
              <input ng-show="!$ctrl.showContacts" class="form-control" type="text" ng-model="$ctrl.formData.recipient"/>
              <select ng-show="$ctrl.showContacts" class="form-control form-control-lg" ng-model="$ctrl.formData.recipient" ng-options="contact.address as contact.label for contact in $ctrl.contacts" ng-change="$ctrl.showContacts = false;">
                <option value="" disabled selected>{{ 'FORM_SELECT_CONTACT' | translate }}</option>
              </select>
              <span class="input-group-btn" style="min-width: 0;">
                <button type="button" class="btn btn-warning" data-toggle="tooltip" data-trigger="hover" data-placement="bottom" title="{{ 'FORM_BTN_OPEN_ADB' | translate }}" ng-click="$ctrl.showHideAddressBook();">
                  <i class="fa">&#xf2b9;</i>
                </button>
              </span>
            </div>
          </fieldset>
          <!-- Amount of XEM to send -->
          <fieldset class="form-group">
            <div class="input-group">
              <span class="input-group-btn">
                  <label>{{'GENERAL_AMOUNT' | translate}}: </label>
                </span>
              <div class="form-control formFloat">
                <input type="text" ng-model="$ctrl.formData.amount" maxlength="17" ng-change="$ctrl.prepareTransaction();" />
                <label class="floatRight"><small>XEM</small></label>
              </div>
            </div>
          </fieldset>
          <!-- Message Field -->
          <message-area message="$ctrl.formData.message" message-type="$ctrl.formData.messageType" characters-left="$ctrl.charactersLeft" update-ctrl="$ctrl.prepareTransaction();"></message-area>
          <!-- Transaction fee -->
          <fee-input tx="$ctrl.preparedTransaction" is-multisig="$ctrl.formData.isMultisig"></fee-input>
          <!-- Password Field -->
          <password-input common="$ctrl.common"></password-input>
          <!-- Send button is disabled if already pressed or no password or no clean recipient address or message is supposed to be encrypted but no recipient public key or if amount is invalid or if characters left are negative or if hex message is not hex only -->
          <button class="btn btn-success" type="submit" ng-disabled="$ctrl.okPressed || !$ctrl.common.password.length || $ctrl.formData.recipient.length !== 40 && $ctrl.formData.recipient.length !== 46 || $ctrl.formData.messageType === 2 && $ctrl.formData.recipientPublicKey.length !== 64 || !$ctrl._Helpers.isTextAmountValid($ctrl.formData.amount) || $ctrl.charactersLeft < 0 || $ctrl.formData.messageType === 0 && $ctrl.formData.message.length && !$ctrl._Helpers.isHexadecimal($ctrl.formData.message)" ng-click="$ctrl.create()">
            <i class="fa fa-plus"></i> {{ 'GENERAL_CREATE' | translate }}
          </button>
          </fieldset>
        </div>
        <div class="panel-body" ng-if="!$ctrl.selectedWallet">
          <p><i class="fa fa-exclamation-triangle" ></i> {{ 'OFFLINE_TX_NO_WALLET' | translate }}</p>
        </div>
      </div>

      <div class="col-lg-6 col-md-12">
        <div class="panel-heading">
            <h3>{{ 'GENERAL_INFORMATION' |  translate }}</h3>
        </div>
        <div class="panel-body">
          <p ng-bind-html=" 'OFFLINE_TX_INFO_1' | translate"></p>
          <p>{{ 'OFFLINE_TX_INFO_2' | translate }}</p>
          <p>{{ 'OFFLINE_TX_INFO_3' | translate }}</p>
          <p>{{ 'OFFLINE_TX_INFO_4' | translate }}</p>
        </div>

        <div class="panel-heading">
            <h3>{{ 'OFFLINE_TX_SIGNED' | translate }}</h3>
        </div>
        <div class="panel-body">
          <fieldset class="form-group">
            <div class="input-group">
              <textarea class="form-control" rows="5" cols="25" ng-model="$ctrl.resultSafeTransaction" style="white-space: normal;" ng-show="!$ctrl.showQr" readOnly></textarea>
              <div class="text-center" id="signedTransactionQR" ng-show="$ctrl.showQr"></div>
              <span class="input-group-addon btn" ng-click="$ctrl.copyTransaction();" style="background-color:#444;color:#fff;cursor:pointer;border-left:1px solid #ccc;"><i class="fa fa-clipboard" ></i></span>
              <span class="input-group-addon btn" ng-click="$ctrl.showQr === true ? $ctrl.showQr = false : $ctrl.showQr = true;" style="background-color:#444;color:#fff;cursor:pointer;border-left:1px solid #ccc;"><i class="fa fa-qrcode" ></i></span>
            </div>
          </fieldset>
          <button class="btn btn-success" ui-sref="app.offlineTransactionSend({signedTransaction: $ctrl.resultSafeTransaction})" ng-show="!$ctrl.showQr"><i class="fa fa-angle-double-right"></i> {{ 'OFFLINE_TX_RELEASE' | translate }}</button>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Modal -->
<div class="modal fade" id="connectionWarning" role="dialog">
  <div class="modal-dialog">

    <!-- Modal content-->
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
      </div>
      <div class="modal-body text-center" style="color:#444">
        <img src="images/logomark.png" style="width: 125px;" />
        <hr>
        <p class="bg-danger"><i class="fa fa-exclamation-triangle"></i> <span ng-bind-html="'OFFLINE_TX_MODAL_ALERT' | translate"></span></p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">{{ 'GENERAL_CLOSE' | translate }}</button>
      </div>
    </div>

  </div>
</div>
'''
'''--- src/app/modules/offlineTransaction/index.js ---
import angular from 'angular';

// Create the module where our functionality can attach to
let offlineTransactionCreateModule = angular.module('app.offlineTransactionCreate', []);

// Include our UI-Router config settings
import OfflineTransactionCreateConfig from './create/create.config';
offlineTransactionCreateModule.config(OfflineTransactionCreateConfig);

// Controllers
import OfflineTransactionCreateCtrl from './create/create.controller';
offlineTransactionCreateModule.controller('OfflineTransactionCreateCtrl', OfflineTransactionCreateCtrl);

// Create the module where our functionality can attach to
let offlineTransactionSendModule = angular.module('app.offlineTransactionSend', []);

// Include our UI-Router config settings
import OfflineTransactionSendConfig from './broadcast/broadcast.config';
offlineTransactionSendModule.config(OfflineTransactionSendConfig);

// Controllers
import OfflineTransactionSendCtrl from './broadcast/broadcast.controller';
offlineTransactionSendModule.controller('OfflineTransactionSendCtrl', OfflineTransactionSendCtrl);

export default offlineTransactionCreateModule;

'''
'''--- src/app/modules/portal/index.js ---
import angular from 'angular';

// Create the module where our functionality can attach to
let portalModule = angular.module('app.portal', []);

// Include our UI-Router config settings
import PortalConfig from './portal.config';
portalModule.config(PortalConfig);

// Controllers
import PortalCtrl from './portal.controller';
portalModule.controller('PortalCtrl', PortalCtrl);

export default portalModule;

'''
'''--- src/app/modules/portal/portal.config.js ---
function PortalConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.portal', {
            url: '/services',
            controller: 'PortalCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/portal/portal.html',
            title: 'Services'
        });

};

export default PortalConfig;
'''
'''--- src/app/modules/portal/portal.controller.js ---
import Helpers from '../../utils/helpers';

class PortalCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Wallet, DataStore) {
        'ngInject';

        //// Module dependencies region ////

        this._Wallet = Wallet;
        this._DataStore = DataStore;
        this._Helpers = Helpers;

        //// End dependencies region ////
    }

}

export default PortalCtrl;
'''
'''--- src/app/modules/portal/portal.html ---
<div class="services-page">
  <div class="container-fluid main">

    <div class="row">
      <div class="col-sm-9">
        <h2>{{ 'PORTAL_TITLE' | translate }}</h2>
      </div>

    </div>

    <div class="row portalWrap">
      <div class="col-sm-12 col-lg-9">

      <div class="row row1">

        <div class="col-sm-4">
          <div class="panel-heading row">
            <div class="col-sm-3">
              <i class="fa fa-user-plus fa-4x"></i>
            </div>
            <div class="col-sm-9">
              <h5>{{ 'PORTAL_MULTISIG_TITLE' | translate }}</h5>
            </div>
          </div>
          <div class="panel-body">
            <p>{{ 'PORTAL_MULTISIG_TEXT' | translate }}</p>
          </div>
          <div class="panelFooter">
            <button class="btn"  ui-sref="app.createMultisig">{{ 'PORTAL_MULTISIG_BTN_1' | translate }}</button>
            <br>
            <button class="btn" ng-disabled="!$ctrl._DataStore.account.metaData.meta.cosignatoryOf.length" ui-sref="app.editMultisig">{{ 'PORTAL_MULTISIG_BTN_2' | translate }}</button>
            <br>
            <button class="btn"  ui-sref="app.signMultisig">{{ 'PORTAL_MULTISIG_BTN_3' | translate }}</button>
          </div>
        </div>

        <div class="col-sm-4">
          <div class="panel-heading row">
            <div class="col-sm-3">
              <i class="fa fa-sitemap fa-4x"></i>
            </div>
            <div class="col-sm-9">
              <h5>{{ 'PORTAL_NS_TITLE' | translate }}</h5>
            </div>
          </div>
          <div class="panel-body">
            <p>{{ 'PORTAL_NS_TEXT' | translate }}</p>
          </div>
          <div class="panelFooter">
            <button class="btn" class="" ui-sref="app.namespaces">{{ 'PORTAL_NS_BTN' | translate }}</button>
            <br>
            <button class="btn" ui-sref="app.renewNamespaces">{{ 'RENEW_NS_TITLE' | translate }}</button>
          </div>
        </div>
        <div class="col-sm-4">
          <div class="">
            <div class="panel-heading row">
              <div class="col-sm-3">
                <i class="fa fa-chain fa-4x"></i>
              </div>
              <div class="col-sm-9">
                <h5>{{ 'PORTAL_HARVESTING_TITLE' | translate }}</h5>
              </div>
            </div>
            <div class="panel-body">
              <p>{{ 'PORTAL_HARVESTING_TEXT' | translate }}</p>
            </div>
            <div class="panelFooter">
              <button class="btn" ui-sref="app.importanceTransfer">{{ 'IMPORTANCE_TRANSFER_TITLE' | translate }}</button>
              <br>
              <button class="btn" ui-sref="app.multisigImportanceTransfer" ng-disabled="!$ctrl._DataStore.account.metaData.meta.cosignatoryOf.length || $ctrl._Wallet.algo === 'trezor' || $ctrl._Wallet.algo === 'ledger'">{{ 'IMPORTANCE_TRANSFER_MULTISIGNATURE_TITLE' | translate }}</button>
            </div>
          </div>
        </div>
      </div>

      <!-- SECOND ROW STARTS -->
      <div class="row row2">
        <div class="col-sm-4">
          <div class="panel-heading row">
            <div class="col-sm-3">
              <img src="images/apostille.png"/>
            </div>
            <div class="col-sm-9">
              <h5>{{ 'PORTAL_APOSTILLE_TITLE' | translate }}</h5>
            </div>
          </div>
          <div class="panel-body">
            <p>{{ 'PORTAL_APOSTILLE_TEXT' | translate }}</p>
          </div>
          <div class="panelFooter">
            <button class="btn" ui-sref="app.createApostille" ng-disabled="$ctrl._Wallet.algo === 'trezor' || $ctrl._Wallet.algo === 'ledger'">{{ 'PORTAL_APOSTILLE_BTN_1' | translate }}</button>
            <br>
            <button class="btn" ui-sref="app.auditApostille">{{ 'PORTAL_APOSTILLE_BTN_2' | translate }}</button>
            <br>
            <button class="btn" ui-sref="app.apostilleHistory">{{ 'GENERAL_HISTORY' | translate }}</button>
          </div>
        </div>
        <div class="col-sm-4">
          <div class="panel-heading row">
            <div class="col-sm-3">
              <i class="fa fa-th fa-4x"></i>
            </div>
            <div class="col-sm-9">
              <h5>{{ 'PORTAL_MOSAIC_TITLE' | translate }}</h5>
            </div>
          </div>
          <div class="panel-body">
            <p>{{ 'PORTAL_MOSAIC_TEXT' | translate }}</p>
          </div>
          <div class="panelFooter" >
            <button class="btn" ng-disabled="($ctrl._DataStore.account.metaData.account === undefined || $ctrl._DataStore.namespace.ownedBy[$ctrl._Wallet.currentAccount.address] === undefined && !$ctrl._DataStore.account.metaData.meta.cosignatoryOf.length)" ui-sref="app.createMosaic">{{ 'PORTAL_MOSAIC_BTN_1' | translate }}</button>
            <br>
            <button class="btn" ng-disabled="($ctrl._DataStore.account.metaData.account === undefined || $ctrl._Helpers.objectSize($ctrl._DataStore.mosaic.ownedBy[$ctrl._Wallet.currentAccount.address]) < 2 && !$ctrl._DataStore.account.metaData.meta.cosignatoryOf.length)" ui-sref="app.editMosaic">{{ 'PORTAL_MOSAIC_BTN_2' | translate }}</button>
          </div>
        </div>
        <div class="col-sm-4">
          <div class="panel-heading row">
            <div class="col-sm-3">
              <img src="images/symbol.jpg"/>
            </div>
            <div class="col-sm-9">
              <h5>{{ 'PORTAL_CATAPULTOPTIN_TITLE' | translate }}</h5>
            </div>
          </div>
          <div class="panel-body">
            <p>{{ 'PORTAL_CATAPULTOPTIN_TEXT' | translate }} <a href="https://nemplatform.com/symbol-migration" target="_blank" style="color: rgba(0, 0, 0, 0.4); text-decoration: underline;">{{ 'PORTAL_CATAPULTOPTIN_TEXT_LINK' | translate }}</a></p>
          </div>
          <div class="panelFooter">
            <p ng-hide="!$ctrl._DataStore.account.metaData.meta.cosignatories.length" class="text-danger">{{ 'PORTAL_CATAPULTOPTIN_MULTISIG_TEXT' | translate }}</p>
            <button class="btn" ui-sref="app.catapultOptin" ng-hide="$ctrl._DataStore.account.metaData.meta.cosignatories.length">{{ 'PORTAL_CATAPULTOPTIN_BTN_1' | translate }}</button>
          </div>
        </div>
      </div>
      <!-- THIRD ROW STARTS -->
      <div class="row row3">
        <div class="col-sm-4">
          <div class="panel-heading row">
            <div class="col-sm-3">
              <i class="fa fa-4x">&#xf2bb; </i>
            </div>
            <div class="col-sm-9">
              <h5>{{ 'ADDRESS_BOOK_TITLE' | translate }}</h5>
            </div>
          </div>
          <div class="panel-body">
            <p>{{ 'PORTAL_ADDRESS_BOOK_TEXT' | translate }}</p>
          </div>
          <div class="panelFooter">
            <button class="btn" ui-sref="app.addressBook">{{ 'PORTAL_ADDRESS_BOOK_BTN' | translate }}</button>
          </div>
        </div>
        <div class="col-sm-4">
          <div class="panel-heading row">
            <div class="col-sm-3">
              <i class="fa fa-4x fa-pie-chart" aria-hidden="true"></i>
            </div>
            <div class="col-sm-9">
              <h5>{{ 'PORTAL_VOTING_TITLE' | translate }}</h5>
            </div>
          </div>
          <div class="panel-body">
            <p>{{ 'PORTAL_VOTING_TEXT' | translate }}</p>
          </div>
          <div class="panelFooter">
            <button class="btn" ui-sref="app.votingPolls">{{ 'PORTAL_VOTING_BTN1' | translate }}</button>
            <br>
            <button class="btn" ui-sref="app.votingCreatePoll">{{ 'PORTAL_VOTING_BTN2' | translate }}</button>
          </div>
        </div>
        <div class="col-sm-4">
          <div class="panel-heading row">
            <div class="col-sm-3">
              <i class="fa fa-file-text fa-4x" aria-hidden="true"></i>
            </div>
            <div class="col-sm-9">
              <h5>{{ 'GENERAL_INVOICE' | translate }}</h5>
            </div>
          </div>
          <div class="panel-body">
            <p>{{ 'PORTAL_INVOICE_TEXT' | translate }}</p>
          </div>
          <div class="panelFooter">
            <button class="btn" ui-sref="app.invoice">{{ 'CREATE_INVOICE_TITLE' | translate }}</button>
          </div>
        </div>
      </div>
      <!-- FOURTH ROW STARTS -->
      <div class="row row4">
        <div class="col-sm-4">
          <div class="panel-heading row">
            <div class="col-sm-3">
              <i class="fa fa-envelope fa-4x" aria-hidden="true"></i>
            </div>
            <div class="col-sm-9">
              <h5>{{'CREATE_SIGNED_MSG_NAME' | translate}}</h5>
            </div>
          </div>
          <div class="panel-body">
            <p>{{'PORTAL_SIGNED_MSG_TEXT' | translate}}</p>
          </div>
          <div class="panelFooter">
            <button class="btn" ui-sref="app.signedMessageCreation" ng-disabled="$ctrl._Wallet.algo === 'ledger'">{{'CREATE_SIGNED_MSG_TITLE' | translate}}</button>
            <br>
            <button class="btn" ui-sref="app.signedMessageVerification" ng-disabled="$ctrl._Wallet.algo === 'ledger'">{{ 'VERIFY_SIGNED_MSG_TITLE' | translate }}</button>
          </div>
        </div>

        <div class="col-sm-4">
            <div class="panel-heading row">
              <div class="col-sm-3">
                  <img src="images\DNSlogo.png" />

              </div>
              <div class="col-sm-9">
                <h5>DNS</h5>
              </div>
            </div>
            <div class="panel-body">
              <p>{{'DNS_SHORT_DESC' | translate}}</p>
            </div>
            <div class="panelFooter">
                <button class="btn" ui-sref="app.dnsSearch">{{'DNS_SEARCH_DNS' | translate}}</button>
                <br>
                <button class="btn" ui-sref="app.domainNameSystem">{{'DNS_CONFIGURE' | translate}}</button>

            </div>
          </div>

          <!-- NEMonster -->
          <div class="col-sm-4">
            <div class="panel-heading row">
              <div class="col-sm-3">
                  <img src="images\LogoNEMonsters.png" />
              </div>
              <div class="col-sm-9">
                <h5>NEMonster</h5>
              </div>
            </div>
            <div class="panel-body">
              <p>{{'NEMONSTER_SHORT_DESC' | translate}}</p>
            </div>
            <div class="panelFooter">
                <button class="btn" ui-sref="app.NEMonster">{{'NEMONSTER_CATCH' | translate}}</button>
                <br>
            </div>
          </div>

      </div>

       <!-- FIFTH ROW STARTS -->
      <div class="row row4">

        <!-- CHANGELY -->
        <div class="col-sm-4">
          <div class="panel-heading row">
            <div class="col-sm-3">
              <img src="images/changellyRocket.png"/>
            </div>
            <div class="col-sm-9">
              <h5> {{ 'PORTAL_EXCHANGE_TITLE' | translate }}</h5>
            </div>
          </div>
          <div class="panel-body">
            <p>{{ 'PORTAL_EXCHANGE_TEXT' | translate }}</p>
          </div>
          <div class="panelFooter">
            <button class="btn" ui-sref="app.changelly">{{ 'PORTAL_EXCHANGE_BTN' | translate }} on Changelly</button>
            <!--<br>
            <button class="btn" ui-sref="app.shapeshift">{{ 'PORTAL_EXCHANGE_BTN' | translate }} on ShapeShift</button>-->
          </div>
        </div>

      </div>

    </div>

    <!-- MARKET INFO WIDGET -->
  	<div class="col-sm-12 col-lg-3">
      <market-data></market-data>
    </div>

  </div>
</div>
</div>

'''
'''--- src/app/modules/signedMessage/index.js ---
import angular from 'angular';

// Create the module where our functionality can attach to
let signedMessageCreationModule = angular.module('app.signedMessageCreation', []);

// Include our UI-Router config settings
import SignedMessageCreationConfig from './sign/sign.config';
signedMessageCreationModule.config(SignedMessageCreationConfig);

// Controllers
import SignedMessageCreationCtrl from './sign/sign.controller';
signedMessageCreationModule.controller('SignedMessageCreationCtrl', SignedMessageCreationCtrl);

// Create the module where our functionality can attach to
let signedMessageVerificationConfigModule = angular.module('app.signedMessageVerification', []);

// Include our UI-Router config settings
import SignedMessageVerificationConfig from './verify/verify.config';
signedMessageVerificationConfigModule.config(SignedMessageVerificationConfig);

// Controllers
import SignedMessageVerificationCtrl from './verify/verify.controller';
signedMessageVerificationConfigModule.controller('SignedMessageVerificationCtrl', SignedMessageVerificationCtrl);

export default signedMessageCreationModule;

'''
'''--- src/app/modules/signedMessage/sign/sign.config.js ---
function SignedMessageCreationConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.signedMessageCreation', {
            url: '/create-signed-message',
            controller: 'SignedMessageCreationCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/signedMessage/sign/sign.html',
            title: 'Create a signed message'
        });

};

export default SignedMessageCreationConfig;
'''
'''--- src/app/modules/signedMessage/sign/sign.controller.js ---
import nem from 'nem-sdk';

class SignedMessageCreationCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Wallet, Alert, $timeout) {
        'ngInject';

        //// Module dependencies region ////

        this._Alert = Alert;
        this._Wallet = Wallet;
        this._$timeout = $timeout;

        //// End dependencies region ////

        // Initialization
        this.init();
    }

    //// Module methods region ////

    /**
     * Initialize module properties
     */
    init() {
        this.okPressed = false;
        // Object to contain our password & private key data
        this.common = nem.model.objects.get("common");
        this.message = "";
        this.signedMessage = "";
    }

    /**
     * Copy the signed message to clipboard
     */
    copyMessage() {
        if(!this.signedMessage) return;
        let dummy = document.createElement("input");
        document.body.appendChild(dummy);
        dummy.setAttribute("id", "dummy_id");
        dummy.setAttribute('value', this.signedMessage);
        dummy.select();
        document.execCommand("copy");
        document.body.removeChild(dummy);
        this._Alert.signedMsgCopySuccess();
    }

    /**
     * Create the signed message
     */
    sign() {
        // Disable verify button
        this.okPressed = true;

        if (!this.message) return this.okPressed = false;

        // Get account private key
        if (!this._Wallet.decrypt(this.common)) return this.okPressed = false;

        let message = nem.utils.convert.utf8ToHex(this.message.toString());

        // Create a key pair object from private key
        let kp = nem.crypto.keyPair.create(nem.utils.helpers.fixPrivateKey(this.common.privateKey));

        // Sign the message with keypair object
        let signature = kp.sign(message);

        this.signedMessage = JSON.stringify({
            'message': message,
            'signer': kp.publicKey.toString(),
            'signature': signature.toString()
        });

        this.okPressed = false;
    }

    //// End methods region ////

}

export default SignedMessageCreationCtrl;
'''
'''--- src/app/modules/signedMessage/sign/sign.html ---
<div class="transferTransaction-page">
  <div class="container-fluid main">
    <div class="row">
      <div class="col-sm-8">
        <h2>{{'CREATE_SIGNED_MSG_TITLE' | translate}}</h2>
      </div>
    </div>
    <div class="row">
      <div class="col-lg-6 col-md-12">
        <div class="panel-heading">
          <div class="tabDescription">
            <!-- Title of panel -->
            <span><br></span>
          </div>
          <!-- Tabbed modes -->
          <ul class="nav nav-tabs"></ul>
        </div>
        <div class="panel-body">
          <fieldset class="form-group">
            <div class="input-group">
              <span class="input-group-btn message">
                  <label>{{'GENERAL_MESSAGE' | translate}}: </label>
              </span>
              <input class="form-control" type="text" ng-model="$ctrl.message" placeholder="{{'FORM_MESSAGE_PLACEHOLDER' | translate}}"/>
              <!--<textarea class="form-control" ng-model="$ctrl.message" placeholder="{{'FORM_MESSAGE_PLACEHOLDER' | translate}}" rows="4"></textarea>-->
            </div>
          </fieldset>
          <!-- Password Field -->
          <password-input common="$ctrl.common"></password-input>
          <button class="btn btn-success" ng-click="$ctrl.sign()" ng-disabled="!$ctrl.common.password || !$ctrl.message" ><i class="fa fa-angle-double-right"></i> {{'CREATE_SIGNED_MSG_SIGN' | translate}}</button>
        </div>
      </div>

      <div class="col-lg-6 col-md-12">
        <!--<div class="panel-heading">
            <h3>{{ 'GENERAL_INFORMATION' |  translate }}</h3>
        </div>
        <div class="panel-body">
          <p></p>
        </div>-->

        <div class="panel-heading">
            <h3>{{'CREATE_SIGNED_MSG_NAME' | translate}}</h3>
        </div>
        <div class="panel-body">
          <fieldset class="form-group">
            <div class="input-group">
              <textarea class="form-control" rows="5" cols="25" ng-model="$ctrl.signedMessage" style="white-space: normal;overflow: auto;" readOnly></textarea>
              <span class="input-group-addon btn" ng-click="$ctrl.copyMessage();" style="background-color:#444;color:#fff;cursor:pointer;border-left:1px solid #ccc;"><i class="fa fa-clipboard" ></i></span>
            </div>
          </fieldset>
        </div>
      </div>
    </div>
  </div>
</div>
'''
'''--- src/app/modules/signedMessage/verify/verify.config.js ---
function SignedMessageVerificationConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.signedMessageVerification', {
            url: '/verify-signed-message',
            controller: 'SignedMessageVerificationCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/signedMessage/verify/verify.html',
            title: 'Verify a signed message'
        });

};

export default SignedMessageVerificationConfig;
'''
'''--- src/app/modules/signedMessage/verify/verify.controller.js ---
import nem from 'nem-sdk';

class SignedMessageVerificationCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Alert, $timeout, Wallet) {
        'ngInject';

        //// Module dependencies region ////

        this._Alert = Alert;
        this._$timeout = $timeout;
        this._Wallet = Wallet;

        //// End dependencies region ////

        // Initialization
        this.init();
    }

    //// Module methods region ////

    /**
     * Initialize module properties
     */
    init() {
        this.okPressed = false;
        this.signedMessage = "";
        this.invalidObject = false;
    }

    /**
     * Verify signed message
     */
    verify() {
        this.okPressed = true;
        this.invalidObject = false;

        let signedMessage;

        try {
            signedMessage = JSON.parse(this.signedMessage);
        } catch (e) {
            this.result = {};
            this.invalidObject = true;
            return this.okPressed = false;
        }

        this.result = {
            "signer": signedMessage.signer,
            "message": nem.utils.format.hexMessage({"type": 1, "payload": signedMessage.message}),
            "signature": signedMessage.signature,
            "isValid": nem.crypto.verifySignature(signedMessage.signer, signedMessage.message, signedMessage.signature)
        }

        this.okPressed = false;
    }

    //// End methods region ////

}

export default SignedMessageVerificationCtrl;
'''
'''--- src/app/modules/signedMessage/verify/verify.html ---
<div class="transferTransaction-page">
  <div class="container-fluid main">
    <div class="row">
      <div class="col-sm-8">
        <h2>{{ 'VERIFY_SIGNED_MSG_TITLE' | translate }}</h2>
      </div>
    </div>
    <div class="row">
      <div class="col-lg-6 col-md-12">
        <div class="panel-heading">
          <span><br></span>
        </div>
        <div class="panel-body">
          <fieldset class="form-group">
            <div class="input-group">
              <span class="input-group-btn message">
                <label>{{'CREATE_SIGNED_MSG_NAME' | translate}}: </label>
              </span>
              <textarea class="form-control" rows="5" cols="25" ng-model="$ctrl.signedMessage" style="white-space: normal;"></textarea>
            </div>
          </fieldset>
          <button class="btn btn-success" type="submit" ng-disabled="$ctrl.okPressed || !$ctrl.signedMessage" ng-click="$ctrl.verify()">
            <i class="fa fa-angle-double-right"></i> {{ 'GENERAL_VERIFY' | translate }}
          </button>
        </div>
      </div>

      <div class="col-lg-6 col-md-12">
        <div class="panel-heading">
            <h3>{{ 'GENERAL_RESULT' | translate }}</h3>
        </div>
        <div class="panel-body">
          <fieldset class="form-group">
            <div class="input-group">
              <span class="input-group-btn">
                  <label>{{ 'GENERAL_ACCOUNT' | translate }}: </label>
              </span>
              <input class="form-control" type="text" value="{{ $ctrl.result.signer | fmtPubToAddress:$ctrl._Wallet.network}}" readOnly/>
            </div>
          </fieldset>
          <fieldset class="form-group">
            <div class="input-group">
              <span class="input-group-btn">
                  <label>{{ 'GENERAL_PUBLIC_KEY' | translate }}: </label>
              </span>
              <input class="form-control" type="text" ng-model="$ctrl.result.signer" readOnly/>
            </div>
          </fieldset>
          <fieldset class="form-group">
            <div class="input-group">
              <span class="input-group-btn">
                  <label>{{ 'GENERAL_MESSAGE' | translate }}: </label>
              </span>
              <input class="form-control" type="text" ng-model="$ctrl.result.message" readOnly/>
            </div>
          </fieldset>
          <fieldset class="form-group">
            <div class="input-group">
              <span class="input-group-btn">
                  <label>{{ 'GENERAL_SIGNATURE' | translate }}: </label>
              </span>
              <input class="form-control" type="text" ng-model="$ctrl.result.signature" readOnly/>
            </div>
          </fieldset>
          <fieldset class="form-group" ng-show="!$ctrl.invalidObject">
              <p class="bg-success" style="padding: 10px;text-align: center;" ng-show="$ctrl.result && $ctrl.result.isValid"><i class="fa fa-check"></i> {{ 'VERIFY_SIGNED_MSG_SIG_VALID' | translate }}</p>
              <p class="bg-danger" style="padding: 10px;text-align: center;" ng-show="$ctrl.result && !$ctrl.result.isValid"><i class="fa fa-times"></i> <span ng-bind-html="'VERIFY_SIGNED_MSG_SIG_NOT_VALID' | translate"></span></p>
          </fieldset>
          <fieldset class="form-group" ng-show="$ctrl.invalidObject">
              <p class="bg-danger" style="padding: 10px;text-align: center;"><i class="fa fa-times"></i> {{ 'VERIFY_SIGNED_MSG_NOT_VALID' | translate }}</p>
          </fieldset>
        </div>
      </div>
    </div>
  </div>
</div>
'''
'''--- src/app/modules/signup/index.js ---
import angular from 'angular';

// Create the module where our functionality can attach to
let signupModule = angular.module('app.signup', []);

// Include our UI-Router config settings
import SignupConfig from './signup.config';
signupModule.config(SignupConfig);

// Controllers
import SignupCtrl from './signup.controller';
signupModule.controller('SignupCtrl', SignupCtrl);

export default signupModule;

'''
'''--- src/app/modules/signup/signup.config.js ---
function SignupConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.signup', {
            url: '/signup',
            controller: 'SignupCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/signup/signup.html',
            title: 'Signup'
        });

};

export default SignupConfig;
'''
'''--- src/app/modules/signup/signup.controller.js ---
import nem from 'nem-sdk';
import Helpers from '../../utils/helpers';
import zxcvbn from 'zxcvbn';

class SignupCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(AppConstants, $state, Alert, WalletBuilder, $localStorage, $timeout, $scope, Wallet, AddressBook) {
        'ngInject';

        //// Module dependencies region ////

        this._storage = $localStorage;
        this._Alert = Alert;
        this._WalletBuilder = WalletBuilder;
        this._$state = $state;
        this._AppConstants = AppConstants;
        this._$timeout = $timeout;
        this._Wallet = Wallet;
        this._AddressBook = AddressBook;

        //// End dependencies region ////

        //// Module properties region ////

        // Default network
        this.network = this._AppConstants.defaultNetwork;

        // Available networks
        this.networks = nem.model.network.data;

        // Get wallets from local storage or set an empty array
        this._storage.wallets = this._storage.wallets || [];

        // Lock to prevent user to click twice on button when already processing
        this.okPressed = false;

        // Raw wallet data to show in view
        this.rawWallet = "";

        // Wallet private key to show in view
        this.walletPrivateKey = "";

        // Store created wallet temporarily
        this.tempWallet = {};

        // Form data object
        this.formData = {};
        this.formData.password = "";
        this.formData.confirmPassword = "";
        this.formData.walletName = "";
        this.formData.privateKey = "";
        this.formData.entropy = "";

        // Address generated by provided private key (private key wallet)
        this.generatedAddress = "";

        // Wallet types
        this.walletTypes = [{
            "type": 1 // Simple
        }, {
            "type": 2 // Brain
        }, {
            "type": 3 // Private key
        }];

        // Selected wallet type
        this._selectedType = undefined;

        // Password strength info given by zxcvbn
        this.passwordStrengthInfo = {};

        //// End properties region ////
        
        // Will stop catching entropy if user change page in the middle of movement capture
        $scope.$on("$destroy", () => {
            $("html").off('mousemove');
        });
    }

    //// Module methods region ////

    /**
     * Change the selected wallet type
     *
     * @param {number} type - Type number
     */
    changeWalletType(type) {
        this._selectedType = this.walletTypes[type - 1];
    }

    /**
     * Change wallet network
     *
     * @param {number} id - The network id to use at wallet creation
     */
    changeNetwork(id) {
        if (id == nem.model.network.data.mijin.id && this._AppConstants.mijinDisabled) {
            this._Alert.mijinDisabled();
            // Reset network to default
            this.network = this._AppConstants.defaultNetwork;
            return;
        } else if (id == nem.model.network.data.mainnet.id && this._AppConstants.mainnetDisabled) {
            this._Alert.mainnetDisabled();
            // Reset network to default
            this.network = this._AppConstants.defaultNetwork;
            return;
        }
        // Set Network
        this.network = id;
    }

    /**
     * Arrange wallet data to show in safety protocol
     *
     * @param {object} wallet - A wallet object
     */
    arrangeSafetyProtocol(wallet) {
        // Store wallet temporarily until safety protocol done
        this.tempWallet = wallet;
        // Prepare download
        this._Wallet.prepareDownload(wallet);
        // Store base64 format for safety protocol
        this.rawWallet = this._Wallet.base64Encode(wallet);
        // Unlock button
        this.okPressed = false;
        return;
    }

    /**
     * Create a new PRNG wallet
     */
    createWallet() {
        // Check if passwords match
        if (!this.checkPasswordsMatch()) return;

        // Lock button
        this.okPressed = true;

        // Create the wallet from form data
        return this._WalletBuilder.createWallet(this.formData.walletName, this.formData.password, this.formData.entropy, this.network).then((wallet) => {
            this._$timeout(() => {
                if (wallet && typeof wallet === 'object') {
                    //
                    this.arrangeSafetyProtocol(wallet);
                    // We need private key for view so we create a common object with the wallet password
                    let common = nem.model.objects.create("common")(this.formData.password, "");
                    // Decrypt / generate and check primary
                    if (!this._Wallet.decrypt(common, wallet.accounts[0], wallet.accounts[0].algo, wallet.accounts[0].network)) {
                        // Enable send button
                        this.okPressed = false;
                        return;
                    } else {
                        // Set the decrypted private key for view
                        this.walletPrivateKey = common.privateKey;
                    }
                    // Hide step
                    this.step4 = false;
                    // Show next step
                    this.step5 = true;
                    return;
                }
            }, 10);
        },
        (err) => {
            // Unlock button
            this.okPressed = false;
            return;
        });
    }

    /**
     * Create a new brain wallet
     */
    /*createBrainWallet() {
        // Check if passwords match
        if (!this.checkPasswordsMatch()) return;

        // Mainnet passphrase must be at least 40 characters long
        if (this.network === nem.model.network.data.mainnet.id && this.formData.password.length < 40) {
            this._Alert.brainPasswordTooShort();
            return;
        }

        // Mainnet passphrase must have a score of at least 3/4
        if (this.network === nem.model.network.data.mainnet.id && zxcvbn(this.formData.password).score < 3) {
            this._Alert.passphraseIsWeak();
            return;
        }

        // Lock button
        this.okPressed = true;

        // Create the wallet from form data
        return this._WalletBuilder.createBrainWallet(this.formData.walletName, this.formData.password, this.network).then((wallet) => {
            this._$timeout(() => {
                if (wallet && typeof wallet === 'object') {
                    //
                    this.arrangeSafetyProtocol(wallet);
                    // Store private key for account safety protocol
                    this.walletPrivateKey = nem.crypto.helpers.derivePassSha(this.formData.password, 6000).priv;
                    // Hide step
                    this.step3 = false;
                    // Show next step
                    this.step5 = true;
                    return;
                }
            }, 10);
        },
        (err) => {
            // Unlock button
            this.okPressed = false;
            return;
        });
    }*/

    /**
     * Create a new private key wallet
     */
    createPrivateKeyWallet() {
        // Check if passwords match
        if (!this.checkPasswordsMatch()) return;

        // Lock button
        this.okPressed = true;

        // Create the wallet from form data
        return this._WalletBuilder.createPrivateKeyWallet(this.formData.walletName, this.formData.password, this.formData.privateKey, this.network).then((wallet) => {
            this._$timeout(() => {
                if (wallet && typeof wallet === 'object') {
                    //
                    this.arrangeSafetyProtocol(wallet);
                    this.walletPrivateKey = this.formData.privateKey;
                    // Hide step
                    this.step4 = false;
                    // Show next step
                    this.step5 = true;
                    return;
                }
            }, 10);
        },
        (err) => {
            // Unlock button
            this.okPressed = false;
            return;
        });
    }

    /**
     * Generate the address from private key to import
     */
    generateAddress() {
        if(undefined !== this.formData.privateKey && this.formData.privateKey.length) {
            // Check private key
            if (nem.utils.helpers.isPrivateKeyValid(this.formData.privateKey)) {
                // Create key pair
                let kp = nem.crypto.keyPair.create(this.formData.privateKey);
                // Create address to show
                this.generatedAddress = nem.model.address.toAddress(kp.publicKey.toString(), this.network);
            } else {
                // Reset address
                this.generatedAddress = "";
                // Show error alert
                this._Alert.invalidPrivateKey();
            }
        }
    }

    /**
     * Check if a wallet name is already present in local storage
     */
    checkWalletNamePresence() {
        if (Helpers.haveWallet(this.formData.walletName, this._storage.wallets)) return true;
        return false;
    }

    /**
     * Check if password and confirmation are the same
     */
    checkPasswordsMatch() {
        if (this.formData.password !== this.formData.confirmPassword) {
            this._Alert.passwordsNotMatching();
            return false;
        }
        return true;
    }

    /**
     * Hide signup steps / reset to wallet type selection
     */
    hideAllSteps() {
        this.start = false;
        this.step1 = false;
        this.step2 = false;
        this.step3 = false;
        this.step4 = false;
        this.progressBar = false;
        this.entropyDone = false;
        document.getElementById("pBar").style.width = '0%';
        this.formData.entropy = "";
    }

    /**
     * Watch cursor movements to add more entropy to key generation (simple wallet)
     */
    getEntropy() {
        // Prepare
        let elem = document.getElementById("pBar");
        let width = 0;
        let entropy = "";
        // Watch for cursor movements
        $("html").mousemove((e) => {
            //console.log("pos x: " + e.pageX);
            //console.log("pos y: " + e.pageY);
            if (width >= 100) {
                this._$timeout(() => {
                    // Stop catching cursor movements
                    $("html").off('mousemove');
                    elem.innerHTML = '<span class="fa fa-check-circle" aria-hidden="true"></span> Done!';
                    this.entropyDone = true;
                    this.formData.entropy = entropy;
                });
            } else {
                entropy += e.pageX + "" + e.pageY;
                width += 0.15; 
                elem.style.width = width + '%'; 
                elem.innerHTML = Math.round(width * 1)  + '%';
            }
        });
    }

    /**
     * Finalize signup process
     */
    endSignup() {
        // Store wallet temporarily until safety protocol done
        let wallet = this.tempWallet;
        // Add the account into address book
        this._AddressBook.addAccount(wallet.accounts[0].address);
        // Set wallet in local storage
        this._storage.wallets = this._storage.wallets.concat(wallet);
        // Show success alert
        this._Alert.createWalletSuccess();
        // Reset form data
        this.formData = {};
        this.step8 = false;
        this.step9 = true;
    }

    /**
     * Update the passphrase strength information
     */
    updatePasswordStrengthInfo() {
        this.passwordStrengthInfo = zxcvbn(this.formData.password);
    }

    //// End methods region ////

}

export default SignupCtrl;
'''
'''--- src/app/modules/signup/signup.html ---
<div class="signup-page">
  <div class="container">
    <div class="row text-center">
      <div class="col-md-12">
        <h1>{{'SIGNUP_TITLE' | translate}}</h1>
      </div>
    </div>
    <div class="col-md-12 text-center">
      <!-- Wallet type titles -->
      <div class="form-group text-center">
        <h4 ng-show="!$ctrl._selectedType">{{ 'SIGNUP_SELECT_WALLET_TYPE' | translate }}</h4>
        <h4 ng-show="$ctrl._selectedType.type === 1 && !($ctrl.step5 || $ctrl.step6 || $ctrl.step7 || $ctrl.step8)">{{ 'SIGNUP_CREATE_WALLET_BUTTON' | translate }}</h4>
        <h4 ng-show="$ctrl._selectedType.type === 2 && !($ctrl.step5 || $ctrl.step6 || $ctrl.step7 || $ctrl.step8)">{{ 'SIGNUP_BRAIN_WALLET_BUTTON' | translate }}</h4>
        <h4 ng-show="$ctrl._selectedType.type === 3 && !($ctrl.step5 || $ctrl.step6 || $ctrl.step7 || $ctrl.step8)">{{'SIGNUP_PRIVATE_KEY_WALLET_BUTTON' | translate}}</h4>
        <h4 ng-show="$ctrl._selectedType.type && ($ctrl.step5 || $ctrl.step6 || $ctrl.step7 || $ctrl.step8)">{{ 'SIGNUP_COMMON_WALLET_WARNING_TITLE' | translate }}</h4>
        <hr>
      </div>
      <!-- Wallet type buttons -->
      <div class="col-md-6 col-md-offset-3" ng-show="!$ctrl._selectedType">
        <button class="btn btn-primary" ng-click="$ctrl.changeWalletType(1);$ctrl.start = true;" ng-mouseover="$ctrl.showInfo = 1;">
          {{'SIGNUP_CREATE_WALLET_TITLE' | translate}}
        </button>
        <!--<button class="btn btn-primary" ng-click="$ctrl.changeWalletType(2);$ctrl.start = true;" ng-mouseover="$ctrl.showInfo = 2;">
          {{'SIGNUP_BRAIN_WALLET_TITLE' | translate}}
        </button>-->
        <button class="btn btn-primary" ng-click="$ctrl.changeWalletType(3);$ctrl.start = true;" ng-mouseover="$ctrl.showInfo = 3;">
          {{'SIGNUP_PRIVATE_KEY_WALLET_TITLE' | translate}}
        </button>
      </div>
      <!--<div class="col-md-4 col-md-offset-4 col-sm-6" ng-show="!$ctrl._selectedType">
        <hr>
        <button class="btn btn-lg btn-success btn-block" ui-sref="app.trezor">
              {{ 'TREZOR_BUTTON' | translate }}
        </button>
      </div>-->

    </div>

    <!-- Information about selected wallet type -->
    <div class="col-md-offset-3 col-md-6" ng-show="!$ctrl._selectedType">
      <hr>
      <div class="text-center" ng-show="!$ctrl.showInfo">
        <p>{{ 'SIGNUP_SELECT_WALLET_TYPE_STAND_BY' | translate }}</p>
      </div>
      <div ng-show="$ctrl.showInfo === 1">
        <p><span class="fa fa-info-circle" aria-hidden="true"></span> {{ 'SIGNUP_CREATE_WALLET_INFO' | translate }}</p>
        <p>
          <i class="fa fa-exclamation-triangle"></i>
          <span ng-bind-html="'SIGNUP_CREATE_WALLET_WARNING' | translate"></span>
        </p>
      </div>
      <div ng-show="$ctrl.showInfo === 2">
        <p><span class="fa fa-info-circle" aria-hidden="true"></span> {{'SIGNUP_BRAIN_WALLET_INFO' | translate}}</p>
        <p>
          <i class="fa fa-exclamation-triangle"></i>
          <span ng-bind-html="'SIGNUP_BRAIN_WALLET_WARNING' | translate"></span>
        </p>
      </div>
      <div ng-show="$ctrl.showInfo === 3">
        <p> <span class="fa fa-info-circle" aria-hidden="true"></span> {{'SIGNUP_PRIVATE_KEY_WALLET_INFO' | translate}}</p>
        <p>
          <i class="fa fa-exclamation-triangle"></i>
          <span ng-bind-html="'SIGNUP_PRIVATE_KEY_WALLET_WARNING' | translate"></span>
        </p>
      </div>
    </div>
    <!-- Start the signup process -->
    <div class="col-md-offset-3 col-md-6" ng-show="$ctrl.start">
      <div class="form-group">
        <p class="text-center"><span class="fa fa-exclamation-triangle" aria-hidden="true"></span> {{ 'SIGNUP_CREATE_START_WARNING' | translate }}</p>
        <p class="text-center">{{ 'SIGNUP_CREATE_START_CONNECTION_WARNING' | translate }}</p>
      </div>
      <div class="form-group">
        <hr style="border-color:#444;">
        <div class="row">
          <div class="col-md-2 col-sm-6">
            <button class="btn btn-dark" ng-click="$ctrl._selectedType = undefined;$ctrl.hideAllSteps();$ctrl.exitEntropy();" style="width:auto;" ng-show="!$ctrl.step5 && !$ctrl.step6 && !$ctrl.step7 && !$ctrl.step8"><span class="fa fa-chevron-left" aria-hidden="true"></span> {{ 'GENERAL_GO_BACK' | translate }}</button>
          </div>
          <div class="col-md-10 col-sm-6">
            <button class="btn btn-primary" style="width:100%;" ng-click="$ctrl.start = false;$ctrl.step1 = true;">{{ 'SIGNUP_CREATE_READY_BTN' | translate }}</button>
          </div>
        </div>
      </div>
    </div>
    <!-- 1st step: Select a network -->
    <div class="col-md-offset-3 col-md-6" ng-show="$ctrl.step1">
      <fieldset class="form-group">
        <p class="text-center">{{'SIGNUP_NETWORK_SELECT' | translate}}</p>
        <select class="form-control" ng-model="$ctrl.network" ng-change="$ctrl.changeNetwork($ctrl.network)" ng-options="network.id as (network.id | toNetworkName) for network in $ctrl.networks">
          <option value="" disabled selected>{{'SIGNUP_NETWORK_SELECT' | translate}}</option>
        </select>
      </fieldset>
      <div class="form-group text-center">
        <p ng-show="$ctrl.network === 104"><span ng-bind-html="'SIGNUP_NETWORK_MAINNET' | translate"></span></p>
        <p ng-show="$ctrl.network === -104"><span ng-bind-html="'SIGNUP_NETWORK_TESTNET' | translate"></span></p>
        <p ng-show="$ctrl.network === 96"><span ng-bind-html="'SIGNUP_NETWORK_MIJIN' | translate"></span></p>
      </div>
      <div class="form-group">
        <hr style="border-color:#444;">
        <div class="row">
          <div class="col-md-2 col-sm-6">
            <button class="btn btn-dark" ng-click="$ctrl._selectedType = undefined;$ctrl.hideAllSteps();$ctrl.exitEntropy();" style="width:auto;" ng-show="!$ctrl.step5 && !$ctrl.step6 && !$ctrl.step7 && !$ctrl.step8"><span class="fa fa-chevron-left" aria-hidden="true"></span> {{ 'GENERAL_GO_BACK' | translate }}</button>
          </div>
          <div class="col-md-10 col-sm-6">
            <button class="btn btn-primary" style="width:100%;" ng-click="$ctrl.step1 = false;$ctrl.step2 = true;">{{ 'GENERAL_NEXT' | translate }} <span class="fa fa-chevron-right" aria-hidden="true"></span></button>
          </div>
        </div>
      </div>
    </div>
    <!-- 2nd step: Enter a name -->
    <div class="col-md-offset-3 col-md-6" ng-show="$ctrl.step2">
      <fieldset class="form-group">
        <p class="text-center">{{ 'SIGNUP_CREATE_ENTER_NAME' | translate }}</p>
        <input class="form-control" type="text" placeholder="{{'FORM_WALLET_NAME_FIELD_PLACEHOLDER' | translate}}" ng-model="$ctrl.formData.walletName" />
      </fieldset>
      <div class="row form-group">
        <div class="col-md-2 col-sm-6">
          <button class="btn btn-dark" ng-click="$ctrl._selectedType = undefined;$ctrl.hideAllSteps();$ctrl.exitEntropy();" style="width:auto;" ng-show="!$ctrl.step5 && !$ctrl.step6 && !$ctrl.step7 && !$ctrl.step8"><span class="fa fa-chevron-left" aria-hidden="true"></span> {{ 'GENERAL_GO_BACK' | translate }}</button>
        </div>
        <div class="col-md-10 col-sm-6">
          <button class="btn btn-primary" style="width:100%;" ng-click="$ctrl.step2 = false;$ctrl.step3 = true;" ng-disabled="!$ctrl.formData.walletName || $ctrl.checkWalletNamePresence()">{{ 'GENERAL_NEXT' | translate }} <span class="fa fa-chevron-right" aria-hidden="true"></span></button>
        </div>
      </div>
    </div>
    <!-- 3rd step: Enter a password / passphrase -->
    <div class="col-md-offset-3 col-md-6" ng-show="$ctrl.step3">
      <!-- Password / passphrase field -->
      <fieldset class="form-group">
        <p class="text-center">{{ $ctrl._selectedType.type === 2 ? ('SIGNUP_CREATE_ENTER_PASSPHRASE' | translate) : ('SIGNUP_CREATE_ENTER_PASSWORD' | translate) }}</p>
        <div class="input-group">
          <input class="form-control" type="{{!$ctrl.showPassword ? 'password' : 'text'}}" placeholder="{{ $ctrl._selectedType.type === 2 ? ('FORM_PASSPHRASE_FIELD_PLACEHOLDER' | translate) : ('FORM_SIGNUP_PASSWORD_FIELD_PLACEHOLDER' | translate) }}" ng-model="$ctrl.formData.password" ng-change="$ctrl._selectedType.type === 2 ? $ctrl.updatePasswordStrengthInfo(): ''" />
          <span class="input-group-addon" ng-click="$ctrl.showPassword ? $ctrl.showPassword = false : $ctrl.showPassword = true">
                <span ng-show="!$ctrl.showPassword"><i class="fa fa-eye"></i></span>
          <span ng-show="$ctrl.showPassword"><i class="fa fa-eye-slash"></i></span>
          </span>
        </div>
      </fieldset>
      <!-- Password / passphrase confirmation field -->
      <fieldset class="form-group">
        <p class="text-center">{{ $ctrl._selectedType.type === 2 ? ('SIGNUP_CREATE_CONFIRM_PASSPHRASE' | translate) : ('SIGNUP_CREATE_CONFIRM_PASSWORD' | translate) }}</p>
        <input class="form-control" type="password" placeholder="{{ $ctrl._selectedType.type === 2 ? ('FORM_CONFIRM_PASSPHRASE_FIELD_PLACEHOLDER' | translate) : ('FORM_CONFIRM_PASSWORD_FIELD_PLACEHOLDER' | translate)}}" ng-model="$ctrl.formData.confirmPassword" />
      </fieldset>
      <!-- Strength estimation -->
      <fieldset class="form-group" ng-show="$ctrl._selectedType.type === 2">
        <p class="text-center">{{ 'SIGNUP_ESTIMATED_PASSPHRASE_STRENGTH' | translate }}</p>
        <br>
        <div class="progress" style="border-radius:0;">
          <div class="progress-bar progress-bar-danger" role="progressbar" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100" ng-style="{'width': ($ctrl.passwordStrengthInfo.score * 12.5) + '%' }">
            <span>{{ 'GENERAL_SCORE' | translate }}: {{$ctrl.passwordStrengthInfo.score}} / 4</span>
          </div>
          <div class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100" ng-style="{'width': $ctrl.formData.password.length < 40 ? ($ctrl.formData.password.length * 1.25) + '%' : '50%' }">
            <span>{{ 'GENERAL_LENGTH' | translate }}: {{$ctrl.formData.password.length}} / 40</span>
          </div>
        </div>
      </fieldset>
      <!-- -->
      <div class="row form-group">
        <div class="col-md-2 col-sm-6">
          <button class="btn btn-dark" ng-click="$ctrl._selectedType = undefined;$ctrl.hideAllSteps();$ctrl.exitEntropy();" style="width:auto;" ng-show="!$ctrl.step5 && !$ctrl.step6 && !$ctrl.step7 && !$ctrl.step8"><span class="fa fa-chevron-left" aria-hidden="true"></span> {{ 'GENERAL_GO_BACK' | translate }}</button>
        </div>
        <div class="col-md-10 col-sm-6" ng-show="$ctrl._selectedType.type === 1 || $ctrl._selectedType.type === 3">
          <button class="btn btn-primary" style="width:100%;" ng-click="$ctrl.step3 = false;$ctrl.step4 = true;" ng-disabled="!$ctrl.formData.password || !$ctrl.formData.confirmPassword || $ctrl.formData.password !== $ctrl.formData.confirmPassword || $ctrl.okPressed">{{ 'GENERAL_NEXT' | translate }} <span class="fa fa-chevron-right" aria-hidden="true"></span></button>
        </div>
        <div class="col-md-10 col-sm-6" ng-show="$ctrl._selectedType.type === 2">
          <button class="btn btn-primary" style="width:100%;" ng-click="$ctrl.createBrainWallet();" ng-disabled="!$ctrl.formData.password || !$ctrl.formData.confirmPassword || $ctrl.formData.password !== $ctrl.formData.confirmPassword || $ctrl.okPressed || $ctrl.formData.password.length < 40 || $ctrl.passwordStrengthInfo.score < 4">{{ 'GENERAL_NEXT' | translate }} <span class="fa fa-chevron-right" aria-hidden="true"></span></button>
        </div>
      </div>
    </div>
    <!-- 4th step (if simple wallet): Add entropy -->
    <div class="col-md-offset-3 col-md-6" ng-show="$ctrl.step4 && $ctrl._selectedType.type === 1">
      <div class="form-group">
        <p class="text-center" ng-bind-html="'SIGNUP_CREATE_WALLET_ADD_ENTROPY_INFO' | translate"></p>
      </div>
      <div class="form-group" ng-show="!$ctrl.progressBar">
        <hr style="border-color:#444;">
        <div class="row">
          <div class="col-md-2 col-sm-6">
            <button class="btn btn-dark" ng-click="$ctrl._selectedType = undefined;$ctrl.hideAllSteps();$ctrl.exitEntropy();" style="width:auto;" ng-show="!$ctrl.step5 && !$ctrl.step6 && !$ctrl.step7 && !$ctrl.step8"><span class="fa fa-chevron-left" aria-hidden="true"></span> {{ 'GENERAL_GO_BACK' | translate }}</button>
          </div>
          <div class="col-md-10 col-sm-6">
            <button class="btn btn-primary" style="width:100%;" ng-click="$ctrl.progressBar = true;$ctrl.getEntropy();"><span class="fa fa-play-circle-o" aria-hidden="true"></span> {{ 'GENERAL_START' | translate }}</button>
          </div>
        </div>
      </div>
      <div class="form-group" ng-show="$ctrl.progressBar">
        <div class="progressBar">
          <div id="pBar"></div>
        </div>
        <hr style="border-color:#444;">
      </div>
      <div class="row form-group" ng-show="$ctrl.entropyDone">
        <div class="col-md-2 col-sm-6">
          <button class="btn btn-dark" ng-click="$ctrl._selectedType = undefined;$ctrl.hideAllSteps();$ctrl.exitEntropy();" style="width:auto;" ng-show="!$ctrl.step5 && !$ctrl.step6 && !$ctrl.step7 && !$ctrl.step8"><span class="fa fa-chevron-left" aria-hidden="true"></span> {{ 'GENERAL_GO_BACK' | translate }}</button>
        </div>
        <div class="col-md-10 col-sm-6">
          <button class="btn btn-primary" style="width:100%;" ng-click="$ctrl.createWallet();" ng-disabled="$ctrl.okPressed">{{ 'GENERAL_NEXT' | translate }} <span class="fa fa-chevron-right" aria-hidden="true"></span></button>
        </div>
      </div>
    </div>
    <!-- 4th step (if private key wallet): Enter a private key -->
    <div class="col-md-offset-3 col-md-6" ng-show="$ctrl.step4 && $ctrl._selectedType.type === 3">
      <!-- Private key of account to import -->
      <fieldset class="form-group">
        <p class="text-center">{{ 'SIGNUP_CREATE_ENTER_PRIVATE_KEY' | translate }}</p>
        <input class="form-control" type="password" placeholder="{{'FORM_PRIVATE_KEY_FIELD_PLACEHOLDER' | translate}}" ng-model="$ctrl.formData.privateKey" ng-change="$ctrl.generateAddress();" />
      </fieldset>
      <!-- Address corresponding to the given private key -->
      <fieldset class="form-group" ng-show="$ctrl.generatedAddress.length">
        <p class="text-center">{{ 'SIGNUP_CREATE_ADDRESS_FROM_PK' | translate }}</p>
        <div class="form-control">
          <p style="font-size: 15px;"><b>{{ $ctrl.generatedAddress | fmtAddress }}</b></p>
        </div>
      </fieldset>
      <!-- -->
      <div class="row form-group">
        <div class="col-md-2 col-sm-6">
          <button class="btn btn-dark" ng-click="$ctrl._selectedType = undefined;$ctrl.hideAllSteps();$ctrl.exitEntropy();" style="width:auto;" ng-show="!$ctrl.step5 && !$ctrl.step6 && !$ctrl.step7 && !$ctrl.step8"><span class="fa fa-chevron-left" aria-hidden="true"></span> {{ 'GENERAL_GO_BACK' | translate }}</button>
        </div>
        <div class="col-md-10 col-sm-6">
          <button class="btn btn-primary" style="width:100%;" ng-click="$ctrl.createPrivateKeyWallet()" ng-disabled="$ctrl.formData.privateKey.length !== 64 && $ctrl.formData.privateKey.length !== 66 || $ctrl.okPressed">{{ 'GENERAL_NEXT' | translate }} <span class="fa fa-chevron-right" aria-hidden="true"></span></button>
        </div>
      </div>
    </div>
    <!-- 5th step: Start safety protocol -->
    <div class="col-md-offset-3 col-md-6" ng-show="$ctrl.step5">
      <div class="form-group">
        <p><i class="fa fa-exclamation-triangle"></i> <span ng-bind-html="'SIGNUP_COMMON_WALLET_WARNING_1' | translate "></span></p>
      </div>
      <div class="form-group">
        <hr style="border-color:#444;">
        <button class="btn btn-primary" style="width:100%;" ng-click="$ctrl.step5 = false;$ctrl.step6 = true;">{{ 'SIGNUP_COMMON_WALLET_WARNING_UNDERSTOOD' | translate }}</button>
      </div>
    </div>
    <!-- 6th step: Wallet information -->
    <div class="col-md-offset-3 col-md-6" ng-show="$ctrl.step6">
      <p><span ng-bind-html="'SIGNUP_COMMON_WALLET_WARNING_2' | translate"></span></p>
      <div class="form-group">
        <a class="btn btn-dark" style="width: 100%;" id="downloadWallet"><span class="fa fa-download" aria-hidden="true"></span> {{ 'SIGNUP_COMMON_WALLET_WARNING_DOWNLOAD' | translate }}</a>
      </div>
      <p><span ng-bind-html="'SIGNUP_COMMON_WALLET_WARNING_3' | translate"></span></p>
      <div class="form-group">
        <button type="button" class="btn btn-dark" style="width:100%;" ng-click="!$ctrl.showRawWallet ? $ctrl.showRawWallet = true : $ctrl.showRawWallet = false"><span class="fa fa-file-text" aria-hidden="true"></span> {{ 'SIGNUP_COMMON_WALLET_WARNING_BTN_1' | translate }}</button>
      </div>
      <div ng-show="$ctrl.showRawWallet">
        <pre style="color: white;background-color: #444;font-weight: bold;"><code>{{ $ctrl.rawWallet }}</code></pre>
        <p><i class="fa fa-info-circle"></i> <span ng-bind-html="'SIGNUP_COMMON_WALLET_WARNING_BTN_1_INFO' | translate"></span></p>
      </div>
      <!-- -->
      <div class="form-group">
        <hr style="border-color:#444;">
        <div class="row">
          <div class="col-md-2 col-sm-6">
            <button class="btn btn-dark" ng-click="$ctrl.step5 = true;$ctrl.step6 = false;" style="width:auto;"> <span class="fa fa-chevron-left" aria-hidden="true"></span> {{ 'GENERAL_GO_BACK' | translate }}</button>
          </div>
          <div class="col-md-10 col-sm-6">
            <button class="btn btn-primary" style="width:100%;" ng-click="$ctrl.step6 = false;$ctrl.step7 = true;">{{ 'SIGNUP_COMMON_WALLET_WARNING_CONFIRM_1' | translate }}</button>
          </div>
        </div>
      </div>
    </div>
    <!-- 7th step: Private key information -->
    <div class="col-md-offset-3 col-md-6" ng-show="$ctrl.step7">
      <p><i class="fa fa-exclamation-triangle"></i> <span ng-bind-html="'SIGNUP_COMMON_WALLET_WARNING_4' | translate"></span></p>
      <div class="form-group">
        <button type="button" class="btn btn-dark" style="width: 100%;" ng-click="!$ctrl.showWalletPrivateKey ? $ctrl.showWalletPrivateKey = true : $ctrl.showWalletPrivateKey = false;">{{ 'SIGNUP_COMMON_WALLET_WARNING_BTN_2' | translate }}</button>
      </div>
      <div ng-show="$ctrl.showWalletPrivateKey">
        <pre style="color: white;background-color: #444;font-weight: bold;"><code>{{ $ctrl.walletPrivateKey }}</code></pre>
        <p><i class="fa fa-exclamation-triangle"></i> <span ng-bind-html="'SIGNUP_COMMON_WALLET_WARNING_BTN_2_INFO' | translate"></span></p>
        <hr style="border-color:#444;">
      </div>
      <div class="form-group">
        <p><span ng-bind-html="'SIGNUP_COMMON_WALLET_WARNING_6' | translate"></span></p>
        <hr style="border-color:#444;">
      </div>
      <div class="form-group">
        <div class="row">
          <div class="col-md-2 col-sm-6">
            <button class="btn btn-dark" ng-click="$ctrl.step6 = true;$ctrl.step7 = false;" style="width:auto;"> <span class="fa fa-chevron-left" aria-hidden="true"></span> {{ 'GENERAL_GO_BACK' | translate }}</button>
          </div>
          <div class="col-md-10 col-sm-6">
            <button class="btn btn-primary" style="width:100%;" ng-click="$ctrl.step7 = false;$ctrl.step8 = true;">{{ 'SIGNUP_COMMON_WALLET_WARNING_CONFIRM_2' | translate }}</button>
          </div>
        </div>
      </div>
    </div>
    <!-- 8th step: Last warning -->
    <div class="col-md-offset-3 col-md-6" ng-show="$ctrl.step8">
      <div class="form-group">
        <p><b><i class="fa fa-exclamation-triangle"></i> {{ 'SIGNUP_COMMON_WALLET_WARNING_5' | translate }}</b></p>
        <p class="text-center"><b>{{ 'SIGNUP_COMMON_WALLET_WARNING_FOOTER' | translate }}</b></p>
      </div>
      <div class="form-group">
        <hr style="border-color:#444;">
        <div class="row">
          <div class="col-md-2 col-sm-6">
            <button class="btn btn-dark" ng-click="$ctrl.step7 = true;$ctrl.step8 = false;" style="width:auto;"> <span class="fa fa-chevron-left" aria-hidden="true"></span> {{ 'GENERAL_GO_BACK' | translate }}</button>
          </div>
          <div class="col-md-10 col-sm-6">
            <button class="btn btn-primary" style="width:100%;" ng-click="$ctrl.endSignup();">{{ 'SIGNUP_COMMON_WALLET_WARNING_CONFIRM_3' | translate }}</button>
          </div>
        </div>
      </div>
    </div>
    <!-- Account resumed -->
    <div class="col-md-offset-3 col-md-6" ng-show="$ctrl.step9">
      <div class="form-group">
        <p class="text-center" ng-bind-html="'SIGNUP_CONGRATS_MSG' | translate"></p>
        <pre class="text-center" style="color: white;background-color: #444;font-weight: bold;"><code>{{ $ctrl.tempWallet.accounts[0].address }}</code></pre>
      </div>
      <div class="form-group">
        <hr style="border-color:#444;">
        <div class="row">
          <button class="btn btn-primary" style="width:100%;" ui-sref="app.login">{{ 'HEADER_LOGIN_BUTTON' | translate }}</button>
        </div>
      </div>
    </div>
  </div>
</div>
'''
'''--- src/app/modules/transferTransaction/index.js ---
import angular from 'angular';

// Create the module where our functionality can attach to
let transferTransactionModule = angular.module('app.transferTransaction', []);

// Include our UI-Router config settings
import TransferTransactionConfig from './transferTransaction.config';
transferTransactionModule.config(TransferTransactionConfig);

// Controllers
import TransferTransactionCtrl from './transferTransaction.controller';
transferTransactionModule.controller('TransferTransactionCtrl', TransferTransactionCtrl);

export default transferTransactionModule;

'''
'''--- src/app/modules/transferTransaction/transferTransaction.config.js ---
function TransferTransactionConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.transferTransaction', {
            url: '/transfer-transactions',
            controller: 'TransferTransactionCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/transferTransaction/transferTransaction.html',
            title: 'Send a transaction',
            params: {
            	address: ''
            }
        });

};

export default TransferTransactionConfig;
'''
'''--- src/app/modules/transferTransaction/transferTransaction.controller.js ---
import nem from 'nem-sdk';
import Helpers from '../../utils/helpers';

class TransferTransactionCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Wallet, Alert, DataStore, $state, $timeout) {
        'ngInject';

        //// Module dependencies region ////

        this._Alert = Alert;
        this._Wallet = Wallet;
        this._DataStore = DataStore;
        this._$state = $state;
        this._$timeout = $timeout;
        this._Helpers = Helpers;

        //// End dependencies region ////

        // Initialization
        this.init();
    }

    //// Module methods region ////

    /**
     * Initialize module properties
     */
    init() {
        // Form is a transfer transaction object, pre-set recipient if any from state parameter
        this.formData = nem.model.objects.create("transferTransaction")(undefined !== this._$state.params.address ? this._$state.params.address : '');
        // Mosaics are null by default
        this.formData.mosaics = null;
        // Set first multisig account if any
        this.formData.multisigAccount = this._DataStore.account.metaData.meta.cosignatoryOf.length == 0 ? '' : this._DataStore.account.metaData.meta.cosignatoryOf[0];
        // Switch between mosaic transfer and normal transfers
        this.isMosaicTransfer = false;
        // Selected mosaic
        this.selectedMosaic = "nem:xem";
        // Mosaics data for current account
        this.currentAccountMosaicData = "";
        // Prevent user to click twice on send when already processing
        this.okPressed = false;
        // Character counter
        this.charactersLeft = 1024;
        // Object to contain our password & private key data
        this.common = nem.model.objects.get("common");
        // Store the prepared transaction
        this.preparedTransaction = {};
        // Update current account mosaics
        this.updateCurrentAccountMosaics();
        // Update the fee in view
        this.prepareTransaction();
    }

    /**
     * Set or unset data for mosaic transfer
     */
    setMosaicTransfer() {
        if (this.isMosaicTransfer) {
            this.formData.mosaics = [];
            // In case of mosaic transfer amount is used as multiplier,
            // set to 1 as default
            this.formData.amount = 1;
        } else {
            // Reset mosaics array
            this.formData.mosaics = null;
            // Reset amount
            this.formData.amount = 0;
        }
        this.prepareTransaction();
    }

    /**
     * Prepare the transaction
     */
    prepareTransaction() {
        // Create a new object to not affect the view
        let cleanTransferTransaction = nem.model.objects.get("transferTransaction");

        // Clean recipient
        cleanTransferTransaction.recipient = this.formData.recipient.toUpperCase().replace(/-/g, '');

        // Check entered amount
        if(!nem.utils.helpers.isTextAmountValid(this.formData.amount)) {
            return this._Alert.invalidAmount();
        } else {
            // Set cleaned amount
            cleanTransferTransaction.amount = nem.utils.helpers.cleanTextAmount(this.formData.amount);
        }

        // Set multisig, if selected
        if (this.formData.isMultisig) {
            cleanTransferTransaction.isMultisig = true;
            cleanTransferTransaction.multisigAccount = this.formData.multisigAccount;
        }

        // If user selected encrypted message but it is a multisig tx or the recipient has no public key, it reset to unencrypted
        if((this.formData.isMultisig || !this.formData.recipientPublicKey) && this.formData.messageType === 2) {
            if (this.formData.isMultisig) this._Alert.noEncryptionWithMultisig();
            else this._Alert.recipientHasNoPublicKey();
            this.formData.messageType = 1;
        }

        // Set recipient public key
        cleanTransferTransaction.recipientPublicKey = this.formData.recipientPublicKey;

        // Set the message
        cleanTransferTransaction.message = this.formData.message;
        cleanTransferTransaction.messageType = this.formData.messageType;

        // Prepare transaction object according to transfer type
        let entity;
        if(this.isMosaicTransfer) {
            // Set mosaics with cleaned amounts
            cleanTransferTransaction.mosaics = Helpers.cleanMosaicAmounts(this.formData.mosaics, this._DataStore.mosaic.metaData);
            // Prepare
            entity = nem.model.transactions.prepare("mosaicTransferTransaction")(this.common, cleanTransferTransaction, this._DataStore.mosaic.metaData, this._Wallet.network);
        } else {
            cleanTransferTransaction.mosaics = null;
            // Prepare
            entity = nem.model.transactions.prepare("transferTransaction")(this.common, cleanTransferTransaction, this._Wallet.network);
        }

        // Arrange message type if encrypted
        if(this.formData.messageType === 2) {
            if(this.formData.isMultisig) {
                entity.otherTrans.message.type = this.formData.messageType;
            } else {
                entity.message.type = this.formData.messageType;
            }
        }

        // Set the entity for fees in view
        this.preparedTransaction = entity;

        // Return prepared transaction
        return entity;
    }

    /**
     * Get current account mosaics names
     */
    updateCurrentAccountMosaics() {
        // Reset mosaics
        this.setMosaicTransfer();
        // Get current account
        let acct = this.formData.isMultisig ? this.formData.multisigAccount.address : this._Wallet.currentAccount.address;
        // Set current account mosaics names and data, if account owns any
        this.currentAccountMosaicData = undefined !== this._DataStore.mosaic.ownedBy[acct] ? this._DataStore.mosaic.ownedBy[acct]: "";
        // Default selected is nem:xem
        this.selectedMosaic = "nem:xem";
        return;
    }

    /**
     * Prepare and broadcast the transaction to the network
     */
    send() {
        // Disable send button
        this.okPressed = true;

        // Get account private key for preparation or return
        if (!this._Wallet.decrypt(this.common)) return this.okPressed = false;

        // Prepare the transaction
        let entity = this.prepareTransaction();

        // Sending will be blocked if recipient is an exchange and no message set
        if (!this._Helpers.isValidForExchanges(entity)) {
            this.okPressed = false;
            this._Alert.exchangeNeedsMessage();
            return;
        }

        // Use wallet service to serialize and send
        this._Wallet.transact(this.common, entity).then(() => {
            this._$timeout(() => {
                // Enable send button
                this.okPressed = false;
                // Reset all
                this.init();
                return;
            });
        }, () => {
            this._$timeout(() => {
                // Delete private key in common
                this.common.privateKey = '';
                // Enable send button
                this.okPressed = false;
                return;
            });
        });
        /*$('#confirmation').modal({
            show: 'true'
        });*/ 
    }

    //// End methods region ////

}

export default TransferTransactionCtrl;
'''
'''--- src/app/modules/transferTransaction/transferTransaction.html ---
<div class="transferTransaction-page">
  <div class="container-fluid main">
    <div class="row">
      <div class="col-sm-8">
        <h2>{{ 'TRANSFER_TRANSACTION_TITLE' | translate }}</h2>
      </div>
    </div>
    <div class="row">
      <div class="col-lg-6 col-md-12">
        <div class="panel-heading">
          <div class="tabDescription">
            <!-- Title of panel -->
            <span ng-show="!$ctrl.formData.isMultisig">{{ 'TRANSFER_TRANSACTION_NAME' | translate }}</span>
            <span ng-show="$ctrl.formData.isMultisig ">{{ 'TRANSFER_TRANSACTION_MULTISIG_NAME' | translate }}</span>
          </div>
          <!-- Tabbed modes -->
          <ul class="nav nav-tabs">
            <!-- Normal mode -->
            <!-- On click it set multisig to false, update mosaics data of account and reset mosaics array -->
            <li ng-class="$ctrl.formData.isMultisig ? '' : 'active'"><a ng-click="$ctrl.formData.isMultisig = false;$ctrl.updateCurrentAccountMosaics();$ctrl.setMosaicTransfer();">{{ 'GENERAL_TAB_SEND' | translate }}</a></li>
            <!-- Multisig mode -->
            <!-- On click it set multisig to true, update mosaics data of account and reset mosaics array -->
            <li ng-show="$ctrl._DataStore.account.metaData.meta.cosignatoryOf.length" ng-class="$ctrl.formData.isMultisig ? 'active' : ''"><a ng-click="$ctrl.formData.isMultisig = true;$ctrl.formData.messageType = 1;$ctrl.updateCurrentAccountMosaics();$ctrl.setMosaicTransfer();">{{ 'GENERAL_TAB_MULTISIG' | translate }}</a></li>
          </ul>
        </div>
        <!-- Transaction form -->
        <div class="panel-body">
          <!-- Multisig select -->
          <multisig-select ng-show="$ctrl.formData.isMultisig" multisig-account="$ctrl.formData.multisigAccount" update-ctrl="$ctrl.updateCurrentAccountMosaics();"></multisig-select>
          <!-- Recipient via address book, recipient address, alias -->
          <account-input account="$ctrl.formData.recipient" public-key="$ctrl.formData.recipientPublicKey"></account-input>
          <!-- Amount of XEM to send -->
          <fieldset class="form-group" ng-show="!$ctrl.isMosaicTransfer">
            <div class="input-group">
              <span class="input-group-btn">
                  <label>{{'GENERAL_AMOUNT' | translate}}: </label>
                </span>
              <div class="form-control formFloat" ng-disabled="$ctrl.isMosaicTransfer">
                <input type="text" ng-disabled="$ctrl.isMosaicTransfer" ng-model="$ctrl.formData.amount" maxlength="17" ng-change="$ctrl.prepareTransaction();" />
                <label class="floatRight"><small>XEM</small></label>
              </div>
            </div>
          </fieldset>
          <!-- Message Field -->
          <message-area message="$ctrl.formData.message" message-type="$ctrl.formData.messageType" characters-left="$ctrl.charactersLeft" update-ctrl="$ctrl.prepareTransaction();"></message-area>
          <!-- Transaction fee -->
          <fee-input tx="$ctrl.preparedTransaction" is-multisig="$ctrl.formData.isMultisig"></fee-input>
          <!-- Enable / Disable mosaic transfer -->
          <fieldset class="form-group text-center">
            <input id="box2" type="checkbox" ng-model="$ctrl.isMosaicTransfer" ng-change="$ctrl.setMosaicTransfer();">
            <label for="box2">{{'TRANSFER_TRANSACTION_MOSAIC_TRANSFER' | translate}}</label>
          </fieldset>
          <!-- Password Field -->
          <password-input common="$ctrl.common"></password-input>
          <!-- Send button is disabled if already pressed or no password or no clean recipient address or message is supposed to be encrypted but no recipient public key or is a mosaic transfer and no mosaics in array or if amount is invalid or if characters left are negative or if hex message is not hex only -->
          <button class="btn btn-success" type="submit" ng-disabled="$ctrl.okPressed || ($ctrl._Wallet.algo !== 'trezor' && $ctrl._Wallet.algo !== 'ledger') && !$ctrl.common.password.length || $ctrl.formData.recipient.length !== 40 || $ctrl.formData.messageType === 2 && $ctrl.formData.recipientPublicKey.length !== 64 || $ctrl.isMosaicTransfer && $ctrl.formData.isMultisig && !$ctrl.preparedTransaction.otherTrans.mosaics.length || $ctrl.isMosaicTransfer && !$ctrl.formData.isMultisig && !$ctrl.preparedTransaction.mosaics.length || !$ctrl._Helpers.isTextAmountValid($ctrl.formData.amount) || $ctrl.charactersLeft < 0 || $ctrl.formData.messageType === 0 && $ctrl.formData.message.length && !$ctrl._Helpers.isHexadecimal($ctrl.formData.message)" ng-click="$ctrl.send()">
            <i class="fa fa-send"></i> {{ 'GENERAL_SEND' | translate }}
          </button>
          </fieldset>
        </div>
      </div>
      <!-- Attach mosaic component -->
      <attach-mosaic ng-show="$ctrl.isMosaicTransfer" form-data="$ctrl.formData" selected-mosaic="$ctrl.selectedMosaic" account-mosaics="$ctrl.currentAccountMosaicData" update-ctrl="$ctrl.prepareTransaction();"></attach-mosaic>
      <!-- Transaction confirmation component -->
      <!--<tx-confirmation tx="{meta: {}, transaction: $ctrl.preparedTransaction}"></tx-confirmation>-->
    </div>
  </div>
</div>
'''
'''--- src/app/modules/trezor/index.js ---
import angular from 'angular';

// Create the module where our functionality can attach to
let trezorModule = angular.module('app.trezor', []);

// Include our UI-Router config settings
import trezorConfig from './trezor.config';
trezorModule.config(trezorConfig);

// Controllers
import TrezorCtrl from './trezor.controller';
trezorModule.controller('TrezorCtrl', TrezorCtrl);

// Services
import TrezorService from './trezor.service';
trezorModule.service('Trezor', TrezorService);

export default trezorModule;

'''
'''--- src/app/modules/trezor/trezor.config.js ---
function TrezorConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.trezor', {
            url: '/trezor',
            controller: 'TrezorCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/trezor/trezor.html',
            title: 'TREZOR'
        });

};

export default TrezorConfig;

'''
'''--- src/app/modules/trezor/trezor.controller.js ---
import nem from 'nem-sdk';

class TrezorCtrl {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(AppConstants, $timeout, Alert, Login, Trezor) {
        'ngInject';

        //// Module dependencies region ////

        this._AppConstants = AppConstants;
        this._$timeout = $timeout;
        this._Alert = Alert;
        this._Login = Login;
        this._Trezor = Trezor;

        //// End dependencies region ////

        //// Module properties region ////

        /**
         * Default network
         *
         * @type {number}
         */
        this.network = this._AppConstants.defaultNetwork;

        /**
         * Available networks
         *
         * @type {object} - An object of objects
         */
        this.networks = nem.model.network.data;

        //// End properties region ////
    }

    //// Module methods region ////

    /**
     * Change wallet network
     *
     * @param {number} id - The network id to use at wallet creation
     */
    changeNetwork(id) {
        if (id == nem.model.network.data.mijin.id && this._AppConstants.mijinDisabled) {
            this._Alert.mijinDisabled();
            // Reset network to default
            this.network = this._AppConstants.defaultNetwork;
            return;
        } else if (id == nem.model.network.data.mainnet.id && this._AppConstants.mainnetDisabled) {
            this._Alert.mainnetDisabled();
            // Reset network to default
            this.network = this._AppConstants.defaultNetwork;
            return;
        }
        // Set Network
        this.network = id;
    }

    /**
     * Login with TREZOR
     */
    login() {
        this._Trezor.createWallet(this.network).then((wallet) => {
            this._Login.login({}, wallet);
        }, (error) => {
            this._$timeout(() => {
                this._Alert.createWalletFailed(error);
            });
        });
    }

    //// End methods region ////

}

export default TrezorCtrl;

'''
'''--- src/app/modules/trezor/trezor.html ---
<div class="signup-page">

  <div class="container">
    <div class="row text-center">
      <div class="col-md-12">
        <h1>{{'TREZOR_TITLE' | translate}}</h1>
        <p>{{'TREZOR_TEXT' | translate }}</p>
      </div>
    </div>

    <div class="col-md-offset-3 col-md-6">
      <fieldset class="form-group">
        <p class="text-center">{{'SIGNUP_NETWORK_SELECT' | translate}}</p>
        <select class="form-control"
                ng-model="$ctrl.network"
                ng-change="$ctrl.changeNetwork($ctrl.network)"
                ng-options="network.id as (network.id | toNetworkName) for network in $ctrl.networks">
          <option value="" disabled selected>{{'SIGNUP_NETWORK_SELECT' | translate}}</option>
        </select>
      </fieldset>
      <div class="form-group text-center">
        <p ng-show="$ctrl.network === 104"><span ng-bind-html="'SIGNUP_NETWORK_MAINNET' | translate"></span></p>
        <p ng-show="$ctrl.network === -104"><span ng-bind-html="'SIGNUP_NETWORK_TESTNET' | translate"></span></p>
        <p ng-show="$ctrl.network === 96"><span ng-bind-html="'SIGNUP_NETWORK_MIJIN' | translate"></span></p>
      </div>
      <div class="form-group">
        <hr style="border-color:#444;">
        <div class="row">
          <div class="col-md-12 col-sm-6">
            <button class="btn btn-primary" style="width:100%;" ng-click="$ctrl.login()">
              {{ 'GENERAL_NEXT' | translate }} <span class="fa fa-chevron-right" aria-hidden="true"></span>
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>

</div>

'''
'''--- src/app/modules/trezor/trezor.service.js ---
import nem from 'nem-sdk';

/** Service storing Trezor utility functions. */
class Trezor {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor() {
        'ngInject';

        // Service dependencies region //

        // End dependencies region //

        // Service properties region //

        // End properties region //
    }

    // Service methods region //

    createWallet(network) {
        return this.createAccount(network, 0, "Primary").then((account) => ({
            "name": "TREZOR",
            "accounts": {
                "0": account
            }
        }));
    }

    bip44(network, index) {
        const coinType = network == -104 ? 1 : 43;

        return `m/44'/${coinType}'/${index}'/0'/0'`;
    }

    createAccount(network, index, label) {
        return new Promise((resolve, reject) => {
            const hdKeypath = this.bip44(network, index);

            TrezorConnect.nemGetAddress(hdKeypath, network, (result) => {
                if (result.success) {
                    resolve({
                        "brain": false,
                        "algo": "trezor",
                        "encrypted": "",
                        "iv": "",
                        "address": result.address,
                        "label": label,
                        "network": network,
                        "child": "",
                        "hdKeypath": hdKeypath
                    });
                } else {
                    reject(result.error);
                }
            });
        });
    }

    deriveRemote(account, network) {
        const key = "Export delegated harvesting key?";
        const value = "0000000000000000000000000000000000000000000000000000000000000000";

        return new Promise((resolve, reject) => {
            TrezorConnect.cipherKeyValue(account.hdKeypath, key, value, true, true, true, (result) => {
                if (result.success) {
                    const privateKey = nem.utils.helpers.fixPrivateKey(result.value);
                    const keyPair = nem.crypto.keyPair.create(privateKey);
                    const publicKey = keyPair.publicKey.toString();
                    const address = nem.model.address.toAddress(publicKey, network);

                    resolve({
                        address,
                        privateKey,
                        publicKey
                    });
                } else {
                    reject(result.error);
                }
            });
        });
    }

    serialize(transaction, account) {
        return new Promise((resolve, reject) => {
            TrezorConnect.nemSignTx(account.hdKeypath, transaction, (result) => {
                if (result.success) {
                    resolve(result.message);
                } else {
                    reject({
                        "code": 0,
                        "data": {
                            "message": result.error
                        }
                    });
                }
            });
        });
    }

    showAccount(account) {
        return new Promise((resolve, reject) => {
            TrezorConnect.nemGetAddress(account.hdKeypath, account.network, (result) => {
                if (result.success) {
                    resolve(result.address);
                } else {
                    reject(result.error);
                }
            });
        });
    }

    // End methods region //

}

export default Trezor;

'''
'''--- src/app/modules/voting/createPoll/createPoll.config.js ---
function createPollConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.votingCreatePoll', {
            url: '/voting/createPoll',
            controller: 'createPollCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/voting/createPoll/createPoll.html',
            title: 'Create Poll'
        });

};

export default createPollConfig;

'''
'''--- src/app/modules/voting/createPoll/createPoll.controller.js ---
import nem from 'nem-sdk';

class createPollCtrl {
    // Set services as constructor parameter
    constructor($timeout, Alert, Voting, Wallet, VotingUtils, DataStore) {
        'ngInject';

        // Declaring services
        this._$timeout = $timeout;
        this._Alert = Alert;
        this._Voting = Voting;
        this._VotingUtils = VotingUtils;
        this._Wallet = Wallet;
        this._DataStore = DataStore;

        // Constants
        this.MOCK_ADDRESS = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

        // Default poll Index
        if(this._Wallet.network < 0){
            this.pollIndexAccount = "TAVGTNCVGALLUPZC4JTLKR2WX25RQM2QOK5BHBKC";
            //this.pollIndexAccount = "TAZ73M4C3QDJRC6NFLQP3HAVW4FHYRWJOE7RASVZ";
        }
        else{
            this.pollIndexAccount = "NAZN26HYB7C5HVYVJ4SL3KBTDT773NZBAOMGRFZB";
        }
        this.creatorAddress = this._Wallet.currentAccount.address;

        // names of types
        this.pollTypes = ['POI', 'White List'];
        //this.currentAccountMosaicNames = ["nem:xem"];

        // Data of the poll to be sent
        this.formData = {};
        this.formData.title = '';
        this.formData.doe = NaN;
        this.formData.multiple = false;
        //this.formData.updatable = false;
        this.formData.type = 0;
        //this.formData.mosaic = 'nem:xem';
        this.description = '';
        this.options = ['Yes', 'No'];
        this.whitelist = [''];

        // input data
        this.hasWhitelist = false;
        this.hasMosaic = false;
        this.doeString = '';
        this.doeISOString = '';
        this.typeString = this.pollTypes[0];
        this.invalidData = true;

        // Creation issues
        this.issues = {};
        this.issues.blankTitle = true;
        this.issues.pastDate = false;
        this.issues.invalidDate = true;
        this.issues.blankOptions = [false, false];
        this.issues.invalidAddresses = [];
        this.issues.invalidIndexAccount = false;
        this.issues.noPassword = true;
        this.issues.noOptions = false;
        this.issues.noWhitelist = false;

        this.issues.titleTooLong = false;
        this.issues.descriptionTooLong = false;
        this.issues.optionsTooLong = false;
        this.issues.pollTooLong = false;

        // Common
        this.common = nem.model.objects.get("common");

        // messages
        this.formDataMessage = '';
        this.descriptionMessage = '';
        this.optionsMessage = '';
        this.whitelistMessage = '';
        this.pollMessage = '';

        // calculated fee
        this.fee = this.calculateFee();

        // To lock our send button if a transaction is not finished processing
        this.creating = false;

        // if the poll is private then it won't be sent to the public index, instead the header will be sent to the creator's account
        this.private = false;

        this.checkFormData();
        //this.updateCurrentAccountMosaics();
    }

    // Adds an option field
    addOption() {
        this.options.push('');
    }

    // Adds a whitelist Address field
    addWhitelistedUser() {
        this.whitelist.push('');
    }

    // Deletes an option field
    rmOption() {
        this.options.pop();
    }

    // Deteles a whitelist address field
    rmWhitelistedUser() {
        this.whitelist.pop();
    }

    //executed when the poll type changes
    changeType() {
        this.hasWhitelist = (this.typeString === this.pollTypes[1]);
        this.formData.type = this.pollTypes.indexOf(this.typeString);
    }

    // Sets the date of ending
    setDoe(isoString) {
        this.formData.doe = new Date(this.doeString).getTime();
        this.doeISOString = isoString;
    }

    /**
     * Get current account mosaics names
     */
    /*updateCurrentAccountMosaics() {
        // Get current account
        let acct = this._Wallet.currentAccount.address;
        // Set current account mosaics names if mosaicOwned is not undefined
        if (undefined !== this._DataStore.mosaic.ownedBy[acct]) {
            this.currentAccountMosaicNames = Object.keys(this._DataStore.mosaic.ownedBy[acct]).sort();
        } else {
            this.currentAccountMosaicNames = ["nem:xem"];
        }
    }*/

    // Checks if data is valid
    checkFormData() {
        let invalid = false;

        if (this.formData.title === '') {
            this.issues.blankTitle = true;
            invalid = true;
        } else
            this.issues.blankTitle = false;
        // Regex that validates that the date is valid
        let ISOMatch = this.doeISOString.match(/^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d$/);
        //Date valid and > now
        if (isNaN(this.formData.doe) || !ISOMatch) {
            this.issues.invalidDate = true;
            invalid = true;
        } else {
            this.issues.invalidDate = false;
        }
        if (this.formData.doe <= Date.now()) {
            this.issues.pastDate = true;
            invalid = true;
        } else{
            this.issues.pastDate = false;
        }

        //look for duplicates and blanks
        this.issues.blankOptions = this.options.map((opt) => {
            return (opt === '');
        });
        if (this.hasWhitelist) {
            this.issues.invalidAddresses = this.whitelist.map((addr) => {
                return (!this._VotingUtils.isValidAddress(addr));
            });
        } else {
            this.issues.invalidAddresses = [];
        }
        if (this.issues.invalidAddresses.some(a => a) || this.issues.blankOptions.some(a => a)){
            invalid = true;
        }
        if (this.common.password === "" && this._Wallet.algo !== 'trezor' && this._Wallet.algo !== 'ledger') {
            this.issues.noPassword = true;
            invalid = true;
        } else {
            this.issues.noPassword = false;
        }
        if (!this._VotingUtils.isValidAddress(this.pollIndexAccount)) {
            this.issues.invalidIndexAccount = true;
            invalid = true;
        } else {
            this.issues.invalidIndexAccount = false;
        }

        if (this.options.length === 0) {
            this.issues.noOptions = true;
            invalid = true;
        } else {
            this.issues.noOptions = false;
        }
        if (this.hasWhitelist && this.whitelist.length === 0) {
            this.issues.noWhitelist = true;
            invalid = true;
        } else {
            this.issues.noWhitelist = false;
        }
        this.invalidData = invalid;
    }

    // Updates the messages to be sent on creation to calculate the fee. The addresses are mocks, not definitive
    updateMessages() {
        var formDataClone = Object.assign({}, this.formData);
        if (this.formData.type !== 2)
            delete formDataClone.mosaic;
        this.formDataMessage = "formData:" + JSON.stringify(formDataClone);
        this.descriptionMessage = "description:" + this.description;
        let linkMock = {};
        for(var i = 0; i < this.options.length; i++){
            linkMock[this.options[i]] = this.MOCK_ADDRESS;
        }
        let optionsObj = {
            strings: this.options,
            link: linkMock
        };
        this.optionsMessage = "options:" + JSON.stringify(optionsObj);
        this.whitelistMessage = "whitelist:" + JSON.stringify(this.whitelist.map((address) => {
            return address.toUpperCase().replace(/-/g, '');
        }));
        let header = {
            title: this.formData.title,
            type: this.formData.type,
            doe: this.formData.doe,
            address: this.MOCK_ADDRESS
        };
        if (this.formData.type === 2) {
            header.mosaic = this.formData.mosaic;
        }
        this.pollMessage = "poll:" + JSON.stringify(header);

        this.issues.titleTooLong = (this._VotingUtils.getMessageLength(this.formDataMessage) > 1024) || (this._VotingUtils.getMessageLength(this.formData.title) > 420);
        this.issues.descriptionTooLong = (this._VotingUtils.getMessageLength(this.descriptionMessage) > 1024);
        this.issues.optionsTooLong = (this._VotingUtils.getMessageLength(this.optionsMessage) > 1024);
        this.issues.pollTooLong = (this._VotingUtils.getMessageLength(this.pollMessage) > 1024);

        if (this.issues.titleTooLong || this.issues.descriptionTooLong || this.issues.optionsTooLong || this.issues.pollTooLong || (this.issues.whitelistTooLong && this.hasWhitelist))
            this.invalidData = true;

        this.fee = this.calculateFee();
    }

    // Calculates the fee cost of the messages
    calculateFee() {
        var details = {}
        details.formData = this.formData;
        if (this.formData.type !== 2)
            delete details.formData.mosaic;
        details.options = this.options;
        details.description = this.description;
        details.whitelist = this.whitelist;

        return this._Voting.getBroadcastFee(details, this.pollIndexAccount);
    }

    // clears all form fields
    clearForm(){
        // Data of the poll to be sent
        this.formData = {};
        this.formData.title = '';
        this.formData.doe = NaN;
        this.formData.multiple = false;
        //this.formData.updatable = false;
        this.formData.type = 0;
        //this.formData.mosaic = 'nem:xem';
        this.description = '';
        this.options = ['Yes', 'No'];
        this.whitelist = [''];

        // input data
        this.hasWhitelist = false;
        this.hasMosaic = false;
        this.doeString = '';
        this.typeString = this.pollTypes[0];
        this.invalidData = true;

        // Creation issues
        this.issues = {};
        this.issues.blankTitle = true;
        this.issues.pastDate = false;
        this.issues.invalidDate = true;
        this.issues.blankOptions = [false, false];
        this.issues.invalidAddresses = [];
        this.issues.invalidIndexAccount = false;
        this.issues.noPassword = true;

        this.issues.titleTooLong = false;
        this.issues.descriptionTooLong = false;
        this.issues.optionsTooLong = false;
        this.issues.whitelistTooLong = false;
        this.issues.pollTooLong = false;

        // Common
        this.common = nem.model.objects.get("common");

        // messages
        this.formDataMessage = '';
        this.descriptionMessage = '';
        this.optionsMessage = '';
        this.whitelistMessage = '';
        this.pollMessage = '';

        // calculated fee
        this.fee = this.calculateFee();

        // To lock our send button if a transaction is not finished processing
        this.creating = false;

        this.checkFormData();
    }

    // creates the poll
    create() {
        this.creating = true;
        this.checkFormData();
        // Initial checks that may forbid the operation move forward
        if (this._DataStore.account.metaData.account.balance < this.fee) {
            // This account has insufficient funds to perform the operation
            this._Alert.insufficientBalance();
            this.creating = false;
            return;
        }

        // Get account private key or return
        if (!this._Wallet.decrypt(this.common)) return this.creating = false;

        var details = {}
        details.formData = this.formData;
        if (this.formData.type !== 2)
            delete details.formData.mosaic;
        details.options = this.options;
        details.description = this.description;
        details.whitelist = this.whitelist;

        const indexAddress = (this.private) ? this.creatorAddress : this.pollIndexAccount;

        console.log("index address: ", indexAddress);

        this._Voting.createPoll(details, indexAddress, this.common).then(d => {
            this._$timeout(() => {
                this.creating = false;
                this._Alert.pollCreationSuccess();
                this.clearForm();
            });
        }).catch(err => {
            this._$timeout(() => {
                this.creating = false;
                if (err !== 'handledLedgerErrorSignal') { 
                    if (err.message) {
                        this._Alert.votingUnexpectedError(err.message);
                    } else {
                        this._Alert.votingUnexpectedError(err.data.message);
                    }
                }
                this.clearForm();
            });
        });
    }

    isPrivate() {
        return this.private;
    }

    togglePrivate() {
        this.private = !this.private;
    }

}

export default createPollCtrl;

'''
'''--- src/app/modules/voting/createPoll/createPoll.html ---
<div class="voting-page">

  <div class="container-fluid" style="padding-left: 20px; padding-right: 20px;">
    <div class="row">
      <div class="col-sm-11">
        <h2>Create a Poll</h2>
      </div>
    </div>

    <div class="row row1">
      <!-- Your content here -->
      <div class="col-md-6" style="margin-top:10px">
        <div class="panel panel-default">
          <div class="panel-heading" style="background-color: rgb(68, 68, 68);border-radius: 0px;">
          </div>
          <div class="panel-body">
            <form name="dataForm">
              <!-- TITLE -->
              <label ng-class="($ctrl.issues.blankTitle || $ctrl.issues.titleTooLong) ? 'has-error' : ''" >Title</label>
              <br>
              <input type="text" class="form-control" placeholder="{{ 'FORM_TITLE_FIELD_PLACEHOLDER' | translate }}" ng-model="$ctrl.formData.title" ng-class="($ctrl.issues.blankTitle || $ctrl.issues.titleTooLong) ? 'has-error' : ''" ng-change="$ctrl.checkFormData(); $ctrl.updateMessages();"/>
              <br>
              <!-- DESCRIPTION -->
              <label ng-class="($ctrl.issues.descriptionTooLong) ? 'has-error' : ''">Description</label>
              <br>
              <textarea class="form-control poll-description-textarea" placeholder="{{ 'FORM_DESCRIPTION_FIELD_PLACEHOLDER' | translate }}" ng-class="($ctrl.issues.descriptionTooLong) ? 'has-error' : ''" ng-model="$ctrl.description" rows="4" ng-change="$ctrl.checkFormData(); $ctrl.updateMessages();"></textarea>
              <br>
              <!-- POLL INDEX -->
              <label ng-class="$ctrl.issues.invalidIndexAccount ? 'has-error' : ''" >Poll Index Account</label>
              <p class="bg-info">If you uncheck this box the poll will not be sent to the public poll index but it will be findable when searching for its address.</p>
              <input id="privateCheckbox" type="checkbox" ng-checked="!$ctrl.isPrivate()" ng-click="$ctrl.togglePrivate()"><label for="privateCheckbox">Send to public poll index</label>
              <p>Public poll index address:</p>
              <input type="text" class="form-control" ng-model="$ctrl.pollIndexAccount" ng-class="$ctrl.issues.invalidIndexAccount ? 'has-error is-empty' : ''" ng-change="$ctrl.checkFormData()" readOnly/>
              <br>
              <!-- DOE -->
              <label ng-class="($ctrl.issues.invalidDate || $ctrl.issues.pastDate) ? 'has-error' : ''" >Date of Ending</label>
              <p class="bg-info">If you only see a text box input a date in a valid ISO format [yyyy-MM-ddTHH:mm], for example: 2017-12-28T14:57</p>
              <input type="datetime-local" class="form-control" name="doeInput" ng-model="$ctrl.doeString" ng-class="($ctrl.issues.invalidDate || $ctrl.issues.pastDate) ? 'has-error' : ''" ng-change="$ctrl.setDoe(dataForm.doeInput.$viewValue); $ctrl.checkFormData(); $ctrl.updateMessages();"/>
            </form>
            <br>
            <input id="box1" type="checkbox" ng-model="$ctrl.formData.multiple"><label for="box1">Multiple choice</label>
            <p class="bg-info">If selected, voters will be able to divide their vote into more than one option.</p>
            <br>
            <!-- UPDATABLE -->
            <!--input id="box2" type="checkbox" ng-model="$ctrl.formData.updatable"><label for="box2">Updatable</label>
            <p class="text-muted small">If selected Voters will be able to vote more than once. Only the last vote will be counted.</p>
            <br /-->
          </div>
        </div>
      </div>

      <div class="col-md-6" style="margin-top:10px">
        <div class="panel panel-default">
          <div class="panel-heading" style="background-color: rgb(68, 68, 68); color: white;border-radius: 0px;">
          </div>
          <div class="panel-body">
            <!-- TYPE -->
            <fieldset class="form-group">
              <label>Type</label>
              <br>
              <select class="form-control" ng-model="$ctrl.typeString" ng-options="type for type in $ctrl.pollTypes" ng-change="$ctrl.changeType(); $ctrl.checkFormData(); $ctrl.updateMessages();"></select>
              <br>
              <div class="bg-info">
                <p>POI: Votes will be weighted against the Proof of Importance of the voting account.</p>
                <p>White List Poll: Only addresses in the whitelist can vote. All votes count the same.</p>
                <!--p class="text-muted small">tokens: Only accounts with a certain token can vote. Vote weight is proportional to the amount of tokens.</p-->
              </div>
            </fieldset>
            <!-- WHITELIST -->
            <fieldset class="form-group" ng-show="$ctrl.hasWhitelist">
              <label>Whitelist</label>
              <p class="bg-info">Only addresses in the Whitelist will be able to vote.</p>
              <br>
              <div ng-repeat="account in $ctrl.whitelist track by $index">
                <input type="text" class="form-control" placeholder="{{ 'FORM_WHITELIST_FIELD_PLACEHOLDER' | translate }}" ng-model="$ctrl.whitelist[$index]" ng-class="$ctrl.issues.invalidAddresses[$index] ? 'has-error is-empty' : ''" ng-change="$ctrl.checkFormData(); $ctrl.updateMessages();"/>
                <br>
              </div>
              <button class="btn btn-success pull-xs-left" style="width:7%" ng-click="$ctrl.addWhitelistedUser(); $ctrl.checkFormData(); $ctrl.updateMessages();"><i class="fa fa-plus"></i></button>
              <button class="btn btn-danger pull-xs-left" style="width:7%;border-radius:0;" ng-click="$ctrl.rmWhitelistedUser(); $ctrl.checkFormData(); $ctrl.updateMessages();"><i class="fa fa-minus"></i></button>
            </fieldset>
            <!-- OPTIONS -->
            <fieldset class="form-group">
              <label>Options</label>
              <br>
              <div class="form-group" ng-repeat="option in $ctrl.options track by $index">
                <input type="text" class="form-control" placeholder="{{ 'FORM_OPTION_FIELD_PLACEHOLDER' | translate }}" ng-model="$ctrl.options[$index]" ng-class="$ctrl.issues.blankOptions[$index] ? 'is-empty' : ''" ng-change="$ctrl.checkFormData(); $ctrl.updateMessages();"/>
              </div>
                <button class="btn btn-success pull-xs-left" style="width:7%" ng-click="$ctrl.addOption(); $ctrl.checkFormData(); $ctrl.updateMessages();"><i class="fa fa-plus"></i></button>
                <button class="btn btn-danger pull-xs-left" style="width:7%;border-radius:0;" ng-click="$ctrl.rmOption(); $ctrl.checkFormData(); $ctrl.updateMessages();"><i class="fa fa-minus"></i></button>
            </fieldset>
            <!-- MOSAIC -->
            <!--<fieldset class="form-group" ng-show="$ctrl.hasMosaic">
              <div class="input-group">
                <label>Mosaic</label>
                <p class="text-muted small">Only addresses with this Mosaic will be able to vote.</p>
                <select class="col-sm-6 form-control" ng-options="mosaicName for mosaicName in $ctrl.currentAccountMosaicNames" ng-model="$ctrl.formData.mosaic" required="required" id="mosaic"></select>
              </div>
            </fieldset>-->
            <fieldset class="form-group">
              <div class="input-group">
                <span class="input-group-btn">
                  <label>{{'GENERAL_FEE' | translate}} </label>
                </span>
                <div class="form-control formFloat" readOnly>
                  <span class="feeAmount">
                    <span>{{($ctrl.fee | fmtNemValue)[0]}}.{{($ctrl.fee | fmtNemValue)[1]}}</span>
                  </span>
                  <label class="floatRight"><small>XEM</small></label>
                </div>
              </div>
            </fieldset>
            <fieldset class="form-group" ng-hide="$ctrl._Wallet.algo === 'trezor' || $ctrl._Wallet.algo === 'ledger'">
              <div class="input-group">
                <span class="input-group-btn">
                  <label ng-class="$ctrl.issues.noPassword ? 'has-error' : ''">{{ 'FORM_PASSWORD' | translate }}:</label>
                </span>
                <input class="form-control" type="password" placeholder="{{ 'FORM_PASSWORD_FIELD_PLACEHOLDER' | translate }}" ng-model="$ctrl.common.password" ng-class="$ctrl.issues.noPassword ? 'has-error' : ''" ng-change="$ctrl.checkFormData(); $ctrl.updateMessages();"/>
              </div>
            </fieldset>
            <!-- BUTTON -->
            <button class="btn btn-success pull-xs-right" type="submit" style="width:100%" ng-click="$ctrl.create()" ng-disabled="$ctrl.creating || $ctrl.invalidData">Create</button>
            <!-- SPINNER -->
            <div ng-show="$ctrl.creating">
              Creating...
              <i class="fa fa-spinner fa-spin"></i>
            </div>
            <br>
            <div ng-show="$ctrl.issues.titleTooLong">
              <p class="text-danger">Title too long</p>
            </div>
            <div ng-show="$ctrl.issues.descriptionTooLong">
              <p class="text-danger">Description too long</p>
            </div>
            <div ng-show="$ctrl.issues.optionsTooLong">
              <p class="text-danger">Too many options / Options too long</p>
            </div>
            <div ng-show="$ctrl.issues.pollTooLong">
              <p class="text-danger">Whitelist too long</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

'''
'''--- src/app/modules/voting/index.js ---
import angular from 'angular';

/***********polls*************/
// Create the module where our functionality can attach to
let pollsModule = angular.module('app.votingPolls', []);

// Include our UI-Router config settings
import pollsConfig from './polls/polls.config';
pollsModule.config(pollsConfig);

// Controllers
import pollsCtrl from './polls/polls.controller';
pollsModule.controller('pollsCtrl', pollsCtrl);

/***************** createPoll ****************/
// Create the module where our functionality can attach to
let createPollModule = angular.module('app.votingCreatePoll', []);

// Include our UI-Router config settings
import createPollConfig from './createPoll/createPoll.config';
createPollModule.config(createPollConfig);

// Controllers
import createPollCtrl from './createPoll/createPoll.controller';
createPollModule.controller('createPollCtrl', createPollCtrl);

export default pollsModule;

'''
'''--- src/app/modules/voting/polls/polls.config.js ---
function pollsConfig($stateProvider) {
    'ngInject';

    $stateProvider
        .state('app.votingPolls', {
            url: '/voting/polls',
            controller: 'pollsCtrl',
            controllerAs: '$ctrl',
            templateUrl: 'modules/voting/polls/polls.html',
            title: 'See Polls'
        });

};

export default pollsConfig;

'''
'''--- src/app/modules/voting/polls/polls.controller.js ---
import nem from 'nem-sdk';

class pollsCtrl {
    // Set services as constructor parameter
    constructor($timeout, DataStore, Alert, Wallet, VotingUtils, Voting) {
        'ngInject';

        // Declaring services
        this._$timeout = $timeout;
        this._Alert = Alert;
        this._Wallet = Wallet;
        this._Voting = Voting;
        this._VotingUtils = VotingUtils;
        this._DataStore = DataStore;

        // Results object for the chart library
        this.results = {};
        this.chart = {};
        this.chart.options = {
            legend: {
                display: true
            }
        };
        this.chart.options.legend.position = "bottom";
        this.chart.options.segmentShowStroke = false;
        this.chart.options.tooltips = {
            enabled: false
        };
        this.chart.values = [];
        this.chart.labels = [];

        // Loading indicators
        this.loadingPoll = false;
        this.loadingResults = false;
        this.loadingVote = false;
        this.loadingPolls = false;

        // Default poll Index
        // testnet is -104 and mainnet is 104
        if(this._Wallet.network < 0){
            this.defaultIndexAccount = "TAVGTNCVGALLUPZC4JTLKR2WX25RQM2QOK5BHBKC";
        }
        else{
            this.defaultIndexAccount = "NAZN26HYB7C5HVYVJ4SL3KBTDT773NZBAOMGRFZB";
        }

        this.isMainnet = this._Wallet.network > 0;

        this.pollIndexAccount = this.defaultIndexAccount;

        // the id of the last poll fetched
        this.lastId = undefined;
        this.reachedEnd = false;

        this.pollIndexPrivate = false;

        this.votingFee = this._VotingUtils.getMessageFee("");

        // Common
        this.common = nem.model.objects.get("common");

        // Tags for types
        this.types = ["POI", "WhiteList"];
        this.classes = ["label label-success poi-tag", "label label-primary whitelist-tag"];

        // Poll list
        this.allPolls = [];  // Has all the poll headers on the poll Index (unfiltered)
        this.pollsList = [];  // Filtered poll headers
        this.officialPolls = []; // all the official polls
        this.selectedPoll = null;  // Details object for the selected poll
        this.currentPollAddress = '';  // The poll Address of the currently selected poll

        // Selected options
        this.selectedOption = "";  // for single choice
        this.selectedOptions = [];  // for multiple choice

        // Variables for knowing which data to show
        this.showDetails = false;
        this.showVote = false;  //wether to show voting options or results
        this.multisigVote = false;
        this.createIndex = false;

        this.tab = 1;  //selected tab
        this.onlyVotable = false;  //if true only votable polls appear in index

        // Issues for not being able to vote
        this.issues = [];
        this.invalidVote = true;
        this.alreadyVoted = 0;
        this.pollFinished = false;
        this.notInWhitelist = false;

        // To lock our send button if a transaction is not finished processing
        this.voting = false;

        // Info for multisig voting
        // checks if the user is cosignatory of an account, if false the multisig vote tab will not be shown
        this.isCosignatory = this._DataStore.account.metaData.meta.cosignatoryOf.length == 0 ? '' : this._DataStore.account.metaData.meta.cosignatoryOf[0];
        this.multisigAccount = '';

        // The address that is inputted on the options tab
        this.inputAccount = '';
        this.searching = false;
        this.inputAddressValid = true;
        this.loadingAddressError = false;

        // List of poll indexes created by the user
        this.createdIndexes = [];

        // for creating indexes
        this.createPrivateIndex = false;
        this.indexCreationFee = (this._Wallet.network < 0) ? 0.35 : 5;

        this.getPolls();
    }

    // Votes on the selected option to the selected poll
    vote() {
        // Disable send button;
        this.voting = true;
        this.checkValidVote();
        if (this.invalidVote) {
            this._Alert.votingError();
            this.voting = false;
            return;
        }

        // Get account private key or return
        if (!this._Wallet.decrypt(this.common)) return this.voting = false;

        // Get list of addresses from the selected options
        var optionAddresses = [];
        var optionStrings = [];
        let allAddresses = this.selectedPoll.options.addresses; //will be null for old format polls
        let allStrings = this.selectedPoll.options.strings;
        if(this.selectedPoll.options.link){ // not true if it is an old format poll
            var link = this.selectedPoll.options.link;
        }
        if (this.selectedPoll.formData.multiple) {
            optionAddresses = this.selectedOptions.map((i) => {
                if(link){
                    return link[allStrings[i]];
                }
                else{ //For compatibility with old polls
                    return allAddresses[i];
                }
            });
            optionStrings = this.selectedOptions.map((i) => {
                return allStrings[i];
            });
        } else {
            if(link){
                optionAddresses = [link[allStrings[this.selectedOption]]];
            }
            else{
                optionAddresses = [allAddresses[this.selectedOption]];
            }
            optionStrings = [allStrings[this.selectedOption]];
        }

        let votes = [];
        for (var i = 0; i < optionAddresses.length; i++) {
            if (this.multisigVote) {
                votes.push(this._Voting.vote(this.currentPollAddress, optionStrings[i], this.common, this.multisigAccount));
            } else {
                votes.push(this._Voting.vote(this.currentPollAddress, optionStrings[i], this.common));
            }
        }
        Promise.all(votes).then(transactions => {
            return this._Voting.broadcastVotes(transactions, this.common);
        }).then((d) => {
            this._$timeout(() => {
                this.voting = false;
                this.alreadyVoted = 1;
                this._Alert.votingSuccess();
                this.common.password = '';
                this.selectedOption = "";  // for single choice
                this.selectedOptions = [];  // for multiple choice
            });
        }, (e)=>{
            console.log("error", e);
            this._$timeout(() => {
                this.voting = false;
                this.common.password = '';
                if (e !== 'handledLedgerErrorSignal') {
                    if (e.data) {
                        this._Alert.votingUnexpectedError(e.data.message);
                    } else {
                        this._Alert.votingError();
                    }
                }
            });
        }).catch((e)=>{
            this._$timeout(() => {
                this.common.password = '';
                this.voting = false;
            });
        });
    }

    // toggles between vote / details views
    toggleView() {
        this.showVote = !this.showVote;
    }

    // manages inputted Poll address on the options tab
    pollAddressInput(){
        this.searching = true;
        this.inputAddressValid = true;
        this.loadingAddressError = false;
        //check if it is a valid address
        this.inputAccount = this.inputAccount.toUpperCase().replace(/-/g, '');
        this.inputAddressValid = this._VotingUtils.isValidAddress(this.inputAccount);
        if(!this.inputAddressValid){
            this.inputAddressValid = false;
            this.searching = false;
            return;
        }
        this.getPoll(this.inputAccount).then(()=>{
            this._$timeout(() => {
                this.searching = false;
            });
        }).catch((e)=>{
            this._$timeout(() => {
                this.searching = false;
                this.loadingAddressError = true;
            });
        });
    }

    // Checks if everything is correct to vote
    checkValidVote() {
        let issueList = [];
        //whitelist
        if (this.selectedPoll.formData.type === 1) {
            if (!this.isVotable(this.selectedPoll)) {
                issueList.push("You are not on the Whitelist");
                this.notInWhitelist = true;
            } else {
                this.notInWhitelist = false;
            }
        } else {
            this.notInWhitelist = false;
        }
        //mosaic
        if (this.selectedPoll.formData.type === 2) {
            if (!this.isVotable(this.selectedPoll.formData)) {
                issueList.push("You do not own the mosaic for this poll");
            }
        }
        //no option selected
        if ((this.selectedOption === "" && this.selectedOptions.length === 0)) {
            issueList.push("No option selected");
        }
        //no passwd
        if (this.common.password === "" && this._Wallet.algo !== 'trezor' && this._Wallet.algo !== 'ledger') {
            issueList.push("No password");
        }
        this.invalidVote = (issueList.length > 0);
        this.issues = issueList;
    }

    // For option selection
    toggleSelection(index) {
        var idx = this.selectedOptions.indexOf(index);
        // Is currently selected
        if (idx > -1) {
            this.selectedOptions.splice(idx, 1 // Is newly selected
            );
        } else {
            this.selectedOptions.push(index);
        }
    }

    // For option selection
    isSelected(index) {
        var idx = this.selectedOptions.indexOf(index);
        // Is currently selected
        return (idx > -1);
    }

    // Gets the details and results of a poll by address
    getPoll(address){
        console.log("loading poll", address);
        this.loadingPoll = true;
        this.loadingResults = true;

        return this._Voting.pollDetails(address).then((data) => {
            this._$timeout(() => {
                this.selectedPoll = data;
                let now = (new Date()).getTime();
                if (this.selectedPoll.formData.doe < now) {
                    this.pollFinished = true;
                    this.showVote = false;
                } else {
                    this.pollFinished = false;
                    this.showVote = true;
                }
                this.showDetails = true;
                this.checkValidVote();
                this.selectedOption = "";
                this.selectedOptions = [];

                this.loadingPoll = false;
                this.currentPollAddress = address;
                let resultsPromise;
                if(now < this.selectedPoll.formData.doe){
                    resultsPromise = this._Voting.getResults(address, this.selectedPoll.formData.type);
                }
                else{
                    resultsPromise = this._Voting.getResults(address, this.selectedPoll.formData.type, this.selectedPoll.formData.doe);
                }
                resultsPromise.then((data) => {
                    this._$timeout(() => {
                        // console.log("results->", data);
                        this.results = data;
                        this.chart.values = data.options.map((option) => {
                            return option.weighted;
                        });
                        this.chart.labels = data.options.map((option) => {
                            return (option.text + ': ' + option.percentage.toFixed(2) + '%');
                        });
                        this.loadingResults = false;
                    });
                }).then(()=>{
                    this._$timeout(() => {});
                }).catch(e=>{});
            });
        }).then(() => {
            this._$timeout(() => {
                return this.checkHasVoted();
            });
        }).then(()=>{
            this._$timeout(() => {});
        }).catch((e)=>{
            this.loadingPoll = false;
            throw e;
        });
    }

    // selects a poll by the index on the polls list
    pollSelect(index) {
        this.getPoll(this.pollsList[index].address).then(()=>{
            this._$timeout(() => {
                this.loadingAddressError = false;
                this.selectedOption = "";  // for single choice
                this.selectedOptions = [];  // for multiple choice
                this.inputAddressValid = true;
                this.inputAccount = "";
            });
        }).catch((e)=>{
            this._$timeout(() => {
                this.loadingAddressError = true;
            });
        });
    }

    // selects a poll by the index on the polls list
    searchPoll() {
        console.log("account", this.inputAccount);
        if (!this._VotingUtils.isValidAddress(this.inputAccount)) {
            this.inputAddressValid = false;
        } else {
            this.getPoll(this.inputAccount).then(()=>{
                this._$timeout(() => {
                    this.loadingAddressError = false;
                    this.selectedOption = "";  // for single choice
                    this.selectedOptions = [];  // for multiple choice
                });
            }).catch((e)=>{
                this._$timeout(() => {
                    this.loadingAddressError = true;
                });
            });
        }
    }

    // checks if the currently selected account has voted on the selected poll
    checkHasVoted() {
        this.loadingVote = true;
        if (this.multisigVote) {
            return this._Voting.hasVoted(this.multisigAccount.address, this.selectedPoll).then((resp) => {
                this._$timeout(() => {
                    this.alreadyVoted = resp;
                    this.loadingVote = false;
                });
            });
        } else {
            return this._Voting.hasVoted(this._Wallet.currentAccount.address, this.selectedPoll).then((resp) => {
                this._$timeout(() => {
                    this.alreadyVoted = resp;
                    this.loadingVote = false;
                });
            });
        }
    }

    // for getting polls list tabs
    isTabSet(tab) {
        return (this.tab === tab);
    }

    // for setting polls list tabs
    setTab(tab) {
        this.inputAddressValid = true;
        this.loadingAddressError = false;
        this.createIndex = false;
        this.showDetails = false;
        this.tab = tab;
        this.inputAddressValid = true;
        this.inputAccount = "";
        this.updateList();
    }

    // for setting (VOTE/MULTISIG/RESULTS tabs)
    setDetailsTab(tab) {
        this.createIndex = false;
        if (tab === 1) {
            this.showVote = true;
            this.multisigVote = false;
            this.checkValidVote();
        } else if (tab === 2) {
            this.multisigAccount = this._DataStore.account.metaData.meta.cosignatoryOf[0];
            this.showVote = true;
            this.multisigVote = true;
            this.checkValidVote();
        } else if (tab === 3) {
            this.showVote = false;
            this.multisigVote = false;
        }
        this.checkHasVoted();
    }

    // for getting (VOTE/MULTISIG/RESULTS tabs)
    isDetailsTabSet(tab) {
        if (tab === 1) {
            return (this.showVote && !this.multisigVote);
        } else if (tab === 2) {
            return this.multisigVote;
        } else if (tab === 3) {
            return !this.showVote;
        }
    }

    // for styling tags
    getClass(index) {
        return this.classes[this.pollsList[index].type];
    }

    // for styling tags
    getCurrentTypeTagClass() {
        if (this.selectedPoll) {
            return this.classes[this.selectedPoll.formData.type];
        }
    }

    // for styling tags
    getCurrentTypeTag() {
        if (this.selectedPoll) {
            let type = this.selectedPoll.formData.type;
            if (type === 0)
                return "POI";
            if (type === 1)
                return 'WhiteList';
            /*if (type === 2)
                return this.selectedPoll.formData.mosaic;
            */
        }
    }

    //returns wether current user can vote on the poll(by whitelist, not by doe)
    isVotable(header) {
        var type = ("type" in header)
            ? (header.type)
            : (header.formData.type);
        if (type === 0) {
            return true;
        }
        let address = this._Wallet.currentAccount.address;
        if (this.multisigVote) {
            address = this.multisigAccount.address;
        }
        if (type === 1) {
            console.log("check address", address);
            return this._Voting.isInWhitelist(address, header.whitelist);
        } else if (type === 2) {
            let namespace = header.mosaic.split(':')[0];
            let mosaic = header.mosaic.split(':')[1];
            return (this._VotingUtils.ownsMosaic(address, namespace, mosaic));
        }
    }

    // applies filters to poll headers
    updateList() {
        let now = (new Date()).getTime();
        if (this.tab === 1) {
            this.pollsList = this.allPolls;
        } else if (this.tab === 2) {
            this.pollsList = this.allPolls.filter((poll) => {
                return (poll.doe > now);
            });
        } else if (this.tab === 3) {
            this.pollsList = this.allPolls.filter((poll) => {
                return (poll.doe <= now);
            });
        } else if (this.tab === 4) {
            this.pollsList = this.officialPolls;
        }

        // if (this.onlyVotable) {
        //     this.pollsList = this.pollsList.filter(this.isVotable.bind(this));
        // }
    }

    // gets the first page of polls
    getPolls() {
        //get all polls
        this.loadingPolls = true;
        this.lastId = undefined;
        // load official polls
        if (this.isMainnet) {
            this._Voting.getOfficialPolls().then((polls) => {
                this._$timeout(() => {
                    this.officialPolls = polls;
                });
            }).catch((e)=>{
                this._$timeout(() => {
                    this.loadingPolls = false;
                    throw e;
                });
            });
        }

        this._Voting.getPolls(this.pollIndexAccount, this.lastId).then((data) => {
            this._$timeout(() => {
                this.allPolls = data.polls;
                this.lastId = data.lastId;
                this.loadingPolls = false;
                this.setTab(1);
                // apply filters
                this.updateList();
            });
        }).catch((e)=>{
            this._$timeout(() => {
                this.loadingPolls = false;
                throw e;
            });
        });
    }

    nextPage() {
        // get 100 more polls
        return this._Voting.getPolls(this.pollIndexAccount, this.lastId).then((data) => {
            this._$timeout(() => {
                if (data.polls.length === 0) {
                    this.reachedEnd = true;
                }
                this.allPolls = this.allPolls.concat(data.polls);
                this.lastId = data.lastId;
                this.loadingPolls = false;
                // this.setTab(1);
                // apply filters
                this.updateList();
            });
        }).catch((e)=>{
            this._$timeout(() => {
                this.loadingPolls = false;
                throw e;
            });
        });
    }

}

export default pollsCtrl;

'''
'''--- src/app/modules/voting/polls/polls.html ---
<div class="voting-page">

  <div class="container-fluid" style="padding-left: 20px; padding-right: 20px;">
    <div class="row" ng-hide="$ctrl.loadingPoll || $ctrl.showDetails">
      <div class="col-sm-11">
        <h2>Vote and See Polls</h2>
      </div>
    </div>

    <div class="">
      <p class="bg-info" style="text-align:left;"><i class="fa fa-question-circle"></i> Voting system requires a lot of requests to the chain, therefore it can trigger the node spam protection. If loading time takes more than 1 minute, leave the module, change node and come back.</p>
    </div>

    <div class="row" ng-show="$ctrl.showDetails && !$ctrl.loadingPoll && !$ctrl.createIndex && !$ctrl.loadingAddressError">
      <div class="col-sm-12">
        <button class="btn btn-dark" ng-click="$ctrl.showDetails = false;"><i class="fa fa-chevron-left"></i> Back to list</button>
        <hr>
        <h2 style="font-size: 30px;"> {{$ctrl.selectedPoll.formData.title}} </h2>
        <p>Poll Address: {{$ctrl.currentPollAddress}}</p>
        <p> <span ng-class="$ctrl.getCurrentTypeTagClass()">&nbsp{{$ctrl.getCurrentTypeTag()}}</span><span class="text-muted small"> Date of ending: {{$ctrl.selectedPoll.formData.doe | date:"MM/dd/yyyy 'at' h:mma"}}</span> </p>
        <p class="bg-info" style="text-align:left;">{{$ctrl.selectedPoll.description}}</p>
        <hr>
      </div>
    </div>

    <div id="row1" class="row row1">
      <div class="col-md-12" ng-hide="$ctrl.loadingPoll || $ctrl.showDetails">
        <div class="panel panel-default">
          <div class="panel-heading">
            <!-- TABS -->
            <ul class="nav nav-tabs">
              <li ng-class="{ active: $ctrl.isTabSet(1) }">
                <a ng-click="$ctrl.setTab(1)">All</a>
              </li>
              <li ng-class="{ active: $ctrl.isTabSet(2) }">
                <a ng-click="$ctrl.setTab(2)">Ongoing</a>
              </li>
              <li ng-class="{ active: $ctrl.isTabSet(3) }">
                <a ng-click="$ctrl.setTab(3)">Ended</a>
              </li>
              <li ng-class="{ active: $ctrl.isTabSet (4) }" ng-show="$ctrl.isMainnet">
                <a ng-click="$ctrl.setTab(4)">Official</a>
              </li>
	      <li>
                <a ng-click="$ctrl.getPolls();">
			<i ng-class="$ctrl.loadingPolls ? 'fa fa-refresh fa-spin' : 'fa fa-refresh'" aria-hidden="true"></i> Refresh
		</a>
              </li>
            </ul>
          </div>
          <div class="panel-body">
            <br>
            <!-- Poll Search -->
            <input type="text" ng-model="$ctrl.inputAccount" style="width:70%"/>
            <button type="submit" style="width:10%" class="btn btn-success pull-xs-left" ng-click="$ctrl.searchPoll();"> Search Poll </button>
            <!-- Poll Error -->
            <div ng-show="$ctrl.loadingAddressError" class="loading-div">
              <h3>There was an error fetching the poll. The poll does not exist, or was not created properly.</h3>
            </div>
            <div ng-hide="$ctrl.inputAddressValid"><p class="text-danger">Not a valid Address</p></div>
            <div ng-show="$ctrl.inputAddressValid"></div>
            <br>
            <!-- LIST -->
            <div ng-hide="$ctrl.isTabSet(5)">
              <div class="pre-scrollable">
                <div ng-repeat="poll in $ctrl.pollsList track by $index">
                  <div class="poll-list-element">
                    <button ng-click="$ctrl.pollSelect($index)" class="btn btn-default poll-select"><span  ng-class="$ctrl.getClass($index)">{{$ctrl.types[$ctrl.pollsList[$index].type]}}</span> {{$ctrl.pollsList[$index].title}}</button>
                  </div>
                </div>
                <div class="poll-list-element" ng-show="!$ctrl.isTabSet(4)">
                  <button ng-hide="$ctrl.reachedEnd" ng-click="$ctrl.nextPage()" class="btn btn-success">Fetch More Polls...</button>
                </div>
              </div>
            </div>
            <!-- OPTIONS TAB -->
            <div ng-show="$ctrl.isTabSet(5)">
              <!-- only votable -->
              <input id="box1" type="checkbox" ng-model="$ctrl.onlyVotable" ng-click="$ctrl.updateList()"><label for="box1">Show only polls you can vote on</label>
            </div>

          </div>
        </div>
      </div>

      <div class="col-md-12">
        <div class="panel panel-default">
         <!-- <div class="panel-heading" style="background-color: rgb(68, 68, 68); color: white;border-radius: 0px;">
            <i class="fa fa-chevron-right"></i>
          </div>-->
          <div class="panel-heading" ng-show="$ctrl.showDetails && !$ctrl.loadingPoll && !$ctrl.createIndex && !$ctrl.loadingAddressError">
            <ul class="nav nav-tabs">
              <li ng-class="{ active: $ctrl.isDetailsTabSet(1) }">
                <a ng-click="$ctrl.setDetailsTab(1)">Vote</a>
              </li>
              <li ng-show="$ctrl.isCosignatory" ng-class="{ active: $ctrl.isDetailsTabSet(2) }">
                <a ng-click="$ctrl.setDetailsTab(2)">Multisig</a>
              </li>
              <li ng-class="{ active: $ctrl.isDetailsTabSet(3) }">
                <a ng-click="$ctrl.setDetailsTab(3)">Results</a>
              </li>
            </ul>
          </div>
          <!-- SPINNER -->
          <div ng-show="$ctrl.loadingPoll" class="loading-div">
            <i class="fa fa-4x fa-spinner fa-spin"></i>
          </div>
          <!-- Details -->
          <div class="panel-body" ng-show="$ctrl.showDetails && !$ctrl.loadingPoll && !$ctrl.createIndex && !$ctrl.loadingAddressError">
            <!-- MULTISIG SELECT -->
            <fieldset class="form-group">
              <div class="input-group" ng-show="$ctrl.multisigVote">
                <span class="input-group-btn">
                  <label for="namespaceParent" class="control-label">{{ 'GENERAL_ACCOUNT' | translate }}:</label>
                </span>
                <select class="form-control" ng-options="acc.address for acc in $ctrl._DataStore.account.metaData.meta.cosignatoryOf track by acc.address" ng-model="$ctrl.multisigAccount" ng-change="$ctrl.checkHasVoted(); $ctrl.checkValidVote()"></select>
              </div>
            </fieldset>
            <!-- VOTE -->
            <div ng-show="$ctrl.showVote">
              <!--<h4 class="text-warning" style="color: gray; ">Vote</h4>-->
              <!-- Multiple answer -->
              <div ng-show="$ctrl.selectedPoll.formData.multiple">
                <p>
                  This is a multiple answer Poll. You can divide your vote into different options.
                </p>
                <ul class="list-group">
                  <div ng-repeat="option in $ctrl.selectedPoll.options.strings track by $index">
                    <li class="list-group-item">
                      <input id="{{option}}" type="checkbox" ng-checked="$ctrl.isSelected($index)" ng-click="$ctrl.toggleSelection($index); $ctrl.checkValidVote()"><label for="{{option}}" ng-disabled="$ctrl.voting || $ctrl.alreadyVoted > 0">{{option}}</label>
                    </li>
                  </div>
                  <br>
                </ul>
              </div>
              <!-- Single answer -->
              <div ng-hide="$ctrl.selectedPoll.formData.multiple">
                <ul class="list-group">
                  <div ng-repeat="option in $ctrl.selectedPoll.options.strings track by $index">
                    <label class="form-check-label">
                      <li class="list-group-item">
                        <div class="radio">
                          <label>
                            <input type="radio" name="optionsRadios" ng-model="$ctrl.selectedOption" ng-value="$index" ng-click="$ctrl.checkValidVote()" ng-disabled="$ctrl.voting || $ctrl.alreadyVoted > 0">
                              {{option}}
                          </label>
                        </div>
                      </li>
                    </label>
                  </div>
                  <br>
                </ul>
              </div>
              <!-- Password and buttons -->
              <div class="col-md-6" ng-hide="$ctrl.alreadyVoted > 0 || $ctrl.loadingVote || $ctrl.pollFinished || $ctrl._Wallet.algo === 'trezor' || $ctrl._Wallet.algo === 'ledger' || $ctrl.notInWhitelist">
                <fieldset class="form-group">
                  <div class="input-group">
                    <span class="input-group-btn">
                      <label ng-class="!$ctrl.common.password.length ? 'has-error' : ''">{{ 'FORM_PASSWORD' | translate }}:</label>
                    </span>
                    <input class="form-control password" type="password" placeholder="{{ 'FORM_PASSWORD_FIELD_PLACEHOLDER' | translate }}" ng-model="$ctrl.common.password" ng-class="!$ctrl.common.password.length ? 'has-error' : ''" ng-change="$ctrl.checkValidVote()"/>
                  </div>
                </fieldset>
              </div>
              <div class="container-fluid">
                <div class="row">
                  <div class="col-md-7" ng-hide="$ctrl.loadingVote">
                    <div ng-hide="$ctrl.alreadyVoted || $ctrl.pollFinished || $ctrl.notInWhitelist">
                      <p><b><i class="fa fa-exclamation-triangle"></i> Voting has a fee of {{($ctrl.votingFee | fmtNemValue)[0]}}.{{($ctrl.votingFee | fmtNemValue)[1]}} XEM per option</b></p>
                      <button class="btn btn-success pull-xs-left" type="submit" style="width:90%" ng-click="$ctrl.vote()" ng-disabled="$ctrl.voting || $ctrl.invalidVote || $ctrl.alreadyVoted > 0">Vote</button>
                    </div>
                    <div ng-show="$ctrl.notInWhitelist">
                      <p class="bg-danger">You are not on the whitelist</p>
                    </div>
                    <div ng-show="$ctrl.alreadyVoted === 2">
                      <p class="bg-success">You have successfully Voted on this Poll</p>
                    </div>
                    <div ng-show="$ctrl.alreadyVoted === 1">
                      <p class="bg-warning">You have an unconfirmed Vote on this Poll</p>
                    </div>
                    <div ng-show="$ctrl.pollFinished">
                      <p class="bg-danger">This poll has ended</p>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <!-- SEE RESULTS -->
            <div ng-hide="$ctrl.showVote || $ctrl.loadingResults">
              <br>
              <!--h4 class="text-warning" style="color: gray; ">Results</h4-->
              <div class="container-fluid">
                <div class="row">
                  <div class="col-md-7">
                    <div style="width:80%;margin:auto;">
                      <canvas id="doughnut" chart-options="$ctrl.chart.options" class="chart chart-doughnut" chart-data="$ctrl.chart.values" chart-labels="$ctrl.chart.labels">
                    </canvas>
                    </div>
                    <br>
                    <br>
                  </div>
                  <div class="col-md-5">
                    <div ng-hide="$ctrl.pollFinished" class="bg-warning ongoing-warning">
                      <p> This poll has not finished yet, the results are not definitive. </p>
                    </div>
                    <div class="bg-info">
                      <span>
                        <div ng-repeat="option in $ctrl.results.options track by $index" style="text-align: left">
                          <b><ins>{{option.text}}</ins></b><br>
                          votes: {{option.votes}}<br>
                          weighted score*: {{($ctrl.selectedPoll.formData.type === 0) ? ((option.weighted*100).toFixed(5) + '%') : (option.weighted)}}<br>
                          percentage: {{option.percentage.toFixed(2)}}<br>
                        </div>
                      </span>
                    </div>
                    <br>
                    <p class="text-muted small">
                      * Weighted score varies depending on the type of vote:<br>
                      - For whitelist polls it is the same as the votes<br>
                      - For POI polls it is the sum of importances of the voters multiplied by 100<br>
                    </p>
                  </div>
                </div>
              </div>
              <br><br>
            </div>
            <div ng-show="!$ctrl.showVote && $ctrl.loadingResults" class="loading-div">
              <i class="fa fa-4x fa-spinner fa-spin"></i>
            </div>

          </div>
        </div>
      </div>
    </div>
  </div>
</div>

'''
'''--- src/app/services/addressBook.service.js ---
import nem from 'nem-sdk';

/** Service with relative functions on user address books. */
class AddressBook {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor($localStorage) {
        'ngInject';

        // Service dependencies region //

        this._storage = $localStorage;

        // End dependencies region //

        // Service properties region //

        /**
         * Get contacts from local storage or set an empty object
         *
         * @type {object}
         */
        this._storage.contacts = this._storage.contacts || {};

        // End properties region //
    }

    // Service methods region //

    /**
     * Add an account to contacts in local storage
     *
     * @param {string} primary - The primary account of the wallet
     * @param {object} account - The account to add (optional)
     *
     * @return {boolean} - True if valid, false otherwise
     */
    addAccount(primary, account) {
        let cleanPrimary = nem.model.address.clean(primary);
        if(undefined === this._storage.contacts[cleanPrimary]) {
            // If not existing, create address book with primary account
            this._storage.contacts[cleanPrimary] = [{
                "label": "Primary",
                "address": nem.utils.format.address(primary)
            }];
            if(undefined !== account) {
                // Push child account into address book
                this._storage.contacts[cleanPrimary].push({
                    "label": account.label,
                    "address": nem.utils.format.address(account.address)
                });
            }
            return true;
        } else {
            if (undefined === account) return false;
            // Check if address already present
            for (let i = 0; i < this._storage.contacts[cleanPrimary].length; i++) {
                if (account.address.toUpperCase().replace(/-/g, '') === nem.model.address.clean(this._storage.contacts[cleanPrimary][i].address)) {
                    return false;
                }
            }
            // Push child account into address book
            this._storage.contacts[cleanPrimary].push({
                "label": account.label,
                "address": nem.utils.format.address(account.address)
            });
            return true;
        }
    }

    /**
     * Save contacts to local storage
     *
     * @param {object} wallet - A wallet object
     * @param {array} contacts - An array of contacts
     *
     * @return -
     */
    save(wallet, contacts) {
        let primary = wallet.accounts[0].address;
        this._storage.contacts[primary] = contacts;
        return;
    }

    /**
     * Gets contacts from local storage
     *
     * @param {object} wallet - A wallet object
     *
     * @return {$localStorage~array} - An array of contacts for the given wallet
     */
    getContacts(wallet) {
        if (!wallet) return [];
        let primary = wallet.accounts[0].address;
        if (undefined === this._storage.contacts) this._storage.contacts = {};
        if (undefined === this._storage.contacts[primary]) this._storage.contacts[primary] = [];
        return this._storage.contacts[primary];
    }

    /**
     * Return contact label for an address
     *
     * @param {object} wallet - A wallet object
     * @param {string} address - The address to look for
     *
     * @return {string|boolean} - The account label or false
     */
    getContact(wallet, address) {
        if (!wallet || !address) return false;
        let primary = wallet.accounts[0].address;
        let _address = address.toUpperCase().replace(/-/g, '');
        if (undefined === this._storage.contacts[primary]) return false;
        for(let i = 0; i < this._storage.contacts[primary].length; i++) {
            let contactAddress = this._storage.contacts[primary][i].address.toUpperCase().replace(/-/g, '');
            if(contactAddress === _address) {
                return this._storage.contacts[primary][i].label;
            }
        }
        return false;
    }

    // End methods region //

}

export default AddressBook;
'''
'''--- src/app/services/alert.service.js ---
export default class Alert {
    constructor(ngToast, $filter) {
        'ngInject';

        // ngToast provider
        this._ngToast = ngToast;
        // Filters
        this._$filter = $filter;
    }

    /***
     * Error alerts
     */
    missingFormData() {
        this._ngToast.create({
            className: 'danger',
            content: this._$filter('translate')('ALERT_MISSING_FORM_DATA')
        });
    }

    errorWalletDownload() {
        this._ngToast.create({
            className: 'danger',
            content: this._$filter('translate')('ALERT_ERROR_WALLET_DOWNLOAD')
        });
    }

    passwordsNotMatching() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_PASSWORDS_NOT_MATCHING'),
            className: 'danger'
        });
    }

    invalidKeyForAddress() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_INVALID_KEY_FOR_ADDR'),
            className: 'danger'
        });
    }

    noWalletLoaded() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_NO_WALLET_LOADED'),
            className: 'danger'
        });
    }

    walletNameExists() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_WALLET_NAME_EXISTS'),
            className: 'danger'
        });
    }

    invalidWalletFile() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_INVALID_WALLET_FILE'),
            className: 'danger'
        });
    }

    invalidCustomNode() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_INVALID_CUSTOM_NODE'),
            className: 'danger'
        });
    }

    invalidWebsocketPort() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_INVALID_WEBSOCKET_PORT'),
            className: 'danger'
        });
    }

    websocketError(message) {
        this._ngToast.create({
            content: message,
            className: 'danger'
        });
    }

    mijinDisabled() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_MIJIN_DISABLED'),
            className: 'danger'
        });
    }

    getNamespacesByIdError(message) {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_GET_NS_BY_ID_ERROR') + message,
            className: 'danger'
        });
    }

    getAccountDataError(message) {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_GET_ACCOUNT_DATA_ERROR') + message,
            className: 'danger'
        });
    }

    invalidAddressForNetwork(address, network) {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_ERROR_OCCURRED') + address + this._$filter('translate')('ALERT_INVALID_ADDR_FOR_NETWORK') + '(' + network + ') !',
            className: 'danger'
        });
    }

    invalidPassword() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_INVALID_PASSWORD'),
            className: 'danger'
        });
    }

    transactionError(message) {
        this._ngToast.create({
            content: message,
            className: 'danger'
        });
    }

    cosignatoryAlreadyPresentInList(){
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_COSIG_ALREADY_IN_LIST'),
            className: 'danger'
        });
    }

    cosignatoryhasNoPubKey(){
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_COSIGNATORY_HAS_NO_PUBLIC'),
            className: 'danger'
        });
    }

    multisighasNoPubKey(){
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_MULTISIG_HAS_NO_PUBLIC'),
            className: 'danger'
        });
    }

    cosignatoryCannotBeMultisig(){
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_COSIG_CANNOT_BE_MULTISIG'),
            className: 'danger'
        });
    }

    noNamespaceOwned(){
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_NO_NS_OWNED'),
            className: 'danger'
        });
    }

    unlockedInfoError(){
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_UNLOCKED_INFO_ERROR'),
            className: 'danger'
        });
    }

    lockError(message) {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_LOCK_ERROR') + message,
            className: 'danger'
        });
    }

    unlockError(message) {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_UNLOCK_ERROR') + message,
            className: 'danger'
        });
    }

    supernodesError() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_SUPERNODES_ERROR'),
            className: 'danger'
        });
    }

    invalidNtyFile() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_INVALID_NTY_FILE'),
            className: 'danger'
        });
    }

    createWalletFailed(err) {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_CREATE_WALLET_FAILED') + err,
            className: 'danger'
        });
    }

    requestFailed(err) {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_REQUEST_FAILED') + err,
            className: 'danger'
        });
    }

    derivationFromSeedFailed(err) {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_DERIVATION_FROM_SEED_FAILED') + err,
            className: 'danger'
        });
    }

    bip32GenerationFailed(err) {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_BIP32_GENERATION_FAILED') + err,
            className: 'danger'
        });
    }

    noWalletData() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_NO_WALLET_DATA'),
            className: 'danger'
        });
    }

    cantLoginWithoutWallet() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_CANNOT_LOGIN_WITHOU_WALLET'),
            className: 'danger'
        });
    }

    noWalletToSet() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_NO_WALLET_TO_SET'),
            className: 'danger'
        });
    }

    invalidWalletIndex() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_INVALID_WALLET_INDEX'),
            className: 'danger'
        });
    }

    noCurrentWallet() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_NO_CURRENT_WALLET'),
            className: 'danger'
        });
    }

    alreadyMultisig() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_ALREADY_MULTISIG'),
            className: 'danger'
        });
    }

    invalidModificationArray() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_INVALID_MODIFICATION_ARRAY'),
            className: 'danger'
        });
    }

    errorGetMarketInfo() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_GET_MARKET_INFO_ERROR'),
            className: 'danger'
        });
    }

    multisigCannotBeCosignatory() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_MULTISIG_CANNOT_BE_COSIG'),
            className: 'danger'
        });
    }

    purgeCancelled() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_PURGE_CANCELLED'),
            className: 'danger'
        });
    }

    mainnetDisabled() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_MAINNET_DISABLED'),
            className: 'danger'
        });
    }

    emptyDecodedMessage() {
       this._ngToast.create({
            content: this._$filter('translate')('ALERT_EMPTY_DECODED_MSG'),
            className: 'danger'
        });
    }

    invalidNamespaceName() {
       this._ngToast.create({
            content: this._$filter('translate')('ALERT_INVALID_NS_NAME'),
            className: 'danger'
        });
    }

    invalidMosaicName() {
       this._ngToast.create({
            content: this._$filter('translate')('ALERT_INVALID_MOSAIC_NAME'),
            className: 'danger'
        });
    }

    invalidMosaicDescription() {
       this._ngToast.create({
            content: this._$filter('translate')('ALERT_MOSAIC_DESCRIPTION'),
            className: 'danger'
        });
    }

    errorFetchingIncomingTxes(message) {
         this._ngToast.create({
            content: this._$filter('translate')('ALERT_GET_INCOMING_TXES_ERROR') + message,
            className: 'danger'
        });
    }

    connectionError() {
         this._ngToast.create({
            content: this._$filter("translate")("GENERAL_CONNECTION_ERROR"),
            className: 'danger'
        });
    }

    errorGetMosaicsDefintions(message) {
        this._ngToast.create({
            content: this._$filter("translate")("ALERT_GET_MOSAICS_DEFINITIONS_ERROR") + message,
            className: 'danger'
        });
    }

    errorGetSubNamespaces(message) {
        this._ngToast.create({
            content: this._$filter("translate")("ALERT_GET_SUB_NS_ERROR") + message,
            className: 'danger'
        });
    }

    errorGetMosaics(message) {
        this._ngToast.create({
            content: this._$filter("translate")("ALERT_GET_MOSAICS_ERROR") + message,
            className: 'danger'
        });
    }

    errorGetTransactions(message) {
        this._ngToast.create({
            content: this._$filter("translate")("ALERT_GET_TRANSACTIONS_ERROR") + message,
            className: 'danger'
        });
    }

    invalidAddressBookFile() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_INVALID_ADDRESS_BOOK_FILE'),
            className: 'danger'
        });
    }

    namespaceExpiryNotice(ns, blocks) {
        this._ngToast.create({
            content: this._$filter("translate")("RENEW_NS_ALERT_PART_1") + ' <b>'+ns+'</b> ' + this._$filter("translate")("RENEW_NS_ALERT_PART_2") + ' (~' + blocks + ' ' + this._$filter("translate")("GENERAL_BLOCKS") + '). ' + this._$filter("translate")("RENEW_NS_ALERT_PART_3") ,
            className: 'warning',
            timeout: 10000
        });
    }

    invalidAddress(addr) {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_INVALID_ADDRESS'),
            className: 'danger'
        });
    }

    invalidAmount() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_INVALID_AMOUNT'),
            className: 'danger'
        });
    }

    invalidPrivateKey() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_INVALID_PRIVATE_KEY'),
            className: 'danger'
        });
    }

    fileSizeError(filename) {
        this._ngToast.create({
            content: filename + this._$filter("translate")("ALERT_FILE_SIZE_ERROR"),
            className: 'danger'
        });
    }

    noPublicKeyForDecoding() {
        this._ngToast.create({
            content: this._$filter("translate")("ALERT_MESSAGE_DECODE_KEY_ERROR"),
            className: 'danger'
        });
    }

    errorGetTimeSync() {
        this._ngToast.create({
            content: this._$filter("translate")("ALERT_FETCH_TIME_SYNC_ERROR"),
            className: 'danger'
        });
    }

    errorGetBtcPrice() {
        this._ngToast.create({
            content: this._$filter("translate")("ALERT_BTC_MARKET_ERROR"),
            className: 'danger'
        });
    }

    errorMultisigMinSignature() {
        this._ngToast.create({
            content: this._$filter("translate")("ALERT_MULTISIG_MIN_SIGNATURE"),
            className: 'danger'
        });
    }

    cosignatoryRemovalLimit() {
        this._ngToast.create({
            content: this._$filter("translate")("ALERT_COSIG_REMOVAL_LIMIT"),
            className: 'danger'
        });
    }

    errorMultisigMinSignatureInvalid() {
        this._ngToast.create({
            content: this._$filter("translate")("ALERT_MULTISIG_MIN_SIGNATURE_INVALID"),
            className: 'danger'
        });
    }

    recipientHasNoPublicKey() {
        this._ngToast.create({
            content: this._$filter("translate")("ALERT_RECIPIENT_PUBLIC_KEY"),
            className: 'danger'
        });
    }

    noEncryptionWithMultisig() {
        this._ngToast.create({
            content: this._$filter("translate")("ALERT_ENCRYPT_MULTISIG"),
            className: 'danger'
        });
    }

    brainPasswordTooShort() {
        this._ngToast.create({
            className: 'danger',
            content: this._$filter('translate')('ALERT_BRAIN_PASSWORD_TOO_SHORT')
        });
    }

    nodeSeemsOffline() {
        this._ngToast.create({
            className: 'danger',
            content: this._$filter('translate')('ALERT_NODE_SEEMS_OFFLINE'),
            dismissOnTimeout: false,
            dismissButton: true
        });
    }

    passphraseIsWeak() {
        this._ngToast.create({
            className: 'danger',
            content: this._$filter('translate')('ALERT_WEAK_PASSPHRASE')
        });
    }

    brainWalletUpgrade() {
        this._ngToast.create({
            className: 'danger',
            content: this._$filter('translate')('ALERT_BRAIN_WALLET_UPGRADE'),
            additionalClasses: 'toast-text-left',
            dismissOnTimeout: false,
            dismissButton: true,
            dismissOnClick: false
        });
    }

    exchangeNeedsMessage() {
        this._ngToast.create({
            className: 'danger',
            content: this._$filter('translate')('ALERT_EXCHANGE_NEEDS_MESSAGE'),
            dismissOnTimeout: false,
            dismissButton: true,
            dismissOnClick: false
        });
    }

    contactAlreadyInAddressBook() {
        this._ngToast.create({
            className: 'danger',
            content: this._$filter('translate')('ALERT_ACCOUNT_ALREADY_IN_ADDRESS_BOOK')
        });
    }

    maxMosaicSupply() {
        this._ngToast.create({
            className: 'danger',
            content: this._$filter('translate')('ALERT_MAX_MOSAIC_SUPPLY')
        });
    }

    getMosaicSupplyError(message) {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_GET_MOSAIC_SUPPLY_ERROR') + message,
            className: 'danger'
        });
    }

    votingUnexpectedError(err) {
        this._ngToast.create({
            content: err,
            className: 'danger'
        });
    }

    votingError() {
        this._ngToast.create({
            content: this._$filter("translate")("ALERT_VOTING_ERROR"),
            className: 'danger'
        });
    }

    noEncryptedMessageOffline() {
        this._ngToast.create({
            content: this._$filter("translate")("ALERT_ENCRYPTED_MSG_OFFLINE"),
            className: 'danger'
        });
    }

    insufficientBalance() {
        this._ngToast.create({
            content: this._$filter("translate")("ALERT_INSUFFICIENT_BALANCE"),
            className: 'danger'
        });
    }

    dnsNoInfoFound(message) {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_DNS_NO_INFO_FOUND') + message,
            className: 'danger'
        });
    }

    ledgerDeviceNotFound() {
        this._ngToast.create({
            content: this._$filter('translate')('LEDGER_NANO_NO_DEVICE'),
            className: 'danger'
        });
    }

    ledgerNotUsingCorrectApp(isSymbolOptin) {
        this._ngToast.create({
            content: this._$filter('translate')(isSymbolOptin ? 'LEDGER_NANO_NOT_USING_XYM_APP': 'LEDGER_NANO_NOT_USING_NEM_APP'),
            className: 'danger'
        });
    }

    ledgerNotSupportApp() {
        this._ngToast.create({
            content: this._$filter('translate')('LEDGER_NANO_NOT_SUPPORTED_APP'),
            className: 'danger'
        });
    }

    ledgerConnectedOtherApp() {
        this._ngToast.create({
            content: this._$filter('translate')('LEDGER_NANO_CONNECTED_OTHER_APP'),
            className: 'danger'
        });
    }

    ledgerNotOpenApp(isSymbolOptin) {
        this._ngToast.create({
            content: this._$filter('translate')(isSymbolOptin ? 'LEDGER_NANO_NOT_OPENED_XYM_APP': 'LEDGER_NANO_NOT_OPENED_NEM_APP'),
            className: 'danger'
        });
    }

    ledgerDeviceLocked() {
        this._ngToast.create({
            content: this._$filter('translate')('LEDGER_NANO_DEVICE_LOCKED'),
            className: 'danger'
        });
    }

    ledgerLoginCancelByUser() {
        this._ngToast.create({
            content: this._$filter('translate')('LEDGER_NANO_USER_REJECT_LOGIN'),
            className: 'danger'
        });
    }

    ledgerRequestCancelByUser() {
        this._ngToast.create({
            content: this._$filter('translate')('LEDGER_NANO_USER_REJECT_REQUEST'),
            className: 'danger'
        });
    }

    ledgerFollowInstruction() {
        this._ngToast.create({
            content: this._$filter('translate')('LEDGER_NANO_FOLLOW_INSTRUCTION'),
            className: 'info'
        });
    }

    ledgerTransactionTooBig() {
        this._ngToast.create({
            content: this._$filter('translate')('LEDGER_NANO_TRANSACTION_TOO_BIG'),
            className: 'danger'
        });
    }

    ledgerTransactionCancelByUser() {
        this._ngToast.create({
            content: this._$filter('translate')('LEDGER_NANO_TRANSACTION_USER_CANCEL'),
            className: 'danger'
        });
    }

    ledgerFailedToSignTransaction(message) {
        this._ngToast.create({
            content: this._$filter('translate')('LEDGER_NANO_TRANSACTION_FAILED') + message,
            className: 'danger'
        });
    }

    /***
     * Success alerts
     */
    createWalletSuccess() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_CREATE_WALLET_SUCCESS'),
            className: 'success'
        });
    }

    successPurge() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_SUCCESS_PURGE'),
            className: 'success'
        });
    }

    successLogout() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_SUCCESS_LOGOUT'),
            className: 'success'
        });
    }

    loadWalletSuccess() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_LOAD_WALLET_SUCCESS'),
            className: 'success'
        });
    }

    transactionSuccess() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_TRANSACTION_SUCCESS'),
            className: 'success'
        });
    }

    generateNewAccountSuccess() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_GENERATE_ACCOUNT_SUCCESS'),
            className: 'success'
        });
    }

    upgradeSuccess() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_UPGRADE_SUCCESS'),
            className: 'success'
        });
    }

    transactionSignatureSuccess() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_SIGNATURE_SUCCESS'),
            className: 'success'
        });
    }

    ntyFileSuccess() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_NTY_FILE_SUCCESS'),
            className: 'success'
        });
    }

    addressBookFileSuccess() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_ADDRESS_BOOK_FILE_SUCCESS'),
            className: 'success'
        });
    }

    pollCreationSuccess() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_POLL_CREATION_SUCCESS'),
            className: 'success'
        });
    }

    votingSuccess() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_VOTING_SUCCESS'),
            className: 'success'
        });
    }

    signedTxCopySuccess() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_COPY_SIGNED_TX_SUCCESS'),
            className: 'success'
        });
    }
    signedMsgCopySuccess() {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_COPY_SIGNED_MSG_SUCCESS'),
            className: 'success'
        });
    }
    dnsMsgSuccess(message) {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_DNS_SUCCESS')+message,
            className: 'success'
        });
    }

    copySuccess() {
        this._ngToast.create({
            content: this._$filter('translate')('OPTIN_COPY_SUCCESS'),
            className: 'success'
        });
    }

    optinSignSuccess() {
        this._ngToast.create({
            content: this._$filter('translate')('CATAPULT_OPT_IN_SUCCESS_SIGNING'),
            className: 'success'
        });
    }

    /***
     * Transaction notifications
     */

    incomingTransaction(signer, network) {
        this._ngToast.create({
            content: this._$filter('translate')('ALERT_INCOMING_TX_FROM') + this._$filter('fmtPubToAddress')(signer, network),
            className: 'success'
        });
    }

    /***
     * Other
     */

    dismiss() {
        this._ngToast.dismiss();
    }

}

'''
'''--- src/app/services/catapultOptin.service.js ---
import nem from 'nem-sdk';
import {
    buildMultisigDTO,
    buildSimpleDTO,
    MultisigCache,
    NormalCache,
    status
} from "symbol-post-launch-optin-module";
import {PublicAccount, NetworkType, Account} from "symbol-sdk";
import {broadcastDTO} from "symbol-post-launch-optin-module";

/** Service with relative functions on symbol opt in books. */
class CatapultOptin {

    constructor($localStorage, $filter, Wallet, Trezor, Ledger, DataStore, Alert, $timeout) {
        'ngInject';

        this.normalCaches = {};
        this.multisigCaches = {};
        // Service dependencies region //

        this._storage = $localStorage;
        this._$filter = $filter;
        this._Wallet = Wallet;
        this._DataStore = DataStore;
        this._Trezor = Trezor;
        this._Ledger = Ledger;
        this._Alert = Alert;
        this._$timeout = $timeout;
        // End dependencies region //

        // Service properties region //

        // End properties region //
    }

    // Service methods region //

    /**
     * Returns optin config
     */
    getOptinConfig() {
        let CATNetwork, NISStopAccount;
        if (this._Wallet.network === nem.model.network.data.testnet.id) {
            CATNetwork = NetworkType.TEST_NET;
            NISStopAccount = 'TAXF5HUGBKGSC3MOJCRXN5LLKFBY43LXI3DE2YLS';
        } else if (this._Wallet.network === nem.model.network.data.mainnet.id) {
            CATNetwork = NetworkType.MAIN_NET;
            NISStopAccount = 'NAQ7RCYM4PRUAKA7AMBLN4NPBJEJMRCHHJYAVA72';
        } else if (this._Wallet.network === nem.model.network.data.mijin.id) {
            CATNetwork = NetworkType.MIJIN;
        } else {
            CATNetwork = NetworkType.MIJIN_TEST;
        }
        return {
            NIS: {
                endpoint: this._Wallet.node,
                network: this._Wallet.network,
                configAddress: NISStopAccount,
            },
            SYM: {
                network: CATNetwork,
                generationHash: '57F7DA205008026C776CB6AED843393F04CD458E0AA2D9F1D5F31A402072B2D6'
            },
            snapshotInfoApi: 'http://post-optin.symboldev.com/'
        };
    }

    getStatus(account) {
        return new Promise( (resolve) => {
            const config = this.getOptinConfig();
            if (account.meta.cosignatories.length > 0) {
                this.getMultisigCache(account, true).then(cache => {
                    status(account, config, cache).then(resolve);
                });
            } else {
                this.getNormalCache(account, true).then(cache => {
                    status(account, config, cache).then(resolve);
                });
            }
        });
    }

    getClaimAmount(address) {
        return new Promise(resolve => {
            fetch(this.getOptinConfig().snapshotInfoApi + 'balance?address=' + address).then(result => {
                result.json().then(json => {
                    resolve(json && json.amount ? json.amount : 0);
                }).catch(() => {
                    resolve(0);
                })
            }).catch(() => {
                resolve(0);
            });
        });
        // return Promise.resolve(Math.round(Math.random() * Math.pow(10, Math.round(Math.random() * 10)) * Math.pow(10, 6)) / Math.pow(10, 6));
    }

    getNormalCache(account, forceRefresh = false) {
        return new Promise(resolve => {
            if (!this.normalCaches[account.account.address] || forceRefresh) {
                const cache = new NormalCache(account, this.getOptinConfig());
                cache.loadFromChain().then(_ => {
                    this.normalCaches[account.account.address] = cache;
                    resolve(cache);
                });
            }
            else {
                resolve(this.normalCaches[account.account.address]);
            }
        })
    }

    getMultisigCache(account, forceRefresh = false) {
        return new Promise(resolve => {
            if (!this.multisigCaches[account.account.address] || forceRefresh) {
                const cache = new MultisigCache(account, this.getOptinConfig());
                cache.loadFromChain().then(_ => {
                    this.multisigCaches[account.account.address] = cache;
                    resolve(cache);
                });
            }
            else {
                resolve( this.multisigCaches[account.account.address] );
            }
        })
    }

    /**
     * Sends simple optin status
     *
     * @param common
     * @param destinationPublicKey
     */
    sendSimpleOptin(common, destinationPublicKey) {
        return new Promise( (resolve, reject) => {
            const config = this.getOptinConfig();
            const simpleDTO = buildSimpleDTO(destinationPublicKey);
            if (this._Wallet.algo == "trezor") {
                this._sendTrezorDTOs(common, [simpleDTO]).then(resolve).catch(reject);
            } else if (this._Wallet.algo == "ledger") {
                alert(this._$filter('translate')('LEDGER_NANO_NOT_OPENED_NEM_APP'));
                this._sendLedgerDTOs(common, [simpleDTO]).then(resolve).catch(reject);
            }
            else {
                broadcastDTO(common.privateKey, simpleDTO, config).then((message) => {
                    if (message !== 'SUCCESS') {
                        reject('Sending OptIn failed: ' + message.toString());
                    } else {
                        resolve(true);
                    }
                }).catch(reject);
            }
        });
    }
    /**
     * Sends multisig optin status
     *
     * @param common
     * @param NIS1multisigAddress
     * @param SYMMultisigPublicKey
     * @param SYMCosignerPublicKey
     */
    sendMultisigOptin(common, NIS1multisigAddress, SYMMultisigPublicKey) {
        return new Promise( (resolve, reject) => {
            const config = this.getOptinConfig();
            const dto = buildMultisigDTO(NIS1multisigAddress, SYMMultisigPublicKey);
            if (this._Wallet.algo == "trezor") {
                this._sendTrezorDTOs(common, [dto]).then(resolve).catch(reject);
            } else if (this._Wallet.algo == "ledger") {
                alert(this._$filter('translate')('LEDGER_NANO_NOT_OPENED_NEM_APP'));
                this._sendLedgerDTOs(common, [dto]).then(resolve).catch(reject);
            }
            else {
                broadcastDTO(common.privateKey, dto, config).then((message) => {
                    if (message !== 'SUCCESS') {
                        reject('Sending OptIn failed: ' + message.toString());
                    } else {
                        resolve(true);
                    }
                }).catch(reject);
            }
        });
    }

    /**
     * Signs and Sends DTOS via trezor
     *
     * @param common
     * @param dtos
     */
    _sendTrezorDTOs(common, dtos) {
        return new Promise((resolve, reject) => {
            Promise.all( dtos.map( dto => this.createTransactionFromDTO(dto, common))).then( transactions => {
                const signTransaction = (i) => {
                    return this._Trezor.serialize(transactions[i], this._Wallet.currentAccount).then( serialized => {
                        if (transactions.length - 1 === i) {
                            return [JSON.stringify(serialized)];
                        }
                        return new Promise(resolve => setTimeout( () => signTransaction(i + 1).then((next) => {
                            resolve([JSON.stringify(serialized)].concat(next));
                        }).catch(err => resolve([null])), 500));
                    }).catch(err => {
                        reject(err.data.message);
                    });
                };
                signTransaction(0).then((signedTransactions) => {
                    if (signedTransactions.filter(_ => _ != null).length === dtos.length){
                        Promise.all(signedTransactions.map( signedTransaction => nem.com.requests.transaction.announce(this._Wallet.node, signedTransaction)))
                            .then(resolve)
                            .catch(reject);
                    } else {
                        reject('Transaction not signed');
                    }

                }).catch(reject);
            });
        });
    }

    /**
     * Signs and Sends DTOS via Ledger
     *
     * @param common
     * @param dtos
     */
    _sendLedgerDTOs(common, dtos) {
        return new Promise((resolve, reject) => {
            Promise.all( dtos.map( dto => this.createTransactionFromDTO(dto, common))).then( transactions => {
                const signTransaction = (i) => {
                    return this._Ledger.serialize(transactions[i], this._Wallet.currentAccount).then( serialized => {
                        if (transactions.length - 1 === i) {
                            return [JSON.stringify(serialized)];
                        }
                        return new Promise(resolve => signTransaction(i + 1).then((next) => {
                            resolve([JSON.stringify(serialized)].concat(next));
                        }).catch(err => resolve([null])));
                    }).catch(_ => {
                        reject('handledLedgerErrorSignal');
                    });
                };
                signTransaction(0).then((signedTransactions) => {
                    if (signedTransactions.filter(_ => _ != null).length === dtos.length){
                        Promise.all(signedTransactions.map( signedTransaction => nem.com.requests.transaction.announce(this._Wallet.node, signedTransaction)))
                            .then(resolve)
                            .catch(reject);
                    } else {
                        reject('Transaction not signed');
                    }

                }).catch(reject);
            });
        });
    }

    /**
     * Creates a transaction from a dto
     *
     * @param dto
     * @param common
     */
    createTransactionFromDTO(dto, common){
        let configTransaction = nem.model.objects.create("transferTransaction")(this.getOptinConfig().NIS.configAddress, 0, dto.toMessage());
        // Prepare with Signer and Network
        configTransaction = nem.model.transactions.prepare("transferTransaction")(
            common,
            configTransaction,
            this._Wallet.network
        );
        return new Promise( (resolve) => {
            nem.com.requests.chain.time(this._Wallet.node).then( time => {
                configTransaction.timeStamp = Math.floor(time.receiveTimeStamp / 1000);
                configTransaction.deadline = configTransaction.timeStamp + 60 * 60;
                resolve(configTransaction);
            });
        });
    }

    // End methods region //

}

export default CatapultOptin;

'''
'''--- src/app/services/dataBridge.service.js ---
import nem from 'nem-sdk';

/** Service to open connection, store and process data received from websocket. */
class DataBridge {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Alert, Wallet, $timeout, $filter, Nodes, DataStore) {
        'ngInject';

        //// Service dependencies region ////

        this._Alert = Alert;
        this._$timeout = $timeout;
        this._Wallet = Wallet;
        this._$filter = $filter;
        this._Nodes = Nodes;
        this._DataStore = DataStore;

        //// End dependencies region ////

        //// Service properties region ////

        /**
         * The connector
         *
         * @type {object|undefined}
         */
        this.connector = undefined;

        /**
         * Store the time sync interval function
         *
         * @type {setInterval}
         */
        this.timeSyncInterval = undefined;

        /**
         * Prevent renewal alerts to show after every confirmed transactions
         *
         * @type {object}
         */
        this.renewalAlertTriggeredFor = {};

        //// End properties region ////
    }

    //// Service methods region ////

    /**
     * Open websocket connection
     *
     * @param {object} connector - A connector object
     */
    openConnection(connector) {

        // Store the used connector to close it from anywhere easily
        this.connector = connector;

        // Init DataStore
        this._DataStore.init();

        // Connect
        connector.connect().then(() => {

            // Reset at new connection
            this.reset();

            // Start time sync
            this.timeSync();

            /***
             * Few network requests happen on socket connection
             */

            // Gets network time
            nem.com.requests.chain.time(this._Wallet.node).then((res) => {
                this._$timeout(() => {
                    this._DataStore.chain.time = res.receiveTimeStamp / 1000;
                });
            },(err) => {
                this._$timeout(() => {
                    this._Alert.errorGetTimeSync();
                });
            });

            // Gets current height
            nem.com.requests.chain.height(this._Wallet.node).then((data) => {
                this._$timeout(() => {
                    this._DataStore.chain.height = data.height;
                });
            },
            (err) => {
                this._$timeout(() => {
                    this._DataStore.chain.height = this._$filter('translate')('GENERAL_ERROR');
                });
            });

            // Gets harvested blocks
            nem.com.requests.account.harvesting.blocks(this._Wallet.node, this._Wallet.currentAccount.address).then((res) => {
                this._$timeout(() => {
                    this._DataStore.account.harvesting.blocks = res.data;
                });
            },
            (err) => {
                // Alert error
                this._$timeout(() => {
                    this._DataStore.account.harvesting.blocks = [];
                });
            });

            // Gets delegated data
            nem.com.requests.account.data(this._Wallet.node, nem.model.address.toAddress(this._Wallet.currentAccount.child, this._Wallet.network)).then((data) => {
                this._$timeout(() => {
                    this._DataStore.account.delegated.metaData = data;
                });
            },
            (err) => {
                this._$timeout(() => {
                    this._DataStore.account.delegated.metaData = "";
                    this._Alert.getAccountDataError(err.data.message);
                });
            });

            // Gets market info
            nem.com.requests.market.xem().then((data) => {
                this._$timeout(() => {
                    this._DataStore.market.xem = data["BTC_XEM"];
                });
            },
            (err) => {
                this._$timeout(() => {
                    this._Alert.errorGetMarketInfo();
                    this._DataStore.market.xem = undefined;
                });
            });

            // Gets btc price
            nem.com.requests.market.btc().then((data) => {
                this._$timeout(() => {
                    this._DataStore.market.btc = data;
                });
            },
            (err) => {
                this._$timeout(() => {
                    this._Alert.errorGetBtcPrice();
                    this._DataStore.market.btc = undefined;
                });
            });

            // Set connection status
            this._$timeout(() => {
                this._DataStore.connection.status = true;
            });

            // On error we show it in an alert
            nem.com.websockets.subscribe.errors(connector, (name, d) => {
                this._$timeout(() => {
                    console.log("Error:");
                    console.log(name);
                    if (d) {
                        console.log(d);
                        this._Alert.websocketError(d.error + " " + d.message);
                    }
                });
            });

            // New height
            nem.com.websockets.subscribe.chain.height(connector, (blockHeight) => {
                this._$timeout(() => {
                    this._DataStore.chain.height = blockHeight.height;
                }, 0);
            });

            // Account data
            nem.com.websockets.subscribe.account.data(connector, (d) => {
                this._$timeout(() => {
                    this._DataStore.account.metaData = d;
                    // Websocket for multisig accounts
                    for (let i = 0; i < this._DataStore.account.metaData.meta.cosignatoryOf.length; i++) {
                        let address = this._DataStore.account.metaData.meta.cosignatoryOf[i].address;
                        nem.com.websockets.subscribe.account.transactions.confirmed(connector, confirmedCallback, address);
                        nem.com.websockets.subscribe.account.transactions.unconfirmed(connector, unconfirmedCallback, address);
                        nem.com.websockets.subscribe.account.mosaics.owned(connector, mosaicCallback, address);
                        nem.com.websockets.subscribe.account.mosaics.definitions(connector, mosaicDefinitionCallback, address);
                        nem.com.websockets.subscribe.account.namespaces.owned(connector, namespaceCallback, address);

                        nem.com.websockets.requests.account.mosaics.owned(connector, address);
                        nem.com.websockets.requests.account.mosaics.definitions(connector, address);
                        nem.com.websockets.requests.account.namespaces.owned(connector, address);
                    }
                }, 0);
            });

            // Recent transactions
            nem.com.websockets.subscribe.account.transactions.recent(connector, (d) => {
                d.data.reverse();
                this._$timeout(() => {
                    this._DataStore.account.transactions.confirmed = d.data;
                });
                console.log("recenttransactions data: ", d);
            });

            // On confirmed we push the tx in transactions array and delete the tx in unconfirmed if present
            //*** BUG: it is triggered twice.. NIS websocket issue or SOCKJS 0.3.4 ? ***//
            let confirmedCallback = (d) => {
                this._$timeout(() => {
                    if (!nem.utils.helpers.haveTx(d.meta.hash.data, this._DataStore.account.transactions.confirmed)) { // Fix duplicate bug
                        this._DataStore.account.transactions.confirmed.push(d);
                        let audio = new Audio('vendors/ding2.ogg');
                        audio.play();
                        console.log("Confirmed data: ", d);
                        // If tx present in unconfirmed array it is removed
                        if (nem.utils.helpers.haveTx(d.meta.hash.data, this._DataStore.account.transactions.unconfirmed)) {
                            // Get index
                            let txIndex = nem.utils.helpers.getTransactionIndex(d.meta.hash.data, this._DataStore.account.transactions.unconfirmed);
                            // Remove from array
                            this._DataStore.account.transactions.unconfirmed.splice(txIndex, 1);
                        }
                    }
                }, 0);
            };

            // On unconfirmed we push the tx in unconfirmed transactions array
            //*** BUG: same as confirmedCallback ***//
            let unconfirmedCallback = (d) => {
                this._$timeout(() => {
                    if (!nem.utils.helpers.haveTx(d.meta.hash.data, this._DataStore.account.transactions.unconfirmed)) { //Fix duplicate bug
                        this._DataStore.account.transactions.unconfirmed.push(d);
                        let audio = new Audio('vendors/ding.ogg');
                        audio.play();
                        // If not sender show notification
                        if (this._$filter('fmtPubToAddress')(d.transaction.signer, this._Wallet.network) !== this._Wallet.currentAccount.address) {
                            this._Alert.incomingTransaction(d.transaction.signer, this._Wallet.network);
                        }
                        console.log("Unconfirmed data: ", d);
                    }

                    if(undefined !== d.transaction.mosaics && d.transaction.mosaics.length) {
                        for (let i = 0; i < d.transaction.mosaics.length; i++) {
                            let mos = d.transaction.mosaics[i];
                            if(undefined === this._DataStore.mosaic.metaData[nem.utils.format.mosaicIdToName(mos.mosaicId)]){
                                // Fetch definition from network
                                getMosaicDefinitionMetaDataPair(mos);
                            }
                        }
                    }
                }, 0);
            };

            // Mosaic definition meta data pair callback
            let mosaicDefinitionCallback = (d) => {
                this._$timeout(() => {
                    this._DataStore.mosaic.metaData[nem.utils.format.mosaicIdToName(d.mosaicDefinition.id)] = d;
                }, 0);
            };

            // Mosaics owned callback
            let mosaicCallback = (d, address) => {
                this._$timeout(() => {
                    let mosaicName = nem.utils.format.mosaicIdToName(d.mosaicId);
                    if (!(address in this._DataStore.mosaic.ownedBy)) this._DataStore.mosaic.ownedBy[address] = {};
                    this._DataStore.mosaic.ownedBy[address][mosaicName] = d;
                    //this._DataStore.mosaic.ownedBy[address].size = Object.keys(this._DataStore.mosaic.ownedBy[address]).length;
                }, 0);
            };

            // Namespaces owned callback
            let namespaceCallback = (d, address) => {
                this._$timeout(() => {
                    let namespaceName = d.fqn;
                    if (!(address in this._DataStore.namespace.ownedBy)) this._DataStore.namespace.ownedBy[address] = {};
                    this._DataStore.namespace.ownedBy[address][namespaceName] = d;
                    // Check namespace expiration date
                    // Creation height of ns + 1 year in blocks (~60 blocks per hour * 24h * 365d) - current height < 1 month in blocks (60 blocks per hour * 24h * 30d)
                    if(d.height + 525600 - this._DataStore.chain.height <= 43200 && d.fqn.indexOf('.') === -1 && undefined === this.renewalAlertTriggeredFor[d.fqn]) {
                        this._$timeout(() => {
                            this.renewalAlertTriggeredFor[d.fqn] = true;
                            this._Alert.namespaceExpiryNotice(d.fqn, d.height + 525600 - this._DataStore.chain.height);
                        });                  
                    }
                }, 0);
            };

            let getMosaicDefinitionMetaDataPair = (mos) => {
                if (undefined !== mos.mosaicId) {
                    // Fetch definition from network
                    return nem.com.requests.namespace.mosaicDefinitions(this._Wallet.node, mos.mosaicId.namespaceId).then((res) => {
                        if(res.data.length) {
                            for(let i = 0; i < res.data.length; i++) {
                                if (res.data[i].mosaic.id.namespaceId == mos.mosaicId.namespaceId && res.data[i].mosaic.id.name == mos.mosaicId.name) {
                                    this._DataStore.mosaic.metaData[nem.utils.format.mosaicIdToName(mos.mosaicId)] = {};
                                    this._DataStore.mosaic.metaData[nem.utils.format.mosaicIdToName(mos.mosaicId)].supply = res.data[i].mosaic.properties[1].value;
                                    this._DataStore.mosaic.metaData[nem.utils.format.mosaicIdToName(mos.mosaicId)].mosaicDefinition = res.data[i].mosaic;

                                    if(undefined !== res.data[i].mosaic.levy) {
                                        if(undefined === this._DataStore.mosaic.metaData[nem.utils.format.mosaicIdToName(res.data[i].mosaic.levy.mosaicId)]) {
                                            // Fetch definition from network
                                            return getMosaicDefinitionMetaDataPair(res.data[i].mosaic.levy);
                                        }
                                    }
                                }
                            }
                        }
                    },
                    (err) => {
                        this._Alert.transactionError('Failed to fetch definition of ' + nem.utils.format.mosaicIdToName(mos.mosaicId));
                    });
                }
            };

            // Set websockets callbacks
            nem.com.websockets.subscribe.account.transactions.confirmed(connector, confirmedCallback);
            nem.com.websockets.subscribe.account.transactions.unconfirmed(connector, unconfirmedCallback);
            nem.com.websockets.subscribe.account.mosaics.owned(connector, mosaicCallback);
            nem.com.websockets.subscribe.account.mosaics.definitions(connector, mosaicDefinitionCallback);
            nem.com.websockets.subscribe.account.namespaces.owned(connector, namespaceCallback);

            // Request data
            nem.com.websockets.requests.account.data(connector);
            nem.com.websockets.requests.account.transactions.recent(connector);
            nem.com.websockets.requests.account.mosaics.definitions(connector);
            nem.com.websockets.requests.account.mosaics.owned(connector);
            nem.com.websockets.requests.account.namespaces.owned(connector);

        }, (err) => {
            console.log(err);
            // Reconnect to another node
            this.reconnect(connector);
        });

    }

    /**
     * Reset DataBridge service properties
     */
    reset() {
        this._DataStore.chain.time = undefined;
        clearInterval(this.timeSyncInterval)
    }

    /**
     * Fetch network time every minute
     */
    timeSync() {
        this.timeSyncInterval = setInterval(() => { 
            nem.com.requests.chain.time(this._Wallet.node).then((res) => {
                this._$timeout(() => {
                    this._DataStore.chain.time = res.receiveTimeStamp / 1000;
                });
            },(err) => {
                this._$timeout(() => {
                    this._Alert.errorGetTimeSync();
                });
            });
        }, 60 * 1000);
    }

    /**
     * Reconnect to a new node
     *
     * @param {object} connector - A connector object
     */
    reconnect(connector) {
        // Close connector
        connector.close();
        // Set a random endpoint into the Wallet service
        this._Nodes.update();
        // Set websocket port to endpoint for connector
        let endpoint = nem.model.objects.create("endpoint")(this._Wallet.node.host, nem.model.nodes.websocketPort);
        // Update connector
        connector = nem.com.websockets.connector.create(endpoint, this._Wallet.currentAccount.address);
        // Try to open connection
        this.openConnection(connector);
        return;
    }

    /**
     * Set default nodes and connect
     */
    connect() {
        // Set needed nodes into the Wallet service
        this._Nodes.setDefault();
        this._Nodes.setUtil();
        // Change endpoint port to websocket port
        let endpoint = nem.model.objects.create("endpoint")(this._Wallet.node.host, nem.model.nodes.websocketPort);
        // Create a connector
        let connector = nem.com.websockets.connector.create(endpoint, this._Wallet.currentAccount.address);
        // Try to open the connection 
        this.openConnection(connector);
        return;
    }

    //// End methods region ////
}

export default DataBridge;
'''
'''--- src/app/services/dataStore.service.js ---
import nem from 'nem-sdk';

/** Service storing data fetched from network */
class DataStore {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor($localStorage, $filter, $timeout) {
        'ngInject';

        //// Service dependencies region ////

        this._storage = $localStorage;
        this._$filter = $filter;
        this._$timeout = $timeout;

        //// End dependencies region ////

        // Initialize with default values
        this.init();
    }

    //// Service methods region ////

    init() {
        //// Chain related data ////

        this.chain = {
            height: 0,
            time: 0
        }

        //// Connectivity related data ////

        this.connection = {
            connector: undefined,
            status: false
        }

        //// Current account related data ////

        this.account = {
            metaData: undefined,
            metaDataOf: {},
            transactions: {
                confirmed: [],
                unconfirmed: []
            },
            harvesting: {
                blocks: []
            },
            delegated: {
                metaData: undefined
            }
        }

        //// Mosaic related data ////

        this.mosaic = {
            metaData: {},
            ownedBy: {}
        }

        //// Namespace related data ////

        this.namespace = {
            ownedBy: {}
        }

        //// Market related data ////

        this.market = {
            xem: undefined,
            btc: undefined,
            selected: 'XEM'
        }
    }

    //// End methods region ////

}

export default DataStore;
'''
'''--- src/app/services/index.js ---
import angular from 'angular';

// Create the module where our functionality can attach to
let servicesModule = angular.module('app.services', ['ngToast']);

// Set Alert service
import AlertService from './alert.service';
servicesModule.service('Alert', AlertService);

// Set WalletBuilder service
import WalletBuilderService from './walletBuilder.service';
servicesModule.service('WalletBuilder', WalletBuilderService);

// Set wallet Service
import WalletService from './wallet.service';
servicesModule.service('Wallet', WalletService);

// Set DataBridge service
import DataBridgeService from './dataBridge.service';
servicesModule.service('DataBridge', DataBridgeService);

// Set Nodes service
import NodesService from './nodes.service';
servicesModule.service('Nodes', NodesService);

// Set NTY service
import NtyService from './nty.service';
servicesModule.service('Nty', NtyService);

// Set AddressBook service
import AddressBookService from './addressBook.service';
servicesModule.service('AddressBook', AddressBookService);

// Set Recipient service
import RecipientService from './recipient.service';
servicesModule.service('Recipient', RecipientService);

// Set DataStore service
import DataStoreService from './dataStore.service';
servicesModule.service('DataStore', DataStoreService);

// Set Login service
import LoginService from './login.service';
servicesModule.service('Login', LoginService);

// Set VotingUtils service
import VotingUtilsService from './votingUtils.service';
servicesModule.service('VotingUtils', VotingUtilsService);

// Set Voting service
import VotingService from './voting.service';
servicesModule.service('Voting', VotingService);

// Set Catapult Optin service
import CatapultOptinService from './catapultOptin.service'
servicesModule.service('CatapultOptin', CatapultOptinService);

export default servicesModule;

'''
'''--- src/app/services/login.service.js ---
import nem from 'nem-sdk';

/** Service storing Login utility functions. */
class Login {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor($location, Wallet, DataBridge) {
        'ngInject';

        // Service dependencies region //

        this._location = $location;
        this._Wallet = Wallet;
        this._DataBridge = DataBridge;

        // End dependencies region //

        // Service properties region //

        // End properties region //
    }

    // Service methods region //

    /**
     * Log into the application
     *
     * @param {object} common - A common object
     * @param {object} wallet - A wallet object
     */
    login(common, wallet) {
        // Set wallet to use and connect
        if (!this._Wallet.login(common, wallet)) {
            return false;
        }

        // Connect to node
        this._DataBridge.connect();
        // Redirect to dashboard
        this._location.path('/dashboard');

        return true;
    }

    // End methods region //

}

export default Login;
'''
'''--- src/app/services/nodes.service.js ---
import nem from 'nem-sdk';
import UrlParser from 'url-parse';

/** Service with functions regarding the nodes */
class Nodes {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor($localStorage, Wallet, Alert, $filter, $timeout) {
        'ngInject';

        //// Service dependencies region ////

        this._storage = $localStorage;
        this._Wallet = Wallet;
        this._Alert = Alert;
        this._$filter = $filter;
        this._$timeout = $timeout;

        nem.model.nodes.testnet = [{
            uri: 'http://hugetestalice.nem.ninja'
        }, {
            uri: 'http://hugetestalice2.nem.ninja'
        }, {
            uri: 'http://medalice2.nem.ninja'
        }, {
            uri: 'http://localhost'
        }];

        //// End dependencies region ////
    }

    //// Service methods region ////

    /**
     * Set util nodes according to network
     */
    setUtil() {
        if (this._Wallet.network === nem.model.network.data.testnet.id) {
            this._Wallet.searchNode = nem.model.objects.create("endpoint")(nem.model.nodes.searchOnTestnet[0].uri, nem.model.nodes.defaultPort);
            this._Wallet.chainLink = nem.model.nodes.testnetExplorer;
        } else if (this._Wallet.network === nem.model.network.data.mainnet.id) {
            this._Wallet.searchNode = nem.model.objects.create("endpoint")(nem.model.nodes.searchOnMainnet[0].uri, nem.model.nodes.defaultPort);
            this._Wallet.chainLink = nem.model.nodes.mainnetExplorer;
        } else {
            this._Wallet.searchNode = nem.model.objects.create("endpoint")(nem.model.nodes.searchOnMijin[0].uri, nem.model.nodes.mijinPort);
            this._Wallet.chainLink = nem.model.nodes.mijinExplorer;
        }
        return;
    }

    /**
     * Check if nodes present in local storage or set default according to network
     */
    setDefault() {
        if (this._Wallet.network == nem.model.network.data.mainnet.id) {
            if (this._storage.selectedMainnetNode) {
                this._Wallet.node = this._storage.selectedMainnetNode;
            } else {
                let endpoint = nem.model.objects.create("endpoint")(nem.model.nodes.mainnet[0].uri, nem.model.nodes.defaultPort);
                this._Wallet.node = endpoint;
            }
            this._Wallet.nodes = nem.model.nodes.mainnet;
        } else if (this._Wallet.network == nem.model.network.data.testnet.id) {
            if (this._storage.selectedTestnetNode) {
                this._Wallet.node = this._storage.selectedTestnetNode;
            } else {
                let endpoint = nem.model.objects.create("endpoint")("http://hugetestalice.nem.ninja", nem.model.nodes.defaultPort);
                this._Wallet.node = endpoint;
            }
            this._Wallet.nodes = nem.model.nodes.testnet;
        } else {
            if (this._storage.selectedMijinNode) {
                this._Wallet.node = this._storage.selectedMijinNode;
            } else {
                let endpoint = nem.model.objects.create("endpoint")(nem.model.nodes.mijin[0].uri, nem.model.nodes.mijinPort);
                this._Wallet.node = endpoint;
            }
            this._Wallet.nodes = nem.model.nodes.mijin;
        }
        return;
    }

    /**
     * Update the node in Wallet service and update local storage
     * If no endpoint provided a random node will be used
     *
     * @param {object} endpoint - An endpoint object (optional)
     */
    update(endpoint) {
        let _endpoint;
        // Set node in local storage according to network
        if (this._Wallet.network == nem.model.network.data.mainnet.id) {
            _endpoint = endpoint || nem.model.objects.create("endpoint")(nem.model.nodes.mainnet[Math.floor(Math.random()*nem.model.nodes.mainnet.length)].uri, nem.model.nodes.defaultPort);
            this._storage.selectedMainnetNode = _endpoint;
        } else if (this._Wallet.network == nem.model.network.data.testnet.id) {
            _endpoint = endpoint || nem.model.objects.create("endpoint")(nem.model.nodes.testnet[Math.floor(Math.random()*nem.model.nodes.testnet.length)].uri, nem.model.nodes.defaultPort);
            this._storage.selectedTestnetNode = _endpoint;
        } else {
            _endpoint = endpoint || nem.model.objects.create("endpoint")(nem.model.nodes.mijin[Math.floor(Math.random()*nem.model.nodes.mijin.length)].uri, nem.model.nodes.mijinPort);
            this._storage.selectedMijinNode = _endpoint;
        }
        // Set endpoint in Wallet service
        this._Wallet.node = _endpoint;
        return;
    }

    /**
     * Clean an host input and create an endpoint object if valid
     *
     * @param {string} host - An NIS hostname
     * @param {number} port - An NIS port (optional)
     *
     * @return {object|boolean} - An endpoint object if success, false otherwise
     */
    cleanEndpoint(host, port) {
        // Validate host
        var regexp = /^(?:(?:https?):\/\/)?(?:\S+(?::\S*)?@)?(?:(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,}))\.?)(?::\d{2,5})?(?:[/?#]\S*)?$/i;
        if(!regexp.test(host) && (host !== 'http://localhost' && host !== 'localhost')) {
            console.log("Invalid endpoint");
            return false;
        }
        // Create an empty endpoint object
        let endpoint = nem.model.objects.get("endpoint");

        // Parse the url given by user
        let parsed = new UrlParser(host);

        // Check if protocol is set or set default
        if (parsed.protocol !== 'http:' && parsed.protocol !== 'https:') parsed = new UrlParser('http://' + host);

        // Set host in endpoint object
        endpoint.host = parsed.protocol + '//' + parsed.hostname;

        // Arrange port, set default if not specified
        if (parsed.port) {
            endpoint.port = parsed.port;
        } else if (port) {
            endpoint.port = port;
        } else {
            if (this._Wallet.network === nem.model.network.data.mainnet.id) {
                endpoint.port = nem.model.nodes.defaultPort;
            } else if (this._Wallet.network === nem.model.network.data.testnet.id) {
                endpoint.port = nem.model.nodes.defaultPort;
            } else {
                endpoint.port = nem.model.nodes.mijinPort;
            }
        }
        return endpoint;
    }

    /**
     * Return nodes according to a network
     *
     * @param {number} network - A network id (optional)
     * @param {boolean} searchEnabled - True if getting nodes with search enabled, false otherwise (optional)
     *
     * @return {array} - An array of endpoint objects
     */
    get(network, searchEnabled) {
        let _network = network || this._Wallet.network;
        let _searchEnabled = searchEnabled || false;
        // Show right nodes list according to network
        if (_network == nem.model.network.data.mainnet.id) {
            if (_searchEnabled) return this._$filter('toEndpoint')(nem.model.nodes.searchOnMainnet);
            return this._$filter('toEndpoint')(nem.model.nodes.mainnet);
        } else if (_network == nem.model.network.data.testnet.id) {
            if (_searchEnabled) return this._$filter('toEndpoint')(nem.model.nodes.searchOnTestnet);
            return this._$filter('toEndpoint')(nem.model.nodes.testnet);
        } else {
            if (_searchEnabled) return this._$filter('toEndpoint')(nem.model.nodes.searchOnMijin);
            return this._$filter('toEndpoint')(nem.model.nodes.mijin);
        }
    }

    /**
     * Get harvesting node from local storage if it exists
     */
    getHarvestingEndpoint() {
        if (this._Wallet.network == nem.model.network.data.mainnet.id) {
            if (this._storage.harvestingMainnetNode) return this._storage.harvestingMainnetNode;
        } else if (this._Wallet.network == nem.model.network.data.testnet.id) {
            if (this._storage.harvestingTestnetNode) return this._storage.harvestingTestnetNode;
        } else {
            if (this._storage.harvestingMijinNode) return this._storage.harvestingMijinNode;
        }
        return this._Wallet.node;
    }

    /**
     * Save the harvesting node in local storage according to network
     */
    saveHarvestingEndpoint(endpoint) {
        if (this._Wallet.network == nem.model.network.data.mainnet.id) {
            this._storage.harvestingMainnetNode = endpoint;
        } else if (this._Wallet.network == nem.model.network.data.testnet.id) {
            this._storage.harvestingTestnetNode = endpoint;
        } else {
            this._storage.harvestingMijinNode = endpoint;
        }
    }

    /**
     * Check if a node has free slots
     *
     * @param  {object} endpoint - An endpoint object
     */
    hasFreeSlots(endpoint) {
        if (!endpoint) return false;
        return nem.com.requests.account.unlockInfo(endpoint).then((data) => {
            return this._$timeout(() => {
                if (data["max-unlocked"] === data["num-unlocked"]) {
                    return false;
                } else {
                    return true;
                }
            });
        },
        (err) => {
            return this._$timeout(() => {
                this._Alert.unlockedInfoError(err.data.message);
                return false;
            });
        });
    }

    //// End methods region ////

}

export default Nodes;

'''
'''--- src/app/services/nty.service.js ---
import nem from 'nem-sdk';

/** Service storing wallet data and relative functions on user wallet. */
class Nty {

    /**
     * Initialize services and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor($localStorage, Wallet) {
        'ngInject';

        /**
         * Service dependencies
         */

        // Local storage
        this._storage = $localStorage;

        // Wallet service
        this._Wallet = Wallet;
    }

    /**
     * Set nty data in Wallet service if exists in local storage
     */
    set() {
        if (this._Wallet.network == nem.model.network.data.mainnet.id) {
            if (this._storage.ntyMainnet) {
                this._Wallet.ntyData = this._storage.ntyMainnet;
            }
        } else if (this._Wallet.network == nem.model.network.data.testnet.id) {
            if (this._storage.ntyTestnet) {
                this._Wallet.ntyData = this._storage.ntyTestnet;
            }
        } else {
            if (this._storage.ntyMijin) {
                this._Wallet.ntyData = this._storage.ntyMijin;
            }
        }
    }

    /**
     * Set nty data into local storage and update in service
     *
     * @param data: The nty data
     */
    setInLocalStorage(data) {
        if (this._Wallet.network == nem.model.network.data.mainnet.id) {
            this._storage.ntyMainnet = data;
        } else if (this._Wallet.network == nem.model.network.data.testnet.id) {
            this._storage.ntyTestnet = data;
        } else {
            this._storage.ntyMijin = data;
        }
        this._Wallet.ntyData = data;
    }

    /**
     * Purge nty data from local storage and update in service
     */
    purgeLocalStorage() {
        if (this._Wallet.network == nem.model.network.data.mainnet.id) {
            delete this._storage.ntyMainnet;
        } else if (this._Wallet.network == nem.model.network.data.testnet.id) {
            delete this._storage.ntyTestnet;
        } else {
            delete this._storage.ntyMijin;
        }
        this._Wallet.ntyData = undefined;
    }
    /**
     * Create notary data
     *
     * @param {string} filename - A file name
     * @param {string} tags - File tags
     * @param {number} timestamp - A timestamp
     * @param {string} fileHash - File hash
     * @param {string} txHash - Transaction hash
     * @param {string} txMultisigHash - Multisignature transaction hash
     * @param {string} owner - Account address
     * @param {string} fromMultisig - Multisig account address
     * @param {string} dedicatedAccount - HD account of the file
     * @param {string} dedicatedPrivateKey - Private key of the HD account
     *
     * @return {array} - The notary data
     */
    createData(filename, tags, timestamp, fileHash, txHash, txMultisigHash, owner, fromMultisig, dedicatedAccount, dedicatedPrivateKey) {
        return {
                "filename": filename,
                "tags": tags,
                "fileHash": fileHash,
                "owner": owner,
                "fromMultisig": fromMultisig,
                "dedicatedAccount": dedicatedAccount,
                "dedicatedPrivateKey": dedicatedPrivateKey,
                "txHash": txHash,
                "txMultisigHash": txMultisigHash,
                "timeStamp": timestamp.toUTCString()
        };
    }

    /**
     * Update notary data
     *
     * @param {object} ntyData - A notary data object
     */
    updateData(ntyData) {
        if (!this._Wallet.ntyData) {
            this._Wallet.ntyData = {"data": [ntyData] };
            this.setInLocalStorage(this._Wallet.ntyData);
        } else {
            this._Wallet.ntyData.data.push(ntyData);
            this.setInLocalStorage(this._Wallet.ntyData);
        }
        return this._Wallet.ntyData;
    }

    /**
     * Draw an apostille certificate
     */
    drawCertificate(filename, dateCreated, owner, tags, from, to, recipientPrivateKey, txHash, txHex, url) {
        return new Promise((resolve, reject) => {
            let canvas = document.createElement('canvas');
            let context = canvas.getContext('2d');

            let imageObj = new Image();
            imageObj.onload = () => {
                context.canvas.width = imageObj.width;
                context.canvas.height = imageObj.height;
                context.drawImage(imageObj, 0, 0, imageObj.width, imageObj.height);
                context.font = "38px Roboto Arial sans-serif";
                // Top part
                context.fillText(filename, 541, 756);
                context.fillText(dateCreated, 607, 873);
                context.fillText(owner, 458, 989);
                context.fillText(tags, 426, 1105);

                // bottom part
                context.font = "30px Roboto Arial sans-serif";
                context.fillText(from, 345, 1550);
                context.fillText(to, 345, 1690);
                context.fillText(recipientPrivateKey, 345, 1846);
                context.fillText(txHash, 345, 1994);

                // Wrap file hash if too long
                if (txHex.length > 70) {
                    let x = 345;
                    let y = 2137;
                    let lineHeight = 35;
                    let lines = txHex.match(/.{1,70}/g)
                    for (var i = 0; i < lines.length; ++i) {
                        context.fillText(lines[i], x, y);
                        y += lineHeight;
                    }
                } else {
                    context.fillText(txHex, 345, 2137);
                }
                let qr = qrcode(10, 'H');
                qr.addData(url);
                qr.make();
                let tileW = 500  / qr.getModuleCount();
                let tileH = 500 / qr.getModuleCount();
                for( let row = 0; row < qr.getModuleCount(); row++ ){
                    for( let col = 0; col < qr.getModuleCount(); col++ ){
                        context.fillStyle = qr.isDark(row, col) ? "#000000" : "#ffffff";
                        let w = (Math.ceil((col+1)*tileW) - Math.floor(col*tileW));
                        let h = (Math.ceil((row+1)*tileW) - Math.floor(row*tileW));
                        context.fillRect(Math.round(col*tileW)+1687,Math.round(row*tileH)+688, w, h);  
                    }
                }
                return resolve(canvas.toDataURL());
            };
            // Check if chrome or safari for CORS issue fix
            let isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);
            let isSafari = /Safari/.test(navigator.userAgent) && /Apple Computer/.test(navigator.vendor);
            imageObj.crossOrigin = "Anonymous";
            imageObj.src = (isChrome || isSafari) ? "https://raw.githubusercontent.com/NemProject/NanoWallet/master/src/images/certificate.png" : "./images/certificate.png";
        });
    }

}

export default Nty;
'''
'''--- src/app/services/recipient.service.js ---
import nem from 'nem-sdk';

/** Service for retrieving account data from input. */
class Recipient {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor($timeout, Wallet, Alert) {
        'ngInject';

        // Service dependencies region //

        this._$timeout = $timeout;
        this._Wallet = Wallet;
        this._Alert = Alert;

        // End dependencies region //
    }

    // Service methods region //

    /**
     * Get an account info object from network using an @alias
     *
     * @param {string} input - An @alias
     *
     * @return {Promise} - A resolved promise with an [AccountInfo]{@link http://bob.nem.ninja/docs/#accountInfo} object, or a rejected promise
     */
    getAlias(input) {
        // Check if input is an alias
        let isAlias = (input.lastIndexOf("@", 0) === 0);
        if (!isAlias) {
            console.log("Alias must start with @!");
            return Promise.reject(true);
        }
        // Check if correct input
        if (input.length > 1) {
            // Clean namespace name of the @
            let nsForLookup = input.substring(1);
            return nem.com.requests.namespace.info(this._Wallet.node, nsForLookup).then((data) => {
                // Check if address is from network
                if (nem.model.address.isFromNetwork(data.owner, this._Wallet.network)) {
                    return this.getAccount(data.owner);
                } else {
                    this._$timeout(() => {
                        this._Alert.invalidAddressForNetwork(data.owner, this._Wallet.network);
                    });
                    return Promise.reject(true);
                }
            },
            (err) => {
                this._$timeout(() => {
                    if(err.code < 0) {
                        this._Alert.connectionError();
                    }  else {
                        this._Alert.getNamespacesByIdError(err.data.message);
                    }
                });
                return Promise.reject(true);
            });
        } else {
            console.log("Alias must have at least one character!")
            return Promise.reject(true);
        }
    }

    /**
     * Get an account info object from network using an address
     *
     * @param {string} input - A NEM address
     *
     * @return {Promise} - A resolved promise with an [AccountInfo]{@link http://bob.nem.ninja/docs/#accountInfo} object, or a rejected promise
     */
    getAccount(input) {
        // Check if input is an alias
        let isAlias = (input.lastIndexOf("@", 0) === 0);
        // Return if input incorrect
        if (isAlias) return Promise.reject(true);
        if (!nem.model.address.isValid(input)) {
            console.log("Provided address is not valid!");
            return Promise.reject(true);
        }
        if (!nem.model.address.isFromNetwork(input, this._Wallet.network)) {
            console.log("Provided address does not correspond to the current network!");
            return Promise.reject(true);
        }
        // Get account data
        return nem.com.requests.account.data(this._Wallet.node, input.toUpperCase().replace(/-/g, '')).then((data) => {
            return data;
        },
        (err) => {
            this._$timeout(() => {
                if(err.code < 0) {
                    this._Alert.connectionError();
                }  else {
                    this._Alert.getAccountDataError(err.data.message);
                }
            });
            return Promise.reject(true);
        });
    }

    // End methods region //

}

export default Recipient;
'''
'''--- src/app/services/voting.service.js ---
import {Observable} from 'rxjs';
import {TrezorAccount} from 'nem-trezor';
import nemsdk from 'nem-sdk';
const nem = require('nem-library');
const voting = require('nem-voting');

class Voting {
    constructor($filter, $timeout, Alert, Wallet, Ledger, Trezor, VotingUtils, DataStore) {
        'ngInject';

        /***
         * Declare services
         */
        this._$timeout = $timeout;
        this._$filter = $filter;
        this._Alert = Alert;
        this._Wallet = Wallet;
        this._Ledger = Ledger;
        this._Trezor = Trezor;
        this._DataStore = DataStore;
        this._VotingUtils = VotingUtils;
        if(this._Wallet.network < 0){
            nem.NEMLibrary.bootstrap(nem.NetworkTypes.TEST_NET);
        }
        else{
            nem.NEMLibrary.bootstrap(nem.NetworkTypes.MAIN_NET);
        }
    }

    // Voting Functions

    init() {
        if ((this._Wallet.network < 0 && nem.NEMLibrary.getNetworkType() !== nem.NetworkTypes.TEST_NET) ||
            (this._Wallet.network > 0 && nem.NEMLibrary.getNetworkType() !== nem.NetworkTypes.MAIN_NET)) {
                nem.NEMLibrary.reset();
                if(this._Wallet.network < 0){
                    nem.NEMLibrary.bootstrap(nem.NetworkTypes.TEST_NET);
                }
                else{
                    nem.NEMLibrary.bootstrap(nem.NetworkTypes.MAIN_NET);
                }
            }
    }

    /**
     * getPolls(pollIndexAddress) returns a list with the poll headers from all the polls that are on the given index
     *
     * @param {string} pollIndexAddress - NEM address for the poll index account
     * @param {string} lastId - the id of the last transaction fetched for pagination
     *
     * @return {promise} - a list of all the poll header objects on the index account
     */
    getPolls(pollIndexAddress, lastId) {
        this.init();
        const obs = voting.PollIndex.fromAddress(new nem.Address(pollIndexAddress), lastId)
            .map((index) => {
                const headers = index.headers.map((header) => {
                    return {
                        title: header.title,
                        type: header.type,
                        doe: header.doe,
                        address: header.address.plain(),
                        creator: header.creator.plain(),
                        whitelist: header.whitelist,
                    }
                });
                return {
                    polls: headers,
                    lastId: index.lastId,
                }
            });
        return obs.first().toPromise();
    }

    /**
     * getOfficialPolls(pollIndexAddress) returns a list with the poll headers for all the official polls
     *
     * @return {promise} - a list of all the poll header objects on the index account
     */
    getOfficialPolls() {
        this.init();
        const obs = voting.getAllOfficialPolls()
            .map((polls) => {
                return polls.map((header) => {
                    return {
                        title: header.title,
                        type: header.type,
                        doe: header.doe,
                        address: header.address.plain(),
                        creator: header.creator.plain(),
                        whitelist: header.whitelist,
                    }
                });
            });
        return obs.first().toPromise();
    }

    /**
     * createPoll(details, pollIndex, common) creates a poll with the given details on the given pollIndex
     *
     * @param {object} details - poll details, without the option addresses
     * @param {string} pollIndex - NEM address of the poll index
     * @param {object} common - common object
     *
     * @return {promise} - the generated poll Address
     */
    createPoll(details, pollIndex, common) {
        this.init();
        let d = new Date();
        let chainTime = this._DataStore.chain.time;
        console.log("chain time:", chainTime);
        let timeStamp = Math.floor(chainTime) + Math.floor(d.getSeconds() / 10);
        let due = (this._Wallet.network === nemsdk.model.network.data.testnet.id) ? 60 : 24 * 60;
        let deadline = timeStamp + due * 60;
        const formData = {
            title: details.formData.title,
            doe: details.formData.doe,
            type: details.formData.type,
            multiple: details.formData.multiple,
        };
        const description = details.description;
        const options = details.options;
        const whitelist = (details.formData.type === 1) ? details.whitelist.map(a => new nem.Address(a)) : undefined;

        const poll = new voting.UnbroadcastedPoll(formData, description, options, whitelist);

        let account = {};
        if (common.isHW) {
            if (this._Wallet.algo == "trezor") {
                account = new TrezorAccount(this._Wallet.currentAccount.address, this._Wallet.currentAccount.hdKeypath);
            }
        } else {
            account = nem.Account.createWithPrivateKey(common.privateKey);
        }

        const index = new voting.PollIndex(new nem.Address(pollIndex), false, []);

        const broadcastData = poll.broadcast(account.publicKey, index);
        broadcastData.transactions = broadcastData.transactions.map((t) => {
            t.timeWindow = nem.TimeWindow.createFromDTOInfo(timeStamp, deadline);
            return t;
        });
        const nodeSplit = this._Wallet.node.host.split("://");
        const node = {
            protocol: nodeSplit[0],
            domain: nodeSplit[1],
            port: this._Wallet.node.port,
        }
        console.log("node", node);
        const transactionHttp = new nem.TransactionHttp([
            node,
        ]);
        const signTransaction = (i) => {
            let p;
            if (common.isHW) {
                if (this._Wallet.algo == "trezor") {
                    if (window['isElectronEnvironment']) {
                        const transaction = broadcastData.transactions[i];
                        transaction.signer = nem.PublicAccount.createWithPublicKey("462ee976890916e54fa825d26bdd0235f5eb5b6a143c199ab0ae5ee9328e08ce");
                        transaction.setNetworkType(nem.NEMLibrary.getNetworkType());
                        const dto = transaction.toDTO();
                        p = this._Trezor.serialize(dto, this._Wallet.currentAccount);
                    } else {
                        p = account.signTransaction(broadcastData.transactions[i]).first().toPromise();
                    }
                } else if (this._Wallet.algo == "ledger") {
                    const transaction = broadcastData.transactions[i];
                    transaction.signer = nem.PublicAccount.createWithPublicKey("462ee976890916e54fa825d26bdd0235f5eb5b6a143c199ab0ae5ee9328e08ce");
                    transaction.setNetworkType(nem.NEMLibrary.getNetworkType());
                    const dto = transaction.toDTO();
                    p = this._Ledger.serialize(dto, this._Wallet.currentAccount);
                }
            } else {
                p = Promise.resolve(account.signTransaction(broadcastData.transactions[i]));
            }
            return p.then((signed) => {
                if (broadcastData.transactions.length - 1 === i) {
                    return [signed];
                }
                if (common.isHW && this._Wallet.algo == "trezor" && window['isElectronEnvironment']) {
                    return new Promise(resolve => setTimeout(() => signTransaction(i + 1).then((next) => {
                        resolve([signed].concat(next));
                    }).catch(err => resolve([null])), 500));
                } else {
                    return signTransaction(i + 1).then((next) => {
                        return [signed].concat(next);
                    });
                }
            }).catch(err => {
                if (common.isHW && this._Wallet.algo == "ledger") {
                    throw 'handledLedgerErrorSignal';
                } else {
                    throw err;
                }
            });
        }

        return signTransaction(0).then((signedTransactions) => {
            return Observable.merge(...(signedTransactions.map((t) => {
                return transactionHttp.announceTransaction(t);
            })))
                .map(() => {
                    return broadcastData.broadcastedPoll.address.plain();
                }).last().toPromise();
        }).catch(err => {
            throw err;
        });

    }

    /**
     * vote(address, common, multisigAccount) sends a vote to the given address. Can vote as multisig
     *
     * @param {object} poll - poll address
     * @param {string} option - option string on which to vote
     * @param {object} common - common object
     * @param {string} multisigAccount - NEM address of the multisig account we want to send the vote for (optional)
     *
     * @return {promise} - returns a promise that resolves when the vote has been sent
     */
    vote(poll, option, common, multisigAccount) {
        this.init();
        let d = new Date();
        let chainTime = this._DataStore.chain.time;
        let timeStamp = Math.floor(chainTime) + Math.floor(d.getSeconds() / 10);
        let due = (this._Wallet.network === nemsdk.model.network.data.testnet.id) ? 60 : 24 * 60;
        let deadline = timeStamp + due * 60;
        return voting.BroadcastedPoll.fromAddress(new nem.Address(poll))
            .map((poll) => {
                let voteTransaction;
                if (multisigAccount) {
                    const multisigAcc = nem.PublicAccount.createWithPublicKey(multisigAccount.publicKey);
                    voteTransaction = poll.voteMultisig(multisigAcc, option);
                    voteTransaction.timeWindow = nem.TimeWindow.createFromDTOInfo(timeStamp, deadline);
                    voteTransaction.otherTransaction.timeWindow = nem.TimeWindow.createFromDTOInfo(timeStamp, deadline);
                } else {
                    voteTransaction = poll.vote(option);
                    voteTransaction.timeWindow = nem.TimeWindow.createFromDTOInfo(timeStamp, deadline);
                }
                return voteTransaction;
            }).first().toPromise();
    }

    /**
     * pollDetails(pollAddress) returns the details of a poll stored in the given pollAddress
     *
     * @param {string} pollAddress - NEM address for the poll account
     *
     * @return {promise} - a promise that returns the details object of the poll
     */
    pollDetails(pollAddress) {
        this.init();
        return voting.BroadcastedPoll.fromAddress(new nem.Address(pollAddress))
            .map((poll) => {
                const data = {
                    formData: poll.data.formData,
                    description: poll.data.description,
                    options: {
                        strings: poll.data.options,
                        link: {},
                    },
                    whitelist: poll.data.whitelist,
                };
                poll.data.options.forEach((option) => {
                    data.options.link[option] = poll.getOptionAddress(option).plain();
                });
                return data;
            }).first().toPromise();
    }

    /**
     * getResults(pollAddress, type, end) returns the result object for the poll depending of the type of the counting
     *
     * @param {string} pollAddress - NEM address of the poll
     *
     * @return {promise} - A promise that returns the result object of the poll
     */
    getResults(pollAddress) {
        this.init();
        return voting.BroadcastedPoll.fromAddress(new nem.Address(pollAddress))
            .switchMap((poll) => {
                return poll.getResults();
            }).first().toPromise();
    }

    /**
     * hasVoted(addrses, pollDetails)
     *
     * @param {string} address - NEM address of the poll
     * @param {object} pollDetails - poll details object of the poll. The details can be obtained from the address,
     * but passing as a parameter is faster, since when we check for votes on the voting module we already have the details
     *
     * @return {promise} - A promise that returns:
     *                          0 if there are no votes
     *                          1 if there is an unconfirmed vote
     *                          2 if there is a confirmed vote
     */
    hasVoted(address, pollDetails) {
        this.init();
        var orderedAddresses = [];
        if(pollDetails.options.link){
            orderedAddresses = pollDetails.options.strings.map((option)=>{
                return pollDetails.options.link[option];
            });
        }
        else{
            orderedAddresses = pollDetails.options.addresses;
        }
        var confirmedPromises = orderedAddresses.map((optionAddress) => {
            return this._VotingUtils.existsTransaction(address, optionAddress);
        });
        return Promise.all(confirmedPromises).then((data) => {
            return Math.max.apply(null, data);
        });
    }

    isInWhitelist(address, whitelist) {
        address = new nem.Address(address);
        const findI = whitelist.findIndex(a => a.plain() === address.plain());
        return findI >= 0;
    }

    getBroadcastFee(details) {
        this.init();
        const formData = {
            title: details.formData.title,
            doe: details.formData.doe,
            type: details.formData.type,
            multiple: details.formData.multiple,
        };
        const description = details.description;
        const options = details.options;
        let whitelist;
        if (details.formData.type === 1) {
            console.log("wl", details.whitelist);
            try {
                whitelist = details.whitelist.map(a => new nem.Address(a));
            } catch (err) {
                return 0;
            }
        }

        const poll = new voting.UnbroadcastedPoll(formData, description, options, whitelist);

        return poll.getBroadcastFee();
    }

    broadcastVotes(votes, common) {
        let account;
        if (common.isHW) {
            if (this._Wallet.algo == "trezor") {
                account = new TrezorAccount(this._Wallet.currentAccount.address, this._Wallet.currentAccount.hdKeypath);
            }
        } else {
            account = nem.Account.createWithPrivateKey(common.privateKey);
        }
        // sign
        let signedTransactionsPromise;
        if (common.isHW) {
            if (this._Wallet.algo == "trezor") {
                if (window['isElectronEnvironment']) {
                    const signTransaction = (i) => {
                        const transaction = votes[i];
                        transaction.signer = nem.PublicAccount.createWithPublicKey("462ee976890916e54fa825d26bdd0235f5eb5b6a143c199ab0ae5ee9328e08ce");
                        transaction.setNetworkType(nem.NEMLibrary.getNetworkType());
                        const dto = transaction.toDTO();
                        const p = this._Trezor.serialize(dto, this._Wallet.currentAccount);
                        return p.then((signed) => {
                            if (votes.length - 1 === i) {
                                return [signed];
                            }
                            return new Promise(resolve => setTimeout(() => signTransaction(i + 1).then((next) => {
                                resolve([signed].concat(next));
                            }).catch(err => resolve([null])), 500));
                        }).catch(err => {
                            throw err;
                        });
                    }
                    signedTransactionsPromise = signTransaction(0);
                } else {
                    signedTransactionsPromise = account.signSerialTransactions(votes).first().toPromise();
                }
            } else if (this._Wallet.algo == "ledger") {
                const signTransaction = (i) => {
                    const transaction = votes[i];
                    transaction.signer = nem.PublicAccount.createWithPublicKey("462ee976890916e54fa825d26bdd0235f5eb5b6a143c199ab0ae5ee9328e08ce");
                    transaction.setNetworkType(nem.NEMLibrary.getNetworkType());
                    const dto = transaction.toDTO();
                    const p = this._Ledger.serialize(dto, this._Wallet.currentAccount);
                    return p.then((signed) => {
                        if (votes.length - 1 === i) {
                            return [signed];
                        }
                        return signTransaction(i + 1).then((next) => {
                            return [signed].concat(next);
                        });
                    }).catch(err => {
                        throw 'handledLedgerErrorSignal';
                    });
                }
                signedTransactionsPromise = signTransaction(0);
            }
        } else {
            const signed = votes.map(v => {
                return account.signTransaction(v);
            });
            signedTransactionsPromise = Promise.resolve(signed);
        }
        // broadcast
        return signedTransactionsPromise.then(signedTransactions => {
            const nodeSplit = this._Wallet.node.host.split("://");
            const node = {
                protocol: nodeSplit[0],
                domain: nodeSplit[1],
                port: this._Wallet.node.port,
            }
            const transactionHttp = new nem.TransactionHttp([
                node,
            ]);
            return Promise.all(signedTransactions.map(t => {
                return transactionHttp.announceTransaction(t).first().toPromise();
            }));
        }).catch(e => {
            throw e;
        });
    }
}

export default Voting;

'''
'''--- src/app/services/votingUtils.service.js ---
import nem from 'nem-sdk';

/** Service to build transactions */
class VotingUtils {

    /**
     * Initialize services and properties
     *
     * @param {service} Wallet - The Wallet service
     * @param {service} $http - The angular $http service
     * @param {service} NetworkRequests - The NetworkRequests service
     */
    constructor($q, $filter, $timeout, Wallet, WalletBuilder, Alert) {
        'ngInject';

        /***
         * Declare services
         */
        this._$q = $q;
        this._$timeout = $timeout;
        this._$filter = $filter;
        this._Wallet = Wallet;
        this._WalletBuilder = WalletBuilder;
        this._Alert = Alert;
        this.disableSuccessAlert = false;

    }

    disableSuccessAlerts() {
        this.disableSuccessAlert = true;
    }

    enableSuccessAlerts() {
        this.disableSuccessAlert = false;
    }

    /**
     * getFirstMessagesWithString(address,str,start) Obtains the last Message that contains string after position start
     *
     * @param {string} address - NEM Address to explore
     * @param {string} str - String to find on addresses txs
     * @param {object} options - Dictionary that can contain:
     *                 options.fromAddress (only return transactions)
     *                 options.start (starting character of the string to look into)
     *
     * @return {promise} - A promise of the NetworkRequests service that returns a string with the filtered message
     */
    getFirstMessageWithString(address, str, options) {

        // Get ALL Transactions since the API only allows us to iterate on a descending order
        return this.getTransactionsWithString(address, str, options).then((result) => {
            let message;
            if (result && result.length > 0) {

                // Get the first message ever
                message = result[result.length - 1].transaction.message;
            }
            return message;
        });
    }

    /**
     * getTransactionsWithString(address, str, start) Obtains every transaction message that contains a certain string (starting from position start)
     *
     * @param {string} address - NEM Address to explore
     * @param {string} str - String to find on addresses txs
     * @param {object} options - Dictionary that can contain:
     *                 options.fromAddress (only return transactions)
     *                 options.start (starting character of the string to look into)
     *                 options.limit - Limit amount of results to return
     *                 options.block - Return only transactions made until this block
     *
     * @return {promise} - A promise of the NetworkRequests service that returns an Array with the filtered messages
     */
    getTransactionsWithString(address, str, options) {

        var trans = [];

        // Options is optional
        if (!options || options.constructor != Object)
            options = {};
        if (!options.start)
            options.start = 0;

        // Recursive promise that will obtain every transaction from/to <address>, order it chronologically and return the ones
        // whose message contains <str>.
        var getTx = (function(txID) {

            // Obtain all transactions to/from the address
            return nem.com.requests.account.transactions.all(this._Wallet.node, address, "", txID).then((result) => {
                var transactions = result.data;
                // If there transactions were returned and the limit was not reached
                if (transactions.length > 0 && (!options.limit || trans.length < options.limit)) {

                    // IDs are ordered, we grab the latest
                    var last_id = transactions[transactions.length - 1].meta.id;

                    // Order transactions chronologically
                    transactions.sort(function(a, b) {
                        return b.meta.height - a.meta.height;
                    });

                    // Iterate every transaction and add the valid ones to the array
                    for (var i = 0; transactions.length > i && (!options.limit || trans.length < options.limit); i++) {

                        let transaction = transactions[i].transaction;
                        let meta = transactions[i].meta;

                        // Multisig transactions
                        if (transaction.type == 4100) {
                            transaction = transaction.otherTrans;
                        }
                        // Regular transactions (multisig otherTrans is of type 257)
                        if (transaction.type == 257) {
                            // On this version we are only using decoded messages!
                            let msg = this._$filter('fmtHexMessage')(transaction.message);

                            // Check if transaction should be added depending on the message and its signer
                            if (msg.includes(str, options.start) && (!options.fromAddress || nem.model.address.toAddress(transaction.signer, this._Wallet.network) == options.fromAddress)) {
                                // We decode the message and store it
                                transaction.message = msg;
                                transactions[i].transaction = transaction;
                                trans[trans.length] = transactions[i];
                            }
                        }
                    }
                    // Keep searching for more transactions after last_id
                    return getTx(last_id);
                } else {
                    return trans;
                }
            });
        }).bind(this);

        return getTx();
    }

    /**
     * processTxData(transferData) Processes transferData
     *
     * @param {object} tx - The transaction data
     *
     * @return {promise} - An announce transaction promise of the NetworkRequests service
     */
    processTxData(transferData) {
        // return if no value or address length < to min address length
        if (!transferData || !transferData.recipient || transferData.recipient.length < 40) {
            return;
        }

        // Clean address
        let recipientAddress = transferData.recipient.toUpperCase().replace(/-/g, '');
        // Check if address is from the same network
        if (nem.model.address.isFromNetwork(recipientAddress, this._Wallet.network)) {
            // Get recipient account data from network
            return nem.com.requests.account.data(this._Wallet.node, recipientAddress).then((data) => {
                // Store recipient public key (needed to encrypt messages)
                transferData.recipientPubKey = data.account.publicKey;
                // Set the address to send to
                transferData.recipient = recipientAddress;
            }, (err) => {
                this._Alert.getAccountDataError(err.data.message);
                return;
            });
        } else {
            // Error
            this._Alert.invalidAddressForNetwork(recipientAddress, this._Wallet.network);
            // Reset recipient data
            throw "invalidAddressForNetwork";
        }
    }

    /**
     * send(entity) Sends a transaction to the network based on an entity
     *
     * @param {object} entity - The prepared transaction object
     * @param {object} common - A password/privateKey object
     *
     * @return {promise} - An announce transaction promise of the NetworkRequests service
     */
    send(entity, common) {
        if (!common.privateKey) {
            this._Alert.invalidPassword();
            throw "privateKey is empty";
        }
        // Construct transaction byte array, sign and broadcast it to the network
        return nem.model.transactions.send(common, entity, this._Wallet.node).then((result) => {
            // Check status
            if (result.status === 200) {
                // If code >= 2, it's an error
                if (result.data.code >= 2) {
                    this._Alert.transactionError(result.data.message);
                    throw(result.data.message);
                } else {
                    if (this.disableSuccessAlert == false) {
                        this._Alert.transactionSuccess();
                    }
                }
            }
        }, (err) => {
            this._Alert.transactionError('Failed ' + err.data.error + " " + err.data.message);
            throw(err);
        });
    }

    /**
     * sendMessage(recipientAccount, message, common) Sends a minimal transaction containing a message to poin
     *
     * @param {object} receiver - Transaction receiver's account
     * @param {string} message - Message to be sent
     * @param {object} common -  password/privateKey object
     *
     * @return {promise} - An announce transaction promise of the NetworkRequests service
     */
    sendMessage(receiver, message, common, amount) {

        if (!amount)
            amount = 0;

        var transferData = {};
        // Check that the receiver is a valid account and process it's public key
        transferData.recipient = receiver;
        this.processTxData(transferData);
        // transferData.receiverPubKey is set now

        transferData.amount = amount;
        transferData.message = message;
        transferData.encryptMessage = false; // Maybe better to encrypt?
        transferData.isMultisig = false;
        transferData.isMosaicTransfer = false;

        // Build the entity to be sent
        let entity = nem.model.transactions.prepare("transferTransaction")(common, transferData, this._Wallet.network);
        return this.send(entity, common);
    }

    /**
     * createNewAccount() creates a new account using a random seed
     */
    createNewAccount() {
        var deferred = this._$q.defer();
        var promise = deferred.promise;

        var rk = nem.crypto.helpers.randomKey();
        var seed = this._Wallet.currentAccount.address + " is creating an account from " + rk;
        // console.log("creating a HDW from "+seed);

        // Create the brain wallet from the seed
        this._WalletBuilder.createBrainWallet(seed, seed, this._Wallet.network).then((wallet) => {
            this._$timeout(() => {
                if (wallet) {
                    var mainAccount = {};
                    mainAccount.address = wallet.accounts[0].address;
                    mainAccount.password = seed;
                    mainAccount.privateKey = "";

                    // Get account private key for preparation or return
                    if (!this._Wallet.decrypt(mainAccount, wallet.accounts[0], wallet.accounts[0].algo, wallet.accounts[0].network)) return deferred.reject(false);

                    mainAccount.publicKey = nem.crypto.keyPair.create(mainAccount.privateKey).publicKey.toString();
                    deferred.resolve(mainAccount);
                }
            }, 10);
        }, (err) => {
            this._Alert.createWalletFailed(err);
            deferred.reject(false);
            console.log(err);
        });
        return deferred.promise;
    }

    /**
     * ownsMosaic(address,namespace, mosaic) Checks if address owns any mosaics from namespace:mosaic
     *
     * @param {string} address - NEM Address to check for the mosaic
     * @param {string} namespaceId - Mosaic's namespace name
     * @param {string} mosaic - Mosaic's name
     *
     * @return {promise} - A promise of the NetworkRequests service that returns wether if address owns any mosaics from namespace:mosaic or not
     */
    ownsMosaic(address, namespace, mosaic) {
        var deferred = this._$q.defer();
        var promise = deferred.promise;
        nem.com.requests.mosaics.allDefinitions(this._Wallet.node, address).then((result) => {
            let owns = false;
            if (result.data.length) {
                for (let i = 0; i < result.data.length; ++i) {
                    let rNamespace = result.data[i].id.namespaceId;
                    let rMosaic = result.data[i].id.name;
                    if (namespace == rNamespace && mosaic == rMosaic) {
                        owns = true;
                    }
                }
            }
            deferred.resolve(owns);
        }, (err) => {
            if (err.status === -1) {
                this._Alert.connectionError();
            } else {
                this._Alert.errorGetMosaicsDefintions(err.data.message);
            }
        });
        return deferred.promise;
    }

    /**
     * isValidAddress(address) checks if address is a valid address in the current network
     *
     * @param {string} address - NEM Address to check
     *
     * @return {boolean} - Returns wether the address is valid in the current network or not
     */
    isValidAddress(address) {
        let addr = address.toUpperCase().replace(/-/g, '');

        return (nem.model.address.isValid(addr) && nem.model.address.isFromNetwork(addr, this._Wallet.network));
    }

    /**
     * getImportance(address) gets the importance score of an account
     *
     * @param {string} address - NEM address
     * @param {integer} block - the block in which to request importance. Optional
     *
     * @return {promise} - A promise that returns the account's importance score
     */
    getImportance(address, block) {
        if (!block || (block < 0)) {
            return nem.com.requests.account.data(this._Wallet.node, address).then((data) => {
                return data.account.importance;
            }).catch();
        } else {
            let historicalNode = nem.model.objects.create("endpoint")(this._Wallet.network < 0 ? 'http://104.128.226.60' : 'http://88.99.192.82', nem.model.nodes.defaultPort);
            return nem.com.requests.account.historical.data(historicalNode, address, block).then((data) => {
                return data.data.data[0].importance;
            }).catch();
        }
    }

    /**
     * getImportances(timestamp) returns an array of importances for an array of addresses
     *
     * @param {array} addresses - array with the addresses you want the importance for
     * @param {integer} block - the block in which to request importances. Optional
     *
     * @return {promise} - a promise that returns an array with all the importances
     */
    getImportances(addresses, block) {
        if (!block || (block < 0)) {
            return nem.com.requests.account.batchData(this._Wallet.node, addresses).then((res) => {
                return res.data.map((account)=>{
                    return account.account.importance;
                });
            }).catch();
        } else {
            let historicalNode = nem.model.objects.create("endpoint")(this._Wallet.network < 0 ? 'http://104.128.226.60' : 'http://88.99.192.82', nem.model.nodes.defaultPort);
            return nem.com.requests.account.historical.batchData(historicalNode, addresses, block).then((res) => {
                return res.data.map((account)=>{
                    return account.data[0].importance;
                });
            }).catch();
        }
    }

    /**
     * getOwnedMosaics(address) returns the number of a certain mosaic owned by an account
     *
     * @param {string} address - NEM address
     * @param {string} namespace - NEM namespace
     * @param {string} name - the name of the mosaic
     *
     * @return {promise} - A promise that returns the account's number of owned mosaics
     */
    getOwnedMosaics(address, namespace, name) {
        return nem.com.requests.account.mosaics.owned(this._Wallet.node, address).then((data) => {
            var filtered = data.filter((mosaic) => {
                return (mosaic.mosaicId.namespaceId === namespace) && (mosaic.mosaicId.name === name);
            });
            return (filtered.length < 1)
                ? (0)
                : (filtered[0].quantity);
        }).catch();
    }

    /**
     * getCurrentHeight(address) returns the current blockchain height
     *
     * @return {promise} - A promise that returns the blockchain's height
     */
    getCurrentHeight() {
        return nem.com.requests.chain.height(this._Wallet.node);
    }

    /**
     * getMessageFee(message, amount) returns the fee that a message would cost
     *
     * @param {string} message - message to be sent
     * @param {integer} amount - xm amount to be sent
     *
     * @return {integer} - An integer value that represents the fee in xem
     */
    getMessageFee(message, amount) {
        if (!amount)
            amount = 0;
        var common = nem.model.objects.get("common");
        var formData = {};
        formData.rawRecipient = '';
        formData.recipient = '';
        formData.recipientPubKey = '';
        formData.message = message;
        //var rawAmount = amount;
        formData.fee = 0;
        formData.encryptMessage = false;
        // Multisig data
        formData.innerFee = 0;
        formData.isMultisig = false;
        formData.multisigAccount = '';
        // Mosaics data
        var counter = 1;
        formData.mosaics = null;
        formData.isMosaicTransfer = false;

        formData.amount = nem.utils.helpers.cleanTextAmount(amount);
        let entity = nem.model.transactions.prepare("transferTransaction")(common, formData, this._Wallet.network);
        formData.innerFee = 0;
        formData.fee = entity.fee;
        return formData.fee;
    }

    /**
     * getMessageLength(message) returns the real length in bytes for a string
     *
     * @param {string} message - message to be sent
     *
     * @return {integer} - An integer value that represents the byte length
     */
    getMessageLength(message) {
        var common = nem.model.objects.get("common");
        var formData = {};
        formData.rawRecipient = '';
        formData.recipient = '';
        formData.recipientPubKey = '';
        formData.message = message;
        //var rawAmount = amount;
        formData.fee = 0;
        formData.encryptMessage = false;
        // Multisig data
        formData.innerFee = 0;
        formData.isMultisig = false;
        formData.multisigAccount = '';
        // Mosaics data
        var counter = 1;
        formData.mosaics = null;
        formData.isMosaicTransfer = false;

        formData.amount = nem.utils.helpers.cleanTextAmount(0);
        let entity = nem.model.transactions.prepare("transferTransaction")(common, formData, this._Wallet.network);
        return entity.message.payload.length/2;
    }

    /**
     * getMultisigTransaction(transaction) returns the inner transaction from a multisig transaction
     *
     * @param {object} transaction - the transaction object
     *
     * @return {object} - the inner transaction if it is multisig
     */
    getMultisigTransaction(transaction){
        if(transaction.transaction.type === 4100){
            transaction.transaction = transaction.transaction.otherTrans;
            return transaction;
        }
        else{
            return transaction;
        }
    }

    /**
     * existsTransaction(address1, address2) returns wether address 1 has ever sent a transaction to address2
     *
     * @param {string} address1 - sender address
     * @param {string} address2 - receiver address
     *
     * @return {number} - a promise that returns:
     *                      0 if the transaction doesn't exist
     *                      1 if the transaction exists but is unconfirmed
     *                      2 if the transaction exists and is confirmed
     */
    existsTransaction(address1, address2) {
        var options = {
            fromAddress: address1,
            limit: 1
        }
        return this.getTransactionsWithString(address2, '', options).then((data) => {
            if (data.length !== 0) {
                return 2;
            } else {
                return nem.com.requests.account.transactions.unconfirmed(this._Wallet.node, address1).then((resp) => {
                    let transactions = resp.data.map((transaction)=>{
                        return this.getMultisigTransaction(transaction);
                    });
                    for (var i = 0; i < transactions.length; i++) {
                        if ((transactions[i].transaction.recipient === address2) && (nem.model.address.toAddress(transactions[i].transaction.signer, this._Wallet.network) === address1)) {
                            return 1;
                        }
                    }
                    return 0;
                }).catch();
            }
        });
    }

    /**
     * getHeightByTimestamp(timestamp) returns the last harvested block at the time of the timestamp
     *
     * @param {integer} timestamp - javascript timestamp
     *
     * @return {promise} - a promise that returns the block height
     */
    getHeightByTimestamp(timestamp) {
        //1.Approximate (60s average block time)
        let nemTimestamp = Math.floor((timestamp / 1000) - (Date.UTC(2015, 2, 29, 0, 6, 25, 0) / 1000));
        let now = Math.floor(((new Date()).getTime() / 1000) - (Date.UTC(2015, 2, 29, 0, 6, 25, 0) / 1000));
        let elapsed = now - nemTimestamp;
        //get current height and approx from there
        return this.getCurrentHeight().then((res) => {
            let height = Math.floor(res.height - (elapsed / 60));
            console.log("block estimation->", height);
            //2.Find exact block

            const findBlock = function(height) {
                return nem.com.requests.chain.blockByHeight(this._Wallet.node, height).then((block) => {
                    let x = Math.floor((nemTimestamp - block.timeStamp) / 60);
                    if (x < 0 && x > -10)
                        x = -1;
                    if (x >= 0 && x <= 10)
                        x = 1;
                    if (block.timeStamp <= nemTimestamp) {
                        return nem.com.requests.chain.blockByHeight(this._Wallet.node, height + 1).then((nextBlock) => {
                            //check if target
                            if (nextBlock.timeStamp > nemTimestamp) {
                                console.log("found", height);
                                return height;
                            } else {
                                console.log("go up", height, "+", x);
                                return findBlock(height + x);
                            }
                        });
                    } else {
                        console.log("go down", height, x);
                        return findBlock(height + x);
                    }
                });
            }.bind(this);

            return findBlock(height);
        });
    }
}

export default VotingUtils;

'''
'''--- src/app/services/wallet.service.js ---
import nem from 'nem-sdk';
import CryptoHelpers from '../utils/CryptoHelpers';
import Helpers from '../utils/helpers';

/** Service storing wallet data and relative functions on user wallet. */
class Wallet {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(AppConstants, $localStorage, Alert, $timeout, AddressBook, Trezor, Ledger, DataStore) {
        'ngInject';

        //// Service dependencies region ////

        this._AppConstants = AppConstants;
        this._storage = $localStorage;
        this._Alert = Alert;
        this._$timeout = $timeout;
        this._AddressBook = AddressBook;
        this._Trezor = Trezor;
        this._Ledger = Ledger;
        this._DataStore = DataStore;

        //// End dependencies region ////

        //// Service properties region ////

        /**
         * The current wallet used
         *
         * @type {object|undefined}
         */
        this.current = undefined;

        /**
         * The current account used
         *
         * @type {object|undefined}
         */
        this.currentAccount = undefined;

        /**
         * The primary account's algo of current wallet
         *
         * @type {object|undefined}
         */
        this.algo = undefined

        /**
         * The primary account's network of current wallet
         *
         * @type {number}
         */
        this.network = AppConstants.defaultNetwork;

        /**
         * The node for current wallet network
         *
         * @type {object|undefined}
         */
        this.node = undefined;

        /**
         * The nodes corresponding to current wallet network
         *
         * @type {array|undefined}
         */
        this.nodes = undefined;

        /**
         * The search enabled node for current wallet network
         *
         * @type {object|undefined}
         */
        this.searchNode = undefined;

        /**
         * The block explorer for current wallet network
         *
         * @type {string|undefined}
         */
        this.chainLink = undefined;

        /**
         * The nty data
         *
         * @type {array|undefined}
         */
        this.ntyData = undefined;

        /**
         * Get wallets from local storage or set an empty array
         *
         * @type {array}
         */
        this._storage.wallets = this._storage.wallets || [];

        /**
         * The wallet contacts
         *
         * @type {$localStorage~array}
         */
        this.contacts = undefined;

        //// End properties region ////
    }

    //// Service methods region ////

    /**
     * Load a wallet and store in local storage
     *
     * @param {string} data - Base 64 string from .wlt file
     * @param {boolean} isNCC - True if NCC wallet, false otherwise
     *
     * @return {boolean} - True if success, false otherwise
     */
    load(data, isNCC) {
        if (!data) {
            this._Alert.noWalletData();
            return false;
        }
        let wallet;
        if(isNCC) {
            // Parse NCC wallet
            wallet = JSON.parse(data);
        } else {
            // Decode base 64
            wallet = this.base64Decode(data);
        }

        // Check if wallet with same name already present
        if (Helpers.haveWallet(wallet.name, this._storage.wallets)) {
            this._Alert.walletNameExists();
            return false;
        } else {
            // Set wallet in local storage
            this._storage.wallets = this._storage.wallets.concat(wallet);
            //
            this._Alert.loadWalletSuccess();
            return true;
        }
    }

    /**
     * Check if wallet network available and if user know the pass, then set given wallet as current
     *
     * @param {object} common - A common object
     * @param {object} wallet - A wallet object
     *
     * @return {boolean} - True if success, false otherwise
     */
    login(common, wallet) {
        // Check
        if (!wallet) {
            this._Alert.cantLoginWithoutWallet();
            return false;
        }
        // Check if mainnet is disabled
        if(wallet.accounts[0].network === nem.model.network.data.mainnet.id && this._AppConstants.mainnetDisabled) {
            this._Alert.mainnetDisabled();
            return false;
        }
        // Check if mijinnet is disabled
        if(wallet.accounts[0].network === nem.model.network.data.mijin.id && this._AppConstants.mijinDisabled) {
            this._Alert.mijinDisabled();
            return false;
        }
        // Decrypt / generate and check primary
        if (!this.decrypt(common, wallet.accounts[0], wallet.accounts[0].algo, wallet.accounts[0].network)) return false;
        // Check if brain wallet pass seems weak
        if(wallet.accounts[0].network === nem.model.network.data.mainnet.id && wallet.accounts[0].algo === 'pass:6k' && common.password.length < 40) {
            this._Alert.brainWalletUpgrade();
        }
        // Set the wallet object in Wallet service
        this.use(wallet);
        return true;
    }

    /**
     * Set a wallet as current
     *
     * @param {object} wallet - A wallet object
     */
    use(wallet) {
        if (!wallet) {
            this._Alert.noWalletToSet();
            return false;
        }
        this.network = wallet.accounts[0].network;
        // Account used
        this.currentAccount = wallet.accounts[0];
        // Algo of the wallet
        this.algo = wallet.accounts[0].algo;
        this.current = wallet;
        this.contacts = this._AddressBook.getContacts(wallet);
        return true;
    }

    /**
     * Set another account of the wallet
     *
     * @param {object} wallet - A wallet object
     * @param {number} index - The index of account in wallet
     */
    useAccount(wallet, index) {
        if (!wallet) {
            this._Alert.noWalletToSet();
            return false;
        }
        // Check if out of bounds
        if (index > Object.keys(wallet.accounts).length - 1) {
            this._Alert.invalidWalletIndex();
            return false;
        }
        // Check if a wallet is defined
        if (this.current === undefined) {
            this._Alert.noCurrentWallet();
            return false;
        }
        this.network = wallet.accounts[0].network;
        // Account used
        this.currentAccount = wallet.accounts[index];
        this.algo = wallet.accounts[0].algo;
        return true;
    }

    /**
     * Decrypt/generate the private key of a wallet account and check it.
     * Returned private key is contained into the passed common object or true is set to isHW
     *
     * @param {object} common - A common object
     *
     * @return {boolean} - True if decryption / generation is successful, false otherwise
     */
    decrypt(common, account, algo, network) {
        // Arrange
        let acct = account || this.currentAccount;
        let net = network || this.network;
        let alg = algo || this.algo;

        // Try to generate or decrypt key
        if (!nem.crypto.helpers.passwordToPrivatekey(common, acct, alg)) {
            this._Alert.invalidPassword();
            return false;
        }

        // Step out if using HW wallet
        if(common.isHW) return true;

        // Check the private key and address
        if (!nem.utils.helpers.isPrivateKeyValid(common.privateKey) || !nem.crypto.helpers.checkAddress(common.privateKey, net, acct.address)) {
            this._Alert.invalidPassword();
            return false;
        }

        return true;
    }

    _transact(common, transaction, account) {
        // HW wallet
        if (common.isHW) {
            // Serialize, sign and broadcast
            if (this.algo == "trezor") {
                return this._Trezor.serialize(transaction, account).then((serialized) => {
                    return nem.com.requests.transaction.announce(this.node, JSON.stringify(serialized));
                });
            }
            else if (this.algo == "ledger") {
                return this._Ledger.serialize(transaction, account).then((serialized) => {
                    return nem.com.requests.transaction.announce(this.node, JSON.stringify(serialized));
                });
            }
        }
        // Normal wallet
        return nem.model.transactions.send(common, transaction, this.node);
    }

    /**
     * Sign and send a prepared transaction
     *
     * @param {object} common - A common object
     * @param {object} transaction - A prepared transaction
     *
     * @return {boolean} - True if success, false otherwise
     */
    transact(common, transaction, account) {
        // Fix timeStamp
        transaction = Helpers.fixTimestamp(transaction, this._DataStore.chain.time, this.network);
        //
        return this._transact(common, transaction, account || this.currentAccount).then((res) => {
            // If res code >= 2, it's an error
            if (res.code >= 2) {
                this._Alert.transactionError(res.message);
                return Promise.reject(res.message);
            } else {
                this._Alert.transactionSuccess();
                return Promise.resolve(res);
            }
        },
        (err) => {
            if(err.code < 0) {
                this._Alert.connectionError();
            }  else {
                this._Alert.transactionError('Failed: '+ err.data.message);
            }
            return Promise.reject('Failed: '+ err.data.message);
        });
    }

    /**
     * Check if a given wallet needs an upgrade
     *
     * @param {object} wallet - A wallet object
     *
     * @return {boolean} - True if needs upgrade, false otherwise
     */
    needsUpgrade(wallet) {
        if (!wallet) return false;
        if (!wallet.accounts[0].child) return true;
        return false;
    }

    _deriveRemote(common, account, algo, network) {
        // Get private key
        if (!this.decrypt(common, account, algo, network)) return Promise.reject(true);

        if (common.isHW) {
            if (algo == "trezor") {
                return this._Trezor.deriveRemote(account, network);
            } else if (algo == "ledger") {
                return this._Ledger.deriveRemote(account, network);
            } else {
                return Promise.reject(true);
            }
        }

        // Generate remote account using bip32
        return CryptoHelpers.generateBIP32Data(common.privateKey, common.password, 0, network);
    }

    /**
     * Derive a remote for a given account using BIP32
     *
     * @param {object} common - A common object
     * @param {object} account - An account object to upgrade (optional)
     *
     * @return {Promise} - A resolved promise with true if success, or a rejected promise
     */
    deriveRemote(common, account) {
        // Arrange
        if (!common) return Promise.reject(true);
        let _account = account || this.currentAccount;
        let algo = _account.algo || this.algo;
        let network = _account.network || this.network;
        return this._deriveRemote(common, _account, algo, network).then((data) => {
            // Add generated child to account
            _account.child = data.publicKey;
            return Promise.resolve(data);
        },
        (err) => {
            if (err === 'handledLedgerErrorSignal') {
                return Promise.reject('handledLedgerErrorSignal');
            } else {
                this._Alert.bip32GenerationFailed(err);
                return Promise.reject(true);
            }
        });
    }

    /**
     * Derive a remote account for all accounts in a given wallet using BIP32
     *
     * @param {object} common - A common object
     * @param {object} account - An account object to upgrade
     *
     * @return {Promise} - A resolved promise with true if success, or a rejected promise
     */
    upgrade(common, wallet) {
         if (!common || !wallet) return Promise.reject(true);
        return new Promise((resolve, reject) => {
            // Decrypt / generate and check primary
            if (!this.decrypt(common, wallet.accounts[0], wallet.accounts[0].algo, wallet.accounts[0].network)) return reject(true);
            // Chain of promises
            let chain = (i) => {
                if (i < Object.keys(wallet.accounts).length) {
                    this.deriveRemote(common, wallet.accounts[i]).then((res)=> {
                        if(i === Object.keys(wallet.accounts).length - 1) {
                            this._Alert.upgradeSuccess();
                            return resolve(true);
                        }
                    },
                    (err) => {
                        return reject(true);
                    }).then(chain.bind(null, i+1));
                }
            }
            // Start promises chain
            chain(0);
        });
    }

    /**
     * Derive a new account for the current wallet using BIP32
     *
     * @param {object} common - A common object
     * @param {string} label - A label for the new account
     *
     * @return {Promise} - A resolved promise with true if success, or a rejected promise
     */
    addAccount(common, label) {
        // Account is always derived from the primary
        let primary = this.current.accounts[0];
        // Get private key
        if (!this.decrypt(common, primary, primary.algo, primary.network)) return Promise.reject(true);
        // Current number of accounts in wallet + 1
        let newAccountIndex = Object.keys(this.current.accounts).length;

        return this.deriveAccount(common, label, newAccountIndex);
    }

    _deriveAccount(common, label, newAccountIndex) {
        // Account is always derived from the primary
        let primary = this.current.accounts[0];
        // Get private key
        if (!this.decrypt(common, primary, primary.algo, primary.network)) return Promise.reject(false);

        if (common.isHW) {
            if (primary.algo == "trezor") {
                return this._Trezor.createAccount(primary.network, newAccountIndex, label);
            } else if (primary.algo == "ledger") {
                return this._Ledger.addAccount(primary.network, newAccountIndex, label);
            } else {
                return Promise.reject(true);
            }
        }

        // Derive the account at new index
        return CryptoHelpers.generateBIP32Data(common.privateKey, common.password, newAccountIndex, this.network).then((data) => {
            let generatedAccount = data.address;
            let generatedPrivateKey = data.privateKey;
            // Encrypt generated account's private key
            let encrypted = nem.crypto.helpers.encodePrivKey(generatedPrivateKey, common.password);

            // Update new account object
            let newAccount = nem.model.objects.create("account")("", label);
            newAccount.address = generatedAccount;
            newAccount.encrypted = encrypted.ciphertext;
            newAccount.iv = encrypted.iv;

            return this.deriveRemote(common, newAccount).then((res) => {
                return Promise.resolve(newAccount);
            },
            (err) => {
                return Promise.reject(true);
            });
        });
    }

    /**
     * Derive a new account from a wallet primary and add it to the wallet
     *
     * @param {object} common - A common object
     * @param {number} newAccountIndex - The newAccountIndex of account in wallet
     *
     * @return {Promise} - A resolved promise with true if success, or a rejected promise
     */
    deriveAccount(common, label, newAccountIndex) {
        return this._deriveAccount(common, label, newAccountIndex).then((account) => {
            // Set created object in wallet
            this.current.accounts[newAccountIndex] = account;
            // Show alert
            this._Alert.generateNewAccountSuccess();
            // Add the account into address book
            this._AddressBook.addAccount(this.current.accounts[0].address, account);

            return Promise.resolve(true);
        },
        (err) => {
            if (!(common.isHW && this.algo == "ledger")) {
                this._Alert.bip32GenerationFailed(err);
            }
            return Promise.reject(true);
        });
    }

    /**
     * Encrypt key for mobile and crete a QR element
     *
     * @param {object} common - A common object
     * @param {object} wallet - A wallet object
     *
     * @return {HTMLelement} - An HTML element to append in the view
     */
    generateQR(common, wallet) {
        let wlt  = wallet || this.current;
        if (!this.decrypt(common, wlt.accounts[0], wlt.accounts[0].algo, wlt.accounts[0].network)) return false;
        // Encrypt private key for mobile apps
        let mobileKeys = nem.crypto.helpers.toMobileKey(common.password, common.privateKey);
        // Create model
        let QR = nem.model.objects.create("walletQR")(this.network === nem.model.network.data.testnet.id ? 1 : 2, 3, this.current.name, mobileKeys.encrypted, mobileKeys.salt);
        let code = kjua({
            size: 256,
            text: JSON.stringify(QR),
            fill: '#000',
            quiet: 0,
            ratio: 2,
        });
        return code;
    }

    /**
     * Encrypt key for mobile and crete a QR element
     *
     * @param {object} common - A common object
     * @param {object} wallet - A wallet object
     *
     * @return {HTMLelement} - An HTML element to append in the view
     */
    generateCurrentAccountQR(common) {
        if (!this.decrypt(common, this.currentAccount, this.currentAccount.algo, this.currentAccount.network)) return false;
        // Encrypt private key for mobile apps
        let mobileKeys = nem.crypto.helpers.toMobileKey(common.password, common.privateKey);
        // Create model
        let QR = nem.model.objects.create("walletQR")(this.network === nem.model.network.data.testnet.id ? 1 : 2, 3, this.current.name, mobileKeys.encrypted, mobileKeys.salt);
        let code = kjua({
            size: 256,
            text: JSON.stringify(QR),
            fill: '#000',
            quiet: 0,
            ratio: 2,
        });
        return code;
    }

    /**
     * Prepare a download element for the given wallet
     *
     * @param {object} wallet - A wallet object
     *
     * @return {void}
     */
    prepareDownload(wallet) {
        if (!wallet) {
            this._Alert.errorWalletDownload();
            return false;
        }
        let base64 = this.base64Encode(wallet);
        // Set download element attributes
        $("#downloadWallet").attr('href', 'data:application/octet-stream,' + base64);
        $("#downloadWallet").attr('download', wallet.name + '.wlt');
        return true;
    }

    /**
     * Encode a wallet object to base64
     *
     * @param {object} wallet - A wallet object
     *
     * @return {string} - The base64 wallet string
     */
    base64Encode(wallet) {
        // Wallet object string to word array
        let wordArray = nem.crypto.js.enc.Utf8.parse(angular.toJson(wallet));
        // Word array to base64
        return nem.crypto.js.enc.Base64.stringify(wordArray);
    }

    /**
     * Decode a base64 string to a wallet object
     *
     * @param {string} base64 - A base64 string wallet
     *
     * @return {object} - A wallet object
     */
    base64Decode(base64) {
        // Wallet base 64 string to word array
        let wordArray = nem.crypto.js.enc.Base64.parse(base64);
        // Word array to JSON string
        return JSON.parse(wordArray.toString(nem.crypto.js.enc.Utf8));
    }

    /**
     * Reset Wallet service properties
     */
    reset() {
        this.current = undefined;
        this.currentAccount = undefined;
        this.algo = undefined
        this.network = this._AppConstants.defaultNetwork;
        this.node = undefined;
        this.nodes = undefined;
        this.searchNode = undefined;
        this.chainLink = undefined;
        this.ntyData = undefined;
        this.contacts = undefined;
        return true;
    }

    //// End methods region ////

}

export default Wallet;

'''
'''--- src/app/services/walletBuilder.service.js ---
import CryptoHelpers from '../utils/CryptoHelpers';
import nem from 'nem-sdk';
import Helpers from '../utils/helpers';

/** Service to build wallets */
class WalletBuilder {

    /**
     * Initialize dependencies and properties
     *
     * @params {services} - Angular services to inject
     */
    constructor(Alert, $timeout, $localStorage) {
        'ngInject';

        //// Service dependencies region ////

        this._Alert = Alert;
        this._$timeout = $timeout;
        this._storage = $localStorage;

        //// End dependencies region ////

        //// Service properties region ////

        // Get wallets from local storage or create empty array
        this._storage.wallets = this._storage.wallets || [];

        //// End properties region ////
    }

    //// Service methods region ////

    /**
     * Create a PRNG wallet object
     *
     * @param {string} walletName - A wallet name
     * @param {string} walletPassword - A wallet password
     * @param {string} entropy - An entropy seed
     * @param {number} network - A network id
     *
     * @return {object|promise} - A PRNG wallet object or a rejected promise
     */
    createWallet(walletName, walletPassword, entropy, network) {
        return new Promise((resolve, reject) => {
            // Check parameters
            if (!walletName || !walletPassword || !entropy || !network) {
                this._Alert.missingFormData();
                return reject(true);
            }
            // Check if wallet already loaded
            if (Helpers.haveWallet(walletName, this._storage.wallets)) {
                this._Alert.walletNameExists();
                return reject(true);
            }

            // Create random bytes
            let r = nem.utils.convert.ua2hex(nem.crypto.nacl.randomBytes(32));
            // Create entropy seed
            let seed = this.processEntropy(entropy, walletPassword);
            // Derive private key from random bytes + entropy seed
            let privateKey = nem.crypto.helpers.derivePassSha(r + seed, 1000).priv;
            // Create KeyPair
            let k = nem.crypto.keyPair.create(privateKey);
            // Create address from public key
            let addr = nem.model.address.toAddress(k.publicKey.toString(), network);
            // Encrypt private key using password
            let encrypted = nem.crypto.helpers.encodePrivKey(privateKey, walletPassword);
            // Create bip32 remote amount using generated private key
            return resolve(CryptoHelpers.generateBIP32Data(privateKey, walletPassword, 0, network).then((data) => {
                // Construct the wallet object
                let wallet = this.buildWallet(walletName, addr, true, "pass:bip32", encrypted, network, data.publicKey);
                return wallet;
            },
            (err) => {
                this._$timeout(() => {
                    this._Alert.createWalletFailed(err);
                    return false;
                }, 0)
            }));
        });
    }

    /**
     * Create a brain wallet object
     *
     * @param {string} walletName - A wallet name
     * @param {string} walletPassword - A wallet password
     * @param {number} network - A network id
     *
     * @return {object|promise} - A Brain wallet object or a rejected promise
     */
    createBrainWallet(walletName, walletPassword, network) {
        return new Promise((resolve, reject) => {
            // Check parameters
            if (!walletName || !walletPassword || !network) {
                this._Alert.missingFormData();
                return reject(true);
            }
            // Check if wallet already loaded
            if (Helpers.haveWallet(walletName, this._storage.wallets)) {
                this._Alert.walletNameExists();
                return reject(true);
            }
            // Derive private key from password
            let r = nem.crypto.helpers.derivePassSha(walletPassword, 6000).priv;
            // Create bip32 remote account using derived private key
            return resolve(CryptoHelpers.generateBIP32Data(r, walletPassword, 0, network).then((data) => {
                // Construct the wallet object
                let wallet = nem.model.wallet.createBrain(walletName, walletPassword, network);
                // Add child account to wallet
                wallet.accounts[0].child = data.publicKey;
                return wallet;
            },
            (err) => {
                this._$timeout(() => {
                    this._Alert.createWalletFailed(err);
                    return false;
                }, 0)
            }));
        });
    }

    /**
     * Create a private key wallet object
     *
     * @param {string} walletName - A wallet name
     * @param {string} walletPassword - A wallet password
     * @param {string} privateKey - The account private key
     * @param {number} network - A network id
     *
     * @return {object|promise} - A private key wallet object or a rejected promise
     */
    createPrivateKeyWallet(walletName, walletPassword, privateKey, network) {
        return new Promise((resolve, reject) => {
            // Check parameters
            if (!walletName || !walletPassword || !privateKey || !network) {
                this._Alert.missingFormData();
                return reject(true);
            }
            // Check the private key
            if (!nem.utils.helpers.isPrivateKeyValid(privateKey)) {
                this._Alert.invalidPrivateKey();
                return reject(true);
            }
            // Check if wallet already loaded
            if (Helpers.haveWallet(walletName, this._storage.wallets)) {
                this._Alert.walletNameExists();
                return reject(true);
            }
            // Create bip32 remote account using provided private key
            return resolve(CryptoHelpers.generateBIP32Data(privateKey, walletPassword, 0, network).then((data) => {
               // Construct the wallet object
                let wallet = nem.model.wallet.importPrivateKey(walletName, walletPassword, privateKey, network);
                wallet.accounts[0].child = data.publicKey;
                return wallet;
            }, (err) => {
                this._$timeout(() => {
                    this._Alert.createWalletFailed(err);
                    return false;
                }, 0);
            }));
        });
    }

    /**
     * Create a wallet object
     *
     * @param {string} walletName - The wallet name
     * @param {string} addr - The main account address
     * @param {boolean} brain - Is brain or not
     * @param {string} algo - The wallet algorithm
     * @param {object} encrypted - The encrypted private key object
     * @param {number} network - The network id
     * @param {string} child - The public key of the account derived from seed
     *
     * @return {object} - A wallet object
     */
    buildWallet(walletName, addr, brain, algo, encrypted, network, child) {
        let wallet = {
            "name": walletName,
            "accounts": {
                "0": {
                    "brain": brain,
                    "algo": algo,
                    "encrypted": encrypted.ciphertext || "",
                    "iv": encrypted.iv || "",
                    "address": addr.toUpperCase().replace(/-/g, ''),
                    "label": 'Primary',
                    "network": network,
                    "child": child
                }
            }
        };
        return wallet;
    }

    /**
     * Create a seed from entropy data, a timestamp and a password
     *
     * @param {string} entropy - A string from any source of entropy
     * @param {string} password - A password
     *
     * @return {string} seed - An 16 bytes entropy seed
     */
    processEntropy(entropy, password) {
        // Derive movement entropy
        let data = nem.crypto.helpers.derivePassSha(entropy, 1000).priv;
        // Derive password
        let pass = nem.crypto.helpers.derivePassSha(password, 1000).priv;
        // Derive seed
        let seed = nem.crypto.helpers.derivePassSha(data + pass, 1000).priv;
        // Return 16 bytes seed
        return seed.substring(seed.length - 32);
    }

    //// End methods region ////
}

export default WalletBuilder;
'''
'''--- src/app/utils/CryptoHelpers.js ---
/** @module utils/CryptoHelpers */

import CryptoHelpersLegacy from './CryptoHelpersLegacy';
import nem from 'nem-sdk';

/**
 * Create BIP32 data
 *
 * @param {string} childKey - A child private key
 * @param {number} network - A network
 *
 * @return {object} - The BIP32 data
 */
let createBIP32Data = function (childKey, network) {
    let privateKey = nem.utils.helpers.fixPrivateKey(childKey);

    let keyPair = nem.crypto.keyPair.create(privateKey);
    let publicKey = keyPair.publicKey.toString();
    let address = nem.model.address.toAddress(publicKey, network);

    return {
        address,
        privateKey,
        publicKey,
    };
};

/**
 * Generate BIP32 data
 *
 * @param {string} privateKey - A private key
 * @param {string} password - A wallet password
 * @param {number} index - A derivation index
 * @param {number} network - A network
 *
 * @return {object|promise} - The BIP32 data or promise error
 */
let generateBIP32Data = function (privateKey, password, index, network) {
    return new Promise((resolve, reject) => {
        if (!privateKey) return reject("No private key");
        if (!nem.utils.helpers.isPrivateKeyValid(privateKey)) return reject("Private key is invalid");
        if (!password) return reject("No password");
        if (!network) return reject("No network");

        let childKey = CryptoHelpersLegacy.generateBIP32Data(privateKey, password, index);

        let data = createBIP32Data(childKey, network);

        resolve(data);
    });
};

module.exports = {
    generateBIP32Data,
};

'''
'''--- src/app/utils/CryptoHelpersLegacy.js ---
/** @module utils/CryptoHelpersLegacy */

import BigInteger from 'bigi';
import CryptoJS from 'crypto-js';
import bitcoin from 'bitcoinjs-lib';
import ecurve from 'ecurve';

let curve = ecurve.getCurveByName("secp256k1");

/**
 * Generate legacy BIP32 hash
 *
 * This is required because the BIP32 implementation is non-standard
 * and uses SHA3 and the password to convert the seed and uses SHA256
 * for child derivation.
 *
 * @param {object} hasher - A CryptoJS hasher
 * @param {WordArray|string} key - The secret key
 * @param {WordArray|string} message - The message
 */
let createBIP32Hash = function (hasher, key, message) {
    let hash = CryptoJS.algo.HMAC.create(hasher, key).finalize(message);

    let I  = CryptoJS.enc.Hex.stringify(hash);

    let IL = I.slice(0, 64);
    let IR = I.slice(64);

    let keyPair = new bitcoin.ECPair(BigInteger.fromHex(IL));
    let chainCode = CryptoJS.enc.Hex.parse(IR);

    return {
        keyPair,
        chainCode,
    };
};

/**
 * Generate legacy BIP32 child key
 *
 * This is not a proper implementation of BIP32 as it uses
 * HMAC-SHA256 instead of HMAC-SHA512. This results in a blank
 * chain code. It is not secure to perform more than one child
 * derivation.
 *
 * @param {string} privateKey - A private key
 * @param {string} password - A wallet password
 * @param {number} index - A derivation index
 *
 * @return {string} - The child private key
 */
let generateBIP32Data = function (privateKey, password, index) {
    /* Hash the hex-encoded private key */
    let hash = CryptoJS.SHA3(privateKey, { outputLength: 256 });

    let rootNode = createBIP32Hash(CryptoJS.algo.SHA3, password, hash);

    /* Serialize (publicKey || index) */
    let data = Buffer.allocUnsafe(37);
    rootNode.keyPair.getPublicKeyBuffer().copy(data, 0);
    data.writeUInt32BE(index, 33);
    let message = CryptoJS.enc.Hex.parse(data.toString("hex"));

    /* This will produce a blank chain code */
    let childNode = createBIP32Hash(CryptoJS.algo.SHA256, rootNode.chainCode, message);

    let pIL = childNode.keyPair.d.add(rootNode.keyPair.d).mod(curve.n);
    return pIL.toHex(32);
};

module.exports = {
    generateBIP32Data,
};

'''
'''--- src/app/utils/exchanges.js ---
/**
 * Exchanges requiring a message for deposits
 */
let data =  [{
    name: "Binance",
    address: "NC64UFOWRO6AVMWFV2BFX2NT6W2GURK2EOX6FFMZ"
}, {
    name: "Poloniex",
    address: "NBZMQO7ZPBYNBDUR7F75MAKA2S3DHDCIFG775N3D"
}, {
    name: "Bittrex",
    address: "ND2JRPQIWXHKAA26INVGA7SREEUMX5QAI6VU7HNR"
}, {
    name: "Spectrocoin",
    address: "NAMLQUBJNNJRV5Y47GNJ7VXB5OHJHYBLHOYF7RVR"
}, {
    name: "Zaif",
    address: "NAGJG3QFWYZ37LMI7IQPSGQNYADGSJZGJRD2DIYA"
}]

module.exports = {
    data
}

'''
'''--- src/app/utils/helpers.js ---
/** @module utils/helpers */

import nem from 'nem-sdk';
import Exchanges from './exchanges';

/**
 * Check if wallet already present in an array
 *
 * @param {string} walletName - A wallet name
 * @param {array} array - A wallets array
 *
 * @return {boolean} - True if present, false otherwise
 */
let haveWallet = function(walletName, array) {
    let i = null;
    for (i = 0; array.length > i; i++) {
        if (array[i].name === walletName) {
            return true;
        }
    }
    return false;
}

/**
 * Remove extension of a file name
 *
 * @param {string} filename - A file name with extension
 *
 * @return {string} - The file name without extension
 */
let getFileName = function(filename) {
    return filename.replace(/\.[^/.]+$/, "");
};

/**
 * Gets extension of a file name
 *
 * @param {string} filename - A file name with extension
 *
 * @return {string} - The file name extension
 */
let getExtension = function(filename) {
    return filename.split('.').pop();
}

/**
 * Calculate a number of pages
 *
 * @param {array} array - An array data
 * @param {number} pageSize - The number of elements per page
 *
 * @return {number} - A number of pages
 */
let calcNumberOfPages = function(array, pageSize) {
    if(!array || ! pageSize) return 0;
    return Math.ceil(array.length / pageSize);
}

/**
 * Fix a value to 4 decimals
 */
let toFixed4 = function(value) {
    return value.toFixed(4);
}

/**
 * Clean quantities in an array of mosaicAttachment objects 
 * 
 * @param {array} elem - An array of mosaicAttachment objects or a single object
 * @param {object} mosaicDefinitions - An object of mosaicDefinitions objects
 * 
 * @return {array} copy - A cleaned array of mosaicAttachment objects 
 */
let cleanMosaicAmounts = function(elem, mosaicDefinitions) {
    // Deep copy: https://stackoverflow.com/a/5344074
    let copy;
    if(Object.prototype.toString.call(elem) === '[object Array]') {
        copy = JSON.parse(JSON.stringify(elem));
    } else {
        let _copy = [];
        _copy.push(JSON.parse(JSON.stringify(elem)))
        copy = _copy;
    }
    for (let i = 0; i < copy.length; i++) {
        // Check text amount validity
        if(!nem.utils.helpers.isTextAmountValid(copy[i].quantity)) {
            return [];
        } else {
            let divisibility = mosaicDefinitions[nem.utils.format.mosaicIdToName(copy[i].mosaicId)].mosaicDefinition.properties[0].value;
            // Get quantity from inputed amount
            copy[i].quantity = Math.round(nem.utils.helpers.cleanTextAmount(copy[i].quantity) * Math.pow(10, divisibility));
        }
    }
    return copy;
}

/**
 * Check validity of namespace name
 *
 * @param {string} ns - A namespace name
 * @param {boolean} isParent - True if parent namespace, false otherwise
 */
let namespaceIsValid = function(ns, isParent) {
    // Test if correct length and if name starts with hyphens
    if (!isParent ? ns.length > 16 : ns.length > 64 || /^([_-])/.test(ns)) {
        return false;
    }
    let pattern = /^[a-z0-9.\-_]*$/;
    // Test if has special chars or space excluding hyphens
    if (pattern.test(ns) == false) {
        return false;
    } else {
        return true;
    }
}

/**
 * Test if a string is hexadecimal
 *
 * @param {string} str - A string to test
 *
 * @return {boolean} - True if correct, false otherwise
 */
let isHexadecimal = nem.utils.helpers.isHexadecimal;

/**
 * Check if a text input amount is valid
 *
 * @param {string} n - The number as a string
 *
 * @return {boolean} - True if valid, false otherwise
 */
let isTextAmountValid = nem.utils.helpers.isTextAmountValid;

/**
 * Verify if a message is set when sending to an exchange
 *
 * @param {object} entity - A prepared transaction object
 *
 * @return {boolean} - True if valid, false otherwise
 */
let isValidForExchanges = function(entity) {
    const exchanges = Exchanges.data;
    let tx = entity.type === nem.model.transactionTypes.multisigTransaction ? entity.otherTrans : entity;
    for (let i = 0; i < exchanges.length; i++) {
        let isExchange = exchanges[i].address === tx.recipient;
        let hasMessage = tx.message.payload.length > 0;
        let isPlain = tx.message.type === 1;
        // Deposits to exchanges must have a plain message
        if ((isExchange && !hasMessage) || (isExchange && hasMessage && !isPlain)) return false;
    }
    return true;
}

/**
 * Return the size of an object of objects
 *
 * @param {object} obj - An object of objects
 *
 * @return {number} - The object size
 */
let objectSize = function(obj) {
    if (!obj) return;
    return Object.keys(obj).length;
}

/**
 * Date object to YYYY-MM-DD format
 *
 * @param {object} date - A date object
 *
 * @return {string} - A short date
 */
let toShortDate = function(date) {
    let dd = date.getDate();
    let mm = date.getMonth() + 1; //January is 0!
    let yyyy = date.getFullYear();
    if (dd < 10) {
        dd = '0' + dd
    }
    if (mm < 10) {
        mm = '0' + mm
    }
    return yyyy + '-' + mm + '-' + dd;
};

/**
 * Compares two software version numbers (e.g. "1.7.1" or "1.2b").
 *
 * From http://stackoverflow.com/a/6832721.
 *
 * @param {string} v1 The first version to be compared.
 * @param {string} v2 The second version to be compared.
 * @param {object} [options] Optional flags that affect comparison behavior:
 */
let versionCompare = function(v1, v2, options) {
    var lexicographical = options && options.lexicographical,
        zeroExtend = options && options.zeroExtend,
        v1parts = v1.split('.'),
        v2parts = v2.split('.');

    function isValidPart(x) {
        return (lexicographical ? /^\d+[A-Za-z]*$/ : /^\d+$/).test(x);
    }

    if (!v1parts.every(isValidPart) || !v2parts.every(isValidPart)) {
        return NaN;
    }

    if (zeroExtend) {
        while (v1parts.length < v2parts.length) v1parts.push("0");
        while (v2parts.length < v1parts.length) v2parts.push("0");
    }

    if (!lexicographical) {
        v1parts = v1parts.map(Number);
        v2parts = v2parts.map(Number);
    }

    for (var i = 0; i < v1parts.length; ++i) {
        if (v2parts.length == i) {
            return 1;
        }

        if (v1parts[i] == v2parts[i]) {
            continue;
        }
        else if (v1parts[i] > v2parts[i]) {
            return 1;
        }
        else {
            return -1;
        }
    }

    if (v1parts.length != v2parts.length) {
        return -1;
    }

    return 0;
}

/**
 * Fix "FAILURE_TIMESTAMP_TOO_FAR_IN_FUTURE"
 *
 * @param {object} transaction - A prepared transaction to fix
 * @param {number} chainTime - Time returned by the NIS node
 * @param {number} network - A network
 */
let fixTimestamp = function(transaction, chainTime, network) {
    let d = new Date();
    let timeStamp = Math.floor(chainTime) + Math.floor(d.getSeconds() / 10);
    let due = network === nem.model.network.data.testnet.id ? 60 : 24 * 60;
    let deadline = timeStamp + due * 60;
    // Update transaction timestamp
    transaction.timeStamp = timeStamp;
    transaction.deadline = deadline;
    // For multisig, update also the otherTrans
    if (transaction.type === nem.model.transactionTypes.multisigTransaction) {
        transaction.otherTrans.timeStamp = timeStamp;
        transaction.otherTrans.deadline = deadline;
    }
    return transaction;
}

module.exports = {
    haveWallet,
    getFileName,
    getExtension,
    calcNumberOfPages,
    toFixed4,
    cleanMosaicAmounts,
    namespaceIsValid,
    isHexadecimal,
    isTextAmountValid,
    isValidForExchanges,
    objectSize,
    toShortDate,
    versionCompare,
    fixTimestamp
}
'''
'''--- src/app/utils/languages.js ---
/**
 * Available languages
 */
let data =  [{
    name: "Chinese",
    key: "cn"
}, {
    name: "English",
    key: "en"
}, {
    name: "German",
    key: "de"
}, 
  {
    name: "Italian",
    key: "it"
},              
 {
    name: "Japanese",
    key: "jp"
}, {
    name: "Nederlands",
    key: "nl"
}, {
    name: "Polish",
    key: "pl"
}, {
    name: "Português (Brasil)",
    key: "ptbr"
}, {
    name: "Русский",
    key: "ru"
}, {
    name: "Spanish",
    key: "es"
}, {
    name: "Ukrainian",
    key: "uk"
}]

module.exports = {
    data
}

'''
'''--- src/app/utils/nty.js ---
/** @module utils/nty */

/**
 * Create notary data
 *
 * @param {string} filename - A file name
 * @param {string} tags - File tags
 * @param {string} fileHash - File hash
 * @param {string} txHash - Transaction hash
 * @param {string} txMultisigHash - Multisignature transaction hash
 * @param {string} owner - Account address
 * @param {string} fromMultisig - Multisig account address
 * @param {string} dedicatedAccount - HD account of the file
 * @param {string} dedicatedPrivateKey - Private key of the HD account
 *
 * @return {array} - The notary data
 */
let createNotaryData = function(filename, tags, fileHash, txHash, txMultisigHash, owner, fromMultisig, dedicatedAccount, dedicatedPrivateKey) {
        let d = new Date();
        return { 
            "data": [{
                "filename": filename,
                "tags": tags,
                "fileHash": fileHash,
                "owner": owner,
                "fromMultisig": fromMultisig,
                "dedicatedAccount": dedicatedAccount,
                "dedicatedPrivateKey": dedicatedPrivateKey,
                "txHash": txHash,
                "txMultisigHash": txMultisigHash,
                "timeStamp": d.toUTCString()
            }]
        };
}

/**
 * Update notary data
 *
 * @param {array} ntyData - The notary data array
 * @param {object} newNtyData - A notary data object
 *
 * @return {array} - The updated notary data array
 */
let updateNotaryData = function(ntyData, newNtyData) {
        ntyData.data.push(newNtyData.data[0]);
        return ntyData;
}

module.exports = {
    createNotaryData,
    updateNotaryData
}
'''
'''--- src/css/NEMonster.css ---
.MonsterContainer{
    position: relative;
  }
.monster,
.monster2,
.eyes,
.iris,
.mouth,
.mouth2,
.mouth3,
.mouth4,
.mouth5,
.mouth6,
.face,
.Monstertext {
  position: absolute;
}

/* COLORS ******************************************************* */
/* COLORS ******************************************************* */
.grad{
  background-image: radial-gradient(circle, #ffd612, #ecdc00, #d8e100, #c1e600, #a8eb12);
  background-color:none;
  background-color:transparent;
}
.grad2{
  background-image: radial-gradient(circle, #051937, #004d7a, #008793, #00bf72, #a8eb12);
  background-color:none;
  background-color:transparent;
}
.grad3{
  background-image: radial-gradient(circle, #ff1262, #ff5145, #ff7f27, #ffa803, #ebcd12);
  background-color:none;
  background-color:transparent;
}
.grad4{
  background-image: radial-gradient(circle, #12ffa0, #93d73c, #c6a800, #e46f00, #eb1236);
  background-color:none;
  background-color:transparent;
}
.grad5{
  background-image: radial-gradient(circle, #12ffa0, #32ea7f, #40d55e, #48c03d, #4cab14);
  background-color:none;
  background-color:transparent;
}
.grad6{
  background-image: radial-gradient(circle, #12ffa0, #00d4d2, #00a2f8, #006af1, #2214ab);
  background-color:none;
  background-color:transparent;
}
.grad7{
  background-image: radial-gradient(circle, #e6ff12, #c2fb0f, #9bf61b, #6cf12b, #13eb3b);
  background-color:none;
  background-color:transparent;
}
.grad8{
  background-image: radial-gradient(circle, #ff12de, #da09e3, #b014e7, #7b21ea, #132beb);
  background-color:none;
  background-color:transparent;
}
.grad9{
  background-image: radial-gradient(circle, #ff12de, #ff00a8, #ff0074, #ff0045, #eb1313);
  background-color:none;
  background-color:transparent;
}

.MonsterContainer {
  margin: auto;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  width: 200px;
  height: 200px;
}

.face {
  left: -3px;
}

/* Monster ******************************************************* */
/* Monster ******************************************************* */

.monster {
  width: 150px;
  height: 150px;
  border-radius: 100%;
  -webkit-box-shadow: inset -17px -14px 53px 1px          rgba(0,0,0,0.26);
  -moz-box-shadow: inset -17px -14px 53px 1px        rgba(0,0,0,0.26);
  box-shadow: inset -17px -14px 53px 1px  rgba(0,0,0,0.26);
}
.monster:before,
.monster:after {
  position: absolute;
  content: '';
  width: 20px;
  height: 30px;
  background: inherit;
}
.monster:after {
  left: 20px;
  border-radius: 100% 0 0 0;
  z-index: -1;
}
.monster:before {
  left: 110px;
  border-radius: 0 100% 0 0;
  z-index: -1;
}

.monster2 {
    width: 150px;
    height: 150px;
    border-radius: 100%;
    -webkit-box-shadow: inset -17px -14px 53px 1px          rgba(0,0,0,0.26);
    -moz-box-shadow: inset -17px -14px 53px 1px        rgba(0,0,0,0.26);
    box-shadow: inset -17px -14px 53px 1px  rgba(0,0,0,0.26);
  }
  .monster2:before,
  .monster2:after {
    position: absolute;
    content: '';
    width: 20px;
    height: 30px;
    background: inherit;
  }
  .monster2:after {
    left: 20px;
    border-radius: 50% 50% 50% 50% / 60% 60% 40% 40%;
    z-index: -1;
  }
  .monster2:before {
    left: 110px;
    border-radius: 50% 50% 50% 50% / 60% 60% 40% 40%;
    z-index: -1;
  }

  /* Hair ******************************************************* */
/* Hair ******************************************************* */

.hair {
  position: absolute;
  top: -2px;
  left: 67px;
  width: 10px;
  height: 10px;
  border-radius: 100% 0 100% 100%;
  transform: rotate(-20deg);
  z-index: -1;
}
.hair:before{
    position: absolute;
   content: '';
   top: 3px;
 left: 10px;
 width: 10px;
 height: 10px;
 background: inherit;
 border-radius: 100% 0 100% 100%;

 }

 .hair2 {
    position: absolute;
    top: -10px;
    left: 67px;
    width: 25px;
    height: 15px;
    -webkit-clip-path: polygon(72% 4%, 46% 88%, 84% 30%, 71% 100%, 60% 100%, 50% 100%, 19% 100%, 0 100%, 40% 0, 25% 83%);
    clip-path: polygon(72% 4%, 46% 88%, 84% 30%, 71% 100%, 60% 100%, 50% 100%, 19% 100%, 0 100%, 40% 0, 25% 83%);
    transform: rotate(5deg);
    z-index: -1;
   
  }

/* Eyes ******************************************************* */
/* Eyes ******************************************************* */

.eyes {
  width: 30px;
  height: 30px;
  background: #FFF;
  top: 50px;
  left: 30px;
  border-radius: 100%;
}
.eyes:before {
    position: absolute;
    content: '';
    width: 30px;
    height: 30px;
    background: #FFF;
    left: 70px;
    border-radius: 100%;
  }

.eyes2 {
  position: absolute;
  width: 30px;
  height: 30px;
  background: #FFF;
  top: 50px;
  left: 30px;
  border-radius: 100%;
}
.eyes2:before {
    position: absolute;
    content: '';
    width: 30px;
    height: 30px;
    background: #FFF;
    left: 70px;
    border-radius: 100%;
}

.eyes3 {
  position: absolute;
  width: 50px;
  height: 50px;
  background: #FFF;
  top: 30px;
  left: 55px;
  border-radius: 100%;
  
}

.eyes4 {
    position: absolute;
    width: 50px;
    height: 50px;
    background: #FFF;
    top: 30px;
    left: 55px;
    border-radius: 100%;
    
  }

  .eyes5 {
    position: absolute;
    width: 35px;
    height: 20px;
    background: #FFF;
    top: 50px;
    left: 40px;
    border-radius: 0% 0% 100% 100%;
  }
  .eyes5:before {
    position: absolute;
    content: '';
    width: 35px;
    height: 20px;
    background: #FFF;
    left: 50px;
    border-radius: 0% 0% 100% 100%;
  }
  .eyes6 {
    position: absolute;
    width: 30px;
    height: 30px;
    background: #FFF;
    top: 40px;
    left: 45px;
    border-radius: 80% 20% 80% 80%;
  }
  .eyes6:before {
    position: absolute;
    content: '';
    width: 30px;
    height: 30px;
    background: #FFF;
    left: 40px;
    border-radius: 20% 80% 80% 80%;
  }
  

.iris {
  position: absolute;
  width: 20px;
  height: 20px;
  background: #59C3C3;
  border-radius: 100%;
  top: 5px;
  left: 7px;
}
.iris:before {
    position: absolute;
    content: '';
    width: 20px;
    height: 20px;
    background: inherit;
    border-radius: 100%;
    left: 66px;
}

.iris2 {
  position: absolute;
  width: 20px;
  height: 20px;
  background-color: #000;
  border-radius: 100%;
  top: 5px;
  left: 7px;
}
.iris2 div:nth-child(1) {
    position: absolute;
    content: '';
    width: 5px;
    height: 5px;
    background: #fff;
    border-radius: 10%;
    left: 0px;
  }
.iris2:before {
    position: absolute;
    content: '';
    width: 20px;
    height: 20px;
    background: inherit;
    border-radius: 100%;
    left: 66px;
  }
.iris2 div:nth-child(2) {
    position: absolute;
    content: '';
    width: 5px;
    height: 5px;
    background: #fff;
    border-radius: 10%;
    left: 66px;
  }

.iris3 {
  position: absolute;
  width: 20px;
  height: 20px;
  background-color: #000;
  border-radius: 100%;
  top: 5px;
  left: 7px;
  
}
.iris3 div:nth-child(1) {
    position: absolute;
    content: '';
    width: 6px;
    height: 6px;
    background: #fff;
    border-radius: 100%;
    left: 5px;
    top: 2px;
  }

  .iris4 {
    position: absolute;
    width: 40px;
    height: 40px;
    background-color: #000;
    -webkit-clip-path: ellipse(11% 43% at 50% 50%);
    clip-path: ellipse(11% 43% at 50% 50%);
    top: 5px;
    left: 5px;
    
  }

  .iris5 {
    position: absolute;
    width: 13px;
    height: 13px;
    background-color: #000;
    border-radius: 100%;
    top: 5px;
    left: 16px;
  }
  .iris5:before {
    position: absolute;
    content: '';
    width: 13px;
    height: 13px;
    background: inherit;
    border-radius: 100%;
    left: 50px;
    }

    .iris6 {
      position: absolute;
      width: 18px;
      height: 18px;
      background-color: #000;
      border-radius: 100%;
      top: 5px;
      left: 7px;
    }
    .iris6 div:nth-child(1) {
      position: absolute;
      content: '';
      width: 6px;
      height: 6px;
      background: #fff;
      border-radius: 100%;
      left: 10px;
      top: 3px;
      }
    .iris6:before {
      position: absolute;
      content: '';
      width: 16px;
      height: 16px;
      background: inherit;
      border-radius: 100%;
      left: 66px;
      top: 5px;
      }
    .iris6 div:nth-child(2) {
      position: absolute;
      content: '';
      width: 6px;
      height: 6px;
      background: #fff;
      border-radius: 100%;
      left: 69px;
      top: 8px;
      }

      
    .iris7 {
      position: absolute;
      width: 6px;
      height: 6px;
      background-color: #000;
      border-radius: 100%;
      top: 10px;
      left: 10px;
    }
    .iris7:before {
      position: absolute;
      content: '';
      width: 6px;
      height: 6px;
      background: inherit;
      border-radius: 100%;
      left: 70px;

      }

      .iris8 {
        position: absolute;
        width: 20px;
        height: 20px;
        background-color: #000;
        border-radius: 100%;
        top: 5px;
        left: 7px;
      }
      .iris8 div:nth-child(1) {
        position: absolute;
        content: '';
        width: 8px;
        height: 8px;
        background: #fff;
        border-radius: 60%;
        left: 0px;
        }
      .iris8:before {
        position: absolute;
        content: '';
        width: 20px;
        height: 20px;
        background: inherit;
        border-radius: 100%;
        left: 37px;
        }
      .iris8 div:nth-child(2) {
        position: absolute;
        content: '';
        width: 8px;
        height: 8px;
        background: #fff;
        border-radius: 60%;
        left: 37px;
        }
  
        .iris9 {
          position: absolute;
          width: 20px;
          height: 20px;
          background-color: #000;
          border-radius: 100%;
          top: 5px;
          left: 7px;
        }
        .iris9 div:nth-child(1) {
          position: absolute;
          content: '';
          width: 8px;
          height: 8px;
          background: #fff;
          border-radius: 60%;
          left: 10px;
          top: 12px;
          }
        .iris9:before {
          position: absolute;
          content: '';
          width: 20px;
          height: 20px;
          background: inherit;
          border-radius: 100%;
          left: 37px;
          }
        .iris9 div:nth-child(2) {
          position: absolute;
          content: '';
          width: 8px;
          height: 8px;
          background: #fff;
          border-radius: 60%;
          left: 47px;
           top: 12px;
          }
  
/* Mouth ******************************************************* */
/* Mouth ******************************************************* */
.mouth {
  overflow: hidden;
  top: 90px;
  left: 50px;
  width: 60px;
  height: 30px;
  background: #603335;
  border-radius: 0 0 100px 100px;
  transition: all 0.5s ease;
}
.mouth:before {
    position: absolute;
    left: 17px;
    top: 15px;
    content: '';
    width: 50px;
    height: 30px;
    background: #F6828C;
    border-radius: 100%;
}

.mouth2 {
  position: absolute; 
  overflow: hidden;
  top: 90px;
  left: 50px;
  width: 60px;
  height: 3px;
  background: #603335;
  border-radius: 0 0 100px 100px;
}

.mouth3 {
  position: absolute;
  overflow: hidden;
   overflow: hidden;
      top: 90px;
      left: 45px;
      width: 65px;
      height: 15px;
      background: #603335;
      border-radius: 60px 60px 00px 00px;

  }

  .mouth4 {
    position: absolute; 
    overflow: hidden;
    top: 87px;
    left: 53px;
    width: 50px;
    height: 15px;
    border-radius: 50%;
    background: #603335;
    }
    
    .mouth5 {
      overflow: hidden;
      top: 90px;
      left: 50px;
      width: 60px;
      height: 30px;
      background: #603335;
      border-radius: 100px 100px 100px 100px;
     
      
    }
    .mouth5:before {
      position: absolute;
      left: 17px;
      top: 15px;
      content: '';
      width: 50px;
      height: 30px;
      background: #F6828C;
      border-radius: 100%;
    }

    .mouth6 {
      overflow: hidden;
      top: 90px;
      left: 48px;
      width: 60px;
      height: 15px;
      background: #603335;
      border-radius: 0px 0px 60px 60px;
   
    }

/* teeth ******************************************************* */
/* teeth ******************************************************* */

.teeth {
  position: relative;
  top: 90px;
  left: 60px;

}
.teeth div:nth-child(1) {
    position: absolute;
    width: 7px;
    height: 10px;
    background: #FFF;
    border-radius: 0 0 0 100%;
  }
.teeth div:nth-child(2) {
    position: absolute;
    left: 30px;
    width: 7px;
    height: 10px;
    background: #FFF;
    border-radius: 0 0 100% 0;
  }

.teeth2 {
  position: relative;
  top: 90px;
  left: 70px;

}

.teeth2 div:nth-child(1) {
    position: absolute;
    width: 7px;
    height: 10px;
    background: #FFF;
    border-radius: 0 0 100% 100%;
  }
.teeth2 div:nth-child(2) {
    position: absolute;
    left: 10px;
    width: 7px;
    height: 10px;
    background: #FFF;
    border-radius: 0 0 100% 100%;
  }

  .teeth3 {
    position: relative;
    top: 90px;
    left: 60px;
  
  }

  .teeth3 div:nth-child(1) {
    position: absolute;
    width: 40px;
    height: 40px;
    background: #FFF;
    -webkit-clip-path: polygon(87% 21%, 75% 0, 65% 22%, 53% 2%, 43% 21%, 25% 0, 19% 21%, 0 0, 0 0, 100% 0);
clip-path: polygon(87% 21%, 75% 0, 65% 22%, 53% 2%, 43% 21%, 25% 0, 19% 21%, 0 0, 0 0, 100% 0);
  }

  .teeth4 {
    position: relative;
    top: 90px;
    left: 60px;
  
  }

  .teeth4 div:nth-child(1) {
    position: absolute;
    width: 40px;
    height: 40px;
    background: #FFF;
    -webkit-clip-path: polygon(89% 21%, 75% 13%, 64% 37%, 52% 11%, 33% 34%, 28% 10%, 10% 20%, 0 0, 16% 0, 100% 0);
    clip-path: polygon(89% 21%, 75% 13%, 64% 37%, 52% 11%, 33% 34%, 28% 10%, 10% 20%, 0 0, 16% 0, 100% 0);
  }

.Monstertext {
  background: #000000 ;
  border-radius: 100%;
  height: 20px;
  width: 130px;
  top: 170px;
  left: 16px;
  font-family: sans-serif;
  font-size: 14px;
  letter-spacing: 1px;
  box-shadow: 5px 1px 1px #A2B7C0;
  opacity: 0.3;
  filter: alpha(opacity=30);
 
}

'''
'''--- src/css/bootstrap.min.css ---
/*!
 * Bootstrap v3.3.6 (http://getbootstrap.com)
 * Copyright 2011-2015 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 *//*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{margin:.67em 0;font-size:2em}mark{color:#000;background:#ff0}small{font-size:80%}sub,sup{position:relative;font-size:75%;line-height:0;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{height:0;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{margin:0;font:inherit;color:inherit}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{padding:0;border:0}input{line-height:normal}input[type=checkbox],input[type=radio]{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;-webkit-appearance:textfield}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{padding:.35em .625em .75em;margin:0 2px;border:1px solid silver}legend{padding:0;border:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-spacing:0;border-collapse:collapse}td,th{padding:0}/*! Source: https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css */@media print{*,:after,:before{color:#000!important;text-shadow:none!important;background:0 0!important;-webkit-box-shadow:none!important;box-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}a[href^="javascript:"]:after,a[href^="#"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}.navbar{display:none}.btn>.caret,.dropup>.btn>.caret{border-top-color:#000!important}.label{border:1px solid #000}.table{border-collapse:collapse!important}.table td,.table th{background-color:#fff!important}.table-bordered td,.table-bordered th{border:1px solid #ddd!important}}@font-face{font-family:'Glyphicons Halflings';src:url(../fonts/glyphicons-halflings-regular.eot);src:url(../fonts/glyphicons-halflings-regular.eot?#iefix) format('embedded-opentype'),url(../fonts/glyphicons-halflings-regular.woff2) format('woff2'),url(../fonts/glyphicons-halflings-regular.woff) format('woff'),url(../fonts/glyphicons-halflings-regular.ttf) format('truetype'),url(../fonts/glyphicons-halflings-regular.svg#glyphicons_halflingsregular) format('svg')}.glyphicon{position:relative;top:1px;display:inline-block;font-family:'Glyphicons Halflings';font-style:normal;font-weight:400;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.glyphicon-asterisk:before{content:"\002a"}.glyphicon-plus:before{content:"\002b"}.glyphicon-eur:before,.glyphicon-euro:before{content:"\20ac"}.glyphicon-minus:before{content:"\2212"}.glyphicon-cloud:before{content:"\2601"}.glyphicon-envelope:before{content:"\2709"}.glyphicon-pencil:before{content:"\270f"}.glyphicon-glass:before{content:"\e001"}.glyphicon-music:before{content:"\e002"}.glyphicon-search:before{content:"\e003"}.glyphicon-heart:before{content:"\e005"}.glyphicon-star:before{content:"\e006"}.glyphicon-star-empty:before{content:"\e007"}.glyphicon-user:before{content:"\e008"}.glyphicon-film:before{content:"\e009"}.glyphicon-th-large:before{content:"\e010"}.glyphicon-th:before{content:"\e011"}.glyphicon-th-list:before{content:"\e012"}.glyphicon-ok:before{content:"\e013"}.glyphicon-remove:before{content:"\e014"}.glyphicon-zoom-in:before{content:"\e015"}.glyphicon-zoom-out:before{content:"\e016"}.glyphicon-off:before{content:"\e017"}.glyphicon-signal:before{content:"\e018"}.glyphicon-cog:before{content:"\e019"}.glyphicon-trash:before{content:"\e020"}.glyphicon-home:before{content:"\e021"}.glyphicon-file:before{content:"\e022"}.glyphicon-time:before{content:"\e023"}.glyphicon-road:before{content:"\e024"}.glyphicon-download-alt:before{content:"\e025"}.glyphicon-download:before{content:"\e026"}.glyphicon-upload:before{content:"\e027"}.glyphicon-inbox:before{content:"\e028"}.glyphicon-play-circle:before{content:"\e029"}.glyphicon-repeat:before{content:"\e030"}.glyphicon-refresh:before{content:"\e031"}.glyphicon-list-alt:before{content:"\e032"}.glyphicon-lock:before{content:"\e033"}.glyphicon-flag:before{content:"\e034"}.glyphicon-headphones:before{content:"\e035"}.glyphicon-volume-off:before{content:"\e036"}.glyphicon-volume-down:before{content:"\e037"}.glyphicon-volume-up:before{content:"\e038"}.glyphicon-qrcode:before{content:"\e039"}.glyphicon-barcode:before{content:"\e040"}.glyphicon-tag:before{content:"\e041"}.glyphicon-tags:before{content:"\e042"}.glyphicon-book:before{content:"\e043"}.glyphicon-bookmark:before{content:"\e044"}.glyphicon-print:before{content:"\e045"}.glyphicon-camera:before{content:"\e046"}.glyphicon-font:before{content:"\e047"}.glyphicon-bold:before{content:"\e048"}.glyphicon-italic:before{content:"\e049"}.glyphicon-text-height:before{content:"\e050"}.glyphicon-text-width:before{content:"\e051"}.glyphicon-align-left:before{content:"\e052"}.glyphicon-align-center:before{content:"\e053"}.glyphicon-align-right:before{content:"\e054"}.glyphicon-align-justify:before{content:"\e055"}.glyphicon-list:before{content:"\e056"}.glyphicon-indent-left:before{content:"\e057"}.glyphicon-indent-right:before{content:"\e058"}.glyphicon-facetime-video:before{content:"\e059"}.glyphicon-picture:before{content:"\e060"}.glyphicon-map-marker:before{content:"\e062"}.glyphicon-adjust:before{content:"\e063"}.glyphicon-tint:before{content:"\e064"}.glyphicon-edit:before{content:"\e065"}.glyphicon-share:before{content:"\e066"}.glyphicon-check:before{content:"\e067"}.glyphicon-move:before{content:"\e068"}.glyphicon-step-backward:before{content:"\e069"}.glyphicon-fast-backward:before{content:"\e070"}.glyphicon-backward:before{content:"\e071"}.glyphicon-play:before{content:"\e072"}.glyphicon-pause:before{content:"\e073"}.glyphicon-stop:before{content:"\e074"}.glyphicon-forward:before{content:"\e075"}.glyphicon-fast-forward:before{content:"\e076"}.glyphicon-step-forward:before{content:"\e077"}.glyphicon-eject:before{content:"\e078"}.glyphicon-chevron-left:before{content:"\e079"}.glyphicon-chevron-right:before{content:"\e080"}.glyphicon-plus-sign:before{content:"\e081"}.glyphicon-minus-sign:before{content:"\e082"}.glyphicon-remove-sign:before{content:"\e083"}.glyphicon-ok-sign:before{content:"\e084"}.glyphicon-question-sign:before{content:"\e085"}.glyphicon-info-sign:before{content:"\e086"}.glyphicon-screenshot:before{content:"\e087"}.glyphicon-remove-circle:before{content:"\e088"}.glyphicon-ok-circle:before{content:"\e089"}.glyphicon-ban-circle:before{content:"\e090"}.glyphicon-arrow-left:before{content:"\e091"}.glyphicon-arrow-right:before{content:"\e092"}.glyphicon-arrow-up:before{content:"\e093"}.glyphicon-arrow-down:before{content:"\e094"}.glyphicon-share-alt:before{content:"\e095"}.glyphicon-resize-full:before{content:"\e096"}.glyphicon-resize-small:before{content:"\e097"}.glyphicon-exclamation-sign:before{content:"\e101"}.glyphicon-gift:before{content:"\e102"}.glyphicon-leaf:before{content:"\e103"}.glyphicon-fire:before{content:"\e104"}.glyphicon-eye-open:before{content:"\e105"}.glyphicon-eye-close:before{content:"\e106"}.glyphicon-warning-sign:before{content:"\e107"}.glyphicon-plane:before{content:"\e108"}.glyphicon-calendar:before{content:"\e109"}.glyphicon-random:before{content:"\e110"}.glyphicon-comment:before{content:"\e111"}.glyphicon-magnet:before{content:"\e112"}.glyphicon-chevron-up:before{content:"\e113"}.glyphicon-chevron-down:before{content:"\e114"}.glyphicon-retweet:before{content:"\e115"}.glyphicon-shopping-cart:before{content:"\e116"}.glyphicon-folder-close:before{content:"\e117"}.glyphicon-folder-open:before{content:"\e118"}.glyphicon-resize-vertical:before{content:"\e119"}.glyphicon-resize-horizontal:before{content:"\e120"}.glyphicon-hdd:before{content:"\e121"}.glyphicon-bullhorn:before{content:"\e122"}.glyphicon-bell:before{content:"\e123"}.glyphicon-certificate:before{content:"\e124"}.glyphicon-thumbs-up:before{content:"\e125"}.glyphicon-thumbs-down:before{content:"\e126"}.glyphicon-hand-right:before{content:"\e127"}.glyphicon-hand-left:before{content:"\e128"}.glyphicon-hand-up:before{content:"\e129"}.glyphicon-hand-down:before{content:"\e130"}.glyphicon-circle-arrow-right:before{content:"\e131"}.glyphicon-circle-arrow-left:before{content:"\e132"}.glyphicon-circle-arrow-up:before{content:"\e133"}.glyphicon-circle-arrow-down:before{content:"\e134"}.glyphicon-globe:before{content:"\e135"}.glyphicon-wrench:before{content:"\e136"}.glyphicon-tasks:before{content:"\e137"}.glyphicon-filter:before{content:"\e138"}.glyphicon-briefcase:before{content:"\e139"}.glyphicon-fullscreen:before{content:"\e140"}.glyphicon-dashboard:before{content:"\e141"}.glyphicon-paperclip:before{content:"\e142"}.glyphicon-heart-empty:before{content:"\e143"}.glyphicon-link:before{content:"\e144"}.glyphicon-phone:before{content:"\e145"}.glyphicon-pushpin:before{content:"\e146"}.glyphicon-usd:before{content:"\e148"}.glyphicon-gbp:before{content:"\e149"}.glyphicon-sort:before{content:"\e150"}.glyphicon-sort-by-alphabet:before{content:"\e151"}.glyphicon-sort-by-alphabet-alt:before{content:"\e152"}.glyphicon-sort-by-order:before{content:"\e153"}.glyphicon-sort-by-order-alt:before{content:"\e154"}.glyphicon-sort-by-attributes:before{content:"\e155"}.glyphicon-sort-by-attributes-alt:before{content:"\e156"}.glyphicon-unchecked:before{content:"\e157"}.glyphicon-expand:before{content:"\e158"}.glyphicon-collapse-down:before{content:"\e159"}.glyphicon-collapse-up:before{content:"\e160"}.glyphicon-log-in:before{content:"\e161"}.glyphicon-flash:before{content:"\e162"}.glyphicon-log-out:before{content:"\e163"}.glyphicon-new-window:before{content:"\e164"}.glyphicon-record:before{content:"\e165"}.glyphicon-save:before{content:"\e166"}.glyphicon-open:before{content:"\e167"}.glyphicon-saved:before{content:"\e168"}.glyphicon-import:before{content:"\e169"}.glyphicon-export:before{content:"\e170"}.glyphicon-send:before{content:"\e171"}.glyphicon-floppy-disk:before{content:"\e172"}.glyphicon-floppy-saved:before{content:"\e173"}.glyphicon-floppy-remove:before{content:"\e174"}.glyphicon-floppy-save:before{content:"\e175"}.glyphicon-floppy-open:before{content:"\e176"}.glyphicon-credit-card:before{content:"\e177"}.glyphicon-transfer:before{content:"\e178"}.glyphicon-cutlery:before{content:"\e179"}.glyphicon-header:before{content:"\e180"}.glyphicon-compressed:before{content:"\e181"}.glyphicon-earphone:before{content:"\e182"}.glyphicon-phone-alt:before{content:"\e183"}.glyphicon-tower:before{content:"\e184"}.glyphicon-stats:before{content:"\e185"}.glyphicon-sd-video:before{content:"\e186"}.glyphicon-hd-video:before{content:"\e187"}.glyphicon-subtitles:before{content:"\e188"}.glyphicon-sound-stereo:before{content:"\e189"}.glyphicon-sound-dolby:before{content:"\e190"}.glyphicon-sound-5-1:before{content:"\e191"}.glyphicon-sound-6-1:before{content:"\e192"}.glyphicon-sound-7-1:before{content:"\e193"}.glyphicon-copyright-mark:before{content:"\e194"}.glyphicon-registration-mark:before{content:"\e195"}.glyphicon-cloud-download:before{content:"\e197"}.glyphicon-cloud-upload:before{content:"\e198"}.glyphicon-tree-conifer:before{content:"\e199"}.glyphicon-tree-deciduous:before{content:"\e200"}.glyphicon-cd:before{content:"\e201"}.glyphicon-save-file:before{content:"\e202"}.glyphicon-open-file:before{content:"\e203"}.glyphicon-level-up:before{content:"\e204"}.glyphicon-copy:before{content:"\e205"}.glyphicon-paste:before{content:"\e206"}.glyphicon-alert:before{content:"\e209"}.glyphicon-equalizer:before{content:"\e210"}.glyphicon-king:before{content:"\e211"}.glyphicon-queen:before{content:"\e212"}.glyphicon-pawn:before{content:"\e213"}.glyphicon-bishop:before{content:"\e214"}.glyphicon-knight:before{content:"\e215"}.glyphicon-baby-formula:before{content:"\e216"}.glyphicon-tent:before{content:"\26fa"}.glyphicon-blackboard:before{content:"\e218"}.glyphicon-bed:before{content:"\e219"}.glyphicon-apple:before{content:"\f8ff"}.glyphicon-erase:before{content:"\e221"}.glyphicon-hourglass:before{content:"\231b"}.glyphicon-lamp:before{content:"\e223"}.glyphicon-duplicate:before{content:"\e224"}.glyphicon-piggy-bank:before{content:"\e225"}.glyphicon-scissors:before{content:"\e226"}.glyphicon-bitcoin:before{content:"\e227"}.glyphicon-btc:before{content:"\e227"}.glyphicon-xbt:before{content:"\e227"}.glyphicon-yen:before{content:"\00a5"}.glyphicon-jpy:before{content:"\00a5"}.glyphicon-ruble:before{content:"\20bd"}.glyphicon-rub:before{content:"\20bd"}.glyphicon-scale:before{content:"\e230"}.glyphicon-ice-lolly:before{content:"\e231"}.glyphicon-ice-lolly-tasted:before{content:"\e232"}.glyphicon-education:before{content:"\e233"}.glyphicon-option-horizontal:before{content:"\e234"}.glyphicon-option-vertical:before{content:"\e235"}.glyphicon-menu-hamburger:before{content:"\e236"}.glyphicon-modal-window:before{content:"\e237"}.glyphicon-oil:before{content:"\e238"}.glyphicon-grain:before{content:"\e239"}.glyphicon-sunglasses:before{content:"\e240"}.glyphicon-text-size:before{content:"\e241"}.glyphicon-text-color:before{content:"\e242"}.glyphicon-text-background:before{content:"\e243"}.glyphicon-object-align-top:before{content:"\e244"}.glyphicon-object-align-bottom:before{content:"\e245"}.glyphicon-object-align-horizontal:before{content:"\e246"}.glyphicon-object-align-left:before{content:"\e247"}.glyphicon-object-align-vertical:before{content:"\e248"}.glyphicon-object-align-right:before{content:"\e249"}.glyphicon-triangle-right:before{content:"\e250"}.glyphicon-triangle-left:before{content:"\e251"}.glyphicon-triangle-bottom:before{content:"\e252"}.glyphicon-triangle-top:before{content:"\e253"}.glyphicon-console:before{content:"\e254"}.glyphicon-superscript:before{content:"\e255"}.glyphicon-subscript:before{content:"\e256"}.glyphicon-menu-left:before{content:"\e257"}.glyphicon-menu-right:before{content:"\e258"}.glyphicon-menu-down:before{content:"\e259"}.glyphicon-menu-up:before{content:"\e260"}*{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}:after,:before{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}html{font-size:10px;-webkit-tap-highlight-color:rgba(0,0,0,0)}body{font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;font-size:14px;line-height:1.42857143;color:#333;background-color:#fff}button,input,select,textarea{font-family:inherit;font-size:inherit;line-height:inherit}a{color:#337ab7;text-decoration:none}a:focus,a:hover{color:#23527c;text-decoration:underline}a:focus{outline:thin dotted;outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}figure{margin:0}img{vertical-align:middle}.carousel-inner>.item>a>img,.carousel-inner>.item>img,.img-responsive,.thumbnail a>img,.thumbnail>img{display:block;max-width:100%;height:auto}.img-rounded{border-radius:6px}.img-thumbnail{display:inline-block;max-width:100%;height:auto;padding:4px;line-height:1.42857143;background-color:#fff;border:1px solid #ddd;border-radius:4px;-webkit-transition:all .2s ease-in-out;-o-transition:all .2s ease-in-out;transition:all .2s ease-in-out}.img-circle{border-radius:50%}hr{margin-top:20px;margin-bottom:20px;border:0;border-top:1px solid #eee}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.sr-only-focusable:active,.sr-only-focusable:focus{position:static;width:auto;height:auto;margin:0;overflow:visible;clip:auto}[role=button]{cursor:pointer}.h1,.h2,.h3,.h4,.h5,.h6,h1,h2,h3,h4,h5,h6{font-family:inherit;font-weight:500;line-height:1.1;color:inherit}.h1 .small,.h1 small,.h2 .small,.h2 small,.h3 .small,.h3 small,.h4 .small,.h4 small,.h5 .small,.h5 small,.h6 .small,.h6 small,h1 .small,h1 small,h2 .small,h2 small,h3 .small,h3 small,h4 .small,h4 small,h5 .small,h5 small,h6 .small,h6 small{font-weight:400;line-height:1;color:#777}.h1,.h2,.h3,h1,h2,h3{margin-top:20px;margin-bottom:10px}.h1 .small,.h1 small,.h2 .small,.h2 small,.h3 .small,.h3 small,h1 .small,h1 small,h2 .small,h2 small,h3 .small,h3 small{font-size:65%}.h4,.h5,.h6,h4,h5,h6{margin-top:10px;margin-bottom:10px}.h4 .small,.h4 small,.h5 .small,.h5 small,.h6 .small,.h6 small,h4 .small,h4 small,h5 .small,h5 small,h6 .small,h6 small{font-size:75%}.h1,h1{font-size:36px}.h2,h2{font-size:30px}.h3,h3{font-size:24px}.h4,h4{font-size:18px}.h5,h5{font-size:14px}.h6,h6{font-size:12px}p{margin:0 0 10px}.lead{margin-bottom:20px;font-size:16px;font-weight:300;line-height:1.4}@media (min-width:768px){.lead{font-size:21px}}.small,small{font-size:85%}.mark,mark{padding:.2em;background-color:#fcf8e3}.text-left{text-align:left}.text-right{text-align:right}.text-center{text-align:center}.text-justify{text-align:justify}.text-nowrap{white-space:nowrap}.text-lowercase{text-transform:lowercase}.text-uppercase{text-transform:uppercase}.text-capitalize{text-transform:capitalize}.text-muted{color:#777}.text-primary{color:#337ab7}a.text-primary:focus,a.text-primary:hover{color:#286090}.text-success{color:#3c763d}a.text-success:focus,a.text-success:hover{color:#2b542c}.text-info{color:#31708f}a.text-info:focus,a.text-info:hover{color:#245269}.text-warning{color:#8a6d3b}a.text-warning:focus,a.text-warning:hover{color:#66512c}.text-danger{color:#a94442}a.text-danger:focus,a.text-danger:hover{color:#843534}.bg-primary{color:#fff;background-color:#337ab7}a.bg-primary:focus,a.bg-primary:hover{background-color:#286090}.bg-success{background-color:#dff0d8}a.bg-success:focus,a.bg-success:hover{background-color:#c1e2b3}.bg-info{background-color:#d9edf7}a.bg-info:focus,a.bg-info:hover{background-color:#afd9ee}.bg-warning{background-color:#fcf8e3}a.bg-warning:focus,a.bg-warning:hover{background-color:#f7ecb5}.bg-danger{background-color:#f2dede}a.bg-danger:focus,a.bg-danger:hover{background-color:#e4b9b9}.page-header{padding-bottom:9px;margin:40px 0 20px;border-bottom:1px solid #eee}ol,ul{margin-top:0;margin-bottom:10px}ol ol,ol ul,ul ol,ul ul{margin-bottom:0}.list-unstyled{padding-left:0;list-style:none}.list-inline{padding-left:0;margin-left:-5px;list-style:none}.list-inline>li{display:inline-block;padding-right:5px;padding-left:5px}dl{margin-top:0;margin-bottom:20px}dd,dt{line-height:1.42857143}dt{font-weight:700}dd{margin-left:0}@media (min-width:768px){.dl-horizontal dt{float:left;width:160px;overflow:hidden;clear:left;text-align:right;text-overflow:ellipsis;white-space:nowrap}.dl-horizontal dd{margin-left:180px}}abbr[data-original-title],abbr[title]{cursor:help;border-bottom:1px dotted #777}.initialism{font-size:90%;text-transform:uppercase}blockquote{padding:10px 20px;margin:0 0 20px;font-size:17.5px;border-left:5px solid #eee}blockquote ol:last-child,blockquote p:last-child,blockquote ul:last-child{margin-bottom:0}blockquote .small,blockquote footer,blockquote small{display:block;font-size:80%;line-height:1.42857143;color:#777}blockquote .small:before,blockquote footer:before,blockquote small:before{content:'\2014 \00A0'}.blockquote-reverse,blockquote.pull-right{padding-right:15px;padding-left:0;text-align:right;border-right:5px solid #eee;border-left:0}.blockquote-reverse .small:before,.blockquote-reverse footer:before,.blockquote-reverse small:before,blockquote.pull-right .small:before,blockquote.pull-right footer:before,blockquote.pull-right small:before{content:''}.blockquote-reverse .small:after,.blockquote-reverse footer:after,.blockquote-reverse small:after,blockquote.pull-right .small:after,blockquote.pull-right footer:after,blockquote.pull-right small:after{content:'\00A0 \2014'}address{margin-bottom:20px;font-style:normal;line-height:1.42857143}code,kbd,pre,samp{font-family:Menlo,Monaco,Consolas,"Courier New",monospace}code{padding:2px 4px;font-size:90%;color:#c7254e;background-color:#f9f2f4;border-radius:4px}kbd{padding:2px 4px;font-size:90%;color:#fff;background-color:#333;border-radius:3px;-webkit-box-shadow:inset 0 -1px 0 rgba(0,0,0,.25);box-shadow:inset 0 -1px 0 rgba(0,0,0,.25)}kbd kbd{padding:0;font-size:100%;font-weight:700;-webkit-box-shadow:none;box-shadow:none}pre{display:block;padding:9.5px;margin:0 0 10px;font-size:13px;line-height:1.42857143;color:#333;word-break:break-all;word-wrap:break-word;background-color:#f5f5f5;border:1px solid #ccc;border-radius:4px}pre code{padding:0;font-size:inherit;color:inherit;white-space:pre-wrap;background-color:transparent;border-radius:0}.pre-scrollable{max-height:340px;overflow-y:scroll}.container{padding-right:15px;padding-left:15px;margin-right:auto;margin-left:auto}@media (min-width:768px){.container{width:750px}}@media (min-width:992px){.container{width:970px}}@media (min-width:1200px){.container{width:1170px}}.container-fluid{padding-right:15px;padding-left:15px;margin-right:auto;margin-left:auto}.row{margin-right:-15px;margin-left:-15px}.col-lg-1,.col-lg-10,.col-lg-11,.col-lg-12,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9,.col-md-1,.col-md-10,.col-md-11,.col-md-12,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9,.col-sm-1,.col-sm-10,.col-sm-11,.col-sm-12,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9,.col-xs-1,.col-xs-10,.col-xs-11,.col-xs-12,.col-xs-2,.col-xs-3,.col-xs-4,.col-xs-5,.col-xs-6,.col-xs-7,.col-xs-8,.col-xs-9{position:relative;min-height:1px;padding-right:15px;padding-left:15px}.col-xs-1,.col-xs-10,.col-xs-11,.col-xs-12,.col-xs-2,.col-xs-3,.col-xs-4,.col-xs-5,.col-xs-6,.col-xs-7,.col-xs-8,.col-xs-9{float:left}.col-xs-12{width:100%}.col-xs-11{width:91.66666667%}.col-xs-10{width:83.33333333%}.col-xs-9{width:75%}.col-xs-8{width:66.66666667%}.col-xs-7{width:58.33333333%}.col-xs-6{width:50%}.col-xs-5{width:41.66666667%}.col-xs-4{width:33.33333333%}.col-xs-3{width:25%}.col-xs-2{width:16.66666667%}.col-xs-1{width:8.33333333%}.col-xs-pull-12{right:100%}.col-xs-pull-11{right:91.66666667%}.col-xs-pull-10{right:83.33333333%}.col-xs-pull-9{right:75%}.col-xs-pull-8{right:66.66666667%}.col-xs-pull-7{right:58.33333333%}.col-xs-pull-6{right:50%}.col-xs-pull-5{right:41.66666667%}.col-xs-pull-4{right:33.33333333%}.col-xs-pull-3{right:25%}.col-xs-pull-2{right:16.66666667%}.col-xs-pull-1{right:8.33333333%}.col-xs-pull-0{right:auto}.col-xs-push-12{left:100%}.col-xs-push-11{left:91.66666667%}.col-xs-push-10{left:83.33333333%}.col-xs-push-9{left:75%}.col-xs-push-8{left:66.66666667%}.col-xs-push-7{left:58.33333333%}.col-xs-push-6{left:50%}.col-xs-push-5{left:41.66666667%}.col-xs-push-4{left:33.33333333%}.col-xs-push-3{left:25%}.col-xs-push-2{left:16.66666667%}.col-xs-push-1{left:8.33333333%}.col-xs-push-0{left:auto}.col-xs-offset-12{margin-left:100%}.col-xs-offset-11{margin-left:91.66666667%}.col-xs-offset-10{margin-left:83.33333333%}.col-xs-offset-9{margin-left:75%}.col-xs-offset-8{margin-left:66.66666667%}.col-xs-offset-7{margin-left:58.33333333%}.col-xs-offset-6{margin-left:50%}.col-xs-offset-5{margin-left:41.66666667%}.col-xs-offset-4{margin-left:33.33333333%}.col-xs-offset-3{margin-left:25%}.col-xs-offset-2{margin-left:16.66666667%}.col-xs-offset-1{margin-left:8.33333333%}.col-xs-offset-0{margin-left:0}@media (min-width:768px){.col-sm-1,.col-sm-10,.col-sm-11,.col-sm-12,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9{float:left}.col-sm-12{width:100%}.col-sm-11{width:91.66666667%}.col-sm-10{width:83.33333333%}.col-sm-9{width:75%}.col-sm-8{width:66.66666667%}.col-sm-7{width:58.33333333%}.col-sm-6{width:50%}.col-sm-5{width:41.66666667%}.col-sm-4{width:33.33333333%}.col-sm-3{width:25%}.col-sm-2{width:16.66666667%}.col-sm-1{width:8.33333333%}.col-sm-pull-12{right:100%}.col-sm-pull-11{right:91.66666667%}.col-sm-pull-10{right:83.33333333%}.col-sm-pull-9{right:75%}.col-sm-pull-8{right:66.66666667%}.col-sm-pull-7{right:58.33333333%}.col-sm-pull-6{right:50%}.col-sm-pull-5{right:41.66666667%}.col-sm-pull-4{right:33.33333333%}.col-sm-pull-3{right:25%}.col-sm-pull-2{right:16.66666667%}.col-sm-pull-1{right:8.33333333%}.col-sm-pull-0{right:auto}.col-sm-push-12{left:100%}.col-sm-push-11{left:91.66666667%}.col-sm-push-10{left:83.33333333%}.col-sm-push-9{left:75%}.col-sm-push-8{left:66.66666667%}.col-sm-push-7{left:58.33333333%}.col-sm-push-6{left:50%}.col-sm-push-5{left:41.66666667%}.col-sm-push-4{left:33.33333333%}.col-sm-push-3{left:25%}.col-sm-push-2{left:16.66666667%}.col-sm-push-1{left:8.33333333%}.col-sm-push-0{left:auto}.col-sm-offset-12{margin-left:100%}.col-sm-offset-11{margin-left:91.66666667%}.col-sm-offset-10{margin-left:83.33333333%}.col-sm-offset-9{margin-left:75%}.col-sm-offset-8{margin-left:66.66666667%}.col-sm-offset-7{margin-left:58.33333333%}.col-sm-offset-6{margin-left:50%}.col-sm-offset-5{margin-left:41.66666667%}.col-sm-offset-4{margin-left:33.33333333%}.col-sm-offset-3{margin-left:25%}.col-sm-offset-2{margin-left:16.66666667%}.col-sm-offset-1{margin-left:8.33333333%}.col-sm-offset-0{margin-left:0}}@media (min-width:992px){.col-md-1,.col-md-10,.col-md-11,.col-md-12,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9{float:left}.col-md-12{width:100%}.col-md-11{width:91.66666667%}.col-md-10{width:83.33333333%}.col-md-9{width:75%}.col-md-8{width:66.66666667%}.col-md-7{width:58.33333333%}.col-md-6{width:50%}.col-md-5{width:41.66666667%}.col-md-4{width:33.33333333%}.col-md-3{width:25%}.col-md-2{width:16.66666667%}.col-md-1{width:8.33333333%}.col-md-pull-12{right:100%}.col-md-pull-11{right:91.66666667%}.col-md-pull-10{right:83.33333333%}.col-md-pull-9{right:75%}.col-md-pull-8{right:66.66666667%}.col-md-pull-7{right:58.33333333%}.col-md-pull-6{right:50%}.col-md-pull-5{right:41.66666667%}.col-md-pull-4{right:33.33333333%}.col-md-pull-3{right:25%}.col-md-pull-2{right:16.66666667%}.col-md-pull-1{right:8.33333333%}.col-md-pull-0{right:auto}.col-md-push-12{left:100%}.col-md-push-11{left:91.66666667%}.col-md-push-10{left:83.33333333%}.col-md-push-9{left:75%}.col-md-push-8{left:66.66666667%}.col-md-push-7{left:58.33333333%}.col-md-push-6{left:50%}.col-md-push-5{left:41.66666667%}.col-md-push-4{left:33.33333333%}.col-md-push-3{left:25%}.col-md-push-2{left:16.66666667%}.col-md-push-1{left:8.33333333%}.col-md-push-0{left:auto}.col-md-offset-12{margin-left:100%}.col-md-offset-11{margin-left:91.66666667%}.col-md-offset-10{margin-left:83.33333333%}.col-md-offset-9{margin-left:75%}.col-md-offset-8{margin-left:66.66666667%}.col-md-offset-7{margin-left:58.33333333%}.col-md-offset-6{margin-left:50%}.col-md-offset-5{margin-left:41.66666667%}.col-md-offset-4{margin-left:33.33333333%}.col-md-offset-3{margin-left:25%}.col-md-offset-2{margin-left:16.66666667%}.col-md-offset-1{margin-left:8.33333333%}.col-md-offset-0{margin-left:0}}@media (min-width:1200px){.col-lg-1,.col-lg-10,.col-lg-11,.col-lg-12,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9{float:left}.col-lg-12{width:100%}.col-lg-11{width:91.66666667%}.col-lg-10{width:83.33333333%}.col-lg-9{width:75%}.col-lg-8{width:66.66666667%}.col-lg-7{width:58.33333333%}.col-lg-6{width:50%}.col-lg-5{width:41.66666667%}.col-lg-4{width:33.33333333%}.col-lg-3{width:25%}.col-lg-2{width:16.66666667%}.col-lg-1{width:8.33333333%}.col-lg-pull-12{right:100%}.col-lg-pull-11{right:91.66666667%}.col-lg-pull-10{right:83.33333333%}.col-lg-pull-9{right:75%}.col-lg-pull-8{right:66.66666667%}.col-lg-pull-7{right:58.33333333%}.col-lg-pull-6{right:50%}.col-lg-pull-5{right:41.66666667%}.col-lg-pull-4{right:33.33333333%}.col-lg-pull-3{right:25%}.col-lg-pull-2{right:16.66666667%}.col-lg-pull-1{right:8.33333333%}.col-lg-pull-0{right:auto}.col-lg-push-12{left:100%}.col-lg-push-11{left:91.66666667%}.col-lg-push-10{left:83.33333333%}.col-lg-push-9{left:75%}.col-lg-push-8{left:66.66666667%}.col-lg-push-7{left:58.33333333%}.col-lg-push-6{left:50%}.col-lg-push-5{left:41.66666667%}.col-lg-push-4{left:33.33333333%}.col-lg-push-3{left:25%}.col-lg-push-2{left:16.66666667%}.col-lg-push-1{left:8.33333333%}.col-lg-push-0{left:auto}.col-lg-offset-12{margin-left:100%}.col-lg-offset-11{margin-left:91.66666667%}.col-lg-offset-10{margin-left:83.33333333%}.col-lg-offset-9{margin-left:75%}.col-lg-offset-8{margin-left:66.66666667%}.col-lg-offset-7{margin-left:58.33333333%}.col-lg-offset-6{margin-left:50%}.col-lg-offset-5{margin-left:41.66666667%}.col-lg-offset-4{margin-left:33.33333333%}.col-lg-offset-3{margin-left:25%}.col-lg-offset-2{margin-left:16.66666667%}.col-lg-offset-1{margin-left:8.33333333%}.col-lg-offset-0{margin-left:0}}table{background-color:transparent}caption{padding-top:8px;padding-bottom:8px;color:#777;text-align:left}th{text-align:left}.table{width:100%;max-width:100%;margin-bottom:20px}.table>tbody>tr>td,.table>tbody>tr>th,.table>tfoot>tr>td,.table>tfoot>tr>th,.table>thead>tr>td,.table>thead>tr>th{padding:8px;line-height:1.42857143;vertical-align:top;border-top:1px solid #ddd}.table>thead>tr>th{vertical-align:bottom;border-bottom:2px solid #ddd}.table>caption+thead>tr:first-child>td,.table>caption+thead>tr:first-child>th,.table>colgroup+thead>tr:first-child>td,.table>colgroup+thead>tr:first-child>th,.table>thead:first-child>tr:first-child>td,.table>thead:first-child>tr:first-child>th{border-top:0}.table>tbody+tbody{border-top:2px solid #ddd}.table .table{background-color:#fff}.table-condensed>tbody>tr>td,.table-condensed>tbody>tr>th,.table-condensed>tfoot>tr>td,.table-condensed>tfoot>tr>th,.table-condensed>thead>tr>td,.table-condensed>thead>tr>th{padding:5px}.table-bordered{border:1px solid #ddd}.table-bordered>tbody>tr>td,.table-bordered>tbody>tr>th,.table-bordered>tfoot>tr>td,.table-bordered>tfoot>tr>th,.table-bordered>thead>tr>td,.table-bordered>thead>tr>th{border:1px solid #ddd}.table-bordered>thead>tr>td,.table-bordered>thead>tr>th{border-bottom-width:2px}.table-striped>tbody>tr:nth-of-type(odd){background-color:#f9f9f9}.table-hover>tbody>tr:hover{background-color:#f5f5f5}table col[class*=col-]{position:static;display:table-column;float:none}table td[class*=col-],table th[class*=col-]{position:static;display:table-cell;float:none}.table>tbody>tr.active>td,.table>tbody>tr.active>th,.table>tbody>tr>td.active,.table>tbody>tr>th.active,.table>tfoot>tr.active>td,.table>tfoot>tr.active>th,.table>tfoot>tr>td.active,.table>tfoot>tr>th.active,.table>thead>tr.active>td,.table>thead>tr.active>th,.table>thead>tr>td.active,.table>thead>tr>th.active{background-color:#f5f5f5}.table-hover>tbody>tr.active:hover>td,.table-hover>tbody>tr.active:hover>th,.table-hover>tbody>tr:hover>.active,.table-hover>tbody>tr>td.active:hover,.table-hover>tbody>tr>th.active:hover{background-color:#e8e8e8}.table>tbody>tr.success>td,.table>tbody>tr.success>th,.table>tbody>tr>td.success,.table>tbody>tr>th.success,.table>tfoot>tr.success>td,.table>tfoot>tr.success>th,.table>tfoot>tr>td.success,.table>tfoot>tr>th.success,.table>thead>tr.success>td,.table>thead>tr.success>th,.table>thead>tr>td.success,.table>thead>tr>th.success{background-color:#dff0d8}.table-hover>tbody>tr.success:hover>td,.table-hover>tbody>tr.success:hover>th,.table-hover>tbody>tr:hover>.success,.table-hover>tbody>tr>td.success:hover,.table-hover>tbody>tr>th.success:hover{background-color:#d0e9c6}.table>tbody>tr.info>td,.table>tbody>tr.info>th,.table>tbody>tr>td.info,.table>tbody>tr>th.info,.table>tfoot>tr.info>td,.table>tfoot>tr.info>th,.table>tfoot>tr>td.info,.table>tfoot>tr>th.info,.table>thead>tr.info>td,.table>thead>tr.info>th,.table>thead>tr>td.info,.table>thead>tr>th.info{background-color:#d9edf7}.table-hover>tbody>tr.info:hover>td,.table-hover>tbody>tr.info:hover>th,.table-hover>tbody>tr:hover>.info,.table-hover>tbody>tr>td.info:hover,.table-hover>tbody>tr>th.info:hover{background-color:#c4e3f3}.table>tbody>tr.warning>td,.table>tbody>tr.warning>th,.table>tbody>tr>td.warning,.table>tbody>tr>th.warning,.table>tfoot>tr.warning>td,.table>tfoot>tr.warning>th,.table>tfoot>tr>td.warning,.table>tfoot>tr>th.warning,.table>thead>tr.warning>td,.table>thead>tr.warning>th,.table>thead>tr>td.warning,.table>thead>tr>th.warning{background-color:#fcf8e3}.table-hover>tbody>tr.warning:hover>td,.table-hover>tbody>tr.warning:hover>th,.table-hover>tbody>tr:hover>.warning,.table-hover>tbody>tr>td.warning:hover,.table-hover>tbody>tr>th.warning:hover{background-color:#faf2cc}.table>tbody>tr.danger>td,.table>tbody>tr.danger>th,.table>tbody>tr>td.danger,.table>tbody>tr>th.danger,.table>tfoot>tr.danger>td,.table>tfoot>tr.danger>th,.table>tfoot>tr>td.danger,.table>tfoot>tr>th.danger,.table>thead>tr.danger>td,.table>thead>tr.danger>th,.table>thead>tr>td.danger,.table>thead>tr>th.danger{background-color:#f2dede}.table-hover>tbody>tr.danger:hover>td,.table-hover>tbody>tr.danger:hover>th,.table-hover>tbody>tr:hover>.danger,.table-hover>tbody>tr>td.danger:hover,.table-hover>tbody>tr>th.danger:hover{background-color:#ebcccc}.table-responsive{min-height:.01%;overflow-x:auto}@media screen and (max-width:767px){.table-responsive{width:100%;margin-bottom:15px;overflow-y:hidden;-ms-overflow-style:-ms-autohiding-scrollbar;border:1px solid #ddd}.table-responsive>.table{margin-bottom:0}.table-responsive>.table>tbody>tr>td,.table-responsive>.table>tbody>tr>th,.table-responsive>.table>tfoot>tr>td,.table-responsive>.table>tfoot>tr>th,.table-responsive>.table>thead>tr>td,.table-responsive>.table>thead>tr>th{white-space:nowrap}.table-responsive>.table-bordered{border:0}.table-responsive>.table-bordered>tbody>tr>td:first-child,.table-responsive>.table-bordered>tbody>tr>th:first-child,.table-responsive>.table-bordered>tfoot>tr>td:first-child,.table-responsive>.table-bordered>tfoot>tr>th:first-child,.table-responsive>.table-bordered>thead>tr>td:first-child,.table-responsive>.table-bordered>thead>tr>th:first-child{border-left:0}.table-responsive>.table-bordered>tbody>tr>td:last-child,.table-responsive>.table-bordered>tbody>tr>th:last-child,.table-responsive>.table-bordered>tfoot>tr>td:last-child,.table-responsive>.table-bordered>tfoot>tr>th:last-child,.table-responsive>.table-bordered>thead>tr>td:last-child,.table-responsive>.table-bordered>thead>tr>th:last-child{border-right:0}.table-responsive>.table-bordered>tbody>tr:last-child>td,.table-responsive>.table-bordered>tbody>tr:last-child>th,.table-responsive>.table-bordered>tfoot>tr:last-child>td,.table-responsive>.table-bordered>tfoot>tr:last-child>th{border-bottom:0}}fieldset{min-width:0;padding:0;margin:0;border:0}legend{display:block;width:100%;padding:0;margin-bottom:20px;font-size:21px;line-height:inherit;color:#333;border:0;border-bottom:1px solid #e5e5e5}label{display:inline-block;max-width:100%;margin-bottom:5px;font-weight:700}input[type=search]{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}input[type=checkbox],input[type=radio]{margin:4px 0 0;margin-top:1px\9;line-height:normal}input[type=file]{display:block}input[type=range]{display:block;width:100%}select[multiple],select[size]{height:auto}input[type=file]:focus,input[type=checkbox]:focus,input[type=radio]:focus{outline:thin dotted;outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}output{display:block;padding-top:7px;font-size:14px;line-height:1.42857143;color:#555}.form-control{display:block;width:100%;height:34px;padding:6px 12px;font-size:14px;line-height:1.42857143;color:#555;background-color:#fff;background-image:none;border:1px solid #ccc;border-radius:4px;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075);box-shadow:inset 0 1px 1px rgba(0,0,0,.075);-webkit-transition:border-color ease-in-out .15s,-webkit-box-shadow ease-in-out .15s;-o-transition:border-color ease-in-out .15s,box-shadow ease-in-out .15s;transition:border-color ease-in-out .15s,box-shadow ease-in-out .15s}.form-control:focus{border-color:#66afe9;outline:0;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgba(102,175,233,.6);box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgba(102,175,233,.6)}.form-control::-moz-placeholder{color:#999;opacity:1}.form-control:-ms-input-placeholder{color:#999}.form-control::-webkit-input-placeholder{color:#999}.form-control::-ms-expand{background-color:transparent;border:0}.form-control[disabled],.form-control[readonly],fieldset[disabled] .form-control{background-color:#eee;opacity:1}.form-control[disabled],fieldset[disabled] .form-control{cursor:not-allowed}textarea.form-control{height:auto}input[type=search]{-webkit-appearance:none}@media screen and (-webkit-min-device-pixel-ratio:0){input[type=date].form-control,input[type=time].form-control,input[type=datetime-local].form-control,input[type=month].form-control{line-height:34px}.input-group-sm input[type=date],.input-group-sm input[type=time],.input-group-sm input[type=datetime-local],.input-group-sm input[type=month],input[type=date].input-sm,input[type=time].input-sm,input[type=datetime-local].input-sm,input[type=month].input-sm{line-height:30px}.input-group-lg input[type=date],.input-group-lg input[type=time],.input-group-lg input[type=datetime-local],.input-group-lg input[type=month],input[type=date].input-lg,input[type=time].input-lg,input[type=datetime-local].input-lg,input[type=month].input-lg{line-height:46px}}.form-group{margin-bottom:15px}.checkbox,.radio{position:relative;display:block;margin-top:10px;margin-bottom:10px}.checkbox label,.radio label{min-height:20px;padding-left:20px;margin-bottom:0;font-weight:400;cursor:pointer}.checkbox input[type=checkbox],.checkbox-inline input[type=checkbox],.radio input[type=radio],.radio-inline input[type=radio]{position:absolute;margin-top:4px\9;margin-left:-20px}.checkbox+.checkbox,.radio+.radio{margin-top:-5px}.checkbox-inline,.radio-inline{position:relative;display:inline-block;padding-left:20px;margin-bottom:0;font-weight:400;vertical-align:middle;cursor:pointer}.checkbox-inline+.checkbox-inline,.radio-inline+.radio-inline{margin-top:0;margin-left:10px}fieldset[disabled] input[type=checkbox],fieldset[disabled] input[type=radio],input[type=checkbox].disabled,input[type=checkbox][disabled],input[type=radio].disabled,input[type=radio][disabled]{cursor:not-allowed}.checkbox-inline.disabled,.radio-inline.disabled,fieldset[disabled] .checkbox-inline,fieldset[disabled] .radio-inline{cursor:not-allowed}.checkbox.disabled label,.radio.disabled label,fieldset[disabled] .checkbox label,fieldset[disabled] .radio label{cursor:not-allowed}.form-control-static{min-height:34px;padding-top:7px;padding-bottom:7px;margin-bottom:0}.form-control-static.input-lg,.form-control-static.input-sm{padding-right:0;padding-left:0}.input-sm{height:30px;padding:5px 10px;font-size:12px;line-height:1.5;border-radius:3px}select.input-sm{height:30px;line-height:30px}select[multiple].input-sm,textarea.input-sm{height:auto}.form-group-sm .form-control{height:30px;padding:5px 10px;font-size:12px;line-height:1.5;border-radius:3px}.form-group-sm select.form-control{height:30px;line-height:30px}.form-group-sm select[multiple].form-control,.form-group-sm textarea.form-control{height:auto}.form-group-sm .form-control-static{height:30px;min-height:32px;padding:6px 10px;font-size:12px;line-height:1.5}.input-lg{height:46px;padding:10px 16px;font-size:18px;line-height:1.3333333;border-radius:6px}select.input-lg{height:46px;line-height:46px}select[multiple].input-lg,textarea.input-lg{height:auto}.form-group-lg .form-control{height:46px;padding:10px 16px;font-size:18px;line-height:1.3333333;border-radius:6px}.form-group-lg select.form-control{height:46px;line-height:46px}.form-group-lg select[multiple].form-control,.form-group-lg textarea.form-control{height:auto}.form-group-lg .form-control-static{height:46px;min-height:38px;padding:11px 16px;font-size:18px;line-height:1.3333333}.has-feedback{position:relative}.has-feedback .form-control{padding-right:42.5px}.form-control-feedback{position:absolute;top:0;right:0;z-index:2;display:block;width:34px;height:34px;line-height:34px;text-align:center;pointer-events:none}.form-group-lg .form-control+.form-control-feedback,.input-group-lg+.form-control-feedback,.input-lg+.form-control-feedback{width:46px;height:46px;line-height:46px}.form-group-sm .form-control+.form-control-feedback,.input-group-sm+.form-control-feedback,.input-sm+.form-control-feedback{width:30px;height:30px;line-height:30px}.has-success .checkbox,.has-success .checkbox-inline,.has-success .control-label,.has-success .help-block,.has-success .radio,.has-success .radio-inline,.has-success.checkbox label,.has-success.checkbox-inline label,.has-success.radio label,.has-success.radio-inline label{color:#3c763d}.has-success .form-control{border-color:#3c763d;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075);box-shadow:inset 0 1px 1px rgba(0,0,0,.075)}.has-success .form-control:focus{border-color:#2b542c;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #67b168;box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #67b168}.has-success .input-group-addon{color:#3c763d;background-color:#dff0d8;border-color:#3c763d}.has-success .form-control-feedback{color:#3c763d}.has-warning .checkbox,.has-warning .checkbox-inline,.has-warning .control-label,.has-warning .help-block,.has-warning .radio,.has-warning .radio-inline,.has-warning.checkbox label,.has-warning.checkbox-inline label,.has-warning.radio label,.has-warning.radio-inline label{color:#8a6d3b}.has-warning .form-control{border-color:#8a6d3b;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075);box-shadow:inset 0 1px 1px rgba(0,0,0,.075)}.has-warning .form-control:focus{border-color:#66512c;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #c0a16b;box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #c0a16b}.has-warning .input-group-addon{color:#8a6d3b;background-color:#fcf8e3;border-color:#8a6d3b}.has-warning .form-control-feedback{color:#8a6d3b}.has-error .checkbox,.has-error .checkbox-inline,.has-error .control-label,.has-error .help-block,.has-error .radio,.has-error .radio-inline,.has-error.checkbox label,.has-error.checkbox-inline label,.has-error.radio label,.has-error.radio-inline label{color:#a94442}.has-error .form-control{border-color:#a94442;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075);box-shadow:inset 0 1px 1px rgba(0,0,0,.075)}.has-error .form-control:focus{border-color:#843534;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #ce8483;box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #ce8483}.has-error .input-group-addon{color:#a94442;background-color:#f2dede;border-color:#a94442}.has-error .form-control-feedback{color:#a94442}.has-feedback label~.form-control-feedback{top:25px}.has-feedback label.sr-only~.form-control-feedback{top:0}.help-block{display:block;margin-top:5px;margin-bottom:10px;color:#737373}@media (min-width:768px){.form-inline .form-group{display:inline-block;margin-bottom:0;vertical-align:middle}.form-inline .form-control{display:inline-block;width:auto;vertical-align:middle}.form-inline .form-control-static{display:inline-block}.form-inline .input-group{display:inline-table;vertical-align:middle}.form-inline .input-group .form-control,.form-inline .input-group .input-group-addon,.form-inline .input-group .input-group-btn{width:auto}.form-inline .input-group>.form-control{width:100%}.form-inline .control-label{margin-bottom:0;vertical-align:middle}.form-inline .checkbox,.form-inline .radio{display:inline-block;margin-top:0;margin-bottom:0;vertical-align:middle}.form-inline .checkbox label,.form-inline .radio label{padding-left:0}.form-inline .checkbox input[type=checkbox],.form-inline .radio input[type=radio]{position:relative;margin-left:0}.form-inline .has-feedback .form-control-feedback{top:0}}.form-horizontal .checkbox,.form-horizontal .checkbox-inline,.form-horizontal .radio,.form-horizontal .radio-inline{padding-top:7px;margin-top:0;margin-bottom:0}.form-horizontal .checkbox,.form-horizontal .radio{min-height:27px}.form-horizontal .form-group{margin-right:-15px;margin-left:-15px}@media (min-width:768px){.form-horizontal .control-label{padding-top:7px;margin-bottom:0;text-align:right}}.form-horizontal .has-feedback .form-control-feedback{right:15px}@media (min-width:768px){.form-horizontal .form-group-lg .control-label{padding-top:11px;font-size:18px}}@media (min-width:768px){.form-horizontal .form-group-sm .control-label{padding-top:6px;font-size:12px}}.btn{display:inline-block;padding:6px 12px;margin-bottom:0;font-size:14px;font-weight:400;line-height:1.42857143;text-align:center;white-space:nowrap;vertical-align:middle;-ms-touch-action:manipulation;touch-action:manipulation;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-image:none;border:1px solid transparent;border-radius:4px}.btn.active.focus,.btn.active:focus,.btn.focus,.btn:active.focus,.btn:active:focus,.btn:focus{outline:thin dotted;outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}.btn.focus,.btn:focus,.btn:hover{color:#333;text-decoration:none}.btn.active,.btn:active{background-image:none;outline:0;-webkit-box-shadow:inset 0 3px 5px rgba(0,0,0,.125);box-shadow:inset 0 3px 5px rgba(0,0,0,.125)}.btn.disabled,.btn[disabled],fieldset[disabled] .btn{cursor:not-allowed;filter:alpha(opacity=65);-webkit-box-shadow:none;box-shadow:none;opacity:.65}a.btn.disabled,fieldset[disabled] a.btn{pointer-events:none}.btn-default{color:#333;background-color:#fff;border-color:#ccc}.btn-default.focus,.btn-default:focus{color:#333;background-color:#e6e6e6;border-color:#8c8c8c}.btn-default:hover{color:#333;background-color:#e6e6e6;border-color:#adadad}.btn-default.active,.btn-default:active,.open>.dropdown-toggle.btn-default{color:#333;background-color:#e6e6e6;border-color:#adadad}.btn-default.active.focus,.btn-default.active:focus,.btn-default.active:hover,.btn-default:active.focus,.btn-default:active:focus,.btn-default:active:hover,.open>.dropdown-toggle.btn-default.focus,.open>.dropdown-toggle.btn-default:focus,.open>.dropdown-toggle.btn-default:hover{color:#333;background-color:#d4d4d4;border-color:#8c8c8c}.btn-default.active,.btn-default:active,.open>.dropdown-toggle.btn-default{background-image:none}.btn-default.disabled.focus,.btn-default.disabled:focus,.btn-default.disabled:hover,.btn-default[disabled].focus,.btn-default[disabled]:focus,.btn-default[disabled]:hover,fieldset[disabled] .btn-default.focus,fieldset[disabled] .btn-default:focus,fieldset[disabled] .btn-default:hover{background-color:#fff;border-color:#ccc}.btn-default .badge{color:#fff;background-color:#333}.btn-primary{color:#fff;background-color:#337ab7;border-color:#2e6da4}.btn-primary.focus,.btn-primary:focus{color:#fff;background-color:#286090;border-color:#122b40}.btn-primary:hover{color:#fff;background-color:#286090;border-color:#204d74}.btn-primary.active,.btn-primary:active,.open>.dropdown-toggle.btn-primary{color:#fff;background-color:#286090;border-color:#204d74}.btn-primary.active.focus,.btn-primary.active:focus,.btn-primary.active:hover,.btn-primary:active.focus,.btn-primary:active:focus,.btn-primary:active:hover,.open>.dropdown-toggle.btn-primary.focus,.open>.dropdown-toggle.btn-primary:focus,.open>.dropdown-toggle.btn-primary:hover{color:#fff;background-color:#204d74;border-color:#122b40}.btn-primary.active,.btn-primary:active,.open>.dropdown-toggle.btn-primary{background-image:none}.btn-primary.disabled.focus,.btn-primary.disabled:focus,.btn-primary.disabled:hover,.btn-primary[disabled].focus,.btn-primary[disabled]:focus,.btn-primary[disabled]:hover,fieldset[disabled] .btn-primary.focus,fieldset[disabled] .btn-primary:focus,fieldset[disabled] .btn-primary:hover{background-color:#337ab7;border-color:#2e6da4}.btn-primary .badge{color:#337ab7;background-color:#fff}.btn-success{color:#fff;background-color:#5cb85c;border-color:#4cae4c}.btn-success.focus,.btn-success:focus{color:#fff;background-color:#449d44;border-color:#255625}.btn-success:hover{color:#fff;background-color:#449d44;border-color:#398439}.btn-success.active,.btn-success:active,.open>.dropdown-toggle.btn-success{color:#fff;background-color:#449d44;border-color:#398439}.btn-success.active.focus,.btn-success.active:focus,.btn-success.active:hover,.btn-success:active.focus,.btn-success:active:focus,.btn-success:active:hover,.open>.dropdown-toggle.btn-success.focus,.open>.dropdown-toggle.btn-success:focus,.open>.dropdown-toggle.btn-success:hover{color:#fff;background-color:#398439;border-color:#255625}.btn-success.active,.btn-success:active,.open>.dropdown-toggle.btn-success{background-image:none}.btn-success.disabled.focus,.btn-success.disabled:focus,.btn-success.disabled:hover,.btn-success[disabled].focus,.btn-success[disabled]:focus,.btn-success[disabled]:hover,fieldset[disabled] .btn-success.focus,fieldset[disabled] .btn-success:focus,fieldset[disabled] .btn-success:hover{background-color:#5cb85c;border-color:#4cae4c}.btn-success .badge{color:#5cb85c;background-color:#fff}.btn-info{color:#fff;background-color:#5bc0de;border-color:#46b8da}.btn-info.focus,.btn-info:focus{color:#fff;background-color:#31b0d5;border-color:#1b6d85}.btn-info:hover{color:#fff;background-color:#31b0d5;border-color:#269abc}.btn-info.active,.btn-info:active,.open>.dropdown-toggle.btn-info{color:#fff;background-color:#31b0d5;border-color:#269abc}.btn-info.active.focus,.btn-info.active:focus,.btn-info.active:hover,.btn-info:active.focus,.btn-info:active:focus,.btn-info:active:hover,.open>.dropdown-toggle.btn-info.focus,.open>.dropdown-toggle.btn-info:focus,.open>.dropdown-toggle.btn-info:hover{color:#fff;background-color:#269abc;border-color:#1b6d85}.btn-info.active,.btn-info:active,.open>.dropdown-toggle.btn-info{background-image:none}.btn-info.disabled.focus,.btn-info.disabled:focus,.btn-info.disabled:hover,.btn-info[disabled].focus,.btn-info[disabled]:focus,.btn-info[disabled]:hover,fieldset[disabled] .btn-info.focus,fieldset[disabled] .btn-info:focus,fieldset[disabled] .btn-info:hover{background-color:#5bc0de;border-color:#46b8da}.btn-info .badge{color:#5bc0de;background-color:#fff}.btn-warning{color:#fff;background-color:#f0ad4e;border-color:#eea236}.btn-warning.focus,.btn-warning:focus{color:#fff;background-color:#ec971f;border-color:#985f0d}.btn-warning:hover{color:#fff;background-color:#ec971f;border-color:#d58512}.btn-warning.active,.btn-warning:active,.open>.dropdown-toggle.btn-warning{color:#fff;background-color:#ec971f;border-color:#d58512}.btn-warning.active.focus,.btn-warning.active:focus,.btn-warning.active:hover,.btn-warning:active.focus,.btn-warning:active:focus,.btn-warning:active:hover,.open>.dropdown-toggle.btn-warning.focus,.open>.dropdown-toggle.btn-warning:focus,.open>.dropdown-toggle.btn-warning:hover{color:#fff;background-color:#d58512;border-color:#985f0d}.btn-warning.active,.btn-warning:active,.open>.dropdown-toggle.btn-warning{background-image:none}.btn-warning.disabled.focus,.btn-warning.disabled:focus,.btn-warning.disabled:hover,.btn-warning[disabled].focus,.btn-warning[disabled]:focus,.btn-warning[disabled]:hover,fieldset[disabled] .btn-warning.focus,fieldset[disabled] .btn-warning:focus,fieldset[disabled] .btn-warning:hover{background-color:#f0ad4e;border-color:#eea236}.btn-warning .badge{color:#f0ad4e;background-color:#fff}.btn-danger{color:#fff;background-color:#d9534f;border-color:#d43f3a}.btn-danger.focus,.btn-danger:focus{color:#fff;background-color:#c9302c;border-color:#761c19}.btn-danger:hover{color:#fff;background-color:#c9302c;border-color:#ac2925}.btn-danger.active,.btn-danger:active,.open>.dropdown-toggle.btn-danger{color:#fff;background-color:#c9302c;border-color:#ac2925}.btn-danger.active.focus,.btn-danger.active:focus,.btn-danger.active:hover,.btn-danger:active.focus,.btn-danger:active:focus,.btn-danger:active:hover,.open>.dropdown-toggle.btn-danger.focus,.open>.dropdown-toggle.btn-danger:focus,.open>.dropdown-toggle.btn-danger:hover{color:#fff;background-color:#ac2925;border-color:#761c19}.btn-danger.active,.btn-danger:active,.open>.dropdown-toggle.btn-danger{background-image:none}.btn-danger.disabled.focus,.btn-danger.disabled:focus,.btn-danger.disabled:hover,.btn-danger[disabled].focus,.btn-danger[disabled]:focus,.btn-danger[disabled]:hover,fieldset[disabled] .btn-danger.focus,fieldset[disabled] .btn-danger:focus,fieldset[disabled] .btn-danger:hover{background-color:#d9534f;border-color:#d43f3a}.btn-danger .badge{color:#d9534f;background-color:#fff}.btn-link{font-weight:400;color:#337ab7;border-radius:0}.btn-link,.btn-link.active,.btn-link:active,.btn-link[disabled],fieldset[disabled] .btn-link{background-color:transparent;-webkit-box-shadow:none;box-shadow:none}.btn-link,.btn-link:active,.btn-link:focus,.btn-link:hover{border-color:transparent}.btn-link:focus,.btn-link:hover{color:#23527c;text-decoration:underline;background-color:transparent}.btn-link[disabled]:focus,.btn-link[disabled]:hover,fieldset[disabled] .btn-link:focus,fieldset[disabled] .btn-link:hover{color:#777;text-decoration:none}.btn-group-lg>.btn,.btn-lg{padding:10px 16px;font-size:18px;line-height:1.3333333;border-radius:6px}.btn-group-sm>.btn,.btn-sm{padding:5px 10px;font-size:12px;line-height:1.5;border-radius:3px}.btn-group-xs>.btn,.btn-xs{padding:1px 5px;font-size:12px;line-height:1.5;border-radius:3px}.btn-block{display:block;width:100%}.btn-block+.btn-block{margin-top:5px}input[type=button].btn-block,input[type=reset].btn-block,input[type=submit].btn-block{width:100%}.fade{opacity:0;-webkit-transition:opacity .15s linear;-o-transition:opacity .15s linear;transition:opacity .15s linear}.fade.in{opacity:1}.collapse{display:none}.collapse.in{display:block}tr.collapse.in{display:table-row}tbody.collapse.in{display:table-row-group}.collapsing{position:relative;height:0;overflow:hidden;-webkit-transition-timing-function:ease;-o-transition-timing-function:ease;transition-timing-function:ease;-webkit-transition-duration:.35s;-o-transition-duration:.35s;transition-duration:.35s;-webkit-transition-property:height,visibility;-o-transition-property:height,visibility;transition-property:height,visibility}.caret{display:inline-block;width:0;height:0;margin-left:2px;vertical-align:middle;border-top:4px dashed;border-top:4px solid\9;border-right:4px solid transparent;border-left:4px solid transparent}.dropdown,.dropup{position:relative}.dropdown-toggle:focus{outline:0}.dropdown-menu{position:absolute;top:100%;left:0;z-index:1000;display:none;float:left;min-width:160px;padding:5px 0;margin:2px 0 0;font-size:14px;text-align:left;list-style:none;background-color:#fff;-webkit-background-clip:padding-box;background-clip:padding-box;border:1px solid #ccc;border:1px solid rgba(0,0,0,.15);border-radius:4px;-webkit-box-shadow:0 6px 12px rgba(0,0,0,.175);box-shadow:0 6px 12px rgba(0,0,0,.175)}.dropdown-menu.pull-right{right:0;left:auto}.dropdown-menu .divider{height:1px;margin:9px 0;overflow:hidden;background-color:#e5e5e5}.dropdown-menu>li>a{display:block;padding:3px 20px;clear:both;font-weight:400;line-height:1.42857143;color:#333;white-space:nowrap}.dropdown-menu>li>a:focus,.dropdown-menu>li>a:hover{color:#262626;text-decoration:none;background-color:#f5f5f5}.dropdown-menu>.active>a,.dropdown-menu>.active>a:focus,.dropdown-menu>.active>a:hover{color:#fff;text-decoration:none;background-color:#337ab7;outline:0}.dropdown-menu>.disabled>a,.dropdown-menu>.disabled>a:focus,.dropdown-menu>.disabled>a:hover{color:#777}.dropdown-menu>.disabled>a:focus,.dropdown-menu>.disabled>a:hover{text-decoration:none;cursor:not-allowed;background-color:transparent;background-image:none;filter:progid:DXImageTransform.Microsoft.gradient(enabled=false)}.open>.dropdown-menu{display:block}.open>a{outline:0}.dropdown-menu-right{right:0;left:auto}.dropdown-menu-left{right:auto;left:0}.dropdown-header{display:block;padding:3px 20px;font-size:12px;line-height:1.42857143;color:#777;white-space:nowrap}.dropdown-backdrop{position:fixed;top:0;right:0;bottom:0;left:0;z-index:990}.pull-right>.dropdown-menu{right:0;left:auto}.dropup .caret,.navbar-fixed-bottom .dropdown .caret{content:"";border-top:0;border-bottom:4px dashed;border-bottom:4px solid\9}.dropup .dropdown-menu,.navbar-fixed-bottom .dropdown .dropdown-menu{top:auto;bottom:100%;margin-bottom:2px}@media (min-width:768px){.navbar-right .dropdown-menu{right:0;left:auto}.navbar-right .dropdown-menu-left{right:auto;left:0}}.btn-group,.btn-group-vertical{position:relative;display:inline-block;vertical-align:middle}.btn-group-vertical>.btn,.btn-group>.btn{position:relative;float:left}.btn-group-vertical>.btn.active,.btn-group-vertical>.btn:active,.btn-group-vertical>.btn:focus,.btn-group-vertical>.btn:hover,.btn-group>.btn.active,.btn-group>.btn:active,.btn-group>.btn:focus,.btn-group>.btn:hover{z-index:2}.btn-group .btn+.btn,.btn-group .btn+.btn-group,.btn-group .btn-group+.btn,.btn-group .btn-group+.btn-group{margin-left:-1px}.btn-toolbar{margin-left:-5px}.btn-toolbar .btn,.btn-toolbar .btn-group,.btn-toolbar .input-group{float:left}.btn-toolbar>.btn,.btn-toolbar>.btn-group,.btn-toolbar>.input-group{margin-left:5px}.btn-group>.btn:not(:first-child):not(:last-child):not(.dropdown-toggle){border-radius:0}.btn-group>.btn:first-child{margin-left:0}.btn-group>.btn:first-child:not(:last-child):not(.dropdown-toggle){border-top-right-radius:0;border-bottom-right-radius:0}.btn-group>.btn:last-child:not(:first-child),.btn-group>.dropdown-toggle:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.btn-group>.btn-group{float:left}.btn-group>.btn-group:not(:first-child):not(:last-child)>.btn{border-radius:0}.btn-group>.btn-group:first-child:not(:last-child)>.btn:last-child,.btn-group>.btn-group:first-child:not(:last-child)>.dropdown-toggle{border-top-right-radius:0;border-bottom-right-radius:0}.btn-group>.btn-group:last-child:not(:first-child)>.btn:first-child{border-top-left-radius:0;border-bottom-left-radius:0}.btn-group .dropdown-toggle:active,.btn-group.open .dropdown-toggle{outline:0}.btn-group>.btn+.dropdown-toggle{padding-right:8px;padding-left:8px}.btn-group>.btn-lg+.dropdown-toggle{padding-right:12px;padding-left:12px}.btn-group.open .dropdown-toggle{-webkit-box-shadow:inset 0 3px 5px rgba(0,0,0,.125);box-shadow:inset 0 3px 5px rgba(0,0,0,.125)}.btn-group.open .dropdown-toggle.btn-link{-webkit-box-shadow:none;box-shadow:none}.btn .caret{margin-left:0}.btn-lg .caret{border-width:5px 5px 0;border-bottom-width:0}.dropup .btn-lg .caret{border-width:0 5px 5px}.btn-group-vertical>.btn,.btn-group-vertical>.btn-group,.btn-group-vertical>.btn-group>.btn{display:block;float:none;width:100%;max-width:100%}.btn-group-vertical>.btn-group>.btn{float:none}.btn-group-vertical>.btn+.btn,.btn-group-vertical>.btn+.btn-group,.btn-group-vertical>.btn-group+.btn,.btn-group-vertical>.btn-group+.btn-group{margin-top:-1px;margin-left:0}.btn-group-vertical>.btn:not(:first-child):not(:last-child){border-radius:0}.btn-group-vertical>.btn:first-child:not(:last-child){border-top-left-radius:4px;border-top-right-radius:4px;border-bottom-right-radius:0;border-bottom-left-radius:0}.btn-group-vertical>.btn:last-child:not(:first-child){border-top-left-radius:0;border-top-right-radius:0;border-bottom-right-radius:4px;border-bottom-left-radius:4px}.btn-group-vertical>.btn-group:not(:first-child):not(:last-child)>.btn{border-radius:0}.btn-group-vertical>.btn-group:first-child:not(:last-child)>.btn:last-child,.btn-group-vertical>.btn-group:first-child:not(:last-child)>.dropdown-toggle{border-bottom-right-radius:0;border-bottom-left-radius:0}.btn-group-vertical>.btn-group:last-child:not(:first-child)>.btn:first-child{border-top-left-radius:0;border-top-right-radius:0}.btn-group-justified{display:table;width:100%;table-layout:fixed;border-collapse:separate}.btn-group-justified>.btn,.btn-group-justified>.btn-group{display:table-cell;float:none;width:1%}.btn-group-justified>.btn-group .btn{width:100%}.btn-group-justified>.btn-group .dropdown-menu{left:auto}[data-toggle=buttons]>.btn input[type=checkbox],[data-toggle=buttons]>.btn input[type=radio],[data-toggle=buttons]>.btn-group>.btn input[type=checkbox],[data-toggle=buttons]>.btn-group>.btn input[type=radio]{position:absolute;clip:rect(0,0,0,0);pointer-events:none}.input-group{position:relative;display:table;border-collapse:separate}.input-group[class*=col-]{float:none;padding-right:0;padding-left:0}.input-group .form-control{position:relative;z-index:2;float:left;width:100%;margin-bottom:0}.input-group .form-control:focus{z-index:3}.input-group-lg>.form-control,.input-group-lg>.input-group-addon,.input-group-lg>.input-group-btn>.btn{height:46px;padding:10px 16px;font-size:18px;line-height:1.3333333;border-radius:6px}select.input-group-lg>.form-control,select.input-group-lg>.input-group-addon,select.input-group-lg>.input-group-btn>.btn{height:46px;line-height:46px}select[multiple].input-group-lg>.form-control,select[multiple].input-group-lg>.input-group-addon,select[multiple].input-group-lg>.input-group-btn>.btn,textarea.input-group-lg>.form-control,textarea.input-group-lg>.input-group-addon,textarea.input-group-lg>.input-group-btn>.btn{height:auto}.input-group-sm>.form-control,.input-group-sm>.input-group-addon,.input-group-sm>.input-group-btn>.btn{height:30px;padding:5px 10px;font-size:12px;line-height:1.5;border-radius:3px}select.input-group-sm>.form-control,select.input-group-sm>.input-group-addon,select.input-group-sm>.input-group-btn>.btn{height:30px;line-height:30px}select[multiple].input-group-sm>.form-control,select[multiple].input-group-sm>.input-group-addon,select[multiple].input-group-sm>.input-group-btn>.btn,textarea.input-group-sm>.form-control,textarea.input-group-sm>.input-group-addon,textarea.input-group-sm>.input-group-btn>.btn{height:auto}.input-group .form-control,.input-group-addon,.input-group-btn{display:table-cell}.input-group .form-control:not(:first-child):not(:last-child),.input-group-addon:not(:first-child):not(:last-child),.input-group-btn:not(:first-child):not(:last-child){border-radius:0}.input-group-addon,.input-group-btn{width:1%;white-space:nowrap;vertical-align:middle}.input-group-addon{padding:6px 12px;font-size:14px;font-weight:400;line-height:1;color:#555;text-align:center;background-color:#eee;border:1px solid #ccc;border-radius:4px}.input-group-addon.input-sm{padding:5px 10px;font-size:12px;border-radius:3px}.input-group-addon.input-lg{padding:10px 16px;font-size:18px;border-radius:6px}.input-group-addon input[type=checkbox],.input-group-addon input[type=radio]{margin-top:0}.input-group .form-control:first-child,.input-group-addon:first-child,.input-group-btn:first-child>.btn,.input-group-btn:first-child>.btn-group>.btn,.input-group-btn:first-child>.dropdown-toggle,.input-group-btn:last-child>.btn-group:not(:last-child)>.btn,.input-group-btn:last-child>.btn:not(:last-child):not(.dropdown-toggle){border-top-right-radius:0;border-bottom-right-radius:0}.input-group-addon:first-child{border-right:0}.input-group .form-control:last-child,.input-group-addon:last-child,.input-group-btn:first-child>.btn-group:not(:first-child)>.btn,.input-group-btn:first-child>.btn:not(:first-child),.input-group-btn:last-child>.btn,.input-group-btn:last-child>.btn-group>.btn,.input-group-btn:last-child>.dropdown-toggle{border-top-left-radius:0;border-bottom-left-radius:0}.input-group-addon:last-child{border-left:0}.input-group-btn{position:relative;font-size:0;white-space:nowrap}.input-group-btn>.btn{position:relative}.input-group-btn>.btn+.btn{margin-left:-1px}.input-group-btn>.btn:active,.input-group-btn>.btn:focus,.input-group-btn>.btn:hover{z-index:2}.input-group-btn:first-child>.btn,.input-group-btn:first-child>.btn-group{margin-right:-1px}.input-group-btn:last-child>.btn,.input-group-btn:last-child>.btn-group{z-index:2;margin-left:-1px}.nav{padding-left:0;margin-bottom:0;list-style:none}.nav>li{position:relative;display:block}.nav>li>a{position:relative;display:block;padding:10px 15px}.nav>li>a:focus,.nav>li>a:hover{text-decoration:none;background-color:#eee}.nav>li.disabled>a{color:#777}.nav>li.disabled>a:focus,.nav>li.disabled>a:hover{color:#777;text-decoration:none;cursor:not-allowed;background-color:transparent}.nav .open>a,.nav .open>a:focus,.nav .open>a:hover{background-color:#eee;border-color:#337ab7}.nav .nav-divider{height:1px;margin:9px 0;overflow:hidden;background-color:#e5e5e5}.nav>li>a>img{max-width:none}.nav-tabs{border-bottom:1px solid #ddd}.nav-tabs>li{float:left;margin-bottom:-1px}.nav-tabs>li>a{margin-right:2px;line-height:1.42857143;border:1px solid transparent;border-radius:4px 4px 0 0}.nav-tabs>li>a:hover{border-color:#eee #eee #ddd}.nav-tabs>li.active>a,.nav-tabs>li.active>a:focus,.nav-tabs>li.active>a:hover{color:#555;cursor:default;background-color:#fff;border:1px solid #ddd;border-bottom-color:transparent}.nav-tabs.nav-justified{width:100%;border-bottom:0}.nav-tabs.nav-justified>li{float:none}.nav-tabs.nav-justified>li>a{margin-bottom:5px;text-align:center}.nav-tabs.nav-justified>.dropdown .dropdown-menu{top:auto;left:auto}@media (min-width:768px){.nav-tabs.nav-justified>li{display:table-cell;width:1%}.nav-tabs.nav-justified>li>a{margin-bottom:0}}.nav-tabs.nav-justified>li>a{margin-right:0;border-radius:4px}.nav-tabs.nav-justified>.active>a,.nav-tabs.nav-justified>.active>a:focus,.nav-tabs.nav-justified>.active>a:hover{border:1px solid #ddd}@media (min-width:768px){.nav-tabs.nav-justified>li>a{border-bottom:1px solid #ddd;border-radius:4px 4px 0 0}.nav-tabs.nav-justified>.active>a,.nav-tabs.nav-justified>.active>a:focus,.nav-tabs.nav-justified>.active>a:hover{border-bottom-color:#fff}}.nav-pills>li{float:left}.nav-pills>li>a{border-radius:4px}.nav-pills>li+li{margin-left:2px}.nav-pills>li.active>a,.nav-pills>li.active>a:focus,.nav-pills>li.active>a:hover{color:#fff;background-color:#337ab7}.nav-stacked>li{float:none}.nav-stacked>li+li{margin-top:2px;margin-left:0}.nav-justified{width:100%}.nav-justified>li{float:none}.nav-justified>li>a{margin-bottom:5px;text-align:center}.nav-justified>.dropdown .dropdown-menu{top:auto;left:auto}@media (min-width:768px){.nav-justified>li{display:table-cell;width:1%}.nav-justified>li>a{margin-bottom:0}}.nav-tabs-justified{border-bottom:0}.nav-tabs-justified>li>a{margin-right:0;border-radius:4px}.nav-tabs-justified>.active>a,.nav-tabs-justified>.active>a:focus,.nav-tabs-justified>.active>a:hover{border:1px solid #ddd}@media (min-width:768px){.nav-tabs-justified>li>a{border-bottom:1px solid #ddd;border-radius:4px 4px 0 0}.nav-tabs-justified>.active>a,.nav-tabs-justified>.active>a:focus,.nav-tabs-justified>.active>a:hover{border-bottom-color:#fff}}.tab-content>.tab-pane{display:none}.tab-content>.active{display:block}.nav-tabs .dropdown-menu{margin-top:-1px;border-top-left-radius:0;border-top-right-radius:0}.navbar{position:relative;min-height:50px;margin-bottom:20px;border:1px solid transparent}@media (min-width:768px){.navbar{border-radius:4px}}@media (min-width:768px){.navbar-header{float:left}}.navbar-collapse{padding-right:15px;padding-left:15px;overflow-x:visible;-webkit-overflow-scrolling:touch;border-top:1px solid transparent;-webkit-box-shadow:inset 0 1px 0 rgba(255,255,255,.1);box-shadow:inset 0 1px 0 rgba(255,255,255,.1)}.navbar-collapse.in{overflow-y:auto}@media (min-width:768px){.navbar-collapse{width:auto;border-top:0;-webkit-box-shadow:none;box-shadow:none}.navbar-collapse.collapse{display:block!important;height:auto!important;padding-bottom:0;overflow:visible!important}.navbar-collapse.in{overflow-y:visible}.navbar-fixed-bottom .navbar-collapse,.navbar-fixed-top .navbar-collapse,.navbar-static-top .navbar-collapse{padding-right:0;padding-left:0}}.navbar-fixed-bottom .navbar-collapse,.navbar-fixed-top .navbar-collapse{max-height:340px}@media (max-device-width:480px) and (orientation:landscape){.navbar-fixed-bottom .navbar-collapse,.navbar-fixed-top .navbar-collapse{max-height:200px}}.container-fluid>.navbar-collapse,.container-fluid>.navbar-header,.container>.navbar-collapse,.container>.navbar-header{margin-right:-15px;margin-left:-15px}@media (min-width:768px){.container-fluid>.navbar-collapse,.container-fluid>.navbar-header,.container>.navbar-collapse,.container>.navbar-header{margin-right:0;margin-left:0}}.navbar-static-top{z-index:1000;border-width:0 0 1px}@media (min-width:768px){.navbar-static-top{border-radius:0}}.navbar-fixed-bottom,.navbar-fixed-top{position:fixed;right:0;left:0;z-index:1030}@media (min-width:768px){.navbar-fixed-bottom,.navbar-fixed-top{border-radius:0}}.navbar-fixed-top{top:0;border-width:0 0 1px}.navbar-fixed-bottom{bottom:0;margin-bottom:0;border-width:1px 0 0}.navbar-brand{float:left;height:50px;padding:15px 15px;font-size:18px;line-height:20px}.navbar-brand:focus,.navbar-brand:hover{text-decoration:none}.navbar-brand>img{display:block}@media (min-width:768px){.navbar>.container .navbar-brand,.navbar>.container-fluid .navbar-brand{margin-left:-15px}}.navbar-toggle{position:relative;float:right;padding:9px 10px;margin-top:8px;margin-right:15px;margin-bottom:8px;background-color:transparent;background-image:none;border:1px solid transparent;border-radius:4px}.navbar-toggle:focus{outline:0}.navbar-toggle .icon-bar{display:block;width:22px;height:2px;border-radius:1px}.navbar-toggle .icon-bar+.icon-bar{margin-top:4px}@media (min-width:768px){.navbar-toggle{display:none}}.navbar-nav{margin:7.5px -15px}.navbar-nav>li>a{padding-top:10px;padding-bottom:10px;line-height:20px}@media (max-width:767px){.navbar-nav .open .dropdown-menu{position:static;float:none;width:auto;margin-top:0;background-color:transparent;border:0;-webkit-box-shadow:none;box-shadow:none}.navbar-nav .open .dropdown-menu .dropdown-header,.navbar-nav .open .dropdown-menu>li>a{padding:5px 15px 5px 25px}.navbar-nav .open .dropdown-menu>li>a{line-height:20px}.navbar-nav .open .dropdown-menu>li>a:focus,.navbar-nav .open .dropdown-menu>li>a:hover{background-image:none}}@media (min-width:768px){.navbar-nav{float:left;margin:0}.navbar-nav>li{float:left}.navbar-nav>li>a{padding-top:15px;padding-bottom:15px}}.navbar-form{padding:10px 15px;margin-top:8px;margin-right:-15px;margin-bottom:8px;margin-left:-15px;border-top:1px solid transparent;border-bottom:1px solid transparent;-webkit-box-shadow:inset 0 1px 0 rgba(255,255,255,.1),0 1px 0 rgba(255,255,255,.1);box-shadow:inset 0 1px 0 rgba(255,255,255,.1),0 1px 0 rgba(255,255,255,.1)}@media (min-width:768px){.navbar-form .form-group{display:inline-block;margin-bottom:0;vertical-align:middle}.navbar-form .form-control{display:inline-block;width:auto;vertical-align:middle}.navbar-form .form-control-static{display:inline-block}.navbar-form .input-group{display:inline-table;vertical-align:middle}.navbar-form .input-group .form-control,.navbar-form .input-group .input-group-addon,.navbar-form .input-group .input-group-btn{width:auto}.navbar-form .input-group>.form-control{width:100%}.navbar-form .control-label{margin-bottom:0;vertical-align:middle}.navbar-form .checkbox,.navbar-form .radio{display:inline-block;margin-top:0;margin-bottom:0;vertical-align:middle}.navbar-form .checkbox label,.navbar-form .radio label{padding-left:0}.navbar-form .checkbox input[type=checkbox],.navbar-form .radio input[type=radio]{position:relative;margin-left:0}.navbar-form .has-feedback .form-control-feedback{top:0}}@media (max-width:767px){.navbar-form .form-group{margin-bottom:5px}.navbar-form .form-group:last-child{margin-bottom:0}}@media (min-width:768px){.navbar-form{width:auto;padding-top:0;padding-bottom:0;margin-right:0;margin-left:0;border:0;-webkit-box-shadow:none;box-shadow:none}}.navbar-nav>li>.dropdown-menu{margin-top:0;border-top-left-radius:0;border-top-right-radius:0}.navbar-fixed-bottom .navbar-nav>li>.dropdown-menu{margin-bottom:0;border-top-left-radius:4px;border-top-right-radius:4px;border-bottom-right-radius:0;border-bottom-left-radius:0}.navbar-btn{margin-top:8px;margin-bottom:8px}.navbar-btn.btn-sm{margin-top:10px;margin-bottom:10px}.navbar-btn.btn-xs{margin-top:14px;margin-bottom:14px}.navbar-text{margin-top:15px;margin-bottom:15px}@media (min-width:768px){.navbar-text{float:left;margin-right:15px;margin-left:15px}}@media (min-width:768px){.navbar-left{float:left!important}.navbar-right{float:right!important;margin-right:-15px}.navbar-right~.navbar-right{margin-right:0}}.navbar-default{background-color:#f8f8f8;border-color:#e7e7e7}.navbar-default .navbar-brand{color:#777}.navbar-default .navbar-brand:focus,.navbar-default .navbar-brand:hover{color:#5e5e5e;background-color:transparent}.navbar-default .navbar-text{color:#777}.navbar-default .navbar-nav>li>a{color:#777}.navbar-default .navbar-nav>li>a:focus,.navbar-default .navbar-nav>li>a:hover{color:#333;background-color:transparent}.navbar-default .navbar-nav>.active>a,.navbar-default .navbar-nav>.active>a:focus,.navbar-default .navbar-nav>.active>a:hover{color:#555;background-color:#e7e7e7}.navbar-default .navbar-nav>.disabled>a,.navbar-default .navbar-nav>.disabled>a:focus,.navbar-default .navbar-nav>.disabled>a:hover{color:#ccc;background-color:transparent}.navbar-default .navbar-toggle{border-color:#ddd}.navbar-default .navbar-toggle:focus,.navbar-default .navbar-toggle:hover{background-color:#ddd}.navbar-default .navbar-toggle .icon-bar{background-color:#888}.navbar-default .navbar-collapse,.navbar-default .navbar-form{border-color:#e7e7e7}.navbar-default .navbar-nav>.open>a,.navbar-default .navbar-nav>.open>a:focus,.navbar-default .navbar-nav>.open>a:hover{color:#555;background-color:#e7e7e7}@media (max-width:767px){.navbar-default .navbar-nav .open .dropdown-menu>li>a{color:#777}.navbar-default .navbar-nav .open .dropdown-menu>li>a:focus,.navbar-default .navbar-nav .open .dropdown-menu>li>a:hover{color:#333;background-color:transparent}.navbar-default .navbar-nav .open .dropdown-menu>.active>a,.navbar-default .navbar-nav .open .dropdown-menu>.active>a:focus,.navbar-default .navbar-nav .open .dropdown-menu>.active>a:hover{color:#555;background-color:#e7e7e7}.navbar-default .navbar-nav .open .dropdown-menu>.disabled>a,.navbar-default .navbar-nav .open .dropdown-menu>.disabled>a:focus,.navbar-default .navbar-nav .open .dropdown-menu>.disabled>a:hover{color:#ccc;background-color:transparent}}.navbar-default .navbar-link{color:#777}.navbar-default .navbar-link:hover{color:#333}.navbar-default .btn-link{color:#777}.navbar-default .btn-link:focus,.navbar-default .btn-link:hover{color:#333}.navbar-default .btn-link[disabled]:focus,.navbar-default .btn-link[disabled]:hover,fieldset[disabled] .navbar-default .btn-link:focus,fieldset[disabled] .navbar-default .btn-link:hover{color:#ccc}.navbar-inverse{background-color:#222;border-color:#080808}.navbar-inverse .navbar-brand{color:#9d9d9d}.navbar-inverse .navbar-brand:focus,.navbar-inverse .navbar-brand:hover{color:#fff;background-color:transparent}.navbar-inverse .navbar-text{color:#9d9d9d}.navbar-inverse .navbar-nav>li>a{color:#9d9d9d}.navbar-inverse .navbar-nav>li>a:focus,.navbar-inverse .navbar-nav>li>a:hover{color:#fff;background-color:transparent}.navbar-inverse .navbar-nav>.active>a,.navbar-inverse .navbar-nav>.active>a:focus,.navbar-inverse .navbar-nav>.active>a:hover{color:#fff;background-color:#080808}.navbar-inverse .navbar-nav>.disabled>a,.navbar-inverse .navbar-nav>.disabled>a:focus,.navbar-inverse .navbar-nav>.disabled>a:hover{color:#444;background-color:transparent}.navbar-inverse .navbar-toggle{border-color:#333}.navbar-inverse .navbar-toggle:focus,.navbar-inverse .navbar-toggle:hover{background-color:#333}.navbar-inverse .navbar-toggle .icon-bar{background-color:#fff}.navbar-inverse .navbar-collapse,.navbar-inverse .navbar-form{border-color:#101010}.navbar-inverse .navbar-nav>.open>a,.navbar-inverse .navbar-nav>.open>a:focus,.navbar-inverse .navbar-nav>.open>a:hover{color:#fff;background-color:#080808}@media (max-width:767px){.navbar-inverse .navbar-nav .open .dropdown-menu>.dropdown-header{border-color:#080808}.navbar-inverse .navbar-nav .open .dropdown-menu .divider{background-color:#080808}.navbar-inverse .navbar-nav .open .dropdown-menu>li>a{color:#9d9d9d}.navbar-inverse .navbar-nav .open .dropdown-menu>li>a:focus,.navbar-inverse .navbar-nav .open .dropdown-menu>li>a:hover{color:#fff;background-color:transparent}.navbar-inverse .navbar-nav .open .dropdown-menu>.active>a,.navbar-inverse .navbar-nav .open .dropdown-menu>.active>a:focus,.navbar-inverse .navbar-nav .open .dropdown-menu>.active>a:hover{color:#fff;background-color:#080808}.navbar-inverse .navbar-nav .open .dropdown-menu>.disabled>a,.navbar-inverse .navbar-nav .open .dropdown-menu>.disabled>a:focus,.navbar-inverse .navbar-nav .open .dropdown-menu>.disabled>a:hover{color:#444;background-color:transparent}}.navbar-inverse .navbar-link{color:#9d9d9d}.navbar-inverse .navbar-link:hover{color:#fff}.navbar-inverse .btn-link{color:#9d9d9d}.navbar-inverse .btn-link:focus,.navbar-inverse .btn-link:hover{color:#fff}.navbar-inverse .btn-link[disabled]:focus,.navbar-inverse .btn-link[disabled]:hover,fieldset[disabled] .navbar-inverse .btn-link:focus,fieldset[disabled] .navbar-inverse .btn-link:hover{color:#444}.breadcrumb{padding:8px 15px;margin-bottom:20px;list-style:none;background-color:#f5f5f5;border-radius:4px}.breadcrumb>li{display:inline-block}.breadcrumb>li+li:before{padding:0 5px;color:#ccc;content:"/\00a0"}.breadcrumb>.active{color:#777}.pagination{display:inline-block;padding-left:0;margin:20px 0;border-radius:4px}.pagination>li{display:inline}.pagination>li>a,.pagination>li>span{position:relative;float:left;padding:6px 12px;margin-left:-1px;line-height:1.42857143;color:#337ab7;text-decoration:none;background-color:#fff;border:1px solid #ddd}.pagination>li:first-child>a,.pagination>li:first-child>span{margin-left:0;border-top-left-radius:4px;border-bottom-left-radius:4px}.pagination>li:last-child>a,.pagination>li:last-child>span{border-top-right-radius:4px;border-bottom-right-radius:4px}.pagination>li>a:focus,.pagination>li>a:hover,.pagination>li>span:focus,.pagination>li>span:hover{z-index:2;color:#23527c;background-color:#eee;border-color:#ddd}.pagination>.active>a,.pagination>.active>a:focus,.pagination>.active>a:hover,.pagination>.active>span,.pagination>.active>span:focus,.pagination>.active>span:hover{z-index:3;color:#fff;cursor:default;background-color:#337ab7;border-color:#337ab7}.pagination>.disabled>a,.pagination>.disabled>a:focus,.pagination>.disabled>a:hover,.pagination>.disabled>span,.pagination>.disabled>span:focus,.pagination>.disabled>span:hover{color:#777;cursor:not-allowed;background-color:#fff;border-color:#ddd}.pagination-lg>li>a,.pagination-lg>li>span{padding:10px 16px;font-size:18px;line-height:1.3333333}.pagination-lg>li:first-child>a,.pagination-lg>li:first-child>span{border-top-left-radius:6px;border-bottom-left-radius:6px}.pagination-lg>li:last-child>a,.pagination-lg>li:last-child>span{border-top-right-radius:6px;border-bottom-right-radius:6px}.pagination-sm>li>a,.pagination-sm>li>span{padding:5px 10px;font-size:12px;line-height:1.5}.pagination-sm>li:first-child>a,.pagination-sm>li:first-child>span{border-top-left-radius:3px;border-bottom-left-radius:3px}.pagination-sm>li:last-child>a,.pagination-sm>li:last-child>span{border-top-right-radius:3px;border-bottom-right-radius:3px}.pager{padding-left:0;margin:20px 0;text-align:center;list-style:none}.pager li{display:inline}.pager li>a,.pager li>span{display:inline-block;padding:5px 14px;background-color:#fff;border:1px solid #ddd;border-radius:15px}.pager li>a:focus,.pager li>a:hover{text-decoration:none;background-color:#eee}.pager .next>a,.pager .next>span{float:right}.pager .previous>a,.pager .previous>span{float:left}.pager .disabled>a,.pager .disabled>a:focus,.pager .disabled>a:hover,.pager .disabled>span{color:#777;cursor:not-allowed;background-color:#fff}.label{display:inline;padding:.2em .6em .3em;font-size:75%;font-weight:700;line-height:1;color:#fff;text-align:center;white-space:nowrap;vertical-align:baseline;border-radius:.25em}a.label:focus,a.label:hover{color:#fff;text-decoration:none;cursor:pointer}.label:empty{display:none}.btn .label{position:relative;top:-1px}.label-default{background-color:#777}.label-default[href]:focus,.label-default[href]:hover{background-color:#5e5e5e}.label-primary{background-color:#337ab7}.label-primary[href]:focus,.label-primary[href]:hover{background-color:#286090}.label-success{background-color:#5cb85c}.label-success[href]:focus,.label-success[href]:hover{background-color:#449d44}.label-info{background-color:#5bc0de}.label-info[href]:focus,.label-info[href]:hover{background-color:#31b0d5}.label-warning{background-color:#f0ad4e}.label-warning[href]:focus,.label-warning[href]:hover{background-color:#ec971f}.label-danger{background-color:#d9534f}.label-danger[href]:focus,.label-danger[href]:hover{background-color:#c9302c}.badge{display:inline-block;min-width:10px;padding:3px 7px;font-size:12px;font-weight:700;line-height:1;color:#fff;text-align:center;white-space:nowrap;vertical-align:middle;background-color:#777;border-radius:10px}.badge:empty{display:none}.btn .badge{position:relative;top:-1px}.btn-group-xs>.btn .badge,.btn-xs .badge{top:0;padding:1px 5px}a.badge:focus,a.badge:hover{color:#fff;text-decoration:none;cursor:pointer}.list-group-item.active>.badge,.nav-pills>.active>a>.badge{color:#337ab7;background-color:#fff}.list-group-item>.badge{float:right}.list-group-item>.badge+.badge{margin-right:5px}.nav-pills>li>a>.badge{margin-left:3px}.jumbotron{padding-top:30px;padding-bottom:30px;margin-bottom:30px;color:inherit;background-color:#eee}.jumbotron .h1,.jumbotron h1{color:inherit}.jumbotron p{margin-bottom:15px;font-size:21px;font-weight:200}.jumbotron>hr{border-top-color:#d5d5d5}.container .jumbotron,.container-fluid .jumbotron{padding-right:15px;padding-left:15px;border-radius:6px}.jumbotron .container{max-width:100%}@media screen and (min-width:768px){.jumbotron{padding-top:48px;padding-bottom:48px}.container .jumbotron,.container-fluid .jumbotron{padding-right:60px;padding-left:60px}.jumbotron .h1,.jumbotron h1{font-size:63px}}.thumbnail{display:block;padding:4px;margin-bottom:20px;line-height:1.42857143;background-color:#fff;border:1px solid #ddd;border-radius:4px;-webkit-transition:border .2s ease-in-out;-o-transition:border .2s ease-in-out;transition:border .2s ease-in-out}.thumbnail a>img,.thumbnail>img{margin-right:auto;margin-left:auto}a.thumbnail.active,a.thumbnail:focus,a.thumbnail:hover{border-color:#337ab7}.thumbnail .caption{padding:9px;color:#333}.alert{padding:15px;margin-bottom:20px;border:1px solid transparent;border-radius:4px}.alert h4{margin-top:0;color:inherit}.alert .alert-link{font-weight:700}.alert>p,.alert>ul{margin-bottom:0}.alert>p+p{margin-top:5px}.alert-dismissable,.alert-dismissible{padding-right:35px}.alert-dismissable .close,.alert-dismissible .close{position:relative;top:-2px;right:-21px;color:inherit}.alert-success{color:#3c763d;background-color:#dff0d8;border-color:#d6e9c6}.alert-success hr{border-top-color:#c9e2b3}.alert-success .alert-link{color:#2b542c}.alert-info{color:#31708f;background-color:#d9edf7;border-color:#bce8f1}.alert-info hr{border-top-color:#a6e1ec}.alert-info .alert-link{color:#245269}.alert-warning{color:#8a6d3b;background-color:#fcf8e3;border-color:#faebcc}.alert-warning hr{border-top-color:#f7e1b5}.alert-warning .alert-link{color:#66512c}.alert-danger{color:#a94442;background-color:#f2dede;border-color:#ebccd1}.alert-danger hr{border-top-color:#e4b9c0}.alert-danger .alert-link{color:#843534}@-webkit-keyframes progress-bar-stripes{from{background-position:40px 0}to{background-position:0 0}}@-o-keyframes progress-bar-stripes{from{background-position:40px 0}to{background-position:0 0}}@keyframes progress-bar-stripes{from{background-position:40px 0}to{background-position:0 0}}.progress{height:20px;margin-bottom:20px;overflow:hidden;background-color:#f5f5f5;border-radius:4px;-webkit-box-shadow:inset 0 1px 2px rgba(0,0,0,.1);box-shadow:inset 0 1px 2px rgba(0,0,0,.1)}.progress-bar{float:left;width:0;height:100%;font-size:12px;line-height:20px;color:#fff;text-align:center;background-color:#337ab7;-webkit-box-shadow:inset 0 -1px 0 rgba(0,0,0,.15);box-shadow:inset 0 -1px 0 rgba(0,0,0,.15);-webkit-transition:width .6s ease;-o-transition:width .6s ease;transition:width .6s ease}.progress-bar-striped,.progress-striped .progress-bar{background-image:-webkit-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:-o-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);-webkit-background-size:40px 40px;background-size:40px 40px}.progress-bar.active,.progress.active .progress-bar{-webkit-animation:progress-bar-stripes 2s linear infinite;-o-animation:progress-bar-stripes 2s linear infinite;animation:progress-bar-stripes 2s linear infinite}.progress-bar-success{background-color:#5cb85c}.progress-striped .progress-bar-success{background-image:-webkit-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:-o-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent)}.progress-bar-info{background-color:#5bc0de}.progress-striped .progress-bar-info{background-image:-webkit-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:-o-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent)}.progress-bar-warning{background-color:#f0ad4e}.progress-striped .progress-bar-warning{background-image:-webkit-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:-o-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent)}.progress-bar-danger{background-color:#d9534f}.progress-striped .progress-bar-danger{background-image:-webkit-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:-o-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent)}.media{margin-top:15px}.media:first-child{margin-top:0}.media,.media-body{overflow:hidden;zoom:1}.media-body{width:10000px}.media-object{display:block}.media-object.img-thumbnail{max-width:none}.media-right,.media>.pull-right{padding-left:10px}.media-left,.media>.pull-left{padding-right:10px}.media-body,.media-left,.media-right{display:table-cell;vertical-align:top}.media-middle{vertical-align:middle}.media-bottom{vertical-align:bottom}.media-heading{margin-top:0;margin-bottom:5px}.media-list{padding-left:0;list-style:none}.list-group{padding-left:0;margin-bottom:20px}.list-group-item{position:relative;display:block;padding:10px 15px;margin-bottom:-1px;background-color:#fff;border:1px solid #ddd}.list-group-item:first-child{border-top-left-radius:4px;border-top-right-radius:4px}.list-group-item:last-child{margin-bottom:0;border-bottom-right-radius:4px;border-bottom-left-radius:4px}a.list-group-item,button.list-group-item{color:#555}a.list-group-item .list-group-item-heading,button.list-group-item .list-group-item-heading{color:#333}a.list-group-item:focus,a.list-group-item:hover,button.list-group-item:focus,button.list-group-item:hover{color:#555;text-decoration:none;background-color:#f5f5f5}button.list-group-item{width:100%;text-align:left}.list-group-item.disabled,.list-group-item.disabled:focus,.list-group-item.disabled:hover{color:#777;cursor:not-allowed;background-color:#eee}.list-group-item.disabled .list-group-item-heading,.list-group-item.disabled:focus .list-group-item-heading,.list-group-item.disabled:hover .list-group-item-heading{color:inherit}.list-group-item.disabled .list-group-item-text,.list-group-item.disabled:focus .list-group-item-text,.list-group-item.disabled:hover .list-group-item-text{color:#777}.list-group-item.active,.list-group-item.active:focus,.list-group-item.active:hover{z-index:2;color:#fff;background-color:#337ab7;border-color:#337ab7}.list-group-item.active .list-group-item-heading,.list-group-item.active .list-group-item-heading>.small,.list-group-item.active .list-group-item-heading>small,.list-group-item.active:focus .list-group-item-heading,.list-group-item.active:focus .list-group-item-heading>.small,.list-group-item.active:focus .list-group-item-heading>small,.list-group-item.active:hover .list-group-item-heading,.list-group-item.active:hover .list-group-item-heading>.small,.list-group-item.active:hover .list-group-item-heading>small{color:inherit}.list-group-item.active .list-group-item-text,.list-group-item.active:focus .list-group-item-text,.list-group-item.active:hover .list-group-item-text{color:#c7ddef}.list-group-item-success{color:#3c763d;background-color:#dff0d8}a.list-group-item-success,button.list-group-item-success{color:#3c763d}a.list-group-item-success .list-group-item-heading,button.list-group-item-success .list-group-item-heading{color:inherit}a.list-group-item-success:focus,a.list-group-item-success:hover,button.list-group-item-success:focus,button.list-group-item-success:hover{color:#3c763d;background-color:#d0e9c6}a.list-group-item-success.active,a.list-group-item-success.active:focus,a.list-group-item-success.active:hover,button.list-group-item-success.active,button.list-group-item-success.active:focus,button.list-group-item-success.active:hover{color:#fff;background-color:#3c763d;border-color:#3c763d}.list-group-item-info{color:#31708f;background-color:#d9edf7}a.list-group-item-info,button.list-group-item-info{color:#31708f}a.list-group-item-info .list-group-item-heading,button.list-group-item-info .list-group-item-heading{color:inherit}a.list-group-item-info:focus,a.list-group-item-info:hover,button.list-group-item-info:focus,button.list-group-item-info:hover{color:#31708f;background-color:#c4e3f3}a.list-group-item-info.active,a.list-group-item-info.active:focus,a.list-group-item-info.active:hover,button.list-group-item-info.active,button.list-group-item-info.active:focus,button.list-group-item-info.active:hover{color:#fff;background-color:#31708f;border-color:#31708f}.list-group-item-warning{color:#8a6d3b;background-color:#fcf8e3}a.list-group-item-warning,button.list-group-item-warning{color:#8a6d3b}a.list-group-item-warning .list-group-item-heading,button.list-group-item-warning .list-group-item-heading{color:inherit}a.list-group-item-warning:focus,a.list-group-item-warning:hover,button.list-group-item-warning:focus,button.list-group-item-warning:hover{color:#8a6d3b;background-color:#faf2cc}a.list-group-item-warning.active,a.list-group-item-warning.active:focus,a.list-group-item-warning.active:hover,button.list-group-item-warning.active,button.list-group-item-warning.active:focus,button.list-group-item-warning.active:hover{color:#fff;background-color:#8a6d3b;border-color:#8a6d3b}.list-group-item-danger{color:#a94442;background-color:#f2dede}a.list-group-item-danger,button.list-group-item-danger{color:#a94442}a.list-group-item-danger .list-group-item-heading,button.list-group-item-danger .list-group-item-heading{color:inherit}a.list-group-item-danger:focus,a.list-group-item-danger:hover,button.list-group-item-danger:focus,button.list-group-item-danger:hover{color:#a94442;background-color:#ebcccc}a.list-group-item-danger.active,a.list-group-item-danger.active:focus,a.list-group-item-danger.active:hover,button.list-group-item-danger.active,button.list-group-item-danger.active:focus,button.list-group-item-danger.active:hover{color:#fff;background-color:#a94442;border-color:#a94442}.list-group-item-heading{margin-top:0;margin-bottom:5px}.list-group-item-text{margin-bottom:0;line-height:1.3}.panel{margin-bottom:20px;background-color:#fff;border:1px solid transparent;border-radius:4px;-webkit-box-shadow:0 1px 1px rgba(0,0,0,.05);box-shadow:0 1px 1px rgba(0,0,0,.05)}.panel-body{padding:15px}.panel-heading{padding:10px 15px;border-bottom:1px solid transparent;border-top-left-radius:3px;border-top-right-radius:3px}.panel-heading>.dropdown .dropdown-toggle{color:inherit}.panel-title{margin-top:0;margin-bottom:0;font-size:16px;color:inherit}.panel-title>.small,.panel-title>.small>a,.panel-title>a,.panel-title>small,.panel-title>small>a{color:inherit}.panel-footer{padding:10px 15px;background-color:#f5f5f5;border-top:1px solid #ddd;border-bottom-right-radius:3px;border-bottom-left-radius:3px}.panel>.list-group,.panel>.panel-collapse>.list-group{margin-bottom:0}.panel>.list-group .list-group-item,.panel>.panel-collapse>.list-group .list-group-item{border-width:1px 0;border-radius:0}.panel>.list-group:first-child .list-group-item:first-child,.panel>.panel-collapse>.list-group:first-child .list-group-item:first-child{border-top:0;border-top-left-radius:3px;border-top-right-radius:3px}.panel>.list-group:last-child .list-group-item:last-child,.panel>.panel-collapse>.list-group:last-child .list-group-item:last-child{border-bottom:0;border-bottom-right-radius:3px;border-bottom-left-radius:3px}.panel>.panel-heading+.panel-collapse>.list-group .list-group-item:first-child{border-top-left-radius:0;border-top-right-radius:0}.panel-heading+.list-group .list-group-item:first-child{border-top-width:0}.list-group+.panel-footer{border-top-width:0}.panel>.panel-collapse>.table,.panel>.table,.panel>.table-responsive>.table{margin-bottom:0}.panel>.panel-collapse>.table caption,.panel>.table caption,.panel>.table-responsive>.table caption{padding-right:15px;padding-left:15px}.panel>.table-responsive:first-child>.table:first-child,.panel>.table:first-child{border-top-left-radius:3px;border-top-right-radius:3px}.panel>.table-responsive:first-child>.table:first-child>tbody:first-child>tr:first-child,.panel>.table-responsive:first-child>.table:first-child>thead:first-child>tr:first-child,.panel>.table:first-child>tbody:first-child>tr:first-child,.panel>.table:first-child>thead:first-child>tr:first-child{border-top-left-radius:3px;border-top-right-radius:3px}.panel>.table-responsive:first-child>.table:first-child>tbody:first-child>tr:first-child td:first-child,.panel>.table-responsive:first-child>.table:first-child>tbody:first-child>tr:first-child th:first-child,.panel>.table-responsive:first-child>.table:first-child>thead:first-child>tr:first-child td:first-child,.panel>.table-responsive:first-child>.table:first-child>thead:first-child>tr:first-child th:first-child,.panel>.table:first-child>tbody:first-child>tr:first-child td:first-child,.panel>.table:first-child>tbody:first-child>tr:first-child th:first-child,.panel>.table:first-child>thead:first-child>tr:first-child td:first-child,.panel>.table:first-child>thead:first-child>tr:first-child th:first-child{border-top-left-radius:3px}.panel>.table-responsive:first-child>.table:first-child>tbody:first-child>tr:first-child td:last-child,.panel>.table-responsive:first-child>.table:first-child>tbody:first-child>tr:first-child th:last-child,.panel>.table-responsive:first-child>.table:first-child>thead:first-child>tr:first-child td:last-child,.panel>.table-responsive:first-child>.table:first-child>thead:first-child>tr:first-child th:last-child,.panel>.table:first-child>tbody:first-child>tr:first-child td:last-child,.panel>.table:first-child>tbody:first-child>tr:first-child th:last-child,.panel>.table:first-child>thead:first-child>tr:first-child td:last-child,.panel>.table:first-child>thead:first-child>tr:first-child th:last-child{border-top-right-radius:3px}.panel>.table-responsive:last-child>.table:last-child,.panel>.table:last-child{border-bottom-right-radius:3px;border-bottom-left-radius:3px}.panel>.table-responsive:last-child>.table:last-child>tbody:last-child>tr:last-child,.panel>.table-responsive:last-child>.table:last-child>tfoot:last-child>tr:last-child,.panel>.table:last-child>tbody:last-child>tr:last-child,.panel>.table:last-child>tfoot:last-child>tr:last-child{border-bottom-right-radius:3px;border-bottom-left-radius:3px}.panel>.table-responsive:last-child>.table:last-child>tbody:last-child>tr:last-child td:first-child,.panel>.table-responsive:last-child>.table:last-child>tbody:last-child>tr:last-child th:first-child,.panel>.table-responsive:last-child>.table:last-child>tfoot:last-child>tr:last-child td:first-child,.panel>.table-responsive:last-child>.table:last-child>tfoot:last-child>tr:last-child th:first-child,.panel>.table:last-child>tbody:last-child>tr:last-child td:first-child,.panel>.table:last-child>tbody:last-child>tr:last-child th:first-child,.panel>.table:last-child>tfoot:last-child>tr:last-child td:first-child,.panel>.table:last-child>tfoot:last-child>tr:last-child th:first-child{border-bottom-left-radius:3px}.panel>.table-responsive:last-child>.table:last-child>tbody:last-child>tr:last-child td:last-child,.panel>.table-responsive:last-child>.table:last-child>tbody:last-child>tr:last-child th:last-child,.panel>.table-responsive:last-child>.table:last-child>tfoot:last-child>tr:last-child td:last-child,.panel>.table-responsive:last-child>.table:last-child>tfoot:last-child>tr:last-child th:last-child,.panel>.table:last-child>tbody:last-child>tr:last-child td:last-child,.panel>.table:last-child>tbody:last-child>tr:last-child th:last-child,.panel>.table:last-child>tfoot:last-child>tr:last-child td:last-child,.panel>.table:last-child>tfoot:last-child>tr:last-child th:last-child{border-bottom-right-radius:3px}.panel>.panel-body+.table,.panel>.panel-body+.table-responsive,.panel>.table+.panel-body,.panel>.table-responsive+.panel-body{border-top:1px solid #ddd}.panel>.table>tbody:first-child>tr:first-child td,.panel>.table>tbody:first-child>tr:first-child th{border-top:0}.panel>.table-bordered,.panel>.table-responsive>.table-bordered{border:0}.panel>.table-bordered>tbody>tr>td:first-child,.panel>.table-bordered>tbody>tr>th:first-child,.panel>.table-bordered>tfoot>tr>td:first-child,.panel>.table-bordered>tfoot>tr>th:first-child,.panel>.table-bordered>thead>tr>td:first-child,.panel>.table-bordered>thead>tr>th:first-child,.panel>.table-responsive>.table-bordered>tbody>tr>td:first-child,.panel>.table-responsive>.table-bordered>tbody>tr>th:first-child,.panel>.table-responsive>.table-bordered>tfoot>tr>td:first-child,.panel>.table-responsive>.table-bordered>tfoot>tr>th:first-child,.panel>.table-responsive>.table-bordered>thead>tr>td:first-child,.panel>.table-responsive>.table-bordered>thead>tr>th:first-child{border-left:0}.panel>.table-bordered>tbody>tr>td:last-child,.panel>.table-bordered>tbody>tr>th:last-child,.panel>.table-bordered>tfoot>tr>td:last-child,.panel>.table-bordered>tfoot>tr>th:last-child,.panel>.table-bordered>thead>tr>td:last-child,.panel>.table-bordered>thead>tr>th:last-child,.panel>.table-responsive>.table-bordered>tbody>tr>td:last-child,.panel>.table-responsive>.table-bordered>tbody>tr>th:last-child,.panel>.table-responsive>.table-bordered>tfoot>tr>td:last-child,.panel>.table-responsive>.table-bordered>tfoot>tr>th:last-child,.panel>.table-responsive>.table-bordered>thead>tr>td:last-child,.panel>.table-responsive>.table-bordered>thead>tr>th:last-child{border-right:0}.panel>.table-bordered>tbody>tr:first-child>td,.panel>.table-bordered>tbody>tr:first-child>th,.panel>.table-bordered>thead>tr:first-child>td,.panel>.table-bordered>thead>tr:first-child>th,.panel>.table-responsive>.table-bordered>tbody>tr:first-child>td,.panel>.table-responsive>.table-bordered>tbody>tr:first-child>th,.panel>.table-responsive>.table-bordered>thead>tr:first-child>td,.panel>.table-responsive>.table-bordered>thead>tr:first-child>th{border-bottom:0}.panel>.table-bordered>tbody>tr:last-child>td,.panel>.table-bordered>tbody>tr:last-child>th,.panel>.table-bordered>tfoot>tr:last-child>td,.panel>.table-bordered>tfoot>tr:last-child>th,.panel>.table-responsive>.table-bordered>tbody>tr:last-child>td,.panel>.table-responsive>.table-bordered>tbody>tr:last-child>th,.panel>.table-responsive>.table-bordered>tfoot>tr:last-child>td,.panel>.table-responsive>.table-bordered>tfoot>tr:last-child>th{border-bottom:0}.panel>.table-responsive{margin-bottom:0;border:0}.panel-group{margin-bottom:20px}.panel-group .panel{margin-bottom:0;border-radius:4px}.panel-group .panel+.panel{margin-top:5px}.panel-group .panel-heading{border-bottom:0}.panel-group .panel-heading+.panel-collapse>.list-group,.panel-group .panel-heading+.panel-collapse>.panel-body{border-top:1px solid #ddd}.panel-group .panel-footer{border-top:0}.panel-group .panel-footer+.panel-collapse .panel-body{border-bottom:1px solid #ddd}.panel-default{border-color:#ddd}.panel-default>.panel-heading{color:#333;background-color:#f5f5f5;border-color:#ddd}.panel-default>.panel-heading+.panel-collapse>.panel-body{border-top-color:#ddd}.panel-default>.panel-heading .badge{color:#f5f5f5;background-color:#333}.panel-default>.panel-footer+.panel-collapse>.panel-body{border-bottom-color:#ddd}.panel-primary{border-color:#337ab7}.panel-primary>.panel-heading{color:#fff;background-color:#337ab7;border-color:#337ab7}.panel-primary>.panel-heading+.panel-collapse>.panel-body{border-top-color:#337ab7}.panel-primary>.panel-heading .badge{color:#337ab7;background-color:#fff}.panel-primary>.panel-footer+.panel-collapse>.panel-body{border-bottom-color:#337ab7}.panel-success{border-color:#d6e9c6}.panel-success>.panel-heading{color:#3c763d;background-color:#dff0d8;border-color:#d6e9c6}.panel-success>.panel-heading+.panel-collapse>.panel-body{border-top-color:#d6e9c6}.panel-success>.panel-heading .badge{color:#dff0d8;background-color:#3c763d}.panel-success>.panel-footer+.panel-collapse>.panel-body{border-bottom-color:#d6e9c6}.panel-info{border-color:#bce8f1}.panel-info>.panel-heading{color:#31708f;background-color:#d9edf7;border-color:#bce8f1}.panel-info>.panel-heading+.panel-collapse>.panel-body{border-top-color:#bce8f1}.panel-info>.panel-heading .badge{color:#d9edf7;background-color:#31708f}.panel-info>.panel-footer+.panel-collapse>.panel-body{border-bottom-color:#bce8f1}.panel-warning{border-color:#faebcc}.panel-warning>.panel-heading{color:#8a6d3b;background-color:#fcf8e3;border-color:#faebcc}.panel-warning>.panel-heading+.panel-collapse>.panel-body{border-top-color:#faebcc}.panel-warning>.panel-heading .badge{color:#fcf8e3;background-color:#8a6d3b}.panel-warning>.panel-footer+.panel-collapse>.panel-body{border-bottom-color:#faebcc}.panel-danger{border-color:#ebccd1}.panel-danger>.panel-heading{color:#a94442;background-color:#f2dede;border-color:#ebccd1}.panel-danger>.panel-heading+.panel-collapse>.panel-body{border-top-color:#ebccd1}.panel-danger>.panel-heading .badge{color:#f2dede;background-color:#a94442}.panel-danger>.panel-footer+.panel-collapse>.panel-body{border-bottom-color:#ebccd1}.embed-responsive{position:relative;display:block;height:0;padding:0;overflow:hidden}.embed-responsive .embed-responsive-item,.embed-responsive embed,.embed-responsive iframe,.embed-responsive object,.embed-responsive video{position:absolute;top:0;bottom:0;left:0;width:100%;height:100%;border:0}.embed-responsive-16by9{padding-bottom:56.25%}.embed-responsive-4by3{padding-bottom:75%}.well{min-height:20px;padding:19px;margin-bottom:20px;background-color:#f5f5f5;border:1px solid #e3e3e3;border-radius:4px;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.05);box-shadow:inset 0 1px 1px rgba(0,0,0,.05)}.well blockquote{border-color:#ddd;border-color:rgba(0,0,0,.15)}.well-lg{padding:24px;border-radius:6px}.well-sm{padding:9px;border-radius:3px}.close{float:right;font-size:21px;font-weight:700;line-height:1;color:#000;text-shadow:0 1px 0 #fff;filter:alpha(opacity=20);opacity:.2}.close:focus,.close:hover{color:#000;text-decoration:none;cursor:pointer;filter:alpha(opacity=50);opacity:.5}button.close{-webkit-appearance:none;padding:0;cursor:pointer;background:0 0;border:0}.modal-open{overflow:hidden}.modal{position:fixed;top:0;right:0;bottom:0;left:0;z-index:1050;display:none;overflow:hidden;-webkit-overflow-scrolling:touch;outline:0}.modal.fade .modal-dialog{-webkit-transition:-webkit-transform .3s ease-out;-o-transition:-o-transform .3s ease-out;transition:transform .3s ease-out;-webkit-transform:translate(0,-25%);-ms-transform:translate(0,-25%);-o-transform:translate(0,-25%);transform:translate(0,-25%)}.modal.in .modal-dialog{-webkit-transform:translate(0,0);-ms-transform:translate(0,0);-o-transform:translate(0,0);transform:translate(0,0)}.modal-open .modal{overflow-x:hidden;overflow-y:auto}.modal-dialog{position:relative;width:auto;margin:10px}.modal-content{position:relative;background-color:#fff;-webkit-background-clip:padding-box;background-clip:padding-box;border:1px solid #999;border:1px solid rgba(0,0,0,.2);border-radius:6px;outline:0;-webkit-box-shadow:0 3px 9px rgba(0,0,0,.5);box-shadow:0 3px 9px rgba(0,0,0,.5)}.modal-backdrop{position:fixed;top:0;right:0;bottom:0;left:0;z-index:1040;background-color:#000}.modal-backdrop.fade{filter:alpha(opacity=0);opacity:0}.modal-backdrop.in{filter:alpha(opacity=50);opacity:.5}.modal-header{padding:15px;border-bottom:1px solid #e5e5e5}.modal-header .close{margin-top:-2px}.modal-title{margin:0;line-height:1.42857143}.modal-body{position:relative;padding:15px}.modal-footer{padding:15px;text-align:right;border-top:1px solid #e5e5e5}.modal-footer .btn+.btn{margin-bottom:0;margin-left:5px}.modal-footer .btn-group .btn+.btn{margin-left:-1px}.modal-footer .btn-block+.btn-block{margin-left:0}.modal-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}@media (min-width:768px){.modal-dialog{width:600px;margin:30px auto}.modal-content{-webkit-box-shadow:0 5px 15px rgba(0,0,0,.5);box-shadow:0 5px 15px rgba(0,0,0,.5)}.modal-sm{width:300px}}@media (min-width:992px){.modal-lg{width:900px}}.tooltip{position:absolute;z-index:1070;display:block;font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;font-size:12px;font-style:normal;font-weight:400;line-height:1.42857143;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;word-wrap:normal;white-space:normal;filter:alpha(opacity=0);opacity:0;line-break:auto}.tooltip.in{filter:alpha(opacity=90);opacity:.9}.tooltip.top{padding:5px 0;margin-top:-3px}.tooltip.right{padding:0 5px;margin-left:3px}.tooltip.bottom{padding:5px 0;margin-top:3px}.tooltip.left{padding:0 5px;margin-left:-3px}.tooltip-inner{max-width:200px;padding:3px 8px;color:#fff;text-align:center;background-color:#000;border-radius:4px}.tooltip-arrow{position:absolute;width:0;height:0;border-color:transparent;border-style:solid}.tooltip.top .tooltip-arrow{bottom:0;left:50%;margin-left:-5px;border-width:5px 5px 0;border-top-color:#000}.tooltip.top-left .tooltip-arrow{right:5px;bottom:0;margin-bottom:-5px;border-width:5px 5px 0;border-top-color:#000}.tooltip.top-right .tooltip-arrow{bottom:0;left:5px;margin-bottom:-5px;border-width:5px 5px 0;border-top-color:#000}.tooltip.right .tooltip-arrow{top:50%;left:0;margin-top:-5px;border-width:5px 5px 5px 0;border-right-color:#000}.tooltip.left .tooltip-arrow{top:50%;right:0;margin-top:-5px;border-width:5px 0 5px 5px;border-left-color:#000}.tooltip.bottom .tooltip-arrow{top:0;left:50%;margin-left:-5px;border-width:0 5px 5px;border-bottom-color:#000}.tooltip.bottom-left .tooltip-arrow{top:0;right:5px;margin-top:-5px;border-width:0 5px 5px;border-bottom-color:#000}.tooltip.bottom-right .tooltip-arrow{top:0;left:5px;margin-top:-5px;border-width:0 5px 5px;border-bottom-color:#000}.popover{position:absolute;top:0;left:0;z-index:1060;display:none;max-width:276px;padding:1px;font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;font-size:14px;font-style:normal;font-weight:400;line-height:1.42857143;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;word-wrap:normal;white-space:normal;background-color:#fff;-webkit-background-clip:padding-box;background-clip:padding-box;border:1px solid #ccc;border:1px solid rgba(0,0,0,.2);border-radius:6px;-webkit-box-shadow:0 5px 10px rgba(0,0,0,.2);box-shadow:0 5px 10px rgba(0,0,0,.2);line-break:auto}.popover.top{margin-top:-10px}.popover.right{margin-left:10px}.popover.bottom{margin-top:10px}.popover.left{margin-left:-10px}.popover-title{padding:8px 14px;margin:0;font-size:14px;background-color:#f7f7f7;border-bottom:1px solid #ebebeb;border-radius:5px 5px 0 0}.popover-content{padding:9px 14px}.popover>.arrow,.popover>.arrow:after{position:absolute;display:block;width:0;height:0;border-color:transparent;border-style:solid}.popover>.arrow{border-width:11px}.popover>.arrow:after{content:"";border-width:10px}.popover.top>.arrow{bottom:-11px;left:50%;margin-left:-11px;border-top-color:#999;border-top-color:rgba(0,0,0,.25);border-bottom-width:0}.popover.top>.arrow:after{bottom:1px;margin-left:-10px;content:" ";border-top-color:#fff;border-bottom-width:0}.popover.right>.arrow{top:50%;left:-11px;margin-top:-11px;border-right-color:#999;border-right-color:rgba(0,0,0,.25);border-left-width:0}.popover.right>.arrow:after{bottom:-10px;left:1px;content:" ";border-right-color:#fff;border-left-width:0}.popover.bottom>.arrow{top:-11px;left:50%;margin-left:-11px;border-top-width:0;border-bottom-color:#999;border-bottom-color:rgba(0,0,0,.25)}.popover.bottom>.arrow:after{top:1px;margin-left:-10px;content:" ";border-top-width:0;border-bottom-color:#fff}.popover.left>.arrow{top:50%;right:-11px;margin-top:-11px;border-right-width:0;border-left-color:#999;border-left-color:rgba(0,0,0,.25)}.popover.left>.arrow:after{right:1px;bottom:-10px;content:" ";border-right-width:0;border-left-color:#fff}.carousel{position:relative}.carousel-inner{position:relative;width:100%;overflow:hidden}.carousel-inner>.item{position:relative;display:none;-webkit-transition:.6s ease-in-out left;-o-transition:.6s ease-in-out left;transition:.6s ease-in-out left}.carousel-inner>.item>a>img,.carousel-inner>.item>img{line-height:1}@media all and (transform-3d),(-webkit-transform-3d){.carousel-inner>.item{-webkit-transition:-webkit-transform .6s ease-in-out;-o-transition:-o-transform .6s ease-in-out;transition:transform .6s ease-in-out;-webkit-backface-visibility:hidden;backface-visibility:hidden;-webkit-perspective:1000px;perspective:1000px}.carousel-inner>.item.active.right,.carousel-inner>.item.next{left:0;-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0)}.carousel-inner>.item.active.left,.carousel-inner>.item.prev{left:0;-webkit-transform:translate3d(-100%,0,0);transform:translate3d(-100%,0,0)}.carousel-inner>.item.active,.carousel-inner>.item.next.left,.carousel-inner>.item.prev.right{left:0;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}}.carousel-inner>.active,.carousel-inner>.next,.carousel-inner>.prev{display:block}.carousel-inner>.active{left:0}.carousel-inner>.next,.carousel-inner>.prev{position:absolute;top:0;width:100%}.carousel-inner>.next{left:100%}.carousel-inner>.prev{left:-100%}.carousel-inner>.next.left,.carousel-inner>.prev.right{left:0}.carousel-inner>.active.left{left:-100%}.carousel-inner>.active.right{left:100%}.carousel-control{position:absolute;top:0;bottom:0;left:0;width:15%;font-size:20px;color:#fff;text-align:center;text-shadow:0 1px 2px rgba(0,0,0,.6);background-color:rgba(0,0,0,0);filter:alpha(opacity=50);opacity:.5}.carousel-control.left{background-image:-webkit-linear-gradient(left,rgba(0,0,0,.5) 0,rgba(0,0,0,.0001) 100%);background-image:-o-linear-gradient(left,rgba(0,0,0,.5) 0,rgba(0,0,0,.0001) 100%);background-image:-webkit-gradient(linear,left top,right top,from(rgba(0,0,0,.5)),to(rgba(0,0,0,.0001)));background-image:linear-gradient(to right,rgba(0,0,0,.5) 0,rgba(0,0,0,.0001) 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#80000000', endColorstr='#00000000', GradientType=1);background-repeat:repeat-x}.carousel-control.right{right:0;left:auto;background-image:-webkit-linear-gradient(left,rgba(0,0,0,.0001) 0,rgba(0,0,0,.5) 100%);background-image:-o-linear-gradient(left,rgba(0,0,0,.0001) 0,rgba(0,0,0,.5) 100%);background-image:-webkit-gradient(linear,left top,right top,from(rgba(0,0,0,.0001)),to(rgba(0,0,0,.5)));background-image:linear-gradient(to right,rgba(0,0,0,.0001) 0,rgba(0,0,0,.5) 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#00000000', endColorstr='#80000000', GradientType=1);background-repeat:repeat-x}.carousel-control:focus,.carousel-control:hover{color:#fff;text-decoration:none;filter:alpha(opacity=90);outline:0;opacity:.9}.carousel-control .glyphicon-chevron-left,.carousel-control .glyphicon-chevron-right,.carousel-control .icon-next,.carousel-control .icon-prev{position:absolute;top:50%;z-index:5;display:inline-block;margin-top:-10px}.carousel-control .glyphicon-chevron-left,.carousel-control .icon-prev{left:50%;margin-left:-10px}.carousel-control .glyphicon-chevron-right,.carousel-control .icon-next{right:50%;margin-right:-10px}.carousel-control .icon-next,.carousel-control .icon-prev{width:20px;height:20px;font-family:serif;line-height:1}.carousel-control .icon-prev:before{content:'\2039'}.carousel-control .icon-next:before{content:'\203a'}.carousel-indicators{position:absolute;bottom:10px;left:50%;z-index:15;width:60%;padding-left:0;margin-left:-30%;text-align:center;list-style:none}.carousel-indicators li{display:inline-block;width:10px;height:10px;margin:1px;text-indent:-999px;cursor:pointer;background-color:#000\9;background-color:rgba(0,0,0,0);border:1px solid #fff;border-radius:10px}.carousel-indicators .active{width:12px;height:12px;margin:0;background-color:#fff}.carousel-caption{position:absolute;right:15%;bottom:20px;left:15%;z-index:10;padding-top:20px;padding-bottom:20px;color:#fff;text-align:center;text-shadow:0 1px 2px rgba(0,0,0,.6)}.carousel-caption .btn{text-shadow:none}@media screen and (min-width:768px){.carousel-control .glyphicon-chevron-left,.carousel-control .glyphicon-chevron-right,.carousel-control .icon-next,.carousel-control .icon-prev{width:30px;height:30px;margin-top:-10px;font-size:30px}.carousel-control .glyphicon-chevron-left,.carousel-control .icon-prev{margin-left:-10px}.carousel-control .glyphicon-chevron-right,.carousel-control .icon-next{margin-right:-10px}.carousel-caption{right:20%;left:20%;padding-bottom:30px}.carousel-indicators{bottom:20px}}.btn-group-vertical>.btn-group:after,.btn-group-vertical>.btn-group:before,.btn-toolbar:after,.btn-toolbar:before,.clearfix:after,.clearfix:before,.container-fluid:after,.container-fluid:before,.container:after,.container:before,.dl-horizontal dd:after,.dl-horizontal dd:before,.form-horizontal .form-group:after,.form-horizontal .form-group:before,.modal-footer:after,.modal-footer:before,.modal-header:after,.modal-header:before,.nav:after,.nav:before,.navbar-collapse:after,.navbar-collapse:before,.navbar-header:after,.navbar-header:before,.navbar:after,.navbar:before,.pager:after,.pager:before,.panel-body:after,.panel-body:before,.row:after,.row:before{display:table;content:" "}.btn-group-vertical>.btn-group:after,.btn-toolbar:after,.clearfix:after,.container-fluid:after,.container:after,.dl-horizontal dd:after,.form-horizontal .form-group:after,.modal-footer:after,.modal-header:after,.nav:after,.navbar-collapse:after,.navbar-header:after,.navbar:after,.pager:after,.panel-body:after,.row:after{clear:both}.center-block{display:block;margin-right:auto;margin-left:auto}.pull-right{float:right!important}.pull-left{float:left!important}.hide{display:none!important}.show{display:block!important}.invisible{visibility:hidden}.text-hide{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;border:0}.hidden{display:none!important}.affix{position:fixed}@-ms-viewport{width:device-width}.visible-lg,.visible-md,.visible-sm,.visible-xs{display:none!important}.visible-lg-block,.visible-lg-inline,.visible-lg-inline-block,.visible-md-block,.visible-md-inline,.visible-md-inline-block,.visible-sm-block,.visible-sm-inline,.visible-sm-inline-block,.visible-xs-block,.visible-xs-inline,.visible-xs-inline-block{display:none!important}@media (max-width:767px){.visible-xs{display:block!important}table.visible-xs{display:table!important}tr.visible-xs{display:table-row!important}td.visible-xs,th.visible-xs{display:table-cell!important}}@media (max-width:767px){.visible-xs-block{display:block!important}}@media (max-width:767px){.visible-xs-inline{display:inline!important}}@media (max-width:767px){.visible-xs-inline-block{display:inline-block!important}}@media (min-width:768px) and (max-width:991px){.visible-sm{display:block!important}table.visible-sm{display:table!important}tr.visible-sm{display:table-row!important}td.visible-sm,th.visible-sm{display:table-cell!important}}@media (min-width:768px) and (max-width:991px){.visible-sm-block{display:block!important}}@media (min-width:768px) and (max-width:991px){.visible-sm-inline{display:inline!important}}@media (min-width:768px) and (max-width:991px){.visible-sm-inline-block{display:inline-block!important}}@media (min-width:992px) and (max-width:1199px){.visible-md{display:block!important}table.visible-md{display:table!important}tr.visible-md{display:table-row!important}td.visible-md,th.visible-md{display:table-cell!important}}@media (min-width:992px) and (max-width:1199px){.visible-md-block{display:block!important}}@media (min-width:992px) and (max-width:1199px){.visible-md-inline{display:inline!important}}@media (min-width:992px) and (max-width:1199px){.visible-md-inline-block{display:inline-block!important}}@media (min-width:1200px){.visible-lg{display:block!important}table.visible-lg{display:table!important}tr.visible-lg{display:table-row!important}td.visible-lg,th.visible-lg{display:table-cell!important}}@media (min-width:1200px){.visible-lg-block{display:block!important}}@media (min-width:1200px){.visible-lg-inline{display:inline!important}}@media (min-width:1200px){.visible-lg-inline-block{display:inline-block!important}}@media (max-width:767px){.hidden-xs{display:none!important}}@media (min-width:768px) and (max-width:991px){.hidden-sm{display:none!important}}@media (min-width:992px) and (max-width:1199px){.hidden-md{display:none!important}}@media (min-width:1200px){.hidden-lg{display:none!important}}.visible-print{display:none!important}@media print{.visible-print{display:block!important}table.visible-print{display:table!important}tr.visible-print{display:table-row!important}td.visible-print,th.visible-print{display:table-cell!important}}.visible-print-block{display:none!important}@media print{.visible-print-block{display:block!important}}.visible-print-inline{display:none!important}@media print{.visible-print-inline{display:inline!important}}.visible-print-inline-block{display:none!important}@media print{.visible-print-inline-block{display:inline-block!important}}@media print{.hidden-print{display:none!important}}
/*# sourceMappingURL=bootstrap.min.css.map */
'''
'''--- src/css/font-awesome.min.css ---
/*!
 *  Font Awesome 4.6.3 by @davegandy - http://fontawesome.io - @fontawesome
 *  License - http://fontawesome.io/license (Font: SIL OFL 1.1, CSS: MIT License)
 */@font-face{font-family:'FontAwesome';src:url('fonts/fontawesome-webfont.eot?v=4.6.3');src:url('fonts/fontawesome-webfont.eot?#iefix&v=4.6.3') format('embedded-opentype'),url('fonts/fontawesome-webfont.woff2?v=4.6.3') format('woff2'),url('fonts/fontawesome-webfont.woff?v=4.6.3') format('woff'),url('fonts/fontawesome-webfont.ttf?v=4.6.3') format('truetype'),url('fonts/fontawesome-webfont.svg?v=4.6.3#fontawesomeregular') format('svg');font-weight:normal;font-style:normal}.fa{display:inline-block;font:normal normal normal 14px/1 FontAwesome;font-size:inherit;text-rendering:auto;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.fa-lg{font-size:1.33333333em;line-height:.75em;vertical-align:-15%}.fa-2x{font-size:2em}.fa-3x{font-size:3em}.fa-4x{font-size:4em}.fa-5x{font-size:5em}.fa-fw{width:1.28571429em;text-align:center}.fa-ul{padding-left:0;margin-left:2.14285714em;list-style-type:none}.fa-ul>li{position:relative}.fa-li{position:absolute;left:-2.14285714em;width:2.14285714em;top:.14285714em;text-align:center}.fa-li.fa-lg{left:-1.85714286em}.fa-border{padding:.2em .25em .15em;border:solid .08em #eee;border-radius:.1em}.fa-pull-left{float:left}.fa-pull-right{float:right}.fa.fa-pull-left{margin-right:.3em}.fa.fa-pull-right{margin-left:.3em}.pull-right{float:right}.pull-left{float:left}.fa.pull-left{margin-right:.3em}.fa.pull-right{margin-left:.3em}.fa-spin{-webkit-animation:fa-spin 2s infinite linear;animation:fa-spin 2s infinite linear}.fa-pulse{-webkit-animation:fa-spin 1s infinite steps(8);animation:fa-spin 1s infinite steps(8)}@-webkit-keyframes fa-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}@keyframes fa-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}.fa-rotate-90{-ms-filter:"progid:DXImageTransform.Microsoft.BasicImage(rotation=1)";-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg)}.fa-rotate-180{-ms-filter:"progid:DXImageTransform.Microsoft.BasicImage(rotation=2)";-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg)}.fa-rotate-270{-ms-filter:"progid:DXImageTransform.Microsoft.BasicImage(rotation=3)";-webkit-transform:rotate(270deg);-ms-transform:rotate(270deg);transform:rotate(270deg)}.fa-flip-horizontal{-ms-filter:"progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)";-webkit-transform:scale(-1, 1);-ms-transform:scale(-1, 1);transform:scale(-1, 1)}.fa-flip-vertical{-ms-filter:"progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)";-webkit-transform:scale(1, -1);-ms-transform:scale(1, -1);transform:scale(1, -1)}:root .fa-rotate-90,:root .fa-rotate-180,:root .fa-rotate-270,:root .fa-flip-horizontal,:root .fa-flip-vertical{filter:none}.fa-stack{position:relative;display:inline-block;width:2em;height:2em;line-height:2em;vertical-align:middle}.fa-stack-1x,.fa-stack-2x{position:absolute;left:0;width:100%;text-align:center}.fa-stack-1x{line-height:inherit}.fa-stack-2x{font-size:2em}.fa-inverse{color:#fff}.fa-glass:before{content:"\f000"}.fa-music:before{content:"\f001"}.fa-search:before{content:"\f002"}.fa-envelope-o:before{content:"\f003"}.fa-heart:before{content:"\f004"}.fa-star:before{content:"\f005"}.fa-star-o:before{content:"\f006"}.fa-user:before{content:"\f007"}.fa-film:before{content:"\f008"}.fa-th-large:before{content:"\f009"}.fa-th:before{content:"\f00a"}.fa-th-list:before{content:"\f00b"}.fa-check:before{content:"\f00c"}.fa-remove:before,.fa-close:before,.fa-times:before{content:"\f00d"}.fa-search-plus:before{content:"\f00e"}.fa-search-minus:before{content:"\f010"}.fa-power-off:before{content:"\f011"}.fa-signal:before{content:"\f012"}.fa-gear:before,.fa-cog:before{content:"\f013"}.fa-trash-o:before{content:"\f014"}.fa-home:before{content:"\f015"}.fa-file-o:before{content:"\f016"}.fa-clock-o:before{content:"\f017"}.fa-road:before{content:"\f018"}.fa-download:before{content:"\f019"}.fa-arrow-circle-o-down:before{content:"\f01a"}.fa-arrow-circle-o-up:before{content:"\f01b"}.fa-inbox:before{content:"\f01c"}.fa-play-circle-o:before{content:"\f01d"}.fa-rotate-right:before,.fa-repeat:before{content:"\f01e"}.fa-refresh:before{content:"\f021"}.fa-list-alt:before{content:"\f022"}.fa-lock:before{content:"\f023"}.fa-flag:before{content:"\f024"}.fa-headphones:before{content:"\f025"}.fa-volume-off:before{content:"\f026"}.fa-volume-down:before{content:"\f027"}.fa-volume-up:before{content:"\f028"}.fa-qrcode:before{content:"\f029"}.fa-barcode:before{content:"\f02a"}.fa-tag:before{content:"\f02b"}.fa-tags:before{content:"\f02c"}.fa-book:before{content:"\f02d"}.fa-bookmark:before{content:"\f02e"}.fa-print:before{content:"\f02f"}.fa-camera:before{content:"\f030"}.fa-font:before{content:"\f031"}.fa-bold:before{content:"\f032"}.fa-italic:before{content:"\f033"}.fa-text-height:before{content:"\f034"}.fa-text-width:before{content:"\f035"}.fa-align-left:before{content:"\f036"}.fa-align-center:before{content:"\f037"}.fa-align-right:before{content:"\f038"}.fa-align-justify:before{content:"\f039"}.fa-list:before{content:"\f03a"}.fa-dedent:before,.fa-outdent:before{content:"\f03b"}.fa-indent:before{content:"\f03c"}.fa-video-camera:before{content:"\f03d"}.fa-photo:before,.fa-image:before,.fa-picture-o:before{content:"\f03e"}.fa-pencil:before{content:"\f040"}.fa-map-marker:before{content:"\f041"}.fa-adjust:before{content:"\f042"}.fa-tint:before{content:"\f043"}.fa-edit:before,.fa-pencil-square-o:before{content:"\f044"}.fa-share-square-o:before{content:"\f045"}.fa-check-square-o:before{content:"\f046"}.fa-arrows:before{content:"\f047"}.fa-step-backward:before{content:"\f048"}.fa-fast-backward:before{content:"\f049"}.fa-backward:before{content:"\f04a"}.fa-play:before{content:"\f04b"}.fa-pause:before{content:"\f04c"}.fa-stop:before{content:"\f04d"}.fa-forward:before{content:"\f04e"}.fa-fast-forward:before{content:"\f050"}.fa-step-forward:before{content:"\f051"}.fa-eject:before{content:"\f052"}.fa-chevron-left:before{content:"\f053"}.fa-chevron-right:before{content:"\f054"}.fa-plus-circle:before{content:"\f055"}.fa-minus-circle:before{content:"\f056"}.fa-times-circle:before{content:"\f057"}.fa-check-circle:before{content:"\f058"}.fa-question-circle:before{content:"\f059"}.fa-info-circle:before{content:"\f05a"}.fa-crosshairs:before{content:"\f05b"}.fa-times-circle-o:before{content:"\f05c"}.fa-check-circle-o:before{content:"\f05d"}.fa-ban:before{content:"\f05e"}.fa-arrow-left:before{content:"\f060"}.fa-arrow-right:before{content:"\f061"}.fa-arrow-up:before{content:"\f062"}.fa-arrow-down:before{content:"\f063"}.fa-mail-forward:before,.fa-share:before{content:"\f064"}.fa-expand:before{content:"\f065"}.fa-compress:before{content:"\f066"}.fa-plus:before{content:"\f067"}.fa-minus:before{content:"\f068"}.fa-asterisk:before{content:"\f069"}.fa-exclamation-circle:before{content:"\f06a"}.fa-gift:before{content:"\f06b"}.fa-leaf:before{content:"\f06c"}.fa-fire:before{content:"\f06d"}.fa-eye:before{content:"\f06e"}.fa-eye-slash:before{content:"\f070"}.fa-warning:before,.fa-exclamation-triangle:before{content:"\f071"}.fa-plane:before{content:"\f072"}.fa-calendar:before{content:"\f073"}.fa-random:before{content:"\f074"}.fa-comment:before{content:"\f075"}.fa-magnet:before{content:"\f076"}.fa-chevron-up:before{content:"\f077"}.fa-chevron-down:before{content:"\f078"}.fa-retweet:before{content:"\f079"}.fa-shopping-cart:before{content:"\f07a"}.fa-folder:before{content:"\f07b"}.fa-folder-open:before{content:"\f07c"}.fa-arrows-v:before{content:"\f07d"}.fa-arrows-h:before{content:"\f07e"}.fa-bar-chart-o:before,.fa-bar-chart:before{content:"\f080"}.fa-twitter-square:before{content:"\f081"}.fa-facebook-square:before{content:"\f082"}.fa-camera-retro:before{content:"\f083"}.fa-key:before{content:"\f084"}.fa-gears:before,.fa-cogs:before{content:"\f085"}.fa-comments:before{content:"\f086"}.fa-thumbs-o-up:before{content:"\f087"}.fa-thumbs-o-down:before{content:"\f088"}.fa-star-half:before{content:"\f089"}.fa-heart-o:before{content:"\f08a"}.fa-sign-out:before{content:"\f08b"}.fa-linkedin-square:before{content:"\f08c"}.fa-thumb-tack:before{content:"\f08d"}.fa-external-link:before{content:"\f08e"}.fa-sign-in:before{content:"\f090"}.fa-trophy:before{content:"\f091"}.fa-github-square:before{content:"\f092"}.fa-upload:before{content:"\f093"}.fa-lemon-o:before{content:"\f094"}.fa-phone:before{content:"\f095"}.fa-square-o:before{content:"\f096"}.fa-bookmark-o:before{content:"\f097"}.fa-phone-square:before{content:"\f098"}.fa-twitter:before{content:"\f099"}.fa-facebook-f:before,.fa-facebook:before{content:"\f09a"}.fa-github:before{content:"\f09b"}.fa-unlock:before{content:"\f09c"}.fa-credit-card:before{content:"\f09d"}.fa-feed:before,.fa-rss:before{content:"\f09e"}.fa-hdd-o:before{content:"\f0a0"}.fa-bullhorn:before{content:"\f0a1"}.fa-bell:before{content:"\f0f3"}.fa-certificate:before{content:"\f0a3"}.fa-hand-o-right:before{content:"\f0a4"}.fa-hand-o-left:before{content:"\f0a5"}.fa-hand-o-up:before{content:"\f0a6"}.fa-hand-o-down:before{content:"\f0a7"}.fa-arrow-circle-left:before{content:"\f0a8"}.fa-arrow-circle-right:before{content:"\f0a9"}.fa-arrow-circle-up:before{content:"\f0aa"}.fa-arrow-circle-down:before{content:"\f0ab"}.fa-globe:before{content:"\f0ac"}.fa-wrench:before{content:"\f0ad"}.fa-tasks:before{content:"\f0ae"}.fa-filter:before{content:"\f0b0"}.fa-briefcase:before{content:"\f0b1"}.fa-arrows-alt:before{content:"\f0b2"}.fa-group:before,.fa-users:before{content:"\f0c0"}.fa-chain:before,.fa-link:before{content:"\f0c1"}.fa-cloud:before{content:"\f0c2"}.fa-flask:before{content:"\f0c3"}.fa-cut:before,.fa-scissors:before{content:"\f0c4"}.fa-copy:before,.fa-files-o:before{content:"\f0c5"}.fa-paperclip:before{content:"\f0c6"}.fa-save:before,.fa-floppy-o:before{content:"\f0c7"}.fa-square:before{content:"\f0c8"}.fa-navicon:before,.fa-reorder:before,.fa-bars:before{content:"\f0c9"}.fa-list-ul:before{content:"\f0ca"}.fa-list-ol:before{content:"\f0cb"}.fa-strikethrough:before{content:"\f0cc"}.fa-underline:before{content:"\f0cd"}.fa-table:before{content:"\f0ce"}.fa-magic:before{content:"\f0d0"}.fa-truck:before{content:"\f0d1"}.fa-pinterest:before{content:"\f0d2"}.fa-pinterest-square:before{content:"\f0d3"}.fa-google-plus-square:before{content:"\f0d4"}.fa-google-plus:before{content:"\f0d5"}.fa-money:before{content:"\f0d6"}.fa-caret-down:before{content:"\f0d7"}.fa-caret-up:before{content:"\f0d8"}.fa-caret-left:before{content:"\f0d9"}.fa-caret-right:before{content:"\f0da"}.fa-columns:before{content:"\f0db"}.fa-unsorted:before,.fa-sort:before{content:"\f0dc"}.fa-sort-down:before,.fa-sort-desc:before{content:"\f0dd"}.fa-sort-up:before,.fa-sort-asc:before{content:"\f0de"}.fa-envelope:before{content:"\f0e0"}.fa-linkedin:before{content:"\f0e1"}.fa-rotate-left:before,.fa-undo:before{content:"\f0e2"}.fa-legal:before,.fa-gavel:before{content:"\f0e3"}.fa-dashboard:before,.fa-tachometer:before{content:"\f0e4"}.fa-comment-o:before{content:"\f0e5"}.fa-comments-o:before{content:"\f0e6"}.fa-flash:before,.fa-bolt:before{content:"\f0e7"}.fa-sitemap:before{content:"\f0e8"}.fa-umbrella:before{content:"\f0e9"}.fa-paste:before,.fa-clipboard:before{content:"\f0ea"}.fa-lightbulb-o:before{content:"\f0eb"}.fa-exchange:before{content:"\f0ec"}.fa-cloud-download:before{content:"\f0ed"}.fa-cloud-upload:before{content:"\f0ee"}.fa-user-md:before{content:"\f0f0"}.fa-stethoscope:before{content:"\f0f1"}.fa-suitcase:before{content:"\f0f2"}.fa-bell-o:before{content:"\f0a2"}.fa-coffee:before{content:"\f0f4"}.fa-cutlery:before{content:"\f0f5"}.fa-file-text-o:before{content:"\f0f6"}.fa-building-o:before{content:"\f0f7"}.fa-hospital-o:before{content:"\f0f8"}.fa-ambulance:before{content:"\f0f9"}.fa-medkit:before{content:"\f0fa"}.fa-fighter-jet:before{content:"\f0fb"}.fa-beer:before{content:"\f0fc"}.fa-h-square:before{content:"\f0fd"}.fa-plus-square:before{content:"\f0fe"}.fa-angle-double-left:before{content:"\f100"}.fa-angle-double-right:before{content:"\f101"}.fa-angle-double-up:before{content:"\f102"}.fa-angle-double-down:before{content:"\f103"}.fa-angle-left:before{content:"\f104"}.fa-angle-right:before{content:"\f105"}.fa-angle-up:before{content:"\f106"}.fa-angle-down:before{content:"\f107"}.fa-desktop:before{content:"\f108"}.fa-laptop:before{content:"\f109"}.fa-tablet:before{content:"\f10a"}.fa-mobile-phone:before,.fa-mobile:before{content:"\f10b"}.fa-circle-o:before{content:"\f10c"}.fa-quote-left:before{content:"\f10d"}.fa-quote-right:before{content:"\f10e"}.fa-spinner:before{content:"\f110"}.fa-circle:before{content:"\f111"}.fa-mail-reply:before,.fa-reply:before{content:"\f112"}.fa-github-alt:before{content:"\f113"}.fa-folder-o:before{content:"\f114"}.fa-folder-open-o:before{content:"\f115"}.fa-smile-o:before{content:"\f118"}.fa-frown-o:before{content:"\f119"}.fa-meh-o:before{content:"\f11a"}.fa-gamepad:before{content:"\f11b"}.fa-keyboard-o:before{content:"\f11c"}.fa-flag-o:before{content:"\f11d"}.fa-flag-checkered:before{content:"\f11e"}.fa-terminal:before{content:"\f120"}.fa-code:before{content:"\f121"}.fa-mail-reply-all:before,.fa-reply-all:before{content:"\f122"}.fa-star-half-empty:before,.fa-star-half-full:before,.fa-star-half-o:before{content:"\f123"}.fa-location-arrow:before{content:"\f124"}.fa-crop:before{content:"\f125"}.fa-code-fork:before{content:"\f126"}.fa-unlink:before,.fa-chain-broken:before{content:"\f127"}.fa-question:before{content:"\f128"}.fa-info:before{content:"\f129"}.fa-exclamation:before{content:"\f12a"}.fa-superscript:before{content:"\f12b"}.fa-subscript:before{content:"\f12c"}.fa-eraser:before{content:"\f12d"}.fa-puzzle-piece:before{content:"\f12e"}.fa-microphone:before{content:"\f130"}.fa-microphone-slash:before{content:"\f131"}.fa-shield:before{content:"\f132"}.fa-calendar-o:before{content:"\f133"}.fa-fire-extinguisher:before{content:"\f134"}.fa-rocket:before{content:"\f135"}.fa-maxcdn:before{content:"\f136"}.fa-chevron-circle-left:before{content:"\f137"}.fa-chevron-circle-right:before{content:"\f138"}.fa-chevron-circle-up:before{content:"\f139"}.fa-chevron-circle-down:before{content:"\f13a"}.fa-html5:before{content:"\f13b"}.fa-css3:before{content:"\f13c"}.fa-anchor:before{content:"\f13d"}.fa-unlock-alt:before{content:"\f13e"}.fa-bullseye:before{content:"\f140"}.fa-ellipsis-h:before{content:"\f141"}.fa-ellipsis-v:before{content:"\f142"}.fa-rss-square:before{content:"\f143"}.fa-play-circle:before{content:"\f144"}.fa-ticket:before{content:"\f145"}.fa-minus-square:before{content:"\f146"}.fa-minus-square-o:before{content:"\f147"}.fa-level-up:before{content:"\f148"}.fa-level-down:before{content:"\f149"}.fa-check-square:before{content:"\f14a"}.fa-pencil-square:before{content:"\f14b"}.fa-external-link-square:before{content:"\f14c"}.fa-share-square:before{content:"\f14d"}.fa-compass:before{content:"\f14e"}.fa-toggle-down:before,.fa-caret-square-o-down:before{content:"\f150"}.fa-toggle-up:before,.fa-caret-square-o-up:before{content:"\f151"}.fa-toggle-right:before,.fa-caret-square-o-right:before{content:"\f152"}.fa-euro:before,.fa-eur:before{content:"\f153"}.fa-gbp:before{content:"\f154"}.fa-dollar:before,.fa-usd:before{content:"\f155"}.fa-rupee:before,.fa-inr:before{content:"\f156"}.fa-cny:before,.fa-rmb:before,.fa-yen:before,.fa-jpy:before{content:"\f157"}.fa-ruble:before,.fa-rouble:before,.fa-rub:before{content:"\f158"}.fa-won:before,.fa-krw:before{content:"\f159"}.fa-bitcoin:before,.fa-btc:before{content:"\f15a"}.fa-file:before{content:"\f15b"}.fa-file-text:before{content:"\f15c"}.fa-sort-alpha-asc:before{content:"\f15d"}.fa-sort-alpha-desc:before{content:"\f15e"}.fa-sort-amount-asc:before{content:"\f160"}.fa-sort-amount-desc:before{content:"\f161"}.fa-sort-numeric-asc:before{content:"\f162"}.fa-sort-numeric-desc:before{content:"\f163"}.fa-thumbs-up:before{content:"\f164"}.fa-thumbs-down:before{content:"\f165"}.fa-youtube-square:before{content:"\f166"}.fa-youtube:before{content:"\f167"}.fa-xing:before{content:"\f168"}.fa-xing-square:before{content:"\f169"}.fa-youtube-play:before{content:"\f16a"}.fa-dropbox:before{content:"\f16b"}.fa-stack-overflow:before{content:"\f16c"}.fa-instagram:before{content:"\f16d"}.fa-flickr:before{content:"\f16e"}.fa-adn:before{content:"\f170"}.fa-bitbucket:before{content:"\f171"}.fa-bitbucket-square:before{content:"\f172"}.fa-tumblr:before{content:"\f173"}.fa-tumblr-square:before{content:"\f174"}.fa-long-arrow-down:before{content:"\f175"}.fa-long-arrow-up:before{content:"\f176"}.fa-long-arrow-left:before{content:"\f177"}.fa-long-arrow-right:before{content:"\f178"}.fa-apple:before{content:"\f179"}.fa-windows:before{content:"\f17a"}.fa-android:before{content:"\f17b"}.fa-linux:before{content:"\f17c"}.fa-dribbble:before{content:"\f17d"}.fa-skype:before{content:"\f17e"}.fa-foursquare:before{content:"\f180"}.fa-trello:before{content:"\f181"}.fa-female:before{content:"\f182"}.fa-male:before{content:"\f183"}.fa-gittip:before,.fa-gratipay:before{content:"\f184"}.fa-sun-o:before{content:"\f185"}.fa-moon-o:before{content:"\f186"}.fa-archive:before{content:"\f187"}.fa-bug:before{content:"\f188"}.fa-vk:before{content:"\f189"}.fa-weibo:before{content:"\f18a"}.fa-renren:before{content:"\f18b"}.fa-pagelines:before{content:"\f18c"}.fa-stack-exchange:before{content:"\f18d"}.fa-arrow-circle-o-right:before{content:"\f18e"}.fa-arrow-circle-o-left:before{content:"\f190"}.fa-toggle-left:before,.fa-caret-square-o-left:before{content:"\f191"}.fa-dot-circle-o:before{content:"\f192"}.fa-wheelchair:before{content:"\f193"}.fa-vimeo-square:before{content:"\f194"}.fa-turkish-lira:before,.fa-try:before{content:"\f195"}.fa-plus-square-o:before{content:"\f196"}.fa-space-shuttle:before{content:"\f197"}.fa-slack:before{content:"\f198"}.fa-envelope-square:before{content:"\f199"}.fa-wordpress:before{content:"\f19a"}.fa-openid:before{content:"\f19b"}.fa-institution:before,.fa-bank:before,.fa-university:before{content:"\f19c"}.fa-mortar-board:before,.fa-graduation-cap:before{content:"\f19d"}.fa-yahoo:before{content:"\f19e"}.fa-google:before{content:"\f1a0"}.fa-reddit:before{content:"\f1a1"}.fa-reddit-square:before{content:"\f1a2"}.fa-stumbleupon-circle:before{content:"\f1a3"}.fa-stumbleupon:before{content:"\f1a4"}.fa-delicious:before{content:"\f1a5"}.fa-digg:before{content:"\f1a6"}.fa-pied-piper-pp:before{content:"\f1a7"}.fa-pied-piper-alt:before{content:"\f1a8"}.fa-drupal:before{content:"\f1a9"}.fa-joomla:before{content:"\f1aa"}.fa-language:before{content:"\f1ab"}.fa-fax:before{content:"\f1ac"}.fa-building:before{content:"\f1ad"}.fa-child:before{content:"\f1ae"}.fa-paw:before{content:"\f1b0"}.fa-spoon:before{content:"\f1b1"}.fa-cube:before{content:"\f1b2"}.fa-cubes:before{content:"\f1b3"}.fa-behance:before{content:"\f1b4"}.fa-behance-square:before{content:"\f1b5"}.fa-steam:before{content:"\f1b6"}.fa-steam-square:before{content:"\f1b7"}.fa-recycle:before{content:"\f1b8"}.fa-automobile:before,.fa-car:before{content:"\f1b9"}.fa-cab:before,.fa-taxi:before{content:"\f1ba"}.fa-tree:before{content:"\f1bb"}.fa-spotify:before{content:"\f1bc"}.fa-deviantart:before{content:"\f1bd"}.fa-soundcloud:before{content:"\f1be"}.fa-database:before{content:"\f1c0"}.fa-file-pdf-o:before{content:"\f1c1"}.fa-file-word-o:before{content:"\f1c2"}.fa-file-excel-o:before{content:"\f1c3"}.fa-file-powerpoint-o:before{content:"\f1c4"}.fa-file-photo-o:before,.fa-file-picture-o:before,.fa-file-image-o:before{content:"\f1c5"}.fa-file-zip-o:before,.fa-file-archive-o:before{content:"\f1c6"}.fa-file-sound-o:before,.fa-file-audio-o:before{content:"\f1c7"}.fa-file-movie-o:before,.fa-file-video-o:before{content:"\f1c8"}.fa-file-code-o:before{content:"\f1c9"}.fa-vine:before{content:"\f1ca"}.fa-codepen:before{content:"\f1cb"}.fa-jsfiddle:before{content:"\f1cc"}.fa-life-bouy:before,.fa-life-buoy:before,.fa-life-saver:before,.fa-support:before,.fa-life-ring:before{content:"\f1cd"}.fa-circle-o-notch:before{content:"\f1ce"}.fa-ra:before,.fa-resistance:before,.fa-rebel:before{content:"\f1d0"}.fa-ge:before,.fa-empire:before{content:"\f1d1"}.fa-git-square:before{content:"\f1d2"}.fa-git:before{content:"\f1d3"}.fa-y-combinator-square:before,.fa-yc-square:before,.fa-hacker-news:before{content:"\f1d4"}.fa-tencent-weibo:before{content:"\f1d5"}.fa-qq:before{content:"\f1d6"}.fa-wechat:before,.fa-weixin:before{content:"\f1d7"}.fa-send:before,.fa-paper-plane:before{content:"\f1d8"}.fa-send-o:before,.fa-paper-plane-o:before{content:"\f1d9"}.fa-history:before{content:"\f1da"}.fa-circle-thin:before{content:"\f1db"}.fa-header:before{content:"\f1dc"}.fa-paragraph:before{content:"\f1dd"}.fa-sliders:before{content:"\f1de"}.fa-share-alt:before{content:"\f1e0"}.fa-share-alt-square:before{content:"\f1e1"}.fa-bomb:before{content:"\f1e2"}.fa-soccer-ball-o:before,.fa-futbol-o:before{content:"\f1e3"}.fa-tty:before{content:"\f1e4"}.fa-binoculars:before{content:"\f1e5"}.fa-plug:before{content:"\f1e6"}.fa-slideshare:before{content:"\f1e7"}.fa-twitch:before{content:"\f1e8"}.fa-yelp:before{content:"\f1e9"}.fa-newspaper-o:before{content:"\f1ea"}.fa-wifi:before{content:"\f1eb"}.fa-calculator:before{content:"\f1ec"}.fa-paypal:before{content:"\f1ed"}.fa-google-wallet:before{content:"\f1ee"}.fa-cc-visa:before{content:"\f1f0"}.fa-cc-mastercard:before{content:"\f1f1"}.fa-cc-discover:before{content:"\f1f2"}.fa-cc-amex:before{content:"\f1f3"}.fa-cc-paypal:before{content:"\f1f4"}.fa-cc-stripe:before{content:"\f1f5"}.fa-bell-slash:before{content:"\f1f6"}.fa-bell-slash-o:before{content:"\f1f7"}.fa-trash:before{content:"\f1f8"}.fa-copyright:before{content:"\f1f9"}.fa-at:before{content:"\f1fa"}.fa-eyedropper:before{content:"\f1fb"}.fa-paint-brush:before{content:"\f1fc"}.fa-birthday-cake:before{content:"\f1fd"}.fa-area-chart:before{content:"\f1fe"}.fa-pie-chart:before{content:"\f200"}.fa-line-chart:before{content:"\f201"}.fa-lastfm:before{content:"\f202"}.fa-lastfm-square:before{content:"\f203"}.fa-toggle-off:before{content:"\f204"}.fa-toggle-on:before{content:"\f205"}.fa-bicycle:before{content:"\f206"}.fa-bus:before{content:"\f207"}.fa-ioxhost:before{content:"\f208"}.fa-angellist:before{content:"\f209"}.fa-cc:before{content:"\f20a"}.fa-shekel:before,.fa-sheqel:before,.fa-ils:before{content:"\f20b"}.fa-meanpath:before{content:"\f20c"}.fa-buysellads:before{content:"\f20d"}.fa-connectdevelop:before{content:"\f20e"}.fa-dashcube:before{content:"\f210"}.fa-forumbee:before{content:"\f211"}.fa-leanpub:before{content:"\f212"}.fa-sellsy:before{content:"\f213"}.fa-shirtsinbulk:before{content:"\f214"}.fa-simplybuilt:before{content:"\f215"}.fa-skyatlas:before{content:"\f216"}.fa-cart-plus:before{content:"\f217"}.fa-cart-arrow-down:before{content:"\f218"}.fa-diamond:before{content:"\f219"}.fa-ship:before{content:"\f21a"}.fa-user-secret:before{content:"\f21b"}.fa-motorcycle:before{content:"\f21c"}.fa-street-view:before{content:"\f21d"}.fa-heartbeat:before{content:"\f21e"}.fa-venus:before{content:"\f221"}.fa-mars:before{content:"\f222"}.fa-mercury:before{content:"\f223"}.fa-intersex:before,.fa-transgender:before{content:"\f224"}.fa-transgender-alt:before{content:"\f225"}.fa-venus-double:before{content:"\f226"}.fa-mars-double:before{content:"\f227"}.fa-venus-mars:before{content:"\f228"}.fa-mars-stroke:before{content:"\f229"}.fa-mars-stroke-v:before{content:"\f22a"}.fa-mars-stroke-h:before{content:"\f22b"}.fa-neuter:before{content:"\f22c"}.fa-genderless:before{content:"\f22d"}.fa-facebook-official:before{content:"\f230"}.fa-pinterest-p:before{content:"\f231"}.fa-whatsapp:before{content:"\f232"}.fa-server:before{content:"\f233"}.fa-user-plus:before{content:"\f234"}.fa-user-times:before{content:"\f235"}.fa-hotel:before,.fa-bed:before{content:"\f236"}.fa-viacoin:before{content:"\f237"}.fa-train:before{content:"\f238"}.fa-subway:before{content:"\f239"}.fa-medium:before{content:"\f23a"}.fa-yc:before,.fa-y-combinator:before{content:"\f23b"}.fa-optin-monster:before{content:"\f23c"}.fa-opencart:before{content:"\f23d"}.fa-expeditedssl:before{content:"\f23e"}.fa-battery-4:before,.fa-battery-full:before{content:"\f240"}.fa-battery-3:before,.fa-battery-three-quarters:before{content:"\f241"}.fa-battery-2:before,.fa-battery-half:before{content:"\f242"}.fa-battery-1:before,.fa-battery-quarter:before{content:"\f243"}.fa-battery-0:before,.fa-battery-empty:before{content:"\f244"}.fa-mouse-pointer:before{content:"\f245"}.fa-i-cursor:before{content:"\f246"}.fa-object-group:before{content:"\f247"}.fa-object-ungroup:before{content:"\f248"}.fa-sticky-note:before{content:"\f249"}.fa-sticky-note-o:before{content:"\f24a"}.fa-cc-jcb:before{content:"\f24b"}.fa-cc-diners-club:before{content:"\f24c"}.fa-clone:before{content:"\f24d"}.fa-balance-scale:before{content:"\f24e"}.fa-hourglass-o:before{content:"\f250"}.fa-hourglass-1:before,.fa-hourglass-start:before{content:"\f251"}.fa-hourglass-2:before,.fa-hourglass-half:before{content:"\f252"}.fa-hourglass-3:before,.fa-hourglass-end:before{content:"\f253"}.fa-hourglass:before{content:"\f254"}.fa-hand-grab-o:before,.fa-hand-rock-o:before{content:"\f255"}.fa-hand-stop-o:before,.fa-hand-paper-o:before{content:"\f256"}.fa-hand-scissors-o:before{content:"\f257"}.fa-hand-lizard-o:before{content:"\f258"}.fa-hand-spock-o:before{content:"\f259"}.fa-hand-pointer-o:before{content:"\f25a"}.fa-hand-peace-o:before{content:"\f25b"}.fa-trademark:before{content:"\f25c"}.fa-registered:before{content:"\f25d"}.fa-creative-commons:before{content:"\f25e"}.fa-gg:before{content:"\f260"}.fa-gg-circle:before{content:"\f261"}.fa-tripadvisor:before{content:"\f262"}.fa-odnoklassniki:before{content:"\f263"}.fa-odnoklassniki-square:before{content:"\f264"}.fa-get-pocket:before{content:"\f265"}.fa-wikipedia-w:before{content:"\f266"}.fa-safari:before{content:"\f267"}.fa-chrome:before{content:"\f268"}.fa-firefox:before{content:"\f269"}.fa-opera:before{content:"\f26a"}.fa-internet-explorer:before{content:"\f26b"}.fa-tv:before,.fa-television:before{content:"\f26c"}.fa-contao:before{content:"\f26d"}.fa-500px:before{content:"\f26e"}.fa-amazon:before{content:"\f270"}.fa-calendar-plus-o:before{content:"\f271"}.fa-calendar-minus-o:before{content:"\f272"}.fa-calendar-times-o:before{content:"\f273"}.fa-calendar-check-o:before{content:"\f274"}.fa-industry:before{content:"\f275"}.fa-map-pin:before{content:"\f276"}.fa-map-signs:before{content:"\f277"}.fa-map-o:before{content:"\f278"}.fa-map:before{content:"\f279"}.fa-commenting:before{content:"\f27a"}.fa-commenting-o:before{content:"\f27b"}.fa-houzz:before{content:"\f27c"}.fa-vimeo:before{content:"\f27d"}.fa-black-tie:before{content:"\f27e"}.fa-fonticons:before{content:"\f280"}.fa-reddit-alien:before{content:"\f281"}.fa-edge:before{content:"\f282"}.fa-credit-card-alt:before{content:"\f283"}.fa-codiepie:before{content:"\f284"}.fa-modx:before{content:"\f285"}.fa-fort-awesome:before{content:"\f286"}.fa-usb:before{content:"\f287"}.fa-product-hunt:before{content:"\f288"}.fa-mixcloud:before{content:"\f289"}.fa-scribd:before{content:"\f28a"}.fa-pause-circle:before{content:"\f28b"}.fa-pause-circle-o:before{content:"\f28c"}.fa-stop-circle:before{content:"\f28d"}.fa-stop-circle-o:before{content:"\f28e"}.fa-shopping-bag:before{content:"\f290"}.fa-shopping-basket:before{content:"\f291"}.fa-hashtag:before{content:"\f292"}.fa-bluetooth:before{content:"\f293"}.fa-bluetooth-b:before{content:"\f294"}.fa-percent:before{content:"\f295"}.fa-gitlab:before{content:"\f296"}.fa-wpbeginner:before{content:"\f297"}.fa-wpforms:before{content:"\f298"}.fa-envira:before{content:"\f299"}.fa-universal-access:before{content:"\f29a"}.fa-wheelchair-alt:before{content:"\f29b"}.fa-question-circle-o:before{content:"\f29c"}.fa-blind:before{content:"\f29d"}.fa-audio-description:before{content:"\f29e"}.fa-volume-control-phone:before{content:"\f2a0"}.fa-braille:before{content:"\f2a1"}.fa-assistive-listening-systems:before{content:"\f2a2"}.fa-asl-interpreting:before,.fa-american-sign-language-interpreting:before{content:"\f2a3"}.fa-deafness:before,.fa-hard-of-hearing:before,.fa-deaf:before{content:"\f2a4"}.fa-glide:before{content:"\f2a5"}.fa-glide-g:before{content:"\f2a6"}.fa-signing:before,.fa-sign-language:before{content:"\f2a7"}.fa-low-vision:before{content:"\f2a8"}.fa-viadeo:before{content:"\f2a9"}.fa-viadeo-square:before{content:"\f2aa"}.fa-snapchat:before{content:"\f2ab"}.fa-snapchat-ghost:before{content:"\f2ac"}.fa-snapchat-square:before{content:"\f2ad"}.fa-pied-piper:before{content:"\f2ae"}.fa-first-order:before{content:"\f2b0"}.fa-yoast:before{content:"\f2b1"}.fa-themeisle:before{content:"\f2b2"}.fa-google-plus-circle:before,.fa-google-plus-official:before{content:"\f2b3"}.fa-fa:before,.fa-font-awesome:before{content:"\f2b4"}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);border:0}.sr-only-focusable:active,.sr-only-focusable:focus{position:static;width:auto;height:auto;margin:0;overflow:visible;clip:auto}

'''
'''--- src/css/fonts/fontawesome-webfont.svg ---
<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd" >
<svg>
<metadata>
Created by FontForge 20120731 at Mon Oct 24 17:37:40 2016
 By ,,,
Copyright Dave Gandy 2016. All rights reserved.
</metadata>
<defs>
<font id="FontAwesome" horiz-adv-x="1536" >
  <font-face 
    font-family="FontAwesome"
    font-weight="400"
    font-stretch="normal"
    units-per-em="1792"
    panose-1="0 0 0 0 0 0 0 0 0 0"
    ascent="1536"
    descent="-256"
    bbox="-1.02083 -256.962 2304.6 1537.02"
    underline-thickness="0"
    underline-position="0"
    unicode-range="U+0020-F500"
  />
<missing-glyph horiz-adv-x="896" 
d="M224 112h448v1312h-448v-1312zM112 0v1536h672v-1536h-672z" />
    <glyph glyph-name=".notdef" horiz-adv-x="896" 
d="M224 112h448v1312h-448v-1312zM112 0v1536h672v-1536h-672z" />
    <glyph glyph-name=".null" horiz-adv-x="0" 
 />
    <glyph glyph-name="nonmarkingreturn" horiz-adv-x="597" 
 />
    <glyph glyph-name="space" unicode=" " horiz-adv-x="448" 
 />
    <glyph glyph-name="dieresis" unicode="&#xa8;" horiz-adv-x="1792" 
 />
    <glyph glyph-name="copyright" unicode="&#xa9;" horiz-adv-x="1792" 
 />
    <glyph glyph-name="registered" unicode="&#xae;" horiz-adv-x="1792" 
 />
    <glyph glyph-name="acute" unicode="&#xb4;" horiz-adv-x="1792" 
 />
    <glyph glyph-name="AE" unicode="&#xc6;" horiz-adv-x="1792" 
 />
    <glyph glyph-name="Oslash" unicode="&#xd8;" horiz-adv-x="1792" 
 />
    <glyph glyph-name="trademark" unicode="&#x2122;" horiz-adv-x="1792" 
 />
    <glyph glyph-name="infinity" unicode="&#x221e;" horiz-adv-x="1792" 
 />
    <glyph glyph-name="notequal" unicode="&#x2260;" horiz-adv-x="1792" 
 />
    <glyph glyph-name="glass" unicode="&#xf000;" horiz-adv-x="1792" 
d="M1699 1350q0 -35 -43 -78l-632 -632v-768h320q26 0 45 -19t19 -45t-19 -45t-45 -19h-896q-26 0 -45 19t-19 45t19 45t45 19h320v768l-632 632q-43 43 -43 78q0 23 18 36.5t38 17.5t43 4h1408q23 0 43 -4t38 -17.5t18 -36.5z" />
    <glyph glyph-name="music" unicode="&#xf001;" 
d="M1536 1312v-1120q0 -50 -34 -89t-86 -60.5t-103.5 -32t-96.5 -10.5t-96.5 10.5t-103.5 32t-86 60.5t-34 89t34 89t86 60.5t103.5 32t96.5 10.5q105 0 192 -39v537l-768 -237v-709q0 -50 -34 -89t-86 -60.5t-103.5 -32t-96.5 -10.5t-96.5 10.5t-103.5 32t-86 60.5t-34 89
t34 89t86 60.5t103.5 32t96.5 10.5q105 0 192 -39v967q0 31 19 56.5t49 35.5l832 256q12 4 28 4q40 0 68 -28t28 -68z" />
    <glyph glyph-name="search" unicode="&#xf002;" horiz-adv-x="1664" 
d="M1152 704q0 185 -131.5 316.5t-316.5 131.5t-316.5 -131.5t-131.5 -316.5t131.5 -316.5t316.5 -131.5t316.5 131.5t131.5 316.5zM1664 -128q0 -52 -38 -90t-90 -38q-54 0 -90 38l-343 342q-179 -124 -399 -124q-143 0 -273.5 55.5t-225 150t-150 225t-55.5 273.5
t55.5 273.5t150 225t225 150t273.5 55.5t273.5 -55.5t225 -150t150 -225t55.5 -273.5q0 -220 -124 -399l343 -343q37 -37 37 -90z" />
    <glyph glyph-name="envelope" unicode="&#xf003;" horiz-adv-x="1792" 
d="M1664 32v768q-32 -36 -69 -66q-268 -206 -426 -338q-51 -43 -83 -67t-86.5 -48.5t-102.5 -24.5h-1h-1q-48 0 -102.5 24.5t-86.5 48.5t-83 67q-158 132 -426 338q-37 30 -69 66v-768q0 -13 9.5 -22.5t22.5 -9.5h1472q13 0 22.5 9.5t9.5 22.5zM1664 1083v11v13.5t-0.5 13
t-3 12.5t-5.5 9t-9 7.5t-14 2.5h-1472q-13 0 -22.5 -9.5t-9.5 -22.5q0 -168 147 -284q193 -152 401 -317q6 -5 35 -29.5t46 -37.5t44.5 -31.5t50.5 -27.5t43 -9h1h1q20 0 43 9t50.5 27.5t44.5 31.5t46 37.5t35 29.5q208 165 401 317q54 43 100.5 115.5t46.5 131.5z
M1792 1120v-1088q0 -66 -47 -113t-113 -47h-1472q-66 0 -113 47t-47 113v1088q0 66 47 113t113 47h1472q66 0 113 -47t47 -113z" />
    <glyph glyph-name="heart" unicode="&#xf004;" horiz-adv-x="1792" 
d="M896 -128q-26 0 -44 18l-624 602q-10 8 -27.5 26t-55.5 65.5t-68 97.5t-53.5 121t-23.5 138q0 220 127 344t351 124q62 0 126.5 -21.5t120 -58t95.5 -68.5t76 -68q36 36 76 68t95.5 68.5t120 58t126.5 21.5q224 0 351 -124t127 -344q0 -221 -229 -450l-623 -600
q-18 -18 -44 -18z" />
    <glyph glyph-name="star" unicode="&#xf005;" horiz-adv-x="1664" 
d="M1664 889q0 -22 -26 -48l-363 -354l86 -500q1 -7 1 -20q0 -21 -10.5 -35.5t-30.5 -14.5q-19 0 -40 12l-449 236l-449 -236q-22 -12 -40 -12q-21 0 -31.5 14.5t-10.5 35.5q0 6 2 20l86 500l-364 354q-25 27 -25 48q0 37 56 46l502 73l225 455q19 41 49 41t49 -41l225 -455
l502 -73q56 -9 56 -46z" />
    <glyph glyph-name="star_empty" unicode="&#xf006;" horiz-adv-x="1664" 
d="M1137 532l306 297l-422 62l-189 382l-189 -382l-422 -62l306 -297l-73 -421l378 199l377 -199zM1664 889q0 -22 -26 -48l-363 -354l86 -500q1 -7 1 -20q0 -50 -41 -50q-19 0 -40 12l-449 236l-449 -236q-22 -12 -40 -12q-21 0 -31.5 14.5t-10.5 35.5q0 6 2 20l86 500
l-364 354q-25 27 -25 48q0 37 56 46l502 73l225 455q19 41 49 41t49 -41l225 -455l502 -73q56 -9 56 -46z" />
    <glyph glyph-name="user" unicode="&#xf007;" horiz-adv-x="1280" 
d="M1280 137q0 -109 -62.5 -187t-150.5 -78h-854q-88 0 -150.5 78t-62.5 187q0 85 8.5 160.5t31.5 152t58.5 131t94 89t134.5 34.5q131 -128 313 -128t313 128q76 0 134.5 -34.5t94 -89t58.5 -131t31.5 -152t8.5 -160.5zM1024 1024q0 -159 -112.5 -271.5t-271.5 -112.5
t-271.5 112.5t-112.5 271.5t112.5 271.5t271.5 112.5t271.5 -112.5t112.5 -271.5z" />
    <glyph glyph-name="film" unicode="&#xf008;" horiz-adv-x="1920" 
d="M384 -64v128q0 26 -19 45t-45 19h-128q-26 0 -45 -19t-19 -45v-128q0 -26 19 -45t45 -19h128q26 0 45 19t19 45zM384 320v128q0 26 -19 45t-45 19h-128q-26 0 -45 -19t-19 -45v-128q0 -26 19 -45t45 -19h128q26 0 45 19t19 45zM384 704v128q0 26 -19 45t-45 19h-128
q-26 0 -45 -19t-19 -45v-128q0 -26 19 -45t45 -19h128q26 0 45 19t19 45zM1408 -64v512q0 26 -19 45t-45 19h-768q-26 0 -45 -19t-19 -45v-512q0 -26 19 -45t45 -19h768q26 0 45 19t19 45zM384 1088v128q0 26 -19 45t-45 19h-128q-26 0 -45 -19t-19 -45v-128q0 -26 19 -45
t45 -19h128q26 0 45 19t19 45zM1792 -64v128q0 26 -19 45t-45 19h-128q-26 0 -45 -19t-19 -45v-128q0 -26 19 -45t45 -19h128q26 0 45 19t19 45zM1408 704v512q0 26 -19 45t-45 19h-768q-26 0 -45 -19t-19 -45v-512q0 -26 19 -45t45 -19h768q26 0 45 19t19 45zM1792 320v128
q0 26 -19 45t-45 19h-128q-26 0 -45 -19t-19 -45v-128q0 -26 19 -45t45 -19h128q26 0 45 19t19 45zM1792 704v128q0 26 -19 45t-45 19h-128q-26 0 -45 -19t-19 -45v-128q0 -26 19 -45t45 -19h128q26 0 45 19t19 45zM1792 1088v128q0 26 -19 45t-45 19h-128q-26 0 -45 -19
t-19 -45v-128q0 -26 19 -45t45 -19h128q26 0 45 19t19 45zM1920 1248v-1344q0 -66 -47 -113t-113 -47h-1600q-66 0 -113 47t-47 113v1344q0 66 47 113t113 47h1600q66 0 113 -47t47 -113z" />
    <glyph glyph-name="th_large" unicode="&#xf009;" horiz-adv-x="1664" 
d="M768 512v-384q0 -52 -38 -90t-90 -38h-512q-52 0 -90 38t-38 90v384q0 52 38 90t90 38h512q52 0 90 -38t38 -90zM768 1280v-384q0 -52 -38 -90t-90 -38h-512q-52 0 -90 38t-38 90v384q0 52 38 90t90 38h512q52 0 90 -38t38 -90zM1664 512v-384q0 -52 -38 -90t-90 -38
h-512q-52 0 -90 38t-38 90v384q0 52 38 90t90 38h512q52 0 90 -38t38 -90zM1664 1280v-384q0 -52 -38 -90t-90 -38h-512q-52 0 -90 38t-38 90v384q0 52 38 90t90 38h512q52 0 90 -38t38 -90z" />
    <glyph glyph-name="th" unicode="&#xf00a;" horiz-adv-x="1792" 
d="M512 288v-192q0 -40 -28 -68t-68 -28h-320q-40 0 -68 28t-28 68v192q0 40 28 68t68 28h320q40 0 68 -28t28 -68zM512 800v-192q0 -40 -28 -68t-68 -28h-320q-40 0 -68 28t-28 68v192q0 40 28 68t68 28h320q40 0 68 -28t28 -68zM1152 288v-192q0 -40 -28 -68t-68 -28h-320
q-40 0 -68 28t-28 68v192q0 40 28 68t68 28h320q40 0 68 -28t28 -68zM512 1312v-192q0 -40 -28 -68t-68 -28h-320q-40 0 -68 28t-28 68v192q0 40 28 68t68 28h320q40 0 68 -28t28 -68zM1152 800v-192q0 -40 -28 -68t-68 -28h-320q-40 0 -68 28t-28 68v192q0 40 28 68t68 28
h320q40 0 68 -28t28 -68zM1792 288v-192q0 -40 -28 -68t-68 -28h-320q-40 0 -68 28t-28 68v192q0 40 28 68t68 28h320q40 0 68 -28t28 -68zM1152 1312v-192q0 -40 -28 -68t-68 -28h-320q-40 0 -68 28t-28 68v192q0 40 28 68t68 28h320q40 0 68 -28t28 -68zM1792 800v-192
q0 -40 -28 -68t-68 -28h-320q-40 0 -68 28t-28 68v192q0 40 28 68t68 28h320q40 0 68 -28t28 -68zM1792 1312v-192q0 -40 -28 -68t-68 -28h-320q-40 0 -68 28t-28 68v192q0 40 28 68t68 28h320q40 0 68 -28t28 -68z" />
    <glyph glyph-name="th_list" unicode="&#xf00b;" horiz-adv-x="1792" 
d="M512 288v-192q0 -40 -28 -68t-68 -28h-320q-40 0 -68 28t-28 68v192q0 40 28 68t68 28h320q40 0 68 -28t28 -68zM512 800v-192q0 -40 -28 -68t-68 -28h-320q-40 0 -68 28t-28 68v192q0 40 28 68t68 28h320q40 0 68 -28t28 -68zM1792 288v-192q0 -40 -28 -68t-68 -28h-960
q-40 0 -68 28t-28 68v192q0 40 28 68t68 28h960q40 0 68 -28t28 -68zM512 1312v-192q0 -40 -28 -68t-68 -28h-320q-40 0 -68 28t-28 68v192q0 40 28 68t68 28h320q40 0 68 -28t28 -68zM1792 800v-192q0 -40 -28 -68t-68 -28h-960q-40 0 -68 28t-28 68v192q0 40 28 68t68 28
h960q40 0 68 -28t28 -68zM1792 1312v-192q0 -40 -28 -68t-68 -28h-960q-40 0 -68 28t-28 68v192q0 40 28 68t68 28h960q40 0 68 -28t28 -68z" />
    <glyph glyph-name="ok" unicode="&#xf00c;" horiz-adv-x="1792" 
d="M1671 970q0 -40 -28 -68l-724 -724l-136 -136q-28 -28 -68 -28t-68 28l-136 136l-362 362q-28 28 -28 68t28 68l136 136q28 28 68 28t68 -28l294 -295l656 657q28 28 68 28t68 -28l136 -136q28 -28 28 -68z" />
    <glyph glyph-name="remove" unicode="&#xf00d;" horiz-adv-x="1408" 
d="M1298 214q0 -40 -28 -68l-136 -136q-28 -28 -68 -28t-68 28l-294 294l-294 -294q-28 -28 -68 -28t-68 28l-136 136q-28 28 -28 68t28 68l294 294l-294 294q-28 28 -28 68t28 68l136 136q28 28 68 28t68 -28l294 -294l294 294q28 28 68 28t68 -28l136 -136q28 -28 28 -68
t-28 -68l-294 -294l294 -294q28 -28 28 -68z" />
    <glyph glyph-name="zoom_in" unicode="&#xf00e;" horiz-adv-x="1664" 
d="M1024 736v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-224v-224q0 -13 -9.5 -22.5t-22.5 -9.5h-64q-13 0 -22.5 9.5t-9.5 22.5v224h-224q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h224v224q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5 -9.5t9.5 -22.5v-224h224
q13 0 22.5 -9.5t9.5 -22.5zM1152 704q0 185 -131.5 316.5t-316.5 131.5t-316.5 -131.5t-131.5 -316.5t131.5 -316.5t316.5 -131.5t316.5 131.5t131.5 316.5zM1664 -128q0 -53 -37.5 -90.5t-90.5 -37.5q-54 0 -90 38l-343 342q-179 -124 -399 -124q-143 0 -273.5 55.5
t-225 150t-150 225t-55.5 273.5t55.5 273.5t150 225t225 150t273.5 55.5t273.5 -55.5t225 -150t150 -225t55.5 -273.5q0 -220 -124 -399l343 -343q37 -37 37 -90z" />
    <glyph glyph-name="zoom_out" unicode="&#xf010;" horiz-adv-x="1664" 
d="M1024 736v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-576q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h576q13 0 22.5 -9.5t9.5 -22.5zM1152 704q0 185 -131.5 316.5t-316.5 131.5t-316.5 -131.5t-131.5 -316.5t131.5 -316.5t316.5 -131.5t316.5 131.5t131.5 316.5z
M1664 -128q0 -53 -37.5 -90.5t-90.5 -37.5q-54 0 -90 38l-343 342q-179 -124 -399 -124q-143 0 -273.5 55.5t-225 150t-150 225t-55.5 273.5t55.5 273.5t150 225t225 150t273.5 55.5t273.5 -55.5t225 -150t150 -225t55.5 -273.5q0 -220 -124 -399l343 -343q37 -37 37 -90z
" />
    <glyph glyph-name="off" unicode="&#xf011;" 
d="M1536 640q0 -156 -61 -298t-164 -245t-245 -164t-298 -61t-298 61t-245 164t-164 245t-61 298q0 182 80.5 343t226.5 270q43 32 95.5 25t83.5 -50q32 -42 24.5 -94.5t-49.5 -84.5q-98 -74 -151.5 -181t-53.5 -228q0 -104 40.5 -198.5t109.5 -163.5t163.5 -109.5
t198.5 -40.5t198.5 40.5t163.5 109.5t109.5 163.5t40.5 198.5q0 121 -53.5 228t-151.5 181q-42 32 -49.5 84.5t24.5 94.5q31 43 84 50t95 -25q146 -109 226.5 -270t80.5 -343zM896 1408v-640q0 -52 -38 -90t-90 -38t-90 38t-38 90v640q0 52 38 90t90 38t90 -38t38 -90z" />
    <glyph glyph-name="signal" unicode="&#xf012;" horiz-adv-x="1792" 
d="M256 96v-192q0 -14 -9 -23t-23 -9h-192q-14 0 -23 9t-9 23v192q0 14 9 23t23 9h192q14 0 23 -9t9 -23zM640 224v-320q0 -14 -9 -23t-23 -9h-192q-14 0 -23 9t-9 23v320q0 14 9 23t23 9h192q14 0 23 -9t9 -23zM1024 480v-576q0 -14 -9 -23t-23 -9h-192q-14 0 -23 9t-9 23
v576q0 14 9 23t23 9h192q14 0 23 -9t9 -23zM1408 864v-960q0 -14 -9 -23t-23 -9h-192q-14 0 -23 9t-9 23v960q0 14 9 23t23 9h192q14 0 23 -9t9 -23zM1792 1376v-1472q0 -14 -9 -23t-23 -9h-192q-14 0 -23 9t-9 23v1472q0 14 9 23t23 9h192q14 0 23 -9t9 -23z" />
    <glyph glyph-name="cog" unicode="&#xf013;" 
d="M1024 640q0 106 -75 181t-181 75t-181 -75t-75 -181t75 -181t181 -75t181 75t75 181zM1536 749v-222q0 -12 -8 -23t-20 -13l-185 -28q-19 -54 -39 -91q35 -50 107 -138q10 -12 10 -25t-9 -23q-27 -37 -99 -108t-94 -71q-12 0 -26 9l-138 108q-44 -23 -91 -38
q-16 -136 -29 -186q-7 -28 -36 -28h-222q-14 0 -24.5 8.5t-11.5 21.5l-28 184q-49 16 -90 37l-141 -107q-10 -9 -25 -9q-14 0 -25 11q-126 114 -165 168q-7 10 -7 23q0 12 8 23q15 21 51 66.5t54 70.5q-27 50 -41 99l-183 27q-13 2 -21 12.5t-8 23.5v222q0 12 8 23t19 13
l186 28q14 46 39 92q-40 57 -107 138q-10 12 -10 24q0 10 9 23q26 36 98.5 107.5t94.5 71.5q13 0 26 -10l138 -107q44 23 91 38q16 136 29 186q7 28 36 28h222q14 0 24.5 -8.5t11.5 -21.5l28 -184q49 -16 90 -37l142 107q9 9 24 9q13 0 25 -10q129 -119 165 -170q7 -8 7 -22
q0 -12 -8 -23q-15 -21 -51 -66.5t-54 -70.5q26 -50 41 -98l183 -28q13 -2 21 -12.5t8 -23.5z" />
    <glyph glyph-name="trash" unicode="&#xf014;" horiz-adv-x="1408" 
d="M512 800v-576q0 -14 -9 -23t-23 -9h-64q-14 0 -23 9t-9 23v576q0 14 9 23t23 9h64q14 0 23 -9t9 -23zM768 800v-576q0 -14 -9 -23t-23 -9h-64q-14 0 -23 9t-9 23v576q0 14 9 23t23 9h64q14 0 23 -9t9 -23zM1024 800v-576q0 -14 -9 -23t-23 -9h-64q-14 0 -23 9t-9 23v576
q0 14 9 23t23 9h64q14 0 23 -9t9 -23zM1152 76v948h-896v-948q0 -22 7 -40.5t14.5 -27t10.5 -8.5h832q3 0 10.5 8.5t14.5 27t7 40.5zM480 1152h448l-48 117q-7 9 -17 11h-317q-10 -2 -17 -11zM1408 1120v-64q0 -14 -9 -23t-23 -9h-96v-948q0 -83 -47 -143.5t-113 -60.5h-832
q-66 0 -113 58.5t-47 141.5v952h-96q-14 0 -23 9t-9 23v64q0 14 9 23t23 9h309l70 167q15 37 54 63t79 26h320q40 0 79 -26t54 -63l70 -167h309q14 0 23 -9t9 -23z" />
    <glyph glyph-name="home" unicode="&#xf015;" horiz-adv-x="1664" 
d="M1408 544v-480q0 -26 -19 -45t-45 -19h-384v384h-256v-384h-384q-26 0 -45 19t-19 45v480q0 1 0.5 3t0.5 3l575 474l575 -474q1 -2 1 -6zM1631 613l-62 -74q-8 -9 -21 -11h-3q-13 0 -21 7l-692 577l-692 -577q-12 -8 -24 -7q-13 2 -21 11l-62 74q-8 10 -7 23.5t11 21.5
l719 599q32 26 76 26t76 -26l244 -204v195q0 14 9 23t23 9h192q14 0 23 -9t9 -23v-408l219 -182q10 -8 11 -21.5t-7 -23.5z" />
    <glyph glyph-name="file_alt" unicode="&#xf016;" 
d="M1468 1156q28 -28 48 -76t20 -88v-1152q0 -40 -28 -68t-68 -28h-1344q-40 0 -68 28t-28 68v1600q0 40 28 68t68 28h896q40 0 88 -20t76 -48zM1024 1400v-376h376q-10 29 -22 41l-313 313q-12 12 -41 22zM1408 -128v1024h-416q-40 0 -68 28t-28 68v416h-768v-1536h1280z
" />
    <glyph glyph-name="time" unicode="&#xf017;" 
d="M896 992v-448q0 -14 -9 -23t-23 -9h-320q-14 0 -23 9t-9 23v64q0 14 9 23t23 9h224v352q0 14 9 23t23 9h64q14 0 23 -9t9 -23zM1312 640q0 148 -73 273t-198 198t-273 73t-273 -73t-198 -198t-73 -273t73 -273t198 -198t273 -73t273 73t198 198t73 273zM1536 640
q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="road" unicode="&#xf018;" horiz-adv-x="1920" 
d="M1111 540v4l-24 320q-1 13 -11 22.5t-23 9.5h-186q-13 0 -23 -9.5t-11 -22.5l-24 -320v-4q-1 -12 8 -20t21 -8h244q12 0 21 8t8 20zM1870 73q0 -73 -46 -73h-704q13 0 22 9.5t8 22.5l-20 256q-1 13 -11 22.5t-23 9.5h-272q-13 0 -23 -9.5t-11 -22.5l-20 -256
q-1 -13 8 -22.5t22 -9.5h-704q-46 0 -46 73q0 54 26 116l417 1044q8 19 26 33t38 14h339q-13 0 -23 -9.5t-11 -22.5l-15 -192q-1 -14 8 -23t22 -9h166q13 0 22 9t8 23l-15 192q-1 13 -11 22.5t-23 9.5h339q20 0 38 -14t26 -33l417 -1044q26 -62 26 -116z" />
    <glyph glyph-name="download_alt" unicode="&#xf019;" horiz-adv-x="1664" 
d="M1280 192q0 26 -19 45t-45 19t-45 -19t-19 -45t19 -45t45 -19t45 19t19 45zM1536 192q0 26 -19 45t-45 19t-45 -19t-19 -45t19 -45t45 -19t45 19t19 45zM1664 416v-320q0 -40 -28 -68t-68 -28h-1472q-40 0 -68 28t-28 68v320q0 40 28 68t68 28h465l135 -136
q58 -56 136 -56t136 56l136 136h464q40 0 68 -28t28 -68zM1339 985q17 -41 -14 -70l-448 -448q-18 -19 -45 -19t-45 19l-448 448q-31 29 -14 70q17 39 59 39h256v448q0 26 19 45t45 19h256q26 0 45 -19t19 -45v-448h256q42 0 59 -39z" />
    <glyph glyph-name="download" unicode="&#xf01a;" 
d="M1120 608q0 -12 -10 -24l-319 -319q-11 -9 -23 -9t-23 9l-320 320q-15 16 -7 35q8 20 30 20h192v352q0 14 9 23t23 9h192q14 0 23 -9t9 -23v-352h192q14 0 23 -9t9 -23zM768 1184q-148 0 -273 -73t-198 -198t-73 -273t73 -273t198 -198t273 -73t273 73t198 198t73 273
t-73 273t-198 198t-273 73zM1536 640q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="upload" unicode="&#xf01b;" 
d="M1118 660q-8 -20 -30 -20h-192v-352q0 -14 -9 -23t-23 -9h-192q-14 0 -23 9t-9 23v352h-192q-14 0 -23 9t-9 23q0 12 10 24l319 319q11 9 23 9t23 -9l320 -320q15 -16 7 -35zM768 1184q-148 0 -273 -73t-198 -198t-73 -273t73 -273t198 -198t273 -73t273 73t198 198
t73 273t-73 273t-198 198t-273 73zM1536 640q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="inbox" unicode="&#xf01c;" 
d="M1023 576h316q-1 3 -2.5 8.5t-2.5 7.5l-212 496h-708l-212 -496q-1 -3 -2.5 -8.5t-2.5 -7.5h316l95 -192h320zM1536 546v-482q0 -26 -19 -45t-45 -19h-1408q-26 0 -45 19t-19 45v482q0 62 25 123l238 552q10 25 36.5 42t52.5 17h832q26 0 52.5 -17t36.5 -42l238 -552
q25 -61 25 -123z" />
    <glyph glyph-name="play_circle" unicode="&#xf01d;" 
d="M1184 640q0 -37 -32 -55l-544 -320q-15 -9 -32 -9q-16 0 -32 8q-32 19 -32 56v640q0 37 32 56q33 18 64 -1l544 -320q32 -18 32 -55zM1312 640q0 148 -73 273t-198 198t-273 73t-273 -73t-198 -198t-73 -273t73 -273t198 -198t273 -73t273 73t198 198t73 273zM1536 640
q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="repeat" unicode="&#xf01e;" 
d="M1536 1280v-448q0 -26 -19 -45t-45 -19h-448q-42 0 -59 40q-17 39 14 69l138 138q-148 137 -349 137q-104 0 -198.5 -40.5t-163.5 -109.5t-109.5 -163.5t-40.5 -198.5t40.5 -198.5t109.5 -163.5t163.5 -109.5t198.5 -40.5q119 0 225 52t179 147q7 10 23 12q15 0 25 -9
l137 -138q9 -8 9.5 -20.5t-7.5 -22.5q-109 -132 -264 -204.5t-327 -72.5q-156 0 -298 61t-245 164t-164 245t-61 298t61 298t164 245t245 164t298 61q147 0 284.5 -55.5t244.5 -156.5l130 129q29 31 70 14q39 -17 39 -59z" />
    <glyph glyph-name="refresh" unicode="&#xf021;" 
d="M1511 480q0 -5 -1 -7q-64 -268 -268 -434.5t-478 -166.5q-146 0 -282.5 55t-243.5 157l-129 -129q-19 -19 -45 -19t-45 19t-19 45v448q0 26 19 45t45 19h448q26 0 45 -19t19 -45t-19 -45l-137 -137q71 -66 161 -102t187 -36q134 0 250 65t186 179q11 17 53 117
q8 23 30 23h192q13 0 22.5 -9.5t9.5 -22.5zM1536 1280v-448q0 -26 -19 -45t-45 -19h-448q-26 0 -45 19t-19 45t19 45l138 138q-148 137 -349 137q-134 0 -250 -65t-186 -179q-11 -17 -53 -117q-8 -23 -30 -23h-199q-13 0 -22.5 9.5t-9.5 22.5v7q65 268 270 434.5t480 166.5
q146 0 284 -55.5t245 -156.5l130 129q19 19 45 19t45 -19t19 -45z" />
    <glyph glyph-name="list_alt" unicode="&#xf022;" horiz-adv-x="1792" 
d="M384 352v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-64q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5 -9.5t9.5 -22.5zM384 608v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-64q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5 -9.5t9.5 -22.5z
M384 864v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-64q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5 -9.5t9.5 -22.5zM1536 352v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-960q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h960q13 0 22.5 -9.5t9.5 -22.5z
M1536 608v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-960q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h960q13 0 22.5 -9.5t9.5 -22.5zM1536 864v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-960q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h960q13 0 22.5 -9.5
t9.5 -22.5zM1664 160v832q0 13 -9.5 22.5t-22.5 9.5h-1472q-13 0 -22.5 -9.5t-9.5 -22.5v-832q0 -13 9.5 -22.5t22.5 -9.5h1472q13 0 22.5 9.5t9.5 22.5zM1792 1248v-1088q0 -66 -47 -113t-113 -47h-1472q-66 0 -113 47t-47 113v1088q0 66 47 113t113 47h1472q66 0 113 -47
t47 -113z" />
    <glyph glyph-name="lock" unicode="&#xf023;" horiz-adv-x="1152" 
d="M320 768h512v192q0 106 -75 181t-181 75t-181 -75t-75 -181v-192zM1152 672v-576q0 -40 -28 -68t-68 -28h-960q-40 0 -68 28t-28 68v576q0 40 28 68t68 28h32v192q0 184 132 316t316 132t316 -132t132 -316v-192h32q40 0 68 -28t28 -68z" />
    <glyph glyph-name="flag" unicode="&#xf024;" horiz-adv-x="1792" 
d="M320 1280q0 -72 -64 -110v-1266q0 -13 -9.5 -22.5t-22.5 -9.5h-64q-13 0 -22.5 9.5t-9.5 22.5v1266q-64 38 -64 110q0 53 37.5 90.5t90.5 37.5t90.5 -37.5t37.5 -90.5zM1792 1216v-763q0 -25 -12.5 -38.5t-39.5 -27.5q-215 -116 -369 -116q-61 0 -123.5 22t-108.5 48
t-115.5 48t-142.5 22q-192 0 -464 -146q-17 -9 -33 -9q-26 0 -45 19t-19 45v742q0 32 31 55q21 14 79 43q236 120 421 120q107 0 200 -29t219 -88q38 -19 88 -19q54 0 117.5 21t110 47t88 47t54.5 21q26 0 45 -19t19 -45z" />
    <glyph glyph-name="headphones" unicode="&#xf025;" horiz-adv-x="1664" 
d="M1664 650q0 -166 -60 -314l-20 -49l-185 -33q-22 -83 -90.5 -136.5t-156.5 -53.5v-32q0 -14 -9 -23t-23 -9h-64q-14 0 -23 9t-9 23v576q0 14 9 23t23 9h64q14 0 23 -9t9 -23v-32q71 0 130 -35.5t93 -95.5l68 12q29 95 29 193q0 148 -88 279t-236.5 209t-315.5 78
t-315.5 -78t-236.5 -209t-88 -279q0 -98 29 -193l68 -12q34 60 93 95.5t130 35.5v32q0 14 9 23t23 9h64q14 0 23 -9t9 -23v-576q0 -14 -9 -23t-23 -9h-64q-14 0 -23 9t-9 23v32q-88 0 -156.5 53.5t-90.5 136.5l-185 33l-20 49q-60 148 -60 314q0 151 67 291t179 242.5
t266 163.5t320 61t320 -61t266 -163.5t179 -242.5t67 -291z" />
    <glyph glyph-name="volume_off" unicode="&#xf026;" horiz-adv-x="768" 
d="M768 1184v-1088q0 -26 -19 -45t-45 -19t-45 19l-333 333h-262q-26 0 -45 19t-19 45v384q0 26 19 45t45 19h262l333 333q19 19 45 19t45 -19t19 -45z" />
    <glyph glyph-name="volume_down" unicode="&#xf027;" horiz-adv-x="1152" 
d="M768 1184v-1088q0 -26 -19 -45t-45 -19t-45 19l-333 333h-262q-26 0 -45 19t-19 45v384q0 26 19 45t45 19h262l333 333q19 19 45 19t45 -19t19 -45zM1152 640q0 -76 -42.5 -141.5t-112.5 -93.5q-10 -5 -25 -5q-26 0 -45 18.5t-19 45.5q0 21 12 35.5t29 25t34 23t29 36
t12 56.5t-12 56.5t-29 36t-34 23t-29 25t-12 35.5q0 27 19 45.5t45 18.5q15 0 25 -5q70 -27 112.5 -93t42.5 -142z" />
    <glyph glyph-name="volume_up" unicode="&#xf028;" horiz-adv-x="1664" 
d="M768 1184v-1088q0 -26 -19 -45t-45 -19t-45 19l-333 333h-262q-26 0 -45 19t-19 45v384q0 26 19 45t45 19h262l333 333q19 19 45 19t45 -19t19 -45zM1152 640q0 -76 -42.5 -141.5t-112.5 -93.5q-10 -5 -25 -5q-26 0 -45 18.5t-19 45.5q0 21 12 35.5t29 25t34 23t29 36
t12 56.5t-12 56.5t-29 36t-34 23t-29 25t-12 35.5q0 27 19 45.5t45 18.5q15 0 25 -5q70 -27 112.5 -93t42.5 -142zM1408 640q0 -153 -85 -282.5t-225 -188.5q-13 -5 -25 -5q-27 0 -46 19t-19 45q0 39 39 59q56 29 76 44q74 54 115.5 135.5t41.5 173.5t-41.5 173.5
t-115.5 135.5q-20 15 -76 44q-39 20 -39 59q0 26 19 45t45 19q13 0 26 -5q140 -59 225 -188.5t85 -282.5zM1664 640q0 -230 -127 -422.5t-338 -283.5q-13 -5 -26 -5q-26 0 -45 19t-19 45q0 36 39 59q7 4 22.5 10.5t22.5 10.5q46 25 82 51q123 91 192 227t69 289t-69 289
t-192 227q-36 26 -82 51q-7 4 -22.5 10.5t-22.5 10.5q-39 23 -39 59q0 26 19 45t45 19q13 0 26 -5q211 -91 338 -283.5t127 -422.5z" />
    <glyph glyph-name="qrcode" unicode="&#xf029;" horiz-adv-x="1408" 
d="M384 384v-128h-128v128h128zM384 1152v-128h-128v128h128zM1152 1152v-128h-128v128h128zM128 129h384v383h-384v-383zM128 896h384v384h-384v-384zM896 896h384v384h-384v-384zM640 640v-640h-640v640h640zM1152 128v-128h-128v128h128zM1408 128v-128h-128v128h128z
M1408 640v-384h-384v128h-128v-384h-128v640h384v-128h128v128h128zM640 1408v-640h-640v640h640zM1408 1408v-640h-640v640h640z" />
    <glyph glyph-name="barcode" unicode="&#xf02a;" horiz-adv-x="1792" 
d="M63 0h-63v1408h63v-1408zM126 1h-32v1407h32v-1407zM220 1h-31v1407h31v-1407zM377 1h-31v1407h31v-1407zM534 1h-62v1407h62v-1407zM660 1h-31v1407h31v-1407zM723 1h-31v1407h31v-1407zM786 1h-31v1407h31v-1407zM943 1h-63v1407h63v-1407zM1100 1h-63v1407h63v-1407z
M1226 1h-63v1407h63v-1407zM1352 1h-63v1407h63v-1407zM1446 1h-63v1407h63v-1407zM1635 1h-94v1407h94v-1407zM1698 1h-32v1407h32v-1407zM1792 0h-63v1408h63v-1408z" />
    <glyph glyph-name="tag" unicode="&#xf02b;" 
d="M448 1088q0 53 -37.5 90.5t-90.5 37.5t-90.5 -37.5t-37.5 -90.5t37.5 -90.5t90.5 -37.5t90.5 37.5t37.5 90.5zM1515 512q0 -53 -37 -90l-491 -492q-39 -37 -91 -37q-53 0 -90 37l-715 716q-38 37 -64.5 101t-26.5 117v416q0 52 38 90t90 38h416q53 0 117 -26.5t102 -64.5
l715 -714q37 -39 37 -91z" />
    <glyph glyph-name="tags" unicode="&#xf02c;" horiz-adv-x="1920" 
d="M448 1088q0 53 -37.5 90.5t-90.5 37.5t-90.5 -37.5t-37.5 -90.5t37.5 -90.5t90.5 -37.5t90.5 37.5t37.5 90.5zM1515 512q0 -53 -37 -90l-491 -492q-39 -37 -91 -37q-53 0 -90 37l-715 716q-38 37 -64.5 101t-26.5 117v416q0 52 38 90t90 38h416q53 0 117 -26.5t102 -64.5
l715 -714q37 -39 37 -91zM1899 512q0 -53 -37 -90l-491 -492q-39 -37 -91 -37q-36 0 -59 14t-53 45l470 470q37 37 37 90q0 52 -37 91l-715 714q-38 38 -102 64.5t-117 26.5h224q53 0 117 -26.5t102 -64.5l715 -714q37 -39 37 -91z" />
    <glyph glyph-name="book" unicode="&#xf02d;" horiz-adv-x="1664" 
d="M1639 1058q40 -57 18 -129l-275 -906q-19 -64 -76.5 -107.5t-122.5 -43.5h-923q-77 0 -148.5 53.5t-99.5 131.5q-24 67 -2 127q0 4 3 27t4 37q1 8 -3 21.5t-3 19.5q2 11 8 21t16.5 23.5t16.5 23.5q23 38 45 91.5t30 91.5q3 10 0.5 30t-0.5 28q3 11 17 28t17 23
q21 36 42 92t25 90q1 9 -2.5 32t0.5 28q4 13 22 30.5t22 22.5q19 26 42.5 84.5t27.5 96.5q1 8 -3 25.5t-2 26.5q2 8 9 18t18 23t17 21q8 12 16.5 30.5t15 35t16 36t19.5 32t26.5 23.5t36 11.5t47.5 -5.5l-1 -3q38 9 51 9h761q74 0 114 -56t18 -130l-274 -906
q-36 -119 -71.5 -153.5t-128.5 -34.5h-869q-27 0 -38 -15q-11 -16 -1 -43q24 -70 144 -70h923q29 0 56 15.5t35 41.5l300 987q7 22 5 57q38 -15 59 -43zM575 1056q-4 -13 2 -22.5t20 -9.5h608q13 0 25.5 9.5t16.5 22.5l21 64q4 13 -2 22.5t-20 9.5h-608q-13 0 -25.5 -9.5
t-16.5 -22.5zM492 800q-4 -13 2 -22.5t20 -9.5h608q13 0 25.5 9.5t16.5 22.5l21 64q4 13 -2 22.5t-20 9.5h-608q-13 0 -25.5 -9.5t-16.5 -22.5z" />
    <glyph glyph-name="bookmark" unicode="&#xf02e;" horiz-adv-x="1280" 
d="M1164 1408q23 0 44 -9q33 -13 52.5 -41t19.5 -62v-1289q0 -34 -19.5 -62t-52.5 -41q-19 -8 -44 -8q-48 0 -83 32l-441 424l-441 -424q-36 -33 -83 -33q-23 0 -44 9q-33 13 -52.5 41t-19.5 62v1289q0 34 19.5 62t52.5 41q21 9 44 9h1048z" />
    <glyph glyph-name="print" unicode="&#xf02f;" horiz-adv-x="1664" 
d="M384 0h896v256h-896v-256zM384 640h896v384h-160q-40 0 -68 28t-28 68v160h-640v-640zM1536 576q0 26 -19 45t-45 19t-45 -19t-19 -45t19 -45t45 -19t45 19t19 45zM1664 576v-416q0 -13 -9.5 -22.5t-22.5 -9.5h-224v-160q0 -40 -28 -68t-68 -28h-960q-40 0 -68 28t-28 68
v160h-224q-13 0 -22.5 9.5t-9.5 22.5v416q0 79 56.5 135.5t135.5 56.5h64v544q0 40 28 68t68 28h672q40 0 88 -20t76 -48l152 -152q28 -28 48 -76t20 -88v-256h64q79 0 135.5 -56.5t56.5 -135.5z" />
    <glyph glyph-name="camera" unicode="&#xf030;" horiz-adv-x="1920" 
d="M960 864q119 0 203.5 -84.5t84.5 -203.5t-84.5 -203.5t-203.5 -84.5t-203.5 84.5t-84.5 203.5t84.5 203.5t203.5 84.5zM1664 1280q106 0 181 -75t75 -181v-896q0 -106 -75 -181t-181 -75h-1408q-106 0 -181 75t-75 181v896q0 106 75 181t181 75h224l51 136
q19 49 69.5 84.5t103.5 35.5h512q53 0 103.5 -35.5t69.5 -84.5l51 -136h224zM960 128q185 0 316.5 131.5t131.5 316.5t-131.5 316.5t-316.5 131.5t-316.5 -131.5t-131.5 -316.5t131.5 -316.5t316.5 -131.5z" />
    <glyph glyph-name="font" unicode="&#xf031;" horiz-adv-x="1664" 
d="M725 977l-170 -450q33 0 136.5 -2t160.5 -2q19 0 57 2q-87 253 -184 452zM0 -128l2 79q23 7 56 12.5t57 10.5t49.5 14.5t44.5 29t31 50.5l237 616l280 724h75h53q8 -14 11 -21l205 -480q33 -78 106 -257.5t114 -274.5q15 -34 58 -144.5t72 -168.5q20 -45 35 -57
q19 -15 88 -29.5t84 -20.5q6 -38 6 -57q0 -5 -0.5 -13.5t-0.5 -12.5q-63 0 -190 8t-191 8q-76 0 -215 -7t-178 -8q0 43 4 78l131 28q1 0 12.5 2.5t15.5 3.5t14.5 4.5t15 6.5t11 8t9 11t2.5 14q0 16 -31 96.5t-72 177.5t-42 100l-450 2q-26 -58 -76.5 -195.5t-50.5 -162.5
q0 -22 14 -37.5t43.5 -24.5t48.5 -13.5t57 -8.5t41 -4q1 -19 1 -58q0 -9 -2 -27q-58 0 -174.5 10t-174.5 10q-8 0 -26.5 -4t-21.5 -4q-80 -14 -188 -14z" />
    <glyph glyph-name="bold" unicode="&#xf032;" horiz-adv-x="1408" 
d="M555 15q74 -32 140 -32q376 0 376 335q0 114 -41 180q-27 44 -61.5 74t-67.5 46.5t-80.5 25t-84 10.5t-94.5 2q-73 0 -101 -10q0 -53 -0.5 -159t-0.5 -158q0 -8 -1 -67.5t-0.5 -96.5t4.5 -83.5t12 -66.5zM541 761q42 -7 109 -7q82 0 143 13t110 44.5t74.5 89.5t25.5 142
q0 70 -29 122.5t-79 82t-108 43.5t-124 14q-50 0 -130 -13q0 -50 4 -151t4 -152q0 -27 -0.5 -80t-0.5 -79q0 -46 1 -69zM0 -128l2 94q15 4 85 16t106 27q7 12 12.5 27t8.5 33.5t5.5 32.5t3 37.5t0.5 34v35.5v30q0 982 -22 1025q-4 8 -22 14.5t-44.5 11t-49.5 7t-48.5 4.5
t-30.5 3l-4 83q98 2 340 11.5t373 9.5q23 0 68 -0.5t68 -0.5q70 0 136.5 -13t128.5 -42t108 -71t74 -104.5t28 -137.5q0 -52 -16.5 -95.5t-39 -72t-64.5 -57.5t-73 -45t-84 -40q154 -35 256.5 -134t102.5 -248q0 -100 -35 -179.5t-93.5 -130.5t-138 -85.5t-163.5 -48.5
t-176 -14q-44 0 -132 3t-132 3q-106 0 -307 -11t-231 -12z" />
    <glyph glyph-name="italic" unicode="&#xf033;" horiz-adv-x="1024" 
d="M0 -126l17 85q22 7 61.5 16.5t72 19t59.5 23.5q28 35 41 101q1 7 62 289t114 543.5t52 296.5v25q-24 13 -54.5 18.5t-69.5 8t-58 5.5l19 103q33 -2 120 -6.5t149.5 -7t120.5 -2.5q48 0 98.5 2.5t121 7t98.5 6.5q-5 -39 -19 -89q-30 -10 -101.5 -28.5t-108.5 -33.5
q-8 -19 -14 -42.5t-9 -40t-7.5 -45.5t-6.5 -42q-27 -148 -87.5 -419.5t-77.5 -355.5q-2 -9 -13 -58t-20 -90t-16 -83.5t-6 -57.5l1 -18q17 -4 185 -31q-3 -44 -16 -99q-11 0 -32.5 -1.5t-32.5 -1.5q-29 0 -87 10t-86 10q-138 2 -206 2q-51 0 -143 -9t-121 -11z" />
    <glyph glyph-name="text_height" unicode="&#xf034;" horiz-adv-x="1792" 
d="M1744 128q33 0 42 -18.5t-11 -44.5l-126 -162q-20 -26 -49 -26t-49 26l-126 162q-20 26 -11 44.5t42 18.5h80v1024h-80q-33 0 -42 18.5t11 44.5l126 162q20 26 49 26t49 -26l126 -162q20 -26 11 -44.5t-42 -18.5h-80v-1024h80zM81 1407l54 -27q12 -5 211 -5q44 0 132 2
t132 2q36 0 107.5 -0.5t107.5 -0.5h293q6 0 21 -0.5t20.5 0t16 3t17.5 9t15 17.5l42 1q4 0 14 -0.5t14 -0.5q2 -112 2 -336q0 -80 -5 -109q-39 -14 -68 -18q-25 44 -54 128q-3 9 -11 48t-14.5 73.5t-7.5 35.5q-6 8 -12 12.5t-15.5 6t-13 2.5t-18 0.5t-16.5 -0.5
q-17 0 -66.5 0.5t-74.5 0.5t-64 -2t-71 -6q-9 -81 -8 -136q0 -94 2 -388t2 -455q0 -16 -2.5 -71.5t0 -91.5t12.5 -69q40 -21 124 -42.5t120 -37.5q5 -40 5 -50q0 -14 -3 -29l-34 -1q-76 -2 -218 8t-207 10q-50 0 -151 -9t-152 -9q-3 51 -3 52v9q17 27 61.5 43t98.5 29t78 27
q19 42 19 383q0 101 -3 303t-3 303v117q0 2 0.5 15.5t0.5 25t-1 25.5t-3 24t-5 14q-11 12 -162 12q-33 0 -93 -12t-80 -26q-19 -13 -34 -72.5t-31.5 -111t-42.5 -53.5q-42 26 -56 44v383z" />
    <glyph glyph-name="text_width" unicode="&#xf035;" 
d="M81 1407l54 -27q12 -5 211 -5q44 0 132 2t132 2q70 0 246.5 1t304.5 0.5t247 -4.5q33 -1 56 31l42 1q4 0 14 -0.5t14 -0.5q2 -112 2 -336q0 -80 -5 -109q-39 -14 -68 -18q-25 44 -54 128q-3 9 -11 47.5t-15 73.5t-7 36q-10 13 -27 19q-5 2 -66 2q-30 0 -93 1t-103 1
t-94 -2t-96 -7q-9 -81 -8 -136l1 -152v52q0 -55 1 -154t1.5 -180t0.5 -153q0 -16 -2.5 -71.5t0 -91.5t12.5 -69q40 -21 124 -42.5t120 -37.5q5 -40 5 -50q0 -14 -3 -29l-34 -1q-76 -2 -218 8t-207 10q-50 0 -151 -9t-152 -9q-3 51 -3 52v9q17 27 61.5 43t98.5 29t78 27
q7 16 11.5 74t6 145.5t1.5 155t-0.5 153.5t-0.5 89q0 7 -2.5 21.5t-2.5 22.5q0 7 0.5 44t1 73t0 76.5t-3 67.5t-6.5 32q-11 12 -162 12q-41 0 -163 -13.5t-138 -24.5q-19 -12 -34 -71.5t-31.5 -111.5t-42.5 -54q-42 26 -56 44v383zM1310 125q12 0 42 -19.5t57.5 -41.5
t59.5 -49t36 -30q26 -21 26 -49t-26 -49q-4 -3 -36 -30t-59.5 -49t-57.5 -41.5t-42 -19.5q-13 0 -20.5 10.5t-10 28.5t-2.5 33.5t1.5 33t1.5 19.5h-1024q0 -2 1.5 -19.5t1.5 -33t-2.5 -33.5t-10 -28.5t-20.5 -10.5q-12 0 -42 19.5t-57.5 41.5t-59.5 49t-36 30q-26 21 -26 49
t26 49q4 3 36 30t59.5 49t57.5 41.5t42 19.5q13 0 20.5 -10.5t10 -28.5t2.5 -33.5t-1.5 -33t-1.5 -19.5h1024q0 2 -1.5 19.5t-1.5 33t2.5 33.5t10 28.5t20.5 10.5z" />
    <glyph glyph-name="align_left" unicode="&#xf036;" horiz-adv-x="1792" 
d="M1792 192v-128q0 -26 -19 -45t-45 -19h-1664q-26 0 -45 19t-19 45v128q0 26 19 45t45 19h1664q26 0 45 -19t19 -45zM1408 576v-128q0 -26 -19 -45t-45 -19h-1280q-26 0 -45 19t-19 45v128q0 26 19 45t45 19h1280q26 0 45 -19t19 -45zM1664 960v-128q0 -26 -19 -45
t-45 -19h-1536q-26 0 -45 19t-19 45v128q0 26 19 45t45 19h1536q26 0 45 -19t19 -45zM1280 1344v-128q0 -26 -19 -45t-45 -19h-1152q-26 0 -45 19t-19 45v128q0 26 19 45t45 19h1152q26 0 45 -19t19 -45z" />
    <glyph glyph-name="align_center" unicode="&#xf037;" horiz-adv-x="1792" 
d="M1792 192v-128q0 -26 -19 -45t-45 -19h-1664q-26 0 -45 19t-19 45v128q0 26 19 45t45 19h1664q26 0 45 -19t19 -45zM1408 576v-128q0 -26 -19 -45t-45 -19h-896q-26 0 -45 19t-19 45v128q0 26 19 45t45 19h896q26 0 45 -19t19 -45zM1664 960v-128q0 -26 -19 -45t-45 -19
h-1408q-26 0 -45 19t-19 45v128q0 26 19 45t45 19h1408q26 0 45 -19t19 -45zM1280 1344v-128q0 -26 -19 -45t-45 -19h-640q-26 0 -45 19t-19 45v128q0 26 19 45t45 19h640q26 0 45 -19t19 -45z" />
    <glyph glyph-name="align_right" unicode="&#xf038;" horiz-adv-x="1792" 
d="M1792 192v-128q0 -26 -19 -45t-45 -19h-1664q-26 0 -45 19t-19 45v128q0 26 19 45t45 19h1664q26 0 45 -19t19 -45zM1792 576v-128q0 -26 -19 -45t-45 -19h-1280q-26 0 -45 19t-19 45v128q0 26 19 45t45 19h1280q26 0 45 -19t19 -45zM1792 960v-128q0 -26 -19 -45
t-45 -19h-1536q-26 0 -45 19t-19 45v128q0 26 19 45t45 19h1536q26 0 45 -19t19 -45zM1792 1344v-128q0 -26 -19 -45t-45 -19h-1152q-26 0 -45 19t-19 45v128q0 26 19 45t45 19h1152q26 0 45 -19t19 -45z" />
    <glyph glyph-name="align_justify" unicode="&#xf039;" horiz-adv-x="1792" 
d="M1792 192v-128q0 -26 -19 -45t-45 -19h-1664q-26 0 -45 19t-19 45v128q0 26 19 45t45 19h1664q26 0 45 -19t19 -45zM1792 576v-128q0 -26 -19 -45t-45 -19h-1664q-26 0 -45 19t-19 45v128q0 26 19 45t45 19h1664q26 0 45 -19t19 -45zM1792 960v-128q0 -26 -19 -45
t-45 -19h-1664q-26 0 -45 19t-19 45v128q0 26 19 45t45 19h1664q26 0 45 -19t19 -45zM1792 1344v-128q0 -26 -19 -45t-45 -19h-1664q-26 0 -45 19t-19 45v128q0 26 19 45t45 19h1664q26 0 45 -19t19 -45z" />
    <glyph glyph-name="list" unicode="&#xf03a;" horiz-adv-x="1792" 
d="M256 224v-192q0 -13 -9.5 -22.5t-22.5 -9.5h-192q-13 0 -22.5 9.5t-9.5 22.5v192q0 13 9.5 22.5t22.5 9.5h192q13 0 22.5 -9.5t9.5 -22.5zM256 608v-192q0 -13 -9.5 -22.5t-22.5 -9.5h-192q-13 0 -22.5 9.5t-9.5 22.5v192q0 13 9.5 22.5t22.5 9.5h192q13 0 22.5 -9.5
t9.5 -22.5zM256 992v-192q0 -13 -9.5 -22.5t-22.5 -9.5h-192q-13 0 -22.5 9.5t-9.5 22.5v192q0 13 9.5 22.5t22.5 9.5h192q13 0 22.5 -9.5t9.5 -22.5zM1792 224v-192q0 -13 -9.5 -22.5t-22.5 -9.5h-1344q-13 0 -22.5 9.5t-9.5 22.5v192q0 13 9.5 22.5t22.5 9.5h1344
q13 0 22.5 -9.5t9.5 -22.5zM256 1376v-192q0 -13 -9.5 -22.5t-22.5 -9.5h-192q-13 0 -22.5 9.5t-9.5 22.5v192q0 13 9.5 22.5t22.5 9.5h192q13 0 22.5 -9.5t9.5 -22.5zM1792 608v-192q0 -13 -9.5 -22.5t-22.5 -9.5h-1344q-13 0 -22.5 9.5t-9.5 22.5v192q0 13 9.5 22.5
t22.5 9.5h1344q13 0 22.5 -9.5t9.5 -22.5zM1792 992v-192q0 -13 -9.5 -22.5t-22.5 -9.5h-1344q-13 0 -22.5 9.5t-9.5 22.5v192q0 13 9.5 22.5t22.5 9.5h1344q13 0 22.5 -9.5t9.5 -22.5zM1792 1376v-192q0 -13 -9.5 -22.5t-22.5 -9.5h-1344q-13 0 -22.5 9.5t-9.5 22.5v192
q0 13 9.5 22.5t22.5 9.5h1344q13 0 22.5 -9.5t9.5 -22.5z" />
    <glyph glyph-name="indent_left" unicode="&#xf03b;" horiz-adv-x="1792" 
d="M384 992v-576q0 -13 -9.5 -22.5t-22.5 -9.5q-14 0 -23 9l-288 288q-9 9 -9 23t9 23l288 288q9 9 23 9q13 0 22.5 -9.5t9.5 -22.5zM1792 224v-192q0 -13 -9.5 -22.5t-22.5 -9.5h-1728q-13 0 -22.5 9.5t-9.5 22.5v192q0 13 9.5 22.5t22.5 9.5h1728q13 0 22.5 -9.5
t9.5 -22.5zM1792 608v-192q0 -13 -9.5 -22.5t-22.5 -9.5h-1088q-13 0 -22.5 9.5t-9.5 22.5v192q0 13 9.5 22.5t22.5 9.5h1088q13 0 22.5 -9.5t9.5 -22.5zM1792 992v-192q0 -13 -9.5 -22.5t-22.5 -9.5h-1088q-13 0 -22.5 9.5t-9.5 22.5v192q0 13 9.5 22.5t22.5 9.5h1088
q13 0 22.5 -9.5t9.5 -22.5zM1792 1376v-192q0 -13 -9.5 -22.5t-22.5 -9.5h-1728q-13 0 -22.5 9.5t-9.5 22.5v192q0 13 9.5 22.5t22.5 9.5h1728q13 0 22.5 -9.5t9.5 -22.5z" />
    <glyph glyph-name="indent_right" unicode="&#xf03c;" horiz-adv-x="1792" 
d="M352 704q0 -14 -9 -23l-288 -288q-9 -9 -23 -9q-13 0 -22.5 9.5t-9.5 22.5v576q0 13 9.5 22.5t22.5 9.5q14 0 23 -9l288 -288q9 -9 9 -23zM1792 224v-192q0 -13 -9.5 -22.5t-22.5 -9.5h-1728q-13 0 -22.5 9.5t-9.5 22.5v192q0 13 9.5 22.5t22.5 9.5h1728q13 0 22.5 -9.5
t9.5 -22.5zM1792 608v-192q0 -13 -9.5 -22.5t-22.5 -9.5h-1088q-13 0 -22.5 9.5t-9.5 22.5v192q0 13 9.5 22.5t22.5 9.5h1088q13 0 22.5 -9.5t9.5 -22.5zM1792 992v-192q0 -13 -9.5 -22.5t-22.5 -9.5h-1088q-13 0 -22.5 9.5t-9.5 22.5v192q0 13 9.5 22.5t22.5 9.5h1088
q13 0 22.5 -9.5t9.5 -22.5zM1792 1376v-192q0 -13 -9.5 -22.5t-22.5 -9.5h-1728q-13 0 -22.5 9.5t-9.5 22.5v192q0 13 9.5 22.5t22.5 9.5h1728q13 0 22.5 -9.5t9.5 -22.5z" />
    <glyph glyph-name="facetime_video" unicode="&#xf03d;" horiz-adv-x="1792" 
d="M1792 1184v-1088q0 -42 -39 -59q-13 -5 -25 -5q-27 0 -45 19l-403 403v-166q0 -119 -84.5 -203.5t-203.5 -84.5h-704q-119 0 -203.5 84.5t-84.5 203.5v704q0 119 84.5 203.5t203.5 84.5h704q119 0 203.5 -84.5t84.5 -203.5v-165l403 402q18 19 45 19q12 0 25 -5
q39 -17 39 -59z" />
    <glyph glyph-name="picture" unicode="&#xf03e;" horiz-adv-x="1920" 
d="M640 960q0 -80 -56 -136t-136 -56t-136 56t-56 136t56 136t136 56t136 -56t56 -136zM1664 576v-448h-1408v192l320 320l160 -160l512 512zM1760 1280h-1600q-13 0 -22.5 -9.5t-9.5 -22.5v-1216q0 -13 9.5 -22.5t22.5 -9.5h1600q13 0 22.5 9.5t9.5 22.5v1216
q0 13 -9.5 22.5t-22.5 9.5zM1920 1248v-1216q0 -66 -47 -113t-113 -47h-1600q-66 0 -113 47t-47 113v1216q0 66 47 113t113 47h1600q66 0 113 -47t47 -113z" />
    <glyph glyph-name="pencil" unicode="&#xf040;" 
d="M363 0l91 91l-235 235l-91 -91v-107h128v-128h107zM886 928q0 22 -22 22q-10 0 -17 -7l-542 -542q-7 -7 -7 -17q0 -22 22 -22q10 0 17 7l542 542q7 7 7 17zM832 1120l416 -416l-832 -832h-416v416zM1515 1024q0 -53 -37 -90l-166 -166l-416 416l166 165q36 38 90 38
q53 0 91 -38l235 -234q37 -39 37 -91z" />
    <glyph glyph-name="map_marker" unicode="&#xf041;" horiz-adv-x="1024" 
d="M768 896q0 106 -75 181t-181 75t-181 -75t-75 -181t75 -181t181 -75t181 75t75 181zM1024 896q0 -109 -33 -179l-364 -774q-16 -33 -47.5 -52t-67.5 -19t-67.5 19t-46.5 52l-365 774q-33 70 -33 179q0 212 150 362t362 150t362 -150t150 -362z" />
    <glyph glyph-name="adjust" unicode="&#xf042;" 
d="M768 96v1088q-148 0 -273 -73t-198 -198t-73 -273t73 -273t198 -198t273 -73zM1536 640q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="tint" unicode="&#xf043;" horiz-adv-x="1024" 
d="M512 384q0 36 -20 69q-1 1 -15.5 22.5t-25.5 38t-25 44t-21 50.5q-4 16 -21 16t-21 -16q-7 -23 -21 -50.5t-25 -44t-25.5 -38t-15.5 -22.5q-20 -33 -20 -69q0 -53 37.5 -90.5t90.5 -37.5t90.5 37.5t37.5 90.5zM1024 512q0 -212 -150 -362t-362 -150t-362 150t-150 362
q0 145 81 275q6 9 62.5 90.5t101 151t99.5 178t83 201.5q9 30 34 47t51 17t51.5 -17t33.5 -47q28 -93 83 -201.5t99.5 -178t101 -151t62.5 -90.5q81 -127 81 -275z" />
    <glyph glyph-name="edit" unicode="&#xf044;" horiz-adv-x="1792" 
d="M888 352l116 116l-152 152l-116 -116v-56h96v-96h56zM1328 1072q-16 16 -33 -1l-350 -350q-17 -17 -1 -33t33 1l350 350q17 17 1 33zM1408 478v-190q0 -119 -84.5 -203.5t-203.5 -84.5h-832q-119 0 -203.5 84.5t-84.5 203.5v832q0 119 84.5 203.5t203.5 84.5h832
q63 0 117 -25q15 -7 18 -23q3 -17 -9 -29l-49 -49q-14 -14 -32 -8q-23 6 -45 6h-832q-66 0 -113 -47t-47 -113v-832q0 -66 47 -113t113 -47h832q66 0 113 47t47 113v126q0 13 9 22l64 64q15 15 35 7t20 -29zM1312 1216l288 -288l-672 -672h-288v288zM1756 1084l-92 -92
l-288 288l92 92q28 28 68 28t68 -28l152 -152q28 -28 28 -68t-28 -68z" />
    <glyph glyph-name="share" unicode="&#xf045;" horiz-adv-x="1664" 
d="M1408 547v-259q0 -119 -84.5 -203.5t-203.5 -84.5h-832q-119 0 -203.5 84.5t-84.5 203.5v832q0 119 84.5 203.5t203.5 84.5h255v0q13 0 22.5 -9.5t9.5 -22.5q0 -27 -26 -32q-77 -26 -133 -60q-10 -4 -16 -4h-112q-66 0 -113 -47t-47 -113v-832q0 -66 47 -113t113 -47h832
q66 0 113 47t47 113v214q0 19 18 29q28 13 54 37q16 16 35 8q21 -9 21 -29zM1645 1043l-384 -384q-18 -19 -45 -19q-12 0 -25 5q-39 17 -39 59v192h-160q-323 0 -438 -131q-119 -137 -74 -473q3 -23 -20 -34q-8 -2 -12 -2q-16 0 -26 13q-10 14 -21 31t-39.5 68.5t-49.5 99.5
t-38.5 114t-17.5 122q0 49 3.5 91t14 90t28 88t47 81.5t68.5 74t94.5 61.5t124.5 48.5t159.5 30.5t196.5 11h160v192q0 42 39 59q13 5 25 5q26 0 45 -19l384 -384q19 -19 19 -45t-19 -45z" />
    <glyph glyph-name="check" unicode="&#xf046;" horiz-adv-x="1664" 
d="M1408 606v-318q0 -119 -84.5 -203.5t-203.5 -84.5h-832q-119 0 -203.5 84.5t-84.5 203.5v832q0 119 84.5 203.5t203.5 84.5h832q63 0 117 -25q15 -7 18 -23q3 -17 -9 -29l-49 -49q-10 -10 -23 -10q-3 0 -9 2q-23 6 -45 6h-832q-66 0 -113 -47t-47 -113v-832
q0 -66 47 -113t113 -47h832q66 0 113 47t47 113v254q0 13 9 22l64 64q10 10 23 10q6 0 12 -3q20 -8 20 -29zM1639 1095l-814 -814q-24 -24 -57 -24t-57 24l-430 430q-24 24 -24 57t24 57l110 110q24 24 57 24t57 -24l263 -263l647 647q24 24 57 24t57 -24l110 -110
q24 -24 24 -57t-24 -57z" />
    <glyph glyph-name="move" unicode="&#xf047;" horiz-adv-x="1792" 
d="M1792 640q0 -26 -19 -45l-256 -256q-19 -19 -45 -19t-45 19t-19 45v128h-384v-384h128q26 0 45 -19t19 -45t-19 -45l-256 -256q-19 -19 -45 -19t-45 19l-256 256q-19 19 -19 45t19 45t45 19h128v384h-384v-128q0 -26 -19 -45t-45 -19t-45 19l-256 256q-19 19 -19 45
t19 45l256 256q19 19 45 19t45 -19t19 -45v-128h384v384h-128q-26 0 -45 19t-19 45t19 45l256 256q19 19 45 19t45 -19l256 -256q19 -19 19 -45t-19 -45t-45 -19h-128v-384h384v128q0 26 19 45t45 19t45 -19l256 -256q19 -19 19 -45z" />
    <glyph glyph-name="step_backward" unicode="&#xf048;" horiz-adv-x="1024" 
d="M979 1395q19 19 32 13t13 -32v-1472q0 -26 -13 -32t-32 13l-710 710q-9 9 -13 19v-678q0 -26 -19 -45t-45 -19h-128q-26 0 -45 19t-19 45v1408q0 26 19 45t45 19h128q26 0 45 -19t19 -45v-678q4 10 13 19z" />
    <glyph glyph-name="fast_backward" unicode="&#xf049;" horiz-adv-x="1792" 
d="M1747 1395q19 19 32 13t13 -32v-1472q0 -26 -13 -32t-32 13l-710 710q-9 9 -13 19v-710q0 -26 -13 -32t-32 13l-710 710q-9 9 -13 19v-678q0 -26 -19 -45t-45 -19h-128q-26 0 -45 19t-19 45v1408q0 26 19 45t45 19h128q26 0 45 -19t19 -45v-678q4 10 13 19l710 710
q19 19 32 13t13 -32v-710q4 10 13 19z" />
    <glyph glyph-name="backward" unicode="&#xf04a;" horiz-adv-x="1664" 
d="M1619 1395q19 19 32 13t13 -32v-1472q0 -26 -13 -32t-32 13l-710 710q-9 9 -13 19v-710q0 -26 -13 -32t-32 13l-710 710q-19 19 -19 45t19 45l710 710q19 19 32 13t13 -32v-710q4 10 13 19z" />
    <glyph glyph-name="play" unicode="&#xf04b;" horiz-adv-x="1408" 
d="M1384 609l-1328 -738q-23 -13 -39.5 -3t-16.5 36v1472q0 26 16.5 36t39.5 -3l1328 -738q23 -13 23 -31t-23 -31z" />
    <glyph glyph-name="pause" unicode="&#xf04c;" 
d="M1536 1344v-1408q0 -26 -19 -45t-45 -19h-512q-26 0 -45 19t-19 45v1408q0 26 19 45t45 19h512q26 0 45 -19t19 -45zM640 1344v-1408q0 -26 -19 -45t-45 -19h-512q-26 0 -45 19t-19 45v1408q0 26 19 45t45 19h512q26 0 45 -19t19 -45z" />
    <glyph glyph-name="stop" unicode="&#xf04d;" 
d="M1536 1344v-1408q0 -26 -19 -45t-45 -19h-1408q-26 0 -45 19t-19 45v1408q0 26 19 45t45 19h1408q26 0 45 -19t19 -45z" />
    <glyph glyph-name="forward" unicode="&#xf04e;" horiz-adv-x="1664" 
d="M45 -115q-19 -19 -32 -13t-13 32v1472q0 26 13 32t32 -13l710 -710q9 -9 13 -19v710q0 26 13 32t32 -13l710 -710q19 -19 19 -45t-19 -45l-710 -710q-19 -19 -32 -13t-13 32v710q-4 -10 -13 -19z" />
    <glyph glyph-name="fast_forward" unicode="&#xf050;" horiz-adv-x="1792" 
d="M45 -115q-19 -19 -32 -13t-13 32v1472q0 26 13 32t32 -13l710 -710q9 -9 13 -19v710q0 26 13 32t32 -13l710 -710q9 -9 13 -19v678q0 26 19 45t45 19h128q26 0 45 -19t19 -45v-1408q0 -26 -19 -45t-45 -19h-128q-26 0 -45 19t-19 45v678q-4 -10 -13 -19l-710 -710
q-19 -19 -32 -13t-13 32v710q-4 -10 -13 -19z" />
    <glyph glyph-name="step_forward" unicode="&#xf051;" horiz-adv-x="1024" 
d="M45 -115q-19 -19 -32 -13t-13 32v1472q0 26 13 32t32 -13l710 -710q9 -9 13 -19v678q0 26 19 45t45 19h128q26 0 45 -19t19 -45v-1408q0 -26 -19 -45t-45 -19h-128q-26 0 -45 19t-19 45v678q-4 -10 -13 -19z" />
    <glyph glyph-name="eject" unicode="&#xf052;" horiz-adv-x="1538" 
d="M14 557l710 710q19 19 45 19t45 -19l710 -710q19 -19 13 -32t-32 -13h-1472q-26 0 -32 13t13 32zM1473 0h-1408q-26 0 -45 19t-19 45v256q0 26 19 45t45 19h1408q26 0 45 -19t19 -45v-256q0 -26 -19 -45t-45 -19z" />
    <glyph glyph-name="chevron_left" unicode="&#xf053;" horiz-adv-x="1280" 
d="M1171 1235l-531 -531l531 -531q19 -19 19 -45t-19 -45l-166 -166q-19 -19 -45 -19t-45 19l-742 742q-19 19 -19 45t19 45l742 742q19 19 45 19t45 -19l166 -166q19 -19 19 -45t-19 -45z" />
    <glyph glyph-name="chevron_right" unicode="&#xf054;" horiz-adv-x="1280" 
d="M1107 659l-742 -742q-19 -19 -45 -19t-45 19l-166 166q-19 19 -19 45t19 45l531 531l-531 531q-19 19 -19 45t19 45l166 166q19 19 45 19t45 -19l742 -742q19 -19 19 -45t-19 -45z" />
    <glyph glyph-name="plus_sign" unicode="&#xf055;" 
d="M1216 576v128q0 26 -19 45t-45 19h-256v256q0 26 -19 45t-45 19h-128q-26 0 -45 -19t-19 -45v-256h-256q-26 0 -45 -19t-19 -45v-128q0 -26 19 -45t45 -19h256v-256q0 -26 19 -45t45 -19h128q26 0 45 19t19 45v256h256q26 0 45 19t19 45zM1536 640q0 -209 -103 -385.5
t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="minus_sign" unicode="&#xf056;" 
d="M1216 576v128q0 26 -19 45t-45 19h-768q-26 0 -45 -19t-19 -45v-128q0 -26 19 -45t45 -19h768q26 0 45 19t19 45zM1536 640q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5
t103 -385.5z" />
    <glyph glyph-name="remove_sign" unicode="&#xf057;" 
d="M1149 414q0 26 -19 45l-181 181l181 181q19 19 19 45q0 27 -19 46l-90 90q-19 19 -46 19q-26 0 -45 -19l-181 -181l-181 181q-19 19 -45 19q-27 0 -46 -19l-90 -90q-19 -19 -19 -46q0 -26 19 -45l181 -181l-181 -181q-19 -19 -19 -45q0 -27 19 -46l90 -90q19 -19 46 -19
q26 0 45 19l181 181l181 -181q19 -19 45 -19q27 0 46 19l90 90q19 19 19 46zM1536 640q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="ok_sign" unicode="&#xf058;" 
d="M1284 802q0 28 -18 46l-91 90q-19 19 -45 19t-45 -19l-408 -407l-226 226q-19 19 -45 19t-45 -19l-91 -90q-18 -18 -18 -46q0 -27 18 -45l362 -362q19 -19 45 -19q27 0 46 19l543 543q18 18 18 45zM1536 640q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103
t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="question_sign" unicode="&#xf059;" 
d="M896 160v192q0 14 -9 23t-23 9h-192q-14 0 -23 -9t-9 -23v-192q0 -14 9 -23t23 -9h192q14 0 23 9t9 23zM1152 832q0 88 -55.5 163t-138.5 116t-170 41q-243 0 -371 -213q-15 -24 8 -42l132 -100q7 -6 19 -6q16 0 25 12q53 68 86 92q34 24 86 24q48 0 85.5 -26t37.5 -59
q0 -38 -20 -61t-68 -45q-63 -28 -115.5 -86.5t-52.5 -125.5v-36q0 -14 9 -23t23 -9h192q14 0 23 9t9 23q0 19 21.5 49.5t54.5 49.5q32 18 49 28.5t46 35t44.5 48t28 60.5t12.5 81zM1536 640q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5
t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="info_sign" unicode="&#xf05a;" 
d="M1024 160v160q0 14 -9 23t-23 9h-96v512q0 14 -9 23t-23 9h-320q-14 0 -23 -9t-9 -23v-160q0 -14 9 -23t23 -9h96v-320h-96q-14 0 -23 -9t-9 -23v-160q0 -14 9 -23t23 -9h448q14 0 23 9t9 23zM896 1056v160q0 14 -9 23t-23 9h-192q-14 0 -23 -9t-9 -23v-160q0 -14 9 -23
t23 -9h192q14 0 23 9t9 23zM1536 640q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="screenshot" unicode="&#xf05b;" 
d="M1197 512h-109q-26 0 -45 19t-19 45v128q0 26 19 45t45 19h109q-32 108 -112.5 188.5t-188.5 112.5v-109q0 -26 -19 -45t-45 -19h-128q-26 0 -45 19t-19 45v109q-108 -32 -188.5 -112.5t-112.5 -188.5h109q26 0 45 -19t19 -45v-128q0 -26 -19 -45t-45 -19h-109
q32 -108 112.5 -188.5t188.5 -112.5v109q0 26 19 45t45 19h128q26 0 45 -19t19 -45v-109q108 32 188.5 112.5t112.5 188.5zM1536 704v-128q0 -26 -19 -45t-45 -19h-143q-37 -161 -154.5 -278.5t-278.5 -154.5v-143q0 -26 -19 -45t-45 -19h-128q-26 0 -45 19t-19 45v143
q-161 37 -278.5 154.5t-154.5 278.5h-143q-26 0 -45 19t-19 45v128q0 26 19 45t45 19h143q37 161 154.5 278.5t278.5 154.5v143q0 26 19 45t45 19h128q26 0 45 -19t19 -45v-143q161 -37 278.5 -154.5t154.5 -278.5h143q26 0 45 -19t19 -45z" />
    <glyph glyph-name="remove_circle" unicode="&#xf05c;" 
d="M1097 457l-146 -146q-10 -10 -23 -10t-23 10l-137 137l-137 -137q-10 -10 -23 -10t-23 10l-146 146q-10 10 -10 23t10 23l137 137l-137 137q-10 10 -10 23t10 23l146 146q10 10 23 10t23 -10l137 -137l137 137q10 10 23 10t23 -10l146 -146q10 -10 10 -23t-10 -23
l-137 -137l137 -137q10 -10 10 -23t-10 -23zM1312 640q0 148 -73 273t-198 198t-273 73t-273 -73t-198 -198t-73 -273t73 -273t198 -198t273 -73t273 73t198 198t73 273zM1536 640q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5
t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="ok_circle" unicode="&#xf05d;" 
d="M1171 723l-422 -422q-19 -19 -45 -19t-45 19l-294 294q-19 19 -19 45t19 45l102 102q19 19 45 19t45 -19l147 -147l275 275q19 19 45 19t45 -19l102 -102q19 -19 19 -45t-19 -45zM1312 640q0 148 -73 273t-198 198t-273 73t-273 -73t-198 -198t-73 -273t73 -273t198 -198
t273 -73t273 73t198 198t73 273zM1536 640q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="ban_circle" unicode="&#xf05e;" 
d="M1312 643q0 161 -87 295l-754 -753q137 -89 297 -89q111 0 211.5 43.5t173.5 116.5t116 174.5t43 212.5zM313 344l755 754q-135 91 -300 91q-148 0 -273 -73t-198 -199t-73 -274q0 -162 89 -299zM1536 643q0 -157 -61 -300t-163.5 -246t-245 -164t-298.5 -61t-298.5 61
t-245 164t-163.5 246t-61 300t61 299.5t163.5 245.5t245 164t298.5 61t298.5 -61t245 -164t163.5 -245.5t61 -299.5z" />
    <glyph glyph-name="arrow_left" unicode="&#xf060;" 
d="M1536 640v-128q0 -53 -32.5 -90.5t-84.5 -37.5h-704l293 -294q38 -36 38 -90t-38 -90l-75 -76q-37 -37 -90 -37q-52 0 -91 37l-651 652q-37 37 -37 90q0 52 37 91l651 650q38 38 91 38q52 0 90 -38l75 -74q38 -38 38 -91t-38 -91l-293 -293h704q52 0 84.5 -37.5
t32.5 -90.5z" />
    <glyph glyph-name="arrow_right" unicode="&#xf061;" 
d="M1472 576q0 -54 -37 -91l-651 -651q-39 -37 -91 -37q-51 0 -90 37l-75 75q-38 38 -38 91t38 91l293 293h-704q-52 0 -84.5 37.5t-32.5 90.5v128q0 53 32.5 90.5t84.5 37.5h704l-293 294q-38 36 -38 90t38 90l75 75q38 38 90 38q53 0 91 -38l651 -651q37 -35 37 -90z" />
    <glyph glyph-name="arrow_up" unicode="&#xf062;" horiz-adv-x="1664" 
d="M1611 565q0 -51 -37 -90l-75 -75q-38 -38 -91 -38q-54 0 -90 38l-294 293v-704q0 -52 -37.5 -84.5t-90.5 -32.5h-128q-53 0 -90.5 32.5t-37.5 84.5v704l-294 -293q-36 -38 -90 -38t-90 38l-75 75q-38 38 -38 90q0 53 38 91l651 651q35 37 90 37q54 0 91 -37l651 -651
q37 -39 37 -91z" />
    <glyph glyph-name="arrow_down" unicode="&#xf063;" horiz-adv-x="1664" 
d="M1611 704q0 -53 -37 -90l-651 -652q-39 -37 -91 -37q-53 0 -90 37l-651 652q-38 36 -38 90q0 53 38 91l74 75q39 37 91 37q53 0 90 -37l294 -294v704q0 52 38 90t90 38h128q52 0 90 -38t38 -90v-704l294 294q37 37 90 37q52 0 91 -37l75 -75q37 -39 37 -91z" />
    <glyph glyph-name="share_alt" unicode="&#xf064;" horiz-adv-x="1792" 
d="M1792 896q0 -26 -19 -45l-512 -512q-19 -19 -45 -19t-45 19t-19 45v256h-224q-98 0 -175.5 -6t-154 -21.5t-133 -42.5t-105.5 -69.5t-80 -101t-48.5 -138.5t-17.5 -181q0 -55 5 -123q0 -6 2.5 -23.5t2.5 -26.5q0 -15 -8.5 -25t-23.5 -10q-16 0 -28 17q-7 9 -13 22
t-13.5 30t-10.5 24q-127 285 -127 451q0 199 53 333q162 403 875 403h224v256q0 26 19 45t45 19t45 -19l512 -512q19 -19 19 -45z" />
    <glyph glyph-name="resize_full" unicode="&#xf065;" 
d="M755 480q0 -13 -10 -23l-332 -332l144 -144q19 -19 19 -45t-19 -45t-45 -19h-448q-26 0 -45 19t-19 45v448q0 26 19 45t45 19t45 -19l144 -144l332 332q10 10 23 10t23 -10l114 -114q10 -10 10 -23zM1536 1344v-448q0 -26 -19 -45t-45 -19t-45 19l-144 144l-332 -332
q-10 -10 -23 -10t-23 10l-114 114q-10 10 -10 23t10 23l332 332l-144 144q-19 19 -19 45t19 45t45 19h448q26 0 45 -19t19 -45z" />
    <glyph glyph-name="resize_small" unicode="&#xf066;" 
d="M768 576v-448q0 -26 -19 -45t-45 -19t-45 19l-144 144l-332 -332q-10 -10 -23 -10t-23 10l-114 114q-10 10 -10 23t10 23l332 332l-144 144q-19 19 -19 45t19 45t45 19h448q26 0 45 -19t19 -45zM1523 1248q0 -13 -10 -23l-332 -332l144 -144q19 -19 19 -45t-19 -45
t-45 -19h-448q-26 0 -45 19t-19 45v448q0 26 19 45t45 19t45 -19l144 -144l332 332q10 10 23 10t23 -10l114 -114q10 -10 10 -23z" />
    <glyph glyph-name="plus" unicode="&#xf067;" horiz-adv-x="1408" 
d="M1408 800v-192q0 -40 -28 -68t-68 -28h-416v-416q0 -40 -28 -68t-68 -28h-192q-40 0 -68 28t-28 68v416h-416q-40 0 -68 28t-28 68v192q0 40 28 68t68 28h416v416q0 40 28 68t68 28h192q40 0 68 -28t28 -68v-416h416q40 0 68 -28t28 -68z" />
    <glyph glyph-name="minus" unicode="&#xf068;" horiz-adv-x="1408" 
d="M1408 800v-192q0 -40 -28 -68t-68 -28h-1216q-40 0 -68 28t-28 68v192q0 40 28 68t68 28h1216q40 0 68 -28t28 -68z" />
    <glyph glyph-name="asterisk" unicode="&#xf069;" horiz-adv-x="1664" 
d="M1482 486q46 -26 59.5 -77.5t-12.5 -97.5l-64 -110q-26 -46 -77.5 -59.5t-97.5 12.5l-266 153v-307q0 -52 -38 -90t-90 -38h-128q-52 0 -90 38t-38 90v307l-266 -153q-46 -26 -97.5 -12.5t-77.5 59.5l-64 110q-26 46 -12.5 97.5t59.5 77.5l266 154l-266 154
q-46 26 -59.5 77.5t12.5 97.5l64 110q26 46 77.5 59.5t97.5 -12.5l266 -153v307q0 52 38 90t90 38h128q52 0 90 -38t38 -90v-307l266 153q46 26 97.5 12.5t77.5 -59.5l64 -110q26 -46 12.5 -97.5t-59.5 -77.5l-266 -154z" />
    <glyph glyph-name="exclamation_sign" unicode="&#xf06a;" 
d="M768 1408q209 0 385.5 -103t279.5 -279.5t103 -385.5t-103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103zM896 161v190q0 14 -9 23.5t-22 9.5h-192q-13 0 -23 -10t-10 -23v-190q0 -13 10 -23t23 -10h192
q13 0 22 9.5t9 23.5zM894 505l18 621q0 12 -10 18q-10 8 -24 8h-220q-14 0 -24 -8q-10 -6 -10 -18l17 -621q0 -10 10 -17.5t24 -7.5h185q14 0 23.5 7.5t10.5 17.5z" />
    <glyph glyph-name="gift" unicode="&#xf06b;" 
d="M928 180v56v468v192h-320v-192v-468v-56q0 -25 18 -38.5t46 -13.5h192q28 0 46 13.5t18 38.5zM472 1024h195l-126 161q-26 31 -69 31q-40 0 -68 -28t-28 -68t28 -68t68 -28zM1160 1120q0 40 -28 68t-68 28q-43 0 -69 -31l-125 -161h194q40 0 68 28t28 68zM1536 864v-320
q0 -14 -9 -23t-23 -9h-96v-416q0 -40 -28 -68t-68 -28h-1088q-40 0 -68 28t-28 68v416h-96q-14 0 -23 9t-9 23v320q0 14 9 23t23 9h440q-93 0 -158.5 65.5t-65.5 158.5t65.5 158.5t158.5 65.5q107 0 168 -77l128 -165l128 165q61 77 168 77q93 0 158.5 -65.5t65.5 -158.5
t-65.5 -158.5t-158.5 -65.5h440q14 0 23 -9t9 -23z" />
    <glyph glyph-name="leaf" unicode="&#xf06c;" horiz-adv-x="1792" 
d="M1280 832q0 26 -19 45t-45 19q-172 0 -318 -49.5t-259.5 -134t-235.5 -219.5q-19 -21 -19 -45q0 -26 19 -45t45 -19q24 0 45 19q27 24 74 71t67 66q137 124 268.5 176t313.5 52q26 0 45 19t19 45zM1792 1030q0 -95 -20 -193q-46 -224 -184.5 -383t-357.5 -268
q-214 -108 -438 -108q-148 0 -286 47q-15 5 -88 42t-96 37q-16 0 -39.5 -32t-45 -70t-52.5 -70t-60 -32q-43 0 -63.5 17.5t-45.5 59.5q-2 4 -6 11t-5.5 10t-3 9.5t-1.5 13.5q0 35 31 73.5t68 65.5t68 56t31 48q0 4 -14 38t-16 44q-9 51 -9 104q0 115 43.5 220t119 184.5
t170.5 139t204 95.5q55 18 145 25.5t179.5 9t178.5 6t163.5 24t113.5 56.5l29.5 29.5t29.5 28t27 20t36.5 16t43.5 4.5q39 0 70.5 -46t47.5 -112t24 -124t8 -96z" />
    <glyph glyph-name="fire" unicode="&#xf06d;" horiz-adv-x="1408" 
d="M1408 -160v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-1344q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h1344q13 0 22.5 -9.5t9.5 -22.5zM1152 896q0 -78 -24.5 -144t-64 -112.5t-87.5 -88t-96 -77.5t-87.5 -72t-64 -81.5t-24.5 -96.5q0 -96 67 -224l-4 1l1 -1
q-90 41 -160 83t-138.5 100t-113.5 122.5t-72.5 150.5t-27.5 184q0 78 24.5 144t64 112.5t87.5 88t96 77.5t87.5 72t64 81.5t24.5 96.5q0 94 -66 224l3 -1l-1 1q90 -41 160 -83t138.5 -100t113.5 -122.5t72.5 -150.5t27.5 -184z" />
    <glyph glyph-name="eye_open" unicode="&#xf06e;" horiz-adv-x="1792" 
d="M1664 576q-152 236 -381 353q61 -104 61 -225q0 -185 -131.5 -316.5t-316.5 -131.5t-316.5 131.5t-131.5 316.5q0 121 61 225q-229 -117 -381 -353q133 -205 333.5 -326.5t434.5 -121.5t434.5 121.5t333.5 326.5zM944 960q0 20 -14 34t-34 14q-125 0 -214.5 -89.5
t-89.5 -214.5q0 -20 14 -34t34 -14t34 14t14 34q0 86 61 147t147 61q20 0 34 14t14 34zM1792 576q0 -34 -20 -69q-140 -230 -376.5 -368.5t-499.5 -138.5t-499.5 139t-376.5 368q-20 35 -20 69t20 69q140 229 376.5 368t499.5 139t499.5 -139t376.5 -368q20 -35 20 -69z" />
    <glyph glyph-name="eye_close" unicode="&#xf070;" horiz-adv-x="1792" 
d="M555 201l78 141q-87 63 -136 159t-49 203q0 121 61 225q-229 -117 -381 -353q167 -258 427 -375zM944 960q0 20 -14 34t-34 14q-125 0 -214.5 -89.5t-89.5 -214.5q0 -20 14 -34t34 -14t34 14t14 34q0 86 61 147t147 61q20 0 34 14t14 34zM1307 1151q0 -7 -1 -9
q-106 -189 -316 -567t-315 -566l-49 -89q-10 -16 -28 -16q-12 0 -134 70q-16 10 -16 28q0 12 44 87q-143 65 -263.5 173t-208.5 245q-20 31 -20 69t20 69q153 235 380 371t496 136q89 0 180 -17l54 97q10 16 28 16q5 0 18 -6t31 -15.5t33 -18.5t31.5 -18.5t19.5 -11.5
q16 -10 16 -27zM1344 704q0 -139 -79 -253.5t-209 -164.5l280 502q8 -45 8 -84zM1792 576q0 -35 -20 -69q-39 -64 -109 -145q-150 -172 -347.5 -267t-419.5 -95l74 132q212 18 392.5 137t301.5 307q-115 179 -282 294l63 112q95 -64 182.5 -153t144.5 -184q20 -34 20 -69z
" />
    <glyph glyph-name="warning_sign" unicode="&#xf071;" horiz-adv-x="1792" 
d="M1024 161v190q0 14 -9.5 23.5t-22.5 9.5h-192q-13 0 -22.5 -9.5t-9.5 -23.5v-190q0 -14 9.5 -23.5t22.5 -9.5h192q13 0 22.5 9.5t9.5 23.5zM1022 535l18 459q0 12 -10 19q-13 11 -24 11h-220q-11 0 -24 -11q-10 -7 -10 -21l17 -457q0 -10 10 -16.5t24 -6.5h185
q14 0 23.5 6.5t10.5 16.5zM1008 1469l768 -1408q35 -63 -2 -126q-17 -29 -46.5 -46t-63.5 -17h-1536q-34 0 -63.5 17t-46.5 46q-37 63 -2 126l768 1408q17 31 47 49t65 18t65 -18t47 -49z" />
    <glyph glyph-name="plane" unicode="&#xf072;" horiz-adv-x="1408" 
d="M1376 1376q44 -52 12 -148t-108 -172l-161 -161l160 -696q5 -19 -12 -33l-128 -96q-7 -6 -19 -6q-4 0 -7 1q-15 3 -21 16l-279 508l-259 -259l53 -194q5 -17 -8 -31l-96 -96q-9 -9 -23 -9h-2q-15 2 -24 13l-189 252l-252 189q-11 7 -13 23q-1 13 9 25l96 97q9 9 23 9
q6 0 8 -1l194 -53l259 259l-508 279q-14 8 -17 24q-2 16 9 27l128 128q14 13 30 8l665 -159l160 160q76 76 172 108t148 -12z" />
    <glyph glyph-name="calendar" unicode="&#xf073;" horiz-adv-x="1664" 
d="M128 -128h288v288h-288v-288zM480 -128h320v288h-320v-288zM128 224h288v320h-288v-320zM480 224h320v320h-320v-320zM128 608h288v288h-288v-288zM864 -128h320v288h-320v-288zM480 608h320v288h-320v-288zM1248 -128h288v288h-288v-288zM864 224h320v320h-320v-320z
M512 1088v288q0 13 -9.5 22.5t-22.5 9.5h-64q-13 0 -22.5 -9.5t-9.5 -22.5v-288q0 -13 9.5 -22.5t22.5 -9.5h64q13 0 22.5 9.5t9.5 22.5zM1248 224h288v320h-288v-320zM864 608h320v288h-320v-288zM1248 608h288v288h-288v-288zM1280 1088v288q0 13 -9.5 22.5t-22.5 9.5h-64
q-13 0 -22.5 -9.5t-9.5 -22.5v-288q0 -13 9.5 -22.5t22.5 -9.5h64q13 0 22.5 9.5t9.5 22.5zM1664 1152v-1280q0 -52 -38 -90t-90 -38h-1408q-52 0 -90 38t-38 90v1280q0 52 38 90t90 38h128v96q0 66 47 113t113 47h64q66 0 113 -47t47 -113v-96h384v96q0 66 47 113t113 47
h64q66 0 113 -47t47 -113v-96h128q52 0 90 -38t38 -90z" />
    <glyph glyph-name="random" unicode="&#xf074;" horiz-adv-x="1792" 
d="M666 1055q-60 -92 -137 -273q-22 45 -37 72.5t-40.5 63.5t-51 56.5t-63 35t-81.5 14.5h-224q-14 0 -23 9t-9 23v192q0 14 9 23t23 9h224q250 0 410 -225zM1792 256q0 -14 -9 -23l-320 -320q-9 -9 -23 -9q-13 0 -22.5 9.5t-9.5 22.5v192q-32 0 -85 -0.5t-81 -1t-73 1
t-71 5t-64 10.5t-63 18.5t-58 28.5t-59 40t-55 53.5t-56 69.5q59 93 136 273q22 -45 37 -72.5t40.5 -63.5t51 -56.5t63 -35t81.5 -14.5h256v192q0 14 9 23t23 9q12 0 24 -10l319 -319q9 -9 9 -23zM1792 1152q0 -14 -9 -23l-320 -320q-9 -9 -23 -9q-13 0 -22.5 9.5t-9.5 22.5
v192h-256q-48 0 -87 -15t-69 -45t-51 -61.5t-45 -77.5q-32 -62 -78 -171q-29 -66 -49.5 -111t-54 -105t-64 -100t-74 -83t-90 -68.5t-106.5 -42t-128 -16.5h-224q-14 0 -23 9t-9 23v192q0 14 9 23t23 9h224q48 0 87 15t69 45t51 61.5t45 77.5q32 62 78 171q29 66 49.5 111
t54 105t64 100t74 83t90 68.5t106.5 42t128 16.5h256v192q0 14 9 23t23 9q12 0 24 -10l319 -319q9 -9 9 -23z" />
    <glyph glyph-name="comment" unicode="&#xf075;" horiz-adv-x="1792" 
d="M1792 640q0 -174 -120 -321.5t-326 -233t-450 -85.5q-70 0 -145 8q-198 -175 -460 -242q-49 -14 -114 -22q-17 -2 -30.5 9t-17.5 29v1q-3 4 -0.5 12t2 10t4.5 9.5l6 9t7 8.5t8 9q7 8 31 34.5t34.5 38t31 39.5t32.5 51t27 59t26 76q-157 89 -247.5 220t-90.5 281
q0 130 71 248.5t191 204.5t286 136.5t348 50.5q244 0 450 -85.5t326 -233t120 -321.5z" />
    <glyph glyph-name="magnet" unicode="&#xf076;" 
d="M1536 704v-128q0 -201 -98.5 -362t-274 -251.5t-395.5 -90.5t-395.5 90.5t-274 251.5t-98.5 362v128q0 26 19 45t45 19h384q26 0 45 -19t19 -45v-128q0 -52 23.5 -90t53.5 -57t71 -30t64 -13t44 -2t44 2t64 13t71 30t53.5 57t23.5 90v128q0 26 19 45t45 19h384
q26 0 45 -19t19 -45zM512 1344v-384q0 -26 -19 -45t-45 -19h-384q-26 0 -45 19t-19 45v384q0 26 19 45t45 19h384q26 0 45 -19t19 -45zM1536 1344v-384q0 -26 -19 -45t-45 -19h-384q-26 0 -45 19t-19 45v384q0 26 19 45t45 19h384q26 0 45 -19t19 -45z" />
    <glyph glyph-name="chevron_up" unicode="&#xf077;" horiz-adv-x="1792" 
d="M1683 205l-166 -165q-19 -19 -45 -19t-45 19l-531 531l-531 -531q-19 -19 -45 -19t-45 19l-166 165q-19 19 -19 45.5t19 45.5l742 741q19 19 45 19t45 -19l742 -741q19 -19 19 -45.5t-19 -45.5z" />
    <glyph glyph-name="chevron_down" unicode="&#xf078;" horiz-adv-x="1792" 
d="M1683 728l-742 -741q-19 -19 -45 -19t-45 19l-742 741q-19 19 -19 45.5t19 45.5l166 165q19 19 45 19t45 -19l531 -531l531 531q19 19 45 19t45 -19l166 -165q19 -19 19 -45.5t-19 -45.5z" />
    <glyph glyph-name="retweet" unicode="&#xf079;" horiz-adv-x="1920" 
d="M1280 32q0 -13 -9.5 -22.5t-22.5 -9.5h-960q-8 0 -13.5 2t-9 7t-5.5 8t-3 11.5t-1 11.5v13v11v160v416h-192q-26 0 -45 19t-19 45q0 24 15 41l320 384q19 22 49 22t49 -22l320 -384q15 -17 15 -41q0 -26 -19 -45t-45 -19h-192v-384h576q16 0 25 -11l160 -192q7 -10 7 -21
zM1920 448q0 -24 -15 -41l-320 -384q-20 -23 -49 -23t-49 23l-320 384q-15 17 -15 41q0 26 19 45t45 19h192v384h-576q-16 0 -25 12l-160 192q-7 9 -7 20q0 13 9.5 22.5t22.5 9.5h960q8 0 13.5 -2t9 -7t5.5 -8t3 -11.5t1 -11.5v-13v-11v-160v-416h192q26 0 45 -19t19 -45z
" />
    <glyph glyph-name="shopping_cart" unicode="&#xf07a;" horiz-adv-x="1664" 
d="M640 0q0 -52 -38 -90t-90 -38t-90 38t-38 90t38 90t90 38t90 -38t38 -90zM1536 0q0 -52 -38 -90t-90 -38t-90 38t-38 90t38 90t90 38t90 -38t38 -90zM1664 1088v-512q0 -24 -16.5 -42.5t-40.5 -21.5l-1044 -122q13 -60 13 -70q0 -16 -24 -64h920q26 0 45 -19t19 -45
t-19 -45t-45 -19h-1024q-26 0 -45 19t-19 45q0 11 8 31.5t16 36t21.5 40t15.5 29.5l-177 823h-204q-26 0 -45 19t-19 45t19 45t45 19h256q16 0 28.5 -6.5t19.5 -15.5t13 -24.5t8 -26t5.5 -29.5t4.5 -26h1201q26 0 45 -19t19 -45z" />
    <glyph glyph-name="folder_close" unicode="&#xf07b;" horiz-adv-x="1664" 
d="M1664 928v-704q0 -92 -66 -158t-158 -66h-1216q-92 0 -158 66t-66 158v960q0 92 66 158t158 66h320q92 0 158 -66t66 -158v-32h672q92 0 158 -66t66 -158z" />
    <glyph glyph-name="folder_open" unicode="&#xf07c;" horiz-adv-x="1920" 
d="M1879 584q0 -31 -31 -66l-336 -396q-43 -51 -120.5 -86.5t-143.5 -35.5h-1088q-34 0 -60.5 13t-26.5 43q0 31 31 66l336 396q43 51 120.5 86.5t143.5 35.5h1088q34 0 60.5 -13t26.5 -43zM1536 928v-160h-832q-94 0 -197 -47.5t-164 -119.5l-337 -396l-5 -6q0 4 -0.5 12.5
t-0.5 12.5v960q0 92 66 158t158 66h320q92 0 158 -66t66 -158v-32h544q92 0 158 -66t66 -158z" />
    <glyph glyph-name="resize_vertical" unicode="&#xf07d;" horiz-adv-x="768" 
d="M704 1216q0 -26 -19 -45t-45 -19h-128v-1024h128q26 0 45 -19t19 -45t-19 -45l-256 -256q-19 -19 -45 -19t-45 19l-256 256q-19 19 -19 45t19 45t45 19h128v1024h-128q-26 0 -45 19t-19 45t19 45l256 256q19 19 45 19t45 -19l256 -256q19 -19 19 -45z" />
    <glyph glyph-name="resize_horizontal" unicode="&#xf07e;" horiz-adv-x="1792" 
d="M1792 640q0 -26 -19 -45l-256 -256q-19 -19 -45 -19t-45 19t-19 45v128h-1024v-128q0 -26 -19 -45t-45 -19t-45 19l-256 256q-19 19 -19 45t19 45l256 256q19 19 45 19t45 -19t19 -45v-128h1024v128q0 26 19 45t45 19t45 -19l256 -256q19 -19 19 -45z" />
    <glyph glyph-name="bar_chart" unicode="&#xf080;" horiz-adv-x="2048" 
d="M640 640v-512h-256v512h256zM1024 1152v-1024h-256v1024h256zM2048 0v-128h-2048v1536h128v-1408h1920zM1408 896v-768h-256v768h256zM1792 1280v-1152h-256v1152h256z" />
    <glyph glyph-name="twitter_sign" unicode="&#xf081;" 
d="M1280 926q-56 -25 -121 -34q68 40 93 117q-65 -38 -134 -51q-61 66 -153 66q-87 0 -148.5 -61.5t-61.5 -148.5q0 -29 5 -48q-129 7 -242 65t-192 155q-29 -50 -29 -106q0 -114 91 -175q-47 1 -100 26v-2q0 -75 50 -133.5t123 -72.5q-29 -8 -51 -8q-13 0 -39 4
q21 -63 74.5 -104t121.5 -42q-116 -90 -261 -90q-26 0 -50 3q148 -94 322 -94q112 0 210 35.5t168 95t120.5 137t75 162t24.5 168.5q0 18 -1 27q63 45 105 109zM1536 1120v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5
t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z" />
    <glyph glyph-name="facebook_sign" unicode="&#xf082;" 
d="M1248 1408q119 0 203.5 -84.5t84.5 -203.5v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-188v595h199l30 232h-229v148q0 56 23.5 84t91.5 28l122 1v207q-63 9 -178 9q-136 0 -217.5 -80t-81.5 -226v-171h-200v-232h200v-595h-532q-119 0 -203.5 84.5t-84.5 203.5v960
q0 119 84.5 203.5t203.5 84.5h960z" />
    <glyph glyph-name="camera_retro" unicode="&#xf083;" horiz-adv-x="1792" 
d="M928 704q0 14 -9 23t-23 9q-66 0 -113 -47t-47 -113q0 -14 9 -23t23 -9t23 9t9 23q0 40 28 68t68 28q14 0 23 9t9 23zM1152 574q0 -106 -75 -181t-181 -75t-181 75t-75 181t75 181t181 75t181 -75t75 -181zM128 0h1536v128h-1536v-128zM1280 574q0 159 -112.5 271.5
t-271.5 112.5t-271.5 -112.5t-112.5 -271.5t112.5 -271.5t271.5 -112.5t271.5 112.5t112.5 271.5zM256 1216h384v128h-384v-128zM128 1024h1536v118v138h-828l-64 -128h-644v-128zM1792 1280v-1280q0 -53 -37.5 -90.5t-90.5 -37.5h-1536q-53 0 -90.5 37.5t-37.5 90.5v1280
q0 53 37.5 90.5t90.5 37.5h1536q53 0 90.5 -37.5t37.5 -90.5z" />
    <glyph glyph-name="key" unicode="&#xf084;" horiz-adv-x="1792" 
d="M832 1024q0 80 -56 136t-136 56t-136 -56t-56 -136q0 -42 19 -83q-41 19 -83 19q-80 0 -136 -56t-56 -136t56 -136t136 -56t136 56t56 136q0 42 -19 83q41 -19 83 -19q80 0 136 56t56 136zM1683 320q0 -17 -49 -66t-66 -49q-9 0 -28.5 16t-36.5 33t-38.5 40t-24.5 26
l-96 -96l220 -220q28 -28 28 -68q0 -42 -39 -81t-81 -39q-40 0 -68 28l-671 671q-176 -131 -365 -131q-163 0 -265.5 102.5t-102.5 265.5q0 160 95 313t248 248t313 95q163 0 265.5 -102.5t102.5 -265.5q0 -189 -131 -365l355 -355l96 96q-3 3 -26 24.5t-40 38.5t-33 36.5
t-16 28.5q0 17 49 66t66 49q13 0 23 -10q6 -6 46 -44.5t82 -79.5t86.5 -86t73 -78t28.5 -41z" />
    <glyph glyph-name="cogs" unicode="&#xf085;" horiz-adv-x="1920" 
d="M896 640q0 106 -75 181t-181 75t-181 -75t-75 -181t75 -181t181 -75t181 75t75 181zM1664 128q0 52 -38 90t-90 38t-90 -38t-38 -90q0 -53 37.5 -90.5t90.5 -37.5t90.5 37.5t37.5 90.5zM1664 1152q0 52 -38 90t-90 38t-90 -38t-38 -90q0 -53 37.5 -90.5t90.5 -37.5
t90.5 37.5t37.5 90.5zM1280 731v-185q0 -10 -7 -19.5t-16 -10.5l-155 -24q-11 -35 -32 -76q34 -48 90 -115q7 -11 7 -20q0 -12 -7 -19q-23 -30 -82.5 -89.5t-78.5 -59.5q-11 0 -21 7l-115 90q-37 -19 -77 -31q-11 -108 -23 -155q-7 -24 -30 -24h-186q-11 0 -20 7.5t-10 17.5
l-23 153q-34 10 -75 31l-118 -89q-7 -7 -20 -7q-11 0 -21 8q-144 133 -144 160q0 9 7 19q10 14 41 53t47 61q-23 44 -35 82l-152 24q-10 1 -17 9.5t-7 19.5v185q0 10 7 19.5t16 10.5l155 24q11 35 32 76q-34 48 -90 115q-7 11 -7 20q0 12 7 20q22 30 82 89t79 59q11 0 21 -7
l115 -90q34 18 77 32q11 108 23 154q7 24 30 24h186q11 0 20 -7.5t10 -17.5l23 -153q34 -10 75 -31l118 89q8 7 20 7q11 0 21 -8q144 -133 144 -160q0 -8 -7 -19q-12 -16 -42 -54t-45 -60q23 -48 34 -82l152 -23q10 -2 17 -10.5t7 -19.5zM1920 198v-140q0 -16 -149 -31
q-12 -27 -30 -52q51 -113 51 -138q0 -4 -4 -7q-122 -71 -124 -71q-8 0 -46 47t-52 68q-20 -2 -30 -2t-30 2q-14 -21 -52 -68t-46 -47q-2 0 -124 71q-4 3 -4 7q0 25 51 138q-18 25 -30 52q-149 15 -149 31v140q0 16 149 31q13 29 30 52q-51 113 -51 138q0 4 4 7q4 2 35 20
t59 34t30 16q8 0 46 -46.5t52 -67.5q20 2 30 2t30 -2q51 71 92 112l6 2q4 0 124 -70q4 -3 4 -7q0 -25 -51 -138q17 -23 30 -52q149 -15 149 -31zM1920 1222v-140q0 -16 -149 -31q-12 -27 -30 -52q51 -113 51 -138q0 -4 -4 -7q-122 -71 -124 -71q-8 0 -46 47t-52 68
q-20 -2 -30 -2t-30 2q-14 -21 -52 -68t-46 -47q-2 0 -124 71q-4 3 -4 7q0 25 51 138q-18 25 -30 52q-149 15 -149 31v140q0 16 149 31q13 29 30 52q-51 113 -51 138q0 4 4 7q4 2 35 20t59 34t30 16q8 0 46 -46.5t52 -67.5q20 2 30 2t30 -2q51 71 92 112l6 2q4 0 124 -70
q4 -3 4 -7q0 -25 -51 -138q17 -23 30 -52q149 -15 149 -31z" />
    <glyph glyph-name="comments" unicode="&#xf086;" horiz-adv-x="1792" 
d="M1408 768q0 -139 -94 -257t-256.5 -186.5t-353.5 -68.5q-86 0 -176 16q-124 -88 -278 -128q-36 -9 -86 -16h-3q-11 0 -20.5 8t-11.5 21q-1 3 -1 6.5t0.5 6.5t2 6l2.5 5t3.5 5.5t4 5t4.5 5t4 4.5q5 6 23 25t26 29.5t22.5 29t25 38.5t20.5 44q-124 72 -195 177t-71 224
q0 139 94 257t256.5 186.5t353.5 68.5t353.5 -68.5t256.5 -186.5t94 -257zM1792 512q0 -120 -71 -224.5t-195 -176.5q10 -24 20.5 -44t25 -38.5t22.5 -29t26 -29.5t23 -25q1 -1 4 -4.5t4.5 -5t4 -5t3.5 -5.5l2.5 -5t2 -6t0.5 -6.5t-1 -6.5q-3 -14 -13 -22t-22 -7
q-50 7 -86 16q-154 40 -278 128q-90 -16 -176 -16q-271 0 -472 132q58 -4 88 -4q161 0 309 45t264 129q125 92 192 212t67 254q0 77 -23 152q129 -71 204 -178t75 -230z" />
    <glyph glyph-name="thumbs_up_alt" unicode="&#xf087;" 
d="M256 192q0 26 -19 45t-45 19t-45 -19t-19 -45t19 -45t45 -19t45 19t19 45zM1408 768q0 51 -39 89.5t-89 38.5h-352q0 58 48 159.5t48 160.5q0 98 -32 145t-128 47q-26 -26 -38 -85t-30.5 -125.5t-59.5 -109.5q-22 -23 -77 -91q-4 -5 -23 -30t-31.5 -41t-34.5 -42.5
t-40 -44t-38.5 -35.5t-40 -27t-35.5 -9h-32v-640h32q13 0 31.5 -3t33 -6.5t38 -11t35 -11.5t35.5 -12.5t29 -10.5q211 -73 342 -73h121q192 0 192 167q0 26 -5 56q30 16 47.5 52.5t17.5 73.5t-18 69q53 50 53 119q0 25 -10 55.5t-25 47.5q32 1 53.5 47t21.5 81zM1536 769
q0 -89 -49 -163q9 -33 9 -69q0 -77 -38 -144q3 -21 3 -43q0 -101 -60 -178q1 -139 -85 -219.5t-227 -80.5h-36h-93q-96 0 -189.5 22.5t-216.5 65.5q-116 40 -138 40h-288q-53 0 -90.5 37.5t-37.5 90.5v640q0 53 37.5 90.5t90.5 37.5h274q36 24 137 155q58 75 107 128
q24 25 35.5 85.5t30.5 126.5t62 108q39 37 90 37q84 0 151 -32.5t102 -101.5t35 -186q0 -93 -48 -192h176q104 0 180 -76t76 -179z" />
    <glyph glyph-name="thumbs_down_alt" unicode="&#xf088;" 
d="M256 1088q0 26 -19 45t-45 19t-45 -19t-19 -45t19 -45t45 -19t45 19t19 45zM1408 512q0 35 -21.5 81t-53.5 47q15 17 25 47.5t10 55.5q0 69 -53 119q18 31 18 69q0 37 -17.5 73.5t-47.5 52.5q5 30 5 56q0 85 -49 126t-136 41h-128q-131 0 -342 -73q-5 -2 -29 -10.5
t-35.5 -12.5t-35 -11.5t-38 -11t-33 -6.5t-31.5 -3h-32v-640h32q16 0 35.5 -9t40 -27t38.5 -35.5t40 -44t34.5 -42.5t31.5 -41t23 -30q55 -68 77 -91q41 -43 59.5 -109.5t30.5 -125.5t38 -85q96 0 128 47t32 145q0 59 -48 160.5t-48 159.5h352q50 0 89 38.5t39 89.5z
M1536 511q0 -103 -76 -179t-180 -76h-176q48 -99 48 -192q0 -118 -35 -186q-35 -69 -102 -101.5t-151 -32.5q-51 0 -90 37q-34 33 -54 82t-25.5 90.5t-17.5 84.5t-31 64q-48 50 -107 127q-101 131 -137 155h-274q-53 0 -90.5 37.5t-37.5 90.5v640q0 53 37.5 90.5t90.5 37.5
h288q22 0 138 40q128 44 223 66t200 22h112q140 0 226.5 -79t85.5 -216v-5q60 -77 60 -178q0 -22 -3 -43q38 -67 38 -144q0 -36 -9 -69q49 -73 49 -163z" />
    <glyph glyph-name="star_half" unicode="&#xf089;" horiz-adv-x="896" 
d="M832 1504v-1339l-449 -236q-22 -12 -40 -12q-21 0 -31.5 14.5t-10.5 35.5q0 6 2 20l86 500l-364 354q-25 27 -25 48q0 37 56 46l502 73l225 455q19 41 49 41z" />
    <glyph glyph-name="heart_empty" unicode="&#xf08a;" horiz-adv-x="1792" 
d="M1664 940q0 81 -21.5 143t-55 98.5t-81.5 59.5t-94 31t-98 8t-112 -25.5t-110.5 -64t-86.5 -72t-60 -61.5q-18 -22 -49 -22t-49 22q-24 28 -60 61.5t-86.5 72t-110.5 64t-112 25.5t-98 -8t-94 -31t-81.5 -59.5t-55 -98.5t-21.5 -143q0 -168 187 -355l581 -560l580 559
q188 188 188 356zM1792 940q0 -221 -229 -450l-623 -600q-18 -18 -44 -18t-44 18l-624 602q-10 8 -27.5 26t-55.5 65.5t-68 97.5t-53.5 121t-23.5 138q0 220 127 344t351 124q62 0 126.5 -21.5t120 -58t95.5 -68.5t76 -68q36 36 76 68t95.5 68.5t120 58t126.5 21.5
q224 0 351 -124t127 -344z" />
    <glyph glyph-name="signout" unicode="&#xf08b;" horiz-adv-x="1664" 
d="M640 96q0 -4 1 -20t0.5 -26.5t-3 -23.5t-10 -19.5t-20.5 -6.5h-320q-119 0 -203.5 84.5t-84.5 203.5v704q0 119 84.5 203.5t203.5 84.5h320q13 0 22.5 -9.5t9.5 -22.5q0 -4 1 -20t0.5 -26.5t-3 -23.5t-10 -19.5t-20.5 -6.5h-320q-66 0 -113 -47t-47 -113v-704
q0 -66 47 -113t113 -47h288h11h13t11.5 -1t11.5 -3t8 -5.5t7 -9t2 -13.5zM1568 640q0 -26 -19 -45l-544 -544q-19 -19 -45 -19t-45 19t-19 45v288h-448q-26 0 -45 19t-19 45v384q0 26 19 45t45 19h448v288q0 26 19 45t45 19t45 -19l544 -544q19 -19 19 -45z" />
    <glyph glyph-name="linkedin_sign" unicode="&#xf08c;" 
d="M237 122h231v694h-231v-694zM483 1030q-1 52 -36 86t-93 34t-94.5 -34t-36.5 -86q0 -51 35.5 -85.5t92.5 -34.5h1q59 0 95 34.5t36 85.5zM1068 122h231v398q0 154 -73 233t-193 79q-136 0 -209 -117h2v101h-231q3 -66 0 -694h231v388q0 38 7 56q15 35 45 59.5t74 24.5
q116 0 116 -157v-371zM1536 1120v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z" />
    <glyph glyph-name="pushpin" unicode="&#xf08d;" horiz-adv-x="1152" 
d="M480 672v448q0 14 -9 23t-23 9t-23 -9t-9 -23v-448q0 -14 9 -23t23 -9t23 9t9 23zM1152 320q0 -26 -19 -45t-45 -19h-429l-51 -483q-2 -12 -10.5 -20.5t-20.5 -8.5h-1q-27 0 -32 27l-76 485h-404q-26 0 -45 19t-19 45q0 123 78.5 221.5t177.5 98.5v512q-52 0 -90 38
t-38 90t38 90t90 38h640q52 0 90 -38t38 -90t-38 -90t-90 -38v-512q99 0 177.5 -98.5t78.5 -221.5z" />
    <glyph glyph-name="external_link" unicode="&#xf08e;" horiz-adv-x="1792" 
d="M1408 608v-320q0 -119 -84.5 -203.5t-203.5 -84.5h-832q-119 0 -203.5 84.5t-84.5 203.5v832q0 119 84.5 203.5t203.5 84.5h704q14 0 23 -9t9 -23v-64q0 -14 -9 -23t-23 -9h-704q-66 0 -113 -47t-47 -113v-832q0 -66 47 -113t113 -47h832q66 0 113 47t47 113v320
q0 14 9 23t23 9h64q14 0 23 -9t9 -23zM1792 1472v-512q0 -26 -19 -45t-45 -19t-45 19l-176 176l-652 -652q-10 -10 -23 -10t-23 10l-114 114q-10 10 -10 23t10 23l652 652l-176 176q-19 19 -19 45t19 45t45 19h512q26 0 45 -19t19 -45z" />
    <glyph glyph-name="signin" unicode="&#xf090;" 
d="M1184 640q0 -26 -19 -45l-544 -544q-19 -19 -45 -19t-45 19t-19 45v288h-448q-26 0 -45 19t-19 45v384q0 26 19 45t45 19h448v288q0 26 19 45t45 19t45 -19l544 -544q19 -19 19 -45zM1536 992v-704q0 -119 -84.5 -203.5t-203.5 -84.5h-320q-13 0 -22.5 9.5t-9.5 22.5
q0 4 -1 20t-0.5 26.5t3 23.5t10 19.5t20.5 6.5h320q66 0 113 47t47 113v704q0 66 -47 113t-113 47h-288h-11h-13t-11.5 1t-11.5 3t-8 5.5t-7 9t-2 13.5q0 4 -1 20t-0.5 26.5t3 23.5t10 19.5t20.5 6.5h320q119 0 203.5 -84.5t84.5 -203.5z" />
    <glyph glyph-name="trophy" unicode="&#xf091;" horiz-adv-x="1664" 
d="M458 653q-74 162 -74 371h-256v-96q0 -78 94.5 -162t235.5 -113zM1536 928v96h-256q0 -209 -74 -371q141 29 235.5 113t94.5 162zM1664 1056v-128q0 -71 -41.5 -143t-112 -130t-173 -97.5t-215.5 -44.5q-42 -54 -95 -95q-38 -34 -52.5 -72.5t-14.5 -89.5q0 -54 30.5 -91
t97.5 -37q75 0 133.5 -45.5t58.5 -114.5v-64q0 -14 -9 -23t-23 -9h-832q-14 0 -23 9t-9 23v64q0 69 58.5 114.5t133.5 45.5q67 0 97.5 37t30.5 91q0 51 -14.5 89.5t-52.5 72.5q-53 41 -95 95q-113 5 -215.5 44.5t-173 97.5t-112 130t-41.5 143v128q0 40 28 68t68 28h288v96
q0 66 47 113t113 47h576q66 0 113 -47t47 -113v-96h288q40 0 68 -28t28 -68z" />
    <glyph glyph-name="github_sign" unicode="&#xf092;" 
d="M519 336q4 6 -3 13q-9 7 -14 2q-4 -6 3 -13q9 -7 14 -2zM491 377q-5 7 -12 4q-6 -4 0 -12q7 -8 12 -5q6 4 0 13zM450 417q2 4 -5 8q-7 2 -8 -2q-3 -5 4 -8q8 -2 9 2zM471 394q2 1 1.5 4.5t-3.5 5.5q-6 7 -10 3t1 -11q6 -6 11 -2zM557 319q2 7 -9 11q-9 3 -13 -4
q-2 -7 9 -11q9 -3 13 4zM599 316q0 8 -12 8q-10 0 -10 -8t11 -8t11 8zM638 323q-2 7 -13 5t-9 -9q2 -8 12 -6t10 10zM1280 640q0 212 -150 362t-362 150t-362 -150t-150 -362q0 -167 98 -300.5t252 -185.5q18 -3 26.5 5t8.5 20q0 52 -1 95q-6 -1 -15.5 -2.5t-35.5 -2t-48 4
t-43.5 20t-29.5 41.5q-23 59 -57 74q-2 1 -4.5 3.5l-8 8t-7 9.5t4 7.5t19.5 3.5q6 0 15 -2t30 -15.5t33 -35.5q16 -28 37.5 -42t43.5 -14t38 3.5t30 9.5q7 47 33 69q-49 6 -86 18.5t-73 39t-55.5 76t-19.5 119.5q0 79 53 137q-24 62 5 136q19 6 54.5 -7.5t60.5 -29.5l26 -16
q58 17 128 17t128 -17q11 7 28.5 18t55.5 26t57 9q29 -74 5 -136q53 -58 53 -137q0 -57 -14 -100.5t-35.5 -70t-53.5 -44.5t-62.5 -26t-68.5 -12q35 -31 35 -95q0 -40 -0.5 -89t-0.5 -51q0 -12 8.5 -20t26.5 -5q154 52 252 185.5t98 300.5zM1536 1120v-960
q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z" />
    <glyph glyph-name="upload_alt" unicode="&#xf093;" horiz-adv-x="1664" 
d="M1280 64q0 26 -19 45t-45 19t-45 -19t-19 -45t19 -45t45 -19t45 19t19 45zM1536 64q0 26 -19 45t-45 19t-45 -19t-19 -45t19 -45t45 -19t45 19t19 45zM1664 288v-320q0 -40 -28 -68t-68 -28h-1472q-40 0 -68 28t-28 68v320q0 40 28 68t68 28h427q21 -56 70.5 -92
t110.5 -36h256q61 0 110.5 36t70.5 92h427q40 0 68 -28t28 -68zM1339 936q-17 -40 -59 -40h-256v-448q0 -26 -19 -45t-45 -19h-256q-26 0 -45 19t-19 45v448h-256q-42 0 -59 40q-17 39 14 69l448 448q18 19 45 19t45 -19l448 -448q31 -30 14 -69z" />
    <glyph glyph-name="lemon" unicode="&#xf094;" 
d="M1407 710q0 44 -7 113.5t-18 96.5q-12 30 -17 44t-9 36.5t-4 48.5q0 23 5 68.5t5 67.5q0 37 -10 55q-4 1 -13 1q-19 0 -58 -4.5t-59 -4.5q-60 0 -176 24t-175 24q-43 0 -94.5 -11.5t-85 -23.5t-89.5 -34q-137 -54 -202 -103q-96 -73 -159.5 -189.5t-88 -236t-24.5 -248.5
q0 -40 12.5 -120t12.5 -121q0 -23 -11 -66.5t-11 -65.5t12 -36.5t34 -14.5q24 0 72.5 11t73.5 11q57 0 169.5 -15.5t169.5 -15.5q181 0 284 36q129 45 235.5 152.5t166 245.5t59.5 275zM1535 712q0 -165 -70 -327.5t-196 -288t-281 -180.5q-124 -44 -326 -44
q-57 0 -170 14.5t-169 14.5q-24 0 -72.5 -14.5t-73.5 -14.5q-73 0 -123.5 55.5t-50.5 128.5q0 24 11 68t11 67q0 40 -12.5 120.5t-12.5 121.5q0 111 18 217.5t54.5 209.5t100.5 194t150 156q78 59 232 120q194 78 316 78q60 0 175.5 -24t173.5 -24q19 0 57 5t58 5
q81 0 118 -50.5t37 -134.5q0 -23 -5 -68t-5 -68q0 -13 2 -25t3.5 -16.5t7.5 -20.5t8 -20q16 -40 25 -118.5t9 -136.5z" />
    <glyph glyph-name="phone" unicode="&#xf095;" horiz-adv-x="1408" 
d="M1408 296q0 -27 -10 -70.5t-21 -68.5q-21 -50 -122 -106q-94 -51 -186 -51q-27 0 -53 3.5t-57.5 12.5t-47 14.5t-55.5 20.5t-49 18q-98 35 -175 83q-127 79 -264 216t-216 264q-48 77 -83 175q-3 9 -18 49t-20.5 55.5t-14.5 47t-12.5 57.5t-3.5 53q0 92 51 186
q56 101 106 122q25 11 68.5 21t70.5 10q14 0 21 -3q18 -6 53 -76q11 -19 30 -54t35 -63.5t31 -53.5q3 -4 17.5 -25t21.5 -35.5t7 -28.5q0 -20 -28.5 -50t-62 -55t-62 -53t-28.5 -46q0 -9 5 -22.5t8.5 -20.5t14 -24t11.5 -19q76 -137 174 -235t235 -174q2 -1 19 -11.5t24 -14
t20.5 -8.5t22.5 -5q18 0 46 28.5t53 62t55 62t50 28.5q14 0 28.5 -7t35.5 -21.5t25 -17.5q25 -15 53.5 -31t63.5 -35t54 -30q70 -35 76 -53q3 -7 3 -21z" />
    <glyph glyph-name="check_empty" unicode="&#xf096;" horiz-adv-x="1408" 
d="M1120 1280h-832q-66 0 -113 -47t-47 -113v-832q0 -66 47 -113t113 -47h832q66 0 113 47t47 113v832q0 66 -47 113t-113 47zM1408 1120v-832q0 -119 -84.5 -203.5t-203.5 -84.5h-832q-119 0 -203.5 84.5t-84.5 203.5v832q0 119 84.5 203.5t203.5 84.5h832
q119 0 203.5 -84.5t84.5 -203.5z" />
    <glyph glyph-name="bookmark_empty" unicode="&#xf097;" horiz-adv-x="1280" 
d="M1152 1280h-1024v-1242l423 406l89 85l89 -85l423 -406v1242zM1164 1408q23 0 44 -9q33 -13 52.5 -41t19.5 -62v-1289q0 -34 -19.5 -62t-52.5 -41q-19 -8 -44 -8q-48 0 -83 32l-441 424l-441 -424q-36 -33 -83 -33q-23 0 -44 9q-33 13 -52.5 41t-19.5 62v1289
q0 34 19.5 62t52.5 41q21 9 44 9h1048z" />
    <glyph glyph-name="phone_sign" unicode="&#xf098;" 
d="M1280 343q0 11 -2 16t-18 16.5t-40.5 25t-47.5 26.5t-45.5 25t-28.5 15q-5 3 -19 13t-25 15t-21 5q-15 0 -36.5 -20.5t-39.5 -45t-38.5 -45t-33.5 -20.5q-7 0 -16.5 3.5t-15.5 6.5t-17 9.5t-14 8.5q-99 55 -170 126.5t-127 170.5q-2 3 -8.5 14t-9.5 17t-6.5 15.5
t-3.5 16.5q0 13 20.5 33.5t45 38.5t45 39.5t20.5 36.5q0 10 -5 21t-15 25t-13 19q-3 6 -15 28.5t-25 45.5t-26.5 47.5t-25 40.5t-16.5 18t-16 2q-48 0 -101 -22q-46 -21 -80 -94.5t-34 -130.5q0 -16 2.5 -34t5 -30.5t9 -33t10 -29.5t12.5 -33t11 -30q60 -164 216.5 -320.5
t320.5 -216.5q6 -2 30 -11t33 -12.5t29.5 -10t33 -9t30.5 -5t34 -2.5q57 0 130.5 34t94.5 80q22 53 22 101zM1536 1120v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z
" />
    <glyph glyph-name="twitter" unicode="&#xf099;" horiz-adv-x="1664" 
d="M1620 1128q-67 -98 -162 -167q1 -14 1 -42q0 -130 -38 -259.5t-115.5 -248.5t-184.5 -210.5t-258 -146t-323 -54.5q-271 0 -496 145q35 -4 78 -4q225 0 401 138q-105 2 -188 64.5t-114 159.5q33 -5 61 -5q43 0 85 11q-112 23 -185.5 111.5t-73.5 205.5v4q68 -38 146 -41
q-66 44 -105 115t-39 154q0 88 44 163q121 -149 294.5 -238.5t371.5 -99.5q-8 38 -8 74q0 134 94.5 228.5t228.5 94.5q140 0 236 -102q109 21 205 78q-37 -115 -142 -178q93 10 186 50z" />
    <glyph glyph-name="facebook" unicode="&#xf09a;" horiz-adv-x="1024" 
d="M959 1524v-264h-157q-86 0 -116 -36t-30 -108v-189h293l-39 -296h-254v-759h-306v759h-255v296h255v218q0 186 104 288.5t277 102.5q147 0 228 -12z" />
    <glyph glyph-name="github" unicode="&#xf09b;" 
d="M768 1408q209 0 385.5 -103t279.5 -279.5t103 -385.5q0 -251 -146.5 -451.5t-378.5 -277.5q-27 -5 -40 7t-13 30q0 3 0.5 76.5t0.5 134.5q0 97 -52 142q57 6 102.5 18t94 39t81 66.5t53 105t20.5 150.5q0 119 -79 206q37 91 -8 204q-28 9 -81 -11t-92 -44l-38 -24
q-93 26 -192 26t-192 -26q-16 11 -42.5 27t-83.5 38.5t-85 13.5q-45 -113 -8 -204q-79 -87 -79 -206q0 -85 20.5 -150t52.5 -105t80.5 -67t94 -39t102.5 -18q-39 -36 -49 -103q-21 -10 -45 -15t-57 -5t-65.5 21.5t-55.5 62.5q-19 32 -48.5 52t-49.5 24l-20 3q-21 0 -29 -4.5
t-5 -11.5t9 -14t13 -12l7 -5q22 -10 43.5 -38t31.5 -51l10 -23q13 -38 44 -61.5t67 -30t69.5 -7t55.5 3.5l23 4q0 -38 0.5 -88.5t0.5 -54.5q0 -18 -13 -30t-40 -7q-232 77 -378.5 277.5t-146.5 451.5q0 209 103 385.5t279.5 279.5t385.5 103zM291 305q3 7 -7 12
q-10 3 -13 -2q-3 -7 7 -12q9 -6 13 2zM322 271q7 5 -2 16q-10 9 -16 3q-7 -5 2 -16q10 -10 16 -3zM352 226q9 7 0 19q-8 13 -17 6q-9 -5 0 -18t17 -7zM394 184q8 8 -4 19q-12 12 -20 3q-9 -8 4 -19q12 -12 20 -3zM451 159q3 11 -13 16q-15 4 -19 -7t13 -15q15 -6 19 6z
M514 154q0 13 -17 11q-16 0 -16 -11q0 -13 17 -11q16 0 16 11zM572 164q-2 11 -18 9q-16 -3 -14 -15t18 -8t14 14z" />
    <glyph glyph-name="unlock" unicode="&#xf09c;" horiz-adv-x="1664" 
d="M1664 960v-256q0 -26 -19 -45t-45 -19h-64q-26 0 -45 19t-19 45v256q0 106 -75 181t-181 75t-181 -75t-75 -181v-192h96q40 0 68 -28t28 -68v-576q0 -40 -28 -68t-68 -28h-960q-40 0 -68 28t-28 68v576q0 40 28 68t68 28h672v192q0 185 131.5 316.5t316.5 131.5
t316.5 -131.5t131.5 -316.5z" />
    <glyph glyph-name="credit_card" unicode="&#xf09d;" horiz-adv-x="1920" 
d="M1760 1408q66 0 113 -47t47 -113v-1216q0 -66 -47 -113t-113 -47h-1600q-66 0 -113 47t-47 113v1216q0 66 47 113t113 47h1600zM160 1280q-13 0 -22.5 -9.5t-9.5 -22.5v-224h1664v224q0 13 -9.5 22.5t-22.5 9.5h-1600zM1760 0q13 0 22.5 9.5t9.5 22.5v608h-1664v-608
q0 -13 9.5 -22.5t22.5 -9.5h1600zM256 128v128h256v-128h-256zM640 128v128h384v-128h-384z" />
    <glyph glyph-name="rss" unicode="&#xf09e;" horiz-adv-x="1408" 
d="M384 192q0 -80 -56 -136t-136 -56t-136 56t-56 136t56 136t136 56t136 -56t56 -136zM896 69q2 -28 -17 -48q-18 -21 -47 -21h-135q-25 0 -43 16.5t-20 41.5q-22 229 -184.5 391.5t-391.5 184.5q-25 2 -41.5 20t-16.5 43v135q0 29 21 47q17 17 43 17h5q160 -13 306 -80.5
t259 -181.5q114 -113 181.5 -259t80.5 -306zM1408 67q2 -27 -18 -47q-18 -20 -46 -20h-143q-26 0 -44.5 17.5t-19.5 42.5q-12 215 -101 408.5t-231.5 336t-336 231.5t-408.5 102q-25 1 -42.5 19.5t-17.5 43.5v143q0 28 20 46q18 18 44 18h3q262 -13 501.5 -120t425.5 -294
q187 -186 294 -425.5t120 -501.5z" />
    <glyph glyph-name="hdd" unicode="&#xf0a0;" 
d="M1040 320q0 -33 -23.5 -56.5t-56.5 -23.5t-56.5 23.5t-23.5 56.5t23.5 56.5t56.5 23.5t56.5 -23.5t23.5 -56.5zM1296 320q0 -33 -23.5 -56.5t-56.5 -23.5t-56.5 23.5t-23.5 56.5t23.5 56.5t56.5 23.5t56.5 -23.5t23.5 -56.5zM1408 160v320q0 13 -9.5 22.5t-22.5 9.5
h-1216q-13 0 -22.5 -9.5t-9.5 -22.5v-320q0 -13 9.5 -22.5t22.5 -9.5h1216q13 0 22.5 9.5t9.5 22.5zM178 640h1180l-157 482q-4 13 -16 21.5t-26 8.5h-782q-14 0 -26 -8.5t-16 -21.5zM1536 480v-320q0 -66 -47 -113t-113 -47h-1216q-66 0 -113 47t-47 113v320q0 25 16 75
l197 606q17 53 63 86t101 33h782q55 0 101 -33t63 -86l197 -606q16 -50 16 -75z" />
    <glyph glyph-name="bullhorn" unicode="&#xf0a1;" horiz-adv-x="1792" 
d="M1664 896q53 0 90.5 -37.5t37.5 -90.5t-37.5 -90.5t-90.5 -37.5v-384q0 -52 -38 -90t-90 -38q-417 347 -812 380q-58 -19 -91 -66t-31 -100.5t40 -92.5q-20 -33 -23 -65.5t6 -58t33.5 -55t48 -50t61.5 -50.5q-29 -58 -111.5 -83t-168.5 -11.5t-132 55.5q-7 23 -29.5 87.5
t-32 94.5t-23 89t-15 101t3.5 98.5t22 110.5h-122q-66 0 -113 47t-47 113v192q0 66 47 113t113 47h480q435 0 896 384q52 0 90 -38t38 -90v-384zM1536 292v954q-394 -302 -768 -343v-270q377 -42 768 -341z" />
    <glyph glyph-name="bell" unicode="&#xf0a2;" horiz-adv-x="1792" 
d="M912 -160q0 16 -16 16q-59 0 -101.5 42.5t-42.5 101.5q0 16 -16 16t-16 -16q0 -73 51.5 -124.5t124.5 -51.5q16 0 16 16zM246 128h1300q-266 300 -266 832q0 51 -24 105t-69 103t-121.5 80.5t-169.5 31.5t-169.5 -31.5t-121.5 -80.5t-69 -103t-24 -105q0 -532 -266 -832z
M1728 128q0 -52 -38 -90t-90 -38h-448q0 -106 -75 -181t-181 -75t-181 75t-75 181h-448q-52 0 -90 38t-38 90q50 42 91 88t85 119.5t74.5 158.5t50 206t19.5 260q0 152 117 282.5t307 158.5q-8 19 -8 39q0 40 28 68t68 28t68 -28t28 -68q0 -20 -8 -39q190 -28 307 -158.5
t117 -282.5q0 -139 19.5 -260t50 -206t74.5 -158.5t85 -119.5t91 -88z" />
    <glyph glyph-name="certificate" unicode="&#xf0a3;" 
d="M1376 640l138 -135q30 -28 20 -70q-12 -41 -52 -51l-188 -48l53 -186q12 -41 -19 -70q-29 -31 -70 -19l-186 53l-48 -188q-10 -40 -51 -52q-12 -2 -19 -2q-31 0 -51 22l-135 138l-135 -138q-28 -30 -70 -20q-41 11 -51 52l-48 188l-186 -53q-41 -12 -70 19q-31 29 -19 70
l53 186l-188 48q-40 10 -52 51q-10 42 20 70l138 135l-138 135q-30 28 -20 70q12 41 52 51l188 48l-53 186q-12 41 19 70q29 31 70 19l186 -53l48 188q10 41 51 51q41 12 70 -19l135 -139l135 139q29 30 70 19q41 -10 51 -51l48 -188l186 53q41 12 70 -19q31 -29 19 -70
l-53 -186l188 -48q40 -10 52 -51q10 -42 -20 -70z" />
    <glyph glyph-name="hand_right" unicode="&#xf0a4;" horiz-adv-x="1792" 
d="M256 192q0 26 -19 45t-45 19t-45 -19t-19 -45t19 -45t45 -19t45 19t19 45zM1664 768q0 51 -39 89.5t-89 38.5h-576q0 20 15 48.5t33 55t33 68t15 84.5q0 67 -44.5 97.5t-115.5 30.5q-24 0 -90 -139q-24 -44 -37 -65q-40 -64 -112 -145q-71 -81 -101 -106
q-69 -57 -140 -57h-32v-640h32q72 0 167 -32t193.5 -64t179.5 -32q189 0 189 167q0 26 -5 56q30 16 47.5 52.5t17.5 73.5t-18 69q53 50 53 119q0 25 -10 55.5t-25 47.5h331q52 0 90 38t38 90zM1792 769q0 -105 -75.5 -181t-180.5 -76h-169q-4 -62 -37 -119q3 -21 3 -43
q0 -101 -60 -178q1 -139 -85 -219.5t-227 -80.5q-133 0 -322 69q-164 59 -223 59h-288q-53 0 -90.5 37.5t-37.5 90.5v640q0 53 37.5 90.5t90.5 37.5h288q10 0 21.5 4.5t23.5 14t22.5 18t24 22.5t20.5 21.5t19 21.5t14 17q65 74 100 129q13 21 33 62t37 72t40.5 63t55 49.5
t69.5 17.5q125 0 206.5 -67t81.5 -189q0 -68 -22 -128h374q104 0 180 -76t76 -179z" />
    <glyph glyph-name="hand_left" unicode="&#xf0a5;" horiz-adv-x="1792" 
d="M1376 128h32v640h-32q-35 0 -67.5 12t-62.5 37t-50 46t-49 54q-8 9 -12 14q-72 81 -112 145q-14 22 -38 68q-1 3 -10.5 22.5t-18.5 36t-20 35.5t-21.5 30.5t-18.5 11.5q-71 0 -115.5 -30.5t-44.5 -97.5q0 -43 15 -84.5t33 -68t33 -55t15 -48.5h-576q-50 0 -89 -38.5
t-39 -89.5q0 -52 38 -90t90 -38h331q-15 -17 -25 -47.5t-10 -55.5q0 -69 53 -119q-18 -32 -18 -69t17.5 -73.5t47.5 -52.5q-4 -24 -4 -56q0 -85 48.5 -126t135.5 -41q84 0 183 32t194 64t167 32zM1664 192q0 26 -19 45t-45 19t-45 -19t-19 -45t19 -45t45 -19t45 19t19 45z
M1792 768v-640q0 -53 -37.5 -90.5t-90.5 -37.5h-288q-59 0 -223 -59q-190 -69 -317 -69q-142 0 -230 77.5t-87 217.5l1 5q-61 76 -61 178q0 22 3 43q-33 57 -37 119h-169q-105 0 -180.5 76t-75.5 181q0 103 76 179t180 76h374q-22 60 -22 128q0 122 81.5 189t206.5 67
q38 0 69.5 -17.5t55 -49.5t40.5 -63t37 -72t33 -62q35 -55 100 -129q2 -3 14 -17t19 -21.5t20.5 -21.5t24 -22.5t22.5 -18t23.5 -14t21.5 -4.5h288q53 0 90.5 -37.5t37.5 -90.5z" />
    <glyph glyph-name="hand_up" unicode="&#xf0a6;" 
d="M1280 -64q0 26 -19 45t-45 19t-45 -19t-19 -45t19 -45t45 -19t45 19t19 45zM1408 700q0 189 -167 189q-26 0 -56 -5q-16 30 -52.5 47.5t-73.5 17.5t-69 -18q-50 53 -119 53q-25 0 -55.5 -10t-47.5 -25v331q0 52 -38 90t-90 38q-51 0 -89.5 -39t-38.5 -89v-576
q-20 0 -48.5 15t-55 33t-68 33t-84.5 15q-67 0 -97.5 -44.5t-30.5 -115.5q0 -24 139 -90q44 -24 65 -37q64 -40 145 -112q81 -71 106 -101q57 -69 57 -140v-32h640v32q0 72 32 167t64 193.5t32 179.5zM1536 705q0 -133 -69 -322q-59 -164 -59 -223v-288q0 -53 -37.5 -90.5
t-90.5 -37.5h-640q-53 0 -90.5 37.5t-37.5 90.5v288q0 10 -4.5 21.5t-14 23.5t-18 22.5t-22.5 24t-21.5 20.5t-21.5 19t-17 14q-74 65 -129 100q-21 13 -62 33t-72 37t-63 40.5t-49.5 55t-17.5 69.5q0 125 67 206.5t189 81.5q68 0 128 -22v374q0 104 76 180t179 76
q105 0 181 -75.5t76 -180.5v-169q62 -4 119 -37q21 3 43 3q101 0 178 -60q139 1 219.5 -85t80.5 -227z" />
    <glyph glyph-name="hand_down" unicode="&#xf0a7;" 
d="M1408 576q0 84 -32 183t-64 194t-32 167v32h-640v-32q0 -35 -12 -67.5t-37 -62.5t-46 -50t-54 -49q-9 -8 -14 -12q-81 -72 -145 -112q-22 -14 -68 -38q-3 -1 -22.5 -10.5t-36 -18.5t-35.5 -20t-30.5 -21.5t-11.5 -18.5q0 -71 30.5 -115.5t97.5 -44.5q43 0 84.5 15t68 33
t55 33t48.5 15v-576q0 -50 38.5 -89t89.5 -39q52 0 90 38t38 90v331q46 -35 103 -35q69 0 119 53q32 -18 69 -18t73.5 17.5t52.5 47.5q24 -4 56 -4q85 0 126 48.5t41 135.5zM1280 1344q0 26 -19 45t-45 19t-45 -19t-19 -45t19 -45t45 -19t45 19t19 45zM1536 580
q0 -142 -77.5 -230t-217.5 -87l-5 1q-76 -61 -178 -61q-22 0 -43 3q-54 -30 -119 -37v-169q0 -105 -76 -180.5t-181 -75.5q-103 0 -179 76t-76 180v374q-54 -22 -128 -22q-121 0 -188.5 81.5t-67.5 206.5q0 38 17.5 69.5t49.5 55t63 40.5t72 37t62 33q55 35 129 100
q3 2 17 14t21.5 19t21.5 20.5t22.5 24t18 22.5t14 23.5t4.5 21.5v288q0 53 37.5 90.5t90.5 37.5h640q53 0 90.5 -37.5t37.5 -90.5v-288q0 -59 59 -223q69 -190 69 -317z" />
    <glyph glyph-name="circle_arrow_left" unicode="&#xf0a8;" 
d="M1280 576v128q0 26 -19 45t-45 19h-502l189 189q19 19 19 45t-19 45l-91 91q-18 18 -45 18t-45 -18l-362 -362l-91 -91q-18 -18 -18 -45t18 -45l91 -91l362 -362q18 -18 45 -18t45 18l91 91q18 18 18 45t-18 45l-189 189h502q26 0 45 19t19 45zM1536 640
q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="circle_arrow_right" unicode="&#xf0a9;" 
d="M1285 640q0 27 -18 45l-91 91l-362 362q-18 18 -45 18t-45 -18l-91 -91q-18 -18 -18 -45t18 -45l189 -189h-502q-26 0 -45 -19t-19 -45v-128q0 -26 19 -45t45 -19h502l-189 -189q-19 -19 -19 -45t19 -45l91 -91q18 -18 45 -18t45 18l362 362l91 91q18 18 18 45zM1536 640
q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="circle_arrow_up" unicode="&#xf0aa;" 
d="M1284 641q0 27 -18 45l-362 362l-91 91q-18 18 -45 18t-45 -18l-91 -91l-362 -362q-18 -18 -18 -45t18 -45l91 -91q18 -18 45 -18t45 18l189 189v-502q0 -26 19 -45t45 -19h128q26 0 45 19t19 45v502l189 -189q19 -19 45 -19t45 19l91 91q18 18 18 45zM1536 640
q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="circle_arrow_down" unicode="&#xf0ab;" 
d="M1284 639q0 27 -18 45l-91 91q-18 18 -45 18t-45 -18l-189 -189v502q0 26 -19 45t-45 19h-128q-26 0 -45 -19t-19 -45v-502l-189 189q-19 19 -45 19t-45 -19l-91 -91q-18 -18 -18 -45t18 -45l362 -362l91 -91q18 -18 45 -18t45 18l91 91l362 362q18 18 18 45zM1536 640
q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="globe" unicode="&#xf0ac;" 
d="M768 1408q209 0 385.5 -103t279.5 -279.5t103 -385.5t-103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103zM1042 887q-2 -1 -9.5 -9.5t-13.5 -9.5q2 0 4.5 5t5 11t3.5 7q6 7 22 15q14 6 52 12q34 8 51 -11
q-2 2 9.5 13t14.5 12q3 2 15 4.5t15 7.5l2 22q-12 -1 -17.5 7t-6.5 21q0 -2 -6 -8q0 7 -4.5 8t-11.5 -1t-9 -1q-10 3 -15 7.5t-8 16.5t-4 15q-2 5 -9.5 11t-9.5 10q-1 2 -2.5 5.5t-3 6.5t-4 5.5t-5.5 2.5t-7 -5t-7.5 -10t-4.5 -5q-3 2 -6 1.5t-4.5 -1t-4.5 -3t-5 -3.5
q-3 -2 -8.5 -3t-8.5 -2q15 5 -1 11q-10 4 -16 3q9 4 7.5 12t-8.5 14h5q-1 4 -8.5 8.5t-17.5 8.5t-13 6q-8 5 -34 9.5t-33 0.5q-5 -6 -4.5 -10.5t4 -14t3.5 -12.5q1 -6 -5.5 -13t-6.5 -12q0 -7 14 -15.5t10 -21.5q-3 -8 -16 -16t-16 -12q-5 -8 -1.5 -18.5t10.5 -16.5
q2 -2 1.5 -4t-3.5 -4.5t-5.5 -4t-6.5 -3.5l-3 -2q-11 -5 -20.5 6t-13.5 26q-7 25 -16 30q-23 8 -29 -1q-5 13 -41 26q-25 9 -58 4q6 1 0 15q-7 15 -19 12q3 6 4 17.5t1 13.5q3 13 12 23q1 1 7 8.5t9.5 13.5t0.5 6q35 -4 50 11q5 5 11.5 17t10.5 17q9 6 14 5.5t14.5 -5.5
t14.5 -5q14 -1 15.5 11t-7.5 20q12 -1 3 17q-4 7 -8 9q-12 4 -27 -5q-8 -4 2 -8q-1 1 -9.5 -10.5t-16.5 -17.5t-16 5q-1 1 -5.5 13.5t-9.5 13.5q-8 0 -16 -15q3 8 -11 15t-24 8q19 12 -8 27q-7 4 -20.5 5t-19.5 -4q-5 -7 -5.5 -11.5t5 -8t10.5 -5.5t11.5 -4t8.5 -3
q14 -10 8 -14q-2 -1 -8.5 -3.5t-11.5 -4.5t-6 -4q-3 -4 0 -14t-2 -14q-5 5 -9 17.5t-7 16.5q7 -9 -25 -6l-10 1q-4 0 -16 -2t-20.5 -1t-13.5 8q-4 8 0 20q1 4 4 2q-4 3 -11 9.5t-10 8.5q-46 -15 -94 -41q6 -1 12 1q5 2 13 6.5t10 5.5q34 14 42 7l5 5q14 -16 20 -25
q-7 4 -30 1q-20 -6 -22 -12q7 -12 5 -18q-4 3 -11.5 10t-14.5 11t-15 5q-16 0 -22 -1q-146 -80 -235 -222q7 -7 12 -8q4 -1 5 -9t2.5 -11t11.5 3q9 -8 3 -19q1 1 44 -27q19 -17 21 -21q3 -11 -10 -18q-1 2 -9 9t-9 4q-3 -5 0.5 -18.5t10.5 -12.5q-7 0 -9.5 -16t-2.5 -35.5
t-1 -23.5l2 -1q-3 -12 5.5 -34.5t21.5 -19.5q-13 -3 20 -43q6 -8 8 -9q3 -2 12 -7.5t15 -10t10 -10.5q4 -5 10 -22.5t14 -23.5q-2 -6 9.5 -20t10.5 -23q-1 0 -2.5 -1t-2.5 -1q3 -7 15.5 -14t15.5 -13q1 -3 2 -10t3 -11t8 -2q2 20 -24 62q-15 25 -17 29q-3 5 -5.5 15.5
t-4.5 14.5q2 0 6 -1.5t8.5 -3.5t7.5 -4t2 -3q-3 -7 2 -17.5t12 -18.5t17 -19t12 -13q6 -6 14 -19.5t0 -13.5q9 0 20 -10.5t17 -19.5q5 -8 8 -26t5 -24q2 -7 8.5 -13.5t12.5 -9.5l16 -8t13 -7q5 -2 18.5 -10.5t21.5 -11.5q10 -4 16 -4t14.5 2.5t13.5 3.5q15 2 29 -15t21 -21
q36 -19 55 -11q-2 -1 0.5 -7.5t8 -15.5t9 -14.5t5.5 -8.5q5 -6 18 -15t18 -15q6 4 7 9q-3 -8 7 -20t18 -10q14 3 14 32q-31 -15 -49 18q0 1 -2.5 5.5t-4 8.5t-2.5 8.5t0 7.5t5 3q9 0 10 3.5t-2 12.5t-4 13q-1 8 -11 20t-12 15q-5 -9 -16 -8t-16 9q0 -1 -1.5 -5.5t-1.5 -6.5
q-13 0 -15 1q1 3 2.5 17.5t3.5 22.5q1 4 5.5 12t7.5 14.5t4 12.5t-4.5 9.5t-17.5 2.5q-19 -1 -26 -20q-1 -3 -3 -10.5t-5 -11.5t-9 -7q-7 -3 -24 -2t-24 5q-13 8 -22.5 29t-9.5 37q0 10 2.5 26.5t3 25t-5.5 24.5q3 2 9 9.5t10 10.5q2 1 4.5 1.5t4.5 0t4 1.5t3 6q-1 1 -4 3
q-3 3 -4 3q7 -3 28.5 1.5t27.5 -1.5q15 -11 22 2q0 1 -2.5 9.5t-0.5 13.5q5 -27 29 -9q3 -3 15.5 -5t17.5 -5q3 -2 7 -5.5t5.5 -4.5t5 0.5t8.5 6.5q10 -14 12 -24q11 -40 19 -44q7 -3 11 -2t4.5 9.5t0 14t-1.5 12.5l-1 8v18l-1 8q-15 3 -18.5 12t1.5 18.5t15 18.5q1 1 8 3.5
t15.5 6.5t12.5 8q21 19 15 35q7 0 11 9q-1 0 -5 3t-7.5 5t-4.5 2q9 5 2 16q5 3 7.5 11t7.5 10q9 -12 21 -2q8 8 1 16q5 7 20.5 10.5t18.5 9.5q7 -2 8 2t1 12t3 12q4 5 15 9t13 5l17 11q3 4 0 4q18 -2 31 11q10 11 -6 20q3 6 -3 9.5t-15 5.5q3 1 11.5 0.5t10.5 1.5
q15 10 -7 16q-17 5 -43 -12zM879 10q206 36 351 189q-3 3 -12.5 4.5t-12.5 3.5q-18 7 -24 8q1 7 -2.5 13t-8 9t-12.5 8t-11 7q-2 2 -7 6t-7 5.5t-7.5 4.5t-8.5 2t-10 -1l-3 -1q-3 -1 -5.5 -2.5t-5.5 -3t-4 -3t0 -2.5q-21 17 -36 22q-5 1 -11 5.5t-10.5 7t-10 1.5t-11.5 -7
q-5 -5 -6 -15t-2 -13q-7 5 0 17.5t2 18.5q-3 6 -10.5 4.5t-12 -4.5t-11.5 -8.5t-9 -6.5t-8.5 -5.5t-8.5 -7.5q-3 -4 -6 -12t-5 -11q-2 4 -11.5 6.5t-9.5 5.5q2 -10 4 -35t5 -38q7 -31 -12 -48q-27 -25 -29 -40q-4 -22 12 -26q0 -7 -8 -20.5t-7 -21.5q0 -6 2 -16z" />
    <glyph glyph-name="wrench" unicode="&#xf0ad;" horiz-adv-x="1664" 
d="M384 64q0 26 -19 45t-45 19t-45 -19t-19 -45t19 -45t45 -19t45 19t19 45zM1028 484l-682 -682q-37 -37 -90 -37q-52 0 -91 37l-106 108q-38 36 -38 90q0 53 38 91l681 681q39 -98 114.5 -173.5t173.5 -114.5zM1662 919q0 -39 -23 -106q-47 -134 -164.5 -217.5
t-258.5 -83.5q-185 0 -316.5 131.5t-131.5 316.5t131.5 316.5t316.5 131.5q58 0 121.5 -16.5t107.5 -46.5q16 -11 16 -28t-16 -28l-293 -169v-224l193 -107q5 3 79 48.5t135.5 81t70.5 35.5q15 0 23.5 -10t8.5 -25z" />
    <glyph glyph-name="tasks" unicode="&#xf0ae;" horiz-adv-x="1792" 
d="M1024 128h640v128h-640v-128zM640 640h1024v128h-1024v-128zM1280 1152h384v128h-384v-128zM1792 320v-256q0 -26 -19 -45t-45 -19h-1664q-26 0 -45 19t-19 45v256q0 26 19 45t45 19h1664q26 0 45 -19t19 -45zM1792 832v-256q0 -26 -19 -45t-45 -19h-1664q-26 0 -45 19
t-19 45v256q0 26 19 45t45 19h1664q26 0 45 -19t19 -45zM1792 1344v-256q0 -26 -19 -45t-45 -19h-1664q-26 0 -45 19t-19 45v256q0 26 19 45t45 19h1664q26 0 45 -19t19 -45z" />
    <glyph glyph-name="filter" unicode="&#xf0b0;" horiz-adv-x="1408" 
d="M1403 1241q17 -41 -14 -70l-493 -493v-742q0 -42 -39 -59q-13 -5 -25 -5q-27 0 -45 19l-256 256q-19 19 -19 45v486l-493 493q-31 29 -14 70q17 39 59 39h1280q42 0 59 -39z" />
    <glyph glyph-name="briefcase" unicode="&#xf0b1;" horiz-adv-x="1792" 
d="M640 1280h512v128h-512v-128zM1792 640v-480q0 -66 -47 -113t-113 -47h-1472q-66 0 -113 47t-47 113v480h672v-160q0 -26 19 -45t45 -19h320q26 0 45 19t19 45v160h672zM1024 640v-128h-256v128h256zM1792 1120v-384h-1792v384q0 66 47 113t113 47h352v160q0 40 28 68
t68 28h576q40 0 68 -28t28 -68v-160h352q66 0 113 -47t47 -113z" />
    <glyph glyph-name="fullscreen" unicode="&#xf0b2;" 
d="M1283 995l-355 -355l355 -355l144 144q29 31 70 14q39 -17 39 -59v-448q0 -26 -19 -45t-45 -19h-448q-42 0 -59 40q-17 39 14 69l144 144l-355 355l-355 -355l144 -144q31 -30 14 -69q-17 -40 -59 -40h-448q-26 0 -45 19t-19 45v448q0 42 40 59q39 17 69 -14l144 -144
l355 355l-355 355l-144 -144q-19 -19 -45 -19q-12 0 -24 5q-40 17 -40 59v448q0 26 19 45t45 19h448q42 0 59 -40q17 -39 -14 -69l-144 -144l355 -355l355 355l-144 144q-31 30 -14 69q17 40 59 40h448q26 0 45 -19t19 -45v-448q0 -42 -39 -59q-13 -5 -25 -5q-26 0 -45 19z
" />
    <glyph glyph-name="group" unicode="&#xf0c0;" horiz-adv-x="1920" 
d="M593 640q-162 -5 -265 -128h-134q-82 0 -138 40.5t-56 118.5q0 353 124 353q6 0 43.5 -21t97.5 -42.5t119 -21.5q67 0 133 23q-5 -37 -5 -66q0 -139 81 -256zM1664 3q0 -120 -73 -189.5t-194 -69.5h-874q-121 0 -194 69.5t-73 189.5q0 53 3.5 103.5t14 109t26.5 108.5
t43 97.5t62 81t85.5 53.5t111.5 20q10 0 43 -21.5t73 -48t107 -48t135 -21.5t135 21.5t107 48t73 48t43 21.5q61 0 111.5 -20t85.5 -53.5t62 -81t43 -97.5t26.5 -108.5t14 -109t3.5 -103.5zM640 1280q0 -106 -75 -181t-181 -75t-181 75t-75 181t75 181t181 75t181 -75
t75 -181zM1344 896q0 -159 -112.5 -271.5t-271.5 -112.5t-271.5 112.5t-112.5 271.5t112.5 271.5t271.5 112.5t271.5 -112.5t112.5 -271.5zM1920 671q0 -78 -56 -118.5t-138 -40.5h-134q-103 123 -265 128q81 117 81 256q0 29 -5 66q66 -23 133 -23q59 0 119 21.5t97.5 42.5
t43.5 21q124 0 124 -353zM1792 1280q0 -106 -75 -181t-181 -75t-181 75t-75 181t75 181t181 75t181 -75t75 -181z" />
    <glyph glyph-name="link" unicode="&#xf0c1;" horiz-adv-x="1664" 
d="M1456 320q0 40 -28 68l-208 208q-28 28 -68 28q-42 0 -72 -32q3 -3 19 -18.5t21.5 -21.5t15 -19t13 -25.5t3.5 -27.5q0 -40 -28 -68t-68 -28q-15 0 -27.5 3.5t-25.5 13t-19 15t-21.5 21.5t-18.5 19q-33 -31 -33 -73q0 -40 28 -68l206 -207q27 -27 68 -27q40 0 68 26
l147 146q28 28 28 67zM753 1025q0 40 -28 68l-206 207q-28 28 -68 28q-39 0 -68 -27l-147 -146q-28 -28 -28 -67q0 -40 28 -68l208 -208q27 -27 68 -27q42 0 72 31q-3 3 -19 18.5t-21.5 21.5t-15 19t-13 25.5t-3.5 27.5q0 40 28 68t68 28q15 0 27.5 -3.5t25.5 -13t19 -15
t21.5 -21.5t18.5 -19q33 31 33 73zM1648 320q0 -120 -85 -203l-147 -146q-83 -83 -203 -83q-121 0 -204 85l-206 207q-83 83 -83 203q0 123 88 209l-88 88q-86 -88 -208 -88q-120 0 -204 84l-208 208q-84 84 -84 204t85 203l147 146q83 83 203 83q121 0 204 -85l206 -207
q83 -83 83 -203q0 -123 -88 -209l88 -88q86 88 208 88q120 0 204 -84l208 -208q84 -84 84 -204z" />
    <glyph glyph-name="cloud" unicode="&#xf0c2;" horiz-adv-x="1920" 
d="M1920 384q0 -159 -112.5 -271.5t-271.5 -112.5h-1088q-185 0 -316.5 131.5t-131.5 316.5q0 132 71 241.5t187 163.5q-2 28 -2 43q0 212 150 362t362 150q158 0 286.5 -88t187.5 -230q70 62 166 62q106 0 181 -75t75 -181q0 -75 -41 -138q129 -30 213 -134.5t84 -239.5z
" />
    <glyph glyph-name="beaker" unicode="&#xf0c3;" horiz-adv-x="1664" 
d="M1527 88q56 -89 21.5 -152.5t-140.5 -63.5h-1152q-106 0 -140.5 63.5t21.5 152.5l503 793v399h-64q-26 0 -45 19t-19 45t19 45t45 19h512q26 0 45 -19t19 -45t-19 -45t-45 -19h-64v-399zM748 813l-272 -429h712l-272 429l-20 31v37v399h-128v-399v-37z" />
    <glyph glyph-name="cut" unicode="&#xf0c4;" horiz-adv-x="1792" 
d="M960 640q26 0 45 -19t19 -45t-19 -45t-45 -19t-45 19t-19 45t19 45t45 19zM1260 576l507 -398q28 -20 25 -56q-5 -35 -35 -51l-128 -64q-13 -7 -29 -7q-17 0 -31 8l-690 387l-110 -66q-8 -4 -12 -5q14 -49 10 -97q-7 -77 -56 -147.5t-132 -123.5q-132 -84 -277 -84
q-136 0 -222 78q-90 84 -79 207q7 76 56 147t131 124q132 84 278 84q83 0 151 -31q9 13 22 22l122 73l-122 73q-13 9 -22 22q-68 -31 -151 -31q-146 0 -278 84q-82 53 -131 124t-56 147q-5 59 15.5 113t63.5 93q85 79 222 79q145 0 277 -84q83 -52 132 -123t56 -148
q4 -48 -10 -97q4 -1 12 -5l110 -66l690 387q14 8 31 8q16 0 29 -7l128 -64q30 -16 35 -51q3 -36 -25 -56zM579 836q46 42 21 108t-106 117q-92 59 -192 59q-74 0 -113 -36q-46 -42 -21 -108t106 -117q92 -59 192 -59q74 0 113 36zM494 91q81 51 106 117t-21 108
q-39 36 -113 36q-100 0 -192 -59q-81 -51 -106 -117t21 -108q39 -36 113 -36q100 0 192 59zM672 704l96 -58v11q0 36 33 56l14 8l-79 47l-26 -26q-3 -3 -10 -11t-12 -12q-2 -2 -4 -3.5t-3 -2.5zM896 480l96 -32l736 576l-128 64l-768 -431v-113l-160 -96l9 -8q2 -2 7 -6
q4 -4 11 -12t11 -12l26 -26zM1600 64l128 64l-520 408l-177 -138q-2 -3 -13 -7z" />
    <glyph glyph-name="copy" unicode="&#xf0c5;" horiz-adv-x="1792" 
d="M1696 1152q40 0 68 -28t28 -68v-1216q0 -40 -28 -68t-68 -28h-960q-40 0 -68 28t-28 68v288h-544q-40 0 -68 28t-28 68v672q0 40 20 88t48 76l408 408q28 28 76 48t88 20h416q40 0 68 -28t28 -68v-328q68 40 128 40h416zM1152 939l-299 -299h299v299zM512 1323l-299 -299
h299v299zM708 676l316 316v416h-384v-416q0 -40 -28 -68t-68 -28h-416v-640h512v256q0 40 20 88t48 76zM1664 -128v1152h-384v-416q0 -40 -28 -68t-68 -28h-416v-640h896z" />
    <glyph glyph-name="paper_clip" unicode="&#xf0c6;" horiz-adv-x="1408" 
d="M1404 151q0 -117 -79 -196t-196 -79q-135 0 -235 100l-777 776q-113 115 -113 271q0 159 110 270t269 111q158 0 273 -113l605 -606q10 -10 10 -22q0 -16 -30.5 -46.5t-46.5 -30.5q-13 0 -23 10l-606 607q-79 77 -181 77q-106 0 -179 -75t-73 -181q0 -105 76 -181
l776 -777q63 -63 145 -63q64 0 106 42t42 106q0 82 -63 145l-581 581q-26 24 -60 24q-29 0 -48 -19t-19 -48q0 -32 25 -59l410 -410q10 -10 10 -22q0 -16 -31 -47t-47 -31q-12 0 -22 10l-410 410q-63 61 -63 149q0 82 57 139t139 57q88 0 149 -63l581 -581q100 -98 100 -235
z" />
    <glyph glyph-name="save" unicode="&#xf0c7;" 
d="M384 0h768v384h-768v-384zM1280 0h128v896q0 14 -10 38.5t-20 34.5l-281 281q-10 10 -34 20t-39 10v-416q0 -40 -28 -68t-68 -28h-576q-40 0 -68 28t-28 68v416h-128v-1280h128v416q0 40 28 68t68 28h832q40 0 68 -28t28 -68v-416zM896 928v320q0 13 -9.5 22.5t-22.5 9.5
h-192q-13 0 -22.5 -9.5t-9.5 -22.5v-320q0 -13 9.5 -22.5t22.5 -9.5h192q13 0 22.5 9.5t9.5 22.5zM1536 896v-928q0 -40 -28 -68t-68 -28h-1344q-40 0 -68 28t-28 68v1344q0 40 28 68t68 28h928q40 0 88 -20t76 -48l280 -280q28 -28 48 -76t20 -88z" />
    <glyph glyph-name="sign_blank" unicode="&#xf0c8;" 
d="M1536 1120v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z" />
    <glyph glyph-name="reorder" unicode="&#xf0c9;" 
d="M1536 192v-128q0 -26 -19 -45t-45 -19h-1408q-26 0 -45 19t-19 45v128q0 26 19 45t45 19h1408q26 0 45 -19t19 -45zM1536 704v-128q0 -26 -19 -45t-45 -19h-1408q-26 0 -45 19t-19 45v128q0 26 19 45t45 19h1408q26 0 45 -19t19 -45zM1536 1216v-128q0 -26 -19 -45
t-45 -19h-1408q-26 0 -45 19t-19 45v128q0 26 19 45t45 19h1408q26 0 45 -19t19 -45z" />
    <glyph glyph-name="ul" unicode="&#xf0ca;" horiz-adv-x="1792" 
d="M384 128q0 -80 -56 -136t-136 -56t-136 56t-56 136t56 136t136 56t136 -56t56 -136zM384 640q0 -80 -56 -136t-136 -56t-136 56t-56 136t56 136t136 56t136 -56t56 -136zM1792 224v-192q0 -13 -9.5 -22.5t-22.5 -9.5h-1216q-13 0 -22.5 9.5t-9.5 22.5v192q0 13 9.5 22.5
t22.5 9.5h1216q13 0 22.5 -9.5t9.5 -22.5zM384 1152q0 -80 -56 -136t-136 -56t-136 56t-56 136t56 136t136 56t136 -56t56 -136zM1792 736v-192q0 -13 -9.5 -22.5t-22.5 -9.5h-1216q-13 0 -22.5 9.5t-9.5 22.5v192q0 13 9.5 22.5t22.5 9.5h1216q13 0 22.5 -9.5t9.5 -22.5z
M1792 1248v-192q0 -13 -9.5 -22.5t-22.5 -9.5h-1216q-13 0 -22.5 9.5t-9.5 22.5v192q0 13 9.5 22.5t22.5 9.5h1216q13 0 22.5 -9.5t9.5 -22.5z" />
    <glyph glyph-name="ol" unicode="&#xf0cb;" horiz-adv-x="1792" 
d="M381 -84q0 -80 -54.5 -126t-135.5 -46q-106 0 -172 66l57 88q49 -45 106 -45q29 0 50.5 14.5t21.5 42.5q0 64 -105 56l-26 56q8 10 32.5 43.5t42.5 54t37 38.5v1q-16 0 -48.5 -1t-48.5 -1v-53h-106v152h333v-88l-95 -115q51 -12 81 -49t30 -88zM383 543v-159h-362
q-6 36 -6 54q0 51 23.5 93t56.5 68t66 47.5t56.5 43.5t23.5 45q0 25 -14.5 38.5t-39.5 13.5q-46 0 -81 -58l-85 59q24 51 71.5 79.5t105.5 28.5q73 0 123 -41.5t50 -112.5q0 -50 -34 -91.5t-75 -64.5t-75.5 -50.5t-35.5 -52.5h127v60h105zM1792 224v-192q0 -13 -9.5 -22.5
t-22.5 -9.5h-1216q-13 0 -22.5 9.5t-9.5 22.5v192q0 14 9 23t23 9h1216q13 0 22.5 -9.5t9.5 -22.5zM384 1123v-99h-335v99h107q0 41 0.5 121.5t0.5 121.5v12h-2q-8 -17 -50 -54l-71 76l136 127h106v-404h108zM1792 736v-192q0 -13 -9.5 -22.5t-22.5 -9.5h-1216
q-13 0 -22.5 9.5t-9.5 22.5v192q0 14 9 23t23 9h1216q13 0 22.5 -9.5t9.5 -22.5zM1792 1248v-192q0 -13 -9.5 -22.5t-22.5 -9.5h-1216q-13 0 -22.5 9.5t-9.5 22.5v192q0 13 9.5 22.5t22.5 9.5h1216q13 0 22.5 -9.5t9.5 -22.5z" />
    <glyph glyph-name="strikethrough" unicode="&#xf0cc;" horiz-adv-x="1792" 
d="M1760 640q14 0 23 -9t9 -23v-64q0 -14 -9 -23t-23 -9h-1728q-14 0 -23 9t-9 23v64q0 14 9 23t23 9h1728zM483 704q-28 35 -51 80q-48 98 -48 188q0 181 134 309q133 127 393 127q50 0 167 -19q66 -12 177 -48q10 -38 21 -118q14 -123 14 -183q0 -18 -5 -45l-12 -3l-84 6
l-14 2q-50 149 -103 205q-88 91 -210 91q-114 0 -182 -59q-67 -58 -67 -146q0 -73 66 -140t279 -129q69 -20 173 -66q58 -28 95 -52h-743zM990 448h411q7 -39 7 -92q0 -111 -41 -212q-23 -56 -71 -104q-37 -35 -109 -81q-80 -48 -153 -66q-80 -21 -203 -21q-114 0 -195 23
l-140 40q-57 16 -72 28q-8 8 -8 22v13q0 108 -2 156q-1 30 0 68l2 37v44l102 2q15 -34 30 -71t22.5 -56t12.5 -27q35 -57 80 -94q43 -36 105 -57q59 -22 132 -22q64 0 139 27q77 26 122 86q47 61 47 129q0 84 -81 157q-34 29 -137 71z" />
    <glyph glyph-name="underline" unicode="&#xf0cd;" 
d="M48 1313q-37 2 -45 4l-3 88q13 1 40 1q60 0 112 -4q132 -7 166 -7q86 0 168 3q116 4 146 5q56 0 86 2l-1 -14l2 -64v-9q-60 -9 -124 -9q-60 0 -79 -25q-13 -14 -13 -132q0 -13 0.5 -32.5t0.5 -25.5l1 -229l14 -280q6 -124 51 -202q35 -59 96 -92q88 -47 177 -47
q104 0 191 28q56 18 99 51q48 36 65 64q36 56 53 114q21 73 21 229q0 79 -3.5 128t-11 122.5t-13.5 159.5l-4 59q-5 67 -24 88q-34 35 -77 34l-100 -2l-14 3l2 86h84l205 -10q76 -3 196 10l18 -2q6 -38 6 -51q0 -7 -4 -31q-45 -12 -84 -13q-73 -11 -79 -17q-15 -15 -15 -41
q0 -7 1.5 -27t1.5 -31q8 -19 22 -396q6 -195 -15 -304q-15 -76 -41 -122q-38 -65 -112 -123q-75 -57 -182 -89q-109 -33 -255 -33q-167 0 -284 46q-119 47 -179 122q-61 76 -83 195q-16 80 -16 237v333q0 188 -17 213q-25 36 -147 39zM1536 -96v64q0 14 -9 23t-23 9h-1472
q-14 0 -23 -9t-9 -23v-64q0 -14 9 -23t23 -9h1472q14 0 23 9t9 23z" />
    <glyph glyph-name="table" unicode="&#xf0ce;" horiz-adv-x="1664" 
d="M512 160v192q0 14 -9 23t-23 9h-320q-14 0 -23 -9t-9 -23v-192q0 -14 9 -23t23 -9h320q14 0 23 9t9 23zM512 544v192q0 14 -9 23t-23 9h-320q-14 0 -23 -9t-9 -23v-192q0 -14 9 -23t23 -9h320q14 0 23 9t9 23zM1024 160v192q0 14 -9 23t-23 9h-320q-14 0 -23 -9t-9 -23
v-192q0 -14 9 -23t23 -9h320q14 0 23 9t9 23zM512 928v192q0 14 -9 23t-23 9h-320q-14 0 -23 -9t-9 -23v-192q0 -14 9 -23t23 -9h320q14 0 23 9t9 23zM1024 544v192q0 14 -9 23t-23 9h-320q-14 0 -23 -9t-9 -23v-192q0 -14 9 -23t23 -9h320q14 0 23 9t9 23zM1536 160v192
q0 14 -9 23t-23 9h-320q-14 0 -23 -9t-9 -23v-192q0 -14 9 -23t23 -9h320q14 0 23 9t9 23zM1024 928v192q0 14 -9 23t-23 9h-320q-14 0 -23 -9t-9 -23v-192q0 -14 9 -23t23 -9h320q14 0 23 9t9 23zM1536 544v192q0 14 -9 23t-23 9h-320q-14 0 -23 -9t-9 -23v-192
q0 -14 9 -23t23 -9h320q14 0 23 9t9 23zM1536 928v192q0 14 -9 23t-23 9h-320q-14 0 -23 -9t-9 -23v-192q0 -14 9 -23t23 -9h320q14 0 23 9t9 23zM1664 1248v-1088q0 -66 -47 -113t-113 -47h-1344q-66 0 -113 47t-47 113v1088q0 66 47 113t113 47h1344q66 0 113 -47t47 -113
z" />
    <glyph glyph-name="magic" unicode="&#xf0d0;" horiz-adv-x="1664" 
d="M1190 955l293 293l-107 107l-293 -293zM1637 1248q0 -27 -18 -45l-1286 -1286q-18 -18 -45 -18t-45 18l-198 198q-18 18 -18 45t18 45l1286 1286q18 18 45 18t45 -18l198 -198q18 -18 18 -45zM286 1438l98 -30l-98 -30l-30 -98l-30 98l-98 30l98 30l30 98zM636 1276
l196 -60l-196 -60l-60 -196l-60 196l-196 60l196 60l60 196zM1566 798l98 -30l-98 -30l-30 -98l-30 98l-98 30l98 30l30 98zM926 1438l98 -30l-98 -30l-30 -98l-30 98l-98 30l98 30l30 98z" />
    <glyph glyph-name="truck" unicode="&#xf0d1;" horiz-adv-x="1792" 
d="M640 128q0 52 -38 90t-90 38t-90 -38t-38 -90t38 -90t90 -38t90 38t38 90zM256 640h384v256h-158q-13 0 -22 -9l-195 -195q-9 -9 -9 -22v-30zM1536 128q0 52 -38 90t-90 38t-90 -38t-38 -90t38 -90t90 -38t90 38t38 90zM1792 1216v-1024q0 -15 -4 -26.5t-13.5 -18.5
t-16.5 -11.5t-23.5 -6t-22.5 -2t-25.5 0t-22.5 0.5q0 -106 -75 -181t-181 -75t-181 75t-75 181h-384q0 -106 -75 -181t-181 -75t-181 75t-75 181h-64q-3 0 -22.5 -0.5t-25.5 0t-22.5 2t-23.5 6t-16.5 11.5t-13.5 18.5t-4 26.5q0 26 19 45t45 19v320q0 8 -0.5 35t0 38
t2.5 34.5t6.5 37t14 30.5t22.5 30l198 198q19 19 50.5 32t58.5 13h160v192q0 26 19 45t45 19h1024q26 0 45 -19t19 -45z" />
    <glyph glyph-name="pinterest" unicode="&#xf0d2;" 
d="M1536 640q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103q-111 0 -218 32q59 93 78 164q9 34 54 211q20 -39 73 -67.5t114 -28.5q121 0 216 68.5t147 188.5t52 270q0 114 -59.5 214t-172.5 163t-255 63q-105 0 -196 -29t-154.5 -77t-109 -110.5t-67 -129.5t-21.5 -134
q0 -104 40 -183t117 -111q30 -12 38 20q2 7 8 31t8 30q6 23 -11 43q-51 61 -51 151q0 151 104.5 259.5t273.5 108.5q151 0 235.5 -82t84.5 -213q0 -170 -68.5 -289t-175.5 -119q-61 0 -98 43.5t-23 104.5q8 35 26.5 93.5t30 103t11.5 75.5q0 50 -27 83t-77 33
q-62 0 -105 -57t-43 -142q0 -73 25 -122l-99 -418q-17 -70 -13 -177q-206 91 -333 281t-127 423q0 209 103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="pinterest_sign" unicode="&#xf0d3;" 
d="M1248 1408q119 0 203.5 -84.5t84.5 -203.5v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-725q85 122 108 210q9 34 53 209q21 -39 73.5 -67t112.5 -28q181 0 295.5 147.5t114.5 373.5q0 84 -35 162.5t-96.5 139t-152.5 97t-197 36.5q-104 0 -194.5 -28.5t-153 -76.5
t-107.5 -109.5t-66.5 -128t-21.5 -132.5q0 -102 39.5 -180t116.5 -110q13 -5 23.5 0t14.5 19q10 44 15 61q6 23 -11 42q-50 62 -50 150q0 150 103.5 256.5t270.5 106.5q149 0 232.5 -81t83.5 -210q0 -168 -67.5 -286t-173.5 -118q-60 0 -97 43.5t-23 103.5q8 34 26.5 92.5
t29.5 102t11 74.5q0 49 -26.5 81.5t-75.5 32.5q-61 0 -103.5 -56.5t-42.5 -139.5q0 -72 24 -121l-98 -414q-24 -100 -7 -254h-183q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960z" />
    <glyph glyph-name="google_plus_sign" unicode="&#xf0d4;" 
d="M917 631q0 26 -6 64h-362v-132h217q-3 -24 -16.5 -50t-37.5 -53t-66.5 -44.5t-96.5 -17.5q-99 0 -169 71t-70 171t70 171t169 71q92 0 153 -59l104 101q-108 100 -257 100q-160 0 -272 -112.5t-112 -271.5t112 -271.5t272 -112.5q165 0 266.5 105t101.5 270zM1262 585
h109v110h-109v110h-110v-110h-110v-110h110v-110h110v110zM1536 1120v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z" />
    <glyph glyph-name="google_plus" unicode="&#xf0d5;" horiz-adv-x="2304" 
d="M1437 623q0 -208 -87 -370.5t-248 -254t-369 -91.5q-149 0 -285 58t-234 156t-156 234t-58 285t58 285t156 234t234 156t285 58q286 0 491 -192l-199 -191q-117 113 -292 113q-123 0 -227.5 -62t-165.5 -168.5t-61 -232.5t61 -232.5t165.5 -168.5t227.5 -62
q83 0 152.5 23t114.5 57.5t78.5 78.5t49 83t21.5 74h-416v252h692q12 -63 12 -122zM2304 745v-210h-209v-209h-210v209h-209v210h209v209h210v-209h209z" />
    <glyph glyph-name="money" unicode="&#xf0d6;" horiz-adv-x="1920" 
d="M768 384h384v96h-128v448h-114l-148 -137l77 -80q42 37 55 57h2v-288h-128v-96zM1280 640q0 -70 -21 -142t-59.5 -134t-101.5 -101t-138 -39t-138 39t-101.5 101t-59.5 134t-21 142t21 142t59.5 134t101.5 101t138 39t138 -39t101.5 -101t59.5 -134t21 -142zM1792 384
v512q-106 0 -181 75t-75 181h-1152q0 -106 -75 -181t-181 -75v-512q106 0 181 -75t75 -181h1152q0 106 75 181t181 75zM1920 1216v-1152q0 -26 -19 -45t-45 -19h-1792q-26 0 -45 19t-19 45v1152q0 26 19 45t45 19h1792q26 0 45 -19t19 -45z" />
    <glyph glyph-name="caret_down" unicode="&#xf0d7;" horiz-adv-x="1024" 
d="M1024 832q0 -26 -19 -45l-448 -448q-19 -19 -45 -19t-45 19l-448 448q-19 19 -19 45t19 45t45 19h896q26 0 45 -19t19 -45z" />
    <glyph glyph-name="caret_up" unicode="&#xf0d8;" horiz-adv-x="1024" 
d="M1024 320q0 -26 -19 -45t-45 -19h-896q-26 0 -45 19t-19 45t19 45l448 448q19 19 45 19t45 -19l448 -448q19 -19 19 -45z" />
    <glyph glyph-name="caret_left" unicode="&#xf0d9;" horiz-adv-x="640" 
d="M640 1088v-896q0 -26 -19 -45t-45 -19t-45 19l-448 448q-19 19 -19 45t19 45l448 448q19 19 45 19t45 -19t19 -45z" />
    <glyph glyph-name="caret_right" unicode="&#xf0da;" horiz-adv-x="640" 
d="M576 640q0 -26 -19 -45l-448 -448q-19 -19 -45 -19t-45 19t-19 45v896q0 26 19 45t45 19t45 -19l448 -448q19 -19 19 -45z" />
    <glyph glyph-name="columns" unicode="&#xf0db;" horiz-adv-x="1664" 
d="M160 0h608v1152h-640v-1120q0 -13 9.5 -22.5t22.5 -9.5zM1536 32v1120h-640v-1152h608q13 0 22.5 9.5t9.5 22.5zM1664 1248v-1216q0 -66 -47 -113t-113 -47h-1344q-66 0 -113 47t-47 113v1216q0 66 47 113t113 47h1344q66 0 113 -47t47 -113z" />
    <glyph glyph-name="sort" unicode="&#xf0dc;" horiz-adv-x="1024" 
d="M1024 448q0 -26 -19 -45l-448 -448q-19 -19 -45 -19t-45 19l-448 448q-19 19 -19 45t19 45t45 19h896q26 0 45 -19t19 -45zM1024 832q0 -26 -19 -45t-45 -19h-896q-26 0 -45 19t-19 45t19 45l448 448q19 19 45 19t45 -19l448 -448q19 -19 19 -45z" />
    <glyph glyph-name="sort_down" unicode="&#xf0dd;" horiz-adv-x="1024" 
d="M1024 448q0 -26 -19 -45l-448 -448q-19 -19 -45 -19t-45 19l-448 448q-19 19 -19 45t19 45t45 19h896q26 0 45 -19t19 -45z" />
    <glyph glyph-name="sort_up" unicode="&#xf0de;" horiz-adv-x="1024" 
d="M1024 832q0 -26 -19 -45t-45 -19h-896q-26 0 -45 19t-19 45t19 45l448 448q19 19 45 19t45 -19l448 -448q19 -19 19 -45z" />
    <glyph glyph-name="envelope_alt" unicode="&#xf0e0;" horiz-adv-x="1792" 
d="M1792 826v-794q0 -66 -47 -113t-113 -47h-1472q-66 0 -113 47t-47 113v794q44 -49 101 -87q362 -246 497 -345q57 -42 92.5 -65.5t94.5 -48t110 -24.5h1h1q51 0 110 24.5t94.5 48t92.5 65.5q170 123 498 345q57 39 100 87zM1792 1120q0 -79 -49 -151t-122 -123
q-376 -261 -468 -325q-10 -7 -42.5 -30.5t-54 -38t-52 -32.5t-57.5 -27t-50 -9h-1h-1q-23 0 -50 9t-57.5 27t-52 32.5t-54 38t-42.5 30.5q-91 64 -262 182.5t-205 142.5q-62 42 -117 115.5t-55 136.5q0 78 41.5 130t118.5 52h1472q65 0 112.5 -47t47.5 -113z" />
    <glyph glyph-name="linkedin" unicode="&#xf0e1;" 
d="M349 911v-991h-330v991h330zM370 1217q1 -73 -50.5 -122t-135.5 -49h-2q-82 0 -132 49t-50 122q0 74 51.5 122.5t134.5 48.5t133 -48.5t51 -122.5zM1536 488v-568h-329v530q0 105 -40.5 164.5t-126.5 59.5q-63 0 -105.5 -34.5t-63.5 -85.5q-11 -30 -11 -81v-553h-329
q2 399 2 647t-1 296l-1 48h329v-144h-2q20 32 41 56t56.5 52t87 43.5t114.5 15.5q171 0 275 -113.5t104 -332.5z" />
    <glyph glyph-name="undo" unicode="&#xf0e2;" 
d="M1536 640q0 -156 -61 -298t-164 -245t-245 -164t-298 -61q-172 0 -327 72.5t-264 204.5q-7 10 -6.5 22.5t8.5 20.5l137 138q10 9 25 9q16 -2 23 -12q73 -95 179 -147t225 -52q104 0 198.5 40.5t163.5 109.5t109.5 163.5t40.5 198.5t-40.5 198.5t-109.5 163.5
t-163.5 109.5t-198.5 40.5q-98 0 -188 -35.5t-160 -101.5l137 -138q31 -30 14 -69q-17 -40 -59 -40h-448q-26 0 -45 19t-19 45v448q0 42 40 59q39 17 69 -14l130 -129q107 101 244.5 156.5t284.5 55.5q156 0 298 -61t245 -164t164 -245t61 -298z" />
    <glyph glyph-name="legal" unicode="&#xf0e3;" horiz-adv-x="1792" 
d="M1771 0q0 -53 -37 -90l-107 -108q-39 -37 -91 -37q-53 0 -90 37l-363 364q-38 36 -38 90q0 53 43 96l-256 256l-126 -126q-14 -14 -34 -14t-34 14q2 -2 12.5 -12t12.5 -13t10 -11.5t10 -13.5t6 -13.5t5.5 -16.5t1.5 -18q0 -38 -28 -68q-3 -3 -16.5 -18t-19 -20.5
t-18.5 -16.5t-22 -15.5t-22 -9t-26 -4.5q-40 0 -68 28l-408 408q-28 28 -28 68q0 13 4.5 26t9 22t15.5 22t16.5 18.5t20.5 19t18 16.5q30 28 68 28q10 0 18 -1.5t16.5 -5.5t13.5 -6t13.5 -10t11.5 -10t13 -12.5t12 -12.5q-14 14 -14 34t14 34l348 348q14 14 34 14t34 -14
q-2 2 -12.5 12t-12.5 13t-10 11.5t-10 13.5t-6 13.5t-5.5 16.5t-1.5 18q0 38 28 68q3 3 16.5 18t19 20.5t18.5 16.5t22 15.5t22 9t26 4.5q40 0 68 -28l408 -408q28 -28 28 -68q0 -13 -4.5 -26t-9 -22t-15.5 -22t-16.5 -18.5t-20.5 -19t-18 -16.5q-30 -28 -68 -28
q-10 0 -18 1.5t-16.5 5.5t-13.5 6t-13.5 10t-11.5 10t-13 12.5t-12 12.5q14 -14 14 -34t-14 -34l-126 -126l256 -256q43 43 96 43q52 0 91 -37l363 -363q37 -39 37 -91z" />
    <glyph glyph-name="dashboard" unicode="&#xf0e4;" horiz-adv-x="1792" 
d="M384 384q0 53 -37.5 90.5t-90.5 37.5t-90.5 -37.5t-37.5 -90.5t37.5 -90.5t90.5 -37.5t90.5 37.5t37.5 90.5zM576 832q0 53 -37.5 90.5t-90.5 37.5t-90.5 -37.5t-37.5 -90.5t37.5 -90.5t90.5 -37.5t90.5 37.5t37.5 90.5zM1004 351l101 382q6 26 -7.5 48.5t-38.5 29.5
t-48 -6.5t-30 -39.5l-101 -382q-60 -5 -107 -43.5t-63 -98.5q-20 -77 20 -146t117 -89t146 20t89 117q16 60 -6 117t-72 91zM1664 384q0 53 -37.5 90.5t-90.5 37.5t-90.5 -37.5t-37.5 -90.5t37.5 -90.5t90.5 -37.5t90.5 37.5t37.5 90.5zM1024 1024q0 53 -37.5 90.5
t-90.5 37.5t-90.5 -37.5t-37.5 -90.5t37.5 -90.5t90.5 -37.5t90.5 37.5t37.5 90.5zM1472 832q0 53 -37.5 90.5t-90.5 37.5t-90.5 -37.5t-37.5 -90.5t37.5 -90.5t90.5 -37.5t90.5 37.5t37.5 90.5zM1792 384q0 -261 -141 -483q-19 -29 -54 -29h-1402q-35 0 -54 29
q-141 221 -141 483q0 182 71 348t191 286t286 191t348 71t348 -71t286 -191t191 -286t71 -348z" />
    <glyph glyph-name="comment_alt" unicode="&#xf0e5;" horiz-adv-x="1792" 
d="M896 1152q-204 0 -381.5 -69.5t-282 -187.5t-104.5 -255q0 -112 71.5 -213.5t201.5 -175.5l87 -50l-27 -96q-24 -91 -70 -172q152 63 275 171l43 38l57 -6q69 -8 130 -8q204 0 381.5 69.5t282 187.5t104.5 255t-104.5 255t-282 187.5t-381.5 69.5zM1792 640
q0 -174 -120 -321.5t-326 -233t-450 -85.5q-70 0 -145 8q-198 -175 -460 -242q-49 -14 -114 -22h-5q-15 0 -27 10.5t-16 27.5v1q-3 4 -0.5 12t2 10t4.5 9.5l6 9t7 8.5t8 9q7 8 31 34.5t34.5 38t31 39.5t32.5 51t27 59t26 76q-157 89 -247.5 220t-90.5 281q0 174 120 321.5
t326 233t450 85.5t450 -85.5t326 -233t120 -321.5z" />
    <glyph glyph-name="comments_alt" unicode="&#xf0e6;" horiz-adv-x="1792" 
d="M704 1152q-153 0 -286 -52t-211.5 -141t-78.5 -191q0 -82 53 -158t149 -132l97 -56l-35 -84q34 20 62 39l44 31l53 -10q78 -14 153 -14q153 0 286 52t211.5 141t78.5 191t-78.5 191t-211.5 141t-286 52zM704 1280q191 0 353.5 -68.5t256.5 -186.5t94 -257t-94 -257
t-256.5 -186.5t-353.5 -68.5q-86 0 -176 16q-124 -88 -278 -128q-36 -9 -86 -16h-3q-11 0 -20.5 8t-11.5 21q-1 3 -1 6.5t0.5 6.5t2 6l2.5 5t3.5 5.5t4 5t4.5 5t4 4.5q5 6 23 25t26 29.5t22.5 29t25 38.5t20.5 44q-124 72 -195 177t-71 224q0 139 94 257t256.5 186.5
t353.5 68.5zM1526 111q10 -24 20.5 -44t25 -38.5t22.5 -29t26 -29.5t23 -25q1 -1 4 -4.5t4.5 -5t4 -5t3.5 -5.5l2.5 -5t2 -6t0.5 -6.5t-1 -6.5q-3 -14 -13 -22t-22 -7q-50 7 -86 16q-154 40 -278 128q-90 -16 -176 -16q-271 0 -472 132q58 -4 88 -4q161 0 309 45t264 129
q125 92 192 212t67 254q0 77 -23 152q129 -71 204 -178t75 -230q0 -120 -71 -224.5t-195 -176.5z" />
    <glyph glyph-name="bolt" unicode="&#xf0e7;" horiz-adv-x="896" 
d="M885 970q18 -20 7 -44l-540 -1157q-13 -25 -42 -25q-4 0 -14 2q-17 5 -25.5 19t-4.5 30l197 808l-406 -101q-4 -1 -12 -1q-18 0 -31 11q-18 15 -13 39l201 825q4 14 16 23t28 9h328q19 0 32 -12.5t13 -29.5q0 -8 -5 -18l-171 -463l396 98q8 2 12 2q19 0 34 -15z" />
    <glyph glyph-name="sitemap" unicode="&#xf0e8;" horiz-adv-x="1792" 
d="M1792 288v-320q0 -40 -28 -68t-68 -28h-320q-40 0 -68 28t-28 68v320q0 40 28 68t68 28h96v192h-512v-192h96q40 0 68 -28t28 -68v-320q0 -40 -28 -68t-68 -28h-320q-40 0 -68 28t-28 68v320q0 40 28 68t68 28h96v192h-512v-192h96q40 0 68 -28t28 -68v-320
q0 -40 -28 -68t-68 -28h-320q-40 0 -68 28t-28 68v320q0 40 28 68t68 28h96v192q0 52 38 90t90 38h512v192h-96q-40 0 -68 28t-28 68v320q0 40 28 68t68 28h320q40 0 68 -28t28 -68v-320q0 -40 -28 -68t-68 -28h-96v-192h512q52 0 90 -38t38 -90v-192h96q40 0 68 -28t28 -68
z" />
    <glyph glyph-name="umbrella" unicode="&#xf0e9;" horiz-adv-x="1664" 
d="M896 708v-580q0 -104 -76 -180t-180 -76t-180 76t-76 180q0 26 19 45t45 19t45 -19t19 -45q0 -50 39 -89t89 -39t89 39t39 89v580q33 11 64 11t64 -11zM1664 681q0 -13 -9.5 -22.5t-22.5 -9.5q-11 0 -23 10q-49 46 -93 69t-102 23q-68 0 -128 -37t-103 -97
q-7 -10 -17.5 -28t-14.5 -24q-11 -17 -28 -17q-18 0 -29 17q-4 6 -14.5 24t-17.5 28q-43 60 -102.5 97t-127.5 37t-127.5 -37t-102.5 -97q-7 -10 -17.5 -28t-14.5 -24q-11 -17 -29 -17q-17 0 -28 17q-4 6 -14.5 24t-17.5 28q-43 60 -103 97t-128 37q-58 0 -102 -23t-93 -69
q-12 -10 -23 -10q-13 0 -22.5 9.5t-9.5 22.5q0 5 1 7q45 183 172.5 319.5t298 204.5t360.5 68q140 0 274.5 -40t246.5 -113.5t194.5 -187t115.5 -251.5q1 -2 1 -7zM896 1408v-98q-42 2 -64 2t-64 -2v98q0 26 19 45t45 19t45 -19t19 -45z" />
    <glyph glyph-name="paste" unicode="&#xf0ea;" horiz-adv-x="1792" 
d="M768 -128h896v640h-416q-40 0 -68 28t-28 68v416h-384v-1152zM1024 1312v64q0 13 -9.5 22.5t-22.5 9.5h-704q-13 0 -22.5 -9.5t-9.5 -22.5v-64q0 -13 9.5 -22.5t22.5 -9.5h704q13 0 22.5 9.5t9.5 22.5zM1280 640h299l-299 299v-299zM1792 512v-672q0 -40 -28 -68t-68 -28
h-960q-40 0 -68 28t-28 68v160h-544q-40 0 -68 28t-28 68v1344q0 40 28 68t68 28h1088q40 0 68 -28t28 -68v-328q21 -13 36 -28l408 -408q28 -28 48 -76t20 -88z" />
    <glyph glyph-name="light_bulb" unicode="&#xf0eb;" horiz-adv-x="1024" 
d="M736 960q0 -13 -9.5 -22.5t-22.5 -9.5t-22.5 9.5t-9.5 22.5q0 46 -54 71t-106 25q-13 0 -22.5 9.5t-9.5 22.5t9.5 22.5t22.5 9.5q50 0 99.5 -16t87 -54t37.5 -90zM896 960q0 72 -34.5 134t-90 101.5t-123 62t-136.5 22.5t-136.5 -22.5t-123 -62t-90 -101.5t-34.5 -134
q0 -101 68 -180q10 -11 30.5 -33t30.5 -33q128 -153 141 -298h228q13 145 141 298q10 11 30.5 33t30.5 33q68 79 68 180zM1024 960q0 -155 -103 -268q-45 -49 -74.5 -87t-59.5 -95.5t-34 -107.5q47 -28 47 -82q0 -37 -25 -64q25 -27 25 -64q0 -52 -45 -81q13 -23 13 -47
q0 -46 -31.5 -71t-77.5 -25q-20 -44 -60 -70t-87 -26t-87 26t-60 70q-46 0 -77.5 25t-31.5 71q0 24 13 47q-45 29 -45 81q0 37 25 64q-25 27 -25 64q0 54 47 82q-4 50 -34 107.5t-59.5 95.5t-74.5 87q-103 113 -103 268q0 99 44.5 184.5t117 142t164 89t186.5 32.5
t186.5 -32.5t164 -89t117 -142t44.5 -184.5z" />
    <glyph glyph-name="exchange" unicode="&#xf0ec;" horiz-adv-x="1792" 
d="M1792 352v-192q0 -13 -9.5 -22.5t-22.5 -9.5h-1376v-192q0 -13 -9.5 -22.5t-22.5 -9.5q-12 0 -24 10l-319 320q-9 9 -9 22q0 14 9 23l320 320q9 9 23 9q13 0 22.5 -9.5t9.5 -22.5v-192h1376q13 0 22.5 -9.5t9.5 -22.5zM1792 896q0 -14 -9 -23l-320 -320q-9 -9 -23 -9
q-13 0 -22.5 9.5t-9.5 22.5v192h-1376q-13 0 -22.5 9.5t-9.5 22.5v192q0 13 9.5 22.5t22.5 9.5h1376v192q0 14 9 23t23 9q12 0 24 -10l319 -319q9 -9 9 -23z" />
    <glyph glyph-name="cloud_download" unicode="&#xf0ed;" horiz-adv-x="1920" 
d="M1280 608q0 14 -9 23t-23 9h-224v352q0 13 -9.5 22.5t-22.5 9.5h-192q-13 0 -22.5 -9.5t-9.5 -22.5v-352h-224q-13 0 -22.5 -9.5t-9.5 -22.5q0 -14 9 -23l352 -352q9 -9 23 -9t23 9l351 351q10 12 10 24zM1920 384q0 -159 -112.5 -271.5t-271.5 -112.5h-1088
q-185 0 -316.5 131.5t-131.5 316.5q0 130 70 240t188 165q-2 30 -2 43q0 212 150 362t362 150q156 0 285.5 -87t188.5 -231q71 62 166 62q106 0 181 -75t75 -181q0 -76 -41 -138q130 -31 213.5 -135.5t83.5 -238.5z" />
    <glyph glyph-name="cloud_upload" unicode="&#xf0ee;" horiz-adv-x="1920" 
d="M1280 672q0 14 -9 23l-352 352q-9 9 -23 9t-23 -9l-351 -351q-10 -12 -10 -24q0 -14 9 -23t23 -9h224v-352q0 -13 9.5 -22.5t22.5 -9.5h192q13 0 22.5 9.5t9.5 22.5v352h224q13 0 22.5 9.5t9.5 22.5zM1920 384q0 -159 -112.5 -271.5t-271.5 -112.5h-1088
q-185 0 -316.5 131.5t-131.5 316.5q0 130 70 240t188 165q-2 30 -2 43q0 212 150 362t362 150q156 0 285.5 -87t188.5 -231q71 62 166 62q106 0 181 -75t75 -181q0 -76 -41 -138q130 -31 213.5 -135.5t83.5 -238.5z" />
    <glyph glyph-name="user_md" unicode="&#xf0f0;" horiz-adv-x="1408" 
d="M384 192q0 -26 -19 -45t-45 -19t-45 19t-19 45t19 45t45 19t45 -19t19 -45zM1408 131q0 -121 -73 -190t-194 -69h-874q-121 0 -194 69t-73 190q0 68 5.5 131t24 138t47.5 132.5t81 103t120 60.5q-22 -52 -22 -120v-203q-58 -20 -93 -70t-35 -111q0 -80 56 -136t136 -56
t136 56t56 136q0 61 -35.5 111t-92.5 70v203q0 62 25 93q132 -104 295 -104t295 104q25 -31 25 -93v-64q-106 0 -181 -75t-75 -181v-89q-32 -29 -32 -71q0 -40 28 -68t68 -28t68 28t28 68q0 42 -32 71v89q0 52 38 90t90 38t90 -38t38 -90v-89q-32 -29 -32 -71q0 -40 28 -68
t68 -28t68 28t28 68q0 42 -32 71v89q0 68 -34.5 127.5t-93.5 93.5q0 10 0.5 42.5t0 48t-2.5 41.5t-7 47t-13 40q68 -15 120 -60.5t81 -103t47.5 -132.5t24 -138t5.5 -131zM1088 1024q0 -159 -112.5 -271.5t-271.5 -112.5t-271.5 112.5t-112.5 271.5t112.5 271.5t271.5 112.5
t271.5 -112.5t112.5 -271.5z" />
    <glyph glyph-name="stethoscope" unicode="&#xf0f1;" horiz-adv-x="1408" 
d="M1280 832q0 26 -19 45t-45 19t-45 -19t-19 -45t19 -45t45 -19t45 19t19 45zM1408 832q0 -62 -35.5 -111t-92.5 -70v-395q0 -159 -131.5 -271.5t-316.5 -112.5t-316.5 112.5t-131.5 271.5v132q-164 20 -274 128t-110 252v512q0 26 19 45t45 19q6 0 16 -2q17 30 47 48
t65 18q53 0 90.5 -37.5t37.5 -90.5t-37.5 -90.5t-90.5 -37.5q-33 0 -64 18v-402q0 -106 94 -181t226 -75t226 75t94 181v402q-31 -18 -64 -18q-53 0 -90.5 37.5t-37.5 90.5t37.5 90.5t90.5 37.5q35 0 65 -18t47 -48q10 2 16 2q26 0 45 -19t19 -45v-512q0 -144 -110 -252
t-274 -128v-132q0 -106 94 -181t226 -75t226 75t94 181v395q-57 21 -92.5 70t-35.5 111q0 80 56 136t136 56t136 -56t56 -136z" />
    <glyph glyph-name="suitcase" unicode="&#xf0f2;" horiz-adv-x="1792" 
d="M640 1152h512v128h-512v-128zM288 1152v-1280h-64q-92 0 -158 66t-66 158v832q0 92 66 158t158 66h64zM1408 1152v-1280h-1024v1280h128v160q0 40 28 68t68 28h576q40 0 68 -28t28 -68v-160h128zM1792 928v-832q0 -92 -66 -158t-158 -66h-64v1280h64q92 0 158 -66
t66 -158z" />
    <glyph glyph-name="bell_alt" unicode="&#xf0f3;" horiz-adv-x="1792" 
d="M912 -160q0 16 -16 16q-59 0 -101.5 42.5t-42.5 101.5q0 16 -16 16t-16 -16q0 -73 51.5 -124.5t124.5 -51.5q16 0 16 16zM1728 128q0 -52 -38 -90t-90 -38h-448q0 -106 -75 -181t-181 -75t-181 75t-75 181h-448q-52 0 -90 38t-38 90q50 42 91 88t85 119.5t74.5 158.5
t50 206t19.5 260q0 152 117 282.5t307 158.5q-8 19 -8 39q0 40 28 68t68 28t68 -28t28 -68q0 -20 -8 -39q190 -28 307 -158.5t117 -282.5q0 -139 19.5 -260t50 -206t74.5 -158.5t85 -119.5t91 -88z" />
    <glyph glyph-name="coffee" unicode="&#xf0f4;" horiz-adv-x="1920" 
d="M1664 896q0 80 -56 136t-136 56h-64v-384h64q80 0 136 56t56 136zM0 128h1792q0 -106 -75 -181t-181 -75h-1280q-106 0 -181 75t-75 181zM1856 896q0 -159 -112.5 -271.5t-271.5 -112.5h-64v-32q0 -92 -66 -158t-158 -66h-704q-92 0 -158 66t-66 158v736q0 26 19 45
t45 19h1152q159 0 271.5 -112.5t112.5 -271.5z" />
    <glyph glyph-name="food" unicode="&#xf0f5;" horiz-adv-x="1408" 
d="M640 1472v-640q0 -61 -35.5 -111t-92.5 -70v-779q0 -52 -38 -90t-90 -38h-128q-52 0 -90 38t-38 90v779q-57 20 -92.5 70t-35.5 111v640q0 26 19 45t45 19t45 -19t19 -45v-416q0 -26 19 -45t45 -19t45 19t19 45v416q0 26 19 45t45 19t45 -19t19 -45v-416q0 -26 19 -45
t45 -19t45 19t19 45v416q0 26 19 45t45 19t45 -19t19 -45zM1408 1472v-1600q0 -52 -38 -90t-90 -38h-128q-52 0 -90 38t-38 90v512h-224q-13 0 -22.5 9.5t-9.5 22.5v800q0 132 94 226t226 94h256q26 0 45 -19t19 -45z" />
    <glyph glyph-name="file_text_alt" unicode="&#xf0f6;" 
d="M1468 1156q28 -28 48 -76t20 -88v-1152q0 -40 -28 -68t-68 -28h-1344q-40 0 -68 28t-28 68v1600q0 40 28 68t68 28h896q40 0 88 -20t76 -48zM1024 1400v-376h376q-10 29 -22 41l-313 313q-12 12 -41 22zM1408 -128v1024h-416q-40 0 -68 28t-28 68v416h-768v-1536h1280z
M384 736q0 14 9 23t23 9h704q14 0 23 -9t9 -23v-64q0 -14 -9 -23t-23 -9h-704q-14 0 -23 9t-9 23v64zM1120 512q14 0 23 -9t9 -23v-64q0 -14 -9 -23t-23 -9h-704q-14 0 -23 9t-9 23v64q0 14 9 23t23 9h704zM1120 256q14 0 23 -9t9 -23v-64q0 -14 -9 -23t-23 -9h-704
q-14 0 -23 9t-9 23v64q0 14 9 23t23 9h704z" />
    <glyph glyph-name="building" unicode="&#xf0f7;" horiz-adv-x="1408" 
d="M384 224v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-64q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5 -9.5t9.5 -22.5zM384 480v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-64q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5 -9.5t9.5 -22.5z
M640 480v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-64q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5 -9.5t9.5 -22.5zM384 736v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-64q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5 -9.5t9.5 -22.5z
M1152 224v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-64q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5 -9.5t9.5 -22.5zM896 480v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-64q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5 -9.5t9.5 -22.5z
M640 736v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-64q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5 -9.5t9.5 -22.5zM384 992v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-64q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5 -9.5t9.5 -22.5z
M1152 480v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-64q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5 -9.5t9.5 -22.5zM896 736v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-64q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5 -9.5t9.5 -22.5z
M640 992v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-64q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5 -9.5t9.5 -22.5zM384 1248v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-64q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5 -9.5t9.5 -22.5z
M1152 736v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-64q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5 -9.5t9.5 -22.5zM896 992v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-64q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5 -9.5t9.5 -22.5z
M640 1248v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-64q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5 -9.5t9.5 -22.5zM1152 992v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-64q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5 -9.5t9.5 -22.5z
M896 1248v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-64q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5 -9.5t9.5 -22.5zM1152 1248v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-64q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5 -9.5t9.5 -22.5z
M896 -128h384v1536h-1152v-1536h384v224q0 13 9.5 22.5t22.5 9.5h320q13 0 22.5 -9.5t9.5 -22.5v-224zM1408 1472v-1664q0 -26 -19 -45t-45 -19h-1280q-26 0 -45 19t-19 45v1664q0 26 19 45t45 19h1280q26 0 45 -19t19 -45z" />
    <glyph glyph-name="hospital" unicode="&#xf0f8;" horiz-adv-x="1408" 
d="M384 224v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-64q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5 -9.5t9.5 -22.5zM384 480v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-64q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5 -9.5t9.5 -22.5z
M640 480v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-64q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5 -9.5t9.5 -22.5zM384 736v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-64q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5 -9.5t9.5 -22.5z
M1152 224v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-64q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5 -9.5t9.5 -22.5zM896 480v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-64q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5 -9.5t9.5 -22.5z
M640 736v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-64q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5 -9.5t9.5 -22.5zM1152 480v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-64q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5 -9.5t9.5 -22.5z
M896 736v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-64q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5 -9.5t9.5 -22.5zM1152 736v-64q0 -13 -9.5 -22.5t-22.5 -9.5h-64q-13 0 -22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5 -9.5t9.5 -22.5z
M896 -128h384v1152h-256v-32q0 -40 -28 -68t-68 -28h-448q-40 0 -68 28t-28 68v32h-256v-1152h384v224q0 13 9.5 22.5t22.5 9.5h320q13 0 22.5 -9.5t9.5 -22.5v-224zM896 1056v320q0 13 -9.5 22.5t-22.5 9.5h-64q-13 0 -22.5 -9.5t-9.5 -22.5v-96h-128v96q0 13 -9.5 22.5
t-22.5 9.5h-64q-13 0 -22.5 -9.5t-9.5 -22.5v-320q0 -13 9.5 -22.5t22.5 -9.5h64q13 0 22.5 9.5t9.5 22.5v96h128v-96q0 -13 9.5 -22.5t22.5 -9.5h64q13 0 22.5 9.5t9.5 22.5zM1408 1088v-1280q0 -26 -19 -45t-45 -19h-1280q-26 0 -45 19t-19 45v1280q0 26 19 45t45 19h320
v288q0 40 28 68t68 28h448q40 0 68 -28t28 -68v-288h320q26 0 45 -19t19 -45z" />
    <glyph glyph-name="ambulance" unicode="&#xf0f9;" horiz-adv-x="1920" 
d="M640 128q0 53 -37.5 90.5t-90.5 37.5t-90.5 -37.5t-37.5 -90.5t37.5 -90.5t90.5 -37.5t90.5 37.5t37.5 90.5zM256 640h384v256h-158q-14 -2 -22 -9l-195 -195q-7 -12 -9 -22v-30zM1536 128q0 53 -37.5 90.5t-90.5 37.5t-90.5 -37.5t-37.5 -90.5t37.5 -90.5t90.5 -37.5
t90.5 37.5t37.5 90.5zM1664 800v192q0 14 -9 23t-23 9h-224v224q0 14 -9 23t-23 9h-192q-14 0 -23 -9t-9 -23v-224h-224q-14 0 -23 -9t-9 -23v-192q0 -14 9 -23t23 -9h224v-224q0 -14 9 -23t23 -9h192q14 0 23 9t9 23v224h224q14 0 23 9t9 23zM1920 1344v-1152
q0 -26 -19 -45t-45 -19h-192q0 -106 -75 -181t-181 -75t-181 75t-75 181h-384q0 -106 -75 -181t-181 -75t-181 75t-75 181h-128q-26 0 -45 19t-19 45t19 45t45 19v416q0 26 13 58t32 51l198 198q19 19 51 32t58 13h160v320q0 26 19 45t45 19h1152q26 0 45 -19t19 -45z" />
    <glyph glyph-name="medkit" unicode="&#xf0fa;" horiz-adv-x="1792" 
d="M1280 416v192q0 14 -9 23t-23 9h-224v224q0 14 -9 23t-23 9h-192q-14 0 -23 -9t-9 -23v-224h-224q-14 0 -23 -9t-9 -23v-192q0 -14 9 -23t23 -9h224v-224q0 -14 9 -23t23 -9h192q14 0 23 9t9 23v224h224q14 0 23 9t9 23zM640 1152h512v128h-512v-128zM256 1152v-1280h-32
q-92 0 -158 66t-66 158v832q0 92 66 158t158 66h32zM1440 1152v-1280h-1088v1280h160v160q0 40 28 68t68 28h576q40 0 68 -28t28 -68v-160h160zM1792 928v-832q0 -92 -66 -158t-158 -66h-32v1280h32q92 0 158 -66t66 -158z" />
    <glyph glyph-name="fighter_jet" unicode="&#xf0fb;" horiz-adv-x="1920" 
d="M1920 576q-1 -32 -288 -96l-352 -32l-224 -64h-64l-293 -352h69q26 0 45 -4.5t19 -11.5t-19 -11.5t-45 -4.5h-96h-160h-64v32h64v416h-160l-192 -224h-96l-32 32v192h32v32h128v8l-192 24v128l192 24v8h-128v32h-32v192l32 32h96l192 -224h160v416h-64v32h64h160h96
q26 0 45 -4.5t19 -11.5t-19 -11.5t-45 -4.5h-69l293 -352h64l224 -64l352 -32q128 -28 200 -52t80 -34z" />
    <glyph glyph-name="beer" unicode="&#xf0fc;" horiz-adv-x="1664" 
d="M640 640v384h-256v-256q0 -53 37.5 -90.5t90.5 -37.5h128zM1664 192v-192h-1152v192l128 192h-128q-159 0 -271.5 112.5t-112.5 271.5v320l-64 64l32 128h480l32 128h960l32 -192l-64 -32v-800z" />
    <glyph glyph-name="h_sign" unicode="&#xf0fd;" 
d="M1280 192v896q0 26 -19 45t-45 19h-128q-26 0 -45 -19t-19 -45v-320h-512v320q0 26 -19 45t-45 19h-128q-26 0 -45 -19t-19 -45v-896q0 -26 19 -45t45 -19h128q26 0 45 19t19 45v320h512v-320q0 -26 19 -45t45 -19h128q26 0 45 19t19 45zM1536 1120v-960
q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z" />
    <glyph glyph-name="f0fe" unicode="&#xf0fe;" 
d="M1280 576v128q0 26 -19 45t-45 19h-320v320q0 26 -19 45t-45 19h-128q-26 0 -45 -19t-19 -45v-320h-320q-26 0 -45 -19t-19 -45v-128q0 -26 19 -45t45 -19h320v-320q0 -26 19 -45t45 -19h128q26 0 45 19t19 45v320h320q26 0 45 19t19 45zM1536 1120v-960
q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z" />
    <glyph glyph-name="double_angle_left" unicode="&#xf100;" horiz-adv-x="1024" 
d="M627 160q0 -13 -10 -23l-50 -50q-10 -10 -23 -10t-23 10l-466 466q-10 10 -10 23t10 23l466 466q10 10 23 10t23 -10l50 -50q10 -10 10 -23t-10 -23l-393 -393l393 -393q10 -10 10 -23zM1011 160q0 -13 -10 -23l-50 -50q-10 -10 -23 -10t-23 10l-466 466q-10 10 -10 23
t10 23l466 466q10 10 23 10t23 -10l50 -50q10 -10 10 -23t-10 -23l-393 -393l393 -393q10 -10 10 -23z" />
    <glyph glyph-name="double_angle_right" unicode="&#xf101;" horiz-adv-x="1024" 
d="M595 576q0 -13 -10 -23l-466 -466q-10 -10 -23 -10t-23 10l-50 50q-10 10 -10 23t10 23l393 393l-393 393q-10 10 -10 23t10 23l50 50q10 10 23 10t23 -10l466 -466q10 -10 10 -23zM979 576q0 -13 -10 -23l-466 -466q-10 -10 -23 -10t-23 10l-50 50q-10 10 -10 23t10 23
l393 393l-393 393q-10 10 -10 23t10 23l50 50q10 10 23 10t23 -10l466 -466q10 -10 10 -23z" />
    <glyph glyph-name="double_angle_up" unicode="&#xf102;" horiz-adv-x="1152" 
d="M1075 224q0 -13 -10 -23l-50 -50q-10 -10 -23 -10t-23 10l-393 393l-393 -393q-10 -10 -23 -10t-23 10l-50 50q-10 10 -10 23t10 23l466 466q10 10 23 10t23 -10l466 -466q10 -10 10 -23zM1075 608q0 -13 -10 -23l-50 -50q-10 -10 -23 -10t-23 10l-393 393l-393 -393
q-10 -10 -23 -10t-23 10l-50 50q-10 10 -10 23t10 23l466 466q10 10 23 10t23 -10l466 -466q10 -10 10 -23z" />
    <glyph glyph-name="double_angle_down" unicode="&#xf103;" horiz-adv-x="1152" 
d="M1075 672q0 -13 -10 -23l-466 -466q-10 -10 -23 -10t-23 10l-466 466q-10 10 -10 23t10 23l50 50q10 10 23 10t23 -10l393 -393l393 393q10 10 23 10t23 -10l50 -50q10 -10 10 -23zM1075 1056q0 -13 -10 -23l-466 -466q-10 -10 -23 -10t-23 10l-466 466q-10 10 -10 23
t10 23l50 50q10 10 23 10t23 -10l393 -393l393 393q10 10 23 10t23 -10l50 -50q10 -10 10 -23z" />
    <glyph glyph-name="angle_left" unicode="&#xf104;" horiz-adv-x="640" 
d="M627 992q0 -13 -10 -23l-393 -393l393 -393q10 -10 10 -23t-10 -23l-50 -50q-10 -10 -23 -10t-23 10l-466 466q-10 10 -10 23t10 23l466 466q10 10 23 10t23 -10l50 -50q10 -10 10 -23z" />
    <glyph glyph-name="angle_right" unicode="&#xf105;" horiz-adv-x="640" 
d="M595 576q0 -13 -10 -23l-466 -466q-10 -10 -23 -10t-23 10l-50 50q-10 10 -10 23t10 23l393 393l-393 393q-10 10 -10 23t10 23l50 50q10 10 23 10t23 -10l466 -466q10 -10 10 -23z" />
    <glyph glyph-name="angle_up" unicode="&#xf106;" horiz-adv-x="1152" 
d="M1075 352q0 -13 -10 -23l-50 -50q-10 -10 -23 -10t-23 10l-393 393l-393 -393q-10 -10 -23 -10t-23 10l-50 50q-10 10 -10 23t10 23l466 466q10 10 23 10t23 -10l466 -466q10 -10 10 -23z" />
    <glyph glyph-name="angle_down" unicode="&#xf107;" horiz-adv-x="1152" 
d="M1075 800q0 -13 -10 -23l-466 -466q-10 -10 -23 -10t-23 10l-466 466q-10 10 -10 23t10 23l50 50q10 10 23 10t23 -10l393 -393l393 393q10 10 23 10t23 -10l50 -50q10 -10 10 -23z" />
    <glyph glyph-name="desktop" unicode="&#xf108;" horiz-adv-x="1920" 
d="M1792 544v832q0 13 -9.5 22.5t-22.5 9.5h-1600q-13 0 -22.5 -9.5t-9.5 -22.5v-832q0 -13 9.5 -22.5t22.5 -9.5h1600q13 0 22.5 9.5t9.5 22.5zM1920 1376v-1088q0 -66 -47 -113t-113 -47h-544q0 -37 16 -77.5t32 -71t16 -43.5q0 -26 -19 -45t-45 -19h-512q-26 0 -45 19
t-19 45q0 14 16 44t32 70t16 78h-544q-66 0 -113 47t-47 113v1088q0 66 47 113t113 47h1600q66 0 113 -47t47 -113z" />
    <glyph glyph-name="laptop" unicode="&#xf109;" horiz-adv-x="1920" 
d="M416 256q-66 0 -113 47t-47 113v704q0 66 47 113t113 47h1088q66 0 113 -47t47 -113v-704q0 -66 -47 -113t-113 -47h-1088zM384 1120v-704q0 -13 9.5 -22.5t22.5 -9.5h1088q13 0 22.5 9.5t9.5 22.5v704q0 13 -9.5 22.5t-22.5 9.5h-1088q-13 0 -22.5 -9.5t-9.5 -22.5z
M1760 192h160v-96q0 -40 -47 -68t-113 -28h-1600q-66 0 -113 28t-47 68v96h160h1600zM1040 96q16 0 16 16t-16 16h-160q-16 0 -16 -16t16 -16h160z" />
    <glyph glyph-name="tablet" unicode="&#xf10a;" horiz-adv-x="1152" 
d="M640 128q0 26 -19 45t-45 19t-45 -19t-19 -45t19 -45t45 -19t45 19t19 45zM1024 288v960q0 13 -9.5 22.5t-22.5 9.5h-832q-13 0 -22.5 -9.5t-9.5 -22.5v-960q0 -13 9.5 -22.5t22.5 -9.5h832q13 0 22.5 9.5t9.5 22.5zM1152 1248v-1088q0 -66 -47 -113t-113 -47h-832
q-66 0 -113 47t-47 113v1088q0 66 47 113t113 47h832q66 0 113 -47t47 -113z" />
    <glyph glyph-name="mobile_phone" unicode="&#xf10b;" horiz-adv-x="768" 
d="M464 128q0 33 -23.5 56.5t-56.5 23.5t-56.5 -23.5t-23.5 -56.5t23.5 -56.5t56.5 -23.5t56.5 23.5t23.5 56.5zM672 288v704q0 13 -9.5 22.5t-22.5 9.5h-512q-13 0 -22.5 -9.5t-9.5 -22.5v-704q0 -13 9.5 -22.5t22.5 -9.5h512q13 0 22.5 9.5t9.5 22.5zM480 1136
q0 16 -16 16h-160q-16 0 -16 -16t16 -16h160q16 0 16 16zM768 1152v-1024q0 -52 -38 -90t-90 -38h-512q-52 0 -90 38t-38 90v1024q0 52 38 90t90 38h512q52 0 90 -38t38 -90z" />
    <glyph glyph-name="circle_blank" unicode="&#xf10c;" 
d="M768 1184q-148 0 -273 -73t-198 -198t-73 -273t73 -273t198 -198t273 -73t273 73t198 198t73 273t-73 273t-198 198t-273 73zM1536 640q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103
t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="quote_left" unicode="&#xf10d;" horiz-adv-x="1664" 
d="M768 576v-384q0 -80 -56 -136t-136 -56h-384q-80 0 -136 56t-56 136v704q0 104 40.5 198.5t109.5 163.5t163.5 109.5t198.5 40.5h64q26 0 45 -19t19 -45v-128q0 -26 -19 -45t-45 -19h-64q-106 0 -181 -75t-75 -181v-32q0 -40 28 -68t68 -28h224q80 0 136 -56t56 -136z
M1664 576v-384q0 -80 -56 -136t-136 -56h-384q-80 0 -136 56t-56 136v704q0 104 40.5 198.5t109.5 163.5t163.5 109.5t198.5 40.5h64q26 0 45 -19t19 -45v-128q0 -26 -19 -45t-45 -19h-64q-106 0 -181 -75t-75 -181v-32q0 -40 28 -68t68 -28h224q80 0 136 -56t56 -136z" />
    <glyph glyph-name="quote_right" unicode="&#xf10e;" horiz-adv-x="1664" 
d="M768 1216v-704q0 -104 -40.5 -198.5t-109.5 -163.5t-163.5 -109.5t-198.5 -40.5h-64q-26 0 -45 19t-19 45v128q0 26 19 45t45 19h64q106 0 181 75t75 181v32q0 40 -28 68t-68 28h-224q-80 0 -136 56t-56 136v384q0 80 56 136t136 56h384q80 0 136 -56t56 -136zM1664 1216
v-704q0 -104 -40.5 -198.5t-109.5 -163.5t-163.5 -109.5t-198.5 -40.5h-64q-26 0 -45 19t-19 45v128q0 26 19 45t45 19h64q106 0 181 75t75 181v32q0 40 -28 68t-68 28h-224q-80 0 -136 56t-56 136v384q0 80 56 136t136 56h384q80 0 136 -56t56 -136z" />
    <glyph glyph-name="spinner" unicode="&#xf110;" horiz-adv-x="1792" 
d="M526 142q0 -53 -37.5 -90.5t-90.5 -37.5q-52 0 -90 38t-38 90q0 53 37.5 90.5t90.5 37.5t90.5 -37.5t37.5 -90.5zM1024 -64q0 -53 -37.5 -90.5t-90.5 -37.5t-90.5 37.5t-37.5 90.5t37.5 90.5t90.5 37.5t90.5 -37.5t37.5 -90.5zM320 640q0 -53 -37.5 -90.5t-90.5 -37.5
t-90.5 37.5t-37.5 90.5t37.5 90.5t90.5 37.5t90.5 -37.5t37.5 -90.5zM1522 142q0 -52 -38 -90t-90 -38q-53 0 -90.5 37.5t-37.5 90.5t37.5 90.5t90.5 37.5t90.5 -37.5t37.5 -90.5zM558 1138q0 -66 -47 -113t-113 -47t-113 47t-47 113t47 113t113 47t113 -47t47 -113z
M1728 640q0 -53 -37.5 -90.5t-90.5 -37.5t-90.5 37.5t-37.5 90.5t37.5 90.5t90.5 37.5t90.5 -37.5t37.5 -90.5zM1088 1344q0 -80 -56 -136t-136 -56t-136 56t-56 136t56 136t136 56t136 -56t56 -136zM1618 1138q0 -93 -66 -158.5t-158 -65.5q-93 0 -158.5 65.5t-65.5 158.5
q0 92 65.5 158t158.5 66q92 0 158 -66t66 -158z" />
    <glyph glyph-name="circle" unicode="&#xf111;" 
d="M1536 640q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="reply" unicode="&#xf112;" horiz-adv-x="1792" 
d="M1792 416q0 -166 -127 -451q-3 -7 -10.5 -24t-13.5 -30t-13 -22q-12 -17 -28 -17q-15 0 -23.5 10t-8.5 25q0 9 2.5 26.5t2.5 23.5q5 68 5 123q0 101 -17.5 181t-48.5 138.5t-80 101t-105.5 69.5t-133 42.5t-154 21.5t-175.5 6h-224v-256q0 -26 -19 -45t-45 -19t-45 19
l-512 512q-19 19 -19 45t19 45l512 512q19 19 45 19t45 -19t19 -45v-256h224q713 0 875 -403q53 -134 53 -333z" />
    <glyph glyph-name="github_alt" unicode="&#xf113;" horiz-adv-x="1664" 
d="M640 320q0 -40 -12.5 -82t-43 -76t-72.5 -34t-72.5 34t-43 76t-12.5 82t12.5 82t43 76t72.5 34t72.5 -34t43 -76t12.5 -82zM1280 320q0 -40 -12.5 -82t-43 -76t-72.5 -34t-72.5 34t-43 76t-12.5 82t12.5 82t43 76t72.5 34t72.5 -34t43 -76t12.5 -82zM1440 320
q0 120 -69 204t-187 84q-41 0 -195 -21q-71 -11 -157 -11t-157 11q-152 21 -195 21q-118 0 -187 -84t-69 -204q0 -88 32 -153.5t81 -103t122 -60t140 -29.5t149 -7h168q82 0 149 7t140 29.5t122 60t81 103t32 153.5zM1664 496q0 -207 -61 -331q-38 -77 -105.5 -133t-141 -86
t-170 -47.5t-171.5 -22t-167 -4.5q-78 0 -142 3t-147.5 12.5t-152.5 30t-137 51.5t-121 81t-86 115q-62 123 -62 331q0 237 136 396q-27 82 -27 170q0 116 51 218q108 0 190 -39.5t189 -123.5q147 35 309 35q148 0 280 -32q105 82 187 121t189 39q51 -102 51 -218
q0 -87 -27 -168q136 -160 136 -398z" />
    <glyph glyph-name="folder_close_alt" unicode="&#xf114;" horiz-adv-x="1664" 
d="M1536 224v704q0 40 -28 68t-68 28h-704q-40 0 -68 28t-28 68v64q0 40 -28 68t-68 28h-320q-40 0 -68 -28t-28 -68v-960q0 -40 28 -68t68 -28h1216q40 0 68 28t28 68zM1664 928v-704q0 -92 -66 -158t-158 -66h-1216q-92 0 -158 66t-66 158v960q0 92 66 158t158 66h320
q92 0 158 -66t66 -158v-32h672q92 0 158 -66t66 -158z" />
    <glyph glyph-name="folder_open_alt" unicode="&#xf115;" horiz-adv-x="1920" 
d="M1781 605q0 35 -53 35h-1088q-40 0 -85.5 -21.5t-71.5 -52.5l-294 -363q-18 -24 -18 -40q0 -35 53 -35h1088q40 0 86 22t71 53l294 363q18 22 18 39zM640 768h768v160q0 40 -28 68t-68 28h-576q-40 0 -68 28t-28 68v64q0 40 -28 68t-68 28h-320q-40 0 -68 -28t-28 -68
v-853l256 315q44 53 116 87.5t140 34.5zM1909 605q0 -62 -46 -120l-295 -363q-43 -53 -116 -87.5t-140 -34.5h-1088q-92 0 -158 66t-66 158v960q0 92 66 158t158 66h320q92 0 158 -66t66 -158v-32h544q92 0 158 -66t66 -158v-160h192q54 0 99 -24.5t67 -70.5q15 -32 15 -68z
" />
    <glyph glyph-name="expand_alt" unicode="&#xf116;" horiz-adv-x="1792" 
 />
    <glyph glyph-name="collapse_alt" unicode="&#xf117;" horiz-adv-x="1792" 
 />
    <glyph glyph-name="smile" unicode="&#xf118;" 
d="M1134 461q-37 -121 -138 -195t-228 -74t-228 74t-138 195q-8 25 4 48.5t38 31.5q25 8 48.5 -4t31.5 -38q25 -80 92.5 -129.5t151.5 -49.5t151.5 49.5t92.5 129.5q8 26 32 38t49 4t37 -31.5t4 -48.5zM640 896q0 -53 -37.5 -90.5t-90.5 -37.5t-90.5 37.5t-37.5 90.5
t37.5 90.5t90.5 37.5t90.5 -37.5t37.5 -90.5zM1152 896q0 -53 -37.5 -90.5t-90.5 -37.5t-90.5 37.5t-37.5 90.5t37.5 90.5t90.5 37.5t90.5 -37.5t37.5 -90.5zM1408 640q0 130 -51 248.5t-136.5 204t-204 136.5t-248.5 51t-248.5 -51t-204 -136.5t-136.5 -204t-51 -248.5
t51 -248.5t136.5 -204t204 -136.5t248.5 -51t248.5 51t204 136.5t136.5 204t51 248.5zM1536 640q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="frown" unicode="&#xf119;" 
d="M1134 307q8 -25 -4 -48.5t-37 -31.5t-49 4t-32 38q-25 80 -92.5 129.5t-151.5 49.5t-151.5 -49.5t-92.5 -129.5q-8 -26 -31.5 -38t-48.5 -4q-26 8 -38 31.5t-4 48.5q37 121 138 195t228 74t228 -74t138 -195zM640 896q0 -53 -37.5 -90.5t-90.5 -37.5t-90.5 37.5
t-37.5 90.5t37.5 90.5t90.5 37.5t90.5 -37.5t37.5 -90.5zM1152 896q0 -53 -37.5 -90.5t-90.5 -37.5t-90.5 37.5t-37.5 90.5t37.5 90.5t90.5 37.5t90.5 -37.5t37.5 -90.5zM1408 640q0 130 -51 248.5t-136.5 204t-204 136.5t-248.5 51t-248.5 -51t-204 -136.5t-136.5 -204
t-51 -248.5t51 -248.5t136.5 -204t204 -136.5t248.5 -51t248.5 51t204 136.5t136.5 204t51 248.5zM1536 640q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="meh" unicode="&#xf11a;" 
d="M1152 448q0 -26 -19 -45t-45 -19h-640q-26 0 -45 19t-19 45t19 45t45 19h640q26 0 45 -19t19 -45zM640 896q0 -53 -37.5 -90.5t-90.5 -37.5t-90.5 37.5t-37.5 90.5t37.5 90.5t90.5 37.5t90.5 -37.5t37.5 -90.5zM1152 896q0 -53 -37.5 -90.5t-90.5 -37.5t-90.5 37.5
t-37.5 90.5t37.5 90.5t90.5 37.5t90.5 -37.5t37.5 -90.5zM1408 640q0 130 -51 248.5t-136.5 204t-204 136.5t-248.5 51t-248.5 -51t-204 -136.5t-136.5 -204t-51 -248.5t51 -248.5t136.5 -204t204 -136.5t248.5 -51t248.5 51t204 136.5t136.5 204t51 248.5zM1536 640
q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="gamepad" unicode="&#xf11b;" horiz-adv-x="1920" 
d="M832 448v128q0 14 -9 23t-23 9h-192v192q0 14 -9 23t-23 9h-128q-14 0 -23 -9t-9 -23v-192h-192q-14 0 -23 -9t-9 -23v-128q0 -14 9 -23t23 -9h192v-192q0 -14 9 -23t23 -9h128q14 0 23 9t9 23v192h192q14 0 23 9t9 23zM1408 384q0 53 -37.5 90.5t-90.5 37.5t-90.5 -37.5
t-37.5 -90.5t37.5 -90.5t90.5 -37.5t90.5 37.5t37.5 90.5zM1664 640q0 53 -37.5 90.5t-90.5 37.5t-90.5 -37.5t-37.5 -90.5t37.5 -90.5t90.5 -37.5t90.5 37.5t37.5 90.5zM1920 512q0 -212 -150 -362t-362 -150q-192 0 -338 128h-220q-146 -128 -338 -128q-212 0 -362 150
t-150 362t150 362t362 150h896q212 0 362 -150t150 -362z" />
    <glyph glyph-name="keyboard" unicode="&#xf11c;" horiz-adv-x="1920" 
d="M384 368v-96q0 -16 -16 -16h-96q-16 0 -16 16v96q0 16 16 16h96q16 0 16 -16zM512 624v-96q0 -16 -16 -16h-224q-16 0 -16 16v96q0 16 16 16h224q16 0 16 -16zM384 880v-96q0 -16 -16 -16h-96q-16 0 -16 16v96q0 16 16 16h96q16 0 16 -16zM1408 368v-96q0 -16 -16 -16
h-864q-16 0 -16 16v96q0 16 16 16h864q16 0 16 -16zM768 624v-96q0 -16 -16 -16h-96q-16 0 -16 16v96q0 16 16 16h96q16 0 16 -16zM640 880v-96q0 -16 -16 -16h-96q-16 0 -16 16v96q0 16 16 16h96q16 0 16 -16zM1024 624v-96q0 -16 -16 -16h-96q-16 0 -16 16v96q0 16 16 16
h96q16 0 16 -16zM896 880v-96q0 -16 -16 -16h-96q-16 0 -16 16v96q0 16 16 16h96q16 0 16 -16zM1280 624v-96q0 -16 -16 -16h-96q-16 0 -16 16v96q0 16 16 16h96q16 0 16 -16zM1664 368v-96q0 -16 -16 -16h-96q-16 0 -16 16v96q0 16 16 16h96q16 0 16 -16zM1152 880v-96
q0 -16 -16 -16h-96q-16 0 -16 16v96q0 16 16 16h96q16 0 16 -16zM1408 880v-96q0 -16 -16 -16h-96q-16 0 -16 16v96q0 16 16 16h96q16 0 16 -16zM1664 880v-352q0 -16 -16 -16h-224q-16 0 -16 16v96q0 16 16 16h112v240q0 16 16 16h96q16 0 16 -16zM1792 128v896h-1664v-896
h1664zM1920 1024v-896q0 -53 -37.5 -90.5t-90.5 -37.5h-1664q-53 0 -90.5 37.5t-37.5 90.5v896q0 53 37.5 90.5t90.5 37.5h1664q53 0 90.5 -37.5t37.5 -90.5z" />
    <glyph glyph-name="flag_alt" unicode="&#xf11d;" horiz-adv-x="1792" 
d="M1664 491v616q-169 -91 -306 -91q-82 0 -145 32q-100 49 -184 76.5t-178 27.5q-173 0 -403 -127v-599q245 113 433 113q55 0 103.5 -7.5t98 -26t77 -31t82.5 -39.5l28 -14q44 -22 101 -22q120 0 293 92zM320 1280q0 -35 -17.5 -64t-46.5 -46v-1266q0 -14 -9 -23t-23 -9
h-64q-14 0 -23 9t-9 23v1266q-29 17 -46.5 46t-17.5 64q0 53 37.5 90.5t90.5 37.5t90.5 -37.5t37.5 -90.5zM1792 1216v-763q0 -39 -35 -57q-10 -5 -17 -9q-218 -116 -369 -116q-88 0 -158 35l-28 14q-64 33 -99 48t-91 29t-114 14q-102 0 -235.5 -44t-228.5 -102
q-15 -9 -33 -9q-16 0 -32 8q-32 19 -32 56v742q0 35 31 55q35 21 78.5 42.5t114 52t152.5 49.5t155 19q112 0 209 -31t209 -86q38 -19 89 -19q122 0 310 112q22 12 31 17q31 16 62 -2q31 -20 31 -55z" />
    <glyph glyph-name="flag_checkered" unicode="&#xf11e;" horiz-adv-x="1792" 
d="M832 536v192q-181 -16 -384 -117v-185q205 96 384 110zM832 954v197q-172 -8 -384 -126v-189q215 111 384 118zM1664 491v184q-235 -116 -384 -71v224q-20 6 -39 15q-5 3 -33 17t-34.5 17t-31.5 15t-34.5 15.5t-32.5 13t-36 12.5t-35 8.5t-39.5 7.5t-39.5 4t-44 2
q-23 0 -49 -3v-222h19q102 0 192.5 -29t197.5 -82q19 -9 39 -15v-188q42 -17 91 -17q120 0 293 92zM1664 918v189q-169 -91 -306 -91q-45 0 -78 8v-196q148 -42 384 90zM320 1280q0 -35 -17.5 -64t-46.5 -46v-1266q0 -14 -9 -23t-23 -9h-64q-14 0 -23 9t-9 23v1266
q-29 17 -46.5 46t-17.5 64q0 53 37.5 90.5t90.5 37.5t90.5 -37.5t37.5 -90.5zM1792 1216v-763q0 -39 -35 -57q-10 -5 -17 -9q-218 -116 -369 -116q-88 0 -158 35l-28 14q-64 33 -99 48t-91 29t-114 14q-102 0 -235.5 -44t-228.5 -102q-15 -9 -33 -9q-16 0 -32 8
q-32 19 -32 56v742q0 35 31 55q35 21 78.5 42.5t114 52t152.5 49.5t155 19q112 0 209 -31t209 -86q38 -19 89 -19q122 0 310 112q22 12 31 17q31 16 62 -2q31 -20 31 -55z" />
    <glyph glyph-name="terminal" unicode="&#xf120;" horiz-adv-x="1664" 
d="M585 553l-466 -466q-10 -10 -23 -10t-23 10l-50 50q-10 10 -10 23t10 23l393 393l-393 393q-10 10 -10 23t10 23l50 50q10 10 23 10t23 -10l466 -466q10 -10 10 -23t-10 -23zM1664 96v-64q0 -14 -9 -23t-23 -9h-960q-14 0 -23 9t-9 23v64q0 14 9 23t23 9h960q14 0 23 -9
t9 -23z" />
    <glyph glyph-name="code" unicode="&#xf121;" horiz-adv-x="1920" 
d="M617 137l-50 -50q-10 -10 -23 -10t-23 10l-466 466q-10 10 -10 23t10 23l466 466q10 10 23 10t23 -10l50 -50q10 -10 10 -23t-10 -23l-393 -393l393 -393q10 -10 10 -23t-10 -23zM1208 1204l-373 -1291q-4 -13 -15.5 -19.5t-23.5 -2.5l-62 17q-13 4 -19.5 15.5t-2.5 24.5
l373 1291q4 13 15.5 19.5t23.5 2.5l62 -17q13 -4 19.5 -15.5t2.5 -24.5zM1865 553l-466 -466q-10 -10 -23 -10t-23 10l-50 50q-10 10 -10 23t10 23l393 393l-393 393q-10 10 -10 23t10 23l50 50q10 10 23 10t23 -10l466 -466q10 -10 10 -23t-10 -23z" />
    <glyph glyph-name="reply_all" unicode="&#xf122;" horiz-adv-x="1792" 
d="M640 454v-70q0 -42 -39 -59q-13 -5 -25 -5q-27 0 -45 19l-512 512q-19 19 -19 45t19 45l512 512q29 31 70 14q39 -17 39 -59v-69l-397 -398q-19 -19 -19 -45t19 -45zM1792 416q0 -58 -17 -133.5t-38.5 -138t-48 -125t-40.5 -90.5l-20 -40q-8 -17 -28 -17q-6 0 -9 1
q-25 8 -23 34q43 400 -106 565q-64 71 -170.5 110.5t-267.5 52.5v-251q0 -42 -39 -59q-13 -5 -25 -5q-27 0 -45 19l-512 512q-19 19 -19 45t19 45l512 512q29 31 70 14q39 -17 39 -59v-262q411 -28 599 -221q169 -173 169 -509z" />
    <glyph glyph-name="star_half_empty" unicode="&#xf123;" horiz-adv-x="1664" 
d="M1186 579l257 250l-356 52l-66 10l-30 60l-159 322v-963l59 -31l318 -168l-60 355l-12 66zM1638 841l-363 -354l86 -500q5 -33 -6 -51.5t-34 -18.5q-17 0 -40 12l-449 236l-449 -236q-23 -12 -40 -12q-23 0 -34 18.5t-6 51.5l86 500l-364 354q-32 32 -23 59.5t54 34.5
l502 73l225 455q20 41 49 41q28 0 49 -41l225 -455l502 -73q45 -7 54 -34.5t-24 -59.5z" />
    <glyph glyph-name="location_arrow" unicode="&#xf124;" horiz-adv-x="1408" 
d="M1401 1187l-640 -1280q-17 -35 -57 -35q-5 0 -15 2q-22 5 -35.5 22.5t-13.5 39.5v576h-576q-22 0 -39.5 13.5t-22.5 35.5t4 42t29 30l1280 640q13 7 29 7q27 0 45 -19q15 -14 18.5 -34.5t-6.5 -39.5z" />
    <glyph glyph-name="crop" unicode="&#xf125;" horiz-adv-x="1664" 
d="M557 256h595v595zM512 301l595 595h-595v-595zM1664 224v-192q0 -14 -9 -23t-23 -9h-224v-224q0 -14 -9 -23t-23 -9h-192q-14 0 -23 9t-9 23v224h-864q-14 0 -23 9t-9 23v864h-224q-14 0 -23 9t-9 23v192q0 14 9 23t23 9h224v224q0 14 9 23t23 9h192q14 0 23 -9t9 -23
v-224h851l246 247q10 9 23 9t23 -9q9 -10 9 -23t-9 -23l-247 -246v-851h224q14 0 23 -9t9 -23z" />
    <glyph glyph-name="code_fork" unicode="&#xf126;" horiz-adv-x="1024" 
d="M288 64q0 40 -28 68t-68 28t-68 -28t-28 -68t28 -68t68 -28t68 28t28 68zM288 1216q0 40 -28 68t-68 28t-68 -28t-28 -68t28 -68t68 -28t68 28t28 68zM928 1088q0 40 -28 68t-68 28t-68 -28t-28 -68t28 -68t68 -28t68 28t28 68zM1024 1088q0 -52 -26 -96.5t-70 -69.5
q-2 -287 -226 -414q-67 -38 -203 -81q-128 -40 -169.5 -71t-41.5 -100v-26q44 -25 70 -69.5t26 -96.5q0 -80 -56 -136t-136 -56t-136 56t-56 136q0 52 26 96.5t70 69.5v820q-44 25 -70 69.5t-26 96.5q0 80 56 136t136 56t136 -56t56 -136q0 -52 -26 -96.5t-70 -69.5v-497
q54 26 154 57q55 17 87.5 29.5t70.5 31t59 39.5t40.5 51t28 69.5t8.5 91.5q-44 25 -70 69.5t-26 96.5q0 80 56 136t136 56t136 -56t56 -136z" />
    <glyph glyph-name="unlink" unicode="&#xf127;" horiz-adv-x="1664" 
d="M439 265l-256 -256q-11 -9 -23 -9t-23 9q-9 10 -9 23t9 23l256 256q10 9 23 9t23 -9q9 -10 9 -23t-9 -23zM608 224v-320q0 -14 -9 -23t-23 -9t-23 9t-9 23v320q0 14 9 23t23 9t23 -9t9 -23zM384 448q0 -14 -9 -23t-23 -9h-320q-14 0 -23 9t-9 23t9 23t23 9h320
q14 0 23 -9t9 -23zM1648 320q0 -120 -85 -203l-147 -146q-83 -83 -203 -83q-121 0 -204 85l-334 335q-21 21 -42 56l239 18l273 -274q27 -27 68 -27.5t68 26.5l147 146q28 28 28 67q0 40 -28 68l-274 275l18 239q35 -21 56 -42l336 -336q84 -86 84 -204zM1031 1044l-239 -18
l-273 274q-28 28 -68 28q-39 0 -68 -27l-147 -146q-28 -28 -28 -67q0 -40 28 -68l274 -274l-18 -240q-35 21 -56 42l-336 336q-84 86 -84 204q0 120 85 203l147 146q83 83 203 83q121 0 204 -85l334 -335q21 -21 42 -56zM1664 960q0 -14 -9 -23t-23 -9h-320q-14 0 -23 9
t-9 23t9 23t23 9h320q14 0 23 -9t9 -23zM1120 1504v-320q0 -14 -9 -23t-23 -9t-23 9t-9 23v320q0 14 9 23t23 9t23 -9t9 -23zM1527 1353l-256 -256q-11 -9 -23 -9t-23 9q-9 10 -9 23t9 23l256 256q10 9 23 9t23 -9q9 -10 9 -23t-9 -23z" />
    <glyph glyph-name="question" unicode="&#xf128;" horiz-adv-x="1024" 
d="M704 280v-240q0 -16 -12 -28t-28 -12h-240q-16 0 -28 12t-12 28v240q0 16 12 28t28 12h240q16 0 28 -12t12 -28zM1020 880q0 -54 -15.5 -101t-35 -76.5t-55 -59.5t-57.5 -43.5t-61 -35.5q-41 -23 -68.5 -65t-27.5 -67q0 -17 -12 -32.5t-28 -15.5h-240q-15 0 -25.5 18.5
t-10.5 37.5v45q0 83 65 156.5t143 108.5q59 27 84 56t25 76q0 42 -46.5 74t-107.5 32q-65 0 -108 -29q-35 -25 -107 -115q-13 -16 -31 -16q-12 0 -25 8l-164 125q-13 10 -15.5 25t5.5 28q160 266 464 266q80 0 161 -31t146 -83t106 -127.5t41 -158.5z" />
    <glyph glyph-name="_279" unicode="&#xf129;" horiz-adv-x="640" 
d="M640 192v-128q0 -26 -19 -45t-45 -19h-512q-26 0 -45 19t-19 45v128q0 26 19 45t45 19h64v384h-64q-26 0 -45 19t-19 45v128q0 26 19 45t45 19h384q26 0 45 -19t19 -45v-576h64q26 0 45 -19t19 -45zM512 1344v-192q0 -26 -19 -45t-45 -19h-256q-26 0 -45 19t-19 45v192
q0 26 19 45t45 19h256q26 0 45 -19t19 -45z" />
    <glyph glyph-name="exclamation" unicode="&#xf12a;" horiz-adv-x="640" 
d="M512 288v-224q0 -26 -19 -45t-45 -19h-256q-26 0 -45 19t-19 45v224q0 26 19 45t45 19h256q26 0 45 -19t19 -45zM542 1344l-28 -768q-1 -26 -20.5 -45t-45.5 -19h-256q-26 0 -45.5 19t-20.5 45l-28 768q-1 26 17.5 45t44.5 19h320q26 0 44.5 -19t17.5 -45z" />
    <glyph glyph-name="superscript" unicode="&#xf12b;" 
d="M897 167v-167h-248l-159 252l-24 42q-8 9 -11 21h-3q-1 -3 -2.5 -6.5t-3.5 -8t-3 -6.5q-10 -20 -25 -44l-155 -250h-258v167h128l197 291l-185 272h-137v168h276l139 -228q2 -4 23 -42q8 -9 11 -21h3q3 9 11 21l25 42l140 228h257v-168h-125l-184 -267l204 -296h109z
M1534 846v-206h-514l-3 27q-4 28 -4 46q0 64 26 117t65 86.5t84 65t84 54.5t65 54t26 64q0 38 -29.5 62.5t-70.5 24.5q-51 0 -97 -39q-14 -11 -36 -38l-105 92q26 37 63 66q83 65 188 65q110 0 178 -59.5t68 -158.5q0 -56 -24.5 -103t-62 -76.5t-81.5 -58.5t-82 -50.5
t-65.5 -51.5t-30.5 -63h232v80h126z" />
    <glyph glyph-name="subscript" unicode="&#xf12c;" 
d="M897 167v-167h-248l-159 252l-24 42q-8 9 -11 21h-3q-1 -3 -2.5 -6.5t-3.5 -8t-3 -6.5q-10 -20 -25 -44l-155 -250h-258v167h128l197 291l-185 272h-137v168h276l139 -228q2 -4 23 -42q8 -9 11 -21h3q3 9 11 21l25 42l140 228h257v-168h-125l-184 -267l204 -296h109z
M1536 -50v-206h-514l-4 27q-3 45 -3 46q0 64 26 117t65 86.5t84 65t84 54.5t65 54t26 64q0 38 -29.5 62.5t-70.5 24.5q-51 0 -97 -39q-14 -11 -36 -38l-105 92q26 37 63 66q80 65 188 65q110 0 178 -59.5t68 -158.5q0 -66 -34.5 -118.5t-84 -86t-99.5 -62.5t-87 -63t-41 -73
h232v80h126z" />
    <glyph glyph-name="_283" unicode="&#xf12d;" horiz-adv-x="1920" 
d="M896 128l336 384h-768l-336 -384h768zM1909 1205q15 -34 9.5 -71.5t-30.5 -65.5l-896 -1024q-38 -44 -96 -44h-768q-38 0 -69.5 20.5t-47.5 54.5q-15 34 -9.5 71.5t30.5 65.5l896 1024q38 44 96 44h768q38 0 69.5 -20.5t47.5 -54.5z" />
    <glyph glyph-name="puzzle_piece" unicode="&#xf12e;" horiz-adv-x="1664" 
d="M1664 438q0 -81 -44.5 -135t-123.5 -54q-41 0 -77.5 17.5t-59 38t-56.5 38t-71 17.5q-110 0 -110 -124q0 -39 16 -115t15 -115v-5q-22 0 -33 -1q-34 -3 -97.5 -11.5t-115.5 -13.5t-98 -5q-61 0 -103 26.5t-42 83.5q0 37 17.5 71t38 56.5t38 59t17.5 77.5q0 79 -54 123.5
t-135 44.5q-84 0 -143 -45.5t-59 -127.5q0 -43 15 -83t33.5 -64.5t33.5 -53t15 -50.5q0 -45 -46 -89q-37 -35 -117 -35q-95 0 -245 24q-9 2 -27.5 4t-27.5 4l-13 2q-1 0 -3 1q-2 0 -2 1v1024q2 -1 17.5 -3.5t34 -5t21.5 -3.5q150 -24 245 -24q80 0 117 35q46 44 46 89
q0 22 -15 50.5t-33.5 53t-33.5 64.5t-15 83q0 82 59 127.5t144 45.5q80 0 134 -44.5t54 -123.5q0 -41 -17.5 -77.5t-38 -59t-38 -56.5t-17.5 -71q0 -57 42 -83.5t103 -26.5q64 0 180 15t163 17v-2q-1 -2 -3.5 -17.5t-5 -34t-3.5 -21.5q-24 -150 -24 -245q0 -80 35 -117
q44 -46 89 -46q22 0 50.5 15t53 33.5t64.5 33.5t83 15q82 0 127.5 -59t45.5 -143z" />
    <glyph glyph-name="microphone" unicode="&#xf130;" horiz-adv-x="1152" 
d="M1152 832v-128q0 -221 -147.5 -384.5t-364.5 -187.5v-132h256q26 0 45 -19t19 -45t-19 -45t-45 -19h-640q-26 0 -45 19t-19 45t19 45t45 19h256v132q-217 24 -364.5 187.5t-147.5 384.5v128q0 26 19 45t45 19t45 -19t19 -45v-128q0 -185 131.5 -316.5t316.5 -131.5
t316.5 131.5t131.5 316.5v128q0 26 19 45t45 19t45 -19t19 -45zM896 1216v-512q0 -132 -94 -226t-226 -94t-226 94t-94 226v512q0 132 94 226t226 94t226 -94t94 -226z" />
    <glyph glyph-name="microphone_off" unicode="&#xf131;" horiz-adv-x="1408" 
d="M271 591l-101 -101q-42 103 -42 214v128q0 26 19 45t45 19t45 -19t19 -45v-128q0 -53 15 -113zM1385 1193l-361 -361v-128q0 -132 -94 -226t-226 -94q-55 0 -109 19l-96 -96q97 -51 205 -51q185 0 316.5 131.5t131.5 316.5v128q0 26 19 45t45 19t45 -19t19 -45v-128
q0 -221 -147.5 -384.5t-364.5 -187.5v-132h256q26 0 45 -19t19 -45t-19 -45t-45 -19h-640q-26 0 -45 19t-19 45t19 45t45 19h256v132q-125 13 -235 81l-254 -254q-10 -10 -23 -10t-23 10l-82 82q-10 10 -10 23t10 23l1234 1234q10 10 23 10t23 -10l82 -82q10 -10 10 -23
t-10 -23zM1005 1325l-621 -621v512q0 132 94 226t226 94q102 0 184.5 -59t116.5 -152z" />
    <glyph glyph-name="shield" unicode="&#xf132;" horiz-adv-x="1280" 
d="M1088 576v640h-448v-1137q119 63 213 137q235 184 235 360zM1280 1344v-768q0 -86 -33.5 -170.5t-83 -150t-118 -127.5t-126.5 -103t-121 -77.5t-89.5 -49.5t-42.5 -20q-12 -6 -26 -6t-26 6q-16 7 -42.5 20t-89.5 49.5t-121 77.5t-126.5 103t-118 127.5t-83 150
t-33.5 170.5v768q0 26 19 45t45 19h1152q26 0 45 -19t19 -45z" />
    <glyph glyph-name="calendar_empty" unicode="&#xf133;" horiz-adv-x="1664" 
d="M128 -128h1408v1024h-1408v-1024zM512 1088v288q0 14 -9 23t-23 9h-64q-14 0 -23 -9t-9 -23v-288q0 -14 9 -23t23 -9h64q14 0 23 9t9 23zM1280 1088v288q0 14 -9 23t-23 9h-64q-14 0 -23 -9t-9 -23v-288q0 -14 9 -23t23 -9h64q14 0 23 9t9 23zM1664 1152v-1280
q0 -52 -38 -90t-90 -38h-1408q-52 0 -90 38t-38 90v1280q0 52 38 90t90 38h128v96q0 66 47 113t113 47h64q66 0 113 -47t47 -113v-96h384v96q0 66 47 113t113 47h64q66 0 113 -47t47 -113v-96h128q52 0 90 -38t38 -90z" />
    <glyph glyph-name="fire_extinguisher" unicode="&#xf134;" horiz-adv-x="1408" 
d="M512 1344q0 26 -19 45t-45 19t-45 -19t-19 -45t19 -45t45 -19t45 19t19 45zM1408 1376v-320q0 -16 -12 -25q-8 -7 -20 -7q-4 0 -7 1l-448 96q-11 2 -18 11t-7 20h-256v-102q111 -23 183.5 -111t72.5 -203v-800q0 -26 -19 -45t-45 -19h-512q-26 0 -45 19t-19 45v800
q0 106 62.5 190.5t161.5 114.5v111h-32q-59 0 -115 -23.5t-91.5 -53t-66 -66.5t-40.5 -53.5t-14 -24.5q-17 -35 -57 -35q-16 0 -29 7q-23 12 -31.5 37t3.5 49q5 10 14.5 26t37.5 53.5t60.5 70t85 67t108.5 52.5q-25 42 -25 86q0 66 47 113t113 47t113 -47t47 -113
q0 -33 -14 -64h302q0 11 7 20t18 11l448 96q3 1 7 1q12 0 20 -7q12 -9 12 -25z" />
    <glyph glyph-name="rocket" unicode="&#xf135;" horiz-adv-x="1664" 
d="M1440 1088q0 40 -28 68t-68 28t-68 -28t-28 -68t28 -68t68 -28t68 28t28 68zM1664 1376q0 -249 -75.5 -430.5t-253.5 -360.5q-81 -80 -195 -176l-20 -379q-2 -16 -16 -26l-384 -224q-7 -4 -16 -4q-12 0 -23 9l-64 64q-13 14 -8 32l85 276l-281 281l-276 -85q-3 -1 -9 -1
q-14 0 -23 9l-64 64q-17 19 -5 39l224 384q10 14 26 16l379 20q96 114 176 195q188 187 358 258t431 71q14 0 24 -9.5t10 -22.5z" />
    <glyph glyph-name="maxcdn" unicode="&#xf136;" horiz-adv-x="1792" 
d="M1745 763l-164 -763h-334l178 832q13 56 -15 88q-27 33 -83 33h-169l-204 -953h-334l204 953h-286l-204 -953h-334l204 953l-153 327h1276q101 0 189.5 -40.5t147.5 -113.5q60 -73 81 -168.5t0 -194.5z" />
    <glyph glyph-name="chevron_sign_left" unicode="&#xf137;" 
d="M909 141l102 102q19 19 19 45t-19 45l-307 307l307 307q19 19 19 45t-19 45l-102 102q-19 19 -45 19t-45 -19l-454 -454q-19 -19 -19 -45t19 -45l454 -454q19 -19 45 -19t45 19zM1536 640q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5
t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="chevron_sign_right" unicode="&#xf138;" 
d="M717 141l454 454q19 19 19 45t-19 45l-454 454q-19 19 -45 19t-45 -19l-102 -102q-19 -19 -19 -45t19 -45l307 -307l-307 -307q-19 -19 -19 -45t19 -45l102 -102q19 -19 45 -19t45 19zM1536 640q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5
t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="chevron_sign_up" unicode="&#xf139;" 
d="M1165 397l102 102q19 19 19 45t-19 45l-454 454q-19 19 -45 19t-45 -19l-454 -454q-19 -19 -19 -45t19 -45l102 -102q19 -19 45 -19t45 19l307 307l307 -307q19 -19 45 -19t45 19zM1536 640q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5
t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="chevron_sign_down" unicode="&#xf13a;" 
d="M813 237l454 454q19 19 19 45t-19 45l-102 102q-19 19 -45 19t-45 -19l-307 -307l-307 307q-19 19 -45 19t-45 -19l-102 -102q-19 -19 -19 -45t19 -45l454 -454q19 -19 45 -19t45 19zM1536 640q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5
t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="html5" unicode="&#xf13b;" horiz-adv-x="1408" 
d="M1130 939l16 175h-884l47 -534h612l-22 -228l-197 -53l-196 53l-13 140h-175l22 -278l362 -100h4v1l359 99l50 544h-644l-15 181h674zM0 1408h1408l-128 -1438l-578 -162l-574 162z" />
    <glyph glyph-name="css3" unicode="&#xf13c;" horiz-adv-x="1792" 
d="M275 1408h1505l-266 -1333l-804 -267l-698 267l71 356h297l-29 -147l422 -161l486 161l68 339h-1208l58 297h1209l38 191h-1208z" />
    <glyph glyph-name="anchor" unicode="&#xf13d;" horiz-adv-x="1792" 
d="M960 1280q0 26 -19 45t-45 19t-45 -19t-19 -45t19 -45t45 -19t45 19t19 45zM1792 352v-352q0 -22 -20 -30q-8 -2 -12 -2q-12 0 -23 9l-93 93q-119 -143 -318.5 -226.5t-429.5 -83.5t-429.5 83.5t-318.5 226.5l-93 -93q-9 -9 -23 -9q-4 0 -12 2q-20 8 -20 30v352
q0 14 9 23t23 9h352q22 0 30 -20q8 -19 -7 -35l-100 -100q67 -91 189.5 -153.5t271.5 -82.5v647h-192q-26 0 -45 19t-19 45v128q0 26 19 45t45 19h192v163q-58 34 -93 92.5t-35 128.5q0 106 75 181t181 75t181 -75t75 -181q0 -70 -35 -128.5t-93 -92.5v-163h192q26 0 45 -19
t19 -45v-128q0 -26 -19 -45t-45 -19h-192v-647q149 20 271.5 82.5t189.5 153.5l-100 100q-15 16 -7 35q8 20 30 20h352q14 0 23 -9t9 -23z" />
    <glyph glyph-name="unlock_alt" unicode="&#xf13e;" horiz-adv-x="1152" 
d="M1056 768q40 0 68 -28t28 -68v-576q0 -40 -28 -68t-68 -28h-960q-40 0 -68 28t-28 68v576q0 40 28 68t68 28h32v320q0 185 131.5 316.5t316.5 131.5t316.5 -131.5t131.5 -316.5q0 -26 -19 -45t-45 -19h-64q-26 0 -45 19t-19 45q0 106 -75 181t-181 75t-181 -75t-75 -181
v-320h736z" />
    <glyph glyph-name="bullseye" unicode="&#xf140;" 
d="M1024 640q0 -106 -75 -181t-181 -75t-181 75t-75 181t75 181t181 75t181 -75t75 -181zM1152 640q0 159 -112.5 271.5t-271.5 112.5t-271.5 -112.5t-112.5 -271.5t112.5 -271.5t271.5 -112.5t271.5 112.5t112.5 271.5zM1280 640q0 -212 -150 -362t-362 -150t-362 150
t-150 362t150 362t362 150t362 -150t150 -362zM1408 640q0 130 -51 248.5t-136.5 204t-204 136.5t-248.5 51t-248.5 -51t-204 -136.5t-136.5 -204t-51 -248.5t51 -248.5t136.5 -204t204 -136.5t248.5 -51t248.5 51t204 136.5t136.5 204t51 248.5zM1536 640
q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="ellipsis_horizontal" unicode="&#xf141;" horiz-adv-x="1408" 
d="M384 800v-192q0 -40 -28 -68t-68 -28h-192q-40 0 -68 28t-28 68v192q0 40 28 68t68 28h192q40 0 68 -28t28 -68zM896 800v-192q0 -40 -28 -68t-68 -28h-192q-40 0 -68 28t-28 68v192q0 40 28 68t68 28h192q40 0 68 -28t28 -68zM1408 800v-192q0 -40 -28 -68t-68 -28h-192
q-40 0 -68 28t-28 68v192q0 40 28 68t68 28h192q40 0 68 -28t28 -68z" />
    <glyph glyph-name="ellipsis_vertical" unicode="&#xf142;" horiz-adv-x="384" 
d="M384 288v-192q0 -40 -28 -68t-68 -28h-192q-40 0 -68 28t-28 68v192q0 40 28 68t68 28h192q40 0 68 -28t28 -68zM384 800v-192q0 -40 -28 -68t-68 -28h-192q-40 0 -68 28t-28 68v192q0 40 28 68t68 28h192q40 0 68 -28t28 -68zM384 1312v-192q0 -40 -28 -68t-68 -28h-192
q-40 0 -68 28t-28 68v192q0 40 28 68t68 28h192q40 0 68 -28t28 -68z" />
    <glyph glyph-name="_303" unicode="&#xf143;" 
d="M512 256q0 53 -37.5 90.5t-90.5 37.5t-90.5 -37.5t-37.5 -90.5t37.5 -90.5t90.5 -37.5t90.5 37.5t37.5 90.5zM863 162q-13 233 -176.5 396.5t-396.5 176.5q-14 1 -24 -9t-10 -23v-128q0 -13 8.5 -22t21.5 -10q154 -11 264 -121t121 -264q1 -13 10 -21.5t22 -8.5h128
q13 0 23 10t9 24zM1247 161q-5 154 -56 297.5t-139.5 260t-205 205t-260 139.5t-297.5 56q-14 1 -23 -9q-10 -10 -10 -23v-128q0 -13 9 -22t22 -10q204 -7 378 -111.5t278.5 -278.5t111.5 -378q1 -13 10 -22t22 -9h128q13 0 23 10q11 9 9 23zM1536 1120v-960
q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z" />
    <glyph glyph-name="play_sign" unicode="&#xf144;" 
d="M768 1408q209 0 385.5 -103t279.5 -279.5t103 -385.5t-103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103zM1152 585q32 18 32 55t-32 55l-544 320q-31 19 -64 1q-32 -19 -32 -56v-640q0 -37 32 -56
q16 -8 32 -8q17 0 32 9z" />
    <glyph glyph-name="ticket" unicode="&#xf145;" horiz-adv-x="1792" 
d="M1024 1084l316 -316l-572 -572l-316 316zM813 105l618 618q19 19 19 45t-19 45l-362 362q-18 18 -45 18t-45 -18l-618 -618q-19 -19 -19 -45t19 -45l362 -362q18 -18 45 -18t45 18zM1702 742l-907 -908q-37 -37 -90.5 -37t-90.5 37l-126 126q56 56 56 136t-56 136
t-136 56t-136 -56l-125 126q-37 37 -37 90.5t37 90.5l907 906q37 37 90.5 37t90.5 -37l125 -125q-56 -56 -56 -136t56 -136t136 -56t136 56l126 -125q37 -37 37 -90.5t-37 -90.5z" />
    <glyph glyph-name="minus_sign_alt" unicode="&#xf146;" 
d="M1280 576v128q0 26 -19 45t-45 19h-896q-26 0 -45 -19t-19 -45v-128q0 -26 19 -45t45 -19h896q26 0 45 19t19 45zM1536 1120v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5
t84.5 -203.5z" />
    <glyph glyph-name="check_minus" unicode="&#xf147;" horiz-adv-x="1408" 
d="M1152 736v-64q0 -14 -9 -23t-23 -9h-832q-14 0 -23 9t-9 23v64q0 14 9 23t23 9h832q14 0 23 -9t9 -23zM1280 288v832q0 66 -47 113t-113 47h-832q-66 0 -113 -47t-47 -113v-832q0 -66 47 -113t113 -47h832q66 0 113 47t47 113zM1408 1120v-832q0 -119 -84.5 -203.5
t-203.5 -84.5h-832q-119 0 -203.5 84.5t-84.5 203.5v832q0 119 84.5 203.5t203.5 84.5h832q119 0 203.5 -84.5t84.5 -203.5z" />
    <glyph glyph-name="level_up" unicode="&#xf148;" horiz-adv-x="1024" 
d="M1018 933q-18 -37 -58 -37h-192v-864q0 -14 -9 -23t-23 -9h-704q-21 0 -29 18q-8 20 4 35l160 192q9 11 25 11h320v640h-192q-40 0 -58 37q-17 37 9 68l320 384q18 22 49 22t49 -22l320 -384q27 -32 9 -68z" />
    <glyph glyph-name="level_down" unicode="&#xf149;" horiz-adv-x="1024" 
d="M32 1280h704q13 0 22.5 -9.5t9.5 -23.5v-863h192q40 0 58 -37t-9 -69l-320 -384q-18 -22 -49 -22t-49 22l-320 384q-26 31 -9 69q18 37 58 37h192v640h-320q-14 0 -25 11l-160 192q-13 14 -4 34q9 19 29 19z" />
    <glyph glyph-name="check_sign" unicode="&#xf14a;" 
d="M685 237l614 614q19 19 19 45t-19 45l-102 102q-19 19 -45 19t-45 -19l-467 -467l-211 211q-19 19 -45 19t-45 -19l-102 -102q-19 -19 -19 -45t19 -45l358 -358q19 -19 45 -19t45 19zM1536 1120v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5
t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z" />
    <glyph glyph-name="edit_sign" unicode="&#xf14b;" 
d="M404 428l152 -152l-52 -52h-56v96h-96v56zM818 818q14 -13 -3 -30l-291 -291q-17 -17 -30 -3q-14 13 3 30l291 291q17 17 30 3zM544 128l544 544l-288 288l-544 -544v-288h288zM1152 736l92 92q28 28 28 68t-28 68l-152 152q-28 28 -68 28t-68 -28l-92 -92zM1536 1120
v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z" />
    <glyph glyph-name="_312" unicode="&#xf14c;" 
d="M1280 608v480q0 26 -19 45t-45 19h-480q-42 0 -59 -39q-17 -41 14 -70l144 -144l-534 -534q-19 -19 -19 -45t19 -45l102 -102q19 -19 45 -19t45 19l534 534l144 -144q18 -19 45 -19q12 0 25 5q39 17 39 59zM1536 1120v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960
q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z" />
    <glyph glyph-name="share_sign" unicode="&#xf14d;" 
d="M1005 435l352 352q19 19 19 45t-19 45l-352 352q-30 31 -69 14q-40 -17 -40 -59v-160q-119 0 -216 -19.5t-162.5 -51t-114 -79t-76.5 -95.5t-44.5 -109t-21.5 -111.5t-5 -110.5q0 -181 167 -404q11 -12 25 -12q7 0 13 3q22 9 19 33q-44 354 62 473q46 52 130 75.5
t224 23.5v-160q0 -42 40 -59q12 -5 24 -5q26 0 45 19zM1536 1120v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z" />
    <glyph glyph-name="compass" unicode="&#xf14e;" 
d="M640 448l256 128l-256 128v-256zM1024 1039v-542l-512 -256v542zM1312 640q0 148 -73 273t-198 198t-273 73t-273 -73t-198 -198t-73 -273t73 -273t198 -198t273 -73t273 73t198 198t73 273zM1536 640q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103
t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="collapse" unicode="&#xf150;" 
d="M1145 861q18 -35 -5 -66l-320 -448q-19 -27 -52 -27t-52 27l-320 448q-23 31 -5 66q17 35 57 35h640q40 0 57 -35zM1280 160v960q0 13 -9.5 22.5t-22.5 9.5h-960q-13 0 -22.5 -9.5t-9.5 -22.5v-960q0 -13 9.5 -22.5t22.5 -9.5h960q13 0 22.5 9.5t9.5 22.5zM1536 1120
v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z" />
    <glyph glyph-name="collapse_top" unicode="&#xf151;" 
d="M1145 419q-17 -35 -57 -35h-640q-40 0 -57 35q-18 35 5 66l320 448q19 27 52 27t52 -27l320 -448q23 -31 5 -66zM1280 160v960q0 13 -9.5 22.5t-22.5 9.5h-960q-13 0 -22.5 -9.5t-9.5 -22.5v-960q0 -13 9.5 -22.5t22.5 -9.5h960q13 0 22.5 9.5t9.5 22.5zM1536 1120v-960
q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z" />
    <glyph glyph-name="_317" unicode="&#xf152;" 
d="M1088 640q0 -33 -27 -52l-448 -320q-31 -23 -66 -5q-35 17 -35 57v640q0 40 35 57q35 18 66 -5l448 -320q27 -19 27 -52zM1280 160v960q0 14 -9 23t-23 9h-960q-14 0 -23 -9t-9 -23v-960q0 -14 9 -23t23 -9h960q14 0 23 9t9 23zM1536 1120v-960q0 -119 -84.5 -203.5
t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z" />
    <glyph glyph-name="eur" unicode="&#xf153;" horiz-adv-x="1024" 
d="M976 229l35 -159q3 -12 -3 -22.5t-17 -14.5l-5 -1q-4 -2 -10.5 -3.5t-16 -4.5t-21.5 -5.5t-25.5 -5t-30 -5t-33.5 -4.5t-36.5 -3t-38.5 -1q-234 0 -409 130.5t-238 351.5h-95q-13 0 -22.5 9.5t-9.5 22.5v113q0 13 9.5 22.5t22.5 9.5h66q-2 57 1 105h-67q-14 0 -23 9
t-9 23v114q0 14 9 23t23 9h98q67 210 243.5 338t400.5 128q102 0 194 -23q11 -3 20 -15q6 -11 3 -24l-43 -159q-3 -13 -14 -19.5t-24 -2.5l-4 1q-4 1 -11.5 2.5l-17.5 3.5t-22.5 3.5t-26 3t-29 2.5t-29.5 1q-126 0 -226 -64t-150 -176h468q16 0 25 -12q10 -12 7 -26
l-24 -114q-5 -26 -32 -26h-488q-3 -37 0 -105h459q15 0 25 -12q9 -12 6 -27l-24 -112q-2 -11 -11 -18.5t-20 -7.5h-387q48 -117 149.5 -185.5t228.5 -68.5q18 0 36 1.5t33.5 3.5t29.5 4.5t24.5 5t18.5 4.5l12 3l5 2q13 5 26 -2q12 -7 15 -21z" />
    <glyph glyph-name="gbp" unicode="&#xf154;" horiz-adv-x="1024" 
d="M1020 399v-367q0 -14 -9 -23t-23 -9h-956q-14 0 -23 9t-9 23v150q0 13 9.5 22.5t22.5 9.5h97v383h-95q-14 0 -23 9.5t-9 22.5v131q0 14 9 23t23 9h95v223q0 171 123.5 282t314.5 111q185 0 335 -125q9 -8 10 -20.5t-7 -22.5l-103 -127q-9 -11 -22 -12q-13 -2 -23 7
q-5 5 -26 19t-69 32t-93 18q-85 0 -137 -47t-52 -123v-215h305q13 0 22.5 -9t9.5 -23v-131q0 -13 -9.5 -22.5t-22.5 -9.5h-305v-379h414v181q0 13 9 22.5t23 9.5h162q14 0 23 -9.5t9 -22.5z" />
    <glyph glyph-name="usd" unicode="&#xf155;" horiz-adv-x="1024" 
d="M978 351q0 -153 -99.5 -263.5t-258.5 -136.5v-175q0 -14 -9 -23t-23 -9h-135q-13 0 -22.5 9.5t-9.5 22.5v175q-66 9 -127.5 31t-101.5 44.5t-74 48t-46.5 37.5t-17.5 18q-17 21 -2 41l103 135q7 10 23 12q15 2 24 -9l2 -2q113 -99 243 -125q37 -8 74 -8q81 0 142.5 43
t61.5 122q0 28 -15 53t-33.5 42t-58.5 37.5t-66 32t-80 32.5q-39 16 -61.5 25t-61.5 26.5t-62.5 31t-56.5 35.5t-53.5 42.5t-43.5 49t-35.5 58t-21 66.5t-8.5 78q0 138 98 242t255 134v180q0 13 9.5 22.5t22.5 9.5h135q14 0 23 -9t9 -23v-176q57 -6 110.5 -23t87 -33.5
t63.5 -37.5t39 -29t15 -14q17 -18 5 -38l-81 -146q-8 -15 -23 -16q-14 -3 -27 7q-3 3 -14.5 12t-39 26.5t-58.5 32t-74.5 26t-85.5 11.5q-95 0 -155 -43t-60 -111q0 -26 8.5 -48t29.5 -41.5t39.5 -33t56 -31t60.5 -27t70 -27.5q53 -20 81 -31.5t76 -35t75.5 -42.5t62 -50
t53 -63.5t31.5 -76.5t13 -94z" />
    <glyph glyph-name="inr" unicode="&#xf156;" horiz-adv-x="898" 
d="M898 1066v-102q0 -14 -9 -23t-23 -9h-168q-23 -144 -129 -234t-276 -110q167 -178 459 -536q14 -16 4 -34q-8 -18 -29 -18h-195q-16 0 -25 12q-306 367 -498 571q-9 9 -9 22v127q0 13 9.5 22.5t22.5 9.5h112q132 0 212.5 43t102.5 125h-427q-14 0 -23 9t-9 23v102
q0 14 9 23t23 9h413q-57 113 -268 113h-145q-13 0 -22.5 9.5t-9.5 22.5v133q0 14 9 23t23 9h832q14 0 23 -9t9 -23v-102q0 -14 -9 -23t-23 -9h-233q47 -61 64 -144h171q14 0 23 -9t9 -23z" />
    <glyph glyph-name="jpy" unicode="&#xf157;" horiz-adv-x="1027" 
d="M603 0h-172q-13 0 -22.5 9t-9.5 23v330h-288q-13 0 -22.5 9t-9.5 23v103q0 13 9.5 22.5t22.5 9.5h288v85h-288q-13 0 -22.5 9t-9.5 23v104q0 13 9.5 22.5t22.5 9.5h214l-321 578q-8 16 0 32q10 16 28 16h194q19 0 29 -18l215 -425q19 -38 56 -125q10 24 30.5 68t27.5 61
l191 420q8 19 29 19h191q17 0 27 -16q9 -14 1 -31l-313 -579h215q13 0 22.5 -9.5t9.5 -22.5v-104q0 -14 -9.5 -23t-22.5 -9h-290v-85h290q13 0 22.5 -9.5t9.5 -22.5v-103q0 -14 -9.5 -23t-22.5 -9h-290v-330q0 -13 -9.5 -22.5t-22.5 -9.5z" />
    <glyph glyph-name="rub" unicode="&#xf158;" horiz-adv-x="1280" 
d="M1043 971q0 100 -65 162t-171 62h-320v-448h320q106 0 171 62t65 162zM1280 971q0 -193 -126.5 -315t-326.5 -122h-340v-118h505q14 0 23 -9t9 -23v-128q0 -14 -9 -23t-23 -9h-505v-192q0 -14 -9.5 -23t-22.5 -9h-167q-14 0 -23 9t-9 23v192h-224q-14 0 -23 9t-9 23v128
q0 14 9 23t23 9h224v118h-224q-14 0 -23 9t-9 23v149q0 13 9 22.5t23 9.5h224v629q0 14 9 23t23 9h539q200 0 326.5 -122t126.5 -315z" />
    <glyph glyph-name="krw" unicode="&#xf159;" horiz-adv-x="1792" 
d="M514 341l81 299h-159l75 -300q1 -1 1 -3t1 -3q0 1 0.5 3.5t0.5 3.5zM630 768l35 128h-292l32 -128h225zM822 768h139l-35 128h-70zM1271 340l78 300h-162l81 -299q0 -1 0.5 -3.5t1.5 -3.5q0 1 0.5 3t0.5 3zM1382 768l33 128h-297l34 -128h230zM1792 736v-64q0 -14 -9 -23
t-23 -9h-213l-164 -616q-7 -24 -31 -24h-159q-24 0 -31 24l-166 616h-209l-167 -616q-7 -24 -31 -24h-159q-11 0 -19.5 7t-10.5 17l-160 616h-208q-14 0 -23 9t-9 23v64q0 14 9 23t23 9h175l-33 128h-142q-14 0 -23 9t-9 23v64q0 14 9 23t23 9h109l-89 344q-5 15 5 28
q10 12 26 12h137q26 0 31 -24l90 -360h359l97 360q7 24 31 24h126q24 0 31 -24l98 -360h365l93 360q5 24 31 24h137q16 0 26 -12q10 -13 5 -28l-91 -344h111q14 0 23 -9t9 -23v-64q0 -14 -9 -23t-23 -9h-145l-34 -128h179q14 0 23 -9t9 -23z" />
    <glyph glyph-name="btc" unicode="&#xf15a;" horiz-adv-x="1280" 
d="M1167 896q18 -182 -131 -258q117 -28 175 -103t45 -214q-7 -71 -32.5 -125t-64.5 -89t-97 -58.5t-121.5 -34.5t-145.5 -15v-255h-154v251q-80 0 -122 1v-252h-154v255q-18 0 -54 0.5t-55 0.5h-200l31 183h111q50 0 58 51v402h16q-6 1 -16 1v287q-13 68 -89 68h-111v164
l212 -1q64 0 97 1v252h154v-247q82 2 122 2v245h154v-252q79 -7 140 -22.5t113 -45t82.5 -78t36.5 -114.5zM952 351q0 36 -15 64t-37 46t-57.5 30.5t-65.5 18.5t-74 9t-69 3t-64.5 -1t-47.5 -1v-338q8 0 37 -0.5t48 -0.5t53 1.5t58.5 4t57 8.5t55.5 14t47.5 21t39.5 30
t24.5 40t9.5 51zM881 827q0 33 -12.5 58.5t-30.5 42t-48 28t-55 16.5t-61.5 8t-58 2.5t-54 -1t-39.5 -0.5v-307q5 0 34.5 -0.5t46.5 0t50 2t55 5.5t51.5 11t48.5 18.5t37 27t27 38.5t9 51z" />
    <glyph glyph-name="file" unicode="&#xf15b;" 
d="M1024 1024v472q22 -14 36 -28l408 -408q14 -14 28 -36h-472zM896 992q0 -40 28 -68t68 -28h544v-1056q0 -40 -28 -68t-68 -28h-1344q-40 0 -68 28t-28 68v1600q0 40 28 68t68 28h800v-544z" />
    <glyph glyph-name="file_text" unicode="&#xf15c;" 
d="M1468 1060q14 -14 28 -36h-472v472q22 -14 36 -28zM992 896h544v-1056q0 -40 -28 -68t-68 -28h-1344q-40 0 -68 28t-28 68v1600q0 40 28 68t68 28h800v-544q0 -40 28 -68t68 -28zM1152 160v64q0 14 -9 23t-23 9h-704q-14 0 -23 -9t-9 -23v-64q0 -14 9 -23t23 -9h704
q14 0 23 9t9 23zM1152 416v64q0 14 -9 23t-23 9h-704q-14 0 -23 -9t-9 -23v-64q0 -14 9 -23t23 -9h704q14 0 23 9t9 23zM1152 672v64q0 14 -9 23t-23 9h-704q-14 0 -23 -9t-9 -23v-64q0 -14 9 -23t23 -9h704q14 0 23 9t9 23z" />
    <glyph glyph-name="sort_by_alphabet" unicode="&#xf15d;" horiz-adv-x="1664" 
d="M1191 1128h177l-72 218l-12 47q-2 16 -2 20h-4l-3 -20q0 -1 -3.5 -18t-7.5 -29zM736 96q0 -12 -10 -24l-319 -319q-10 -9 -23 -9q-12 0 -23 9l-320 320q-15 16 -7 35q8 20 30 20h192v1376q0 14 9 23t23 9h192q14 0 23 -9t9 -23v-1376h192q14 0 23 -9t9 -23zM1572 -23
v-233h-584v90l369 529q12 18 21 27l11 9v3q-2 0 -6.5 -0.5t-7.5 -0.5q-12 -3 -30 -3h-232v-115h-120v229h567v-89l-369 -530q-6 -8 -21 -26l-11 -11v-2l14 2q9 2 30 2h248v119h121zM1661 874v-106h-288v106h75l-47 144h-243l-47 -144h75v-106h-287v106h70l230 662h162
l230 -662h70z" />
    <glyph glyph-name="_329" unicode="&#xf15e;" horiz-adv-x="1664" 
d="M1191 104h177l-72 218l-12 47q-2 16 -2 20h-4l-3 -20q0 -1 -3.5 -18t-7.5 -29zM736 96q0 -12 -10 -24l-319 -319q-10 -9 -23 -9q-12 0 -23 9l-320 320q-15 16 -7 35q8 20 30 20h192v1376q0 14 9 23t23 9h192q14 0 23 -9t9 -23v-1376h192q14 0 23 -9t9 -23zM1661 -150
v-106h-288v106h75l-47 144h-243l-47 -144h75v-106h-287v106h70l230 662h162l230 -662h70zM1572 1001v-233h-584v90l369 529q12 18 21 27l11 9v3q-2 0 -6.5 -0.5t-7.5 -0.5q-12 -3 -30 -3h-232v-115h-120v229h567v-89l-369 -530q-6 -8 -21 -26l-11 -10v-3l14 3q9 1 30 1h248
v119h121z" />
    <glyph glyph-name="sort_by_attributes" unicode="&#xf160;" horiz-adv-x="1792" 
d="M736 96q0 -12 -10 -24l-319 -319q-10 -9 -23 -9q-12 0 -23 9l-320 320q-15 16 -7 35q8 20 30 20h192v1376q0 14 9 23t23 9h192q14 0 23 -9t9 -23v-1376h192q14 0 23 -9t9 -23zM1792 -32v-192q0 -14 -9 -23t-23 -9h-832q-14 0 -23 9t-9 23v192q0 14 9 23t23 9h832
q14 0 23 -9t9 -23zM1600 480v-192q0 -14 -9 -23t-23 -9h-640q-14 0 -23 9t-9 23v192q0 14 9 23t23 9h640q14 0 23 -9t9 -23zM1408 992v-192q0 -14 -9 -23t-23 -9h-448q-14 0 -23 9t-9 23v192q0 14 9 23t23 9h448q14 0 23 -9t9 -23zM1216 1504v-192q0 -14 -9 -23t-23 -9h-256
q-14 0 -23 9t-9 23v192q0 14 9 23t23 9h256q14 0 23 -9t9 -23z" />
    <glyph glyph-name="sort_by_attributes_alt" unicode="&#xf161;" horiz-adv-x="1792" 
d="M1216 -32v-192q0 -14 -9 -23t-23 -9h-256q-14 0 -23 9t-9 23v192q0 14 9 23t23 9h256q14 0 23 -9t9 -23zM736 96q0 -12 -10 -24l-319 -319q-10 -9 -23 -9q-12 0 -23 9l-320 320q-15 16 -7 35q8 20 30 20h192v1376q0 14 9 23t23 9h192q14 0 23 -9t9 -23v-1376h192
q14 0 23 -9t9 -23zM1408 480v-192q0 -14 -9 -23t-23 -9h-448q-14 0 -23 9t-9 23v192q0 14 9 23t23 9h448q14 0 23 -9t9 -23zM1600 992v-192q0 -14 -9 -23t-23 -9h-640q-14 0 -23 9t-9 23v192q0 14 9 23t23 9h640q14 0 23 -9t9 -23zM1792 1504v-192q0 -14 -9 -23t-23 -9h-832
q-14 0 -23 9t-9 23v192q0 14 9 23t23 9h832q14 0 23 -9t9 -23z" />
    <glyph glyph-name="sort_by_order" unicode="&#xf162;" 
d="M1346 223q0 63 -44 116t-103 53q-52 0 -83 -37t-31 -94t36.5 -95t104.5 -38q50 0 85 27t35 68zM736 96q0 -12 -10 -24l-319 -319q-10 -9 -23 -9q-12 0 -23 9l-320 320q-15 16 -7 35q8 20 30 20h192v1376q0 14 9 23t23 9h192q14 0 23 -9t9 -23v-1376h192q14 0 23 -9t9 -23
zM1486 165q0 -62 -13 -121.5t-41 -114t-68 -95.5t-98.5 -65.5t-127.5 -24.5q-62 0 -108 16q-24 8 -42 15l39 113q15 -7 31 -11q37 -13 75 -13q84 0 134.5 58.5t66.5 145.5h-2q-21 -23 -61.5 -37t-84.5 -14q-106 0 -173 71.5t-67 172.5q0 105 72 178t181 73q123 0 205 -94.5
t82 -252.5zM1456 882v-114h-469v114h167v432q0 7 0.5 19t0.5 17v16h-2l-7 -12q-8 -13 -26 -31l-62 -58l-82 86l192 185h123v-654h165z" />
    <glyph glyph-name="sort_by_order_alt" unicode="&#xf163;" 
d="M1346 1247q0 63 -44 116t-103 53q-52 0 -83 -37t-31 -94t36.5 -95t104.5 -38q50 0 85 27t35 68zM736 96q0 -12 -10 -24l-319 -319q-10 -9 -23 -9q-12 0 -23 9l-320 320q-15 16 -7 35q8 20 30 20h192v1376q0 14 9 23t23 9h192q14 0 23 -9t9 -23v-1376h192q14 0 23 -9
t9 -23zM1456 -142v-114h-469v114h167v432q0 7 0.5 19t0.5 17v16h-2l-7 -12q-8 -13 -26 -31l-62 -58l-82 86l192 185h123v-654h165zM1486 1189q0 -62 -13 -121.5t-41 -114t-68 -95.5t-98.5 -65.5t-127.5 -24.5q-62 0 -108 16q-24 8 -42 15l39 113q15 -7 31 -11q37 -13 75 -13
q84 0 134.5 58.5t66.5 145.5h-2q-21 -23 -61.5 -37t-84.5 -14q-106 0 -173 71.5t-67 172.5q0 105 72 178t181 73q123 0 205 -94.5t82 -252.5z" />
    <glyph glyph-name="_334" unicode="&#xf164;" horiz-adv-x="1664" 
d="M256 192q0 26 -19 45t-45 19q-27 0 -45.5 -19t-18.5 -45q0 -27 18.5 -45.5t45.5 -18.5q26 0 45 18.5t19 45.5zM416 704v-640q0 -26 -19 -45t-45 -19h-288q-26 0 -45 19t-19 45v640q0 26 19 45t45 19h288q26 0 45 -19t19 -45zM1600 704q0 -86 -55 -149q15 -44 15 -76
q3 -76 -43 -137q17 -56 0 -117q-15 -57 -54 -94q9 -112 -49 -181q-64 -76 -197 -78h-36h-76h-17q-66 0 -144 15.5t-121.5 29t-120.5 39.5q-123 43 -158 44q-26 1 -45 19.5t-19 44.5v641q0 25 18 43.5t43 20.5q24 2 76 59t101 121q68 87 101 120q18 18 31 48t17.5 48.5
t13.5 60.5q7 39 12.5 61t19.5 52t34 50q19 19 45 19q46 0 82.5 -10.5t60 -26t40 -40.5t24 -45t12 -50t5 -45t0.5 -39q0 -38 -9.5 -76t-19 -60t-27.5 -56q-3 -6 -10 -18t-11 -22t-8 -24h277q78 0 135 -57t57 -135z" />
    <glyph glyph-name="_335" unicode="&#xf165;" horiz-adv-x="1664" 
d="M256 960q0 -26 -19 -45t-45 -19q-27 0 -45.5 19t-18.5 45q0 27 18.5 45.5t45.5 18.5q26 0 45 -18.5t19 -45.5zM416 448v640q0 26 -19 45t-45 19h-288q-26 0 -45 -19t-19 -45v-640q0 -26 19 -45t45 -19h288q26 0 45 19t19 45zM1545 597q55 -61 55 -149q-1 -78 -57.5 -135
t-134.5 -57h-277q4 -14 8 -24t11 -22t10 -18q18 -37 27 -57t19 -58.5t10 -76.5q0 -24 -0.5 -39t-5 -45t-12 -50t-24 -45t-40 -40.5t-60 -26t-82.5 -10.5q-26 0 -45 19q-20 20 -34 50t-19.5 52t-12.5 61q-9 42 -13.5 60.5t-17.5 48.5t-31 48q-33 33 -101 120q-49 64 -101 121
t-76 59q-25 2 -43 20.5t-18 43.5v641q0 26 19 44.5t45 19.5q35 1 158 44q77 26 120.5 39.5t121.5 29t144 15.5h17h76h36q133 -2 197 -78q58 -69 49 -181q39 -37 54 -94q17 -61 0 -117q46 -61 43 -137q0 -32 -15 -76z" />
    <glyph glyph-name="youtube_sign" unicode="&#xf166;" 
d="M919 233v157q0 50 -29 50q-17 0 -33 -16v-224q16 -16 33 -16q29 0 29 49zM1103 355h66v34q0 51 -33 51t-33 -51v-34zM532 621v-70h-80v-423h-74v423h-78v70h232zM733 495v-367h-67v40q-39 -45 -76 -45q-33 0 -42 28q-6 17 -6 54v290h66v-270q0 -24 1 -26q1 -15 15 -15
q20 0 42 31v280h67zM985 384v-146q0 -52 -7 -73q-12 -42 -53 -42q-35 0 -68 41v-36h-67v493h67v-161q32 40 68 40q41 0 53 -42q7 -21 7 -74zM1236 255v-9q0 -29 -2 -43q-3 -22 -15 -40q-27 -40 -80 -40q-52 0 -81 38q-21 27 -21 86v129q0 59 20 86q29 38 80 38t78 -38
q21 -29 21 -86v-76h-133v-65q0 -51 34 -51q24 0 30 26q0 1 0.5 7t0.5 16.5v21.5h68zM785 1079v-156q0 -51 -32 -51t-32 51v156q0 52 32 52t32 -52zM1318 366q0 177 -19 260q-10 44 -43 73.5t-76 34.5q-136 15 -412 15q-275 0 -411 -15q-44 -5 -76.5 -34.5t-42.5 -73.5
q-20 -87 -20 -260q0 -176 20 -260q10 -43 42.5 -73t75.5 -35q137 -15 412 -15t412 15q43 5 75.5 35t42.5 73q20 84 20 260zM563 1017l90 296h-75l-51 -195l-53 195h-78q7 -23 23 -69l24 -69q35 -103 46 -158v-201h74v201zM852 936v130q0 58 -21 87q-29 38 -78 38
q-51 0 -78 -38q-21 -29 -21 -87v-130q0 -58 21 -87q27 -38 78 -38q49 0 78 38q21 27 21 87zM1033 816h67v370h-67v-283q-22 -31 -42 -31q-15 0 -16 16q-1 2 -1 26v272h-67v-293q0 -37 6 -55q11 -27 43 -27q36 0 77 45v-40zM1536 1120v-960q0 -119 -84.5 -203.5t-203.5 -84.5
h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z" />
    <glyph glyph-name="youtube" unicode="&#xf167;" 
d="M971 292v-211q0 -67 -39 -67q-23 0 -45 22v301q22 22 45 22q39 0 39 -67zM1309 291v-46h-90v46q0 68 45 68t45 -68zM343 509h107v94h-312v-94h105v-569h100v569zM631 -60h89v494h-89v-378q-30 -42 -57 -42q-18 0 -21 21q-1 3 -1 35v364h-89v-391q0 -49 8 -73
q12 -37 58 -37q48 0 102 61v-54zM1060 88v197q0 73 -9 99q-17 56 -71 56q-50 0 -93 -54v217h-89v-663h89v48q45 -55 93 -55q54 0 71 55q9 27 9 100zM1398 98v13h-91q0 -51 -2 -61q-7 -36 -40 -36q-46 0 -46 69v87h179v103q0 79 -27 116q-39 51 -106 51q-68 0 -107 -51
q-28 -37 -28 -116v-173q0 -79 29 -116q39 -51 108 -51q72 0 108 53q18 27 21 54q2 9 2 58zM790 1011v210q0 69 -43 69t-43 -69v-210q0 -70 43 -70t43 70zM1509 260q0 -234 -26 -350q-14 -59 -58 -99t-102 -46q-184 -21 -555 -21t-555 21q-58 6 -102.5 46t-57.5 99
q-26 112 -26 350q0 234 26 350q14 59 58 99t103 47q183 20 554 20t555 -20q58 -7 102.5 -47t57.5 -99q26 -112 26 -350zM511 1536h102l-121 -399v-271h-100v271q-14 74 -61 212q-37 103 -65 187h106l71 -263zM881 1203v-175q0 -81 -28 -118q-38 -51 -106 -51q-67 0 -105 51
q-28 38 -28 118v175q0 80 28 117q38 51 105 51q68 0 106 -51q28 -37 28 -117zM1216 1365v-499h-91v55q-53 -62 -103 -62q-46 0 -59 37q-8 24 -8 75v394h91v-367q0 -33 1 -35q3 -22 21 -22q27 0 57 43v381h91z" />
    <glyph glyph-name="xing" unicode="&#xf168;" horiz-adv-x="1408" 
d="M597 869q-10 -18 -257 -456q-27 -46 -65 -46h-239q-21 0 -31 17t0 36l253 448q1 0 0 1l-161 279q-12 22 -1 37q9 15 32 15h239q40 0 66 -45zM1403 1511q11 -16 0 -37l-528 -934v-1l336 -615q11 -20 1 -37q-10 -15 -32 -15h-239q-42 0 -66 45l-339 622q18 32 531 942
q25 45 64 45h241q22 0 31 -15z" />
    <glyph glyph-name="xing_sign" unicode="&#xf169;" 
d="M685 771q0 1 -126 222q-21 34 -52 34h-184q-18 0 -26 -11q-7 -12 1 -29l125 -216v-1l-196 -346q-9 -14 0 -28q8 -13 24 -13h185q31 0 50 36zM1309 1268q-7 12 -24 12h-187q-30 0 -49 -35l-411 -729q1 -2 262 -481q20 -35 52 -35h184q18 0 25 12q8 13 -1 28l-260 476v1
l409 723q8 16 0 28zM1536 1120v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z" />
    <glyph glyph-name="youtube_play" unicode="&#xf16a;" horiz-adv-x="1792" 
d="M711 408l484 250l-484 253v-503zM896 1270q168 0 324.5 -4.5t229.5 -9.5l73 -4q1 0 17 -1.5t23 -3t23.5 -4.5t28.5 -8t28 -13t31 -19.5t29 -26.5q6 -6 15.5 -18.5t29 -58.5t26.5 -101q8 -64 12.5 -136.5t5.5 -113.5v-40v-136q1 -145 -18 -290q-7 -55 -25 -99.5t-32 -61.5
l-14 -17q-14 -15 -29 -26.5t-31 -19t-28 -12.5t-28.5 -8t-24 -4.5t-23 -3t-16.5 -1.5q-251 -19 -627 -19q-207 2 -359.5 6.5t-200.5 7.5l-49 4l-36 4q-36 5 -54.5 10t-51 21t-56.5 41q-6 6 -15.5 18.5t-29 58.5t-26.5 101q-8 64 -12.5 136.5t-5.5 113.5v40v136
q-1 145 18 290q7 55 25 99.5t32 61.5l14 17q14 15 29 26.5t31 19.5t28 13t28.5 8t23.5 4.5t23 3t17 1.5q251 18 627 18z" />
    <glyph glyph-name="dropbox" unicode="&#xf16b;" horiz-adv-x="1792" 
d="M402 829l494 -305l-342 -285l-490 319zM1388 274v-108l-490 -293v-1l-1 1l-1 -1v1l-489 293v108l147 -96l342 284v2l1 -1l1 1v-2l343 -284zM554 1418l342 -285l-494 -304l-338 270zM1390 829l338 -271l-489 -319l-343 285zM1239 1418l489 -319l-338 -270l-494 304z" />
    <glyph glyph-name="stackexchange" unicode="&#xf16c;" 
d="M1289 -96h-1118v480h-160v-640h1438v640h-160v-480zM347 428l33 157l783 -165l-33 -156zM450 802l67 146l725 -339l-67 -145zM651 1158l102 123l614 -513l-102 -123zM1048 1536l477 -641l-128 -96l-477 641zM330 65v159h800v-159h-800z" />
    <glyph glyph-name="instagram" unicode="&#xf16d;" 
d="M1024 640q0 106 -75 181t-181 75t-181 -75t-75 -181t75 -181t181 -75t181 75t75 181zM1162 640q0 -164 -115 -279t-279 -115t-279 115t-115 279t115 279t279 115t279 -115t115 -279zM1270 1050q0 -38 -27 -65t-65 -27t-65 27t-27 65t27 65t65 27t65 -27t27 -65zM768 1270
q-7 0 -76.5 0.5t-105.5 0t-96.5 -3t-103 -10t-71.5 -18.5q-50 -20 -88 -58t-58 -88q-11 -29 -18.5 -71.5t-10 -103t-3 -96.5t0 -105.5t0.5 -76.5t-0.5 -76.5t0 -105.5t3 -96.5t10 -103t18.5 -71.5q20 -50 58 -88t88 -58q29 -11 71.5 -18.5t103 -10t96.5 -3t105.5 0t76.5 0.5
t76.5 -0.5t105.5 0t96.5 3t103 10t71.5 18.5q50 20 88 58t58 88q11 29 18.5 71.5t10 103t3 96.5t0 105.5t-0.5 76.5t0.5 76.5t0 105.5t-3 96.5t-10 103t-18.5 71.5q-20 50 -58 88t-88 58q-29 11 -71.5 18.5t-103 10t-96.5 3t-105.5 0t-76.5 -0.5zM1536 640q0 -229 -5 -317
q-10 -208 -124 -322t-322 -124q-88 -5 -317 -5t-317 5q-208 10 -322 124t-124 322q-5 88 -5 317t5 317q10 208 124 322t322 124q88 5 317 5t317 -5q208 -10 322 -124t124 -322q5 -88 5 -317z" />
    <glyph glyph-name="flickr" unicode="&#xf16e;" 
d="M1248 1408q119 0 203.5 -84.5t84.5 -203.5v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960zM698 640q0 88 -62 150t-150 62t-150 -62t-62 -150t62 -150t150 -62t150 62t62 150zM1262 640q0 88 -62 150
t-150 62t-150 -62t-62 -150t62 -150t150 -62t150 62t62 150z" />
    <glyph glyph-name="adn" unicode="&#xf170;" 
d="M768 914l201 -306h-402zM1133 384h94l-459 691l-459 -691h94l104 160h522zM1536 640q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="f171" unicode="&#xf171;" horiz-adv-x="1408" 
d="M815 677q8 -63 -50.5 -101t-111.5 -6q-39 17 -53.5 58t-0.5 82t52 58q36 18 72.5 12t64 -35.5t27.5 -67.5zM926 698q-14 107 -113 164t-197 13q-63 -28 -100.5 -88.5t-34.5 -129.5q4 -91 77.5 -155t165.5 -56q91 8 152 84t50 168zM1165 1240q-20 27 -56 44.5t-58 22
t-71 12.5q-291 47 -566 -2q-43 -7 -66 -12t-55 -22t-50 -43q30 -28 76 -45.5t73.5 -22t87.5 -11.5q228 -29 448 -1q63 8 89.5 12t72.5 21.5t75 46.5zM1222 205q-8 -26 -15.5 -76.5t-14 -84t-28.5 -70t-58 -56.5q-86 -48 -189.5 -71.5t-202 -22t-201.5 18.5q-46 8 -81.5 18
t-76.5 27t-73 43.5t-52 61.5q-25 96 -57 292l6 16l18 9q223 -148 506.5 -148t507.5 148q21 -6 24 -23t-5 -45t-8 -37zM1403 1166q-26 -167 -111 -655q-5 -30 -27 -56t-43.5 -40t-54.5 -31q-252 -126 -610 -88q-248 27 -394 139q-15 12 -25.5 26.5t-17 35t-9 34t-6 39.5
t-5.5 35q-9 50 -26.5 150t-28 161.5t-23.5 147.5t-22 158q3 26 17.5 48.5t31.5 37.5t45 30t46 22.5t48 18.5q125 46 313 64q379 37 676 -50q155 -46 215 -122q16 -20 16.5 -51t-5.5 -54z" />
    <glyph glyph-name="bitbucket_sign" unicode="&#xf172;" 
d="M848 666q0 43 -41 66t-77 1q-43 -20 -42.5 -72.5t43.5 -70.5q39 -23 81 4t36 72zM928 682q8 -66 -36 -121t-110 -61t-119 40t-56 113q-2 49 25.5 93t72.5 64q70 31 141.5 -10t81.5 -118zM1100 1073q-20 -21 -53.5 -34t-53 -16t-63.5 -8q-155 -20 -324 0q-44 6 -63 9.5
t-52.5 16t-54.5 32.5q13 19 36 31t40 15.5t47 8.5q198 35 408 1q33 -5 51 -8.5t43 -16t39 -31.5zM1142 327q0 7 5.5 26.5t3 32t-17.5 16.5q-161 -106 -365 -106t-366 106l-12 -6l-5 -12q26 -154 41 -210q47 -81 204 -108q249 -46 428 53q34 19 49 51.5t22.5 85.5t12.5 71z
M1272 1020q9 53 -8 75q-43 55 -155 88q-216 63 -487 36q-132 -12 -226 -46q-38 -15 -59.5 -25t-47 -34t-29.5 -54q8 -68 19 -138t29 -171t24 -137q1 -5 5 -31t7 -36t12 -27t22 -28q105 -80 284 -100q259 -28 440 63q24 13 39.5 23t31 29t19.5 40q48 267 80 473zM1536 1120
v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z" />
    <glyph glyph-name="tumblr" unicode="&#xf173;" horiz-adv-x="1024" 
d="M944 207l80 -237q-23 -35 -111 -66t-177 -32q-104 -2 -190.5 26t-142.5 74t-95 106t-55.5 120t-16.5 118v544h-168v215q72 26 129 69.5t91 90t58 102t34 99t15 88.5q1 5 4.5 8.5t7.5 3.5h244v-424h333v-252h-334v-518q0 -30 6.5 -56t22.5 -52.5t49.5 -41.5t81.5 -14
q78 2 134 29z" />
    <glyph glyph-name="tumblr_sign" unicode="&#xf174;" 
d="M1136 75l-62 183q-44 -22 -103 -22q-36 -1 -62 10.5t-38.5 31.5t-17.5 40.5t-5 43.5v398h257v194h-256v326h-188q-8 0 -9 -10q-5 -44 -17.5 -87t-39 -95t-77 -95t-118.5 -68v-165h130v-418q0 -57 21.5 -115t65 -111t121 -85.5t176.5 -30.5q69 1 136.5 25t85.5 50z
M1536 1120v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z" />
    <glyph glyph-name="long_arrow_down" unicode="&#xf175;" horiz-adv-x="768" 
d="M765 237q8 -19 -5 -35l-350 -384q-10 -10 -23 -10q-14 0 -24 10l-355 384q-13 16 -5 35q9 19 29 19h224v1248q0 14 9 23t23 9h192q14 0 23 -9t9 -23v-1248h224q21 0 29 -19z" />
    <glyph glyph-name="long_arrow_up" unicode="&#xf176;" horiz-adv-x="768" 
d="M765 1043q-9 -19 -29 -19h-224v-1248q0 -14 -9 -23t-23 -9h-192q-14 0 -23 9t-9 23v1248h-224q-21 0 -29 19t5 35l350 384q10 10 23 10q14 0 24 -10l355 -384q13 -16 5 -35z" />
    <glyph glyph-name="long_arrow_left" unicode="&#xf177;" horiz-adv-x="1792" 
d="M1792 736v-192q0 -14 -9 -23t-23 -9h-1248v-224q0 -21 -19 -29t-35 5l-384 350q-10 10 -10 23q0 14 10 24l384 354q16 14 35 6q19 -9 19 -29v-224h1248q14 0 23 -9t9 -23z" />
    <glyph glyph-name="long_arrow_right" unicode="&#xf178;" horiz-adv-x="1792" 
d="M1728 643q0 -14 -10 -24l-384 -354q-16 -14 -35 -6q-19 9 -19 29v224h-1248q-14 0 -23 9t-9 23v192q0 14 9 23t23 9h1248v224q0 21 19 29t35 -5l384 -350q10 -10 10 -23z" />
    <glyph glyph-name="apple" unicode="&#xf179;" horiz-adv-x="1408" 
d="M1393 321q-39 -125 -123 -250q-129 -196 -257 -196q-49 0 -140 32q-86 32 -151 32q-61 0 -142 -33q-81 -34 -132 -34q-152 0 -301 259q-147 261 -147 503q0 228 113 374q113 144 284 144q72 0 177 -30q104 -30 138 -30q45 0 143 34q102 34 173 34q119 0 213 -65
q52 -36 104 -100q-79 -67 -114 -118q-65 -94 -65 -207q0 -124 69 -223t158 -126zM1017 1494q0 -61 -29 -136q-30 -75 -93 -138q-54 -54 -108 -72q-37 -11 -104 -17q3 149 78 257q74 107 250 148q1 -3 2.5 -11t2.5 -11q0 -4 0.5 -10t0.5 -10z" />
    <glyph glyph-name="windows" unicode="&#xf17a;" horiz-adv-x="1664" 
d="M682 530v-651l-682 94v557h682zM682 1273v-659h-682v565zM1664 530v-786l-907 125v661h907zM1664 1408v-794h-907v669z" />
    <glyph glyph-name="android" unicode="&#xf17b;" horiz-adv-x="1408" 
d="M493 1053q16 0 27.5 11.5t11.5 27.5t-11.5 27.5t-27.5 11.5t-27 -11.5t-11 -27.5t11 -27.5t27 -11.5zM915 1053q16 0 27 11.5t11 27.5t-11 27.5t-27 11.5t-27.5 -11.5t-11.5 -27.5t11.5 -27.5t27.5 -11.5zM103 869q42 0 72 -30t30 -72v-430q0 -43 -29.5 -73t-72.5 -30
t-73 30t-30 73v430q0 42 30 72t73 30zM1163 850v-666q0 -46 -32 -78t-77 -32h-75v-227q0 -43 -30 -73t-73 -30t-73 30t-30 73v227h-138v-227q0 -43 -30 -73t-73 -30q-42 0 -72 30t-30 73l-1 227h-74q-46 0 -78 32t-32 78v666h918zM931 1255q107 -55 171 -153.5t64 -215.5
h-925q0 117 64 215.5t172 153.5l-71 131q-7 13 5 20q13 6 20 -6l72 -132q95 42 201 42t201 -42l72 132q7 12 20 6q12 -7 5 -20zM1408 767v-430q0 -43 -30 -73t-73 -30q-42 0 -72 30t-30 73v430q0 43 30 72.5t72 29.5q43 0 73 -29.5t30 -72.5z" />
    <glyph glyph-name="linux" unicode="&#xf17c;" 
d="M663 1125q-11 -1 -15.5 -10.5t-8.5 -9.5q-5 -1 -5 5q0 12 19 15h10zM750 1111q-4 -1 -11.5 6.5t-17.5 4.5q24 11 32 -2q3 -6 -3 -9zM399 684q-4 1 -6 -3t-4.5 -12.5t-5.5 -13.5t-10 -13q-10 -11 -1 -12q4 -1 12.5 7t12.5 18q1 3 2 7t2 6t1.5 4.5t0.5 4v3t-1 2.5t-3 2z
M1254 325q0 18 -55 42q4 15 7.5 27.5t5 26t3 21.5t0.5 22.5t-1 19.5t-3.5 22t-4 20.5t-5 25t-5.5 26.5q-10 48 -47 103t-72 75q24 -20 57 -83q87 -162 54 -278q-11 -40 -50 -42q-31 -4 -38.5 18.5t-8 83.5t-11.5 107q-9 39 -19.5 69t-19.5 45.5t-15.5 24.5t-13 15t-7.5 7
q-14 62 -31 103t-29.5 56t-23.5 33t-15 40q-4 21 6 53.5t4.5 49.5t-44.5 25q-15 3 -44.5 18t-35.5 16q-8 1 -11 26t8 51t36 27q37 3 51 -30t4 -58q-11 -19 -2 -26.5t30 -0.5q13 4 13 36v37q-5 30 -13.5 50t-21 30.5t-23.5 15t-27 7.5q-107 -8 -89 -134q0 -15 -1 -15
q-9 9 -29.5 10.5t-33 -0.5t-15.5 5q1 57 -16 90t-45 34q-27 1 -41.5 -27.5t-16.5 -59.5q-1 -15 3.5 -37t13 -37.5t15.5 -13.5q10 3 16 14q4 9 -7 8q-7 0 -15.5 14.5t-9.5 33.5q-1 22 9 37t34 14q17 0 27 -21t9.5 -39t-1.5 -22q-22 -15 -31 -29q-8 -12 -27.5 -23.5
t-20.5 -12.5q-13 -14 -15.5 -27t7.5 -18q14 -8 25 -19.5t16 -19t18.5 -13t35.5 -6.5q47 -2 102 15q2 1 23 7t34.5 10.5t29.5 13t21 17.5q9 14 20 8q5 -3 6.5 -8.5t-3 -12t-16.5 -9.5q-20 -6 -56.5 -21.5t-45.5 -19.5q-44 -19 -70 -23q-25 -5 -79 2q-10 2 -9 -2t17 -19
q25 -23 67 -22q17 1 36 7t36 14t33.5 17.5t30 17t24.5 12t17.5 2.5t8.5 -11q0 -2 -1 -4.5t-4 -5t-6 -4.5t-8.5 -5t-9 -4.5t-10 -5t-9.5 -4.5q-28 -14 -67.5 -44t-66.5 -43t-49 -1q-21 11 -63 73q-22 31 -25 22q-1 -3 -1 -10q0 -25 -15 -56.5t-29.5 -55.5t-21 -58t11.5 -63
q-23 -6 -62.5 -90t-47.5 -141q-2 -18 -1.5 -69t-5.5 -59q-8 -24 -29 -3q-32 31 -36 94q-2 28 4 56q4 19 -1 18q-2 -1 -4 -5q-36 -65 10 -166q5 -12 25 -28t24 -20q20 -23 104 -90.5t93 -76.5q16 -15 17.5 -38t-14 -43t-45.5 -23q8 -15 29 -44.5t28 -54t7 -70.5q46 24 7 92
q-4 8 -10.5 16t-9.5 12t-2 6q3 5 13 9.5t20 -2.5q46 -52 166 -36q133 15 177 87q23 38 34 30q12 -6 10 -52q-1 -25 -23 -92q-9 -23 -6 -37.5t24 -15.5q3 19 14.5 77t13.5 90q2 21 -6.5 73.5t-7.5 97t23 70.5q15 18 51 18q1 37 34.5 53t72.5 10.5t60 -22.5zM626 1152
q3 17 -2.5 30t-11.5 15q-9 2 -9 -7q2 -5 5 -6q10 0 7 -15q-3 -20 8 -20q3 0 3 3zM1045 955q-2 8 -6.5 11.5t-13 5t-14.5 5.5q-5 3 -9.5 8t-7 8t-5.5 6.5t-4 4t-4 -1.5q-14 -16 7 -43.5t39 -31.5q9 -1 14.5 8t3.5 20zM867 1168q0 11 -5 19.5t-11 12.5t-9 3q-6 0 -8 -2t0 -4
t5 -3q14 -4 18 -31q0 -3 8 2q2 2 2 3zM921 1401q0 2 -2.5 5t-9 7t-9.5 6q-15 15 -24 15q-9 -1 -11.5 -7.5t-1 -13t-0.5 -12.5q-1 -4 -6 -10.5t-6 -9t3 -8.5q4 -3 8 0t11 9t15 9q1 1 9 1t15 2t9 7zM1486 60q20 -12 31 -24.5t12 -24t-2.5 -22.5t-15.5 -22t-23.5 -19.5
t-30 -18.5t-31.5 -16.5t-32 -15.5t-27 -13q-38 -19 -85.5 -56t-75.5 -64q-17 -16 -68 -19.5t-89 14.5q-18 9 -29.5 23.5t-16.5 25.5t-22 19.5t-47 9.5q-44 1 -130 1q-19 0 -57 -1.5t-58 -2.5q-44 -1 -79.5 -15t-53.5 -30t-43.5 -28.5t-53.5 -11.5q-29 1 -111 31t-146 43
q-19 4 -51 9.5t-50 9t-39.5 9.5t-33.5 14.5t-17 19.5q-10 23 7 66.5t18 54.5q1 16 -4 40t-10 42.5t-4.5 36.5t10.5 27q14 12 57 14t60 12q30 18 42 35t12 51q21 -73 -32 -106q-32 -20 -83 -15q-34 3 -43 -10q-13 -15 5 -57q2 -6 8 -18t8.5 -18t4.5 -17t1 -22q0 -15 -17 -49
t-14 -48q3 -17 37 -26q20 -6 84.5 -18.5t99.5 -20.5q24 -6 74 -22t82.5 -23t55.5 -4q43 6 64.5 28t23 48t-7.5 58.5t-19 52t-20 36.5q-121 190 -169 242q-68 74 -113 40q-11 -9 -15 15q-3 16 -2 38q1 29 10 52t24 47t22 42q8 21 26.5 72t29.5 78t30 61t39 54
q110 143 124 195q-12 112 -16 310q-2 90 24 151.5t106 104.5q39 21 104 21q53 1 106 -13.5t89 -41.5q57 -42 91.5 -121.5t29.5 -147.5q-5 -95 30 -214q34 -113 133 -218q55 -59 99.5 -163t59.5 -191q8 -49 5 -84.5t-12 -55.5t-20 -22q-10 -2 -23.5 -19t-27 -35.5
t-40.5 -33.5t-61 -14q-18 1 -31.5 5t-22.5 13.5t-13.5 15.5t-11.5 20.5t-9 19.5q-22 37 -41 30t-28 -49t7 -97q20 -70 1 -195q-10 -65 18 -100.5t73 -33t85 35.5q59 49 89.5 66.5t103.5 42.5q53 18 77 36.5t18.5 34.5t-25 28.5t-51.5 23.5q-33 11 -49.5 48t-15 72.5
t15.5 47.5q1 -31 8 -56.5t14.5 -40.5t20.5 -28.5t21 -19t21.5 -13t16.5 -9.5z" />
    <glyph glyph-name="dribble" unicode="&#xf17d;" 
d="M1024 36q-42 241 -140 498h-2l-2 -1q-16 -6 -43 -16.5t-101 -49t-137 -82t-131 -114.5t-103 -148l-15 11q184 -150 418 -150q132 0 256 52zM839 643q-21 49 -53 111q-311 -93 -673 -93q-1 -7 -1 -21q0 -124 44 -236.5t124 -201.5q50 89 123.5 166.5t142.5 124.5t130.5 81
t99.5 48l37 13q4 1 13 3.5t13 4.5zM732 855q-120 213 -244 378q-138 -65 -234 -186t-128 -272q302 0 606 80zM1416 536q-210 60 -409 29q87 -239 128 -469q111 75 185 189.5t96 250.5zM611 1277q-1 0 -2 -1q1 1 2 1zM1201 1132q-185 164 -433 164q-76 0 -155 -19
q131 -170 246 -382q69 26 130 60.5t96.5 61.5t65.5 57t37.5 40.5zM1424 647q-3 232 -149 410l-1 -1q-9 -12 -19 -24.5t-43.5 -44.5t-71 -60.5t-100 -65t-131.5 -64.5q25 -53 44 -95q2 -5 6.5 -17t7.5 -17q36 5 74.5 7t73.5 2t69 -1.5t64 -4t56.5 -5.5t48 -6.5t36.5 -6
t25 -4.5zM1536 640q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="skype" unicode="&#xf17e;" 
d="M1173 473q0 50 -19.5 91.5t-48.5 68.5t-73 49t-82.5 34t-87.5 23l-104 24q-30 7 -44 10.5t-35 11.5t-30 16t-16.5 21t-7.5 30q0 77 144 77q43 0 77 -12t54 -28.5t38 -33.5t40 -29t48 -12q47 0 75.5 32t28.5 77q0 55 -56 99.5t-142 67.5t-182 23q-68 0 -132 -15.5
t-119.5 -47t-89 -87t-33.5 -128.5q0 -61 19 -106.5t56 -75.5t80 -48.5t103 -32.5l146 -36q90 -22 112 -36q32 -20 32 -60q0 -39 -40 -64.5t-105 -25.5q-51 0 -91.5 16t-65 38.5t-45.5 45t-46 38.5t-54 16q-50 0 -75.5 -30t-25.5 -75q0 -92 122 -157.5t291 -65.5
q73 0 140 18.5t122.5 53.5t88.5 93.5t33 131.5zM1536 256q0 -159 -112.5 -271.5t-271.5 -112.5q-130 0 -234 80q-77 -16 -150 -16q-143 0 -273.5 55.5t-225 150t-150 225t-55.5 273.5q0 73 16 150q-80 104 -80 234q0 159 112.5 271.5t271.5 112.5q130 0 234 -80
q77 16 150 16q143 0 273.5 -55.5t225 -150t150 -225t55.5 -273.5q0 -73 -16 -150q80 -104 80 -234z" />
    <glyph glyph-name="foursquare" unicode="&#xf180;" horiz-adv-x="1280" 
d="M1000 1102l37 194q5 23 -9 40t-35 17h-712q-23 0 -38.5 -17t-15.5 -37v-1101q0 -7 6 -1l291 352q23 26 38 33.5t48 7.5h239q22 0 37 14.5t18 29.5q24 130 37 191q4 21 -11.5 40t-36.5 19h-294q-29 0 -48 19t-19 48v42q0 29 19 47.5t48 18.5h346q18 0 35 13.5t20 29.5z
M1227 1324q-15 -73 -53.5 -266.5t-69.5 -350t-35 -173.5q-6 -22 -9 -32.5t-14 -32.5t-24.5 -33t-38.5 -21t-58 -10h-271q-13 0 -22 -10q-8 -9 -426 -494q-22 -25 -58.5 -28.5t-48.5 5.5q-55 22 -55 98v1410q0 55 38 102.5t120 47.5h888q95 0 127 -53t10 -159zM1227 1324
l-158 -790q4 17 35 173.5t69.5 350t53.5 266.5z" />
    <glyph glyph-name="trello" unicode="&#xf181;" 
d="M704 192v1024q0 14 -9 23t-23 9h-480q-14 0 -23 -9t-9 -23v-1024q0 -14 9 -23t23 -9h480q14 0 23 9t9 23zM1376 576v640q0 14 -9 23t-23 9h-480q-14 0 -23 -9t-9 -23v-640q0 -14 9 -23t23 -9h480q14 0 23 9t9 23zM1536 1344v-1408q0 -26 -19 -45t-45 -19h-1408
q-26 0 -45 19t-19 45v1408q0 26 19 45t45 19h1408q26 0 45 -19t19 -45z" />
    <glyph glyph-name="female" unicode="&#xf182;" horiz-adv-x="1280" 
d="M1280 480q0 -40 -28 -68t-68 -28q-51 0 -80 43l-227 341h-45v-132l247 -411q9 -15 9 -33q0 -26 -19 -45t-45 -19h-192v-272q0 -46 -33 -79t-79 -33h-160q-46 0 -79 33t-33 79v272h-192q-26 0 -45 19t-19 45q0 18 9 33l247 411v132h-45l-227 -341q-29 -43 -80 -43
q-40 0 -68 28t-28 68q0 29 16 53l256 384q73 107 176 107h384q103 0 176 -107l256 -384q16 -24 16 -53zM864 1280q0 -93 -65.5 -158.5t-158.5 -65.5t-158.5 65.5t-65.5 158.5t65.5 158.5t158.5 65.5t158.5 -65.5t65.5 -158.5z" />
    <glyph glyph-name="male" unicode="&#xf183;" horiz-adv-x="1024" 
d="M1024 832v-416q0 -40 -28 -68t-68 -28t-68 28t-28 68v352h-64v-912q0 -46 -33 -79t-79 -33t-79 33t-33 79v464h-64v-464q0 -46 -33 -79t-79 -33t-79 33t-33 79v912h-64v-352q0 -40 -28 -68t-68 -28t-68 28t-28 68v416q0 80 56 136t136 56h640q80 0 136 -56t56 -136z
M736 1280q0 -93 -65.5 -158.5t-158.5 -65.5t-158.5 65.5t-65.5 158.5t65.5 158.5t158.5 65.5t158.5 -65.5t65.5 -158.5z" />
    <glyph glyph-name="gittip" unicode="&#xf184;" 
d="M773 234l350 473q16 22 24.5 59t-6 85t-61.5 79q-40 26 -83 25.5t-73.5 -17.5t-54.5 -45q-36 -40 -96 -40q-59 0 -95 40q-24 28 -54.5 45t-73.5 17.5t-84 -25.5q-46 -31 -60.5 -79t-6 -85t24.5 -59zM1536 640q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103
t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="sun" unicode="&#xf185;" horiz-adv-x="1792" 
d="M1472 640q0 117 -45.5 223.5t-123 184t-184 123t-223.5 45.5t-223.5 -45.5t-184 -123t-123 -184t-45.5 -223.5t45.5 -223.5t123 -184t184 -123t223.5 -45.5t223.5 45.5t184 123t123 184t45.5 223.5zM1748 363q-4 -15 -20 -20l-292 -96v-306q0 -16 -13 -26q-15 -10 -29 -4
l-292 94l-180 -248q-10 -13 -26 -13t-26 13l-180 248l-292 -94q-14 -6 -29 4q-13 10 -13 26v306l-292 96q-16 5 -20 20q-5 17 4 29l180 248l-180 248q-9 13 -4 29q4 15 20 20l292 96v306q0 16 13 26q15 10 29 4l292 -94l180 248q9 12 26 12t26 -12l180 -248l292 94
q14 6 29 -4q13 -10 13 -26v-306l292 -96q16 -5 20 -20q5 -16 -4 -29l-180 -248l180 -248q9 -12 4 -29z" />
    <glyph glyph-name="_366" unicode="&#xf186;" 
d="M1262 233q-54 -9 -110 -9q-182 0 -337 90t-245 245t-90 337q0 192 104 357q-201 -60 -328.5 -229t-127.5 -384q0 -130 51 -248.5t136.5 -204t204 -136.5t248.5 -51q144 0 273.5 61.5t220.5 171.5zM1465 318q-94 -203 -283.5 -324.5t-413.5 -121.5q-156 0 -298 61
t-245 164t-164 245t-61 298q0 153 57.5 292.5t156 241.5t235.5 164.5t290 68.5q44 2 61 -39q18 -41 -15 -72q-86 -78 -131.5 -181.5t-45.5 -218.5q0 -148 73 -273t198 -198t273 -73q118 0 228 51q41 18 72 -13q14 -14 17.5 -34t-4.5 -38z" />
    <glyph glyph-name="archive" unicode="&#xf187;" horiz-adv-x="1792" 
d="M1088 704q0 26 -19 45t-45 19h-256q-26 0 -45 -19t-19 -45t19 -45t45 -19h256q26 0 45 19t19 45zM1664 896v-960q0 -26 -19 -45t-45 -19h-1408q-26 0 -45 19t-19 45v960q0 26 19 45t45 19h1408q26 0 45 -19t19 -45zM1728 1344v-256q0 -26 -19 -45t-45 -19h-1536
q-26 0 -45 19t-19 45v256q0 26 19 45t45 19h1536q26 0 45 -19t19 -45z" />
    <glyph glyph-name="bug" unicode="&#xf188;" horiz-adv-x="1664" 
d="M1632 576q0 -26 -19 -45t-45 -19h-224q0 -171 -67 -290l208 -209q19 -19 19 -45t-19 -45q-18 -19 -45 -19t-45 19l-198 197q-5 -5 -15 -13t-42 -28.5t-65 -36.5t-82 -29t-97 -13v896h-128v-896q-51 0 -101.5 13.5t-87 33t-66 39t-43.5 32.5l-15 14l-183 -207
q-20 -21 -48 -21q-24 0 -43 16q-19 18 -20.5 44.5t15.5 46.5l202 227q-58 114 -58 274h-224q-26 0 -45 19t-19 45t19 45t45 19h224v294l-173 173q-19 19 -19 45t19 45t45 19t45 -19l173 -173h844l173 173q19 19 45 19t45 -19t19 -45t-19 -45l-173 -173v-294h224q26 0 45 -19
t19 -45zM1152 1152h-640q0 133 93.5 226.5t226.5 93.5t226.5 -93.5t93.5 -226.5z" />
    <glyph glyph-name="vk" unicode="&#xf189;" horiz-adv-x="1920" 
d="M1917 1016q23 -64 -150 -294q-24 -32 -65 -85q-40 -51 -55 -72t-30.5 -49.5t-12 -42t13 -34.5t32.5 -43t57 -53q4 -2 5 -4q141 -131 191 -221q3 -5 6.5 -12.5t7 -26.5t-0.5 -34t-25 -27.5t-59 -12.5l-256 -4q-24 -5 -56 5t-52 22l-20 12q-30 21 -70 64t-68.5 77.5t-61 58
t-56.5 15.5q-3 -1 -8 -3.5t-17 -14.5t-21.5 -29.5t-17 -52t-6.5 -77.5q0 -15 -3.5 -27.5t-7.5 -18.5l-4 -5q-18 -19 -53 -22h-115q-71 -4 -146 16.5t-131.5 53t-103 66t-70.5 57.5l-25 24q-10 10 -27.5 30t-71.5 91t-106 151t-122.5 211t-130.5 272q-6 16 -6 27t3 16l4 6
q15 19 57 19l274 2q12 -2 23 -6.5t16 -8.5l5 -3q16 -11 24 -32q20 -50 46 -103.5t41 -81.5l16 -29q29 -60 56 -104t48.5 -68.5t41.5 -38.5t34 -14t27 5q2 1 5 5t12 22t13.5 47t9.5 81t0 125q-2 40 -9 73t-14 46l-6 12q-25 34 -85 43q-13 2 5 24q16 19 38 30q53 26 239 24
q82 -1 135 -13q20 -5 33.5 -13.5t20.5 -24t10.5 -32t3.5 -45.5t-1 -55t-2.5 -70.5t-1.5 -82.5q0 -11 -1 -42t-0.5 -48t3.5 -40.5t11.5 -39t22.5 -24.5q8 -2 17 -4t26 11t38 34.5t52 67t68 107.5q60 104 107 225q4 10 10 17.5t11 10.5l4 3l5 2.5t13 3t20 0.5l288 2
q39 5 64 -2.5t31 -16.5z" />
    <glyph glyph-name="weibo" unicode="&#xf18a;" horiz-adv-x="1792" 
d="M675 252q21 34 11 69t-45 50q-34 14 -73 1t-60 -46q-22 -34 -13 -68.5t43 -50.5t74.5 -2.5t62.5 47.5zM769 373q8 13 3.5 26.5t-17.5 18.5q-14 5 -28.5 -0.5t-21.5 -18.5q-17 -31 13 -45q14 -5 29 0.5t22 18.5zM943 266q-45 -102 -158 -150t-224 -12
q-107 34 -147.5 126.5t6.5 187.5q47 93 151.5 139t210.5 19q111 -29 158.5 -119.5t2.5 -190.5zM1255 426q-9 96 -89 170t-208.5 109t-274.5 21q-223 -23 -369.5 -141.5t-132.5 -264.5q9 -96 89 -170t208.5 -109t274.5 -21q223 23 369.5 141.5t132.5 264.5zM1563 422
q0 -68 -37 -139.5t-109 -137t-168.5 -117.5t-226 -83t-270.5 -31t-275 33.5t-240.5 93t-171.5 151t-65 199.5q0 115 69.5 245t197.5 258q169 169 341.5 236t246.5 -7q65 -64 20 -209q-4 -14 -1 -20t10 -7t14.5 0.5t13.5 3.5l6 2q139 59 246 59t153 -61q45 -63 0 -178
q-2 -13 -4.5 -20t4.5 -12.5t12 -7.5t17 -6q57 -18 103 -47t80 -81.5t34 -116.5zM1489 1046q42 -47 54.5 -108.5t-6.5 -117.5q-8 -23 -29.5 -34t-44.5 -4q-23 8 -34 29.5t-4 44.5q20 63 -24 111t-107 35q-24 -5 -45 8t-25 37q-5 24 8 44.5t37 25.5q60 13 119 -5.5t101 -65.5z
M1670 1209q87 -96 112.5 -222.5t-13.5 -241.5q-9 -27 -34 -40t-52 -4t-40 34t-5 52q28 82 10 172t-80 158q-62 69 -148 95.5t-173 8.5q-28 -6 -52 9.5t-30 43.5t9.5 51.5t43.5 29.5q123 26 244 -11.5t208 -134.5z" />
    <glyph glyph-name="renren" unicode="&#xf18b;" 
d="M1133 -34q-171 -94 -368 -94q-196 0 -367 94q138 87 235.5 211t131.5 268q35 -144 132.5 -268t235.5 -211zM638 1394v-485q0 -252 -126.5 -459.5t-330.5 -306.5q-181 215 -181 495q0 187 83.5 349.5t229.5 269.5t325 137zM1536 638q0 -280 -181 -495
q-204 99 -330.5 306.5t-126.5 459.5v485q179 -30 325 -137t229.5 -269.5t83.5 -349.5z" />
    <glyph glyph-name="_372" unicode="&#xf18c;" horiz-adv-x="1408" 
d="M1402 433q-32 -80 -76 -138t-91 -88.5t-99 -46.5t-101.5 -14.5t-96.5 8.5t-86.5 22t-69.5 27.5t-46 22.5l-17 10q-113 -228 -289.5 -359.5t-384.5 -132.5q-19 0 -32 13t-13 32t13 31.5t32 12.5q173 1 322.5 107.5t251.5 294.5q-36 -14 -72 -23t-83 -13t-91 2.5t-93 28.5
t-92 59t-84.5 100t-74.5 146q114 47 214 57t167.5 -7.5t124.5 -56.5t88.5 -77t56.5 -82q53 131 79 291q-7 -1 -18 -2.5t-46.5 -2.5t-69.5 0.5t-81.5 10t-88.5 23t-84 42.5t-75 65t-54.5 94.5t-28.5 127.5q70 28 133.5 36.5t112.5 -1t92 -30t73.5 -50t56 -61t42 -63t27.5 -56
t16 -39.5l4 -16q12 122 12 195q-8 6 -21.5 16t-49 44.5t-63.5 71.5t-54 93t-33 112.5t12 127t70 138.5q73 -25 127.5 -61.5t84.5 -76.5t48 -85t20.5 -89t-0.5 -85.5t-13 -76.5t-19 -62t-17 -42l-7 -15q1 -4 1 -50t-1 -72q3 7 10 18.5t30.5 43t50.5 58t71 55.5t91.5 44.5
t112 14.5t132.5 -24q-2 -78 -21.5 -141.5t-50 -104.5t-69.5 -71.5t-81.5 -45.5t-84.5 -24t-80 -9.5t-67.5 1t-46.5 4.5l-17 3q-23 -147 -73 -283q6 7 18 18.5t49.5 41t77.5 52.5t99.5 42t117.5 20t129 -23.5t137 -77.5z" />
    <glyph glyph-name="stack_exchange" unicode="&#xf18d;" horiz-adv-x="1280" 
d="M1259 283v-66q0 -85 -57.5 -144.5t-138.5 -59.5h-57l-260 -269v269h-529q-81 0 -138.5 59.5t-57.5 144.5v66h1238zM1259 609v-255h-1238v255h1238zM1259 937v-255h-1238v255h1238zM1259 1077v-67h-1238v67q0 84 57.5 143.5t138.5 59.5h846q81 0 138.5 -59.5t57.5 -143.5z
" />
    <glyph glyph-name="_374" unicode="&#xf18e;" 
d="M1152 640q0 -14 -9 -23l-320 -320q-9 -9 -23 -9q-13 0 -22.5 9.5t-9.5 22.5v192h-352q-13 0 -22.5 9.5t-9.5 22.5v192q0 13 9.5 22.5t22.5 9.5h352v192q0 14 9 23t23 9q12 0 24 -10l319 -319q9 -9 9 -23zM1312 640q0 148 -73 273t-198 198t-273 73t-273 -73t-198 -198
t-73 -273t73 -273t198 -198t273 -73t273 73t198 198t73 273zM1536 640q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="arrow_circle_alt_left" unicode="&#xf190;" 
d="M1152 736v-192q0 -13 -9.5 -22.5t-22.5 -9.5h-352v-192q0 -14 -9 -23t-23 -9q-12 0 -24 10l-319 319q-9 9 -9 23t9 23l320 320q9 9 23 9q13 0 22.5 -9.5t9.5 -22.5v-192h352q13 0 22.5 -9.5t9.5 -22.5zM1312 640q0 148 -73 273t-198 198t-273 73t-273 -73t-198 -198
t-73 -273t73 -273t198 -198t273 -73t273 73t198 198t73 273zM1536 640q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="_376" unicode="&#xf191;" 
d="M1024 960v-640q0 -26 -19 -45t-45 -19q-20 0 -37 12l-448 320q-27 19 -27 52t27 52l448 320q17 12 37 12q26 0 45 -19t19 -45zM1280 160v960q0 13 -9.5 22.5t-22.5 9.5h-960q-13 0 -22.5 -9.5t-9.5 -22.5v-960q0 -13 9.5 -22.5t22.5 -9.5h960q13 0 22.5 9.5t9.5 22.5z
M1536 1120v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z" />
    <glyph glyph-name="dot_circle_alt" unicode="&#xf192;" 
d="M1024 640q0 -106 -75 -181t-181 -75t-181 75t-75 181t75 181t181 75t181 -75t75 -181zM768 1184q-148 0 -273 -73t-198 -198t-73 -273t73 -273t198 -198t273 -73t273 73t198 198t73 273t-73 273t-198 198t-273 73zM1536 640q0 -209 -103 -385.5t-279.5 -279.5
t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="_378" unicode="&#xf193;" horiz-adv-x="1664" 
d="M1023 349l102 -204q-58 -179 -210 -290t-339 -111q-156 0 -288.5 77.5t-210 210t-77.5 288.5q0 181 104.5 330t274.5 211l17 -131q-122 -54 -195 -165.5t-73 -244.5q0 -185 131.5 -316.5t316.5 -131.5q126 0 232.5 65t165 175.5t49.5 236.5zM1571 249l58 -114l-256 -128
q-13 -7 -29 -7q-40 0 -57 35l-239 477h-472q-24 0 -42.5 16.5t-21.5 40.5l-96 779q-2 17 6 42q14 51 57 82.5t97 31.5q66 0 113 -47t47 -113q0 -69 -52 -117.5t-120 -41.5l37 -289h423v-128h-407l16 -128h455q40 0 57 -35l228 -455z" />
    <glyph glyph-name="vimeo_square" unicode="&#xf194;" 
d="M1292 898q10 216 -161 222q-231 8 -312 -261q44 19 82 19q85 0 74 -96q-4 -57 -74 -167t-105 -110q-43 0 -82 169q-13 54 -45 255q-30 189 -160 177q-59 -7 -164 -100l-81 -72l-81 -72l52 -67q76 52 87 52q57 0 107 -179q15 -55 45 -164.5t45 -164.5q68 -179 164 -179
q157 0 383 294q220 283 226 444zM1536 1120v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z" />
    <glyph glyph-name="_380" unicode="&#xf195;" horiz-adv-x="1152" 
d="M1152 704q0 -191 -94.5 -353t-256.5 -256.5t-353 -94.5h-160q-14 0 -23 9t-9 23v611l-215 -66q-3 -1 -9 -1q-10 0 -19 6q-13 10 -13 26v128q0 23 23 31l233 71v93l-215 -66q-3 -1 -9 -1q-10 0 -19 6q-13 10 -13 26v128q0 23 23 31l233 71v250q0 14 9 23t23 9h160
q14 0 23 -9t9 -23v-181l375 116q15 5 28 -5t13 -26v-128q0 -23 -23 -31l-393 -121v-93l375 116q15 5 28 -5t13 -26v-128q0 -23 -23 -31l-393 -121v-487q188 13 318 151t130 328q0 14 9 23t23 9h160q14 0 23 -9t9 -23z" />
    <glyph glyph-name="plus_square_o" unicode="&#xf196;" horiz-adv-x="1408" 
d="M1152 736v-64q0 -14 -9 -23t-23 -9h-352v-352q0 -14 -9 -23t-23 -9h-64q-14 0 -23 9t-9 23v352h-352q-14 0 -23 9t-9 23v64q0 14 9 23t23 9h352v352q0 14 9 23t23 9h64q14 0 23 -9t9 -23v-352h352q14 0 23 -9t9 -23zM1280 288v832q0 66 -47 113t-113 47h-832
q-66 0 -113 -47t-47 -113v-832q0 -66 47 -113t113 -47h832q66 0 113 47t47 113zM1408 1120v-832q0 -119 -84.5 -203.5t-203.5 -84.5h-832q-119 0 -203.5 84.5t-84.5 203.5v832q0 119 84.5 203.5t203.5 84.5h832q119 0 203.5 -84.5t84.5 -203.5z" />
    <glyph glyph-name="_382" unicode="&#xf197;" horiz-adv-x="2176" 
d="M620 416q-110 -64 -268 -64h-128v64h-64q-13 0 -22.5 23.5t-9.5 56.5q0 24 7 49q-58 2 -96.5 10.5t-38.5 20.5t38.5 20.5t96.5 10.5q-7 25 -7 49q0 33 9.5 56.5t22.5 23.5h64v64h128q158 0 268 -64h1113q42 -7 106.5 -18t80.5 -14q89 -15 150 -40.5t83.5 -47.5t22.5 -40
t-22.5 -40t-83.5 -47.5t-150 -40.5q-16 -3 -80.5 -14t-106.5 -18h-1113zM1739 668q53 -36 53 -92t-53 -92l81 -30q68 48 68 122t-68 122zM625 400h1015q-217 -38 -456 -80q-57 0 -113 -24t-83 -48l-28 -24l-288 -288q-26 -26 -70.5 -45t-89.5 -19h-96l-93 464h29
q157 0 273 64zM352 816h-29l93 464h96q46 0 90 -19t70 -45l288 -288q4 -4 11 -10.5t30.5 -23t48.5 -29t61.5 -23t72.5 -10.5l456 -80h-1015q-116 64 -273 64z" />
    <glyph glyph-name="_383" unicode="&#xf198;" horiz-adv-x="1664" 
d="M1519 760q62 0 103.5 -40.5t41.5 -101.5q0 -97 -93 -130l-172 -59l56 -167q7 -21 7 -47q0 -59 -42 -102t-101 -43q-47 0 -85.5 27t-53.5 72l-55 165l-310 -106l55 -164q8 -24 8 -47q0 -59 -42 -102t-102 -43q-47 0 -85 27t-53 72l-55 163l-153 -53q-29 -9 -50 -9
q-61 0 -101.5 40t-40.5 101q0 47 27.5 85t71.5 53l156 53l-105 313l-156 -54q-26 -8 -48 -8q-60 0 -101 40.5t-41 100.5q0 47 27.5 85t71.5 53l157 53l-53 159q-8 24 -8 47q0 60 42 102.5t102 42.5q47 0 85 -27t53 -72l54 -160l310 105l-54 160q-8 24 -8 47q0 59 42.5 102
t101.5 43q47 0 85.5 -27.5t53.5 -71.5l53 -161l162 55q21 6 43 6q60 0 102.5 -39.5t42.5 -98.5q0 -45 -30 -81.5t-74 -51.5l-157 -54l105 -316l164 56q24 8 46 8zM725 498l310 105l-105 315l-310 -107z" />
    <glyph glyph-name="_384" unicode="&#xf199;" 
d="M1248 1408q119 0 203.5 -84.5t84.5 -203.5v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960zM1280 352v436q-31 -35 -64 -55q-34 -22 -132.5 -85t-151.5 -99q-98 -69 -164 -69v0v0q-66 0 -164 69
q-47 32 -142 92.5t-142 92.5q-12 8 -33 27t-31 27v-436q0 -40 28 -68t68 -28h832q40 0 68 28t28 68zM1280 925q0 41 -27.5 70t-68.5 29h-832q-40 0 -68 -28t-28 -68q0 -37 30.5 -76.5t67.5 -64.5q47 -32 137.5 -89t129.5 -83q3 -2 17 -11.5t21 -14t21 -13t23.5 -13
t21.5 -9.5t22.5 -7.5t20.5 -2.5t20.5 2.5t22.5 7.5t21.5 9.5t23.5 13t21 13t21 14t17 11.5l267 174q35 23 66.5 62.5t31.5 73.5z" />
    <glyph glyph-name="_385" unicode="&#xf19a;" horiz-adv-x="1792" 
d="M127 640q0 163 67 313l367 -1005q-196 95 -315 281t-119 411zM1415 679q0 -19 -2.5 -38.5t-10 -49.5t-11.5 -44t-17.5 -59t-17.5 -58l-76 -256l-278 826q46 3 88 8q19 2 26 18.5t-2.5 31t-28.5 13.5l-205 -10q-75 1 -202 10q-12 1 -20.5 -5t-11.5 -15t-1.5 -18.5t9 -16.5
t19.5 -8l80 -8l120 -328l-168 -504l-280 832q46 3 88 8q19 2 26 18.5t-2.5 31t-28.5 13.5l-205 -10q-7 0 -23 0.5t-26 0.5q105 160 274.5 253.5t367.5 93.5q147 0 280.5 -53t238.5 -149h-10q-55 0 -92 -40.5t-37 -95.5q0 -12 2 -24t4 -21.5t8 -23t9 -21t12 -22.5t12.5 -21
t14.5 -24t14 -23q63 -107 63 -212zM909 573l237 -647q1 -6 5 -11q-126 -44 -255 -44q-112 0 -217 32zM1570 1009q95 -174 95 -369q0 -209 -104 -385.5t-279 -278.5l235 678q59 169 59 276q0 42 -6 79zM896 1536q182 0 348 -71t286 -191t191 -286t71 -348t-71 -348t-191 -286
t-286 -191t-348 -71t-348 71t-286 191t-191 286t-71 348t71 348t191 286t286 191t348 71zM896 -215q173 0 331.5 68t273 182.5t182.5 273t68 331.5t-68 331.5t-182.5 273t-273 182.5t-331.5 68t-331.5 -68t-273 -182.5t-182.5 -273t-68 -331.5t68 -331.5t182.5 -273
t273 -182.5t331.5 -68z" />
    <glyph glyph-name="_386" unicode="&#xf19b;" horiz-adv-x="1792" 
d="M1086 1536v-1536l-272 -128q-228 20 -414 102t-293 208.5t-107 272.5q0 140 100.5 263.5t275 205.5t391.5 108v-172q-217 -38 -356.5 -150t-139.5 -255q0 -152 154.5 -267t388.5 -145v1360zM1755 954l37 -390l-525 114l147 83q-119 70 -280 99v172q277 -33 481 -157z" />
    <glyph glyph-name="_387" unicode="&#xf19c;" horiz-adv-x="2048" 
d="M960 1536l960 -384v-128h-128q0 -26 -20.5 -45t-48.5 -19h-1526q-28 0 -48.5 19t-20.5 45h-128v128zM256 896h256v-768h128v768h256v-768h128v768h256v-768h128v768h256v-768h59q28 0 48.5 -19t20.5 -45v-64h-1664v64q0 26 20.5 45t48.5 19h59v768zM1851 -64
q28 0 48.5 -19t20.5 -45v-128h-1920v128q0 26 20.5 45t48.5 19h1782z" />
    <glyph glyph-name="_388" unicode="&#xf19d;" horiz-adv-x="2304" 
d="M1774 700l18 -316q4 -69 -82 -128t-235 -93.5t-323 -34.5t-323 34.5t-235 93.5t-82 128l18 316l574 -181q22 -7 48 -7t48 7zM2304 1024q0 -23 -22 -31l-1120 -352q-4 -1 -10 -1t-10 1l-652 206q-43 -34 -71 -111.5t-34 -178.5q63 -36 63 -109q0 -69 -58 -107l58 -433
q2 -14 -8 -25q-9 -11 -24 -11h-192q-15 0 -24 11q-10 11 -8 25l58 433q-58 38 -58 107q0 73 65 111q11 207 98 330l-333 104q-22 8 -22 31t22 31l1120 352q4 1 10 1t10 -1l1120 -352q22 -8 22 -31z" />
    <glyph glyph-name="_389" unicode="&#xf19e;" 
d="M859 579l13 -707q-62 11 -105 11q-41 0 -105 -11l13 707q-40 69 -168.5 295.5t-216.5 374.5t-181 287q58 -15 108 -15q44 0 111 15q63 -111 133.5 -229.5t167 -276.5t138.5 -227q37 61 109.5 177.5t117.5 190t105 176t107 189.5q54 -14 107 -14q56 0 114 14v0
q-28 -39 -60 -88.5t-49.5 -78.5t-56.5 -96t-49 -84q-146 -248 -353 -610z" />
    <glyph glyph-name="uniF1A0" unicode="&#xf1a0;" 
d="M768 750h725q12 -67 12 -128q0 -217 -91 -387.5t-259.5 -266.5t-386.5 -96q-157 0 -299 60.5t-245 163.5t-163.5 245t-60.5 299t60.5 299t163.5 245t245 163.5t299 60.5q300 0 515 -201l-209 -201q-123 119 -306 119q-129 0 -238.5 -65t-173.5 -176.5t-64 -243.5
t64 -243.5t173.5 -176.5t238.5 -65q87 0 160 24t120 60t82 82t51.5 87t22.5 78h-436v264z" />
    <glyph glyph-name="f1a1" unicode="&#xf1a1;" horiz-adv-x="1792" 
d="M1095 369q16 -16 0 -31q-62 -62 -199 -62t-199 62q-16 15 0 31q6 6 15 6t15 -6q48 -49 169 -49q120 0 169 49q6 6 15 6t15 -6zM788 550q0 -37 -26 -63t-63 -26t-63.5 26t-26.5 63q0 38 26.5 64t63.5 26t63 -26.5t26 -63.5zM1183 550q0 -37 -26.5 -63t-63.5 -26t-63 26
t-26 63t26 63.5t63 26.5t63.5 -26t26.5 -64zM1434 670q0 49 -35 84t-85 35t-86 -36q-130 90 -311 96l63 283l200 -45q0 -37 26 -63t63 -26t63.5 26.5t26.5 63.5t-26.5 63.5t-63.5 26.5q-54 0 -80 -50l-221 49q-19 5 -25 -16l-69 -312q-180 -7 -309 -97q-35 37 -87 37
q-50 0 -85 -35t-35 -84q0 -35 18.5 -64t49.5 -44q-6 -27 -6 -56q0 -142 140 -243t337 -101q198 0 338 101t140 243q0 32 -7 57q30 15 48 43.5t18 63.5zM1792 640q0 -182 -71 -348t-191 -286t-286 -191t-348 -71t-348 71t-286 191t-191 286t-71 348t71 348t191 286t286 191
t348 71t348 -71t286 -191t191 -286t71 -348z" />
    <glyph glyph-name="_392" unicode="&#xf1a2;" 
d="M939 407q13 -13 0 -26q-53 -53 -171 -53t-171 53q-13 13 0 26q5 6 13 6t13 -6q42 -42 145 -42t145 42q5 6 13 6t13 -6zM676 563q0 -31 -23 -54t-54 -23t-54 23t-23 54q0 32 22.5 54.5t54.5 22.5t54.5 -22.5t22.5 -54.5zM1014 563q0 -31 -23 -54t-54 -23t-54 23t-23 54
q0 32 22.5 54.5t54.5 22.5t54.5 -22.5t22.5 -54.5zM1229 666q0 42 -30 72t-73 30q-42 0 -73 -31q-113 78 -267 82l54 243l171 -39q1 -32 23.5 -54t53.5 -22q32 0 54.5 22.5t22.5 54.5t-22.5 54.5t-54.5 22.5q-48 0 -69 -43l-189 42q-17 5 -21 -13l-60 -268q-154 -6 -265 -83
q-30 32 -74 32q-43 0 -73 -30t-30 -72q0 -30 16 -55t42 -38q-5 -25 -5 -48q0 -122 120 -208.5t289 -86.5q170 0 290 86.5t120 208.5q0 25 -6 49q25 13 40.5 37.5t15.5 54.5zM1536 1120v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960
q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z" />
    <glyph glyph-name="_393" unicode="&#xf1a3;" 
d="M866 697l90 27v62q0 79 -58 135t-138 56t-138 -55.5t-58 -134.5v-283q0 -20 -14 -33.5t-33 -13.5t-32.5 13.5t-13.5 33.5v120h-151v-122q0 -82 57.5 -139t139.5 -57q81 0 138.5 56.5t57.5 136.5v280q0 19 13.5 33t33.5 14q19 0 32.5 -14t13.5 -33v-54zM1199 502v122h-150
v-126q0 -20 -13.5 -33.5t-33.5 -13.5q-19 0 -32.5 14t-13.5 33v123l-90 -26l-60 28v-123q0 -80 58 -137t139 -57t138.5 57t57.5 139zM1536 640q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103
t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="f1a4" unicode="&#xf1a4;" horiz-adv-x="1920" 
d="M1062 824v118q0 42 -30 72t-72 30t-72 -30t-30 -72v-612q0 -175 -126 -299t-303 -124q-178 0 -303.5 125.5t-125.5 303.5v266h328v-262q0 -43 30 -72.5t72 -29.5t72 29.5t30 72.5v620q0 171 126.5 292t301.5 121q176 0 302 -122t126 -294v-136l-195 -58zM1592 602h328
v-266q0 -178 -125.5 -303.5t-303.5 -125.5q-177 0 -303 124.5t-126 300.5v268l131 -61l195 58v-270q0 -42 30 -71.5t72 -29.5t72 29.5t30 71.5v275z" />
    <glyph glyph-name="_395" unicode="&#xf1a5;" 
d="M1472 160v480h-704v704h-480q-93 0 -158.5 -65.5t-65.5 -158.5v-480h704v-704h480q93 0 158.5 65.5t65.5 158.5zM1536 1120v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5
t84.5 -203.5z" />
    <glyph glyph-name="_396" unicode="&#xf1a6;" horiz-adv-x="2048" 
d="M328 1254h204v-983h-532v697h328v286zM328 435v369h-123v-369h123zM614 968v-697h205v697h-205zM614 1254v-204h205v204h-205zM901 968h533v-942h-533v163h328v82h-328v697zM1229 435v369h-123v-369h123zM1516 968h532v-942h-532v163h327v82h-327v697zM1843 435v369h-123
v-369h123z" />
    <glyph glyph-name="_397" unicode="&#xf1a7;" 
d="M1046 516q0 -64 -38 -109t-91 -45q-43 0 -70 15v277q28 17 70 17q53 0 91 -45.5t38 -109.5zM703 944q0 -64 -38 -109.5t-91 -45.5q-43 0 -70 15v277q28 17 70 17q53 0 91 -45t38 -109zM1265 513q0 134 -88 229t-213 95q-20 0 -39 -3q-23 -78 -78 -136q-87 -95 -211 -101
v-636l211 41v206q51 -19 117 -19q125 0 213 95t88 229zM922 940q0 134 -88.5 229t-213.5 95q-74 0 -141 -36h-186v-840l211 41v206q55 -19 116 -19q125 0 213.5 95t88.5 229zM1536 1120v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960
q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z" />
    <glyph glyph-name="_398" unicode="&#xf1a8;" horiz-adv-x="2038" 
d="M1222 607q75 3 143.5 -20.5t118 -58.5t101 -94.5t84 -108t75.5 -120.5q33 -56 78.5 -109t75.5 -80.5t99 -88.5q-48 -30 -108.5 -57.5t-138.5 -59t-114 -47.5q-44 37 -74 115t-43.5 164.5t-33 180.5t-42.5 168.5t-72.5 123t-122.5 48.5l-10 -2l-6 -4q4 -5 13 -14
q6 -5 28 -23.5t25.5 -22t19 -18t18 -20.5t11.5 -21t10.5 -27.5t4.5 -31t4 -40.5l1 -33q1 -26 -2.5 -57.5t-7.5 -52t-12.5 -58.5t-11.5 -53q-35 1 -101 -9.5t-98 -10.5q-39 0 -72 10q-2 16 -2 47q0 74 3 96q2 13 31.5 41.5t57 59t26.5 51.5q-24 2 -43 -24
q-36 -53 -111.5 -99.5t-136.5 -46.5q-25 0 -75.5 63t-106.5 139.5t-84 96.5q-6 4 -27 30q-482 -112 -513 -112q-16 0 -28 11t-12 27q0 15 8.5 26.5t22.5 14.5l486 106q-8 14 -8 25t5.5 17.5t16 11.5t20 7t23 4.5t18.5 4.5q4 1 15.5 7.5t17.5 6.5q15 0 28 -16t20 -33
q163 37 172 37q17 0 29.5 -11t12.5 -28q0 -15 -8.5 -26t-23.5 -14l-182 -40l-1 -16q-1 -26 81.5 -117.5t104.5 -91.5q47 0 119 80t72 129q0 36 -23.5 53t-51 18.5t-51 11.5t-23.5 34q0 16 10 34l-68 19q43 44 43 117q0 26 -5 58q82 16 144 16q44 0 71.5 -1.5t48.5 -8.5
t31 -13.5t20.5 -24.5t15.5 -33.5t17 -47.5t24 -60l50 25q-3 -40 -23 -60t-42.5 -21t-40 -6.5t-16.5 -20.5zM1282 842q-5 5 -13.5 15.5t-12 14.5t-10.5 11.5t-10 10.5l-8 8t-8.5 7.5t-8 5t-8.5 4.5q-7 3 -14.5 5t-20.5 2.5t-22 0.5h-32.5h-37.5q-126 0 -217 -43
q16 30 36 46.5t54 29.5t65.5 36t46 36.5t50 55t43.5 50.5q12 -9 28 -31.5t32 -36.5t38 -13l12 1v-76l22 -1q247 95 371 190q28 21 50 39t42.5 37.5t33 31t29.5 34t24 31t24.5 37t23 38t27 47.5t29.5 53l7 9q-2 -53 -43 -139q-79 -165 -205 -264t-306 -142q-14 -3 -42 -7.5
t-50 -9.5t-39 -14q3 -19 24.5 -46t21.5 -34q0 -11 -26 -30zM1061 -79q39 26 131.5 47.5t146.5 21.5q9 0 22.5 -15.5t28 -42.5t26 -50t24 -51t14.5 -33q-121 -45 -244 -45q-61 0 -125 11zM822 568l48 12l109 -177l-73 -48zM1323 51q3 -15 3 -16q0 -7 -17.5 -14.5t-46 -13
t-54 -9.5t-53.5 -7.5t-32 -4.5l-7 43q21 2 60.5 8.5t72 10t60.5 3.5h14zM866 679l-96 -20l-6 17q10 1 32.5 7t34.5 6q19 0 35 -10zM1061 45h31l10 -83l-41 -12v95zM1950 1535v1v-1zM1950 1535l-1 -5l-2 -2l1 3zM1950 1535l1 1z" />
    <glyph glyph-name="_399" unicode="&#xf1a9;" 
d="M1167 -50q-5 19 -24 5q-30 -22 -87 -39t-131 -17q-129 0 -193 49q-5 4 -13 4q-11 0 -26 -12q-7 -6 -7.5 -16t7.5 -20q34 -32 87.5 -46t102.5 -12.5t99 4.5q41 4 84.5 20.5t65 30t28.5 20.5q12 12 7 29zM1128 65q-19 47 -39 61q-23 15 -76 15q-47 0 -71 -10
q-29 -12 -78 -56q-26 -24 -12 -44q9 -8 17.5 -4.5t31.5 23.5q3 2 10.5 8.5t10.5 8.5t10 7t11.5 7t12.5 5t15 4.5t16.5 2.5t20.5 1q27 0 44.5 -7.5t23 -14.5t13.5 -22q10 -17 12.5 -20t12.5 1q23 12 14 34zM1483 346q0 22 -5 44.5t-16.5 45t-34 36.5t-52.5 14
q-33 0 -97 -41.5t-129 -83.5t-101 -42q-27 -1 -63.5 19t-76 49t-83.5 58t-100 49t-111 19q-115 -1 -197 -78.5t-84 -178.5q-2 -112 74 -164q29 -20 62.5 -28.5t103.5 -8.5q57 0 132 32.5t134 71t120 70.5t93 31q26 -1 65 -31.5t71.5 -67t68 -67.5t55.5 -32q35 -3 58.5 14
t55.5 63q28 41 42.5 101t14.5 106zM1536 506q0 -164 -62 -304.5t-166 -236t-242.5 -149.5t-290.5 -54t-293 57.5t-247.5 157t-170.5 241.5t-64 302q0 89 19.5 172.5t49 145.5t70.5 118.5t78.5 94t78.5 69.5t64.5 46.5t42.5 24.5q14 8 51 26.5t54.5 28.5t48 30t60.5 44
q36 28 58 72.5t30 125.5q129 -155 186 -193q44 -29 130 -68t129 -66q21 -13 39 -25t60.5 -46.5t76 -70.5t75 -95t69 -122t47 -148.5t19.5 -177.5z" />
    <glyph glyph-name="_400" unicode="&#xf1aa;" 
d="M1070 463l-160 -160l-151 -152l-30 -30q-65 -64 -151.5 -87t-171.5 -2q-16 -70 -72 -115t-129 -45q-85 0 -145 60.5t-60 145.5q0 72 44.5 128t113.5 72q-22 86 1 173t88 152l12 12l151 -152l-11 -11q-37 -37 -37 -89t37 -90q37 -37 89 -37t89 37l30 30l151 152l161 160z
M729 1145l12 -12l-152 -152l-12 12q-37 37 -89 37t-89 -37t-37 -89.5t37 -89.5l29 -29l152 -152l160 -160l-151 -152l-161 160l-151 152l-30 30q-68 67 -90 159.5t5 179.5q-70 15 -115 71t-45 129q0 85 60 145.5t145 60.5q76 0 133.5 -49t69.5 -123q84 20 169.5 -3.5
t149.5 -87.5zM1536 78q0 -85 -60 -145.5t-145 -60.5q-74 0 -131 47t-71 118q-86 -28 -179.5 -6t-161.5 90l-11 12l151 152l12 -12q37 -37 89 -37t89 37t37 89t-37 89l-30 30l-152 152l-160 160l152 152l160 -160l152 -152l29 -30q64 -64 87.5 -150.5t2.5 -171.5
q76 -11 126.5 -68.5t50.5 -134.5zM1534 1202q0 -77 -51 -135t-127 -69q26 -85 3 -176.5t-90 -158.5l-12 -12l-151 152l12 12q37 37 37 89t-37 89t-89 37t-89 -37l-30 -30l-152 -152l-160 -160l-152 152l161 160l152 152l29 30q67 67 159 89.5t178 -3.5q11 75 68.5 126
t135.5 51q85 0 145 -60.5t60 -145.5z" />
    <glyph glyph-name="f1ab" unicode="&#xf1ab;" 
d="M654 458q-1 -3 -12.5 0.5t-31.5 11.5l-20 9q-44 20 -87 49q-7 5 -41 31.5t-38 28.5q-67 -103 -134 -181q-81 -95 -105 -110q-4 -2 -19.5 -4t-18.5 0q6 4 82 92q21 24 85.5 115t78.5 118q17 30 51 98.5t36 77.5q-8 1 -110 -33q-8 -2 -27.5 -7.5t-34.5 -9.5t-17 -5
q-2 -2 -2 -10.5t-1 -9.5q-5 -10 -31 -15q-23 -7 -47 0q-18 4 -28 21q-4 6 -5 23q6 2 24.5 5t29.5 6q58 16 105 32q100 35 102 35q10 2 43 19.5t44 21.5q9 3 21.5 8t14.5 5.5t6 -0.5q2 -12 -1 -33q0 -2 -12.5 -27t-26.5 -53.5t-17 -33.5q-25 -50 -77 -131l64 -28
q12 -6 74.5 -32t67.5 -28q4 -1 10.5 -25.5t4.5 -30.5zM449 944q3 -15 -4 -28q-12 -23 -50 -38q-30 -12 -60 -12q-26 3 -49 26q-14 15 -18 41l1 3q3 -3 19.5 -5t26.5 0t58 16q36 12 55 14q17 0 21 -17zM1147 815l63 -227l-139 42zM39 15l694 232v1032l-694 -233v-1031z
M1280 332l102 -31l-181 657l-100 31l-216 -536l102 -31l45 110l211 -65zM777 1294l573 -184v380zM1088 -29l158 -13l-54 -160l-40 66q-130 -83 -276 -108q-58 -12 -91 -12h-84q-79 0 -199.5 39t-183.5 85q-8 7 -8 16q0 8 5 13.5t13 5.5q4 0 18 -7.5t30.5 -16.5t20.5 -11
q73 -37 159.5 -61.5t157.5 -24.5q95 0 167 14.5t157 50.5q15 7 30.5 15.5t34 19t28.5 16.5zM1536 1050v-1079l-774 246q-14 -6 -375 -127.5t-368 -121.5q-13 0 -18 13q0 1 -1 3v1078q3 9 4 10q5 6 20 11q107 36 149 50v384l558 -198q2 0 160.5 55t316 108.5t161.5 53.5
q20 0 20 -21v-418z" />
    <glyph glyph-name="_402" unicode="&#xf1ac;" horiz-adv-x="1792" 
d="M288 1152q66 0 113 -47t47 -113v-1088q0 -66 -47 -113t-113 -47h-128q-66 0 -113 47t-47 113v1088q0 66 47 113t113 47h128zM1664 989q58 -34 93 -93t35 -128v-768q0 -106 -75 -181t-181 -75h-864q-66 0 -113 47t-47 113v1536q0 40 28 68t68 28h672q40 0 88 -20t76 -48
l152 -152q28 -28 48 -76t20 -88v-163zM928 0v128q0 14 -9 23t-23 9h-128q-14 0 -23 -9t-9 -23v-128q0 -14 9 -23t23 -9h128q14 0 23 9t9 23zM928 256v128q0 14 -9 23t-23 9h-128q-14 0 -23 -9t-9 -23v-128q0 -14 9 -23t23 -9h128q14 0 23 9t9 23zM928 512v128q0 14 -9 23
t-23 9h-128q-14 0 -23 -9t-9 -23v-128q0 -14 9 -23t23 -9h128q14 0 23 9t9 23zM1184 0v128q0 14 -9 23t-23 9h-128q-14 0 -23 -9t-9 -23v-128q0 -14 9 -23t23 -9h128q14 0 23 9t9 23zM1184 256v128q0 14 -9 23t-23 9h-128q-14 0 -23 -9t-9 -23v-128q0 -14 9 -23t23 -9h128
q14 0 23 9t9 23zM1184 512v128q0 14 -9 23t-23 9h-128q-14 0 -23 -9t-9 -23v-128q0 -14 9 -23t23 -9h128q14 0 23 9t9 23zM1440 0v128q0 14 -9 23t-23 9h-128q-14 0 -23 -9t-9 -23v-128q0 -14 9 -23t23 -9h128q14 0 23 9t9 23zM1440 256v128q0 14 -9 23t-23 9h-128
q-14 0 -23 -9t-9 -23v-128q0 -14 9 -23t23 -9h128q14 0 23 9t9 23zM1440 512v128q0 14 -9 23t-23 9h-128q-14 0 -23 -9t-9 -23v-128q0 -14 9 -23t23 -9h128q14 0 23 9t9 23zM1536 896v256h-160q-40 0 -68 28t-28 68v160h-640v-512h896z" />
    <glyph glyph-name="_403" unicode="&#xf1ad;" 
d="M1344 1536q26 0 45 -19t19 -45v-1664q0 -26 -19 -45t-45 -19h-1280q-26 0 -45 19t-19 45v1664q0 26 19 45t45 19h1280zM512 1248v-64q0 -14 9 -23t23 -9h64q14 0 23 9t9 23v64q0 14 -9 23t-23 9h-64q-14 0 -23 -9t-9 -23zM512 992v-64q0 -14 9 -23t23 -9h64q14 0 23 9
t9 23v64q0 14 -9 23t-23 9h-64q-14 0 -23 -9t-9 -23zM512 736v-64q0 -14 9 -23t23 -9h64q14 0 23 9t9 23v64q0 14 -9 23t-23 9h-64q-14 0 -23 -9t-9 -23zM512 480v-64q0 -14 9 -23t23 -9h64q14 0 23 9t9 23v64q0 14 -9 23t-23 9h-64q-14 0 -23 -9t-9 -23zM384 160v64
q0 14 -9 23t-23 9h-64q-14 0 -23 -9t-9 -23v-64q0 -14 9 -23t23 -9h64q14 0 23 9t9 23zM384 416v64q0 14 -9 23t-23 9h-64q-14 0 -23 -9t-9 -23v-64q0 -14 9 -23t23 -9h64q14 0 23 9t9 23zM384 672v64q0 14 -9 23t-23 9h-64q-14 0 -23 -9t-9 -23v-64q0 -14 9 -23t23 -9h64
q14 0 23 9t9 23zM384 928v64q0 14 -9 23t-23 9h-64q-14 0 -23 -9t-9 -23v-64q0 -14 9 -23t23 -9h64q14 0 23 9t9 23zM384 1184v64q0 14 -9 23t-23 9h-64q-14 0 -23 -9t-9 -23v-64q0 -14 9 -23t23 -9h64q14 0 23 9t9 23zM896 -96v192q0 14 -9 23t-23 9h-320q-14 0 -23 -9
t-9 -23v-192q0 -14 9 -23t23 -9h320q14 0 23 9t9 23zM896 416v64q0 14 -9 23t-23 9h-64q-14 0 -23 -9t-9 -23v-64q0 -14 9 -23t23 -9h64q14 0 23 9t9 23zM896 672v64q0 14 -9 23t-23 9h-64q-14 0 -23 -9t-9 -23v-64q0 -14 9 -23t23 -9h64q14 0 23 9t9 23zM896 928v64
q0 14 -9 23t-23 9h-64q-14 0 -23 -9t-9 -23v-64q0 -14 9 -23t23 -9h64q14 0 23 9t9 23zM896 1184v64q0 14 -9 23t-23 9h-64q-14 0 -23 -9t-9 -23v-64q0 -14 9 -23t23 -9h64q14 0 23 9t9 23zM1152 160v64q0 14 -9 23t-23 9h-64q-14 0 -23 -9t-9 -23v-64q0 -14 9 -23t23 -9h64
q14 0 23 9t9 23zM1152 416v64q0 14 -9 23t-23 9h-64q-14 0 -23 -9t-9 -23v-64q0 -14 9 -23t23 -9h64q14 0 23 9t9 23zM1152 672v64q0 14 -9 23t-23 9h-64q-14 0 -23 -9t-9 -23v-64q0 -14 9 -23t23 -9h64q14 0 23 9t9 23zM1152 928v64q0 14 -9 23t-23 9h-64q-14 0 -23 -9
t-9 -23v-64q0 -14 9 -23t23 -9h64q14 0 23 9t9 23zM1152 1184v64q0 14 -9 23t-23 9h-64q-14 0 -23 -9t-9 -23v-64q0 -14 9 -23t23 -9h64q14 0 23 9t9 23z" />
    <glyph glyph-name="_404" unicode="&#xf1ae;" horiz-adv-x="1280" 
d="M1188 988l-292 -292v-824q0 -46 -33 -79t-79 -33t-79 33t-33 79v384h-64v-384q0 -46 -33 -79t-79 -33t-79 33t-33 79v824l-292 292q-28 28 -28 68t28 68q29 28 68.5 28t67.5 -28l228 -228h368l228 228q28 28 68 28t68 -28q28 -29 28 -68.5t-28 -67.5zM864 1152
q0 -93 -65.5 -158.5t-158.5 -65.5t-158.5 65.5t-65.5 158.5t65.5 158.5t158.5 65.5t158.5 -65.5t65.5 -158.5z" />
    <glyph glyph-name="uniF1B1" unicode="&#xf1b0;" horiz-adv-x="1664" 
d="M780 1064q0 -60 -19 -113.5t-63 -92.5t-105 -39q-76 0 -138 57.5t-92 135.5t-30 151q0 60 19 113.5t63 92.5t105 39q77 0 138.5 -57.5t91.5 -135t30 -151.5zM438 581q0 -80 -42 -139t-119 -59q-76 0 -141.5 55.5t-100.5 133.5t-35 152q0 80 42 139.5t119 59.5
q76 0 141.5 -55.5t100.5 -134t35 -152.5zM832 608q118 0 255 -97.5t229 -237t92 -254.5q0 -46 -17 -76.5t-48.5 -45t-64.5 -20t-76 -5.5q-68 0 -187.5 45t-182.5 45q-66 0 -192.5 -44.5t-200.5 -44.5q-183 0 -183 146q0 86 56 191.5t139.5 192.5t187.5 146t193 59zM1071 819
q-61 0 -105 39t-63 92.5t-19 113.5q0 74 30 151.5t91.5 135t138.5 57.5q61 0 105 -39t63 -92.5t19 -113.5q0 -73 -30 -151t-92 -135.5t-138 -57.5zM1503 923q77 0 119 -59.5t42 -139.5q0 -74 -35 -152t-100.5 -133.5t-141.5 -55.5q-77 0 -119 59t-42 139q0 74 35 152.5
t100.5 134t141.5 55.5z" />
    <glyph glyph-name="_406" unicode="&#xf1b1;" horiz-adv-x="768" 
d="M704 1008q0 -145 -57 -243.5t-152 -135.5l45 -821q2 -26 -16 -45t-44 -19h-192q-26 0 -44 19t-16 45l45 821q-95 37 -152 135.5t-57 243.5q0 128 42.5 249.5t117.5 200t160 78.5t160 -78.5t117.5 -200t42.5 -249.5z" />
    <glyph glyph-name="_407" unicode="&#xf1b2;" horiz-adv-x="1792" 
d="M896 -93l640 349v636l-640 -233v-752zM832 772l698 254l-698 254l-698 -254zM1664 1024v-768q0 -35 -18 -65t-49 -47l-704 -384q-28 -16 -61 -16t-61 16l-704 384q-31 17 -49 47t-18 65v768q0 40 23 73t61 47l704 256q22 8 44 8t44 -8l704 -256q38 -14 61 -47t23 -73z
" />
    <glyph glyph-name="_408" unicode="&#xf1b3;" horiz-adv-x="2304" 
d="M640 -96l384 192v314l-384 -164v-342zM576 358l404 173l-404 173l-404 -173zM1664 -96l384 192v314l-384 -164v-342zM1600 358l404 173l-404 173l-404 -173zM1152 651l384 165v266l-384 -164v-267zM1088 1030l441 189l-441 189l-441 -189zM2176 512v-416q0 -36 -19 -67
t-52 -47l-448 -224q-25 -14 -57 -14t-57 14l-448 224q-4 2 -7 4q-2 -2 -7 -4l-448 -224q-25 -14 -57 -14t-57 14l-448 224q-33 16 -52 47t-19 67v416q0 38 21.5 70t56.5 48l434 186v400q0 38 21.5 70t56.5 48l448 192q23 10 50 10t50 -10l448 -192q35 -16 56.5 -48t21.5 -70
v-400l434 -186q36 -16 57 -48t21 -70z" />
    <glyph glyph-name="_409" unicode="&#xf1b4;" horiz-adv-x="2048" 
d="M1848 1197h-511v-124h511v124zM1596 771q-90 0 -146 -52.5t-62 -142.5h408q-18 195 -200 195zM1612 186q63 0 122 32t76 87h221q-100 -307 -427 -307q-214 0 -340.5 132t-126.5 347q0 208 130.5 345.5t336.5 137.5q138 0 240.5 -68t153 -179t50.5 -248q0 -17 -2 -47h-658
q0 -111 57.5 -171.5t166.5 -60.5zM277 236h296q205 0 205 167q0 180 -199 180h-302v-347zM277 773h281q78 0 123.5 36.5t45.5 113.5q0 144 -190 144h-260v-294zM0 1282h594q87 0 155 -14t126.5 -47.5t90 -96.5t31.5 -154q0 -181 -172 -263q114 -32 172 -115t58 -204
q0 -75 -24.5 -136.5t-66 -103.5t-98.5 -71t-121 -42t-134 -13h-611v1260z" />
    <glyph glyph-name="_410" unicode="&#xf1b5;" 
d="M1248 1408q119 0 203.5 -84.5t84.5 -203.5v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960zM499 1041h-371v-787h382q117 0 197 57.5t80 170.5q0 158 -143 200q107 52 107 164q0 57 -19.5 96.5
t-56.5 60.5t-79 29.5t-97 8.5zM477 723h-176v184h163q119 0 119 -90q0 -94 -106 -94zM486 388h-185v217h189q124 0 124 -113q0 -104 -128 -104zM1136 356q-68 0 -104 38t-36 107h411q1 10 1 30q0 132 -74.5 220.5t-203.5 88.5q-128 0 -210 -86t-82 -216q0 -135 79 -217
t213 -82q205 0 267 191h-138q-11 -34 -47.5 -54t-75.5 -20zM1126 722q113 0 124 -122h-254q4 56 39 89t91 33zM964 988h319v-77h-319v77z" />
    <glyph glyph-name="_411" unicode="&#xf1b6;" horiz-adv-x="1792" 
d="M1582 954q0 -101 -71.5 -172.5t-172.5 -71.5t-172.5 71.5t-71.5 172.5t71.5 172.5t172.5 71.5t172.5 -71.5t71.5 -172.5zM812 212q0 104 -73 177t-177 73q-27 0 -54 -6l104 -42q77 -31 109.5 -106.5t1.5 -151.5q-31 -77 -107 -109t-152 -1q-21 8 -62 24.5t-61 24.5
q32 -60 91 -96.5t130 -36.5q104 0 177 73t73 177zM1642 953q0 126 -89.5 215.5t-215.5 89.5q-127 0 -216.5 -89.5t-89.5 -215.5q0 -127 89.5 -216t216.5 -89q126 0 215.5 89t89.5 216zM1792 953q0 -189 -133.5 -322t-321.5 -133l-437 -319q-12 -129 -109 -218t-229 -89
q-121 0 -214 76t-118 192l-230 92v429l389 -157q79 48 173 48q13 0 35 -2l284 407q2 187 135.5 319t320.5 132q188 0 321.5 -133.5t133.5 -321.5z" />
    <glyph glyph-name="_412" unicode="&#xf1b7;" 
d="M1242 889q0 80 -57 136.5t-137 56.5t-136.5 -57t-56.5 -136q0 -80 56.5 -136.5t136.5 -56.5t137 56.5t57 136.5zM632 301q0 -83 -58 -140.5t-140 -57.5q-56 0 -103 29t-72 77q52 -20 98 -40q60 -24 120 1.5t85 86.5q24 60 -1.5 120t-86.5 84l-82 33q22 5 42 5
q82 0 140 -57.5t58 -140.5zM1536 1120v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v153l172 -69q20 -92 93.5 -152t168.5 -60q104 0 181 70t87 173l345 252q150 0 255.5 105.5t105.5 254.5q0 150 -105.5 255.5t-255.5 105.5
q-148 0 -253 -104.5t-107 -252.5l-225 -322q-9 1 -28 1q-75 0 -137 -37l-297 119v468q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5zM1289 887q0 -100 -71 -170.5t-171 -70.5t-170.5 70.5t-70.5 170.5t70.5 171t170.5 71q101 0 171.5 -70.5t70.5 -171.5z
" />
    <glyph glyph-name="_413" unicode="&#xf1b8;" horiz-adv-x="1792" 
d="M836 367l-15 -368l-2 -22l-420 29q-36 3 -67 31.5t-47 65.5q-11 27 -14.5 55t4 65t12 55t21.5 64t19 53q78 -12 509 -28zM449 953l180 -379l-147 92q-63 -72 -111.5 -144.5t-72.5 -125t-39.5 -94.5t-18.5 -63l-4 -21l-190 357q-17 26 -18 56t6 47l8 18q35 63 114 188
l-140 86zM1680 436l-188 -359q-12 -29 -36.5 -46.5t-43.5 -20.5l-18 -4q-71 -7 -219 -12l8 -164l-230 367l211 362l7 -173q170 -16 283 -5t170 33zM895 1360q-47 -63 -265 -435l-317 187l-19 12l225 356q20 31 60 45t80 10q24 -2 48.5 -12t42 -21t41.5 -33t36 -34.5
t36 -39.5t32 -35zM1550 1053l212 -363q18 -37 12.5 -76t-27.5 -74q-13 -20 -33 -37t-38 -28t-48.5 -22t-47 -16t-51.5 -14t-46 -12q-34 72 -265 436l313 195zM1407 1279l142 83l-220 -373l-419 20l151 86q-34 89 -75 166t-75.5 123.5t-64.5 80t-47 46.5l-17 13l405 -1
q31 3 58 -10.5t39 -28.5l11 -15q39 -61 112 -190z" />
    <glyph glyph-name="_414" unicode="&#xf1b9;" horiz-adv-x="2048" 
d="M480 448q0 66 -47 113t-113 47t-113 -47t-47 -113t47 -113t113 -47t113 47t47 113zM516 768h1016l-89 357q-2 8 -14 17.5t-21 9.5h-768q-9 0 -21 -9.5t-14 -17.5zM1888 448q0 66 -47 113t-113 47t-113 -47t-47 -113t47 -113t113 -47t113 47t47 113zM2048 544v-384
q0 -14 -9 -23t-23 -9h-96v-128q0 -80 -56 -136t-136 -56t-136 56t-56 136v128h-1024v-128q0 -80 -56 -136t-136 -56t-136 56t-56 136v128h-96q-14 0 -23 9t-9 23v384q0 93 65.5 158.5t158.5 65.5h28l105 419q23 94 104 157.5t179 63.5h768q98 0 179 -63.5t104 -157.5
l105 -419h28q93 0 158.5 -65.5t65.5 -158.5z" />
    <glyph glyph-name="_415" unicode="&#xf1ba;" horiz-adv-x="2048" 
d="M1824 640q93 0 158.5 -65.5t65.5 -158.5v-384q0 -14 -9 -23t-23 -9h-96v-64q0 -80 -56 -136t-136 -56t-136 56t-56 136v64h-1024v-64q0 -80 -56 -136t-136 -56t-136 56t-56 136v64h-96q-14 0 -23 9t-9 23v384q0 93 65.5 158.5t158.5 65.5h28l105 419q23 94 104 157.5
t179 63.5h128v224q0 14 9 23t23 9h448q14 0 23 -9t9 -23v-224h128q98 0 179 -63.5t104 -157.5l105 -419h28zM320 160q66 0 113 47t47 113t-47 113t-113 47t-113 -47t-47 -113t47 -113t113 -47zM516 640h1016l-89 357q-2 8 -14 17.5t-21 9.5h-768q-9 0 -21 -9.5t-14 -17.5z
M1728 160q66 0 113 47t47 113t-47 113t-113 47t-113 -47t-47 -113t47 -113t113 -47z" />
    <glyph glyph-name="_416" unicode="&#xf1bb;" 
d="M1504 64q0 -26 -19 -45t-45 -19h-462q1 -17 6 -87.5t5 -108.5q0 -25 -18 -42.5t-43 -17.5h-320q-25 0 -43 17.5t-18 42.5q0 38 5 108.5t6 87.5h-462q-26 0 -45 19t-19 45t19 45l402 403h-229q-26 0 -45 19t-19 45t19 45l402 403h-197q-26 0 -45 19t-19 45t19 45l384 384
q19 19 45 19t45 -19l384 -384q19 -19 19 -45t-19 -45t-45 -19h-197l402 -403q19 -19 19 -45t-19 -45t-45 -19h-229l402 -403q19 -19 19 -45z" />
    <glyph glyph-name="_417" unicode="&#xf1bc;" 
d="M1127 326q0 32 -30 51q-193 115 -447 115q-133 0 -287 -34q-42 -9 -42 -52q0 -20 13.5 -34.5t35.5 -14.5q5 0 37 8q132 27 243 27q226 0 397 -103q19 -11 33 -11q19 0 33 13.5t14 34.5zM1223 541q0 40 -35 61q-237 141 -548 141q-153 0 -303 -42q-48 -13 -48 -64
q0 -25 17.5 -42.5t42.5 -17.5q7 0 37 8q122 33 251 33q279 0 488 -124q24 -13 38 -13q25 0 42.5 17.5t17.5 42.5zM1331 789q0 47 -40 70q-126 73 -293 110.5t-343 37.5q-204 0 -364 -47q-23 -7 -38.5 -25.5t-15.5 -48.5q0 -31 20.5 -52t51.5 -21q11 0 40 8q133 37 307 37
q159 0 309.5 -34t253.5 -95q21 -12 40 -12q29 0 50.5 20.5t21.5 51.5zM1536 640q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="_418" unicode="&#xf1bd;" horiz-adv-x="1024" 
d="M1024 1233l-303 -582l24 -31h279v-415h-507l-44 -30l-142 -273l-30 -30h-301v303l303 583l-24 30h-279v415h507l44 30l142 273l30 30h301v-303z" />
    <glyph glyph-name="_419" unicode="&#xf1be;" horiz-adv-x="2304" 
d="M784 164l16 241l-16 523q-1 10 -7.5 17t-16.5 7q-9 0 -16 -7t-7 -17l-14 -523l14 -241q1 -10 7.5 -16.5t15.5 -6.5q22 0 24 23zM1080 193l11 211l-12 586q0 16 -13 24q-8 5 -16 5t-16 -5q-13 -8 -13 -24l-1 -6l-10 -579q0 -1 11 -236v-1q0 -10 6 -17q9 -11 23 -11
q11 0 20 9q9 7 9 20zM35 533l20 -128l-20 -126q-2 -9 -9 -9t-9 9l-17 126l17 128q2 9 9 9t9 -9zM121 612l26 -207l-26 -203q-2 -9 -10 -9q-9 0 -9 10l-23 202l23 207q0 9 9 9q8 0 10 -9zM401 159zM213 650l25 -245l-25 -237q0 -11 -11 -11q-10 0 -12 11l-21 237l21 245
q2 12 12 12q11 0 11 -12zM307 657l23 -252l-23 -244q-2 -13 -14 -13q-13 0 -13 13l-21 244l21 252q0 13 13 13q12 0 14 -13zM401 639l21 -234l-21 -246q-2 -16 -16 -16q-6 0 -10.5 4.5t-4.5 11.5l-20 246l20 234q0 6 4.5 10.5t10.5 4.5q14 0 16 -15zM784 164zM495 785
l21 -380l-21 -246q0 -7 -5 -12.5t-12 -5.5q-16 0 -18 18l-18 246l18 380q2 18 18 18q7 0 12 -5.5t5 -12.5zM589 871l19 -468l-19 -244q0 -8 -5.5 -13.5t-13.5 -5.5q-18 0 -20 19l-16 244l16 468q2 19 20 19q8 0 13.5 -5.5t5.5 -13.5zM687 911l18 -506l-18 -242
q-2 -21 -22 -21q-19 0 -21 21l-16 242l16 506q0 9 6.5 15.5t14.5 6.5q9 0 15 -6.5t7 -15.5zM1079 169v0v0v0zM881 915l15 -510l-15 -239q0 -10 -7.5 -17.5t-17.5 -7.5t-17 7t-8 18l-14 239l14 510q0 11 7.5 18t17.5 7t17.5 -7t7.5 -18zM980 896l14 -492l-14 -236
q0 -11 -8 -19t-19 -8t-19 8t-9 19l-12 236l12 492q1 12 9 20t19 8t18.5 -8t8.5 -20zM1192 404l-14 -231v0q0 -13 -9 -22t-22 -9t-22 9t-10 22l-6 114l-6 117l12 636v3q2 15 12 24q9 7 20 7q8 0 15 -5q14 -8 16 -26zM2304 423q0 -117 -83 -199.5t-200 -82.5h-786
q-13 2 -22 11t-9 22v899q0 23 28 33q85 34 181 34q195 0 338 -131.5t160 -323.5q53 22 110 22q117 0 200 -83t83 -201z" />
    <glyph glyph-name="uniF1C0" unicode="&#xf1c0;" 
d="M768 768q237 0 443 43t325 127v-170q0 -69 -103 -128t-280 -93.5t-385 -34.5t-385 34.5t-280 93.5t-103 128v170q119 -84 325 -127t443 -43zM768 0q237 0 443 43t325 127v-170q0 -69 -103 -128t-280 -93.5t-385 -34.5t-385 34.5t-280 93.5t-103 128v170q119 -84 325 -127
t443 -43zM768 384q237 0 443 43t325 127v-170q0 -69 -103 -128t-280 -93.5t-385 -34.5t-385 34.5t-280 93.5t-103 128v170q119 -84 325 -127t443 -43zM768 1536q208 0 385 -34.5t280 -93.5t103 -128v-128q0 -69 -103 -128t-280 -93.5t-385 -34.5t-385 34.5t-280 93.5
t-103 128v128q0 69 103 128t280 93.5t385 34.5z" />
    <glyph glyph-name="uniF1C1" unicode="&#xf1c1;" 
d="M1468 1156q28 -28 48 -76t20 -88v-1152q0 -40 -28 -68t-68 -28h-1344q-40 0 -68 28t-28 68v1600q0 40 28 68t68 28h896q40 0 88 -20t76 -48zM1024 1400v-376h376q-10 29 -22 41l-313 313q-12 12 -41 22zM1408 -128v1024h-416q-40 0 -68 28t-28 68v416h-768v-1536h1280z
M894 465q33 -26 84 -56q59 7 117 7q147 0 177 -49q16 -22 2 -52q0 -1 -1 -2l-2 -2v-1q-6 -38 -71 -38q-48 0 -115 20t-130 53q-221 -24 -392 -83q-153 -262 -242 -262q-15 0 -28 7l-24 12q-1 1 -6 5q-10 10 -6 36q9 40 56 91.5t132 96.5q14 9 23 -6q2 -2 2 -4q52 85 107 197
q68 136 104 262q-24 82 -30.5 159.5t6.5 127.5q11 40 42 40h21h1q23 0 35 -15q18 -21 9 -68q-2 -6 -4 -8q1 -3 1 -8v-30q-2 -123 -14 -192q55 -164 146 -238zM318 54q52 24 137 158q-51 -40 -87.5 -84t-49.5 -74zM716 974q-15 -42 -2 -132q1 7 7 44q0 3 7 43q1 4 4 8
q-1 1 -1 2q-1 2 -1 3q-1 22 -13 36q0 -1 -1 -2v-2zM592 313q135 54 284 81q-2 1 -13 9.5t-16 13.5q-76 67 -127 176q-27 -86 -83 -197q-30 -56 -45 -83zM1238 329q-24 24 -140 24q76 -28 124 -28q14 0 18 1q0 1 -2 3z" />
    <glyph glyph-name="_422" unicode="&#xf1c2;" 
d="M1468 1156q28 -28 48 -76t20 -88v-1152q0 -40 -28 -68t-68 -28h-1344q-40 0 -68 28t-28 68v1600q0 40 28 68t68 28h896q40 0 88 -20t76 -48zM1024 1400v-376h376q-10 29 -22 41l-313 313q-12 12 -41 22zM1408 -128v1024h-416q-40 0 -68 28t-28 68v416h-768v-1536h1280z
M233 768v-107h70l164 -661h159l128 485q7 20 10 46q2 16 2 24h4l3 -24q1 -3 3.5 -20t5.5 -26l128 -485h159l164 661h70v107h-300v-107h90l-99 -438q-5 -20 -7 -46l-2 -21h-4q0 3 -0.5 6.5t-1.5 8t-1 6.5q-1 5 -4 21t-5 25l-144 545h-114l-144 -545q-2 -9 -4.5 -24.5
t-3.5 -21.5l-4 -21h-4l-2 21q-2 26 -7 46l-99 438h90v107h-300z" />
    <glyph glyph-name="_423" unicode="&#xf1c3;" 
d="M1468 1156q28 -28 48 -76t20 -88v-1152q0 -40 -28 -68t-68 -28h-1344q-40 0 -68 28t-28 68v1600q0 40 28 68t68 28h896q40 0 88 -20t76 -48zM1024 1400v-376h376q-10 29 -22 41l-313 313q-12 12 -41 22zM1408 -128v1024h-416q-40 0 -68 28t-28 68v416h-768v-1536h1280z
M429 106v-106h281v106h-75l103 161q5 7 10 16.5t7.5 13.5t3.5 4h2q1 -4 5 -10q2 -4 4.5 -7.5t6 -8t6.5 -8.5l107 -161h-76v-106h291v106h-68l-192 273l195 282h67v107h-279v-107h74l-103 -159q-4 -7 -10 -16.5t-9 -13.5l-2 -3h-2q-1 4 -5 10q-6 11 -17 23l-106 159h76v107
h-290v-107h68l189 -272l-194 -283h-68z" />
    <glyph glyph-name="_424" unicode="&#xf1c4;" 
d="M1468 1156q28 -28 48 -76t20 -88v-1152q0 -40 -28 -68t-68 -28h-1344q-40 0 -68 28t-28 68v1600q0 40 28 68t68 28h896q40 0 88 -20t76 -48zM1024 1400v-376h376q-10 29 -22 41l-313 313q-12 12 -41 22zM1408 -128v1024h-416q-40 0 -68 28t-28 68v416h-768v-1536h1280z
M416 106v-106h327v106h-93v167h137q76 0 118 15q67 23 106.5 87t39.5 146q0 81 -37 141t-100 87q-48 19 -130 19h-368v-107h92v-555h-92zM769 386h-119v268h120q52 0 83 -18q56 -33 56 -115q0 -89 -62 -120q-31 -15 -78 -15z" />
    <glyph glyph-name="_425" unicode="&#xf1c5;" 
d="M1468 1156q28 -28 48 -76t20 -88v-1152q0 -40 -28 -68t-68 -28h-1344q-40 0 -68 28t-28 68v1600q0 40 28 68t68 28h896q40 0 88 -20t76 -48zM1024 1400v-376h376q-10 29 -22 41l-313 313q-12 12 -41 22zM1408 -128v1024h-416q-40 0 -68 28t-28 68v416h-768v-1536h1280z
M1280 320v-320h-1024v192l192 192l128 -128l384 384zM448 512q-80 0 -136 56t-56 136t56 136t136 56t136 -56t56 -136t-56 -136t-136 -56z" />
    <glyph glyph-name="_426" unicode="&#xf1c6;" 
d="M640 1152v128h-128v-128h128zM768 1024v128h-128v-128h128zM640 896v128h-128v-128h128zM768 768v128h-128v-128h128zM1468 1156q28 -28 48 -76t20 -88v-1152q0 -40 -28 -68t-68 -28h-1344q-40 0 -68 28t-28 68v1600q0 40 28 68t68 28h896q40 0 88 -20t76 -48zM1024 1400
v-376h376q-10 29 -22 41l-313 313q-12 12 -41 22zM1408 -128v1024h-416q-40 0 -68 28t-28 68v416h-128v-128h-128v128h-512v-1536h1280zM781 593l107 -349q8 -27 8 -52q0 -83 -72.5 -137.5t-183.5 -54.5t-183.5 54.5t-72.5 137.5q0 25 8 52q21 63 120 396v128h128v-128h79
q22 0 39 -13t23 -34zM640 128q53 0 90.5 19t37.5 45t-37.5 45t-90.5 19t-90.5 -19t-37.5 -45t37.5 -45t90.5 -19z" />
    <glyph glyph-name="_427" unicode="&#xf1c7;" 
d="M1468 1156q28 -28 48 -76t20 -88v-1152q0 -40 -28 -68t-68 -28h-1344q-40 0 -68 28t-28 68v1600q0 40 28 68t68 28h896q40 0 88 -20t76 -48zM1024 1400v-376h376q-10 29 -22 41l-313 313q-12 12 -41 22zM1408 -128v1024h-416q-40 0 -68 28t-28 68v416h-768v-1536h1280z
M620 686q20 -8 20 -30v-544q0 -22 -20 -30q-8 -2 -12 -2q-12 0 -23 9l-166 167h-131q-14 0 -23 9t-9 23v192q0 14 9 23t23 9h131l166 167q16 15 35 7zM1037 -3q31 0 50 24q129 159 129 363t-129 363q-16 21 -43 24t-47 -14q-21 -17 -23.5 -43.5t14.5 -47.5
q100 -123 100 -282t-100 -282q-17 -21 -14.5 -47.5t23.5 -42.5q18 -15 40 -15zM826 145q27 0 47 20q87 93 87 219t-87 219q-18 19 -45 20t-46 -17t-20 -44.5t18 -46.5q52 -57 52 -131t-52 -131q-19 -20 -18 -46.5t20 -44.5q20 -17 44 -17z" />
    <glyph glyph-name="_428" unicode="&#xf1c8;" 
d="M1468 1156q28 -28 48 -76t20 -88v-1152q0 -40 -28 -68t-68 -28h-1344q-40 0 -68 28t-28 68v1600q0 40 28 68t68 28h896q40 0 88 -20t76 -48zM1024 1400v-376h376q-10 29 -22 41l-313 313q-12 12 -41 22zM1408 -128v1024h-416q-40 0 -68 28t-28 68v416h-768v-1536h1280z
M768 768q52 0 90 -38t38 -90v-384q0 -52 -38 -90t-90 -38h-384q-52 0 -90 38t-38 90v384q0 52 38 90t90 38h384zM1260 766q20 -8 20 -30v-576q0 -22 -20 -30q-8 -2 -12 -2q-14 0 -23 9l-265 266v90l265 266q9 9 23 9q4 0 12 -2z" />
    <glyph glyph-name="_429" unicode="&#xf1c9;" 
d="M1468 1156q28 -28 48 -76t20 -88v-1152q0 -40 -28 -68t-68 -28h-1344q-40 0 -68 28t-28 68v1600q0 40 28 68t68 28h896q40 0 88 -20t76 -48zM1024 1400v-376h376q-10 29 -22 41l-313 313q-12 12 -41 22zM1408 -128v1024h-416q-40 0 -68 28t-28 68v416h-768v-1536h1280z
M480 768q8 11 21 12.5t24 -6.5l51 -38q11 -8 12.5 -21t-6.5 -24l-182 -243l182 -243q8 -11 6.5 -24t-12.5 -21l-51 -38q-11 -8 -24 -6.5t-21 12.5l-226 301q-14 19 0 38zM1282 467q14 -19 0 -38l-226 -301q-8 -11 -21 -12.5t-24 6.5l-51 38q-11 8 -12.5 21t6.5 24l182 243
l-182 243q-8 11 -6.5 24t12.5 21l51 38q11 8 24 6.5t21 -12.5zM662 6q-13 2 -20.5 13t-5.5 24l138 831q2 13 13 20.5t24 5.5l63 -10q13 -2 20.5 -13t5.5 -24l-138 -831q-2 -13 -13 -20.5t-24 -5.5z" />
    <glyph glyph-name="_430" unicode="&#xf1ca;" 
d="M1497 709v-198q-101 -23 -198 -23q-65 -136 -165.5 -271t-181.5 -215.5t-128 -106.5q-80 -45 -162 3q-28 17 -60.5 43.5t-85 83.5t-102.5 128.5t-107.5 184t-105.5 244t-91.5 314.5t-70.5 390h283q26 -218 70 -398.5t104.5 -317t121.5 -235.5t140 -195q169 169 287 406
q-142 72 -223 220t-81 333q0 192 104 314.5t284 122.5q178 0 273 -105.5t95 -297.5q0 -159 -58 -286q-7 -1 -19.5 -3t-46 -2t-63 6t-62 25.5t-50.5 51.5q31 103 31 184q0 87 -29 132t-79 45q-53 0 -85 -49.5t-32 -140.5q0 -186 105 -293.5t267 -107.5q62 0 121 14z" />
    <glyph glyph-name="_431" unicode="&#xf1cb;" horiz-adv-x="1792" 
d="M216 367l603 -402v359l-334 223zM154 511l193 129l-193 129v-258zM973 -35l603 402l-269 180l-334 -223v-359zM896 458l272 182l-272 182l-272 -182zM485 733l334 223v359l-603 -402zM1445 640l193 -129v258zM1307 733l269 180l-603 402v-359zM1792 913v-546
q0 -41 -34 -64l-819 -546q-21 -13 -43 -13t-43 13l-819 546q-34 23 -34 64v546q0 41 34 64l819 546q21 13 43 13t43 -13l819 -546q34 -23 34 -64z" />
    <glyph glyph-name="_432" unicode="&#xf1cc;" horiz-adv-x="2048" 
d="M1800 764q111 -46 179.5 -145.5t68.5 -221.5q0 -164 -118 -280.5t-285 -116.5q-4 0 -11.5 0.5t-10.5 0.5h-1209h-1h-2h-5q-170 10 -288 125.5t-118 280.5q0 110 55 203t147 147q-12 39 -12 82q0 115 82 196t199 81q95 0 172 -58q75 154 222.5 248t326.5 94
q166 0 306 -80.5t221.5 -218.5t81.5 -301q0 -6 -0.5 -18t-0.5 -18zM468 498q0 -122 84 -193t208 -71q137 0 240 99q-16 20 -47.5 56.5t-43.5 50.5q-67 -65 -144 -65q-55 0 -93.5 33.5t-38.5 87.5q0 53 38.5 87t91.5 34q44 0 84.5 -21t73 -55t65 -75t69 -82t77 -75t97 -55
t121.5 -21q121 0 204.5 71.5t83.5 190.5q0 121 -84 192t-207 71q-143 0 -241 -97l93 -108q66 64 142 64q52 0 92 -33t40 -84q0 -57 -37 -91.5t-94 -34.5q-43 0 -82.5 21t-72 55t-65.5 75t-69.5 82t-77.5 75t-96.5 55t-118.5 21q-122 0 -207 -70.5t-85 -189.5z" />
    <glyph glyph-name="_433" unicode="&#xf1cd;" horiz-adv-x="1792" 
d="M896 1536q182 0 348 -71t286 -191t191 -286t71 -348t-71 -348t-191 -286t-286 -191t-348 -71t-348 71t-286 191t-191 286t-71 348t71 348t191 286t286 191t348 71zM896 1408q-190 0 -361 -90l194 -194q82 28 167 28t167 -28l194 194q-171 90 -361 90zM218 279l194 194
q-28 82 -28 167t28 167l-194 194q-90 -171 -90 -361t90 -361zM896 -128q190 0 361 90l-194 194q-82 -28 -167 -28t-167 28l-194 -194q171 -90 361 -90zM896 256q159 0 271.5 112.5t112.5 271.5t-112.5 271.5t-271.5 112.5t-271.5 -112.5t-112.5 -271.5t112.5 -271.5
t271.5 -112.5zM1380 473l194 -194q90 171 90 361t-90 361l-194 -194q28 -82 28 -167t-28 -167z" />
    <glyph glyph-name="_434" unicode="&#xf1ce;" horiz-adv-x="1792" 
d="M1760 640q0 -176 -68.5 -336t-184 -275.5t-275.5 -184t-336 -68.5t-336 68.5t-275.5 184t-184 275.5t-68.5 336q0 213 97 398.5t265 305.5t374 151v-228q-221 -45 -366.5 -221t-145.5 -406q0 -130 51 -248.5t136.5 -204t204 -136.5t248.5 -51t248.5 51t204 136.5
t136.5 204t51 248.5q0 230 -145.5 406t-366.5 221v228q206 -31 374 -151t265 -305.5t97 -398.5z" />
    <glyph glyph-name="uniF1D0" unicode="&#xf1d0;" horiz-adv-x="1792" 
d="M19 662q8 217 116 406t305 318h5q0 -1 -1 -3q-8 -8 -28 -33.5t-52 -76.5t-60 -110.5t-44.5 -135.5t-14 -150.5t39 -157.5t108.5 -154q50 -50 102 -69.5t90.5 -11.5t69.5 23.5t47 32.5l16 16q39 51 53 116.5t6.5 122.5t-21 107t-26.5 80l-14 29q-10 25 -30.5 49.5t-43 41
t-43.5 29.5t-35 19l-13 6l104 115q39 -17 78 -52t59 -61l19 -27q1 48 -18.5 103.5t-40.5 87.5l-20 31l161 183l160 -181q-33 -46 -52.5 -102.5t-22.5 -90.5l-4 -33q22 37 61.5 72.5t67.5 52.5l28 17l103 -115q-44 -14 -85 -50t-60 -65l-19 -29q-31 -56 -48 -133.5t-7 -170
t57 -156.5q33 -45 77.5 -60.5t85 -5.5t76 26.5t57.5 33.5l21 16q60 53 96.5 115t48.5 121.5t10 121.5t-18 118t-37 107.5t-45.5 93t-45 72t-34.5 47.5l-13 17q-14 13 -7 13l10 -3q40 -29 62.5 -46t62 -50t64 -58t58.5 -65t55.5 -77t45.5 -88t38 -103t23.5 -117t10.5 -136
q3 -259 -108 -465t-312 -321t-456 -115q-185 0 -351 74t-283.5 198t-184 293t-60.5 353z" />
    <glyph glyph-name="uniF1D1" unicode="&#xf1d1;" horiz-adv-x="1792" 
d="M874 -102v-66q-208 6 -385 109.5t-283 275.5l58 34q29 -49 73 -99l65 57q148 -168 368 -212l-17 -86q65 -12 121 -13zM276 428l-83 -28q22 -60 49 -112l-57 -33q-98 180 -98 385t98 385l57 -33q-30 -56 -49 -112l82 -28q-35 -100 -35 -212q0 -109 36 -212zM1528 251
l58 -34q-106 -172 -283 -275.5t-385 -109.5v66q56 1 121 13l-17 86q220 44 368 212l65 -57q44 50 73 99zM1377 805l-233 -80q14 -42 14 -85t-14 -85l232 -80q-31 -92 -98 -169l-185 162q-57 -67 -147 -85l48 -241q-52 -10 -98 -10t-98 10l48 241q-90 18 -147 85l-185 -162
q-67 77 -98 169l232 80q-14 42 -14 85t14 85l-233 80q33 93 99 169l185 -162q59 68 147 86l-48 240q44 10 98 10t98 -10l-48 -240q88 -18 147 -86l185 162q66 -76 99 -169zM874 1448v-66q-65 -2 -121 -13l17 -86q-220 -42 -368 -211l-65 56q-38 -42 -73 -98l-57 33
q106 172 282 275.5t385 109.5zM1705 640q0 -205 -98 -385l-57 33q27 52 49 112l-83 28q36 103 36 212q0 112 -35 212l82 28q-19 56 -49 112l57 33q98 -180 98 -385zM1585 1063l-57 -33q-35 56 -73 98l-65 -56q-148 169 -368 211l17 86q-56 11 -121 13v66q209 -6 385 -109.5
t282 -275.5zM1748 640q0 173 -67.5 331t-181.5 272t-272 181.5t-331 67.5t-331 -67.5t-272 -181.5t-181.5 -272t-67.5 -331t67.5 -331t181.5 -272t272 -181.5t331 -67.5t331 67.5t272 181.5t181.5 272t67.5 331zM1792 640q0 -182 -71 -348t-191 -286t-286 -191t-348 -71
t-348 71t-286 191t-191 286t-71 348t71 348t191 286t286 191t348 71t348 -71t286 -191t191 -286t71 -348z" />
    <glyph glyph-name="uniF1D2" unicode="&#xf1d2;" 
d="M582 228q0 -66 -93 -66q-107 0 -107 63q0 64 98 64q102 0 102 -61zM546 694q0 -85 -74 -85q-77 0 -77 84q0 90 77 90q36 0 55 -25.5t19 -63.5zM712 769v125q-78 -29 -135 -29q-50 29 -110 29q-86 0 -145 -57t-59 -143q0 -50 29.5 -102t73.5 -67v-3q-38 -17 -38 -85
q0 -53 41 -77v-3q-113 -37 -113 -139q0 -45 20 -78.5t54 -51t72 -25.5t81 -8q224 0 224 188q0 67 -48 99t-126 46q-27 5 -51.5 20.5t-24.5 39.5q0 44 49 52q77 15 122 70t45 134q0 24 -10 52q37 9 49 13zM771 350h137q-2 27 -2 82v387q0 46 2 69h-137q3 -23 3 -71v-392
q0 -50 -3 -75zM1280 366v121q-30 -21 -68 -21q-53 0 -53 82v225h52q9 0 26.5 -1t26.5 -1v117h-105q0 82 3 102h-140q4 -24 4 -55v-47h-60v-117q36 3 37 3q3 0 11 -0.5t12 -0.5v-2h-2v-217q0 -37 2.5 -64t11.5 -56.5t24.5 -48.5t43.5 -31t66 -12q64 0 108 24zM924 1072
q0 36 -24 63.5t-60 27.5t-60.5 -27t-24.5 -64q0 -36 25 -62.5t60 -26.5t59.5 27t24.5 62zM1536 1120v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z" />
    <glyph glyph-name="_438" unicode="&#xf1d3;" horiz-adv-x="1792" 
d="M595 22q0 100 -165 100q-158 0 -158 -104q0 -101 172 -101q151 0 151 105zM536 777q0 61 -30 102t-89 41q-124 0 -124 -145q0 -135 124 -135q119 0 119 137zM805 1101v-202q-36 -12 -79 -22q16 -43 16 -84q0 -127 -73 -216.5t-197 -112.5q-40 -8 -59.5 -27t-19.5 -58
q0 -31 22.5 -51.5t58 -32t78.5 -22t86 -25.5t78.5 -37.5t58 -64t22.5 -98.5q0 -304 -363 -304q-69 0 -130 12.5t-116 41t-87.5 82t-32.5 127.5q0 165 182 225v4q-67 41 -67 126q0 109 63 137v4q-72 24 -119.5 108.5t-47.5 165.5q0 139 95 231.5t235 92.5q96 0 178 -47
q98 0 218 47zM1123 220h-222q4 45 4 134v609q0 94 -4 128h222q-4 -33 -4 -124v-613q0 -89 4 -134zM1724 442v-196q-71 -39 -174 -39q-62 0 -107 20t-70 50t-39.5 78t-18.5 92t-4 103v351h2v4q-7 0 -19 1t-18 1q-21 0 -59 -6v190h96v76q0 54 -6 89h227q-6 -41 -6 -165h171
v-190q-15 0 -43.5 2t-42.5 2h-85v-365q0 -131 87 -131q61 0 109 33zM1148 1389q0 -58 -39 -101.5t-96 -43.5q-58 0 -98 43.5t-40 101.5q0 59 39.5 103t98.5 44q58 0 96.5 -44.5t38.5 -102.5z" />
    <glyph glyph-name="_439" unicode="&#xf1d4;" 
d="M809 532l266 499h-112l-157 -312q-24 -48 -44 -92l-42 92l-155 312h-120l263 -493v-324h101v318zM1536 1120v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z" />
    <glyph glyph-name="uniF1D5" unicode="&#xf1d5;" horiz-adv-x="1280" 
d="M842 964q0 -80 -57 -136.5t-136 -56.5q-60 0 -111 35q-62 -67 -115 -146q-247 -371 -202 -859q1 -22 -12.5 -38.5t-34.5 -18.5h-5q-20 0 -35 13.5t-17 33.5q-14 126 -3.5 247.5t29.5 217t54 186t69 155.5t74 125q61 90 132 165q-16 35 -16 77q0 80 56.5 136.5t136.5 56.5
t136.5 -56.5t56.5 -136.5zM1223 953q0 -158 -78 -292t-212.5 -212t-292.5 -78q-64 0 -131 14q-21 5 -32.5 23.5t-6.5 39.5q5 20 23 31.5t39 7.5q51 -13 108 -13q97 0 186 38t153 102t102 153t38 186t-38 186t-102 153t-153 102t-186 38t-186 -38t-153 -102t-102 -153
t-38 -186q0 -114 52 -218q10 -20 3.5 -40t-25.5 -30t-39.5 -3t-30.5 26q-64 123 -64 265q0 119 46.5 227t124.5 186t186 124t226 46q158 0 292.5 -78t212.5 -212.5t78 -292.5z" />
    <glyph glyph-name="uniF1D6" unicode="&#xf1d6;" horiz-adv-x="1792" 
d="M270 730q-8 19 -8 52q0 20 11 49t24 45q-1 22 7.5 53t22.5 43q0 139 92.5 288.5t217.5 209.5q139 66 324 66q133 0 266 -55q49 -21 90 -48t71 -56t55 -68t42 -74t32.5 -84.5t25.5 -89.5t22 -98l1 -5q55 -83 55 -150q0 -14 -9 -40t-9 -38q0 -1 1.5 -3.5t3.5 -5t2 -3.5
q77 -114 120.5 -214.5t43.5 -208.5q0 -43 -19.5 -100t-55.5 -57q-9 0 -19.5 7.5t-19 17.5t-19 26t-16 26.5t-13.5 26t-9 17.5q-1 1 -3 1l-5 -4q-59 -154 -132 -223q20 -20 61.5 -38.5t69 -41.5t35.5 -65q-2 -4 -4 -16t-7 -18q-64 -97 -302 -97q-53 0 -110.5 9t-98 20
t-104.5 30q-15 5 -23 7q-14 4 -46 4.5t-40 1.5q-41 -45 -127.5 -65t-168.5 -20q-35 0 -69 1.5t-93 9t-101 20.5t-74.5 40t-32.5 64q0 40 10 59.5t41 48.5q11 2 40.5 13t49.5 12q4 0 14 2q2 2 2 4l-2 3q-48 11 -108 105.5t-73 156.5l-5 3q-4 0 -12 -20q-18 -41 -54.5 -74.5
t-77.5 -37.5h-1q-4 0 -6 4.5t-5 5.5q-23 54 -23 100q0 275 252 466z" />
    <glyph glyph-name="uniF1D7" unicode="&#xf1d7;" horiz-adv-x="2048" 
d="M580 1075q0 41 -25 66t-66 25q-43 0 -76 -25.5t-33 -65.5q0 -39 33 -64.5t76 -25.5q41 0 66 24.5t25 65.5zM1323 568q0 28 -25.5 50t-65.5 22q-27 0 -49.5 -22.5t-22.5 -49.5q0 -28 22.5 -50.5t49.5 -22.5q40 0 65.5 22t25.5 51zM1087 1075q0 41 -24.5 66t-65.5 25
q-43 0 -76 -25.5t-33 -65.5q0 -39 33 -64.5t76 -25.5q41 0 65.5 24.5t24.5 65.5zM1722 568q0 28 -26 50t-65 22q-27 0 -49.5 -22.5t-22.5 -49.5q0 -28 22.5 -50.5t49.5 -22.5q39 0 65 22t26 51zM1456 965q-31 4 -70 4q-169 0 -311 -77t-223.5 -208.5t-81.5 -287.5
q0 -78 23 -152q-35 -3 -68 -3q-26 0 -50 1.5t-55 6.5t-44.5 7t-54.5 10.5t-50 10.5l-253 -127l72 218q-290 203 -290 490q0 169 97.5 311t264 223.5t363.5 81.5q176 0 332.5 -66t262 -182.5t136.5 -260.5zM2048 404q0 -117 -68.5 -223.5t-185.5 -193.5l55 -181l-199 109
q-150 -37 -218 -37q-169 0 -311 70.5t-223.5 191.5t-81.5 264t81.5 264t223.5 191.5t311 70.5q161 0 303 -70.5t227.5 -192t85.5 -263.5z" />
    <glyph glyph-name="_443" unicode="&#xf1d8;" horiz-adv-x="1792" 
d="M1764 1525q33 -24 27 -64l-256 -1536q-5 -29 -32 -45q-14 -8 -31 -8q-11 0 -24 5l-453 185l-242 -295q-18 -23 -49 -23q-13 0 -22 4q-19 7 -30.5 23.5t-11.5 36.5v349l864 1059l-1069 -925l-395 162q-37 14 -40 55q-2 40 32 59l1664 960q15 9 32 9q20 0 36 -11z" />
    <glyph glyph-name="_444" unicode="&#xf1d9;" horiz-adv-x="1792" 
d="M1764 1525q33 -24 27 -64l-256 -1536q-5 -29 -32 -45q-14 -8 -31 -8q-11 0 -24 5l-527 215l-298 -327q-18 -21 -47 -21q-14 0 -23 4q-19 7 -30 23.5t-11 36.5v452l-472 193q-37 14 -40 55q-3 39 32 59l1664 960q35 21 68 -2zM1422 26l221 1323l-1434 -827l336 -137
l863 639l-478 -797z" />
    <glyph glyph-name="_445" unicode="&#xf1da;" 
d="M1536 640q0 -156 -61 -298t-164 -245t-245 -164t-298 -61q-172 0 -327 72.5t-264 204.5q-7 10 -6.5 22.5t8.5 20.5l137 138q10 9 25 9q16 -2 23 -12q73 -95 179 -147t225 -52q104 0 198.5 40.5t163.5 109.5t109.5 163.5t40.5 198.5t-40.5 198.5t-109.5 163.5
t-163.5 109.5t-198.5 40.5q-98 0 -188 -35.5t-160 -101.5l137 -138q31 -30 14 -69q-17 -40 -59 -40h-448q-26 0 -45 19t-19 45v448q0 42 40 59q39 17 69 -14l130 -129q107 101 244.5 156.5t284.5 55.5q156 0 298 -61t245 -164t164 -245t61 -298zM896 928v-448q0 -14 -9 -23
t-23 -9h-320q-14 0 -23 9t-9 23v64q0 14 9 23t23 9h224v352q0 14 9 23t23 9h64q14 0 23 -9t9 -23z" />
    <glyph glyph-name="_446" unicode="&#xf1db;" 
d="M768 1280q-130 0 -248.5 -51t-204 -136.5t-136.5 -204t-51 -248.5t51 -248.5t136.5 -204t204 -136.5t248.5 -51t248.5 51t204 136.5t136.5 204t51 248.5t-51 248.5t-136.5 204t-204 136.5t-248.5 51zM1536 640q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103
t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="_447" unicode="&#xf1dc;" horiz-adv-x="1792" 
d="M1682 -128q-44 0 -132.5 3.5t-133.5 3.5q-44 0 -132 -3.5t-132 -3.5q-24 0 -37 20.5t-13 45.5q0 31 17 46t39 17t51 7t45 15q33 21 33 140l-1 391q0 21 -1 31q-13 4 -50 4h-675q-38 0 -51 -4q-1 -10 -1 -31l-1 -371q0 -142 37 -164q16 -10 48 -13t57 -3.5t45 -15
t20 -45.5q0 -26 -12.5 -48t-36.5 -22q-47 0 -139.5 3.5t-138.5 3.5q-43 0 -128 -3.5t-127 -3.5q-23 0 -35.5 21t-12.5 45q0 30 15.5 45t36 17.5t47.5 7.5t42 15q33 23 33 143l-1 57v813q0 3 0.5 26t0 36.5t-1.5 38.5t-3.5 42t-6.5 36.5t-11 31.5t-16 18q-15 10 -45 12t-53 2
t-41 14t-18 45q0 26 12 48t36 22q46 0 138.5 -3.5t138.5 -3.5q42 0 126.5 3.5t126.5 3.5q25 0 37.5 -22t12.5 -48q0 -30 -17 -43.5t-38.5 -14.5t-49.5 -4t-43 -13q-35 -21 -35 -160l1 -320q0 -21 1 -32q13 -3 39 -3h699q25 0 38 3q1 11 1 32l1 320q0 139 -35 160
q-18 11 -58.5 12.5t-66 13t-25.5 49.5q0 26 12.5 48t37.5 22q44 0 132 -3.5t132 -3.5q43 0 129 3.5t129 3.5q25 0 37.5 -22t12.5 -48q0 -30 -17.5 -44t-40 -14.5t-51.5 -3t-44 -12.5q-35 -23 -35 -161l1 -943q0 -119 34 -140q16 -10 46 -13.5t53.5 -4.5t41.5 -15.5t18 -44.5
q0 -26 -12 -48t-36 -22z" />
    <glyph glyph-name="_448" unicode="&#xf1dd;" horiz-adv-x="1280" 
d="M1278 1347v-73q0 -29 -18.5 -61t-42.5 -32q-50 0 -54 -1q-26 -6 -32 -31q-3 -11 -3 -64v-1152q0 -25 -18 -43t-43 -18h-108q-25 0 -43 18t-18 43v1218h-143v-1218q0 -25 -17.5 -43t-43.5 -18h-108q-26 0 -43.5 18t-17.5 43v496q-147 12 -245 59q-126 58 -192 179
q-64 117 -64 259q0 166 88 286q88 118 209 159q111 37 417 37h479q25 0 43 -18t18 -43z" />
    <glyph glyph-name="_449" unicode="&#xf1de;" 
d="M352 128v-128h-352v128h352zM704 256q26 0 45 -19t19 -45v-256q0 -26 -19 -45t-45 -19h-256q-26 0 -45 19t-19 45v256q0 26 19 45t45 19h256zM864 640v-128h-864v128h864zM224 1152v-128h-224v128h224zM1536 128v-128h-736v128h736zM576 1280q26 0 45 -19t19 -45v-256
q0 -26 -19 -45t-45 -19h-256q-26 0 -45 19t-19 45v256q0 26 19 45t45 19h256zM1216 768q26 0 45 -19t19 -45v-256q0 -26 -19 -45t-45 -19h-256q-26 0 -45 19t-19 45v256q0 26 19 45t45 19h256zM1536 640v-128h-224v128h224zM1536 1152v-128h-864v128h864z" />
    <glyph glyph-name="uniF1E0" unicode="&#xf1e0;" 
d="M1216 512q133 0 226.5 -93.5t93.5 -226.5t-93.5 -226.5t-226.5 -93.5t-226.5 93.5t-93.5 226.5q0 12 2 34l-360 180q-92 -86 -218 -86q-133 0 -226.5 93.5t-93.5 226.5t93.5 226.5t226.5 93.5q126 0 218 -86l360 180q-2 22 -2 34q0 133 93.5 226.5t226.5 93.5
t226.5 -93.5t93.5 -226.5t-93.5 -226.5t-226.5 -93.5q-126 0 -218 86l-360 -180q2 -22 2 -34t-2 -34l360 -180q92 86 218 86z" />
    <glyph glyph-name="_451" unicode="&#xf1e1;" 
d="M1280 341q0 88 -62.5 151t-150.5 63q-84 0 -145 -58l-241 120q2 16 2 23t-2 23l241 120q61 -58 145 -58q88 0 150.5 63t62.5 151t-62.5 150.5t-150.5 62.5t-151 -62.5t-63 -150.5q0 -7 2 -23l-241 -120q-62 57 -145 57q-88 0 -150.5 -62.5t-62.5 -150.5t62.5 -150.5
t150.5 -62.5q83 0 145 57l241 -120q-2 -16 -2 -23q0 -88 63 -150.5t151 -62.5t150.5 62.5t62.5 150.5zM1536 1120v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z" />
    <glyph glyph-name="_452" unicode="&#xf1e2;" horiz-adv-x="1792" 
d="M571 947q-10 25 -34 35t-49 0q-108 -44 -191 -127t-127 -191q-10 -25 0 -49t35 -34q13 -5 24 -5q42 0 60 40q34 84 98.5 148.5t148.5 98.5q25 11 35 35t0 49zM1513 1303l46 -46l-244 -243l68 -68q19 -19 19 -45.5t-19 -45.5l-64 -64q89 -161 89 -343q0 -143 -55.5 -273.5
t-150 -225t-225 -150t-273.5 -55.5t-273.5 55.5t-225 150t-150 225t-55.5 273.5t55.5 273.5t150 225t225 150t273.5 55.5q182 0 343 -89l64 64q19 19 45.5 19t45.5 -19l68 -68zM1521 1359q-10 -10 -22 -10q-13 0 -23 10l-91 90q-9 10 -9 23t9 23q10 9 23 9t23 -9l90 -91
q10 -9 10 -22.5t-10 -22.5zM1751 1129q-11 -9 -23 -9t-23 9l-90 91q-10 9 -10 22.5t10 22.5q9 10 22.5 10t22.5 -10l91 -90q9 -10 9 -23t-9 -23zM1792 1312q0 -14 -9 -23t-23 -9h-96q-14 0 -23 9t-9 23t9 23t23 9h96q14 0 23 -9t9 -23zM1600 1504v-96q0 -14 -9 -23t-23 -9
t-23 9t-9 23v96q0 14 9 23t23 9t23 -9t9 -23zM1751 1449l-91 -90q-10 -10 -22 -10q-13 0 -23 10q-10 9 -10 22.5t10 22.5l90 91q10 9 23 9t23 -9q9 -10 9 -23t-9 -23z" />
    <glyph glyph-name="_453" unicode="&#xf1e3;" horiz-adv-x="1792" 
d="M609 720l287 208l287 -208l-109 -336h-355zM896 1536q182 0 348 -71t286 -191t191 -286t71 -348t-71 -348t-191 -286t-286 -191t-348 -71t-348 71t-286 191t-191 286t-71 348t71 348t191 286t286 191t348 71zM1515 186q149 203 149 454v3l-102 -89l-240 224l63 323
l134 -12q-150 206 -389 282l53 -124l-287 -159l-287 159l53 124q-239 -76 -389 -282l135 12l62 -323l-240 -224l-102 89v-3q0 -251 149 -454l30 132l326 -40l139 -298l-116 -69q117 -39 240 -39t240 39l-116 69l139 298l326 40z" />
    <glyph glyph-name="_454" unicode="&#xf1e4;" horiz-adv-x="1792" 
d="M448 224v-192q0 -14 -9 -23t-23 -9h-192q-14 0 -23 9t-9 23v192q0 14 9 23t23 9h192q14 0 23 -9t9 -23zM256 608v-192q0 -14 -9 -23t-23 -9h-192q-14 0 -23 9t-9 23v192q0 14 9 23t23 9h192q14 0 23 -9t9 -23zM832 224v-192q0 -14 -9 -23t-23 -9h-192q-14 0 -23 9t-9 23
v192q0 14 9 23t23 9h192q14 0 23 -9t9 -23zM640 608v-192q0 -14 -9 -23t-23 -9h-192q-14 0 -23 9t-9 23v192q0 14 9 23t23 9h192q14 0 23 -9t9 -23zM66 768q-28 0 -47 19t-19 46v129h514v-129q0 -27 -19 -46t-46 -19h-383zM1216 224v-192q0 -14 -9 -23t-23 -9h-192
q-14 0 -23 9t-9 23v192q0 14 9 23t23 9h192q14 0 23 -9t9 -23zM1024 608v-192q0 -14 -9 -23t-23 -9h-192q-14 0 -23 9t-9 23v192q0 14 9 23t23 9h192q14 0 23 -9t9 -23zM1600 224v-192q0 -14 -9 -23t-23 -9h-192q-14 0 -23 9t-9 23v192q0 14 9 23t23 9h192q14 0 23 -9t9 -23
zM1408 608v-192q0 -14 -9 -23t-23 -9h-192q-14 0 -23 9t-9 23v192q0 14 9 23t23 9h192q14 0 23 -9t9 -23zM1792 1016v-13h-514v10q0 104 -382 102q-382 -1 -382 -102v-10h-514v13q0 17 8.5 43t34 64t65.5 75.5t110.5 76t160 67.5t224 47.5t293.5 18.5t293 -18.5t224 -47.5
t160.5 -67.5t110.5 -76t65.5 -75.5t34 -64t8.5 -43zM1792 608v-192q0 -14 -9 -23t-23 -9h-192q-14 0 -23 9t-9 23v192q0 14 9 23t23 9h192q14 0 23 -9t9 -23zM1792 962v-129q0 -27 -19 -46t-46 -19h-384q-27 0 -46 19t-19 46v129h514z" />
    <glyph glyph-name="_455" unicode="&#xf1e5;" horiz-adv-x="1792" 
d="M704 1216v-768q0 -26 -19 -45t-45 -19v-576q0 -26 -19 -45t-45 -19h-512q-26 0 -45 19t-19 45v512l249 873q7 23 31 23h424zM1024 1216v-704h-256v704h256zM1792 320v-512q0 -26 -19 -45t-45 -19h-512q-26 0 -45 19t-19 45v576q-26 0 -45 19t-19 45v768h424q24 0 31 -23z
M736 1504v-224h-352v224q0 14 9 23t23 9h288q14 0 23 -9t9 -23zM1408 1504v-224h-352v224q0 14 9 23t23 9h288q14 0 23 -9t9 -23z" />
    <glyph glyph-name="_456" unicode="&#xf1e6;" horiz-adv-x="1792" 
d="M1755 1083q37 -38 37 -90.5t-37 -90.5l-401 -400l150 -150l-160 -160q-163 -163 -389.5 -186.5t-411.5 100.5l-362 -362h-181v181l362 362q-124 185 -100.5 411.5t186.5 389.5l160 160l150 -150l400 401q38 37 91 37t90 -37t37 -90.5t-37 -90.5l-400 -401l234 -234
l401 400q38 37 91 37t90 -37z" />
    <glyph glyph-name="_457" unicode="&#xf1e7;" horiz-adv-x="1792" 
d="M873 796q0 -83 -63.5 -142.5t-152.5 -59.5t-152.5 59.5t-63.5 142.5q0 84 63.5 143t152.5 59t152.5 -59t63.5 -143zM1375 796q0 -83 -63 -142.5t-153 -59.5q-89 0 -152.5 59.5t-63.5 142.5q0 84 63.5 143t152.5 59q90 0 153 -59t63 -143zM1600 616v667q0 87 -32 123.5
t-111 36.5h-1112q-83 0 -112.5 -34t-29.5 -126v-673q43 -23 88.5 -40t81 -28t81 -18.5t71 -11t70 -4t58.5 -0.5t56.5 2t44.5 2q68 1 95 -27q6 -6 10 -9q26 -25 61 -51q7 91 118 87q5 0 36.5 -1.5t43 -2t45.5 -1t53 1t54.5 4.5t61 8.5t62 13.5t67 19.5t67.5 27t72 34.5z
M1763 621q-121 -149 -372 -252q84 -285 -23 -465q-66 -113 -183 -148q-104 -32 -182 15q-86 51 -82 164l-1 326v1q-8 2 -24.5 6t-23.5 5l-1 -338q4 -114 -83 -164q-79 -47 -183 -15q-117 36 -182 150q-105 180 -22 463q-251 103 -372 252q-25 37 -4 63t60 -1q4 -2 11.5 -7
t10.5 -8v694q0 72 47 123t114 51h1257q67 0 114 -51t47 -123v-694l21 15q39 27 60 1t-4 -63z" />
    <glyph glyph-name="_458" unicode="&#xf1e8;" horiz-adv-x="1792" 
d="M896 1102v-434h-145v434h145zM1294 1102v-434h-145v434h145zM1294 342l253 254v795h-1194v-1049h326v-217l217 217h398zM1692 1536v-1013l-434 -434h-326l-217 -217h-217v217h-398v1158l109 289h1483z" />
    <glyph glyph-name="_459" unicode="&#xf1e9;" 
d="M773 217v-127q-1 -292 -6 -305q-12 -32 -51 -40q-54 -9 -181.5 38t-162.5 89q-13 15 -17 36q-1 12 4 26q4 10 34 47t181 216q1 0 60 70q15 19 39.5 24.5t49.5 -3.5q24 -10 37.5 -29t12.5 -42zM624 468q-3 -55 -52 -70l-120 -39q-275 -88 -292 -88q-35 2 -54 36
q-12 25 -17 75q-8 76 1 166.5t30 124.5t56 32q13 0 202 -77q71 -29 115 -47l84 -34q23 -9 35.5 -30.5t11.5 -48.5zM1450 171q-7 -54 -91.5 -161t-135.5 -127q-37 -14 -63 7q-14 10 -184 287l-47 77q-14 21 -11.5 46t19.5 46q35 43 83 26q1 -1 119 -40q203 -66 242 -79.5
t47 -20.5q28 -22 22 -61zM778 803q5 -102 -54 -122q-58 -17 -114 71l-378 598q-8 35 19 62q41 43 207.5 89.5t224.5 31.5q40 -10 49 -45q3 -18 22 -305.5t24 -379.5zM1440 695q3 -39 -26 -59q-15 -10 -329 -86q-67 -15 -91 -23l1 2q-23 -6 -46 4t-37 32q-30 47 0 87
q1 1 75 102q125 171 150 204t34 39q28 19 65 2q48 -23 123 -133.5t81 -167.5v-3z" />
    <glyph glyph-name="_460" unicode="&#xf1ea;" horiz-adv-x="2048" 
d="M1024 1024h-384v-384h384v384zM1152 384v-128h-640v128h640zM1152 1152v-640h-640v640h640zM1792 384v-128h-512v128h512zM1792 640v-128h-512v128h512zM1792 896v-128h-512v128h512zM1792 1152v-128h-512v128h512zM256 192v960h-128v-960q0 -26 19 -45t45 -19t45 19
t19 45zM1920 192v1088h-1536v-1088q0 -33 -11 -64h1483q26 0 45 19t19 45zM2048 1408v-1216q0 -80 -56 -136t-136 -56h-1664q-80 0 -136 56t-56 136v1088h256v128h1792z" />
    <glyph glyph-name="_461" unicode="&#xf1eb;" horiz-adv-x="2048" 
d="M1024 13q-20 0 -93 73.5t-73 93.5q0 32 62.5 54t103.5 22t103.5 -22t62.5 -54q0 -20 -73 -93.5t-93 -73.5zM1294 284q-2 0 -40 25t-101.5 50t-128.5 25t-128.5 -25t-101 -50t-40.5 -25q-18 0 -93.5 75t-75.5 93q0 13 10 23q78 77 196 121t233 44t233 -44t196 -121
q10 -10 10 -23q0 -18 -75.5 -93t-93.5 -75zM1567 556q-11 0 -23 8q-136 105 -252 154.5t-268 49.5q-85 0 -170.5 -22t-149 -53t-113.5 -62t-79 -53t-31 -22q-17 0 -92 75t-75 93q0 12 10 22q132 132 320 205t380 73t380 -73t320 -205q10 -10 10 -22q0 -18 -75 -93t-92 -75z
M1838 827q-11 0 -22 9q-179 157 -371.5 236.5t-420.5 79.5t-420.5 -79.5t-371.5 -236.5q-11 -9 -22 -9q-17 0 -92.5 75t-75.5 93q0 13 10 23q187 186 445 288t527 102t527 -102t445 -288q10 -10 10 -23q0 -18 -75.5 -93t-92.5 -75z" />
    <glyph glyph-name="_462" unicode="&#xf1ec;" horiz-adv-x="1792" 
d="M384 0q0 53 -37.5 90.5t-90.5 37.5t-90.5 -37.5t-37.5 -90.5t37.5 -90.5t90.5 -37.5t90.5 37.5t37.5 90.5zM768 0q0 53 -37.5 90.5t-90.5 37.5t-90.5 -37.5t-37.5 -90.5t37.5 -90.5t90.5 -37.5t90.5 37.5t37.5 90.5zM384 384q0 53 -37.5 90.5t-90.5 37.5t-90.5 -37.5
t-37.5 -90.5t37.5 -90.5t90.5 -37.5t90.5 37.5t37.5 90.5zM1152 0q0 53 -37.5 90.5t-90.5 37.5t-90.5 -37.5t-37.5 -90.5t37.5 -90.5t90.5 -37.5t90.5 37.5t37.5 90.5zM768 384q0 53 -37.5 90.5t-90.5 37.5t-90.5 -37.5t-37.5 -90.5t37.5 -90.5t90.5 -37.5t90.5 37.5
t37.5 90.5zM384 768q0 53 -37.5 90.5t-90.5 37.5t-90.5 -37.5t-37.5 -90.5t37.5 -90.5t90.5 -37.5t90.5 37.5t37.5 90.5zM1152 384q0 53 -37.5 90.5t-90.5 37.5t-90.5 -37.5t-37.5 -90.5t37.5 -90.5t90.5 -37.5t90.5 37.5t37.5 90.5zM768 768q0 53 -37.5 90.5t-90.5 37.5
t-90.5 -37.5t-37.5 -90.5t37.5 -90.5t90.5 -37.5t90.5 37.5t37.5 90.5zM1536 0v384q0 52 -38 90t-90 38t-90 -38t-38 -90v-384q0 -52 38 -90t90 -38t90 38t38 90zM1152 768q0 53 -37.5 90.5t-90.5 37.5t-90.5 -37.5t-37.5 -90.5t37.5 -90.5t90.5 -37.5t90.5 37.5t37.5 90.5z
M1536 1088v256q0 26 -19 45t-45 19h-1280q-26 0 -45 -19t-19 -45v-256q0 -26 19 -45t45 -19h1280q26 0 45 19t19 45zM1536 768q0 53 -37.5 90.5t-90.5 37.5t-90.5 -37.5t-37.5 -90.5t37.5 -90.5t90.5 -37.5t90.5 37.5t37.5 90.5zM1664 1408v-1536q0 -52 -38 -90t-90 -38
h-1408q-52 0 -90 38t-38 90v1536q0 52 38 90t90 38h1408q52 0 90 -38t38 -90z" />
    <glyph glyph-name="_463" unicode="&#xf1ed;" 
d="M1519 890q18 -84 -4 -204q-87 -444 -565 -444h-44q-25 0 -44 -16.5t-24 -42.5l-4 -19l-55 -346l-2 -15q-5 -26 -24.5 -42.5t-44.5 -16.5h-251q-21 0 -33 15t-9 36q9 56 26.5 168t26.5 168t27 167.5t27 167.5q5 37 43 37h131q133 -2 236 21q175 39 287 144q102 95 155 246
q24 70 35 133q1 6 2.5 7.5t3.5 1t6 -3.5q79 -59 98 -162zM1347 1172q0 -107 -46 -236q-80 -233 -302 -315q-113 -40 -252 -42q0 -1 -90 -1l-90 1q-100 0 -118 -96q-2 -8 -85 -530q-1 -10 -12 -10h-295q-22 0 -36.5 16.5t-11.5 38.5l232 1471q5 29 27.5 48t51.5 19h598
q34 0 97.5 -13t111.5 -32q107 -41 163.5 -123t56.5 -196z" />
    <glyph glyph-name="_464" unicode="&#xf1ee;" horiz-adv-x="1792" 
d="M441 864q33 0 52 -26q266 -364 362 -774h-446q-127 441 -367 749q-12 16 -3 33.5t29 17.5h373zM1000 507q-49 -199 -125 -393q-79 310 -256 594q40 221 44 449q211 -340 337 -650zM1099 1216q235 -324 384.5 -698.5t184.5 -773.5h-451q-41 665 -553 1472h435zM1792 640
q0 -424 -101 -812q-67 560 -359 1083q-25 301 -106 584q-4 16 5.5 28.5t25.5 12.5h359q21 0 38.5 -13t22.5 -33q115 -409 115 -850z" />
    <glyph glyph-name="uniF1F0" unicode="&#xf1f0;" horiz-adv-x="2304" 
d="M1975 546h-138q14 37 66 179l3 9q4 10 10 26t9 26l12 -55zM531 611l-58 295q-11 54 -75 54h-268l-2 -13q311 -79 403 -336zM710 960l-162 -438l-17 89q-26 70 -85 129.5t-131 88.5l135 -510h175l261 641h-176zM849 318h166l104 642h-166zM1617 944q-69 27 -149 27
q-123 0 -201 -59t-79 -153q-1 -102 145 -174q48 -23 67 -41t19 -39q0 -30 -30 -46t-69 -16q-86 0 -156 33l-22 11l-23 -144q74 -34 185 -34q130 -1 208.5 59t80.5 160q0 106 -140 174q-49 25 -71 42t-22 38q0 22 24.5 38.5t70.5 16.5q70 1 124 -24l15 -8zM2042 960h-128
q-65 0 -87 -54l-246 -588h174l35 96h212q5 -22 20 -96h154zM2304 1280v-1280q0 -52 -38 -90t-90 -38h-2048q-52 0 -90 38t-38 90v1280q0 52 38 90t90 38h2048q52 0 90 -38t38 -90z" />
    <glyph glyph-name="_466" unicode="&#xf1f1;" horiz-adv-x="2304" 
d="M1119 1195q-128 85 -281 85q-103 0 -197.5 -40.5t-162.5 -108.5t-108.5 -162t-40.5 -197q0 -104 40.5 -198t108.5 -162t162 -108.5t198 -40.5q153 0 281 85q-131 107 -178 265.5t0.5 316.5t177.5 265zM1152 1171q-126 -99 -172 -249.5t-0.5 -300.5t172.5 -249
q127 99 172.5 249t-0.5 300.5t-172 249.5zM1185 1195q130 -107 177.5 -265.5t0.5 -317t-178 -264.5q128 -85 281 -85q104 0 198 40.5t162 108.5t108.5 162t40.5 198q0 103 -40.5 197t-108.5 162t-162.5 108.5t-197.5 40.5q-153 0 -281 -85zM1926 473h7v3h-17v-3h7v-17h3v17z
M1955 456h4v20h-5l-6 -13l-6 13h-5v-20h3v15l6 -13h4l5 13v-15zM1947 16v-2h-2h-3v3h3h2v-1zM1947 7h3l-4 5h2l1 1q1 1 1 3t-1 3l-1 1h-3h-6v-13h3v5h1zM685 75q0 19 11 31t30 12q18 0 29 -12.5t11 -30.5q0 -19 -11 -31t-29 -12q-19 0 -30 12t-11 31zM1158 119q30 0 35 -32
h-70q5 32 35 32zM1514 75q0 19 11 31t29 12t29.5 -12.5t11.5 -30.5q0 -19 -11 -31t-30 -12q-18 0 -29 12t-11 31zM1786 75q0 18 11.5 30.5t29.5 12.5t29.5 -12.5t11.5 -30.5q0 -19 -11.5 -31t-29.5 -12t-29.5 12.5t-11.5 30.5zM1944 3q-2 0 -4 1q-1 0 -3 2t-2 3q-1 2 -1 4
q0 3 1 4q0 2 2 4l1 1q2 0 2 1q2 1 4 1q3 0 4 -1l4 -2l2 -4v-1q1 -2 1 -3l-1 -1v-3t-1 -1l-1 -2q-2 -2 -4 -2q-1 -1 -4 -1zM599 7h30v85q0 24 -14.5 38.5t-39.5 15.5q-32 0 -47 -24q-14 24 -45 24q-24 0 -39 -20v16h-30v-135h30v75q0 36 33 36q30 0 30 -36v-75h29v75
q0 36 33 36q30 0 30 -36v-75zM765 7h29v68v67h-29v-16q-17 20 -43 20q-29 0 -48 -20t-19 -51t19 -51t48 -20q28 0 43 20v-17zM943 48q0 34 -47 40l-14 2q-23 4 -23 14q0 15 25 15q23 0 43 -11l12 24q-22 14 -55 14q-26 0 -41 -12t-15 -32q0 -33 47 -39l13 -2q24 -4 24 -14
q0 -17 -31 -17q-25 0 -45 14l-13 -23q25 -17 58 -17q29 0 45.5 12t16.5 32zM1073 14l-8 25q-13 -7 -26 -7q-19 0 -19 22v61h48v27h-48v41h-30v-41h-28v-27h28v-61q0 -50 47 -50q21 0 36 10zM1159 146q-29 0 -48 -20t-19 -51q0 -32 19.5 -51.5t49.5 -19.5q33 0 55 19l-14 22
q-18 -15 -39 -15q-34 0 -41 33h101v12q0 32 -18 51.5t-46 19.5zM1318 146q-23 0 -35 -20v16h-30v-135h30v76q0 35 29 35q10 0 18 -4l9 28q-9 4 -21 4zM1348 75q0 -31 19.5 -51t52.5 -20q29 0 48 16l-14 24q-18 -13 -35 -12q-18 0 -29.5 12t-11.5 31t11.5 31t29.5 12
q19 0 35 -12l14 24q-20 16 -48 16q-33 0 -52.5 -20t-19.5 -51zM1593 7h30v68v67h-30v-16q-15 20 -42 20q-29 0 -48.5 -20t-19.5 -51t19.5 -51t48.5 -20q28 0 42 20v-17zM1726 146q-23 0 -35 -20v16h-29v-135h29v76q0 35 29 35q10 0 18 -4l9 28q-8 4 -21 4zM1866 7h29v68v122
h-29v-71q-15 20 -43 20t-47.5 -20.5t-19.5 -50.5t19.5 -50.5t47.5 -20.5q29 0 43 20v-17zM1944 27l-2 -1h-3q-2 -1 -4 -3q-3 -1 -3 -4q-1 -2 -1 -6q0 -3 1 -5q0 -2 3 -4q2 -2 4 -3t5 -1q4 0 6 1q0 1 2 2l2 1q1 1 3 4q1 2 1 5q0 4 -1 6q-1 1 -3 4q0 1 -2 2l-2 1q-1 0 -3 0.5
t-3 0.5zM2304 1280v-1280q0 -52 -38 -90t-90 -38h-2048q-52 0 -90 38t-38 90v1280q0 52 38 90t90 38h2048q52 0 90 -38t38 -90z" />
    <glyph glyph-name="_467" unicode="&#xf1f2;" horiz-adv-x="2304" 
d="M313 759q0 -51 -36 -84q-29 -26 -89 -26h-17v220h17q61 0 89 -27q36 -31 36 -83zM2089 824q0 -52 -64 -52h-19v101h20q63 0 63 -49zM380 759q0 74 -50 120.5t-129 46.5h-95v-333h95q74 0 119 38q60 51 60 128zM410 593h65v333h-65v-333zM730 694q0 40 -20.5 62t-75.5 42
q-29 10 -39.5 19t-10.5 23q0 16 13.5 26.5t34.5 10.5q29 0 53 -27l34 44q-41 37 -98 37q-44 0 -74 -27.5t-30 -67.5q0 -35 18 -55.5t64 -36.5q37 -13 45 -19q19 -12 19 -34q0 -20 -14 -33.5t-36 -13.5q-48 0 -71 44l-42 -40q44 -64 115 -64q51 0 83 30.5t32 79.5zM1008 604
v77q-37 -37 -78 -37q-49 0 -80.5 32.5t-31.5 82.5q0 48 31.5 81.5t77.5 33.5q43 0 81 -38v77q-40 20 -80 20q-74 0 -125.5 -50.5t-51.5 -123.5t51 -123.5t125 -50.5q42 0 81 19zM2240 0v527q-65 -40 -144.5 -84t-237.5 -117t-329.5 -137.5t-417.5 -134.5t-504 -118h1569
q26 0 45 19t19 45zM1389 757q0 75 -53 128t-128 53t-128 -53t-53 -128t53 -128t128 -53t128 53t53 128zM1541 584l144 342h-71l-90 -224l-89 224h-71l142 -342h35zM1714 593h184v56h-119v90h115v56h-115v74h119v57h-184v-333zM2105 593h80l-105 140q76 16 76 94q0 47 -31 73
t-87 26h-97v-333h65v133h9zM2304 1274v-1268q0 -56 -38.5 -95t-93.5 -39h-2040q-55 0 -93.5 39t-38.5 95v1268q0 56 38.5 95t93.5 39h2040q55 0 93.5 -39t38.5 -95z" />
    <glyph glyph-name="f1f3" unicode="&#xf1f3;" horiz-adv-x="2304" 
d="M119 854h89l-45 108zM740 328l74 79l-70 79h-163v-49h142v-55h-142v-54h159zM898 406l99 -110v217zM1186 453q0 33 -40 33h-84v-69h83q41 0 41 36zM1475 457q0 29 -42 29h-82v-61h81q43 0 43 32zM1197 923q0 29 -42 29h-82v-60h81q43 0 43 31zM1656 854h89l-44 108z
M699 1009v-271h-66v212l-94 -212h-57l-94 212v-212h-132l-25 60h-135l-25 -60h-70l116 271h96l110 -257v257h106l85 -184l77 184h108zM1255 453q0 -20 -5.5 -35t-14 -25t-22.5 -16.5t-26 -10t-31.5 -4.5t-31.5 -1t-32.5 0.5t-29.5 0.5v-91h-126l-80 90l-83 -90h-256v271h260
l80 -89l82 89h207q109 0 109 -89zM964 794v-56h-217v271h217v-57h-152v-49h148v-55h-148v-54h152zM2304 235v-229q0 -55 -38.5 -94.5t-93.5 -39.5h-2040q-55 0 -93.5 39.5t-38.5 94.5v678h111l25 61h55l25 -61h218v46l19 -46h113l20 47v-47h541v99l10 1q10 0 10 -14v-86h279
v23q23 -12 55 -18t52.5 -6.5t63 0.5t51.5 1l25 61h56l25 -61h227v58l34 -58h182v378h-180v-44l-25 44h-185v-44l-23 44h-249q-69 0 -109 -22v22h-172v-22q-24 22 -73 22h-628l-43 -97l-43 97h-198v-44l-22 44h-169l-78 -179v391q0 55 38.5 94.5t93.5 39.5h2040
q55 0 93.5 -39.5t38.5 -94.5v-678h-120q-51 0 -81 -22v22h-177q-55 0 -78 -22v22h-316v-22q-31 22 -87 22h-209v-22q-23 22 -91 22h-234l-54 -58l-50 58h-349v-378h343l55 59l52 -59h211v89h21q59 0 90 13v-102h174v99h8q8 0 10 -2t2 -10v-87h529q57 0 88 24v-24h168
q60 0 95 17zM1546 469q0 -23 -12 -43t-34 -29q25 -9 34 -26t9 -46v-54h-65v45q0 33 -12 43.5t-46 10.5h-69v-99h-65v271h154q48 0 77 -15t29 -58zM1269 936q0 -24 -12.5 -44t-33.5 -29q26 -9 34.5 -25.5t8.5 -46.5v-53h-65q0 9 0.5 26.5t0 25t-3 18.5t-8.5 16t-17.5 8.5
t-29.5 3.5h-70v-98h-64v271l153 -1q49 0 78 -14.5t29 -57.5zM1798 327v-56h-216v271h216v-56h-151v-49h148v-55h-148v-54zM1372 1009v-271h-66v271h66zM2065 357q0 -86 -102 -86h-126v58h126q34 0 34 25q0 16 -17 21t-41.5 5t-49.5 3.5t-42 22.5t-17 55q0 39 26 60t66 21
h130v-57h-119q-36 0 -36 -25q0 -16 17.5 -20.5t42 -4t49 -2.5t42 -21.5t17.5 -54.5zM2304 407v-101q-24 -35 -88 -35h-125v58h125q33 0 33 25q0 13 -12.5 19t-31 5.5t-40 2t-40 8t-31 24t-12.5 48.5q0 39 26.5 60t66.5 21h129v-57h-118q-36 0 -36 -25q0 -20 29 -22t68.5 -5
t56.5 -26zM2139 1008v-270h-92l-122 203v-203h-132l-26 60h-134l-25 -60h-75q-129 0 -129 133q0 138 133 138h63v-59q-7 0 -28 1t-28.5 0.5t-23 -2t-21.5 -6.5t-14.5 -13.5t-11.5 -23t-3 -33.5q0 -38 13.5 -58t49.5 -20h29l92 213h97l109 -256v256h99l114 -188v188h66z" />
    <glyph glyph-name="_469" unicode="&#xf1f4;" horiz-adv-x="2304" 
d="M745 630q0 -37 -25.5 -61.5t-62.5 -24.5q-29 0 -46.5 16t-17.5 44q0 37 25 62.5t62 25.5q28 0 46.5 -16.5t18.5 -45.5zM1530 779q0 -42 -22 -57t-66 -15l-32 -1l17 107q2 11 13 11h18q22 0 35 -2t25 -12.5t12 -30.5zM1881 630q0 -36 -25.5 -61t-61.5 -25q-29 0 -47 16
t-18 44q0 37 25 62.5t62 25.5q28 0 46.5 -16.5t18.5 -45.5zM513 801q0 59 -38.5 85.5t-100.5 26.5h-160q-19 0 -21 -19l-65 -408q-1 -6 3 -11t10 -5h76q20 0 22 19l18 110q1 8 7 13t15 6.5t17 1.5t19 -1t14 -1q86 0 135 48.5t49 134.5zM822 489l41 261q1 6 -3 11t-10 5h-76
q-14 0 -17 -33q-27 40 -95 40q-72 0 -122.5 -54t-50.5 -127q0 -59 34.5 -94t92.5 -35q28 0 58 12t48 32q-4 -12 -4 -21q0 -16 13 -16h69q19 0 22 19zM1269 752q0 5 -4 9.5t-9 4.5h-77q-11 0 -18 -10l-106 -156l-44 150q-5 16 -22 16h-75q-5 0 -9 -4.5t-4 -9.5q0 -2 19.5 -59
t42 -123t23.5 -70q-82 -112 -82 -120q0 -13 13 -13h77q11 0 18 10l255 368q2 2 2 7zM1649 801q0 59 -38.5 85.5t-100.5 26.5h-159q-20 0 -22 -19l-65 -408q-1 -6 3 -11t10 -5h82q12 0 16 13l18 116q1 8 7 13t15 6.5t17 1.5t19 -1t14 -1q86 0 135 48.5t49 134.5zM1958 489
l41 261q1 6 -3 11t-10 5h-76q-14 0 -17 -33q-26 40 -95 40q-72 0 -122.5 -54t-50.5 -127q0 -59 34.5 -94t92.5 -35q29 0 59 12t47 32q0 -1 -2 -9t-2 -12q0 -16 13 -16h69q19 0 22 19zM2176 898v1q0 14 -13 14h-74q-11 0 -13 -11l-65 -416l-1 -2q0 -5 4 -9.5t10 -4.5h66
q19 0 21 19zM392 764q-5 -35 -26 -46t-60 -11l-33 -1l17 107q2 11 13 11h19q40 0 58 -11.5t12 -48.5zM2304 1280v-1280q0 -52 -38 -90t-90 -38h-2048q-52 0 -90 38t-38 90v1280q0 52 38 90t90 38h2048q52 0 90 -38t38 -90z" />
    <glyph glyph-name="_470" unicode="&#xf1f5;" horiz-adv-x="2304" 
d="M1597 633q0 -69 -21 -106q-19 -35 -52 -35q-23 0 -41 9v224q29 30 57 30q57 0 57 -122zM2035 669h-110q6 98 56 98q51 0 54 -98zM476 534q0 59 -33 91.5t-101 57.5q-36 13 -52 24t-16 25q0 26 38 26q58 0 124 -33l18 112q-67 32 -149 32q-77 0 -123 -38q-48 -39 -48 -109
q0 -58 32.5 -90.5t99.5 -56.5q39 -14 54.5 -25.5t15.5 -27.5q0 -31 -48 -31q-29 0 -70 12.5t-72 30.5l-18 -113q72 -41 168 -41q81 0 129 37q51 41 51 117zM771 749l19 111h-96v135l-129 -21l-18 -114l-46 -8l-17 -103h62v-219q0 -84 44 -120q38 -30 111 -30q32 0 79 11v118
q-32 -7 -44 -7q-42 0 -42 50v197h77zM1087 724v139q-15 3 -28 3q-32 0 -55.5 -16t-33.5 -46l-10 56h-131v-471h150v306q26 31 82 31q16 0 26 -2zM1124 389h150v471h-150v-471zM1746 638q0 122 -45 179q-40 52 -111 52q-64 0 -117 -56l-8 47h-132v-645l150 25v151
q36 -11 68 -11q83 0 134 56q61 65 61 202zM1278 986q0 33 -23 56t-56 23t-56 -23t-23 -56t23 -56.5t56 -23.5t56 23.5t23 56.5zM2176 629q0 113 -48 176q-50 64 -144 64q-96 0 -151.5 -66t-55.5 -180q0 -128 63 -188q55 -55 161 -55q101 0 160 40l-16 103q-57 -31 -128 -31
q-43 0 -63 19q-23 19 -28 66h248q2 14 2 52zM2304 1280v-1280q0 -52 -38 -90t-90 -38h-2048q-52 0 -90 38t-38 90v1280q0 52 38 90t90 38h2048q52 0 90 -38t38 -90z" />
    <glyph glyph-name="_471" unicode="&#xf1f6;" horiz-adv-x="2048" 
d="M1558 684q61 -356 298 -556q0 -52 -38 -90t-90 -38h-448q0 -106 -75 -181t-181 -75t-180.5 74.5t-75.5 180.5zM1024 -176q16 0 16 16t-16 16q-59 0 -101.5 42.5t-42.5 101.5q0 16 -16 16t-16 -16q0 -73 51.5 -124.5t124.5 -51.5zM2026 1424q8 -10 7.5 -23.5t-10.5 -22.5
l-1872 -1622q-10 -8 -23.5 -7t-21.5 11l-84 96q-8 10 -7.5 23.5t10.5 21.5l186 161q-19 32 -19 66q50 42 91 88t85 119.5t74.5 158.5t50 206t19.5 260q0 152 117 282.5t307 158.5q-8 19 -8 39q0 40 28 68t68 28t68 -28t28 -68q0 -20 -8 -39q124 -18 219 -82.5t148 -157.5
l418 363q10 8 23.5 7t21.5 -11z" />
    <glyph glyph-name="_472" unicode="&#xf1f7;" horiz-adv-x="2048" 
d="M1040 -160q0 16 -16 16q-59 0 -101.5 42.5t-42.5 101.5q0 16 -16 16t-16 -16q0 -73 51.5 -124.5t124.5 -51.5q16 0 16 16zM503 315l877 760q-42 88 -132.5 146.5t-223.5 58.5q-93 0 -169.5 -31.5t-121.5 -80.5t-69 -103t-24 -105q0 -384 -137 -645zM1856 128
q0 -52 -38 -90t-90 -38h-448q0 -106 -75 -181t-181 -75t-180.5 74.5t-75.5 180.5l149 129h757q-166 187 -227 459l111 97q61 -356 298 -556zM1942 1520l84 -96q8 -10 7.5 -23.5t-10.5 -22.5l-1872 -1622q-10 -8 -23.5 -7t-21.5 11l-84 96q-8 10 -7.5 23.5t10.5 21.5l186 161
q-19 32 -19 66q50 42 91 88t85 119.5t74.5 158.5t50 206t19.5 260q0 152 117 282.5t307 158.5q-8 19 -8 39q0 40 28 68t68 28t68 -28t28 -68q0 -20 -8 -39q124 -18 219 -82.5t148 -157.5l418 363q10 8 23.5 7t21.5 -11z" />
    <glyph glyph-name="_473" unicode="&#xf1f8;" horiz-adv-x="1408" 
d="M512 160v704q0 14 -9 23t-23 9h-64q-14 0 -23 -9t-9 -23v-704q0 -14 9 -23t23 -9h64q14 0 23 9t9 23zM768 160v704q0 14 -9 23t-23 9h-64q-14 0 -23 -9t-9 -23v-704q0 -14 9 -23t23 -9h64q14 0 23 9t9 23zM1024 160v704q0 14 -9 23t-23 9h-64q-14 0 -23 -9t-9 -23v-704
q0 -14 9 -23t23 -9h64q14 0 23 9t9 23zM480 1152h448l-48 117q-7 9 -17 11h-317q-10 -2 -17 -11zM1408 1120v-64q0 -14 -9 -23t-23 -9h-96v-948q0 -83 -47 -143.5t-113 -60.5h-832q-66 0 -113 58.5t-47 141.5v952h-96q-14 0 -23 9t-9 23v64q0 14 9 23t23 9h309l70 167
q15 37 54 63t79 26h320q40 0 79 -26t54 -63l70 -167h309q14 0 23 -9t9 -23z" />
    <glyph glyph-name="_474" unicode="&#xf1f9;" 
d="M1150 462v-109q0 -50 -36.5 -89t-94 -60.5t-118 -32.5t-117.5 -11q-205 0 -342.5 139t-137.5 346q0 203 136 339t339 136q34 0 75.5 -4.5t93 -18t92.5 -34t69 -56.5t28 -81v-109q0 -16 -16 -16h-118q-16 0 -16 16v70q0 43 -65.5 67.5t-137.5 24.5q-140 0 -228.5 -91.5
t-88.5 -237.5q0 -151 91.5 -249.5t233.5 -98.5q68 0 138 24t70 66v70q0 7 4.5 11.5t10.5 4.5h119q6 0 11 -4.5t5 -11.5zM768 1280q-130 0 -248.5 -51t-204 -136.5t-136.5 -204t-51 -248.5t51 -248.5t136.5 -204t204 -136.5t248.5 -51t248.5 51t204 136.5t136.5 204t51 248.5
t-51 248.5t-136.5 204t-204 136.5t-248.5 51zM1536 640q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="_475" unicode="&#xf1fa;" 
d="M972 761q0 108 -53.5 169t-147.5 61q-63 0 -124 -30.5t-110 -84.5t-79.5 -137t-30.5 -180q0 -112 53.5 -173t150.5 -61q96 0 176 66.5t122.5 166t42.5 203.5zM1536 640q0 -111 -37 -197t-98.5 -135t-131.5 -74.5t-145 -27.5q-6 0 -15.5 -0.5t-16.5 -0.5q-95 0 -142 53
q-28 33 -33 83q-52 -66 -131.5 -110t-173.5 -44q-161 0 -249.5 95.5t-88.5 269.5q0 157 66 290t179 210.5t246 77.5q87 0 155 -35.5t106 -99.5l2 19l11 56q1 6 5.5 12t9.5 6h118q5 0 13 -11q5 -5 3 -16l-120 -614q-5 -24 -5 -48q0 -39 12.5 -52t44.5 -13q28 1 57 5.5t73 24
t77 50t57 89.5t24 137q0 292 -174 466t-466 174q-130 0 -248.5 -51t-204 -136.5t-136.5 -204t-51 -248.5t51 -248.5t136.5 -204t204 -136.5t248.5 -51q228 0 405 144q11 9 24 8t21 -12l41 -49q8 -12 7 -24q-2 -13 -12 -22q-102 -83 -227.5 -128t-258.5 -45q-156 0 -298 61
t-245 164t-164 245t-61 298t61 298t164 245t245 164t298 61q344 0 556 -212t212 -556z" />
    <glyph glyph-name="_476" unicode="&#xf1fb;" horiz-adv-x="1792" 
d="M1698 1442q94 -94 94 -226.5t-94 -225.5l-225 -223l104 -104q10 -10 10 -23t-10 -23l-210 -210q-10 -10 -23 -10t-23 10l-105 105l-603 -603q-37 -37 -90 -37h-203l-256 -128l-64 64l128 256v203q0 53 37 90l603 603l-105 105q-10 10 -10 23t10 23l210 210q10 10 23 10
t23 -10l104 -104l223 225q93 94 225.5 94t226.5 -94zM512 64l576 576l-192 192l-576 -576v-192h192z" />
    <glyph glyph-name="f1fc" unicode="&#xf1fc;" horiz-adv-x="1792" 
d="M1615 1536q70 0 122.5 -46.5t52.5 -116.5q0 -63 -45 -151q-332 -629 -465 -752q-97 -91 -218 -91q-126 0 -216.5 92.5t-90.5 219.5q0 128 92 212l638 579q59 54 130 54zM706 502q39 -76 106.5 -130t150.5 -76l1 -71q4 -213 -129.5 -347t-348.5 -134q-123 0 -218 46.5
t-152.5 127.5t-86.5 183t-29 220q7 -5 41 -30t62 -44.5t59 -36.5t46 -17q41 0 55 37q25 66 57.5 112.5t69.5 76t88 47.5t103 25.5t125 10.5z" />
    <glyph glyph-name="_478" unicode="&#xf1fd;" horiz-adv-x="1792" 
d="M1792 128v-384h-1792v384q45 0 85 14t59 27.5t47 37.5q30 27 51.5 38t56.5 11q24 0 44 -7t31 -15t33 -27q29 -25 47 -38t58 -27t86 -14q45 0 85 14.5t58 27t48 37.5q21 19 32.5 27t31 15t43.5 7q35 0 56.5 -11t51.5 -38q28 -24 47 -37.5t59 -27.5t85 -14t85 14t59 27.5
t47 37.5q30 27 51.5 38t56.5 11q34 0 55.5 -11t51.5 -38q28 -24 47 -37.5t59 -27.5t85 -14zM1792 448v-192q-24 0 -44 7t-31 15t-33 27q-29 25 -47 38t-58 27t-85 14q-46 0 -86 -14t-58 -27t-47 -38q-22 -19 -33 -27t-31 -15t-44 -7q-35 0 -56.5 11t-51.5 38q-29 25 -47 38
t-58 27t-86 14q-45 0 -85 -14.5t-58 -27t-48 -37.5q-21 -19 -32.5 -27t-31 -15t-43.5 -7q-35 0 -56.5 11t-51.5 38q-28 24 -47 37.5t-59 27.5t-85 14q-46 0 -86 -14t-58 -27t-47 -38q-30 -27 -51.5 -38t-56.5 -11v192q0 80 56 136t136 56h64v448h256v-448h256v448h256v-448
h256v448h256v-448h64q80 0 136 -56t56 -136zM512 1312q0 -77 -36 -118.5t-92 -41.5q-53 0 -90.5 37.5t-37.5 90.5q0 29 9.5 51t23.5 34t31 28t31 31.5t23.5 44.5t9.5 67q38 0 83 -74t45 -150zM1024 1312q0 -77 -36 -118.5t-92 -41.5q-53 0 -90.5 37.5t-37.5 90.5
q0 29 9.5 51t23.5 34t31 28t31 31.5t23.5 44.5t9.5 67q38 0 83 -74t45 -150zM1536 1312q0 -77 -36 -118.5t-92 -41.5q-53 0 -90.5 37.5t-37.5 90.5q0 29 9.5 51t23.5 34t31 28t31 31.5t23.5 44.5t9.5 67q38 0 83 -74t45 -150z" />
    <glyph glyph-name="_479" unicode="&#xf1fe;" horiz-adv-x="2048" 
d="M2048 0v-128h-2048v1536h128v-1408h1920zM1664 1024l256 -896h-1664v576l448 576l576 -576z" />
    <glyph glyph-name="_480" unicode="&#xf200;" horiz-adv-x="1792" 
d="M768 646l546 -546q-106 -108 -247.5 -168t-298.5 -60q-209 0 -385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103v-762zM955 640h773q0 -157 -60 -298.5t-168 -247.5zM1664 768h-768v768q209 0 385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="_481" unicode="&#xf201;" horiz-adv-x="2048" 
d="M2048 0v-128h-2048v1536h128v-1408h1920zM1920 1248v-435q0 -21 -19.5 -29.5t-35.5 7.5l-121 121l-633 -633q-10 -10 -23 -10t-23 10l-233 233l-416 -416l-192 192l585 585q10 10 23 10t23 -10l233 -233l464 464l-121 121q-16 16 -7.5 35.5t29.5 19.5h435q14 0 23 -9
t9 -23z" />
    <glyph glyph-name="_482" unicode="&#xf202;" horiz-adv-x="1792" 
d="M1292 832q0 -6 10 -41q10 -29 25 -49.5t41 -34t44 -20t55 -16.5q325 -91 325 -332q0 -146 -105.5 -242.5t-254.5 -96.5q-59 0 -111.5 18.5t-91.5 45.5t-77 74.5t-63 87.5t-53.5 103.5t-43.5 103t-39.5 106.5t-35.5 95q-32 81 -61.5 133.5t-73.5 96.5t-104 64t-142 20
q-96 0 -183 -55.5t-138 -144.5t-51 -185q0 -160 106.5 -279.5t263.5 -119.5q177 0 258 95q56 63 83 116l84 -152q-15 -34 -44 -70l1 -1q-131 -152 -388 -152q-147 0 -269.5 79t-190.5 207.5t-68 274.5q0 105 43.5 206t116 176.5t172 121.5t204.5 46q87 0 159 -19t123.5 -50
t95 -80t72.5 -99t58.5 -117t50.5 -124.5t50 -130.5t55 -127q96 -200 233 -200q81 0 138.5 48.5t57.5 128.5q0 42 -19 72t-50.5 46t-72.5 31.5t-84.5 27t-87.5 34t-81 52t-65 82t-39 122.5q-3 16 -3 33q0 110 87.5 192t198.5 78q78 -3 120.5 -14.5t90.5 -53.5h-1
q12 -11 23 -24.5t26 -36t19 -27.5l-129 -99q-26 49 -54 70v1q-23 21 -97 21q-49 0 -84 -33t-35 -83z" />
    <glyph glyph-name="_483" unicode="&#xf203;" 
d="M1432 484q0 173 -234 239q-35 10 -53 16.5t-38 25t-29 46.5q0 2 -2 8.5t-3 12t-1 7.5q0 36 24.5 59.5t60.5 23.5q54 0 71 -15h-1q20 -15 39 -51l93 71q-39 54 -49 64q-33 29 -67.5 39t-85.5 10q-80 0 -142 -57.5t-62 -137.5q0 -7 2 -23q16 -96 64.5 -140t148.5 -73
q29 -8 49 -15.5t45 -21.5t38.5 -34.5t13.5 -46.5v-5q1 -58 -40.5 -93t-100.5 -35q-97 0 -167 144q-23 47 -51.5 121.5t-48 125.5t-54 110.5t-74 95.5t-103.5 60.5t-147 24.5q-101 0 -192 -56t-144 -148t-50 -192v-1q4 -108 50.5 -199t133.5 -147.5t196 -56.5q186 0 279 110
q20 27 31 51l-60 109q-42 -80 -99 -116t-146 -36q-115 0 -191 87t-76 204q0 105 82 189t186 84q112 0 170 -53.5t104 -172.5q8 -21 25.5 -68.5t28.5 -76.5t31.5 -74.5t38.5 -74t45.5 -62.5t55.5 -53.5t66 -33t80 -13.5q107 0 183 69.5t76 174.5zM1536 1120v-960
q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z" />
    <glyph glyph-name="_484" unicode="&#xf204;" horiz-adv-x="2048" 
d="M1152 640q0 104 -40.5 198.5t-109.5 163.5t-163.5 109.5t-198.5 40.5t-198.5 -40.5t-163.5 -109.5t-109.5 -163.5t-40.5 -198.5t40.5 -198.5t109.5 -163.5t163.5 -109.5t198.5 -40.5t198.5 40.5t163.5 109.5t109.5 163.5t40.5 198.5zM1920 640q0 104 -40.5 198.5
t-109.5 163.5t-163.5 109.5t-198.5 40.5h-386q119 -90 188.5 -224t69.5 -288t-69.5 -288t-188.5 -224h386q104 0 198.5 40.5t163.5 109.5t109.5 163.5t40.5 198.5zM2048 640q0 -130 -51 -248.5t-136.5 -204t-204 -136.5t-248.5 -51h-768q-130 0 -248.5 51t-204 136.5
t-136.5 204t-51 248.5t51 248.5t136.5 204t204 136.5t248.5 51h768q130 0 248.5 -51t204 -136.5t136.5 -204t51 -248.5z" />
    <glyph glyph-name="_485" unicode="&#xf205;" horiz-adv-x="2048" 
d="M0 640q0 130 51 248.5t136.5 204t204 136.5t248.5 51h768q130 0 248.5 -51t204 -136.5t136.5 -204t51 -248.5t-51 -248.5t-136.5 -204t-204 -136.5t-248.5 -51h-768q-130 0 -248.5 51t-204 136.5t-136.5 204t-51 248.5zM1408 128q104 0 198.5 40.5t163.5 109.5
t109.5 163.5t40.5 198.5t-40.5 198.5t-109.5 163.5t-163.5 109.5t-198.5 40.5t-198.5 -40.5t-163.5 -109.5t-109.5 -163.5t-40.5 -198.5t40.5 -198.5t109.5 -163.5t163.5 -109.5t198.5 -40.5z" />
    <glyph glyph-name="_486" unicode="&#xf206;" horiz-adv-x="2304" 
d="M762 384h-314q-40 0 -57.5 35t6.5 67l188 251q-65 31 -137 31q-132 0 -226 -94t-94 -226t94 -226t226 -94q115 0 203 72.5t111 183.5zM576 512h186q-18 85 -75 148zM1056 512l288 384h-480l-99 -132q105 -103 126 -252h165zM2176 448q0 132 -94 226t-226 94
q-60 0 -121 -24l174 -260q15 -23 10 -49t-27 -40q-15 -11 -36 -11q-35 0 -53 29l-174 260q-93 -95 -93 -225q0 -132 94 -226t226 -94t226 94t94 226zM2304 448q0 -185 -131.5 -316.5t-316.5 -131.5t-316.5 131.5t-131.5 316.5q0 97 39.5 183.5t109.5 149.5l-65 98l-353 -469
q-18 -26 -51 -26h-197q-23 -164 -149 -274t-294 -110q-185 0 -316.5 131.5t-131.5 316.5t131.5 316.5t316.5 131.5q114 0 215 -55l137 183h-224q-26 0 -45 19t-19 45t19 45t45 19h384v-128h435l-85 128h-222q-26 0 -45 19t-19 45t19 45t45 19h256q33 0 53 -28l267 -400
q91 44 192 44q185 0 316.5 -131.5t131.5 -316.5z" />
    <glyph glyph-name="_487" unicode="&#xf207;" 
d="M384 320q0 53 -37.5 90.5t-90.5 37.5t-90.5 -37.5t-37.5 -90.5t37.5 -90.5t90.5 -37.5t90.5 37.5t37.5 90.5zM1408 320q0 53 -37.5 90.5t-90.5 37.5t-90.5 -37.5t-37.5 -90.5t37.5 -90.5t90.5 -37.5t90.5 37.5t37.5 90.5zM1362 716l-72 384q-5 23 -22.5 37.5t-40.5 14.5
h-918q-23 0 -40.5 -14.5t-22.5 -37.5l-72 -384q-5 -30 14 -53t49 -23h1062q30 0 49 23t14 53zM1136 1328q0 20 -14 34t-34 14h-640q-20 0 -34 -14t-14 -34t14 -34t34 -14h640q20 0 34 14t14 34zM1536 603v-603h-128v-128q0 -53 -37.5 -90.5t-90.5 -37.5t-90.5 37.5
t-37.5 90.5v128h-768v-128q0 -53 -37.5 -90.5t-90.5 -37.5t-90.5 37.5t-37.5 90.5v128h-128v603q0 112 25 223l103 454q9 78 97.5 137t230 89t312.5 30t312.5 -30t230 -89t97.5 -137l105 -454q23 -102 23 -223z" />
    <glyph glyph-name="_488" unicode="&#xf208;" horiz-adv-x="2048" 
d="M1463 704q0 -35 -25 -60.5t-61 -25.5h-702q-36 0 -61 25.5t-25 60.5t25 60.5t61 25.5h702q36 0 61 -25.5t25 -60.5zM1677 704q0 86 -23 170h-982q-36 0 -61 25t-25 60q0 36 25 61t61 25h908q-88 143 -235 227t-320 84q-177 0 -327.5 -87.5t-238 -237.5t-87.5 -327
q0 -86 23 -170h982q36 0 61 -25t25 -60q0 -36 -25 -61t-61 -25h-908q88 -143 235.5 -227t320.5 -84q132 0 253 51.5t208 139t139 208t52 253.5zM2048 959q0 -35 -25 -60t-61 -25h-131q17 -85 17 -170q0 -167 -65.5 -319.5t-175.5 -263t-262.5 -176t-319.5 -65.5
q-246 0 -448.5 133t-301.5 350h-189q-36 0 -61 25t-25 61q0 35 25 60t61 25h132q-17 85 -17 170q0 167 65.5 319.5t175.5 263t262.5 176t320.5 65.5q245 0 447.5 -133t301.5 -350h188q36 0 61 -25t25 -61z" />
    <glyph glyph-name="_489" unicode="&#xf209;" horiz-adv-x="1280" 
d="M953 1158l-114 -328l117 -21q165 451 165 518q0 56 -38 56q-57 0 -130 -225zM654 471l33 -88q37 42 71 67l-33 5.5t-38.5 7t-32.5 8.5zM362 1367q0 -98 159 -521q17 10 49 10q15 0 75 -5l-121 351q-75 220 -123 220q-19 0 -29 -17.5t-10 -37.5zM283 608q0 -36 51.5 -119
t117.5 -153t100 -70q14 0 25.5 13t11.5 27q0 24 -32 102q-13 32 -32 72t-47.5 89t-61.5 81t-62 32q-20 0 -45.5 -27t-25.5 -47zM125 273q0 -41 25 -104q59 -145 183.5 -227t281.5 -82q227 0 382 170q152 169 152 427q0 43 -1 67t-11.5 62t-30.5 56q-56 49 -211.5 75.5
t-270.5 26.5q-37 0 -49 -11q-12 -5 -12 -35q0 -34 21.5 -60t55.5 -40t77.5 -23.5t87.5 -11.5t85 -4t70 0h23q24 0 40 -19q15 -19 19 -55q-28 -28 -96 -54q-61 -22 -93 -46q-64 -46 -108.5 -114t-44.5 -137q0 -31 18.5 -88.5t18.5 -87.5l-3 -12q-4 -12 -4 -14
q-137 10 -146 216q-8 -2 -41 -2q2 -7 2 -21q0 -53 -40.5 -89.5t-94.5 -36.5q-82 0 -166.5 78t-84.5 159q0 34 33 67q52 -64 60 -76q77 -104 133 -104q12 0 26.5 8.5t14.5 20.5q0 34 -87.5 145t-116.5 111q-43 0 -70 -44.5t-27 -90.5zM11 264q0 101 42.5 163t136.5 88
q-28 74 -28 104q0 62 61 123t122 61q29 0 70 -15q-163 462 -163 567q0 80 41 130.5t119 50.5q131 0 325 -581q6 -17 8 -23q6 16 29 79.5t43.5 118.5t54 127.5t64.5 123t70.5 86.5t76.5 36q71 0 112 -49t41 -122q0 -108 -159 -550q61 -15 100.5 -46t58.5 -78t26 -93.5
t7 -110.5q0 -150 -47 -280t-132 -225t-211 -150t-278 -55q-111 0 -223 42q-149 57 -258 191.5t-109 286.5z" />
    <glyph glyph-name="_490" unicode="&#xf20a;" horiz-adv-x="2048" 
d="M785 528h207q-14 -158 -98.5 -248.5t-214.5 -90.5q-162 0 -254.5 116t-92.5 316q0 194 93 311.5t233 117.5q148 0 232 -87t97 -247h-203q-5 64 -35.5 99t-81.5 35q-57 0 -88.5 -60.5t-31.5 -177.5q0 -48 5 -84t18 -69.5t40 -51.5t66 -18q95 0 109 139zM1497 528h206
q-14 -158 -98 -248.5t-214 -90.5q-162 0 -254.5 116t-92.5 316q0 194 93 311.5t233 117.5q148 0 232 -87t97 -247h-204q-4 64 -35 99t-81 35q-57 0 -88.5 -60.5t-31.5 -177.5q0 -48 5 -84t18 -69.5t39.5 -51.5t65.5 -18q49 0 76.5 38t33.5 101zM1856 647q0 207 -15.5 307
t-60.5 161q-6 8 -13.5 14t-21.5 15t-16 11q-86 63 -697 63q-625 0 -710 -63q-5 -4 -17.5 -11.5t-21 -14t-14.5 -14.5q-45 -60 -60 -159.5t-15 -308.5q0 -208 15 -307.5t60 -160.5q6 -8 15 -15t20.5 -14t17.5 -12q44 -33 239.5 -49t470.5 -16q610 0 697 65q5 4 17 11t20.5 14
t13.5 16q46 60 61 159t15 309zM2048 1408v-1536h-2048v1536h2048z" />
    <glyph glyph-name="_491" unicode="&#xf20b;" 
d="M992 912v-496q0 -14 -9 -23t-23 -9h-160q-14 0 -23 9t-9 23v496q0 112 -80 192t-192 80h-272v-1152q0 -14 -9 -23t-23 -9h-160q-14 0 -23 9t-9 23v1344q0 14 9 23t23 9h464q135 0 249 -66.5t180.5 -180.5t66.5 -249zM1376 1376v-880q0 -135 -66.5 -249t-180.5 -180.5
t-249 -66.5h-464q-14 0 -23 9t-9 23v960q0 14 9 23t23 9h160q14 0 23 -9t9 -23v-768h272q112 0 192 80t80 192v880q0 14 9 23t23 9h160q14 0 23 -9t9 -23z" />
    <glyph glyph-name="_492" unicode="&#xf20c;" 
d="M1311 694v-114q0 -24 -13.5 -38t-37.5 -14h-202q-24 0 -38 14t-14 38v114q0 24 14 38t38 14h202q24 0 37.5 -14t13.5 -38zM821 464v250q0 53 -32.5 85.5t-85.5 32.5h-133q-68 0 -96 -52q-28 52 -96 52h-130q-53 0 -85.5 -32.5t-32.5 -85.5v-250q0 -22 21 -22h55
q22 0 22 22v230q0 24 13.5 38t38.5 14h94q24 0 38 -14t14 -38v-230q0 -22 21 -22h54q22 0 22 22v230q0 24 14 38t38 14h97q24 0 37.5 -14t13.5 -38v-230q0 -22 22 -22h55q21 0 21 22zM1410 560v154q0 53 -33 85.5t-86 32.5h-264q-53 0 -86 -32.5t-33 -85.5v-410
q0 -21 22 -21h55q21 0 21 21v180q31 -42 94 -42h191q53 0 86 32.5t33 85.5zM1536 1176v-1072q0 -96 -68 -164t-164 -68h-1072q-96 0 -164 68t-68 164v1072q0 96 68 164t164 68h1072q96 0 164 -68t68 -164z" />
    <glyph glyph-name="_493" unicode="&#xf20d;" 
d="M915 450h-294l147 551zM1001 128h311l-324 1024h-440l-324 -1024h311l383 314zM1536 1120v-960q0 -118 -85 -203t-203 -85h-960q-118 0 -203 85t-85 203v960q0 118 85 203t203 85h960q118 0 203 -85t85 -203z" />
    <glyph glyph-name="_494" unicode="&#xf20e;" horiz-adv-x="2048" 
d="M2048 641q0 -21 -13 -36.5t-33 -19.5l-205 -356q3 -9 3 -18q0 -20 -12.5 -35.5t-32.5 -19.5l-193 -337q3 -8 3 -16q0 -23 -16.5 -40t-40.5 -17q-25 0 -41 18h-400q-17 -20 -43 -20t-43 20h-399q-17 -20 -43 -20q-23 0 -40 16.5t-17 40.5q0 8 4 20l-193 335
q-20 4 -32.5 19.5t-12.5 35.5q0 9 3 18l-206 356q-20 5 -32.5 20.5t-12.5 35.5q0 21 13.5 36.5t33.5 19.5l199 344q0 1 -0.5 3t-0.5 3q0 36 34 51l209 363q-4 10 -4 18q0 24 17 40.5t40 16.5q26 0 44 -21h396q16 21 43 21t43 -21h398q18 21 44 21q23 0 40 -16.5t17 -40.5
q0 -6 -4 -18l207 -358q23 -1 39 -17.5t16 -38.5q0 -13 -7 -27l187 -324q19 -4 31.5 -19.5t12.5 -35.5zM1063 -158h389l-342 354h-143l-342 -354h360q18 16 39 16t39 -16zM112 654q1 -4 1 -13q0 -10 -2 -15l208 -360l15 -6l188 199v347l-187 194q-13 -8 -29 -10zM986 1438
h-388l190 -200l554 200h-280q-16 -16 -38 -16t-38 16zM1689 226q1 6 5 11l-64 68l-17 -79h76zM1583 226l22 105l-252 266l-296 -307l63 -64h463zM1495 -142l16 28l65 310h-427l333 -343q8 4 13 5zM578 -158h5l342 354h-373v-335l4 -6q14 -5 22 -13zM552 226h402l64 66
l-309 321l-157 -166v-221zM359 226h163v189l-168 -177q4 -8 5 -12zM358 1051q0 -1 0.5 -2t0.5 -2q0 -16 -8 -29l171 -177v269zM552 1121v-311l153 -157l297 314l-223 236zM556 1425l-4 -8v-264l205 74l-191 201q-6 -2 -10 -3zM1447 1438h-16l-621 -224l213 -225zM1023 946
l-297 -315l311 -319l296 307zM688 634l-136 141v-284zM1038 270l-42 -44h85zM1374 618l238 -251l132 624l-3 5l-1 1zM1718 1018q-8 13 -8 29v2l-216 376q-5 1 -13 5l-437 -463l310 -327zM522 1142v223l-163 -282zM522 196h-163l163 -283v283zM1607 196l-48 -227l130 227h-82
zM1729 266l207 361q-2 10 -2 14q0 1 3 16l-171 296l-129 -612l77 -82q5 3 15 7z" />
    <glyph glyph-name="f210" unicode="&#xf210;" 
d="M0 856q0 131 91.5 226.5t222.5 95.5h742l352 358v-1470q0 -132 -91.5 -227t-222.5 -95h-780q-131 0 -222.5 95t-91.5 227v790zM1232 102l-176 180v425q0 46 -32 79t-78 33h-484q-46 0 -78 -33t-32 -79v-492q0 -46 32.5 -79.5t77.5 -33.5h770z" />
    <glyph glyph-name="_496" unicode="&#xf211;" 
d="M934 1386q-317 -121 -556 -362.5t-358 -560.5q-20 89 -20 176q0 208 102.5 384.5t278.5 279t384 102.5q82 0 169 -19zM1203 1267q93 -65 164 -155q-389 -113 -674.5 -400.5t-396.5 -676.5q-93 72 -155 162q112 386 395 671t667 399zM470 -67q115 356 379.5 622t619.5 384
q40 -92 54 -195q-292 -120 -516 -345t-343 -518q-103 14 -194 52zM1536 -125q-193 50 -367 115q-135 -84 -290 -107q109 205 274 370.5t369 275.5q-21 -152 -101 -284q65 -175 115 -370z" />
    <glyph glyph-name="f212" unicode="&#xf212;" horiz-adv-x="2048" 
d="M1893 1144l155 -1272q-131 0 -257 57q-200 91 -393 91q-226 0 -374 -148q-148 148 -374 148q-193 0 -393 -91q-128 -57 -252 -57h-5l155 1272q224 127 482 127q233 0 387 -106q154 106 387 106q258 0 482 -127zM1398 157q129 0 232 -28.5t260 -93.5l-124 1021
q-171 78 -368 78q-224 0 -374 -141q-150 141 -374 141q-197 0 -368 -78l-124 -1021q105 43 165.5 65t148.5 39.5t178 17.5q202 0 374 -108q172 108 374 108zM1438 191l-55 907q-211 -4 -359 -155q-152 155 -374 155q-176 0 -336 -66l-114 -941q124 51 228.5 76t221.5 25
q209 0 374 -102q172 107 374 102z" />
    <glyph glyph-name="_498" unicode="&#xf213;" horiz-adv-x="2048" 
d="M1500 165v733q0 21 -15 36t-35 15h-93q-20 0 -35 -15t-15 -36v-733q0 -20 15 -35t35 -15h93q20 0 35 15t15 35zM1216 165v531q0 20 -15 35t-35 15h-101q-20 0 -35 -15t-15 -35v-531q0 -20 15 -35t35 -15h101q20 0 35 15t15 35zM924 165v429q0 20 -15 35t-35 15h-101
q-20 0 -35 -15t-15 -35v-429q0 -20 15 -35t35 -15h101q20 0 35 15t15 35zM632 165v362q0 20 -15 35t-35 15h-101q-20 0 -35 -15t-15 -35v-362q0 -20 15 -35t35 -15h101q20 0 35 15t15 35zM2048 311q0 -166 -118 -284t-284 -118h-1244q-166 0 -284 118t-118 284
q0 116 63 214.5t168 148.5q-10 34 -10 73q0 113 80.5 193.5t193.5 80.5q102 0 180 -67q45 183 194 300t338 117q149 0 275 -73.5t199.5 -199.5t73.5 -275q0 -66 -14 -122q135 -33 221 -142.5t86 -247.5z" />
    <glyph glyph-name="_499" unicode="&#xf214;" 
d="M0 1536h1536v-1392l-776 -338l-760 338v1392zM1436 209v926h-1336v-926l661 -294zM1436 1235v201h-1336v-201h1336zM181 937v-115h-37v115h37zM181 789v-115h-37v115h37zM181 641v-115h-37v115h37zM181 493v-115h-37v115h37zM181 345v-115h-37v115h37zM207 202l15 34
l105 -47l-15 -33zM343 142l15 34l105 -46l-15 -34zM478 82l15 34l105 -46l-15 -34zM614 23l15 33l104 -46l-15 -34zM797 10l105 46l15 -33l-105 -47zM932 70l105 46l15 -34l-105 -46zM1068 130l105 46l15 -34l-105 -46zM1203 189l105 47l15 -34l-105 -46zM259 1389v-36h-114
v36h114zM421 1389v-36h-115v36h115zM583 1389v-36h-115v36h115zM744 1389v-36h-114v36h114zM906 1389v-36h-114v36h114zM1068 1389v-36h-115v36h115zM1230 1389v-36h-115v36h115zM1391 1389v-36h-114v36h114zM181 1049v-79h-37v115h115v-36h-78zM421 1085v-36h-115v36h115z
M583 1085v-36h-115v36h115zM744 1085v-36h-114v36h114zM906 1085v-36h-114v36h114zM1068 1085v-36h-115v36h115zM1230 1085v-36h-115v36h115zM1355 970v79h-78v36h115v-115h-37zM1355 822v115h37v-115h-37zM1355 674v115h37v-115h-37zM1355 526v115h37v-115h-37zM1355 378
v115h37v-115h-37zM1355 230v115h37v-115h-37zM760 265q-129 0 -221 91.5t-92 221.5q0 129 92 221t221 92q130 0 221.5 -92t91.5 -221q0 -130 -91.5 -221.5t-221.5 -91.5zM595 646q0 -36 19.5 -56.5t49.5 -25t64 -7t64 -2t49.5 -9t19.5 -30.5q0 -49 -112 -49q-97 0 -123 51
h-3l-31 -63q67 -42 162 -42q29 0 56.5 5t55.5 16t45.5 33t17.5 53q0 46 -27.5 69.5t-67.5 27t-79.5 3t-67 5t-27.5 25.5q0 21 20.5 33t40.5 15t41 3q34 0 70.5 -11t51.5 -34h3l30 58q-3 1 -21 8.5t-22.5 9t-19.5 7t-22 7t-20 4.5t-24 4t-23 1q-29 0 -56.5 -5t-54 -16.5
t-43 -34t-16.5 -53.5z" />
    <glyph glyph-name="_500" unicode="&#xf215;" horiz-adv-x="2048" 
d="M863 504q0 112 -79.5 191.5t-191.5 79.5t-191 -79.5t-79 -191.5t79 -191t191 -79t191.5 79t79.5 191zM1726 505q0 112 -79 191t-191 79t-191.5 -79t-79.5 -191q0 -113 79.5 -192t191.5 -79t191 79.5t79 191.5zM2048 1314v-1348q0 -44 -31.5 -75.5t-76.5 -31.5h-1832
q-45 0 -76.5 31.5t-31.5 75.5v1348q0 44 31.5 75.5t76.5 31.5h431q44 0 76 -31.5t32 -75.5v-161h754v161q0 44 32 75.5t76 31.5h431q45 0 76.5 -31.5t31.5 -75.5z" />
    <glyph glyph-name="_501" unicode="&#xf216;" horiz-adv-x="2048" 
d="M1430 953zM1690 749q148 0 253 -98.5t105 -244.5q0 -157 -109 -261.5t-267 -104.5q-85 0 -162 27.5t-138 73.5t-118 106t-109 126t-103.5 132.5t-108.5 126.5t-117 106t-136 73.5t-159 27.5q-154 0 -251.5 -91.5t-97.5 -244.5q0 -157 104 -250t263 -93q100 0 208 37.5
t193 98.5q5 4 21 18.5t30 24t22 9.5q14 0 24.5 -10.5t10.5 -24.5q0 -24 -60 -77q-101 -88 -234.5 -142t-260.5 -54q-133 0 -245.5 58t-180 165t-67.5 241q0 205 141.5 341t347.5 136q120 0 226.5 -43.5t185.5 -113t151.5 -153t139 -167.5t133.5 -153.5t149.5 -113
t172.5 -43.5q102 0 168.5 61.5t66.5 162.5q0 95 -64.5 159t-159.5 64q-30 0 -81.5 -18.5t-68.5 -18.5q-20 0 -35.5 15t-15.5 35q0 18 8.5 57t8.5 59q0 159 -107.5 263t-266.5 104q-58 0 -111.5 -18.5t-84 -40.5t-55.5 -40.5t-33 -18.5q-15 0 -25.5 10.5t-10.5 25.5
q0 19 25 46q59 67 147 103.5t182 36.5q191 0 318 -125.5t127 -315.5q0 -37 -4 -66q57 15 115 15z" />
    <glyph glyph-name="_502" unicode="&#xf217;" horiz-adv-x="1664" 
d="M1216 832q0 26 -19 45t-45 19h-128v128q0 26 -19 45t-45 19t-45 -19t-19 -45v-128h-128q-26 0 -45 -19t-19 -45t19 -45t45 -19h128v-128q0 -26 19 -45t45 -19t45 19t19 45v128h128q26 0 45 19t19 45zM640 0q0 -53 -37.5 -90.5t-90.5 -37.5t-90.5 37.5t-37.5 90.5
t37.5 90.5t90.5 37.5t90.5 -37.5t37.5 -90.5zM1536 0q0 -53 -37.5 -90.5t-90.5 -37.5t-90.5 37.5t-37.5 90.5t37.5 90.5t90.5 37.5t90.5 -37.5t37.5 -90.5zM1664 1088v-512q0 -24 -16 -42.5t-41 -21.5l-1044 -122q1 -7 4.5 -21.5t6 -26.5t2.5 -22q0 -16 -24 -64h920
q26 0 45 -19t19 -45t-19 -45t-45 -19h-1024q-26 0 -45 19t-19 45q0 14 11 39.5t29.5 59.5t20.5 38l-177 823h-204q-26 0 -45 19t-19 45t19 45t45 19h256q16 0 28.5 -6.5t20 -15.5t13 -24.5t7.5 -26.5t5.5 -29.5t4.5 -25.5h1201q26 0 45 -19t19 -45z" />
    <glyph glyph-name="_503" unicode="&#xf218;" horiz-adv-x="1664" 
d="M1280 832q0 26 -19 45t-45 19t-45 -19l-147 -146v293q0 26 -19 45t-45 19t-45 -19t-19 -45v-293l-147 146q-19 19 -45 19t-45 -19t-19 -45t19 -45l256 -256q19 -19 45 -19t45 19l256 256q19 19 19 45zM640 0q0 -53 -37.5 -90.5t-90.5 -37.5t-90.5 37.5t-37.5 90.5
t37.5 90.5t90.5 37.5t90.5 -37.5t37.5 -90.5zM1536 0q0 -53 -37.5 -90.5t-90.5 -37.5t-90.5 37.5t-37.5 90.5t37.5 90.5t90.5 37.5t90.5 -37.5t37.5 -90.5zM1664 1088v-512q0 -24 -16 -42.5t-41 -21.5l-1044 -122q1 -7 4.5 -21.5t6 -26.5t2.5 -22q0 -16 -24 -64h920
q26 0 45 -19t19 -45t-19 -45t-45 -19h-1024q-26 0 -45 19t-19 45q0 14 11 39.5t29.5 59.5t20.5 38l-177 823h-204q-26 0 -45 19t-19 45t19 45t45 19h256q16 0 28.5 -6.5t20 -15.5t13 -24.5t7.5 -26.5t5.5 -29.5t4.5 -25.5h1201q26 0 45 -19t19 -45z" />
    <glyph glyph-name="_504" unicode="&#xf219;" horiz-adv-x="2048" 
d="M212 768l623 -665l-300 665h-323zM1024 -4l349 772h-698zM538 896l204 384h-262l-288 -384h346zM1213 103l623 665h-323zM683 896h682l-204 384h-274zM1510 896h346l-288 384h-262zM1651 1382l384 -512q14 -18 13 -41.5t-17 -40.5l-960 -1024q-18 -20 -47 -20t-47 20
l-960 1024q-16 17 -17 40.5t13 41.5l384 512q18 26 51 26h1152q33 0 51 -26z" />
    <glyph glyph-name="_505" unicode="&#xf21a;" horiz-adv-x="2048" 
d="M1811 -19q19 19 45 19t45 -19l128 -128l-90 -90l-83 83l-83 -83q-18 -19 -45 -19t-45 19l-83 83l-83 -83q-19 -19 -45 -19t-45 19l-83 83l-83 -83q-19 -19 -45 -19t-45 19l-83 83l-83 -83q-19 -19 -45 -19t-45 19l-83 83l-83 -83q-19 -19 -45 -19t-45 19l-83 83l-83 -83
q-19 -19 -45 -19t-45 19l-83 83l-83 -83q-19 -19 -45 -19t-45 19l-128 128l90 90l83 -83l83 83q19 19 45 19t45 -19l83 -83l83 83q19 19 45 19t45 -19l83 -83l83 83q19 19 45 19t45 -19l83 -83l83 83q19 19 45 19t45 -19l83 -83l83 83q19 19 45 19t45 -19l83 -83l83 83
q19 19 45 19t45 -19l83 -83zM237 19q-19 -19 -45 -19t-45 19l-128 128l90 90l83 -82l83 82q19 19 45 19t45 -19l83 -82l64 64v293l-210 314q-17 26 -7 56.5t40 40.5l177 58v299h128v128h256v128h256v-128h256v-128h128v-299l177 -58q30 -10 40 -40.5t-7 -56.5l-210 -314
v-293l19 18q19 19 45 19t45 -19l83 -82l83 82q19 19 45 19t45 -19l128 -128l-90 -90l-83 83l-83 -83q-18 -19 -45 -19t-45 19l-83 83l-83 -83q-19 -19 -45 -19t-45 19l-83 83l-83 -83q-19 -19 -45 -19t-45 19l-83 83l-83 -83q-19 -19 -45 -19t-45 19l-83 83l-83 -83
q-19 -19 -45 -19t-45 19l-83 83l-83 -83q-19 -19 -45 -19t-45 19l-83 83zM640 1152v-128l384 128l384 -128v128h-128v128h-512v-128h-128z" />
    <glyph glyph-name="_506" unicode="&#xf21b;" 
d="M576 0l96 448l-96 128l-128 64zM832 0l128 640l-128 -64l-96 -128zM992 1010q-2 4 -4 6q-10 8 -96 8q-70 0 -167 -19q-7 -2 -21 -2t-21 2q-97 19 -167 19q-86 0 -96 -8q-2 -2 -4 -6q2 -18 4 -27q2 -3 7.5 -6.5t7.5 -10.5q2 -4 7.5 -20.5t7 -20.5t7.5 -17t8.5 -17t9 -14
t12 -13.5t14 -9.5t17.5 -8t20.5 -4t24.5 -2q36 0 59 12.5t32.5 30t14.5 34.5t11.5 29.5t17.5 12.5h12q11 0 17.5 -12.5t11.5 -29.5t14.5 -34.5t32.5 -30t59 -12.5q13 0 24.5 2t20.5 4t17.5 8t14 9.5t12 13.5t9 14t8.5 17t7.5 17t7 20.5t7.5 20.5q2 7 7.5 10.5t7.5 6.5
q2 9 4 27zM1408 131q0 -121 -73 -190t-194 -69h-874q-121 0 -194 69t-73 190q0 61 4.5 118t19 125.5t37.5 123.5t63.5 103.5t93.5 74.5l-90 220h214q-22 64 -22 128q0 12 2 32q-194 40 -194 96q0 57 210 99q17 62 51.5 134t70.5 114q32 37 76 37q30 0 84 -31t84 -31t84 31
t84 31q44 0 76 -37q36 -42 70.5 -114t51.5 -134q210 -42 210 -99q0 -56 -194 -96q7 -81 -20 -160h214l-82 -225q63 -33 107.5 -96.5t65.5 -143.5t29 -151.5t8 -148.5z" />
    <glyph glyph-name="_507" unicode="&#xf21c;" horiz-adv-x="2304" 
d="M2301 500q12 -103 -22 -198.5t-99 -163.5t-158.5 -106t-196.5 -31q-161 11 -279.5 125t-134.5 274q-12 111 27.5 210.5t118.5 170.5l-71 107q-96 -80 -151 -194t-55 -244q0 -27 -18.5 -46.5t-45.5 -19.5h-256h-69q-23 -164 -149 -274t-294 -110q-185 0 -316.5 131.5
t-131.5 316.5t131.5 316.5t316.5 131.5q76 0 152 -27l24 45q-123 110 -304 110h-64q-26 0 -45 19t-19 45t19 45t45 19h128q78 0 145 -13.5t116.5 -38.5t71.5 -39.5t51 -36.5h512h115l-85 128h-222q-30 0 -49 22.5t-14 52.5q4 23 23 38t43 15h253q33 0 53 -28l70 -105
l114 114q19 19 46 19h101q26 0 45 -19t19 -45v-128q0 -26 -19 -45t-45 -19h-179l115 -172q131 63 275 36q143 -26 244 -134.5t118 -253.5zM448 128q115 0 203 72.5t111 183.5h-314q-35 0 -55 31q-18 32 -1 63l147 277q-47 13 -91 13q-132 0 -226 -94t-94 -226t94 -226
t226 -94zM1856 128q132 0 226 94t94 226t-94 226t-226 94q-60 0 -121 -24l174 -260q15 -23 10 -49t-27 -40q-15 -11 -36 -11q-35 0 -53 29l-174 260q-93 -95 -93 -225q0 -132 94 -226t226 -94z" />
    <glyph glyph-name="_508" unicode="&#xf21d;" 
d="M1408 0q0 -63 -61.5 -113.5t-164 -81t-225 -46t-253.5 -15.5t-253.5 15.5t-225 46t-164 81t-61.5 113.5q0 49 33 88.5t91 66.5t118 44.5t131 29.5q26 5 48 -10.5t26 -41.5q5 -26 -10.5 -48t-41.5 -26q-58 -10 -106 -23.5t-76.5 -25.5t-48.5 -23.5t-27.5 -19.5t-8.5 -12
q3 -11 27 -26.5t73 -33t114 -32.5t160.5 -25t201.5 -10t201.5 10t160.5 25t114 33t73 33.5t27 27.5q-1 4 -8.5 11t-27.5 19t-48.5 23.5t-76.5 25t-106 23.5q-26 4 -41.5 26t-10.5 48q4 26 26 41.5t48 10.5q71 -12 131 -29.5t118 -44.5t91 -66.5t33 -88.5zM1024 896v-384
q0 -26 -19 -45t-45 -19h-64v-384q0 -26 -19 -45t-45 -19h-256q-26 0 -45 19t-19 45v384h-64q-26 0 -45 19t-19 45v384q0 53 37.5 90.5t90.5 37.5h384q53 0 90.5 -37.5t37.5 -90.5zM928 1280q0 -93 -65.5 -158.5t-158.5 -65.5t-158.5 65.5t-65.5 158.5t65.5 158.5t158.5 65.5
t158.5 -65.5t65.5 -158.5z" />
    <glyph glyph-name="_509" unicode="&#xf21e;" horiz-adv-x="1792" 
d="M1280 512h305q-5 -6 -10 -10.5t-9 -7.5l-3 -4l-623 -600q-18 -18 -44 -18t-44 18l-624 602q-5 2 -21 20h369q22 0 39.5 13.5t22.5 34.5l70 281l190 -667q6 -20 23 -33t39 -13q21 0 38 13t23 33l146 485l56 -112q18 -35 57 -35zM1792 940q0 -145 -103 -300h-369l-111 221
q-8 17 -25.5 27t-36.5 8q-45 -5 -56 -46l-129 -430l-196 686q-6 20 -23.5 33t-39.5 13t-39 -13.5t-22 -34.5l-116 -464h-423q-103 155 -103 300q0 220 127 344t351 124q62 0 126.5 -21.5t120 -58t95.5 -68.5t76 -68q36 36 76 68t95.5 68.5t120 58t126.5 21.5q224 0 351 -124
t127 -344z" />
    <glyph glyph-name="venus" unicode="&#xf221;" horiz-adv-x="1280" 
d="M1152 960q0 -221 -147.5 -384.5t-364.5 -187.5v-260h224q14 0 23 -9t9 -23v-64q0 -14 -9 -23t-23 -9h-224v-224q0 -14 -9 -23t-23 -9h-64q-14 0 -23 9t-9 23v224h-224q-14 0 -23 9t-9 23v64q0 14 9 23t23 9h224v260q-150 16 -271.5 103t-186 224t-52.5 292
q11 134 80.5 249t182 188t245.5 88q170 19 319 -54t236 -212t87 -306zM128 960q0 -185 131.5 -316.5t316.5 -131.5t316.5 131.5t131.5 316.5t-131.5 316.5t-316.5 131.5t-316.5 -131.5t-131.5 -316.5z" />
    <glyph glyph-name="_511" unicode="&#xf222;" 
d="M1472 1408q26 0 45 -19t19 -45v-416q0 -14 -9 -23t-23 -9h-64q-14 0 -23 9t-9 23v262l-382 -383q126 -156 126 -359q0 -117 -45.5 -223.5t-123 -184t-184 -123t-223.5 -45.5t-223.5 45.5t-184 123t-123 184t-45.5 223.5t45.5 223.5t123 184t184 123t223.5 45.5
q203 0 359 -126l382 382h-261q-14 0 -23 9t-9 23v64q0 14 9 23t23 9h416zM576 0q185 0 316.5 131.5t131.5 316.5t-131.5 316.5t-316.5 131.5t-316.5 -131.5t-131.5 -316.5t131.5 -316.5t316.5 -131.5z" />
    <glyph glyph-name="_512" unicode="&#xf223;" horiz-adv-x="1280" 
d="M830 1220q145 -72 233.5 -210.5t88.5 -305.5q0 -221 -147.5 -384.5t-364.5 -187.5v-132h96q14 0 23 -9t9 -23v-64q0 -14 -9 -23t-23 -9h-96v-96q0 -14 -9 -23t-23 -9h-64q-14 0 -23 9t-9 23v96h-96q-14 0 -23 9t-9 23v64q0 14 9 23t23 9h96v132q-217 24 -364.5 187.5
t-147.5 384.5q0 167 88.5 305.5t233.5 210.5q-165 96 -228 273q-6 16 3.5 29.5t26.5 13.5h69q21 0 29 -20q44 -106 140 -171t214 -65t214 65t140 171q8 20 37 20h61q17 0 26.5 -13.5t3.5 -29.5q-63 -177 -228 -273zM576 256q185 0 316.5 131.5t131.5 316.5t-131.5 316.5
t-316.5 131.5t-316.5 -131.5t-131.5 -316.5t131.5 -316.5t316.5 -131.5z" />
    <glyph glyph-name="_513" unicode="&#xf224;" 
d="M1024 1504q0 14 9 23t23 9h288q26 0 45 -19t19 -45v-288q0 -14 -9 -23t-23 -9h-64q-14 0 -23 9t-9 23v134l-254 -255q126 -158 126 -359q0 -221 -147.5 -384.5t-364.5 -187.5v-132h96q14 0 23 -9t9 -23v-64q0 -14 -9 -23t-23 -9h-96v-96q0 -14 -9 -23t-23 -9h-64
q-14 0 -23 9t-9 23v96h-96q-14 0 -23 9t-9 23v64q0 14 9 23t23 9h96v132q-149 16 -270.5 103t-186.5 223.5t-53 291.5q16 204 160 353.5t347 172.5q118 14 228 -19t198 -103l255 254h-134q-14 0 -23 9t-9 23v64zM576 256q185 0 316.5 131.5t131.5 316.5t-131.5 316.5
t-316.5 131.5t-316.5 -131.5t-131.5 -316.5t131.5 -316.5t316.5 -131.5z" />
    <glyph glyph-name="_514" unicode="&#xf225;" horiz-adv-x="1792" 
d="M1280 1504q0 14 9 23t23 9h288q26 0 45 -19t19 -45v-288q0 -14 -9 -23t-23 -9h-64q-14 0 -23 9t-9 23v134l-254 -255q126 -158 126 -359q0 -221 -147.5 -384.5t-364.5 -187.5v-132h96q14 0 23 -9t9 -23v-64q0 -14 -9 -23t-23 -9h-96v-96q0 -14 -9 -23t-23 -9h-64
q-14 0 -23 9t-9 23v96h-96q-14 0 -23 9t-9 23v64q0 14 9 23t23 9h96v132q-217 24 -364.5 187.5t-147.5 384.5q0 201 126 359l-52 53l-101 -111q-9 -10 -22 -10.5t-23 7.5l-48 44q-10 8 -10.5 21.5t8.5 23.5l105 115l-111 112v-134q0 -14 -9 -23t-23 -9h-64q-14 0 -23 9
t-9 23v288q0 26 19 45t45 19h288q14 0 23 -9t9 -23v-64q0 -14 -9 -23t-23 -9h-133l106 -107l86 94q9 10 22 10.5t23 -7.5l48 -44q10 -8 10.5 -21.5t-8.5 -23.5l-90 -99l57 -56q158 126 359 126t359 -126l255 254h-134q-14 0 -23 9t-9 23v64zM832 256q185 0 316.5 131.5
t131.5 316.5t-131.5 316.5t-316.5 131.5t-316.5 -131.5t-131.5 -316.5t131.5 -316.5t316.5 -131.5z" />
    <glyph glyph-name="_515" unicode="&#xf226;" horiz-adv-x="1792" 
d="M1790 1007q12 -155 -52.5 -292t-186 -224t-271.5 -103v-260h224q14 0 23 -9t9 -23v-64q0 -14 -9 -23t-23 -9h-224v-224q0 -14 -9 -23t-23 -9h-64q-14 0 -23 9t-9 23v224h-512v-224q0 -14 -9 -23t-23 -9h-64q-14 0 -23 9t-9 23v224h-224q-14 0 -23 9t-9 23v64q0 14 9 23
t23 9h224v260q-150 16 -271.5 103t-186 224t-52.5 292q17 206 164.5 356.5t352.5 169.5q206 21 377 -94q171 115 377 94q205 -19 352.5 -169.5t164.5 -356.5zM896 647q128 131 128 313t-128 313q-128 -131 -128 -313t128 -313zM576 512q115 0 218 57q-154 165 -154 391
q0 224 154 391q-103 57 -218 57q-185 0 -316.5 -131.5t-131.5 -316.5t131.5 -316.5t316.5 -131.5zM1152 128v260q-137 15 -256 94q-119 -79 -256 -94v-260h512zM1216 512q185 0 316.5 131.5t131.5 316.5t-131.5 316.5t-316.5 131.5q-115 0 -218 -57q154 -167 154 -391
q0 -226 -154 -391q103 -57 218 -57z" />
    <glyph glyph-name="_516" unicode="&#xf227;" horiz-adv-x="1920" 
d="M1536 1120q0 14 9 23t23 9h288q26 0 45 -19t19 -45v-288q0 -14 -9 -23t-23 -9h-64q-14 0 -23 9t-9 23v134l-254 -255q76 -95 107.5 -214t9.5 -247q-31 -182 -166 -312t-318 -156q-210 -29 -384.5 80t-241.5 300q-117 6 -221 57.5t-177.5 133t-113.5 192.5t-32 230
q9 135 78 252t182 191.5t248 89.5q118 14 227.5 -19t198.5 -103l255 254h-134q-14 0 -23 9t-9 23v64q0 14 9 23t23 9h288q26 0 45 -19t19 -45v-288q0 -14 -9 -23t-23 -9h-64q-14 0 -23 9t-9 23v134l-254 -255q59 -74 93 -169q182 -9 328 -124l255 254h-134q-14 0 -23 9
t-9 23v64zM1024 704q0 20 -4 58q-162 -25 -271 -150t-109 -292q0 -20 4 -58q162 25 271 150t109 292zM128 704q0 -168 111 -294t276 -149q-3 29 -3 59q0 210 135 369.5t338 196.5q-53 120 -163.5 193t-245.5 73q-185 0 -316.5 -131.5t-131.5 -316.5zM1088 -128
q185 0 316.5 131.5t131.5 316.5q0 168 -111 294t-276 149q3 -28 3 -59q0 -210 -135 -369.5t-338 -196.5q53 -120 163.5 -193t245.5 -73z" />
    <glyph glyph-name="_517" unicode="&#xf228;" horiz-adv-x="2048" 
d="M1664 1504q0 14 9 23t23 9h288q26 0 45 -19t19 -45v-288q0 -14 -9 -23t-23 -9h-64q-14 0 -23 9t-9 23v134l-254 -255q76 -95 107.5 -214t9.5 -247q-32 -180 -164.5 -310t-313.5 -157q-223 -34 -409 90q-117 -78 -256 -93v-132h96q14 0 23 -9t9 -23v-64q0 -14 -9 -23
t-23 -9h-96v-96q0 -14 -9 -23t-23 -9h-64q-14 0 -23 9t-9 23v96h-96q-14 0 -23 9t-9 23v64q0 14 9 23t23 9h96v132q-155 17 -279.5 109.5t-187 237.5t-39.5 307q25 187 159.5 322.5t320.5 164.5q224 34 410 -90q146 97 320 97q201 0 359 -126l255 254h-134q-14 0 -23 9
t-9 23v64zM896 391q128 131 128 313t-128 313q-128 -131 -128 -313t128 -313zM128 704q0 -185 131.5 -316.5t316.5 -131.5q117 0 218 57q-154 167 -154 391t154 391q-101 57 -218 57q-185 0 -316.5 -131.5t-131.5 -316.5zM1216 256q185 0 316.5 131.5t131.5 316.5
t-131.5 316.5t-316.5 131.5q-117 0 -218 -57q154 -167 154 -391t-154 -391q101 -57 218 -57z" />
    <glyph glyph-name="_518" unicode="&#xf229;" 
d="M1472 1408q26 0 45 -19t19 -45v-416q0 -14 -9 -23t-23 -9h-64q-14 0 -23 9t-9 23v262l-213 -214l140 -140q9 -10 9 -23t-9 -22l-46 -46q-9 -9 -22 -9t-23 9l-140 141l-78 -79q126 -156 126 -359q0 -117 -45.5 -223.5t-123 -184t-184 -123t-223.5 -45.5t-223.5 45.5
t-184 123t-123 184t-45.5 223.5t45.5 223.5t123 184t184 123t223.5 45.5q203 0 359 -126l78 78l-172 172q-9 10 -9 23t9 22l46 46q9 9 22 9t23 -9l172 -172l213 213h-261q-14 0 -23 9t-9 23v64q0 14 9 23t23 9h416zM576 0q185 0 316.5 131.5t131.5 316.5t-131.5 316.5
t-316.5 131.5t-316.5 -131.5t-131.5 -316.5t131.5 -316.5t316.5 -131.5z" />
    <glyph glyph-name="_519" unicode="&#xf22a;" horiz-adv-x="1280" 
d="M640 892q217 -24 364.5 -187.5t147.5 -384.5q0 -167 -87 -306t-236 -212t-319 -54q-133 15 -245.5 88t-182 188t-80.5 249q-12 155 52.5 292t186 224t271.5 103v132h-160q-14 0 -23 9t-9 23v64q0 14 9 23t23 9h160v165l-92 -92q-10 -9 -23 -9t-22 9l-46 46q-9 9 -9 22
t9 23l202 201q19 19 45 19t45 -19l202 -201q9 -10 9 -23t-9 -22l-46 -46q-9 -9 -22 -9t-23 9l-92 92v-165h160q14 0 23 -9t9 -23v-64q0 -14 -9 -23t-23 -9h-160v-132zM576 -128q185 0 316.5 131.5t131.5 316.5t-131.5 316.5t-316.5 131.5t-316.5 -131.5t-131.5 -316.5
t131.5 -316.5t316.5 -131.5z" />
    <glyph glyph-name="_520" unicode="&#xf22b;" horiz-adv-x="2048" 
d="M1901 621q19 -19 19 -45t-19 -45l-294 -294q-9 -10 -22.5 -10t-22.5 10l-45 45q-10 9 -10 22.5t10 22.5l185 185h-294v-224q0 -14 -9 -23t-23 -9h-64q-14 0 -23 9t-9 23v224h-132q-24 -217 -187.5 -364.5t-384.5 -147.5q-167 0 -306 87t-212 236t-54 319q15 133 88 245.5
t188 182t249 80.5q155 12 292 -52.5t224 -186t103 -271.5h132v224q0 14 9 23t23 9h64q14 0 23 -9t9 -23v-224h294l-185 185q-10 9 -10 22.5t10 22.5l45 45q9 10 22.5 10t22.5 -10zM576 128q185 0 316.5 131.5t131.5 316.5t-131.5 316.5t-316.5 131.5t-316.5 -131.5
t-131.5 -316.5t131.5 -316.5t316.5 -131.5z" />
    <glyph glyph-name="_521" unicode="&#xf22c;" horiz-adv-x="1280" 
d="M1152 960q0 -221 -147.5 -384.5t-364.5 -187.5v-612q0 -14 -9 -23t-23 -9h-64q-14 0 -23 9t-9 23v612q-217 24 -364.5 187.5t-147.5 384.5q0 117 45.5 223.5t123 184t184 123t223.5 45.5t223.5 -45.5t184 -123t123 -184t45.5 -223.5zM576 512q185 0 316.5 131.5
t131.5 316.5t-131.5 316.5t-316.5 131.5t-316.5 -131.5t-131.5 -316.5t131.5 -316.5t316.5 -131.5z" />
    <glyph glyph-name="_522" unicode="&#xf22d;" horiz-adv-x="1280" 
d="M1024 576q0 185 -131.5 316.5t-316.5 131.5t-316.5 -131.5t-131.5 -316.5t131.5 -316.5t316.5 -131.5t316.5 131.5t131.5 316.5zM1152 576q0 -117 -45.5 -223.5t-123 -184t-184 -123t-223.5 -45.5t-223.5 45.5t-184 123t-123 184t-45.5 223.5t45.5 223.5t123 184t184 123
t223.5 45.5t223.5 -45.5t184 -123t123 -184t45.5 -223.5z" />
    <glyph glyph-name="_523" unicode="&#xf22e;" horiz-adv-x="1792" 
 />
    <glyph glyph-name="_524" unicode="&#xf22f;" horiz-adv-x="1792" 
 />
    <glyph glyph-name="_525" unicode="&#xf230;" 
d="M1451 1408q35 0 60 -25t25 -60v-1366q0 -35 -25 -60t-60 -25h-391v595h199l30 232h-229v148q0 56 23.5 84t91.5 28l122 1v207q-63 9 -178 9q-136 0 -217.5 -80t-81.5 -226v-171h-200v-232h200v-595h-735q-35 0 -60 25t-25 60v1366q0 35 25 60t60 25h1366z" />
    <glyph glyph-name="_526" unicode="&#xf231;" horiz-adv-x="1280" 
d="M0 939q0 108 37.5 203.5t103.5 166.5t152 123t185 78t202 26q158 0 294 -66.5t221 -193.5t85 -287q0 -96 -19 -188t-60 -177t-100 -149.5t-145 -103t-189 -38.5q-68 0 -135 32t-96 88q-10 -39 -28 -112.5t-23.5 -95t-20.5 -71t-26 -71t-32 -62.5t-46 -77.5t-62 -86.5
l-14 -5l-9 10q-15 157 -15 188q0 92 21.5 206.5t66.5 287.5t52 203q-32 65 -32 169q0 83 52 156t132 73q61 0 95 -40.5t34 -102.5q0 -66 -44 -191t-44 -187q0 -63 45 -104.5t109 -41.5q55 0 102 25t78.5 68t56 95t38 110.5t20 111t6.5 99.5q0 173 -109.5 269.5t-285.5 96.5
q-200 0 -334 -129.5t-134 -328.5q0 -44 12.5 -85t27 -65t27 -45.5t12.5 -30.5q0 -28 -15 -73t-37 -45q-2 0 -17 3q-51 15 -90.5 56t-61 94.5t-32.5 108t-11 106.5z" />
    <glyph glyph-name="_527" unicode="&#xf232;" 
d="M985 562q13 0 97.5 -44t89.5 -53q2 -5 2 -15q0 -33 -17 -76q-16 -39 -71 -65.5t-102 -26.5q-57 0 -190 62q-98 45 -170 118t-148 185q-72 107 -71 194v8q3 91 74 158q24 22 52 22q6 0 18 -1.5t19 -1.5q19 0 26.5 -6.5t15.5 -27.5q8 -20 33 -88t25 -75q0 -21 -34.5 -57.5
t-34.5 -46.5q0 -7 5 -15q34 -73 102 -137q56 -53 151 -101q12 -7 22 -7q15 0 54 48.5t52 48.5zM782 32q127 0 243.5 50t200.5 134t134 200.5t50 243.5t-50 243.5t-134 200.5t-200.5 134t-243.5 50t-243.5 -50t-200.5 -134t-134 -200.5t-50 -243.5q0 -203 120 -368l-79 -233
l242 77q158 -104 345 -104zM782 1414q153 0 292.5 -60t240.5 -161t161 -240.5t60 -292.5t-60 -292.5t-161 -240.5t-240.5 -161t-292.5 -60q-195 0 -365 94l-417 -134l136 405q-108 178 -108 389q0 153 60 292.5t161 240.5t240.5 161t292.5 60z" />
    <glyph glyph-name="_528" unicode="&#xf233;" horiz-adv-x="1792" 
d="M128 128h1024v128h-1024v-128zM128 640h1024v128h-1024v-128zM1696 192q0 40 -28 68t-68 28t-68 -28t-28 -68t28 -68t68 -28t68 28t28 68zM128 1152h1024v128h-1024v-128zM1696 704q0 40 -28 68t-68 28t-68 -28t-28 -68t28 -68t68 -28t68 28t28 68zM1696 1216
q0 40 -28 68t-68 28t-68 -28t-28 -68t28 -68t68 -28t68 28t28 68zM1792 384v-384h-1792v384h1792zM1792 896v-384h-1792v384h1792zM1792 1408v-384h-1792v384h1792z" />
    <glyph glyph-name="_529" unicode="&#xf234;" horiz-adv-x="2048" 
d="M704 640q-159 0 -271.5 112.5t-112.5 271.5t112.5 271.5t271.5 112.5t271.5 -112.5t112.5 -271.5t-112.5 -271.5t-271.5 -112.5zM1664 512h352q13 0 22.5 -9.5t9.5 -22.5v-192q0 -13 -9.5 -22.5t-22.5 -9.5h-352v-352q0 -13 -9.5 -22.5t-22.5 -9.5h-192q-13 0 -22.5 9.5
t-9.5 22.5v352h-352q-13 0 -22.5 9.5t-9.5 22.5v192q0 13 9.5 22.5t22.5 9.5h352v352q0 13 9.5 22.5t22.5 9.5h192q13 0 22.5 -9.5t9.5 -22.5v-352zM928 288q0 -52 38 -90t90 -38h256v-238q-68 -50 -171 -50h-874q-121 0 -194 69t-73 190q0 53 3.5 103.5t14 109t26.5 108.5
t43 97.5t62 81t85.5 53.5t111.5 20q19 0 39 -17q79 -61 154.5 -91.5t164.5 -30.5t164.5 30.5t154.5 91.5q20 17 39 17q132 0 217 -96h-223q-52 0 -90 -38t-38 -90v-192z" />
    <glyph glyph-name="_530" unicode="&#xf235;" horiz-adv-x="2048" 
d="M704 640q-159 0 -271.5 112.5t-112.5 271.5t112.5 271.5t271.5 112.5t271.5 -112.5t112.5 -271.5t-112.5 -271.5t-271.5 -112.5zM1781 320l249 -249q9 -9 9 -23q0 -13 -9 -22l-136 -136q-9 -9 -22 -9q-14 0 -23 9l-249 249l-249 -249q-9 -9 -23 -9q-13 0 -22 9l-136 136
q-9 9 -9 22q0 14 9 23l249 249l-249 249q-9 9 -9 23q0 13 9 22l136 136q9 9 22 9q14 0 23 -9l249 -249l249 249q9 9 23 9q13 0 22 -9l136 -136q9 -9 9 -22q0 -14 -9 -23zM1283 320l-181 -181q-37 -37 -37 -91q0 -53 37 -90l83 -83q-21 -3 -44 -3h-874q-121 0 -194 69
t-73 190q0 53 3.5 103.5t14 109t26.5 108.5t43 97.5t62 81t85.5 53.5t111.5 20q19 0 39 -17q154 -122 319 -122t319 122q20 17 39 17q28 0 57 -6q-28 -27 -41 -50t-13 -56q0 -54 37 -91z" />
    <glyph glyph-name="_531" unicode="&#xf236;" horiz-adv-x="2048" 
d="M256 512h1728q26 0 45 -19t19 -45v-448h-256v256h-1536v-256h-256v1216q0 26 19 45t45 19h128q26 0 45 -19t19 -45v-704zM832 832q0 106 -75 181t-181 75t-181 -75t-75 -181t75 -181t181 -75t181 75t75 181zM2048 576v64q0 159 -112.5 271.5t-271.5 112.5h-704
q-26 0 -45 -19t-19 -45v-384h1152z" />
    <glyph glyph-name="_532" unicode="&#xf237;" 
d="M1536 1536l-192 -448h192v-192h-274l-55 -128h329v-192h-411l-357 -832l-357 832h-411v192h329l-55 128h-274v192h192l-192 448h256l323 -768h378l323 768h256zM768 320l108 256h-216z" />
    <glyph glyph-name="_533" unicode="&#xf238;" 
d="M1088 1536q185 0 316.5 -93.5t131.5 -226.5v-896q0 -130 -125.5 -222t-305.5 -97l213 -202q16 -15 8 -35t-30 -20h-1056q-22 0 -30 20t8 35l213 202q-180 5 -305.5 97t-125.5 222v896q0 133 131.5 226.5t316.5 93.5h640zM768 192q80 0 136 56t56 136t-56 136t-136 56
t-136 -56t-56 -136t56 -136t136 -56zM1344 768v512h-1152v-512h1152z" />
    <glyph glyph-name="_534" unicode="&#xf239;" 
d="M1088 1536q185 0 316.5 -93.5t131.5 -226.5v-896q0 -130 -125.5 -222t-305.5 -97l213 -202q16 -15 8 -35t-30 -20h-1056q-22 0 -30 20t8 35l213 202q-180 5 -305.5 97t-125.5 222v896q0 133 131.5 226.5t316.5 93.5h640zM288 224q66 0 113 47t47 113t-47 113t-113 47
t-113 -47t-47 -113t47 -113t113 -47zM704 768v512h-544v-512h544zM1248 224q66 0 113 47t47 113t-47 113t-113 47t-113 -47t-47 -113t47 -113t113 -47zM1408 768v512h-576v-512h576z" />
    <glyph glyph-name="_535" unicode="&#xf23a;" horiz-adv-x="1792" 
d="M597 1115v-1173q0 -25 -12.5 -42.5t-36.5 -17.5q-17 0 -33 8l-465 233q-21 10 -35.5 33.5t-14.5 46.5v1140q0 20 10 34t29 14q14 0 44 -15l511 -256q3 -3 3 -5zM661 1014l534 -866l-534 266v600zM1792 996v-1054q0 -25 -14 -40.5t-38 -15.5t-47 13l-441 220zM1789 1116
q0 -3 -256.5 -419.5t-300.5 -487.5l-390 634l324 527q17 28 52 28q14 0 26 -6l541 -270q4 -2 4 -6z" />
    <glyph glyph-name="_536" unicode="&#xf23b;" 
d="M809 532l266 499h-112l-157 -312q-24 -48 -44 -92l-42 92l-155 312h-120l263 -493v-324h101v318zM1536 1408v-1536h-1536v1536h1536z" />
    <glyph glyph-name="_537" unicode="&#xf23c;" horiz-adv-x="2296" 
d="M478 -139q-8 -16 -27 -34.5t-37 -25.5q-25 -9 -51.5 3.5t-28.5 31.5q-1 22 40 55t68 38q23 4 34 -21.5t2 -46.5zM1819 -139q7 -16 26 -34.5t38 -25.5q25 -9 51.5 3.5t27.5 31.5q2 22 -39.5 55t-68.5 38q-22 4 -33 -21.5t-2 -46.5zM1867 -30q13 -27 56.5 -59.5t77.5 -41.5
q45 -13 82 4.5t37 50.5q0 46 -67.5 100.5t-115.5 59.5q-40 5 -63.5 -37.5t-6.5 -76.5zM428 -30q-13 -27 -56 -59.5t-77 -41.5q-45 -13 -82 4.5t-37 50.5q0 46 67.5 100.5t115.5 59.5q40 5 63 -37.5t6 -76.5zM1158 1094h1q-41 0 -76 -15q27 -8 44 -30.5t17 -49.5
q0 -35 -27 -60t-65 -25q-52 0 -80 43q-5 -23 -5 -42q0 -74 56 -126.5t135 -52.5q80 0 136 52.5t56 126.5t-56 126.5t-136 52.5zM1462 1312q-99 109 -220.5 131.5t-245.5 -44.5q27 60 82.5 96.5t118 39.5t121.5 -17t99.5 -74.5t44.5 -131.5zM2212 73q8 -11 -11 -42
q7 -23 7 -40q1 -56 -44.5 -112.5t-109.5 -91.5t-118 -37q-48 -2 -92 21.5t-66 65.5q-687 -25 -1259 0q-23 -41 -66.5 -65t-92.5 -22q-86 3 -179.5 80.5t-92.5 160.5q2 22 7 40q-19 31 -11 42q6 10 31 1q14 22 41 51q-7 29 2 38q11 10 39 -4q29 20 59 34q0 29 13 37
q23 12 51 -16q35 5 61 -2q18 -4 38 -19v73q-11 0 -18 2q-53 10 -97 44.5t-55 87.5q-9 38 0 81q15 62 93 95q2 17 19 35.5t36 23.5t33 -7.5t19 -30.5h13q46 -5 60 -23q3 -3 5 -7q10 1 30.5 3.5t30.5 3.5q-15 11 -30 17q-23 40 -91 43q0 6 1 10q-62 2 -118.5 18.5t-84.5 47.5
q-32 36 -42.5 92t-2.5 112q16 126 90 179q23 16 52 4.5t32 -40.5q0 -1 1.5 -14t2.5 -21t3 -20t5.5 -19t8.5 -10q27 -14 76 -12q48 46 98 74q-40 4 -162 -14l47 46q61 58 163 111q145 73 282 86q-20 8 -41 15.5t-47 14t-42.5 10.5t-47.5 11t-43 10q595 126 904 -139
q98 -84 158 -222q85 -10 121 9h1q5 3 8.5 10t5.5 19t3 19.5t3 21.5l1 14q3 28 32 40t52 -5q73 -52 91 -178q7 -57 -3.5 -113t-42.5 -91q-28 -32 -83.5 -48.5t-115.5 -18.5v-10q-71 -2 -95 -43q-14 -5 -31 -17q11 -1 32 -3.5t30 -3.5q1 5 5 8q16 18 60 23h13q5 18 19 30t33 8
t36 -23t19 -36q79 -32 93 -95q9 -40 1 -81q-12 -53 -56 -88t-97 -44q-10 -2 -17 -2q0 -49 -1 -73q20 15 38 19q26 7 61 2q28 28 51 16q14 -9 14 -37q33 -16 59 -34q27 13 38 4q10 -10 2 -38q28 -30 41 -51q23 8 31 -1zM1937 1025q0 -29 -9 -54q82 -32 112 -132
q4 37 -9.5 98.5t-41.5 90.5q-20 19 -36 17t-16 -20zM1859 925q35 -42 47.5 -108.5t-0.5 -124.5q67 13 97 45q13 14 18 28q-3 64 -31 114.5t-79 66.5q-15 -15 -52 -21zM1822 921q-30 0 -44 1q42 -115 53 -239q21 0 43 3q16 68 1 135t-53 100zM258 839q30 100 112 132
q-9 25 -9 54q0 18 -16.5 20t-35.5 -17q-28 -29 -41.5 -90.5t-9.5 -98.5zM294 737q29 -31 97 -45q-13 58 -0.5 124.5t47.5 108.5v0q-37 6 -52 21q-51 -16 -78.5 -66t-31.5 -115q9 -17 18 -28zM471 683q14 124 73 235q-19 -4 -55 -18l-45 -19v1q-46 -89 -20 -196q25 -3 47 -3z
M1434 644q8 -38 16.5 -108.5t11.5 -89.5q3 -18 9.5 -21.5t23.5 4.5q40 20 62 85.5t23 125.5q-24 2 -146 4zM1152 1285q-116 0 -199 -82.5t-83 -198.5q0 -117 83 -199.5t199 -82.5t199 82.5t83 199.5q0 116 -83 198.5t-199 82.5zM1380 646q-105 2 -211 0v1q-1 -27 2.5 -86
t13.5 -66q29 -14 93.5 -14.5t95.5 10.5q9 3 11 39t-0.5 69.5t-4.5 46.5zM1112 447q8 4 9.5 48t-0.5 88t-4 63v1q-212 -3 -214 -3q-4 -20 -7 -62t0 -83t14 -46q34 -15 101 -16t101 10zM718 636q-16 -59 4.5 -118.5t77.5 -84.5q15 -8 24 -5t12 21q3 16 8 90t10 103
q-69 -2 -136 -6zM591 510q3 -23 -34 -36q132 -141 271.5 -240t305.5 -154q172 49 310.5 146t293.5 250q-33 13 -30 34q0 2 0.5 3.5t1.5 3t1 2.5v1v-1q-17 2 -50 5.5t-48 4.5q-26 -90 -82 -132q-51 -38 -82 1q-5 6 -9 14q-7 13 -17 62q-2 -5 -5 -9t-7.5 -7t-8 -5.5t-9.5 -4
l-10 -2.5t-12 -2l-12 -1.5t-13.5 -1t-13.5 -0.5q-106 -9 -163 11q-4 -17 -10 -26.5t-21 -15t-23 -7t-36 -3.5q-6 -1 -9 -1q-179 -17 -203 40q-2 -63 -56 -54q-47 8 -91 54q-12 13 -20 26q-17 29 -26 65q-58 -6 -87 -10q1 -2 4 -10zM507 -118q3 14 3 30q-17 71 -51 130
t-73 70q-41 12 -101.5 -14.5t-104.5 -80t-39 -107.5q35 -53 100 -93t119 -42q51 -2 94 28t53 79zM510 53q23 -63 27 -119q195 113 392 174q-98 52 -180.5 120t-179.5 165q-6 -4 -29 -13q0 -1 -1 -4t-1 -5q31 -18 22 -37q-12 -23 -56 -34q-10 -13 -29 -24h-1q-2 -83 1 -150
q19 -34 35 -73zM579 -113q532 -21 1145 0q-254 147 -428 196q-76 -35 -156 -57q-8 -3 -16 0q-65 21 -129 49q-208 -60 -416 -188h-1v-1q1 0 1 1zM1763 -67q4 54 28 120q14 38 33 71l-1 -1q3 77 3 153q-15 8 -30 25q-42 9 -56 33q-9 20 22 38q-2 4 -2 9q-16 4 -28 12
q-204 -190 -383 -284q198 -59 414 -176zM2155 -90q5 54 -39 107.5t-104 80t-102 14.5q-38 -11 -72.5 -70.5t-51.5 -129.5q0 -16 3 -30q10 -49 53 -79t94 -28q54 2 119 42t100 93z" />
    <glyph glyph-name="_538" unicode="&#xf23d;" horiz-adv-x="2304" 
d="M1524 -25q0 -68 -48 -116t-116 -48t-116.5 48t-48.5 116t48.5 116.5t116.5 48.5t116 -48.5t48 -116.5zM775 -25q0 -68 -48.5 -116t-116.5 -48t-116 48t-48 116t48 116.5t116 48.5t116.5 -48.5t48.5 -116.5zM0 1469q57 -60 110.5 -104.5t121 -82t136 -63t166 -45.5
t200 -31.5t250 -18.5t304 -9.5t372.5 -2.5q139 0 244.5 -5t181 -16.5t124 -27.5t71 -39.5t24 -51.5t-19.5 -64t-56.5 -76.5t-89.5 -91t-116 -104.5t-139 -119q-185 -157 -286 -247q29 51 76.5 109t94 105.5t94.5 98.5t83 91.5t54 80.5t13 70t-45.5 55.5t-116.5 41t-204 23.5
t-304 5q-168 -2 -314 6t-256 23t-204.5 41t-159.5 51.5t-122.5 62.5t-91.5 66.5t-68 71.5t-50.5 69.5t-40 68t-36.5 59.5z" />
    <glyph glyph-name="_539" unicode="&#xf23e;" horiz-adv-x="1792" 
d="M896 1472q-169 0 -323 -66t-265.5 -177.5t-177.5 -265.5t-66 -323t66 -323t177.5 -265.5t265.5 -177.5t323 -66t323 66t265.5 177.5t177.5 265.5t66 323t-66 323t-177.5 265.5t-265.5 177.5t-323 66zM896 1536q182 0 348 -71t286 -191t191 -286t71 -348t-71 -348
t-191 -286t-286 -191t-348 -71t-348 71t-286 191t-191 286t-71 348t71 348t191 286t286 191t348 71zM496 704q16 0 16 -16v-480q0 -16 -16 -16h-32q-16 0 -16 16v480q0 16 16 16h32zM896 640q53 0 90.5 -37.5t37.5 -90.5q0 -35 -17.5 -64t-46.5 -46v-114q0 -14 -9 -23
t-23 -9h-64q-14 0 -23 9t-9 23v114q-29 17 -46.5 46t-17.5 64q0 53 37.5 90.5t90.5 37.5zM896 1408q209 0 385.5 -103t279.5 -279.5t103 -385.5t-103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103zM544 928v-96
q0 -14 9 -23t23 -9h64q14 0 23 9t9 23v96q0 93 65.5 158.5t158.5 65.5t158.5 -65.5t65.5 -158.5v-96q0 -14 9 -23t23 -9h64q14 0 23 9t9 23v96q0 146 -103 249t-249 103t-249 -103t-103 -249zM1408 192v512q0 26 -19 45t-45 19h-896q-26 0 -45 -19t-19 -45v-512
q0 -26 19 -45t45 -19h896q26 0 45 19t19 45z" />
    <glyph glyph-name="_540" unicode="&#xf240;" horiz-adv-x="2304" 
d="M1920 1024v-768h-1664v768h1664zM2048 448h128v384h-128v288q0 14 -9 23t-23 9h-1856q-14 0 -23 -9t-9 -23v-960q0 -14 9 -23t23 -9h1856q14 0 23 9t9 23v288zM2304 832v-384q0 -53 -37.5 -90.5t-90.5 -37.5v-160q0 -66 -47 -113t-113 -47h-1856q-66 0 -113 47t-47 113
v960q0 66 47 113t113 47h1856q66 0 113 -47t47 -113v-160q53 0 90.5 -37.5t37.5 -90.5z" />
    <glyph glyph-name="_541" unicode="&#xf241;" horiz-adv-x="2304" 
d="M256 256v768h1280v-768h-1280zM2176 960q53 0 90.5 -37.5t37.5 -90.5v-384q0 -53 -37.5 -90.5t-90.5 -37.5v-160q0 -66 -47 -113t-113 -47h-1856q-66 0 -113 47t-47 113v960q0 66 47 113t113 47h1856q66 0 113 -47t47 -113v-160zM2176 448v384h-128v288q0 14 -9 23t-23 9
h-1856q-14 0 -23 -9t-9 -23v-960q0 -14 9 -23t23 -9h1856q14 0 23 9t9 23v288h128z" />
    <glyph glyph-name="_542" unicode="&#xf242;" horiz-adv-x="2304" 
d="M256 256v768h896v-768h-896zM2176 960q53 0 90.5 -37.5t37.5 -90.5v-384q0 -53 -37.5 -90.5t-90.5 -37.5v-160q0 -66 -47 -113t-113 -47h-1856q-66 0 -113 47t-47 113v960q0 66 47 113t113 47h1856q66 0 113 -47t47 -113v-160zM2176 448v384h-128v288q0 14 -9 23t-23 9
h-1856q-14 0 -23 -9t-9 -23v-960q0 -14 9 -23t23 -9h1856q14 0 23 9t9 23v288h128z" />
    <glyph glyph-name="_543" unicode="&#xf243;" horiz-adv-x="2304" 
d="M256 256v768h512v-768h-512zM2176 960q53 0 90.5 -37.5t37.5 -90.5v-384q0 -53 -37.5 -90.5t-90.5 -37.5v-160q0 -66 -47 -113t-113 -47h-1856q-66 0 -113 47t-47 113v960q0 66 47 113t113 47h1856q66 0 113 -47t47 -113v-160zM2176 448v384h-128v288q0 14 -9 23t-23 9
h-1856q-14 0 -23 -9t-9 -23v-960q0 -14 9 -23t23 -9h1856q14 0 23 9t9 23v288h128z" />
    <glyph glyph-name="_544" unicode="&#xf244;" horiz-adv-x="2304" 
d="M2176 960q53 0 90.5 -37.5t37.5 -90.5v-384q0 -53 -37.5 -90.5t-90.5 -37.5v-160q0 -66 -47 -113t-113 -47h-1856q-66 0 -113 47t-47 113v960q0 66 47 113t113 47h1856q66 0 113 -47t47 -113v-160zM2176 448v384h-128v288q0 14 -9 23t-23 9h-1856q-14 0 -23 -9t-9 -23
v-960q0 -14 9 -23t23 -9h1856q14 0 23 9t9 23v288h128z" />
    <glyph glyph-name="_545" unicode="&#xf245;" horiz-adv-x="1280" 
d="M1133 493q31 -30 14 -69q-17 -40 -59 -40h-382l201 -476q10 -25 0 -49t-34 -35l-177 -75q-25 -10 -49 0t-35 34l-191 452l-312 -312q-19 -19 -45 -19q-12 0 -24 5q-40 17 -40 59v1504q0 42 40 59q12 5 24 5q27 0 45 -19z" />
    <glyph glyph-name="_546" unicode="&#xf246;" horiz-adv-x="1024" 
d="M832 1408q-320 0 -320 -224v-416h128v-128h-128v-544q0 -224 320 -224h64v-128h-64q-272 0 -384 146q-112 -146 -384 -146h-64v128h64q320 0 320 224v544h-128v128h128v416q0 224 -320 224h-64v128h64q272 0 384 -146q112 146 384 146h64v-128h-64z" />
    <glyph glyph-name="_547" unicode="&#xf247;" horiz-adv-x="2048" 
d="M2048 1152h-128v-1024h128v-384h-384v128h-1280v-128h-384v384h128v1024h-128v384h384v-128h1280v128h384v-384zM1792 1408v-128h128v128h-128zM128 1408v-128h128v128h-128zM256 -128v128h-128v-128h128zM1664 0v128h128v1024h-128v128h-1280v-128h-128v-1024h128v-128
h1280zM1920 -128v128h-128v-128h128zM1280 896h384v-768h-896v256h-384v768h896v-256zM512 512h640v512h-640v-512zM1536 256v512h-256v-384h-384v-128h640z" />
    <glyph glyph-name="_548" unicode="&#xf248;" horiz-adv-x="2304" 
d="M2304 768h-128v-640h128v-384h-384v128h-896v-128h-384v384h128v128h-384v-128h-384v384h128v640h-128v384h384v-128h896v128h384v-384h-128v-128h384v128h384v-384zM2048 1024v-128h128v128h-128zM1408 1408v-128h128v128h-128zM128 1408v-128h128v128h-128zM256 256
v128h-128v-128h128zM1536 384h-128v-128h128v128zM384 384h896v128h128v640h-128v128h-896v-128h-128v-640h128v-128zM896 -128v128h-128v-128h128zM2176 -128v128h-128v-128h128zM2048 128v640h-128v128h-384v-384h128v-384h-384v128h-384v-128h128v-128h896v128h128z" />
    <glyph glyph-name="_549" unicode="&#xf249;" 
d="M1024 288v-416h-928q-40 0 -68 28t-28 68v1344q0 40 28 68t68 28h1344q40 0 68 -28t28 -68v-928h-416q-40 0 -68 -28t-28 -68zM1152 256h381q-15 -82 -65 -132l-184 -184q-50 -50 -132 -65v381z" />
    <glyph glyph-name="_550" unicode="&#xf24a;" 
d="M1400 256h-248v-248q29 10 41 22l185 185q12 12 22 41zM1120 384h288v896h-1280v-1280h896v288q0 40 28 68t68 28zM1536 1312v-1024q0 -40 -20 -88t-48 -76l-184 -184q-28 -28 -76 -48t-88 -20h-1024q-40 0 -68 28t-28 68v1344q0 40 28 68t68 28h1344q40 0 68 -28t28 -68
z" />
    <glyph glyph-name="_551" unicode="&#xf24b;" horiz-adv-x="2304" 
d="M1951 538q0 -26 -15.5 -44.5t-38.5 -23.5q-8 -2 -18 -2h-153v140h153q10 0 18 -2q23 -5 38.5 -23.5t15.5 -44.5zM1933 751q0 -25 -15 -42t-38 -21q-3 -1 -15 -1h-139v129h139q3 0 8.5 -0.5t6.5 -0.5q23 -4 38 -21.5t15 -42.5zM728 587v308h-228v-308q0 -58 -38 -94.5
t-105 -36.5q-108 0 -229 59v-112q53 -15 121 -23t109 -9l42 -1q328 0 328 217zM1442 403v113q-99 -52 -200 -59q-108 -8 -169 41t-61 142t61 142t169 41q101 -7 200 -58v112q-48 12 -100 19.5t-80 9.5l-28 2q-127 6 -218.5 -14t-140.5 -60t-71 -88t-22 -106t22 -106t71 -88
t140.5 -60t218.5 -14q101 4 208 31zM2176 518q0 54 -43 88.5t-109 39.5v3q57 8 89 41.5t32 79.5q0 55 -41 88t-107 36q-3 0 -12 0.5t-14 0.5h-455v-510h491q74 0 121.5 36.5t47.5 96.5zM2304 1280v-1280q0 -52 -38 -90t-90 -38h-2048q-52 0 -90 38t-38 90v1280q0 52 38 90
t90 38h2048q52 0 90 -38t38 -90z" />
    <glyph glyph-name="_552" unicode="&#xf24c;" horiz-adv-x="2304" 
d="M858 295v693q-106 -41 -172 -135.5t-66 -211.5t66 -211.5t172 -134.5zM1362 641q0 117 -66 211.5t-172 135.5v-694q106 41 172 135.5t66 211.5zM1577 641q0 -159 -78.5 -294t-213.5 -213.5t-294 -78.5q-119 0 -227.5 46.5t-187 125t-125 187t-46.5 227.5q0 159 78.5 294
t213.5 213.5t294 78.5t294 -78.5t213.5 -213.5t78.5 -294zM1960 634q0 139 -55.5 261.5t-147.5 205.5t-213.5 131t-252.5 48h-301q-176 0 -323.5 -81t-235 -230t-87.5 -335q0 -171 87 -317.5t236 -231.5t323 -85h301q129 0 251.5 50.5t214.5 135t147.5 202.5t55.5 246z
M2304 1280v-1280q0 -52 -38 -90t-90 -38h-2048q-52 0 -90 38t-38 90v1280q0 52 38 90t90 38h2048q52 0 90 -38t38 -90z" />
    <glyph glyph-name="_553" unicode="&#xf24d;" horiz-adv-x="1792" 
d="M1664 -96v1088q0 13 -9.5 22.5t-22.5 9.5h-1088q-13 0 -22.5 -9.5t-9.5 -22.5v-1088q0 -13 9.5 -22.5t22.5 -9.5h1088q13 0 22.5 9.5t9.5 22.5zM1792 992v-1088q0 -66 -47 -113t-113 -47h-1088q-66 0 -113 47t-47 113v1088q0 66 47 113t113 47h1088q66 0 113 -47t47 -113
zM1408 1376v-160h-128v160q0 13 -9.5 22.5t-22.5 9.5h-1088q-13 0 -22.5 -9.5t-9.5 -22.5v-1088q0 -13 9.5 -22.5t22.5 -9.5h160v-128h-160q-66 0 -113 47t-47 113v1088q0 66 47 113t113 47h1088q66 0 113 -47t47 -113z" />
    <glyph glyph-name="_554" unicode="&#xf24e;" horiz-adv-x="2304" 
d="M1728 1088l-384 -704h768zM448 1088l-384 -704h768zM1269 1280q-14 -40 -45.5 -71.5t-71.5 -45.5v-1291h608q14 0 23 -9t9 -23v-64q0 -14 -9 -23t-23 -9h-1344q-14 0 -23 9t-9 23v64q0 14 9 23t23 9h608v1291q-40 14 -71.5 45.5t-45.5 71.5h-491q-14 0 -23 9t-9 23v64
q0 14 9 23t23 9h491q21 57 70 92.5t111 35.5t111 -35.5t70 -92.5h491q14 0 23 -9t9 -23v-64q0 -14 -9 -23t-23 -9h-491zM1088 1264q33 0 56.5 23.5t23.5 56.5t-23.5 56.5t-56.5 23.5t-56.5 -23.5t-23.5 -56.5t23.5 -56.5t56.5 -23.5zM2176 384q0 -73 -46.5 -131t-117.5 -91
t-144.5 -49.5t-139.5 -16.5t-139.5 16.5t-144.5 49.5t-117.5 91t-46.5 131q0 11 35 81t92 174.5t107 195.5t102 184t56 100q18 33 56 33t56 -33q4 -7 56 -100t102 -184t107 -195.5t92 -174.5t35 -81zM896 384q0 -73 -46.5 -131t-117.5 -91t-144.5 -49.5t-139.5 -16.5
t-139.5 16.5t-144.5 49.5t-117.5 91t-46.5 131q0 11 35 81t92 174.5t107 195.5t102 184t56 100q18 33 56 33t56 -33q4 -7 56 -100t102 -184t107 -195.5t92 -174.5t35 -81z" />
    <glyph glyph-name="_555" unicode="&#xf250;" 
d="M1408 1408q0 -261 -106.5 -461.5t-266.5 -306.5q160 -106 266.5 -306.5t106.5 -461.5h96q14 0 23 -9t9 -23v-64q0 -14 -9 -23t-23 -9h-1472q-14 0 -23 9t-9 23v64q0 14 9 23t23 9h96q0 261 106.5 461.5t266.5 306.5q-160 106 -266.5 306.5t-106.5 461.5h-96q-14 0 -23 9
t-9 23v64q0 14 9 23t23 9h1472q14 0 23 -9t9 -23v-64q0 -14 -9 -23t-23 -9h-96zM874 700q77 29 149 92.5t129.5 152.5t92.5 210t35 253h-1024q0 -132 35 -253t92.5 -210t129.5 -152.5t149 -92.5q19 -7 30.5 -23.5t11.5 -36.5t-11.5 -36.5t-30.5 -23.5q-77 -29 -149 -92.5
t-129.5 -152.5t-92.5 -210t-35 -253h1024q0 132 -35 253t-92.5 210t-129.5 152.5t-149 92.5q-19 7 -30.5 23.5t-11.5 36.5t11.5 36.5t30.5 23.5z" />
    <glyph glyph-name="_556" unicode="&#xf251;" 
d="M1408 1408q0 -261 -106.5 -461.5t-266.5 -306.5q160 -106 266.5 -306.5t106.5 -461.5h96q14 0 23 -9t9 -23v-64q0 -14 -9 -23t-23 -9h-1472q-14 0 -23 9t-9 23v64q0 14 9 23t23 9h96q0 261 106.5 461.5t266.5 306.5q-160 106 -266.5 306.5t-106.5 461.5h-96q-14 0 -23 9
t-9 23v64q0 14 9 23t23 9h1472q14 0 23 -9t9 -23v-64q0 -14 -9 -23t-23 -9h-96zM1280 1408h-1024q0 -66 9 -128h1006q9 61 9 128zM1280 -128q0 130 -34 249.5t-90.5 208t-126.5 152t-146 94.5h-230q-76 -31 -146 -94.5t-126.5 -152t-90.5 -208t-34 -249.5h1024z" />
    <glyph glyph-name="_557" unicode="&#xf252;" 
d="M1408 1408q0 -261 -106.5 -461.5t-266.5 -306.5q160 -106 266.5 -306.5t106.5 -461.5h96q14 0 23 -9t9 -23v-64q0 -14 -9 -23t-23 -9h-1472q-14 0 -23 9t-9 23v64q0 14 9 23t23 9h96q0 261 106.5 461.5t266.5 306.5q-160 106 -266.5 306.5t-106.5 461.5h-96q-14 0 -23 9
t-9 23v64q0 14 9 23t23 9h1472q14 0 23 -9t9 -23v-64q0 -14 -9 -23t-23 -9h-96zM1280 1408h-1024q0 -206 85 -384h854q85 178 85 384zM1223 192q-54 141 -145.5 241.5t-194.5 142.5h-230q-103 -42 -194.5 -142.5t-145.5 -241.5h910z" />
    <glyph glyph-name="_558" unicode="&#xf253;" 
d="M1408 1408q0 -261 -106.5 -461.5t-266.5 -306.5q160 -106 266.5 -306.5t106.5 -461.5h96q14 0 23 -9t9 -23v-64q0 -14 -9 -23t-23 -9h-1472q-14 0 -23 9t-9 23v64q0 14 9 23t23 9h96q0 261 106.5 461.5t266.5 306.5q-160 106 -266.5 306.5t-106.5 461.5h-96q-14 0 -23 9
t-9 23v64q0 14 9 23t23 9h1472q14 0 23 -9t9 -23v-64q0 -14 -9 -23t-23 -9h-96zM874 700q77 29 149 92.5t129.5 152.5t92.5 210t35 253h-1024q0 -132 35 -253t92.5 -210t129.5 -152.5t149 -92.5q19 -7 30.5 -23.5t11.5 -36.5t-11.5 -36.5t-30.5 -23.5q-137 -51 -244 -196
h700q-107 145 -244 196q-19 7 -30.5 23.5t-11.5 36.5t11.5 36.5t30.5 23.5z" />
    <glyph glyph-name="_559" unicode="&#xf254;" 
d="M1504 -64q14 0 23 -9t9 -23v-128q0 -14 -9 -23t-23 -9h-1472q-14 0 -23 9t-9 23v128q0 14 9 23t23 9h1472zM130 0q3 55 16 107t30 95t46 87t53.5 76t64.5 69.5t66 60t70.5 55t66.5 47.5t65 43q-43 28 -65 43t-66.5 47.5t-70.5 55t-66 60t-64.5 69.5t-53.5 76t-46 87
t-30 95t-16 107h1276q-3 -55 -16 -107t-30 -95t-46 -87t-53.5 -76t-64.5 -69.5t-66 -60t-70.5 -55t-66.5 -47.5t-65 -43q43 -28 65 -43t66.5 -47.5t70.5 -55t66 -60t64.5 -69.5t53.5 -76t46 -87t30 -95t16 -107h-1276zM1504 1536q14 0 23 -9t9 -23v-128q0 -14 -9 -23t-23 -9
h-1472q-14 0 -23 9t-9 23v128q0 14 9 23t23 9h1472z" />
    <glyph glyph-name="_560" unicode="&#xf255;" 
d="M768 1152q-53 0 -90.5 -37.5t-37.5 -90.5v-128h-32v93q0 48 -32 81.5t-80 33.5q-46 0 -79 -33t-33 -79v-429l-32 30v172q0 48 -32 81.5t-80 33.5q-46 0 -79 -33t-33 -79v-224q0 -47 35 -82l310 -296q39 -39 39 -102q0 -26 19 -45t45 -19h640q26 0 45 19t19 45v25
q0 41 10 77l108 436q10 36 10 77v246q0 48 -32 81.5t-80 33.5q-46 0 -79 -33t-33 -79v-32h-32v125q0 40 -25 72.5t-64 40.5q-14 2 -23 2q-46 0 -79 -33t-33 -79v-128h-32v122q0 51 -32.5 89.5t-82.5 43.5q-5 1 -13 1zM768 1280q84 0 149 -50q57 34 123 34q59 0 111 -27
t86 -76q27 7 59 7q100 0 170 -71.5t70 -171.5v-246q0 -51 -13 -108l-109 -436q-6 -24 -6 -71q0 -80 -56 -136t-136 -56h-640q-84 0 -138 58.5t-54 142.5l-308 296q-76 73 -76 175v224q0 99 70.5 169.5t169.5 70.5q11 0 16 -1q6 95 75.5 160t164.5 65q52 0 98 -21
q72 69 174 69z" />
    <glyph glyph-name="_561" unicode="&#xf256;" horiz-adv-x="1792" 
d="M880 1408q-46 0 -79 -33t-33 -79v-656h-32v528q0 46 -33 79t-79 33t-79 -33t-33 -79v-528v-256l-154 205q-38 51 -102 51q-53 0 -90.5 -37.5t-37.5 -90.5q0 -43 26 -77l384 -512q38 -51 102 -51h688q34 0 61 22t34 56l76 405q5 32 5 59v498q0 46 -33 79t-79 33t-79 -33
t-33 -79v-272h-32v528q0 46 -33 79t-79 33t-79 -33t-33 -79v-528h-32v656q0 46 -33 79t-79 33zM880 1536q68 0 125.5 -35.5t88.5 -96.5q19 4 42 4q99 0 169.5 -70.5t70.5 -169.5v-17q105 6 180.5 -64t75.5 -175v-498q0 -40 -8 -83l-76 -404q-14 -79 -76.5 -131t-143.5 -52
h-688q-60 0 -114.5 27.5t-90.5 74.5l-384 512q-51 68 -51 154q0 106 75 181t181 75q78 0 128 -34v434q0 99 70.5 169.5t169.5 70.5q23 0 42 -4q31 61 88.5 96.5t125.5 35.5z" />
    <glyph glyph-name="_562" unicode="&#xf257;" horiz-adv-x="1792" 
d="M1073 -128h-177q-163 0 -226 141q-23 49 -23 102v5q-62 30 -98.5 88.5t-36.5 127.5q0 38 5 48h-261q-106 0 -181 75t-75 181t75 181t181 75h113l-44 17q-74 28 -119.5 93.5t-45.5 145.5q0 106 75 181t181 75q46 0 91 -17l628 -239h401q106 0 181 -75t75 -181v-668
q0 -88 -54 -157.5t-140 -90.5l-339 -85q-92 -23 -186 -23zM1024 583l-155 -71l-163 -74q-30 -14 -48 -41.5t-18 -60.5q0 -46 33 -79t79 -33q26 0 46 10l338 154q-49 10 -80.5 50t-31.5 90v55zM1344 272q0 46 -33 79t-79 33q-26 0 -46 -10l-290 -132q-28 -13 -37 -17
t-30.5 -17t-29.5 -23.5t-16 -29t-8 -40.5q0 -50 31.5 -82t81.5 -32q20 0 38 9l352 160q30 14 48 41.5t18 60.5zM1112 1024l-650 248q-24 8 -46 8q-53 0 -90.5 -37.5t-37.5 -90.5q0 -40 22.5 -73t59.5 -47l526 -200v-64h-640q-53 0 -90.5 -37.5t-37.5 -90.5t37.5 -90.5
t90.5 -37.5h535l233 106v198q0 63 46 106l111 102h-69zM1073 0q82 0 155 19l339 85q43 11 70 45.5t27 78.5v668q0 53 -37.5 90.5t-90.5 37.5h-308l-136 -126q-36 -33 -36 -82v-296q0 -46 33 -77t79 -31t79 35t33 81v208h32v-208q0 -70 -57 -114q52 -8 86.5 -48.5t34.5 -93.5
q0 -42 -23 -78t-61 -53l-310 -141h91z" />
    <glyph glyph-name="_563" unicode="&#xf258;" horiz-adv-x="2048" 
d="M1151 1536q61 0 116 -28t91 -77l572 -781q118 -159 118 -359v-355q0 -80 -56 -136t-136 -56h-384q-80 0 -136 56t-56 136v177l-286 143h-546q-80 0 -136 56t-56 136v32q0 119 84.5 203.5t203.5 84.5h420l42 128h-686q-100 0 -173.5 67.5t-81.5 166.5q-65 79 -65 182v32
q0 80 56 136t136 56h959zM1920 -64v355q0 157 -93 284l-573 781q-39 52 -103 52h-959q-26 0 -45 -19t-19 -45q0 -32 1.5 -49.5t9.5 -40.5t25 -43q10 31 35.5 50t56.5 19h832v-32h-832q-26 0 -45 -19t-19 -45q0 -44 3 -58q8 -44 44 -73t81 -29h640h91q40 0 68 -28t28 -68
q0 -15 -5 -30l-64 -192q-10 -29 -35 -47.5t-56 -18.5h-443q-66 0 -113 -47t-47 -113v-32q0 -26 19 -45t45 -19h561q16 0 29 -7l317 -158q24 -13 38.5 -36t14.5 -50v-197q0 -26 19 -45t45 -19h384q26 0 45 19t19 45z" />
    <glyph glyph-name="_564" unicode="&#xf259;" horiz-adv-x="2048" 
d="M459 -256q-77 0 -137.5 47.5t-79.5 122.5l-101 401q-13 57 -13 108q0 45 -5 67l-116 477q-7 27 -7 57q0 93 62 161t155 78q17 85 82.5 139t152.5 54q83 0 148 -51.5t85 -132.5l83 -348l103 428q20 81 85 132.5t148 51.5q89 0 155.5 -57.5t80.5 -144.5q92 -10 152 -79
t60 -162q0 -24 -7 -59l-123 -512q10 7 37.5 28.5t38.5 29.5t35 23t41 20.5t41.5 11t49.5 5.5q105 0 180 -74t75 -179q0 -62 -28.5 -118t-78.5 -94l-507 -380q-68 -51 -153 -51h-694zM1104 1408q-38 0 -68.5 -24t-39.5 -62l-164 -682h-127l-145 602q-9 38 -39.5 62t-68.5 24
q-48 0 -80 -33t-32 -80q0 -15 3 -28l132 -547h-26l-99 408q-9 37 -40 62.5t-69 25.5q-47 0 -80 -33t-33 -79q0 -14 3 -26l116 -478q7 -28 9 -86t10 -88l100 -401q8 -32 34 -52.5t59 -20.5h694q42 0 76 26l507 379q56 43 56 110q0 52 -37.5 88.5t-89.5 36.5q-43 0 -77 -26
l-307 -230v227q0 4 32 138t68 282t39 161q4 18 4 29q0 47 -32 81t-79 34q-39 0 -69.5 -24t-39.5 -62l-116 -482h-26l150 624q3 14 3 28q0 48 -31.5 82t-79.5 34z" />
    <glyph glyph-name="_565" unicode="&#xf25a;" horiz-adv-x="1792" 
d="M640 1408q-53 0 -90.5 -37.5t-37.5 -90.5v-512v-384l-151 202q-41 54 -107 54q-52 0 -89 -38t-37 -90q0 -43 26 -77l384 -512q38 -51 102 -51h718q22 0 39.5 13.5t22.5 34.5l92 368q24 96 24 194v217q0 41 -28 71t-68 30t-68 -28t-28 -68h-32v61q0 48 -32 81.5t-80 33.5
q-46 0 -79 -33t-33 -79v-64h-32v90q0 55 -37 94.5t-91 39.5q-53 0 -90.5 -37.5t-37.5 -90.5v-96h-32v570q0 55 -37 94.5t-91 39.5zM640 1536q107 0 181.5 -77.5t74.5 -184.5v-220q22 2 32 2q99 0 173 -69q47 21 99 21q113 0 184 -87q27 7 56 7q94 0 159 -67.5t65 -161.5
v-217q0 -116 -28 -225l-92 -368q-16 -64 -68 -104.5t-118 -40.5h-718q-60 0 -114.5 27.5t-90.5 74.5l-384 512q-51 68 -51 154q0 105 74.5 180.5t179.5 75.5q71 0 130 -35v547q0 106 75 181t181 75zM768 128v384h-32v-384h32zM1024 128v384h-32v-384h32zM1280 128v384h-32
v-384h32z" />
    <glyph glyph-name="_566" unicode="&#xf25b;" 
d="M1288 889q60 0 107 -23q141 -63 141 -226v-177q0 -94 -23 -186l-85 -339q-21 -86 -90.5 -140t-157.5 -54h-668q-106 0 -181 75t-75 181v401l-239 628q-17 45 -17 91q0 106 75 181t181 75q80 0 145.5 -45.5t93.5 -119.5l17 -44v113q0 106 75 181t181 75t181 -75t75 -181
v-261q27 5 48 5q69 0 127.5 -36.5t88.5 -98.5zM1072 896q-33 0 -60.5 -18t-41.5 -48l-74 -163l-71 -155h55q50 0 90 -31.5t50 -80.5l154 338q10 20 10 46q0 46 -33 79t-79 33zM1293 761q-22 0 -40.5 -8t-29 -16t-23.5 -29.5t-17 -30.5t-17 -37l-132 -290q-10 -20 -10 -46
q0 -46 33 -79t79 -33q33 0 60.5 18t41.5 48l160 352q9 18 9 38q0 50 -32 81.5t-82 31.5zM128 1120q0 -22 8 -46l248 -650v-69l102 111q43 46 106 46h198l106 233v535q0 53 -37.5 90.5t-90.5 37.5t-90.5 -37.5t-37.5 -90.5v-640h-64l-200 526q-14 37 -47 59.5t-73 22.5
q-53 0 -90.5 -37.5t-37.5 -90.5zM1180 -128q44 0 78.5 27t45.5 70l85 339q19 73 19 155v91l-141 -310q-17 -38 -53 -61t-78 -23q-53 0 -93.5 34.5t-48.5 86.5q-44 -57 -114 -57h-208v32h208q46 0 81 33t35 79t-31 79t-77 33h-296q-49 0 -82 -36l-126 -136v-308
q0 -53 37.5 -90.5t90.5 -37.5h668z" />
    <glyph glyph-name="_567" unicode="&#xf25c;" horiz-adv-x="1973" 
d="M857 992v-117q0 -13 -9.5 -22t-22.5 -9h-298v-812q0 -13 -9 -22.5t-22 -9.5h-135q-13 0 -22.5 9t-9.5 23v812h-297q-13 0 -22.5 9t-9.5 22v117q0 14 9 23t23 9h793q13 0 22.5 -9.5t9.5 -22.5zM1895 995l77 -961q1 -13 -8 -24q-10 -10 -23 -10h-134q-12 0 -21 8.5
t-10 20.5l-46 588l-189 -425q-8 -19 -29 -19h-120q-20 0 -29 19l-188 427l-45 -590q-1 -12 -10 -20.5t-21 -8.5h-135q-13 0 -23 10q-9 10 -9 24l78 961q1 12 10 20.5t21 8.5h142q20 0 29 -19l220 -520q10 -24 20 -51q3 7 9.5 24.5t10.5 26.5l221 520q9 19 29 19h141
q13 0 22 -8.5t10 -20.5z" />
    <glyph glyph-name="_568" unicode="&#xf25d;" horiz-adv-x="1792" 
d="M1042 833q0 88 -60 121q-33 18 -117 18h-123v-281h162q66 0 102 37t36 105zM1094 548l205 -373q8 -17 -1 -31q-8 -16 -27 -16h-152q-20 0 -28 17l-194 365h-155v-350q0 -14 -9 -23t-23 -9h-134q-14 0 -23 9t-9 23v960q0 14 9 23t23 9h294q128 0 190 -24q85 -31 134 -109
t49 -180q0 -92 -42.5 -165.5t-115.5 -109.5q6 -10 9 -16zM896 1376q-150 0 -286 -58.5t-234.5 -157t-157 -234.5t-58.5 -286t58.5 -286t157 -234.5t234.5 -157t286 -58.5t286 58.5t234.5 157t157 234.5t58.5 286t-58.5 286t-157 234.5t-234.5 157t-286 58.5zM1792 640
q0 -182 -71 -348t-191 -286t-286 -191t-348 -71t-348 71t-286 191t-191 286t-71 348t71 348t191 286t286 191t348 71t348 -71t286 -191t191 -286t71 -348z" />
    <glyph glyph-name="_569" unicode="&#xf25e;" horiz-adv-x="1792" 
d="M605 303q153 0 257 104q14 18 3 36l-45 82q-6 13 -24 17q-16 2 -27 -11l-4 -3q-4 -4 -11.5 -10t-17.5 -13.5t-23.5 -14.5t-28.5 -13t-33.5 -9.5t-37.5 -3.5q-76 0 -125 50t-49 127q0 76 48 125.5t122 49.5q37 0 71.5 -14t50.5 -28l16 -14q11 -11 26 -10q16 2 24 14l53 78
q13 20 -2 39q-3 4 -11 12t-30 23.5t-48.5 28t-67.5 22.5t-86 10q-148 0 -246 -96.5t-98 -240.5q0 -146 97 -241.5t247 -95.5zM1235 303q153 0 257 104q14 18 4 36l-45 82q-8 14 -25 17q-16 2 -27 -11l-4 -3q-4 -4 -11.5 -10t-17.5 -13.5t-23.5 -14.5t-28.5 -13t-33.5 -9.5
t-37.5 -3.5q-76 0 -125 50t-49 127q0 76 48 125.5t122 49.5q37 0 71.5 -14t50.5 -28l16 -14q11 -11 26 -10q16 2 24 14l53 78q13 20 -2 39q-3 4 -11 12t-30 23.5t-48.5 28t-67.5 22.5t-86 10q-147 0 -245.5 -96.5t-98.5 -240.5q0 -146 97 -241.5t247 -95.5zM896 1376
q-150 0 -286 -58.5t-234.5 -157t-157 -234.5t-58.5 -286t58.5 -286t157 -234.5t234.5 -157t286 -58.5t286 58.5t234.5 157t157 234.5t58.5 286t-58.5 286t-157 234.5t-234.5 157t-286 58.5zM896 1536q182 0 348 -71t286 -191t191 -286t71 -348t-71 -348t-191 -286t-286 -191
t-348 -71t-348 71t-286 191t-191 286t-71 348t71 348t191 286t286 191t348 71z" />
    <glyph glyph-name="f260" unicode="&#xf260;" horiz-adv-x="2048" 
d="M736 736l384 -384l-384 -384l-672 672l672 672l168 -168l-96 -96l-72 72l-480 -480l480 -480l193 193l-289 287zM1312 1312l672 -672l-672 -672l-168 168l96 96l72 -72l480 480l-480 480l-193 -193l289 -287l-96 -96l-384 384z" />
    <glyph glyph-name="f261" unicode="&#xf261;" horiz-adv-x="1792" 
d="M717 182l271 271l-279 279l-88 -88l192 -191l-96 -96l-279 279l279 279l40 -40l87 87l-127 128l-454 -454zM1075 190l454 454l-454 454l-271 -271l279 -279l88 88l-192 191l96 96l279 -279l-279 -279l-40 40l-87 -88zM1792 640q0 -182 -71 -348t-191 -286t-286 -191
t-348 -71t-348 71t-286 191t-191 286t-71 348t71 348t191 286t286 191t348 71t348 -71t286 -191t191 -286t71 -348z" />
    <glyph glyph-name="_572" unicode="&#xf262;" horiz-adv-x="2304" 
d="M651 539q0 -39 -27.5 -66.5t-65.5 -27.5q-39 0 -66.5 27.5t-27.5 66.5q0 38 27.5 65.5t66.5 27.5q38 0 65.5 -27.5t27.5 -65.5zM1805 540q0 -39 -27.5 -66.5t-66.5 -27.5t-66.5 27.5t-27.5 66.5t27.5 66t66.5 27t66.5 -27t27.5 -66zM765 539q0 79 -56.5 136t-136.5 57
t-136.5 -56.5t-56.5 -136.5t56.5 -136.5t136.5 -56.5t136.5 56.5t56.5 136.5zM1918 540q0 80 -56.5 136.5t-136.5 56.5q-79 0 -136 -56.5t-57 -136.5t56.5 -136.5t136.5 -56.5t136.5 56.5t56.5 136.5zM850 539q0 -116 -81.5 -197.5t-196.5 -81.5q-116 0 -197.5 82t-81.5 197
t82 196.5t197 81.5t196.5 -81.5t81.5 -196.5zM2004 540q0 -115 -81.5 -196.5t-197.5 -81.5q-115 0 -196.5 81.5t-81.5 196.5t81.5 196.5t196.5 81.5q116 0 197.5 -81.5t81.5 -196.5zM1040 537q0 191 -135.5 326.5t-326.5 135.5q-125 0 -231 -62t-168 -168.5t-62 -231.5
t62 -231.5t168 -168.5t231 -62q191 0 326.5 135.5t135.5 326.5zM1708 1110q-254 111 -556 111q-319 0 -573 -110q117 0 223 -45.5t182.5 -122.5t122 -183t45.5 -223q0 115 43.5 219.5t118 180.5t177.5 123t217 50zM2187 537q0 191 -135 326.5t-326 135.5t-326.5 -135.5
t-135.5 -326.5t135.5 -326.5t326.5 -135.5t326 135.5t135 326.5zM1921 1103h383q-44 -51 -75 -114.5t-40 -114.5q110 -151 110 -337q0 -156 -77 -288t-209 -208.5t-287 -76.5q-133 0 -249 56t-196 155q-47 -56 -129 -179q-11 22 -53.5 82.5t-74.5 97.5
q-80 -99 -196.5 -155.5t-249.5 -56.5q-155 0 -287 76.5t-209 208.5t-77 288q0 186 110 337q-9 51 -40 114.5t-75 114.5h365q149 100 355 156.5t432 56.5q224 0 421 -56t348 -157z" />
    <glyph glyph-name="f263" unicode="&#xf263;" horiz-adv-x="1280" 
d="M640 629q-188 0 -321 133t-133 320q0 188 133 321t321 133t321 -133t133 -321q0 -187 -133 -320t-321 -133zM640 1306q-92 0 -157.5 -65.5t-65.5 -158.5q0 -92 65.5 -157.5t157.5 -65.5t157.5 65.5t65.5 157.5q0 93 -65.5 158.5t-157.5 65.5zM1163 574q13 -27 15 -49.5
t-4.5 -40.5t-26.5 -38.5t-42.5 -37t-61.5 -41.5q-115 -73 -315 -94l73 -72l267 -267q30 -31 30 -74t-30 -73l-12 -13q-31 -30 -74 -30t-74 30q-67 68 -267 268l-267 -268q-31 -30 -74 -30t-73 30l-12 13q-31 30 -31 73t31 74l267 267l72 72q-203 21 -317 94
q-39 25 -61.5 41.5t-42.5 37t-26.5 38.5t-4.5 40.5t15 49.5q10 20 28 35t42 22t56 -2t65 -35q5 -4 15 -11t43 -24.5t69 -30.5t92 -24t113 -11q91 0 174 25.5t120 50.5l38 25q33 26 65 35t56 2t42 -22t28 -35z" />
    <glyph glyph-name="_574" unicode="&#xf264;" 
d="M927 956q0 -66 -46.5 -112.5t-112.5 -46.5t-112.5 46.5t-46.5 112.5t46.5 112.5t112.5 46.5t112.5 -46.5t46.5 -112.5zM1141 593q-10 20 -28 32t-47.5 9.5t-60.5 -27.5q-10 -8 -29 -20t-81 -32t-127 -20t-124 18t-86 36l-27 18q-31 25 -60.5 27.5t-47.5 -9.5t-28 -32
q-22 -45 -2 -74.5t87 -73.5q83 -53 226 -67l-51 -52q-142 -142 -191 -190q-22 -22 -22 -52.5t22 -52.5l9 -9q22 -22 52.5 -22t52.5 22l191 191q114 -115 191 -191q22 -22 52.5 -22t52.5 22l9 9q22 22 22 52.5t-22 52.5l-191 190l-52 52q141 14 225 67q67 44 87 73.5t-2 74.5
zM1092 956q0 134 -95 229t-229 95t-229 -95t-95 -229t95 -229t229 -95t229 95t95 229zM1536 1120v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z" />
    <glyph glyph-name="_575" unicode="&#xf265;" horiz-adv-x="1720" 
d="M1565 1408q65 0 110 -45.5t45 -110.5v-519q0 -176 -68 -336t-182.5 -275t-274 -182.5t-334.5 -67.5q-176 0 -335.5 67.5t-274.5 182.5t-183 275t-68 336v519q0 64 46 110t110 46h1409zM861 344q47 0 82 33l404 388q37 35 37 85q0 49 -34.5 83.5t-83.5 34.5q-47 0 -82 -33
l-323 -310l-323 310q-35 33 -81 33q-49 0 -83.5 -34.5t-34.5 -83.5q0 -51 36 -85l405 -388q33 -33 81 -33z" />
    <glyph glyph-name="_576" unicode="&#xf266;" horiz-adv-x="2304" 
d="M1494 -103l-295 695q-25 -49 -158.5 -305.5t-198.5 -389.5q-1 -1 -27.5 -0.5t-26.5 1.5q-82 193 -255.5 587t-259.5 596q-21 50 -66.5 107.5t-103.5 100.5t-102 43q0 5 -0.5 24t-0.5 27h583v-50q-39 -2 -79.5 -16t-66.5 -43t-10 -64q26 -59 216.5 -499t235.5 -540
q31 61 140 266.5t131 247.5q-19 39 -126 281t-136 295q-38 69 -201 71v50l513 -1v-47q-60 -2 -93.5 -25t-12.5 -69q33 -70 87 -189.5t86 -187.5q110 214 173 363q24 55 -10 79.5t-129 26.5q1 7 1 25v24q64 0 170.5 0.5t180 1t92.5 0.5v-49q-62 -2 -119 -33t-90 -81
l-213 -442q13 -33 127.5 -290t121.5 -274l441 1017q-14 38 -49.5 62.5t-65 31.5t-55.5 8v50l460 -4l1 -2l-1 -44q-139 -4 -201 -145q-526 -1216 -559 -1291h-49z" />
    <glyph glyph-name="_577" unicode="&#xf267;" horiz-adv-x="1792" 
d="M949 643q0 -26 -16.5 -45t-41.5 -19q-26 0 -45 16.5t-19 41.5q0 26 17 45t42 19t44 -16.5t19 -41.5zM964 585l350 581q-9 -8 -67.5 -62.5t-125.5 -116.5t-136.5 -127t-117 -110.5t-50.5 -51.5l-349 -580q7 7 67 62t126 116.5t136 127t117 111t50 50.5zM1611 640
q0 -201 -104 -371q-3 2 -17 11t-26.5 16.5t-16.5 7.5q-13 0 -13 -13q0 -10 59 -44q-74 -112 -184.5 -190.5t-241.5 -110.5l-16 67q-1 10 -15 10q-5 0 -8 -5.5t-2 -9.5l16 -68q-72 -15 -146 -15q-199 0 -372 105q1 2 13 20.5t21.5 33.5t9.5 19q0 13 -13 13q-6 0 -17 -14.5
t-22.5 -34.5t-13.5 -23q-113 75 -192 187.5t-110 244.5l69 15q10 3 10 15q0 5 -5.5 8t-10.5 2l-68 -15q-14 72 -14 139q0 206 109 379q2 -1 18.5 -12t30 -19t17.5 -8q13 0 13 12q0 6 -12.5 15.5t-32.5 21.5l-20 12q77 112 189 189t244 107l15 -67q2 -10 15 -10q5 0 8 5.5
t2 10.5l-15 66q71 13 134 13q204 0 379 -109q-39 -56 -39 -65q0 -13 12 -13q11 0 48 64q111 -75 187.5 -186t107.5 -241l-56 -12q-10 -2 -10 -16q0 -5 5.5 -8t9.5 -2l57 13q14 -72 14 -140zM1696 640q0 163 -63.5 311t-170.5 255t-255 170.5t-311 63.5t-311 -63.5
t-255 -170.5t-170.5 -255t-63.5 -311t63.5 -311t170.5 -255t255 -170.5t311 -63.5t311 63.5t255 170.5t170.5 255t63.5 311zM1792 640q0 -182 -71 -348t-191 -286t-286 -191t-348 -71t-348 71t-286 191t-191 286t-71 348t71 348t191 286t286 191t348 71t348 -71t286 -191
t191 -286t71 -348z" />
    <glyph glyph-name="_578" unicode="&#xf268;" horiz-adv-x="1792" 
d="M893 1536q240 2 451 -120q232 -134 352 -372l-742 39q-160 9 -294 -74.5t-185 -229.5l-276 424q128 159 311 245.5t383 87.5zM146 1131l337 -663q72 -143 211 -217t293 -45l-230 -451q-212 33 -385 157.5t-272.5 316t-99.5 411.5q0 267 146 491zM1732 962
q58 -150 59.5 -310.5t-48.5 -306t-153 -272t-246 -209.5q-230 -133 -498 -119l405 623q88 131 82.5 290.5t-106.5 277.5zM896 942q125 0 213.5 -88.5t88.5 -213.5t-88.5 -213.5t-213.5 -88.5t-213.5 88.5t-88.5 213.5t88.5 213.5t213.5 88.5z" />
    <glyph glyph-name="_579" unicode="&#xf269;" horiz-adv-x="1792" 
d="M903 -256q-283 0 -504.5 150.5t-329.5 398.5q-58 131 -67 301t26 332.5t111 312t179 242.5l-11 -281q11 14 68 15.5t70 -15.5q42 81 160.5 138t234.5 59q-54 -45 -119.5 -148.5t-58.5 -163.5q25 -8 62.5 -13.5t63 -7.5t68 -4t50.5 -3q15 -5 9.5 -45.5t-30.5 -75.5
q-5 -7 -16.5 -18.5t-56.5 -35.5t-101 -34l15 -189l-139 67q-18 -43 -7.5 -81.5t36 -66.5t65.5 -41.5t81 -6.5q51 9 98 34.5t83.5 45t73.5 17.5q61 -4 89.5 -33t19.5 -65q-1 -2 -2.5 -5.5t-8.5 -12.5t-18 -15.5t-31.5 -10.5t-46.5 -1q-60 -95 -144.5 -135.5t-209.5 -29.5
q74 -61 162.5 -82.5t168.5 -6t154.5 52t128 87.5t80.5 104q43 91 39 192.5t-37.5 188.5t-78.5 125q87 -38 137 -79.5t77 -112.5q15 170 -57.5 343t-209.5 284q265 -77 412 -279.5t151 -517.5q2 -127 -40.5 -255t-123.5 -238t-189 -196t-247.5 -135.5t-288.5 -49.5z" />
    <glyph glyph-name="_580" unicode="&#xf26a;" horiz-adv-x="1792" 
d="M1493 1308q-165 110 -359 110q-155 0 -293 -73t-240 -200q-75 -93 -119.5 -218t-48.5 -266v-42q4 -141 48.5 -266t119.5 -218q102 -127 240 -200t293 -73q194 0 359 110q-121 -108 -274.5 -168t-322.5 -60q-29 0 -43 1q-175 8 -333 82t-272 193t-181 281t-67 339
q0 182 71 348t191 286t286 191t348 71h3q168 -1 320.5 -60.5t273.5 -167.5zM1792 640q0 -192 -77 -362.5t-213 -296.5q-104 -63 -222 -63q-137 0 -255 84q154 56 253.5 233t99.5 405q0 227 -99 404t-253 234q119 83 254 83q119 0 226 -65q135 -125 210.5 -295t75.5 -361z
" />
    <glyph glyph-name="_581" unicode="&#xf26b;" horiz-adv-x="1792" 
d="M1792 599q0 -56 -7 -104h-1151q0 -146 109.5 -244.5t257.5 -98.5q99 0 185.5 46.5t136.5 130.5h423q-56 -159 -170.5 -281t-267.5 -188.5t-321 -66.5q-187 0 -356 83q-228 -116 -394 -116q-237 0 -237 263q0 115 45 275q17 60 109 229q199 360 475 606
q-184 -79 -427 -354q63 274 283.5 449.5t501.5 175.5q30 0 45 -1q255 117 433 117q64 0 116 -13t94.5 -40.5t66.5 -76.5t24 -115q0 -116 -75 -286q101 -182 101 -390zM1722 1239q0 83 -53 132t-137 49q-108 0 -254 -70q121 -47 222.5 -131.5t170.5 -195.5q51 135 51 216z
M128 2q0 -86 48.5 -132.5t134.5 -46.5q115 0 266 83q-122 72 -213.5 183t-137.5 245q-98 -205 -98 -332zM632 715h728q-5 142 -113 237t-251 95q-144 0 -251.5 -95t-112.5 -237z" />
    <glyph glyph-name="_582" unicode="&#xf26c;" horiz-adv-x="2048" 
d="M1792 288v960q0 13 -9.5 22.5t-22.5 9.5h-1600q-13 0 -22.5 -9.5t-9.5 -22.5v-960q0 -13 9.5 -22.5t22.5 -9.5h1600q13 0 22.5 9.5t9.5 22.5zM1920 1248v-960q0 -66 -47 -113t-113 -47h-736v-128h352q14 0 23 -9t9 -23v-64q0 -14 -9 -23t-23 -9h-832q-14 0 -23 9t-9 23
v64q0 14 9 23t23 9h352v128h-736q-66 0 -113 47t-47 113v960q0 66 47 113t113 47h1600q66 0 113 -47t47 -113z" />
    <glyph glyph-name="_583" unicode="&#xf26d;" horiz-adv-x="1792" 
d="M138 1408h197q-70 -64 -126 -149q-36 -56 -59 -115t-30 -125.5t-8.5 -120t10.5 -132t21 -126t28 -136.5q4 -19 6 -28q51 -238 81 -329q57 -171 152 -275h-272q-48 0 -82 34t-34 82v1304q0 48 34 82t82 34zM1346 1408h308q48 0 82 -34t34 -82v-1304q0 -48 -34 -82t-82 -34
h-178q212 210 196 565l-469 -101q-2 -45 -12 -82t-31 -72t-59.5 -59.5t-93.5 -36.5q-123 -26 -199 40q-32 27 -53 61t-51.5 129t-64.5 258q-35 163 -45.5 263t-5.5 139t23 77q20 41 62.5 73t102.5 45q45 12 83.5 6.5t67 -17t54 -35t43 -48t34.5 -56.5l468 100
q-68 175 -180 287z" />
    <glyph glyph-name="_584" unicode="&#xf26e;" 
d="M1401 -11l-6 -6q-113 -113 -259 -175q-154 -64 -317 -64q-165 0 -317 64q-148 63 -259 175q-113 112 -175 258q-42 103 -54 189q-4 28 48 36q51 8 56 -20q1 -1 1 -4q18 -90 46 -159q50 -124 152 -226q98 -98 226 -152q132 -56 276 -56q143 0 276 56q128 55 225 152l6 6
q10 10 25 6q12 -3 33 -22q36 -37 17 -58zM929 604l-66 -66l63 -63q21 -21 -7 -49q-17 -17 -32 -17q-10 0 -19 10l-62 61l-66 -66q-5 -5 -15 -5q-15 0 -31 16l-2 2q-18 15 -18 29q0 7 8 17l66 65l-66 66q-16 16 14 45q18 18 31 18q6 0 13 -5l65 -66l65 65q18 17 48 -13
q27 -27 11 -44zM1400 547q0 -118 -46 -228q-45 -105 -126 -186q-80 -80 -187 -126t-228 -46t-228 46t-187 126q-82 82 -125 186q-15 33 -15 40h-1q-9 27 43 44q50 16 60 -12q37 -99 97 -167h1v339v2q3 136 102 232q105 103 253 103q147 0 251 -103t104 -249
q0 -147 -104.5 -251t-250.5 -104q-58 0 -112 16q-28 11 -13 61q16 51 44 43l14 -3q14 -3 33 -6t30 -3q104 0 176 71.5t72 174.5q0 101 -72 171q-71 71 -175 71q-107 0 -178 -80q-64 -72 -64 -160v-413q110 -67 242 -67q96 0 185 36.5t156 103.5t103.5 155t36.5 183
q0 198 -141 339q-140 140 -339 140q-200 0 -340 -140q-53 -53 -77 -87l-2 -2q-8 -11 -13 -15.5t-21.5 -9.5t-38.5 3q-21 5 -36.5 16.5t-15.5 26.5v680q0 15 10.5 26.5t27.5 11.5h877q30 0 30 -55t-30 -55h-811v-483h1q40 42 102 84t108 61q109 46 231 46q121 0 228 -46
t187 -126q81 -81 126 -186q46 -112 46 -229zM1369 1128q9 -8 9 -18t-5.5 -18t-16.5 -21q-26 -26 -39 -26q-9 0 -16 7q-106 91 -207 133q-128 56 -276 56q-133 0 -262 -49q-27 -10 -45 37q-9 25 -8 38q3 16 16 20q130 57 299 57q164 0 316 -64q137 -58 235 -152z" />
    <glyph glyph-name="_585" unicode="&#xf270;" horiz-adv-x="1792" 
d="M1551 60q15 6 26 3t11 -17.5t-15 -33.5q-13 -16 -44 -43.5t-95.5 -68t-141 -74t-188 -58t-229.5 -24.5q-119 0 -238 31t-209 76.5t-172.5 104t-132.5 105t-84 87.5q-8 9 -10 16.5t1 12t8 7t11.5 2t11.5 -4.5q192 -117 300 -166q389 -176 799 -90q190 40 391 135z
M1758 175q11 -16 2.5 -69.5t-28.5 -102.5q-34 -83 -85 -124q-17 -14 -26 -9t0 24q21 45 44.5 121.5t6.5 98.5q-5 7 -15.5 11.5t-27 6t-29.5 2.5t-35 0t-31.5 -2t-31 -3t-22.5 -2q-6 -1 -13 -1.5t-11 -1t-8.5 -1t-7 -0.5h-5.5h-4.5t-3 0.5t-2 1.5l-1.5 3q-6 16 47 40t103 30
q46 7 108 1t76 -24zM1364 618q0 -31 13.5 -64t32 -58t37.5 -46t33 -32l13 -11l-227 -224q-40 37 -79 75.5t-58 58.5l-19 20q-11 11 -25 33q-38 -59 -97.5 -102.5t-127.5 -63.5t-140 -23t-137.5 21t-117.5 65.5t-83 113t-31 162.5q0 84 28 154t72 116.5t106.5 83t122.5 57
t130 34.5t119.5 18.5t99.5 6.5v127q0 65 -21 97q-34 53 -121 53q-6 0 -16.5 -1t-40.5 -12t-56 -29.5t-56 -59.5t-48 -96l-294 27q0 60 22 119t67 113t108 95t151.5 65.5t190.5 24.5q100 0 181 -25t129.5 -61.5t81 -83t45 -86t12.5 -73.5v-589zM692 597q0 -86 70 -133
q66 -44 139 -22q84 25 114 123q14 45 14 101v162q-59 -2 -111 -12t-106.5 -33.5t-87 -71t-32.5 -114.5z" />
    <glyph glyph-name="_586" unicode="&#xf271;" horiz-adv-x="1792" 
d="M1536 1280q52 0 90 -38t38 -90v-1280q0 -52 -38 -90t-90 -38h-1408q-52 0 -90 38t-38 90v1280q0 52 38 90t90 38h128v96q0 66 47 113t113 47h64q66 0 113 -47t47 -113v-96h384v96q0 66 47 113t113 47h64q66 0 113 -47t47 -113v-96h128zM1152 1376v-288q0 -14 9 -23t23 -9
h64q14 0 23 9t9 23v288q0 14 -9 23t-23 9h-64q-14 0 -23 -9t-9 -23zM384 1376v-288q0 -14 9 -23t23 -9h64q14 0 23 9t9 23v288q0 14 -9 23t-23 9h-64q-14 0 -23 -9t-9 -23zM1536 -128v1024h-1408v-1024h1408zM896 448h224q14 0 23 -9t9 -23v-64q0 -14 -9 -23t-23 -9h-224
v-224q0 -14 -9 -23t-23 -9h-64q-14 0 -23 9t-9 23v224h-224q-14 0 -23 9t-9 23v64q0 14 9 23t23 9h224v224q0 14 9 23t23 9h64q14 0 23 -9t9 -23v-224z" />
    <glyph glyph-name="_587" unicode="&#xf272;" horiz-adv-x="1792" 
d="M1152 416v-64q0 -14 -9 -23t-23 -9h-576q-14 0 -23 9t-9 23v64q0 14 9 23t23 9h576q14 0 23 -9t9 -23zM128 -128h1408v1024h-1408v-1024zM512 1088v288q0 14 -9 23t-23 9h-64q-14 0 -23 -9t-9 -23v-288q0 -14 9 -23t23 -9h64q14 0 23 9t9 23zM1280 1088v288q0 14 -9 23
t-23 9h-64q-14 0 -23 -9t-9 -23v-288q0 -14 9 -23t23 -9h64q14 0 23 9t9 23zM1664 1152v-1280q0 -52 -38 -90t-90 -38h-1408q-52 0 -90 38t-38 90v1280q0 52 38 90t90 38h128v96q0 66 47 113t113 47h64q66 0 113 -47t47 -113v-96h384v96q0 66 47 113t113 47h64q66 0 113 -47
t47 -113v-96h128q52 0 90 -38t38 -90z" />
    <glyph glyph-name="_588" unicode="&#xf273;" horiz-adv-x="1792" 
d="M1111 151l-46 -46q-9 -9 -22 -9t-23 9l-188 189l-188 -189q-10 -9 -23 -9t-22 9l-46 46q-9 9 -9 22t9 23l189 188l-189 188q-9 10 -9 23t9 22l46 46q9 9 22 9t23 -9l188 -188l188 188q10 9 23 9t22 -9l46 -46q9 -9 9 -22t-9 -23l-188 -188l188 -188q9 -10 9 -23t-9 -22z
M128 -128h1408v1024h-1408v-1024zM512 1088v288q0 14 -9 23t-23 9h-64q-14 0 -23 -9t-9 -23v-288q0 -14 9 -23t23 -9h64q14 0 23 9t9 23zM1280 1088v288q0 14 -9 23t-23 9h-64q-14 0 -23 -9t-9 -23v-288q0 -14 9 -23t23 -9h64q14 0 23 9t9 23zM1664 1152v-1280
q0 -52 -38 -90t-90 -38h-1408q-52 0 -90 38t-38 90v1280q0 52 38 90t90 38h128v96q0 66 47 113t113 47h64q66 0 113 -47t47 -113v-96h384v96q0 66 47 113t113 47h64q66 0 113 -47t47 -113v-96h128q52 0 90 -38t38 -90z" />
    <glyph glyph-name="_589" unicode="&#xf274;" horiz-adv-x="1792" 
d="M1303 572l-512 -512q-10 -9 -23 -9t-23 9l-288 288q-9 10 -9 23t9 22l46 46q9 9 22 9t23 -9l220 -220l444 444q10 9 23 9t22 -9l46 -46q9 -9 9 -22t-9 -23zM128 -128h1408v1024h-1408v-1024zM512 1088v288q0 14 -9 23t-23 9h-64q-14 0 -23 -9t-9 -23v-288q0 -14 9 -23
t23 -9h64q14 0 23 9t9 23zM1280 1088v288q0 14 -9 23t-23 9h-64q-14 0 -23 -9t-9 -23v-288q0 -14 9 -23t23 -9h64q14 0 23 9t9 23zM1664 1152v-1280q0 -52 -38 -90t-90 -38h-1408q-52 0 -90 38t-38 90v1280q0 52 38 90t90 38h128v96q0 66 47 113t113 47h64q66 0 113 -47
t47 -113v-96h384v96q0 66 47 113t113 47h64q66 0 113 -47t47 -113v-96h128q52 0 90 -38t38 -90z" />
    <glyph glyph-name="_590" unicode="&#xf275;" horiz-adv-x="1792" 
d="M448 1536q26 0 45 -19t19 -45v-891l536 429q17 14 40 14q26 0 45 -19t19 -45v-379l536 429q17 14 40 14q26 0 45 -19t19 -45v-1152q0 -26 -19 -45t-45 -19h-1664q-26 0 -45 19t-19 45v1664q0 26 19 45t45 19h384z" />
    <glyph glyph-name="_591" unicode="&#xf276;" horiz-adv-x="1024" 
d="M512 448q66 0 128 15v-655q0 -26 -19 -45t-45 -19h-128q-26 0 -45 19t-19 45v655q62 -15 128 -15zM512 1536q212 0 362 -150t150 -362t-150 -362t-362 -150t-362 150t-150 362t150 362t362 150zM512 1312q14 0 23 9t9 23t-9 23t-23 9q-146 0 -249 -103t-103 -249
q0 -14 9 -23t23 -9t23 9t9 23q0 119 84.5 203.5t203.5 84.5z" />
    <glyph glyph-name="_592" unicode="&#xf277;" horiz-adv-x="1792" 
d="M1745 1239q10 -10 10 -23t-10 -23l-141 -141q-28 -28 -68 -28h-1344q-26 0 -45 19t-19 45v256q0 26 19 45t45 19h576v64q0 26 19 45t45 19h128q26 0 45 -19t19 -45v-64h512q40 0 68 -28zM768 320h256v-512q0 -26 -19 -45t-45 -19h-128q-26 0 -45 19t-19 45v512zM1600 768
q26 0 45 -19t19 -45v-256q0 -26 -19 -45t-45 -19h-1344q-40 0 -68 28l-141 141q-10 10 -10 23t10 23l141 141q28 28 68 28h512v192h256v-192h576z" />
    <glyph glyph-name="_593" unicode="&#xf278;" horiz-adv-x="2048" 
d="M2020 1525q28 -20 28 -53v-1408q0 -20 -11 -36t-29 -23l-640 -256q-24 -11 -48 0l-616 246l-616 -246q-10 -5 -24 -5q-19 0 -36 11q-28 20 -28 53v1408q0 20 11 36t29 23l640 256q24 11 48 0l616 -246l616 246q32 13 60 -6zM736 1390v-1270l576 -230v1270zM128 1173
v-1270l544 217v1270zM1920 107v1270l-544 -217v-1270z" />
    <glyph glyph-name="_594" unicode="&#xf279;" horiz-adv-x="1792" 
d="M512 1536q13 0 22.5 -9.5t9.5 -22.5v-1472q0 -20 -17 -28l-480 -256q-7 -4 -15 -4q-13 0 -22.5 9.5t-9.5 22.5v1472q0 20 17 28l480 256q7 4 15 4zM1760 1536q13 0 22.5 -9.5t9.5 -22.5v-1472q0 -20 -17 -28l-480 -256q-7 -4 -15 -4q-13 0 -22.5 9.5t-9.5 22.5v1472
q0 20 17 28l480 256q7 4 15 4zM640 1536q8 0 14 -3l512 -256q18 -10 18 -29v-1472q0 -13 -9.5 -22.5t-22.5 -9.5q-8 0 -14 3l-512 256q-18 10 -18 29v1472q0 13 9.5 22.5t22.5 9.5z" />
    <glyph glyph-name="_595" unicode="&#xf27a;" horiz-adv-x="1792" 
d="M640 640q0 53 -37.5 90.5t-90.5 37.5t-90.5 -37.5t-37.5 -90.5t37.5 -90.5t90.5 -37.5t90.5 37.5t37.5 90.5zM1024 640q0 53 -37.5 90.5t-90.5 37.5t-90.5 -37.5t-37.5 -90.5t37.5 -90.5t90.5 -37.5t90.5 37.5t37.5 90.5zM1408 640q0 53 -37.5 90.5t-90.5 37.5
t-90.5 -37.5t-37.5 -90.5t37.5 -90.5t90.5 -37.5t90.5 37.5t37.5 90.5zM1792 640q0 -174 -120 -321.5t-326 -233t-450 -85.5q-110 0 -211 18q-173 -173 -435 -229q-52 -10 -86 -13q-12 -1 -22 6t-13 18q-4 15 20 37q5 5 23.5 21.5t25.5 23.5t23.5 25.5t24 31.5t20.5 37
t20 48t14.5 57.5t12.5 72.5q-146 90 -229.5 216.5t-83.5 269.5q0 174 120 321.5t326 233t450 85.5t450 -85.5t326 -233t120 -321.5z" />
    <glyph glyph-name="_596" unicode="&#xf27b;" horiz-adv-x="1792" 
d="M640 640q0 -53 -37.5 -90.5t-90.5 -37.5t-90.5 37.5t-37.5 90.5t37.5 90.5t90.5 37.5t90.5 -37.5t37.5 -90.5zM1024 640q0 -53 -37.5 -90.5t-90.5 -37.5t-90.5 37.5t-37.5 90.5t37.5 90.5t90.5 37.5t90.5 -37.5t37.5 -90.5zM1408 640q0 -53 -37.5 -90.5t-90.5 -37.5
t-90.5 37.5t-37.5 90.5t37.5 90.5t90.5 37.5t90.5 -37.5t37.5 -90.5zM896 1152q-204 0 -381.5 -69.5t-282 -187.5t-104.5 -255q0 -112 71.5 -213.5t201.5 -175.5l87 -50l-27 -96q-24 -91 -70 -172q152 63 275 171l43 38l57 -6q69 -8 130 -8q204 0 381.5 69.5t282 187.5
t104.5 255t-104.5 255t-282 187.5t-381.5 69.5zM1792 640q0 -174 -120 -321.5t-326 -233t-450 -85.5q-70 0 -145 8q-198 -175 -460 -242q-49 -14 -114 -22h-5q-15 0 -27 10.5t-16 27.5v1q-3 4 -0.5 12t2 10t4.5 9.5l6 9t7 8.5t8 9q7 8 31 34.5t34.5 38t31 39.5t32.5 51
t27 59t26 76q-157 89 -247.5 220t-90.5 281q0 130 71 248.5t191 204.5t286 136.5t348 50.5t348 -50.5t286 -136.5t191 -204.5t71 -248.5z" />
    <glyph glyph-name="_597" unicode="&#xf27c;" horiz-adv-x="1024" 
d="M512 345l512 295v-591l-512 -296v592zM0 640v-591l512 296zM512 1527v-591l-512 -296v591zM512 936l512 295v-591z" />
    <glyph glyph-name="_598" unicode="&#xf27d;" horiz-adv-x="1792" 
d="M1709 1018q-10 -236 -332 -651q-333 -431 -562 -431q-142 0 -240 263q-44 160 -132 482q-72 262 -157 262q-18 0 -127 -76l-77 98q24 21 108 96.5t130 115.5q156 138 241 146q95 9 153 -55.5t81 -203.5q44 -287 66 -373q55 -249 120 -249q51 0 154 161q101 161 109 246
q13 139 -109 139q-57 0 -121 -26q120 393 459 382q251 -8 236 -326z" />
    <glyph glyph-name="f27e" unicode="&#xf27e;" 
d="M0 1408h1536v-1536h-1536v1536zM1085 293l-221 631l221 297h-634l221 -297l-221 -631l317 -304z" />
    <glyph glyph-name="uniF280" unicode="&#xf280;" 
d="M0 1408h1536v-1536h-1536v1536zM908 1088l-12 -33l75 -83l-31 -114l25 -25l107 57l107 -57l25 25l-31 114l75 83l-12 33h-95l-53 96h-32l-53 -96h-95zM641 925q32 0 44.5 -16t11.5 -63l174 21q0 55 -17.5 92.5t-50.5 56t-69 25.5t-85 7q-133 0 -199 -57.5t-66 -182.5v-72
h-96v-128h76q20 0 20 -8v-382q0 -14 -5 -20t-18 -7l-73 -7v-88h448v86l-149 14q-6 1 -8.5 1.5t-3.5 2.5t-0.5 4t1 7t0.5 10v387h191l38 128h-231q-6 0 -2 6t4 9v80q0 27 1.5 40.5t7.5 28t19.5 20t36.5 5.5zM1248 96v86l-54 9q-7 1 -9.5 2.5t-2.5 3t1 7.5t1 12v520h-275
l-23 -101l83 -22q23 -7 23 -27v-370q0 -14 -6 -18.5t-20 -6.5l-70 -9v-86h352z" />
    <glyph glyph-name="uniF281" unicode="&#xf281;" horiz-adv-x="1792" 
d="M1792 690q0 -58 -29.5 -105.5t-79.5 -72.5q12 -46 12 -96q0 -155 -106.5 -287t-290.5 -208.5t-400 -76.5t-399.5 76.5t-290 208.5t-106.5 287q0 47 11 94q-51 25 -82 73.5t-31 106.5q0 82 58 140.5t141 58.5q85 0 145 -63q218 152 515 162l116 521q3 13 15 21t26 5
l369 -81q18 37 54 59.5t79 22.5q62 0 106 -43.5t44 -105.5t-44 -106t-106 -44t-105.5 43.5t-43.5 105.5l-334 74l-104 -472q300 -9 519 -160q58 61 143 61q83 0 141 -58.5t58 -140.5zM418 491q0 -62 43.5 -106t105.5 -44t106 44t44 106t-44 105.5t-106 43.5q-61 0 -105 -44
t-44 -105zM1228 136q11 11 11 26t-11 26q-10 10 -25 10t-26 -10q-41 -42 -121 -62t-160 -20t-160 20t-121 62q-11 10 -26 10t-25 -10q-11 -10 -11 -25.5t11 -26.5q43 -43 118.5 -68t122.5 -29.5t91 -4.5t91 4.5t122.5 29.5t118.5 68zM1225 341q62 0 105.5 44t43.5 106
q0 61 -44 105t-105 44q-62 0 -106 -43.5t-44 -105.5t44 -106t106 -44z" />
    <glyph glyph-name="_602" unicode="&#xf282;" horiz-adv-x="1792" 
d="M69 741h1q16 126 58.5 241.5t115 217t167.5 176t223.5 117.5t276.5 43q231 0 414 -105.5t294 -303.5q104 -187 104 -442v-188h-1125q1 -111 53.5 -192.5t136.5 -122.5t189.5 -57t213 -3t208 46.5t173.5 84.5v-377q-92 -55 -229.5 -92t-312.5 -38t-316 53
q-189 73 -311.5 249t-124.5 372q-3 242 111 412t325 268q-48 -60 -78 -125.5t-46 -159.5h635q8 77 -8 140t-47 101.5t-70.5 66.5t-80.5 41t-75 20.5t-56 8.5l-22 1q-135 -5 -259.5 -44.5t-223.5 -104.5t-176 -140.5t-138 -163.5z" />
    <glyph glyph-name="_603" unicode="&#xf283;" horiz-adv-x="2304" 
d="M0 32v608h2304v-608q0 -66 -47 -113t-113 -47h-1984q-66 0 -113 47t-47 113zM640 256v-128h384v128h-384zM256 256v-128h256v128h-256zM2144 1408q66 0 113 -47t47 -113v-224h-2304v224q0 66 47 113t113 47h1984z" />
    <glyph glyph-name="_604" unicode="&#xf284;" horiz-adv-x="1792" 
d="M1584 246l-218 111q-74 -120 -196.5 -189t-263.5 -69q-147 0 -271 72t-196 196t-72 270q0 110 42.5 209.5t115 172t172 115t209.5 42.5q131 0 247.5 -60.5t192.5 -168.5l215 125q-110 169 -286.5 265t-378.5 96q-161 0 -308 -63t-253 -169t-169 -253t-63 -308t63 -308
t169 -253t253 -169t308 -63q213 0 397.5 107t290.5 292zM1030 643l693 -352q-116 -253 -334.5 -400t-492.5 -147q-182 0 -348 71t-286 191t-191 286t-71 348t71 348t191 286t286 191t348 71q260 0 470.5 -133.5t335.5 -366.5zM1543 640h-39v-160h-96v352h136q32 0 54.5 -20
t28.5 -48t1 -56t-27.5 -48t-57.5 -20z" />
    <glyph glyph-name="uniF285" unicode="&#xf285;" horiz-adv-x="1792" 
d="M1427 827l-614 386l92 151h855zM405 562l-184 116v858l1183 -743zM1424 697l147 -95v-858l-532 335zM1387 718l-500 -802h-855l356 571z" />
    <glyph glyph-name="uniF286" unicode="&#xf286;" horiz-adv-x="1792" 
d="M640 528v224q0 16 -16 16h-96q-16 0 -16 -16v-224q0 -16 16 -16h96q16 0 16 16zM1152 528v224q0 16 -16 16h-96q-16 0 -16 -16v-224q0 -16 16 -16h96q16 0 16 16zM1664 496v-752h-640v320q0 80 -56 136t-136 56t-136 -56t-56 -136v-320h-640v752q0 16 16 16h96
q16 0 16 -16v-112h128v624q0 16 16 16h96q16 0 16 -16v-112h128v112q0 16 16 16h96q16 0 16 -16v-112h128v112q0 6 2.5 9.5t8.5 5t9.5 2t11.5 0t9 -0.5v391q-32 15 -32 50q0 23 16.5 39t38.5 16t38.5 -16t16.5 -39q0 -35 -32 -50v-17q45 10 83 10q21 0 59.5 -7.5t54.5 -7.5
q17 0 47 7.5t37 7.5q16 0 16 -16v-210q0 -15 -35 -21.5t-62 -6.5q-18 0 -54.5 7.5t-55.5 7.5q-40 0 -90 -12v-133q1 0 9 0.5t11.5 0t9.5 -2t8.5 -5t2.5 -9.5v-112h128v112q0 16 16 16h96q16 0 16 -16v-112h128v112q0 16 16 16h96q16 0 16 -16v-624h128v112q0 16 16 16h96
q16 0 16 -16z" />
    <glyph glyph-name="_607" unicode="&#xf287;" horiz-adv-x="2304" 
d="M2288 731q16 -8 16 -27t-16 -27l-320 -192q-8 -5 -16 -5q-9 0 -16 4q-16 10 -16 28v128h-858q37 -58 83 -165q16 -37 24.5 -55t24 -49t27 -47t27 -34t31.5 -26t33 -8h96v96q0 14 9 23t23 9h320q14 0 23 -9t9 -23v-320q0 -14 -9 -23t-23 -9h-320q-14 0 -23 9t-9 23v96h-96
q-32 0 -61 10t-51 23.5t-45 40.5t-37 46t-33.5 57t-28.5 57.5t-28 60.5q-23 53 -37 81.5t-36 65t-44.5 53.5t-46.5 17h-360q-22 -84 -91 -138t-157 -54q-106 0 -181 75t-75 181t75 181t181 75q88 0 157 -54t91 -138h104q24 0 46.5 17t44.5 53.5t36 65t37 81.5q19 41 28 60.5
t28.5 57.5t33.5 57t37 46t45 40.5t51 23.5t61 10h107q21 57 70 92.5t111 35.5q80 0 136 -56t56 -136t-56 -136t-136 -56q-62 0 -111 35.5t-70 92.5h-107q-17 0 -33 -8t-31.5 -26t-27 -34t-27 -47t-24 -49t-24.5 -55q-46 -107 -83 -165h1114v128q0 18 16 28t32 -1z" />
    <glyph glyph-name="_608" unicode="&#xf288;" horiz-adv-x="1792" 
d="M1150 774q0 -56 -39.5 -95t-95.5 -39h-253v269h253q56 0 95.5 -39.5t39.5 -95.5zM1329 774q0 130 -91.5 222t-222.5 92h-433v-896h180v269h253q130 0 222 91.5t92 221.5zM1792 640q0 -182 -71 -348t-191 -286t-286 -191t-348 -71t-348 71t-286 191t-191 286t-71 348
t71 348t191 286t286 191t348 71t348 -71t286 -191t191 -286t71 -348z" />
    <glyph glyph-name="_609" unicode="&#xf289;" horiz-adv-x="2304" 
d="M1645 438q0 59 -34 106.5t-87 68.5q-7 -45 -23 -92q-7 -24 -27.5 -38t-44.5 -14q-12 0 -24 3q-31 10 -45 38.5t-4 58.5q23 71 23 143q0 123 -61 227.5t-166 165.5t-228 61q-134 0 -247 -73t-167 -194q108 -28 188 -106q22 -23 22 -55t-22 -54t-54 -22t-55 22
q-75 75 -180 75q-106 0 -181 -74.5t-75 -180.5t75 -180.5t181 -74.5h1046q79 0 134.5 55.5t55.5 133.5zM1798 438q0 -142 -100.5 -242t-242.5 -100h-1046q-169 0 -289 119.5t-120 288.5q0 153 100 267t249 136q62 184 221 298t354 114q235 0 408.5 -158.5t196.5 -389.5
q116 -25 192.5 -118.5t76.5 -214.5zM2048 438q0 -175 -97 -319q-23 -33 -64 -33q-24 0 -43 13q-26 17 -32 48.5t12 57.5q71 104 71 233t-71 233q-18 26 -12 57t32 49t57.5 11.5t49.5 -32.5q97 -142 97 -318zM2304 438q0 -244 -134 -443q-23 -34 -64 -34q-23 0 -42 13
q-26 18 -32.5 49t11.5 57q108 164 108 358q0 195 -108 357q-18 26 -11.5 57.5t32.5 48.5q26 18 57 12t49 -33q134 -198 134 -442z" />
    <glyph glyph-name="_610" unicode="&#xf28a;" 
d="M1500 -13q0 -89 -63 -152.5t-153 -63.5t-153.5 63.5t-63.5 152.5q0 90 63.5 153.5t153.5 63.5t153 -63.5t63 -153.5zM1267 268q-115 -15 -192.5 -102.5t-77.5 -205.5q0 -74 33 -138q-146 -78 -379 -78q-109 0 -201 21t-153.5 54.5t-110.5 76.5t-76 85t-44.5 83
t-23.5 66.5t-6 39.5q0 19 4.5 42.5t18.5 56t36.5 58t64 43.5t94.5 18t94 -17.5t63 -41t35.5 -53t17.5 -49t4 -33.5q0 -34 -23 -81q28 -27 82 -42t93 -17l40 -1q115 0 190 51t75 133q0 26 -9 48.5t-31.5 44.5t-49.5 41t-74 44t-93.5 47.5t-119.5 56.5q-28 13 -43 20
q-116 55 -187 100t-122.5 102t-72 125.5t-20.5 162.5q0 78 20.5 150t66 137.5t112.5 114t166.5 77t221.5 28.5q120 0 220 -26t164.5 -67t109.5 -94t64 -105.5t19 -103.5q0 -46 -15 -82.5t-36.5 -58t-48.5 -36t-49 -19.5t-39 -5h-8h-32t-39 5t-44 14t-41 28t-37 46t-24 70.5
t-10 97.5q-15 16 -59 25.5t-81 10.5l-37 1q-68 0 -117.5 -31t-70.5 -70t-21 -76q0 -24 5 -43t24 -46t53 -51t97 -53.5t150 -58.5q76 -25 138.5 -53.5t109 -55.5t83 -59t60.5 -59.5t41 -62.5t26.5 -62t14.5 -63.5t6 -62t1 -62.5z" />
    <glyph glyph-name="_611" unicode="&#xf28b;" 
d="M704 352v576q0 14 -9 23t-23 9h-256q-14 0 -23 -9t-9 -23v-576q0 -14 9 -23t23 -9h256q14 0 23 9t9 23zM1152 352v576q0 14 -9 23t-23 9h-256q-14 0 -23 -9t-9 -23v-576q0 -14 9 -23t23 -9h256q14 0 23 9t9 23zM1536 640q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103
t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="_612" unicode="&#xf28c;" 
d="M768 1408q209 0 385.5 -103t279.5 -279.5t103 -385.5t-103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103zM768 96q148 0 273 73t198 198t73 273t-73 273t-198 198t-273 73t-273 -73t-198 -198t-73 -273
t73 -273t198 -198t273 -73zM864 320q-14 0 -23 9t-9 23v576q0 14 9 23t23 9h192q14 0 23 -9t9 -23v-576q0 -14 -9 -23t-23 -9h-192zM480 320q-14 0 -23 9t-9 23v576q0 14 9 23t23 9h192q14 0 23 -9t9 -23v-576q0 -14 -9 -23t-23 -9h-192z" />
    <glyph glyph-name="_613" unicode="&#xf28d;" 
d="M1088 352v576q0 14 -9 23t-23 9h-576q-14 0 -23 -9t-9 -23v-576q0 -14 9 -23t23 -9h576q14 0 23 9t9 23zM1536 640q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5
t103 -385.5z" />
    <glyph glyph-name="_614" unicode="&#xf28e;" 
d="M768 1408q209 0 385.5 -103t279.5 -279.5t103 -385.5t-103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103zM768 96q148 0 273 73t198 198t73 273t-73 273t-198 198t-273 73t-273 -73t-198 -198t-73 -273
t73 -273t198 -198t273 -73zM480 320q-14 0 -23 9t-9 23v576q0 14 9 23t23 9h576q14 0 23 -9t9 -23v-576q0 -14 -9 -23t-23 -9h-576z" />
    <glyph glyph-name="_615" unicode="&#xf290;" horiz-adv-x="1792" 
d="M1757 128l35 -313q3 -28 -16 -50q-19 -21 -48 -21h-1664q-29 0 -48 21q-19 22 -16 50l35 313h1722zM1664 967l86 -775h-1708l86 775q3 24 21 40.5t43 16.5h256v-128q0 -53 37.5 -90.5t90.5 -37.5t90.5 37.5t37.5 90.5v128h384v-128q0 -53 37.5 -90.5t90.5 -37.5
t90.5 37.5t37.5 90.5v128h256q25 0 43 -16.5t21 -40.5zM1280 1152v-256q0 -26 -19 -45t-45 -19t-45 19t-19 45v256q0 106 -75 181t-181 75t-181 -75t-75 -181v-256q0 -26 -19 -45t-45 -19t-45 19t-19 45v256q0 159 112.5 271.5t271.5 112.5t271.5 -112.5t112.5 -271.5z" />
    <glyph glyph-name="_616" unicode="&#xf291;" horiz-adv-x="2048" 
d="M1920 768q53 0 90.5 -37.5t37.5 -90.5t-37.5 -90.5t-90.5 -37.5h-15l-115 -662q-8 -46 -44 -76t-82 -30h-1280q-46 0 -82 30t-44 76l-115 662h-15q-53 0 -90.5 37.5t-37.5 90.5t37.5 90.5t90.5 37.5h1792zM485 -32q26 2 43.5 22.5t15.5 46.5l-32 416q-2 26 -22.5 43.5
t-46.5 15.5t-43.5 -22.5t-15.5 -46.5l32 -416q2 -25 20.5 -42t43.5 -17h5zM896 32v416q0 26 -19 45t-45 19t-45 -19t-19 -45v-416q0 -26 19 -45t45 -19t45 19t19 45zM1280 32v416q0 26 -19 45t-45 19t-45 -19t-19 -45v-416q0 -26 19 -45t45 -19t45 19t19 45zM1632 27l32 416
q2 26 -15.5 46.5t-43.5 22.5t-46.5 -15.5t-22.5 -43.5l-32 -416q-2 -26 15.5 -46.5t43.5 -22.5h5q25 0 43.5 17t20.5 42zM476 1244l-93 -412h-132l101 441q19 88 89 143.5t160 55.5h167q0 26 19 45t45 19h384q26 0 45 -19t19 -45h167q90 0 160 -55.5t89 -143.5l101 -441
h-132l-93 412q-11 44 -45.5 72t-79.5 28h-167q0 -26 -19 -45t-45 -19h-384q-26 0 -45 19t-19 45h-167q-45 0 -79.5 -28t-45.5 -72z" />
    <glyph glyph-name="_617" unicode="&#xf292;" horiz-adv-x="1792" 
d="M991 512l64 256h-254l-64 -256h254zM1759 1016l-56 -224q-7 -24 -31 -24h-327l-64 -256h311q15 0 25 -12q10 -14 6 -28l-56 -224q-5 -24 -31 -24h-327l-81 -328q-7 -24 -31 -24h-224q-16 0 -26 12q-9 12 -6 28l78 312h-254l-81 -328q-7 -24 -31 -24h-225q-15 0 -25 12
q-9 12 -6 28l78 312h-311q-15 0 -25 12q-9 12 -6 28l56 224q7 24 31 24h327l64 256h-311q-15 0 -25 12q-10 14 -6 28l56 224q5 24 31 24h327l81 328q7 24 32 24h224q15 0 25 -12q9 -12 6 -28l-78 -312h254l81 328q7 24 32 24h224q15 0 25 -12q9 -12 6 -28l-78 -312h311
q15 0 25 -12q9 -12 6 -28z" />
    <glyph glyph-name="_618" unicode="&#xf293;" 
d="M841 483l148 -148l-149 -149zM840 1094l149 -149l-148 -148zM710 -130l464 464l-306 306l306 306l-464 464v-611l-255 255l-93 -93l320 -321l-320 -321l93 -93l255 255v-611zM1429 640q0 -209 -32 -365.5t-87.5 -257t-140.5 -162.5t-181.5 -86.5t-219.5 -24.5
t-219.5 24.5t-181.5 86.5t-140.5 162.5t-87.5 257t-32 365.5t32 365.5t87.5 257t140.5 162.5t181.5 86.5t219.5 24.5t219.5 -24.5t181.5 -86.5t140.5 -162.5t87.5 -257t32 -365.5z" />
    <glyph glyph-name="_619" unicode="&#xf294;" horiz-adv-x="1024" 
d="M596 113l173 172l-173 172v-344zM596 823l173 172l-173 172v-344zM628 640l356 -356l-539 -540v711l-297 -296l-108 108l372 373l-372 373l108 108l297 -296v711l539 -540z" />
    <glyph glyph-name="_620" unicode="&#xf295;" 
d="M1280 256q0 52 -38 90t-90 38t-90 -38t-38 -90t38 -90t90 -38t90 38t38 90zM512 1024q0 52 -38 90t-90 38t-90 -38t-38 -90t38 -90t90 -38t90 38t38 90zM1536 256q0 -159 -112.5 -271.5t-271.5 -112.5t-271.5 112.5t-112.5 271.5t112.5 271.5t271.5 112.5t271.5 -112.5
t112.5 -271.5zM1440 1344q0 -20 -13 -38l-1056 -1408q-19 -26 -51 -26h-160q-26 0 -45 19t-19 45q0 20 13 38l1056 1408q19 26 51 26h160q26 0 45 -19t19 -45zM768 1024q0 -159 -112.5 -271.5t-271.5 -112.5t-271.5 112.5t-112.5 271.5t112.5 271.5t271.5 112.5
t271.5 -112.5t112.5 -271.5z" />
    <glyph glyph-name="_621" unicode="&#xf296;" horiz-adv-x="1792" 
d="M104 830l792 -1015l-868 630q-18 13 -25 34.5t0 42.5l101 308v0zM566 830h660l-330 -1015v0zM368 1442l198 -612h-462l198 612q8 23 33 23t33 -23zM1688 830l101 -308q7 -21 0 -42.5t-25 -34.5l-868 -630l792 1015v0zM1688 830h-462l198 612q8 23 33 23t33 -23z" />
    <glyph glyph-name="_622" unicode="&#xf297;" horiz-adv-x="1792" 
d="M384 704h160v224h-160v-224zM1221 372v92q-104 -36 -243 -38q-135 -1 -259.5 46.5t-220.5 122.5l1 -96q88 -80 212 -128.5t272 -47.5q129 0 238 49zM640 704h640v224h-640v-224zM1792 736q0 -187 -99 -352q89 -102 89 -229q0 -157 -129.5 -268t-313.5 -111
q-122 0 -225 52.5t-161 140.5q-19 -1 -57 -1t-57 1q-58 -88 -161 -140.5t-225 -52.5q-184 0 -313.5 111t-129.5 268q0 127 89 229q-99 165 -99 352q0 209 120 385.5t326.5 279.5t449.5 103t449.5 -103t326.5 -279.5t120 -385.5z" />
    <glyph glyph-name="_623" unicode="&#xf298;" 
d="M515 625v-128h-252v128h252zM515 880v-127h-252v127h252zM1273 369v-128h-341v128h341zM1273 625v-128h-672v128h672zM1273 880v-127h-672v127h672zM1408 20v1240q0 8 -6 14t-14 6h-32l-378 -256l-210 171l-210 -171l-378 256h-32q-8 0 -14 -6t-6 -14v-1240q0 -8 6 -14
t14 -6h1240q8 0 14 6t6 14zM553 1130l185 150h-406zM983 1130l221 150h-406zM1536 1260v-1240q0 -62 -43 -105t-105 -43h-1240q-62 0 -105 43t-43 105v1240q0 62 43 105t105 43h1240q62 0 105 -43t43 -105z" />
    <glyph glyph-name="_624" unicode="&#xf299;" horiz-adv-x="1792" 
d="M896 720q-104 196 -160 278q-139 202 -347 318q-34 19 -70 36q-89 40 -94 32t34 -38l39 -31q62 -43 112.5 -93.5t94.5 -116.5t70.5 -113t70.5 -131q9 -17 13 -25q44 -84 84 -153t98 -154t115.5 -150t131 -123.5t148.5 -90.5q153 -66 154 -60q1 3 -49 37q-53 36 -81 57
q-77 58 -179 211t-185 310zM549 177q-76 60 -132.5 125t-98 143.5t-71 154.5t-58.5 186t-52 209t-60.5 252t-76.5 289q273 0 497.5 -36t379 -92t271 -144.5t185.5 -172.5t110 -198.5t56 -199.5t12.5 -198.5t-9.5 -173t-20 -143.5t-13 -107l323 -327h-104l-281 285
q-22 -2 -91.5 -14t-121.5 -19t-138 -6t-160.5 17t-167.5 59t-179 111z" />
    <glyph glyph-name="_625" unicode="&#xf29a;" horiz-adv-x="1792" 
d="M1374 879q-6 26 -28.5 39.5t-48.5 7.5q-261 -62 -401 -62t-401 62q-26 6 -48.5 -7.5t-28.5 -39.5t7.5 -48.5t39.5 -28.5q194 -46 303 -58q-2 -158 -15.5 -269t-26.5 -155.5t-41 -115.5l-9 -21q-10 -25 1 -49t36 -34q9 -4 23 -4q44 0 60 41l8 20q54 139 71 259h42
q17 -120 71 -259l8 -20q16 -41 60 -41q14 0 23 4q25 10 36 34t1 49l-9 21q-28 71 -41 115.5t-26.5 155.5t-15.5 269q109 12 303 58q26 6 39.5 28.5t7.5 48.5zM1024 1024q0 53 -37.5 90.5t-90.5 37.5t-90.5 -37.5t-37.5 -90.5t37.5 -90.5t90.5 -37.5t90.5 37.5t37.5 90.5z
M1600 640q0 -143 -55.5 -273.5t-150 -225t-225 -150t-273.5 -55.5t-273.5 55.5t-225 150t-150 225t-55.5 273.5t55.5 273.5t150 225t225 150t273.5 55.5t273.5 -55.5t225 -150t150 -225t55.5 -273.5zM896 1408q-156 0 -298 -61t-245 -164t-164 -245t-61 -298t61 -298
t164 -245t245 -164t298 -61t298 61t245 164t164 245t61 298t-61 298t-164 245t-245 164t-298 61zM1792 640q0 -182 -71 -348t-191 -286t-286 -191t-348 -71t-348 71t-286 191t-191 286t-71 348t71 348t191 286t286 191t348 71t348 -71t286 -191t191 -286t71 -348z" />
    <glyph glyph-name="_626" unicode="&#xf29b;" 
d="M1438 723q34 -35 29 -82l-44 -551q-4 -42 -34.5 -70t-71.5 -28q-6 0 -9 1q-44 3 -72.5 36.5t-25.5 77.5l35 429l-143 -8q55 -113 55 -240q0 -216 -148 -372l-137 137q91 101 91 235q0 145 -102.5 248t-247.5 103q-134 0 -236 -92l-137 138q120 114 284 141l264 300
l-149 87l-181 -161q-33 -30 -77 -27.5t-73 35.5t-26.5 77t34.5 73l239 213q26 23 60 26.5t64 -14.5l488 -283q36 -21 48 -68q17 -67 -26 -117l-205 -232l371 20q49 3 83 -32zM1240 1180q-74 0 -126 52t-52 126t52 126t126 52t126.5 -52t52.5 -126t-52.5 -126t-126.5 -52z
M613 -62q106 0 196 61l139 -139q-146 -116 -335 -116q-148 0 -273.5 73t-198.5 198t-73 273q0 188 116 336l139 -139q-60 -88 -60 -197q0 -145 102.5 -247.5t247.5 -102.5z" />
    <glyph glyph-name="_627" unicode="&#xf29c;" 
d="M880 336v-160q0 -14 -9 -23t-23 -9h-160q-14 0 -23 9t-9 23v160q0 14 9 23t23 9h160q14 0 23 -9t9 -23zM1136 832q0 -50 -15 -90t-45.5 -69t-52 -44t-59.5 -36q-32 -18 -46.5 -28t-26 -24t-11.5 -29v-32q0 -14 -9 -23t-23 -9h-160q-14 0 -23 9t-9 23v68q0 35 10.5 64.5
t24 47.5t39 35.5t41 25.5t44.5 21q53 25 75 43t22 49q0 42 -43.5 71.5t-95.5 29.5q-56 0 -95 -27q-29 -20 -80 -83q-9 -12 -25 -12q-11 0 -19 6l-108 82q-10 7 -12 20t5 23q122 192 349 192q129 0 238.5 -89.5t109.5 -214.5zM768 1280q-130 0 -248.5 -51t-204 -136.5
t-136.5 -204t-51 -248.5t51 -248.5t136.5 -204t204 -136.5t248.5 -51t248.5 51t204 136.5t136.5 204t51 248.5t-51 248.5t-136.5 204t-204 136.5t-248.5 51zM1536 640q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5
t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="_628" unicode="&#xf29d;" horiz-adv-x="1408" 
d="M366 1225q-64 0 -110 45.5t-46 110.5q0 64 46 109.5t110 45.5t109.5 -45.5t45.5 -109.5q0 -65 -45.5 -110.5t-109.5 -45.5zM917 583q0 -50 -30 -67.5t-63.5 -6.5t-47.5 34l-367 438q-7 12 -14 15.5t-11 1.5l-3 -3q-7 -8 4 -21l122 -139l1 -354l-161 -457
q-67 -192 -92 -234q-15 -26 -28 -32q-50 -26 -103 -1q-29 13 -41.5 43t-9.5 57q2 17 197 618l5 416l-85 -164l35 -222q4 -24 -1 -42t-14 -27.5t-19 -16t-17 -7.5l-7 -2q-19 -3 -34.5 3t-24 16t-14 22t-7.5 19.5t-2 9.5l-46 299l211 381q23 34 113 34q75 0 107 -40l424 -521
q7 -5 14 -17l3 -3l-1 -1q7 -13 7 -29zM514 433q43 -113 88.5 -225t69.5 -168l24 -55q36 -93 42 -125q11 -70 -36 -97q-35 -22 -66 -16t-51 22t-29 35h-1q-6 16 -8 25l-124 351zM1338 -159q31 -49 31 -57q0 -5 -3 -7q-9 -5 -14.5 0.5t-15.5 26t-16 30.5q-114 172 -423 661
q3 -1 7 1t7 4l3 2q11 9 11 17z" />
    <glyph glyph-name="_629" unicode="&#xf29e;" horiz-adv-x="2304" 
d="M504 542h171l-1 265zM1530 641q0 87 -50.5 140t-146.5 53h-54v-388h52q91 0 145 57t54 138zM956 1018l1 -756q0 -14 -9.5 -24t-23.5 -10h-216q-14 0 -23.5 10t-9.5 24v62h-291l-55 -81q-10 -15 -28 -15h-267q-21 0 -30.5 18t3.5 35l556 757q9 14 27 14h332q14 0 24 -10
t10 -24zM1783 641q0 -193 -125.5 -303t-324.5 -110h-270q-14 0 -24 10t-10 24v756q0 14 10 24t24 10h268q200 0 326 -109t126 -302zM1939 640q0 -11 -0.5 -29t-8 -71.5t-21.5 -102t-44.5 -108t-73.5 -102.5h-51q38 45 66.5 104.5t41.5 112t21 98t9 72.5l1 27q0 8 -0.5 22.5
t-7.5 60t-20 91.5t-41 111.5t-66 124.5h43q41 -47 72 -107t45.5 -111.5t23 -96t10.5 -70.5zM2123 640q0 -11 -0.5 -29t-8 -71.5t-21.5 -102t-45 -108t-74 -102.5h-51q38 45 66.5 104.5t41.5 112t21 98t9 72.5l1 27q0 8 -0.5 22.5t-7.5 60t-19.5 91.5t-40.5 111.5t-66 124.5
h43q41 -47 72 -107t45.5 -111.5t23 -96t10.5 -70.5zM2304 640q0 -11 -0.5 -29t-8 -71.5t-21.5 -102t-44.5 -108t-73.5 -102.5h-51q38 45 66 104.5t41 112t21 98t9 72.5l1 27q0 8 -0.5 22.5t-7.5 60t-19.5 91.5t-40.5 111.5t-66 124.5h43q41 -47 72 -107t45.5 -111.5t23 -96
t9.5 -70.5z" />
    <glyph glyph-name="uniF2A0" unicode="&#xf2a0;" horiz-adv-x="1408" 
d="M617 -153q0 11 -13 58t-31 107t-20 69q-1 4 -5 26.5t-8.5 36t-13.5 21.5q-15 14 -51 14q-23 0 -70 -5.5t-71 -5.5q-34 0 -47 11q-6 5 -11 15.5t-7.5 20t-6.5 24t-5 18.5q-37 128 -37 255t37 255q1 4 5 18.5t6.5 24t7.5 20t11 15.5q13 11 47 11q24 0 71 -5.5t70 -5.5
q36 0 51 14q9 8 13.5 21.5t8.5 36t5 26.5q2 9 20 69t31 107t13 58q0 22 -43.5 52.5t-75.5 42.5q-20 8 -45 8q-34 0 -98 -18q-57 -17 -96.5 -40.5t-71 -66t-46 -70t-45.5 -94.5q-6 -12 -9 -19q-49 -107 -68 -216t-19 -244t19 -244t68 -216q56 -122 83 -161q63 -91 179 -127
l6 -2q64 -18 98 -18q25 0 45 8q32 12 75.5 42.5t43.5 52.5zM776 760q-26 0 -45 19t-19 45.5t19 45.5q37 37 37 90q0 52 -37 91q-19 19 -19 45t19 45t45 19t45 -19q75 -75 75 -181t-75 -181q-21 -19 -45 -19zM957 579q-27 0 -45 19q-19 19 -19 45t19 45q112 114 112 272
t-112 272q-19 19 -19 45t19 45t45 19t45 -19q150 -150 150 -362t-150 -362q-18 -19 -45 -19zM1138 398q-27 0 -45 19q-19 19 -19 45t19 45q90 91 138.5 208t48.5 245t-48.5 245t-138.5 208q-19 19 -19 45t19 45t45 19t45 -19q109 -109 167 -249t58 -294t-58 -294t-167 -249
q-18 -19 -45 -19z" />
    <glyph glyph-name="uniF2A1" unicode="&#xf2a1;" horiz-adv-x="2176" 
d="M192 352q-66 0 -113 -47t-47 -113t47 -113t113 -47t113 47t47 113t-47 113t-113 47zM704 352q-66 0 -113 -47t-47 -113t47 -113t113 -47t113 47t47 113t-47 113t-113 47zM704 864q-66 0 -113 -47t-47 -113t47 -113t113 -47t113 47t47 113t-47 113t-113 47zM1472 352
q-66 0 -113 -47t-47 -113t47 -113t113 -47t113 47t47 113t-47 113t-113 47zM1984 352q-66 0 -113 -47t-47 -113t47 -113t113 -47t113 47t47 113t-47 113t-113 47zM1472 864q-66 0 -113 -47t-47 -113t47 -113t113 -47t113 47t47 113t-47 113t-113 47zM1984 864
q-66 0 -113 -47t-47 -113t47 -113t113 -47t113 47t47 113t-47 113t-113 47zM1984 1376q-66 0 -113 -47t-47 -113t47 -113t113 -47t113 47t47 113t-47 113t-113 47zM384 192q0 -80 -56 -136t-136 -56t-136 56t-56 136t56 136t136 56t136 -56t56 -136zM896 192q0 -80 -56 -136
t-136 -56t-136 56t-56 136t56 136t136 56t136 -56t56 -136zM384 704q0 -80 -56 -136t-136 -56t-136 56t-56 136t56 136t136 56t136 -56t56 -136zM896 704q0 -80 -56 -136t-136 -56t-136 56t-56 136t56 136t136 56t136 -56t56 -136zM384 1216q0 -80 -56 -136t-136 -56
t-136 56t-56 136t56 136t136 56t136 -56t56 -136zM1664 192q0 -80 -56 -136t-136 -56t-136 56t-56 136t56 136t136 56t136 -56t56 -136zM896 1216q0 -80 -56 -136t-136 -56t-136 56t-56 136t56 136t136 56t136 -56t56 -136zM2176 192q0 -80 -56 -136t-136 -56t-136 56
t-56 136t56 136t136 56t136 -56t56 -136zM1664 704q0 -80 -56 -136t-136 -56t-136 56t-56 136t56 136t136 56t136 -56t56 -136zM2176 704q0 -80 -56 -136t-136 -56t-136 56t-56 136t56 136t136 56t136 -56t56 -136zM1664 1216q0 -80 -56 -136t-136 -56t-136 56t-56 136
t56 136t136 56t136 -56t56 -136zM2176 1216q0 -80 -56 -136t-136 -56t-136 56t-56 136t56 136t136 56t136 -56t56 -136z" />
    <glyph glyph-name="uniF2A2" unicode="&#xf2a2;" horiz-adv-x="1792" 
d="M128 -192q0 -26 -19 -45t-45 -19t-45 19t-19 45t19 45t45 19t45 -19t19 -45zM320 0q0 -26 -19 -45t-45 -19t-45 19t-19 45t19 45t45 19t45 -19t19 -45zM365 365l256 -256l-90 -90l-256 256zM704 384q0 -26 -19 -45t-45 -19t-45 19t-19 45t19 45t45 19t45 -19t19 -45z
M1411 704q0 -59 -11.5 -108.5t-37.5 -93.5t-44 -67.5t-53 -64.5q-31 -35 -45.5 -54t-33.5 -50t-26.5 -64t-7.5 -74q0 -159 -112.5 -271.5t-271.5 -112.5q-26 0 -45 19t-19 45t19 45t45 19q106 0 181 75t75 181q0 57 11.5 105.5t37 91t43.5 66.5t52 63q40 46 59.5 72
t37.5 74.5t18 103.5q0 185 -131.5 316.5t-316.5 131.5t-316.5 -131.5t-131.5 -316.5q0 -26 -19 -45t-45 -19t-45 19t-19 45q0 117 45.5 223.5t123 184t184 123t223.5 45.5t223.5 -45.5t184 -123t123 -184t45.5 -223.5zM896 576q0 -26 -19 -45t-45 -19t-45 19t-19 45t19 45
t45 19t45 -19t19 -45zM1184 704q0 -26 -19 -45t-45 -19t-45 19t-19 45q0 93 -65.5 158.5t-158.5 65.5q-92 0 -158 -65.5t-66 -158.5q0 -26 -19 -45t-45 -19t-45 19t-19 45q0 146 103 249t249 103t249 -103t103 -249zM1578 993q10 -25 -1 -49t-36 -34q-9 -4 -23 -4
q-19 0 -35.5 11t-23.5 30q-68 178 -224 295q-21 16 -25 42t12 47q17 21 43 25t47 -12q183 -137 266 -351zM1788 1074q9 -25 -1.5 -49t-35.5 -34q-11 -4 -23 -4q-44 0 -60 41q-92 238 -297 393q-22 16 -25.5 42t12.5 47q16 22 42 25.5t47 -12.5q235 -175 341 -449z" />
    <glyph glyph-name="uniF2A3" unicode="&#xf2a3;" horiz-adv-x="2304" 
d="M1032 576q-59 2 -84 55q-17 34 -48 53.5t-68 19.5q-53 0 -90.5 -37.5t-37.5 -90.5q0 -56 36 -89l10 -8q34 -31 82 -31q37 0 68 19.5t48 53.5q25 53 84 55zM1600 704q0 56 -36 89l-10 8q-34 31 -82 31q-37 0 -68 -19.5t-48 -53.5q-25 -53 -84 -55q59 -2 84 -55
q17 -34 48 -53.5t68 -19.5q53 0 90.5 37.5t37.5 90.5zM1174 925q-17 -35 -55 -48t-73 4q-62 31 -134 31q-51 0 -99 -17q3 0 9.5 0.5t9.5 0.5q92 0 170.5 -50t118.5 -133q17 -36 3.5 -73.5t-49.5 -54.5q-18 -9 -39 -9q21 0 39 -9q36 -17 49.5 -54.5t-3.5 -73.5
q-40 -83 -118.5 -133t-170.5 -50h-6q-16 2 -44 4l-290 27l-239 -120q-14 -7 -29 -7q-40 0 -57 35l-160 320q-11 23 -4 47.5t29 37.5l209 119l148 267q17 155 91.5 291.5t195.5 236.5q31 25 70.5 21.5t64.5 -34.5t21.5 -70t-34.5 -65q-70 -59 -117 -128q123 84 267 101
q40 5 71.5 -19t35.5 -64q5 -40 -19 -71.5t-64 -35.5q-84 -10 -159 -55q46 10 99 10q115 0 218 -50q36 -18 49 -55.5t-5 -73.5zM2137 1085l160 -320q11 -23 4 -47.5t-29 -37.5l-209 -119l-148 -267q-17 -155 -91.5 -291.5t-195.5 -236.5q-26 -22 -61 -22q-45 0 -74 35
q-25 31 -21.5 70t34.5 65q70 59 117 128q-123 -84 -267 -101q-4 -1 -12 -1q-36 0 -63.5 24t-31.5 60q-5 40 19 71.5t64 35.5q84 10 159 55q-46 -10 -99 -10q-115 0 -218 50q-36 18 -49 55.5t5 73.5q17 35 55 48t73 -4q62 -31 134 -31q51 0 99 17q-3 0 -9.5 -0.5t-9.5 -0.5
q-92 0 -170.5 50t-118.5 133q-17 36 -3.5 73.5t49.5 54.5q18 9 39 9q-21 0 -39 9q-36 17 -49.5 54.5t3.5 73.5q40 83 118.5 133t170.5 50h6h1q14 -2 42 -4l291 -27l239 120q14 7 29 7q40 0 57 -35z" />
    <glyph glyph-name="uniF2A4" unicode="&#xf2a4;" horiz-adv-x="1792" 
d="M1056 704q0 -26 19 -45t45 -19t45 19t19 45q0 146 -103 249t-249 103t-249 -103t-103 -249q0 -26 19 -45t45 -19t45 19t19 45q0 93 66 158.5t158 65.5t158 -65.5t66 -158.5zM835 1280q-117 0 -223.5 -45.5t-184 -123t-123 -184t-45.5 -223.5q0 -26 19 -45t45 -19t45 19
t19 45q0 185 131.5 316.5t316.5 131.5t316.5 -131.5t131.5 -316.5q0 -55 -18 -103.5t-37.5 -74.5t-59.5 -72q-34 -39 -52 -63t-43.5 -66.5t-37 -91t-11.5 -105.5q0 -106 -75 -181t-181 -75q-26 0 -45 -19t-19 -45t19 -45t45 -19q159 0 271.5 112.5t112.5 271.5q0 41 7.5 74
t26.5 64t33.5 50t45.5 54q35 41 53 64.5t44 67.5t37.5 93.5t11.5 108.5q0 117 -45.5 223.5t-123 184t-184 123t-223.5 45.5zM591 561l226 -226l-579 -579q-12 -12 -29 -12t-29 12l-168 168q-12 12 -12 29t12 29zM1612 1524l168 -168q12 -12 12 -29t-12 -30l-233 -233
l-26 -25l-71 -71q-66 153 -195 258l91 91l207 207q13 12 30 12t29 -12z" />
    <glyph glyph-name="uniF2A5" unicode="&#xf2a5;" 
d="M866 1021q0 -27 -13 -94q-11 -50 -31.5 -150t-30.5 -150q-2 -11 -4.5 -12.5t-13.5 -2.5q-20 -2 -31 -2q-58 0 -84 49.5t-26 113.5q0 88 35 174t103 124q28 14 51 14q28 0 36.5 -16.5t8.5 -47.5zM1352 597q0 14 -39 75.5t-52 66.5q-21 8 -34 8q-91 0 -226 -77l-2 2
q3 22 27.5 135t24.5 178q0 233 -242 233q-24 0 -68 -6q-94 -17 -168.5 -89.5t-111.5 -166.5t-37 -189q0 -146 80.5 -225t227.5 -79q25 0 25 -3t-1 -5q-4 -34 -26 -117q-14 -52 -51.5 -101t-82.5 -49q-42 0 -42 47q0 24 10.5 47.5t25 39.5t29.5 28.5t26 20t11 8.5q0 3 -7 10
q-24 22 -58.5 36.5t-65.5 14.5q-35 0 -63.5 -34t-41 -75t-12.5 -75q0 -88 51.5 -142t138.5 -54q82 0 155 53t117.5 126t65.5 153q6 22 15.5 66.5t14.5 66.5q3 12 14 18q118 60 227 60q48 0 127 -18q1 -1 4 -1q5 0 9.5 4.5t4.5 8.5zM1536 1120v-960q0 -119 -84.5 -203.5
t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z" />
    <glyph glyph-name="uniF2A6" unicode="&#xf2a6;" horiz-adv-x="1535" 
d="M744 1231q0 24 -2 38.5t-8.5 30t-21 23t-37.5 7.5q-39 0 -78 -23q-105 -58 -159 -190.5t-54 -269.5q0 -44 8.5 -85.5t26.5 -80.5t52.5 -62.5t81.5 -23.5q4 0 18 -0.5t20 0t16 3t15 8.5t7 16q16 77 48 231.5t48 231.5q19 91 19 146zM1498 575q0 -7 -7.5 -13.5t-15.5 -6.5
l-6 1q-22 3 -62 11t-72 12.5t-63 4.5q-167 0 -351 -93q-15 -8 -21 -27q-10 -36 -24.5 -105.5t-22.5 -100.5q-23 -91 -70 -179.5t-112.5 -164.5t-154.5 -123t-185 -47q-135 0 -214.5 83.5t-79.5 219.5q0 53 19.5 117t63 116.5t97.5 52.5q38 0 120 -33.5t83 -61.5
q0 -1 -16.5 -12.5t-39.5 -31t-46 -44.5t-39 -61t-16 -74q0 -33 16.5 -53t48.5 -20q45 0 85 31.5t66.5 78t48 105.5t32.5 107t16 90v9q0 2 -3.5 3.5t-8.5 1.5h-10t-10 -0.5t-6 -0.5q-227 0 -352 122.5t-125 348.5q0 108 34.5 221t96 210t156 167.5t204.5 89.5q52 9 106 9
q374 0 374 -360q0 -98 -38 -273t-43 -211l3 -3q101 57 182.5 88t167.5 31q22 0 53 -13q19 -7 80 -102.5t61 -116.5z" />
    <glyph glyph-name="uniF2A7" unicode="&#xf2a7;" horiz-adv-x="1664" 
d="M831 863q32 0 59 -18l222 -148q61 -40 110 -97l146 -170q40 -46 29 -106l-72 -413q-6 -32 -29.5 -53.5t-55.5 -25.5l-527 -56l-352 -32h-9q-39 0 -67.5 28t-28.5 68q0 37 27 64t65 32l260 32h-448q-41 0 -69.5 30t-26.5 71q2 39 32 65t69 26l442 1l-521 64q-41 5 -66 37
t-19 73q6 35 34.5 57.5t65.5 22.5h10l481 -60l-351 94q-38 10 -62 41.5t-18 68.5q6 36 33 58.5t62 22.5q6 0 20 -2l448 -96l217 -37q1 0 3 -0.5t3 -0.5q23 0 30.5 23t-12.5 36l-186 125q-35 23 -42 63.5t18 73.5q27 38 76 38zM761 661l186 -125l-218 37l-5 2l-36 38
l-238 262q-1 1 -2.5 3.5t-2.5 3.5q-24 31 -18.5 70t37.5 64q31 23 68 17.5t64 -33.5l142 -147q-2 -1 -5 -3.5t-4 -4.5q-32 -45 -23 -99t55 -85zM1648 1115l15 -266q4 -73 -11 -147l-48 -219q-12 -59 -67 -87l-106 -54q2 62 -39 109l-146 170q-53 61 -117 103l-222 148
q-34 23 -76 23q-51 0 -88 -37l-235 312q-25 33 -18 73.5t41 63.5q33 22 71.5 14t62.5 -40l266 -352l-262 455q-21 35 -10.5 75t47.5 59q35 18 72.5 6t57.5 -46l241 -420l-136 337q-15 35 -4.5 74t44.5 56q37 19 76 6t56 -51l193 -415l101 -196q8 -15 23 -17.5t27 7.5t11 26
l-12 224q-2 41 26 71t69 31q39 0 67 -28.5t30 -67.5z" />
    <glyph glyph-name="uniF2A8" unicode="&#xf2a8;" horiz-adv-x="1792" 
d="M335 180q-2 0 -6 2q-86 57 -168.5 145t-139.5 180q-21 30 -21 69q0 9 2 19t4 18t7 18t8.5 16t10.5 17t10 15t12 15.5t11 14.5q184 251 452 365q-110 198 -110 211q0 19 17 29q116 64 128 64q18 0 28 -16l124 -229q92 19 192 19q266 0 497.5 -137.5t378.5 -369.5
q20 -31 20 -69t-20 -69q-91 -142 -218.5 -253.5t-278.5 -175.5q110 -198 110 -211q0 -20 -17 -29q-116 -64 -127 -64q-19 0 -29 16l-124 229l-64 119l-444 820l7 7q-58 -24 -99 -47q3 -5 127 -234t243 -449t119 -223q0 -7 -9 -9q-13 -3 -72 -3q-57 0 -60 7l-456 841
q-39 -28 -82 -68q24 -43 214 -393.5t190 -354.5q0 -10 -11 -10q-14 0 -82.5 22t-72.5 28l-106 197l-224 413q-44 -53 -78 -106q2 -3 18 -25t23 -34l176 -327q0 -10 -10 -10zM1165 282l49 -91q273 111 450 385q-180 277 -459 389q67 -64 103 -148.5t36 -176.5
q0 -106 -47 -200.5t-132 -157.5zM848 896q0 -20 14 -34t34 -14q86 0 147 -61t61 -147q0 -20 14 -34t34 -14t34 14t14 34q0 126 -89 215t-215 89q-20 0 -34 -14t-14 -34zM1214 961l-9 4l7 -7z" />
    <glyph glyph-name="uniF2A9" unicode="&#xf2a9;" horiz-adv-x="1280" 
d="M1050 430q0 -215 -147 -374q-148 -161 -378 -161q-232 0 -378 161q-147 159 -147 374q0 147 68 270.5t189 196.5t268 73q96 0 182 -31q-32 -62 -39 -126q-66 28 -143 28q-167 0 -280.5 -123t-113.5 -291q0 -170 112.5 -288.5t281.5 -118.5t281 118.5t112 288.5
q0 89 -32 166q66 13 123 49q41 -98 41 -212zM846 619q0 -192 -79.5 -345t-238.5 -253l-14 -1q-29 0 -62 5q83 32 146.5 102.5t99.5 154.5t58.5 189t30 192.5t7.5 178.5q0 69 -3 103q55 -160 55 -326zM791 947v-2q-73 214 -206 440q88 -59 142.5 -186.5t63.5 -251.5z
M1035 744q-83 0 -160 75q218 120 290 247q19 37 21 56q-42 -94 -139.5 -166.5t-204.5 -97.5q-35 54 -35 113q0 37 17 79t43 68q46 44 157 74q59 16 106 58.5t74 100.5q74 -105 74 -253q0 -109 -24 -170q-32 -77 -88.5 -130.5t-130.5 -53.5z" />
    <glyph glyph-name="uniF2AA" unicode="&#xf2aa;" 
d="M1050 495q0 78 -28 147q-41 -25 -85 -34q22 -50 22 -114q0 -117 -77 -198.5t-193 -81.5t-193.5 81.5t-77.5 198.5q0 115 78 199.5t193 84.5q53 0 98 -19q4 43 27 87q-60 21 -125 21q-154 0 -257.5 -108.5t-103.5 -263.5t103.5 -261t257.5 -106t257.5 106.5t103.5 260.5z
M872 850q2 -24 2 -71q0 -63 -5 -123t-20.5 -132.5t-40.5 -130t-68.5 -106t-100.5 -70.5q21 -3 42 -3h10q219 139 219 411q0 116 -38 225zM872 850q-4 80 -44 171.5t-98 130.5q92 -156 142 -302zM1207 955q0 102 -51 174q-41 -86 -124 -109q-69 -19 -109 -53.5t-40 -99.5
q0 -40 24 -77q74 17 140.5 67t95.5 115q-4 -52 -74.5 -111.5t-138.5 -97.5q52 -52 110 -52q51 0 90 37t60 90q17 42 17 117zM1536 1120v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5
t84.5 -203.5z" />
    <glyph glyph-name="uniF2AB" unicode="&#xf2ab;" 
d="M1279 388q0 22 -22 27q-67 15 -118 59t-80 108q-7 19 -7 25q0 15 19.5 26t43 17t43 20.5t19.5 36.5q0 19 -18.5 31.5t-38.5 12.5q-12 0 -32 -8t-31 -8q-4 0 -12 2q5 95 5 114q0 79 -17 114q-36 78 -103 121.5t-152 43.5q-199 0 -275 -165q-17 -35 -17 -114q0 -19 5 -114
q-4 -2 -14 -2q-12 0 -32 7.5t-30 7.5q-21 0 -38.5 -12t-17.5 -32q0 -21 19.5 -35.5t43 -20.5t43 -17t19.5 -26q0 -6 -7 -25q-64 -138 -198 -167q-22 -5 -22 -27q0 -46 137 -68q2 -5 6 -26t11.5 -30.5t23.5 -9.5q12 0 37.5 4.5t39.5 4.5q35 0 67 -15t54 -32.5t57.5 -32.5
t76.5 -15q43 0 79 15t57.5 32.5t53.5 32.5t67 15q14 0 39.5 -4t38.5 -4q16 0 23 10t11 30t6 25q137 22 137 68zM1536 640q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5
t103 -385.5z" />
    <glyph glyph-name="uniF2AC" unicode="&#xf2ac;" horiz-adv-x="1664" 
d="M848 1408q134 1 240.5 -68.5t163.5 -192.5q27 -58 27 -179q0 -47 -9 -191q14 -7 28 -7q18 0 51 13.5t51 13.5q29 0 56 -18t27 -46q0 -32 -31.5 -54t-69 -31.5t-69 -29t-31.5 -47.5q0 -15 12 -43q37 -82 102.5 -150t144.5 -101q28 -12 80 -23q28 -6 28 -35
q0 -70 -219 -103q-7 -11 -11 -39t-14 -46.5t-33 -18.5q-20 0 -62 6.5t-64 6.5q-37 0 -62 -5q-32 -5 -63 -22.5t-58 -38t-58 -40.5t-76 -33.5t-99 -13.5q-52 0 -96.5 13.5t-75 33.5t-57.5 40.5t-58 38t-62 22.5q-26 5 -63 5q-24 0 -65.5 -7.5t-58.5 -7.5q-25 0 -35 18.5
t-14 47.5t-11 40q-219 33 -219 103q0 29 28 35q52 11 80 23q78 32 144.5 101t102.5 150q12 28 12 43q0 28 -31.5 47.5t-69.5 29.5t-69.5 31.5t-31.5 52.5q0 27 26 45.5t55 18.5q15 0 48 -13t53 -13q18 0 32 7q-9 142 -9 190q0 122 27 180q64 137 172 198t264 63z" />
    <glyph glyph-name="uniF2AD" unicode="&#xf2ad;" 
d="M1280 388q0 22 -22 27q-67 14 -118 58t-80 109q-7 14 -7 25q0 15 19.5 26t42.5 17t42.5 20.5t19.5 36.5q0 19 -18.5 31.5t-38.5 12.5q-11 0 -31 -8t-32 -8q-4 0 -12 2q5 63 5 115q0 78 -17 114q-36 78 -102.5 121.5t-152.5 43.5q-198 0 -275 -165q-18 -38 -18 -115
q0 -38 6 -114q-10 -2 -15 -2q-11 0 -31.5 8t-30.5 8q-20 0 -37.5 -12.5t-17.5 -32.5q0 -21 19.5 -35.5t42.5 -20.5t42.5 -17t19.5 -26q0 -11 -7 -25q-64 -138 -198 -167q-22 -5 -22 -27q0 -47 138 -69q2 -5 6 -26t11 -30.5t23 -9.5q13 0 38.5 5t38.5 5q35 0 67.5 -15
t54.5 -32.5t57.5 -32.5t76.5 -15q43 0 79 15t57.5 32.5t54 32.5t67.5 15q13 0 39 -4.5t39 -4.5q15 0 22.5 9.5t11.5 31t5 24.5q138 22 138 69zM1536 1120v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960
q119 0 203.5 -84.5t84.5 -203.5z" />
    <glyph glyph-name="uniF2AE" unicode="&#xf2ae;" horiz-adv-x="2304" 
d="M2304 1536q-69 -46 -125 -92t-89 -81t-59.5 -71.5t-37.5 -57.5t-22 -44.5t-14 -29.5q-10 -18 -35.5 -136.5t-48.5 -164.5q-15 -29 -50 -60.5t-67.5 -50.5t-72.5 -41t-48 -28q-47 -31 -151 -231q-341 14 -630 -158q-92 -53 -303 -179q47 16 86 31t55 22l15 7
q71 27 163 64.5t133.5 53.5t108 34.5t142.5 31.5q186 31 465 -7q1 0 10 -3q11 -6 14 -17t-3 -22l-194 -345q-15 -29 -47 -22q-128 24 -354 24q-146 0 -402 -44.5t-392 -46.5q-82 -1 -149 13t-107 37t-61 40t-33 34l-1 1v2q0 6 6 6q138 0 371 55q192 366 374.5 524t383.5 158
q5 0 14.5 -0.5t38 -5t55 -12t61.5 -24.5t63 -39.5t54 -59t40 -82.5l102 177q2 4 21 42.5t44.5 86.5t61 109.5t84 133.5t100.5 137q66 82 128 141.5t121.5 96.5t92.5 53.5t88 39.5z" />
    <glyph glyph-name="uniF2B0" unicode="&#xf2b0;" 
d="M1322 640q0 -45 -5 -76l-236 14l224 -78q-19 -73 -58 -141l-214 103l177 -158q-44 -61 -107 -108l-157 178l103 -215q-61 -37 -140 -59l-79 228l14 -240q-38 -6 -76 -6t-76 6l14 238l-78 -226q-74 19 -140 59l103 215l-157 -178q-59 43 -108 108l178 158l-214 -104
q-39 69 -58 141l224 79l-237 -14q-5 42 -5 76q0 35 5 77l238 -14l-225 79q19 73 58 140l214 -104l-177 159q46 61 107 108l158 -178l-103 215q67 39 140 58l77 -224l-13 236q36 6 75 6q38 0 76 -6l-14 -237l78 225q74 -19 140 -59l-103 -214l158 178q61 -47 107 -108
l-177 -159l213 104q37 -62 58 -141l-224 -78l237 14q5 -31 5 -77zM1352 640q0 160 -78.5 295.5t-213 214t-292.5 78.5q-119 0 -227 -46.5t-186.5 -125t-124.5 -187.5t-46 -229q0 -119 46 -228t124.5 -187.5t186.5 -125t227 -46.5q158 0 292.5 78.5t213 214t78.5 294.5z
M1425 1023v-766l-657 -383l-657 383v766l657 383zM768 -183l708 412v823l-708 411l-708 -411v-823zM1536 1088v-896l-768 -448l-768 448v896l768 448z" />
    <glyph glyph-name="uniF2B1" unicode="&#xf2b1;" horiz-adv-x="1664" 
d="M339 1318h691l-26 -72h-665q-110 0 -188.5 -79t-78.5 -189v-771q0 -95 60.5 -169.5t153.5 -93.5q23 -5 98 -5v-72h-45q-140 0 -239.5 100t-99.5 240v771q0 140 99.5 240t239.5 100zM1190 1536h247l-482 -1294q-23 -61 -40.5 -103.5t-45 -98t-54 -93.5t-64.5 -78.5
t-79.5 -65t-95.5 -41t-116 -18.5v195q163 26 220 182q20 52 20 105q0 54 -20 106l-285 733h228l187 -585zM1664 978v-1111h-795q37 55 45 73h678v1038q0 85 -49.5 155t-129.5 99l25 67q101 -34 163.5 -123.5t62.5 -197.5z" />
    <glyph glyph-name="uniF2B2" unicode="&#xf2b2;" horiz-adv-x="1792" 
d="M852 1227q0 -29 -17 -52.5t-45 -23.5t-45 23.5t-17 52.5t17 52.5t45 23.5t45 -23.5t17 -52.5zM688 -149v114q0 30 -20.5 51.5t-50.5 21.5t-50 -21.5t-20 -51.5v-114q0 -30 20.5 -52t49.5 -22q30 0 50.5 22t20.5 52zM860 -149v114q0 30 -20 51.5t-50 21.5t-50.5 -21.5
t-20.5 -51.5v-114q0 -30 20.5 -52t50.5 -22q29 0 49.5 22t20.5 52zM1034 -149v114q0 30 -20.5 51.5t-50.5 21.5t-50.5 -21.5t-20.5 -51.5v-114q0 -30 20.5 -52t50.5 -22t50.5 22t20.5 52zM1208 -149v114q0 30 -20.5 51.5t-50.5 21.5t-50.5 -21.5t-20.5 -51.5v-114
q0 -30 20.5 -52t50.5 -22t50.5 22t20.5 52zM1476 535q-84 -160 -232 -259.5t-323 -99.5q-123 0 -229.5 51.5t-178.5 137t-113 197.5t-41 232q0 88 21 174q-104 -175 -104 -390q0 -162 65 -312t185 -251q30 57 91 57q56 0 86 -50q32 50 87 50q56 0 86 -50q32 50 87 50t87 -50
q30 50 86 50q28 0 52.5 -15.5t37.5 -40.5q112 94 177 231.5t73 287.5zM1326 564q0 75 -72 75q-17 0 -47 -6q-95 -19 -149 -19q-226 0 -226 243q0 86 30 204q-83 -127 -83 -275q0 -150 89 -260.5t235 -110.5q111 0 210 70q13 48 13 79zM884 1223q0 50 -32 89.5t-81 39.5
t-81 -39.5t-32 -89.5q0 -51 31.5 -90.5t81.5 -39.5t81.5 39.5t31.5 90.5zM1513 884q0 96 -37.5 179t-113 137t-173.5 54q-77 0 -149 -35t-127 -94q-48 -159 -48 -268q0 -104 45.5 -157t147.5 -53q53 0 142 19q36 6 53 6q51 0 77.5 -28t26.5 -80q0 -26 -4 -46
q75 68 117.5 165.5t42.5 200.5zM1792 667q0 -111 -33.5 -249.5t-93.5 -204.5q-58 -64 -195 -142.5t-228 -104.5l-4 -1v-114q0 -43 -29.5 -75t-72.5 -32q-56 0 -86 50q-32 -50 -87 -50t-87 50q-30 -50 -86 -50q-55 0 -87 50q-30 -50 -86 -50q-47 0 -75 33.5t-28 81.5
q-90 -68 -198 -68q-118 0 -211 80q54 1 106 20q-113 31 -182 127q32 -7 71 -7q89 0 164 46q-192 192 -240 306q-24 56 -24 160q0 57 9 125.5t31.5 146.5t55 141t86.5 105t120 42q59 0 81 -52q19 29 42 54q2 3 12 13t13 16q10 15 23 38t25 42t28 39q87 111 211.5 177
t260.5 66q35 0 62 -4q59 64 146 64q83 0 140 -57q5 -5 5 -12q0 -5 -6 -13.5t-12.5 -16t-16 -17l-10.5 -10.5q17 -6 36 -18t19 -24q0 -6 -16 -25q157 -138 197 -378q25 30 60 30q45 0 100 -49q90 -80 90 -279z" />
    <glyph glyph-name="uniF2B3" unicode="&#xf2b3;" 
d="M917 631q0 33 -6 64h-362v-132h217q-12 -76 -74.5 -120.5t-142.5 -44.5q-99 0 -169 71.5t-70 170.5t70 170.5t169 71.5q93 0 153 -59l104 101q-108 100 -257 100q-160 0 -272 -112.5t-112 -271.5t112 -271.5t272 -112.5q165 0 266.5 105t101.5 270zM1262 585h109v110
h-109v110h-110v-110h-110v-110h110v-110h110v110zM1536 640q0 -209 -103 -385.5t-279.5 -279.5t-385.5 -103t-385.5 103t-279.5 279.5t-103 385.5t103 385.5t279.5 279.5t385.5 103t385.5 -103t279.5 -279.5t103 -385.5z" />
    <glyph glyph-name="uniF2B4" unicode="&#xf2b4;" 
d="M1536 1024v-839q0 -48 -49 -62q-174 -52 -338 -52q-73 0 -215.5 29.5t-227.5 29.5q-164 0 -370 -48v-338h-160v1368q-63 25 -101 81t-38 124q0 91 64 155t155 64t155 -64t64 -155q0 -68 -38 -124t-101 -81v-68q190 44 343 44q99 0 198 -15q14 -2 111.5 -22.5t149.5 -20.5
q77 0 165 18q11 2 80 21t89 19q26 0 45 -19t19 -45z" />
    <glyph glyph-name="uniF2B5" unicode="&#xf2b5;" horiz-adv-x="2304" 
d="M192 384q40 0 56 32t0 64t-56 32t-56 -32t0 -64t56 -32zM1665 442q-10 13 -38.5 50t-41.5 54t-38 49t-42.5 53t-40.5 47t-45 49l-125 -140q-83 -94 -208.5 -92t-205.5 98q-57 69 -56.5 158t58.5 157l177 206q-22 11 -51 16.5t-47.5 6t-56.5 -0.5t-49 -1q-92 0 -158 -66
l-158 -158h-155v-544q5 0 21 0.5t22 0t19.5 -2t20.5 -4.5t17.5 -8.5t18.5 -13.5l297 -292q115 -111 227 -111q78 0 125 47q57 -20 112.5 8t72.5 85q74 -6 127 44q20 18 36 45.5t14 50.5q10 -10 43 -10q43 0 77 21t49.5 53t12 71.5t-30.5 73.5zM1824 384h96v512h-93l-157 180
q-66 76 -169 76h-167q-89 0 -146 -67l-209 -243q-28 -33 -28 -75t27 -75q43 -51 110 -52t111 49l193 218q25 23 53.5 21.5t47 -27t8.5 -56.5q16 -19 56 -63t60 -68q29 -36 82.5 -105.5t64.5 -84.5q52 -66 60 -140zM2112 384q40 0 56 32t0 64t-56 32t-56 -32t0 -64t56 -32z
M2304 960v-640q0 -26 -19 -45t-45 -19h-434q-27 -65 -82 -106.5t-125 -51.5q-33 -48 -80.5 -81.5t-102.5 -45.5q-42 -53 -104.5 -81.5t-128.5 -24.5q-60 -34 -126 -39.5t-127.5 14t-117 53.5t-103.5 81l-287 282h-358q-26 0 -45 19t-19 45v672q0 26 19 45t45 19h421
q14 14 47 48t47.5 48t44 40t50.5 37.5t51 25.5t62 19.5t68 5.5h117q99 0 181 -56q82 56 181 56h167q35 0 67 -6t56.5 -14.5t51.5 -26.5t44.5 -31t43 -39.5t39 -42t41 -48t41.5 -48.5h355q26 0 45 -19t19 -45z" />
    <glyph glyph-name="uniF2B6" unicode="&#xf2b6;" horiz-adv-x="1792" 
d="M1792 882v-978q0 -66 -47 -113t-113 -47h-1472q-66 0 -113 47t-47 113v978q0 15 11 24q8 7 39 34.5t41.5 36t45.5 37.5t70 55.5t96 73t143.5 107t192.5 140.5q5 4 52.5 40t71.5 52.5t64 35t69 18.5t69 -18.5t65 -35.5t71 -52t52 -40q110 -80 192.5 -140.5t143.5 -107
t96 -73t70 -55.5t45.5 -37.5t41.5 -36t39 -34.5q11 -9 11 -24zM1228 297q263 191 345 252q11 8 12.5 20.5t-6.5 23.5l-38 52q-8 11 -21 12.5t-24 -6.5q-231 -169 -343 -250q-5 -3 -52 -39t-71.5 -52.5t-64.5 -35t-69 -18.5t-69 18.5t-64.5 35t-71.5 52.5t-52 39
q-186 134 -343 250q-11 8 -24 6.5t-21 -12.5l-38 -52q-8 -11 -6.5 -23.5t12.5 -20.5q82 -61 345 -252q10 -8 50 -38t65 -47t64 -39.5t77.5 -33.5t75.5 -11t75.5 11t79 34.5t64.5 39.5t65 47.5t48 36.5z" />
    <glyph glyph-name="uniF2B7" unicode="&#xf2b7;" horiz-adv-x="1792" 
d="M1474 623l39 -51q8 -11 6.5 -23.5t-11.5 -20.5q-43 -34 -126.5 -98.5t-146.5 -113t-67 -51.5q-39 -32 -60 -48t-60.5 -41t-76.5 -36.5t-74 -11.5h-1h-1q-37 0 -74 11.5t-76 36.5t-61 41.5t-60 47.5q-5 4 -65 50.5t-143.5 111t-122.5 94.5q-11 8 -12.5 20.5t6.5 23.5
l37 52q8 11 21.5 13t24.5 -7q94 -73 306 -236q5 -4 43.5 -35t60.5 -46.5t56.5 -32.5t58.5 -17h1h1q24 0 58.5 17t56.5 32.5t60.5 46.5t43.5 35q258 198 313 242q11 8 24 6.5t21 -12.5zM1664 -96v928q-90 83 -159 139q-91 74 -389 304q-3 2 -43 35t-61 48t-56 32.5t-59 17.5
h-1h-1q-24 0 -59 -17.5t-56 -32.5t-61 -48t-43 -35q-215 -166 -315.5 -245.5t-129.5 -104t-82 -74.5q-14 -12 -21 -19v-928q0 -13 9.5 -22.5t22.5 -9.5h1472q13 0 22.5 9.5t9.5 22.5zM1792 832v-928q0 -66 -47 -113t-113 -47h-1472q-66 0 -113 47t-47 113v928q0 56 41 94
q123 114 350 290.5t233 181.5q36 30 59 47.5t61.5 42t76 36.5t74.5 12h1h1q37 0 74.5 -12t76 -36.5t61.5 -42t59 -47.5q43 -36 156 -122t226 -177t201 -173q41 -38 41 -94z" />
    <glyph glyph-name="uniF2B8" unicode="&#xf2b8;" 
d="M330 1l202 -214l-34 236l-216 213zM556 -225l274 218l-11 245l-300 -215zM245 413l227 -213l-48 327l-245 204zM495 189l317 214l-14 324l-352 -200zM843 178l95 -80l-2 239l-103 79q0 -1 1 -8.5t0 -12t-5 -7.5l-78 -52l85 -70q7 -6 7 -88zM138 930l256 -200l-68 465
l-279 173zM1173 267l15 234l-230 -164l2 -240zM417 722l373 194l-19 441l-423 -163zM1270 357l20 233l-226 142l-2 -105l144 -95q6 -4 4 -9l-7 -119zM1461 496l30 222l-179 -128l-20 -228zM1273 329l-71 49l-8 -117q0 -5 -4 -8l-234 -187q-7 -5 -14 0l-98 83l7 -161
q0 -5 -4 -8l-293 -234q-4 -2 -6 -2q-8 2 -8 3l-228 242q-4 4 -59 277q-2 7 5 11l61 37q-94 86 -95 92l-72 351q-2 7 6 12l94 45q-133 100 -135 108l-96 466q-2 10 7 13l433 135q5 0 8 -1l317 -153q6 -4 6 -9l20 -463q0 -7 -6 -10l-118 -61l126 -85q5 -2 5 -8l5 -123l121 74
q5 4 11 0l84 -56l3 110q0 6 5 9l206 126q6 3 11 0l245 -135q4 -4 5 -7t-6.5 -60t-17.5 -124.5t-10 -70.5q0 -5 -4 -7l-191 -153q-6 -5 -13 0z" />
    <glyph glyph-name="uniF2B9" unicode="&#xf2b9;" horiz-adv-x="1664" 
d="M1201 298q0 57 -5.5 107t-21 100.5t-39.5 86t-64 58t-91 22.5q-6 -4 -33.5 -20.5t-42.5 -24.5t-40.5 -20t-49 -17t-46.5 -5t-46.5 5t-49 17t-40.5 20t-42.5 24.5t-33.5 20.5q-51 0 -91 -22.5t-64 -58t-39.5 -86t-21 -100.5t-5.5 -107q0 -73 42 -121.5t103 -48.5h576
q61 0 103 48.5t42 121.5zM1028 892q0 108 -76.5 184t-183.5 76t-183.5 -76t-76.5 -184q0 -107 76.5 -183t183.5 -76t183.5 76t76.5 183zM1664 352v-192q0 -14 -9 -23t-23 -9h-96v-224q0 -66 -47 -113t-113 -47h-1216q-66 0 -113 47t-47 113v1472q0 66 47 113t113 47h1216
q66 0 113 -47t47 -113v-224h96q14 0 23 -9t9 -23v-192q0 -14 -9 -23t-23 -9h-96v-128h96q14 0 23 -9t9 -23v-192q0 -14 -9 -23t-23 -9h-96v-128h96q14 0 23 -9t9 -23z" />
    <glyph glyph-name="uniF2BA" unicode="&#xf2ba;" horiz-adv-x="1664" 
d="M1028 892q0 -107 -76.5 -183t-183.5 -76t-183.5 76t-76.5 183q0 108 76.5 184t183.5 76t183.5 -76t76.5 -184zM980 672q46 0 82.5 -17t60 -47.5t39.5 -67t24 -81t11.5 -82.5t3.5 -79q0 -67 -39.5 -118.5t-105.5 -51.5h-576q-66 0 -105.5 51.5t-39.5 118.5q0 48 4.5 93.5
t18.5 98.5t36.5 91.5t63 64.5t93.5 26h5q7 -4 32 -19.5t35.5 -21t33 -17t37 -16t35 -9t39.5 -4.5t39.5 4.5t35 9t37 16t33 17t35.5 21t32 19.5zM1664 928q0 -13 -9.5 -22.5t-22.5 -9.5h-96v-128h96q13 0 22.5 -9.5t9.5 -22.5v-192q0 -13 -9.5 -22.5t-22.5 -9.5h-96v-128h96
q13 0 22.5 -9.5t9.5 -22.5v-192q0 -13 -9.5 -22.5t-22.5 -9.5h-96v-224q0 -66 -47 -113t-113 -47h-1216q-66 0 -113 47t-47 113v1472q0 66 47 113t113 47h1216q66 0 113 -47t47 -113v-224h96q13 0 22.5 -9.5t9.5 -22.5v-192zM1408 -96v1472q0 13 -9.5 22.5t-22.5 9.5h-1216
q-13 0 -22.5 -9.5t-9.5 -22.5v-1472q0 -13 9.5 -22.5t22.5 -9.5h1216q13 0 22.5 9.5t9.5 22.5z" />
    <glyph glyph-name="uniF2BB" unicode="&#xf2bb;" horiz-adv-x="2048" 
d="M1024 405q0 64 -9 117.5t-29.5 103t-60.5 78t-97 28.5q-6 -4 -30 -18t-37.5 -21.5t-35.5 -17.5t-43 -14.5t-42 -4.5t-42 4.5t-43 14.5t-35.5 17.5t-37.5 21.5t-30 18q-57 0 -97 -28.5t-60.5 -78t-29.5 -103t-9 -117.5t37 -106.5t91 -42.5h512q54 0 91 42.5t37 106.5z
M867 925q0 94 -66.5 160.5t-160.5 66.5t-160.5 -66.5t-66.5 -160.5t66.5 -160.5t160.5 -66.5t160.5 66.5t66.5 160.5zM1792 416v64q0 14 -9 23t-23 9h-576q-14 0 -23 -9t-9 -23v-64q0 -14 9 -23t23 -9h576q14 0 23 9t9 23zM1792 676v56q0 15 -10.5 25.5t-25.5 10.5h-568
q-15 0 -25.5 -10.5t-10.5 -25.5v-56q0 -15 10.5 -25.5t25.5 -10.5h568q15 0 25.5 10.5t10.5 25.5zM1792 928v64q0 14 -9 23t-23 9h-576q-14 0 -23 -9t-9 -23v-64q0 -14 9 -23t23 -9h576q14 0 23 9t9 23zM2048 1248v-1216q0 -66 -47 -113t-113 -47h-352v96q0 14 -9 23t-23 9
h-64q-14 0 -23 -9t-9 -23v-96h-768v96q0 14 -9 23t-23 9h-64q-14 0 -23 -9t-9 -23v-96h-352q-66 0 -113 47t-47 113v1216q0 66 47 113t113 47h1728q66 0 113 -47t47 -113z" />
    <glyph glyph-name="uniF2BC" unicode="&#xf2bc;" horiz-adv-x="2048" 
d="M1024 405q0 -64 -37 -106.5t-91 -42.5h-512q-54 0 -91 42.5t-37 106.5t9 117.5t29.5 103t60.5 78t97 28.5q6 -4 30 -18t37.5 -21.5t35.5 -17.5t43 -14.5t42 -4.5t42 4.5t43 14.5t35.5 17.5t37.5 21.5t30 18q57 0 97 -28.5t60.5 -78t29.5 -103t9 -117.5zM867 925
q0 -94 -66.5 -160.5t-160.5 -66.5t-160.5 66.5t-66.5 160.5t66.5 160.5t160.5 66.5t160.5 -66.5t66.5 -160.5zM1792 480v-64q0 -14 -9 -23t-23 -9h-576q-14 0 -23 9t-9 23v64q0 14 9 23t23 9h576q14 0 23 -9t9 -23zM1792 732v-56q0 -15 -10.5 -25.5t-25.5 -10.5h-568
q-15 0 -25.5 10.5t-10.5 25.5v56q0 15 10.5 25.5t25.5 10.5h568q15 0 25.5 -10.5t10.5 -25.5zM1792 992v-64q0 -14 -9 -23t-23 -9h-576q-14 0 -23 9t-9 23v64q0 14 9 23t23 9h576q14 0 23 -9t9 -23zM1920 32v1216q0 13 -9.5 22.5t-22.5 9.5h-1728q-13 0 -22.5 -9.5
t-9.5 -22.5v-1216q0 -13 9.5 -22.5t22.5 -9.5h352v96q0 14 9 23t23 9h64q14 0 23 -9t9 -23v-96h768v96q0 14 9 23t23 9h64q14 0 23 -9t9 -23v-96h352q13 0 22.5 9.5t9.5 22.5zM2048 1248v-1216q0 -66 -47 -113t-113 -47h-1728q-66 0 -113 47t-47 113v1216q0 66 47 113
t113 47h1728q66 0 113 -47t47 -113z" />
    <glyph glyph-name="uniF2BD" unicode="&#xf2bd;" horiz-adv-x="1792" 
d="M1523 197q-22 155 -87.5 257.5t-184.5 118.5q-67 -74 -159.5 -115.5t-195.5 -41.5t-195.5 41.5t-159.5 115.5q-119 -16 -184.5 -118.5t-87.5 -257.5q106 -150 271 -237.5t356 -87.5t356 87.5t271 237.5zM1280 896q0 159 -112.5 271.5t-271.5 112.5t-271.5 -112.5
t-112.5 -271.5t112.5 -271.5t271.5 -112.5t271.5 112.5t112.5 271.5zM1792 640q0 -182 -71 -347.5t-190.5 -286t-285.5 -191.5t-349 -71q-182 0 -348 71t-286 191t-191 286t-71 348t71 348t191 286t286 191t348 71t348 -71t286 -191t191 -286t71 -348z" />
    <glyph glyph-name="uniF2BE" unicode="&#xf2be;" horiz-adv-x="1792" 
d="M896 1536q182 0 348 -71t286 -191t191 -286t71 -348q0 -181 -70.5 -347t-190.5 -286t-286 -191.5t-349 -71.5t-349 71t-285.5 191.5t-190.5 286t-71 347.5t71 348t191 286t286 191t348 71zM1515 185q149 205 149 455q0 156 -61 298t-164 245t-245 164t-298 61t-298 -61
t-245 -164t-164 -245t-61 -298q0 -250 149 -455q66 327 306 327q131 -128 313 -128t313 128q240 0 306 -327zM1280 832q0 159 -112.5 271.5t-271.5 112.5t-271.5 -112.5t-112.5 -271.5t112.5 -271.5t271.5 -112.5t271.5 112.5t112.5 271.5z" />
    <glyph glyph-name="uniF2C0" unicode="&#xf2c0;" 
d="M1201 752q47 -14 89.5 -38t89 -73t79.5 -115.5t55 -172t22 -236.5q0 -154 -100 -263.5t-241 -109.5h-854q-141 0 -241 109.5t-100 263.5q0 131 22 236.5t55 172t79.5 115.5t89 73t89.5 38q-79 125 -79 272q0 104 40.5 198.5t109.5 163.5t163.5 109.5t198.5 40.5
t198.5 -40.5t163.5 -109.5t109.5 -163.5t40.5 -198.5q0 -147 -79 -272zM768 1408q-159 0 -271.5 -112.5t-112.5 -271.5t112.5 -271.5t271.5 -112.5t271.5 112.5t112.5 271.5t-112.5 271.5t-271.5 112.5zM1195 -128q88 0 150.5 71.5t62.5 173.5q0 239 -78.5 377t-225.5 145
q-145 -127 -336 -127t-336 127q-147 -7 -225.5 -145t-78.5 -377q0 -102 62.5 -173.5t150.5 -71.5h854z" />
    <glyph glyph-name="uniF2C1" unicode="&#xf2c1;" horiz-adv-x="1280" 
d="M1024 278q0 -64 -37 -107t-91 -43h-512q-54 0 -91 43t-37 107t9 118t29.5 104t61 78.5t96.5 28.5q80 -75 188 -75t188 75q56 0 96.5 -28.5t61 -78.5t29.5 -104t9 -118zM870 797q0 -94 -67.5 -160.5t-162.5 -66.5t-162.5 66.5t-67.5 160.5t67.5 160.5t162.5 66.5
t162.5 -66.5t67.5 -160.5zM1152 -96v1376h-1024v-1376q0 -13 9.5 -22.5t22.5 -9.5h960q13 0 22.5 9.5t9.5 22.5zM1280 1376v-1472q0 -66 -47 -113t-113 -47h-960q-66 0 -113 47t-47 113v1472q0 66 47 113t113 47h352v-96q0 -14 9 -23t23 -9h192q14 0 23 9t9 23v96h352
q66 0 113 -47t47 -113z" />
    <glyph glyph-name="uniF2C2" unicode="&#xf2c2;" horiz-adv-x="2048" 
d="M896 324q0 54 -7.5 100.5t-24.5 90t-51 68.5t-81 25q-64 -64 -156 -64t-156 64q-47 0 -81 -25t-51 -68.5t-24.5 -90t-7.5 -100.5q0 -55 31.5 -93.5t75.5 -38.5h426q44 0 75.5 38.5t31.5 93.5zM768 768q0 80 -56 136t-136 56t-136 -56t-56 -136t56 -136t136 -56t136 56
t56 136zM1792 288v64q0 14 -9 23t-23 9h-704q-14 0 -23 -9t-9 -23v-64q0 -14 9 -23t23 -9h704q14 0 23 9t9 23zM1408 544v64q0 14 -9 23t-23 9h-320q-14 0 -23 -9t-9 -23v-64q0 -14 9 -23t23 -9h320q14 0 23 9t9 23zM1792 544v64q0 14 -9 23t-23 9h-192q-14 0 -23 -9t-9 -23
v-64q0 -14 9 -23t23 -9h192q14 0 23 9t9 23zM1792 800v64q0 14 -9 23t-23 9h-704q-14 0 -23 -9t-9 -23v-64q0 -14 9 -23t23 -9h704q14 0 23 9t9 23zM128 1152h1792v96q0 14 -9 23t-23 9h-1728q-14 0 -23 -9t-9 -23v-96zM2048 1248v-1216q0 -66 -47 -113t-113 -47h-1728
q-66 0 -113 47t-47 113v1216q0 66 47 113t113 47h1728q66 0 113 -47t47 -113z" />
    <glyph glyph-name="uniF2C3" unicode="&#xf2c3;" horiz-adv-x="2048" 
d="M896 324q0 -55 -31.5 -93.5t-75.5 -38.5h-426q-44 0 -75.5 38.5t-31.5 93.5q0 54 7.5 100.5t24.5 90t51 68.5t81 25q64 -64 156 -64t156 64q47 0 81 -25t51 -68.5t24.5 -90t7.5 -100.5zM768 768q0 -80 -56 -136t-136 -56t-136 56t-56 136t56 136t136 56t136 -56t56 -136z
M1792 352v-64q0 -14 -9 -23t-23 -9h-704q-14 0 -23 9t-9 23v64q0 14 9 23t23 9h704q14 0 23 -9t9 -23zM1408 608v-64q0 -14 -9 -23t-23 -9h-320q-14 0 -23 9t-9 23v64q0 14 9 23t23 9h320q14 0 23 -9t9 -23zM1792 608v-64q0 -14 -9 -23t-23 -9h-192q-14 0 -23 9t-9 23v64
q0 14 9 23t23 9h192q14 0 23 -9t9 -23zM1792 864v-64q0 -14 -9 -23t-23 -9h-704q-14 0 -23 9t-9 23v64q0 14 9 23t23 9h704q14 0 23 -9t9 -23zM1920 32v1120h-1792v-1120q0 -13 9.5 -22.5t22.5 -9.5h1728q13 0 22.5 9.5t9.5 22.5zM2048 1248v-1216q0 -66 -47 -113t-113 -47
h-1728q-66 0 -113 47t-47 113v1216q0 66 47 113t113 47h1728q66 0 113 -47t47 -113z" />
    <glyph glyph-name="uniF2C4" unicode="&#xf2c4;" horiz-adv-x="1792" 
d="M1255 749q0 318 -105 474.5t-330 156.5q-222 0 -326 -157t-104 -474q0 -316 104 -471.5t326 -155.5q74 0 131 17q-22 43 -39 73t-44 65t-53.5 56.5t-63 36t-77.5 14.5q-46 0 -79 -16l-49 97q105 91 276 91q132 0 215.5 -54t150.5 -155q67 149 67 402zM1645 117h117
q3 -27 -2 -67t-26.5 -95t-58 -100.5t-107 -78t-162.5 -32.5q-71 0 -130.5 19t-105.5 56t-79 78t-66 96q-97 -27 -205 -27q-150 0 -292.5 58t-253 158.5t-178 249t-67.5 317.5q0 170 67.5 319.5t178.5 250.5t253.5 159t291.5 58q121 0 238.5 -36t217 -106t176 -164.5
t119.5 -219t43 -261.5q0 -190 -80.5 -347.5t-218.5 -264.5q47 -70 93.5 -106.5t104.5 -36.5q61 0 94 37.5t38 85.5z" />
    <glyph glyph-name="uniF2C5" unicode="&#xf2c5;" horiz-adv-x="2304" 
d="M453 -101q0 -21 -16 -37.5t-37 -16.5q-1 0 -13 3q-63 15 -162 140q-225 284 -225 676q0 341 213 614q39 51 95 103.5t94 52.5q19 0 35 -13.5t16 -32.5q0 -27 -63 -90q-98 -102 -147 -184q-119 -199 -119 -449q0 -281 123 -491q50 -85 136 -173q2 -3 14.5 -16t19.5 -21
t17 -20.5t14.5 -23.5t4.5 -21zM1796 33q0 -29 -17.5 -48.5t-46.5 -19.5h-1081q-26 0 -45 19t-19 45q0 29 17.5 48.5t46.5 19.5h1081q26 0 45 -19t19 -45zM1581 644q0 -134 -67 -233q-25 -38 -69.5 -78.5t-83.5 -60.5q-16 -10 -27 -10q-7 0 -15 6t-8 12q0 9 19 30t42 46
t42 67.5t19 88.5q0 76 -35 130q-29 42 -46 42q-3 0 -3 -5q0 -12 7.5 -35.5t7.5 -36.5q0 -22 -21.5 -35t-44.5 -13q-66 0 -66 76q0 15 1.5 44t1.5 44q0 25 -10 46q-13 25 -42 53.5t-51 28.5q-5 0 -7 -0.5t-3.5 -2.5t-1.5 -6q0 -2 16 -26t16 -54q0 -37 -19 -68t-46 -54
t-53.5 -46t-45.5 -54t-19 -68q0 -98 42 -160q29 -43 79 -63q16 -5 17 -10q1 -2 1 -5q0 -16 -18 -16q-6 0 -33 11q-119 43 -195 139.5t-76 218.5q0 55 24.5 115.5t60 115t70.5 108.5t59.5 113.5t24.5 111.5q0 53 -25 94q-29 48 -56 64q-19 9 -19 21q0 20 41 20q50 0 110 -29
q41 -19 71 -44.5t49.5 -51t33.5 -62.5t22 -69t16 -80q0 -1 3 -17.5t4.5 -25t5.5 -25t9 -27t11 -21.5t14.5 -16.5t18.5 -5.5q23 0 37 14t14 37q0 25 -20 67t-20 52t10 10q27 0 93 -70q72 -76 102.5 -156t30.5 -186zM2304 615q0 -274 -138 -503q-19 -32 -48 -72t-68 -86.5
t-81 -77t-74 -30.5q-16 0 -31 15.5t-15 31.5q0 15 29 50.5t68.5 77t48.5 52.5q183 230 183 531q0 131 -20.5 235t-72.5 211q-58 119 -163 228q-2 3 -13 13.5t-16.5 16.5t-15 17.5t-15 20t-9.5 18.5t-4 19q0 19 16 35.5t35 16.5q70 0 196 -169q98 -131 146 -273t60 -314
q2 -42 2 -64z" />
    <glyph glyph-name="uniF2C6" unicode="&#xf2c6;" horiz-adv-x="1792" 
d="M1189 229l147 693q9 44 -10.5 63t-51.5 7l-864 -333q-29 -11 -39.5 -25t-2.5 -26.5t32 -19.5l221 -69l513 323q21 14 32 6q7 -5 -4 -15l-415 -375v0v0l-16 -228q23 0 45 22l108 104l224 -165q64 -36 81 38zM1792 640q0 -182 -71 -348t-191 -286t-286 -191t-348 -71
t-348 71t-286 191t-191 286t-71 348t71 348t191 286t286 191t348 71t348 -71t286 -191t191 -286t71 -348z" />
    <glyph glyph-name="uniF2C7" unicode="&#xf2c7;" horiz-adv-x="1024" 
d="M640 192q0 -80 -56 -136t-136 -56t-136 56t-56 136q0 60 35 110t93 71v907h128v-907q58 -21 93 -71t35 -110zM768 192q0 77 -34 144t-94 112v768q0 80 -56 136t-136 56t-136 -56t-56 -136v-768q-60 -45 -94 -112t-34 -144q0 -133 93.5 -226.5t226.5 -93.5t226.5 93.5
t93.5 226.5zM896 192q0 -185 -131.5 -316.5t-316.5 -131.5t-316.5 131.5t-131.5 316.5q0 182 128 313v711q0 133 93.5 226.5t226.5 93.5t226.5 -93.5t93.5 -226.5v-711q128 -131 128 -313zM1024 768v-128h-192v128h192zM1024 1024v-128h-192v128h192zM1024 1280v-128h-192
v128h192z" />
    <glyph glyph-name="uniF2C8" unicode="&#xf2c8;" horiz-adv-x="1024" 
d="M640 192q0 -80 -56 -136t-136 -56t-136 56t-56 136q0 60 35 110t93 71v651h128v-651q58 -21 93 -71t35 -110zM768 192q0 77 -34 144t-94 112v768q0 80 -56 136t-136 56t-136 -56t-56 -136v-768q-60 -45 -94 -112t-34 -144q0 -133 93.5 -226.5t226.5 -93.5t226.5 93.5
t93.5 226.5zM896 192q0 -185 -131.5 -316.5t-316.5 -131.5t-316.5 131.5t-131.5 316.5q0 182 128 313v711q0 133 93.5 226.5t226.5 93.5t226.5 -93.5t93.5 -226.5v-711q128 -131 128 -313zM1024 768v-128h-192v128h192zM1024 1024v-128h-192v128h192zM1024 1280v-128h-192
v128h192z" />
    <glyph glyph-name="uniF2C9" unicode="&#xf2c9;" horiz-adv-x="1024" 
d="M640 192q0 -80 -56 -136t-136 -56t-136 56t-56 136q0 60 35 110t93 71v395h128v-395q58 -21 93 -71t35 -110zM768 192q0 77 -34 144t-94 112v768q0 80 -56 136t-136 56t-136 -56t-56 -136v-768q-60 -45 -94 -112t-34 -144q0 -133 93.5 -226.5t226.5 -93.5t226.5 93.5
t93.5 226.5zM896 192q0 -185 -131.5 -316.5t-316.5 -131.5t-316.5 131.5t-131.5 316.5q0 182 128 313v711q0 133 93.5 226.5t226.5 93.5t226.5 -93.5t93.5 -226.5v-711q128 -131 128 -313zM1024 768v-128h-192v128h192zM1024 1024v-128h-192v128h192zM1024 1280v-128h-192
v128h192z" />
    <glyph glyph-name="uniF2CA" unicode="&#xf2ca;" horiz-adv-x="1024" 
d="M640 192q0 -80 -56 -136t-136 -56t-136 56t-56 136q0 60 35 110t93 71v139h128v-139q58 -21 93 -71t35 -110zM768 192q0 77 -34 144t-94 112v768q0 80 -56 136t-136 56t-136 -56t-56 -136v-768q-60 -45 -94 -112t-34 -144q0 -133 93.5 -226.5t226.5 -93.5t226.5 93.5
t93.5 226.5zM896 192q0 -185 -131.5 -316.5t-316.5 -131.5t-316.5 131.5t-131.5 316.5q0 182 128 313v711q0 133 93.5 226.5t226.5 93.5t226.5 -93.5t93.5 -226.5v-711q128 -131 128 -313zM1024 768v-128h-192v128h192zM1024 1024v-128h-192v128h192zM1024 1280v-128h-192
v128h192z" />
    <glyph glyph-name="uniF2CB" unicode="&#xf2cb;" horiz-adv-x="1024" 
d="M640 192q0 -80 -56 -136t-136 -56t-136 56t-56 136q0 79 56 135.5t136 56.5t136 -56.5t56 -135.5zM768 192q0 77 -34 144t-94 112v768q0 80 -56 136t-136 56t-136 -56t-56 -136v-768q-60 -45 -94 -112t-34 -144q0 -133 93.5 -226.5t226.5 -93.5t226.5 93.5t93.5 226.5z
M896 192q0 -185 -131.5 -316.5t-316.5 -131.5t-316.5 131.5t-131.5 316.5q0 182 128 313v711q0 133 93.5 226.5t226.5 93.5t226.5 -93.5t93.5 -226.5v-711q128 -131 128 -313zM1024 768v-128h-192v128h192zM1024 1024v-128h-192v128h192zM1024 1280v-128h-192v128h192z" />
    <glyph glyph-name="uniF2CC" unicode="&#xf2cc;" horiz-adv-x="1920" 
d="M1433 1287q10 -10 10 -23t-10 -23l-626 -626q-10 -10 -23 -10t-23 10l-82 82q-10 10 -10 23t10 23l44 44q-72 91 -81.5 207t46.5 215q-74 71 -176 71q-106 0 -181 -75t-75 -181v-1280h-256v1280q0 104 40.5 198.5t109.5 163.5t163.5 109.5t198.5 40.5q106 0 201 -41
t166 -115q94 39 197 24.5t185 -79.5l44 44q10 10 23 10t23 -10zM1344 1024q26 0 45 -19t19 -45t-19 -45t-45 -19t-45 19t-19 45t19 45t45 19zM1600 896q-26 0 -45 19t-19 45t19 45t45 19t45 -19t19 -45t-19 -45t-45 -19zM1856 1024q26 0 45 -19t19 -45t-19 -45t-45 -19
t-45 19t-19 45t19 45t45 19zM1216 896q26 0 45 -19t19 -45t-19 -45t-45 -19t-45 19t-19 45t19 45t45 19zM1408 832q0 26 19 45t45 19t45 -19t19 -45t-19 -45t-45 -19t-45 19t-19 45zM1728 896q26 0 45 -19t19 -45t-19 -45t-45 -19t-45 19t-19 45t19 45t45 19zM1088 768
q26 0 45 -19t19 -45t-19 -45t-45 -19t-45 19t-19 45t19 45t45 19zM1344 640q-26 0 -45 19t-19 45t19 45t45 19t45 -19t19 -45t-19 -45t-45 -19zM1600 768q26 0 45 -19t19 -45t-19 -45t-45 -19t-45 19t-19 45t19 45t45 19zM1216 512q-26 0 -45 19t-19 45t19 45t45 19t45 -19
t19 -45t-19 -45t-45 -19zM1472 640q26 0 45 -19t19 -45t-19 -45t-45 -19t-45 19t-19 45t19 45t45 19zM1088 512q26 0 45 -19t19 -45t-19 -45t-45 -19t-45 19t-19 45t19 45t45 19zM1344 512q26 0 45 -19t19 -45t-19 -45t-45 -19t-45 19t-19 45t19 45t45 19zM1216 384
q26 0 45 -19t19 -45t-19 -45t-45 -19t-45 19t-19 45t19 45t45 19zM1088 256q26 0 45 -19t19 -45t-19 -45t-45 -19t-45 19t-19 45t19 45t45 19z" />
    <glyph glyph-name="uniF2CD" unicode="&#xf2cd;" horiz-adv-x="1792" 
d="M1664 448v-192q0 -169 -128 -286v-194q0 -14 -9 -23t-23 -9h-64q-14 0 -23 9t-9 23v118q-63 -22 -128 -22h-768q-65 0 -128 22v-110q0 -17 -9.5 -28.5t-22.5 -11.5h-64q-13 0 -22.5 11.5t-9.5 28.5v186q-128 117 -128 286v192h1536zM704 864q0 -14 -9 -23t-23 -9t-23 9
t-9 23t9 23t23 9t23 -9t9 -23zM768 928q0 -14 -9 -23t-23 -9t-23 9t-9 23t9 23t23 9t23 -9t9 -23zM704 992q0 -14 -9 -23t-23 -9t-23 9t-9 23t9 23t23 9t23 -9t9 -23zM832 992q0 -14 -9 -23t-23 -9t-23 9t-9 23t9 23t23 9t23 -9t9 -23zM768 1056q0 -14 -9 -23t-23 -9t-23 9
t-9 23t9 23t23 9t23 -9t9 -23zM704 1120q0 -14 -9 -23t-23 -9t-23 9t-9 23t9 23t23 9t23 -9t9 -23zM1792 608v-64q0 -14 -9 -23t-23 -9h-1728q-14 0 -23 9t-9 23v64q0 14 9 23t23 9h96v640q0 106 75 181t181 75q108 0 184 -78q46 19 98 12t93 -39l22 22q11 11 22 0l42 -42
q11 -11 0 -22l-314 -314q-11 -11 -22 0l-42 42q-11 11 0 22l22 22q-36 46 -40.5 104t23.5 108q-37 35 -88 35q-53 0 -90.5 -37.5t-37.5 -90.5v-640h1504q14 0 23 -9t9 -23zM896 1056q0 -14 -9 -23t-23 -9t-23 9t-9 23t9 23t23 9t23 -9t9 -23zM832 1120q0 -14 -9 -23t-23 -9
t-23 9t-9 23t9 23t23 9t23 -9t9 -23zM768 1184q0 -14 -9 -23t-23 -9t-23 9t-9 23t9 23t23 9t23 -9t9 -23zM960 1120q0 -14 -9 -23t-23 -9t-23 9t-9 23t9 23t23 9t23 -9t9 -23zM896 1184q0 -14 -9 -23t-23 -9t-23 9t-9 23t9 23t23 9t23 -9t9 -23zM832 1248q0 -14 -9 -23
t-23 -9t-23 9t-9 23t9 23t23 9t23 -9t9 -23zM1024 1184q0 -14 -9 -23t-23 -9t-23 9t-9 23t9 23t23 9t23 -9t9 -23zM960 1248q0 -14 -9 -23t-23 -9t-23 9t-9 23t9 23t23 9t23 -9t9 -23zM1088 1248q0 -14 -9 -23t-23 -9t-23 9t-9 23t9 23t23 9t23 -9t9 -23z" />
    <glyph glyph-name="uniF2CE" unicode="&#xf2ce;" 
d="M994 344q0 -86 -17 -197q-31 -215 -55 -313q-22 -90 -152 -90t-152 90q-24 98 -55 313q-17 110 -17 197q0 168 224 168t224 -168zM1536 768q0 -240 -134 -434t-350 -280q-8 -3 -15 3t-6 15q7 48 10 66q4 32 6 47q1 9 9 12q159 81 255.5 234t96.5 337q0 180 -91 330.5
t-247 234.5t-337 74q-124 -7 -237 -61t-193.5 -140.5t-128 -202t-46.5 -240.5q1 -184 99 -336.5t257 -231.5q7 -3 9 -12q3 -21 6 -45q1 -9 5 -32.5t6 -35.5q1 -9 -6.5 -15t-15.5 -2q-148 58 -261 169.5t-173.5 264t-52.5 319.5q7 143 66 273.5t154.5 227t225 157.5t272.5 70
q164 10 315.5 -46.5t261 -160.5t175 -250.5t65.5 -308.5zM994 800q0 -93 -65.5 -158.5t-158.5 -65.5t-158.5 65.5t-65.5 158.5t65.5 158.5t158.5 65.5t158.5 -65.5t65.5 -158.5zM1282 768q0 -122 -53.5 -228.5t-146.5 -177.5q-8 -6 -16 -2t-10 14q-6 52 -29 92q-7 10 3 20
q58 54 91 127t33 155q0 111 -58.5 204t-157.5 141.5t-212 36.5q-133 -15 -229 -113t-109 -231q-10 -92 23.5 -176t98.5 -144q10 -10 3 -20q-24 -41 -29 -93q-2 -9 -10 -13t-16 2q-95 74 -148.5 183t-51.5 234q3 131 69 244t177 181.5t241 74.5q144 7 268 -60t196.5 -187.5
t72.5 -263.5z" />
    <glyph glyph-name="uniF2D0" unicode="&#xf2d0;" horiz-adv-x="1792" 
d="M256 128h1280v768h-1280v-768zM1792 1248v-1216q0 -66 -47 -113t-113 -47h-1472q-66 0 -113 47t-47 113v1216q0 66 47 113t113 47h1472q66 0 113 -47t47 -113z" />
    <glyph glyph-name="uniF2D1" unicode="&#xf2d1;" horiz-adv-x="1792" 
d="M1792 224v-192q0 -66 -47 -113t-113 -47h-1472q-66 0 -113 47t-47 113v192q0 66 47 113t113 47h1472q66 0 113 -47t47 -113z" />
    <glyph glyph-name="uniF2D2" unicode="&#xf2d2;" horiz-adv-x="2048" 
d="M256 0h768v512h-768v-512zM1280 512h512v768h-768v-256h96q66 0 113 -47t47 -113v-352zM2048 1376v-960q0 -66 -47 -113t-113 -47h-608v-352q0 -66 -47 -113t-113 -47h-960q-66 0 -113 47t-47 113v960q0 66 47 113t113 47h608v352q0 66 47 113t113 47h960q66 0 113 -47
t47 -113z" />
    <glyph glyph-name="uniF2D3" unicode="&#xf2d3;" horiz-adv-x="1792" 
d="M1175 215l146 146q10 10 10 23t-10 23l-233 233l233 233q10 10 10 23t-10 23l-146 146q-10 10 -23 10t-23 -10l-233 -233l-233 233q-10 10 -23 10t-23 -10l-146 -146q-10 -10 -10 -23t10 -23l233 -233l-233 -233q-10 -10 -10 -23t10 -23l146 -146q10 -10 23 -10t23 10
l233 233l233 -233q10 -10 23 -10t23 10zM1792 1248v-1216q0 -66 -47 -113t-113 -47h-1472q-66 0 -113 47t-47 113v1216q0 66 47 113t113 47h1472q66 0 113 -47t47 -113z" />
    <glyph glyph-name="uniF2D4" unicode="&#xf2d4;" horiz-adv-x="1792" 
d="M1257 425l-146 -146q-10 -10 -23 -10t-23 10l-169 169l-169 -169q-10 -10 -23 -10t-23 10l-146 146q-10 10 -10 23t10 23l169 169l-169 169q-10 10 -10 23t10 23l146 146q10 10 23 10t23 -10l169 -169l169 169q10 10 23 10t23 -10l146 -146q10 -10 10 -23t-10 -23
l-169 -169l169 -169q10 -10 10 -23t-10 -23zM256 128h1280v1024h-1280v-1024zM1792 1248v-1216q0 -66 -47 -113t-113 -47h-1472q-66 0 -113 47t-47 113v1216q0 66 47 113t113 47h1472q66 0 113 -47t47 -113z" />
    <glyph glyph-name="uniF2D5" unicode="&#xf2d5;" horiz-adv-x="1792" 
d="M1070 358l306 564h-654l-306 -564h654zM1792 640q0 -182 -71 -348t-191 -286t-286 -191t-348 -71t-348 71t-286 191t-191 286t-71 348t71 348t191 286t286 191t348 71t348 -71t286 -191t191 -286t71 -348z" />
    <glyph glyph-name="uniF2D6" unicode="&#xf2d6;" horiz-adv-x="1794" 
d="M1291 1060q-15 17 -35 8.5t-26 -28.5t5 -38q14 -17 40 -14.5t34 20.5t-18 52zM895 814q-8 -8 -19.5 -8t-18.5 8q-8 8 -8 19t8 18q7 8 18.5 8t19.5 -8q7 -7 7 -18t-7 -19zM1060 740l-35 -35q-12 -13 -29.5 -13t-30.5 13l-38 38q-12 13 -12 30t12 30l35 35q12 12 29.5 12
t30.5 -12l38 -39q12 -12 12 -29.5t-12 -29.5zM951 870q-7 -8 -18.5 -8t-19.5 8q-7 8 -7 19t7 19q8 8 19 8t19 -8t8 -19t-8 -19zM1354 968q-34 -64 -107.5 -85.5t-127.5 16.5q-38 28 -61 66.5t-21 87.5t39 92t75.5 53t70.5 -5t70 -51q2 -2 13 -12.5t14.5 -13.5t13 -13.5
t12.5 -15.5t10 -15.5t8.5 -18t4 -18.5t1 -21t-5 -22t-9.5 -24zM1555 486q3 20 -8.5 34.5t-27.5 21.5t-33 17t-23 20q-40 71 -84 98.5t-113 11.5q19 13 40 18.5t33 4.5l12 -1q2 45 -34 90q6 20 6.5 40.5t-2.5 30.5l-3 10q43 24 71 65t34 91q10 84 -43 150.5t-137 76.5
q-60 7 -114 -18.5t-82 -74.5q-30 -51 -33.5 -101t14.5 -87t43.5 -64t56.5 -42q-45 4 -88 36t-57 88q-28 108 32 222q-16 21 -29 32q-50 0 -89 -19q19 24 42 37t36 14l13 1q0 50 -13 78q-10 21 -32.5 28.5t-47 -3.5t-37.5 -40q2 4 4 7q-7 -28 -6.5 -75.5t19 -117t48.5 -122.5
q-25 -14 -47 -36q-35 -16 -85.5 -70.5t-84.5 -101.5l-33 -46q-90 -34 -181 -125.5t-75 -162.5q1 -16 11 -27q-15 -12 -30 -30q-21 -25 -21 -54t21.5 -40t63.5 6q41 19 77 49.5t55 60.5q-2 2 -6.5 5t-20.5 7.5t-33 3.5q23 5 51 12.5t40 10t27.5 6t26 4t23.5 0.5q14 -7 22 34
q7 37 7 90q0 102 -40 150q106 -103 101 -219q-1 -29 -15 -50t-27 -27l-13 -6q-4 -7 -19 -32t-26 -45.5t-26.5 -52t-25 -61t-17 -63t-6.5 -66.5t10 -63q-35 54 -37 80q-22 -24 -34.5 -39t-33.5 -42t-30.5 -46t-16.5 -41t-0.5 -38t25.5 -27q45 -25 144 64t190.5 221.5
t122.5 228.5q86 52 145 115.5t86 119.5q47 -93 154 -178q104 -83 167 -80q39 2 46 43zM1794 640q0 -182 -71 -348t-191 -286t-286.5 -191t-348.5 -71t-348.5 71t-286.5 191t-191 286t-71 348t71 348t191 286t286.5 191t348.5 71t348.5 -71t286.5 -191t191 -286t71 -348z" />
    <glyph glyph-name="uniF2D7" unicode="&#xf2d7;" 
d="M518 1353v-655q103 -1 191.5 1.5t125.5 5.5l37 3q68 2 90.5 24.5t39.5 94.5l33 142h103l-14 -322l7 -319h-103l-29 127q-15 68 -45 93t-84 26q-87 8 -352 8v-556q0 -78 43.5 -115.5t133.5 -37.5h357q35 0 59.5 2t55 7.5t54 18t48.5 32t46 50.5t39 73l93 216h89
q-6 -37 -31.5 -252t-30.5 -276q-146 5 -263.5 8t-162.5 4h-44h-628l-376 -12v102l127 25q67 13 91.5 37t25.5 79l8 643q3 402 -8 645q-2 61 -25.5 84t-91.5 36l-127 24v102l376 -12h702q139 0 374 27q-6 -68 -14 -194.5t-12 -219.5l-5 -92h-93l-32 124q-31 121 -74 179.5
t-113 58.5h-548q-28 0 -35.5 -8.5t-7.5 -30.5z" />
    <glyph glyph-name="uniF2D8" unicode="&#xf2d8;" 
d="M922 739v-182q0 -4 0.5 -15t0 -15l-1.5 -12t-3.5 -11.5t-6.5 -7.5t-11 -5.5t-16 -1.5v309q9 0 16 -1t11 -5t6.5 -5.5t3.5 -9.5t1 -10.5v-13.5v-14zM1238 643v-121q0 -1 0.5 -12.5t0 -15.5t-2.5 -11.5t-7.5 -10.5t-13.5 -3q-9 0 -14 9q-4 10 -4 165v7v8.5v9t1.5 8.5l3.5 7
t5 5.5t8 1.5q6 0 10 -1.5t6.5 -4.5t4 -6t2 -8.5t0.5 -8v-9.5v-9zM180 407h122v472h-122v-472zM614 407h106v472h-159l-28 -221q-20 148 -32 221h-158v-472h107v312l45 -312h76l43 319v-319zM1039 712q0 67 -5 90q-3 16 -11 28.5t-17 20.5t-25 14t-26.5 8.5t-31 4t-29 1.5
h-29.5h-12h-91v-472h56q169 -1 197 24.5t25 180.5q-1 62 -1 100zM1356 515v133q0 29 -2 45t-9.5 33.5t-24.5 25t-46 7.5q-46 0 -77 -34v154h-117v-472h110l7 30q30 -36 77 -36q50 0 66 30.5t16 83.5zM1536 1248v-1216q0 -66 -47 -113t-113 -47h-1216q-66 0 -113 47t-47 113
v1216q0 66 47 113t113 47h1216q66 0 113 -47t47 -113z" />
    <glyph glyph-name="uniF2D9" unicode="&#xf2d9;" horiz-adv-x="2176" 
d="M1143 -197q-6 1 -11 4q-13 8 -36 23t-86 65t-116.5 104.5t-112 140t-89.5 172.5q-17 3 -175 37q66 -213 235 -362t391 -184zM502 409l168 -28q-25 76 -41 167.5t-19 145.5l-4 53q-84 -82 -121 -224q5 -65 17 -114zM612 1018q-43 -64 -77 -148q44 46 74 68zM2049 584
q0 161 -62 307t-167.5 252t-250.5 168.5t-304 62.5q-147 0 -281 -52.5t-240 -148.5q-30 -58 -45 -160q60 51 143 83.5t158.5 43t143 13.5t108.5 -1l40 -3q33 -1 53 -15.5t24.5 -33t6.5 -37t-1 -28.5q-126 11 -227.5 0.5t-183 -43.5t-142.5 -71.5t-131 -98.5
q4 -36 11.5 -92.5t35.5 -178t62 -179.5q123 -6 247.5 14.5t214.5 53.5t162.5 67t109.5 59l37 24q22 16 39.5 20.5t30.5 -5t17 -34.5q14 -97 -39 -121q-208 -97 -467 -134q-135 -20 -317 -16q41 -96 110 -176.5t137 -127t130.5 -79t101.5 -43.5l39 -12q143 -23 263 15
q195 99 314 289t119 418zM2123 621q-14 -135 -40 -212q-70 -208 -181.5 -346.5t-318.5 -253.5q-48 -33 -82 -44q-72 -26 -163 -16q-36 -3 -73 -3q-283 0 -504.5 173t-295.5 442q-1 0 -4 0.5t-5 0.5q-6 -50 2.5 -112.5t26 -115t36 -98t31.5 -71.5l14 -26q8 -12 54 -82
q-71 38 -124.5 106.5t-78.5 140t-39.5 137t-17.5 107.5l-2 42q-5 2 -33.5 12.5t-48.5 18t-53 20.5t-57.5 25t-50 25.5t-42.5 27t-25 25.5q19 -10 50.5 -25.5t113 -45.5t145.5 -38l2 32q11 149 94 290q41 202 176 365q28 115 81 214q15 28 32 45t49 32q158 74 303.5 104
t302 11t306.5 -97q220 -115 333 -336t87 -474z" />
    <glyph glyph-name="uniF2DA" unicode="&#xf2da;" horiz-adv-x="1792" 
d="M1341 752q29 44 -6.5 129.5t-121.5 142.5q-58 39 -125.5 53.5t-118 4.5t-68.5 -37q-12 -23 -4.5 -28t42.5 -10q23 -3 38.5 -5t44.5 -9.5t56 -17.5q36 -13 67.5 -31.5t53 -37t40 -38.5t30.5 -38t22 -34.5t16.5 -28.5t12 -18.5t10.5 -6t11 9.5zM1704 178
q-52 -127 -148.5 -220t-214.5 -141.5t-253 -60.5t-266 13.5t-251 91t-210 161.5t-141.5 235.5t-46.5 303.5q1 41 8.5 84.5t12.5 64t24 80.5t23 73q-51 -208 1 -397t173 -318t291 -206t346 -83t349 74.5t289 244.5q20 27 18 14q0 -4 -4 -14zM1465 627q0 -104 -40.5 -199
t-108.5 -164t-162 -109.5t-198 -40.5t-198 40.5t-162 109.5t-108.5 164t-40.5 199t40.5 199t108.5 164t162 109.5t198 40.5t198 -40.5t162 -109.5t108.5 -164t40.5 -199zM1752 915q-65 147 -180.5 251t-253 153.5t-292 53.5t-301 -36.5t-275.5 -129t-220 -211.5t-131 -297
t-10 -373q-49 161 -51.5 311.5t35.5 272.5t109 227t165.5 180.5t207 126t232 71t242.5 9t236 -54t216 -124.5t178 -197q33 -50 62 -121t31 -112zM1690 573q12 244 -136.5 416t-396.5 240q-8 0 -10 5t24 8q125 -4 230 -50t173 -120t116 -168.5t58.5 -199t-1 -208
t-61.5 -197.5t-122.5 -167t-185 -117.5t-248.5 -46.5q108 30 201.5 80t174 123t129.5 176.5t55 225.5z" />
    <glyph glyph-name="uniF2DB" unicode="&#xf2db;" 
d="M192 256v-128h-112q-16 0 -16 16v16h-48q-16 0 -16 16v32q0 16 16 16h48v16q0 16 16 16h112zM192 512v-128h-112q-16 0 -16 16v16h-48q-16 0 -16 16v32q0 16 16 16h48v16q0 16 16 16h112zM192 768v-128h-112q-16 0 -16 16v16h-48q-16 0 -16 16v32q0 16 16 16h48v16
q0 16 16 16h112zM192 1024v-128h-112q-16 0 -16 16v16h-48q-16 0 -16 16v32q0 16 16 16h48v16q0 16 16 16h112zM192 1280v-128h-112q-16 0 -16 16v16h-48q-16 0 -16 16v32q0 16 16 16h48v16q0 16 16 16h112zM1280 1440v-1472q0 -40 -28 -68t-68 -28h-832q-40 0 -68 28
t-28 68v1472q0 40 28 68t68 28h832q40 0 68 -28t28 -68zM1536 208v-32q0 -16 -16 -16h-48v-16q0 -16 -16 -16h-112v128h112q16 0 16 -16v-16h48q16 0 16 -16zM1536 464v-32q0 -16 -16 -16h-48v-16q0 -16 -16 -16h-112v128h112q16 0 16 -16v-16h48q16 0 16 -16zM1536 720v-32
q0 -16 -16 -16h-48v-16q0 -16 -16 -16h-112v128h112q16 0 16 -16v-16h48q16 0 16 -16zM1536 976v-32q0 -16 -16 -16h-48v-16q0 -16 -16 -16h-112v128h112q16 0 16 -16v-16h48q16 0 16 -16zM1536 1232v-32q0 -16 -16 -16h-48v-16q0 -16 -16 -16h-112v128h112q16 0 16 -16v-16
h48q16 0 16 -16z" />
    <glyph glyph-name="uniF2DC" unicode="&#xf2dc;" horiz-adv-x="1664" 
d="M1566 419l-167 -33l186 -107q23 -13 29.5 -38.5t-6.5 -48.5q-14 -23 -39 -29.5t-48 6.5l-186 106l55 -160q13 -38 -12 -63.5t-60.5 -20.5t-48.5 42l-102 300l-271 156v-313l208 -238q16 -18 17 -39t-11 -36.5t-28.5 -25t-37 -5.5t-36.5 22l-112 128v-214q0 -26 -19 -45
t-45 -19t-45 19t-19 45v214l-112 -128q-16 -18 -36.5 -22t-37 5.5t-28.5 25t-11 36.5t17 39l208 238v313l-271 -156l-102 -300q-13 -37 -48.5 -42t-60.5 20.5t-12 63.5l55 160l-186 -106q-23 -13 -48 -6.5t-39 29.5q-13 23 -6.5 48.5t29.5 38.5l186 107l-167 33
q-29 6 -42 29t-8.5 46.5t25.5 40t50 10.5l310 -62l271 157l-271 157l-310 -62q-4 -1 -13 -1q-27 0 -44 18t-19 40t11 43t40 26l167 33l-186 107q-23 13 -29.5 38.5t6.5 48.5t39 30t48 -7l186 -106l-55 160q-13 38 12 63.5t60.5 20.5t48.5 -42l102 -300l271 -156v313
l-208 238q-16 18 -17 39t11 36.5t28.5 25t37 5.5t36.5 -22l112 -128v214q0 26 19 45t45 19t45 -19t19 -45v-214l112 128q16 18 36.5 22t37 -5.5t28.5 -25t11 -36.5t-17 -39l-208 -238v-313l271 156l102 300q13 37 48.5 42t60.5 -20.5t12 -63.5l-55 -160l186 106
q23 13 48 6.5t39 -29.5q13 -23 6.5 -48.5t-29.5 -38.5l-186 -107l167 -33q27 -5 40 -26t11 -43t-19 -40t-44 -18q-9 0 -13 1l-310 62l-271 -157l271 -157l310 62q29 6 50 -10.5t25.5 -40t-8.5 -46.5t-42 -29z" />
    <glyph glyph-name="uniF2DD" unicode="&#xf2dd;" horiz-adv-x="1792" 
d="M1473 607q7 118 -33 226.5t-113 189t-177 131t-221 57.5q-116 7 -225.5 -32t-192 -110.5t-135 -175t-59.5 -220.5q-7 -118 33 -226.5t113 -189t177.5 -131t221.5 -57.5q155 -9 293 59t224 195.5t94 283.5zM1792 1536l-349 -348q120 -117 180.5 -272t50.5 -321
q-11 -183 -102 -339t-241 -255.5t-332 -124.5l-999 -132l347 347q-120 116 -180.5 271.5t-50.5 321.5q11 184 102 340t241.5 255.5t332.5 124.5q167 22 500 66t500 66z" />
    <glyph glyph-name="uniF2DE" unicode="&#xf2de;" horiz-adv-x="1792" 
d="M948 508l163 -329h-51l-175 350l-171 -350h-49l179 374l-78 33l21 49l240 -102l-21 -50zM563 1100l304 -130l-130 -304l-304 130zM907 915l240 -103l-103 -239l-239 102zM1188 765l191 -81l-82 -190l-190 81zM1680 640q0 159 -62 304t-167.5 250.5t-250.5 167.5t-304 62
t-304 -62t-250.5 -167.5t-167.5 -250.5t-62 -304t62 -304t167.5 -250.5t250.5 -167.5t304 -62t304 62t250.5 167.5t167.5 250.5t62 304zM1792 640q0 -182 -71 -348t-191 -286t-286 -191t-348 -71t-348 71t-286 191t-191 286t-71 348t71 348t191 286t286 191t348 71t348 -71
t286 -191t191 -286t71 -348z" />
    <glyph glyph-name="uniF2E0" unicode="&#xf2e0;" horiz-adv-x="1920" 
d="M1334 302q-4 24 -27.5 34t-49.5 10.5t-48.5 12.5t-25.5 38q-5 47 33 139.5t75 181t32 127.5q-14 101 -117 103q-45 1 -75 -16l-3 -2l-5 -2.5t-4.5 -2t-5 -2t-5 -0.5t-6 1.5t-6 3.5t-6.5 5q-3 2 -9 8.5t-9 9t-8.5 7.5t-9.5 7.5t-9.5 5.5t-11 4.5t-11.5 2.5q-30 5 -48 -3
t-45 -31q-1 -1 -9 -8.5t-12.5 -11t-15 -10t-16.5 -5.5t-17 3q-54 27 -84 40q-41 18 -94 -5t-76 -65q-16 -28 -41 -98.5t-43.5 -132.5t-40 -134t-21.5 -73q-22 -69 18.5 -119t110.5 -46q30 2 50.5 15t38.5 46q7 13 79 199.5t77 194.5q6 11 21.5 18t29.5 0q27 -15 21 -53
q-2 -18 -51 -139.5t-50 -132.5q-6 -38 19.5 -56.5t60.5 -7t55 49.5q4 8 45.5 92t81.5 163.5t46 88.5q20 29 41 28q29 0 25 -38q-2 -16 -65.5 -147.5t-70.5 -159.5q-12 -53 13 -103t74 -74q17 -9 51 -15.5t71.5 -8t62.5 14t20 48.5zM383 86q3 -15 -5 -27.5t-23 -15.5
q-14 -3 -26.5 5t-15.5 23q-3 14 5 27t22 16t27 -5t16 -23zM953 -177q12 -17 8.5 -37.5t-20.5 -32.5t-37.5 -8t-32.5 21q-11 17 -7.5 37.5t20.5 32.5t37.5 8t31.5 -21zM177 635q-18 -27 -49.5 -33t-57.5 13q-26 18 -32 50t12 58q18 27 49.5 33t57.5 -12q26 -19 32 -50.5
t-12 -58.5zM1467 -42q19 -28 13 -61.5t-34 -52.5t-60.5 -13t-51.5 34t-13 61t33 53q28 19 60.5 13t52.5 -34zM1579 562q69 -113 42.5 -244.5t-134.5 -207.5q-90 -63 -199 -60q-20 -80 -84.5 -127t-143.5 -44.5t-140 57.5q-12 -9 -13 -10q-103 -71 -225 -48.5t-193 126.5
q-50 73 -53 164q-83 14 -142.5 70.5t-80.5 128t-2 152t81 138.5q-36 60 -38 128t24.5 125t79.5 98.5t121 50.5q32 85 99 148t146.5 91.5t168 17t159.5 -66.5q72 21 140 17.5t128.5 -36t104.5 -80t67.5 -115t17.5 -140.5q52 -16 87 -57t45.5 -89t-5.5 -99.5t-58 -87.5z
M455 1222q14 -20 9.5 -44.5t-24.5 -38.5q-19 -14 -43.5 -9.5t-37.5 24.5q-14 20 -9.5 44.5t24.5 38.5q19 14 43.5 9.5t37.5 -24.5zM614 1503q4 -16 -5 -30.5t-26 -18.5t-31 5.5t-18 26.5q-3 17 6.5 31t25.5 18q17 4 31 -5.5t17 -26.5zM1800 555q4 -20 -6.5 -37t-30.5 -21
q-19 -4 -36 6.5t-21 30.5t6.5 37t30.5 22q20 4 36.5 -7.5t20.5 -30.5zM1136 1448q16 -27 8.5 -58.5t-35.5 -47.5q-27 -16 -57.5 -8.5t-46.5 34.5q-16 28 -8.5 59t34.5 48t58 9t47 -36zM1882 792q4 -15 -4 -27.5t-23 -16.5q-15 -3 -27.5 5.5t-15.5 22.5q-3 15 5 28t23 16
q14 3 26.5 -5t15.5 -23zM1691 1033q15 -22 10.5 -49t-26.5 -43q-22 -15 -49 -10t-42 27t-10 49t27 43t48.5 11t41.5 -28z" />
    <glyph glyph-name="uniF2E1" unicode="&#xf2e1;" horiz-adv-x="1792" 
 />
    <glyph glyph-name="uniF2E2" unicode="&#xf2e2;" horiz-adv-x="1792" 
 />
    <glyph glyph-name="uniF2E3" unicode="&#xf2e3;" horiz-adv-x="1792" 
 />
    <glyph glyph-name="uniF2E4" unicode="&#xf2e4;" horiz-adv-x="1792" 
 />
    <glyph glyph-name="uniF2E5" unicode="&#xf2e5;" horiz-adv-x="1792" 
 />
    <glyph glyph-name="uniF2E6" unicode="&#xf2e6;" horiz-adv-x="1792" 
 />
    <glyph glyph-name="uniF2E7" unicode="&#xf2e7;" horiz-adv-x="1792" 
 />
    <glyph glyph-name="_698" unicode="&#xf2e8;" horiz-adv-x="1792" 
 />
    <glyph glyph-name="uniF2E9" unicode="&#xf2e9;" horiz-adv-x="1792" 
 />
    <glyph glyph-name="uniF2EA" unicode="&#xf2ea;" horiz-adv-x="1792" 
 />
    <glyph glyph-name="uniF2EB" unicode="&#xf2eb;" horiz-adv-x="1792" 
 />
    <glyph glyph-name="uniF2EC" unicode="&#xf2ec;" horiz-adv-x="1792" 
 />
    <glyph glyph-name="uniF2ED" unicode="&#xf2ed;" horiz-adv-x="1792" 
 />
    <glyph glyph-name="uniF2EE" unicode="&#xf2ee;" horiz-adv-x="1792" 
 />
    <glyph glyph-name="lessequal" unicode="&#xf500;" horiz-adv-x="1792" 
 />
  </font>
</defs></svg>

'''
'''--- src/css/ngToast.min.css ---
/*!
 * ngToast v2.0.0 (http://tameraydin.github.io/ngToast)
 * Copyright 2016 Tamer Aydin (http://tamerayd.in)
 * Licensed under MIT (http://tameraydin.mit-license.org/)
 */

.ng-toast{position:fixed;z-index:1080;width:100%;height:0;margin-top:20px;text-align:center}.ng-toast.ng-toast--top,.ng-toast.ng-toast--top .ng-toast__list{margin-top:30px;top:0;bottom:auto}.ng-toast.ng-toast--top.ng-toast--center .ng-toast__list{position:static}.ng-toast.ng-toast--bottom,.ng-toast.ng-toast--bottom .ng-toast__list{top:auto;bottom:0}.ng-toast.ng-toast--bottom.ng-toast--center .ng-toast__list{pointer-events:none}.ng-toast.ng-toast--bottom.ng-toast--center .ng-toast__message .alert{pointer-events:auto}.ng-toast.ng-toast--right .ng-toast__list{left:auto;right:0;margin-right:20px}.ng-toast.ng-toast--right .ng-toast__message{text-align:right}.ng-toast.ng-toast--left .ng-toast__list{right:auto;left:0;margin-left:20px}.ng-toast.ng-toast--left .ng-toast__message{text-align:left}.ng-toast .ng-toast__list{display:inline-block;position:absolute;right:0;left:0;margin:0 auto;padding:0;list-style:none}.ng-toast .ng-toast__message{display:block;width:100%;text-align:center}.ng-toast .ng-toast__message .alert{display:inline-block}.ng-toast .ng-toast__message__count{display:inline-block;margin:0 15px 0 5px}
'''
'''--- src/images/symbol.svg ---
<?xml version="1.0" encoding="utf-8"?>
<!-- Generator: Adobe Illustrator 24.0.2, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
	 viewBox="0 0 841.9 595.3" style="enable-background:new 0 0 841.9 595.3;" xml:space="preserve">
<style type="text/css">
	.st0{fill:url(#SVGID_1_);}
	.st1{fill:url(#SVGID_2_);}
	.st2{fill:url(#SVGID_3_);}
	.st3{fill:#44004E;}
	.st4{display:none;fill:#44004E;}
	.st5{display:none;}
	.st6{display:inline;fill:#44004E;}
</style>
<g>
	<g>
		<g>
			<g>
				
					<linearGradient id="SVGID_1_" gradientUnits="userSpaceOnUse" x1="504.4771" y1="59.0738" x2="319.4478" y2="343.9943" gradientTransform="matrix(1 0 0 -1 0 598)">
					<stop  offset="0" style="stop-color:#44004E"/>
					<stop  offset="7.280000e-02" style="stop-color:#480052"/>
					<stop  offset="0.1508" style="stop-color:#55005E"/>
					<stop  offset="0.2313" style="stop-color:#6B0073"/>
					<stop  offset="0.3135" style="stop-color:#89008F"/>
					<stop  offset="0.397" style="stop-color:#AF00B4"/>
					<stop  offset="0.4804" style="stop-color:#DE00E0"/>
					<stop  offset="0.5325" style="stop-color:#FF00FF"/>
				</linearGradient>
				<path class="st0" d="M502.9,540l-158.6-2.6V291.3l77.4-103.7l81.2,103.7L502.9,540L502.9,540z"/>
				
					<linearGradient id="SVGID_2_" gradientUnits="userSpaceOnUse" x1="628.9628" y1="566.7188" x2="481.005" y2="263.3605" gradientTransform="matrix(1 0 0 -1 0 598)">
					<stop  offset="0" style="stop-color:#44004E"/>
					<stop  offset="7.280000e-02" style="stop-color:#480052"/>
					<stop  offset="0.1508" style="stop-color:#55005E"/>
					<stop  offset="0.2313" style="stop-color:#6B0073"/>
					<stop  offset="0.3135" style="stop-color:#89008F"/>
					<stop  offset="0.397" style="stop-color:#AF00B4"/>
					<stop  offset="0.4804" style="stop-color:#DE00E0"/>
					<stop  offset="0.5325" style="stop-color:#FF00FF"/>
				</linearGradient>
				<path class="st1" d="M497,294.5l-128.5-14.7l49.2-122.1l1.5-0.9L633.1,33.3l77.1,138.1L497,294.5z"/>
				
					<linearGradient id="SVGID_3_" gradientUnits="userSpaceOnUse" x1="129.398" y1="419.6854" x2="467.4103" y2="440.3585" gradientTransform="matrix(1 0 0 -1 0 598)">
					<stop  offset="0" style="stop-color:#44004E"/>
					<stop  offset="7.280000e-02" style="stop-color:#480052"/>
					<stop  offset="0.1508" style="stop-color:#55005E"/>
					<stop  offset="0.2313" style="stop-color:#6B0073"/>
					<stop  offset="0.3135" style="stop-color:#89008F"/>
					<stop  offset="0.397" style="stop-color:#AF00B4"/>
					<stop  offset="0.4804" style="stop-color:#DE00E0"/>
					<stop  offset="0.5325" style="stop-color:#FF00FF"/>
				</linearGradient>
				<path class="st2" d="M344.5,298.3L129.1,173.9l81.6-133.7l213.8,124.6l50.4,114.8L344.5,298.3z"/>
			</g>
			<path class="st3" d="M421.7,562c-29.4,0-51.8-4.6-65.5-8.5c-9.3-2.6-15.7-11.3-15.7-21l-0.1-239.4c-0.4-35-14.8-64.8-41.5-86.1
				c-36.8-29.2-94-39.9-149.3-27.8c-7.9,1.7-15.9-0.9-21.2-7c-5.3-6.1-6.8-14.3-4-21.9c6.3-16.9,14.4-37,26.3-57.6
				c14.7-25.5,30-42.5,40.2-52.4c6.9-6.7,17.7-8,26.1-3.2l202,116.6l0.1-0.1l5.4,3.2v0.1c30.9,17.1,63.6,19.5,95.3,7
				c43.7-17.2,81.5-61.4,98.8-115.4c2.5-7.7,8.7-13.3,16.7-14.8c7.9-1.5,15.8,1.3,21,7.5c11.5,13.9,24.9,31,36.8,51.5
				c14.7,25.5,21.9,47.2,25.3,61l0,0c2.4,9.3-1.9,19.3-10.3,24.1L504.7,295.3l-5.5,3.2c-29.5,17.9-47.6,45.3-52.5,78.9
				c-6.7,46.2,12.8,100.8,50.7,142.4c5.4,6,7.1,14.2,4.5,21.8c-2.6,7.7-9,13-17,14.4C466.8,558.9,445.4,562,421.7,562z"/>
		</g>
		<path class="st4" d="M670.7,326.7c-17.6,0-26.8-10.3-26.8-29.8v-76c0-1.4,1-2.7,2.3-3.1c2-0.6,5.3-1.3,9.8-1.3
			c4.5,0,7.7,0.7,9.6,1.2c1.4,0.4,2.3,1.7,2.3,3.1v78.6c0,3.2,0.8,5.3,2.5,6.4c3,1.9,8.1,0,10.2-1c1.3-0.6,2.9-0.2,3.9,1
			c1,1.2,2.4,3.1,3.8,5.7c1.4,2.6,2.3,5,2.9,6.5l0,0c0.5,1.5-0.1,3.1-1.5,3.9C686.4,323.7,679.8,326.7,670.7,326.7z"/>
		<path class="st4" d="M440.6,326.1c-4.5,0-7.7-0.7-9.6-1.2c-1.4-0.4-2.4-1.7-2.4-3.1v-40c0-4.2-0.9-7.4-2.7-9.7
			c-1.8-2.2-4.4-3.3-8.1-3.3c-4.2,0-7.4,1.4-9.9,4.3s-3.7,6.6-3.7,11.1v37.7c0,1.4-1,2.7-2.4,3.1c-1.9,0.5-5,1.2-9.3,1.2
			c-4.3,0-7.4-0.6-9.2-1.2c-1.4-0.4-2.4-1.7-2.4-3.1v-40c0-4.2-0.9-7.4-2.7-9.7c-1.8-2.2-4.4-3.3-8.1-3.3c-4.1,0-7.3,1.4-9.8,4.3
			c-2.5,2.9-3.8,6.6-3.8,11.1v37.6c0,1.4-1,2.7-2.3,3.1c-2,0.6-5.3,1.3-9.8,1.3c-4.5,0-7.7-0.7-9.6-1.2c-1.4-0.4-2.4-1.7-2.4-3.1
			V252c0-1.5,1-2.8,2.4-3.1c1.6-0.4,4.1-0.9,7.5-0.9c4.1,0,6.8,0.7,8,1.1c0.8,0.3,1.4,0.8,1.8,1.5l3.5,6.4c2.2-2.5,5-4.7,8.3-6.4
			c3.6-1.9,8-2.9,12.9-2.9c3,0,5.7,0.3,8,1c2.3,0.6,4.4,1.5,6.2,2.5c1.8,1,3.3,2.1,4.7,3.4c1.1,1,2,2,2.8,2.9c3-3,6.5-5.4,10.7-7.1
			c4.4-1.8,9-2.7,13.8-2.7c9.5,0,17,2.8,22,8.2c5.1,5.4,7.6,12.9,7.6,22.2v43.5c0,1.4-1,2.7-2.3,3.1
			C448.4,325.4,445.1,326.1,440.6,326.1z"/>
		<path class="st4" d="M592.7,326.7c-26.1,0-40.1-20.6-40.1-40c0-10.4,3.8-20.2,10.6-27.6c7.5-8,17.7-12.2,29.5-12.2
			s22,4.2,29.4,12.2c6.8,7.3,10.5,17.1,10.5,27.6C632.7,306.1,618.7,326.7,592.7,326.7z M592.7,268c-11.6,0-16.9,9.7-16.9,18.8
			c0,12.3,8.7,18.9,16.9,18.9c10.5,0,16.8-9.6,16.8-18.9C609.5,277.4,603.7,268,592.7,268z"/>
		<path class="st4" d="M194.3,326.9c-5.2,0-10.1-0.5-14.4-1.5c-4.3-1-8.3-2.3-11.7-4c-3.5-1.6-6.6-3.5-9.4-5.6
			c-2.2-1.7-4.2-3.4-5.9-5.1c-1-1-1.2-2.6-0.5-3.9c1.1-2,3-5,5.7-8c2.7-3,5.3-4.9,7.1-6c1.3-0.8,2.9-0.6,4,0.5c1,1,2.2,2,3.4,3.1
			c1.8,1.5,3.8,2.8,6,4.1c2.2,1.2,4.6,2.2,7.2,3c2.6,0.8,5.4,1.1,8.3,1.1c1.7,0,3.4-0.3,5.1-0.8c1.7-0.5,3.2-1.2,4.6-2.2
			c1.4-0.9,2.5-2.1,3.3-3.4c0.8-1.3,1.2-2.7,1.2-4.4c0-3.6-1.7-6.3-5.3-8.3c-3.7-2.1-9.6-4.2-17.6-6.3c-4-1-7.8-2.3-11.2-4.1
			c-3.4-1.8-6.4-4-8.9-6.5c-2.5-2.6-4.5-5.5-5.9-8.8c-1.4-3.3-2.1-7-2.1-11.1c0-4.4,0.8-8.7,2.4-12.6c1.6-3.9,4.1-7.5,7.3-10.5
			c3.2-3,7.3-5.4,12.1-7.2c4.8-1.7,10.5-2.6,17.1-2.6c20.4,0,34.8,12.9,34.9,13.1c1,1,1.3,2.5,0.7,3.8c-0.7,1.5-2.1,3.9-4.6,6.9
			c-2.6,3.1-5.3,5-7.1,6c-1.1,0.6-2.6,0.5-3.6-0.3c-0.8-0.6-1.8-1.3-2.8-2.1c-1.5-1.1-3.1-2.1-5-3c-1.8-0.9-3.9-1.7-6-2.3
			c-2.2-0.6-4.5-0.9-6.9-0.9c-1.6,0-3.2,0.3-4.7,0.8c-1.5,0.5-2.9,1.2-4.2,2c-1.2,0.8-2.2,1.8-2.9,2.9c-0.7,1.1-1.1,2.2-1.1,3.4
			c0,3.3,1.7,5.9,5.3,7.9c3.7,2.1,8.8,4,15.3,5.4c3.9,1,7.7,2.3,11.5,3.9c3.8,1.6,7.2,3.8,10.1,6.5c3,2.7,5.4,6,7.2,9.9
			c1.8,3.9,2.7,8.6,2.7,14.1c0,4.8-1.1,9.3-3.2,13.3c-2.1,4-5.1,7.6-8.7,10.5c-3.6,3-8,5.3-12.9,6.9
			C205.4,326,200,326.9,194.3,326.9z"/>
		<path class="st4" d="M501.9,326.6c-14.8,0-27.5-3-32.3-4.2c-1.4-0.4-2.4-1.7-2.4-3.1v-98.4c0-1.4,1-2.7,2.3-3.1
			c2-0.6,5.3-1.3,9.8-1.3c4.5,0,7.7,0.7,9.6,1.2c1.4,0.4,2.4,1.7,2.4,3.1v33c2.5-2.1,8.7-6.1,18.5-6.1c20,0,33.4,15.1,33.4,37.6
			C543.1,309.7,526.2,326.6,501.9,326.6z M491.2,305c1.7,0.5,6,1.3,9.7,1.3c8.7,0,18-5.3,18-20.2c0-13.1-7.4-17.7-13.8-17.7
			c-6.4,0-13.9,2.5-13.9,14.4L491.2,305L491.2,305z"/>
	</g>
	<g class="st5">
		<path class="st6" d="M523.1,377.8h-3.8v-25.7h14.5v3.3h-10.6v8.4h9.9v3.3h-9.9L523.1,377.8L523.1,377.8z"/>
		<path class="st6" d="M546.8,358c0.8,0,1.5,0.1,2.1,0.2l-0.4,3.6c-0.6-0.2-1.3-0.3-1.9-0.3c-1,0-1.9,0.2-2.7,0.7s-1.5,1.2-2,2.1
			c-0.5,0.9-0.8,2-0.8,3.3v10.2h-3.8v-19.4h3l0.5,3.5h0.1c0.6-1,1.4-1.9,2.4-2.7S545.4,358,546.8,358z"/>
		<path class="st6" d="M568.2,368.1c0,3.2-0.8,5.7-2.5,7.5c-1.7,1.8-3.9,2.6-6.7,2.6c-1.8,0-3.3-0.4-4.7-1.2
			c-1.4-0.8-2.4-1.9-3.2-3.4s-1.2-3.3-1.2-5.5c0-3.2,0.8-5.7,2.5-7.4c1.6-1.7,3.9-2.6,6.7-2.6c1.8,0,3.3,0.4,4.7,1.2
			s2.4,1.9,3.2,3.4C567.8,364.1,568.2,365.9,568.2,368.1z M554,368.1c0,2.2,0.4,3.9,1.2,5.1c0.8,1.2,2.1,1.8,3.9,1.8
			s3.1-0.6,3.9-1.8c0.8-1.2,1.2-2.9,1.2-5.1c0-2.2-0.4-3.9-1.2-5.1c-0.8-1.2-2.2-1.8-4-1.8c-1.8,0-3.1,0.6-3.9,1.8
			C554.4,364.2,554,365.9,554,368.1z"/>
		<path class="st6" d="M594.2,358c2.2,0,3.8,0.6,4.9,1.7s1.7,2.9,1.7,5.4v12.6H597v-12.1c0-3-1.2-4.5-3.6-4.5c-1.7,0-3,0.5-3.7,1.6
			c-0.7,1.1-1.1,2.6-1.1,4.6v10.4h-3.8v-12.1c0-3-1.2-4.5-3.7-4.5c-1.8,0-3.1,0.6-3.8,1.8c-0.7,1.2-1,2.9-1,5.1v9.8h-3.8v-19.4h3
			l0.5,2.6h0.2c0.6-1,1.4-1.8,2.4-2.2s2.1-0.7,3.3-0.7c3,0,4.9,1,5.9,3.1h0.3c0.6-1.1,1.5-1.8,2.6-2.4
			C591.8,358.3,593,358,594.2,358z"/>
		<path class="st6" d="M636.3,377.8h-4.7l-13-20.8h-0.1c0,1,0.1,2.1,0.2,3.3s0.1,2.5,0.1,3.8v13.7h-3.5v-25.7h4.7l13,20.7h0.1
			c0-0.5,0-1.1-0.1-1.9c0-0.8-0.1-1.6-0.1-2.5s0-1.7-0.1-2.5v-13.8h3.6L636.3,377.8L636.3,377.8z"/>
		<path class="st6" d="M657,377.8h-14.5v-25.7H657v3.3h-10.6v7.3h9.9v3.3h-9.9v8.4H657L657,377.8L657,377.8z"/>
		<path class="st3" d="M673.2,377.8l-7.8-21.9h-0.1c0,0.5,0.1,1.2,0.1,2s0.1,1.7,0.1,2.6c0,1,0,1.9,0,2.8v14.5H662v-25.7h5.5
			l7.4,20.6h0.1l7.6-20.6h5.5v25.7h-3.8v-14.7c0-0.8,0-1.7,0-2.6c0-0.9,0.1-1.7,0.1-2.5c0-0.8,0.1-1.5,0.1-2h-0.1l-8,21.8
			L673.2,377.8L673.2,377.8z"/>
	</g>
</g>
</svg>

'''
'''--- src/package.json ---
{
  "name": "NEM-Wallet",
  "version": "2.5.1",
  "description": "Cross-platform lite wallet for NEM",
  "author": "https://github.com/QuantumMechanics",
  "license": "MIT",
  "main": "start.html",
  "window": {
    "fullscreen": false,
    "width": 1600,
    "height": 900,
    "min_width": 800,
    "min_height": 600,
    "icon": "images/logomark.png"
  }
}

'''
'''--- src/start.html ---
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title ng-bind="pageTitle"></title>
    <link rel="stylesheet" href="css/font-awesome.min.css">
    <link rel="stylesheet" href="css/bootstrap.min.css">
    <link rel="stylesheet" href="css/nano.css">
    <link rel="stylesheet" href="css/ngToast.min.css">
    <link rel="stylesheet" href="css/NEMonster.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Noto+Sans:100,400,700,900">
  </head>

  <body>

    <div ui-view></div>
    <toast></toast>

    <!-- Utils -->
    <script src="vendors/qrcode.js"></script>
    <script src="vendors/kjua.min.js"></script>
    <script src="vendors/jszip.min.js"></script>
    <script src="vendors/FileSaver.min.js"></script>
    <script src="vendors/connect.js"></script>

    <!-- app -->
    <script src="main.js"></script>

  </body>
</html>

'''
'''--- src/vendors/FileSaver.min.js ---
/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */
var saveAs=saveAs||function(view){"use strict";if(typeof navigator!=="undefined"&&/MSIE [1-9]\./.test(navigator.userAgent)){return}var doc=view.document,get_URL=function(){return view.URL||view.webkitURL||view},save_link=doc.createElementNS("http://www.w3.org/1999/xhtml","a"),can_use_save_link="download"in save_link,click=function(node){var event=new MouseEvent("click");node.dispatchEvent(event)},is_safari=/Version\/[\d\.]+.*Safari/.test(navigator.userAgent),webkit_req_fs=view.webkitRequestFileSystem,req_fs=view.requestFileSystem||webkit_req_fs||view.mozRequestFileSystem,throw_outside=function(ex){(view.setImmediate||view.setTimeout)(function(){throw ex},0)},force_saveable_type="application/octet-stream",fs_min_size=0,arbitrary_revoke_timeout=500,revoke=function(file){var revoker=function(){if(typeof file==="string"){get_URL().revokeObjectURL(file)}else{file.remove()}};if(view.chrome){revoker()}else{setTimeout(revoker,arbitrary_revoke_timeout)}},dispatch=function(filesaver,event_types,event){event_types=[].concat(event_types);var i=event_types.length;while(i--){var listener=filesaver["on"+event_types[i]];if(typeof listener==="function"){try{listener.call(filesaver,event||filesaver)}catch(ex){throw_outside(ex)}}}},auto_bom=function(blob){if(/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(blob.type)){return new Blob(["\ufeff",blob],{type:blob.type})}return blob},FileSaver=function(blob,name,no_auto_bom){if(!no_auto_bom){blob=auto_bom(blob)}var filesaver=this,type=blob.type,blob_changed=false,object_url,target_view,dispatch_all=function(){dispatch(filesaver,"writestart progress write writeend".split(" "))},fs_error=function(){if(target_view&&is_safari&&typeof FileReader!=="undefined"){var reader=new FileReader;reader.onloadend=function(){var base64Data=reader.result;target_view.location.href="data:attachment/file"+base64Data.slice(base64Data.search(/[,;]/));filesaver.readyState=filesaver.DONE;dispatch_all()};reader.readAsDataURL(blob);filesaver.readyState=filesaver.INIT;return}if(blob_changed||!object_url){object_url=get_URL().createObjectURL(blob)}if(target_view){target_view.location.href=object_url}else{var new_tab=view.open(object_url,"_blank");if(new_tab==undefined&&is_safari){view.location.href=object_url}}filesaver.readyState=filesaver.DONE;dispatch_all();revoke(object_url)},abortable=function(func){return function(){if(filesaver.readyState!==filesaver.DONE){return func.apply(this,arguments)}}},create_if_not_found={create:true,exclusive:false},slice;filesaver.readyState=filesaver.INIT;if(!name){name="download"}if(can_use_save_link){object_url=get_URL().createObjectURL(blob);setTimeout(function(){save_link.href=object_url;save_link.download=name;click(save_link);dispatch_all();revoke(object_url);filesaver.readyState=filesaver.DONE});return}if(view.chrome&&type&&type!==force_saveable_type){slice=blob.slice||blob.webkitSlice;blob=slice.call(blob,0,blob.size,force_saveable_type);blob_changed=true}if(webkit_req_fs&&name!=="download"){name+=".download"}if(type===force_saveable_type||webkit_req_fs){target_view=view}if(!req_fs){fs_error();return}fs_min_size+=blob.size;req_fs(view.TEMPORARY,fs_min_size,abortable(function(fs){fs.root.getDirectory("saved",create_if_not_found,abortable(function(dir){var save=function(){dir.getFile(name,create_if_not_found,abortable(function(file){file.createWriter(abortable(function(writer){writer.onwriteend=function(event){target_view.location.href=file.toURL();filesaver.readyState=filesaver.DONE;dispatch(filesaver,"writeend",event);revoke(file)};writer.onerror=function(){var error=writer.error;if(error.code!==error.ABORT_ERR){fs_error()}};"writestart progress write abort".split(" ").forEach(function(event){writer["on"+event]=filesaver["on"+event]});writer.write(blob);filesaver.abort=function(){writer.abort();filesaver.readyState=filesaver.DONE};filesaver.readyState=filesaver.WRITING}),fs_error)}),fs_error)};dir.getFile(name,{create:false},abortable(function(file){file.remove();save()}),abortable(function(ex){if(ex.code===ex.NOT_FOUND_ERR){save()}else{fs_error()}}))}),fs_error)}),fs_error)},FS_proto=FileSaver.prototype,saveAs=function(blob,name,no_auto_bom){return new FileSaver(blob,name,no_auto_bom)};if(typeof navigator!=="undefined"&&navigator.msSaveOrOpenBlob){return function(blob,name,no_auto_bom){if(!no_auto_bom){blob=auto_bom(blob)}return navigator.msSaveOrOpenBlob(blob,name||"download")}}FS_proto.abort=function(){var filesaver=this;filesaver.readyState=filesaver.DONE;dispatch(filesaver,"abort")};FS_proto.readyState=FS_proto.INIT=0;FS_proto.WRITING=1;FS_proto.DONE=2;FS_proto.error=FS_proto.onwritestart=FS_proto.onprogress=FS_proto.onwrite=FS_proto.onabort=FS_proto.onerror=FS_proto.onwriteend=null;return saveAs}(typeof self!=="undefined"&&self||typeof window!=="undefined"&&window||this.content);if(typeof module!=="undefined"&&module.exports){module.exports.saveAs=saveAs}else if(typeof define!=="undefined"&&define!==null&&define.amd!=null){define([],function(){return saveAs})}

'''
'''--- src/vendors/connect.js ---
/**
 * (C) 2017 SatoshiLabs
 *
 * GPLv3
 */
var VERSION = 4;

if (!Array.isArray) {
    Array.isArray = function(arg) {
        return Object.prototype.toString.call(arg) === '[object Array]';
    };
}

var HD_HARDENED = 0x80000000;

// react sometimes adds some other parameters that should not be there
function _fwStrFix(obj, fw) {
    if (typeof fw === 'string') {
        obj.requiredFirmware = fw;
    }
    return obj;
}

this.TrezorConnect = (function () {
    'use strict';

    var chrome = window.chrome;
    var IS_CHROME_APP = chrome && chrome.app && chrome.app.window;

    var ERR_TIMED_OUT = 'Loading timed out';
    var ERR_WINDOW_CLOSED = 'Window closed';
    var ERR_WINDOW_BLOCKED = 'Window blocked';
    var ERR_ALREADY_WAITING = 'Already waiting for a response';
    var ERR_CHROME_NOT_CONNECTED = 'Internal Chrome popup is not responding.';

    var DISABLE_LOGIN_BUTTONS = window.TREZOR_DISABLE_LOGIN_BUTTONS || false;
    var CHROME_URL = window.TREZOR_CHROME_URL || './chrome/wrapper.html';
    var POPUP_ORIGIN = window.TREZOR_POPUP_ORIGIN || 'https://connect.trezor.io';
    var POPUP_PATH = window.TREZOR_POPUP_PATH || POPUP_ORIGIN + '/' + VERSION;
    if (window.location.hostname === 'localhost' && !window.TREZOR_POPUP_ORIGIN) {
        // development settings
        POPUP_ORIGIN = window.location.origin;
        POPUP_PATH = POPUP_ORIGIN;
    }
    var POPUP_URL = window.TREZOR_POPUP_URL || POPUP_PATH + '/popup/popup.html';

    var POPUP_INIT_TIMEOUT = 15000;

    /**
     * Public API.
     */
    function TrezorConnect() {

        var manager = new PopupManager();

        /**
         * Popup errors.
         */
        this.ERR_TIMED_OUT = ERR_TIMED_OUT;
        this.ERR_WINDOW_CLOSED = ERR_WINDOW_CLOSED;
        this.ERR_WINDOW_BLOCKED = ERR_WINDOW_BLOCKED;
        this.ERR_ALREADY_WAITING = ERR_ALREADY_WAITING;
        this.ERR_CHROME_NOT_CONNECTED = ERR_CHROME_NOT_CONNECTED;

        /**
         * Open the popup for further communication. All API functions open the
         * popup automatically, but if you need to generate some parameters
         * asynchronously, use `open` first to avoid popup blockers.
         * @param {function(?Error)} callback
         */
        this.open = function (callback) {
            var onchannel = function (result) {
                if (result instanceof Error) {
                    callback(result);
                } else {
                    callback();
                }
            };
            manager.waitForChannel(onchannel);
        };

        /**
         * Close the opened popup, if any.
         */
        this.close = function () { manager.close(); };

        /**
         * Enable or disable closing the opened popup after a successful call.
         * @param {boolean} value
         */
        this.closeAfterSuccess = function (value) { manager.closeAfterSuccess = value; };

        /**
         * Enable or disable closing the opened popup after a failed call.
         * @param {boolean} value
         */
        this.closeAfterFailure = function (value) { manager.closeAfterFailure = value; };

        /**
         * Set bitcore server
         * @param {string|Array<string>} value
         */
        this.setBitcoreURLS = function(value) {
            if (typeof value === 'string') {
                manager.bitcoreURLS = [ value ];
            }else if (value instanceof Array) {
                manager.bitcoreURLS = value;
            }
        }

        /**
         * Set currency. Human readable coin name
         * @param {string|Array<string>} value
         */
        this.setCurrency = function(value) {
            if (typeof value === 'string') {
                manager.currency = value;
            }
        }

        /**
         * Set currency units (mBTC, BTC)
         * @param {string|Array<string>} value
         */
        this.setCurrencyUnits = function(value) {
            if (typeof value === 'string') {
                manager.currencyUnits = value;
            }
        }

        /**
         * Set coin info json url
         * @param {string|Array<string>} value
         */
        this.setCoinInfoURL = function(value) {
            if (typeof value === 'string') {
                manager.coinInfoURL = value;
            }
        }

        /**
         * Set max. limit for account discovery
         * @param {number} value
         */
        this.setAccountDiscoveryLimit = function(value) {
            if(!isNaN(value))
                manager.accountDiscoveryLimit = value;
        }

        /**
         * Set max. gap for account discovery
         * @param {number} value
         */
        this.setAccountDiscoveryGapLength = function(value) {
            if(!isNaN(value))
                manager.accountDiscoveryGapLength = value;
        }

        /**
         * Set discovery BIP44 coin type
         * @param {number} value
         */
        this.setAccountDiscoveryBip44CoinType = function(value) {
            if(!isNaN(value))
                manager.accountDiscoveryBip44CoinType = value;
        }

        /**
         * @typedef XPubKeyResult
         * @param {boolean} success
         * @param {?string} error
         * @param {?string} xpubkey  serialized extended public key
         * @param {?string} path     BIP32 serializd path of the key
         */

        /**
         * Load BIP32 extended public key by path.
         *
         * Path can be specified either in the string form ("m/44'/1/0") or as
         * raw integer array. In case you omit the path, user is asked to select
         * a BIP32 account to export, and the result contains m/44'/0'/x' node
         * of the account.
         *
         * @param {?(string|array<number>)} path
         * @param {function(XPubKeyResult)} callback
         * @param {?(string|array<number>)} requiredFirmware
         */
        this.getXPubKey = function (path, callback, requiredFirmware) {
            if (typeof path === 'string') {
                path = parseHDPath(path);
            }
            manager.sendWithChannel(_fwStrFix({
                type: 'xpubkey',
                path: path
            }, requiredFirmware), callback);
        };

        this.getFreshAddress = function (callback, requiredFirmware) {
            var wrapperCallback = function (result) {
                if (result.success) {
                    callback({success: true, address: result.freshAddress});
                } else {
                    callback(result);
                }
            }

            manager.sendWithChannel(_fwStrFix({
                type: 'accountinfo'
            }, requiredFirmware), wrapperCallback);
        }

        this.getAccountInfo = function (input, callback, requiredFirmware) {
            try {
                manager.sendWithChannel(_fwStrFix({
                    type: 'accountinfo',
                    description: input
                }, requiredFirmware), callback);
            } catch(e) {
                callback({success: false, error: e});
            }
        }

        this.getAllAccountsInfo = function(callback, requiredFirmware){
            try {
                manager.sendWithChannel(_fwStrFix({
                    type: 'allaccountsinfo',
                    description: 'all'
                }, requiredFirmware), callback);
            } catch(e) {
                callback({success: false, error: e});
            }
        }

        this.getBalance = function (callback, requiredFirmware) {
            manager.sendWithChannel(_fwStrFix({
                type: 'accountinfo'
            }, requiredFirmware), callback)
        }

        /**
         * @typedef SignTxResult
         * @param {boolean} success
         * @param {?string} error
         * @param {?string} serialized_tx      serialized tx, in hex, including signatures
         * @param {?array<string>} signatures  array of input signatures, in hex
         */

        /**
         * Sign a transaction in the device and return both serialized
         * transaction and the signatures.
         *
         * @param {array<TxInputType>} inputs
         * @param {array<TxOutputType>} outputs
         * @param {function(SignTxResult)} callback
         * @param {?(string|array<number>)} requiredFirmware
         *
         * @see https://github.com/trezor/trezor-common/blob/master/protob/types.proto
         */
        this.signTx = function (inputs, outputs, callback, requiredFirmware, coin) {
            manager.sendWithChannel(_fwStrFix({
                type: 'signtx',
                inputs: inputs,
                outputs: outputs,
                coin: coin
            }, requiredFirmware), callback);
        };

        // new implementation with ethereum at beginnig
        this.ethereumSignTx = function() {
            this.signEthereumTx.apply(this, arguments);
        }

        // old fallback
        this.signEthereumTx = function (
            address_n,
            nonce,
            gas_price,
            gas_limit,
            to,
            value,
            data,
            chain_id,
            callback,
            requiredFirmware
        ) {
            if (requiredFirmware == null) {
                requiredFirmware = '1.4.0'; // first firmware that supports ethereum
            }
            if (typeof address_n === 'string') {
                address_n = parseHDPath(address_n);
            }
            manager.sendWithChannel(_fwStrFix({
                type: 'signethtx',
                address_n: address_n,
                nonce: nonce,
                gas_price: gas_price,
                gas_limit: gas_limit,
                to: to,
                value: value,
                data: data,
                chain_id: chain_id,
            }, requiredFirmware), callback);
        };

        /**
         * @typedef TxRecipient
         * @param {number} amount   the amount to send, in satoshis
         * @param {string} address  the address of the recipient
         */

        /**
         * Compose a transaction by doing BIP-0044 discovery, letting the user
         * select an account, and picking UTXO by internal preferences.
         * Transaction is then signed and returned in the same format as
         * `signTx`.  Only supports BIP-0044 accounts (single-signature).
         *
         * @param {array<TxRecipient>} recipients
         * @param {function(SignTxResult)} callback
         * @param {?(string|array<number>)} requiredFirmware
         */
        this.composeAndSignTx = function (recipients, callback, requiredFirmware) {
            manager.sendWithChannel(_fwStrFix({
                type: 'composetx',
                recipients: recipients
            }, requiredFirmware), callback);
        };

        /**
         * @typedef RequestLoginResult
         * @param {boolean} success
         * @param {?string} error
         * @param {?string} public_key  public key used for signing, in hex
         * @param {?string} signature   signature, in hex
         */

        /**
         * Sign a login challenge for active origin.
         *
         * @param {?string} hosticon
         * @param {string} challenge_hidden
         * @param {string} challenge_visual
         * @param {string|function(RequestLoginResult)} callback
         * @param {?(string|array<number>)} requiredFirmware
         *
         * @see https://github.com/trezor/trezor-common/blob/master/protob/messages.proto
         */
        this.requestLogin = function (
            hosticon,
            challenge_hidden,
            challenge_visual,
            callback,
            requiredFirmware
        ) {
            if (typeof callback === 'string') {
                // special case for a login through <trezor:login> button.
                // `callback` is name of global var
                callback = window[callback];
            }
            if (!callback) {
                throw new TypeError('TrezorConnect: login callback not found');
            }
            manager.sendWithChannel(_fwStrFix({
                type: 'login',
                icon: hosticon,
                challenge_hidden: challenge_hidden,
                challenge_visual: challenge_visual
            }, requiredFirmware), callback);
        };

        /**
         * @typedef SignMessageResult
         * @param {boolean} success
         * @param {?string} error
         * @param {?string} address address (in base58check)
         * @param {?string} signature   signature, in base64
         */

        /**
         * Sign a message
         *
         * @param {string|array} path  
         * @param {string} message to sign (ascii)
         * @param {string|function(SignMessageResult)} callback
         * @param {?string} opt_coin - (optional) name of coin (default Bitcoin)
         * @param {?(string|array<number>)} requiredFirmware
         *
         */
        this.signMessage = function (
            path,
            message,
            callback,
            opt_coin,
            requiredFirmware
        ) {
            if (typeof path === 'string') {
                path = parseHDPath(path);
            }
            if (!opt_coin) {
                opt_coin = 'Bitcoin';
            }
            if (!callback) {
                throw new TypeError('TrezorConnect: callback not found');
            }
            manager.sendWithChannel(_fwStrFix({
                type: 'signmsg',
                path: path,
                message: message,
                coin: opt_coin,
            }, requiredFirmware), callback);
        };

        /**
         * Sign an Ethereum message
         *
         * @param {string|array} path
         * @param {string} message to sign (ascii)
         * @param {string|function(SignMessageResult)} callback
         * @param {?(string|array<number>)} requiredFirmware
         *
         */
        this.ethereumSignMessage = function (
            path,
            message,
            callback,
            requiredFirmware
        ) {
            if (typeof path === 'string') {
                path = parseHDPath(path);
            }
            if (!callback) {
                throw new TypeError('TrezorConnect: callback not found');
            }
            manager.sendWithChannel(_fwStrFix({
                type: 'signethmsg',
                path: path,
                message: message,
            }, requiredFirmware), callback);
        };

        /**
         * Verify message
         *
         * @param {string} address
         * @param {string} signature (base64)
         * @param {string} message (string)
         * @param {string|function()} callback
         * @param {?string} opt_coin - (optional) name of coin (default Bitcoin)
         * @param {?(string|array<number>)} requiredFirmware
         *
         */
        this.verifyMessage = function (
            address,
            signature,
            message,
            callback,
            opt_coin,
            requiredFirmware
        ) {
            if (!opt_coin) {
                opt_coin = 'Bitcoin';
            }
            if (!callback) {
                throw new TypeError('TrezorConnect: callback not found');
            }
            manager.sendWithChannel(_fwStrFix({
                type: 'verifymsg',
                address: address,
                signature: signature,
                message: message,
                coin: {coin_name: opt_coin},
            }, requiredFirmware), callback);
        };

        /**
         * Verify ethereum message
         *
         * @param {string} address
         * @param {string} signature (base64)
         * @param {string} message (string)
         * @param {string|function()} callback
         * @param {?(string|array<number>)} requiredFirmware
         *
         */
        this.ethereumVerifyMessage = function (
            address,
            signature,
            message,
            callback,
            requiredFirmware
        ) {
            if (!callback) {
                throw new TypeError('TrezorConnect: callback not found');
            }
            manager.sendWithChannel(_fwStrFix({
                type: 'verifyethmsg',
                address: address,
                signature: signature,
                message: message,
            }, requiredFirmware), callback);
        };

        /**
         * Symmetric key-value encryption
         *
         * @param {string|array} path
         * @param {string} key to show on device display
         * @param {string} value hexadecimal value, length a multiple of 16 bytes
         * @param {boolean} encrypt / decrypt direction
         * @param {boolean} ask_on_encrypt (should user confirm on encrypt?)
         * @param {boolean} ask_on_decrypt (should user confirm on decrypt?)
         * @param {string|function()} callback
         * @param {?(string|array<number>)} requiredFirmware
         *
         */
        this.cipherKeyValue = function (
            path,
            key,
            value,
            encrypt,
            ask_on_encrypt,
            ask_on_decrypt,
            callback,
            requiredFirmware
        ) {
            if (typeof path === 'string') {
                path = parseHDPath(path);
            }
            if (typeof value !== 'string') {
                throw new TypeError('TrezorConnect: Value must be a string');
            }
            if (!(/^[0-9A-Fa-f]*$/.test(value))) {
                throw new TypeError('TrezorConnect: Value must be hexadecimal');
            }
            if (value.length % 32 !== 0) {
                // 1 byte == 2 hex strings
                throw new TypeError('TrezorConnect: Value length must be multiple of 16 bytes');
            }
            if (!callback) {
                throw new TypeError('TrezorConnect: callback not found');
            }
            manager.sendWithChannel(_fwStrFix({
                type: 'cipherkeyvalue',
                path: path,
                key: key,
                value: value,
                encrypt: !!encrypt,
                ask_on_encrypt: !!ask_on_encrypt,
                ask_on_decrypt: !!ask_on_decrypt
            }, requiredFirmware), callback);
        };

        this.nemGetAddress = function (
          address_n,
          network,
          callback,
          requiredFirmware
        ) {
            if (requiredFirmware == null) {
                requiredFirmware = '1.6.0'; // first firmware that supports NEM
            }
            if (typeof address_n === 'string') {
                address_n = parseHDPath(address_n);
            }
            manager.sendWithChannel(_fwStrFix({
                type: 'nemGetAddress',
                address_n: address_n,
                network: network,
            }, requiredFirmware), callback);
        }

        this.nemSignTx = function (
          address_n,
          transaction,
          callback,
          requiredFirmware
        ) {
            if (requiredFirmware == null) {
                requiredFirmware = '1.6.0'; // first firmware that supports NEM
            }
            if (typeof address_n === 'string') {
                address_n = parseHDPath(address_n);
            }
            manager.sendWithChannel(_fwStrFix({
                type: 'nemSignTx',
                address_n: address_n,
                transaction: transaction
            }, requiredFirmware), callback);
        }

        this.pushTransaction = function (
          rawTx,
          callback
        ) {
            if (!(/^[0-9A-Fa-f]*$/.test(rawTx))) {
                throw new TypeError('TrezorConnect: Transaction must be hexadecimal');
            }
            if (!callback) {
                throw new TypeError('TrezorConnect: callback not found');
            }

            manager.sendWithChannel({
                type: 'pushtx',
                rawTx: rawTx,
            }, callback);
        }

        /**
         * Display address on device
         *
         * @param {array} address
         * @param {string} coin 
         * @param {boolean} segwit
         * @param {?(string|array<number>)} requiredFirmware
         *
         */
        this.getAddress = function (address, coin, segwit, callback, requiredFirmware) {

            if (typeof address === 'string') {
                address = parseHDPath(address);
            }

            manager.sendWithChannel(_fwStrFix({
                type: 'getaddress',
                address_n: address,
                coin: coin,
                segwit: segwit
            }, requiredFirmware), callback);
        }

        /**
         * Display ethereum address on device
         *
         * @param {array} address
         * @param {?(string|array<number>)} requiredFirmware
         *
         */
        this.ethereumGetAddress = function (address, callback, requiredFirmware) {

            if (typeof address === 'string') {
                address = parseHDPath(address);
            }

            manager.sendWithChannel(_fwStrFix({
                type: 'ethgetaddress',
                address_n: address,
            }, requiredFirmware), callback);
        }

        var LOGIN_CSS =
            '<style>@import url("@connect_path@/login_buttons.css")</style>';

        var LOGIN_ONCLICK =
            'TrezorConnect.requestLogin('
            + "'@hosticon@','@challenge_hidden@','@challenge_visual@','@callback@'"
            + ')';

        var LOGIN_HTML =
            '<div id="trezorconnect-wrapper">'
            + '  <a id="trezorconnect-button" onclick="' + LOGIN_ONCLICK + '">'
            + '    <span id="trezorconnect-icon"></span>'
            + '    <span id="trezorconnect-text">@text@</span>'
            + '  </a>'
            + '  <span id="trezorconnect-info">'
            + '    <a id="trezorconnect-infolink" href="https://www.buytrezor.com/"'
            + '       target="_blank">What is TREZOR?</a>'
            + '  </span>'
            + '</div>';

        /**
         * Find <trezor:login> elements and replace them with login buttons.
         * It's not required to use these special elements, feel free to call
         * `TrezorConnect.requestLogin` directly.
         */
        this.renderLoginButtons = function () {
            var elements = document.getElementsByTagName('trezor:login');

            for (var i = 0; i < elements.length; i++) {
                var e = elements[i];
                var text = e.getAttribute('text') || 'Sign in with TREZOR';
                var callback = e.getAttribute('callback') || '';
                var hosticon = e.getAttribute('icon') || '';
                var challenge_hidden = e.getAttribute('challenge_hidden') || '';
                var challenge_visual = e.getAttribute('challenge_visual') || '';

                // it's not valid to put markup into attributes, so let users
                // supply a raw text and make TREZOR bold
                text = text.replace('TREZOR', '<strong>TREZOR</strong>');
                e.outerHTML =
                    (LOGIN_CSS + LOGIN_HTML)
                    .replace('@text@', text)
                    .replace('@callback@', callback)
                    .replace('@hosticon@', hosticon)
                    .replace('@challenge_hidden@', challenge_hidden)
                    .replace('@challenge_visual@', challenge_visual)
                    .replace('@connect_path@', POPUP_PATH);
            }
        };
    }

    /*
     * `getXPubKey()`
     */

    function parseHDPath(string) {
        return string
            .toLowerCase()
            .split('/')
            .filter(function (p) { return p !== 'm'; })
            .map(function (p) {
                var hardened = false;
                if (p[p.length - 1] === "'") {
                    hardened = true;
                    p = p.substr(0, p.length - 1);
                }
                if (isNaN(p)) {
                   throw new Error('Not a valid path.');
                }
                var n = parseInt(p);
                if (hardened) { // hardened index
                    n = (n | 0x80000000) >>> 0;
                }
                return n;
            });
    }

    /*
     * Popup management
     */

    function ChromePopup(url, name, width, height) {
        var left = (screen.width - width) / 2;
        var top = (screen.height - height) / 2;
        var opts = {
            id: name,
            innerBounds: {
                width: width,
                height: height,
                left: left,
                top: top
            }
        };

        var closed = function () {
            if (this.onclose) {
                this.onclose(false); // never report as blocked
            }
        }.bind(this);

        var opened = function (w) {
            this.window = w;
            this.window.onClosed.addListener(closed);
        }.bind(this);

        chrome.app.window.create(url, opts, opened);

        this.name = name;
        this.window = null;
        this.onclose = null;
    }

    function ChromeChannel(popup, waiting) {
        var port = null;

        var respond = function (data) {
            if (waiting) {
                var w = waiting;
                waiting = null;
                w(data);
            }
        };

        var setup = function (p) {
            if (p.name === popup.name) {
                port = p;
                port.onMessage.addListener(respond);
                chrome.runtime.onConnect.removeListener(setup);
            }
        };

        chrome.runtime.onConnect.addListener(setup);

        this.respond = respond;

        this.close = function () {
            chrome.runtime.onConnect.removeListener(setup);
            port.onMessage.removeListener(respond);
            port.disconnect();
            port = null;
        };

        this.send = function (value, callback) {
            if (waiting === null) {
                waiting = callback;

                if (port) {
                    port.postMessage(value);
                } else {
                    throw new Error(ERR_CHROME_NOT_CONNECTED);
                }
            } else {
                throw new Error(ERR_ALREADY_WAITING);
            }
        };
    }

    function Popup(url, origin, name, width, height) {
        var left = (screen.width - width) / 2;
        var top = (screen.height - height) / 2;
        var opts =
            'width=' + width +
            ',height=' + height +
            ',left=' + left +
            ',top=' + top +
            ',menubar=no' +
            ',toolbar=no' +
            ',location=no' +
            ',personalbar=no' +
            ',status=no';
        var w = window.open(url, name, opts);

        var interval;
        var blocked = w.closed;
        var iterate = function () {
            if (w.closed) {
                clearInterval(interval);
                if (this.onclose) {
                    this.onclose(blocked);
                }
            }
        }.bind(this);
        interval = setInterval(iterate, 100);

        this.window = w;
        this.origin = origin;
        this.onclose = null;
    }

    function Channel(popup, waiting) {

        var respond = function (data) {
            if (waiting) {
                var w = waiting;
                waiting = null;
                w(data);
            }
        };

        var receive = function (event) {
            var org1 = event.origin.match(/^.+\:\/\/[^\‌​/]+/)[0];
            var org2 = popup.origin.match(/^.+\:\/\/[^\‌​/]+/)[0];
            //if (event.source === popup.window && event.origin === popup.origin) {
            if (event.source === popup.window && org1 === org2) {
                respond(event.data);
            }
        };

        window.addEventListener('message', receive);

        this.respond = respond;

        this.close = function () {
            window.removeEventListener('message', receive);
        };

        this.send = function (value, callback) {
            if (waiting === null) {
                waiting = callback;
                popup.window.postMessage(value, popup.origin);
            } else {
                throw new Error(ERR_ALREADY_WAITING);
            }
        };
    }

    function ConnectedChannel(p) {

        var ready = function () {
            clearTimeout(this.timeout);
            this.popup.onclose = null;
            this.ready = true;
            this.onready();
        }.bind(this);

        var closed = function (blocked) {
            clearTimeout(this.timeout);
            this.channel.close();
            if (blocked) {
                this.onerror(new Error(ERR_WINDOW_BLOCKED));
            } else {
                this.onerror(new Error(ERR_WINDOW_CLOSED));
            }
        }.bind(this);

        var timedout = function () {
            this.popup.onclose = null;
            if (this.popup.window) {
                this.popup.window.close();
            }
            this.channel.close();
            this.onerror(new Error(ERR_TIMED_OUT));
        }.bind(this);

        if (IS_CHROME_APP) {
            this.popup = new ChromePopup(p.chromeUrl, p.name, p.width, p.height);
            this.channel = new ChromeChannel(this.popup, ready);
        } else {
            this.popup = new Popup(p.url, p.origin, p.name, p.width, p.height);
            this.channel = new Channel(this.popup, ready);
        }

        this.timeout = setTimeout(timedout, POPUP_INIT_TIMEOUT);

        this.popup.onclose = closed;

        this.ready = false;
        this.onready = null;
        this.onerror = null;
    }

    function PopupManager() {
        var cc = null;

        var closed = function () {
            cc.channel.respond(new Error(ERR_WINDOW_CLOSED));
            cc.channel.close();
            cc = null;
        };

        var open = function (callback) {
            cc = new ConnectedChannel({
                name: 'trezor-connect',
                width: 600,
                height: 500,
                origin: POPUP_ORIGIN,
                path: POPUP_PATH,
                url: POPUP_URL,
                chromeUrl: CHROME_URL
            });
            cc.onready = function () {
                cc.popup.onclose = closed;
                callback(cc.channel);
            };
            cc.onerror = function (error) {
                cc = null;
                callback(error);
            };
        }.bind(this);

        this.closeAfterSuccess = true;
        this.closeAfterFailure = true;

        this.close = function () {
            if (cc && cc.popup.window) {
                cc.popup.window.close();
            }
        };

        this.waitForChannel = function (callback) {
            if (cc) {
                if (cc.ready) {
                    callback(cc.channel);
                } else {
                    callback(new Error(ERR_ALREADY_WAITING));
                }
            } else {
                try {
                    open(callback);
                } catch (e) {
                    callback(new Error(ERR_WINDOW_BLOCKED));
                }
            }
        };

        this.sendWithChannel = function (message, callback) {
            message.bitcoreURLS = this.bitcoreURLS || null;
            message.currency = this.currency || null;
            message.currencyUnits = this.currencyUnits || null;
            message.coinInfoURL = this.coinInfoURL || null;
            message.accountDiscoveryLimit = this.accountDiscoveryLimit || null;
            message.accountDiscoveryGapLength = this.accountDiscoveryGapLength || null;
            message.accountDiscoveryBip44CoinType = this.accountDiscoveryBip44CoinType || null;

            var respond = function (response) {
                var succ = response.success && this.closeAfterSuccess;
                var fail = !response.success && this.closeAfterFailure;
                if (succ || fail) {
                    this.close();
                }
                callback(response);
            }.bind(this);

            var onresponse = function (response) {
                if (response instanceof Error) {
                    var error = response;
                    respond({ success: false, error: error.message });
                } else {
                    respond(response);
                }
            };

            var onchannel = function (channel) {
                if (channel instanceof Error) {
                    var error = channel;
                    respond({ success: false, error: error.message });
                } else {
                    channel.send(message, onresponse);
                }
            };

            this.waitForChannel(onchannel);
        };
    }

    var exports = new TrezorConnect();

    if (!IS_CHROME_APP && !DISABLE_LOGIN_BUTTONS) {
        exports.renderLoginButtons();
    }

    return exports;

}());

'''
'''--- src/vendors/jszip.min.js ---
/*!

JSZip - A Javascript class for generating and reading zip files
<http://stuartk.com/jszip>

(c) 2009-2014 Stuart Knightley <stuart [at] stuartk.com>
Dual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.

JSZip uses the library pako released under the MIT license :
https://github.com/nodeca/pako/blob/master/LICENSE
*/
!function(a){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=a();else if("function"==typeof define&&define.amd)define([],a);else{var b;b="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,b.JSZip=a()}}(function(){var a;return function b(a,c,d){function e(g,h){if(!c[g]){if(!a[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error("Cannot find module '"+g+"'");throw j.code="MODULE_NOT_FOUND",j}var k=c[g]={exports:{}};a[g][0].call(k.exports,function(b){var c=a[g][1][b];return e(c?c:b)},k,k.exports,b,a,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){"use strict";var d=a("./utils"),e=a("./support"),f="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";c.encode=function(a){for(var b,c,e,g,h,i,j,k=[],l=0,m=a.length,n=m,o="string"!==d.getTypeOf(a);l<a.length;)n=m-l,o?(b=a[l++],c=m>l?a[l++]:0,e=m>l?a[l++]:0):(b=a.charCodeAt(l++),c=m>l?a.charCodeAt(l++):0,e=m>l?a.charCodeAt(l++):0),g=b>>2,h=(3&b)<<4|c>>4,i=n>1?(15&c)<<2|e>>6:64,j=n>2?63&e:64,k.push(f.charAt(g)+f.charAt(h)+f.charAt(i)+f.charAt(j));return k.join("")},c.decode=function(a){var b,c,d,g,h,i,j,k=0,l=0;a=a.replace(/[^A-Za-z0-9\+\/\=]/g,"");var m=3*a.length/4;a.charAt(a.length-1)===f.charAt(64)&&m--,a.charAt(a.length-2)===f.charAt(64)&&m--;var n;for(n=e.uint8array?new Uint8Array(m):new Array(m);k<a.length;)g=f.indexOf(a.charAt(k++)),h=f.indexOf(a.charAt(k++)),i=f.indexOf(a.charAt(k++)),j=f.indexOf(a.charAt(k++)),b=g<<2|h>>4,c=(15&h)<<4|i>>2,d=(3&i)<<6|j,n[l++]=b,64!==i&&(n[l++]=c),64!==j&&(n[l++]=d);return n}},{"./support":27,"./utils":29}],2:[function(a,b,c){"use strict";function d(a,b,c,d,e){this.compressedSize=a,this.uncompressedSize=b,this.crc32=c,this.compression=d,this.compressedContent=e}var e=a("./external"),f=a("./stream/DataWorker"),g=a("./stream/DataLengthProbe"),h=a("./stream/Crc32Probe"),g=a("./stream/DataLengthProbe");d.prototype={getContentWorker:function(){var a=new f(e.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new g("data_length")),b=this;return a.on("end",function(){if(this.streamInfo.data_length!==b.uncompressedSize)throw new Error("Bug : uncompressed data size mismatch")}),a},getCompressedWorker:function(){return new f(e.Promise.resolve(this.compressedContent)).withStreamInfo("compressedSize",this.compressedSize).withStreamInfo("uncompressedSize",this.uncompressedSize).withStreamInfo("crc32",this.crc32).withStreamInfo("compression",this.compression)}},d.createWorkerFrom=function(a,b,c){return a.pipe(new h).pipe(new g("uncompressedSize")).pipe(b.compressWorker(c)).pipe(new g("compressedSize")).withStreamInfo("compression",b)},b.exports=d},{"./external":6,"./stream/Crc32Probe":22,"./stream/DataLengthProbe":23,"./stream/DataWorker":24}],3:[function(a,b,c){"use strict";var d=a("./stream/GenericWorker");c.STORE={magic:"\x00\x00",compressWorker:function(a){return new d("STORE compression")},uncompressWorker:function(){return new d("STORE decompression")}},c.DEFLATE=a("./flate")},{"./flate":7,"./stream/GenericWorker":25}],4:[function(a,b,c){"use strict";function d(){for(var a,b=[],c=0;256>c;c++){a=c;for(var d=0;8>d;d++)a=1&a?3988292384^a>>>1:a>>>1;b[c]=a}return b}function e(a,b,c,d){var e=h,f=d+c;a=-1^a;for(var g=d;f>g;g++)a=a>>>8^e[255&(a^b[g])];return-1^a}function f(a,b,c,d){var e=h,f=d+c;a=-1^a;for(var g=d;f>g;g++)a=a>>>8^e[255&(a^b.charCodeAt(g))];return-1^a}var g=a("./utils"),h=d();b.exports=function(a,b){if("undefined"==typeof a||!a.length)return 0;var c="string"!==g.getTypeOf(a);return c?e(0|b,a,a.length,0):f(0|b,a,a.length,0)}},{"./utils":29}],5:[function(a,b,c){"use strict";c.base64=!1,c.binary=!1,c.dir=!1,c.createFolders=!0,c.date=null,c.compression=null,c.compressionOptions=null,c.comment=null,c.unixPermissions=null,c.dosPermissions=null},{}],6:[function(a,b,c){"use strict";var d=a("es6-promise").Promise;b.exports={Promise:d}},{"es6-promise":37}],7:[function(a,b,c){"use strict";function d(a,b){h.call(this,"FlateWorker/"+a),this._pako=new f[a]({raw:!0,level:b.level||-1}),this.meta={};var c=this;this._pako.onData=function(a){c.push({data:a,meta:c.meta})}}var e="undefined"!=typeof Uint8Array&&"undefined"!=typeof Uint16Array&&"undefined"!=typeof Uint32Array,f=a("pako"),g=a("./utils"),h=a("./stream/GenericWorker"),i=e?"uint8array":"array";c.magic="\b\x00",g.inherits(d,h),d.prototype.processChunk=function(a){this.meta=a.meta,this._pako.push(g.transformTo(i,a.data),!1)},d.prototype.flush=function(){h.prototype.flush.call(this),this._pako.push([],!0)},d.prototype.cleanUp=function(){h.prototype.cleanUp.call(this),this._pako=null},c.compressWorker=function(a){return new d("Deflate",a)},c.uncompressWorker=function(){return new d("Inflate",{})}},{"./stream/GenericWorker":25,"./utils":29,pako:38}],8:[function(a,b,c){"use strict";function d(a,b,c,d){f.call(this,"ZipFileWorker"),this.bytesWritten=0,this.zipComment=b,this.zipPlatform=c,this.encodeFileName=d,this.streamFiles=a,this.accumulate=!1,this.contentBuffer=[],this.dirRecords=[],this.currentSourceOffset=0,this.entriesCount=0,this.currentFile=null,this._sources=[]}var e=a("../utils"),f=a("../stream/GenericWorker"),g=a("../utf8"),h=a("../crc32"),i=a("../signature"),j=function(a,b){var c,d="";for(c=0;b>c;c++)d+=String.fromCharCode(255&a),a>>>=8;return d},k=function(a,b){var c=a;return a||(c=b?16893:33204),(65535&c)<<16},l=function(a,b){return 63&(a||0)},m=function(a,b,c,d,f,m){var n,o,p=a.file,q=a.compression,r=m!==g.utf8encode,s=e.transformTo("string",m(p.name)),t=e.transformTo("string",g.utf8encode(p.name)),u=p.comment,v=e.transformTo("string",m(u)),w=e.transformTo("string",g.utf8encode(u)),x=t.length!==p.name.length,y=w.length!==u.length,z="",A="",B="",C=p.dir,D=p.date,E={crc32:0,compressedSize:0,uncompressedSize:0};b&&!c||(E.crc32=a.crc32,E.compressedSize=a.compressedSize,E.uncompressedSize=a.uncompressedSize);var F=0;b&&(F|=8),r||!x&&!y||(F|=2048);var G=0,H=0;C&&(G|=16),"UNIX"===f?(H=798,G|=k(p.unixPermissions,C)):(H=20,G|=l(p.dosPermissions,C)),n=D.getUTCHours(),n<<=6,n|=D.getUTCMinutes(),n<<=5,n|=D.getUTCSeconds()/2,o=D.getUTCFullYear()-1980,o<<=4,o|=D.getUTCMonth()+1,o<<=5,o|=D.getUTCDate(),x&&(A=j(1,1)+j(h(s),4)+t,z+="up"+j(A.length,2)+A),y&&(B=j(1,1)+j(h(v),4)+w,z+="uc"+j(B.length,2)+B);var I="";I+="\n\x00",I+=j(F,2),I+=q.magic,I+=j(n,2),I+=j(o,2),I+=j(E.crc32,4),I+=j(E.compressedSize,4),I+=j(E.uncompressedSize,4),I+=j(s.length,2),I+=j(z.length,2);var J=i.LOCAL_FILE_HEADER+I+s+z,K=i.CENTRAL_FILE_HEADER+j(H,2)+I+j(v.length,2)+"\x00\x00\x00\x00"+j(G,4)+j(d,4)+s+z+v;return{fileRecord:J,dirRecord:K}},n=function(a,b,c,d,f){var g="",h=e.transformTo("string",f(d));return g=i.CENTRAL_DIRECTORY_END+"\x00\x00\x00\x00"+j(a,2)+j(a,2)+j(b,4)+j(c,4)+j(h.length,2)+h},o=function(a){var b="";return b=i.DATA_DESCRIPTOR+j(a.crc32,4)+j(a.compressedSize,4)+j(a.uncompressedSize,4)};e.inherits(d,f),d.prototype.push=function(a){var b=a.meta.percent||0,c=this.entriesCount,d=this._sources.length;this.accumulate?this.contentBuffer.push(a):(this.bytesWritten+=a.data.length,f.prototype.push.call(this,{data:a.data,meta:{currentFile:this.currentFile,percent:c?(b+100*(c-d-1))/c:100}}))},d.prototype.openedSource=function(a){if(this.currentSourceOffset=this.bytesWritten,this.currentFile=a.file.name,this.streamFiles&&!a.file.dir){var b=m(a,this.streamFiles,!1,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);this.push({data:b.fileRecord,meta:{percent:0}})}else this.accumulate=!0},d.prototype.closedSource=function(a){this.accumulate=!1;var b=m(a,this.streamFiles,!0,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);if(this.dirRecords.push(b.dirRecord),this.streamFiles&&!a.file.dir)this.push({data:o(a),meta:{percent:100}});else for(this.push({data:b.fileRecord,meta:{percent:0}});this.contentBuffer.length;)this.push(this.contentBuffer.shift());this.currentFile=null},d.prototype.flush=function(){for(var a=this.bytesWritten,b=0;b<this.dirRecords.length;b++)this.push({data:this.dirRecords[b],meta:{percent:100}});var c=this.bytesWritten-a,d=n(this.dirRecords.length,c,a,this.zipComment,this.encodeFileName);this.push({data:d,meta:{percent:100}})},d.prototype.prepareNextSource=function(){this.previous=this._sources.shift(),this.openedSource(this.previous.streamInfo),this.isPaused?this.previous.pause():this.previous.resume()},d.prototype.registerPrevious=function(a){this._sources.push(a);var b=this;return a.on("data",function(a){b.processChunk(a)}),a.on("end",function(){b.closedSource(b.previous.streamInfo),b._sources.length?b.prepareNextSource():b.end()}),a.on("error",function(a){b.error(a)}),this},d.prototype.resume=function(){return f.prototype.resume.call(this)?!this.previous&&this._sources.length?(this.prepareNextSource(),!0):this.previous||this._sources.length||this.generatedError?void 0:(this.end(),!0):!1},d.prototype.error=function(a){var b=this._sources;if(!f.prototype.error.call(this,a))return!1;for(var c=0;c<b.length;c++)try{b[c].error(a)}catch(a){}return!0},d.prototype.lock=function(){f.prototype.lock.call(this);for(var a=this._sources,b=0;b<a.length;b++)a[b].lock()},b.exports=d},{"../crc32":4,"../signature":20,"../stream/GenericWorker":25,"../utf8":28,"../utils":29}],9:[function(a,b,c){"use strict";var d=a("../compressions"),e=a("./ZipFileWorker"),f=function(a,b){var c=a||b,e=d[c];if(!e)throw new Error(c+" is not a valid compression method !");return e};c.generateWorker=function(a,b,c){var d=new e(b.streamFiles,c,b.platform,b.encodeFileName),g=0;try{a.forEach(function(a,c){g++;var e=f(c.options.compression,b.compression),h=c.options.compressionOptions||b.compressionOptions||{},i=c.dir,j=c.date;c._compressWorker(e,h).withStreamInfo("file",{name:a,dir:i,date:j,comment:c.comment||"",unixPermissions:c.unixPermissions,dosPermissions:c.dosPermissions}).pipe(d)}),d.entriesCount=g}catch(h){d.error(h)}return d}},{"../compressions":3,"./ZipFileWorker":8}],10:[function(a,b,c){"use strict";function d(){if(!(this instanceof d))return new d;if(arguments.length)throw new Error("The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.");this.files={},this.comment=null,this.root="",this.clone=function(){var a=new d;for(var b in this)"function"!=typeof this[b]&&(a[b]=this[b]);return a}}d.prototype=a("./object"),d.prototype.loadAsync=a("./load"),d.support=a("./support"),d.defaults=a("./defaults"),d.loadAsync=function(a,b){return(new d).loadAsync(a,b)},d.external=a("./external"),b.exports=d},{"./defaults":5,"./external":6,"./load":11,"./object":13,"./support":27}],11:[function(a,b,c){"use strict";function d(a){return new f.Promise(function(b,c){var d=a.decompressed.getContentWorker().pipe(new i);d.on("error",function(a){c(a)}).on("end",function(){d.streamInfo.crc32!==a.decompressed.crc32?c(new Error("Corrupted zip : CRC32 mismatch")):b()}).resume()})}var e=a("./utils"),f=a("./external"),g=a("./utf8"),e=a("./utils"),h=a("./zipEntries"),i=a("./stream/Crc32Probe"),j=a("./nodejsUtils");b.exports=function(a,b){var c=this;return b=e.extend(b||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:g.utf8decode}),j.isNode&&j.isStream(a)?f.Promise.reject(new Error("JSZip can't accept a stream when loading a zip file.")):e.prepareContent("the loaded zip file",a,!0,b.optimizedBinaryString,b.base64).then(function(a){var c=new h(b);return c.load(a),c}).then(function(a){var c=[f.Promise.resolve(a)],e=a.files;if(b.checkCRC32)for(var g=0;g<e.length;g++)c.push(d(e[g]));return f.Promise.all(c)}).then(function(a){for(var d=a.shift(),e=d.files,f=0;f<e.length;f++){var g=e[f];c.file(g.fileNameStr,g.decompressed,{binary:!0,optimizedBinaryString:!0,date:g.date,dir:g.dir,comment:g.fileCommentStr.length?g.fileCommentStr:null,unixPermissions:g.unixPermissions,dosPermissions:g.dosPermissions,createFolders:b.createFolders})}return d.zipComment.length&&(c.comment=d.zipComment),c})}},{"./external":6,"./nodejsUtils":12,"./stream/Crc32Probe":22,"./utf8":28,"./utils":29,"./zipEntries":30}],12:[function(a,b,c){(function(a){"use strict";b.exports={isNode:"undefined"!=typeof a,newBuffer:function(b,c){return new a(b,c)},isBuffer:function(b){return a.isBuffer(b)},isStream:function(a){return a&&"function"==typeof a.on&&"function"==typeof a.pause&&"function"==typeof a.resume}}}).call(this,"undefined"!=typeof Buffer?Buffer:void 0)},{}],13:[function(a,b,c){"use strict";function d(a){return"[object RegExp]"===Object.prototype.toString.call(a)}var e=a("./utf8"),f=a("./utils"),g=a("./stream/GenericWorker"),h=a("./stream/StreamHelper"),i=a("./defaults"),j=a("./compressedObject"),k=a("./zipObject"),l=a("./generate"),m=a("./nodejsUtils"),n=a("./nodejs/NodejsStreamInputAdapter"),o=function(a,b,c){var d,e=f.getTypeOf(b);c=f.extend(c||{},i),c.date=c.date||new Date,null!==c.compression&&(c.compression=c.compression.toUpperCase()),"string"==typeof c.unixPermissions&&(c.unixPermissions=parseInt(c.unixPermissions,8)),c.unixPermissions&&16384&c.unixPermissions&&(c.dir=!0),c.dosPermissions&&16&c.dosPermissions&&(c.dir=!0),c.dir&&(a=q(a)),c.createFolders&&(d=p(a))&&r.call(this,d,!0);var h="string"===e&&c.binary===!1&&c.base64===!1;c.binary=!h;var l=b instanceof j&&0===b.uncompressedSize;(l||c.dir||!b||0===b.length)&&(c.base64=!1,c.binary=!0,b="",c.compression="STORE",e="string");var o=null;o=b instanceof j||b instanceof g?b:m.isNode&&m.isStream(b)?new n(a,b):f.prepareContent(a,b,c.binary,c.optimizedBinaryString,c.base64);var s=new k(a,o,c);this.files[a]=s},p=function(a){"/"===a.slice(-1)&&(a=a.substring(0,a.length-1));var b=a.lastIndexOf("/");return b>0?a.substring(0,b):""},q=function(a){return"/"!==a.slice(-1)&&(a+="/"),a},r=function(a,b){return b="undefined"!=typeof b?b:i.createFolders,a=q(a),this.files[a]||o.call(this,a,null,{dir:!0,createFolders:b}),this.files[a]},s={load:function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},forEach:function(a){var b,c,d;for(b in this.files)this.files.hasOwnProperty(b)&&(d=this.files[b],c=b.slice(this.root.length,b.length),c&&b.slice(0,this.root.length)===this.root&&a(c,d))},filter:function(a){var b=[];return this.forEach(function(c,d){a(c,d)&&b.push(d)}),b},file:function(a,b,c){if(1===arguments.length){if(d(a)){var e=a;return this.filter(function(a,b){return!b.dir&&e.test(a)})}var f=this.files[this.root+a];return f&&!f.dir?f:null}return a=this.root+a,o.call(this,a,b,c),this},folder:function(a){if(!a)return this;if(d(a))return this.filter(function(b,c){return c.dir&&a.test(b)});var b=this.root+a,c=r.call(this,b),e=this.clone();return e.root=c.name,e},remove:function(a){a=this.root+a;var b=this.files[a];if(b||("/"!==a.slice(-1)&&(a+="/"),b=this.files[a]),b&&!b.dir)delete this.files[a];else for(var c=this.filter(function(b,c){return c.name.slice(0,a.length)===a}),d=0;d<c.length;d++)delete this.files[c[d].name];return this},generate:function(a){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},generateInternalStream:function(a){var b,c={};try{if(c=f.extend(a||{},{streamFiles:!1,compression:"STORE",compressionOptions:null,type:"",platform:"DOS",comment:null,mimeType:"application/zip",encodeFileName:e.utf8encode}),c.type=c.type.toLowerCase(),c.compression=c.compression.toUpperCase(),"binarystring"===c.type&&(c.type="string"),!c.type)throw new Error("No output type specified.");f.checkSupport(c.type),"darwin"!==a.platform&&"freebsd"!==a.platform&&"linux"!==a.platform&&"sunos"!==a.platform||(a.platform="UNIX"),"win32"===a.platform&&(a.platform="DOS");var d=c.comment||this.comment||"";b=l.generateWorker(this,c,d)}catch(i){b=new g("error"),b.error(i)}return new h(b,c.type||"string",c.mimeType)},generateAsync:function(a,b){return this.generateInternalStream(a).accumulate(b)},generateNodeStream:function(a,b){return a=a||{},a.type||(a.type="nodebuffer"),this.generateInternalStream(a).toNodejsStream(b)}};b.exports=s},{"./compressedObject":2,"./defaults":5,"./generate":9,"./nodejs/NodejsStreamInputAdapter":35,"./nodejsUtils":12,"./stream/GenericWorker":25,"./stream/StreamHelper":26,"./utf8":28,"./utils":29,"./zipObject":32}],14:[function(a,b,c){"use strict";function d(a){e.call(this,a);for(var b=0;b<this.data.length;b++)a[b]=255&a[b]}var e=a("./DataReader"),f=a("../utils");f.inherits(d,e),d.prototype.byteAt=function(a){return this.data[this.zero+a]},d.prototype.lastIndexOfSignature=function(a){for(var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=this.length-4;f>=0;--f)if(this.data[f]===b&&this.data[f+1]===c&&this.data[f+2]===d&&this.data[f+3]===e)return f-this.zero;return-1},d.prototype.readAndCheckSignature=function(a){var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=this.readData(4);return b===f[0]&&c===f[1]&&d===f[2]&&e===f[3]},d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return[];var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{"../utils":29,"./DataReader":15}],15:[function(a,b,c){"use strict";function d(a){this.data=a,this.length=a.length,this.index=0,this.zero=0}var e=a("../utils");d.prototype={checkOffset:function(a){this.checkIndex(this.index+a)},checkIndex:function(a){if(this.length<this.zero+a||0>a)throw new Error("End of data reached (data length = "+this.length+", asked index = "+a+"). Corrupted zip ?")},setIndex:function(a){this.checkIndex(a),this.index=a},skip:function(a){this.setIndex(this.index+a)},byteAt:function(a){},readInt:function(a){var b,c=0;for(this.checkOffset(a),b=this.index+a-1;b>=this.index;b--)c=(c<<8)+this.byteAt(b);return this.index+=a,c},readString:function(a){return e.transformTo("string",this.readData(a))},readData:function(a){},lastIndexOfSignature:function(a){},readAndCheckSignature:function(a){},readDate:function(){var a=this.readInt(4);return new Date(Date.UTC((a>>25&127)+1980,(a>>21&15)-1,a>>16&31,a>>11&31,a>>5&63,(31&a)<<1))}},b.exports=d},{"../utils":29}],16:[function(a,b,c){"use strict";function d(a){e.call(this,a)}var e=a("./Uint8ArrayReader"),f=a("../utils");f.inherits(d,e),d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{"../utils":29,"./Uint8ArrayReader":18}],17:[function(a,b,c){"use strict";function d(a){e.call(this,a)}var e=a("./DataReader"),f=a("../utils");f.inherits(d,e),d.prototype.byteAt=function(a){return this.data.charCodeAt(this.zero+a)},d.prototype.lastIndexOfSignature=function(a){return this.data.lastIndexOf(a)-this.zero},d.prototype.readAndCheckSignature=function(a){var b=this.readData(4);return a===b},d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{"../utils":29,"./DataReader":15}],18:[function(a,b,c){"use strict";function d(a){e.call(this,a)}var e=a("./ArrayReader"),f=a("../utils");f.inherits(d,e),d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return new Uint8Array(0);var b=this.data.subarray(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{"../utils":29,"./ArrayReader":14}],19:[function(a,b,c){"use strict";var d=a("../utils"),e=a("../support"),f=a("./ArrayReader"),g=a("./StringReader"),h=a("./NodeBufferReader"),i=a("./Uint8ArrayReader");b.exports=function(a){var b=d.getTypeOf(a);return d.checkSupport(b),"string"!==b||e.uint8array?"nodebuffer"===b?new h(a):e.uint8array?new i(d.transformTo("uint8array",a)):new f(d.transformTo("array",a)):new g(a)}},{"../support":27,"../utils":29,"./ArrayReader":14,"./NodeBufferReader":16,"./StringReader":17,"./Uint8ArrayReader":18}],20:[function(a,b,c){"use strict";c.LOCAL_FILE_HEADER="PK",c.CENTRAL_FILE_HEADER="PK",c.CENTRAL_DIRECTORY_END="PK",c.ZIP64_CENTRAL_DIRECTORY_LOCATOR="PK",c.ZIP64_CENTRAL_DIRECTORY_END="PK",c.DATA_DESCRIPTOR="PK\b"},{}],21:[function(a,b,c){"use strict";function d(a){e.call(this,"ConvertWorker to "+a),this.destType=a}var e=a("./GenericWorker"),f=a("../utils");f.inherits(d,e),d.prototype.processChunk=function(a){this.push({data:f.transformTo(this.destType,a.data),meta:a.meta})},b.exports=d},{"../utils":29,"./GenericWorker":25}],22:[function(a,b,c){"use strict";function d(){e.call(this,"Crc32Probe")}var e=a("./GenericWorker"),f=a("../crc32"),g=a("../utils");g.inherits(d,e),d.prototype.processChunk=function(a){this.streamInfo.crc32=f(a.data,this.streamInfo.crc32||0),this.push(a)},b.exports=d},{"../crc32":4,"../utils":29,"./GenericWorker":25}],23:[function(a,b,c){"use strict";function d(a){f.call(this,"DataLengthProbe for "+a),this.propName=a,this.withStreamInfo(a,0)}var e=a("../utils"),f=a("./GenericWorker");e.inherits(d,f),d.prototype.processChunk=function(a){if(a){var b=this.streamInfo[this.propName]||0;this.streamInfo[this.propName]=b+a.data.length}f.prototype.processChunk.call(this,a)},b.exports=d},{"../utils":29,"./GenericWorker":25}],24:[function(a,b,c){"use strict";function d(a){f.call(this,"DataWorker");var b=this;this.dataIsReady=!1,this.index=0,this.max=0,this.data=null,this.type="",this._tickScheduled=!1,a.then(function(a){b.dataIsReady=!0,b.data=a,b.max=a&&a.length||0,b.type=e.getTypeOf(a),b.isPaused||b._tickAndRepeat()},function(a){b.error(a)})}var e=a("../utils"),f=a("./GenericWorker"),g=16384;e.inherits(d,f),d.prototype.cleanUp=function(){f.prototype.cleanUp.call(this),this.data=null},d.prototype.resume=function(){return f.prototype.resume.call(this)?(!this._tickScheduled&&this.dataIsReady&&(this._tickScheduled=!0,e.delay(this._tickAndRepeat,[],this)),!0):!1},d.prototype._tickAndRepeat=function(){this._tickScheduled=!1,this.isPaused||this.isFinished||(this._tick(),this.isFinished||(e.delay(this._tickAndRepeat,[],this),this._tickScheduled=!0))},d.prototype._tick=function(){if(this.isPaused||this.isFinished)return!1;var a=g,b=null,c=Math.min(this.max,this.index+a);if(this.index>=this.max)return this.end();switch(this.type){case"string":b=this.data.substring(this.index,c);break;case"uint8array":b=this.data.subarray(this.index,c);break;case"array":case"nodebuffer":b=this.data.slice(this.index,c)}return this.index=c,this.push({data:b,meta:{percent:this.max?this.index/this.max*100:0}})},b.exports=d},{"../utils":29,"./GenericWorker":25}],25:[function(a,b,c){"use strict";function d(a){this.name=a||"default",this.streamInfo={},this.generatedError=null,this.extraStreamInfo={},this.isPaused=!0,this.isFinished=!1,this.isLocked=!1,this._listeners={data:[],end:[],error:[]},this.previous=null}d.prototype={push:function(a){this.emit("data",a)},end:function(){if(this.isFinished)return!1;this.flush();try{this.emit("end"),this.cleanUp(),this.isFinished=!0}catch(a){this.emit("error",a)}return!0},error:function(a){return this.isFinished?!1:(this.isPaused?this.generatedError=a:(this.isFinished=!0,this.emit("error",a),this.previous&&this.previous.error(a),this.cleanUp()),!0)},on:function(a,b){return this._listeners[a].push(b),this},cleanUp:function(){this.streamInfo=this.generatedError=this.extraStreamInfo=null,this._listeners=[]},emit:function(a,b){if(this._listeners[a])for(var c=0;c<this._listeners[a].length;c++)this._listeners[a][c].call(this,b)},pipe:function(a){return a.registerPrevious(this)},registerPrevious:function(a){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.streamInfo=a.streamInfo,this.mergeStreamInfo(),this.previous=a;var b=this;return a.on("data",function(a){b.processChunk(a)}),a.on("end",function(){b.end()}),a.on("error",function(a){b.error(a)}),this},pause:function(){return this.isPaused||this.isFinished?!1:(this.isPaused=!0,this.previous&&this.previous.pause(),!0)},resume:function(){if(!this.isPaused||this.isFinished)return!1;this.isPaused=!1;var a=!1;return this.generatedError&&(this.error(this.generatedError),a=!0),this.previous&&this.previous.resume(),!a},flush:function(){},processChunk:function(a){this.push(a)},withStreamInfo:function(a,b){return this.extraStreamInfo[a]=b,this.mergeStreamInfo(),this},mergeStreamInfo:function(){for(var a in this.extraStreamInfo)this.extraStreamInfo.hasOwnProperty(a)&&(this.streamInfo[a]=this.extraStreamInfo[a])},lock:function(){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.isLocked=!0,this.previous&&this.previous.lock()},toString:function(){var a="Worker "+this.name;return this.previous?this.previous+" -> "+a:a}},b.exports=d},{}],26:[function(a,b,c){(function(c){"use strict";function d(a,b,c){switch(a){case"blob":return h.newBlob(h.transformTo("arraybuffer",b),c);case"base64":return k.encode(b);default:return h.transformTo(a,b)}}function e(a,b){var d,e=0,f=null,g=0;for(d=0;d<b.length;d++)g+=b[d].length;switch(a){case"string":return b.join("");case"array":return Array.prototype.concat.apply([],b);case"uint8array":for(f=new Uint8Array(g),d=0;d<b.length;d++)f.set(b[d],e),e+=b[d].length;return f;case"nodebuffer":return c.concat(b);default:throw new Error("concat : unsupported type '"+a+"'")}}function f(a,b){return new m.Promise(function(c,f){var g=[],h=a._internalType,i=a._outputType,j=a._mimeType;a.on("data",function(a,c){g.push(a),b&&b(c)}).on("error",function(a){g=[],f(a)}).on("end",function(){try{var a=d(i,e(h,g),j);c(a)}catch(b){f(b)}g=[]}).resume()})}function g(a,b,c){var d=b;switch(b){case"blob":case"arraybuffer":d="uint8array";break;case"base64":d="string"}try{this._internalType=d,this._outputType=b,this._mimeType=c,h.checkSupport(d),this._worker=a.pipe(new i(d)),a.lock()}catch(e){this._worker=new j("error"),this._worker.error(e)}}var h=a("../utils"),i=a("./ConvertWorker"),j=a("./GenericWorker"),k=a("../base64"),l=a("../nodejs/NodejsStreamOutputAdapter"),m=a("../external");g.prototype={accumulate:function(a){return f(this,a)},on:function(a,b){var c=this;return"data"===a?this._worker.on(a,function(a){b.call(c,a.data,a.meta)}):this._worker.on(a,function(){h.delay(b,arguments,c)}),this},resume:function(){return h.delay(this._worker.resume,[],this._worker),this},pause:function(){return this._worker.pause(),this},toNodejsStream:function(a){if(h.checkSupport("nodestream"),"nodebuffer"!==this._outputType)throw new Error(this._outputType+" is not supported by this method");return new l(this,{objectMode:"nodebuffer"!==this._outputType},a)}},b.exports=g}).call(this,"undefined"!=typeof Buffer?Buffer:void 0)},{"../base64":1,"../external":6,"../nodejs/NodejsStreamOutputAdapter":35,"../utils":29,"./ConvertWorker":21,"./GenericWorker":25}],27:[function(a,b,c){(function(b){"use strict";if(c.base64=!0,c.array=!0,c.string=!0,c.arraybuffer="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof Uint8Array,c.nodebuffer="undefined"!=typeof b,c.uint8array="undefined"!=typeof Uint8Array,"undefined"==typeof ArrayBuffer)c.blob=!1;else{var d=new ArrayBuffer(0);try{c.blob=0===new Blob([d],{type:"application/zip"}).size}catch(e){try{var f=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,g=new f;g.append(d),c.blob=0===g.getBlob("application/zip").size}catch(e){c.blob=!1}}}c.nodestream=!!a("./nodejs/NodejsStreamOutputAdapter").prototype}).call(this,"undefined"!=typeof Buffer?Buffer:void 0)},{"./nodejs/NodejsStreamOutputAdapter":35}],28:[function(a,b,c){"use strict";function d(){i.call(this,"utf-8 decode"),this.leftOver=null}function e(){i.call(this,"utf-8 encode")}for(var f=a("./utils"),g=a("./support"),h=a("./nodejsUtils"),i=a("./stream/GenericWorker"),j=new Array(256),k=0;256>k;k++)j[k]=k>=252?6:k>=248?5:k>=240?4:k>=224?3:k>=192?2:1;j[254]=j[254]=1;var l=function(a){var b,c,d,e,f,h=a.length,i=0;for(e=0;h>e;e++)c=a.charCodeAt(e),55296===(64512&c)&&h>e+1&&(d=a.charCodeAt(e+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),e++)),i+=128>c?1:2048>c?2:65536>c?3:4;for(b=g.uint8array?new Uint8Array(i):new Array(i),f=0,e=0;i>f;e++)c=a.charCodeAt(e),55296===(64512&c)&&h>e+1&&(d=a.charCodeAt(e+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),e++)),128>c?b[f++]=c:2048>c?(b[f++]=192|c>>>6,b[f++]=128|63&c):65536>c?(b[f++]=224|c>>>12,b[f++]=128|c>>>6&63,b[f++]=128|63&c):(b[f++]=240|c>>>18,b[f++]=128|c>>>12&63,b[f++]=128|c>>>6&63,b[f++]=128|63&c);return b},m=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return 0>c?b:0===c?b:c+j[a[c]]>b?c:b},n=function(a){var b,c,d,e,g=a.length,h=new Array(2*g);for(c=0,b=0;g>b;)if(d=a[b++],128>d)h[c++]=d;else if(e=j[d],e>4)h[c++]=65533,b+=e-1;else{for(d&=2===e?31:3===e?15:7;e>1&&g>b;)d=d<<6|63&a[b++],e--;e>1?h[c++]=65533:65536>d?h[c++]=d:(d-=65536,h[c++]=55296|d>>10&1023,h[c++]=56320|1023&d)}return h.length!==c&&(h.subarray?h=h.subarray(0,c):h.length=c),f.applyFromCharCode(h)};c.utf8encode=function(a){return g.nodebuffer?h.newBuffer(a,"utf-8"):l(a)},c.utf8decode=function(a){return g.nodebuffer?f.transformTo("nodebuffer",a).toString("utf-8"):(a=f.transformTo(g.uint8array?"uint8array":"array",a),n(a))},f.inherits(d,i),d.prototype.processChunk=function(a){var b=f.transformTo(g.uint8array?"uint8array":"array",a.data);if(this.leftOver&&this.leftOver.length){if(g.uint8array){var d=b;b=new Uint8Array(d.length+this.leftOver.length),b.set(this.leftOver,0),b.set(d,this.leftOver.length)}else b=this.leftOver.concat(b);this.leftOver=null}var e=m(b),h=b;e!==b.length&&(g.uint8array?(h=b.subarray(0,e),this.leftOver=b.subarray(e,b.length)):(h=b.slice(0,e),this.leftOver=b.slice(e,b.length))),this.push({data:c.utf8decode(h),meta:a.meta})},d.prototype.flush=function(){this.leftOver&&this.leftOver.length&&(this.push({data:c.utf8decode(this.leftOver),meta:{}}),this.leftOver=null)},c.Utf8DecodeWorker=d,f.inherits(e,i),e.prototype.processChunk=function(a){this.push({data:c.utf8encode(a.data),meta:a.meta})},c.Utf8EncodeWorker=e},{"./nodejsUtils":12,"./stream/GenericWorker":25,"./support":27,"./utils":29}],29:[function(a,b,c){"use strict";function d(a){var b=null;return b=i.uint8array?new Uint8Array(a.length):new Array(a.length),f(a,b)}function e(a){return a}function f(a,b){for(var c=0;c<a.length;++c)b[c]=255&a.charCodeAt(c);return b}function g(a){var b=65536,d=c.getTypeOf(a),e=!0;if("uint8array"===d?e=n.applyCanBeUsed.uint8array:"nodebuffer"===d&&(e=n.applyCanBeUsed.nodebuffer),e)for(;b>1;)try{return n.stringifyByChunk(a,d,b)}catch(f){b=Math.floor(b/2)}return n.stringifyByChar(a)}function h(a,b){for(var c=0;c<a.length;c++)b[c]=a[c];return b}var i=a("./support"),j=a("./base64"),k=a("./nodejsUtils"),l=a("asap"),m=a("./external");c.newBlob=function(a,b){c.checkSupport("blob");try{return new Blob([a],{type:b})}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;return f.append(a),f.getBlob(b)}catch(d){throw new Error("Bug : can't construct the Blob.")}}};var n={stringifyByChunk:function(a,b,c){var d=[],e=0,f=a.length;if(c>=f)return String.fromCharCode.apply(null,a);for(;f>e;)"array"===b||"nodebuffer"===b?d.push(String.fromCharCode.apply(null,a.slice(e,Math.min(e+c,f)))):d.push(String.fromCharCode.apply(null,a.subarray(e,Math.min(e+c,f)))),e+=c;return d.join("")},stringifyByChar:function(a){for(var b="",c=0;c<a.length;c++)b+=String.fromCharCode(a[c]);return b},applyCanBeUsed:{uint8array:function(){try{return i.uint8array&&1===String.fromCharCode.apply(null,new Uint8Array(1)).length}catch(a){return!1}}(),nodebuffer:function(){try{return i.nodebuffer&&1===String.fromCharCode.apply(null,k.newBuffer(1)).length}catch(a){return!1}}()}};c.applyFromCharCode=g;var o={};o.string={string:e,array:function(a){return f(a,new Array(a.length))},arraybuffer:function(a){return o.string.uint8array(a).buffer},uint8array:function(a){return f(a,new Uint8Array(a.length))},nodebuffer:function(a){return f(a,k.newBuffer(a.length))}},o.array={string:g,array:e,arraybuffer:function(a){return new Uint8Array(a).buffer},uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return k.newBuffer(a)}},o.arraybuffer={string:function(a){return g(new Uint8Array(a));
},array:function(a){return h(new Uint8Array(a),new Array(a.byteLength))},arraybuffer:e,uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return k.newBuffer(new Uint8Array(a))}},o.uint8array={string:g,array:function(a){return h(a,new Array(a.length))},arraybuffer:function(a){return a.buffer},uint8array:e,nodebuffer:function(a){return k.newBuffer(a)}},o.nodebuffer={string:g,array:function(a){return h(a,new Array(a.length))},arraybuffer:function(a){return o.nodebuffer.uint8array(a).buffer},uint8array:function(a){return h(a,new Uint8Array(a.length))},nodebuffer:e},c.transformTo=function(a,b){if(b||(b=""),!a)return b;c.checkSupport(a);var d=c.getTypeOf(b),e=o[d][a](b);return e},c.getTypeOf=function(a){return"string"==typeof a?"string":"[object Array]"===Object.prototype.toString.call(a)?"array":i.nodebuffer&&k.isBuffer(a)?"nodebuffer":i.uint8array&&a instanceof Uint8Array?"uint8array":i.arraybuffer&&a instanceof ArrayBuffer?"arraybuffer":void 0},c.checkSupport=function(a){var b=i[a.toLowerCase()];if(!b)throw new Error(a+" is not supported by this platform")},c.MAX_VALUE_16BITS=65535,c.MAX_VALUE_32BITS=-1,c.pretty=function(a){var b,c,d="";for(c=0;c<(a||"").length;c++)b=a.charCodeAt(c),d+="\\x"+(16>b?"0":"")+b.toString(16).toUpperCase();return d},c.delay=function(a,b,c){l(function(){a.apply(c||null,b||[])})},c.inherits=function(a,b){var c=function(){};c.prototype=b.prototype,a.prototype=new c},c.extend=function(){var a,b,c={};for(a=0;a<arguments.length;a++)for(b in arguments[a])arguments[a].hasOwnProperty(b)&&"undefined"==typeof c[b]&&(c[b]=arguments[a][b]);return c},c.prepareContent=function(a,b,e,f,g){var h=null;return h=i.blob&&b instanceof Blob&&"undefined"!=typeof FileReader?new m.Promise(function(a,c){var d=new FileReader;d.onload=function(b){a(b.target.result)},d.onerror=function(a){c(a.target.error)},d.readAsArrayBuffer(b)}):m.Promise.resolve(b),h.then(function(b){var h=c.getTypeOf(b);return h?("arraybuffer"===h?b=c.transformTo("uint8array",b):"string"===h&&(g?b=j.decode(b):e&&f!==!0&&(b=d(b))),b):m.Promise.reject(new Error("The data of '"+a+"' is in an unsupported format !"))})}},{"./base64":1,"./external":6,"./nodejsUtils":12,"./support":27,asap:33}],30:[function(a,b,c){"use strict";function d(a){this.files=[],this.loadOptions=a}var e=a("./reader/readerFor"),f=a("./utils"),g=a("./signature"),h=a("./zipEntry"),i=(a("./utf8"),a("./support"));d.prototype={checkSignature:function(a){if(!this.reader.readAndCheckSignature(a)){this.reader.index-=4;var b=this.reader.readString(4);throw new Error("Corrupted zip or bug : unexpected signature ("+f.pretty(b)+", expected "+f.pretty(a)+")")}},isSignature:function(a,b){var c=this.reader.index;this.reader.setIndex(a);var d=this.reader.readString(4),e=d===b;return this.reader.setIndex(c),e},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var a=this.reader.readData(this.zipCommentLength),b=i.uint8array?"uint8array":"array",c=f.transformTo(b,a);this.zipComment=this.loadOptions.decodeFileName(c)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.reader.skip(4),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var a,b,c,d=this.zip64EndOfCentralSize-44,e=0;d>e;)a=this.reader.readInt(2),b=this.reader.readInt(4),c=this.reader.readData(b),this.zip64ExtensibleData[a]={id:a,length:b,value:c}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),this.disksCount>1)throw new Error("Multi-volumes zip are not supported")},readLocalFiles:function(){var a,b;for(a=0;a<this.files.length;a++)b=this.files[a],this.reader.setIndex(b.localHeaderOffset),this.checkSignature(g.LOCAL_FILE_HEADER),b.readLocalPart(this.reader),b.handleUTF8(),b.processAttributes()},readCentralDir:function(){var a;for(this.reader.setIndex(this.centralDirOffset);this.reader.readAndCheckSignature(g.CENTRAL_FILE_HEADER);)a=new h({zip64:this.zip64},this.loadOptions),a.readCentralPart(this.reader),this.files.push(a);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error("Corrupted zip or bug: expected "+this.centralDirRecords+" records in central dir, got "+this.files.length)},readEndOfCentral:function(){var a=this.reader.lastIndexOfSignature(g.CENTRAL_DIRECTORY_END);if(0>a){var b=!this.isSignature(0,g.LOCAL_FILE_HEADER);throw b?new Error("Can't find end of central directory : is this a zip file ? If it is, see http://stuk.github.io/jszip/documentation/howto/read_zip.html"):new Error("Corrupted zip : can't find end of central directory")}this.reader.setIndex(a);var c=a;if(this.checkSignature(g.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===f.MAX_VALUE_16BITS||this.diskWithCentralDirStart===f.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===f.MAX_VALUE_16BITS||this.centralDirRecords===f.MAX_VALUE_16BITS||this.centralDirSize===f.MAX_VALUE_32BITS||this.centralDirOffset===f.MAX_VALUE_32BITS){if(this.zip64=!0,a=this.reader.lastIndexOfSignature(g.ZIP64_CENTRAL_DIRECTORY_LOCATOR),0>a)throw new Error("Corrupted zip : can't find the ZIP64 end of central directory locator");if(this.reader.setIndex(a),this.checkSignature(g.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,g.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(g.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error("Corrupted zip : can't find the ZIP64 end of central directory");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(g.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var d=this.centralDirOffset+this.centralDirSize;this.zip64&&(d+=20,d+=12+this.zip64EndOfCentralSize);var e=c-d;if(e>0)this.isSignature(c,g.CENTRAL_FILE_HEADER)||(this.reader.zero=e);else if(0>e)throw new Error("Corrupted zip: missing "+Math.abs(e)+" bytes.")},prepareReader:function(a){this.reader=e(a)},load:function(a){this.prepareReader(a),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},b.exports=d},{"./reader/readerFor":19,"./signature":20,"./support":27,"./utf8":28,"./utils":29,"./zipEntry":31}],31:[function(a,b,c){"use strict";function d(a,b){this.options=a,this.loadOptions=b}var e=a("./reader/readerFor"),f=a("./utils"),g=a("./compressedObject"),h=a("./crc32"),i=a("./utf8"),j=a("./compressions"),k=a("./support"),l=0,m=3,n=function(a){for(var b in j)if(j.hasOwnProperty(b)&&j[b].magic===a)return j[b];return null};d.prototype={isEncrypted:function(){return 1===(1&this.bitFlag)},useUTF8:function(){return 2048===(2048&this.bitFlag)},readLocalPart:function(a){var b,c;if(a.skip(22),this.fileNameLength=a.readInt(2),c=a.readInt(2),this.fileName=a.readData(this.fileNameLength),a.skip(c),-1===this.compressedSize||-1===this.uncompressedSize)throw new Error("Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize === -1 || uncompressedSize === -1)");if(b=n(this.compressionMethod),null===b)throw new Error("Corrupted zip : compression "+f.pretty(this.compressionMethod)+" unknown (inner file : "+f.transformTo("string",this.fileName)+")");this.decompressed=new g(this.compressedSize,this.uncompressedSize,this.crc32,b,a.readData(this.compressedSize))},readCentralPart:function(a){this.versionMadeBy=a.readInt(2),a.skip(2),this.bitFlag=a.readInt(2),this.compressionMethod=a.readString(2),this.date=a.readDate(),this.crc32=a.readInt(4),this.compressedSize=a.readInt(4),this.uncompressedSize=a.readInt(4);var b=a.readInt(2);if(this.extraFieldsLength=a.readInt(2),this.fileCommentLength=a.readInt(2),this.diskNumberStart=a.readInt(2),this.internalFileAttributes=a.readInt(2),this.externalFileAttributes=a.readInt(4),this.localHeaderOffset=a.readInt(4),this.isEncrypted())throw new Error("Encrypted zip are not supported");a.skip(b),this.readExtraFields(a),this.parseZIP64ExtraField(a),this.fileComment=a.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var a=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),a===l&&(this.dosPermissions=63&this.externalFileAttributes),a===m&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||"/"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(a){if(this.extraFields[1]){var b=e(this.extraFields[1].value);this.uncompressedSize===f.MAX_VALUE_32BITS&&(this.uncompressedSize=b.readInt(8)),this.compressedSize===f.MAX_VALUE_32BITS&&(this.compressedSize=b.readInt(8)),this.localHeaderOffset===f.MAX_VALUE_32BITS&&(this.localHeaderOffset=b.readInt(8)),this.diskNumberStart===f.MAX_VALUE_32BITS&&(this.diskNumberStart=b.readInt(4))}},readExtraFields:function(a){var b,c,d,e=a.index+this.extraFieldsLength;for(this.extraFields||(this.extraFields={});a.index<e;)b=a.readInt(2),c=a.readInt(2),d=a.readData(c),this.extraFields[b]={id:b,length:c,value:d}},handleUTF8:function(){var a=k.uint8array?"uint8array":"array";if(this.useUTF8())this.fileNameStr=i.utf8decode(this.fileName),this.fileCommentStr=i.utf8decode(this.fileComment);else{var b=this.findExtraFieldUnicodePath();if(null!==b)this.fileNameStr=b;else{var c=f.transformTo(a,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(c)}var d=this.findExtraFieldUnicodeComment();if(null!==d)this.fileCommentStr=d;else{var e=f.transformTo(a,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(e)}}},findExtraFieldUnicodePath:function(){var a=this.extraFields[28789];if(a){var b=e(a.value);return 1!==b.readInt(1)?null:h(this.fileName)!==b.readInt(4)?null:i.utf8decode(b.readData(a.length-5))}return null},findExtraFieldUnicodeComment:function(){var a=this.extraFields[25461];if(a){var b=e(a.value);return 1!==b.readInt(1)?null:h(this.fileComment)!==b.readInt(4)?null:i.utf8decode(b.readData(a.length-5))}return null}},b.exports=d},{"./compressedObject":2,"./compressions":3,"./crc32":4,"./reader/readerFor":19,"./support":27,"./utf8":28,"./utils":29}],32:[function(a,b,c){"use strict";var d=a("./stream/StreamHelper"),e=a("./stream/DataWorker"),f=a("./utf8"),g=a("./compressedObject"),h=a("./stream/GenericWorker"),i=function(a,b,c){this.name=a,this.dir=c.dir,this.date=c.date,this.comment=c.comment,this.unixPermissions=c.unixPermissions,this.dosPermissions=c.dosPermissions,this._data=b,this._dataBinary=c.binary,this.options={compression:c.compression,compressionOptions:c.compressionOptions}};i.prototype={internalStream:function(a){var b=a.toLowerCase(),c="string"===b||"text"===b;"binarystring"!==b&&"text"!==b||(b="string");var e=this._decompressWorker(),g=!this._dataBinary;return g&&!c&&(e=e.pipe(new f.Utf8EncodeWorker)),!g&&c&&(e=e.pipe(new f.Utf8DecodeWorker)),new d(e,b,"")},async:function(a,b){return this.internalStream(a).accumulate(b)},nodeStream:function(a,b){return this.internalStream(a||"nodebuffer").toNodejsStream(b)},_compressWorker:function(a,b){if(this._data instanceof g&&this._data.compression.magic===a.magic)return this._data.getCompressedWorker();var c=this._decompressWorker();return this._dataBinary||(c=c.pipe(new f.Utf8EncodeWorker)),g.createWorkerFrom(c,a,b)},_decompressWorker:function(){return this._data instanceof g?this._data.getContentWorker():this._data instanceof h?this._data:new e(this._data)}};for(var j=["asText","asBinary","asNodeBuffer","asUint8Array","asArrayBuffer"],k=function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},l=0;l<j.length;l++)i.prototype[j[l]]=k;b.exports=i},{"./compressedObject":2,"./stream/DataWorker":24,"./stream/GenericWorker":25,"./stream/StreamHelper":26,"./utf8":28}],33:[function(a,b,c){"use strict";function d(){if(i.length)throw i.shift()}function e(a){var b;b=h.length?h.pop():new f,b.task=a,g(b)}function f(){this.task=null}var g=a("./raw"),h=[],i=[],j=g.makeRequestCallFromTimer(d);b.exports=e,f.prototype.call=function(){try{this.task.call()}catch(a){e.onerror?e.onerror(a):(i.push(a),j())}finally{this.task=null,h[h.length]=this}}},{"./raw":34}],34:[function(a,b,c){(function(a){"use strict";function c(a){h.length||(g(),i=!0),h[h.length]=a}function d(){for(;j<h.length;){var a=j;if(j+=1,h[a].call(),j>k){for(var b=0,c=h.length-j;c>b;b++)h[b]=h[b+j];h.length-=j,j=0}}h.length=0,j=0,i=!1}function e(a){var b=1,c=new l(a),d=document.createTextNode("");return c.observe(d,{characterData:!0}),function(){b=-b,d.data=b}}function f(a){return function(){function b(){clearTimeout(c),clearInterval(d),a()}var c=setTimeout(b,0),d=setInterval(b,50)}}b.exports=c;var g,h=[],i=!1,j=0,k=1024,l=a.MutationObserver||a.WebKitMutationObserver;g="function"==typeof l?e(d):f(d),c.requestFlush=g,c.makeRequestCallFromTimer=f}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],35:[function(a,b,c){},{}],36:[function(a,b,c){function d(){k=!1,h.length?j=h.concat(j):l=-1,j.length&&e()}function e(){if(!k){var a=setTimeout(d);k=!0;for(var b=j.length;b;){for(h=j,j=[];++l<b;)h&&h[l].run();l=-1,b=j.length}h=null,k=!1,clearTimeout(a)}}function f(a,b){this.fun=a,this.array=b}function g(){}var h,i=b.exports={},j=[],k=!1,l=-1;i.nextTick=function(a){var b=new Array(arguments.length-1);if(arguments.length>1)for(var c=1;c<arguments.length;c++)b[c-1]=arguments[c];j.push(new f(a,b)),1!==j.length||k||setTimeout(e,0)},f.prototype.run=function(){this.fun.apply(null,this.array)},i.title="browser",i.browser=!0,i.env={},i.argv=[],i.version="",i.versions={},i.on=g,i.addListener=g,i.once=g,i.off=g,i.removeListener=g,i.removeAllListeners=g,i.emit=g,i.binding=function(a){throw new Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(a){throw new Error("process.chdir is not supported")},i.umask=function(){return 0}},{}],37:[function(b,c,d){(function(d,e){(function(){"use strict";function f(a){return"function"==typeof a||"object"==typeof a&&null!==a}function g(a){return"function"==typeof a}function h(a){return"object"==typeof a&&null!==a}function i(a){U=a}function j(a){Y=a}function k(){return function(){d.nextTick(p)}}function l(){return function(){T(p)}}function m(){var a=0,b=new _(p),c=document.createTextNode("");return b.observe(c,{characterData:!0}),function(){c.data=a=++a%2}}function n(){var a=new MessageChannel;return a.port1.onmessage=p,function(){a.port2.postMessage(0)}}function o(){return function(){setTimeout(p,1)}}function p(){for(var a=0;X>a;a+=2){var b=ca[a],c=ca[a+1];b(c),ca[a]=void 0,ca[a+1]=void 0}X=0}function q(){try{var a=b,c=a("vertx");return T=c.runOnLoop||c.runOnContext,l()}catch(d){return o()}}function r(){}function s(){return new TypeError("You cannot resolve a promise with itself")}function t(){return new TypeError("A promises callback cannot return that same promise.")}function u(a){try{return a.then}catch(b){return ga.error=b,ga}}function v(a,b,c,d){try{a.call(b,c,d)}catch(e){return e}}function w(a,b,c){Y(function(a){var d=!1,e=v(c,b,function(c){d||(d=!0,b!==c?z(a,c):B(a,c))},function(b){d||(d=!0,C(a,b))},"Settle: "+(a._label||" unknown promise"));!d&&e&&(d=!0,C(a,e))},a)}function x(a,b){b._state===ea?B(a,b._result):b._state===fa?C(a,b._result):D(b,void 0,function(b){z(a,b)},function(b){C(a,b)})}function y(a,b){if(b.constructor===a.constructor)x(a,b);else{var c=u(b);c===ga?C(a,ga.error):void 0===c?B(a,b):g(c)?w(a,b,c):B(a,b)}}function z(a,b){a===b?C(a,s()):f(b)?y(a,b):B(a,b)}function A(a){a._onerror&&a._onerror(a._result),E(a)}function B(a,b){a._state===da&&(a._result=b,a._state=ea,0!==a._subscribers.length&&Y(E,a))}function C(a,b){a._state===da&&(a._state=fa,a._result=b,Y(A,a))}function D(a,b,c,d){var e=a._subscribers,f=e.length;a._onerror=null,e[f]=b,e[f+ea]=c,e[f+fa]=d,0===f&&a._state&&Y(E,a)}function E(a){var b=a._subscribers,c=a._state;if(0!==b.length){for(var d,e,f=a._result,g=0;g<b.length;g+=3)d=b[g],e=b[g+c],d?H(c,d,e,f):e(f);a._subscribers.length=0}}function F(){this.error=null}function G(a,b){try{return a(b)}catch(c){return ha.error=c,ha}}function H(a,b,c,d){var e,f,h,i,j=g(c);if(j){if(e=G(c,d),e===ha?(i=!0,f=e.error,e=null):h=!0,b===e)return void C(b,t())}else e=d,h=!0;b._state!==da||(j&&h?z(b,e):i?C(b,f):a===ea?B(b,e):a===fa&&C(b,e))}function I(a,b){try{b(function(b){z(a,b)},function(b){C(a,b)})}catch(c){C(a,c)}}function J(a,b){var c=this;c._instanceConstructor=a,c.promise=new a(r),c._validateInput(b)?(c._input=b,c.length=b.length,c._remaining=b.length,c._init(),0===c.length?B(c.promise,c._result):(c.length=c.length||0,c._enumerate(),0===c._remaining&&B(c.promise,c._result))):C(c.promise,c._validationError())}function K(a){return new ia(this,a).promise}function L(a){function b(a){z(e,a)}function c(a){C(e,a)}var d=this,e=new d(r);if(!W(a))return C(e,new TypeError("You must pass an array to race.")),e;for(var f=a.length,g=0;e._state===da&&f>g;g++)D(d.resolve(a[g]),void 0,b,c);return e}function M(a){var b=this;if(a&&"object"==typeof a&&a.constructor===b)return a;var c=new b(r);return z(c,a),c}function N(a){var b=this,c=new b(r);return C(c,a),c}function O(){throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")}function P(){throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")}function Q(a){this._id=na++,this._state=void 0,this._result=void 0,this._subscribers=[],r!==a&&(g(a)||O(),this instanceof Q||P(),I(this,a))}function R(){var a;if("undefined"!=typeof e)a=e;else if("undefined"!=typeof self)a=self;else try{a=Function("return this")()}catch(b){throw new Error("polyfill failed because global object is unavailable in this environment")}var c=a.Promise;c&&"[object Promise]"===Object.prototype.toString.call(c.resolve())&&!c.cast||(a.Promise=oa)}var S;S=Array.isArray?Array.isArray:function(a){return"[object Array]"===Object.prototype.toString.call(a)};var T,U,V,W=S,X=0,Y=({}.toString,function(a,b){ca[X]=a,ca[X+1]=b,X+=2,2===X&&(U?U(p):V())}),Z="undefined"!=typeof window?window:void 0,$=Z||{},_=$.MutationObserver||$.WebKitMutationObserver,aa="undefined"!=typeof d&&"[object process]"==={}.toString.call(d),ba="undefined"!=typeof Uint8ClampedArray&&"undefined"!=typeof importScripts&&"undefined"!=typeof MessageChannel,ca=new Array(1e3);V=aa?k():_?m():ba?n():void 0===Z&&"function"==typeof b?q():o();var da=void 0,ea=1,fa=2,ga=new F,ha=new F;J.prototype._validateInput=function(a){return W(a)},J.prototype._validationError=function(){return new Error("Array Methods must be provided an Array")},J.prototype._init=function(){this._result=new Array(this.length)};var ia=J;J.prototype._enumerate=function(){for(var a=this,b=a.length,c=a.promise,d=a._input,e=0;c._state===da&&b>e;e++)a._eachEntry(d[e],e)},J.prototype._eachEntry=function(a,b){var c=this,d=c._instanceConstructor;h(a)?a.constructor===d&&a._state!==da?(a._onerror=null,c._settledAt(a._state,b,a._result)):c._willSettleAt(d.resolve(a),b):(c._remaining--,c._result[b]=a)},J.prototype._settledAt=function(a,b,c){var d=this,e=d.promise;e._state===da&&(d._remaining--,a===fa?C(e,c):d._result[b]=c),0===d._remaining&&B(e,d._result)},J.prototype._willSettleAt=function(a,b){var c=this;D(a,void 0,function(a){c._settledAt(ea,b,a)},function(a){c._settledAt(fa,b,a)})};var ja=K,ka=L,la=M,ma=N,na=0,oa=Q;Q.all=ja,Q.race=ka,Q.resolve=la,Q.reject=ma,Q._setScheduler=i,Q._setAsap=j,Q._asap=Y,Q.prototype={constructor:Q,then:function(a,b){var c=this,d=c._state;if(d===ea&&!a||d===fa&&!b)return this;var e=new this.constructor(r),f=c._result;if(d){var g=arguments[d-1];Y(function(){H(d,e,g,f)})}else D(c,e,a,b);return e},"catch":function(a){return this.then(null,a)}};var pa=R,qa={Promise:oa,polyfill:pa};"function"==typeof a&&a.amd?a(function(){return qa}):"undefined"!=typeof c&&c.exports?c.exports=qa:"undefined"!=typeof this&&(this.ES6Promise=qa),pa()}).call(this)}).call(this,b("_process"),"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{_process:36}],38:[function(a,b,c){"use strict";var d=a("./lib/utils/common").assign,e=a("./lib/deflate"),f=a("./lib/inflate"),g=a("./lib/zlib/constants"),h={};d(h,e,f,g),b.exports=h},{"./lib/deflate":39,"./lib/inflate":40,"./lib/utils/common":41,"./lib/zlib/constants":44}],39:[function(a,b,c){"use strict";function d(a){if(!(this instanceof d))return new d(a);this.options=i.assign({level:s,method:u,chunkSize:16384,windowBits:15,memLevel:8,strategy:t,to:""},a||{});var b=this.options;b.raw&&b.windowBits>0?b.windowBits=-b.windowBits:b.gzip&&b.windowBits>0&&b.windowBits<16&&(b.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=h.deflateInit2(this.strm,b.level,b.method,b.windowBits,b.memLevel,b.strategy);if(c!==p)throw new Error(k[c]);if(b.header&&h.deflateSetHeader(this.strm,b.header),b.dictionary){var e;if(e="string"==typeof b.dictionary?j.string2buf(b.dictionary):"[object ArrayBuffer]"===m.call(b.dictionary)?new Uint8Array(b.dictionary):b.dictionary,c=h.deflateSetDictionary(this.strm,e),c!==p)throw new Error(k[c]);this._dict_set=!0}}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}function g(a,b){return b=b||{},b.gzip=!0,e(a,b)}var h=a("./zlib/deflate"),i=a("./utils/common"),j=a("./utils/strings"),k=a("./zlib/messages"),l=a("./zlib/zstream"),m=Object.prototype.toString,n=0,o=4,p=0,q=1,r=2,s=-1,t=0,u=8;d.prototype.push=function(a,b){var c,d,e=this.strm,f=this.options.chunkSize;if(this.ended)return!1;d=b===~~b?b:b===!0?o:n,"string"==typeof a?e.input=j.string2buf(a):"[object ArrayBuffer]"===m.call(a)?e.input=new Uint8Array(a):e.input=a,e.next_in=0,e.avail_in=e.input.length;do{if(0===e.avail_out&&(e.output=new i.Buf8(f),e.next_out=0,e.avail_out=f),c=h.deflate(e,d),c!==q&&c!==p)return this.onEnd(c),this.ended=!0,!1;0!==e.avail_out&&(0!==e.avail_in||d!==o&&d!==r)||("string"===this.options.to?this.onData(j.buf2binstring(i.shrinkBuf(e.output,e.next_out))):this.onData(i.shrinkBuf(e.output,e.next_out)))}while((e.avail_in>0||0===e.avail_out)&&c!==q);return d===o?(c=h.deflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===p):d===r?(this.onEnd(p),e.avail_out=0,!0):!0},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===p&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Deflate=d,c.deflate=e,c.deflateRaw=f,c.gzip=g},{"./utils/common":41,"./utils/strings":42,"./zlib/deflate":46,"./zlib/messages":51,"./zlib/zstream":53}],40:[function(a,b,c){"use strict";function d(a){if(!(this instanceof d))return new d(a);this.options=h.assign({chunkSize:16384,windowBits:0,to:""},a||{});var b=this.options;b.raw&&b.windowBits>=0&&b.windowBits<16&&(b.windowBits=-b.windowBits,0===b.windowBits&&(b.windowBits=-15)),!(b.windowBits>=0&&b.windowBits<16)||a&&a.windowBits||(b.windowBits+=32),b.windowBits>15&&b.windowBits<48&&0===(15&b.windowBits)&&(b.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=g.inflateInit2(this.strm,b.windowBits);if(c!==j.Z_OK)throw new Error(k[c]);this.header=new m,g.inflateGetHeader(this.strm,this.header)}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}var g=a("./zlib/inflate"),h=a("./utils/common"),i=a("./utils/strings"),j=a("./zlib/constants"),k=a("./zlib/messages"),l=a("./zlib/zstream"),m=a("./zlib/gzheader"),n=Object.prototype.toString;d.prototype.push=function(a,b){var c,d,e,f,k,l,m=this.strm,o=this.options.chunkSize,p=this.options.dictionary,q=!1;if(this.ended)return!1;d=b===~~b?b:b===!0?j.Z_FINISH:j.Z_NO_FLUSH,"string"==typeof a?m.input=i.binstring2buf(a):"[object ArrayBuffer]"===n.call(a)?m.input=new Uint8Array(a):m.input=a,m.next_in=0,m.avail_in=m.input.length;do{if(0===m.avail_out&&(m.output=new h.Buf8(o),m.next_out=0,m.avail_out=o),c=g.inflate(m,j.Z_NO_FLUSH),c===j.Z_NEED_DICT&&p&&(l="string"==typeof p?i.string2buf(p):"[object ArrayBuffer]"===n.call(p)?new Uint8Array(p):p,c=g.inflateSetDictionary(this.strm,l)),c===j.Z_BUF_ERROR&&q===!0&&(c=j.Z_OK,q=!1),c!==j.Z_STREAM_END&&c!==j.Z_OK)return this.onEnd(c),this.ended=!0,!1;m.next_out&&(0!==m.avail_out&&c!==j.Z_STREAM_END&&(0!==m.avail_in||d!==j.Z_FINISH&&d!==j.Z_SYNC_FLUSH)||("string"===this.options.to?(e=i.utf8border(m.output,m.next_out),f=m.next_out-e,k=i.buf2string(m.output,e),m.next_out=f,m.avail_out=o-f,f&&h.arraySet(m.output,m.output,e,f,0),this.onData(k)):this.onData(h.shrinkBuf(m.output,m.next_out)))),0===m.avail_in&&0===m.avail_out&&(q=!0)}while((m.avail_in>0||0===m.avail_out)&&c!==j.Z_STREAM_END);return c===j.Z_STREAM_END&&(d=j.Z_FINISH),d===j.Z_FINISH?(c=g.inflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===j.Z_OK):d===j.Z_SYNC_FLUSH?(this.onEnd(j.Z_OK),m.avail_out=0,!0):!0},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===j.Z_OK&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=h.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Inflate=d,c.inflate=e,c.inflateRaw=f,c.ungzip=e},{"./utils/common":41,"./utils/strings":42,"./zlib/constants":44,"./zlib/gzheader":47,"./zlib/inflate":49,"./zlib/messages":51,"./zlib/zstream":53}],41:[function(a,b,c){"use strict";var d="undefined"!=typeof Uint8Array&&"undefined"!=typeof Uint16Array&&"undefined"!=typeof Int32Array;c.assign=function(a){for(var b=Array.prototype.slice.call(arguments,1);b.length;){var c=b.shift();if(c){if("object"!=typeof c)throw new TypeError(c+"must be non-object");for(var d in c)c.hasOwnProperty(d)&&(a[d]=c[d])}}return a},c.shrinkBuf=function(a,b){return a.length===b?a:a.subarray?a.subarray(0,b):(a.length=b,a)};var e={arraySet:function(a,b,c,d,e){if(b.subarray&&a.subarray)return void a.set(b.subarray(c,c+d),e);for(var f=0;d>f;f++)a[e+f]=b[c+f]},flattenChunks:function(a){var b,c,d,e,f,g;for(d=0,b=0,c=a.length;c>b;b++)d+=a[b].length;for(g=new Uint8Array(d),e=0,b=0,c=a.length;c>b;b++)f=a[b],g.set(f,e),e+=f.length;return g}},f={arraySet:function(a,b,c,d,e){for(var f=0;d>f;f++)a[e+f]=b[c+f]},flattenChunks:function(a){return[].concat.apply([],a)}};c.setTyped=function(a){a?(c.Buf8=Uint8Array,c.Buf16=Uint16Array,c.Buf32=Int32Array,c.assign(c,e)):(c.Buf8=Array,c.Buf16=Array,c.Buf32=Array,c.assign(c,f))},c.setTyped(d)},{}],42:[function(a,b,c){"use strict";function d(a,b){if(65537>b&&(a.subarray&&g||!a.subarray&&f))return String.fromCharCode.apply(null,e.shrinkBuf(a,b));for(var c="",d=0;b>d;d++)c+=String.fromCharCode(a[d]);return c}var e=a("./common"),f=!0,g=!0;try{String.fromCharCode.apply(null,[0])}catch(h){f=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(h){g=!1}for(var i=new e.Buf8(256),j=0;256>j;j++)i[j]=j>=252?6:j>=248?5:j>=240?4:j>=224?3:j>=192?2:1;i[254]=i[254]=1,c.string2buf=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;h>f;f++)c=a.charCodeAt(f),55296===(64512&c)&&h>f+1&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=128>c?1:2048>c?2:65536>c?3:4;for(b=new e.Buf8(i),g=0,f=0;i>g;f++)c=a.charCodeAt(f),55296===(64512&c)&&h>f+1&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),128>c?b[g++]=c:2048>c?(b[g++]=192|c>>>6,b[g++]=128|63&c):65536>c?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},c.buf2binstring=function(a){return d(a,a.length)},c.binstring2buf=function(a){for(var b=new e.Buf8(a.length),c=0,d=b.length;d>c;c++)b[c]=a.charCodeAt(c);return b},c.buf2string=function(a,b){var c,e,f,g,h=b||a.length,j=new Array(2*h);for(e=0,c=0;h>c;)if(f=a[c++],128>f)j[e++]=f;else if(g=i[f],g>4)j[e++]=65533,c+=g-1;else{for(f&=2===g?31:3===g?15:7;g>1&&h>c;)f=f<<6|63&a[c++],g--;g>1?j[e++]=65533:65536>f?j[e++]=f:(f-=65536,j[e++]=55296|f>>10&1023,j[e++]=56320|1023&f)}return d(j,e)},c.utf8border=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return 0>c?b:0===c?b:c+i[a[c]]>b?c:b}},{"./common":41}],43:[function(a,b,c){"use strict";function d(a,b,c,d){for(var e=65535&a|0,f=a>>>16&65535|0,g=0;0!==c;){g=c>2e3?2e3:c,c-=g;do e=e+b[d++]|0,f=f+e|0;while(--g);e%=65521,f%=65521}return e|f<<16|0}b.exports=d},{}],44:[function(a,b,c){"use strict";b.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],45:[function(a,b,c){"use strict";function d(){for(var a,b=[],c=0;256>c;c++){a=c;for(var d=0;8>d;d++)a=1&a?3988292384^a>>>1:a>>>1;b[c]=a}return b}function e(a,b,c,d){var e=f,g=d+c;a^=-1;for(var h=d;g>h;h++)a=a>>>8^e[255&(a^b[h])];return-1^a}var f=d();b.exports=e},{}],46:[function(a,b,c){"use strict";function d(a,b){return a.msg=I[b],b}function e(a){return(a<<1)-(a>4?9:0)}function f(a){for(var b=a.length;--b>=0;)a[b]=0}function g(a){var b=a.state,c=b.pending;c>a.avail_out&&(c=a.avail_out),0!==c&&(E.arraySet(a.output,b.pending_buf,b.pending_out,c,a.next_out),a.next_out+=c,b.pending_out+=c,a.total_out+=c,a.avail_out-=c,b.pending-=c,0===b.pending&&(b.pending_out=0))}function h(a,b){F._tr_flush_block(a,a.block_start>=0?a.block_start:-1,a.strstart-a.block_start,b),a.block_start=a.strstart,g(a.strm)}function i(a,b){a.pending_buf[a.pending++]=b}function j(a,b){a.pending_buf[a.pending++]=b>>>8&255,a.pending_buf[a.pending++]=255&b}function k(a,b,c,d){var e=a.avail_in;return e>d&&(e=d),0===e?0:(a.avail_in-=e,E.arraySet(b,a.input,a.next_in,e,c),1===a.state.wrap?a.adler=G(a.adler,b,e,c):2===a.state.wrap&&(a.adler=H(a.adler,b,e,c)),a.next_in+=e,a.total_in+=e,e)}function l(a,b){var c,d,e=a.max_chain_length,f=a.strstart,g=a.prev_length,h=a.nice_match,i=a.strstart>a.w_size-la?a.strstart-(a.w_size-la):0,j=a.window,k=a.w_mask,l=a.prev,m=a.strstart+ka,n=j[f+g-1],o=j[f+g];a.prev_length>=a.good_match&&(e>>=2),h>a.lookahead&&(h=a.lookahead);do if(c=b,j[c+g]===o&&j[c+g-1]===n&&j[c]===j[f]&&j[++c]===j[f+1]){f+=2,c++;do;while(j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&m>f);if(d=ka-(m-f),f=m-ka,d>g){if(a.match_start=b,g=d,d>=h)break;n=j[f+g-1],o=j[f+g]}}while((b=l[b&k])>i&&0!==--e);return g<=a.lookahead?g:a.lookahead}function m(a){var b,c,d,e,f,g=a.w_size;do{if(e=a.window_size-a.lookahead-a.strstart,a.strstart>=g+(g-la)){E.arraySet(a.window,a.window,g,g,0),a.match_start-=g,a.strstart-=g,a.block_start-=g,c=a.hash_size,b=c;do d=a.head[--b],a.head[b]=d>=g?d-g:0;while(--c);c=g,b=c;do d=a.prev[--b],a.prev[b]=d>=g?d-g:0;while(--c);e+=g}if(0===a.strm.avail_in)break;if(c=k(a.strm,a.window,a.strstart+a.lookahead,e),a.lookahead+=c,a.lookahead+a.insert>=ja)for(f=a.strstart-a.insert,a.ins_h=a.window[f],a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+1])&a.hash_mask;a.insert&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+ja-1])&a.hash_mask,a.prev[f&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=f,f++,a.insert--,
!(a.lookahead+a.insert<ja)););}while(a.lookahead<la&&0!==a.strm.avail_in)}function n(a,b){var c=65535;for(c>a.pending_buf_size-5&&(c=a.pending_buf_size-5);;){if(a.lookahead<=1){if(m(a),0===a.lookahead&&b===J)return ua;if(0===a.lookahead)break}a.strstart+=a.lookahead,a.lookahead=0;var d=a.block_start+c;if((0===a.strstart||a.strstart>=d)&&(a.lookahead=a.strstart-d,a.strstart=d,h(a,!1),0===a.strm.avail_out))return ua;if(a.strstart-a.block_start>=a.w_size-la&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.strstart>a.block_start&&(h(a,!1),0===a.strm.avail_out)?ua:ua}function o(a,b){for(var c,d;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),0!==c&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c)),a.match_length>=ja)if(d=F._tr_tally(a,a.strstart-a.match_start,a.match_length-ja),a.lookahead-=a.match_length,a.match_length<=a.max_lazy_match&&a.lookahead>=ja){a.match_length--;do a.strstart++,a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart;while(0!==--a.match_length);a.strstart++}else a.strstart+=a.match_length,a.match_length=0,a.ins_h=a.window[a.strstart],a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+1])&a.hash_mask;else d=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++;if(d&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function p(a,b){for(var c,d,e;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),a.prev_length=a.match_length,a.prev_match=a.match_start,a.match_length=ja-1,0!==c&&a.prev_length<a.max_lazy_match&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c),a.match_length<=5&&(a.strategy===U||a.match_length===ja&&a.strstart-a.match_start>4096)&&(a.match_length=ja-1)),a.prev_length>=ja&&a.match_length<=a.prev_length){e=a.strstart+a.lookahead-ja,d=F._tr_tally(a,a.strstart-1-a.prev_match,a.prev_length-ja),a.lookahead-=a.prev_length-1,a.prev_length-=2;do++a.strstart<=e&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart);while(0!==--a.prev_length);if(a.match_available=0,a.match_length=ja-1,a.strstart++,d&&(h(a,!1),0===a.strm.avail_out))return ua}else if(a.match_available){if(d=F._tr_tally(a,0,a.window[a.strstart-1]),d&&h(a,!1),a.strstart++,a.lookahead--,0===a.strm.avail_out)return ua}else a.match_available=1,a.strstart++,a.lookahead--}return a.match_available&&(d=F._tr_tally(a,0,a.window[a.strstart-1]),a.match_available=0),a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function q(a,b){for(var c,d,e,f,g=a.window;;){if(a.lookahead<=ka){if(m(a),a.lookahead<=ka&&b===J)return ua;if(0===a.lookahead)break}if(a.match_length=0,a.lookahead>=ja&&a.strstart>0&&(e=a.strstart-1,d=g[e],d===g[++e]&&d===g[++e]&&d===g[++e])){f=a.strstart+ka;do;while(d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&f>e);a.match_length=ka-(f-e),a.match_length>a.lookahead&&(a.match_length=a.lookahead)}if(a.match_length>=ja?(c=F._tr_tally(a,1,a.match_length-ja),a.lookahead-=a.match_length,a.strstart+=a.match_length,a.match_length=0):(c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++),c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function r(a,b){for(var c;;){if(0===a.lookahead&&(m(a),0===a.lookahead)){if(b===J)return ua;break}if(a.match_length=0,c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++,c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function s(a,b,c,d,e){this.good_length=a,this.max_lazy=b,this.nice_length=c,this.max_chain=d,this.func=e}function t(a){a.window_size=2*a.w_size,f(a.head),a.max_lazy_match=D[a.level].max_lazy,a.good_match=D[a.level].good_length,a.nice_match=D[a.level].nice_length,a.max_chain_length=D[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=ja-1,a.match_available=0,a.ins_h=0}function u(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=$,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new E.Buf16(2*ha),this.dyn_dtree=new E.Buf16(2*(2*fa+1)),this.bl_tree=new E.Buf16(2*(2*ga+1)),f(this.dyn_ltree),f(this.dyn_dtree),f(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new E.Buf16(ia+1),this.heap=new E.Buf16(2*ea+1),f(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new E.Buf16(2*ea+1),f(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function v(a){var b;return a&&a.state?(a.total_in=a.total_out=0,a.data_type=Z,b=a.state,b.pending=0,b.pending_out=0,b.wrap<0&&(b.wrap=-b.wrap),b.status=b.wrap?na:sa,a.adler=2===b.wrap?0:1,b.last_flush=J,F._tr_init(b),O):d(a,Q)}function w(a){var b=v(a);return b===O&&t(a.state),b}function x(a,b){return a&&a.state?2!==a.state.wrap?Q:(a.state.gzhead=b,O):Q}function y(a,b,c,e,f,g){if(!a)return Q;var h=1;if(b===T&&(b=6),0>e?(h=0,e=-e):e>15&&(h=2,e-=16),1>f||f>_||c!==$||8>e||e>15||0>b||b>9||0>g||g>X)return d(a,Q);8===e&&(e=9);var i=new u;return a.state=i,i.strm=a,i.wrap=h,i.gzhead=null,i.w_bits=e,i.w_size=1<<i.w_bits,i.w_mask=i.w_size-1,i.hash_bits=f+7,i.hash_size=1<<i.hash_bits,i.hash_mask=i.hash_size-1,i.hash_shift=~~((i.hash_bits+ja-1)/ja),i.window=new E.Buf8(2*i.w_size),i.head=new E.Buf16(i.hash_size),i.prev=new E.Buf16(i.w_size),i.lit_bufsize=1<<f+6,i.pending_buf_size=4*i.lit_bufsize,i.pending_buf=new E.Buf8(i.pending_buf_size),i.d_buf=i.lit_bufsize>>1,i.l_buf=3*i.lit_bufsize,i.level=b,i.strategy=g,i.method=c,w(a)}function z(a,b){return y(a,b,$,aa,ba,Y)}function A(a,b){var c,h,k,l;if(!a||!a.state||b>N||0>b)return a?d(a,Q):Q;if(h=a.state,!a.output||!a.input&&0!==a.avail_in||h.status===ta&&b!==M)return d(a,0===a.avail_out?S:Q);if(h.strm=a,c=h.last_flush,h.last_flush=b,h.status===na)if(2===h.wrap)a.adler=0,i(h,31),i(h,139),i(h,8),h.gzhead?(i(h,(h.gzhead.text?1:0)+(h.gzhead.hcrc?2:0)+(h.gzhead.extra?4:0)+(h.gzhead.name?8:0)+(h.gzhead.comment?16:0)),i(h,255&h.gzhead.time),i(h,h.gzhead.time>>8&255),i(h,h.gzhead.time>>16&255),i(h,h.gzhead.time>>24&255),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,255&h.gzhead.os),h.gzhead.extra&&h.gzhead.extra.length&&(i(h,255&h.gzhead.extra.length),i(h,h.gzhead.extra.length>>8&255)),h.gzhead.hcrc&&(a.adler=H(a.adler,h.pending_buf,h.pending,0)),h.gzindex=0,h.status=oa):(i(h,0),i(h,0),i(h,0),i(h,0),i(h,0),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,ya),h.status=sa);else{var m=$+(h.w_bits-8<<4)<<8,n=-1;n=h.strategy>=V||h.level<2?0:h.level<6?1:6===h.level?2:3,m|=n<<6,0!==h.strstart&&(m|=ma),m+=31-m%31,h.status=sa,j(h,m),0!==h.strstart&&(j(h,a.adler>>>16),j(h,65535&a.adler)),a.adler=1}if(h.status===oa)if(h.gzhead.extra){for(k=h.pending;h.gzindex<(65535&h.gzhead.extra.length)&&(h.pending!==h.pending_buf_size||(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending!==h.pending_buf_size));)i(h,255&h.gzhead.extra[h.gzindex]),h.gzindex++;h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),h.gzindex===h.gzhead.extra.length&&(h.gzindex=0,h.status=pa)}else h.status=pa;if(h.status===pa)if(h.gzhead.name){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.name.length?255&h.gzhead.name.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.gzindex=0,h.status=qa)}else h.status=qa;if(h.status===qa)if(h.gzhead.comment){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.comment.length?255&h.gzhead.comment.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.status=ra)}else h.status=ra;if(h.status===ra&&(h.gzhead.hcrc?(h.pending+2>h.pending_buf_size&&g(a),h.pending+2<=h.pending_buf_size&&(i(h,255&a.adler),i(h,a.adler>>8&255),a.adler=0,h.status=sa)):h.status=sa),0!==h.pending){if(g(a),0===a.avail_out)return h.last_flush=-1,O}else if(0===a.avail_in&&e(b)<=e(c)&&b!==M)return d(a,S);if(h.status===ta&&0!==a.avail_in)return d(a,S);if(0!==a.avail_in||0!==h.lookahead||b!==J&&h.status!==ta){var o=h.strategy===V?r(h,b):h.strategy===W?q(h,b):D[h.level].func(h,b);if(o!==wa&&o!==xa||(h.status=ta),o===ua||o===wa)return 0===a.avail_out&&(h.last_flush=-1),O;if(o===va&&(b===K?F._tr_align(h):b!==N&&(F._tr_stored_block(h,0,0,!1),b===L&&(f(h.head),0===h.lookahead&&(h.strstart=0,h.block_start=0,h.insert=0))),g(a),0===a.avail_out))return h.last_flush=-1,O}return b!==M?O:h.wrap<=0?P:(2===h.wrap?(i(h,255&a.adler),i(h,a.adler>>8&255),i(h,a.adler>>16&255),i(h,a.adler>>24&255),i(h,255&a.total_in),i(h,a.total_in>>8&255),i(h,a.total_in>>16&255),i(h,a.total_in>>24&255)):(j(h,a.adler>>>16),j(h,65535&a.adler)),g(a),h.wrap>0&&(h.wrap=-h.wrap),0!==h.pending?O:P)}function B(a){var b;return a&&a.state?(b=a.state.status,b!==na&&b!==oa&&b!==pa&&b!==qa&&b!==ra&&b!==sa&&b!==ta?d(a,Q):(a.state=null,b===sa?d(a,R):O)):Q}function C(a,b){var c,d,e,g,h,i,j,k,l=b.length;if(!a||!a.state)return Q;if(c=a.state,g=c.wrap,2===g||1===g&&c.status!==na||c.lookahead)return Q;for(1===g&&(a.adler=G(a.adler,b,l,0)),c.wrap=0,l>=c.w_size&&(0===g&&(f(c.head),c.strstart=0,c.block_start=0,c.insert=0),k=new E.Buf8(c.w_size),E.arraySet(k,b,l-c.w_size,c.w_size,0),b=k,l=c.w_size),h=a.avail_in,i=a.next_in,j=a.input,a.avail_in=l,a.next_in=0,a.input=b,m(c);c.lookahead>=ja;){d=c.strstart,e=c.lookahead-(ja-1);do c.ins_h=(c.ins_h<<c.hash_shift^c.window[d+ja-1])&c.hash_mask,c.prev[d&c.w_mask]=c.head[c.ins_h],c.head[c.ins_h]=d,d++;while(--e);c.strstart=d,c.lookahead=ja-1,m(c)}return c.strstart+=c.lookahead,c.block_start=c.strstart,c.insert=c.lookahead,c.lookahead=0,c.match_length=c.prev_length=ja-1,c.match_available=0,a.next_in=i,a.input=j,a.avail_in=h,c.wrap=g,O}var D,E=a("../utils/common"),F=a("./trees"),G=a("./adler32"),H=a("./crc32"),I=a("./messages"),J=0,K=1,L=3,M=4,N=5,O=0,P=1,Q=-2,R=-3,S=-5,T=-1,U=1,V=2,W=3,X=4,Y=0,Z=2,$=8,_=9,aa=15,ba=8,ca=29,da=256,ea=da+1+ca,fa=30,ga=19,ha=2*ea+1,ia=15,ja=3,ka=258,la=ka+ja+1,ma=32,na=42,oa=69,pa=73,qa=91,ra=103,sa=113,ta=666,ua=1,va=2,wa=3,xa=4,ya=3;D=[new s(0,0,0,0,n),new s(4,4,8,4,o),new s(4,5,16,8,o),new s(4,6,32,32,o),new s(4,4,16,16,p),new s(8,16,32,32,p),new s(8,16,128,128,p),new s(8,32,128,256,p),new s(32,128,258,1024,p),new s(32,258,258,4096,p)],c.deflateInit=z,c.deflateInit2=y,c.deflateReset=w,c.deflateResetKeep=v,c.deflateSetHeader=x,c.deflate=A,c.deflateEnd=B,c.deflateSetDictionary=C,c.deflateInfo="pako deflate (from Nodeca project)"},{"../utils/common":41,"./adler32":43,"./crc32":45,"./messages":51,"./trees":52}],47:[function(a,b,c){"use strict";function d(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}b.exports=d},{}],48:[function(a,b,c){"use strict";var d=30,e=12;b.exports=function(a,b){var c,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;c=a.state,f=a.next_in,B=a.input,g=f+(a.avail_in-5),h=a.next_out,C=a.output,i=h-(b-a.avail_out),j=h+(a.avail_out-257),k=c.dmax,l=c.wsize,m=c.whave,n=c.wnext,o=c.window,p=c.hold,q=c.bits,r=c.lencode,s=c.distcode,t=(1<<c.lenbits)-1,u=(1<<c.distbits)-1;a:do{15>q&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=r[p&t];b:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,0===w)C[h++]=65535&v;else{if(!(16&w)){if(0===(64&w)){v=r[(65535&v)+(p&(1<<w)-1)];continue b}if(32&w){c.mode=e;break a}a.msg="invalid literal/length code",c.mode=d;break a}x=65535&v,w&=15,w&&(w>q&&(p+=B[f++]<<q,q+=8),x+=p&(1<<w)-1,p>>>=w,q-=w),15>q&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=s[p&u];c:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,!(16&w)){if(0===(64&w)){v=s[(65535&v)+(p&(1<<w)-1)];continue c}a.msg="invalid distance code",c.mode=d;break a}if(y=65535&v,w&=15,w>q&&(p+=B[f++]<<q,q+=8,w>q&&(p+=B[f++]<<q,q+=8)),y+=p&(1<<w)-1,y>k){a.msg="invalid distance too far back",c.mode=d;break a}if(p>>>=w,q-=w,w=h-i,y>w){if(w=y-w,w>m&&c.sane){a.msg="invalid distance too far back",c.mode=d;break a}if(z=0,A=o,0===n){if(z+=l-w,x>w){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}else if(w>n){if(z+=l+n-w,w-=n,x>w){x-=w;do C[h++]=o[z++];while(--w);if(z=0,x>n){w=n,x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}}else if(z+=n-w,x>w){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}for(;x>2;)C[h++]=A[z++],C[h++]=A[z++],C[h++]=A[z++],x-=3;x&&(C[h++]=A[z++],x>1&&(C[h++]=A[z++]))}else{z=h-y;do C[h++]=C[z++],C[h++]=C[z++],C[h++]=C[z++],x-=3;while(x>2);x&&(C[h++]=C[z++],x>1&&(C[h++]=C[z++]))}break}}break}}while(g>f&&j>h);x=q>>3,f-=x,q-=x<<3,p&=(1<<q)-1,a.next_in=f,a.next_out=h,a.avail_in=g>f?5+(g-f):5-(f-g),a.avail_out=j>h?257+(j-h):257-(h-j),c.hold=p,c.bits=q}},{}],49:[function(a,b,c){"use strict";function d(a){return(a>>>24&255)+(a>>>8&65280)+((65280&a)<<8)+((255&a)<<24)}function e(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new s.Buf16(320),this.work=new s.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function f(a){var b;return a&&a.state?(b=a.state,a.total_in=a.total_out=b.total=0,a.msg="",b.wrap&&(a.adler=1&b.wrap),b.mode=L,b.last=0,b.havedict=0,b.dmax=32768,b.head=null,b.hold=0,b.bits=0,b.lencode=b.lendyn=new s.Buf32(pa),b.distcode=b.distdyn=new s.Buf32(qa),b.sane=1,b.back=-1,D):G}function g(a){var b;return a&&a.state?(b=a.state,b.wsize=0,b.whave=0,b.wnext=0,f(a)):G}function h(a,b){var c,d;return a&&a.state?(d=a.state,0>b?(c=0,b=-b):(c=(b>>4)+1,48>b&&(b&=15)),b&&(8>b||b>15)?G:(null!==d.window&&d.wbits!==b&&(d.window=null),d.wrap=c,d.wbits=b,g(a))):G}function i(a,b){var c,d;return a?(d=new e,a.state=d,d.window=null,c=h(a,b),c!==D&&(a.state=null),c):G}function j(a){return i(a,sa)}function k(a){if(ta){var b;for(q=new s.Buf32(512),r=new s.Buf32(32),b=0;144>b;)a.lens[b++]=8;for(;256>b;)a.lens[b++]=9;for(;280>b;)a.lens[b++]=7;for(;288>b;)a.lens[b++]=8;for(w(y,a.lens,0,288,q,0,a.work,{bits:9}),b=0;32>b;)a.lens[b++]=5;w(z,a.lens,0,32,r,0,a.work,{bits:5}),ta=!1}a.lencode=q,a.lenbits=9,a.distcode=r,a.distbits=5}function l(a,b,c,d){var e,f=a.state;return null===f.window&&(f.wsize=1<<f.wbits,f.wnext=0,f.whave=0,f.window=new s.Buf8(f.wsize)),d>=f.wsize?(s.arraySet(f.window,b,c-f.wsize,f.wsize,0),f.wnext=0,f.whave=f.wsize):(e=f.wsize-f.wnext,e>d&&(e=d),s.arraySet(f.window,b,c-d,e,f.wnext),d-=e,d?(s.arraySet(f.window,b,c-d,d,0),f.wnext=d,f.whave=f.wsize):(f.wnext+=e,f.wnext===f.wsize&&(f.wnext=0),f.whave<f.wsize&&(f.whave+=e))),0}function m(a,b){var c,e,f,g,h,i,j,m,n,o,p,q,r,pa,qa,ra,sa,ta,ua,va,wa,xa,ya,za,Aa=0,Ba=new s.Buf8(4),Ca=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!a||!a.state||!a.output||!a.input&&0!==a.avail_in)return G;c=a.state,c.mode===W&&(c.mode=X),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,o=i,p=j,xa=D;a:for(;;)switch(c.mode){case L:if(0===c.wrap){c.mode=X;break}for(;16>n;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(2&c.wrap&&35615===m){c.check=0,Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0),m=0,n=0,c.mode=M;break}if(c.flags=0,c.head&&(c.head.done=!1),!(1&c.wrap)||(((255&m)<<8)+(m>>8))%31){a.msg="incorrect header check",c.mode=ma;break}if((15&m)!==K){a.msg="unknown compression method",c.mode=ma;break}if(m>>>=4,n-=4,wa=(15&m)+8,0===c.wbits)c.wbits=wa;else if(wa>c.wbits){a.msg="invalid window size",c.mode=ma;break}c.dmax=1<<wa,a.adler=c.check=1,c.mode=512&m?U:W,m=0,n=0;break;case M:for(;16>n;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.flags=m,(255&c.flags)!==K){a.msg="unknown compression method",c.mode=ma;break}if(57344&c.flags){a.msg="unknown header flags set",c.mode=ma;break}c.head&&(c.head.text=m>>8&1),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=N;case N:for(;32>n;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.head&&(c.head.time=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,Ba[2]=m>>>16&255,Ba[3]=m>>>24&255,c.check=u(c.check,Ba,4,0)),m=0,n=0,c.mode=O;case O:for(;16>n;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.head&&(c.head.xflags=255&m,c.head.os=m>>8),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=P;case P:if(1024&c.flags){for(;16>n;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length=m,c.head&&(c.head.extra_len=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0}else c.head&&(c.head.extra=null);c.mode=Q;case Q:if(1024&c.flags&&(q=c.length,q>i&&(q=i),q&&(c.head&&(wa=c.head.extra_len-c.length,c.head.extra||(c.head.extra=new Array(c.head.extra_len)),s.arraySet(c.head.extra,e,g,q,wa)),512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,c.length-=q),c.length))break a;c.length=0,c.mode=R;case R:if(2048&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.name+=String.fromCharCode(wa));while(wa&&i>q);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.name=null);c.length=0,c.mode=S;case S:if(4096&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.comment+=String.fromCharCode(wa));while(wa&&i>q);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.comment=null);c.mode=T;case T:if(512&c.flags){for(;16>n;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(65535&c.check)){a.msg="header crc mismatch",c.mode=ma;break}m=0,n=0}c.head&&(c.head.hcrc=c.flags>>9&1,c.head.done=!0),a.adler=c.check=0,c.mode=W;break;case U:for(;32>n;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}a.adler=c.check=d(m),m=0,n=0,c.mode=V;case V:if(0===c.havedict)return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,F;a.adler=c.check=1,c.mode=W;case W:if(b===B||b===C)break a;case X:if(c.last){m>>>=7&n,n-=7&n,c.mode=ja;break}for(;3>n;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}switch(c.last=1&m,m>>>=1,n-=1,3&m){case 0:c.mode=Y;break;case 1:if(k(c),c.mode=ca,b===C){m>>>=2,n-=2;break a}break;case 2:c.mode=_;break;case 3:a.msg="invalid block type",c.mode=ma}m>>>=2,n-=2;break;case Y:for(m>>>=7&n,n-=7&n;32>n;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if((65535&m)!==(m>>>16^65535)){a.msg="invalid stored block lengths",c.mode=ma;break}if(c.length=65535&m,m=0,n=0,c.mode=Z,b===C)break a;case Z:c.mode=$;case $:if(q=c.length){if(q>i&&(q=i),q>j&&(q=j),0===q)break a;s.arraySet(f,e,g,q,h),i-=q,g+=q,j-=q,h+=q,c.length-=q;break}c.mode=W;break;case _:for(;14>n;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.nlen=(31&m)+257,m>>>=5,n-=5,c.ndist=(31&m)+1,m>>>=5,n-=5,c.ncode=(15&m)+4,m>>>=4,n-=4,c.nlen>286||c.ndist>30){a.msg="too many length or distance symbols",c.mode=ma;break}c.have=0,c.mode=aa;case aa:for(;c.have<c.ncode;){for(;3>n;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.lens[Ca[c.have++]]=7&m,m>>>=3,n-=3}for(;c.have<19;)c.lens[Ca[c.have++]]=0;if(c.lencode=c.lendyn,c.lenbits=7,ya={bits:c.lenbits},xa=w(x,c.lens,0,19,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg="invalid code lengths set",c.mode=ma;break}c.have=0,c.mode=ba;case ba:for(;c.have<c.nlen+c.ndist;){for(;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(n>=qa);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(16>sa)m>>>=qa,n-=qa,c.lens[c.have++]=sa;else{if(16===sa){for(za=qa+2;za>n;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m>>>=qa,n-=qa,0===c.have){a.msg="invalid bit length repeat",c.mode=ma;break}wa=c.lens[c.have-1],q=3+(3&m),m>>>=2,n-=2}else if(17===sa){for(za=qa+3;za>n;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=3+(7&m),m>>>=3,n-=3}else{for(za=qa+7;za>n;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=11+(127&m),m>>>=7,n-=7}if(c.have+q>c.nlen+c.ndist){a.msg="invalid bit length repeat",c.mode=ma;break}for(;q--;)c.lens[c.have++]=wa}}if(c.mode===ma)break;if(0===c.lens[256]){a.msg="invalid code -- missing end-of-block",c.mode=ma;break}if(c.lenbits=9,ya={bits:c.lenbits},xa=w(y,c.lens,0,c.nlen,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg="invalid literal/lengths set",c.mode=ma;break}if(c.distbits=6,c.distcode=c.distdyn,ya={bits:c.distbits},xa=w(z,c.lens,c.nlen,c.ndist,c.distcode,0,c.work,ya),c.distbits=ya.bits,xa){a.msg="invalid distances set",c.mode=ma;break}if(c.mode=ca,b===C)break a;case ca:c.mode=da;case da:if(i>=6&&j>=258){a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,v(a,p),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,c.mode===W&&(c.back=-1);break}for(c.back=0;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(n>=qa);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(ra&&0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.lencode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(n>=ta+qa);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,c.length=sa,0===ra){c.mode=ia;break}if(32&ra){c.back=-1,c.mode=W;break}if(64&ra){a.msg="invalid literal/length code",c.mode=ma;break}c.extra=15&ra,c.mode=ea;case ea:if(c.extra){for(za=c.extra;za>n;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}c.was=c.length,c.mode=fa;case fa:for(;Aa=c.distcode[m&(1<<c.distbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(n>=qa);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.distcode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(n>=ta+qa);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,64&ra){a.msg="invalid distance code",c.mode=ma;break}c.offset=sa,c.extra=15&ra,c.mode=ga;case ga:if(c.extra){for(za=c.extra;za>n;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.offset+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}if(c.offset>c.dmax){a.msg="invalid distance too far back",c.mode=ma;break}c.mode=ha;case ha:if(0===j)break a;if(q=p-j,c.offset>q){if(q=c.offset-q,q>c.whave&&c.sane){a.msg="invalid distance too far back",c.mode=ma;break}q>c.wnext?(q-=c.wnext,r=c.wsize-q):r=c.wnext-q,q>c.length&&(q=c.length),pa=c.window}else pa=f,r=h-c.offset,q=c.length;q>j&&(q=j),j-=q,c.length-=q;do f[h++]=pa[r++];while(--q);0===c.length&&(c.mode=da);break;case ia:if(0===j)break a;f[h++]=c.length,j--,c.mode=da;break;case ja:if(c.wrap){for(;32>n;){if(0===i)break a;i--,m|=e[g++]<<n,n+=8}if(p-=j,a.total_out+=p,c.total+=p,p&&(a.adler=c.check=c.flags?u(c.check,f,p,h-p):t(c.check,f,p,h-p)),p=j,(c.flags?m:d(m))!==c.check){a.msg="incorrect data check",c.mode=ma;break}m=0,n=0}c.mode=ka;case ka:if(c.wrap&&c.flags){for(;32>n;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(4294967295&c.total)){a.msg="incorrect length check",c.mode=ma;break}m=0,n=0}c.mode=la;case la:xa=E;break a;case ma:xa=H;break a;case na:return I;case oa:default:return G}return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,(c.wsize||p!==a.avail_out&&c.mode<ma&&(c.mode<ja||b!==A))&&l(a,a.output,a.next_out,p-a.avail_out)?(c.mode=na,I):(o-=a.avail_in,p-=a.avail_out,a.total_in+=o,a.total_out+=p,c.total+=p,c.wrap&&p&&(a.adler=c.check=c.flags?u(c.check,f,p,a.next_out-p):t(c.check,f,p,a.next_out-p)),a.data_type=c.bits+(c.last?64:0)+(c.mode===W?128:0)+(c.mode===ca||c.mode===Z?256:0),(0===o&&0===p||b===A)&&xa===D&&(xa=J),xa)}function n(a){if(!a||!a.state)return G;var b=a.state;return b.window&&(b.window=null),a.state=null,D}function o(a,b){var c;return a&&a.state?(c=a.state,0===(2&c.wrap)?G:(c.head=b,b.done=!1,D)):G}function p(a,b){var c,d,e,f=b.length;return a&&a.state?(c=a.state,0!==c.wrap&&c.mode!==V?G:c.mode===V&&(d=1,d=t(d,b,f,0),d!==c.check)?H:(e=l(a,b,f,f))?(c.mode=na,I):(c.havedict=1,D)):G}var q,r,s=a("../utils/common"),t=a("./adler32"),u=a("./crc32"),v=a("./inffast"),w=a("./inftrees"),x=0,y=1,z=2,A=4,B=5,C=6,D=0,E=1,F=2,G=-2,H=-3,I=-4,J=-5,K=8,L=1,M=2,N=3,O=4,P=5,Q=6,R=7,S=8,T=9,U=10,V=11,W=12,X=13,Y=14,Z=15,$=16,_=17,aa=18,ba=19,ca=20,da=21,ea=22,fa=23,ga=24,ha=25,ia=26,ja=27,ka=28,la=29,ma=30,na=31,oa=32,pa=852,qa=592,ra=15,sa=ra,ta=!0;c.inflateReset=g,c.inflateReset2=h,c.inflateResetKeep=f,c.inflateInit=j,c.inflateInit2=i,c.inflate=m,c.inflateEnd=n,c.inflateGetHeader=o,c.inflateSetDictionary=p,c.inflateInfo="pako inflate (from Nodeca project)"},{"../utils/common":41,"./adler32":43,"./crc32":45,"./inffast":48,"./inftrees":50}],50:[function(a,b,c){"use strict";var d=a("../utils/common"),e=15,f=852,g=592,h=0,i=1,j=2,k=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],l=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],m=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],n=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];b.exports=function(a,b,c,o,p,q,r,s){var t,u,v,w,x,y,z,A,B,C=s.bits,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=null,O=0,P=new d.Buf16(e+1),Q=new d.Buf16(e+1),R=null,S=0;for(D=0;e>=D;D++)P[D]=0;for(E=0;o>E;E++)P[b[c+E]]++;for(H=C,G=e;G>=1&&0===P[G];G--);if(H>G&&(H=G),0===G)return p[q++]=20971520,p[q++]=20971520,s.bits=1,0;for(F=1;G>F&&0===P[F];F++);for(F>H&&(H=F),K=1,D=1;e>=D;D++)if(K<<=1,K-=P[D],0>K)return-1;if(K>0&&(a===h||1!==G))return-1;for(Q[1]=0,D=1;e>D;D++)Q[D+1]=Q[D]+P[D];for(E=0;o>E;E++)0!==b[c+E]&&(r[Q[b[c+E]]++]=E);if(a===h?(N=R=r,y=19):a===i?(N=k,O-=257,R=l,S-=257,y=256):(N=m,R=n,y=-1),M=0,E=0,D=F,x=q,I=H,J=0,v=-1,L=1<<H,w=L-1,a===i&&L>f||a===j&&L>g)return 1;for(var T=0;;){T++,z=D-J,r[E]<y?(A=0,B=r[E]):r[E]>y?(A=R[S+r[E]],B=N[O+r[E]]):(A=96,B=0),t=1<<D-J,u=1<<I,F=u;do u-=t,p[x+(M>>J)+u]=z<<24|A<<16|B|0;while(0!==u);for(t=1<<D-1;M&t;)t>>=1;if(0!==t?(M&=t-1,M+=t):M=0,E++,0===--P[D]){if(D===G)break;D=b[c+r[E]]}if(D>H&&(M&w)!==v){for(0===J&&(J=H),x+=F,I=D-J,K=1<<I;G>I+J&&(K-=P[I+J],!(0>=K));)I++,K<<=1;if(L+=1<<I,a===i&&L>f||a===j&&L>g)return 1;v=M&w,p[v]=H<<24|I<<16|x-q|0}}return 0!==M&&(p[x+M]=D-J<<24|64<<16|0),s.bits=H,0}},{"../utils/common":41}],51:[function(a,b,c){"use strict";b.exports={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"}},{}],52:[function(a,b,c){"use strict";function d(a){for(var b=a.length;--b>=0;)a[b]=0}function e(a,b,c,d,e){this.static_tree=a,this.extra_bits=b,this.extra_base=c,this.elems=d,this.max_length=e,this.has_stree=a&&a.length}function f(a,b){this.dyn_tree=a,this.max_code=0,this.stat_desc=b}function g(a){return 256>a?ia[a]:ia[256+(a>>>7)]}function h(a,b){a.pending_buf[a.pending++]=255&b,a.pending_buf[a.pending++]=b>>>8&255}function i(a,b,c){a.bi_valid>X-c?(a.bi_buf|=b<<a.bi_valid&65535,h(a,a.bi_buf),a.bi_buf=b>>X-a.bi_valid,a.bi_valid+=c-X):(a.bi_buf|=b<<a.bi_valid&65535,a.bi_valid+=c)}function j(a,b,c){i(a,c[2*b],c[2*b+1])}function k(a,b){var c=0;do c|=1&a,a>>>=1,c<<=1;while(--b>0);return c>>>1}function l(a){16===a.bi_valid?(h(a,a.bi_buf),a.bi_buf=0,a.bi_valid=0):a.bi_valid>=8&&(a.pending_buf[a.pending++]=255&a.bi_buf,a.bi_buf>>=8,a.bi_valid-=8)}function m(a,b){var c,d,e,f,g,h,i=b.dyn_tree,j=b.max_code,k=b.stat_desc.static_tree,l=b.stat_desc.has_stree,m=b.stat_desc.extra_bits,n=b.stat_desc.extra_base,o=b.stat_desc.max_length,p=0;for(f=0;W>=f;f++)a.bl_count[f]=0;for(i[2*a.heap[a.heap_max]+1]=0,c=a.heap_max+1;V>c;c++)d=a.heap[c],f=i[2*i[2*d+1]+1]+1,f>o&&(f=o,p++),i[2*d+1]=f,d>j||(a.bl_count[f]++,g=0,d>=n&&(g=m[d-n]),h=i[2*d],a.opt_len+=h*(f+g),l&&(a.static_len+=h*(k[2*d+1]+g)));if(0!==p){do{for(f=o-1;0===a.bl_count[f];)f--;a.bl_count[f]--,a.bl_count[f+1]+=2,a.bl_count[o]--,p-=2}while(p>0);for(f=o;0!==f;f--)for(d=a.bl_count[f];0!==d;)e=a.heap[--c],e>j||(i[2*e+1]!==f&&(a.opt_len+=(f-i[2*e+1])*i[2*e],i[2*e+1]=f),d--)}}function n(a,b,c){var d,e,f=new Array(W+1),g=0;for(d=1;W>=d;d++)f[d]=g=g+c[d-1]<<1;for(e=0;b>=e;e++){var h=a[2*e+1];0!==h&&(a[2*e]=k(f[h]++,h))}}function o(){var a,b,c,d,f,g=new Array(W+1);for(c=0,d=0;Q-1>d;d++)for(ka[d]=c,a=0;a<1<<ba[d];a++)ja[c++]=d;for(ja[c-1]=d,f=0,d=0;16>d;d++)for(la[d]=f,a=0;a<1<<ca[d];a++)ia[f++]=d;for(f>>=7;T>d;d++)for(la[d]=f<<7,a=0;a<1<<ca[d]-7;a++)ia[256+f++]=d;for(b=0;W>=b;b++)g[b]=0;for(a=0;143>=a;)ga[2*a+1]=8,a++,g[8]++;for(;255>=a;)ga[2*a+1]=9,a++,g[9]++;for(;279>=a;)ga[2*a+1]=7,a++,g[7]++;for(;287>=a;)ga[2*a+1]=8,a++,g[8]++;for(n(ga,S+1,g),a=0;T>a;a++)ha[2*a+1]=5,ha[2*a]=k(a,5);ma=new e(ga,ba,R+1,S,W),na=new e(ha,ca,0,T,W),oa=new e(new Array(0),da,0,U,Y)}function p(a){var b;for(b=0;S>b;b++)a.dyn_ltree[2*b]=0;for(b=0;T>b;b++)a.dyn_dtree[2*b]=0;for(b=0;U>b;b++)a.bl_tree[2*b]=0;a.dyn_ltree[2*Z]=1,a.opt_len=a.static_len=0,a.last_lit=a.matches=0}function q(a){a.bi_valid>8?h(a,a.bi_buf):a.bi_valid>0&&(a.pending_buf[a.pending++]=a.bi_buf),a.bi_buf=0,a.bi_valid=0}function r(a,b,c,d){q(a),d&&(h(a,c),h(a,~c)),G.arraySet(a.pending_buf,a.window,b,c,a.pending),a.pending+=c}function s(a,b,c,d){var e=2*b,f=2*c;return a[e]<a[f]||a[e]===a[f]&&d[b]<=d[c]}function t(a,b,c){for(var d=a.heap[c],e=c<<1;e<=a.heap_len&&(e<a.heap_len&&s(b,a.heap[e+1],a.heap[e],a.depth)&&e++,!s(b,d,a.heap[e],a.depth));)a.heap[c]=a.heap[e],c=e,e<<=1;a.heap[c]=d}function u(a,b,c){var d,e,f,h,k=0;if(0!==a.last_lit)do d=a.pending_buf[a.d_buf+2*k]<<8|a.pending_buf[a.d_buf+2*k+1],e=a.pending_buf[a.l_buf+k],k++,0===d?j(a,e,b):(f=ja[e],j(a,f+R+1,b),h=ba[f],0!==h&&(e-=ka[f],i(a,e,h)),d--,f=g(d),j(a,f,c),h=ca[f],0!==h&&(d-=la[f],i(a,d,h)));while(k<a.last_lit);j(a,Z,b)}function v(a,b){var c,d,e,f=b.dyn_tree,g=b.stat_desc.static_tree,h=b.stat_desc.has_stree,i=b.stat_desc.elems,j=-1;for(a.heap_len=0,a.heap_max=V,c=0;i>c;c++)0!==f[2*c]?(a.heap[++a.heap_len]=j=c,a.depth[c]=0):f[2*c+1]=0;for(;a.heap_len<2;)e=a.heap[++a.heap_len]=2>j?++j:0,f[2*e]=1,a.depth[e]=0,a.opt_len--,h&&(a.static_len-=g[2*e+1]);for(b.max_code=j,c=a.heap_len>>1;c>=1;c--)t(a,f,c);e=i;do c=a.heap[1],a.heap[1]=a.heap[a.heap_len--],t(a,f,1),d=a.heap[1],a.heap[--a.heap_max]=c,a.heap[--a.heap_max]=d,f[2*e]=f[2*c]+f[2*d],a.depth[e]=(a.depth[c]>=a.depth[d]?a.depth[c]:a.depth[d])+1,f[2*c+1]=f[2*d+1]=e,a.heap[1]=e++,t(a,f,1);while(a.heap_len>=2);a.heap[--a.heap_max]=a.heap[1],m(a,b),n(f,j,a.bl_count)}function w(a,b,c){var d,e,f=-1,g=b[1],h=0,i=7,j=4;for(0===g&&(i=138,j=3),b[2*(c+1)+1]=65535,d=0;c>=d;d++)e=g,g=b[2*(d+1)+1],
++h<i&&e===g||(j>h?a.bl_tree[2*e]+=h:0!==e?(e!==f&&a.bl_tree[2*e]++,a.bl_tree[2*$]++):10>=h?a.bl_tree[2*_]++:a.bl_tree[2*aa]++,h=0,f=e,0===g?(i=138,j=3):e===g?(i=6,j=3):(i=7,j=4))}function x(a,b,c){var d,e,f=-1,g=b[1],h=0,k=7,l=4;for(0===g&&(k=138,l=3),d=0;c>=d;d++)if(e=g,g=b[2*(d+1)+1],!(++h<k&&e===g)){if(l>h){do j(a,e,a.bl_tree);while(0!==--h)}else 0!==e?(e!==f&&(j(a,e,a.bl_tree),h--),j(a,$,a.bl_tree),i(a,h-3,2)):10>=h?(j(a,_,a.bl_tree),i(a,h-3,3)):(j(a,aa,a.bl_tree),i(a,h-11,7));h=0,f=e,0===g?(k=138,l=3):e===g?(k=6,l=3):(k=7,l=4)}}function y(a){var b;for(w(a,a.dyn_ltree,a.l_desc.max_code),w(a,a.dyn_dtree,a.d_desc.max_code),v(a,a.bl_desc),b=U-1;b>=3&&0===a.bl_tree[2*ea[b]+1];b--);return a.opt_len+=3*(b+1)+5+5+4,b}function z(a,b,c,d){var e;for(i(a,b-257,5),i(a,c-1,5),i(a,d-4,4),e=0;d>e;e++)i(a,a.bl_tree[2*ea[e]+1],3);x(a,a.dyn_ltree,b-1),x(a,a.dyn_dtree,c-1)}function A(a){var b,c=4093624447;for(b=0;31>=b;b++,c>>>=1)if(1&c&&0!==a.dyn_ltree[2*b])return I;if(0!==a.dyn_ltree[18]||0!==a.dyn_ltree[20]||0!==a.dyn_ltree[26])return J;for(b=32;R>b;b++)if(0!==a.dyn_ltree[2*b])return J;return I}function B(a){pa||(o(),pa=!0),a.l_desc=new f(a.dyn_ltree,ma),a.d_desc=new f(a.dyn_dtree,na),a.bl_desc=new f(a.bl_tree,oa),a.bi_buf=0,a.bi_valid=0,p(a)}function C(a,b,c,d){i(a,(L<<1)+(d?1:0),3),r(a,b,c,!0)}function D(a){i(a,M<<1,3),j(a,Z,ga),l(a)}function E(a,b,c,d){var e,f,g=0;a.level>0?(a.strm.data_type===K&&(a.strm.data_type=A(a)),v(a,a.l_desc),v(a,a.d_desc),g=y(a),e=a.opt_len+3+7>>>3,f=a.static_len+3+7>>>3,e>=f&&(e=f)):e=f=c+5,e>=c+4&&-1!==b?C(a,b,c,d):a.strategy===H||f===e?(i(a,(M<<1)+(d?1:0),3),u(a,ga,ha)):(i(a,(N<<1)+(d?1:0),3),z(a,a.l_desc.max_code+1,a.d_desc.max_code+1,g+1),u(a,a.dyn_ltree,a.dyn_dtree)),p(a),d&&q(a)}function F(a,b,c){return a.pending_buf[a.d_buf+2*a.last_lit]=b>>>8&255,a.pending_buf[a.d_buf+2*a.last_lit+1]=255&b,a.pending_buf[a.l_buf+a.last_lit]=255&c,a.last_lit++,0===b?a.dyn_ltree[2*c]++:(a.matches++,b--,a.dyn_ltree[2*(ja[c]+R+1)]++,a.dyn_dtree[2*g(b)]++),a.last_lit===a.lit_bufsize-1}var G=a("../utils/common"),H=4,I=0,J=1,K=2,L=0,M=1,N=2,O=3,P=258,Q=29,R=256,S=R+1+Q,T=30,U=19,V=2*S+1,W=15,X=16,Y=7,Z=256,$=16,_=17,aa=18,ba=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],ca=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],da=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],ea=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],fa=512,ga=new Array(2*(S+2));d(ga);var ha=new Array(2*T);d(ha);var ia=new Array(fa);d(ia);var ja=new Array(P-O+1);d(ja);var ka=new Array(Q);d(ka);var la=new Array(T);d(la);var ma,na,oa,pa=!1;c._tr_init=B,c._tr_stored_block=C,c._tr_flush_block=E,c._tr_tally=F,c._tr_align=D},{"../utils/common":41}],53:[function(a,b,c){"use strict";function d(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}b.exports=d},{}]},{},[10])(10)});
'''
'''--- src/vendors/kjua.min.js ---
/*! kjua v0.1.1 - https://larsjung.de/kjua/ */
!function(r,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.kjua=t():r.kjua=t()}(this,function(){return function(r){function t(n){if(e[n])return e[n].exports;var o=e[n]={exports:{},id:n,loaded:!1};return r[n].call(o.exports,o,o.exports,t),o.loaded=!0,o.exports}var e={};return t.m=r,t.c=e,t.p="",t(0)}([function(r,t,e){"use strict";var n=e(1),o=n.createCanvas,i=n.canvasToImg,a=n.dpr,u=e(2),f=e(3),c=e(4);r.exports=function(r){var t=Object.assign({},u,r),e=f(t.text,t.ecLevel,t.minVersion,t.quiet),n=t.ratio||a,l=o(t.size,n),s=l.getContext("2d");return s.scale(n,n),c(e,s,t),"image"===t.render?i(l):l}},function(r,t){"use strict";var e=window,n=e.document,o=e.devicePixelRatio||1,i=function(r){return n.createElement(r)},a=function(r,t){return r.getAttribute(t)},u=function(r,t,e){return r.setAttribute(t,e)},f=function(r,t){var e=i("canvas");return u(e,"width",r*t),u(e,"height",r*t),e.style.width=r+"px",e.style.height=r+"px",e},c=function(r){var t=i("img");return u(t,"crossorigin","anonymous"),u(t,"src",r.toDataURL("image/png")),u(t,"width",a(r,"width")),u(t,"height",a(r,"height")),t.style.width=r.style.width,t.style.height=r.style.height,t};r.exports={createCanvas:f,canvasToImg:c,dpr:o}},function(r,t){"use strict";r.exports={render:"image",crisp:!0,minVersion:1,ecLevel:"L",size:200,ratio:null,fill:"#333",back:"#fff",text:"no text",rounded:0,quiet:0,mode:"plain",mSize:30,mPosX:50,mPosY:50,label:"no label",fontname:"sans",fontcolor:"#333",image:null}},function(r,t){"use strict";var e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol?"symbol":typeof r},n=/code length overflow/i,o=function(){var e=function(){function r(t,e){if("undefined"==typeof t.length)throw new Error(t.length+"/"+e);var n=function(){for(var r=0;r<t.length&&0==t[r];)r+=1;for(var n=new Array(t.length-r+e),o=0;o<t.length-r;o+=1)n[o]=t[o+r];return n}(),o={};return o.getAt=function(r){return n[r]},o.getLength=function(){return n.length},o.multiply=function(t){for(var e=new Array(o.getLength()+t.getLength()-1),n=0;n<o.getLength();n+=1)for(var i=0;i<t.getLength();i+=1)e[n+i]^=a.gexp(a.glog(o.getAt(n))+a.glog(t.getAt(i)));return r(e,0)},o.mod=function(t){if(o.getLength()-t.getLength()<0)return o;for(var e=a.glog(o.getAt(0))-a.glog(t.getAt(0)),n=new Array(o.getLength()),i=0;i<o.getLength();i+=1)n[i]=o.getAt(i);for(var i=0;i<t.getLength();i+=1)n[i]^=a.gexp(a.glog(t.getAt(i))+e);return r(n,0).mod(t)},o}var t=function(t,e){var o=236,a=17,l=t,s=n[e],g=null,h=0,d=null,w=new Array,y={},p=function(r,t){h=4*l+17,g=function(r){for(var t=new Array(r),e=0;r>e;e+=1){t[e]=new Array(r);for(var n=0;r>n;n+=1)t[e][n]=null}return t}(h),m(0,0),m(h-7,0),m(0,h-7),E(),B(),M(r,t),l>=7&&T(r),null==d&&(d=x(l,s,w)),k(d,t)},m=function(r,t){for(var e=-1;7>=e;e+=1)if(!(-1>=r+e||r+e>=h))for(var n=-1;7>=n;n+=1)-1>=t+n||t+n>=h||(e>=0&&6>=e&&(0==n||6==n)||n>=0&&6>=n&&(0==e||6==e)||e>=2&&4>=e&&n>=2&&4>=n?g[r+e][t+n]=!0:g[r+e][t+n]=!1)},A=function(){for(var r=0,t=0,e=0;8>e;e+=1){p(!0,e);var n=i.getLostPoint(y);(0==e||r>n)&&(r=n,t=e)}return t},B=function(){for(var r=8;h-8>r;r+=1)null==g[r][6]&&(g[r][6]=r%2==0);for(var t=8;h-8>t;t+=1)null==g[6][t]&&(g[6][t]=t%2==0)},E=function(){for(var r=i.getPatternPosition(l),t=0;t<r.length;t+=1)for(var e=0;e<r.length;e+=1){var n=r[t],o=r[e];if(null==g[n][o])for(var a=-2;2>=a;a+=1)for(var u=-2;2>=u;u+=1)-2==a||2==a||-2==u||2==u||0==a&&0==u?g[n+a][o+u]=!0:g[n+a][o+u]=!1}},T=function(r){for(var t=i.getBCHTypeNumber(l),e=0;18>e;e+=1){var n=!r&&1==(t>>e&1);g[Math.floor(e/3)][e%3+h-8-3]=n}for(var e=0;18>e;e+=1){var n=!r&&1==(t>>e&1);g[e%3+h-8-3][Math.floor(e/3)]=n}},M=function(r,t){for(var e=s<<3|t,n=i.getBCHTypeInfo(e),o=0;15>o;o+=1){var a=!r&&1==(n>>o&1);6>o?g[o][8]=a:8>o?g[o+1][8]=a:g[h-15+o][8]=a}for(var o=0;15>o;o+=1){var a=!r&&1==(n>>o&1);8>o?g[8][h-o-1]=a:9>o?g[8][15-o-1+1]=a:g[8][15-o-1]=a}g[h-8][8]=!r},k=function(r,t){for(var e=-1,n=h-1,o=7,a=0,u=i.getMaskFunction(t),f=h-1;f>0;f-=2)for(6==f&&(f-=1);;){for(var c=0;2>c;c+=1)if(null==g[n][f-c]){var l=!1;a<r.length&&(l=1==(r[a]>>>o&1));var s=u(n,f-c);s&&(l=!l),g[n][f-c]=l,o-=1,-1==o&&(a+=1,o=7)}if(n+=e,0>n||n>=h){n-=e,e=-e;break}}},b=function(t,e){for(var n=0,o=0,a=0,u=new Array(e.length),f=new Array(e.length),c=0;c<e.length;c+=1){var l=e[c].dataCount,s=e[c].totalCount-l;o=Math.max(o,l),a=Math.max(a,s),u[c]=new Array(l);for(var g=0;g<u[c].length;g+=1)u[c][g]=255&t.getBuffer()[g+n];n+=l;var h=i.getErrorCorrectPolynomial(s),v=r(u[c],h.getLength()-1),d=v.mod(h);f[c]=new Array(h.getLength()-1);for(var g=0;g<f[c].length;g+=1){var w=g+d.getLength()-f[c].length;f[c][g]=w>=0?d.getAt(w):0}}for(var y=0,g=0;g<e.length;g+=1)y+=e[g].totalCount;for(var p=new Array(y),m=0,g=0;o>g;g+=1)for(var c=0;c<e.length;c+=1)g<u[c].length&&(p[m]=u[c][g],m+=1);for(var g=0;a>g;g+=1)for(var c=0;c<e.length;c+=1)g<f[c].length&&(p[m]=f[c][g],m+=1);return p},x=function(r,t,e){for(var n=u.getRSBlocks(r,t),c=f(),l=0;l<e.length;l+=1){var s=e[l];c.put(s.getMode(),4),c.put(s.getLength(),i.getLengthInBits(s.getMode(),r)),s.write(c)}for(var g=0,l=0;l<n.length;l+=1)g+=n[l].dataCount;if(c.getLengthInBits()>8*g)throw new Error("code length overflow. ("+c.getLengthInBits()+">"+8*g+")");for(c.getLengthInBits()+4<=8*g&&c.put(0,4);c.getLengthInBits()%8!=0;)c.putBit(!1);for(;;){if(c.getLengthInBits()>=8*g)break;if(c.put(o,8),c.getLengthInBits()>=8*g)break;c.put(a,8)}return b(c,n)};return y.addData=function(r){var t=c(r);w.push(t),d=null},y.isDark=function(r,t){if(0>r||r>=h||0>t||t>=h)throw new Error(r+","+t);return g[r][t]},y.getModuleCount=function(){return h},y.make=function(){p(!1,A())},y.createTableTag=function(r,t){r=r||2,t="undefined"==typeof t?4*r:t;var e="";e+='<table style="',e+=" border-width: 0px; border-style: none;",e+=" border-collapse: collapse;",e+=" padding: 0px; margin: "+t+"px;",e+='">',e+="<tbody>";for(var n=0;n<y.getModuleCount();n+=1){e+="<tr>";for(var o=0;o<y.getModuleCount();o+=1)e+='<td style="',e+=" border-width: 0px; border-style: none;",e+=" border-collapse: collapse;",e+=" padding: 0px; margin: 0px;",e+=" width: "+r+"px;",e+=" height: "+r+"px;",e+=" background-color: ",e+=y.isDark(n,o)?"#000000":"#ffffff",e+=";",e+='"/>';e+="</tr>"}return e+="</tbody>",e+="</table>"},y.createImgTag=function(r,t){r=r||2,t="undefined"==typeof t?4*r:t;var e=y.getModuleCount()*r+2*t,n=t,o=e-t;return v(e,e,function(t,e){if(t>=n&&o>t&&e>=n&&o>e){var i=Math.floor((t-n)/r),a=Math.floor((e-n)/r);return y.isDark(a,i)?0:1}return 1})},y};t.stringToBytes=function(r){for(var t=new Array,e=0;e<r.length;e+=1){var n=r.charCodeAt(e);t.push(255&n)}return t},t.createStringToBytes=function(r,t){var e=function(){for(var e=g(r),n=function(){var r=e.read();if(-1==r)throw new Error;return r},o=0,i={};;){var a=e.read();if(-1==a)break;var u=n(),f=n(),c=n(),l=String.fromCharCode(a<<8|u),s=f<<8|c;i[l]=s,o+=1}if(o!=t)throw new Error(o+" != "+t);return i}(),n="?".charCodeAt(0);return function(r){for(var t=new Array,o=0;o<r.length;o+=1){var i=r.charCodeAt(o);if(128>i)t.push(i);else{var a=e[r.charAt(o)];"number"==typeof a?(255&a)==a?t.push(a):(t.push(a>>>8),t.push(255&a)):t.push(n)}}return t}};var e={MODE_NUMBER:1,MODE_ALPHA_NUM:2,MODE_8BIT_BYTE:4,MODE_KANJI:8},n={L:1,M:0,Q:3,H:2},o={PATTERN000:0,PATTERN001:1,PATTERN010:2,PATTERN011:3,PATTERN100:4,PATTERN101:5,PATTERN110:6,PATTERN111:7},i=function(){var t=[[],[6,18],[6,22],[6,26],[6,30],[6,34],[6,22,38],[6,24,42],[6,26,46],[6,28,50],[6,30,54],[6,32,58],[6,34,62],[6,26,46,66],[6,26,48,70],[6,26,50,74],[6,30,54,78],[6,30,56,82],[6,30,58,86],[6,34,62,90],[6,28,50,72,94],[6,26,50,74,98],[6,30,54,78,102],[6,28,54,80,106],[6,32,58,84,110],[6,30,58,86,114],[6,34,62,90,118],[6,26,50,74,98,122],[6,30,54,78,102,126],[6,26,52,78,104,130],[6,30,56,82,108,134],[6,34,60,86,112,138],[6,30,58,86,114,142],[6,34,62,90,118,146],[6,30,54,78,102,126,150],[6,24,50,76,102,128,154],[6,28,54,80,106,132,158],[6,32,58,84,110,136,162],[6,26,54,82,110,138,166],[6,30,58,86,114,142,170]],n=1335,i=7973,u=21522,f={},c=function(r){for(var t=0;0!=r;)t+=1,r>>>=1;return t};return f.getBCHTypeInfo=function(r){for(var t=r<<10;c(t)-c(n)>=0;)t^=n<<c(t)-c(n);return(r<<10|t)^u},f.getBCHTypeNumber=function(r){for(var t=r<<12;c(t)-c(i)>=0;)t^=i<<c(t)-c(i);return r<<12|t},f.getPatternPosition=function(r){return t[r-1]},f.getMaskFunction=function(r){switch(r){case o.PATTERN000:return function(r,t){return(r+t)%2==0};case o.PATTERN001:return function(r,t){return r%2==0};case o.PATTERN010:return function(r,t){return t%3==0};case o.PATTERN011:return function(r,t){return(r+t)%3==0};case o.PATTERN100:return function(r,t){return(Math.floor(r/2)+Math.floor(t/3))%2==0};case o.PATTERN101:return function(r,t){return r*t%2+r*t%3==0};case o.PATTERN110:return function(r,t){return(r*t%2+r*t%3)%2==0};case o.PATTERN111:return function(r,t){return(r*t%3+(r+t)%2)%2==0};default:throw new Error("bad maskPattern:"+r)}},f.getErrorCorrectPolynomial=function(t){for(var e=r([1],0),n=0;t>n;n+=1)e=e.multiply(r([1,a.gexp(n)],0));return e},f.getLengthInBits=function(r,t){if(t>=1&&10>t)switch(r){case e.MODE_NUMBER:return 10;case e.MODE_ALPHA_NUM:return 9;case e.MODE_8BIT_BYTE:return 8;case e.MODE_KANJI:return 8;default:throw new Error("mode:"+r)}else if(27>t)switch(r){case e.MODE_NUMBER:return 12;case e.MODE_ALPHA_NUM:return 11;case e.MODE_8BIT_BYTE:return 16;case e.MODE_KANJI:return 10;default:throw new Error("mode:"+r)}else{if(!(41>t))throw new Error("type:"+t);switch(r){case e.MODE_NUMBER:return 14;case e.MODE_ALPHA_NUM:return 13;case e.MODE_8BIT_BYTE:return 16;case e.MODE_KANJI:return 12;default:throw new Error("mode:"+r)}}},f.getLostPoint=function(r){for(var t=r.getModuleCount(),e=0,n=0;t>n;n+=1)for(var o=0;t>o;o+=1){for(var i=0,a=r.isDark(n,o),u=-1;1>=u;u+=1)if(!(0>n+u||n+u>=t))for(var f=-1;1>=f;f+=1)0>o+f||o+f>=t||0==u&&0==f||a==r.isDark(n+u,o+f)&&(i+=1);i>5&&(e+=3+i-5)}for(var n=0;t-1>n;n+=1)for(var o=0;t-1>o;o+=1){var c=0;r.isDark(n,o)&&(c+=1),r.isDark(n+1,o)&&(c+=1),r.isDark(n,o+1)&&(c+=1),r.isDark(n+1,o+1)&&(c+=1),0!=c&&4!=c||(e+=3)}for(var n=0;t>n;n+=1)for(var o=0;t-6>o;o+=1)r.isDark(n,o)&&!r.isDark(n,o+1)&&r.isDark(n,o+2)&&r.isDark(n,o+3)&&r.isDark(n,o+4)&&!r.isDark(n,o+5)&&r.isDark(n,o+6)&&(e+=40);for(var o=0;t>o;o+=1)for(var n=0;t-6>n;n+=1)r.isDark(n,o)&&!r.isDark(n+1,o)&&r.isDark(n+2,o)&&r.isDark(n+3,o)&&r.isDark(n+4,o)&&!r.isDark(n+5,o)&&r.isDark(n+6,o)&&(e+=40);for(var l=0,o=0;t>o;o+=1)for(var n=0;t>n;n+=1)r.isDark(n,o)&&(l+=1);var s=Math.abs(100*l/t/t-50)/5;return e+=10*s},f}(),a=function(){for(var r=new Array(256),t=new Array(256),e=0;8>e;e+=1)r[e]=1<<e;for(var e=8;256>e;e+=1)r[e]=r[e-4]^r[e-5]^r[e-6]^r[e-8];for(var e=0;255>e;e+=1)t[r[e]]=e;var n={};return n.glog=function(r){if(1>r)throw new Error("glog("+r+")");return t[r]},n.gexp=function(t){for(;0>t;)t+=255;for(;t>=256;)t-=255;return r[t]},n}(),u=function(){var r=[[1,26,19],[1,26,16],[1,26,13],[1,26,9],[1,44,34],[1,44,28],[1,44,22],[1,44,16],[1,70,55],[1,70,44],[2,35,17],[2,35,13],[1,100,80],[2,50,32],[2,50,24],[4,25,9],[1,134,108],[2,67,43],[2,33,15,2,34,16],[2,33,11,2,34,12],[2,86,68],[4,43,27],[4,43,19],[4,43,15],[2,98,78],[4,49,31],[2,32,14,4,33,15],[4,39,13,1,40,14],[2,121,97],[2,60,38,2,61,39],[4,40,18,2,41,19],[4,40,14,2,41,15],[2,146,116],[3,58,36,2,59,37],[4,36,16,4,37,17],[4,36,12,4,37,13],[2,86,68,2,87,69],[4,69,43,1,70,44],[6,43,19,2,44,20],[6,43,15,2,44,16],[4,101,81],[1,80,50,4,81,51],[4,50,22,4,51,23],[3,36,12,8,37,13],[2,116,92,2,117,93],[6,58,36,2,59,37],[4,46,20,6,47,21],[7,42,14,4,43,15],[4,133,107],[8,59,37,1,60,38],[8,44,20,4,45,21],[12,33,11,4,34,12],[3,145,115,1,146,116],[4,64,40,5,65,41],[11,36,16,5,37,17],[11,36,12,5,37,13],[5,109,87,1,110,88],[5,65,41,5,66,42],[5,54,24,7,55,25],[11,36,12,7,37,13],[5,122,98,1,123,99],[7,73,45,3,74,46],[15,43,19,2,44,20],[3,45,15,13,46,16],[1,135,107,5,136,108],[10,74,46,1,75,47],[1,50,22,15,51,23],[2,42,14,17,43,15],[5,150,120,1,151,121],[9,69,43,4,70,44],[17,50,22,1,51,23],[2,42,14,19,43,15],[3,141,113,4,142,114],[3,70,44,11,71,45],[17,47,21,4,48,22],[9,39,13,16,40,14],[3,135,107,5,136,108],[3,67,41,13,68,42],[15,54,24,5,55,25],[15,43,15,10,44,16],[4,144,116,4,145,117],[17,68,42],[17,50,22,6,51,23],[19,46,16,6,47,17],[2,139,111,7,140,112],[17,74,46],[7,54,24,16,55,25],[34,37,13],[4,151,121,5,152,122],[4,75,47,14,76,48],[11,54,24,14,55,25],[16,45,15,14,46,16],[6,147,117,4,148,118],[6,73,45,14,74,46],[11,54,24,16,55,25],[30,46,16,2,47,17],[8,132,106,4,133,107],[8,75,47,13,76,48],[7,54,24,22,55,25],[22,45,15,13,46,16],[10,142,114,2,143,115],[19,74,46,4,75,47],[28,50,22,6,51,23],[33,46,16,4,47,17],[8,152,122,4,153,123],[22,73,45,3,74,46],[8,53,23,26,54,24],[12,45,15,28,46,16],[3,147,117,10,148,118],[3,73,45,23,74,46],[4,54,24,31,55,25],[11,45,15,31,46,16],[7,146,116,7,147,117],[21,73,45,7,74,46],[1,53,23,37,54,24],[19,45,15,26,46,16],[5,145,115,10,146,116],[19,75,47,10,76,48],[15,54,24,25,55,25],[23,45,15,25,46,16],[13,145,115,3,146,116],[2,74,46,29,75,47],[42,54,24,1,55,25],[23,45,15,28,46,16],[17,145,115],[10,74,46,23,75,47],[10,54,24,35,55,25],[19,45,15,35,46,16],[17,145,115,1,146,116],[14,74,46,21,75,47],[29,54,24,19,55,25],[11,45,15,46,46,16],[13,145,115,6,146,116],[14,74,46,23,75,47],[44,54,24,7,55,25],[59,46,16,1,47,17],[12,151,121,7,152,122],[12,75,47,26,76,48],[39,54,24,14,55,25],[22,45,15,41,46,16],[6,151,121,14,152,122],[6,75,47,34,76,48],[46,54,24,10,55,25],[2,45,15,64,46,16],[17,152,122,4,153,123],[29,74,46,14,75,47],[49,54,24,10,55,25],[24,45,15,46,46,16],[4,152,122,18,153,123],[13,74,46,32,75,47],[48,54,24,14,55,25],[42,45,15,32,46,16],[20,147,117,4,148,118],[40,75,47,7,76,48],[43,54,24,22,55,25],[10,45,15,67,46,16],[19,148,118,6,149,119],[18,75,47,31,76,48],[34,54,24,34,55,25],[20,45,15,61,46,16]],t=function(r,t){var e={};return e.totalCount=r,e.dataCount=t,e},e={},o=function(t,e){switch(e){case n.L:return r[4*(t-1)+0];case n.M:return r[4*(t-1)+1];case n.Q:return r[4*(t-1)+2];case n.H:return r[4*(t-1)+3];default:return}};return e.getRSBlocks=function(r,e){var n=o(r,e);if("undefined"==typeof n)throw new Error("bad rs block @ typeNumber:"+r+"/errorCorrectLevel:"+e);for(var i=n.length/3,a=new Array,u=0;i>u;u+=1)for(var f=n[3*u+0],c=n[3*u+1],l=n[3*u+2],s=0;f>s;s+=1)a.push(t(c,l));return a},e}(),f=function(){var r=new Array,t=0,e={};return e.getBuffer=function(){return r},e.getAt=function(t){var e=Math.floor(t/8);return 1==(r[e]>>>7-t%8&1)},e.put=function(r,t){for(var n=0;t>n;n+=1)e.putBit(1==(r>>>t-n-1&1))},e.getLengthInBits=function(){return t},e.putBit=function(e){var n=Math.floor(t/8);r.length<=n&&r.push(0),e&&(r[n]|=128>>>t%8),t+=1},e},c=function(r){var n=e.MODE_8BIT_BYTE,o=t.stringToBytes(r),i={};return i.getMode=function(){return n},i.getLength=function(r){return o.length},i.write=function(r){for(var t=0;t<o.length;t+=1)r.put(o[t],8)},i},l=function(){var r=new Array,t={};return t.writeByte=function(t){r.push(255&t)},t.writeShort=function(r){t.writeByte(r),t.writeByte(r>>>8)},t.writeBytes=function(r,e,n){e=e||0,n=n||r.length;for(var o=0;n>o;o+=1)t.writeByte(r[o+e])},t.writeString=function(r){for(var e=0;e<r.length;e+=1)t.writeByte(r.charCodeAt(e))},t.toByteArray=function(){return r},t.toString=function(){var t="";t+="[";for(var e=0;e<r.length;e+=1)e>0&&(t+=","),t+=r[e];return t+="]"},t},s=function(){var r=0,t=0,e=0,n="",o={},i=function(r){n+=String.fromCharCode(a(63&r))},a=function(r){if(0>r);else{if(26>r)return 65+r;if(52>r)return 97+(r-26);if(62>r)return 48+(r-52);if(62==r)return 43;if(63==r)return 47}throw new Error("n:"+r)};return o.writeByte=function(n){for(r=r<<8|255&n,t+=8,e+=1;t>=6;)i(r>>>t-6),t-=6},o.flush=function(){if(t>0&&(i(r<<6-t),r=0,t=0),e%3!=0)for(var o=3-e%3,a=0;o>a;a+=1)n+="="},o.toString=function(){return n},o},g=function(r){var t=r,e=0,n=0,o=0,i={};i.read=function(){for(;8>o;){if(e>=t.length){if(0==o)return-1;throw new Error("unexpected end of file./"+o)}var r=t.charAt(e);if(e+=1,"="==r)return o=0,-1;r.match(/^\s$/)||(n=n<<6|a(r.charCodeAt(0)),o+=6)}var i=n>>>o-8&255;return o-=8,i};var a=function(r){if(r>=65&&90>=r)return r-65;if(r>=97&&122>=r)return r-97+26;if(r>=48&&57>=r)return r-48+52;if(43==r)return 62;if(47==r)return 63;throw new Error("c:"+r)};return i},h=function(r,t){var e=r,n=t,o=new Array(r*t),i={};i.setPixel=function(r,t,n){o[t*e+r]=n},i.write=function(r){r.writeString("GIF87a"),r.writeShort(e),r.writeShort(n),r.writeByte(128),r.writeByte(0),r.writeByte(0),r.writeByte(0),r.writeByte(0),r.writeByte(0),r.writeByte(255),r.writeByte(255),r.writeByte(255),r.writeString(","),r.writeShort(0),r.writeShort(0),r.writeShort(e),r.writeShort(n),r.writeByte(0);var t=2,o=u(t);r.writeByte(t);for(var i=0;o.length-i>255;)r.writeByte(255),r.writeBytes(o,i,255),i+=255;r.writeByte(o.length-i),r.writeBytes(o,i,o.length-i),r.writeByte(0),r.writeString(";")};var a=function(r){var t=r,e=0,n=0,o={};return o.write=function(r,o){if(r>>>o!=0)throw new Error("length over");for(;e+o>=8;)t.writeByte(255&(r<<e|n)),o-=8-e,r>>>=8-e,n=0,e=0;n=r<<e|n,e+=o},o.flush=function(){e>0&&t.writeByte(n)},o},u=function(r){for(var t=1<<r,e=(1<<r)+1,n=r+1,i=f(),u=0;t>u;u+=1)i.add(String.fromCharCode(u));i.add(String.fromCharCode(t)),i.add(String.fromCharCode(e));var c=l(),s=a(c);s.write(t,n);var g=0,h=String.fromCharCode(o[g]);for(g+=1;g<o.length;){var v=String.fromCharCode(o[g]);g+=1,i.contains(h+v)?h+=v:(s.write(i.indexOf(h),n),i.size()<4095&&(i.size()==1<<n&&(n+=1),i.add(h+v)),h=v)}return s.write(i.indexOf(h),n),s.write(e,n),s.flush(),c.toByteArray()},f=function(){var r={},t=0,e={};return e.add=function(n){if(e.contains(n))throw new Error("dup key:"+n);r[n]=t,t+=1},e.size=function(){return t},e.indexOf=function(t){return r[t]},e.contains=function(t){return"undefined"!=typeof r[t]},e};return i},v=function(r,t,e,n){for(var o=h(r,t),i=0;t>i;i+=1)for(var a=0;r>a;a+=1)o.setPixel(a,i,e(a,i));var u=l();o.write(u);for(var f=s(),c=u.toByteArray(),g=0;g<c.length;g+=1)f.writeByte(c[g]);f.flush();var v="";return v+="<img",v+=' src="',v+="data:image/gif;base64,",v+=f,v+='"',v+=' width="',v+=r,v+='"',v+=' height="',v+=t,v+='"',n&&(v+=' alt="',v+=n,v+='"'),v+="/>"};return t}();return function(e){"function"==typeof define&&define.amd?define([],e):"object"==typeof t&&(r.exports=e())}(function(){return e}),!function(r){r.stringToBytes=function(r){function t(r){for(var t=[],e=0;e<r.length;e++){var n=r.charCodeAt(e);128>n?t.push(n):2048>n?t.push(192|n>>6,128|63&n):55296>n||n>=57344?t.push(224|n>>12,128|n>>6&63,128|63&n):(e++,n=65536+((1023&n)<<10|1023&r.charCodeAt(e)),t.push(240|n>>18,128|n>>12&63,128|n>>6&63,128|63&n))}return t}return t(r)}}(e),e}(),i=function(r,t){var i=arguments.length<=2||void 0===arguments[2]?1:arguments[2];i=Math.max(1,i);for(var a=i;40>=a;a+=1)try{var u=function(){var e=o(a,t);e.addData(r),e.make();var n=e.getModuleCount(),i=function(r,t){return r>=0&&n>r&&t>=0&&n>t&&e.isDark(r,t)};return{v:{text:r,level:t,version:a,moduleCount:n,isDark:i}}}();if("object"===("undefined"==typeof u?"undefined":e(u)))return u.v}catch(f){if(!n.test(f.message))throw f}return null},a=function(){var r=arguments.length<=0||void 0===arguments[0]?"":arguments[0],t=arguments.length<=1||void 0===arguments[1]?"L":arguments[1],e=arguments.length<=2||void 0===arguments[2]?1:arguments[2],n=arguments.length<=3||void 0===arguments[3]?0:arguments[3],o=i(r,t,e);return o&&!function(){var r=o.isDark;o.moduleCount+=2*n,o.isDark=function(t,e){return r(t-n,e-n)}}(),o};r.exports=a},function(r,t,e){"use strict";var n=e(5),o=e(6),i=function(r,t){r.fillStyle=t.back,r.fillRect(0,0,t.size,t.size)},a=function(r,t,e,n,o,i){r.isDark(o,i)&&t.rect(i*n,o*n,n,n)},u=function(r,t,e){if(r){var o=e.rounded>0&&e.rounded<=100?n:a,i=r.moduleCount,u=e.size/i,f=0;e.crisp&&(u=Math.floor(u),f=Math.floor((e.size-u*i)/2)),t.translate(f,f),t.beginPath();for(var c=0;i>c;c+=1)for(var l=0;i>l;l+=1)o(r,t,e,u,c,l);t.fillStyle=e.fill,t.fill(),t.translate(-f,-f)}},f=function(r,t,e){i(t,e),u(r,t,e),o(t,e)};r.exports=f},function(r,t){"use strict";var e=function(r){return{c:r,m:function(){var r;return(r=this.c).moveTo.apply(r,arguments),this},l:function(){var r;return(r=this.c).lineTo.apply(r,arguments),this},a:function(){var r;return(r=this.c).arcTo.apply(r,arguments),this}}},n=function(r,t,e,n,o,i,a,u,f,c){a?r.m(t+i,e):r.m(t,e),u?r.l(n-i,e).a(n,e,n,o,i):r.l(n,e),f?r.l(n,o-i).a(n,o,t,o,i):r.l(n,o),c?r.l(t+i,o).a(t,o,t,e,i):r.l(t,o),a?r.l(t,e+i).a(t,e,n,e,i):r.l(t,e)},o=function(r,t,e,n,o,i,a,u,f,c){a&&r.m(t+i,e).l(t,e).l(t,e+i).a(t,e,t+i,e,i),u&&r.m(n-i,e).l(n,e).l(n,e+i).a(n,e,n-i,e,i),f&&r.m(n-i,o).l(n,o).l(n,o-i).a(n,o,n-i,o,i),c&&r.m(t+i,o).l(t,o).l(t,o-i).a(t,o,t+i,o,i)},i=function(r,t,i,a,u,f){var c=f*a,l=u*a,s=c+a,g=l+a,h=.005*i.rounded*a,v=r.isDark,d=u-1,w=u+1,y=f-1,p=f+1,m=v(u,f),A=v(d,y),B=v(d,f),E=v(d,p),T=v(u,p),M=v(w,p),k=v(w,f),b=v(w,y),x=v(u,y),D=e(t);m?n(D,c,l,s,g,h,!B&&!x,!B&&!T,!k&&!T,!k&&!x):o(D,c,l,s,g,h,B&&x&&A,B&&T&&E,k&&T&&M,k&&x&&b)};r.exports=i},function(r,t){"use strict";var e=function(r,t){var e=t.size,n="bold "+.01*t.mSize*e+"px "+t.fontname;r.strokeStyle=t.back,r.lineWidth=.01*t.mSize*e*.1,r.fillStyle=t.fontcolor,r.font=n;var o=r.measureText(t.label).width,i=.01*t.mSize,a=o/e,u=(1-a)*t.mPosX*.01,f=(1-i)*t.mPosY*.01,c=u*e,l=f*e+.75*t.mSize*.01*e;r.strokeText(t.label,c,l),r.fillText(t.label,c,l)},n=function(r,t){var e=t.size,n=t.image.naturalWidth||1,o=t.image.naturalHeight||1,i=.01*t.mSize,a=i*n/o,u=(1-a)*t.mPosX*.01,f=(1-i)*t.mPosY*.01,c=u*e,l=f*e,s=a*e,g=i*e;r.drawImage(t.image,c,l,s,g)},o=function(r,t){var o=t.mode;"label"===o?e(r,t):"image"===o&&n(r,t)};r.exports=o}])});
'''
'''--- src/vendors/qrcode.js ---
//---------------------------------------------------------------------
//
// QR Code Generator for JavaScript
//
// Copyright (c) 2009 Kazuhiko Arase
//
// URL: http://www.d-project.com/
//
// Licensed under the MIT license:
//  http://www.opensource.org/licenses/mit-license.php
//
// The word 'QR Code' is registered trademark of
// DENSO WAVE INCORPORATED
//  http://www.denso-wave.com/qrcode/faqpatent-e.html
//
//---------------------------------------------------------------------

var qrcode = function() {

  //---------------------------------------------------------------------
  // qrcode
  //---------------------------------------------------------------------

  /**
   * qrcode
   * @param typeNumber 1 to 40
   * @param errorCorrectLevel 'L','M','Q','H'
   */
  var qrcode = function(typeNumber, errorCorrectLevel) {

    var PAD0 = 0xEC;
    var PAD1 = 0x11;

    var _typeNumber = typeNumber;
    var _errorCorrectLevel = QRErrorCorrectLevel[errorCorrectLevel];
    var _modules = null;
    var _moduleCount = 0;
    var _dataCache = null;
    var _dataList = new Array();

    var _this = {};

    var makeImpl = function(test, maskPattern) {

      _moduleCount = _typeNumber * 4 + 17;
      _modules = function(moduleCount) {
        var modules = new Array(moduleCount);
        for (var row = 0; row < moduleCount; row += 1) {
          modules[row] = new Array(moduleCount);
          for (var col = 0; col < moduleCount; col += 1) {
            modules[row][col] = null;
          }
        }
        return modules;
      }(_moduleCount);

      setupPositionProbePattern(0, 0);
      setupPositionProbePattern(_moduleCount - 7, 0);
      setupPositionProbePattern(0, _moduleCount - 7);
      setupPositionAdjustPattern();
      setupTimingPattern();
      setupTypeInfo(test, maskPattern);

      if (_typeNumber >= 7) {
        setupTypeNumber(test);
      }

      if (_dataCache == null) {
        _dataCache = createData(_typeNumber, _errorCorrectLevel, _dataList);
      }

      mapData(_dataCache, maskPattern);
    };

    var setupPositionProbePattern = function(row, col) {

      for (var r = -1; r <= 7; r += 1) {

        if (row + r <= -1 || _moduleCount <= row + r) continue;

        for (var c = -1; c <= 7; c += 1) {

          if (col + c <= -1 || _moduleCount <= col + c) continue;

          if ( (0 <= r && r <= 6 && (c == 0 || c == 6) )
              || (0 <= c && c <= 6 && (r == 0 || r == 6) )
              || (2 <= r && r <= 4 && 2 <= c && c <= 4) ) {
            _modules[row + r][col + c] = true;
          } else {
            _modules[row + r][col + c] = false;
          }
        }
      }
    };

    var getBestMaskPattern = function() {

      var minLostPoint = 0;
      var pattern = 0;

      for (var i = 0; i < 8; i += 1) {

        makeImpl(true, i);

        var lostPoint = QRUtil.getLostPoint(_this);

        if (i == 0 || minLostPoint > lostPoint) {
          minLostPoint = lostPoint;
          pattern = i;
        }
      }

      return pattern;
    };

    var setupTimingPattern = function() {

      for (var r = 8; r < _moduleCount - 8; r += 1) {
        if (_modules[r][6] != null) {
          continue;
        }
        _modules[r][6] = (r % 2 == 0);
      }

      for (var c = 8; c < _moduleCount - 8; c += 1) {
        if (_modules[6][c] != null) {
          continue;
        }
        _modules[6][c] = (c % 2 == 0);
      }
    };

    var setupPositionAdjustPattern = function() {

      var pos = QRUtil.getPatternPosition(_typeNumber);

      for (var i = 0; i < pos.length; i += 1) {

        for (var j = 0; j < pos.length; j += 1) {

          var row = pos[i];
          var col = pos[j];

          if (_modules[row][col] != null) {
            continue;
          }

          for (var r = -2; r <= 2; r += 1) {

            for (var c = -2; c <= 2; c += 1) {

              if (r == -2 || r == 2 || c == -2 || c == 2
                  || (r == 0 && c == 0) ) {
                _modules[row + r][col + c] = true;
              } else {
                _modules[row + r][col + c] = false;
              }
            }
          }
        }
      }
    };

    var setupTypeNumber = function(test) {

      var bits = QRUtil.getBCHTypeNumber(_typeNumber);

      for (var i = 0; i < 18; i += 1) {
        var mod = (!test && ( (bits >> i) & 1) == 1);
        _modules[Math.floor(i / 3)][i % 3 + _moduleCount - 8 - 3] = mod;
      }

      for (var i = 0; i < 18; i += 1) {
        var mod = (!test && ( (bits >> i) & 1) == 1);
        _modules[i % 3 + _moduleCount - 8 - 3][Math.floor(i / 3)] = mod;
      }
    };

    var setupTypeInfo = function(test, maskPattern) {

      var data = (_errorCorrectLevel << 3) | maskPattern;
      var bits = QRUtil.getBCHTypeInfo(data);

      // vertical
      for (var i = 0; i < 15; i += 1) {

        var mod = (!test && ( (bits >> i) & 1) == 1);

        if (i < 6) {
          _modules[i][8] = mod;
        } else if (i < 8) {
          _modules[i + 1][8] = mod;
        } else {
          _modules[_moduleCount - 15 + i][8] = mod;
        }
      }

      // horizontal
      for (var i = 0; i < 15; i += 1) {

        var mod = (!test && ( (bits >> i) & 1) == 1);

        if (i < 8) {
          _modules[8][_moduleCount - i - 1] = mod;
        } else if (i < 9) {
          _modules[8][15 - i - 1 + 1] = mod;
        } else {
          _modules[8][15 - i - 1] = mod;
        }
      }

      // fixed module
      _modules[_moduleCount - 8][8] = (!test);
    };

    var mapData = function(data, maskPattern) {

      var inc = -1;
      var row = _moduleCount - 1;
      var bitIndex = 7;
      var byteIndex = 0;
      var maskFunc = QRUtil.getMaskFunction(maskPattern);

      for (var col = _moduleCount - 1; col > 0; col -= 2) {

        if (col == 6) col -= 1;

        while (true) {

          for (var c = 0; c < 2; c += 1) {

            if (_modules[row][col - c] == null) {

              var dark = false;

              if (byteIndex < data.length) {
                dark = ( ( (data[byteIndex] >>> bitIndex) & 1) == 1);
              }

              var mask = maskFunc(row, col - c);

              if (mask) {
                dark = !dark;
              }

              _modules[row][col - c] = dark;
              bitIndex -= 1;

              if (bitIndex == -1) {
                byteIndex += 1;
                bitIndex = 7;
              }
            }
          }

          row += inc;

          if (row < 0 || _moduleCount <= row) {
            row -= inc;
            inc = -inc;
            break;
          }
        }
      }
    };

    var createBytes = function(buffer, rsBlocks) {

      var offset = 0;

      var maxDcCount = 0;
      var maxEcCount = 0;

      var dcdata = new Array(rsBlocks.length);
      var ecdata = new Array(rsBlocks.length);

      for (var r = 0; r < rsBlocks.length; r += 1) {

        var dcCount = rsBlocks[r].dataCount;
        var ecCount = rsBlocks[r].totalCount - dcCount;

        maxDcCount = Math.max(maxDcCount, dcCount);
        maxEcCount = Math.max(maxEcCount, ecCount);

        dcdata[r] = new Array(dcCount);

        for (var i = 0; i < dcdata[r].length; i += 1) {
          dcdata[r][i] = 0xff & buffer.getBuffer()[i + offset];
        }
        offset += dcCount;

        var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);
        var rawPoly = qrPolynomial(dcdata[r], rsPoly.getLength() - 1);

        var modPoly = rawPoly.mod(rsPoly);
        ecdata[r] = new Array(rsPoly.getLength() - 1);
        for (var i = 0; i < ecdata[r].length; i += 1) {
          var modIndex = i + modPoly.getLength() - ecdata[r].length;
          ecdata[r][i] = (modIndex >= 0)? modPoly.getAt(modIndex) : 0;
        }
      }

      var totalCodeCount = 0;
      for (var i = 0; i < rsBlocks.length; i += 1) {
        totalCodeCount += rsBlocks[i].totalCount;
      }

      var data = new Array(totalCodeCount);
      var index = 0;

      for (var i = 0; i < maxDcCount; i += 1) {
        for (var r = 0; r < rsBlocks.length; r += 1) {
          if (i < dcdata[r].length) {
            data[index] = dcdata[r][i];
            index += 1;
          }
        }
      }

      for (var i = 0; i < maxEcCount; i += 1) {
        for (var r = 0; r < rsBlocks.length; r += 1) {
          if (i < ecdata[r].length) {
            data[index] = ecdata[r][i];
            index += 1;
          }
        }
      }

      return data;
    };

    var createData = function(typeNumber, errorCorrectLevel, dataList) {

      var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);

      var buffer = qrBitBuffer();

      for (var i = 0; i < dataList.length; i += 1) {
        var data = dataList[i];
        buffer.put(data.getMode(), 4);
        buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber) );
        data.write(buffer);
      }

      // calc num max data.
      var totalDataCount = 0;
      for (var i = 0; i < rsBlocks.length; i += 1) {
        totalDataCount += rsBlocks[i].dataCount;
      }

      if (buffer.getLengthInBits() > totalDataCount * 8) {
        throw new Error('code length overflow. ('
          + buffer.getLengthInBits()
          + '>'
          + totalDataCount * 8
          + ')');
      }

      // end code
      if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {
        buffer.put(0, 4);
      }

      // padding
      while (buffer.getLengthInBits() % 8 != 0) {
        buffer.putBit(false);
      }

      // padding
      while (true) {

        if (buffer.getLengthInBits() >= totalDataCount * 8) {
          break;
        }
        buffer.put(PAD0, 8);

        if (buffer.getLengthInBits() >= totalDataCount * 8) {
          break;
        }
        buffer.put(PAD1, 8);
      }

      return createBytes(buffer, rsBlocks);
    };

    _this.addData = function(data) {
      var newData = qr8BitByte(data);
      _dataList.push(newData);
      _dataCache = null;
    };

    _this.isDark = function(row, col) {
      if (row < 0 || _moduleCount <= row || col < 0 || _moduleCount <= col) {
        throw new Error(row + ',' + col);
      }
      return _modules[row][col];
    };

    _this.getModuleCount = function() {
      return _moduleCount;
    };

    _this.make = function() {
      makeImpl(false, getBestMaskPattern() );
    };

    _this.createTableTag = function(cellSize, margin) {

      cellSize = cellSize || 2;
      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;

      var qrHtml = '';

      qrHtml += '<table style="';
      qrHtml += ' border-width: 0px; border-style: none;';
      qrHtml += ' border-collapse: collapse;';
      qrHtml += ' padding: 0px; margin: ' + margin + 'px;';
      qrHtml += '">';
      qrHtml += '<tbody>';

      for (var r = 0; r < _this.getModuleCount(); r += 1) {

        qrHtml += '<tr>';

        for (var c = 0; c < _this.getModuleCount(); c += 1) {
          qrHtml += '<td style="';
          qrHtml += ' border-width: 0px; border-style: none;';
          qrHtml += ' border-collapse: collapse;';
          qrHtml += ' padding: 0px; margin: 0px;';
          qrHtml += ' width: ' + cellSize + 'px;';
          qrHtml += ' height: ' + cellSize + 'px;';
          qrHtml += ' background-color: ';
          qrHtml += _this.isDark(r, c)? '#000000' : '#ffffff';
          qrHtml += ';';
          qrHtml += '"/>';
        }

        qrHtml += '</tr>';
      }

      qrHtml += '</tbody>';
      qrHtml += '</table>';

      return qrHtml;
    };

    _this.createSvgTag = function(cellSize, margin) {

      cellSize = cellSize || 2;
      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;
      var size = _this.getModuleCount() * cellSize + margin * 2;
      var c, mc, r, mr, qrSvg='', rect;

      rect = 'l' + cellSize + ',0 0,' + cellSize +
        ' -' + cellSize + ',0 0,-' + cellSize + 'z ';

      qrSvg += '<svg';
      qrSvg += ' width="' + size + 'px"';
      qrSvg += ' height="' + size + 'px"';
      qrSvg += ' xmlns="http://www.w3.org/2000/svg"';
      qrSvg += '>';
      qrSvg += '<path d="';

      for (r = 0; r < _this.getModuleCount(); r += 1) {
        mr = r * cellSize + margin;
        for (c = 0; c < _this.getModuleCount(); c += 1) {
          if (_this.isDark(r, c) ) {
            mc = c*cellSize+margin;
            qrSvg += 'M' + mc + ',' + mr + rect;
          }
        }
      }

      qrSvg += '" stroke="transparent" fill="black"/>';
      qrSvg += '</svg>';

      return qrSvg;
    };

    _this.createImgTag = function(cellSize, margin) {

      cellSize = cellSize || 2;
      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;

      var size = _this.getModuleCount() * cellSize + margin * 2;
      var min = margin;
      var max = size - margin;

      return createImgTag(size, size, function(x, y) {
        if (min <= x && x < max && min <= y && y < max) {
          var c = Math.floor( (x - min) / cellSize);
          var r = Math.floor( (y - min) / cellSize);
          return _this.isDark(r, c)? 0 : 1;
        } else {
          return 1;
        }
      } );
    };

    return _this;
  };

  //---------------------------------------------------------------------
  // qrcode.stringToBytes
  //---------------------------------------------------------------------

  qrcode.stringToBytes = function(s) {
    var bytes = new Array();
    for (var i = 0; i < s.length; i += 1) {
      var c = s.charCodeAt(i);
      bytes.push(c & 0xff);
    }
    return bytes;
  };

  //---------------------------------------------------------------------
  // qrcode.createStringToBytes
  //---------------------------------------------------------------------

  /**
   * @param unicodeData base64 string of byte array.
   * [16bit Unicode],[16bit Bytes], ...
   * @param numChars
   */
  qrcode.createStringToBytes = function(unicodeData, numChars) {

    // create conversion map.

    var unicodeMap = function() {

      var bin = base64DecodeInputStream(unicodeData);
      var read = function() {
        var b = bin.read();
        if (b == -1) throw new Error();
        return b;
      };

      var count = 0;
      var unicodeMap = {};
      while (true) {
        var b0 = bin.read();
        if (b0 == -1) break;
        var b1 = read();
        var b2 = read();
        var b3 = read();
        var k = String.fromCharCode( (b0 << 8) | b1);
        var v = (b2 << 8) | b3;
        unicodeMap[k] = v;
        count += 1;
      }
      if (count != numChars) {
        throw new Error(count + ' != ' + numChars);
      }

      return unicodeMap;
    }();

    var unknownChar = '?'.charCodeAt(0);

    return function(s) {
      var bytes = new Array();
      for (var i = 0; i < s.length; i += 1) {
        var c = s.charCodeAt(i);
        if (c < 128) {
          bytes.push(c);
        } else {
          var b = unicodeMap[s.charAt(i)];
          if (typeof b == 'number') {
            if ( (b & 0xff) == b) {
              // 1byte
              bytes.push(b);
            } else {
              // 2bytes
              bytes.push(b >>> 8);
              bytes.push(b & 0xff);
            }
          } else {
            bytes.push(unknownChar);
          }
        }
      }
      return bytes;
    };
  };

  //---------------------------------------------------------------------
  // QRMode
  //---------------------------------------------------------------------

  var QRMode = {
    MODE_NUMBER :    1 << 0,
    MODE_ALPHA_NUM : 1 << 1,
    MODE_8BIT_BYTE : 1 << 2,
    MODE_KANJI :     1 << 3
  };

  //---------------------------------------------------------------------
  // QRErrorCorrectLevel
  //---------------------------------------------------------------------

  var QRErrorCorrectLevel = {
    L : 1,
    M : 0,
    Q : 3,
    H : 2
  };

  //---------------------------------------------------------------------
  // QRMaskPattern
  //---------------------------------------------------------------------

  var QRMaskPattern = {
    PATTERN000 : 0,
    PATTERN001 : 1,
    PATTERN010 : 2,
    PATTERN011 : 3,
    PATTERN100 : 4,
    PATTERN101 : 5,
    PATTERN110 : 6,
    PATTERN111 : 7
  };

  //---------------------------------------------------------------------
  // QRUtil
  //---------------------------------------------------------------------

  var QRUtil = function() {

    var PATTERN_POSITION_TABLE = [
      [],
      [6, 18],
      [6, 22],
      [6, 26],
      [6, 30],
      [6, 34],
      [6, 22, 38],
      [6, 24, 42],
      [6, 26, 46],
      [6, 28, 50],
      [6, 30, 54],
      [6, 32, 58],
      [6, 34, 62],
      [6, 26, 46, 66],
      [6, 26, 48, 70],
      [6, 26, 50, 74],
      [6, 30, 54, 78],
      [6, 30, 56, 82],
      [6, 30, 58, 86],
      [6, 34, 62, 90],
      [6, 28, 50, 72, 94],
      [6, 26, 50, 74, 98],
      [6, 30, 54, 78, 102],
      [6, 28, 54, 80, 106],
      [6, 32, 58, 84, 110],
      [6, 30, 58, 86, 114],
      [6, 34, 62, 90, 118],
      [6, 26, 50, 74, 98, 122],
      [6, 30, 54, 78, 102, 126],
      [6, 26, 52, 78, 104, 130],
      [6, 30, 56, 82, 108, 134],
      [6, 34, 60, 86, 112, 138],
      [6, 30, 58, 86, 114, 142],
      [6, 34, 62, 90, 118, 146],
      [6, 30, 54, 78, 102, 126, 150],
      [6, 24, 50, 76, 102, 128, 154],
      [6, 28, 54, 80, 106, 132, 158],
      [6, 32, 58, 84, 110, 136, 162],
      [6, 26, 54, 82, 110, 138, 166],
      [6, 30, 58, 86, 114, 142, 170]
    ];
    var G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0);
    var G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0);
    var G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1);

    var _this = {};

    var getBCHDigit = function(data) {
      var digit = 0;
      while (data != 0) {
        digit += 1;
        data >>>= 1;
      }
      return digit;
    };

    _this.getBCHTypeInfo = function(data) {
      var d = data << 10;
      while (getBCHDigit(d) - getBCHDigit(G15) >= 0) {
        d ^= (G15 << (getBCHDigit(d) - getBCHDigit(G15) ) );
      }
      return ( (data << 10) | d) ^ G15_MASK;
    };

    _this.getBCHTypeNumber = function(data) {
      var d = data << 12;
      while (getBCHDigit(d) - getBCHDigit(G18) >= 0) {
        d ^= (G18 << (getBCHDigit(d) - getBCHDigit(G18) ) );
      }
      return (data << 12) | d;
    };

    _this.getPatternPosition = function(typeNumber) {
      return PATTERN_POSITION_TABLE[typeNumber - 1];
    };

    _this.getMaskFunction = function(maskPattern) {

      switch (maskPattern) {

      case QRMaskPattern.PATTERN000 :
        return function(i, j) { return (i + j) % 2 == 0; };
      case QRMaskPattern.PATTERN001 :
        return function(i, j) { return i % 2 == 0; };
      case QRMaskPattern.PATTERN010 :
        return function(i, j) { return j % 3 == 0; };
      case QRMaskPattern.PATTERN011 :
        return function(i, j) { return (i + j) % 3 == 0; };
      case QRMaskPattern.PATTERN100 :
        return function(i, j) { return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 == 0; };
      case QRMaskPattern.PATTERN101 :
        return function(i, j) { return (i * j) % 2 + (i * j) % 3 == 0; };
      case QRMaskPattern.PATTERN110 :
        return function(i, j) { return ( (i * j) % 2 + (i * j) % 3) % 2 == 0; };
      case QRMaskPattern.PATTERN111 :
        return function(i, j) { return ( (i * j) % 3 + (i + j) % 2) % 2 == 0; };

      default :
        throw new Error('bad maskPattern:' + maskPattern);
      }
    };

    _this.getErrorCorrectPolynomial = function(errorCorrectLength) {
      var a = qrPolynomial([1], 0);
      for (var i = 0; i < errorCorrectLength; i += 1) {
        a = a.multiply(qrPolynomial([1, QRMath.gexp(i)], 0) );
      }
      return a;
    };

    _this.getLengthInBits = function(mode, type) {

      if (1 <= type && type < 10) {

        // 1 - 9

        switch(mode) {
        case QRMode.MODE_NUMBER    : return 10;
        case QRMode.MODE_ALPHA_NUM : return 9;
        case QRMode.MODE_8BIT_BYTE : return 8;
        case QRMode.MODE_KANJI     : return 8;
        default :
          throw new Error('mode:' + mode);
        }

      } else if (type < 27) {

        // 10 - 26

        switch(mode) {
        case QRMode.MODE_NUMBER    : return 12;
        case QRMode.MODE_ALPHA_NUM : return 11;
        case QRMode.MODE_8BIT_BYTE : return 16;
        case QRMode.MODE_KANJI     : return 10;
        default :
          throw new Error('mode:' + mode);
        }

      } else if (type < 41) {

        // 27 - 40

        switch(mode) {
        case QRMode.MODE_NUMBER    : return 14;
        case QRMode.MODE_ALPHA_NUM : return 13;
        case QRMode.MODE_8BIT_BYTE : return 16;
        case QRMode.MODE_KANJI     : return 12;
        default :
          throw new Error('mode:' + mode);
        }

      } else {
        throw new Error('type:' + type);
      }
    };

    _this.getLostPoint = function(qrcode) {

      var moduleCount = qrcode.getModuleCount();

      var lostPoint = 0;

      // LEVEL1

      for (var row = 0; row < moduleCount; row += 1) {
        for (var col = 0; col < moduleCount; col += 1) {

          var sameCount = 0;
          var dark = qrcode.isDark(row, col);

          for (var r = -1; r <= 1; r += 1) {

            if (row + r < 0 || moduleCount <= row + r) {
              continue;
            }

            for (var c = -1; c <= 1; c += 1) {

              if (col + c < 0 || moduleCount <= col + c) {
                continue;
              }

              if (r == 0 && c == 0) {
                continue;
              }

              if (dark == qrcode.isDark(row + r, col + c) ) {
                sameCount += 1;
              }
            }
          }

          if (sameCount > 5) {
            lostPoint += (3 + sameCount - 5);
          }
        }
      };

      // LEVEL2

      for (var row = 0; row < moduleCount - 1; row += 1) {
        for (var col = 0; col < moduleCount - 1; col += 1) {
          var count = 0;
          if (qrcode.isDark(row, col) ) count += 1;
          if (qrcode.isDark(row + 1, col) ) count += 1;
          if (qrcode.isDark(row, col + 1) ) count += 1;
          if (qrcode.isDark(row + 1, col + 1) ) count += 1;
          if (count == 0 || count == 4) {
            lostPoint += 3;
          }
        }
      }

      // LEVEL3

      for (var row = 0; row < moduleCount; row += 1) {
        for (var col = 0; col < moduleCount - 6; col += 1) {
          if (qrcode.isDark(row, col)
              && !qrcode.isDark(row, col + 1)
              &&  qrcode.isDark(row, col + 2)
              &&  qrcode.isDark(row, col + 3)
              &&  qrcode.isDark(row, col + 4)
              && !qrcode.isDark(row, col + 5)
              &&  qrcode.isDark(row, col + 6) ) {
            lostPoint += 40;
          }
        }
      }

      for (var col = 0; col < moduleCount; col += 1) {
        for (var row = 0; row < moduleCount - 6; row += 1) {
          if (qrcode.isDark(row, col)
              && !qrcode.isDark(row + 1, col)
              &&  qrcode.isDark(row + 2, col)
              &&  qrcode.isDark(row + 3, col)
              &&  qrcode.isDark(row + 4, col)
              && !qrcode.isDark(row + 5, col)
              &&  qrcode.isDark(row + 6, col) ) {
            lostPoint += 40;
          }
        }
      }

      // LEVEL4

      var darkCount = 0;

      for (var col = 0; col < moduleCount; col += 1) {
        for (var row = 0; row < moduleCount; row += 1) {
          if (qrcode.isDark(row, col) ) {
            darkCount += 1;
          }
        }
      }

      var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;
      lostPoint += ratio * 10;

      return lostPoint;
    };

    return _this;
  }();

  //---------------------------------------------------------------------
  // QRMath
  //---------------------------------------------------------------------

  var QRMath = function() {

    var EXP_TABLE = new Array(256);
    var LOG_TABLE = new Array(256);

    // initialize tables
    for (var i = 0; i < 8; i += 1) {
      EXP_TABLE[i] = 1 << i;
    }
    for (var i = 8; i < 256; i += 1) {
      EXP_TABLE[i] = EXP_TABLE[i - 4]
        ^ EXP_TABLE[i - 5]
        ^ EXP_TABLE[i - 6]
        ^ EXP_TABLE[i - 8];
    }
    for (var i = 0; i < 255; i += 1) {
      LOG_TABLE[EXP_TABLE[i] ] = i;
    }

    var _this = {};

    _this.glog = function(n) {

      if (n < 1) {
        throw new Error('glog(' + n + ')');
      }

      return LOG_TABLE[n];
    };

    _this.gexp = function(n) {

      while (n < 0) {
        n += 255;
      }

      while (n >= 256) {
        n -= 255;
      }

      return EXP_TABLE[n];
    };

    return _this;
  }();

  //---------------------------------------------------------------------
  // qrPolynomial
  //---------------------------------------------------------------------

  function qrPolynomial(num, shift) {

    if (typeof num.length == 'undefined') {
      throw new Error(num.length + '/' + shift);
    }

    var _num = function() {
      var offset = 0;
      while (offset < num.length && num[offset] == 0) {
        offset += 1;
      }
      var _num = new Array(num.length - offset + shift);
      for (var i = 0; i < num.length - offset; i += 1) {
        _num[i] = num[i + offset];
      }
      return _num;
    }();

    var _this = {};

    _this.getAt = function(index) {
      return _num[index];
    };

    _this.getLength = function() {
      return _num.length;
    };

    _this.multiply = function(e) {

      var num = new Array(_this.getLength() + e.getLength() - 1);

      for (var i = 0; i < _this.getLength(); i += 1) {
        for (var j = 0; j < e.getLength(); j += 1) {
          num[i + j] ^= QRMath.gexp(QRMath.glog(_this.getAt(i) ) + QRMath.glog(e.getAt(j) ) );
        }
      }

      return qrPolynomial(num, 0);
    };

    _this.mod = function(e) {

      if (_this.getLength() - e.getLength() < 0) {
        return _this;
      }

      var ratio = QRMath.glog(_this.getAt(0) ) - QRMath.glog(e.getAt(0) );

      var num = new Array(_this.getLength() );
      for (var i = 0; i < _this.getLength(); i += 1) {
        num[i] = _this.getAt(i);
      }

      for (var i = 0; i < e.getLength(); i += 1) {
        num[i] ^= QRMath.gexp(QRMath.glog(e.getAt(i) ) + ratio);
      }

      // recursive call
      return qrPolynomial(num, 0).mod(e);
    };

    return _this;
  };

  //---------------------------------------------------------------------
  // QRRSBlock
  //---------------------------------------------------------------------

  var QRRSBlock = function() {

    var RS_BLOCK_TABLE = [

      // L
      // M
      // Q
      // H

      // 1
      [1, 26, 19],
      [1, 26, 16],
      [1, 26, 13],
      [1, 26, 9],

      // 2
      [1, 44, 34],
      [1, 44, 28],
      [1, 44, 22],
      [1, 44, 16],

      // 3
      [1, 70, 55],
      [1, 70, 44],
      [2, 35, 17],
      [2, 35, 13],

      // 4
      [1, 100, 80],
      [2, 50, 32],
      [2, 50, 24],
      [4, 25, 9],

      // 5
      [1, 134, 108],
      [2, 67, 43],
      [2, 33, 15, 2, 34, 16],
      [2, 33, 11, 2, 34, 12],

      // 6
      [2, 86, 68],
      [4, 43, 27],
      [4, 43, 19],
      [4, 43, 15],

      // 7
      [2, 98, 78],
      [4, 49, 31],
      [2, 32, 14, 4, 33, 15],
      [4, 39, 13, 1, 40, 14],

      // 8
      [2, 121, 97],
      [2, 60, 38, 2, 61, 39],
      [4, 40, 18, 2, 41, 19],
      [4, 40, 14, 2, 41, 15],

      // 9
      [2, 146, 116],
      [3, 58, 36, 2, 59, 37],
      [4, 36, 16, 4, 37, 17],
      [4, 36, 12, 4, 37, 13],

      // 10
      [2, 86, 68, 2, 87, 69],
      [4, 69, 43, 1, 70, 44],
      [6, 43, 19, 2, 44, 20],
      [6, 43, 15, 2, 44, 16],

      // 11
      [4, 101, 81],
      [1, 80, 50, 4, 81, 51],
      [4, 50, 22, 4, 51, 23],
      [3, 36, 12, 8, 37, 13],

      // 12
      [2, 116, 92, 2, 117, 93],
      [6, 58, 36, 2, 59, 37],
      [4, 46, 20, 6, 47, 21],
      [7, 42, 14, 4, 43, 15],

      // 13
      [4, 133, 107],
      [8, 59, 37, 1, 60, 38],
      [8, 44, 20, 4, 45, 21],
      [12, 33, 11, 4, 34, 12],

      // 14
      [3, 145, 115, 1, 146, 116],
      [4, 64, 40, 5, 65, 41],
      [11, 36, 16, 5, 37, 17],
      [11, 36, 12, 5, 37, 13],

      // 15
      [5, 109, 87, 1, 110, 88],
      [5, 65, 41, 5, 66, 42],
      [5, 54, 24, 7, 55, 25],
      [11, 36, 12, 7, 37, 13],

      // 16
      [5, 122, 98, 1, 123, 99],
      [7, 73, 45, 3, 74, 46],
      [15, 43, 19, 2, 44, 20],
      [3, 45, 15, 13, 46, 16],

      // 17
      [1, 135, 107, 5, 136, 108],
      [10, 74, 46, 1, 75, 47],
      [1, 50, 22, 15, 51, 23],
      [2, 42, 14, 17, 43, 15],

      // 18
      [5, 150, 120, 1, 151, 121],
      [9, 69, 43, 4, 70, 44],
      [17, 50, 22, 1, 51, 23],
      [2, 42, 14, 19, 43, 15],

      // 19
      [3, 141, 113, 4, 142, 114],
      [3, 70, 44, 11, 71, 45],
      [17, 47, 21, 4, 48, 22],
      [9, 39, 13, 16, 40, 14],

      // 20
      [3, 135, 107, 5, 136, 108],
      [3, 67, 41, 13, 68, 42],
      [15, 54, 24, 5, 55, 25],
      [15, 43, 15, 10, 44, 16],

      // 21
      [4, 144, 116, 4, 145, 117],
      [17, 68, 42],
      [17, 50, 22, 6, 51, 23],
      [19, 46, 16, 6, 47, 17],

      // 22
      [2, 139, 111, 7, 140, 112],
      [17, 74, 46],
      [7, 54, 24, 16, 55, 25],
      [34, 37, 13],

      // 23
      [4, 151, 121, 5, 152, 122],
      [4, 75, 47, 14, 76, 48],
      [11, 54, 24, 14, 55, 25],
      [16, 45, 15, 14, 46, 16],

      // 24
      [6, 147, 117, 4, 148, 118],
      [6, 73, 45, 14, 74, 46],
      [11, 54, 24, 16, 55, 25],
      [30, 46, 16, 2, 47, 17],

      // 25
      [8, 132, 106, 4, 133, 107],
      [8, 75, 47, 13, 76, 48],
      [7, 54, 24, 22, 55, 25],
      [22, 45, 15, 13, 46, 16],

      // 26
      [10, 142, 114, 2, 143, 115],
      [19, 74, 46, 4, 75, 47],
      [28, 50, 22, 6, 51, 23],
      [33, 46, 16, 4, 47, 17],

      // 27
      [8, 152, 122, 4, 153, 123],
      [22, 73, 45, 3, 74, 46],
      [8, 53, 23, 26, 54, 24],
      [12, 45, 15, 28, 46, 16],

      // 28
      [3, 147, 117, 10, 148, 118],
      [3, 73, 45, 23, 74, 46],
      [4, 54, 24, 31, 55, 25],
      [11, 45, 15, 31, 46, 16],

      // 29
      [7, 146, 116, 7, 147, 117],
      [21, 73, 45, 7, 74, 46],
      [1, 53, 23, 37, 54, 24],
      [19, 45, 15, 26, 46, 16],

      // 30
      [5, 145, 115, 10, 146, 116],
      [19, 75, 47, 10, 76, 48],
      [15, 54, 24, 25, 55, 25],
      [23, 45, 15, 25, 46, 16],

      // 31
      [13, 145, 115, 3, 146, 116],
      [2, 74, 46, 29, 75, 47],
      [42, 54, 24, 1, 55, 25],
      [23, 45, 15, 28, 46, 16],

      // 32
      [17, 145, 115],
      [10, 74, 46, 23, 75, 47],
      [10, 54, 24, 35, 55, 25],
      [19, 45, 15, 35, 46, 16],

      // 33
      [17, 145, 115, 1, 146, 116],
      [14, 74, 46, 21, 75, 47],
      [29, 54, 24, 19, 55, 25],
      [11, 45, 15, 46, 46, 16],

      // 34
      [13, 145, 115, 6, 146, 116],
      [14, 74, 46, 23, 75, 47],
      [44, 54, 24, 7, 55, 25],
      [59, 46, 16, 1, 47, 17],

      // 35
      [12, 151, 121, 7, 152, 122],
      [12, 75, 47, 26, 76, 48],
      [39, 54, 24, 14, 55, 25],
      [22, 45, 15, 41, 46, 16],

      // 36
      [6, 151, 121, 14, 152, 122],
      [6, 75, 47, 34, 76, 48],
      [46, 54, 24, 10, 55, 25],
      [2, 45, 15, 64, 46, 16],

      // 37
      [17, 152, 122, 4, 153, 123],
      [29, 74, 46, 14, 75, 47],
      [49, 54, 24, 10, 55, 25],
      [24, 45, 15, 46, 46, 16],

      // 38
      [4, 152, 122, 18, 153, 123],
      [13, 74, 46, 32, 75, 47],
      [48, 54, 24, 14, 55, 25],
      [42, 45, 15, 32, 46, 16],

      // 39
      [20, 147, 117, 4, 148, 118],
      [40, 75, 47, 7, 76, 48],
      [43, 54, 24, 22, 55, 25],
      [10, 45, 15, 67, 46, 16],

      // 40
      [19, 148, 118, 6, 149, 119],
      [18, 75, 47, 31, 76, 48],
      [34, 54, 24, 34, 55, 25],
      [20, 45, 15, 61, 46, 16]
    ];

    var qrRSBlock = function(totalCount, dataCount) {
      var _this = {};
      _this.totalCount = totalCount;
      _this.dataCount = dataCount;
      return _this;
    };

    var _this = {};

    var getRsBlockTable = function(typeNumber, errorCorrectLevel) {

      switch(errorCorrectLevel) {
      case QRErrorCorrectLevel.L :
        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];
      case QRErrorCorrectLevel.M :
        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];
      case QRErrorCorrectLevel.Q :
        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];
      case QRErrorCorrectLevel.H :
        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];
      default :
        return undefined;
      }
    };

    _this.getRSBlocks = function(typeNumber, errorCorrectLevel) {

      var rsBlock = getRsBlockTable(typeNumber, errorCorrectLevel);

      if (typeof rsBlock == 'undefined') {
        throw new Error('bad rs block @ typeNumber:' + typeNumber +
            '/errorCorrectLevel:' + errorCorrectLevel);
      }

      var length = rsBlock.length / 3;

      var list = new Array();

      for (var i = 0; i < length; i += 1) {

        var count = rsBlock[i * 3 + 0];
        var totalCount = rsBlock[i * 3 + 1];
        var dataCount = rsBlock[i * 3 + 2];

        for (var j = 0; j < count; j += 1) {
          list.push(qrRSBlock(totalCount, dataCount) );
        }
      }

      return list;
    };

    return _this;
  }();

  //---------------------------------------------------------------------
  // qrBitBuffer
  //---------------------------------------------------------------------

  var qrBitBuffer = function() {

    var _buffer = new Array();
    var _length = 0;

    var _this = {};

    _this.getBuffer = function() {
      return _buffer;
    };

    _this.getAt = function(index) {
      var bufIndex = Math.floor(index / 8);
      return ( (_buffer[bufIndex] >>> (7 - index % 8) ) & 1) == 1;
    };

    _this.put = function(num, length) {
      for (var i = 0; i < length; i += 1) {
        _this.putBit( ( (num >>> (length - i - 1) ) & 1) == 1);
      }
    };

    _this.getLengthInBits = function() {
      return _length;
    };

    _this.putBit = function(bit) {

      var bufIndex = Math.floor(_length / 8);
      if (_buffer.length <= bufIndex) {
        _buffer.push(0);
      }

      if (bit) {
        _buffer[bufIndex] |= (0x80 >>> (_length % 8) );
      }

      _length += 1;
    };

    return _this;
  };

  //---------------------------------------------------------------------
  // qr8BitByte
  //---------------------------------------------------------------------

  var qr8BitByte = function(data) {

    var _mode = QRMode.MODE_8BIT_BYTE;
    var _data = data;
    var _bytes = qrcode.stringToBytes(data);

    var _this = {};

    _this.getMode = function() {
      return _mode;
    };

    _this.getLength = function(buffer) {
      return _bytes.length;
    };

    _this.write = function(buffer) {
      for (var i = 0; i < _bytes.length; i += 1) {
        buffer.put(_bytes[i], 8);
      }
    };

    return _this;
  };

  //=====================================================================
  // GIF Support etc.
  //

  //---------------------------------------------------------------------
  // byteArrayOutputStream
  //---------------------------------------------------------------------

  var byteArrayOutputStream = function() {

    var _bytes = new Array();

    var _this = {};

    _this.writeByte = function(b) {
      _bytes.push(b & 0xff);
    };

    _this.writeShort = function(i) {
      _this.writeByte(i);
      _this.writeByte(i >>> 8);
    };

    _this.writeBytes = function(b, off, len) {
      off = off || 0;
      len = len || b.length;
      for (var i = 0; i < len; i += 1) {
        _this.writeByte(b[i + off]);
      }
    };

    _this.writeString = function(s) {
      for (var i = 0; i < s.length; i += 1) {
        _this.writeByte(s.charCodeAt(i) );
      }
    };

    _this.toByteArray = function() {
      return _bytes;
    };

    _this.toString = function() {
      var s = '';
      s += '[';
      for (var i = 0; i < _bytes.length; i += 1) {
        if (i > 0) {
          s += ',';
        }
        s += _bytes[i];
      }
      s += ']';
      return s;
    };

    return _this;
  };

  //---------------------------------------------------------------------
  // base64EncodeOutputStream
  //---------------------------------------------------------------------

  var base64EncodeOutputStream = function() {

    var _buffer = 0;
    var _buflen = 0;
    var _length = 0;
    var _base64 = '';

    var _this = {};

    var writeEncoded = function(b) {
      _base64 += String.fromCharCode(encode(b & 0x3f) );
    };

    var encode = function(n) {
      if (n < 0) {
        // error.
      } else if (n < 26) {
        return 0x41 + n;
      } else if (n < 52) {
        return 0x61 + (n - 26);
      } else if (n < 62) {
        return 0x30 + (n - 52);
      } else if (n == 62) {
        return 0x2b;
      } else if (n == 63) {
        return 0x2f;
      }
      throw new Error('n:' + n);
    };

    _this.writeByte = function(n) {

      _buffer = (_buffer << 8) | (n & 0xff);
      _buflen += 8;
      _length += 1;

      while (_buflen >= 6) {
        writeEncoded(_buffer >>> (_buflen - 6) );
        _buflen -= 6;
      }
    };

    _this.flush = function() {

      if (_buflen > 0) {
        writeEncoded(_buffer << (6 - _buflen) );
        _buffer = 0;
        _buflen = 0;
      }

      if (_length % 3 != 0) {
        // padding
        var padlen = 3 - _length % 3;
        for (var i = 0; i < padlen; i += 1) {
          _base64 += '=';
        }
      }
    };

    _this.toString = function() {
      return _base64;
    };

    return _this;
  };

  //---------------------------------------------------------------------
  // base64DecodeInputStream
  //---------------------------------------------------------------------

  var base64DecodeInputStream = function(str) {

    var _str = str;
    var _pos = 0;
    var _buffer = 0;
    var _buflen = 0;

    var _this = {};

    _this.read = function() {

      while (_buflen < 8) {

        if (_pos >= _str.length) {
          if (_buflen == 0) {
            return -1;
          }
          throw new Error('unexpected end of file./' + _buflen);
        }

        var c = _str.charAt(_pos);
        _pos += 1;

        if (c == '=') {
          _buflen = 0;
          return -1;
        } else if (c.match(/^\s$/) ) {
          // ignore if whitespace.
          continue;
        }

        _buffer = (_buffer << 6) | decode(c.charCodeAt(0) );
        _buflen += 6;
      }

      var n = (_buffer >>> (_buflen - 8) ) & 0xff;
      _buflen -= 8;
      return n;
    };

    var decode = function(c) {
      if (0x41 <= c && c <= 0x5a) {
        return c - 0x41;
      } else if (0x61 <= c && c <= 0x7a) {
        return c - 0x61 + 26;
      } else if (0x30 <= c && c <= 0x39) {
        return c - 0x30 + 52;
      } else if (c == 0x2b) {
        return 62;
      } else if (c == 0x2f) {
        return 63;
      } else {
        throw new Error('c:' + c);
      }
    };

    return _this;
  };

  //---------------------------------------------------------------------
  // gifImage (B/W)
  //---------------------------------------------------------------------

  var gifImage = function(width, height) {

    var _width = width;
    var _height = height;
    var _data = new Array(width * height);

    var _this = {};

    _this.setPixel = function(x, y, pixel) {
      _data[y * _width + x] = pixel;
    };

    _this.write = function(out) {

      //---------------------------------
      // GIF Signature

      out.writeString('GIF87a');

      //---------------------------------
      // Screen Descriptor

      out.writeShort(_width);
      out.writeShort(_height);

      out.writeByte(0x80); // 2bit
      out.writeByte(0);
      out.writeByte(0);

      //---------------------------------
      // Global Color Map

      // black
      out.writeByte(0x00);
      out.writeByte(0x00);
      out.writeByte(0x00);

      // white
      out.writeByte(0xff);
      out.writeByte(0xff);
      out.writeByte(0xff);

      //---------------------------------
      // Image Descriptor

      out.writeString(',');
      out.writeShort(0);
      out.writeShort(0);
      out.writeShort(_width);
      out.writeShort(_height);
      out.writeByte(0);

      //---------------------------------
      // Local Color Map

      //---------------------------------
      // Raster Data

      var lzwMinCodeSize = 2;
      var raster = getLZWRaster(lzwMinCodeSize);

      out.writeByte(lzwMinCodeSize);

      var offset = 0;

      while (raster.length - offset > 255) {
        out.writeByte(255);
        out.writeBytes(raster, offset, 255);
        offset += 255;
      }

      out.writeByte(raster.length - offset);
      out.writeBytes(raster, offset, raster.length - offset);
      out.writeByte(0x00);

      //---------------------------------
      // GIF Terminator
      out.writeString(';');
    };

    var bitOutputStream = function(out) {

      var _out = out;
      var _bitLength = 0;
      var _bitBuffer = 0;

      var _this = {};

      _this.write = function(data, length) {

        if ( (data >>> length) != 0) {
          throw new Error('length over');
        }

        while (_bitLength + length >= 8) {
          _out.writeByte(0xff & ( (data << _bitLength) | _bitBuffer) );
          length -= (8 - _bitLength);
          data >>>= (8 - _bitLength);
          _bitBuffer = 0;
          _bitLength = 0;
        }

        _bitBuffer = (data << _bitLength) | _bitBuffer;
        _bitLength = _bitLength + length;
      };

      _this.flush = function() {
        if (_bitLength > 0) {
          _out.writeByte(_bitBuffer);
        }
      };

      return _this;
    };

    var getLZWRaster = function(lzwMinCodeSize) {

      var clearCode = 1 << lzwMinCodeSize;
      var endCode = (1 << lzwMinCodeSize) + 1;
      var bitLength = lzwMinCodeSize + 1;

      // Setup LZWTable
      var table = lzwTable();

      for (var i = 0; i < clearCode; i += 1) {
        table.add(String.fromCharCode(i) );
      }
      table.add(String.fromCharCode(clearCode) );
      table.add(String.fromCharCode(endCode) );

      var byteOut = byteArrayOutputStream();
      var bitOut = bitOutputStream(byteOut);

      // clear code
      bitOut.write(clearCode, bitLength);

      var dataIndex = 0;

      var s = String.fromCharCode(_data[dataIndex]);
      dataIndex += 1;

      while (dataIndex < _data.length) {

        var c = String.fromCharCode(_data[dataIndex]);
        dataIndex += 1;

        if (table.contains(s + c) ) {

          s = s + c;

        } else {

          bitOut.write(table.indexOf(s), bitLength);

          if (table.size() < 0xfff) {

            if (table.size() == (1 << bitLength) ) {
              bitLength += 1;
            }

            table.add(s + c);
          }

          s = c;
        }
      }

      bitOut.write(table.indexOf(s), bitLength);

      // end code
      bitOut.write(endCode, bitLength);

      bitOut.flush();

      return byteOut.toByteArray();
    };

    var lzwTable = function() {

      var _map = {};
      var _size = 0;

      var _this = {};

      _this.add = function(key) {
        if (_this.contains(key) ) {
          throw new Error('dup key:' + key);
        }
        _map[key] = _size;
        _size += 1;
      };

      _this.size = function() {
        return _size;
      };

      _this.indexOf = function(key) {
        return _map[key];
      };

      _this.contains = function(key) {
        return typeof _map[key] != 'undefined';
      };

      return _this;
    };

    return _this;
  };

  var createImgTag = function(width, height, getPixel, alt) {

    var gif = gifImage(width, height);
    for (var y = 0; y < height; y += 1) {
      for (var x = 0; x < width; x += 1) {
        gif.setPixel(x, y, getPixel(x, y) );
      }
    }

    var b = byteArrayOutputStream();
    gif.write(b);

    var base64 = base64EncodeOutputStream();
    var bytes = b.toByteArray();
    for (var i = 0; i < bytes.length; i += 1) {
      base64.writeByte(bytes[i]);
    }
    base64.flush();

    var img = '';
    img += '<img';
    img += '\u0020src="';
    img += 'data:image/gif;base64,';
    img += base64;
    img += '"';
    img += '\u0020width="';
    img += width;
    img += '"';
    img += '\u0020height="';
    img += height;
    img += '"';
    if (alt) {
      img += '\u0020alt="';
      img += alt;
      img += '"';
    }
    img += '/>';

    return img;
  };

  //---------------------------------------------------------------------
  // returns qrcode function.

  return qrcode;
}();

(function (factory) {
  if (typeof define === 'function' && define.amd) {
      define([], factory);
  } else if (typeof exports === 'object') {
      module.exports = factory();
  }
}(function () {
    return qrcode;
}));

'''
'''--- tests/data/accountData.js ---
let testnetAccountData = {
            "meta": {
                "cosignatories": [],
                "cosignatoryOf": [{
                    "address": "TBUSUKWVVPS7LZO4AF6VABQHY2FI4IIMCJGIVX3X",
                    "harvestedBlocks": 0,
                    "balance": 16000000,
                    "importance": 0,
                    "vestedBalance": 0,
                    "publicKey": "671ca866718ed174a21e593fc1e250837c03935bc79e2daad3bd018c444d78a7",
                    "label": null,
                    "multisigInfo": {
                        "cosignatoriesCount": 1,
                        "minCosignatories": 1
                    }
                }],
                "status": "LOCKED",
                "remoteStatus": "INACTIVE"
            },
            "account": {
                "address": "TAF7BPDV22HCFNRJEWOGLRKBYQF65GBOLQPI5GGO",
                "harvestedBlocks": 0,
                "balance": 54500000,
                "importance": 0,
                "vestedBalance": 28432820,
                "publicKey": "5f8fcdf7cae84b079f08f40c0a6f2da2af3698abeb10de62ed88ccfa1f14e495",
                "label": null,
                "multisigInfo": {}
            }
        }

let testnetNamespaceOwned = {
            "TAF7BPDV22HCFNRJEWOGLRKBYQF65GBOLQPI5GGO": {
                "nano": {
                    "owner": "TAF7BPDV22HCFNRJEWOGLRKBYQF65GBOLQPI5GGO",
                    "fqn": "nano",
                    "height": 547741
                }
            }
        }

let testnetMosaicOwned = {
            "TAF7BPDV22HCFNRJEWOGLRKBYQF65GBOLQPI5GGO": {
                "nano:points": {
                    "quantity": 9999,
                    "mosaicId": {
                        "namespaceId": "nano",
                        "name": "points"
                    }
                },
                "nem:xem": {
                    "quantity": 14514500000,
                    "mosaicId": {
                        "namespaceId": "nem",
                        "name": "xem"
                    }
                }
            },
            "TBUSUKWVVPS7LZO4AF6VABQHY2FI4IIMCJGIVX3X": {
                "nem:xem": {
                    "quantity": 16000000,
                    "mosaicId": {
                        "namespaceId": "nem",
                        "name": "xem"
                    }
                }
            }
        }

let testnetMosaicDefinitionMetaDataPair = {
            "nano:points": {
                "mosaicDefinition": {
                    "creator": "5f8fcdf7cae84b079f08f40c0a6f2da2af3698abeb10de62ed88ccfa1f14e495",
                    "description": "Test",
                    "id": {
                        "namespaceId": "nano2",
                        "name": "points"
                    },
                    "properties": [{
                        "name": "divisibility",
                        "value": "3"
                    }, {
                        "name": "initialSupply",
                        "value": "1000000"
                    }, {
                        "name": "supplyMutable",
                        "value": "true"
                    }, {
                        "name": "transferable",
                        "value": "true"
                    }],
                    "levy": {}
                },
                "supply": 1000000
            },
            "nem:xem": {
                "mosaicDefinition": {
                    "creator": "3e82e1c1e4a75adaa3cba8c101c3cd31d9817a2eb966eb3b511fb2ed45b8e262",
                    "description": "reserved xem mosaic",
                    "id": {
                        "namespaceId": "nem",
                        "name": "xem"
                    },
                    "properties": [{
                        "name": "divisibility",
                        "value": "6"
                    }, {
                        "name": "initialSupply",
                        "value": "8999999999"
                    }, {
                        "name": "supplyMutable",
                        "value": "false"
                    }, {
                        "name": "transferable",
                        "value": "true"
                    }],
                    "levy": {}
                },
                "supply": 8999999999
            }
        }

let mainnetAccountData = {
            "meta": {
                "cosignatories": [],
                "cosignatoryOf": [],
                "status": "LOCKED",
                "remoteStatus": "INACTIVE"
            },
            "account": {
                "address": "NCTIKLMIWKRZC3TRKD5JYZUQHV76LGS3TTSUIXM6",
                "harvestedBlocks": 0,
                "balance": 0,
                "importance": 0,
                "vestedBalance": 0,
                "publicKey": null,
                "label": null,
                "multisigInfo": {}
            }
        }

let mainnetNamespaceOwned = {
            "NCTIKLMIWKRZC3TRKD5JYZUQHV76LGS3TTSUIXM6": {
                "nano": {
                    "owner": "NCTIKLMIWKRZC3TRKD5JYZUQHV76LGS3TTSUIXM6",
                    "fqn": "nano",
                    "height": 547741
                }
            }
        }

let mainnetMosaicOwned = {
            "NCTIKLMIWKRZC3TRKD5JYZUQHV76LGS3TTSUIXM6": {
                "nano:points": {
                    "quantity": 9999,
                    "mosaicId": {
                        "namespaceId": "nano",
                        "name": "points"
                    }
                },
                "nem:xem": {
                    "quantity": 0,
                    "mosaicId": {
                        "namespaceId": "nem",
                        "name": "xem"
                    }
                }
            }
        }

let mainnetMosaicDefinitionMetaDataPair = {
            "nano:points": {
                "mosaicDefinition": {
                    "creator": "5f8fcdf7cae84b079f08f40c0a6f2da2af3698abeb10de62ed88ccfa1f14e495",
                    "description": "Test",
                    "id": {
                        "namespaceId": "nano2",
                        "name": "points"
                    },
                    "properties": [{
                        "name": "divisibility",
                        "value": "3"
                    }, {
                        "name": "initialSupply",
                        "value": "1000000"
                    }, {
                        "name": "supplyMutable",
                        "value": "true"
                    }, {
                        "name": "transferable",
                        "value": "true"
                    }],
                    "levy": {}
                },
                "supply": 1000000
            },
            "nem:xem": {
                "mosaicDefinition": {
                    "creator": "3e82e1c1e4a75adaa3cba8c101c3cd31d9817a2eb966eb3b511fb2ed45b8e262",
                    "description": "reserved xem mosaic",
                    "id": {
                        "namespaceId": "nem",
                        "name": "xem"
                    },
                    "properties": [{
                        "name": "divisibility",
                        "value": "6"
                    }, {
                        "name": "initialSupply",
                        "value": "8999999999"
                    }, {
                        "name": "supplyMutable",
                        "value": "false"
                    }, {
                        "name": "transferable",
                        "value": "true"
                    }],
                    "levy": {}
                },
                "supply": 8999999999
            }
        }

module.exports = {
    testnetAccountData,
    testnetNamespaceOwned,
    testnetMosaicOwned,
    testnetMosaicDefinitionMetaDataPair,
    mainnetAccountData,
    mainnetNamespaceOwned,
    mainnetMosaicOwned,
    mainnetMosaicDefinitionMetaDataPair
}
'''
'''--- tests/data/wallet.js ---
let testnetWallet = {
    "privateKey": "",
    "name": "TestnetSpec",
    "accounts": {
        "0": {
            "brain": true,
            "algo": "pass:bip32",
            "encrypted": "c6dcbc8a538c9e2ec9e9be115aa6a1349d1a8a27e574136b4e603f0549474053e026e0771bf8d86a392fccce5b543d0b",
            "iv": "4c637775236d5a3698c973b9ba67459e",
            "address": "TAF7BPDV22HCFNRJEWOGLRKBYQF65GBOLQPI5GGO",
            "network": -104,
            "child": "e6683b4b03722d0a049a9a21861d90c48e843f421d6ccb587f809d41a4af14c5"
        }
    }
}

let mainnetWallet = {
    "privateKey": "",
    "name": "QM",
    "accounts": {
        "0": {
            "brain": true,
            "algo": "pass:6k",
            "encrypted": "",
            "iv": "",
            "address": "NCTIKLMIWKRZC3TRKD5JYZUQHV76LGS3TTSUIXM6",
            "network": 104,
            "child": "NCC7KUVPQYBTPBABABR5D724CJAOMIA2RJERW3N7"
        }
    }
}

let mainnetWalletDoubleAccounts = {
    "privateKey": "",
    "name": "Quantum_Mechanics",
    "accounts": {
        "0": {
            "brain": true,
            "algo": "pass:6k",
            "encrypted": "",
            "iv": "",
            "address": "NCTIKLMIWKRZC3TRKD5JYZUQHV76LGS3TTSUIXM6",
            "network": 104,
            "child": "NCC7KUVPQYBTPBABABR5D724CJAOMIA2RJERW3N7"
        },
        "1": {
            "encrypted": "",
            "iv": "",
            "address": "NCTIKLMIWKRZC3TRKD5JYZUQHV76LGS3TTSUIWRE",
            "child": "NCC7KUVPQYBTPBABABR5D724CJAOMIA2RJERFRTO"
                    }
                }
            }

module.exports = {
    testnetWallet,
    mainnetWallet,
    mainnetWalletDoubleAccounts
}
'''
'''--- tests/specs/CryptoHelpers.spec.js ---
import nem from 'nem-sdk';
import CryptoHelpers from '../../src/app/utils/CryptoHelpers';

describe('CryptoHelpers tests', function() {

    it("Can generate bip32 child key (test 1)", function(done) {
        // Arrange:
        let privateKey = "6809a9582cd395aa8803bbce10449c9819e34d3afa1cb4f4e2df52fb37864ccb";
        let password = "TestTest";
        let index = 0;
        let expectedChildPrivateKey = "2a91e1d5c110a8d0105aad4683f962c2a56663a3cad46666b16d243174673d90";

        // Act:
        CryptoHelpers.generateBIP32Data(privateKey, password, index, nem.model.network.data.mainnet.id).then((data) => {
            let childPrivateKey = data.privateKey;

            // Assert:
            expect(childPrivateKey).toEqual(expectedChildPrivateKey);

            done();
        });
    });

    it("Can generate bip32 child key (test 2)", function(done) {
        // Arrange:
        let privateKey = "881f27edee3bb2c01da1d37de124965f60b414d02718d8ec9128ef6c129ea61f";
        let password = "Test";
        let index = 1;
        let expectedChildPrivateKey = "ad4acecb07b77f8a27b900a5a03cdb04d6bcf1f097e57a39e3f668d80cafdc35";

        // Act:
        CryptoHelpers.generateBIP32Data(privateKey, password, index, nem.model.network.data.mainnet.id).then((data) => {
            let childPrivateKey = data.privateKey;

            // Assert:
            expect(childPrivateKey).toEqual(expectedChildPrivateKey);

            done();
        });
    });

    it("Can generate bip32 child key (test 3)", function(done) {
        // Arrange:
        let privateKey = "881f27edee3bb2c01da1d37de124965f60b414d02718d8ec9128ef6c129ea61f";
        let password = "Test";
        let index = 0;
        let expectedChildPrivateKey = "2e1e8733ca4fbce4c8697f31243366e50d2d552cd7be6fab591bb389f31a5c2b";

        // Act:
        CryptoHelpers.generateBIP32Data(privateKey, password, index, nem.model.network.data.mainnet.id).then((data) => {
            let childPrivateKey = data.privateKey;

            // Assert:
            expect(childPrivateKey).toEqual(expectedChildPrivateKey);

            done();
        });
    });

    describe('Bip32 edge-cases', function() {

        it("Bip32 return different private key if different password", function(done) {
            // Arrange:
            let privateKey = "881f27edee3bb2c01da1d37de124965f60b414d02718d8ec9128ef6c129ea61f";
            let password = "Testabc";
            let index = 0;
            let expectedChildPrivateKey = "e52e391a94c658f25055e6ad112d9f010567ffb40992b9c7cdbb2df52fc2b2c0";

            // Act:
            CryptoHelpers.generateBIP32Data(privateKey, password, index, nem.model.network.data.mainnet.id).then((data) => {
                let childPrivateKey = data.privateKey;

                // Assert:
                expect(childPrivateKey).toEqual(expectedChildPrivateKey);

                done();
            });
        });

        it("Bip32 return error if no private key", function(done) {
            // Arrange:
            let privateKey = "";
            let password = "TestTest";
            let index = 0;

            // Act:
            CryptoHelpers.generateBIP32Data(privateKey, password, index, nem.model.network.data.mainnet.id).then((data) => {},
                (err) => {
                    // Assert:
                    expect(err).toBeDefined();
                    done();
                });
        });

        it("Bip32 return error if private key is invalid", function(done) {
            // Arrange:
            let privateKey = "x809a9582cd395aa8803bbce10449c9819e34d3afa1cb4f4e2df52fb37864ccp";
            let password = "TestTest";
            let index = 0;

            // Act:
            CryptoHelpers.generateBIP32Data(privateKey, password, index, nem.model.network.data.mainnet.id).then((data) => {},
                (err) => {
                    // Assert:
                    expect(err).toBeDefined();
                    done();
                });
        });

        it("Bip32 return error if no password", function(done) {
            // Arrange:
            let privateKey = "6809a9582cd395aa8803bbce10449c9819e34d3afa1cb4f4e2df52fb37864ccb";
            let password = "";
            let index = 0;

            // Act:
            let result = CryptoHelpers.generateBIP32Data(privateKey, password, index, nem.model.network.data.mainnet.id).then((data) => {},
                (err) => {
                    // Assert:
                    expect(err).toBeDefined();
                    done();
                });
        });

    });
});
'''
'''--- tests/specs/ImportanceTransferModule.spec.js ---
import WalletFixture from '../data/wallet';
import AccountDataFixture from '../data/accountData';
import nem from 'nem-sdk';

describe('Importance transfer module tests', function() {
    let $controller, $rootScope, Wallet, DataBridge, $q, $filter, Nodes;

    beforeEach(angular.mock.module('app'));

    beforeEach(angular.mock.inject(function(_$filter_, _$controller_, _$rootScope_, _Wallet_, _DataBridge_, _$q_, _Nodes_) {
        $controller = _$controller_;
        $rootScope = _$rootScope_;
        Wallet = _Wallet_;
        DataBridge = _DataBridge_;
        $q = _$q_;
        $filter = _$filter_;
        Nodes = _Nodes_;
    }));

    function createDummyWalletContextTestnet(Wallet) {
        Wallet.use(WalletFixture.testnetWallet);
        Nodes.setDefault();
        DataBridge.accountData = AccountDataFixture.testnetAccountData;
    }

    it("Default properties initialized", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('ImportanceTransferCtrl', {
            $scope: scope
        });

        // Assert
        expect(ctrl.formData).toEqual({
            remoteAccount: Wallet.currentAccount.child,
            mode: 1,
            isMultisig: false,
            multisigAccount: ''
        });
        expect(ctrl.modes).toEqual([{
            name: "Activate",
            key: 1
        }, {
            name: "Deactivate",
            key: 2
        }]);
        expect(ctrl.okPressed).toBe(false);
        expect(ctrl.common).toEqual(nem.model.objects.get("common"));
        expect(ctrl.isCustomNode).toBe(false);
        expect(ctrl.customHarvestingNode).toEqual("");
        expect(ctrl.harvestingNode).toEqual(Wallet.node);
        expect(ctrl.noFreeSlots).toBe(true);
        expect(ctrl.nodes[0]).toEqual(nem.model.objects.create("endpoint")("http://104.128.226.60", 7890));
        expect(ctrl.showSupernodes).toBe(false);
    });

    it("Can update remote account if custom key enabled", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('ImportanceTransferCtrl', {
            $scope: scope
        });

        // Act
        ctrl.customKey = true;
        ctrl.updateRemoteAccount();

        // Assert
        expect(ctrl.formData.remoteAccount).toEqual('');
    });

    it("Can update remote account if custom key enabled then disabled", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('ImportanceTransferCtrl', {
            $scope: scope
        });

        // Act
        ctrl.customKey = true;
        ctrl.updateRemoteAccount();
        ctrl.customKey = false;
        ctrl.updateRemoteAccount();

        // Assert
        expect(ctrl.formData.remoteAccount).toEqual(Wallet.currentAccount.child);
    });

    it("Can set mode to deactivate", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('ImportanceTransferCtrl', {
            $scope: scope
        });

        // Act
        ctrl.formData.mode = 2;

        // Assert
        expect(ctrl.formData).toEqual({
            remoteAccount: Wallet.currentAccount.child,
            mode: 2,
            isMultisig: false,
            multisigAccount: ''
        });
    });

    it("Can set mode to 'activate' after 'deactivate'", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('ImportanceTransferCtrl', {
            $scope: scope
        });

        // Act
        ctrl.formData.mode = 2;
        ctrl.formData.mode = 1;

        // Assert
        expect(ctrl.formData).toEqual({
            remoteAccount: Wallet.currentAccount.child,
            mode: 1,
            isMultisig: false,
            multisigAccount: ''
        });
    });

});
'''
'''--- tests/specs/createMosaicModule.spec.js ---
import WalletFixture from '../data/wallet';
import AccountDataFixture from '../data/accountData';
import nem from 'nem-sdk';

describe('Mosaic definition transaction module tests', function() {
    let $controller, $rootScope, Wallet, DataStore, $filter, Nodes;

    beforeEach(angular.mock.module('app'));

    beforeEach(angular.mock.inject(function(_$filter_, _$controller_, _$rootScope_, _Wallet_, _DataStore_, _Nodes_) {
        $controller = _$controller_;
        $rootScope = _$rootScope_;
        Wallet = _Wallet_;
        DataStore = _DataStore_;
        $filter = _$filter_;
        Nodes = _Nodes_;
    }));

    function createDummyWalletContextTestnet(Wallet) {
        Wallet.use(WalletFixture.testnetWallet);
        Nodes.setDefault();

        DataStore.account.metaData = AccountDataFixture.testnetAccountData;
        DataStore.namespace.ownedBy = AccountDataFixture.testnetNamespaceOwned;
        DataStore.mosaic.ownedBy = AccountDataFixture.testnetMosaicOwned;
        DataStore.mosaic.metaData = AccountDataFixture.testnetMosaicDefinitionMetaDataPair;
        DataStore.chain.height = 999999999;

    }

    function createDummyWalletContextMainnet(Wallet) {
        Wallet.use(WalletFixture.mainnetWallet);
        Nodes.setDefault();

        DataStore.account.metaData = AccountDataFixture.mainnetAccountData;
        DataStore.namespace.ownedBy = AccountDataFixture.mainnetNamespaceOwned;
        DataStore.mosaic.ownedBy = AccountDataFixture.mainnetMosaicOwned;
        DataStore.mosaic.metaData = AccountDataFixture.mainnetMosaicDefinitionMetaDataPair;
        DataStore.chain.height = 999999999;

    }

    it("Can update current account mosaics and namespaces", function() {
        // Arrange
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('CreateMosaicCtrl', {
            $scope: scope
        });

        // Act
        ctrl.updateCurrentAccountNSM();

        // Assert
        expect(ctrl.currentAccountMosaicNames).toEqual(['nano:points', 'nem:xem']);
        expect(ctrl.mosaicOwned).toEqual(ctrl._DataStore.mosaic.ownedBy[ctrl._Wallet.currentAccount.address]);
        expect(ctrl.selectedMosaic).toEqual('nem:xem');
        expect(ctrl.formData.namespaceParent).toEqual({
            owner: 'TAF7BPDV22HCFNRJEWOGLRKBYQF65GBOLQPI5GGO',
            fqn: 'nano',
            height: 547741
        });
    });

    it("Default properties initialized (after updateCurrentAccountNSM)", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('CreateMosaicCtrl', {
            $scope: scope
        });

        // Assert
        expect(ctrl.formData).toEqual({
            mosaicFeeSink: nem.model.sinks.mosaic[Wallet.network],
            mosaicName: '',
            namespaceParent: {
                owner: 'TAF7BPDV22HCFNRJEWOGLRKBYQF65GBOLQPI5GGO',
                fqn: 'nano',
                height: 547741
            },
            mosaicDescription: '',
            properties: {
                'initialSupply': 0,
                'divisibility': 0,
                'transferable': true,
                'supplyMutable': true
            },
            levy: {
                'mosaic': null,
                'address': Wallet.currentAccount.address,
                'feeType': 1,
                'fee': 5
            },
            isMultisig: false,
            multisigAccount: {
                "address": "TBUSUKWVVPS7LZO4AF6VABQHY2FI4IIMCJGIVX3X",
                "harvestedBlocks": 0,
                "balance": 16000000,
                "importance": 0,
                "vestedBalance": 0,
                "publicKey": "671ca866718ed174a21e593fc1e250837c03935bc79e2daad3bd018c444d78a7",
                "label": null,
                "multisigInfo": {
                    "cosignatoriesCount": 1,
                    "minCosignatories": 1
                }
            }
        });
        expect(ctrl.currentAccountMosaicNames).toEqual(['nano:points', 'nem:xem']);
        expect(ctrl.mosaicOwned).toEqual(ctrl._DataStore.mosaic.ownedBy[ctrl._Wallet.currentAccount.address]);
        expect(ctrl.selectedMosaic).toEqual('nem:xem');
        expect(ctrl.hasLevy).toBe(false);
        expect(ctrl.okPressed).toBe(false);
        expect(ctrl.common).toEqual(nem.model.objects.get("common"));
    });

    it("Has right sink on testnet", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('CreateMosaicCtrl', {
            $scope: scope
        });

        // Act
        scope.$digest();

        // Assert
        expect(ctrl.formData.mosaicFeeSink).toEqual("TBMOSA-ICOD4F-54EE5C-DMR23C-CBGOAM-2XSJBR-5OLC");
    });

    it("Has right sink on mainnet", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextMainnet(Wallet)
        let ctrl = $controller('CreateMosaicCtrl', {
            $scope: scope
        });

        // Act
        scope.$digest();

        // Assert
        expect(ctrl.formData.mosaicFeeSink).toEqual("NBMOSA-ICOD4F-54EE5C-DMR23C-CBGOAM-2XSIUX-6TRS");
    });

    it("Has right rentalFee on testnet", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet);
        let ctrl = $controller('CreateMosaicCtrl', {
            $scope: scope
        });

        // Act
        scope.$digest();

        // Assert
        expect(ctrl.preparedTransaction.creationFee).toBe(nem.model.fees.mosaicDefinitionTransaction);
    });

    it("Has right rentalFee on mainnet", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextMainnet(Wallet);
        let ctrl = $controller('CreateMosaicCtrl', {
            $scope: scope
        });

        // Act
        scope.$digest();

        // Assert
        expect(ctrl.preparedTransaction.creationFee).toBe(nem.model.fees.mosaicDefinitionTransaction);
    });

    it("Has right fee on testnet", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet);
        let ctrl = $controller('CreateMosaicCtrl', {
            $scope: scope
        });

        // Act
        scope.$digest();

        // Assert
        expect(ctrl.preparedTransaction.fee).toBe(nem.model.fees.namespaceAndMosaicCommon);
    });

    it("Has right fee on mainnet", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextMainnet(Wallet);
        let ctrl = $controller('CreateMosaicCtrl', {
            $scope: scope
        });

        // Act
        scope.$digest();

        // Assert
        expect(ctrl.preparedTransaction.fee).toBe(nem.model.fees.namespaceAndMosaicCommon);
    });

    it("Can update transaction fee if multisig", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet);
        let ctrl = $controller('CreateMosaicCtrl', {
            $scope: scope
        });

        // Act
        ctrl.formData.isMultisig = true;
        ctrl.prepareTransaction();
        scope.$digest();

        // Assert
        expect(ctrl.preparedTransaction.fee).toBe(nem.model.fees.multisigTransaction);
        expect(ctrl.preparedTransaction.otherTrans.fee).toBe(nem.model.fees.namespaceAndMosaicCommon);
    });

    it("Can update transaction fee if multisig enabled then disabled", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet);
        let ctrl = $controller('CreateMosaicCtrl', {
            $scope: scope
        });

        // Act
        ctrl.formData.isMultisig = true;
        ctrl.prepareTransaction();
        scope.$digest();
        ctrl.formData.isMultisig = false;
        ctrl.prepareTransaction();
        scope.$digest();

        // Assert
        expect(ctrl.preparedTransaction.fee).toBe(nem.model.fees.namespaceAndMosaicCommon);
    });

    it("Can lowercase mosaic name", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet);
        let ctrl = $controller('CreateMosaicCtrl', {
            $scope: scope
        });
        ctrl.formData.mosaicName = "AwEsOmE";
        ctrl.processMosaicName();

        // Act
        scope.$digest();

        // Assert
        expect(ctrl.formData.mosaicName).toEqual('awesome');
    });

    it("Can set default mosaic levy if levy enabled", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet);
        let ctrl = $controller('CreateMosaicCtrl', {
            $scope: scope
        });

        // Act
        ctrl.updateLevyMosaic(true);
        scope.$digest();

        // Assert
        expect(ctrl.formData.levy.mosaic).toEqual({
            "namespaceId": "nem",
            "name": "xem"
        });
    });

    it("Can set mosaic levy to null if levy enabled then disabled", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet);
        let ctrl = $controller('CreateMosaicCtrl', {
            $scope: scope
        });

        // Act
        ctrl.updateLevyMosaic(true);
        ctrl.updateLevyMosaic(false);
        scope.$digest();

        // Assert
        expect(ctrl.formData.levy.mosaic).toBe(null);
    });

    it("Can set selected mosaic as levy mosaic", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet);
        let ctrl = $controller('CreateMosaicCtrl', {
            $scope: scope
        });

        // Act
        ctrl.selectedMosaic = 'nano:points';
        ctrl.updateLevyMosaic(true);
        scope.$digest();

        // Assert
        expect(ctrl.formData.levy.mosaic).toEqual({
            "namespaceId": "nano",
            "name": "points"
        });
    });

    it("Can change levy fee type to percentile", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet);
        let ctrl = $controller('CreateMosaicCtrl', {
            $scope: scope
        });

        // Act
        ctrl.selectedMosaic = 'nano:points';
        ctrl.updateLevyMosaic(true);
        ctrl.formData.levy.feeType = 2;
        scope.$digest();

        // Assert
        expect(ctrl.formData.levy.feeType).toBe(2);
    });

    it("Can change levy fee type to percentile then absolute", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet);
        let ctrl = $controller('CreateMosaicCtrl', {
            $scope: scope
        });

        // Act
        ctrl.selectedMosaic = 'nano:points';
        ctrl.updateLevyMosaic(true);
        ctrl.formData.levy.feeType = 2;
        scope.$digest();
        ctrl.formData.levy.feeType = 1;

        // Assert
        expect(ctrl.formData.levy.feeType).toBe(1);
    });

    it("Set right mosaics owned if multisig enabled", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('CreateMosaicCtrl', {
            $scope: scope
        });

        // Act
        ctrl.formData.isMultisig = true;
        ctrl.updateCurrentAccountNSM();
        scope.$digest();

        // Assert
        expect(ctrl.mosaicOwned).toEqual(ctrl._DataStore.mosaic.ownedBy[ctrl.formData.multisigAccount.address]);
    });

    it("Set right mosaics owned if multisig enabled then disabled", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('CreateMosaicCtrl', {
            $scope: scope
        });

        // Act
        ctrl.formData.isMultisig = true;
        ctrl.updateCurrentAccountNSM();
        scope.$digest();
        expect(ctrl.mosaicOwned).toEqual(ctrl._DataStore.mosaic.ownedBy[ctrl.formData.multisigAccount.address]);
        ctrl.formData.isMultisig = false;
        ctrl.updateCurrentAccountNSM();
        scope.$digest();

        // Assert
        expect(ctrl.mosaicOwned).toEqual(ctrl._DataStore.mosaic.ownedBy[ctrl._Wallet.currentAccount.address]);
    });

    it("Set right current account mosaic names and selected mosaic if multisig enabled", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('CreateMosaicCtrl', {
            $scope: scope
        });

        // Act
        ctrl.formData.isMultisig = true;
        scope.$digest();
        ctrl.updateCurrentAccountNSM();

        // Assert
        expect(ctrl.currentAccountMosaicNames).toEqual(['nem:xem']);
        expect(ctrl.selectedMosaic).toEqual('nem:xem');
    });

    it("Set right current account mosaic names and selected mosaic if multisig enabled then disabled", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('CreateMosaicCtrl', {
            $scope: scope
        });

        // Act
        ctrl.formData.isMultisig = true;
        scope.$digest();
        ctrl.updateCurrentAccountNSM();
        ctrl.formData.isMultisig = false;
        scope.$digest();
        ctrl.updateCurrentAccountNSM();

        // Assert
        expect(ctrl.currentAccountMosaicNames).toEqual(['nano:points', 'nem:xem']);
        expect(ctrl.selectedMosaic).toEqual('nem:xem');
    });

    it("Can disable transferable mode", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('CreateMosaicCtrl', {
            $scope: scope
        });

        // Act
        ctrl.formData.properties.transferable = false;
        scope.$digest();

        // Assert
        expect(ctrl.formData.properties.transferable).toBe(false);
    });

    it("Can disable mutable supply", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('CreateMosaicCtrl', {
            $scope: scope
        });

        // Act
        ctrl.formData.properties.supplyMutable = false;
        scope.$digest();

        // Assert
        expect(ctrl.formData.properties.supplyMutable).toBe(false);
    });

});
'''
'''--- tests/specs/editMosaicModule.spec.js ---
import WalletFixture from '../data/wallet';
import AccountDataFixture from '../data/accountData';
import nem from 'nem-sdk';

describe('Mosaic supply change transaction module tests', function() {
    let $controller, $rootScope, Wallet, DataStore, Nodes;

    beforeEach(angular.mock.module('app'));

    beforeEach(angular.mock.inject(function(_$controller_, _$rootScope_, _Wallet_, _DataStore_, _Nodes_) {
        $controller = _$controller_;
        $rootScope = _$rootScope_;
        Wallet = _Wallet_;
        DataStore = _DataStore_;
        Nodes = _Nodes_;
    }));

    function createDummyWalletContextTestnet(Wallet) {
        Wallet.use(WalletFixture.testnetWallet);
        Nodes.setDefault();

        DataStore.account.metaData = AccountDataFixture.testnetAccountData;
        DataStore.namespace.ownedBy = AccountDataFixture.testnetNamespaceOwned;
        DataStore.mosaic.ownedBy =  AccountDataFixture.testnetMosaicOwned;
        DataStore.mosaic.metaData = AccountDataFixture.testnetMosaicDefinitionMetaDataPair;
        DataStore.chain.height = 999999999;
    }

    function createDummyWalletContextMainnet(Wallet) {
        Wallet.use(WalletFixture.mainnetWallet);
        Nodes.setDefault();

        DataStore.account.metaData = AccountDataFixture.mainnetAccountData;
        DataStore.namespace.ownedBy = AccountDataFixture.mainnetNamespaceOwned;
        DataStore.mosaic.ownedBy = AccountDataFixture.mainnetMosaicOwned;
        DataStore.mosaic.metaData = AccountDataFixture.mainnetMosaicDefinitionMetaDataPair;
        DataStore.chain.height = 999999999;
    }

    it("Can update current account mosaics", function() {
        // Arrange
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('EditMosaicCtrl', {
            $scope: scope
        });

        // Act
        ctrl.updateCurrentAccountMosaics();

        // Assert
        expect(ctrl.mosaicOwned).toEqual(ctrl._DataStore.mosaic.ownedBy[ctrl._Wallet.currentAccount.address]);
        expect(ctrl.currentAccountMosaicNames).toEqual(['nano:points', 'nem:xem']);
        expect(ctrl.selectedMosaic).toEqual('nem:xem');
    });

    it("Default properties initialized (after updateCurrentAccountMosaics)", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('EditMosaicCtrl', {
            $scope: scope
        });

        // Assert
        expect(ctrl.formData).toEqual({
            mosaic: '',
            supplyType: 1,
            delta: 0,
            isMultisig: false,
            multisigAccount: {
                "address": "TBUSUKWVVPS7LZO4AF6VABQHY2FI4IIMCJGIVX3X",
                "harvestedBlocks": 0,
                "balance": 16000000,
                "importance": 0,
                "vestedBalance": 0,
                "publicKey": "671ca866718ed174a21e593fc1e250837c03935bc79e2daad3bd018c444d78a7",
                "label": null,
                "multisigInfo": {
                    "cosignatoriesCount": 1,
                    "minCosignatories": 1
                }
            }
        });
        expect(ctrl.mosaicOwned).toEqual(ctrl._DataStore.mosaic.ownedBy[ctrl._Wallet.currentAccount.address]);
        expect(ctrl.currentAccountMosaicNames).toEqual(['nano:points', 'nem:xem']);
        expect(ctrl.selectedMosaic).toEqual('nem:xem');
        expect(ctrl.okPressed).toBe(false);
        expect(ctrl.common).toEqual(nem.model.objects.get("common"));
    });

    it("Has right fee on testnet", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet);
        let ctrl = $controller('EditMosaicCtrl', {
            $scope: scope
        });

        // Act
        scope.$digest();

        // Assert
        expect(ctrl.preparedTransaction.fee).toBe(nem.model.fees.namespaceAndMosaicCommon);
    });

    it("Has right fee on mainnet", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextMainnet(Wallet);
        let ctrl = $controller('EditMosaicCtrl', {
            $scope: scope
        });

        // Act
        scope.$digest();

        // Assert
        expect(ctrl.preparedTransaction.fee).toBe(nem.model.fees.namespaceAndMosaicCommon);
    });

    it("Can update transaction fee if multisig", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet);
        let ctrl = $controller('EditMosaicCtrl', {
            $scope: scope
        });

        // Act
        ctrl.formData.isMultisig = true;
        ctrl.prepareTransaction();
        scope.$digest();

        // Assert
        expect(ctrl.preparedTransaction.fee).toBe(nem.model.fees.multisigTransaction);
        expect(ctrl.preparedTransaction.otherTrans.fee).toBe(nem.model.fees.namespaceAndMosaicCommon);
    });

    it("Can set right mosaics owned if multisig enabled", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet);
        let ctrl = $controller('EditMosaicCtrl', {
            $scope: scope
        });

        // Act
        ctrl.formData.isMultisig = true;
        ctrl.updateCurrentAccountMosaics();
        scope.$digest();

        // Assert
        expect(ctrl.mosaicOwned).toEqual(ctrl._DataStore.mosaic.ownedBy[ctrl.formData.multisigAccount.address]);
    });

    it("Can set mosaics owned if multisig enabled then disabled", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet);
        let ctrl = $controller('EditMosaicCtrl', {
            $scope: scope
        });

        // Act
        ctrl.formData.isMultisig = true;
        ctrl.updateCurrentAccountMosaics();
        scope.$digest();
        expect(ctrl.mosaicOwned).toEqual(ctrl._DataStore.mosaic.ownedBy[ctrl.formData.multisigAccount.address]);
        ctrl.formData.isMultisig = false;
        ctrl.updateCurrentAccountMosaics();
        scope.$digest();

        // Assert
        expect(ctrl.mosaicOwned).toEqual(ctrl._DataStore.mosaic.ownedBy[ctrl._Wallet.currentAccount.address]);
    });

    it("Can update multisig account mosaics if multisig enabled", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet);
        let ctrl = $controller('EditMosaicCtrl', {
            $scope: scope
        });

        // Act
        ctrl.formData.isMultisig = true;
        ctrl.updateCurrentAccountMosaics();
        scope.$digest();

        // Assert
        expect(ctrl.currentAccountMosaicNames).toEqual(['nem:xem']);
        expect(ctrl.selectedMosaic).toEqual('nem:xem');
    });

    it("Can update account mosaics if multisig enabled then disabled", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet);
        let ctrl = $controller('EditMosaicCtrl', {
            $scope: scope
        });

        // Act
        ctrl.formData.isMultisig = true;
        ctrl.updateCurrentAccountMosaics();
        scope.$digest();
        ctrl.formData.isMultisig = false;
        ctrl.updateCurrentAccountMosaics();
        scope.$digest();

        // Assert
        expect(ctrl.currentAccountMosaicNames).toEqual(['nano:points', 'nem:xem']);
        expect(ctrl.selectedMosaic).toEqual('nem:xem');
    });

    it("Can set selected mosaic as mosaic to change", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet);
        let ctrl = $controller('EditMosaicCtrl', {
            $scope: scope
        });

        // Act
        ctrl.selectedMosaic = 'nano:points';
        ctrl.updateMosaic();
        scope.$digest();

        // Assert
        expect(ctrl.formData.mosaic).toEqual({
            "namespaceId": "nano",
            "name": "points"
        });
    });

    it("Can change supply type to delete", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet);
        let ctrl = $controller('EditMosaicCtrl', {
            $scope: scope
        });

        // Act
        ctrl.formData.supplyType = 2;
        scope.$digest();

        // Assert
        expect(ctrl.formData).toEqual({
            mosaic: '',
            supplyType: 2,
            delta: 0,
            isMultisig: false,
            multisigAccount: {
                "address": "TBUSUKWVVPS7LZO4AF6VABQHY2FI4IIMCJGIVX3X",
                "harvestedBlocks": 0,
                "balance": 16000000,
                "importance": 0,
                "vestedBalance": 0,
                "publicKey": "671ca866718ed174a21e593fc1e250837c03935bc79e2daad3bd018c444d78a7",
                "label": null,
                "multisigInfo": {
                    "cosignatoriesCount": 1,
                    "minCosignatories": 1
                }
            }
        });
    });

    it("Can change supply type to create after delete", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet);
        let ctrl = $controller('EditMosaicCtrl', {
            $scope: scope
        });

        // Act
        ctrl.formData.supplyType = 2;
        scope.$digest();
        ctrl.formData.supplyType = 1;
        scope.$digest();

        // Assert
        expect(ctrl.formData).toEqual({
            mosaic: '',
            supplyType: 1,
            delta: 0,
            isMultisig: false,
            multisigAccount: {
                "address": "TBUSUKWVVPS7LZO4AF6VABQHY2FI4IIMCJGIVX3X",
                "harvestedBlocks": 0,
                "balance": 16000000,
                "importance": 0,
                "vestedBalance": 0,
                "publicKey": "671ca866718ed174a21e593fc1e250837c03935bc79e2daad3bd018c444d78a7",
                "label": null,
                "multisigInfo": {
                    "cosignatoriesCount": 1,
                    "minCosignatories": 1
                }
            }
        });
    });

});
'''
'''--- tests/specs/ledger.spec.js ---
import { fail } from "assert";

describe("Ledger service", function() {

  let LedgerService;

  beforeEach(function() {
     angular.mock.module('app');
  });

  beforeEach(angular.mock.inject(function(_Ledger_) {
    LedgerService = _Ledger_;
  }));

  it ("Has right bip44 path for testnet NetWork", function() {
    // GIVEN
    let expectedResult = "44'/43'/152'/0'/0'";

    // WHEN
    let result = LedgerService.bip44(-104, 0);

    // THEN
    expect(expectedResult).toBe(result);
  });

  it ("Has right bip44 path for main NetWork", function() {
    // GIVEN
    let expectedResult = "44'/43'/104'/0'/0'";

    // WHEN
    let result = LedgerService.bip44(104, 0);

    // THEN
    expect(expectedResult).toBe(result);
  });

  it ("Can get account from ledger", async function(done) {
    // GIVEN
    let network = -104;
    let index = 0;
    let label = "Primary";
    spyOn(LedgerService, 'getAccount').and.returnValue(Promise.resolve('getAccount() result'));
    let expetedResult = 'getAccount() result';

    // WHEN
    let result = await LedgerService.createAccount(network, index, label)

    // THEN
    expect(LedgerService.getAccount).toHaveBeenCalledWith("44'/43'/152'/0'/0'", network, label);
    expect(result).toEqual(expetedResult);
    done();
  });

  it ("Can get wallet from ledger account", async function(done) {
    // GIVEN
    spyOn(LedgerService, 'createAccount').and.returnValue(Promise.resolve('account'));
    let expectedResult = ({
      "name": "LEDGER",
      "accounts": {
          "0": 'account'
      }
    })
    // WHEN
    let result = await LedgerService.createWallet('-109').catch(err => {
      fail('Error while creating wallet: ' + err);
    });
    // THEN
    expect(LedgerService.createAccount).toHaveBeenCalled();
    expect(result).toEqual(expectedResult);
    done();
  });

  it ("Can serialize transactions for account", async function(done) {
    // GIVEN
    let transaction = {
      type:257,
      version:-1744830463,
      timeStamp:130922553,
      deadline:130926153,
      recipient:"TA545ICAVNEUDFUBIHO3CEJBSVIZ7YYHFFX5LQPT",
      amount:1000000,
      fee:100000,
      message:{
        type:1,
        payload:"616263"
      },
      mosaics:null
    };
    let account = {
      brain:false,
      algo:"ledger",
      encrypted:"",
      iv:"",
      address:"TA545ICAVNEUDFUBIHO3CEJBSVIZ7YYHFFX5LQPT",
      label:"Primary",
      network:-104,
      child:"",
      hdKeypath:"44'/43'/152'/0'/0'",
      publicKey:"3e6e6cbac488b8a44bdf5abf27b9e1cc2a6f20d09d550a66b9b36f525ca222ee",
      $$hashKey:"object:141"
    };
    spyOn(LedgerService, 'signTransaction').and.returnValue(Promise.resolve('payload'));
    let expetedResult = 'payload';

    // WHEN
    let result = await LedgerService.serialize(transaction, account).catch(err => {
      fail('Error while serializig transaction: ' + err);
    });

    // THEN
    expect(LedgerService.signTransaction).toHaveBeenCalled();
    expect(result).toEqual(expetedResult);
    done();
  });
});

'''
'''--- tests/specs/namespaceModule.spec.js ---
import WalletFixture from '../data/wallet';
import AccountDataFixture from '../data/accountData';
import nem from 'nem-sdk';

describe('Provision namespace transaction module tests', function() {
    let $controller, $rootScope, Wallet, DataStore, $filter, Nodes;

    beforeEach(angular.mock.module('app'));

    beforeEach(angular.mock.inject(function(_$controller_, _$rootScope_, _Wallet_, _DataStore_, _$filter_, _Nodes_) {
        $controller = _$controller_;
        $rootScope = _$rootScope_;
        Wallet = _Wallet_;
        DataStore = _DataStore_;
        $filter = _$filter_;
        Nodes = _Nodes_;
    }));

    function createDummyWalletContextTestnet(Wallet) {
        Wallet.use(WalletFixture.testnetWallet);
        Nodes.setDefault();

        DataStore.account.metaData = AccountDataFixture.testnetAccountData;
        DataStore.namespace.ownedBy = AccountDataFixture.testnetNamespaceOwned;
        DataStore.chain.height = 999999999;
    }

    function createDummyWalletContextMainnet(Wallet) {
        Wallet.use(WalletFixture.mainnetWallet);
        Nodes.setDefault();

        DataStore.account.metaData = AccountDataFixture.mainnetAccountData;
        DataStore.namespace.ownedBy = AccountDataFixture.mainnetNamespaceOwned;
        DataStore.chain.height = 999999999;
    }

    it("Default properties initialized", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('NamespacesCtrl', {
            $scope: scope
        });
        scope.$digest();
        // Assert
        expect(ctrl.formData).toEqual({
            rentalFeeSink: nem.model.sinks.namespace[Wallet.network],
            namespaceName: '',
            namespaceParent: { owner: 'TAF7BPDV22HCFNRJEWOGLRKBYQF65GBOLQPI5GGO', fqn: 'nano', height: 547741 },
            isMultisig: false,
            multisigAccount: {
                "address": "TBUSUKWVVPS7LZO4AF6VABQHY2FI4IIMCJGIVX3X",
                "harvestedBlocks": 0,
                "balance": 16000000,
                "importance": 0,
                "vestedBalance": 0,
                "publicKey": "671ca866718ed174a21e593fc1e250837c03935bc79e2daad3bd018c444d78a7",
                "label": null,
                "multisigInfo": {
                    "cosignatoriesCount": 1,
                    "minCosignatories": 1
                }
            }
        });
        expect(ctrl.okPressed).toBe(false);
        expect(ctrl.common).toEqual(nem.model.objects.get("common"));
    });

    it("Has right transaction fee on testnet", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('NamespacesCtrl', {
            $scope: scope
        });

        // Act
        ctrl.prepareTransaction();
        scope.$digest();

        // Assert
        expect(ctrl.preparedTransaction.fee).toBe(nem.model.fees.namespaceAndMosaicCommon);
    });

    it("Has right transaction fee on mainnet", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextMainnet(Wallet)
        let ctrl = $controller('NamespacesCtrl', {
            $scope: scope
        });

        // Act
        ctrl.prepareTransaction();
        scope.$digest();

        // Assert
        expect(ctrl.preparedTransaction.fee).toBe(nem.model.fees.namespaceAndMosaicCommon);
    });

    it("Has right transaction fee if multisig on testnet", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('NamespacesCtrl', {
            $scope: scope
        });

        // Act
        ctrl.formData.isMultisig = true;
        ctrl.prepareTransaction();
        scope.$digest();

        // Assert
        expect(ctrl.preparedTransaction.fee).toBe(nem.model.fees.multisigTransaction);
        expect(ctrl.preparedTransaction.otherTrans.fee).toBe(nem.model.fees.namespaceAndMosaicCommon);
    });

    it("Has right rental fee for root namespaces on testnet", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('NamespacesCtrl', {
            $scope: scope
        });

        // Act
        ctrl.formData.namespaceParent = null;
        ctrl.prepareTransaction();
        scope.$digest();

        // Assert
        expect(ctrl.preparedTransaction.rentalFee).toBe(nem.model.fees.rootProvisionNamespaceTransaction);
    });

    it("Has right rental fee for root namespaces on mainnet", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextMainnet(Wallet)
        let ctrl = $controller('NamespacesCtrl', {
            $scope: scope
        });

        // Act
        ctrl.formData.namespaceParent = null;
        ctrl.prepareTransaction();
        scope.$digest();

        // Assert
        expect(ctrl.preparedTransaction.rentalFee).toBe(nem.model.fees.rootProvisionNamespaceTransaction);
    });

    it("Has right rental fee for sub namespaces on testnet", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('NamespacesCtrl', {
            $scope: scope
        });

        // Act
        ctrl.formData.namespaceParent = 'nano';
        ctrl.prepareTransaction();
        scope.$digest();

        // Assert
        expect(ctrl.preparedTransaction.rentalFee).toBe(nem.model.fees.subProvisionNamespaceTransaction);
    });

    it("Has right rental fee for sub namespaces on mainnet", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextMainnet(Wallet)
        let ctrl = $controller('NamespacesCtrl', {
            $scope: scope
        });

        // Act
        ctrl.formData.namespaceParent = 'nano';
        ctrl.prepareTransaction();
        scope.$digest();

        // Assert
        expect(ctrl.preparedTransaction.rentalFee).toBe(nem.model.fees.subProvisionNamespaceTransaction);
    });

    it("Has right sink on testnet", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('NamespacesCtrl', {
            $scope: scope
        });

        // Act
        scope.$digest();

        // Assert
        expect(ctrl.formData.rentalFeeSink).toEqual("TAMESP-ACEWH4-MKFMBC-VFERDP-OOP4FK-7MTDJE-YP35");
    });

    it("Has right sink on mainnet", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextMainnet(Wallet)
        let ctrl = $controller('NamespacesCtrl', {
            $scope: scope
        });

        // Act
        scope.$digest();

        // Assert
        expect(ctrl.formData.rentalFeeSink).toEqual("NAMESP-ACEWH4-MKFMBC-VFERDP-OOP4FK-7MTBXD-PZZA");
    });

    it("Can detect < level 3 namespaces", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet);
        let ctrl = $controller('NamespacesCtrl', {
            $scope: scope
        });
        ctrl.namespaceOwned["nano.test.third"] = {
            "owner": "TAF7BPDV22HCFNRJEWOGLRKBYQF65GBOLQPI5GGO",
            "fqn": "nano.test.third",
            "height": 547741
        }
        let NSarray = $filter('objValues')(ctrl.namespaceOwned);

        // Act & Assert
        expect(ctrl.isNotLevel3(NSarray[0])).toBe(true);
        expect(ctrl.isNotLevel3(NSarray[1])).toBe(false);
        delete ctrl.namespaceOwned["nano.test.third"];
    });

    it("Set right namespaces if multisig enabled", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('NamespacesCtrl', {
            $scope: scope
        });

        // Act
        ctrl.formData.isMultisig = true;
        ctrl.updateCurrentAccountNS();
        scope.$digest();

        // Assert
        expect(ctrl.namespaceOwned).toEqual({});
    });

    it("Set right namespaces if multisig enabled then disabled", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('NamespacesCtrl', {
            $scope: scope
        });

        // Act
        ctrl.formData.isMultisig = true;
        ctrl.updateCurrentAccountNS();
        scope.$digest();
        expect(ctrl.namespaceOwned).toEqual({});
        ctrl.formData.isMultisig = false;
        ctrl.updateCurrentAccountNS();
        scope.$digest();

        // Assert
        expect(ctrl.namespaceOwned).toEqual({
            "nano": {
                "owner": "TAF7BPDV22HCFNRJEWOGLRKBYQF65GBOLQPI5GGO",
                "fqn": "nano",
                "height": 547741
            }
        });
    });

    it("Can build correct root provision namespace transaction", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('NamespacesCtrl', {
            $scope: scope
        });
        scope.$digest();

        // Act
        ctrl.formData.namespaceParent = '';
        ctrl.formData.namespaceName = 'nano';
        let entity = ctrl.prepareTransaction();
        scope.$digest();

        // Assert
        expect(entity).toEqual({
            "type": 8193,
            "version": -1744830463,
            "signer": "462ee976890916e54fa825d26bdd0235f5eb5b6a143c199ab0ae5ee9328e08ce",
            "timeStamp": entity.timeStamp,
            "deadline": entity.deadline,
            "rentalFeeSink": "TAMESPACEWH4MKFMBCVFERDPOOP4FK7MTDJEYP35",
            "rentalFee": nem.model.fees.rootProvisionNamespaceTransaction,
            "parent": null,
            "newPart": "nano",
            "fee": nem.model.fees.namespaceAndMosaicCommon
        });
    });

    it("Can build correct multisig root provision namespace transaction", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('NamespacesCtrl', {
            $scope: scope
        });
        scope.$digest();

        // Act
        ctrl.formData.isMultisig = true;
        ctrl.updateCurrentAccountNS();
        scope.$digest();
        ctrl.formData.namespaceParent = '';
        ctrl.formData.namespaceName = 'nano';
        let entity = ctrl.prepareTransaction();
        scope.$digest();

        // Assert
        expect(entity).toEqual({
            "type": 4100,
            "version": -1744830463,
            "signer": "462ee976890916e54fa825d26bdd0235f5eb5b6a143c199ab0ae5ee9328e08ce",
            "timeStamp": entity.timeStamp,
            "deadline": entity.deadline,
            "fee": nem.model.fees.multisigTransaction,
            "otherTrans": {
                "type": 8193,
                "version": -1744830463,
                "signer": "671ca866718ed174a21e593fc1e250837c03935bc79e2daad3bd018c444d78a7",
                "timeStamp": entity.otherTrans.timeStamp,
                "deadline": entity.otherTrans.deadline,
                "rentalFeeSink": "TAMESPACEWH4MKFMBCVFERDPOOP4FK7MTDJEYP35",
                "rentalFee": nem.model.fees.rootProvisionNamespaceTransaction,
                "parent": null,
                "newPart": "nano",
                "fee": nem.model.fees.namespaceAndMosaicCommon
            }
        });
    });

    it("Can build correct sub provision namespace transaction", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('NamespacesCtrl', {
            $scope: scope
        });
        scope.$digest();

        // Act
        ctrl.formData.namespaceParent = { "fqn": "nano", "height": 547741 };
        ctrl.formData.namespaceName = 'fiat';
        let entity = ctrl.prepareTransaction();
        scope.$digest();

        // Assert
        expect(entity).toEqual({
            "type": 8193,
            "version": -1744830463,
            "signer": "462ee976890916e54fa825d26bdd0235f5eb5b6a143c199ab0ae5ee9328e08ce",
            "timeStamp": entity.timeStamp,
            "deadline": entity.deadline,
            "rentalFeeSink": "TAMESPACEWH4MKFMBCVFERDPOOP4FK7MTDJEYP35",
            "rentalFee": nem.model.fees.subProvisionNamespaceTransaction,
            "parent": "nano",
            "newPart": "fiat",
            "fee": nem.model.fees.namespaceAndMosaicCommon
        });
    });

    it("Can build correct multisig sub provision namespace transaction", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('NamespacesCtrl', {
            $scope: scope
        });
        scope.$digest();

        // Act
        ctrl.formData.isMultisig = true;
        ctrl.updateCurrentAccountNS();
        scope.$digest();
        ctrl.formData.namespaceParent = { "fqn": "nano", "height": 547741 };
        ctrl.formData.namespaceName = 'fiat';
        let entity = ctrl.prepareTransaction();
        scope.$digest();

        // Assert
        expect(entity).toEqual({
            "type": 4100,
            "version": -1744830463,
            "signer": "462ee976890916e54fa825d26bdd0235f5eb5b6a143c199ab0ae5ee9328e08ce",
            "timeStamp": entity.timeStamp,
            "deadline": entity.deadline,
            "fee": nem.model.fees.multisigTransaction,
            "otherTrans": {
                "type": 8193,
                "version": -1744830463,
                "signer": "671ca866718ed174a21e593fc1e250837c03935bc79e2daad3bd018c444d78a7",
                "timeStamp": entity.otherTrans.timeStamp,
                "deadline": entity.otherTrans.deadline,
                "rentalFeeSink": "TAMESPACEWH4MKFMBCVFERDPOOP4FK7MTDJEYP35",
                "rentalFee": nem.model.fees.subProvisionNamespaceTransaction,
                "parent": "nano",
                "newPart": "fiat",
                "fee": nem.model.fees.namespaceAndMosaicCommon
            }
        });
    });
});
'''
'''--- tests/specs/transferTransactionModule.spec.js ---
import WalletFixture from '../data/wallet';
import AccountDataFixture from '../data/accountData';
import nem from 'nem-sdk';

describe('Transfer transaction module tests', function() {
    let $controller, $rootScope, Wallet, DataStore, Nodes;

    beforeEach(angular.mock.module('app'));

    beforeEach(angular.mock.inject(function( _$controller_, _$rootScope_, _Wallet_, _DataStore_, _Nodes_) {
        $controller = _$controller_;
        $rootScope = _$rootScope_;
        Wallet = _Wallet_;
        DataStore = _DataStore_;
        Nodes = _Nodes_;
    }));

    function createDummyWalletContextTestnet(Wallet) {
    	Wallet.use(WalletFixture.testnetWallet);
        Nodes.setDefault();

        DataStore.account.metaData = AccountDataFixture.testnetAccountData;
        DataStore.namespace.ownedBy = AccountDataFixture.testnetNamespaceOwned;
        DataStore.mosaic.ownedBy =  AccountDataFixture.testnetMosaicOwned;
        DataStore.mosaic.metaData = AccountDataFixture.testnetMosaicDefinitionMetaDataPair;
        DataStore.chain.height = 999999999;

    }

    it("Default properties initialized", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('TransferTransactionCtrl', { $scope: scope });

        // Assert
        expect(ctrl.formData).toEqual({
        "amount": 0,
        "recipient": "",
        "recipientPublicKey": "",
        "isMultisig": false,
        "multisigAccount" : {
            "address": "TBUSUKWVVPS7LZO4AF6VABQHY2FI4IIMCJGIVX3X",
            "harvestedBlocks": 0,
            "balance": 16000000,
            "importance": 0,
            "vestedBalance": 0,
            "publicKey": "671ca866718ed174a21e593fc1e250837c03935bc79e2daad3bd018c444d78a7",
            "label": null,
            "multisigInfo": {
                "cosignatoriesCount": 1,
                "minCosignatories": 1
            }
        },
        "message": "",
        "messageType" : 1,
        "mosaics": null
        });
        expect(ctrl.isMosaicTransfer).toBe(false);
        expect(ctrl.currentAccountMosaicData).toEqual(ctrl._DataStore.mosaic.ownedBy[ctrl._Wallet.currentAccount.address]);
        expect(ctrl.selectedMosaic).toEqual("nem:xem");
        expect(ctrl.okPressed).toBe(false);
        expect(ctrl.common).toEqual(nem.model.objects.get("common"));
    });

    it("Can update fee", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('TransferTransactionCtrl', { $scope: scope });

        // Act
        ctrl.prepareTransaction();

        // Assert
        expect(ctrl.preparedTransaction.fee).toBe(50000);
    });

    it("Update fee on amount change", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('TransferTransactionCtrl', { $scope: scope });
        scope.$digest();

        // Act
        ctrl.formData.amount = 20000;
        ctrl.prepareTransaction();
        scope.$digest();

        // Assert
        expect(ctrl.preparedTransaction.fee).toBe(100000);
    });

    it("Update fee on message change", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('TransferTransactionCtrl', { $scope: scope });
        scope.$digest();

        // Act
        ctrl.formData.message = "Hello";
        ctrl.prepareTransaction();
        scope.$digest();

        // Assert
        expect(ctrl.preparedTransaction.fee).toBe(100000);
    });

    it("Update fee if multisig", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('TransferTransactionCtrl', { $scope: scope });
        scope.$digest();

        // Act
        ctrl.formData.isMultisig = true;
        ctrl.prepareTransaction();
        scope.$digest();

        // Assert
        expect(ctrl.preparedTransaction.fee).toBe(nem.model.fees.multisigTransaction);
        expect(ctrl.preparedTransaction.otherTrans.fee).toBe(50000);
    });

    it("Update fee if mosaic transfer (empty)", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('TransferTransactionCtrl', { $scope: scope });
        scope.$digest();

        // Act
        ctrl.isMosaicTransfer = true;
        ctrl.setMosaicTransfer();
        scope.$digest();

        // Assert
        expect(ctrl.preparedTransaction.fee).toBe(0);
    });

    it("Update fee if multisig and mosaic transfer (empty)", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('TransferTransactionCtrl', { $scope: scope });
        scope.$digest();

        // Act
        ctrl.formData.isMultisig = true;
        ctrl.isMosaicTransfer = true;
        ctrl.setMosaicTransfer();
        scope.$digest();

        // Assert
        expect(ctrl.preparedTransaction.otherTrans.fee).toBe(0);
        expect(ctrl.preparedTransaction.fee).toBe(150000);
    });

    it("Fee cap is 1.25 XEM", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('TransferTransactionCtrl', { $scope: scope });
        scope.$digest();

        // Act
        ctrl.formData.amount = 500000;
        ctrl.prepareTransaction();
        scope.$digest();

        // Assert
        expect(ctrl.preparedTransaction.fee).toBe(1250000);
    });

    it("Calculate right fees for mosaics", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('TransferTransactionCtrl', { $scope: scope });
        scope.$digest();

        // Act
        ctrl.isMosaicTransfer = true;
        ctrl.setMosaicTransfer();
        // Push a mosaicAttachment with a text amount
        ctrl.formData.mosaics.push(nem.model.objects.create("mosaicAttachment")("nem", "xem", "150000"));
        scope.$digest();
        // Will calculate the right amount from text
        ctrl.prepareTransaction();

        // Assert
        expect(ctrl.preparedTransaction.fee).toBe(750000);
    });

    it("Calculate right fees for multisig mosaic transfers", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('TransferTransactionCtrl', { $scope: scope });
        scope.$digest();

        // Act
        ctrl.formData.isMultisig = true;
        ctrl.isMosaicTransfer = true;
        ctrl.setMosaicTransfer();
        // Push a mosaicAttachment with a text amount
        ctrl.formData.mosaics.push(nem.model.objects.create("mosaicAttachment")("nem", "xem", "150000"));
        scope.$digest();
        ctrl.prepareTransaction();

        // Assert
        expect(ctrl.preparedTransaction.otherTrans.fee).toBe(750000);
        expect(ctrl.preparedTransaction.fee).toBe(150000);
    });

    it("Encrypt message disabled if multisig", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('TransferTransactionCtrl', { $scope: scope });
        scope.$digest();

        // Act
        ctrl.formData.messageType = 2; // Encrypted
        ctrl.formData.isMultisig = true;
        // Done directly in view when click on multisig tab, set encrypt message to false
        ctrl.formData.messageType = 1;
        scope.$digest();

        // Assert
        expect(ctrl.formData.messageType).toBe(1);
    });

    it("Define right values for mosaics and amount if mosaic transfer enabled", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('TransferTransactionCtrl', { $scope: scope });
        scope.$digest();

        // Act
        ctrl.isMosaicTransfer = true;
        ctrl.setMosaicTransfer();
        scope.$digest();

        // Assert
        expect(ctrl.formData.mosaics).toEqual([]);
        expect(ctrl.formData.amount).toBe(1)
    });

    it("Define right values for mosaics and amount if mosaic transfer disabled", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('TransferTransactionCtrl', { $scope: scope });
        scope.$digest();

        // Act
        ctrl.isMosaicTransfer = false;
        ctrl.setMosaicTransfer();
        scope.$digest();

        // Assert
        expect(ctrl.formData.mosaics).toBe(null);
        expect(ctrl.formData.amount).toBe(0)
    });

    it("Define right values for mosaics and amount if mosaic transfer enabled then disabled", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('TransferTransactionCtrl', { $scope: scope });
        scope.$digest();
        ctrl.isMosaicTransfer = true;
        ctrl.setMosaicTransfer();
        scope.$digest();

        // Act
        ctrl.isMosaicTransfer = false;
        ctrl.setMosaicTransfer();
        scope.$digest();

        // Assert
        expect(ctrl.formData.mosaics).toBe(null);
        expect(ctrl.formData.amount).toBe(0)
    });

    /*it("Can remove mosaic from mosaics array", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('TransferTransactionCtrl', { $scope: scope });
        scope.$digest();
        ctrl.isMosaicTransfer = true;
        ctrl.setMosaicTransfer();
        scope.$digest();
        ctrl.formData.mosaics.push(nem.model.objects.get("mosaicAttachment"))

        // Act
        ctrl.removeMosaic(0)

        // Assert
        expect(ctrl.formData.mosaics).toEqual([]);
    });*/

    it("Can update current account mosaics", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('TransferTransactionCtrl', { $scope: scope });
        scope.$digest();

        // Act
        ctrl.updateCurrentAccountMosaics();

        // Assert
        expect(ctrl.currentAccountMosaicData).toEqual(ctrl._DataStore.mosaic.ownedBy[ctrl._Wallet.currentAccount.address]);
    });

    it("Can update current multisig account mosaics", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('TransferTransactionCtrl', { $scope: scope });
        ctrl.formData.isMultisig = true;
        scope.$digest();

        // Act
        ctrl.updateCurrentAccountMosaics();

        // Assert
        if(!DataStore.account.metaData.meta.cosignatoryOf.length) {
            expect(ctrl.currentAccountMosaicData).toEqual([]);
        } else {
            expect(ctrl.currentAccountMosaicData).toEqual(ctrl._DataStore.mosaic.ownedBy[ctrl._DataStore.account.metaData.meta.cosignatoryOf[0].address]);
        }
    });

    /*it("Can attach a mosaic to mosaics array", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('TransferTransactionCtrl', { $scope: scope });
        ctrl.isMosaicTransfer = true;
        ctrl.setMosaicTransfer();
        scope.$digest();

        // Act
        ctrl.selectedMosaic = 'nano:points'
        ctrl.attachMosaic();
        scope.$digest()

        // Assert
        expect(ctrl.formData.mosaics).toEqual([{
            'mosaicId': {
                'namespaceId': 'nano',
                'name': 'points'
            },
            'quantity': 0,
            'gid': 'mos_id_'+ctrl.counter
        }]);
    });*/

    it("Can reset mosaics array if multisig", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('TransferTransactionCtrl', { $scope: scope });
        ctrl.isMosaicTransfer = true;
        ctrl.setMosaicTransfer();
        scope.$digest();
        ctrl.formData.mosaics = [{
            'mosaicId': {
                'namespaceId': 'nem',
                'name': 'xem'
            },
            'quantity': 0,
            'gid': 'mos_id_0'
        },{
            'mosaicId': {
                'namespaceId': 'nano',
                'name': 'points'
            },
            'quantity': 0,
            'gid': 'mos_id_'+ctrl.counter
        }]

        // Act
        ctrl.formData.isMultisig = true;
         // Done directly in view when click on multisig tab, reset mosaic array
        ctrl.setMosaicTransfer();
        scope.$digest();

        // Assert
        expect(ctrl.formData.mosaics).toEqual([]);
    });

    /*it("Can reset recipient data", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('TransferTransactionCtrl', { $scope: scope });
        ctrl.formData.recipientPublicKey = '0257b05f601ff829fdff84956fb5e3c65470a62375a1cc285779edd5ca3b42f6';
        ctrl.alias = 'nw';
        ctrl.formData.messageType = 2;
        scope.$digest();

        // Act
        ctrl.resetRecipientData();
        scope.$digest();

        // Assert
        expect(ctrl.formData.recipientPublicKey).toEqual('');
        expect(ctrl.alias).toEqual('');
        expect(ctrl.formData.messageType).toBe(1);
    });*/

    it("Can reset form data", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('TransferTransactionCtrl', { $scope: scope });
        ctrl.formData.recipientPublicKey = '0257b05f601ff829fdff84956fb5e3c65470a62375a1cc285779edd5ca3b42f6';
        ctrl.formData.recipient = 'TBCI2A-67UQZA-KCR6NS-4JWAEI-CEIGEI-M72G3M-VW5S';
        ctrl.formData.messageType = 2;
        scope.$digest();

        // Act
        ctrl.resetData();
        scope.$digest();

        // Assert
        expect(ctrl.formData).toEqual(nem.model.objects.get("transferTransaction"));
        expect(ctrl.common).toEqual(nem.model.objects.get("common")); 
    });

    it("Can build correct v1 transfers", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('TransferTransactionCtrl', { $scope: scope });
        ctrl.formData.recipient = 'TBCI2A-67UQZA-KCR6NS-4JWAEI-CEIGEI-M72G3M-VW5S';
        ctrl.formData.message = 'Hello';
        ctrl.formData.amount = 150000;
        scope.$digest();

        // Act
        let entity = ctrl.prepareTransaction();
        scope.$digest();
        // Assert
        expect(entity).toEqual({
            "type": 257,
            "version": -1744830463,
            "signer": "462ee976890916e54fa825d26bdd0235f5eb5b6a143c199ab0ae5ee9328e08ce",
            "timeStamp": entity.timeStamp,
            "deadline": entity.deadline,
            "recipient": "TBCI2A67UQZAKCR6NS4JWAEICEIGEIM72G3MVW5S",
            "amount": 150000000000,
            "fee": 800000,
            "message": {
                "type": 1,
                "payload": "48656c6c6f"
            },
            "mosaics": null
        });
    });

    it("Can build correct v1 multisig transfers", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('TransferTransactionCtrl', { $scope: scope });
        ctrl.formData.recipient = 'TBCI2A-67UQZA-KCR6NS-4JWAEI-CEIGEI-M72G3M-VW5S';
        ctrl.formData.message = 'Hello';
        ctrl.formData.amount = 150000;
        ctrl.formData.isMultisig = true;
        scope.$digest();

        // Act
        let entity = ctrl.prepareTransaction();
        scope.$digest();

        // Assert
        expect(entity).toEqual({
            "type": 4100,
            "version": -1744830463,
            "signer": "462ee976890916e54fa825d26bdd0235f5eb5b6a143c199ab0ae5ee9328e08ce",
            "timeStamp": entity.timeStamp,
            "deadline": entity.deadline,
            "fee": 150000,
            "otherTrans": {
                "type": 257,
                "version": -1744830463,
                "signer": "671ca866718ed174a21e593fc1e250837c03935bc79e2daad3bd018c444d78a7",
                "timeStamp": entity.otherTrans.timeStamp,
                "deadline": entity.otherTrans.deadline,
                "recipient": "TBCI2A67UQZAKCR6NS4JWAEICEIGEIM72G3MVW5S",
                "amount": 150000000000,
                "fee": 800000,
                "message": {
                    "type": 1,
                    "payload": "48656c6c6f"
                },
                "mosaics": null
            }
        });
    });

    it("Can build correct v2 transfers", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('TransferTransactionCtrl', { $scope: scope });
        scope.$digest();
        
        // Act
        ctrl.formData.recipient = 'TBCI2A-67UQZA-KCR6NS-4JWAEI-CEIGEI-M72G3M-VW5S';
        ctrl.formData.message = 'Hello';
        ctrl.isMosaicTransfer = true;
        ctrl.setMosaicTransfer();
        scope.$digest();
        ctrl.formData.mosaics = [{
            'mosaicId': {
                'namespaceId': 'nem',
                'name': 'xem'
            },
            'quantity': 10,
            'gid': 'mos_id_0'
        },{
            'mosaicId': {
                'namespaceId': 'nano',
                'name': 'points'
            },
            'quantity': 55,
            'gid': 'mos_id_1'
        }];

        let entity = ctrl.prepareTransaction();
        scope.$digest();

        // Assert
        expect(entity).toEqual({
            "type": 257,
            "version": -1744830462,
            "signer": "462ee976890916e54fa825d26bdd0235f5eb5b6a143c199ab0ae5ee9328e08ce",
            "timeStamp": entity.timeStamp,
            "deadline": entity.deadline,
            "recipient": "TBCI2A67UQZAKCR6NS4JWAEICEIGEIM72G3MVW5S",
            "amount": 1000000,
            "fee": 750000,
            "message": {
                "type": 1,
                "payload": "48656c6c6f"
            },
            "mosaics": [{
                "mosaicId": {
                    "namespaceId": "nem",
                    "name": "xem"
                },
                "quantity": 10000000,
                "gid": "mos_id_0"
            }, {
                "mosaicId": {
                    "namespaceId": "nano",
                    "name": "points"
                },
                "quantity": 55000,
                "gid": "mos_id_1"
            }]
        });
    });

    it("Can build correct v2 multisig transfers", function() {
        // Arrange:
        let scope = $rootScope.$new();
        createDummyWalletContextTestnet(Wallet)
        let ctrl = $controller('TransferTransactionCtrl', { $scope: scope });
        scope.$digest();
        
        // Act
        ctrl.formData.recipient = 'TBCI2A-67UQZA-KCR6NS-4JWAEI-CEIGEI-M72G3M-VW5S';
        ctrl.formData.message = 'Hello';
        ctrl.formData.isMultisig = true;
        scope.$digest();
        ctrl.isMosaicTransfer = true;
        ctrl.setMosaicTransfer();
        scope.$digest();
        ctrl.formData.mosaics = [{
            'mosaicId': {
                'namespaceId': 'nem',
                'name': 'xem'
            },
            'quantity': 12,
            'gid': 'mos_id_0'
        }];

        let entity = ctrl.prepareTransaction();
        scope.$digest();

        // Assert
        expect(entity).toEqual({
            "type": 4100,
            "version": -1744830463,
            "signer": "462ee976890916e54fa825d26bdd0235f5eb5b6a143c199ab0ae5ee9328e08ce",
            "timeStamp": entity.timeStamp,
            "deadline": entity.deadline,
            "fee": nem.model.fees.multisigTransaction,
            "otherTrans": {
                "type": 257,
                "version": -1744830462,
                "signer": "671ca866718ed174a21e593fc1e250837c03935bc79e2daad3bd018c444d78a7",
                "timeStamp": entity.otherTrans.timeStamp,
                "deadline": entity.otherTrans.deadline,
                "recipient": "TBCI2A67UQZAKCR6NS4JWAEICEIGEIM72G3MVW5S",
                "amount": 1000000,
                "fee": 100000,
                "message": {
                    "type": 1,
                    "payload": "48656c6c6f"
                },
                "mosaics": [{
                    "mosaicId": {
                        "namespaceId": "nem",
                        "name": "xem"
                    },
                    "quantity": 12000000,
                    "gid": "mos_id_0"
                }]
            }
        });
    });

});
'''
'''--- tests/specs/wallet.spec.js ---
import WalletFixture from '../data/wallet';
import nem from 'nem-sdk';

describe('Wallet service tests', function() {
    let Wallet, AppConstants, $localStorage;

    beforeEach(angular.mock.module('app'));

    beforeEach(angular.mock.inject(function(_Wallet_, _AppConstants_, _$localStorage_) {
        Wallet = _Wallet_;
        AppConstants = _AppConstants_;
        $localStorage = _$localStorage_;
        $localStorage.$reset();
    }));

    it("Default properties initialized", function() {
        // Assert
        expect(Wallet.current).toBeUndefined();
        expect(Wallet.currentAccount).toBeUndefined();
        expect(Wallet.algo).toBeUndefined();
        expect(Wallet.node).toBeUndefined();
        expect(Wallet.nodes).toBeUndefined();
        expect(Wallet.searchNode).toBeUndefined();
        expect(Wallet.chainLink).toBeUndefined();
        expect(Wallet.harvestingNode).toBeUndefined();
        expect(Wallet.ntyData).toBeUndefined();
        expect(Wallet.contacts).toBeUndefined();
    });

    it("Can set a wallet", function() {
        // Arrange
        let wallet = WalletFixture.mainnetWallet;

        // Act
        Wallet.use(wallet);

        // Assert
        expect(Wallet.current).toEqual(wallet);
        expect(Wallet.currentAccount).toEqual(wallet.accounts[0]);
        expect(Wallet.algo).toEqual(wallet.accounts[0].algo);
        expect(Wallet.network).toEqual(wallet.accounts[0].network);
        expect(Wallet.contacts).toEqual([]);
    });

    describe('Set a wallet edge-cases', function() {

        it("Can't set a wallet if no wallet", function() {
            // Arrange
            let wallet = "";

            // Act
            Wallet.use(wallet);

            // Assert
            expect(Wallet.current).toBe(undefined);
            expect(Wallet.currentAccount).toBe(undefined);
            expect(Wallet.algo).toBe(undefined);
            expect(Wallet.network).toBe(AppConstants.defaultNetwork);
        });

    });

    it("Can set a wallet at index", function() {
        // Arrange
        let wallet = WalletFixture.mainnetWalletDoubleAccounts;
        Wallet.use(wallet);
        let index = 1;

        // Act
        Wallet.useAccount(wallet, index);

        // Assert
        expect(Wallet.currentAccount).toEqual(wallet.accounts[index]);
        expect(Wallet.algo).toEqual(wallet.accounts[0].algo);
        expect(Wallet.network).toEqual(wallet.accounts[0].network);
    });

    describe('Set a wallet account edge-cases', function() {

        it("Can't set a wallet account if no current wallet", function() {
            // Arrange
            let wallet = WalletFixture.mainnetWalletDoubleAccounts;
            let index = 1;

            // Act
            Wallet.useAccount(wallet, index);

            // Assert
            expect(Wallet.current).toBe(undefined);
            expect(Wallet.currentAccount).toBe(undefined);
            expect(Wallet.algo).toBe(undefined);
            expect(Wallet.network).toBe(AppConstants.defaultNetwork);
        });

        it("Can't set a wallet account if no selected wallet", function() {
            // Arrange
            let wallet = WalletFixture.mainnetWalletDoubleAccounts;
            Wallet.use(wallet);
            let index = 1;
            let selectedWallet = "";

            // Act
            Wallet.useAccount(selectedWallet, index);

            // Assert
            expect(Wallet.current).toEqual(wallet);
            expect(Wallet.currentAccount).toEqual(wallet.accounts[0]);
            expect(Wallet.algo).toEqual(wallet.accounts[0].algo);
            expect(Wallet.network).toBe(wallet.accounts[0].network);
        });

        it("Can't set a wallet account if index is out of bounds", function() {
            // Arrange
            let wallet = WalletFixture.mainnetWalletDoubleAccounts;
            Wallet.use(wallet);
            let index = 2;

            // Act
            Wallet.useAccount(wallet, index);

            // Assert
            expect(Wallet.current).toEqual(wallet);
            expect(Wallet.currentAccount).toEqual(wallet.accounts[0]);
            expect(Wallet.algo).toEqual(wallet.accounts[0].algo);
            expect(Wallet.network).toBe(wallet.accounts[0].network);
        });

    });
});
'''
'''--- tests/specs/walletBuilder.spec.js ---
import nem from 'nem-sdk';

describe('WalletBuilder service tests', function() {
    let WalletBuilder;

    beforeEach(angular.mock.module('app'));

    beforeEach(angular.mock.inject(function(_WalletBuilder_) {
        WalletBuilder = _WalletBuilder_;
    }));

    it("Can create new wallet", function(done) {
        // Arrange:
        let walletName = "Quantum_Mechanics";
        let password = "TestTest";
        let network = nem.model.network.data.mainnet.id;

        // Act
        WalletBuilder.createWallet(walletName, password, "aaaeee", network).then((wallet) => {
            // Assert
            expect(typeof wallet === 'object').toBe(true);
            done();
        });
    });

    describe('Create new wallet edge-cases', function() {

        it("Can't create new wallet without password", function(done) {
            // Arrange:
            let walletName = "Quantum_Mechanics";
            let password = "";
            let network = nem.model.network.data.mainnet.id;

            // Act
            WalletBuilder.createWallet(walletName, password, "aaaeee", network).then((wallet) => {

                },
                (err) => {

                    // Assert
                    expect(err).toBeDefined();

                    done();
                });
        });

        it("Can't create new wallet without name", function(done) {
            // Arrange:
            let walletName = "";
            let password = "TestTest";
            let network = nem.model.network.data.mainnet.id;

            // Act
            WalletBuilder.createWallet(walletName, password, "aaaeee", network).then((wallet) => {

                },
                (err) => {

                    // Assert
                    expect(err).toBeDefined();

                    done();
                });
        });

        it("Can't create new wallet without network", function(done) {
            // Arrange:
            let walletName = "Quantum_Mechanics";
            let password = "TestTest";
            let network = "";

            //// Act
            WalletBuilder.createWallet(walletName, password, "aaaeee", network).then((wallet) => {

                },
                (err) => {

                    // Assert
                    expect(err).toBeDefined();

                    done();
                });
        });

    });

    it("Can create brain wallet", function(done) {
        // Arrange:
        let walletName = "Quantum_Mechanics";
        let password = "TestTest";
        let network = nem.model.network.data.mainnet.id;
        let expectedWallet = {
            "name": "Quantum_Mechanics",
            "accounts": {
                "0": {
                    "brain": true,
                    "algo": "pass:6k",
                    "encrypted": "",
                    "iv": "",
                    "address": "NCTIKLMIWKRZC3TRKD5JYZUQHV76LGS3TTSUIXM6",
                    "label": "Primary",
                    "network": 104,
                    "child": "fda69cfb780e65ee400be32101f80c7611ba95930cd838a4d32dabb4c738f1af"
                }
            }
        };

        // Act
        WalletBuilder.createBrainWallet(walletName, password, network).then((wallet) => {
            // Assert
            expect(wallet).toEqual(expectedWallet);

            done();
        });
    });

    describe('Create brain wallet edge-cases', function() {

        it("Can't create brain wallet without password", function(done) {
            // Arrange:
            let walletName = "Quantum_Mechanics";
            let password = "";
            let network = nem.model.network.data.mainnet.id;

            // Act
            WalletBuilder.createBrainWallet(walletName, password, network).then((wallet) => {

                },
                (err) => {

                    // Assert
                    expect(err).toBeDefined();

                    done();
                });
        });

        it("Can't create brain wallet without name", function(done) {
            // Arrange:
            let walletName = "";
            let password = "TestTest";
            let network = nem.model.network.data.mainnet.id;

            // Act
            WalletBuilder.createBrainWallet(walletName, password, network).then((wallet) => {

                },
                (err) => {

                    // Assert
                    expect(err).toBeDefined();

                    done();
                });
        });

        it("Can't create brain wallet without network", function(done) {
            // Arrange:
            let walletName = "Quantum_Mechanics";
            let password = "TestTest";
            let network = "";

            // Act
            WalletBuilder.createBrainWallet(walletName, password, network).then((wallet) => {

                },
                (err) => {

                    // Assert
                    expect(err).toBeDefined();

                    done();
                });
        });

    });

    it("Can create private key wallet", function(done) {
        // Arrange:
        let walletName = "Quantum_Mechanics";
        let password = "TestTest";
        let privateKey = "73d0d250a2214274c4f433f79573ff1d50cde37b5d181b341f9942d096341225";
        let address = "NBJ2XZMCAFAAVZXTPUPJ4MDAJOYCFB7X3MKBHFCK";
        let network = nem.model.network.data.mainnet.id;

        // Act
        WalletBuilder.createPrivateKeyWallet(walletName, password, privateKey, network).then((wallet) => {

            // Assert
            expect(typeof wallet === 'object').toBe(true);

            done();
        });
    });

    describe('Create private key wallet edge-cases', function() {

        it("Can't create private Key wallet without password", function(done) {
            // Arrange:
            let walletName = "Quantum_Mechanics";
            let password = "";
            let privateKey = "73d0d250a2214274c4f433f79573ff1d50cde37b5d181b341f9942d096341225";
            let address = "NBJ2XZMCAFAAVZXTPUPJ4MDAJOYCFB7X3MKBHFCK";
            let network = nem.model.network.data.mainnet.id;

            // Act
            WalletBuilder.createPrivateKeyWallet(walletName, password, privateKey, network).then((wallet) => {

                },
                (err) => {

                    // Assert
                    expect(err).toBeDefined();

                    done();
                });
        });

        it("Can't create private Key wallet without private key", function(done) {
            // Arrange:
            let walletName = "Quantum_Mechanics";
            let password = "TestTest";
            let privateKey = "";
            let address = "NBJ2XZMCAFAAVZXTPUPJ4MDAJOYCFB7X3MKBHFCK";
            let network = nem.model.network.data.mainnet.id;

            // Act
            WalletBuilder.createPrivateKeyWallet(walletName, password, privateKey, network).then((wallet) => {

                },
                (err) => {

                    // Assert
                    expect(err).toBeDefined();

                    done();
                });
        });

        it("Can't create private Key wallet without name", function(done) {
            // Arrange:
            let walletName = "";
            let password = "TestTest";
            let privateKey = "73d0d250a2214274c4f433f79573ff1d50cde37b5d181b341f9942d096341225";
            let address = "NBJ2XZMCAFAAVZXTPUPJ4MDAJOYCFB7X3MKBHFCK";
            let network = nem.model.network.data.mainnet.id;

            // Act
            WalletBuilder.createPrivateKeyWallet(walletName, password, privateKey, network).then((wallet) => {

                },
                (err) => {

                    // Assert
                    expect(err).toBeDefined();

                    done();
                });
        });

        it("Can't create private Key wallet without network", function(done) {
            // Arrange:
            let walletName = "Quantum_Mechanics";
            let password = "TestTest";
            let privateKey = "73d0d250a2214274c4f433f79573ff1d50cde37b5d181b341f9942d096341225";
            let address = "NBJ2XZMCAFAAVZXTPUPJ4MDAJOYCFB7X3MKBHFCK";
            let network = "";

            // Act
            WalletBuilder.createPrivateKeyWallet(walletName, password, privateKey, network).then((wallet) => {

                },
                (err) => {

                    // Assert
                    expect(err).toBeDefined();

                    done();
                });
        });

    });

});
'''
'''--- tests/start.html ---
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Nano Wallet Tests</title>
    <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/jasmine/2.4.1/jasmine.min.css">
  </head>
  <body>

    <!-- jasmine -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jasmine/2.4.1/jasmine.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jasmine/2.4.1/jasmine-html.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jasmine/2.4.1/boot.min.js"></script>

    <!-- Utils -->
    <script src="../vendors/sha256.js"></script>
    <script src="../vendors/crypto-min.js"></script>
    <script src="../vendors/bitcoinjs-min.js"></script>
    <script src="../vendors/qrcode.js"></script>
    <script src="../vendors/kjua.min.js"></script>

    <!-- app -->
    <script src="../main.js"></script>

    <!-- specs -->
    <script src="tests.js"></script>

  </body>
</html>

'''