*GitHub Repository "nguoimanhme/NEAR-Account-Utilities-2"*

'''--- README.md ---
# NEAR Utilities

A collection of utilities to help with NEAR account management, development and troubleshooting

## Setup

- Clone this repo
- Run `yarn`

## Collecting Keys

Find all TestNet accounts and copy them to `~/.near-credentials`

_This is for Linux and macOS systems only_

- Run `yarn collect-keys`

## Accounts Report

Generate a report of accounts available on the NEAR network by scanning `~/.near-credentials` for all
files ending in .json

- Run `yarn accounts`

_Expected Output_

![Accounts Report](/assets/accounts-report-output.png)

## Account Keys Report

Generate a report of account keys on the NEAR network by scanning `~/.near-credentials` for all
files ending in .json

- Run `yarn keys`

_Expected Output_

**Testnet**

![Accounts Report Testnet](/assets/keys-report-output-testnet.png)

**Localnet**

![Accounts Report Localnet](/assets/keys-report-output-localnet.png)

## Storage Report

Generate a report of decoded state stored on an account

- Run `yarn storage <account>`

_Expected Output_

![Storage Report](/assets/storage-report-output.png)

_Alternate Expected Output_

![Storage Report with no output](/assets/storage-report-no-output.png)

'''
'''--- config.js ---
const CONTRACT_NAME = process.env.CONTRACT_NAME;

function getConfig(env) {
  switch (env) {
    case "production":
    case "mainnet":
      return {
        networkId: "mainnet",
        nodeUrl: "https://rpc.mainnet.near.org",
        contractName: CONTRACT_NAME,
        walletUrl: "https://wallet.mainnet.near.org",
        helperUrl: "https://helper.mainnet.near.org",
      };
    case "development":
    case "testnet":
      return {
        networkId: "default",
        nodeUrl: "https://rpc.testnet.near.org",
        contractName: CONTRACT_NAME,
        walletUrl: "https://wallet.testnet.near.org",
        helperUrl: "https://helper.testnet.near.org",
      };
    case "betanet":
      return {
        networkId: "betanet",
        nodeUrl: "https://rpc.betanet.near.org",
        contractName: CONTRACT_NAME,
        walletUrl: "https://wallet.betanet.near.org",
        helperUrl: "https://helper.betanet.near.org",
      };
    case "local":
      return {
        networkId: "local",
        nodeUrl: "http://localhost:3030",
        keyPath: `${process.env.HOME}/.near/validator_key.json`,
        walletUrl: "http://localhost:4000/wallet",
        contractName: CONTRACT_NAME,
      };
    case "test":
    case "ci":
      return {
        networkId: "shared-test",
        nodeUrl: "https://rpc.ci-testnet.near.org",
        contractName: CONTRACT_NAME,
        masterAccount: "test.near",
      };
    case "ci-betanet":
      return {
        networkId: "shared-test-staging",
        nodeUrl: "https://rpc.ci-betanet.near.org",
        contractName: CONTRACT_NAME,
        masterAccount: "test.near",
      };
    default:
      throw Error(
        `Unconfigured environment '${env}'. Can be configured in src/config.js.`
      );
  }
}

module.exports = getConfig;

'''
'''--- package.json ---
{
  "name": "keys",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "accounts": "./bin/accounts-report",
    "keys": "./bin/keys-report",
    "storage": "./bin/storage-report",
    "collect-keys": "find ~ -type f -name '*.testnet.json' -exec cp '{}' ~/.near-credentials ';'",
    "sk2pk": "./bin/private-to-public-keys"
  },
  "keywords": [],
  "author": "",
  "license": "(MIT AND Apache-2.0)",
  "dependencies": {
    "chalk": "^4.0.0",
    "chardet": "^1.1.0",
    "got": "^11.1.3",
    "near-api-js": "^0.25.1",
    "table": "^5.4.6"
  }
}

'''