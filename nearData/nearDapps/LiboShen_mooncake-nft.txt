*GitHub Repository "LiboShen/mooncake-nft"*

'''--- .gitpod.yml ---
tasks:
  - init: npm dev
    command: npm run dev
ports:
  - port: 1234
    onOpen: open-browser

'''
'''--- README.md ---
🥮 Mooncake NFT
==================

https://mooncakenft.art/

[Mooncake](https://en.wikipedia.org/wiki/Mooncake) themed Algorithm Generated Art NFT.

- Uniquely generated glitch art for every minted NFT.
- A karma system (with a leaderboard) to gamify the NFT gifting.

'''
'''--- contract/Cargo.toml ---
[package]
name = "mooncake_nft"
version = "1.0.0"
authors = ["Libo <liboooshen@gmail.com>"]
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
near-sdk = "4.0.0"
near-contract-standards = "4.0.0"
uint = { version = "0.9.3", default-features = false }
near-crypto = "0.14.0"

[profile.release]
codegen-units = 1
opt-level = "z"
lto = true
debug = false
panic = "abort"
overflow-checks = true

[workspace]
members = []

'''
'''--- contract/README.md ---
Hello NEAR!
=================================

A [smart contract] written in [Rust] for an app initialized with [create-near-app]

Quick Start
===========

Before you compile this code, you will need to install Rust with [correct target]

Exploring The Code
==================

1. The main smart contract code lives in `src/lib.rs`.
2. There are two functions to the smart contract: `get_greeting` and `set_greeting`.
3. Tests: You can run smart contract tests with the `cargo test`.

  [smart contract]: https://docs.near.org/develop/welcome
  [Rust]: https://www.rust-lang.org/
  [create-near-app]: https://github.com/near/create-near-app
  [correct target]: https://docs.near.org/develop/prerequisites#rust-and-wasm
  [cargo]: https://doc.rust-lang.org/book/ch01-03-hello-cargo.html

'''
'''--- contract/src/facai_gen.rs ---
const STATIC_ELEMENTS: &str = r##"
<path fill="none" d="M0 0h1080v1080H0z"/>
<path d="M462 944c-13 4-27 7-42 7-43 0-79-21-97-51V695c17 30 54 51 97 51 15 0 29-3 42-8v206ZM846 639a99 99 0 0 0 80-102c8-13 13-29 14-45v188a108 108 0 0 1-13 62c3 37-18 74-55 93-8 5-17 8-25 10l-1-206Z" fill="#7f3a01" stroke="#d28827" stroke-width="4"/>
<path d="M847 845a104 104 0 0 1-110 73V711c19 2 40-2 58-12 26-13 44-36 51-61l1 206ZM737 917a103 103 0 0 1-137 32V745c20 12 46 17 73 11s50-22 64-43v205ZM600 950c-18 14-40 23-66 23-28 0-54-12-72-29V738c18 18 44 29 72 29 25 0 48-8 66-23v206ZM322 900c-48-2-87-41-93-89V605c5 49 45 87 93 90v205ZM229 810a101 101 0 0 1-61-98c-7-13-12-28-12-44h0v-1a107 107 0 0 1 0-8V465c1 15 5 29 12 42v4c0 42 25 78 61 93v206Z" fill="#7f3a01" stroke="#d28827" stroke-width="4"/>
<path d="M528 3074c18-15 43-24 69-23 31 1 58 15 76 37 19-4 40-2 60 7 23 10 41 28 52 49a99 99 0 0 1 89 79 98 98 0 0 1 59 106 105 105 0 0 1 0 104c2 36-18 73-55 93-8 4-17 7-26 9-7 25-25 47-51 61-19 10-39 14-58 12-14 21-37 37-65 43-26 6-52 1-73-11-17 14-40 23-65 23-28 0-54-11-72-29-13 5-28 7-43 7-42 0-79-20-97-51-48-2-87-40-93-89a101 101 0 0 1-61-98 103 103 0 0 1 17-121c2-48 36-87 81-96 8-24 27-47 53-61 21-12 43-17 64-15 13-21 35-38 61-45 28-7 56-3 78 9Z" fill="url(#a)" transform="translate(-7 -2895)"/>
<path d="M520 207c15-14 38-22 63-22 32 0 59 15 72 36 16-13 43-17 69-7 24 10 41 28 45 46 25-1 52 9 72 31 15 15 24 34 27 52a71 71 0 0 1 38 103c13 10 22 25 21 41 0 24-18 44-43 52 15 18 19 43 8 64a57 57 0 0 1-49 30c-6 25-25 49-52 64-24 14-49 18-71 14-6 26-30 46-58 46-20 0-38-10-48-25a90 90 0 0 1-75 33c-35 0-65-18-78-43a59 59 0 0 1-48 24c-32 0-58-24-59-55-26 7-59-3-83-28a95 95 0 0 1-28-72c-22-6-38-20-42-40-3-17 5-34 19-46a62 62 0 0 1-29-53c0-22 13-41 33-52a57 57 0 0 1 57-86c2-24 24-52 58-68 21-10 43-15 61-13 10-18 30-33 55-39 24-5 48 1 65 13Zm-47 493a404 404 0 0 0 135 6 96 96 0 0 1-66 28c-28-1-55-15-69-34Zm229-18c-6 22-25 44-49 44-16 0-27-10-35-22 30-4 58-12 84-22Zm-321-15c25 13 54 24 84 31-9 11-21 19-37 19-27 0-45-25-47-50Zm426-52c-6 21-14 46-37 59-20 10-42 8-60 5 38-16 71-38 97-64Zm-45-4c-15 6-32 8-47 10-92 13-185 20-278 25l-26 2c44 19 95 30 150 29 79-2 151-27 201-66Zm-481-34c22 33 50 61 90 82-24 5-51 5-71-16-18-17-20-45-19-66Zm443-239c-58-2-222 14-333 25-33 4-36 15-33 46 6 55 9 111 16 165 2 14 2 30 12 39 12 10 31 5 47 4 92-9 181-13 273-24 14-2 34-6 42-17 11-15 8-36 7-55-2-49-7-98-15-146-2-13-3-37-16-37Zm134 202c10 15 11 31 3 48-9 15-32 22-50 23 20-21 36-45 47-71ZM325 367c-30 33-47 72-46 113 1 50 26 95 68 129l-3-29c-9-58-18-116-21-174 0-13-1-27 2-39Zm444-23c9 36 14 96 18 173 1 24 8 52-2 73 33-33 52-74 51-118-1-49-26-94-67-128ZM252 505c4 25 8 40 22 62-19-5-34-6-37-22-3-15 3-29 15-40Zm618-48c11 8 23 19 23 31-1 19-13 35-32 43a181 181 0 0 0 9-74Zm-610-40a181 181 0 0 0-8 86 54 54 0 0 1-25-45c1-18 17-32 33-41Zm575-53c19 7 39 19 45 39 4 15-4 30-11 43-5-30-16-57-34-82Zm-424-94c-71 30-125 81-148 140-9-16-15-39-3-54 12-16 31-23 49-20 2-22 22-46 52-60 17-8 34-7 50-6Zm415 81c-21-29-41-43-75-63 21-1 45 8 64 27 13 14 8 21 11 36Zm-121-47c-44-19-95-29-150-29-80 2-152 27-202 66l21-3c97-10 251-33 331-34Zm38-20c-29-17-55-26-91-34 15-9 36-10 57-2s30 19 34 36Zm-222-42c-36 4-70 12-101 25 9-16 25-33 46-37 20-4 40 3 55 12Zm122 6a405 405 0 0 0-114-6 82 82 0 0 1 114 6Z" fill="#421f02"/>
<path d="M516 3101c15-14 38-22 64-22 31 1 59 15 72 36 16-13 43-17 69-6 24 9 40 27 45 46 24-2 51 8 72 30 15 15 24 34 27 52a71 71 0 0 1 38 103c13 10 21 25 21 42 0 23-18 43-44 51 15 18 20 44 8 65a57 57 0 0 1-49 29c-6 25-24 49-51 65-24 13-50 17-72 13-5 26-29 46-57 46-20 0-38-10-49-25a90 90 0 0 1-74 34c-36-1-66-19-78-44a59 59 0 0 1-48 25c-32 0-58-25-59-56-27 7-60-3-84-28a95 95 0 0 1-27-72c-22-5-39-20-42-40-3-17 4-34 18-46a62 62 0 0 1-29-52c1-23 14-42 33-53a57 57 0 0 1 58-85c2-25 24-52 57-69 21-10 43-14 62-13 10-18 30-33 54-38 25-5 48 0 65 12Zm-46 493a404 404 0 0 0 134 6 96 96 0 0 1-65 28c-29 0-56-15-69-34Zm229-18c-6 22-25 45-49 45-16 0-27-11-36-23 30-4 59-12 85-22Zm-321-15c25 13 53 24 83 31-9 11-21 19-36 19-27 0-45-24-47-50Zm426-52c-6 21-15 46-38 59-19 11-41 8-60 5 38-16 71-38 98-64Zm-46-4c-14 6-31 8-46 10-92 14-185 21-278 25l-26 2c43 19 95 30 149 29 80-1 151-26 201-66Zm-479-30c22 33 54 61 93 83-23 4-55 0-76-21-17-17-18-42-17-62Zm441-243c-58-2-221 14-332 25-33 4-36 15-33 46 6 55 9 111 16 166 2 13 1 29 12 38 12 10 31 5 47 4 92-9 181-12 273-24 13-2 34-6 42-17 11-14 8-36 7-54-2-49-7-98-15-147-3-13-3-36-17-37Zm134 202c10 15 12 31 3 48-8 15-31 22-49 23 20-21 36-45 46-71Zm-532-173c-30 33-47 72-46 114 1 49 26 94 68 128l-3-29c-10-57-18-115-21-174-1-12-2-26 2-39Zm444-23c9 36 14 96 17 173 2 24 9 52-1 73 33-33 52-74 51-118-1-49-26-93-67-128Zm-517 161c4 25 13 49 27 71-19-5-39-15-42-31-3-14 3-29 15-40Zm618-48c11 9 22 19 22 32 0 18-13 34-31 42a181 181 0 0 0 9-74Zm-610-40a181 181 0 0 0-8 86 54 54 0 0 1-25-45c0-18 17-31 33-41Zm575-53c19 7 39 19 44 40 4 14-3 29-11 42-4-29-16-57-33-82Zm-425-93c-71 30-124 80-148 139-9-16-14-38-3-54 12-16 31-23 50-20 2-21 22-46 52-60 16-8 34-7 49-5Zm424 92c-20-29-49-54-84-74 22-2 46 8 65 26 13 14 17 32 19 48Zm-130-58c-43-20-95-30-150-29-79 1-151 26-201 66l21-4c97-9 250-32 330-33Zm45-17c-28-17-62-30-97-38 14-8 36-10 57-2s36 24 40 40Zm-228-45c-36 3-70 12-102 24 10-16 26-32 46-37 21-4 41 3 56 13Zm121 5a405 405 0 0 0-113-6 82 82 0 0 1 113 6Z" fill="url(#b)" transform="translate(-6 -2907)"/>
<path d="M207 423c-4 8-2 15-8 18-5 2-6-9-3-19 3-14 22-28 24-22 1 6-8 15-13 23ZM337 254c-24 14-43 34-46 30-4-4 13-26 34-38 31-17 56-16 52-11s-26 10-40 19ZM275 635c19 21 53 27 51 31-3 5-41 1-56-18-23-27-24-57-17-54 5 2 11 29 22 41ZM345 309l-12 10c-31 25-53 60-56 58-7-3 22-46 54-69 47-34 74-44 74-38 0 3-11 4-60 39ZM788 585l8-9c21-25 33-56 36-55 5 2-9 43-31 65-31 33-54 42-54 37 0-2 8-4 41-38ZM335 385c3 11 5 17 6 48 1 36 9 80 0 80-5 1-10-38-12-77-2-33-1-41 0-53 0-9 5-7 6 2ZM374 337c38-9 167-21 202-22 40 0 45 7-15 10-51 4-172 22-185 21-16-1-15-6-2-9ZM437 204c-27 9-33 24-35 20-4-5 11-22 34-31 16-6 39-7 34-2-5 4-17 7-33 13ZM559 188c-14 2-29 14-29 10-1-6 16-17 29-18 10 0 24 3 24 6l-24 2ZM238 334c-19 21-13 36-18 34s-10-24 8-40c14-13 28-18 32-13s-10 7-22 19Z" fill="#fed1aa"/>
"##;
const STATIC_DEFS: &str = r##"
<g id="fa">
<path d="M513 375c-8 2-41 6-43 22-2 14 30-2 35 2 4 3-2 15-7 20-6 4-19 4-25 6-5 1-13-1-14 2-1 4 4 15 8 17 4 3 18-6 18-1 1 6-9 24-16 33-6 9-17 16-21 24-3 5-12 11-12 16-1 3 6 6 6 7 0 2 5 1 8 0 3-2 10-6 13-10 5-4 9-11 13-17 6-7 13-19 19-24 4-3 14-6 17-5 2 1-1 8-3 11l-19 22c-2 2-11 2-13 4-1 2 6 6 7 7 2 1 15-5 18-4 4 1 4 7 2 9-3 5-16 11-19 17-2 2-8 5-8 8 0 2 6 5 7 6 1 3 6 2 9 1l18-13c3-1 8-3 10-2s2 5 1 8l-8 21c-2 3-5 7-8 6-3 0-7-11-11-10-4 0-16 8-13 14 2 5 21 18 28 20 6 1 12-6 15-10 6-9 13-34 21-42 6-6 23-8 27-5s1 17-4 22c-5 4-22 1-26 4-2 2-6 3-4 6l9 8c5 2 17 1 24-1 10-4 21-21 35-21 14 1 39 20 52 22 7 1 21-6 20-11 0-4-12-13-21-17-11-5-37-7-45-12-6-5-2-17-1-22 0-3 7-5 7-8-1-4-13-10-11-17 2-6 22-16 22-20 0-2-3-6-7-7-6-2-14 4-16 2-4-3-1-11-1-15 1-5 1-14 5-14 5 0 14 9 22 12s16 5 25 6c9 0 24 1 29-2 6-4 10-15 4-18-2-1-4-6-9-7-9-2-23 4-32 2-15-4-43-16-50-21-3-2 6-5 9-7l20-8c3-2 4-6 4-9s-3-5-6-8l-10-10c-9-1-24 30-34 34-6 4-21-4-21-7 1-4 20-9 25-12 2-1 6 0 6-2 0-5-2-21-7-24s-17 2-23 5c-8 5-15 17-22 20-5 4-14 4-19 3-4 0-5-8-9-6Zm84 131c-2-1-22 12-25 16-2 1 5 2 7 3 3 1 7 9 10 6s11-23 8-25Zm-74-105c-3 2-2 7-4 10-2 5-9 15-11 21-1 6-3 16 0 17 4 2 16-7 20-8l6 1c3 2 11 8 12 11 2 2 1 5-1 7l-12 15c-1 2-5 4-5 6s5 2 7 3c2 2 5 6 4 9-1 4-10 12-13 16-2 2-6 4-5 6 2 4 13 14 18 15 6 1 13-5 15-8 1-2-6-4-4-6 6-6 38-22 44-30 4-5-7-9-9-15-1-6 1-18-1-20-3-3-12 1-14 5-2 5 1 14 1 20-1 5-1 10-4 14s-11 14-13 10c-1-1-7-3-7-6 0-7 6-17 6-24 0-9-4-22-3-27 2-4 10 0 14-2 5-2 17-8 21-12 3-2 5-8 4-10-2-2-7-4-10-3-5 2-14 12-19 12-4 0-10-8-9-11s17-4 16-7-14-10-21-11c-8-1-18 0-23 2Z" fill="#431d02"/>
<path d="M507 369c-9 2-41 6-44 22-1 14 30-2 35 2 5 3-2 15-7 20-5 4-19 4-25 6-5 1-12-1-13 2-1 4 3 15 7 17 5 3 18-6 19-1 0 6-10 24-16 33s-18 16-22 24c-4 7-6 19-6 23 0 2 6 1 8 0l14-10 13-17c5-7 12-19 18-24 5-3 15-6 17-5s-1 8-3 11l-19 22c-3 3-8 10-6 11 3 1 15-5 19-4 3 1 3 7 1 9-2 5-15 11-19 17-3 4-2 12-1 14 1 3 6 2 9 1l18-13c3-1 9-3 10-2 2 1 2 5 1 8-1 5-5 16-8 21-2 3-5 7-8 6-3 0-6-11-10-11-4 1-16 9-14 15 3 5 21 18 28 20 6 1 12-6 15-10 6-9 13-34 21-42 7-6 24-8 28-5s1 17-4 22c-5 4-23 1-26 4-4 3 0 11 5 14 4 2 16 1 23-2 10-3 21-20 35-20 14 1 40 20 52 22 8 1 21-6 21-11-1-4-14-12-23-16-11-5-36-7-43-13-6-5-3-17-2-22 0-3 8-5 7-8-1-4-13-10-11-17 2-6 22-16 22-20s-19-1-23-5c-4-3-1-11 0-15 0-5 0-14 4-14 5 0 14 9 22 12s17 5 25 6c10 0 24 1 29-2 6-4 10-15 5-18-7-4-29-1-42-5-15-4-42-16-49-21-3-2 5-5 9-7 4-3 15-6 19-8 3-2 5-6 4-9 0-3-3-6-5-8s-5-7-7-5c-8 4-28 26-37 29-7 3-22-4-22-7 1-4 20-9 25-12 2-1 7 0 6-3 0-3-2-17-8-18-5-1-19 9-26 12-6 3-11 7-17 8-6 2-15 4-20 3-4 0-5-8-8-6Zm84 131c-3-1-23 12-26 15-2 2 5 3 7 4 3 1 7 9 10 6s12-23 9-25Zm-74-105c-4 2-3 7-5 10-2 5-9 15-10 21-2 6-4 16 0 17 3 2 15-7 19-8l6 1 13 11c1 2 0 5-1 7l-12 15c-2 2-6 4-6 6 1 2 6 2 7 3 2 2 6 6 5 9-2 4-11 12-14 16-1 2-6 4-5 6 3 4 13 14 18 15 6 1 13-5 15-8 2-2-6-4-4-6 7-6 38-23 44-30 4-5-7-9-8-15-2-6 1-18-2-20-2-3-11 1-14 5-2 5 1 14 1 20-1 5-1 10-4 14-2 4-11 14-13 10-3-3 0-20-1-30 0-9-4-22-2-27 1-4 9 0 13-2 6-2 17-8 21-12 3-2 5-8 4-10s-7-4-10-3l-18 12c-3 0-5-5-4-7 1-3 12-7 10-11s-14-10-21-11-18 0-22 2Z" fill="#b14d04"/>
<path d="M483 386c-11 5-14 9-16 8-2-2 1-11 11-15 8-3 15-6 16-3 1 2-4 7-11 10ZM555 373c-11 5-20 6-21 5-2-1 10-7 19-12 7-3 11-6 12-3 1 2-4 7-10 10ZM553 445l-6 4c-2 0-2-9 0-10 2-2 11-3 11 0l-5 6ZM454 497c-8 9-9 12-11 11s-1-8 3-13c5-5 26-28 27-25 2 2-13 22-19 27Z" fill="#fed1aa"/>
</g>
<linearGradient id="a" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="scale(778.973) rotate(68 -3 2)">
<stop offset="0" stop-color="#ffbd44"/>
<stop offset=".5" stop-color="#dc8912"/>
<stop offset="1" stop-color="#d07600"/>
</linearGradient>
<linearGradient id="b" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="scale(499.109) rotate(51 -6 4)">
<stop offset="0" stop-color="#bf5802"/>
<stop offset="1" stop-color="#9e3d06"/>
</linearGradient>
"##;

pub fn new(seed: &Vec<u8>) -> String {
    let mut sum: u8 = 0;
    let mut count: u8 = 0;
    let mut fitlers: String = "".to_string().to_owned();
    for i in 0..4 {
        let h: u8 = seed[i * 8] >> 2;
        let dx1: i8 = (seed[i * 8 + 1] & 0b00011111u8) as i8 - 0b00010000;
        let dy1: i8 = (seed[i * 8 + 2] & 0b00000111u8) as i8 - 0b00000100;
        // let dx1: i8 = seed[i * 8 + 1] as i8 >> 2;
        // let dy1: i8 = seed[i * 8 + 2] as i8 >> 4;
        let dx2: i8 = (seed[i * 8 + 1] & 0b00001111u8) as i8;
        let dy2: i8 = (seed[i * 8 + 2] & 0b00000011u8) as i8;
        let c1: u16 = fold_cubic(seed[i * 8 + 3] >> 2);
        let c2: u16 = if seed[i * 8 + 4] & 0b00001111 == 0b0001111 {
            seed[i * 8 + 4].into()
        } else {
            0
        };
        if h > 30 {
            let h2: u8 = seed[i * 8 + 4] & 3;
            let y2: u8 = seed[i * 8 + 4] % (h - h2);

            fitlers.push_str(&gen_glitch(count, sum, y2, dx1, dy1, dx2, dy2, c1, c2));
            count += 1;
            fitlers.push_str(&gen_glitch(
                count,
                sum + y2,
                h2,
                if dx1 > 0 {
                    (dx1 << 2) + 10
                } else {
                    (dx1 << 2) - 10
                },
                dy1,
                dx2 << 1,
                dy2,
                c1,
                c2,
            ));
            count += 1;
            fitlers.push_str(&gen_glitch(
                count,
                sum + y2 + h2,
                h - y2 - h2,
                dx1,
                dy1,
                dx2,
                dy2,
                c1,
                c2,
            ));
            count += 1;
        } else {
            fitlers.push_str(&gen_glitch(count, sum, h, dx1, dy1, dx2, dy2, c1, c2));
            count += 1;
        }
        sum += h;
    }
    if sum < 100 {
        fitlers.push_str(&gen_glitch(count, sum, 100 - sum, 0, 0, 0, 0, 0, 0));
        count += 1;
    }
    generate(count, fitlers)
}

fn fold_cubic(v: u8) -> u16 {
    let a = v & 0b11110000 >> 4;
    let b = v & 0b00001111;
    let c: u16 = (a & b).into();
    c * c * c
}

fn generate(n: u8, filters: String) -> String {
    let mut elements: String = "".to_string().to_owned();
    for i in 0..n {
        elements.push_str(&format!("<use href=\"#fa\" filter=\"url(#g{})\"/>", i))
    }
    format!(
        "{}{}{}{}{}{}{}{}",
        r#"<svg viewBox="0 0 1080 1080" xmlns="http://www.w3.org/2000/svg" xml:space="preserve" fill-rule="evenodd" clip-rule="evenodd" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.6">"#,
        STATIC_ELEMENTS,
        elements,
        "<defs>",
        STATIC_DEFS,
        filters,
        "</defs>",
        "</svg>"
    )
}

fn gen_glitch(
    id: u8,
    y: u8,
    height: u8,
    dx1: i8,
    dy1: i8,
    dx2: i8,
    dy2: i8,
    c1: u16,
    c2: u16,
) -> String {
    format!(
        "<filter id=\"g{id}\" x=\"0\" y=\"{y}%\" width=\"100%\" height=\"{height}%\">
      <feFlood flood-color=\"hsl({c1}deg, 85%, 50%)\" result=\"f\" />
      <feOffset in=\"SourceGraphic\" dx=\"{dx1}\" dy=\"{dy1}\" result=\"a\"/>
      <feOffset in=\"SourceGraphic\" dx=\"{dx2}\" dy=\"{dy2}\" result=\"b\"/>
      <feColorMatrix in=\"b\" type=\"hueRotate\" values=\"{c2}\" result=\"m\"/>
      <feComposite in=\"f\" in2=\"a\" operator=\"in\" result=\"c\" />
      <feMerge>
        <feMergeNode in = \"c\" />
        <feMergeNode in = \"m\" />
      </feMerge>
    </filter>"
    )
}

#[cfg(all(test, not(target_arch = "wasm32")))]
mod tests {
    use crate::facai_gen::new;
    // use rand::{thread_rng, Rng};
    use std::fs::File;
    use std::io::Write;

    // #[test]
    // fn test_new() {
    //     for i in 0..10 {
    //         let mut file = File::create(format!("../frontend/assets/e_{}.svg", i)).unwrap();
    //         let mut seed = vec![0u8; 32];
    //         thread_rng().fill(&mut seed[..]);
    //         write!(file, "{}", new(seed)).unwrap();
    //     }
    //     assert_eq!(1, 2)
    // }
}

'''
'''--- contract/src/karma.rs ---
use near_contract_standards::non_fungible_token::TokenId;
use near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};
use near_sdk::collections::LookupMap;
use near_sdk::{env, AccountId, Balance, IntoStorageKey};

const RANK_MAX: usize = 10;
const QUOTA_REFILL_SECONDS: u64 = 3600 * 24 * 30;
const MAX_QUOTA: u16 = 3;

#[derive(BorshDeserialize, BorshSerialize, Debug)]
pub struct Quota {
    value: u16,
    lasted_used_at: u64,
}

#[derive(BorshDeserialize, BorshSerialize)]
pub struct RankItem {
    account: AccountId,
    balance: Balance,
}

#[derive(BorshDeserialize, BorshSerialize)]
pub struct Karma {
    balance_by_owner: LookupMap<AccountId, Balance>,
    rank: Vec<(Balance, AccountId)>,
    quota_by_token_id: LookupMap<TokenId, Quota>,
}

impl Karma {
    pub fn new<Q, R>(balance_by_owner_prefix: Q, quota_by_token_id_prefix: R) -> Self
    where
        Q: IntoStorageKey,
        R: IntoStorageKey,
    {
        Self {
            balance_by_owner: LookupMap::new(balance_by_owner_prefix),
            rank: Vec::new(),
            quota_by_token_id: LookupMap::new(quota_by_token_id_prefix),
        }
    }

    pub fn increase(&mut self, account_id: &AccountId, token_id: &TokenId) {
        let mut quota = match self.quota_by_token_id.get(token_id) {
            Some(quota) => quota,
            None => Quota {
                value: MAX_QUOTA,
                lasted_used_at: env::block_timestamp(),
            },
        };

        if quota.value < MAX_QUOTA {
            let time_delta = env::block_timestamp() - quota.lasted_used_at;
            quota.value = match u64::max(time_delta / QUOTA_REFILL_SECONDS, 0) {
                0 => quota.value,
                1 => u16::max(quota.value + 1, MAX_QUOTA),
                2 => u16::max(quota.value + 2, MAX_QUOTA),
                _ => u16::max(quota.value + 3, MAX_QUOTA),
            };
        }

        // TODO: refill quota if needed
        if quota.value > 0 {
            quota.value -= 1;
            quota.lasted_used_at = env::block_timestamp();
            self.quota_by_token_id.insert(token_id, &quota);
            self.increase_internal(account_id);
        }
    }

    fn increase_internal(&mut self, account_id: &AccountId) {
        let mut balance = self.balance_by_owner.get(account_id).unwrap_or_else(|| 0);
        balance += 1;
        self.balance_by_owner.insert(account_id, &balance);

        for i in 0..self.rank.len() {
            if account_id.eq(&self.rank[i].1) {
                self.rank[i].0 = balance;
                self.rank.sort();
                return;
            }
        }

        if self.rank.len() < RANK_MAX {
            self.rank.push((balance, account_id.clone()));
            self.rank.sort();
            return;
        }

        let rank_min = self.rank.get(0).map_or(0, |item| item.0);
        if balance >= rank_min {
            if balance > rank_min {
                self.rank[0] = (balance, account_id.clone());
            }
            self.rank.sort();
            return;
        }
    }

    pub fn rank(&self) -> &Vec<(Balance, AccountId)> {
        &self.rank
    }
}

#[cfg(all(test, not(target_arch = "wasm32")))]
mod tests {
    use super::*;
    fn accounts(id: usize) -> AccountId {
        AccountId::new_unchecked(format!("test_account_{}", id))
    }

    #[test]
    fn test_quota_used_up() {
        let token_id = "test_token_id".to_string();
        let mut karma = Karma::new(b"a", b"b");
        karma.increase(&accounts(0), &token_id);
        assert_eq!(karma.balance_by_owner.get(&accounts(0)), Some(1));
        assert_eq!(
            karma.quota_by_token_id.get(&token_id).map(|q| q.value),
            Some(2)
        );
        assert_eq!(karma.rank.get(0), Some(&(1, accounts(0))));

        karma.increase(&accounts(0), &token_id);
        assert_eq!(karma.balance_by_owner.get(&accounts(0)), Some(2));
        assert_eq!(
            karma.quota_by_token_id.get(&token_id).map(|q| q.value),
            Some(1)
        );
        assert_eq!(karma.rank.get(0), Some(&(1, accounts(0))));

        karma.increase(&accounts(0), &token_id);
        assert_eq!(karma.balance_by_owner.get(&accounts(0)), Some(3));
        assert_eq!(
            karma.quota_by_token_id.get(&token_id).map(|q| q.value),
            Some(0)
        );
        assert_eq!(karma.rank.get(0), Some(&(1, accounts(0))));

        karma.increase(&accounts(0), &token_id);
        assert_eq!(karma.balance_by_owner.get(&accounts(0)), Some(3));
        assert_eq!(
            karma.quota_by_token_id.get(&token_id).map(|q| q.value),
            Some(0)
        );
        assert_eq!(karma.rank.get(0), Some(&(1, accounts(0))));
    }

    #[test]
    fn test_rank_overflow() {
        let mut karma = Karma::new(b"a", b"b");
        for i in 1..12 {
            for j in 0..i {
                karma.increase(&accounts(i), &format!("test_token_{}", i * 10 + j));
            }
        }
        assert_eq!(
            karma.rank,
            vec![
                (2, accounts(2)),
                (3, accounts(3)),
                (4, accounts(4)),
                (5, accounts(5)),
                (6, accounts(6)),
                (7, accounts(7)),
                (8, accounts(8)),
                (9, accounts(9)),
                (10, accounts(10)),
                (11, accounts(11))
            ]
        );
    }

    #[test]
    fn test_rank_update() {
        let mut karma = Karma::new(b"a", b"b");
        karma.increase(&accounts(0), &format!("test_token_{}", 0));
        karma.increase(&accounts(1), &format!("test_token_{}", 1));
        karma.increase(&accounts(0), &format!("test_token_{}", 0));
        karma.increase(&accounts(1), &format!("test_token_{}", 1));
        assert_eq!(karma.rank, vec![(2, accounts(0)), (2, accounts(1)),]);
    }

    #[test]
    fn test_rank_update_2() {
        let mut karma = Karma::new(b"a", b"b");
        karma.increase(&accounts(0), &format!("test_token_{}", 0));
        karma.increase(&accounts(0), &format!("test_token_{}", 0));
        karma.increase(&accounts(0), &format!("test_token_{}", 0));
        karma.increase(&accounts(1), &format!("test_token_{}", 1));
        assert_eq!(karma.rank, vec![(1, accounts(1)), (3, accounts(0)),]);
    }
}

'''
'''--- contract/src/lib.rs ---
/*!
Non-Fungible Token implementation with JSON serialization.
NOTES:
  - The maximum balance value is limited by U128 (2**128 - 1).
  - JSON calls should pass U128 as a base-10 string. E.g. "100".
  - The contract optimizes the inner trie structure by hashing account IDs. It will prevent some
    abuse of deep tries. Shouldn't be an issue, once NEAR clients implement full hashing of keys.
  - The contract tracks the change in storage before and after the call. If the storage increases,
    the contract requires the caller of the contract to attach enough deposit to the function call
    to cover the storage cost.
    This is done to prevent a denial of service attack on the contract by taking all available storage.
    If the storage decreases, the contract will issue a refund for the cost of the released storage.
    The unused tokens from the attached deposit are also refunded, so it's safe to
    attach more deposit than required.
  - To prevent the deployed contract from being modified or deleted, it should not have any access
    keys on its account.
*/
use near_contract_standards::non_fungible_token::approval;
use near_contract_standards::non_fungible_token::core::NonFungibleTokenCore;
use near_contract_standards::non_fungible_token::core::NonFungibleTokenResolver;
use near_contract_standards::non_fungible_token::events::NftMint;
use near_contract_standards::non_fungible_token::metadata::{
    NFTContractMetadata, NonFungibleTokenMetadataProvider, TokenMetadata, NFT_METADATA_SPEC,
};
use near_contract_standards::non_fungible_token::NonFungibleToken;
use near_contract_standards::non_fungible_token::{Token, TokenId};
use near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};
use near_sdk::bs58;
use near_sdk::collections::LazyOption;
use near_sdk::{
    env, near_bindgen, AccountId, Balance, BorshStorageKey, PanicOnDefault, Promise, PromiseOrValue,
};

mod facai_gen;
mod karma;
mod linkdrop;

#[derive(BorshDeserialize, BorshSerialize, PanicOnDefault)]
pub struct OldContract {
    tokens: NonFungibleToken,
    metadata: LazyOption<NFTContractMetadata>,
    karma: karma::Karma,
}

#[near_bindgen]
#[derive(BorshDeserialize, BorshSerialize, PanicOnDefault)]
pub struct Contract {
    tokens: NonFungibleToken,
    metadata: LazyOption<NFTContractMetadata>,
    karma: karma::Karma,
    linkdrop: linkdrop::Linkdrops,
}

const DATA_IMAGE_SVG_NEAR_ICON: &str = "data:image/svg+xml;charset=UTF-8,%3csvg viewBox='0 0 1077 1080' xmlns='http://www.w3.org/2000/svg' xml:space='preserve' fill-rule='evenodd' clip-rule='evenodd' stroke-linecap='round' stroke-linejoin='round' stroke-miterlimit='1.6'%3e%3cpath fill='none' d='M0 0h1076v1079H0z'/%3e%3cpath d='M650 6169v19H544c13-41 75-74 159-81l-1 123-231-1c19-93 134-165 273-165 140 0 256 74 273 169l-231-2s-4-117-3-123c81 8 144 41 155 82l-98-1v-24' fill='none' stroke='gray' stroke-width='27.3' transform='matrix(1.00905 0 0 1.04494 -206 -6074)'/%3e%3cpath d='M650 6169v19H544c13-41 75-74 159-81l-1 123-231-1c19-93 134-165 273-165 140 0 256 74 273 169l-231-2-3-123c81 8 144 41 155 82l-98-1v-24' fill='none' stroke='gray' stroke-width='27.3' transform='matrix(-1.009 .01008 -.01043 -1.04488 1359 6998)'/%3e%3cpath d='M504 363h80a14 14 0 0 0 0-29h-80a14 14 0 0 0 0 29ZM585 569l-79-1a14 14 0 0 0 0 29h79a14 14 0 0 0 0-28ZM735 491v-47a14 14 0 0 0-29 0v47a14 14 0 0 0 29 0ZM385 484v-46a14 14 0 0 0-29-1v47a14 14 0 0 0 29 0Z' fill='gray'/%3e%3cpath d='M474 3843c-13 5-28 7-43 7-42 0-79-20-97-51v-205c18 30 54 51 97 51 15 0 29-3 42-7l1 205ZM858 3539c9-2 17-5 26-10 36-19 57-56 54-93 8-13 13-28 14-45v189a108 108 0 0 1-14 62c3 36-17 73-54 93-9 4-17 7-26 9v-205ZM858 3744c-7 25-25 48-51 61-19 10-39 14-58 12l-1-206a102 102 0 0 0 110-73v206Z' fill='none' stroke='gray' stroke-width='32.9' transform='translate(-11 -2900)'/%3e%3cpath d='M749 3817c-14 21-37 37-65 43-26 6-52 1-73-11v-205c21 12 47 16 73 11 28-6 50-23 64-44l1 206ZM611 3849c-17 14-40 23-65 23-29 0-54-11-72-29l-1-205c18 17 44 29 73 29 25 0 48-9 65-23v205Z' fill='none' stroke='gray' stroke-width='32.9' transform='translate(-11 -2900)'/%3e%3cpath d='M334 3799c-48-2-88-40-93-89v-205c5 48 44 87 93 89v205Z' fill='none' stroke='gray' stroke-width='32.9' transform='translate(-12 -2900)'/%3e%3cpath d='M241 3710a101 101 0 0 1-61-97c-7-14-11-29-12-45h0v-1a107 107 0 0 1 0-8v-193c1 15 5 29 12 41v4c0 42 25 78 61 94v205Z' fill='none' stroke='gray' stroke-width='32.9' transform='translate(-12 -2901)'/%3e%3cpath d='M528 3074c18-15 43-24 69-23 31 1 58 15 76 37 19-4 40-2 60 7 23 10 41 28 52 49a99 99 0 0 1 89 79 98 98 0 0 1 59 106 105 105 0 0 1 0 104c2 36-18 73-55 93-8 4-17 7-26 9-7 25-25 47-51 61-19 10-39 14-58 12-14 21-37 37-65 43-26 6-52 1-73-11-17 14-40 23-65 23-28 0-54-11-72-29-13 5-28 7-43 7-42 0-79-20-97-51-48-2-87-40-93-89a101 101 0 0 1-61-98 103 103 0 0 1 17-121c2-48 36-87 81-96 8-24 27-47 53-61 21-12 43-17 64-15 13-21 35-38 61-45 28-7 56-3 78 9Z' fill='none' stroke='gray' stroke-width='32.9' transform='translate(-7 -2895)'/%3e%3c/svg%3e";
#[derive(BorshSerialize, BorshStorageKey)]
enum StorageKey {
    NonFungibleToken,
    Metadata,
    TokenMetadata,
    Enumeration,
    Approval,
    Karma,
    KarmaQuota,
    LinkdropPending,
}

#[near_bindgen]
impl Contract {
    /// Initializes the contract owned by `owner_id` with
    /// default metadata (for example purposes only).
    #[init]
    pub fn new_default_meta(owner_id: AccountId) -> Self {
        Self::new(
            owner_id,
            NFTContractMetadata {
                spec: NFT_METADATA_SPEC.to_string(),
                name: "Mooncake".to_string(),
                symbol: "MOONCAKE".to_string(),
                icon: Some(DATA_IMAGE_SVG_NEAR_ICON.to_string()),
                base_uri: None,
                reference: None,
                reference_hash: None,
            },
        )
    }

    #[init]
    pub fn new(owner_id: AccountId, metadata: NFTContractMetadata) -> Self {
        assert!(!env::state_exists(), "Already initialized");
        metadata.assert_valid();
        Self {
            tokens: NonFungibleToken::new(
                StorageKey::NonFungibleToken,
                owner_id,
                Some(StorageKey::TokenMetadata),
                Some(StorageKey::Enumeration),
                Some(StorageKey::Approval),
            ),
            metadata: LazyOption::new(StorageKey::Metadata, Some(&metadata)),
            karma: karma::Karma::new(StorageKey::Karma, StorageKey::KarmaQuota),
            linkdrop: linkdrop::Linkdrops::new(StorageKey::LinkdropPending),
        }
    }

    #[init(ignore_state)]
    pub fn migrate_2022_09_07_linkdrop() -> Self {
        let old_state: OldContract = env::state_read().expect("failed");
        Self {
            tokens: old_state.tokens,
            metadata: old_state.metadata,
            karma: old_state.karma,
            linkdrop: linkdrop::Linkdrops::new(StorageKey::LinkdropPending),
        }
    }

    pub fn reset_karma(&mut self) {
        assert_eq!(
            env::predecessor_account_id(),
            self.tokens.owner_id,
            "Unauthorized"
        );
        self.karma = karma::Karma::new(StorageKey::Karma, StorageKey::KarmaQuota);
    }

    /// Mint a new token with ID=`token_id` belonging to `receiver_id`.
    ///
    /// Since this example implements metadata, it also requires per-token metadata to be provided
    /// in this call. `self.tokens.mint` will also require it to be Some, since
    /// `StorageKey::TokenMetadata` was provided at initialization.
    ///
    /// `self.tokens.mint` will enforce `predecessor_account_id` to equal the `owner_id` given in
    /// initialization call to `new`.
    #[payable]
    pub fn nft_mint(
        &mut self,
        token_id: TokenId,
        receiver_id: AccountId,
        token_metadata: TokenMetadata,
    ) -> Token {
        assert_eq!(
            env::predecessor_account_id(),
            self.tokens.owner_id,
            "Unauthorized"
        );
        self.tokens
            .internal_mint(token_id, receiver_id, Some(token_metadata))
    }

    #[payable]
    pub fn nft_mint_2022(&mut self, receiver_id: AccountId) -> Token {
        assert!(
            env::attached_deposit() >= 1000000000000000000000000,
            "In sufficient deposit amount"
        );
        let seed = near_sdk::env::random_seed();
        let token_id = format!(
            "2022-{}",
            bs58::encode(&seed)
                .with_alphabet(bs58::Alphabet::BITCOIN)
                .into_string()
        );
        let data_uri = svg_data_uri(crate::facai_gen::new(&seed));
        let token_metadata = TokenMetadata {
            title: Some("恭喜发财".to_string()),
            description: Some("Gong Xi Fa Cai. Mooncake NFT 2022 Edition.".to_string()),
            media: Some(data_uri),
            media_hash: None,
            copies: Some(1),
            issued_at: None,
            expires_at: None,
            starts_at: None,
            updated_at: None,
            extra: None,
            reference: None,
            reference_hash: None,
        };
        let token = self.tokens.internal_mint_with_refund(
            token_id,
            receiver_id,
            Some(token_metadata),
            None,
        );
        NftMint {
            owner_id: &token.owner_id,
            token_ids: &[&token.token_id],
            memo: None,
        }
        .emit();
        token
    }

    pub fn top_rank(&self) -> &Vec<(Balance, AccountId)> {
        self.karma.rank()
    }

    #[payable]
    pub fn nft_linkdrop_init(&mut self, token_id: TokenId, pub_key: String) {
        let owner_id = self.tokens.owner_by_id.get(&token_id).unwrap();
        assert_eq!(env::predecessor_account_id(), owner_id, "Unauthorized");
        self.tokens
            .nft_approve(token_id.clone(), env::current_account_id(), None);
        let approval_id: u64 = self
            .tokens
            .approvals_by_id
            .as_ref()
            .unwrap()
            .get(&token_id)
            .unwrap()
            .get(&env::current_account_id())
            .unwrap()
            .clone();
        self.linkdrop
            .add_drop(&pub_key, &token_id, approval_id.clone());
    }

    #[payable]
    pub fn nft_linkdrop_exec(
        &mut self,
        pub_key: String,
        signature: String,
        receiver_id: AccountId,
    ) {
        let linkdrop = self.linkdrop.get_drop(&pub_key, signature);
        self.nft_transfer(
            receiver_id,
            linkdrop.token,
            Some(linkdrop.approval_id),
            None,
        );
        self.linkdrop.remove_drop(&pub_key);
    }
}

#[near_bindgen]
impl NonFungibleTokenCore for Contract {
    #[payable]
    fn nft_transfer(
        &mut self,
        receiver_id: AccountId,
        token_id: TokenId,
        approval_id: Option<u64>,
        memo: Option<String>,
    ) {
        let sender_id = self.tokens.owner_by_id.get(&token_id).unwrap();
        self.karma.increase(&sender_id, &token_id);
        self.tokens
            .nft_transfer(receiver_id, token_id, approval_id, memo)
    }

    #[payable]
    fn nft_transfer_call(
        &mut self,
        receiver_id: AccountId,
        token_id: TokenId,
        approval_id: Option<u64>,
        memo: Option<String>,
        msg: String,
    ) -> PromiseOrValue<bool> {
        let sender_id = self.tokens.owner_by_id.get(&token_id).unwrap();
        self.karma.increase(&sender_id, &token_id);
        self.tokens
            .nft_transfer_call(receiver_id, token_id, approval_id, memo, msg)
    }

    fn nft_token(&self, token_id: TokenId) -> Option<Token> {
        self.tokens.nft_token(token_id)
    }
}

#[near_bindgen]
impl NonFungibleTokenResolver for Contract {
    #[private]
    fn nft_resolve_transfer(
        &mut self,
        previous_owner_id: AccountId,
        receiver_id: AccountId,
        token_id: TokenId,
        approved_account_ids: Option<std::collections::HashMap<AccountId, u64>>,
    ) -> bool {
        self.tokens.nft_resolve_transfer(
            previous_owner_id,
            receiver_id,
            token_id,
            approved_account_ids,
        )
    }
}

fn svg_data_uri(svg: String) -> String {
    let encoded = svg
        .replace("%", "%25")
        .replace("> <", "><") // normalise spaces elements
        .replace("; }", ";}") // normalise spaces css
        .replace("<", "%3c")
        .replace(">", "%3e")
        .replace("\"", "'")
        .replace("#", "%23") // needed for ie and firefox
        .replace("{", "%7b")
        .replace("}", "%7d")
        .replace("|", "%7c")
        .replace("^", "%5e")
        .replace("`", "%60")
        .replace("@", "%40");

    format!("{}{}", "data:image/svg+xml;charset=UTF-8,", &encoded)
}

// near_contract_standards::impl_non_fungible_token_core!(Contract, tokens);
near_contract_standards::impl_non_fungible_token_approval!(Contract, tokens);
near_contract_standards::impl_non_fungible_token_enumeration!(Contract, tokens);

#[near_bindgen]
impl NonFungibleTokenMetadataProvider for Contract {
    fn nft_metadata(&self) -> NFTContractMetadata {
        self.metadata.get().unwrap()
    }
}

#[cfg(all(test, not(target_arch = "wasm32")))]
mod tests {
    use near_sdk::test_utils::{accounts, VMContextBuilder};
    use near_sdk::testing_env;

    use super::*;

    const MINT_COST: u128 = 1000000000000000000000000;

    fn get_context(predecessor_account_id: AccountId) -> VMContextBuilder {
        let mut builder = VMContextBuilder::new();
        builder
            .current_account_id(accounts(0))
            .signer_account_id(predecessor_account_id.clone())
            .predecessor_account_id(predecessor_account_id);
        builder
    }

    #[test]
    fn test_mint() {
        let mut context = get_context(accounts(0));
        testing_env!(context.build());
        let mut contract = Contract::new_default_meta(accounts(1).into());

        testing_env!(context
            .storage_usage(env::storage_usage())
            .attached_deposit(MINT_COST)
            .predecessor_account_id(accounts(0))
            .build());

        let token = contract.nft_mint_2022(accounts(0));
        assert!(token.token_id.starts_with("2022-"));
        assert_eq!(token.owner_id.to_string(), accounts(0).to_string());
    }

    #[test]
    fn test_transfer() {
        let mut context = get_context(accounts(0));
        testing_env!(context.build());
        let mut contract = Contract::new_default_meta(accounts(0).into());

        testing_env!(context
            .storage_usage(env::storage_usage())
            .attached_deposit(MINT_COST)
            .predecessor_account_id(accounts(0))
            .build());
        let token = contract.nft_mint_2022(accounts(0));

        testing_env!(context
            .storage_usage(env::storage_usage())
            .attached_deposit(1)
            .predecessor_account_id(accounts(0))
            .build());
        contract.nft_transfer(accounts(1), token.token_id.clone(), None, None);

        testing_env!(context
            .storage_usage(env::storage_usage())
            .account_balance(env::account_balance())
            .is_view(true)
            .attached_deposit(0)
            .build());
        if let Some(token) = contract.nft_token(token.token_id.clone()) {
            assert_eq!(token.token_id, token.token_id);
            assert_eq!(token.owner_id.to_string(), accounts(1).to_string());
        } else {
            panic!("token not correctly created, or not found by nft_token");
        }
    }
}

'''
'''--- contract/src/linkdrop.rs ---
use std::str::FromStr;

use near_contract_standards::non_fungible_token::TokenId;
use near_crypto::{ED25519PublicKey, PublicKey, Signature};
use near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};
use near_sdk::bs58;
use near_sdk::collections::LookupMap;
use near_sdk::IntoStorageKey;

#[derive(BorshDeserialize, BorshSerialize)]
pub struct Linkdrop {
    pub token: TokenId,
    pub approval_id: u64,
}

#[derive(BorshDeserialize, BorshSerialize)]
pub struct Linkdrops {
    pending_drops: LookupMap<String, Linkdrop>,
}

impl Linkdrops {
    pub fn new<Q>(pending_drops_prefix: Q) -> Self
    where
        Q: IntoStorageKey,
    {
        Self {
            pending_drops: LookupMap::new(pending_drops_prefix),
        }
    }

    pub fn add_drop(&mut self, pub_key: &String, token_id: &TokenId, approval_id: u64) {
        self.pending_drops.insert(
            pub_key,
            &Linkdrop {
                token: token_id.clone(),
                approval_id,
            },
        );
    }

    pub fn get_drop(&mut self, pub_key: &String, signature: String) -> Linkdrop {
        assert!(check_priv_key(pub_key, signature));
        self.pending_drops.get(pub_key).unwrap()
    }

    pub fn remove_drop(&mut self, pub_key: &String) {
        self.pending_drops.remove(pub_key);
    }
}

fn check_priv_key(pub_key_str: &String, signature_str: String) -> bool {
    let signature: Signature = signature_str.parse().unwrap();
    let pub_key = PublicKey::from_str(&pub_key_str).unwrap();
    signature.verify(&[0u8; 32], &pub_key)
}

#[cfg(all(test, not(target_arch = "wasm32")))]
mod tests {
    use super::*;

    #[test]
    fn test_linkdrop_init() {}
}

'''
'''--- frontend/assets/e_0.svg ---
<svg viewBox="0 0 1080 1080" xmlns="http://www.w3.org/2000/svg" xml:space="preserve" fill-rule="evenodd" clip-rule="evenodd" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.6">
<path fill="none" d="M0 0h1080v1080H0z"/>
<path d="M462 944c-13 4-27 7-42 7-43 0-79-21-97-51V695c17 30 54 51 97 51 15 0 29-3 42-8v206ZM846 639a99 99 0 0 0 80-102c8-13 13-29 14-45v188a108 108 0 0 1-13 62c3 37-18 74-55 93-8 5-17 8-25 10l-1-206Z" fill="#7f3a01" stroke="#d28827" stroke-width="4"/>
<path d="M847 845a104 104 0 0 1-110 73V711c19 2 40-2 58-12 26-13 44-36 51-61l1 206ZM737 917a103 103 0 0 1-137 32V745c20 12 46 17 73 11s50-22 64-43v205ZM600 950c-18 14-40 23-66 23-28 0-54-12-72-29V738c18 18 44 29 72 29 25 0 48-8 66-23v206ZM322 900c-48-2-87-41-93-89V605c5 49 45 87 93 90v205ZM229 810a101 101 0 0 1-61-98c-7-13-12-28-12-44h0v-1a107 107 0 0 1 0-8V465c1 15 5 29 12 42v4c0 42 25 78 61 93v206Z" fill="#7f3a01" stroke="#d28827" stroke-width="4"/>
<path d="M528 3074c18-15 43-24 69-23 31 1 58 15 76 37 19-4 40-2 60 7 23 10 41 28 52 49a99 99 0 0 1 89 79 98 98 0 0 1 59 106 105 105 0 0 1 0 104c2 36-18 73-55 93-8 4-17 7-26 9-7 25-25 47-51 61-19 10-39 14-58 12-14 21-37 37-65 43-26 6-52 1-73-11-17 14-40 23-65 23-28 0-54-11-72-29-13 5-28 7-43 7-42 0-79-20-97-51-48-2-87-40-93-89a101 101 0 0 1-61-98 103 103 0 0 1 17-121c2-48 36-87 81-96 8-24 27-47 53-61 21-12 43-17 64-15 13-21 35-38 61-45 28-7 56-3 78 9Z" fill="url(#a)" transform="translate(-7 -2895)"/>
<path d="M520 207c15-14 38-22 63-22 32 0 59 15 72 36 16-13 43-17 69-7 24 10 41 28 45 46 25-1 52 9 72 31 15 15 24 34 27 52a71 71 0 0 1 38 103c13 10 22 25 21 41 0 24-18 44-43 52 15 18 19 43 8 64a57 57 0 0 1-49 30c-6 25-25 49-52 64-24 14-49 18-71 14-6 26-30 46-58 46-20 0-38-10-48-25a90 90 0 0 1-75 33c-35 0-65-18-78-43a59 59 0 0 1-48 24c-32 0-58-24-59-55-26 7-59-3-83-28a95 95 0 0 1-28-72c-22-6-38-20-42-40-3-17 5-34 19-46a62 62 0 0 1-29-53c0-22 13-41 33-52a57 57 0 0 1 57-86c2-24 24-52 58-68 21-10 43-15 61-13 10-18 30-33 55-39 24-5 48 1 65 13Zm-47 493a404 404 0 0 0 135 6 96 96 0 0 1-66 28c-28-1-55-15-69-34Zm229-18c-6 22-25 44-49 44-16 0-27-10-35-22 30-4 58-12 84-22Zm-321-15c25 13 54 24 84 31-9 11-21 19-37 19-27 0-45-25-47-50Zm426-52c-6 21-14 46-37 59-20 10-42 8-60 5 38-16 71-38 97-64Zm-45-4c-15 6-32 8-47 10-92 13-185 20-278 25l-26 2c44 19 95 30 150 29 79-2 151-27 201-66Zm-481-34c22 33 50 61 90 82-24 5-51 5-71-16-18-17-20-45-19-66Zm443-239c-58-2-222 14-333 25-33 4-36 15-33 46 6 55 9 111 16 165 2 14 2 30 12 39 12 10 31 5 47 4 92-9 181-13 273-24 14-2 34-6 42-17 11-15 8-36 7-55-2-49-7-98-15-146-2-13-3-37-16-37Zm134 202c10 15 11 31 3 48-9 15-32 22-50 23 20-21 36-45 47-71ZM325 367c-30 33-47 72-46 113 1 50 26 95 68 129l-3-29c-9-58-18-116-21-174 0-13-1-27 2-39Zm444-23c9 36 14 96 18 173 1 24 8 52-2 73 33-33 52-74 51-118-1-49-26-94-67-128ZM252 505c4 25 8 40 22 62-19-5-34-6-37-22-3-15 3-29 15-40Zm618-48c11 8 23 19 23 31-1 19-13 35-32 43a181 181 0 0 0 9-74Zm-610-40a181 181 0 0 0-8 86 54 54 0 0 1-25-45c1-18 17-32 33-41Zm575-53c19 7 39 19 45 39 4 15-4 30-11 43-5-30-16-57-34-82Zm-424-94c-71 30-125 81-148 140-9-16-15-39-3-54 12-16 31-23 49-20 2-22 22-46 52-60 17-8 34-7 50-6Zm415 81c-21-29-41-43-75-63 21-1 45 8 64 27 13 14 8 21 11 36Zm-121-47c-44-19-95-29-150-29-80 2-152 27-202 66l21-3c97-10 251-33 331-34Zm38-20c-29-17-55-26-91-34 15-9 36-10 57-2s30 19 34 36Zm-222-42c-36 4-70 12-101 25 9-16 25-33 46-37 20-4 40 3 55 12Zm122 6a405 405 0 0 0-114-6 82 82 0 0 1 114 6Z" fill="#421f02"/>
<path d="M516 3101c15-14 38-22 64-22 31 1 59 15 72 36 16-13 43-17 69-6 24 9 40 27 45 46 24-2 51 8 72 30 15 15 24 34 27 52a71 71 0 0 1 38 103c13 10 21 25 21 42 0 23-18 43-44 51 15 18 20 44 8 65a57 57 0 0 1-49 29c-6 25-24 49-51 65-24 13-50 17-72 13-5 26-29 46-57 46-20 0-38-10-49-25a90 90 0 0 1-74 34c-36-1-66-19-78-44a59 59 0 0 1-48 25c-32 0-58-25-59-56-27 7-60-3-84-28a95 95 0 0 1-27-72c-22-5-39-20-42-40-3-17 4-34 18-46a62 62 0 0 1-29-52c1-23 14-42 33-53a57 57 0 0 1 58-85c2-25 24-52 57-69 21-10 43-14 62-13 10-18 30-33 54-38 25-5 48 0 65 12Zm-46 493a404 404 0 0 0 134 6 96 96 0 0 1-65 28c-29 0-56-15-69-34Zm229-18c-6 22-25 45-49 45-16 0-27-11-36-23 30-4 59-12 85-22Zm-321-15c25 13 53 24 83 31-9 11-21 19-36 19-27 0-45-24-47-50Zm426-52c-6 21-15 46-38 59-19 11-41 8-60 5 38-16 71-38 98-64Zm-46-4c-14 6-31 8-46 10-92 14-185 21-278 25l-26 2c43 19 95 30 149 29 80-1 151-26 201-66Zm-479-30c22 33 54 61 93 83-23 4-55 0-76-21-17-17-18-42-17-62Zm441-243c-58-2-221 14-332 25-33 4-36 15-33 46 6 55 9 111 16 166 2 13 1 29 12 38 12 10 31 5 47 4 92-9 181-12 273-24 13-2 34-6 42-17 11-14 8-36 7-54-2-49-7-98-15-147-3-13-3-36-17-37Zm134 202c10 15 12 31 3 48-8 15-31 22-49 23 20-21 36-45 46-71Zm-532-173c-30 33-47 72-46 114 1 49 26 94 68 128l-3-29c-10-57-18-115-21-174-1-12-2-26 2-39Zm444-23c9 36 14 96 17 173 2 24 9 52-1 73 33-33 52-74 51-118-1-49-26-93-67-128Zm-517 161c4 25 13 49 27 71-19-5-39-15-42-31-3-14 3-29 15-40Zm618-48c11 9 22 19 22 32 0 18-13 34-31 42a181 181 0 0 0 9-74Zm-610-40a181 181 0 0 0-8 86 54 54 0 0 1-25-45c0-18 17-31 33-41Zm575-53c19 7 39 19 44 40 4 14-3 29-11 42-4-29-16-57-33-82Zm-425-93c-71 30-124 80-148 139-9-16-14-38-3-54 12-16 31-23 50-20 2-21 22-46 52-60 16-8 34-7 49-5Zm424 92c-20-29-49-54-84-74 22-2 46 8 65 26 13 14 17 32 19 48Zm-130-58c-43-20-95-30-150-29-79 1-151 26-201 66l21-4c97-9 250-32 330-33Zm45-17c-28-17-62-30-97-38 14-8 36-10 57-2s36 24 40 40Zm-228-45c-36 3-70 12-102 24 10-16 26-32 46-37 21-4 41 3 56 13Zm121 5a405 405 0 0 0-113-6 82 82 0 0 1 113 6Z" fill="url(#b)" transform="translate(-6 -2907)"/>
<path d="M207 423c-4 8-2 15-8 18-5 2-6-9-3-19 3-14 22-28 24-22 1 6-8 15-13 23ZM337 254c-24 14-43 34-46 30-4-4 13-26 34-38 31-17 56-16 52-11s-26 10-40 19ZM275 635c19 21 53 27 51 31-3 5-41 1-56-18-23-27-24-57-17-54 5 2 11 29 22 41ZM345 309l-12 10c-31 25-53 60-56 58-7-3 22-46 54-69 47-34 74-44 74-38 0 3-11 4-60 39ZM788 585l8-9c21-25 33-56 36-55 5 2-9 43-31 65-31 33-54 42-54 37 0-2 8-4 41-38ZM335 385c3 11 5 17 6 48 1 36 9 80 0 80-5 1-10-38-12-77-2-33-1-41 0-53 0-9 5-7 6 2ZM374 337c38-9 167-21 202-22 40 0 45 7-15 10-51 4-172 22-185 21-16-1-15-6-2-9ZM437 204c-27 9-33 24-35 20-4-5 11-22 34-31 16-6 39-7 34-2-5 4-17 7-33 13ZM559 188c-14 2-29 14-29 10-1-6 16-17 29-18 10 0 24 3 24 6l-24 2ZM238 334c-19 21-13 36-18 34s-10-24 8-40c14-13 28-18 32-13s-10 7-22 19Z" fill="#fed1aa"/>
<use href="#fa" filter="url(#g0)"/><use href="#fa" filter="url(#g1)"/><use href="#fa" filter="url(#g2)"/><use href="#fa" filter="url(#g3)"/><use href="#fa" filter="url(#g4)"/><use href="#fa" filter="url(#g5)"/><use href="#fa" filter="url(#g6)"/><use href="#fa" filter="url(#g7)"/><use href="#fa" filter="url(#g8)"/><use href="#fa" filter="url(#g9)"/><defs>
<g id="fa">
<path d="M513 375c-8 2-41 6-43 22-2 14 30-2 35 2 4 3-2 15-7 20-6 4-19 4-25 6-5 1-13-1-14 2-1 4 4 15 8 17 4 3 18-6 18-1 1 6-9 24-16 33-6 9-17 16-21 24-3 5-12 11-12 16-1 3 6 6 6 7 0 2 5 1 8 0 3-2 10-6 13-10 5-4 9-11 13-17 6-7 13-19 19-24 4-3 14-6 17-5 2 1-1 8-3 11l-19 22c-2 2-11 2-13 4-1 2 6 6 7 7 2 1 15-5 18-4 4 1 4 7 2 9-3 5-16 11-19 17-2 2-8 5-8 8 0 2 6 5 7 6 1 3 6 2 9 1l18-13c3-1 8-3 10-2s2 5 1 8l-8 21c-2 3-5 7-8 6-3 0-7-11-11-10-4 0-16 8-13 14 2 5 21 18 28 20 6 1 12-6 15-10 6-9 13-34 21-42 6-6 23-8 27-5s1 17-4 22c-5 4-22 1-26 4-2 2-6 3-4 6l9 8c5 2 17 1 24-1 10-4 21-21 35-21 14 1 39 20 52 22 7 1 21-6 20-11 0-4-12-13-21-17-11-5-37-7-45-12-6-5-2-17-1-22 0-3 7-5 7-8-1-4-13-10-11-17 2-6 22-16 22-20 0-2-3-6-7-7-6-2-14 4-16 2-4-3-1-11-1-15 1-5 1-14 5-14 5 0 14 9 22 12s16 5 25 6c9 0 24 1 29-2 6-4 10-15 4-18-2-1-4-6-9-7-9-2-23 4-32 2-15-4-43-16-50-21-3-2 6-5 9-7l20-8c3-2 4-6 4-9s-3-5-6-8l-10-10c-9-1-24 30-34 34-6 4-21-4-21-7 1-4 20-9 25-12 2-1 6 0 6-2 0-5-2-21-7-24s-17 2-23 5c-8 5-15 17-22 20-5 4-14 4-19 3-4 0-5-8-9-6Zm84 131c-2-1-22 12-25 16-2 1 5 2 7 3 3 1 7 9 10 6s11-23 8-25Zm-74-105c-3 2-2 7-4 10-2 5-9 15-11 21-1 6-3 16 0 17 4 2 16-7 20-8l6 1c3 2 11 8 12 11 2 2 1 5-1 7l-12 15c-1 2-5 4-5 6s5 2 7 3c2 2 5 6 4 9-1 4-10 12-13 16-2 2-6 4-5 6 2 4 13 14 18 15 6 1 13-5 15-8 1-2-6-4-4-6 6-6 38-22 44-30 4-5-7-9-9-15-1-6 1-18-1-20-3-3-12 1-14 5-2 5 1 14 1 20-1 5-1 10-4 14s-11 14-13 10c-1-1-7-3-7-6 0-7 6-17 6-24 0-9-4-22-3-27 2-4 10 0 14-2 5-2 17-8 21-12 3-2 5-8 4-10-2-2-7-4-10-3-5 2-14 12-19 12-4 0-10-8-9-11s17-4 16-7-14-10-21-11c-8-1-18 0-23 2Z" fill="#431d02"/>
<path d="M507 369c-9 2-41 6-44 22-1 14 30-2 35 2 5 3-2 15-7 20-5 4-19 4-25 6-5 1-12-1-13 2-1 4 3 15 7 17 5 3 18-6 19-1 0 6-10 24-16 33s-18 16-22 24c-4 7-6 19-6 23 0 2 6 1 8 0l14-10 13-17c5-7 12-19 18-24 5-3 15-6 17-5s-1 8-3 11l-19 22c-3 3-8 10-6 11 3 1 15-5 19-4 3 1 3 7 1 9-2 5-15 11-19 17-3 4-2 12-1 14 1 3 6 2 9 1l18-13c3-1 9-3 10-2 2 1 2 5 1 8-1 5-5 16-8 21-2 3-5 7-8 6-3 0-6-11-10-11-4 1-16 9-14 15 3 5 21 18 28 20 6 1 12-6 15-10 6-9 13-34 21-42 7-6 24-8 28-5s1 17-4 22c-5 4-23 1-26 4-4 3 0 11 5 14 4 2 16 1 23-2 10-3 21-20 35-20 14 1 40 20 52 22 8 1 21-6 21-11-1-4-14-12-23-16-11-5-36-7-43-13-6-5-3-17-2-22 0-3 8-5 7-8-1-4-13-10-11-17 2-6 22-16 22-20s-19-1-23-5c-4-3-1-11 0-15 0-5 0-14 4-14 5 0 14 9 22 12s17 5 25 6c10 0 24 1 29-2 6-4 10-15 5-18-7-4-29-1-42-5-15-4-42-16-49-21-3-2 5-5 9-7 4-3 15-6 19-8 3-2 5-6 4-9 0-3-3-6-5-8s-5-7-7-5c-8 4-28 26-37 29-7 3-22-4-22-7 1-4 20-9 25-12 2-1 7 0 6-3 0-3-2-17-8-18-5-1-19 9-26 12-6 3-11 7-17 8-6 2-15 4-20 3-4 0-5-8-8-6Zm84 131c-3-1-23 12-26 15-2 2 5 3 7 4 3 1 7 9 10 6s12-23 9-25Zm-74-105c-4 2-3 7-5 10-2 5-9 15-10 21-2 6-4 16 0 17 3 2 15-7 19-8l6 1 13 11c1 2 0 5-1 7l-12 15c-2 2-6 4-6 6 1 2 6 2 7 3 2 2 6 6 5 9-2 4-11 12-14 16-1 2-6 4-5 6 3 4 13 14 18 15 6 1 13-5 15-8 2-2-6-4-4-6 7-6 38-23 44-30 4-5-7-9-8-15-2-6 1-18-2-20-2-3-11 1-14 5-2 5 1 14 1 20-1 5-1 10-4 14-2 4-11 14-13 10-3-3 0-20-1-30 0-9-4-22-2-27 1-4 9 0 13-2 6-2 17-8 21-12 3-2 5-8 4-10s-7-4-10-3l-18 12c-3 0-5-5-4-7 1-3 12-7 10-11s-14-10-21-11-18 0-22 2Z" fill="#b14d04"/>
<path d="M483 386c-11 5-14 9-16 8-2-2 1-11 11-15 8-3 15-6 16-3 1 2-4 7-11 10ZM555 373c-11 5-20 6-21 5-2-1 10-7 19-12 7-3 11-6 12-3 1 2-4 7-10 10ZM553 445l-6 4c-2 0-2-9 0-10 2-2 11-3 11 0l-5 6ZM454 497c-8 9-9 12-11 11s-1-8 3-13c5-5 26-28 27-25 2 2-13 22-19 27Z" fill="#fed1aa"/>
</g>
<linearGradient id="a" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="scale(778.973) rotate(68 -3 2)">
<stop offset="0" stop-color="#ffbd44"/>
<stop offset=".5" stop-color="#dc8912"/>
<stop offset="1" stop-color="#d07600"/>
</linearGradient>
<linearGradient id="b" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="scale(499.109) rotate(51 -6 4)">
<stop offset="0" stop-color="#bf5802"/>
<stop offset="1" stop-color="#9e3d06"/>
</linearGradient>
<filter id="g0" x="0" y="0%" width="100%" height="15%">
      <feFlood flood-color="hsl(343deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="15" dy="2" result="a"/>
      <feOffset in="SourceGraphic" dx="15" dy="2" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="159" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g1" x="0" y="15%" width="100%" height="3%">
      <feFlood flood-color="hsl(343deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="70" dy="2" result="a"/>
      <feOffset in="SourceGraphic" dx="30" dy="2" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="159" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g2" x="0" y="18%" width="100%" height="33%">
      <feFlood flood-color="hsl(343deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="15" dy="2" result="a"/>
      <feOffset in="SourceGraphic" dx="15" dy="2" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="159" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g3" x="0" y="51%" width="100%" height="24%">
      <feFlood flood-color="hsl(2197deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="3" dy="-1" result="a"/>
      <feOffset in="SourceGraphic" dx="3" dy="3" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g4" x="0" y="75%" width="100%" height="0%">
      <feFlood flood-color="hsl(2197deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="22" dy="-1" result="a"/>
      <feOffset in="SourceGraphic" dx="6" dy="3" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g5" x="0" y="75%" width="100%" height="31%">
      <feFlood flood-color="hsl(2197deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="3" dy="-1" result="a"/>
      <feOffset in="SourceGraphic" dx="3" dy="3" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g6" x="0" y="106%" width="100%" height="13%">
      <feFlood flood-color="hsl(64deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="7" dy="-2" result="a"/>
      <feOffset in="SourceGraphic" dx="7" dy="2" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g7" x="0" y="119%" width="100%" height="3%">
      <feFlood flood-color="hsl(64deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="38" dy="-2" result="a"/>
      <feOffset in="SourceGraphic" dx="14" dy="2" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g8" x="0" y="122%" width="100%" height="21%">
      <feFlood flood-color="hsl(64deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="7" dy="-2" result="a"/>
      <feOffset in="SourceGraphic" dx="7" dy="2" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g9" x="0" y="143%" width="100%" height="22%">
      <feFlood flood-color="hsl(2744deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="-11" dy="2" result="a"/>
      <feOffset in="SourceGraphic" dx="5" dy="2" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter></defs></svg>
'''
'''--- frontend/assets/e_1.svg ---
<svg viewBox="0 0 1080 1080" xmlns="http://www.w3.org/2000/svg" xml:space="preserve" fill-rule="evenodd" clip-rule="evenodd" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.6">
<path fill="none" d="M0 0h1080v1080H0z"/>
<path d="M462 944c-13 4-27 7-42 7-43 0-79-21-97-51V695c17 30 54 51 97 51 15 0 29-3 42-8v206ZM846 639a99 99 0 0 0 80-102c8-13 13-29 14-45v188a108 108 0 0 1-13 62c3 37-18 74-55 93-8 5-17 8-25 10l-1-206Z" fill="#7f3a01" stroke="#d28827" stroke-width="4"/>
<path d="M847 845a104 104 0 0 1-110 73V711c19 2 40-2 58-12 26-13 44-36 51-61l1 206ZM737 917a103 103 0 0 1-137 32V745c20 12 46 17 73 11s50-22 64-43v205ZM600 950c-18 14-40 23-66 23-28 0-54-12-72-29V738c18 18 44 29 72 29 25 0 48-8 66-23v206ZM322 900c-48-2-87-41-93-89V605c5 49 45 87 93 90v205ZM229 810a101 101 0 0 1-61-98c-7-13-12-28-12-44h0v-1a107 107 0 0 1 0-8V465c1 15 5 29 12 42v4c0 42 25 78 61 93v206Z" fill="#7f3a01" stroke="#d28827" stroke-width="4"/>
<path d="M528 3074c18-15 43-24 69-23 31 1 58 15 76 37 19-4 40-2 60 7 23 10 41 28 52 49a99 99 0 0 1 89 79 98 98 0 0 1 59 106 105 105 0 0 1 0 104c2 36-18 73-55 93-8 4-17 7-26 9-7 25-25 47-51 61-19 10-39 14-58 12-14 21-37 37-65 43-26 6-52 1-73-11-17 14-40 23-65 23-28 0-54-11-72-29-13 5-28 7-43 7-42 0-79-20-97-51-48-2-87-40-93-89a101 101 0 0 1-61-98 103 103 0 0 1 17-121c2-48 36-87 81-96 8-24 27-47 53-61 21-12 43-17 64-15 13-21 35-38 61-45 28-7 56-3 78 9Z" fill="url(#a)" transform="translate(-7 -2895)"/>
<path d="M520 207c15-14 38-22 63-22 32 0 59 15 72 36 16-13 43-17 69-7 24 10 41 28 45 46 25-1 52 9 72 31 15 15 24 34 27 52a71 71 0 0 1 38 103c13 10 22 25 21 41 0 24-18 44-43 52 15 18 19 43 8 64a57 57 0 0 1-49 30c-6 25-25 49-52 64-24 14-49 18-71 14-6 26-30 46-58 46-20 0-38-10-48-25a90 90 0 0 1-75 33c-35 0-65-18-78-43a59 59 0 0 1-48 24c-32 0-58-24-59-55-26 7-59-3-83-28a95 95 0 0 1-28-72c-22-6-38-20-42-40-3-17 5-34 19-46a62 62 0 0 1-29-53c0-22 13-41 33-52a57 57 0 0 1 57-86c2-24 24-52 58-68 21-10 43-15 61-13 10-18 30-33 55-39 24-5 48 1 65 13Zm-47 493a404 404 0 0 0 135 6 96 96 0 0 1-66 28c-28-1-55-15-69-34Zm229-18c-6 22-25 44-49 44-16 0-27-10-35-22 30-4 58-12 84-22Zm-321-15c25 13 54 24 84 31-9 11-21 19-37 19-27 0-45-25-47-50Zm426-52c-6 21-14 46-37 59-20 10-42 8-60 5 38-16 71-38 97-64Zm-45-4c-15 6-32 8-47 10-92 13-185 20-278 25l-26 2c44 19 95 30 150 29 79-2 151-27 201-66Zm-481-34c22 33 50 61 90 82-24 5-51 5-71-16-18-17-20-45-19-66Zm443-239c-58-2-222 14-333 25-33 4-36 15-33 46 6 55 9 111 16 165 2 14 2 30 12 39 12 10 31 5 47 4 92-9 181-13 273-24 14-2 34-6 42-17 11-15 8-36 7-55-2-49-7-98-15-146-2-13-3-37-16-37Zm134 202c10 15 11 31 3 48-9 15-32 22-50 23 20-21 36-45 47-71ZM325 367c-30 33-47 72-46 113 1 50 26 95 68 129l-3-29c-9-58-18-116-21-174 0-13-1-27 2-39Zm444-23c9 36 14 96 18 173 1 24 8 52-2 73 33-33 52-74 51-118-1-49-26-94-67-128ZM252 505c4 25 8 40 22 62-19-5-34-6-37-22-3-15 3-29 15-40Zm618-48c11 8 23 19 23 31-1 19-13 35-32 43a181 181 0 0 0 9-74Zm-610-40a181 181 0 0 0-8 86 54 54 0 0 1-25-45c1-18 17-32 33-41Zm575-53c19 7 39 19 45 39 4 15-4 30-11 43-5-30-16-57-34-82Zm-424-94c-71 30-125 81-148 140-9-16-15-39-3-54 12-16 31-23 49-20 2-22 22-46 52-60 17-8 34-7 50-6Zm415 81c-21-29-41-43-75-63 21-1 45 8 64 27 13 14 8 21 11 36Zm-121-47c-44-19-95-29-150-29-80 2-152 27-202 66l21-3c97-10 251-33 331-34Zm38-20c-29-17-55-26-91-34 15-9 36-10 57-2s30 19 34 36Zm-222-42c-36 4-70 12-101 25 9-16 25-33 46-37 20-4 40 3 55 12Zm122 6a405 405 0 0 0-114-6 82 82 0 0 1 114 6Z" fill="#421f02"/>
<path d="M516 3101c15-14 38-22 64-22 31 1 59 15 72 36 16-13 43-17 69-6 24 9 40 27 45 46 24-2 51 8 72 30 15 15 24 34 27 52a71 71 0 0 1 38 103c13 10 21 25 21 42 0 23-18 43-44 51 15 18 20 44 8 65a57 57 0 0 1-49 29c-6 25-24 49-51 65-24 13-50 17-72 13-5 26-29 46-57 46-20 0-38-10-49-25a90 90 0 0 1-74 34c-36-1-66-19-78-44a59 59 0 0 1-48 25c-32 0-58-25-59-56-27 7-60-3-84-28a95 95 0 0 1-27-72c-22-5-39-20-42-40-3-17 4-34 18-46a62 62 0 0 1-29-52c1-23 14-42 33-53a57 57 0 0 1 58-85c2-25 24-52 57-69 21-10 43-14 62-13 10-18 30-33 54-38 25-5 48 0 65 12Zm-46 493a404 404 0 0 0 134 6 96 96 0 0 1-65 28c-29 0-56-15-69-34Zm229-18c-6 22-25 45-49 45-16 0-27-11-36-23 30-4 59-12 85-22Zm-321-15c25 13 53 24 83 31-9 11-21 19-36 19-27 0-45-24-47-50Zm426-52c-6 21-15 46-38 59-19 11-41 8-60 5 38-16 71-38 98-64Zm-46-4c-14 6-31 8-46 10-92 14-185 21-278 25l-26 2c43 19 95 30 149 29 80-1 151-26 201-66Zm-479-30c22 33 54 61 93 83-23 4-55 0-76-21-17-17-18-42-17-62Zm441-243c-58-2-221 14-332 25-33 4-36 15-33 46 6 55 9 111 16 166 2 13 1 29 12 38 12 10 31 5 47 4 92-9 181-12 273-24 13-2 34-6 42-17 11-14 8-36 7-54-2-49-7-98-15-147-3-13-3-36-17-37Zm134 202c10 15 12 31 3 48-8 15-31 22-49 23 20-21 36-45 46-71Zm-532-173c-30 33-47 72-46 114 1 49 26 94 68 128l-3-29c-10-57-18-115-21-174-1-12-2-26 2-39Zm444-23c9 36 14 96 17 173 2 24 9 52-1 73 33-33 52-74 51-118-1-49-26-93-67-128Zm-517 161c4 25 13 49 27 71-19-5-39-15-42-31-3-14 3-29 15-40Zm618-48c11 9 22 19 22 32 0 18-13 34-31 42a181 181 0 0 0 9-74Zm-610-40a181 181 0 0 0-8 86 54 54 0 0 1-25-45c0-18 17-31 33-41Zm575-53c19 7 39 19 44 40 4 14-3 29-11 42-4-29-16-57-33-82Zm-425-93c-71 30-124 80-148 139-9-16-14-38-3-54 12-16 31-23 50-20 2-21 22-46 52-60 16-8 34-7 49-5Zm424 92c-20-29-49-54-84-74 22-2 46 8 65 26 13 14 17 32 19 48Zm-130-58c-43-20-95-30-150-29-79 1-151 26-201 66l21-4c97-9 250-32 330-33Zm45-17c-28-17-62-30-97-38 14-8 36-10 57-2s36 24 40 40Zm-228-45c-36 3-70 12-102 24 10-16 26-32 46-37 21-4 41 3 56 13Zm121 5a405 405 0 0 0-113-6 82 82 0 0 1 113 6Z" fill="url(#b)" transform="translate(-6 -2907)"/>
<path d="M207 423c-4 8-2 15-8 18-5 2-6-9-3-19 3-14 22-28 24-22 1 6-8 15-13 23ZM337 254c-24 14-43 34-46 30-4-4 13-26 34-38 31-17 56-16 52-11s-26 10-40 19ZM275 635c19 21 53 27 51 31-3 5-41 1-56-18-23-27-24-57-17-54 5 2 11 29 22 41ZM345 309l-12 10c-31 25-53 60-56 58-7-3 22-46 54-69 47-34 74-44 74-38 0 3-11 4-60 39ZM788 585l8-9c21-25 33-56 36-55 5 2-9 43-31 65-31 33-54 42-54 37 0-2 8-4 41-38ZM335 385c3 11 5 17 6 48 1 36 9 80 0 80-5 1-10-38-12-77-2-33-1-41 0-53 0-9 5-7 6 2ZM374 337c38-9 167-21 202-22 40 0 45 7-15 10-51 4-172 22-185 21-16-1-15-6-2-9ZM437 204c-27 9-33 24-35 20-4-5 11-22 34-31 16-6 39-7 34-2-5 4-17 7-33 13ZM559 188c-14 2-29 14-29 10-1-6 16-17 29-18 10 0 24 3 24 6l-24 2ZM238 334c-19 21-13 36-18 34s-10-24 8-40c14-13 28-18 32-13s-10 7-22 19Z" fill="#fed1aa"/>
<use href="#fa" filter="url(#g0)"/><use href="#fa" filter="url(#g1)"/><use href="#fa" filter="url(#g2)"/><use href="#fa" filter="url(#g3)"/><use href="#fa" filter="url(#g4)"/><use href="#fa" filter="url(#g5)"/><defs>
<g id="fa">
<path d="M513 375c-8 2-41 6-43 22-2 14 30-2 35 2 4 3-2 15-7 20-6 4-19 4-25 6-5 1-13-1-14 2-1 4 4 15 8 17 4 3 18-6 18-1 1 6-9 24-16 33-6 9-17 16-21 24-3 5-12 11-12 16-1 3 6 6 6 7 0 2 5 1 8 0 3-2 10-6 13-10 5-4 9-11 13-17 6-7 13-19 19-24 4-3 14-6 17-5 2 1-1 8-3 11l-19 22c-2 2-11 2-13 4-1 2 6 6 7 7 2 1 15-5 18-4 4 1 4 7 2 9-3 5-16 11-19 17-2 2-8 5-8 8 0 2 6 5 7 6 1 3 6 2 9 1l18-13c3-1 8-3 10-2s2 5 1 8l-8 21c-2 3-5 7-8 6-3 0-7-11-11-10-4 0-16 8-13 14 2 5 21 18 28 20 6 1 12-6 15-10 6-9 13-34 21-42 6-6 23-8 27-5s1 17-4 22c-5 4-22 1-26 4-2 2-6 3-4 6l9 8c5 2 17 1 24-1 10-4 21-21 35-21 14 1 39 20 52 22 7 1 21-6 20-11 0-4-12-13-21-17-11-5-37-7-45-12-6-5-2-17-1-22 0-3 7-5 7-8-1-4-13-10-11-17 2-6 22-16 22-20 0-2-3-6-7-7-6-2-14 4-16 2-4-3-1-11-1-15 1-5 1-14 5-14 5 0 14 9 22 12s16 5 25 6c9 0 24 1 29-2 6-4 10-15 4-18-2-1-4-6-9-7-9-2-23 4-32 2-15-4-43-16-50-21-3-2 6-5 9-7l20-8c3-2 4-6 4-9s-3-5-6-8l-10-10c-9-1-24 30-34 34-6 4-21-4-21-7 1-4 20-9 25-12 2-1 6 0 6-2 0-5-2-21-7-24s-17 2-23 5c-8 5-15 17-22 20-5 4-14 4-19 3-4 0-5-8-9-6Zm84 131c-2-1-22 12-25 16-2 1 5 2 7 3 3 1 7 9 10 6s11-23 8-25Zm-74-105c-3 2-2 7-4 10-2 5-9 15-11 21-1 6-3 16 0 17 4 2 16-7 20-8l6 1c3 2 11 8 12 11 2 2 1 5-1 7l-12 15c-1 2-5 4-5 6s5 2 7 3c2 2 5 6 4 9-1 4-10 12-13 16-2 2-6 4-5 6 2 4 13 14 18 15 6 1 13-5 15-8 1-2-6-4-4-6 6-6 38-22 44-30 4-5-7-9-9-15-1-6 1-18-1-20-3-3-12 1-14 5-2 5 1 14 1 20-1 5-1 10-4 14s-11 14-13 10c-1-1-7-3-7-6 0-7 6-17 6-24 0-9-4-22-3-27 2-4 10 0 14-2 5-2 17-8 21-12 3-2 5-8 4-10-2-2-7-4-10-3-5 2-14 12-19 12-4 0-10-8-9-11s17-4 16-7-14-10-21-11c-8-1-18 0-23 2Z" fill="#431d02"/>
<path d="M507 369c-9 2-41 6-44 22-1 14 30-2 35 2 5 3-2 15-7 20-5 4-19 4-25 6-5 1-12-1-13 2-1 4 3 15 7 17 5 3 18-6 19-1 0 6-10 24-16 33s-18 16-22 24c-4 7-6 19-6 23 0 2 6 1 8 0l14-10 13-17c5-7 12-19 18-24 5-3 15-6 17-5s-1 8-3 11l-19 22c-3 3-8 10-6 11 3 1 15-5 19-4 3 1 3 7 1 9-2 5-15 11-19 17-3 4-2 12-1 14 1 3 6 2 9 1l18-13c3-1 9-3 10-2 2 1 2 5 1 8-1 5-5 16-8 21-2 3-5 7-8 6-3 0-6-11-10-11-4 1-16 9-14 15 3 5 21 18 28 20 6 1 12-6 15-10 6-9 13-34 21-42 7-6 24-8 28-5s1 17-4 22c-5 4-23 1-26 4-4 3 0 11 5 14 4 2 16 1 23-2 10-3 21-20 35-20 14 1 40 20 52 22 8 1 21-6 21-11-1-4-14-12-23-16-11-5-36-7-43-13-6-5-3-17-2-22 0-3 8-5 7-8-1-4-13-10-11-17 2-6 22-16 22-20s-19-1-23-5c-4-3-1-11 0-15 0-5 0-14 4-14 5 0 14 9 22 12s17 5 25 6c10 0 24 1 29-2 6-4 10-15 5-18-7-4-29-1-42-5-15-4-42-16-49-21-3-2 5-5 9-7 4-3 15-6 19-8 3-2 5-6 4-9 0-3-3-6-5-8s-5-7-7-5c-8 4-28 26-37 29-7 3-22-4-22-7 1-4 20-9 25-12 2-1 7 0 6-3 0-3-2-17-8-18-5-1-19 9-26 12-6 3-11 7-17 8-6 2-15 4-20 3-4 0-5-8-8-6Zm84 131c-3-1-23 12-26 15-2 2 5 3 7 4 3 1 7 9 10 6s12-23 9-25Zm-74-105c-4 2-3 7-5 10-2 5-9 15-10 21-2 6-4 16 0 17 3 2 15-7 19-8l6 1 13 11c1 2 0 5-1 7l-12 15c-2 2-6 4-6 6 1 2 6 2 7 3 2 2 6 6 5 9-2 4-11 12-14 16-1 2-6 4-5 6 3 4 13 14 18 15 6 1 13-5 15-8 2-2-6-4-4-6 7-6 38-23 44-30 4-5-7-9-8-15-2-6 1-18-2-20-2-3-11 1-14 5-2 5 1 14 1 20-1 5-1 10-4 14-2 4-11 14-13 10-3-3 0-20-1-30 0-9-4-22-2-27 1-4 9 0 13-2 6-2 17-8 21-12 3-2 5-8 4-10s-7-4-10-3l-18 12c-3 0-5-5-4-7 1-3 12-7 10-11s-14-10-21-11-18 0-22 2Z" fill="#b14d04"/>
<path d="M483 386c-11 5-14 9-16 8-2-2 1-11 11-15 8-3 15-6 16-3 1 2-4 7-11 10ZM555 373c-11 5-20 6-21 5-2-1 10-7 19-12 7-3 11-6 12-3 1 2-4 7-10 10ZM553 445l-6 4c-2 0-2-9 0-10 2-2 11-3 11 0l-5 6ZM454 497c-8 9-9 12-11 11s-1-8 3-13c5-5 26-28 27-25 2 2-13 22-19 27Z" fill="#fed1aa"/>
</g>
<linearGradient id="a" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="scale(778.973) rotate(68 -3 2)">
<stop offset="0" stop-color="#ffbd44"/>
<stop offset=".5" stop-color="#dc8912"/>
<stop offset="1" stop-color="#d07600"/>
</linearGradient>
<linearGradient id="b" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="scale(499.109) rotate(51 -6 4)">
<stop offset="0" stop-color="#bf5802"/>
<stop offset="1" stop-color="#9e3d06"/>
</linearGradient>
<filter id="g0" x="0" y="0%" width="100%" height="29%">
      <feFlood flood-color="hsl(729deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="7" dy="2" result="a"/>
      <feOffset in="SourceGraphic" dx="7" dy="2" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g1" x="0" y="29%" width="100%" height="24%">
      <feFlood flood-color="hsl(125deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="11" dy="-4" result="a"/>
      <feOffset in="SourceGraphic" dx="11" dy="0" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g2" x="0" y="53%" width="100%" height="2%">
      <feFlood flood-color="hsl(125deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="54" dy="-4" result="a"/>
      <feOffset in="SourceGraphic" dx="22" dy="0" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g3" x="0" y="55%" width="100%" height="14%">
      <feFlood flood-color="hsl(125deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="11" dy="-4" result="a"/>
      <feOffset in="SourceGraphic" dx="11" dy="0" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g4" x="0" y="69%" width="100%" height="27%">
      <feFlood flood-color="hsl(1728deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="7" dy="-4" result="a"/>
      <feOffset in="SourceGraphic" dx="7" dy="0" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g5" x="0" y="96%" width="100%" height="17%">
      <feFlood flood-color="hsl(343deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="15" dy="3" result="a"/>
      <feOffset in="SourceGraphic" dx="15" dy="3" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter></defs></svg>
'''
'''--- frontend/assets/e_2.svg ---
<svg viewBox="0 0 1080 1080" xmlns="http://www.w3.org/2000/svg" xml:space="preserve" fill-rule="evenodd" clip-rule="evenodd" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.6">
<path fill="none" d="M0 0h1080v1080H0z"/>
<path d="M462 944c-13 4-27 7-42 7-43 0-79-21-97-51V695c17 30 54 51 97 51 15 0 29-3 42-8v206ZM846 639a99 99 0 0 0 80-102c8-13 13-29 14-45v188a108 108 0 0 1-13 62c3 37-18 74-55 93-8 5-17 8-25 10l-1-206Z" fill="#7f3a01" stroke="#d28827" stroke-width="4"/>
<path d="M847 845a104 104 0 0 1-110 73V711c19 2 40-2 58-12 26-13 44-36 51-61l1 206ZM737 917a103 103 0 0 1-137 32V745c20 12 46 17 73 11s50-22 64-43v205ZM600 950c-18 14-40 23-66 23-28 0-54-12-72-29V738c18 18 44 29 72 29 25 0 48-8 66-23v206ZM322 900c-48-2-87-41-93-89V605c5 49 45 87 93 90v205ZM229 810a101 101 0 0 1-61-98c-7-13-12-28-12-44h0v-1a107 107 0 0 1 0-8V465c1 15 5 29 12 42v4c0 42 25 78 61 93v206Z" fill="#7f3a01" stroke="#d28827" stroke-width="4"/>
<path d="M528 3074c18-15 43-24 69-23 31 1 58 15 76 37 19-4 40-2 60 7 23 10 41 28 52 49a99 99 0 0 1 89 79 98 98 0 0 1 59 106 105 105 0 0 1 0 104c2 36-18 73-55 93-8 4-17 7-26 9-7 25-25 47-51 61-19 10-39 14-58 12-14 21-37 37-65 43-26 6-52 1-73-11-17 14-40 23-65 23-28 0-54-11-72-29-13 5-28 7-43 7-42 0-79-20-97-51-48-2-87-40-93-89a101 101 0 0 1-61-98 103 103 0 0 1 17-121c2-48 36-87 81-96 8-24 27-47 53-61 21-12 43-17 64-15 13-21 35-38 61-45 28-7 56-3 78 9Z" fill="url(#a)" transform="translate(-7 -2895)"/>
<path d="M520 207c15-14 38-22 63-22 32 0 59 15 72 36 16-13 43-17 69-7 24 10 41 28 45 46 25-1 52 9 72 31 15 15 24 34 27 52a71 71 0 0 1 38 103c13 10 22 25 21 41 0 24-18 44-43 52 15 18 19 43 8 64a57 57 0 0 1-49 30c-6 25-25 49-52 64-24 14-49 18-71 14-6 26-30 46-58 46-20 0-38-10-48-25a90 90 0 0 1-75 33c-35 0-65-18-78-43a59 59 0 0 1-48 24c-32 0-58-24-59-55-26 7-59-3-83-28a95 95 0 0 1-28-72c-22-6-38-20-42-40-3-17 5-34 19-46a62 62 0 0 1-29-53c0-22 13-41 33-52a57 57 0 0 1 57-86c2-24 24-52 58-68 21-10 43-15 61-13 10-18 30-33 55-39 24-5 48 1 65 13Zm-47 493a404 404 0 0 0 135 6 96 96 0 0 1-66 28c-28-1-55-15-69-34Zm229-18c-6 22-25 44-49 44-16 0-27-10-35-22 30-4 58-12 84-22Zm-321-15c25 13 54 24 84 31-9 11-21 19-37 19-27 0-45-25-47-50Zm426-52c-6 21-14 46-37 59-20 10-42 8-60 5 38-16 71-38 97-64Zm-45-4c-15 6-32 8-47 10-92 13-185 20-278 25l-26 2c44 19 95 30 150 29 79-2 151-27 201-66Zm-481-34c22 33 50 61 90 82-24 5-51 5-71-16-18-17-20-45-19-66Zm443-239c-58-2-222 14-333 25-33 4-36 15-33 46 6 55 9 111 16 165 2 14 2 30 12 39 12 10 31 5 47 4 92-9 181-13 273-24 14-2 34-6 42-17 11-15 8-36 7-55-2-49-7-98-15-146-2-13-3-37-16-37Zm134 202c10 15 11 31 3 48-9 15-32 22-50 23 20-21 36-45 47-71ZM325 367c-30 33-47 72-46 113 1 50 26 95 68 129l-3-29c-9-58-18-116-21-174 0-13-1-27 2-39Zm444-23c9 36 14 96 18 173 1 24 8 52-2 73 33-33 52-74 51-118-1-49-26-94-67-128ZM252 505c4 25 8 40 22 62-19-5-34-6-37-22-3-15 3-29 15-40Zm618-48c11 8 23 19 23 31-1 19-13 35-32 43a181 181 0 0 0 9-74Zm-610-40a181 181 0 0 0-8 86 54 54 0 0 1-25-45c1-18 17-32 33-41Zm575-53c19 7 39 19 45 39 4 15-4 30-11 43-5-30-16-57-34-82Zm-424-94c-71 30-125 81-148 140-9-16-15-39-3-54 12-16 31-23 49-20 2-22 22-46 52-60 17-8 34-7 50-6Zm415 81c-21-29-41-43-75-63 21-1 45 8 64 27 13 14 8 21 11 36Zm-121-47c-44-19-95-29-150-29-80 2-152 27-202 66l21-3c97-10 251-33 331-34Zm38-20c-29-17-55-26-91-34 15-9 36-10 57-2s30 19 34 36Zm-222-42c-36 4-70 12-101 25 9-16 25-33 46-37 20-4 40 3 55 12Zm122 6a405 405 0 0 0-114-6 82 82 0 0 1 114 6Z" fill="#421f02"/>
<path d="M516 3101c15-14 38-22 64-22 31 1 59 15 72 36 16-13 43-17 69-6 24 9 40 27 45 46 24-2 51 8 72 30 15 15 24 34 27 52a71 71 0 0 1 38 103c13 10 21 25 21 42 0 23-18 43-44 51 15 18 20 44 8 65a57 57 0 0 1-49 29c-6 25-24 49-51 65-24 13-50 17-72 13-5 26-29 46-57 46-20 0-38-10-49-25a90 90 0 0 1-74 34c-36-1-66-19-78-44a59 59 0 0 1-48 25c-32 0-58-25-59-56-27 7-60-3-84-28a95 95 0 0 1-27-72c-22-5-39-20-42-40-3-17 4-34 18-46a62 62 0 0 1-29-52c1-23 14-42 33-53a57 57 0 0 1 58-85c2-25 24-52 57-69 21-10 43-14 62-13 10-18 30-33 54-38 25-5 48 0 65 12Zm-46 493a404 404 0 0 0 134 6 96 96 0 0 1-65 28c-29 0-56-15-69-34Zm229-18c-6 22-25 45-49 45-16 0-27-11-36-23 30-4 59-12 85-22Zm-321-15c25 13 53 24 83 31-9 11-21 19-36 19-27 0-45-24-47-50Zm426-52c-6 21-15 46-38 59-19 11-41 8-60 5 38-16 71-38 98-64Zm-46-4c-14 6-31 8-46 10-92 14-185 21-278 25l-26 2c43 19 95 30 149 29 80-1 151-26 201-66Zm-479-30c22 33 54 61 93 83-23 4-55 0-76-21-17-17-18-42-17-62Zm441-243c-58-2-221 14-332 25-33 4-36 15-33 46 6 55 9 111 16 166 2 13 1 29 12 38 12 10 31 5 47 4 92-9 181-12 273-24 13-2 34-6 42-17 11-14 8-36 7-54-2-49-7-98-15-147-3-13-3-36-17-37Zm134 202c10 15 12 31 3 48-8 15-31 22-49 23 20-21 36-45 46-71Zm-532-173c-30 33-47 72-46 114 1 49 26 94 68 128l-3-29c-10-57-18-115-21-174-1-12-2-26 2-39Zm444-23c9 36 14 96 17 173 2 24 9 52-1 73 33-33 52-74 51-118-1-49-26-93-67-128Zm-517 161c4 25 13 49 27 71-19-5-39-15-42-31-3-14 3-29 15-40Zm618-48c11 9 22 19 22 32 0 18-13 34-31 42a181 181 0 0 0 9-74Zm-610-40a181 181 0 0 0-8 86 54 54 0 0 1-25-45c0-18 17-31 33-41Zm575-53c19 7 39 19 44 40 4 14-3 29-11 42-4-29-16-57-33-82Zm-425-93c-71 30-124 80-148 139-9-16-14-38-3-54 12-16 31-23 50-20 2-21 22-46 52-60 16-8 34-7 49-5Zm424 92c-20-29-49-54-84-74 22-2 46 8 65 26 13 14 17 32 19 48Zm-130-58c-43-20-95-30-150-29-79 1-151 26-201 66l21-4c97-9 250-32 330-33Zm45-17c-28-17-62-30-97-38 14-8 36-10 57-2s36 24 40 40Zm-228-45c-36 3-70 12-102 24 10-16 26-32 46-37 21-4 41 3 56 13Zm121 5a405 405 0 0 0-113-6 82 82 0 0 1 113 6Z" fill="url(#b)" transform="translate(-6 -2907)"/>
<path d="M207 423c-4 8-2 15-8 18-5 2-6-9-3-19 3-14 22-28 24-22 1 6-8 15-13 23ZM337 254c-24 14-43 34-46 30-4-4 13-26 34-38 31-17 56-16 52-11s-26 10-40 19ZM275 635c19 21 53 27 51 31-3 5-41 1-56-18-23-27-24-57-17-54 5 2 11 29 22 41ZM345 309l-12 10c-31 25-53 60-56 58-7-3 22-46 54-69 47-34 74-44 74-38 0 3-11 4-60 39ZM788 585l8-9c21-25 33-56 36-55 5 2-9 43-31 65-31 33-54 42-54 37 0-2 8-4 41-38ZM335 385c3 11 5 17 6 48 1 36 9 80 0 80-5 1-10-38-12-77-2-33-1-41 0-53 0-9 5-7 6 2ZM374 337c38-9 167-21 202-22 40 0 45 7-15 10-51 4-172 22-185 21-16-1-15-6-2-9ZM437 204c-27 9-33 24-35 20-4-5 11-22 34-31 16-6 39-7 34-2-5 4-17 7-33 13ZM559 188c-14 2-29 14-29 10-1-6 16-17 29-18 10 0 24 3 24 6l-24 2ZM238 334c-19 21-13 36-18 34s-10-24 8-40c14-13 28-18 32-13s-10 7-22 19Z" fill="#fed1aa"/>
<use href="#fa" filter="url(#g0)"/><use href="#fa" filter="url(#g1)"/><use href="#fa" filter="url(#g2)"/><use href="#fa" filter="url(#g3)"/><use href="#fa" filter="url(#g4)"/><use href="#fa" filter="url(#g5)"/><defs>
<g id="fa">
<path d="M513 375c-8 2-41 6-43 22-2 14 30-2 35 2 4 3-2 15-7 20-6 4-19 4-25 6-5 1-13-1-14 2-1 4 4 15 8 17 4 3 18-6 18-1 1 6-9 24-16 33-6 9-17 16-21 24-3 5-12 11-12 16-1 3 6 6 6 7 0 2 5 1 8 0 3-2 10-6 13-10 5-4 9-11 13-17 6-7 13-19 19-24 4-3 14-6 17-5 2 1-1 8-3 11l-19 22c-2 2-11 2-13 4-1 2 6 6 7 7 2 1 15-5 18-4 4 1 4 7 2 9-3 5-16 11-19 17-2 2-8 5-8 8 0 2 6 5 7 6 1 3 6 2 9 1l18-13c3-1 8-3 10-2s2 5 1 8l-8 21c-2 3-5 7-8 6-3 0-7-11-11-10-4 0-16 8-13 14 2 5 21 18 28 20 6 1 12-6 15-10 6-9 13-34 21-42 6-6 23-8 27-5s1 17-4 22c-5 4-22 1-26 4-2 2-6 3-4 6l9 8c5 2 17 1 24-1 10-4 21-21 35-21 14 1 39 20 52 22 7 1 21-6 20-11 0-4-12-13-21-17-11-5-37-7-45-12-6-5-2-17-1-22 0-3 7-5 7-8-1-4-13-10-11-17 2-6 22-16 22-20 0-2-3-6-7-7-6-2-14 4-16 2-4-3-1-11-1-15 1-5 1-14 5-14 5 0 14 9 22 12s16 5 25 6c9 0 24 1 29-2 6-4 10-15 4-18-2-1-4-6-9-7-9-2-23 4-32 2-15-4-43-16-50-21-3-2 6-5 9-7l20-8c3-2 4-6 4-9s-3-5-6-8l-10-10c-9-1-24 30-34 34-6 4-21-4-21-7 1-4 20-9 25-12 2-1 6 0 6-2 0-5-2-21-7-24s-17 2-23 5c-8 5-15 17-22 20-5 4-14 4-19 3-4 0-5-8-9-6Zm84 131c-2-1-22 12-25 16-2 1 5 2 7 3 3 1 7 9 10 6s11-23 8-25Zm-74-105c-3 2-2 7-4 10-2 5-9 15-11 21-1 6-3 16 0 17 4 2 16-7 20-8l6 1c3 2 11 8 12 11 2 2 1 5-1 7l-12 15c-1 2-5 4-5 6s5 2 7 3c2 2 5 6 4 9-1 4-10 12-13 16-2 2-6 4-5 6 2 4 13 14 18 15 6 1 13-5 15-8 1-2-6-4-4-6 6-6 38-22 44-30 4-5-7-9-9-15-1-6 1-18-1-20-3-3-12 1-14 5-2 5 1 14 1 20-1 5-1 10-4 14s-11 14-13 10c-1-1-7-3-7-6 0-7 6-17 6-24 0-9-4-22-3-27 2-4 10 0 14-2 5-2 17-8 21-12 3-2 5-8 4-10-2-2-7-4-10-3-5 2-14 12-19 12-4 0-10-8-9-11s17-4 16-7-14-10-21-11c-8-1-18 0-23 2Z" fill="#431d02"/>
<path d="M507 369c-9 2-41 6-44 22-1 14 30-2 35 2 5 3-2 15-7 20-5 4-19 4-25 6-5 1-12-1-13 2-1 4 3 15 7 17 5 3 18-6 19-1 0 6-10 24-16 33s-18 16-22 24c-4 7-6 19-6 23 0 2 6 1 8 0l14-10 13-17c5-7 12-19 18-24 5-3 15-6 17-5s-1 8-3 11l-19 22c-3 3-8 10-6 11 3 1 15-5 19-4 3 1 3 7 1 9-2 5-15 11-19 17-3 4-2 12-1 14 1 3 6 2 9 1l18-13c3-1 9-3 10-2 2 1 2 5 1 8-1 5-5 16-8 21-2 3-5 7-8 6-3 0-6-11-10-11-4 1-16 9-14 15 3 5 21 18 28 20 6 1 12-6 15-10 6-9 13-34 21-42 7-6 24-8 28-5s1 17-4 22c-5 4-23 1-26 4-4 3 0 11 5 14 4 2 16 1 23-2 10-3 21-20 35-20 14 1 40 20 52 22 8 1 21-6 21-11-1-4-14-12-23-16-11-5-36-7-43-13-6-5-3-17-2-22 0-3 8-5 7-8-1-4-13-10-11-17 2-6 22-16 22-20s-19-1-23-5c-4-3-1-11 0-15 0-5 0-14 4-14 5 0 14 9 22 12s17 5 25 6c10 0 24 1 29-2 6-4 10-15 5-18-7-4-29-1-42-5-15-4-42-16-49-21-3-2 5-5 9-7 4-3 15-6 19-8 3-2 5-6 4-9 0-3-3-6-5-8s-5-7-7-5c-8 4-28 26-37 29-7 3-22-4-22-7 1-4 20-9 25-12 2-1 7 0 6-3 0-3-2-17-8-18-5-1-19 9-26 12-6 3-11 7-17 8-6 2-15 4-20 3-4 0-5-8-8-6Zm84 131c-3-1-23 12-26 15-2 2 5 3 7 4 3 1 7 9 10 6s12-23 9-25Zm-74-105c-4 2-3 7-5 10-2 5-9 15-10 21-2 6-4 16 0 17 3 2 15-7 19-8l6 1 13 11c1 2 0 5-1 7l-12 15c-2 2-6 4-6 6 1 2 6 2 7 3 2 2 6 6 5 9-2 4-11 12-14 16-1 2-6 4-5 6 3 4 13 14 18 15 6 1 13-5 15-8 2-2-6-4-4-6 7-6 38-23 44-30 4-5-7-9-8-15-2-6 1-18-2-20-2-3-11 1-14 5-2 5 1 14 1 20-1 5-1 10-4 14-2 4-11 14-13 10-3-3 0-20-1-30 0-9-4-22-2-27 1-4 9 0 13-2 6-2 17-8 21-12 3-2 5-8 4-10s-7-4-10-3l-18 12c-3 0-5-5-4-7 1-3 12-7 10-11s-14-10-21-11-18 0-22 2Z" fill="#b14d04"/>
<path d="M483 386c-11 5-14 9-16 8-2-2 1-11 11-15 8-3 15-6 16-3 1 2-4 7-11 10ZM555 373c-11 5-20 6-21 5-2-1 10-7 19-12 7-3 11-6 12-3 1 2-4 7-10 10ZM553 445l-6 4c-2 0-2-9 0-10 2-2 11-3 11 0l-5 6ZM454 497c-8 9-9 12-11 11s-1-8 3-13c5-5 26-28 27-25 2 2-13 22-19 27Z" fill="#fed1aa"/>
</g>
<linearGradient id="a" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="scale(778.973) rotate(68 -3 2)">
<stop offset="0" stop-color="#ffbd44"/>
<stop offset=".5" stop-color="#dc8912"/>
<stop offset="1" stop-color="#d07600"/>
</linearGradient>
<linearGradient id="b" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="scale(499.109) rotate(51 -6 4)">
<stop offset="0" stop-color="#bf5802"/>
<stop offset="1" stop-color="#9e3d06"/>
</linearGradient>
<filter id="g0" x="0" y="0%" width="100%" height="33%">
      <feFlood flood-color="hsl(2197deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="3" dy="2" result="a"/>
      <feOffset in="SourceGraphic" dx="3" dy="2" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g1" x="0" y="33%" width="100%" height="48%">
      <feFlood flood-color="hsl(1000deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="1" dy="-4" result="a"/>
      <feOffset in="SourceGraphic" dx="1" dy="0" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g2" x="0" y="81%" width="100%" height="0%">
      <feFlood flood-color="hsl(1000deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="14" dy="-4" result="a"/>
      <feOffset in="SourceGraphic" dx="2" dy="0" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g3" x="0" y="81%" width="100%" height="12%">
      <feFlood flood-color="hsl(1000deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="1" dy="-4" result="a"/>
      <feOffset in="SourceGraphic" dx="1" dy="0" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g4" x="0" y="93%" width="100%" height="31%">
      <feFlood flood-color="hsl(3375deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="5" dy="-1" result="a"/>
      <feOffset in="SourceGraphic" dx="5" dy="3" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="159" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g5" x="0" y="124%" width="100%" height="35%">
      <feFlood flood-color="hsl(2744deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="4" dy="-4" result="a"/>
      <feOffset in="SourceGraphic" dx="4" dy="0" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter></defs></svg>
'''
'''--- frontend/assets/e_3.svg ---
<svg viewBox="0 0 1080 1080" xmlns="http://www.w3.org/2000/svg" xml:space="preserve" fill-rule="evenodd" clip-rule="evenodd" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.6">
<path fill="none" d="M0 0h1080v1080H0z"/>
<path d="M462 944c-13 4-27 7-42 7-43 0-79-21-97-51V695c17 30 54 51 97 51 15 0 29-3 42-8v206ZM846 639a99 99 0 0 0 80-102c8-13 13-29 14-45v188a108 108 0 0 1-13 62c3 37-18 74-55 93-8 5-17 8-25 10l-1-206Z" fill="#7f3a01" stroke="#d28827" stroke-width="4"/>
<path d="M847 845a104 104 0 0 1-110 73V711c19 2 40-2 58-12 26-13 44-36 51-61l1 206ZM737 917a103 103 0 0 1-137 32V745c20 12 46 17 73 11s50-22 64-43v205ZM600 950c-18 14-40 23-66 23-28 0-54-12-72-29V738c18 18 44 29 72 29 25 0 48-8 66-23v206ZM322 900c-48-2-87-41-93-89V605c5 49 45 87 93 90v205ZM229 810a101 101 0 0 1-61-98c-7-13-12-28-12-44h0v-1a107 107 0 0 1 0-8V465c1 15 5 29 12 42v4c0 42 25 78 61 93v206Z" fill="#7f3a01" stroke="#d28827" stroke-width="4"/>
<path d="M528 3074c18-15 43-24 69-23 31 1 58 15 76 37 19-4 40-2 60 7 23 10 41 28 52 49a99 99 0 0 1 89 79 98 98 0 0 1 59 106 105 105 0 0 1 0 104c2 36-18 73-55 93-8 4-17 7-26 9-7 25-25 47-51 61-19 10-39 14-58 12-14 21-37 37-65 43-26 6-52 1-73-11-17 14-40 23-65 23-28 0-54-11-72-29-13 5-28 7-43 7-42 0-79-20-97-51-48-2-87-40-93-89a101 101 0 0 1-61-98 103 103 0 0 1 17-121c2-48 36-87 81-96 8-24 27-47 53-61 21-12 43-17 64-15 13-21 35-38 61-45 28-7 56-3 78 9Z" fill="url(#a)" transform="translate(-7 -2895)"/>
<path d="M520 207c15-14 38-22 63-22 32 0 59 15 72 36 16-13 43-17 69-7 24 10 41 28 45 46 25-1 52 9 72 31 15 15 24 34 27 52a71 71 0 0 1 38 103c13 10 22 25 21 41 0 24-18 44-43 52 15 18 19 43 8 64a57 57 0 0 1-49 30c-6 25-25 49-52 64-24 14-49 18-71 14-6 26-30 46-58 46-20 0-38-10-48-25a90 90 0 0 1-75 33c-35 0-65-18-78-43a59 59 0 0 1-48 24c-32 0-58-24-59-55-26 7-59-3-83-28a95 95 0 0 1-28-72c-22-6-38-20-42-40-3-17 5-34 19-46a62 62 0 0 1-29-53c0-22 13-41 33-52a57 57 0 0 1 57-86c2-24 24-52 58-68 21-10 43-15 61-13 10-18 30-33 55-39 24-5 48 1 65 13Zm-47 493a404 404 0 0 0 135 6 96 96 0 0 1-66 28c-28-1-55-15-69-34Zm229-18c-6 22-25 44-49 44-16 0-27-10-35-22 30-4 58-12 84-22Zm-321-15c25 13 54 24 84 31-9 11-21 19-37 19-27 0-45-25-47-50Zm426-52c-6 21-14 46-37 59-20 10-42 8-60 5 38-16 71-38 97-64Zm-45-4c-15 6-32 8-47 10-92 13-185 20-278 25l-26 2c44 19 95 30 150 29 79-2 151-27 201-66Zm-481-34c22 33 50 61 90 82-24 5-51 5-71-16-18-17-20-45-19-66Zm443-239c-58-2-222 14-333 25-33 4-36 15-33 46 6 55 9 111 16 165 2 14 2 30 12 39 12 10 31 5 47 4 92-9 181-13 273-24 14-2 34-6 42-17 11-15 8-36 7-55-2-49-7-98-15-146-2-13-3-37-16-37Zm134 202c10 15 11 31 3 48-9 15-32 22-50 23 20-21 36-45 47-71ZM325 367c-30 33-47 72-46 113 1 50 26 95 68 129l-3-29c-9-58-18-116-21-174 0-13-1-27 2-39Zm444-23c9 36 14 96 18 173 1 24 8 52-2 73 33-33 52-74 51-118-1-49-26-94-67-128ZM252 505c4 25 8 40 22 62-19-5-34-6-37-22-3-15 3-29 15-40Zm618-48c11 8 23 19 23 31-1 19-13 35-32 43a181 181 0 0 0 9-74Zm-610-40a181 181 0 0 0-8 86 54 54 0 0 1-25-45c1-18 17-32 33-41Zm575-53c19 7 39 19 45 39 4 15-4 30-11 43-5-30-16-57-34-82Zm-424-94c-71 30-125 81-148 140-9-16-15-39-3-54 12-16 31-23 49-20 2-22 22-46 52-60 17-8 34-7 50-6Zm415 81c-21-29-41-43-75-63 21-1 45 8 64 27 13 14 8 21 11 36Zm-121-47c-44-19-95-29-150-29-80 2-152 27-202 66l21-3c97-10 251-33 331-34Zm38-20c-29-17-55-26-91-34 15-9 36-10 57-2s30 19 34 36Zm-222-42c-36 4-70 12-101 25 9-16 25-33 46-37 20-4 40 3 55 12Zm122 6a405 405 0 0 0-114-6 82 82 0 0 1 114 6Z" fill="#421f02"/>
<path d="M516 3101c15-14 38-22 64-22 31 1 59 15 72 36 16-13 43-17 69-6 24 9 40 27 45 46 24-2 51 8 72 30 15 15 24 34 27 52a71 71 0 0 1 38 103c13 10 21 25 21 42 0 23-18 43-44 51 15 18 20 44 8 65a57 57 0 0 1-49 29c-6 25-24 49-51 65-24 13-50 17-72 13-5 26-29 46-57 46-20 0-38-10-49-25a90 90 0 0 1-74 34c-36-1-66-19-78-44a59 59 0 0 1-48 25c-32 0-58-25-59-56-27 7-60-3-84-28a95 95 0 0 1-27-72c-22-5-39-20-42-40-3-17 4-34 18-46a62 62 0 0 1-29-52c1-23 14-42 33-53a57 57 0 0 1 58-85c2-25 24-52 57-69 21-10 43-14 62-13 10-18 30-33 54-38 25-5 48 0 65 12Zm-46 493a404 404 0 0 0 134 6 96 96 0 0 1-65 28c-29 0-56-15-69-34Zm229-18c-6 22-25 45-49 45-16 0-27-11-36-23 30-4 59-12 85-22Zm-321-15c25 13 53 24 83 31-9 11-21 19-36 19-27 0-45-24-47-50Zm426-52c-6 21-15 46-38 59-19 11-41 8-60 5 38-16 71-38 98-64Zm-46-4c-14 6-31 8-46 10-92 14-185 21-278 25l-26 2c43 19 95 30 149 29 80-1 151-26 201-66Zm-479-30c22 33 54 61 93 83-23 4-55 0-76-21-17-17-18-42-17-62Zm441-243c-58-2-221 14-332 25-33 4-36 15-33 46 6 55 9 111 16 166 2 13 1 29 12 38 12 10 31 5 47 4 92-9 181-12 273-24 13-2 34-6 42-17 11-14 8-36 7-54-2-49-7-98-15-147-3-13-3-36-17-37Zm134 202c10 15 12 31 3 48-8 15-31 22-49 23 20-21 36-45 46-71Zm-532-173c-30 33-47 72-46 114 1 49 26 94 68 128l-3-29c-10-57-18-115-21-174-1-12-2-26 2-39Zm444-23c9 36 14 96 17 173 2 24 9 52-1 73 33-33 52-74 51-118-1-49-26-93-67-128Zm-517 161c4 25 13 49 27 71-19-5-39-15-42-31-3-14 3-29 15-40Zm618-48c11 9 22 19 22 32 0 18-13 34-31 42a181 181 0 0 0 9-74Zm-610-40a181 181 0 0 0-8 86 54 54 0 0 1-25-45c0-18 17-31 33-41Zm575-53c19 7 39 19 44 40 4 14-3 29-11 42-4-29-16-57-33-82Zm-425-93c-71 30-124 80-148 139-9-16-14-38-3-54 12-16 31-23 50-20 2-21 22-46 52-60 16-8 34-7 49-5Zm424 92c-20-29-49-54-84-74 22-2 46 8 65 26 13 14 17 32 19 48Zm-130-58c-43-20-95-30-150-29-79 1-151 26-201 66l21-4c97-9 250-32 330-33Zm45-17c-28-17-62-30-97-38 14-8 36-10 57-2s36 24 40 40Zm-228-45c-36 3-70 12-102 24 10-16 26-32 46-37 21-4 41 3 56 13Zm121 5a405 405 0 0 0-113-6 82 82 0 0 1 113 6Z" fill="url(#b)" transform="translate(-6 -2907)"/>
<path d="M207 423c-4 8-2 15-8 18-5 2-6-9-3-19 3-14 22-28 24-22 1 6-8 15-13 23ZM337 254c-24 14-43 34-46 30-4-4 13-26 34-38 31-17 56-16 52-11s-26 10-40 19ZM275 635c19 21 53 27 51 31-3 5-41 1-56-18-23-27-24-57-17-54 5 2 11 29 22 41ZM345 309l-12 10c-31 25-53 60-56 58-7-3 22-46 54-69 47-34 74-44 74-38 0 3-11 4-60 39ZM788 585l8-9c21-25 33-56 36-55 5 2-9 43-31 65-31 33-54 42-54 37 0-2 8-4 41-38ZM335 385c3 11 5 17 6 48 1 36 9 80 0 80-5 1-10-38-12-77-2-33-1-41 0-53 0-9 5-7 6 2ZM374 337c38-9 167-21 202-22 40 0 45 7-15 10-51 4-172 22-185 21-16-1-15-6-2-9ZM437 204c-27 9-33 24-35 20-4-5 11-22 34-31 16-6 39-7 34-2-5 4-17 7-33 13ZM559 188c-14 2-29 14-29 10-1-6 16-17 29-18 10 0 24 3 24 6l-24 2ZM238 334c-19 21-13 36-18 34s-10-24 8-40c14-13 28-18 32-13s-10 7-22 19Z" fill="#fed1aa"/>
<use href="#fa" filter="url(#g0)"/><use href="#fa" filter="url(#g1)"/><use href="#fa" filter="url(#g2)"/><use href="#fa" filter="url(#g3)"/><use href="#fa" filter="url(#g4)"/><use href="#fa" filter="url(#g5)"/><defs>
<g id="fa">
<path d="M513 375c-8 2-41 6-43 22-2 14 30-2 35 2 4 3-2 15-7 20-6 4-19 4-25 6-5 1-13-1-14 2-1 4 4 15 8 17 4 3 18-6 18-1 1 6-9 24-16 33-6 9-17 16-21 24-3 5-12 11-12 16-1 3 6 6 6 7 0 2 5 1 8 0 3-2 10-6 13-10 5-4 9-11 13-17 6-7 13-19 19-24 4-3 14-6 17-5 2 1-1 8-3 11l-19 22c-2 2-11 2-13 4-1 2 6 6 7 7 2 1 15-5 18-4 4 1 4 7 2 9-3 5-16 11-19 17-2 2-8 5-8 8 0 2 6 5 7 6 1 3 6 2 9 1l18-13c3-1 8-3 10-2s2 5 1 8l-8 21c-2 3-5 7-8 6-3 0-7-11-11-10-4 0-16 8-13 14 2 5 21 18 28 20 6 1 12-6 15-10 6-9 13-34 21-42 6-6 23-8 27-5s1 17-4 22c-5 4-22 1-26 4-2 2-6 3-4 6l9 8c5 2 17 1 24-1 10-4 21-21 35-21 14 1 39 20 52 22 7 1 21-6 20-11 0-4-12-13-21-17-11-5-37-7-45-12-6-5-2-17-1-22 0-3 7-5 7-8-1-4-13-10-11-17 2-6 22-16 22-20 0-2-3-6-7-7-6-2-14 4-16 2-4-3-1-11-1-15 1-5 1-14 5-14 5 0 14 9 22 12s16 5 25 6c9 0 24 1 29-2 6-4 10-15 4-18-2-1-4-6-9-7-9-2-23 4-32 2-15-4-43-16-50-21-3-2 6-5 9-7l20-8c3-2 4-6 4-9s-3-5-6-8l-10-10c-9-1-24 30-34 34-6 4-21-4-21-7 1-4 20-9 25-12 2-1 6 0 6-2 0-5-2-21-7-24s-17 2-23 5c-8 5-15 17-22 20-5 4-14 4-19 3-4 0-5-8-9-6Zm84 131c-2-1-22 12-25 16-2 1 5 2 7 3 3 1 7 9 10 6s11-23 8-25Zm-74-105c-3 2-2 7-4 10-2 5-9 15-11 21-1 6-3 16 0 17 4 2 16-7 20-8l6 1c3 2 11 8 12 11 2 2 1 5-1 7l-12 15c-1 2-5 4-5 6s5 2 7 3c2 2 5 6 4 9-1 4-10 12-13 16-2 2-6 4-5 6 2 4 13 14 18 15 6 1 13-5 15-8 1-2-6-4-4-6 6-6 38-22 44-30 4-5-7-9-9-15-1-6 1-18-1-20-3-3-12 1-14 5-2 5 1 14 1 20-1 5-1 10-4 14s-11 14-13 10c-1-1-7-3-7-6 0-7 6-17 6-24 0-9-4-22-3-27 2-4 10 0 14-2 5-2 17-8 21-12 3-2 5-8 4-10-2-2-7-4-10-3-5 2-14 12-19 12-4 0-10-8-9-11s17-4 16-7-14-10-21-11c-8-1-18 0-23 2Z" fill="#431d02"/>
<path d="M507 369c-9 2-41 6-44 22-1 14 30-2 35 2 5 3-2 15-7 20-5 4-19 4-25 6-5 1-12-1-13 2-1 4 3 15 7 17 5 3 18-6 19-1 0 6-10 24-16 33s-18 16-22 24c-4 7-6 19-6 23 0 2 6 1 8 0l14-10 13-17c5-7 12-19 18-24 5-3 15-6 17-5s-1 8-3 11l-19 22c-3 3-8 10-6 11 3 1 15-5 19-4 3 1 3 7 1 9-2 5-15 11-19 17-3 4-2 12-1 14 1 3 6 2 9 1l18-13c3-1 9-3 10-2 2 1 2 5 1 8-1 5-5 16-8 21-2 3-5 7-8 6-3 0-6-11-10-11-4 1-16 9-14 15 3 5 21 18 28 20 6 1 12-6 15-10 6-9 13-34 21-42 7-6 24-8 28-5s1 17-4 22c-5 4-23 1-26 4-4 3 0 11 5 14 4 2 16 1 23-2 10-3 21-20 35-20 14 1 40 20 52 22 8 1 21-6 21-11-1-4-14-12-23-16-11-5-36-7-43-13-6-5-3-17-2-22 0-3 8-5 7-8-1-4-13-10-11-17 2-6 22-16 22-20s-19-1-23-5c-4-3-1-11 0-15 0-5 0-14 4-14 5 0 14 9 22 12s17 5 25 6c10 0 24 1 29-2 6-4 10-15 5-18-7-4-29-1-42-5-15-4-42-16-49-21-3-2 5-5 9-7 4-3 15-6 19-8 3-2 5-6 4-9 0-3-3-6-5-8s-5-7-7-5c-8 4-28 26-37 29-7 3-22-4-22-7 1-4 20-9 25-12 2-1 7 0 6-3 0-3-2-17-8-18-5-1-19 9-26 12-6 3-11 7-17 8-6 2-15 4-20 3-4 0-5-8-8-6Zm84 131c-3-1-23 12-26 15-2 2 5 3 7 4 3 1 7 9 10 6s12-23 9-25Zm-74-105c-4 2-3 7-5 10-2 5-9 15-10 21-2 6-4 16 0 17 3 2 15-7 19-8l6 1 13 11c1 2 0 5-1 7l-12 15c-2 2-6 4-6 6 1 2 6 2 7 3 2 2 6 6 5 9-2 4-11 12-14 16-1 2-6 4-5 6 3 4 13 14 18 15 6 1 13-5 15-8 2-2-6-4-4-6 7-6 38-23 44-30 4-5-7-9-8-15-2-6 1-18-2-20-2-3-11 1-14 5-2 5 1 14 1 20-1 5-1 10-4 14-2 4-11 14-13 10-3-3 0-20-1-30 0-9-4-22-2-27 1-4 9 0 13-2 6-2 17-8 21-12 3-2 5-8 4-10s-7-4-10-3l-18 12c-3 0-5-5-4-7 1-3 12-7 10-11s-14-10-21-11-18 0-22 2Z" fill="#b14d04"/>
<path d="M483 386c-11 5-14 9-16 8-2-2 1-11 11-15 8-3 15-6 16-3 1 2-4 7-11 10ZM555 373c-11 5-20 6-21 5-2-1 10-7 19-12 7-3 11-6 12-3 1 2-4 7-10 10ZM553 445l-6 4c-2 0-2-9 0-10 2-2 11-3 11 0l-5 6ZM454 497c-8 9-9 12-11 11s-1-8 3-13c5-5 26-28 27-25 2 2-13 22-19 27Z" fill="#fed1aa"/>
</g>
<linearGradient id="a" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="scale(778.973) rotate(68 -3 2)">
<stop offset="0" stop-color="#ffbd44"/>
<stop offset=".5" stop-color="#dc8912"/>
<stop offset="1" stop-color="#d07600"/>
</linearGradient>
<linearGradient id="b" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="scale(499.109) rotate(51 -6 4)">
<stop offset="0" stop-color="#bf5802"/>
<stop offset="1" stop-color="#9e3d06"/>
</linearGradient>
<filter id="g0" x="0" y="0%" width="100%" height="33%">
      <feFlood flood-color="hsl(1331deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="0" dy="3" result="a"/>
      <feOffset in="SourceGraphic" dx="0" dy="3" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g1" x="0" y="33%" width="100%" height="16%">
      <feFlood flood-color="hsl(8deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="-3" dy="-1" result="a"/>
      <feOffset in="SourceGraphic" dx="13" dy="3" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g2" x="0" y="49%" width="100%" height="19%">
      <feFlood flood-color="hsl(512deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="3" dy="-2" result="a"/>
      <feOffset in="SourceGraphic" dx="3" dy="2" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g3" x="0" y="68%" width="100%" height="23%">
      <feFlood flood-color="hsl(0deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="-7" dy="-2" result="a"/>
      <feOffset in="SourceGraphic" dx="9" dy="2" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g4" x="0" y="91%" width="100%" height="3%">
      <feFlood flood-color="hsl(0deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="-38" dy="-2" result="a"/>
      <feOffset in="SourceGraphic" dx="18" dy="2" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g5" x="0" y="94%" width="100%" height="26%">
      <feFlood flood-color="hsl(0deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="-7" dy="-2" result="a"/>
      <feOffset in="SourceGraphic" dx="9" dy="2" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter></defs></svg>
'''
'''--- frontend/assets/e_4.svg ---
<svg viewBox="0 0 1080 1080" xmlns="http://www.w3.org/2000/svg" xml:space="preserve" fill-rule="evenodd" clip-rule="evenodd" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.6">
<path fill="none" d="M0 0h1080v1080H0z"/>
<path d="M462 944c-13 4-27 7-42 7-43 0-79-21-97-51V695c17 30 54 51 97 51 15 0 29-3 42-8v206ZM846 639a99 99 0 0 0 80-102c8-13 13-29 14-45v188a108 108 0 0 1-13 62c3 37-18 74-55 93-8 5-17 8-25 10l-1-206Z" fill="#7f3a01" stroke="#d28827" stroke-width="4"/>
<path d="M847 845a104 104 0 0 1-110 73V711c19 2 40-2 58-12 26-13 44-36 51-61l1 206ZM737 917a103 103 0 0 1-137 32V745c20 12 46 17 73 11s50-22 64-43v205ZM600 950c-18 14-40 23-66 23-28 0-54-12-72-29V738c18 18 44 29 72 29 25 0 48-8 66-23v206ZM322 900c-48-2-87-41-93-89V605c5 49 45 87 93 90v205ZM229 810a101 101 0 0 1-61-98c-7-13-12-28-12-44h0v-1a107 107 0 0 1 0-8V465c1 15 5 29 12 42v4c0 42 25 78 61 93v206Z" fill="#7f3a01" stroke="#d28827" stroke-width="4"/>
<path d="M528 3074c18-15 43-24 69-23 31 1 58 15 76 37 19-4 40-2 60 7 23 10 41 28 52 49a99 99 0 0 1 89 79 98 98 0 0 1 59 106 105 105 0 0 1 0 104c2 36-18 73-55 93-8 4-17 7-26 9-7 25-25 47-51 61-19 10-39 14-58 12-14 21-37 37-65 43-26 6-52 1-73-11-17 14-40 23-65 23-28 0-54-11-72-29-13 5-28 7-43 7-42 0-79-20-97-51-48-2-87-40-93-89a101 101 0 0 1-61-98 103 103 0 0 1 17-121c2-48 36-87 81-96 8-24 27-47 53-61 21-12 43-17 64-15 13-21 35-38 61-45 28-7 56-3 78 9Z" fill="url(#a)" transform="translate(-7 -2895)"/>
<path d="M520 207c15-14 38-22 63-22 32 0 59 15 72 36 16-13 43-17 69-7 24 10 41 28 45 46 25-1 52 9 72 31 15 15 24 34 27 52a71 71 0 0 1 38 103c13 10 22 25 21 41 0 24-18 44-43 52 15 18 19 43 8 64a57 57 0 0 1-49 30c-6 25-25 49-52 64-24 14-49 18-71 14-6 26-30 46-58 46-20 0-38-10-48-25a90 90 0 0 1-75 33c-35 0-65-18-78-43a59 59 0 0 1-48 24c-32 0-58-24-59-55-26 7-59-3-83-28a95 95 0 0 1-28-72c-22-6-38-20-42-40-3-17 5-34 19-46a62 62 0 0 1-29-53c0-22 13-41 33-52a57 57 0 0 1 57-86c2-24 24-52 58-68 21-10 43-15 61-13 10-18 30-33 55-39 24-5 48 1 65 13Zm-47 493a404 404 0 0 0 135 6 96 96 0 0 1-66 28c-28-1-55-15-69-34Zm229-18c-6 22-25 44-49 44-16 0-27-10-35-22 30-4 58-12 84-22Zm-321-15c25 13 54 24 84 31-9 11-21 19-37 19-27 0-45-25-47-50Zm426-52c-6 21-14 46-37 59-20 10-42 8-60 5 38-16 71-38 97-64Zm-45-4c-15 6-32 8-47 10-92 13-185 20-278 25l-26 2c44 19 95 30 150 29 79-2 151-27 201-66Zm-481-34c22 33 50 61 90 82-24 5-51 5-71-16-18-17-20-45-19-66Zm443-239c-58-2-222 14-333 25-33 4-36 15-33 46 6 55 9 111 16 165 2 14 2 30 12 39 12 10 31 5 47 4 92-9 181-13 273-24 14-2 34-6 42-17 11-15 8-36 7-55-2-49-7-98-15-146-2-13-3-37-16-37Zm134 202c10 15 11 31 3 48-9 15-32 22-50 23 20-21 36-45 47-71ZM325 367c-30 33-47 72-46 113 1 50 26 95 68 129l-3-29c-9-58-18-116-21-174 0-13-1-27 2-39Zm444-23c9 36 14 96 18 173 1 24 8 52-2 73 33-33 52-74 51-118-1-49-26-94-67-128ZM252 505c4 25 8 40 22 62-19-5-34-6-37-22-3-15 3-29 15-40Zm618-48c11 8 23 19 23 31-1 19-13 35-32 43a181 181 0 0 0 9-74Zm-610-40a181 181 0 0 0-8 86 54 54 0 0 1-25-45c1-18 17-32 33-41Zm575-53c19 7 39 19 45 39 4 15-4 30-11 43-5-30-16-57-34-82Zm-424-94c-71 30-125 81-148 140-9-16-15-39-3-54 12-16 31-23 49-20 2-22 22-46 52-60 17-8 34-7 50-6Zm415 81c-21-29-41-43-75-63 21-1 45 8 64 27 13 14 8 21 11 36Zm-121-47c-44-19-95-29-150-29-80 2-152 27-202 66l21-3c97-10 251-33 331-34Zm38-20c-29-17-55-26-91-34 15-9 36-10 57-2s30 19 34 36Zm-222-42c-36 4-70 12-101 25 9-16 25-33 46-37 20-4 40 3 55 12Zm122 6a405 405 0 0 0-114-6 82 82 0 0 1 114 6Z" fill="#421f02"/>
<path d="M516 3101c15-14 38-22 64-22 31 1 59 15 72 36 16-13 43-17 69-6 24 9 40 27 45 46 24-2 51 8 72 30 15 15 24 34 27 52a71 71 0 0 1 38 103c13 10 21 25 21 42 0 23-18 43-44 51 15 18 20 44 8 65a57 57 0 0 1-49 29c-6 25-24 49-51 65-24 13-50 17-72 13-5 26-29 46-57 46-20 0-38-10-49-25a90 90 0 0 1-74 34c-36-1-66-19-78-44a59 59 0 0 1-48 25c-32 0-58-25-59-56-27 7-60-3-84-28a95 95 0 0 1-27-72c-22-5-39-20-42-40-3-17 4-34 18-46a62 62 0 0 1-29-52c1-23 14-42 33-53a57 57 0 0 1 58-85c2-25 24-52 57-69 21-10 43-14 62-13 10-18 30-33 54-38 25-5 48 0 65 12Zm-46 493a404 404 0 0 0 134 6 96 96 0 0 1-65 28c-29 0-56-15-69-34Zm229-18c-6 22-25 45-49 45-16 0-27-11-36-23 30-4 59-12 85-22Zm-321-15c25 13 53 24 83 31-9 11-21 19-36 19-27 0-45-24-47-50Zm426-52c-6 21-15 46-38 59-19 11-41 8-60 5 38-16 71-38 98-64Zm-46-4c-14 6-31 8-46 10-92 14-185 21-278 25l-26 2c43 19 95 30 149 29 80-1 151-26 201-66Zm-479-30c22 33 54 61 93 83-23 4-55 0-76-21-17-17-18-42-17-62Zm441-243c-58-2-221 14-332 25-33 4-36 15-33 46 6 55 9 111 16 166 2 13 1 29 12 38 12 10 31 5 47 4 92-9 181-12 273-24 13-2 34-6 42-17 11-14 8-36 7-54-2-49-7-98-15-147-3-13-3-36-17-37Zm134 202c10 15 12 31 3 48-8 15-31 22-49 23 20-21 36-45 46-71Zm-532-173c-30 33-47 72-46 114 1 49 26 94 68 128l-3-29c-10-57-18-115-21-174-1-12-2-26 2-39Zm444-23c9 36 14 96 17 173 2 24 9 52-1 73 33-33 52-74 51-118-1-49-26-93-67-128Zm-517 161c4 25 13 49 27 71-19-5-39-15-42-31-3-14 3-29 15-40Zm618-48c11 9 22 19 22 32 0 18-13 34-31 42a181 181 0 0 0 9-74Zm-610-40a181 181 0 0 0-8 86 54 54 0 0 1-25-45c0-18 17-31 33-41Zm575-53c19 7 39 19 44 40 4 14-3 29-11 42-4-29-16-57-33-82Zm-425-93c-71 30-124 80-148 139-9-16-14-38-3-54 12-16 31-23 50-20 2-21 22-46 52-60 16-8 34-7 49-5Zm424 92c-20-29-49-54-84-74 22-2 46 8 65 26 13 14 17 32 19 48Zm-130-58c-43-20-95-30-150-29-79 1-151 26-201 66l21-4c97-9 250-32 330-33Zm45-17c-28-17-62-30-97-38 14-8 36-10 57-2s36 24 40 40Zm-228-45c-36 3-70 12-102 24 10-16 26-32 46-37 21-4 41 3 56 13Zm121 5a405 405 0 0 0-113-6 82 82 0 0 1 113 6Z" fill="url(#b)" transform="translate(-6 -2907)"/>
<path d="M207 423c-4 8-2 15-8 18-5 2-6-9-3-19 3-14 22-28 24-22 1 6-8 15-13 23ZM337 254c-24 14-43 34-46 30-4-4 13-26 34-38 31-17 56-16 52-11s-26 10-40 19ZM275 635c19 21 53 27 51 31-3 5-41 1-56-18-23-27-24-57-17-54 5 2 11 29 22 41ZM345 309l-12 10c-31 25-53 60-56 58-7-3 22-46 54-69 47-34 74-44 74-38 0 3-11 4-60 39ZM788 585l8-9c21-25 33-56 36-55 5 2-9 43-31 65-31 33-54 42-54 37 0-2 8-4 41-38ZM335 385c3 11 5 17 6 48 1 36 9 80 0 80-5 1-10-38-12-77-2-33-1-41 0-53 0-9 5-7 6 2ZM374 337c38-9 167-21 202-22 40 0 45 7-15 10-51 4-172 22-185 21-16-1-15-6-2-9ZM437 204c-27 9-33 24-35 20-4-5 11-22 34-31 16-6 39-7 34-2-5 4-17 7-33 13ZM559 188c-14 2-29 14-29 10-1-6 16-17 29-18 10 0 24 3 24 6l-24 2ZM238 334c-19 21-13 36-18 34s-10-24 8-40c14-13 28-18 32-13s-10 7-22 19Z" fill="#fed1aa"/>
<use href="#fa" filter="url(#g0)"/><use href="#fa" filter="url(#g1)"/><use href="#fa" filter="url(#g2)"/><use href="#fa" filter="url(#g3)"/><use href="#fa" filter="url(#g4)"/><use href="#fa" filter="url(#g5)"/><use href="#fa" filter="url(#g6)"/><use href="#fa" filter="url(#g7)"/><defs>
<g id="fa">
<path d="M513 375c-8 2-41 6-43 22-2 14 30-2 35 2 4 3-2 15-7 20-6 4-19 4-25 6-5 1-13-1-14 2-1 4 4 15 8 17 4 3 18-6 18-1 1 6-9 24-16 33-6 9-17 16-21 24-3 5-12 11-12 16-1 3 6 6 6 7 0 2 5 1 8 0 3-2 10-6 13-10 5-4 9-11 13-17 6-7 13-19 19-24 4-3 14-6 17-5 2 1-1 8-3 11l-19 22c-2 2-11 2-13 4-1 2 6 6 7 7 2 1 15-5 18-4 4 1 4 7 2 9-3 5-16 11-19 17-2 2-8 5-8 8 0 2 6 5 7 6 1 3 6 2 9 1l18-13c3-1 8-3 10-2s2 5 1 8l-8 21c-2 3-5 7-8 6-3 0-7-11-11-10-4 0-16 8-13 14 2 5 21 18 28 20 6 1 12-6 15-10 6-9 13-34 21-42 6-6 23-8 27-5s1 17-4 22c-5 4-22 1-26 4-2 2-6 3-4 6l9 8c5 2 17 1 24-1 10-4 21-21 35-21 14 1 39 20 52 22 7 1 21-6 20-11 0-4-12-13-21-17-11-5-37-7-45-12-6-5-2-17-1-22 0-3 7-5 7-8-1-4-13-10-11-17 2-6 22-16 22-20 0-2-3-6-7-7-6-2-14 4-16 2-4-3-1-11-1-15 1-5 1-14 5-14 5 0 14 9 22 12s16 5 25 6c9 0 24 1 29-2 6-4 10-15 4-18-2-1-4-6-9-7-9-2-23 4-32 2-15-4-43-16-50-21-3-2 6-5 9-7l20-8c3-2 4-6 4-9s-3-5-6-8l-10-10c-9-1-24 30-34 34-6 4-21-4-21-7 1-4 20-9 25-12 2-1 6 0 6-2 0-5-2-21-7-24s-17 2-23 5c-8 5-15 17-22 20-5 4-14 4-19 3-4 0-5-8-9-6Zm84 131c-2-1-22 12-25 16-2 1 5 2 7 3 3 1 7 9 10 6s11-23 8-25Zm-74-105c-3 2-2 7-4 10-2 5-9 15-11 21-1 6-3 16 0 17 4 2 16-7 20-8l6 1c3 2 11 8 12 11 2 2 1 5-1 7l-12 15c-1 2-5 4-5 6s5 2 7 3c2 2 5 6 4 9-1 4-10 12-13 16-2 2-6 4-5 6 2 4 13 14 18 15 6 1 13-5 15-8 1-2-6-4-4-6 6-6 38-22 44-30 4-5-7-9-9-15-1-6 1-18-1-20-3-3-12 1-14 5-2 5 1 14 1 20-1 5-1 10-4 14s-11 14-13 10c-1-1-7-3-7-6 0-7 6-17 6-24 0-9-4-22-3-27 2-4 10 0 14-2 5-2 17-8 21-12 3-2 5-8 4-10-2-2-7-4-10-3-5 2-14 12-19 12-4 0-10-8-9-11s17-4 16-7-14-10-21-11c-8-1-18 0-23 2Z" fill="#431d02"/>
<path d="M507 369c-9 2-41 6-44 22-1 14 30-2 35 2 5 3-2 15-7 20-5 4-19 4-25 6-5 1-12-1-13 2-1 4 3 15 7 17 5 3 18-6 19-1 0 6-10 24-16 33s-18 16-22 24c-4 7-6 19-6 23 0 2 6 1 8 0l14-10 13-17c5-7 12-19 18-24 5-3 15-6 17-5s-1 8-3 11l-19 22c-3 3-8 10-6 11 3 1 15-5 19-4 3 1 3 7 1 9-2 5-15 11-19 17-3 4-2 12-1 14 1 3 6 2 9 1l18-13c3-1 9-3 10-2 2 1 2 5 1 8-1 5-5 16-8 21-2 3-5 7-8 6-3 0-6-11-10-11-4 1-16 9-14 15 3 5 21 18 28 20 6 1 12-6 15-10 6-9 13-34 21-42 7-6 24-8 28-5s1 17-4 22c-5 4-23 1-26 4-4 3 0 11 5 14 4 2 16 1 23-2 10-3 21-20 35-20 14 1 40 20 52 22 8 1 21-6 21-11-1-4-14-12-23-16-11-5-36-7-43-13-6-5-3-17-2-22 0-3 8-5 7-8-1-4-13-10-11-17 2-6 22-16 22-20s-19-1-23-5c-4-3-1-11 0-15 0-5 0-14 4-14 5 0 14 9 22 12s17 5 25 6c10 0 24 1 29-2 6-4 10-15 5-18-7-4-29-1-42-5-15-4-42-16-49-21-3-2 5-5 9-7 4-3 15-6 19-8 3-2 5-6 4-9 0-3-3-6-5-8s-5-7-7-5c-8 4-28 26-37 29-7 3-22-4-22-7 1-4 20-9 25-12 2-1 7 0 6-3 0-3-2-17-8-18-5-1-19 9-26 12-6 3-11 7-17 8-6 2-15 4-20 3-4 0-5-8-8-6Zm84 131c-3-1-23 12-26 15-2 2 5 3 7 4 3 1 7 9 10 6s12-23 9-25Zm-74-105c-4 2-3 7-5 10-2 5-9 15-10 21-2 6-4 16 0 17 3 2 15-7 19-8l6 1 13 11c1 2 0 5-1 7l-12 15c-2 2-6 4-6 6 1 2 6 2 7 3 2 2 6 6 5 9-2 4-11 12-14 16-1 2-6 4-5 6 3 4 13 14 18 15 6 1 13-5 15-8 2-2-6-4-4-6 7-6 38-23 44-30 4-5-7-9-8-15-2-6 1-18-2-20-2-3-11 1-14 5-2 5 1 14 1 20-1 5-1 10-4 14-2 4-11 14-13 10-3-3 0-20-1-30 0-9-4-22-2-27 1-4 9 0 13-2 6-2 17-8 21-12 3-2 5-8 4-10s-7-4-10-3l-18 12c-3 0-5-5-4-7 1-3 12-7 10-11s-14-10-21-11-18 0-22 2Z" fill="#b14d04"/>
<path d="M483 386c-11 5-14 9-16 8-2-2 1-11 11-15 8-3 15-6 16-3 1 2-4 7-11 10ZM555 373c-11 5-20 6-21 5-2-1 10-7 19-12 7-3 11-6 12-3 1 2-4 7-10 10ZM553 445l-6 4c-2 0-2-9 0-10 2-2 11-3 11 0l-5 6ZM454 497c-8 9-9 12-11 11s-1-8 3-13c5-5 26-28 27-25 2 2-13 22-19 27Z" fill="#fed1aa"/>
</g>
<linearGradient id="a" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="scale(778.973) rotate(68 -3 2)">
<stop offset="0" stop-color="#ffbd44"/>
<stop offset=".5" stop-color="#dc8912"/>
<stop offset="1" stop-color="#d07600"/>
</linearGradient>
<linearGradient id="b" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="scale(499.109) rotate(51 -6 4)">
<stop offset="0" stop-color="#bf5802"/>
<stop offset="1" stop-color="#9e3d06"/>
</linearGradient>
<filter id="g0" x="0" y="0%" width="100%" height="4%">
      <feFlood flood-color="hsl(125deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="-3" dy="0" result="a"/>
      <feOffset in="SourceGraphic" dx="13" dy="0" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g1" x="0" y="4%" width="100%" height="47%">
      <feFlood flood-color="hsl(125deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="-13" dy="1" result="a"/>
      <feOffset in="SourceGraphic" dx="3" dy="1" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="143" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g2" x="0" y="51%" width="100%" height="3%">
      <feFlood flood-color="hsl(125deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="-62" dy="1" result="a"/>
      <feOffset in="SourceGraphic" dx="6" dy="1" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="143" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g3" x="0" y="54%" width="100%" height="1%">
      <feFlood flood-color="hsl(125deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="-13" dy="1" result="a"/>
      <feOffset in="SourceGraphic" dx="3" dy="1" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="143" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g4" x="0" y="55%" width="100%" height="11%">
      <feFlood flood-color="hsl(2744deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="-5" dy="1" result="a"/>
      <feOffset in="SourceGraphic" dx="11" dy="1" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g5" x="0" y="66%" width="100%" height="2%">
      <feFlood flood-color="hsl(2744deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="-30" dy="1" result="a"/>
      <feOffset in="SourceGraphic" dx="22" dy="1" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g6" x="0" y="68%" width="100%" height="36%">
      <feFlood flood-color="hsl(2744deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="-5" dy="1" result="a"/>
      <feOffset in="SourceGraphic" dx="11" dy="1" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g7" x="0" y="104%" width="100%" height="23%">
      <feFlood flood-color="hsl(125deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="-2" dy="-3" result="a"/>
      <feOffset in="SourceGraphic" dx="14" dy="1" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter></defs></svg>
'''
'''--- frontend/assets/e_5.svg ---
<svg viewBox="0 0 1080 1080" xmlns="http://www.w3.org/2000/svg" xml:space="preserve" fill-rule="evenodd" clip-rule="evenodd" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.6">
<path fill="none" d="M0 0h1080v1080H0z"/>
<path d="M462 944c-13 4-27 7-42 7-43 0-79-21-97-51V695c17 30 54 51 97 51 15 0 29-3 42-8v206ZM846 639a99 99 0 0 0 80-102c8-13 13-29 14-45v188a108 108 0 0 1-13 62c3 37-18 74-55 93-8 5-17 8-25 10l-1-206Z" fill="#7f3a01" stroke="#d28827" stroke-width="4"/>
<path d="M847 845a104 104 0 0 1-110 73V711c19 2 40-2 58-12 26-13 44-36 51-61l1 206ZM737 917a103 103 0 0 1-137 32V745c20 12 46 17 73 11s50-22 64-43v205ZM600 950c-18 14-40 23-66 23-28 0-54-12-72-29V738c18 18 44 29 72 29 25 0 48-8 66-23v206ZM322 900c-48-2-87-41-93-89V605c5 49 45 87 93 90v205ZM229 810a101 101 0 0 1-61-98c-7-13-12-28-12-44h0v-1a107 107 0 0 1 0-8V465c1 15 5 29 12 42v4c0 42 25 78 61 93v206Z" fill="#7f3a01" stroke="#d28827" stroke-width="4"/>
<path d="M528 3074c18-15 43-24 69-23 31 1 58 15 76 37 19-4 40-2 60 7 23 10 41 28 52 49a99 99 0 0 1 89 79 98 98 0 0 1 59 106 105 105 0 0 1 0 104c2 36-18 73-55 93-8 4-17 7-26 9-7 25-25 47-51 61-19 10-39 14-58 12-14 21-37 37-65 43-26 6-52 1-73-11-17 14-40 23-65 23-28 0-54-11-72-29-13 5-28 7-43 7-42 0-79-20-97-51-48-2-87-40-93-89a101 101 0 0 1-61-98 103 103 0 0 1 17-121c2-48 36-87 81-96 8-24 27-47 53-61 21-12 43-17 64-15 13-21 35-38 61-45 28-7 56-3 78 9Z" fill="url(#a)" transform="translate(-7 -2895)"/>
<path d="M520 207c15-14 38-22 63-22 32 0 59 15 72 36 16-13 43-17 69-7 24 10 41 28 45 46 25-1 52 9 72 31 15 15 24 34 27 52a71 71 0 0 1 38 103c13 10 22 25 21 41 0 24-18 44-43 52 15 18 19 43 8 64a57 57 0 0 1-49 30c-6 25-25 49-52 64-24 14-49 18-71 14-6 26-30 46-58 46-20 0-38-10-48-25a90 90 0 0 1-75 33c-35 0-65-18-78-43a59 59 0 0 1-48 24c-32 0-58-24-59-55-26 7-59-3-83-28a95 95 0 0 1-28-72c-22-6-38-20-42-40-3-17 5-34 19-46a62 62 0 0 1-29-53c0-22 13-41 33-52a57 57 0 0 1 57-86c2-24 24-52 58-68 21-10 43-15 61-13 10-18 30-33 55-39 24-5 48 1 65 13Zm-47 493a404 404 0 0 0 135 6 96 96 0 0 1-66 28c-28-1-55-15-69-34Zm229-18c-6 22-25 44-49 44-16 0-27-10-35-22 30-4 58-12 84-22Zm-321-15c25 13 54 24 84 31-9 11-21 19-37 19-27 0-45-25-47-50Zm426-52c-6 21-14 46-37 59-20 10-42 8-60 5 38-16 71-38 97-64Zm-45-4c-15 6-32 8-47 10-92 13-185 20-278 25l-26 2c44 19 95 30 150 29 79-2 151-27 201-66Zm-481-34c22 33 50 61 90 82-24 5-51 5-71-16-18-17-20-45-19-66Zm443-239c-58-2-222 14-333 25-33 4-36 15-33 46 6 55 9 111 16 165 2 14 2 30 12 39 12 10 31 5 47 4 92-9 181-13 273-24 14-2 34-6 42-17 11-15 8-36 7-55-2-49-7-98-15-146-2-13-3-37-16-37Zm134 202c10 15 11 31 3 48-9 15-32 22-50 23 20-21 36-45 47-71ZM325 367c-30 33-47 72-46 113 1 50 26 95 68 129l-3-29c-9-58-18-116-21-174 0-13-1-27 2-39Zm444-23c9 36 14 96 18 173 1 24 8 52-2 73 33-33 52-74 51-118-1-49-26-94-67-128ZM252 505c4 25 8 40 22 62-19-5-34-6-37-22-3-15 3-29 15-40Zm618-48c11 8 23 19 23 31-1 19-13 35-32 43a181 181 0 0 0 9-74Zm-610-40a181 181 0 0 0-8 86 54 54 0 0 1-25-45c1-18 17-32 33-41Zm575-53c19 7 39 19 45 39 4 15-4 30-11 43-5-30-16-57-34-82Zm-424-94c-71 30-125 81-148 140-9-16-15-39-3-54 12-16 31-23 49-20 2-22 22-46 52-60 17-8 34-7 50-6Zm415 81c-21-29-41-43-75-63 21-1 45 8 64 27 13 14 8 21 11 36Zm-121-47c-44-19-95-29-150-29-80 2-152 27-202 66l21-3c97-10 251-33 331-34Zm38-20c-29-17-55-26-91-34 15-9 36-10 57-2s30 19 34 36Zm-222-42c-36 4-70 12-101 25 9-16 25-33 46-37 20-4 40 3 55 12Zm122 6a405 405 0 0 0-114-6 82 82 0 0 1 114 6Z" fill="#421f02"/>
<path d="M516 3101c15-14 38-22 64-22 31 1 59 15 72 36 16-13 43-17 69-6 24 9 40 27 45 46 24-2 51 8 72 30 15 15 24 34 27 52a71 71 0 0 1 38 103c13 10 21 25 21 42 0 23-18 43-44 51 15 18 20 44 8 65a57 57 0 0 1-49 29c-6 25-24 49-51 65-24 13-50 17-72 13-5 26-29 46-57 46-20 0-38-10-49-25a90 90 0 0 1-74 34c-36-1-66-19-78-44a59 59 0 0 1-48 25c-32 0-58-25-59-56-27 7-60-3-84-28a95 95 0 0 1-27-72c-22-5-39-20-42-40-3-17 4-34 18-46a62 62 0 0 1-29-52c1-23 14-42 33-53a57 57 0 0 1 58-85c2-25 24-52 57-69 21-10 43-14 62-13 10-18 30-33 54-38 25-5 48 0 65 12Zm-46 493a404 404 0 0 0 134 6 96 96 0 0 1-65 28c-29 0-56-15-69-34Zm229-18c-6 22-25 45-49 45-16 0-27-11-36-23 30-4 59-12 85-22Zm-321-15c25 13 53 24 83 31-9 11-21 19-36 19-27 0-45-24-47-50Zm426-52c-6 21-15 46-38 59-19 11-41 8-60 5 38-16 71-38 98-64Zm-46-4c-14 6-31 8-46 10-92 14-185 21-278 25l-26 2c43 19 95 30 149 29 80-1 151-26 201-66Zm-479-30c22 33 54 61 93 83-23 4-55 0-76-21-17-17-18-42-17-62Zm441-243c-58-2-221 14-332 25-33 4-36 15-33 46 6 55 9 111 16 166 2 13 1 29 12 38 12 10 31 5 47 4 92-9 181-12 273-24 13-2 34-6 42-17 11-14 8-36 7-54-2-49-7-98-15-147-3-13-3-36-17-37Zm134 202c10 15 12 31 3 48-8 15-31 22-49 23 20-21 36-45 46-71Zm-532-173c-30 33-47 72-46 114 1 49 26 94 68 128l-3-29c-10-57-18-115-21-174-1-12-2-26 2-39Zm444-23c9 36 14 96 17 173 2 24 9 52-1 73 33-33 52-74 51-118-1-49-26-93-67-128Zm-517 161c4 25 13 49 27 71-19-5-39-15-42-31-3-14 3-29 15-40Zm618-48c11 9 22 19 22 32 0 18-13 34-31 42a181 181 0 0 0 9-74Zm-610-40a181 181 0 0 0-8 86 54 54 0 0 1-25-45c0-18 17-31 33-41Zm575-53c19 7 39 19 44 40 4 14-3 29-11 42-4-29-16-57-33-82Zm-425-93c-71 30-124 80-148 139-9-16-14-38-3-54 12-16 31-23 50-20 2-21 22-46 52-60 16-8 34-7 49-5Zm424 92c-20-29-49-54-84-74 22-2 46 8 65 26 13 14 17 32 19 48Zm-130-58c-43-20-95-30-150-29-79 1-151 26-201 66l21-4c97-9 250-32 330-33Zm45-17c-28-17-62-30-97-38 14-8 36-10 57-2s36 24 40 40Zm-228-45c-36 3-70 12-102 24 10-16 26-32 46-37 21-4 41 3 56 13Zm121 5a405 405 0 0 0-113-6 82 82 0 0 1 113 6Z" fill="url(#b)" transform="translate(-6 -2907)"/>
<path d="M207 423c-4 8-2 15-8 18-5 2-6-9-3-19 3-14 22-28 24-22 1 6-8 15-13 23ZM337 254c-24 14-43 34-46 30-4-4 13-26 34-38 31-17 56-16 52-11s-26 10-40 19ZM275 635c19 21 53 27 51 31-3 5-41 1-56-18-23-27-24-57-17-54 5 2 11 29 22 41ZM345 309l-12 10c-31 25-53 60-56 58-7-3 22-46 54-69 47-34 74-44 74-38 0 3-11 4-60 39ZM788 585l8-9c21-25 33-56 36-55 5 2-9 43-31 65-31 33-54 42-54 37 0-2 8-4 41-38ZM335 385c3 11 5 17 6 48 1 36 9 80 0 80-5 1-10-38-12-77-2-33-1-41 0-53 0-9 5-7 6 2ZM374 337c38-9 167-21 202-22 40 0 45 7-15 10-51 4-172 22-185 21-16-1-15-6-2-9ZM437 204c-27 9-33 24-35 20-4-5 11-22 34-31 16-6 39-7 34-2-5 4-17 7-33 13ZM559 188c-14 2-29 14-29 10-1-6 16-17 29-18 10 0 24 3 24 6l-24 2ZM238 334c-19 21-13 36-18 34s-10-24 8-40c14-13 28-18 32-13s-10 7-22 19Z" fill="#fed1aa"/>
<use href="#fa" filter="url(#g0)"/><use href="#fa" filter="url(#g1)"/><use href="#fa" filter="url(#g2)"/><use href="#fa" filter="url(#g3)"/><use href="#fa" filter="url(#g4)"/><use href="#fa" filter="url(#g5)"/><use href="#fa" filter="url(#g6)"/><use href="#fa" filter="url(#g7)"/><defs>
<g id="fa">
<path d="M513 375c-8 2-41 6-43 22-2 14 30-2 35 2 4 3-2 15-7 20-6 4-19 4-25 6-5 1-13-1-14 2-1 4 4 15 8 17 4 3 18-6 18-1 1 6-9 24-16 33-6 9-17 16-21 24-3 5-12 11-12 16-1 3 6 6 6 7 0 2 5 1 8 0 3-2 10-6 13-10 5-4 9-11 13-17 6-7 13-19 19-24 4-3 14-6 17-5 2 1-1 8-3 11l-19 22c-2 2-11 2-13 4-1 2 6 6 7 7 2 1 15-5 18-4 4 1 4 7 2 9-3 5-16 11-19 17-2 2-8 5-8 8 0 2 6 5 7 6 1 3 6 2 9 1l18-13c3-1 8-3 10-2s2 5 1 8l-8 21c-2 3-5 7-8 6-3 0-7-11-11-10-4 0-16 8-13 14 2 5 21 18 28 20 6 1 12-6 15-10 6-9 13-34 21-42 6-6 23-8 27-5s1 17-4 22c-5 4-22 1-26 4-2 2-6 3-4 6l9 8c5 2 17 1 24-1 10-4 21-21 35-21 14 1 39 20 52 22 7 1 21-6 20-11 0-4-12-13-21-17-11-5-37-7-45-12-6-5-2-17-1-22 0-3 7-5 7-8-1-4-13-10-11-17 2-6 22-16 22-20 0-2-3-6-7-7-6-2-14 4-16 2-4-3-1-11-1-15 1-5 1-14 5-14 5 0 14 9 22 12s16 5 25 6c9 0 24 1 29-2 6-4 10-15 4-18-2-1-4-6-9-7-9-2-23 4-32 2-15-4-43-16-50-21-3-2 6-5 9-7l20-8c3-2 4-6 4-9s-3-5-6-8l-10-10c-9-1-24 30-34 34-6 4-21-4-21-7 1-4 20-9 25-12 2-1 6 0 6-2 0-5-2-21-7-24s-17 2-23 5c-8 5-15 17-22 20-5 4-14 4-19 3-4 0-5-8-9-6Zm84 131c-2-1-22 12-25 16-2 1 5 2 7 3 3 1 7 9 10 6s11-23 8-25Zm-74-105c-3 2-2 7-4 10-2 5-9 15-11 21-1 6-3 16 0 17 4 2 16-7 20-8l6 1c3 2 11 8 12 11 2 2 1 5-1 7l-12 15c-1 2-5 4-5 6s5 2 7 3c2 2 5 6 4 9-1 4-10 12-13 16-2 2-6 4-5 6 2 4 13 14 18 15 6 1 13-5 15-8 1-2-6-4-4-6 6-6 38-22 44-30 4-5-7-9-9-15-1-6 1-18-1-20-3-3-12 1-14 5-2 5 1 14 1 20-1 5-1 10-4 14s-11 14-13 10c-1-1-7-3-7-6 0-7 6-17 6-24 0-9-4-22-3-27 2-4 10 0 14-2 5-2 17-8 21-12 3-2 5-8 4-10-2-2-7-4-10-3-5 2-14 12-19 12-4 0-10-8-9-11s17-4 16-7-14-10-21-11c-8-1-18 0-23 2Z" fill="#431d02"/>
<path d="M507 369c-9 2-41 6-44 22-1 14 30-2 35 2 5 3-2 15-7 20-5 4-19 4-25 6-5 1-12-1-13 2-1 4 3 15 7 17 5 3 18-6 19-1 0 6-10 24-16 33s-18 16-22 24c-4 7-6 19-6 23 0 2 6 1 8 0l14-10 13-17c5-7 12-19 18-24 5-3 15-6 17-5s-1 8-3 11l-19 22c-3 3-8 10-6 11 3 1 15-5 19-4 3 1 3 7 1 9-2 5-15 11-19 17-3 4-2 12-1 14 1 3 6 2 9 1l18-13c3-1 9-3 10-2 2 1 2 5 1 8-1 5-5 16-8 21-2 3-5 7-8 6-3 0-6-11-10-11-4 1-16 9-14 15 3 5 21 18 28 20 6 1 12-6 15-10 6-9 13-34 21-42 7-6 24-8 28-5s1 17-4 22c-5 4-23 1-26 4-4 3 0 11 5 14 4 2 16 1 23-2 10-3 21-20 35-20 14 1 40 20 52 22 8 1 21-6 21-11-1-4-14-12-23-16-11-5-36-7-43-13-6-5-3-17-2-22 0-3 8-5 7-8-1-4-13-10-11-17 2-6 22-16 22-20s-19-1-23-5c-4-3-1-11 0-15 0-5 0-14 4-14 5 0 14 9 22 12s17 5 25 6c10 0 24 1 29-2 6-4 10-15 5-18-7-4-29-1-42-5-15-4-42-16-49-21-3-2 5-5 9-7 4-3 15-6 19-8 3-2 5-6 4-9 0-3-3-6-5-8s-5-7-7-5c-8 4-28 26-37 29-7 3-22-4-22-7 1-4 20-9 25-12 2-1 7 0 6-3 0-3-2-17-8-18-5-1-19 9-26 12-6 3-11 7-17 8-6 2-15 4-20 3-4 0-5-8-8-6Zm84 131c-3-1-23 12-26 15-2 2 5 3 7 4 3 1 7 9 10 6s12-23 9-25Zm-74-105c-4 2-3 7-5 10-2 5-9 15-10 21-2 6-4 16 0 17 3 2 15-7 19-8l6 1 13 11c1 2 0 5-1 7l-12 15c-2 2-6 4-6 6 1 2 6 2 7 3 2 2 6 6 5 9-2 4-11 12-14 16-1 2-6 4-5 6 3 4 13 14 18 15 6 1 13-5 15-8 2-2-6-4-4-6 7-6 38-23 44-30 4-5-7-9-8-15-2-6 1-18-2-20-2-3-11 1-14 5-2 5 1 14 1 20-1 5-1 10-4 14-2 4-11 14-13 10-3-3 0-20-1-30 0-9-4-22-2-27 1-4 9 0 13-2 6-2 17-8 21-12 3-2 5-8 4-10s-7-4-10-3l-18 12c-3 0-5-5-4-7 1-3 12-7 10-11s-14-10-21-11-18 0-22 2Z" fill="#b14d04"/>
<path d="M483 386c-11 5-14 9-16 8-2-2 1-11 11-15 8-3 15-6 16-3 1 2-4 7-11 10ZM555 373c-11 5-20 6-21 5-2-1 10-7 19-12 7-3 11-6 12-3 1 2-4 7-10 10ZM553 445l-6 4c-2 0-2-9 0-10 2-2 11-3 11 0l-5 6ZM454 497c-8 9-9 12-11 11s-1-8 3-13c5-5 26-28 27-25 2 2-13 22-19 27Z" fill="#fed1aa"/>
</g>
<linearGradient id="a" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="scale(778.973) rotate(68 -3 2)">
<stop offset="0" stop-color="#ffbd44"/>
<stop offset=".5" stop-color="#dc8912"/>
<stop offset="1" stop-color="#d07600"/>
</linearGradient>
<linearGradient id="b" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="scale(499.109) rotate(51 -6 4)">
<stop offset="0" stop-color="#bf5802"/>
<stop offset="1" stop-color="#9e3d06"/>
</linearGradient>
<filter id="g0" x="0" y="0%" width="100%" height="40%">
      <feFlood flood-color="hsl(27deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="7" dy="-1" result="a"/>
      <feOffset in="SourceGraphic" dx="7" dy="3" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g1" x="0" y="40%" width="100%" height="0%">
      <feFlood flood-color="hsl(27deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="38" dy="-1" result="a"/>
      <feOffset in="SourceGraphic" dx="14" dy="3" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g2" x="0" y="40%" width="100%" height="7%">
      <feFlood flood-color="hsl(27deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="7" dy="-1" result="a"/>
      <feOffset in="SourceGraphic" dx="7" dy="3" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g3" x="0" y="47%" width="100%" height="29%">
      <feFlood flood-color="hsl(729deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="3" dy="-3" result="a"/>
      <feOffset in="SourceGraphic" dx="3" dy="1" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g4" x="0" y="76%" width="100%" height="34%">
      <feFlood flood-color="hsl(125deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="14" dy="-3" result="a"/>
      <feOffset in="SourceGraphic" dx="14" dy="1" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g5" x="0" y="110%" width="100%" height="7%">
      <feFlood flood-color="hsl(343deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="-9" dy="-3" result="a"/>
      <feOffset in="SourceGraphic" dx="7" dy="1" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g6" x="0" y="117%" width="100%" height="3%">
      <feFlood flood-color="hsl(343deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="-46" dy="-3" result="a"/>
      <feOffset in="SourceGraphic" dx="14" dy="1" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g7" x="0" y="120%" width="100%" height="52%">
      <feFlood flood-color="hsl(343deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="-9" dy="-3" result="a"/>
      <feOffset in="SourceGraphic" dx="7" dy="1" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter></defs></svg>
'''
'''--- frontend/assets/e_6.svg ---
<svg viewBox="0 0 1080 1080" xmlns="http://www.w3.org/2000/svg" xml:space="preserve" fill-rule="evenodd" clip-rule="evenodd" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.6">
<path fill="none" d="M0 0h1080v1080H0z"/>
<path d="M462 944c-13 4-27 7-42 7-43 0-79-21-97-51V695c17 30 54 51 97 51 15 0 29-3 42-8v206ZM846 639a99 99 0 0 0 80-102c8-13 13-29 14-45v188a108 108 0 0 1-13 62c3 37-18 74-55 93-8 5-17 8-25 10l-1-206Z" fill="#7f3a01" stroke="#d28827" stroke-width="4"/>
<path d="M847 845a104 104 0 0 1-110 73V711c19 2 40-2 58-12 26-13 44-36 51-61l1 206ZM737 917a103 103 0 0 1-137 32V745c20 12 46 17 73 11s50-22 64-43v205ZM600 950c-18 14-40 23-66 23-28 0-54-12-72-29V738c18 18 44 29 72 29 25 0 48-8 66-23v206ZM322 900c-48-2-87-41-93-89V605c5 49 45 87 93 90v205ZM229 810a101 101 0 0 1-61-98c-7-13-12-28-12-44h0v-1a107 107 0 0 1 0-8V465c1 15 5 29 12 42v4c0 42 25 78 61 93v206Z" fill="#7f3a01" stroke="#d28827" stroke-width="4"/>
<path d="M528 3074c18-15 43-24 69-23 31 1 58 15 76 37 19-4 40-2 60 7 23 10 41 28 52 49a99 99 0 0 1 89 79 98 98 0 0 1 59 106 105 105 0 0 1 0 104c2 36-18 73-55 93-8 4-17 7-26 9-7 25-25 47-51 61-19 10-39 14-58 12-14 21-37 37-65 43-26 6-52 1-73-11-17 14-40 23-65 23-28 0-54-11-72-29-13 5-28 7-43 7-42 0-79-20-97-51-48-2-87-40-93-89a101 101 0 0 1-61-98 103 103 0 0 1 17-121c2-48 36-87 81-96 8-24 27-47 53-61 21-12 43-17 64-15 13-21 35-38 61-45 28-7 56-3 78 9Z" fill="url(#a)" transform="translate(-7 -2895)"/>
<path d="M520 207c15-14 38-22 63-22 32 0 59 15 72 36 16-13 43-17 69-7 24 10 41 28 45 46 25-1 52 9 72 31 15 15 24 34 27 52a71 71 0 0 1 38 103c13 10 22 25 21 41 0 24-18 44-43 52 15 18 19 43 8 64a57 57 0 0 1-49 30c-6 25-25 49-52 64-24 14-49 18-71 14-6 26-30 46-58 46-20 0-38-10-48-25a90 90 0 0 1-75 33c-35 0-65-18-78-43a59 59 0 0 1-48 24c-32 0-58-24-59-55-26 7-59-3-83-28a95 95 0 0 1-28-72c-22-6-38-20-42-40-3-17 5-34 19-46a62 62 0 0 1-29-53c0-22 13-41 33-52a57 57 0 0 1 57-86c2-24 24-52 58-68 21-10 43-15 61-13 10-18 30-33 55-39 24-5 48 1 65 13Zm-47 493a404 404 0 0 0 135 6 96 96 0 0 1-66 28c-28-1-55-15-69-34Zm229-18c-6 22-25 44-49 44-16 0-27-10-35-22 30-4 58-12 84-22Zm-321-15c25 13 54 24 84 31-9 11-21 19-37 19-27 0-45-25-47-50Zm426-52c-6 21-14 46-37 59-20 10-42 8-60 5 38-16 71-38 97-64Zm-45-4c-15 6-32 8-47 10-92 13-185 20-278 25l-26 2c44 19 95 30 150 29 79-2 151-27 201-66Zm-481-34c22 33 50 61 90 82-24 5-51 5-71-16-18-17-20-45-19-66Zm443-239c-58-2-222 14-333 25-33 4-36 15-33 46 6 55 9 111 16 165 2 14 2 30 12 39 12 10 31 5 47 4 92-9 181-13 273-24 14-2 34-6 42-17 11-15 8-36 7-55-2-49-7-98-15-146-2-13-3-37-16-37Zm134 202c10 15 11 31 3 48-9 15-32 22-50 23 20-21 36-45 47-71ZM325 367c-30 33-47 72-46 113 1 50 26 95 68 129l-3-29c-9-58-18-116-21-174 0-13-1-27 2-39Zm444-23c9 36 14 96 18 173 1 24 8 52-2 73 33-33 52-74 51-118-1-49-26-94-67-128ZM252 505c4 25 8 40 22 62-19-5-34-6-37-22-3-15 3-29 15-40Zm618-48c11 8 23 19 23 31-1 19-13 35-32 43a181 181 0 0 0 9-74Zm-610-40a181 181 0 0 0-8 86 54 54 0 0 1-25-45c1-18 17-32 33-41Zm575-53c19 7 39 19 45 39 4 15-4 30-11 43-5-30-16-57-34-82Zm-424-94c-71 30-125 81-148 140-9-16-15-39-3-54 12-16 31-23 49-20 2-22 22-46 52-60 17-8 34-7 50-6Zm415 81c-21-29-41-43-75-63 21-1 45 8 64 27 13 14 8 21 11 36Zm-121-47c-44-19-95-29-150-29-80 2-152 27-202 66l21-3c97-10 251-33 331-34Zm38-20c-29-17-55-26-91-34 15-9 36-10 57-2s30 19 34 36Zm-222-42c-36 4-70 12-101 25 9-16 25-33 46-37 20-4 40 3 55 12Zm122 6a405 405 0 0 0-114-6 82 82 0 0 1 114 6Z" fill="#421f02"/>
<path d="M516 3101c15-14 38-22 64-22 31 1 59 15 72 36 16-13 43-17 69-6 24 9 40 27 45 46 24-2 51 8 72 30 15 15 24 34 27 52a71 71 0 0 1 38 103c13 10 21 25 21 42 0 23-18 43-44 51 15 18 20 44 8 65a57 57 0 0 1-49 29c-6 25-24 49-51 65-24 13-50 17-72 13-5 26-29 46-57 46-20 0-38-10-49-25a90 90 0 0 1-74 34c-36-1-66-19-78-44a59 59 0 0 1-48 25c-32 0-58-25-59-56-27 7-60-3-84-28a95 95 0 0 1-27-72c-22-5-39-20-42-40-3-17 4-34 18-46a62 62 0 0 1-29-52c1-23 14-42 33-53a57 57 0 0 1 58-85c2-25 24-52 57-69 21-10 43-14 62-13 10-18 30-33 54-38 25-5 48 0 65 12Zm-46 493a404 404 0 0 0 134 6 96 96 0 0 1-65 28c-29 0-56-15-69-34Zm229-18c-6 22-25 45-49 45-16 0-27-11-36-23 30-4 59-12 85-22Zm-321-15c25 13 53 24 83 31-9 11-21 19-36 19-27 0-45-24-47-50Zm426-52c-6 21-15 46-38 59-19 11-41 8-60 5 38-16 71-38 98-64Zm-46-4c-14 6-31 8-46 10-92 14-185 21-278 25l-26 2c43 19 95 30 149 29 80-1 151-26 201-66Zm-479-30c22 33 54 61 93 83-23 4-55 0-76-21-17-17-18-42-17-62Zm441-243c-58-2-221 14-332 25-33 4-36 15-33 46 6 55 9 111 16 166 2 13 1 29 12 38 12 10 31 5 47 4 92-9 181-12 273-24 13-2 34-6 42-17 11-14 8-36 7-54-2-49-7-98-15-147-3-13-3-36-17-37Zm134 202c10 15 12 31 3 48-8 15-31 22-49 23 20-21 36-45 46-71Zm-532-173c-30 33-47 72-46 114 1 49 26 94 68 128l-3-29c-10-57-18-115-21-174-1-12-2-26 2-39Zm444-23c9 36 14 96 17 173 2 24 9 52-1 73 33-33 52-74 51-118-1-49-26-93-67-128Zm-517 161c4 25 13 49 27 71-19-5-39-15-42-31-3-14 3-29 15-40Zm618-48c11 9 22 19 22 32 0 18-13 34-31 42a181 181 0 0 0 9-74Zm-610-40a181 181 0 0 0-8 86 54 54 0 0 1-25-45c0-18 17-31 33-41Zm575-53c19 7 39 19 44 40 4 14-3 29-11 42-4-29-16-57-33-82Zm-425-93c-71 30-124 80-148 139-9-16-14-38-3-54 12-16 31-23 50-20 2-21 22-46 52-60 16-8 34-7 49-5Zm424 92c-20-29-49-54-84-74 22-2 46 8 65 26 13 14 17 32 19 48Zm-130-58c-43-20-95-30-150-29-79 1-151 26-201 66l21-4c97-9 250-32 330-33Zm45-17c-28-17-62-30-97-38 14-8 36-10 57-2s36 24 40 40Zm-228-45c-36 3-70 12-102 24 10-16 26-32 46-37 21-4 41 3 56 13Zm121 5a405 405 0 0 0-113-6 82 82 0 0 1 113 6Z" fill="url(#b)" transform="translate(-6 -2907)"/>
<path d="M207 423c-4 8-2 15-8 18-5 2-6-9-3-19 3-14 22-28 24-22 1 6-8 15-13 23ZM337 254c-24 14-43 34-46 30-4-4 13-26 34-38 31-17 56-16 52-11s-26 10-40 19ZM275 635c19 21 53 27 51 31-3 5-41 1-56-18-23-27-24-57-17-54 5 2 11 29 22 41ZM345 309l-12 10c-31 25-53 60-56 58-7-3 22-46 54-69 47-34 74-44 74-38 0 3-11 4-60 39ZM788 585l8-9c21-25 33-56 36-55 5 2-9 43-31 65-31 33-54 42-54 37 0-2 8-4 41-38ZM335 385c3 11 5 17 6 48 1 36 9 80 0 80-5 1-10-38-12-77-2-33-1-41 0-53 0-9 5-7 6 2ZM374 337c38-9 167-21 202-22 40 0 45 7-15 10-51 4-172 22-185 21-16-1-15-6-2-9ZM437 204c-27 9-33 24-35 20-4-5 11-22 34-31 16-6 39-7 34-2-5 4-17 7-33 13ZM559 188c-14 2-29 14-29 10-1-6 16-17 29-18 10 0 24 3 24 6l-24 2ZM238 334c-19 21-13 36-18 34s-10-24 8-40c14-13 28-18 32-13s-10 7-22 19Z" fill="#fed1aa"/>
<use href="#fa" filter="url(#g0)"/><use href="#fa" filter="url(#g1)"/><use href="#fa" filter="url(#g2)"/><use href="#fa" filter="url(#g3)"/><use href="#fa" filter="url(#g4)"/><use href="#fa" filter="url(#g5)"/><use href="#fa" filter="url(#g6)"/><use href="#fa" filter="url(#g7)"/><defs>
<g id="fa">
<path d="M513 375c-8 2-41 6-43 22-2 14 30-2 35 2 4 3-2 15-7 20-6 4-19 4-25 6-5 1-13-1-14 2-1 4 4 15 8 17 4 3 18-6 18-1 1 6-9 24-16 33-6 9-17 16-21 24-3 5-12 11-12 16-1 3 6 6 6 7 0 2 5 1 8 0 3-2 10-6 13-10 5-4 9-11 13-17 6-7 13-19 19-24 4-3 14-6 17-5 2 1-1 8-3 11l-19 22c-2 2-11 2-13 4-1 2 6 6 7 7 2 1 15-5 18-4 4 1 4 7 2 9-3 5-16 11-19 17-2 2-8 5-8 8 0 2 6 5 7 6 1 3 6 2 9 1l18-13c3-1 8-3 10-2s2 5 1 8l-8 21c-2 3-5 7-8 6-3 0-7-11-11-10-4 0-16 8-13 14 2 5 21 18 28 20 6 1 12-6 15-10 6-9 13-34 21-42 6-6 23-8 27-5s1 17-4 22c-5 4-22 1-26 4-2 2-6 3-4 6l9 8c5 2 17 1 24-1 10-4 21-21 35-21 14 1 39 20 52 22 7 1 21-6 20-11 0-4-12-13-21-17-11-5-37-7-45-12-6-5-2-17-1-22 0-3 7-5 7-8-1-4-13-10-11-17 2-6 22-16 22-20 0-2-3-6-7-7-6-2-14 4-16 2-4-3-1-11-1-15 1-5 1-14 5-14 5 0 14 9 22 12s16 5 25 6c9 0 24 1 29-2 6-4 10-15 4-18-2-1-4-6-9-7-9-2-23 4-32 2-15-4-43-16-50-21-3-2 6-5 9-7l20-8c3-2 4-6 4-9s-3-5-6-8l-10-10c-9-1-24 30-34 34-6 4-21-4-21-7 1-4 20-9 25-12 2-1 6 0 6-2 0-5-2-21-7-24s-17 2-23 5c-8 5-15 17-22 20-5 4-14 4-19 3-4 0-5-8-9-6Zm84 131c-2-1-22 12-25 16-2 1 5 2 7 3 3 1 7 9 10 6s11-23 8-25Zm-74-105c-3 2-2 7-4 10-2 5-9 15-11 21-1 6-3 16 0 17 4 2 16-7 20-8l6 1c3 2 11 8 12 11 2 2 1 5-1 7l-12 15c-1 2-5 4-5 6s5 2 7 3c2 2 5 6 4 9-1 4-10 12-13 16-2 2-6 4-5 6 2 4 13 14 18 15 6 1 13-5 15-8 1-2-6-4-4-6 6-6 38-22 44-30 4-5-7-9-9-15-1-6 1-18-1-20-3-3-12 1-14 5-2 5 1 14 1 20-1 5-1 10-4 14s-11 14-13 10c-1-1-7-3-7-6 0-7 6-17 6-24 0-9-4-22-3-27 2-4 10 0 14-2 5-2 17-8 21-12 3-2 5-8 4-10-2-2-7-4-10-3-5 2-14 12-19 12-4 0-10-8-9-11s17-4 16-7-14-10-21-11c-8-1-18 0-23 2Z" fill="#431d02"/>
<path d="M507 369c-9 2-41 6-44 22-1 14 30-2 35 2 5 3-2 15-7 20-5 4-19 4-25 6-5 1-12-1-13 2-1 4 3 15 7 17 5 3 18-6 19-1 0 6-10 24-16 33s-18 16-22 24c-4 7-6 19-6 23 0 2 6 1 8 0l14-10 13-17c5-7 12-19 18-24 5-3 15-6 17-5s-1 8-3 11l-19 22c-3 3-8 10-6 11 3 1 15-5 19-4 3 1 3 7 1 9-2 5-15 11-19 17-3 4-2 12-1 14 1 3 6 2 9 1l18-13c3-1 9-3 10-2 2 1 2 5 1 8-1 5-5 16-8 21-2 3-5 7-8 6-3 0-6-11-10-11-4 1-16 9-14 15 3 5 21 18 28 20 6 1 12-6 15-10 6-9 13-34 21-42 7-6 24-8 28-5s1 17-4 22c-5 4-23 1-26 4-4 3 0 11 5 14 4 2 16 1 23-2 10-3 21-20 35-20 14 1 40 20 52 22 8 1 21-6 21-11-1-4-14-12-23-16-11-5-36-7-43-13-6-5-3-17-2-22 0-3 8-5 7-8-1-4-13-10-11-17 2-6 22-16 22-20s-19-1-23-5c-4-3-1-11 0-15 0-5 0-14 4-14 5 0 14 9 22 12s17 5 25 6c10 0 24 1 29-2 6-4 10-15 5-18-7-4-29-1-42-5-15-4-42-16-49-21-3-2 5-5 9-7 4-3 15-6 19-8 3-2 5-6 4-9 0-3-3-6-5-8s-5-7-7-5c-8 4-28 26-37 29-7 3-22-4-22-7 1-4 20-9 25-12 2-1 7 0 6-3 0-3-2-17-8-18-5-1-19 9-26 12-6 3-11 7-17 8-6 2-15 4-20 3-4 0-5-8-8-6Zm84 131c-3-1-23 12-26 15-2 2 5 3 7 4 3 1 7 9 10 6s12-23 9-25Zm-74-105c-4 2-3 7-5 10-2 5-9 15-10 21-2 6-4 16 0 17 3 2 15-7 19-8l6 1 13 11c1 2 0 5-1 7l-12 15c-2 2-6 4-6 6 1 2 6 2 7 3 2 2 6 6 5 9-2 4-11 12-14 16-1 2-6 4-5 6 3 4 13 14 18 15 6 1 13-5 15-8 2-2-6-4-4-6 7-6 38-23 44-30 4-5-7-9-8-15-2-6 1-18-2-20-2-3-11 1-14 5-2 5 1 14 1 20-1 5-1 10-4 14-2 4-11 14-13 10-3-3 0-20-1-30 0-9-4-22-2-27 1-4 9 0 13-2 6-2 17-8 21-12 3-2 5-8 4-10s-7-4-10-3l-18 12c-3 0-5-5-4-7 1-3 12-7 10-11s-14-10-21-11-18 0-22 2Z" fill="#b14d04"/>
<path d="M483 386c-11 5-14 9-16 8-2-2 1-11 11-15 8-3 15-6 16-3 1 2-4 7-11 10ZM555 373c-11 5-20 6-21 5-2-1 10-7 19-12 7-3 11-6 12-3 1 2-4 7-10 10ZM553 445l-6 4c-2 0-2-9 0-10 2-2 11-3 11 0l-5 6ZM454 497c-8 9-9 12-11 11s-1-8 3-13c5-5 26-28 27-25 2 2-13 22-19 27Z" fill="#fed1aa"/>
</g>
<linearGradient id="a" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="scale(778.973) rotate(68 -3 2)">
<stop offset="0" stop-color="#ffbd44"/>
<stop offset=".5" stop-color="#dc8912"/>
<stop offset="1" stop-color="#d07600"/>
</linearGradient>
<linearGradient id="b" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="scale(499.109) rotate(51 -6 4)">
<stop offset="0" stop-color="#bf5802"/>
<stop offset="1" stop-color="#9e3d06"/>
</linearGradient>
<filter id="g0" x="0" y="0%" width="100%" height="24%">
      <feFlood flood-color="hsl(2197deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="2" dy="0" result="a"/>
      <feOffset in="SourceGraphic" dx="2" dy="0" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g1" x="0" y="24%" width="100%" height="39%">
      <feFlood flood-color="hsl(1331deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="-3" dy="-3" result="a"/>
      <feOffset in="SourceGraphic" dx="13" dy="1" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g2" x="0" y="63%" width="100%" height="1%">
      <feFlood flood-color="hsl(1331deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="-22" dy="-3" result="a"/>
      <feOffset in="SourceGraphic" dx="26" dy="1" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g3" x="0" y="64%" width="100%" height="23%">
      <feFlood flood-color="hsl(1331deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="-3" dy="-3" result="a"/>
      <feOffset in="SourceGraphic" dx="13" dy="1" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g4" x="0" y="87%" width="100%" height="20%">
      <feFlood flood-color="hsl(0deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="-1" dy="3" result="a"/>
      <feOffset in="SourceGraphic" dx="15" dy="3" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g5" x="0" y="107%" width="100%" height="33%">
      <feFlood flood-color="hsl(2197deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="13" dy="-1" result="a"/>
      <feOffset in="SourceGraphic" dx="13" dy="3" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g6" x="0" y="140%" width="100%" height="1%">
      <feFlood flood-color="hsl(2197deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="62" dy="-1" result="a"/>
      <feOffset in="SourceGraphic" dx="26" dy="3" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g7" x="0" y="141%" width="100%" height="22%">
      <feFlood flood-color="hsl(2197deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="13" dy="-1" result="a"/>
      <feOffset in="SourceGraphic" dx="13" dy="3" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter></defs></svg>
'''
'''--- frontend/assets/e_7.svg ---
<svg viewBox="0 0 1080 1080" xmlns="http://www.w3.org/2000/svg" xml:space="preserve" fill-rule="evenodd" clip-rule="evenodd" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.6">
<path fill="none" d="M0 0h1080v1080H0z"/>
<path d="M462 944c-13 4-27 7-42 7-43 0-79-21-97-51V695c17 30 54 51 97 51 15 0 29-3 42-8v206ZM846 639a99 99 0 0 0 80-102c8-13 13-29 14-45v188a108 108 0 0 1-13 62c3 37-18 74-55 93-8 5-17 8-25 10l-1-206Z" fill="#7f3a01" stroke="#d28827" stroke-width="4"/>
<path d="M847 845a104 104 0 0 1-110 73V711c19 2 40-2 58-12 26-13 44-36 51-61l1 206ZM737 917a103 103 0 0 1-137 32V745c20 12 46 17 73 11s50-22 64-43v205ZM600 950c-18 14-40 23-66 23-28 0-54-12-72-29V738c18 18 44 29 72 29 25 0 48-8 66-23v206ZM322 900c-48-2-87-41-93-89V605c5 49 45 87 93 90v205ZM229 810a101 101 0 0 1-61-98c-7-13-12-28-12-44h0v-1a107 107 0 0 1 0-8V465c1 15 5 29 12 42v4c0 42 25 78 61 93v206Z" fill="#7f3a01" stroke="#d28827" stroke-width="4"/>
<path d="M528 3074c18-15 43-24 69-23 31 1 58 15 76 37 19-4 40-2 60 7 23 10 41 28 52 49a99 99 0 0 1 89 79 98 98 0 0 1 59 106 105 105 0 0 1 0 104c2 36-18 73-55 93-8 4-17 7-26 9-7 25-25 47-51 61-19 10-39 14-58 12-14 21-37 37-65 43-26 6-52 1-73-11-17 14-40 23-65 23-28 0-54-11-72-29-13 5-28 7-43 7-42 0-79-20-97-51-48-2-87-40-93-89a101 101 0 0 1-61-98 103 103 0 0 1 17-121c2-48 36-87 81-96 8-24 27-47 53-61 21-12 43-17 64-15 13-21 35-38 61-45 28-7 56-3 78 9Z" fill="url(#a)" transform="translate(-7 -2895)"/>
<path d="M520 207c15-14 38-22 63-22 32 0 59 15 72 36 16-13 43-17 69-7 24 10 41 28 45 46 25-1 52 9 72 31 15 15 24 34 27 52a71 71 0 0 1 38 103c13 10 22 25 21 41 0 24-18 44-43 52 15 18 19 43 8 64a57 57 0 0 1-49 30c-6 25-25 49-52 64-24 14-49 18-71 14-6 26-30 46-58 46-20 0-38-10-48-25a90 90 0 0 1-75 33c-35 0-65-18-78-43a59 59 0 0 1-48 24c-32 0-58-24-59-55-26 7-59-3-83-28a95 95 0 0 1-28-72c-22-6-38-20-42-40-3-17 5-34 19-46a62 62 0 0 1-29-53c0-22 13-41 33-52a57 57 0 0 1 57-86c2-24 24-52 58-68 21-10 43-15 61-13 10-18 30-33 55-39 24-5 48 1 65 13Zm-47 493a404 404 0 0 0 135 6 96 96 0 0 1-66 28c-28-1-55-15-69-34Zm229-18c-6 22-25 44-49 44-16 0-27-10-35-22 30-4 58-12 84-22Zm-321-15c25 13 54 24 84 31-9 11-21 19-37 19-27 0-45-25-47-50Zm426-52c-6 21-14 46-37 59-20 10-42 8-60 5 38-16 71-38 97-64Zm-45-4c-15 6-32 8-47 10-92 13-185 20-278 25l-26 2c44 19 95 30 150 29 79-2 151-27 201-66Zm-481-34c22 33 50 61 90 82-24 5-51 5-71-16-18-17-20-45-19-66Zm443-239c-58-2-222 14-333 25-33 4-36 15-33 46 6 55 9 111 16 165 2 14 2 30 12 39 12 10 31 5 47 4 92-9 181-13 273-24 14-2 34-6 42-17 11-15 8-36 7-55-2-49-7-98-15-146-2-13-3-37-16-37Zm134 202c10 15 11 31 3 48-9 15-32 22-50 23 20-21 36-45 47-71ZM325 367c-30 33-47 72-46 113 1 50 26 95 68 129l-3-29c-9-58-18-116-21-174 0-13-1-27 2-39Zm444-23c9 36 14 96 18 173 1 24 8 52-2 73 33-33 52-74 51-118-1-49-26-94-67-128ZM252 505c4 25 8 40 22 62-19-5-34-6-37-22-3-15 3-29 15-40Zm618-48c11 8 23 19 23 31-1 19-13 35-32 43a181 181 0 0 0 9-74Zm-610-40a181 181 0 0 0-8 86 54 54 0 0 1-25-45c1-18 17-32 33-41Zm575-53c19 7 39 19 45 39 4 15-4 30-11 43-5-30-16-57-34-82Zm-424-94c-71 30-125 81-148 140-9-16-15-39-3-54 12-16 31-23 49-20 2-22 22-46 52-60 17-8 34-7 50-6Zm415 81c-21-29-41-43-75-63 21-1 45 8 64 27 13 14 8 21 11 36Zm-121-47c-44-19-95-29-150-29-80 2-152 27-202 66l21-3c97-10 251-33 331-34Zm38-20c-29-17-55-26-91-34 15-9 36-10 57-2s30 19 34 36Zm-222-42c-36 4-70 12-101 25 9-16 25-33 46-37 20-4 40 3 55 12Zm122 6a405 405 0 0 0-114-6 82 82 0 0 1 114 6Z" fill="#421f02"/>
<path d="M516 3101c15-14 38-22 64-22 31 1 59 15 72 36 16-13 43-17 69-6 24 9 40 27 45 46 24-2 51 8 72 30 15 15 24 34 27 52a71 71 0 0 1 38 103c13 10 21 25 21 42 0 23-18 43-44 51 15 18 20 44 8 65a57 57 0 0 1-49 29c-6 25-24 49-51 65-24 13-50 17-72 13-5 26-29 46-57 46-20 0-38-10-49-25a90 90 0 0 1-74 34c-36-1-66-19-78-44a59 59 0 0 1-48 25c-32 0-58-25-59-56-27 7-60-3-84-28a95 95 0 0 1-27-72c-22-5-39-20-42-40-3-17 4-34 18-46a62 62 0 0 1-29-52c1-23 14-42 33-53a57 57 0 0 1 58-85c2-25 24-52 57-69 21-10 43-14 62-13 10-18 30-33 54-38 25-5 48 0 65 12Zm-46 493a404 404 0 0 0 134 6 96 96 0 0 1-65 28c-29 0-56-15-69-34Zm229-18c-6 22-25 45-49 45-16 0-27-11-36-23 30-4 59-12 85-22Zm-321-15c25 13 53 24 83 31-9 11-21 19-36 19-27 0-45-24-47-50Zm426-52c-6 21-15 46-38 59-19 11-41 8-60 5 38-16 71-38 98-64Zm-46-4c-14 6-31 8-46 10-92 14-185 21-278 25l-26 2c43 19 95 30 149 29 80-1 151-26 201-66Zm-479-30c22 33 54 61 93 83-23 4-55 0-76-21-17-17-18-42-17-62Zm441-243c-58-2-221 14-332 25-33 4-36 15-33 46 6 55 9 111 16 166 2 13 1 29 12 38 12 10 31 5 47 4 92-9 181-12 273-24 13-2 34-6 42-17 11-14 8-36 7-54-2-49-7-98-15-147-3-13-3-36-17-37Zm134 202c10 15 12 31 3 48-8 15-31 22-49 23 20-21 36-45 46-71Zm-532-173c-30 33-47 72-46 114 1 49 26 94 68 128l-3-29c-10-57-18-115-21-174-1-12-2-26 2-39Zm444-23c9 36 14 96 17 173 2 24 9 52-1 73 33-33 52-74 51-118-1-49-26-93-67-128Zm-517 161c4 25 13 49 27 71-19-5-39-15-42-31-3-14 3-29 15-40Zm618-48c11 9 22 19 22 32 0 18-13 34-31 42a181 181 0 0 0 9-74Zm-610-40a181 181 0 0 0-8 86 54 54 0 0 1-25-45c0-18 17-31 33-41Zm575-53c19 7 39 19 44 40 4 14-3 29-11 42-4-29-16-57-33-82Zm-425-93c-71 30-124 80-148 139-9-16-14-38-3-54 12-16 31-23 50-20 2-21 22-46 52-60 16-8 34-7 49-5Zm424 92c-20-29-49-54-84-74 22-2 46 8 65 26 13 14 17 32 19 48Zm-130-58c-43-20-95-30-150-29-79 1-151 26-201 66l21-4c97-9 250-32 330-33Zm45-17c-28-17-62-30-97-38 14-8 36-10 57-2s36 24 40 40Zm-228-45c-36 3-70 12-102 24 10-16 26-32 46-37 21-4 41 3 56 13Zm121 5a405 405 0 0 0-113-6 82 82 0 0 1 113 6Z" fill="url(#b)" transform="translate(-6 -2907)"/>
<path d="M207 423c-4 8-2 15-8 18-5 2-6-9-3-19 3-14 22-28 24-22 1 6-8 15-13 23ZM337 254c-24 14-43 34-46 30-4-4 13-26 34-38 31-17 56-16 52-11s-26 10-40 19ZM275 635c19 21 53 27 51 31-3 5-41 1-56-18-23-27-24-57-17-54 5 2 11 29 22 41ZM345 309l-12 10c-31 25-53 60-56 58-7-3 22-46 54-69 47-34 74-44 74-38 0 3-11 4-60 39ZM788 585l8-9c21-25 33-56 36-55 5 2-9 43-31 65-31 33-54 42-54 37 0-2 8-4 41-38ZM335 385c3 11 5 17 6 48 1 36 9 80 0 80-5 1-10-38-12-77-2-33-1-41 0-53 0-9 5-7 6 2ZM374 337c38-9 167-21 202-22 40 0 45 7-15 10-51 4-172 22-185 21-16-1-15-6-2-9ZM437 204c-27 9-33 24-35 20-4-5 11-22 34-31 16-6 39-7 34-2-5 4-17 7-33 13ZM559 188c-14 2-29 14-29 10-1-6 16-17 29-18 10 0 24 3 24 6l-24 2ZM238 334c-19 21-13 36-18 34s-10-24 8-40c14-13 28-18 32-13s-10 7-22 19Z" fill="#fed1aa"/>
<use href="#fa" filter="url(#g0)"/><use href="#fa" filter="url(#g1)"/><use href="#fa" filter="url(#g2)"/><use href="#fa" filter="url(#g3)"/><use href="#fa" filter="url(#g4)"/><defs>
<g id="fa">
<path d="M513 375c-8 2-41 6-43 22-2 14 30-2 35 2 4 3-2 15-7 20-6 4-19 4-25 6-5 1-13-1-14 2-1 4 4 15 8 17 4 3 18-6 18-1 1 6-9 24-16 33-6 9-17 16-21 24-3 5-12 11-12 16-1 3 6 6 6 7 0 2 5 1 8 0 3-2 10-6 13-10 5-4 9-11 13-17 6-7 13-19 19-24 4-3 14-6 17-5 2 1-1 8-3 11l-19 22c-2 2-11 2-13 4-1 2 6 6 7 7 2 1 15-5 18-4 4 1 4 7 2 9-3 5-16 11-19 17-2 2-8 5-8 8 0 2 6 5 7 6 1 3 6 2 9 1l18-13c3-1 8-3 10-2s2 5 1 8l-8 21c-2 3-5 7-8 6-3 0-7-11-11-10-4 0-16 8-13 14 2 5 21 18 28 20 6 1 12-6 15-10 6-9 13-34 21-42 6-6 23-8 27-5s1 17-4 22c-5 4-22 1-26 4-2 2-6 3-4 6l9 8c5 2 17 1 24-1 10-4 21-21 35-21 14 1 39 20 52 22 7 1 21-6 20-11 0-4-12-13-21-17-11-5-37-7-45-12-6-5-2-17-1-22 0-3 7-5 7-8-1-4-13-10-11-17 2-6 22-16 22-20 0-2-3-6-7-7-6-2-14 4-16 2-4-3-1-11-1-15 1-5 1-14 5-14 5 0 14 9 22 12s16 5 25 6c9 0 24 1 29-2 6-4 10-15 4-18-2-1-4-6-9-7-9-2-23 4-32 2-15-4-43-16-50-21-3-2 6-5 9-7l20-8c3-2 4-6 4-9s-3-5-6-8l-10-10c-9-1-24 30-34 34-6 4-21-4-21-7 1-4 20-9 25-12 2-1 6 0 6-2 0-5-2-21-7-24s-17 2-23 5c-8 5-15 17-22 20-5 4-14 4-19 3-4 0-5-8-9-6Zm84 131c-2-1-22 12-25 16-2 1 5 2 7 3 3 1 7 9 10 6s11-23 8-25Zm-74-105c-3 2-2 7-4 10-2 5-9 15-11 21-1 6-3 16 0 17 4 2 16-7 20-8l6 1c3 2 11 8 12 11 2 2 1 5-1 7l-12 15c-1 2-5 4-5 6s5 2 7 3c2 2 5 6 4 9-1 4-10 12-13 16-2 2-6 4-5 6 2 4 13 14 18 15 6 1 13-5 15-8 1-2-6-4-4-6 6-6 38-22 44-30 4-5-7-9-9-15-1-6 1-18-1-20-3-3-12 1-14 5-2 5 1 14 1 20-1 5-1 10-4 14s-11 14-13 10c-1-1-7-3-7-6 0-7 6-17 6-24 0-9-4-22-3-27 2-4 10 0 14-2 5-2 17-8 21-12 3-2 5-8 4-10-2-2-7-4-10-3-5 2-14 12-19 12-4 0-10-8-9-11s17-4 16-7-14-10-21-11c-8-1-18 0-23 2Z" fill="#431d02"/>
<path d="M507 369c-9 2-41 6-44 22-1 14 30-2 35 2 5 3-2 15-7 20-5 4-19 4-25 6-5 1-12-1-13 2-1 4 3 15 7 17 5 3 18-6 19-1 0 6-10 24-16 33s-18 16-22 24c-4 7-6 19-6 23 0 2 6 1 8 0l14-10 13-17c5-7 12-19 18-24 5-3 15-6 17-5s-1 8-3 11l-19 22c-3 3-8 10-6 11 3 1 15-5 19-4 3 1 3 7 1 9-2 5-15 11-19 17-3 4-2 12-1 14 1 3 6 2 9 1l18-13c3-1 9-3 10-2 2 1 2 5 1 8-1 5-5 16-8 21-2 3-5 7-8 6-3 0-6-11-10-11-4 1-16 9-14 15 3 5 21 18 28 20 6 1 12-6 15-10 6-9 13-34 21-42 7-6 24-8 28-5s1 17-4 22c-5 4-23 1-26 4-4 3 0 11 5 14 4 2 16 1 23-2 10-3 21-20 35-20 14 1 40 20 52 22 8 1 21-6 21-11-1-4-14-12-23-16-11-5-36-7-43-13-6-5-3-17-2-22 0-3 8-5 7-8-1-4-13-10-11-17 2-6 22-16 22-20s-19-1-23-5c-4-3-1-11 0-15 0-5 0-14 4-14 5 0 14 9 22 12s17 5 25 6c10 0 24 1 29-2 6-4 10-15 5-18-7-4-29-1-42-5-15-4-42-16-49-21-3-2 5-5 9-7 4-3 15-6 19-8 3-2 5-6 4-9 0-3-3-6-5-8s-5-7-7-5c-8 4-28 26-37 29-7 3-22-4-22-7 1-4 20-9 25-12 2-1 7 0 6-3 0-3-2-17-8-18-5-1-19 9-26 12-6 3-11 7-17 8-6 2-15 4-20 3-4 0-5-8-8-6Zm84 131c-3-1-23 12-26 15-2 2 5 3 7 4 3 1 7 9 10 6s12-23 9-25Zm-74-105c-4 2-3 7-5 10-2 5-9 15-10 21-2 6-4 16 0 17 3 2 15-7 19-8l6 1 13 11c1 2 0 5-1 7l-12 15c-2 2-6 4-6 6 1 2 6 2 7 3 2 2 6 6 5 9-2 4-11 12-14 16-1 2-6 4-5 6 3 4 13 14 18 15 6 1 13-5 15-8 2-2-6-4-4-6 7-6 38-23 44-30 4-5-7-9-8-15-2-6 1-18-2-20-2-3-11 1-14 5-2 5 1 14 1 20-1 5-1 10-4 14-2 4-11 14-13 10-3-3 0-20-1-30 0-9-4-22-2-27 1-4 9 0 13-2 6-2 17-8 21-12 3-2 5-8 4-10s-7-4-10-3l-18 12c-3 0-5-5-4-7 1-3 12-7 10-11s-14-10-21-11-18 0-22 2Z" fill="#b14d04"/>
<path d="M483 386c-11 5-14 9-16 8-2-2 1-11 11-15 8-3 15-6 16-3 1 2-4 7-11 10ZM555 373c-11 5-20 6-21 5-2-1 10-7 19-12 7-3 11-6 12-3 1 2-4 7-10 10ZM553 445l-6 4c-2 0-2-9 0-10 2-2 11-3 11 0l-5 6ZM454 497c-8 9-9 12-11 11s-1-8 3-13c5-5 26-28 27-25 2 2-13 22-19 27Z" fill="#fed1aa"/>
</g>
<linearGradient id="a" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="scale(778.973) rotate(68 -3 2)">
<stop offset="0" stop-color="#ffbd44"/>
<stop offset=".5" stop-color="#dc8912"/>
<stop offset="1" stop-color="#d07600"/>
</linearGradient>
<linearGradient id="b" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="scale(499.109) rotate(51 -6 4)">
<stop offset="0" stop-color="#bf5802"/>
<stop offset="1" stop-color="#9e3d06"/>
</linearGradient>
<filter id="g0" x="0" y="0%" width="100%" height="20%">
      <feFlood flood-color="hsl(8deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="-16" dy="0" result="a"/>
      <feOffset in="SourceGraphic" dx="0" dy="0" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g1" x="0" y="20%" width="100%" height="0%">
      <feFlood flood-color="hsl(8deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="15" dy="3" result="a"/>
      <feOffset in="SourceGraphic" dx="15" dy="3" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g2" x="0" y="20%" width="100%" height="9%">
      <feFlood flood-color="hsl(64deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="12" dy="-2" result="a"/>
      <feOffset in="SourceGraphic" dx="12" dy="2" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="191" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g3" x="0" y="29%" width="100%" height="33%">
      <feFlood flood-color="hsl(216deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="7" dy="-4" result="a"/>
      <feOffset in="SourceGraphic" dx="7" dy="0" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g4" x="0" y="62%" width="100%" height="38%">
      <feFlood flood-color="hsl(0deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="0" dy="0" result="a"/>
      <feOffset in="SourceGraphic" dx="0" dy="0" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter></defs></svg>
'''
'''--- frontend/assets/e_8.svg ---
<svg viewBox="0 0 1080 1080" xmlns="http://www.w3.org/2000/svg" xml:space="preserve" fill-rule="evenodd" clip-rule="evenodd" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.6">
<path fill="none" d="M0 0h1080v1080H0z"/>
<path d="M462 944c-13 4-27 7-42 7-43 0-79-21-97-51V695c17 30 54 51 97 51 15 0 29-3 42-8v206ZM846 639a99 99 0 0 0 80-102c8-13 13-29 14-45v188a108 108 0 0 1-13 62c3 37-18 74-55 93-8 5-17 8-25 10l-1-206Z" fill="#7f3a01" stroke="#d28827" stroke-width="4"/>
<path d="M847 845a104 104 0 0 1-110 73V711c19 2 40-2 58-12 26-13 44-36 51-61l1 206ZM737 917a103 103 0 0 1-137 32V745c20 12 46 17 73 11s50-22 64-43v205ZM600 950c-18 14-40 23-66 23-28 0-54-12-72-29V738c18 18 44 29 72 29 25 0 48-8 66-23v206ZM322 900c-48-2-87-41-93-89V605c5 49 45 87 93 90v205ZM229 810a101 101 0 0 1-61-98c-7-13-12-28-12-44h0v-1a107 107 0 0 1 0-8V465c1 15 5 29 12 42v4c0 42 25 78 61 93v206Z" fill="#7f3a01" stroke="#d28827" stroke-width="4"/>
<path d="M528 3074c18-15 43-24 69-23 31 1 58 15 76 37 19-4 40-2 60 7 23 10 41 28 52 49a99 99 0 0 1 89 79 98 98 0 0 1 59 106 105 105 0 0 1 0 104c2 36-18 73-55 93-8 4-17 7-26 9-7 25-25 47-51 61-19 10-39 14-58 12-14 21-37 37-65 43-26 6-52 1-73-11-17 14-40 23-65 23-28 0-54-11-72-29-13 5-28 7-43 7-42 0-79-20-97-51-48-2-87-40-93-89a101 101 0 0 1-61-98 103 103 0 0 1 17-121c2-48 36-87 81-96 8-24 27-47 53-61 21-12 43-17 64-15 13-21 35-38 61-45 28-7 56-3 78 9Z" fill="url(#a)" transform="translate(-7 -2895)"/>
<path d="M520 207c15-14 38-22 63-22 32 0 59 15 72 36 16-13 43-17 69-7 24 10 41 28 45 46 25-1 52 9 72 31 15 15 24 34 27 52a71 71 0 0 1 38 103c13 10 22 25 21 41 0 24-18 44-43 52 15 18 19 43 8 64a57 57 0 0 1-49 30c-6 25-25 49-52 64-24 14-49 18-71 14-6 26-30 46-58 46-20 0-38-10-48-25a90 90 0 0 1-75 33c-35 0-65-18-78-43a59 59 0 0 1-48 24c-32 0-58-24-59-55-26 7-59-3-83-28a95 95 0 0 1-28-72c-22-6-38-20-42-40-3-17 5-34 19-46a62 62 0 0 1-29-53c0-22 13-41 33-52a57 57 0 0 1 57-86c2-24 24-52 58-68 21-10 43-15 61-13 10-18 30-33 55-39 24-5 48 1 65 13Zm-47 493a404 404 0 0 0 135 6 96 96 0 0 1-66 28c-28-1-55-15-69-34Zm229-18c-6 22-25 44-49 44-16 0-27-10-35-22 30-4 58-12 84-22Zm-321-15c25 13 54 24 84 31-9 11-21 19-37 19-27 0-45-25-47-50Zm426-52c-6 21-14 46-37 59-20 10-42 8-60 5 38-16 71-38 97-64Zm-45-4c-15 6-32 8-47 10-92 13-185 20-278 25l-26 2c44 19 95 30 150 29 79-2 151-27 201-66Zm-481-34c22 33 50 61 90 82-24 5-51 5-71-16-18-17-20-45-19-66Zm443-239c-58-2-222 14-333 25-33 4-36 15-33 46 6 55 9 111 16 165 2 14 2 30 12 39 12 10 31 5 47 4 92-9 181-13 273-24 14-2 34-6 42-17 11-15 8-36 7-55-2-49-7-98-15-146-2-13-3-37-16-37Zm134 202c10 15 11 31 3 48-9 15-32 22-50 23 20-21 36-45 47-71ZM325 367c-30 33-47 72-46 113 1 50 26 95 68 129l-3-29c-9-58-18-116-21-174 0-13-1-27 2-39Zm444-23c9 36 14 96 18 173 1 24 8 52-2 73 33-33 52-74 51-118-1-49-26-94-67-128ZM252 505c4 25 8 40 22 62-19-5-34-6-37-22-3-15 3-29 15-40Zm618-48c11 8 23 19 23 31-1 19-13 35-32 43a181 181 0 0 0 9-74Zm-610-40a181 181 0 0 0-8 86 54 54 0 0 1-25-45c1-18 17-32 33-41Zm575-53c19 7 39 19 45 39 4 15-4 30-11 43-5-30-16-57-34-82Zm-424-94c-71 30-125 81-148 140-9-16-15-39-3-54 12-16 31-23 49-20 2-22 22-46 52-60 17-8 34-7 50-6Zm415 81c-21-29-41-43-75-63 21-1 45 8 64 27 13 14 8 21 11 36Zm-121-47c-44-19-95-29-150-29-80 2-152 27-202 66l21-3c97-10 251-33 331-34Zm38-20c-29-17-55-26-91-34 15-9 36-10 57-2s30 19 34 36Zm-222-42c-36 4-70 12-101 25 9-16 25-33 46-37 20-4 40 3 55 12Zm122 6a405 405 0 0 0-114-6 82 82 0 0 1 114 6Z" fill="#421f02"/>
<path d="M516 3101c15-14 38-22 64-22 31 1 59 15 72 36 16-13 43-17 69-6 24 9 40 27 45 46 24-2 51 8 72 30 15 15 24 34 27 52a71 71 0 0 1 38 103c13 10 21 25 21 42 0 23-18 43-44 51 15 18 20 44 8 65a57 57 0 0 1-49 29c-6 25-24 49-51 65-24 13-50 17-72 13-5 26-29 46-57 46-20 0-38-10-49-25a90 90 0 0 1-74 34c-36-1-66-19-78-44a59 59 0 0 1-48 25c-32 0-58-25-59-56-27 7-60-3-84-28a95 95 0 0 1-27-72c-22-5-39-20-42-40-3-17 4-34 18-46a62 62 0 0 1-29-52c1-23 14-42 33-53a57 57 0 0 1 58-85c2-25 24-52 57-69 21-10 43-14 62-13 10-18 30-33 54-38 25-5 48 0 65 12Zm-46 493a404 404 0 0 0 134 6 96 96 0 0 1-65 28c-29 0-56-15-69-34Zm229-18c-6 22-25 45-49 45-16 0-27-11-36-23 30-4 59-12 85-22Zm-321-15c25 13 53 24 83 31-9 11-21 19-36 19-27 0-45-24-47-50Zm426-52c-6 21-15 46-38 59-19 11-41 8-60 5 38-16 71-38 98-64Zm-46-4c-14 6-31 8-46 10-92 14-185 21-278 25l-26 2c43 19 95 30 149 29 80-1 151-26 201-66Zm-479-30c22 33 54 61 93 83-23 4-55 0-76-21-17-17-18-42-17-62Zm441-243c-58-2-221 14-332 25-33 4-36 15-33 46 6 55 9 111 16 166 2 13 1 29 12 38 12 10 31 5 47 4 92-9 181-12 273-24 13-2 34-6 42-17 11-14 8-36 7-54-2-49-7-98-15-147-3-13-3-36-17-37Zm134 202c10 15 12 31 3 48-8 15-31 22-49 23 20-21 36-45 46-71Zm-532-173c-30 33-47 72-46 114 1 49 26 94 68 128l-3-29c-10-57-18-115-21-174-1-12-2-26 2-39Zm444-23c9 36 14 96 17 173 2 24 9 52-1 73 33-33 52-74 51-118-1-49-26-93-67-128Zm-517 161c4 25 13 49 27 71-19-5-39-15-42-31-3-14 3-29 15-40Zm618-48c11 9 22 19 22 32 0 18-13 34-31 42a181 181 0 0 0 9-74Zm-610-40a181 181 0 0 0-8 86 54 54 0 0 1-25-45c0-18 17-31 33-41Zm575-53c19 7 39 19 44 40 4 14-3 29-11 42-4-29-16-57-33-82Zm-425-93c-71 30-124 80-148 139-9-16-14-38-3-54 12-16 31-23 50-20 2-21 22-46 52-60 16-8 34-7 49-5Zm424 92c-20-29-49-54-84-74 22-2 46 8 65 26 13 14 17 32 19 48Zm-130-58c-43-20-95-30-150-29-79 1-151 26-201 66l21-4c97-9 250-32 330-33Zm45-17c-28-17-62-30-97-38 14-8 36-10 57-2s36 24 40 40Zm-228-45c-36 3-70 12-102 24 10-16 26-32 46-37 21-4 41 3 56 13Zm121 5a405 405 0 0 0-113-6 82 82 0 0 1 113 6Z" fill="url(#b)" transform="translate(-6 -2907)"/>
<path d="M207 423c-4 8-2 15-8 18-5 2-6-9-3-19 3-14 22-28 24-22 1 6-8 15-13 23ZM337 254c-24 14-43 34-46 30-4-4 13-26 34-38 31-17 56-16 52-11s-26 10-40 19ZM275 635c19 21 53 27 51 31-3 5-41 1-56-18-23-27-24-57-17-54 5 2 11 29 22 41ZM345 309l-12 10c-31 25-53 60-56 58-7-3 22-46 54-69 47-34 74-44 74-38 0 3-11 4-60 39ZM788 585l8-9c21-25 33-56 36-55 5 2-9 43-31 65-31 33-54 42-54 37 0-2 8-4 41-38ZM335 385c3 11 5 17 6 48 1 36 9 80 0 80-5 1-10-38-12-77-2-33-1-41 0-53 0-9 5-7 6 2ZM374 337c38-9 167-21 202-22 40 0 45 7-15 10-51 4-172 22-185 21-16-1-15-6-2-9ZM437 204c-27 9-33 24-35 20-4-5 11-22 34-31 16-6 39-7 34-2-5 4-17 7-33 13ZM559 188c-14 2-29 14-29 10-1-6 16-17 29-18 10 0 24 3 24 6l-24 2ZM238 334c-19 21-13 36-18 34s-10-24 8-40c14-13 28-18 32-13s-10 7-22 19Z" fill="#fed1aa"/>
<use href="#fa" filter="url(#g0)"/><use href="#fa" filter="url(#g1)"/><use href="#fa" filter="url(#g2)"/><use href="#fa" filter="url(#g3)"/><use href="#fa" filter="url(#g4)"/><use href="#fa" filter="url(#g5)"/><use href="#fa" filter="url(#g6)"/><defs>
<g id="fa">
<path d="M513 375c-8 2-41 6-43 22-2 14 30-2 35 2 4 3-2 15-7 20-6 4-19 4-25 6-5 1-13-1-14 2-1 4 4 15 8 17 4 3 18-6 18-1 1 6-9 24-16 33-6 9-17 16-21 24-3 5-12 11-12 16-1 3 6 6 6 7 0 2 5 1 8 0 3-2 10-6 13-10 5-4 9-11 13-17 6-7 13-19 19-24 4-3 14-6 17-5 2 1-1 8-3 11l-19 22c-2 2-11 2-13 4-1 2 6 6 7 7 2 1 15-5 18-4 4 1 4 7 2 9-3 5-16 11-19 17-2 2-8 5-8 8 0 2 6 5 7 6 1 3 6 2 9 1l18-13c3-1 8-3 10-2s2 5 1 8l-8 21c-2 3-5 7-8 6-3 0-7-11-11-10-4 0-16 8-13 14 2 5 21 18 28 20 6 1 12-6 15-10 6-9 13-34 21-42 6-6 23-8 27-5s1 17-4 22c-5 4-22 1-26 4-2 2-6 3-4 6l9 8c5 2 17 1 24-1 10-4 21-21 35-21 14 1 39 20 52 22 7 1 21-6 20-11 0-4-12-13-21-17-11-5-37-7-45-12-6-5-2-17-1-22 0-3 7-5 7-8-1-4-13-10-11-17 2-6 22-16 22-20 0-2-3-6-7-7-6-2-14 4-16 2-4-3-1-11-1-15 1-5 1-14 5-14 5 0 14 9 22 12s16 5 25 6c9 0 24 1 29-2 6-4 10-15 4-18-2-1-4-6-9-7-9-2-23 4-32 2-15-4-43-16-50-21-3-2 6-5 9-7l20-8c3-2 4-6 4-9s-3-5-6-8l-10-10c-9-1-24 30-34 34-6 4-21-4-21-7 1-4 20-9 25-12 2-1 6 0 6-2 0-5-2-21-7-24s-17 2-23 5c-8 5-15 17-22 20-5 4-14 4-19 3-4 0-5-8-9-6Zm84 131c-2-1-22 12-25 16-2 1 5 2 7 3 3 1 7 9 10 6s11-23 8-25Zm-74-105c-3 2-2 7-4 10-2 5-9 15-11 21-1 6-3 16 0 17 4 2 16-7 20-8l6 1c3 2 11 8 12 11 2 2 1 5-1 7l-12 15c-1 2-5 4-5 6s5 2 7 3c2 2 5 6 4 9-1 4-10 12-13 16-2 2-6 4-5 6 2 4 13 14 18 15 6 1 13-5 15-8 1-2-6-4-4-6 6-6 38-22 44-30 4-5-7-9-9-15-1-6 1-18-1-20-3-3-12 1-14 5-2 5 1 14 1 20-1 5-1 10-4 14s-11 14-13 10c-1-1-7-3-7-6 0-7 6-17 6-24 0-9-4-22-3-27 2-4 10 0 14-2 5-2 17-8 21-12 3-2 5-8 4-10-2-2-7-4-10-3-5 2-14 12-19 12-4 0-10-8-9-11s17-4 16-7-14-10-21-11c-8-1-18 0-23 2Z" fill="#431d02"/>
<path d="M507 369c-9 2-41 6-44 22-1 14 30-2 35 2 5 3-2 15-7 20-5 4-19 4-25 6-5 1-12-1-13 2-1 4 3 15 7 17 5 3 18-6 19-1 0 6-10 24-16 33s-18 16-22 24c-4 7-6 19-6 23 0 2 6 1 8 0l14-10 13-17c5-7 12-19 18-24 5-3 15-6 17-5s-1 8-3 11l-19 22c-3 3-8 10-6 11 3 1 15-5 19-4 3 1 3 7 1 9-2 5-15 11-19 17-3 4-2 12-1 14 1 3 6 2 9 1l18-13c3-1 9-3 10-2 2 1 2 5 1 8-1 5-5 16-8 21-2 3-5 7-8 6-3 0-6-11-10-11-4 1-16 9-14 15 3 5 21 18 28 20 6 1 12-6 15-10 6-9 13-34 21-42 7-6 24-8 28-5s1 17-4 22c-5 4-23 1-26 4-4 3 0 11 5 14 4 2 16 1 23-2 10-3 21-20 35-20 14 1 40 20 52 22 8 1 21-6 21-11-1-4-14-12-23-16-11-5-36-7-43-13-6-5-3-17-2-22 0-3 8-5 7-8-1-4-13-10-11-17 2-6 22-16 22-20s-19-1-23-5c-4-3-1-11 0-15 0-5 0-14 4-14 5 0 14 9 22 12s17 5 25 6c10 0 24 1 29-2 6-4 10-15 5-18-7-4-29-1-42-5-15-4-42-16-49-21-3-2 5-5 9-7 4-3 15-6 19-8 3-2 5-6 4-9 0-3-3-6-5-8s-5-7-7-5c-8 4-28 26-37 29-7 3-22-4-22-7 1-4 20-9 25-12 2-1 7 0 6-3 0-3-2-17-8-18-5-1-19 9-26 12-6 3-11 7-17 8-6 2-15 4-20 3-4 0-5-8-8-6Zm84 131c-3-1-23 12-26 15-2 2 5 3 7 4 3 1 7 9 10 6s12-23 9-25Zm-74-105c-4 2-3 7-5 10-2 5-9 15-10 21-2 6-4 16 0 17 3 2 15-7 19-8l6 1 13 11c1 2 0 5-1 7l-12 15c-2 2-6 4-6 6 1 2 6 2 7 3 2 2 6 6 5 9-2 4-11 12-14 16-1 2-6 4-5 6 3 4 13 14 18 15 6 1 13-5 15-8 2-2-6-4-4-6 7-6 38-23 44-30 4-5-7-9-8-15-2-6 1-18-2-20-2-3-11 1-14 5-2 5 1 14 1 20-1 5-1 10-4 14-2 4-11 14-13 10-3-3 0-20-1-30 0-9-4-22-2-27 1-4 9 0 13-2 6-2 17-8 21-12 3-2 5-8 4-10s-7-4-10-3l-18 12c-3 0-5-5-4-7 1-3 12-7 10-11s-14-10-21-11-18 0-22 2Z" fill="#b14d04"/>
<path d="M483 386c-11 5-14 9-16 8-2-2 1-11 11-15 8-3 15-6 16-3 1 2-4 7-11 10ZM555 373c-11 5-20 6-21 5-2-1 10-7 19-12 7-3 11-6 12-3 1 2-4 7-10 10ZM553 445l-6 4c-2 0-2-9 0-10 2-2 11-3 11 0l-5 6ZM454 497c-8 9-9 12-11 11s-1-8 3-13c5-5 26-28 27-25 2 2-13 22-19 27Z" fill="#fed1aa"/>
</g>
<linearGradient id="a" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="scale(778.973) rotate(68 -3 2)">
<stop offset="0" stop-color="#ffbd44"/>
<stop offset=".5" stop-color="#dc8912"/>
<stop offset="1" stop-color="#d07600"/>
</linearGradient>
<linearGradient id="b" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="scale(499.109) rotate(51 -6 4)">
<stop offset="0" stop-color="#bf5802"/>
<stop offset="1" stop-color="#9e3d06"/>
</linearGradient>
<filter id="g0" x="0" y="0%" width="100%" height="34%">
      <feFlood flood-color="hsl(8deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="-8" dy="1" result="a"/>
      <feOffset in="SourceGraphic" dx="8" dy="1" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g1" x="0" y="34%" width="100%" height="2%">
      <feFlood flood-color="hsl(343deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="8" dy="1" result="a"/>
      <feOffset in="SourceGraphic" dx="8" dy="1" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="47" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g2" x="0" y="36%" width="100%" height="2%">
      <feFlood flood-color="hsl(729deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="9" dy="-2" result="a"/>
      <feOffset in="SourceGraphic" dx="9" dy="2" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g3" x="0" y="38%" width="100%" height="29%">
      <feFlood flood-color="hsl(64deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="-4" dy="0" result="a"/>
      <feOffset in="SourceGraphic" dx="12" dy="0" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g4" x="0" y="67%" width="100%" height="1%">
      <feFlood flood-color="hsl(64deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="-26" dy="0" result="a"/>
      <feOffset in="SourceGraphic" dx="24" dy="0" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g5" x="0" y="68%" width="100%" height="31%">
      <feFlood flood-color="hsl(64deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="-4" dy="0" result="a"/>
      <feOffset in="SourceGraphic" dx="12" dy="0" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g6" x="0" y="99%" width="100%" height="1%">
      <feFlood flood-color="hsl(0deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="0" dy="0" result="a"/>
      <feOffset in="SourceGraphic" dx="0" dy="0" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter></defs></svg>
'''
'''--- frontend/assets/e_9.svg ---
<svg viewBox="0 0 1080 1080" xmlns="http://www.w3.org/2000/svg" xml:space="preserve" fill-rule="evenodd" clip-rule="evenodd" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.6">
<path fill="none" d="M0 0h1080v1080H0z"/>
<path d="M462 944c-13 4-27 7-42 7-43 0-79-21-97-51V695c17 30 54 51 97 51 15 0 29-3 42-8v206ZM846 639a99 99 0 0 0 80-102c8-13 13-29 14-45v188a108 108 0 0 1-13 62c3 37-18 74-55 93-8 5-17 8-25 10l-1-206Z" fill="#7f3a01" stroke="#d28827" stroke-width="4"/>
<path d="M847 845a104 104 0 0 1-110 73V711c19 2 40-2 58-12 26-13 44-36 51-61l1 206ZM737 917a103 103 0 0 1-137 32V745c20 12 46 17 73 11s50-22 64-43v205ZM600 950c-18 14-40 23-66 23-28 0-54-12-72-29V738c18 18 44 29 72 29 25 0 48-8 66-23v206ZM322 900c-48-2-87-41-93-89V605c5 49 45 87 93 90v205ZM229 810a101 101 0 0 1-61-98c-7-13-12-28-12-44h0v-1a107 107 0 0 1 0-8V465c1 15 5 29 12 42v4c0 42 25 78 61 93v206Z" fill="#7f3a01" stroke="#d28827" stroke-width="4"/>
<path d="M528 3074c18-15 43-24 69-23 31 1 58 15 76 37 19-4 40-2 60 7 23 10 41 28 52 49a99 99 0 0 1 89 79 98 98 0 0 1 59 106 105 105 0 0 1 0 104c2 36-18 73-55 93-8 4-17 7-26 9-7 25-25 47-51 61-19 10-39 14-58 12-14 21-37 37-65 43-26 6-52 1-73-11-17 14-40 23-65 23-28 0-54-11-72-29-13 5-28 7-43 7-42 0-79-20-97-51-48-2-87-40-93-89a101 101 0 0 1-61-98 103 103 0 0 1 17-121c2-48 36-87 81-96 8-24 27-47 53-61 21-12 43-17 64-15 13-21 35-38 61-45 28-7 56-3 78 9Z" fill="url(#a)" transform="translate(-7 -2895)"/>
<path d="M520 207c15-14 38-22 63-22 32 0 59 15 72 36 16-13 43-17 69-7 24 10 41 28 45 46 25-1 52 9 72 31 15 15 24 34 27 52a71 71 0 0 1 38 103c13 10 22 25 21 41 0 24-18 44-43 52 15 18 19 43 8 64a57 57 0 0 1-49 30c-6 25-25 49-52 64-24 14-49 18-71 14-6 26-30 46-58 46-20 0-38-10-48-25a90 90 0 0 1-75 33c-35 0-65-18-78-43a59 59 0 0 1-48 24c-32 0-58-24-59-55-26 7-59-3-83-28a95 95 0 0 1-28-72c-22-6-38-20-42-40-3-17 5-34 19-46a62 62 0 0 1-29-53c0-22 13-41 33-52a57 57 0 0 1 57-86c2-24 24-52 58-68 21-10 43-15 61-13 10-18 30-33 55-39 24-5 48 1 65 13Zm-47 493a404 404 0 0 0 135 6 96 96 0 0 1-66 28c-28-1-55-15-69-34Zm229-18c-6 22-25 44-49 44-16 0-27-10-35-22 30-4 58-12 84-22Zm-321-15c25 13 54 24 84 31-9 11-21 19-37 19-27 0-45-25-47-50Zm426-52c-6 21-14 46-37 59-20 10-42 8-60 5 38-16 71-38 97-64Zm-45-4c-15 6-32 8-47 10-92 13-185 20-278 25l-26 2c44 19 95 30 150 29 79-2 151-27 201-66Zm-481-34c22 33 50 61 90 82-24 5-51 5-71-16-18-17-20-45-19-66Zm443-239c-58-2-222 14-333 25-33 4-36 15-33 46 6 55 9 111 16 165 2 14 2 30 12 39 12 10 31 5 47 4 92-9 181-13 273-24 14-2 34-6 42-17 11-15 8-36 7-55-2-49-7-98-15-146-2-13-3-37-16-37Zm134 202c10 15 11 31 3 48-9 15-32 22-50 23 20-21 36-45 47-71ZM325 367c-30 33-47 72-46 113 1 50 26 95 68 129l-3-29c-9-58-18-116-21-174 0-13-1-27 2-39Zm444-23c9 36 14 96 18 173 1 24 8 52-2 73 33-33 52-74 51-118-1-49-26-94-67-128ZM252 505c4 25 8 40 22 62-19-5-34-6-37-22-3-15 3-29 15-40Zm618-48c11 8 23 19 23 31-1 19-13 35-32 43a181 181 0 0 0 9-74Zm-610-40a181 181 0 0 0-8 86 54 54 0 0 1-25-45c1-18 17-32 33-41Zm575-53c19 7 39 19 45 39 4 15-4 30-11 43-5-30-16-57-34-82Zm-424-94c-71 30-125 81-148 140-9-16-15-39-3-54 12-16 31-23 49-20 2-22 22-46 52-60 17-8 34-7 50-6Zm415 81c-21-29-41-43-75-63 21-1 45 8 64 27 13 14 8 21 11 36Zm-121-47c-44-19-95-29-150-29-80 2-152 27-202 66l21-3c97-10 251-33 331-34Zm38-20c-29-17-55-26-91-34 15-9 36-10 57-2s30 19 34 36Zm-222-42c-36 4-70 12-101 25 9-16 25-33 46-37 20-4 40 3 55 12Zm122 6a405 405 0 0 0-114-6 82 82 0 0 1 114 6Z" fill="#421f02"/>
<path d="M516 3101c15-14 38-22 64-22 31 1 59 15 72 36 16-13 43-17 69-6 24 9 40 27 45 46 24-2 51 8 72 30 15 15 24 34 27 52a71 71 0 0 1 38 103c13 10 21 25 21 42 0 23-18 43-44 51 15 18 20 44 8 65a57 57 0 0 1-49 29c-6 25-24 49-51 65-24 13-50 17-72 13-5 26-29 46-57 46-20 0-38-10-49-25a90 90 0 0 1-74 34c-36-1-66-19-78-44a59 59 0 0 1-48 25c-32 0-58-25-59-56-27 7-60-3-84-28a95 95 0 0 1-27-72c-22-5-39-20-42-40-3-17 4-34 18-46a62 62 0 0 1-29-52c1-23 14-42 33-53a57 57 0 0 1 58-85c2-25 24-52 57-69 21-10 43-14 62-13 10-18 30-33 54-38 25-5 48 0 65 12Zm-46 493a404 404 0 0 0 134 6 96 96 0 0 1-65 28c-29 0-56-15-69-34Zm229-18c-6 22-25 45-49 45-16 0-27-11-36-23 30-4 59-12 85-22Zm-321-15c25 13 53 24 83 31-9 11-21 19-36 19-27 0-45-24-47-50Zm426-52c-6 21-15 46-38 59-19 11-41 8-60 5 38-16 71-38 98-64Zm-46-4c-14 6-31 8-46 10-92 14-185 21-278 25l-26 2c43 19 95 30 149 29 80-1 151-26 201-66Zm-479-30c22 33 54 61 93 83-23 4-55 0-76-21-17-17-18-42-17-62Zm441-243c-58-2-221 14-332 25-33 4-36 15-33 46 6 55 9 111 16 166 2 13 1 29 12 38 12 10 31 5 47 4 92-9 181-12 273-24 13-2 34-6 42-17 11-14 8-36 7-54-2-49-7-98-15-147-3-13-3-36-17-37Zm134 202c10 15 12 31 3 48-8 15-31 22-49 23 20-21 36-45 46-71Zm-532-173c-30 33-47 72-46 114 1 49 26 94 68 128l-3-29c-10-57-18-115-21-174-1-12-2-26 2-39Zm444-23c9 36 14 96 17 173 2 24 9 52-1 73 33-33 52-74 51-118-1-49-26-93-67-128Zm-517 161c4 25 13 49 27 71-19-5-39-15-42-31-3-14 3-29 15-40Zm618-48c11 9 22 19 22 32 0 18-13 34-31 42a181 181 0 0 0 9-74Zm-610-40a181 181 0 0 0-8 86 54 54 0 0 1-25-45c0-18 17-31 33-41Zm575-53c19 7 39 19 44 40 4 14-3 29-11 42-4-29-16-57-33-82Zm-425-93c-71 30-124 80-148 139-9-16-14-38-3-54 12-16 31-23 50-20 2-21 22-46 52-60 16-8 34-7 49-5Zm424 92c-20-29-49-54-84-74 22-2 46 8 65 26 13 14 17 32 19 48Zm-130-58c-43-20-95-30-150-29-79 1-151 26-201 66l21-4c97-9 250-32 330-33Zm45-17c-28-17-62-30-97-38 14-8 36-10 57-2s36 24 40 40Zm-228-45c-36 3-70 12-102 24 10-16 26-32 46-37 21-4 41 3 56 13Zm121 5a405 405 0 0 0-113-6 82 82 0 0 1 113 6Z" fill="url(#b)" transform="translate(-6 -2907)"/>
<path d="M207 423c-4 8-2 15-8 18-5 2-6-9-3-19 3-14 22-28 24-22 1 6-8 15-13 23ZM337 254c-24 14-43 34-46 30-4-4 13-26 34-38 31-17 56-16 52-11s-26 10-40 19ZM275 635c19 21 53 27 51 31-3 5-41 1-56-18-23-27-24-57-17-54 5 2 11 29 22 41ZM345 309l-12 10c-31 25-53 60-56 58-7-3 22-46 54-69 47-34 74-44 74-38 0 3-11 4-60 39ZM788 585l8-9c21-25 33-56 36-55 5 2-9 43-31 65-31 33-54 42-54 37 0-2 8-4 41-38ZM335 385c3 11 5 17 6 48 1 36 9 80 0 80-5 1-10-38-12-77-2-33-1-41 0-53 0-9 5-7 6 2ZM374 337c38-9 167-21 202-22 40 0 45 7-15 10-51 4-172 22-185 21-16-1-15-6-2-9ZM437 204c-27 9-33 24-35 20-4-5 11-22 34-31 16-6 39-7 34-2-5 4-17 7-33 13ZM559 188c-14 2-29 14-29 10-1-6 16-17 29-18 10 0 24 3 24 6l-24 2ZM238 334c-19 21-13 36-18 34s-10-24 8-40c14-13 28-18 32-13s-10 7-22 19Z" fill="#fed1aa"/>
<use href="#fa" filter="url(#g0)"/><use href="#fa" filter="url(#g1)"/><use href="#fa" filter="url(#g2)"/><use href="#fa" filter="url(#g3)"/><use href="#fa" filter="url(#g4)"/><use href="#fa" filter="url(#g5)"/><use href="#fa" filter="url(#g6)"/><use href="#fa" filter="url(#g7)"/><defs>
<g id="fa">
<path d="M513 375c-8 2-41 6-43 22-2 14 30-2 35 2 4 3-2 15-7 20-6 4-19 4-25 6-5 1-13-1-14 2-1 4 4 15 8 17 4 3 18-6 18-1 1 6-9 24-16 33-6 9-17 16-21 24-3 5-12 11-12 16-1 3 6 6 6 7 0 2 5 1 8 0 3-2 10-6 13-10 5-4 9-11 13-17 6-7 13-19 19-24 4-3 14-6 17-5 2 1-1 8-3 11l-19 22c-2 2-11 2-13 4-1 2 6 6 7 7 2 1 15-5 18-4 4 1 4 7 2 9-3 5-16 11-19 17-2 2-8 5-8 8 0 2 6 5 7 6 1 3 6 2 9 1l18-13c3-1 8-3 10-2s2 5 1 8l-8 21c-2 3-5 7-8 6-3 0-7-11-11-10-4 0-16 8-13 14 2 5 21 18 28 20 6 1 12-6 15-10 6-9 13-34 21-42 6-6 23-8 27-5s1 17-4 22c-5 4-22 1-26 4-2 2-6 3-4 6l9 8c5 2 17 1 24-1 10-4 21-21 35-21 14 1 39 20 52 22 7 1 21-6 20-11 0-4-12-13-21-17-11-5-37-7-45-12-6-5-2-17-1-22 0-3 7-5 7-8-1-4-13-10-11-17 2-6 22-16 22-20 0-2-3-6-7-7-6-2-14 4-16 2-4-3-1-11-1-15 1-5 1-14 5-14 5 0 14 9 22 12s16 5 25 6c9 0 24 1 29-2 6-4 10-15 4-18-2-1-4-6-9-7-9-2-23 4-32 2-15-4-43-16-50-21-3-2 6-5 9-7l20-8c3-2 4-6 4-9s-3-5-6-8l-10-10c-9-1-24 30-34 34-6 4-21-4-21-7 1-4 20-9 25-12 2-1 6 0 6-2 0-5-2-21-7-24s-17 2-23 5c-8 5-15 17-22 20-5 4-14 4-19 3-4 0-5-8-9-6Zm84 131c-2-1-22 12-25 16-2 1 5 2 7 3 3 1 7 9 10 6s11-23 8-25Zm-74-105c-3 2-2 7-4 10-2 5-9 15-11 21-1 6-3 16 0 17 4 2 16-7 20-8l6 1c3 2 11 8 12 11 2 2 1 5-1 7l-12 15c-1 2-5 4-5 6s5 2 7 3c2 2 5 6 4 9-1 4-10 12-13 16-2 2-6 4-5 6 2 4 13 14 18 15 6 1 13-5 15-8 1-2-6-4-4-6 6-6 38-22 44-30 4-5-7-9-9-15-1-6 1-18-1-20-3-3-12 1-14 5-2 5 1 14 1 20-1 5-1 10-4 14s-11 14-13 10c-1-1-7-3-7-6 0-7 6-17 6-24 0-9-4-22-3-27 2-4 10 0 14-2 5-2 17-8 21-12 3-2 5-8 4-10-2-2-7-4-10-3-5 2-14 12-19 12-4 0-10-8-9-11s17-4 16-7-14-10-21-11c-8-1-18 0-23 2Z" fill="#431d02"/>
<path d="M507 369c-9 2-41 6-44 22-1 14 30-2 35 2 5 3-2 15-7 20-5 4-19 4-25 6-5 1-12-1-13 2-1 4 3 15 7 17 5 3 18-6 19-1 0 6-10 24-16 33s-18 16-22 24c-4 7-6 19-6 23 0 2 6 1 8 0l14-10 13-17c5-7 12-19 18-24 5-3 15-6 17-5s-1 8-3 11l-19 22c-3 3-8 10-6 11 3 1 15-5 19-4 3 1 3 7 1 9-2 5-15 11-19 17-3 4-2 12-1 14 1 3 6 2 9 1l18-13c3-1 9-3 10-2 2 1 2 5 1 8-1 5-5 16-8 21-2 3-5 7-8 6-3 0-6-11-10-11-4 1-16 9-14 15 3 5 21 18 28 20 6 1 12-6 15-10 6-9 13-34 21-42 7-6 24-8 28-5s1 17-4 22c-5 4-23 1-26 4-4 3 0 11 5 14 4 2 16 1 23-2 10-3 21-20 35-20 14 1 40 20 52 22 8 1 21-6 21-11-1-4-14-12-23-16-11-5-36-7-43-13-6-5-3-17-2-22 0-3 8-5 7-8-1-4-13-10-11-17 2-6 22-16 22-20s-19-1-23-5c-4-3-1-11 0-15 0-5 0-14 4-14 5 0 14 9 22 12s17 5 25 6c10 0 24 1 29-2 6-4 10-15 5-18-7-4-29-1-42-5-15-4-42-16-49-21-3-2 5-5 9-7 4-3 15-6 19-8 3-2 5-6 4-9 0-3-3-6-5-8s-5-7-7-5c-8 4-28 26-37 29-7 3-22-4-22-7 1-4 20-9 25-12 2-1 7 0 6-3 0-3-2-17-8-18-5-1-19 9-26 12-6 3-11 7-17 8-6 2-15 4-20 3-4 0-5-8-8-6Zm84 131c-3-1-23 12-26 15-2 2 5 3 7 4 3 1 7 9 10 6s12-23 9-25Zm-74-105c-4 2-3 7-5 10-2 5-9 15-10 21-2 6-4 16 0 17 3 2 15-7 19-8l6 1 13 11c1 2 0 5-1 7l-12 15c-2 2-6 4-6 6 1 2 6 2 7 3 2 2 6 6 5 9-2 4-11 12-14 16-1 2-6 4-5 6 3 4 13 14 18 15 6 1 13-5 15-8 2-2-6-4-4-6 7-6 38-23 44-30 4-5-7-9-8-15-2-6 1-18-2-20-2-3-11 1-14 5-2 5 1 14 1 20-1 5-1 10-4 14-2 4-11 14-13 10-3-3 0-20-1-30 0-9-4-22-2-27 1-4 9 0 13-2 6-2 17-8 21-12 3-2 5-8 4-10s-7-4-10-3l-18 12c-3 0-5-5-4-7 1-3 12-7 10-11s-14-10-21-11-18 0-22 2Z" fill="#b14d04"/>
<path d="M483 386c-11 5-14 9-16 8-2-2 1-11 11-15 8-3 15-6 16-3 1 2-4 7-11 10ZM555 373c-11 5-20 6-21 5-2-1 10-7 19-12 7-3 11-6 12-3 1 2-4 7-10 10ZM553 445l-6 4c-2 0-2-9 0-10 2-2 11-3 11 0l-5 6ZM454 497c-8 9-9 12-11 11s-1-8 3-13c5-5 26-28 27-25 2 2-13 22-19 27Z" fill="#fed1aa"/>
</g>
<linearGradient id="a" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="scale(778.973) rotate(68 -3 2)">
<stop offset="0" stop-color="#ffbd44"/>
<stop offset=".5" stop-color="#dc8912"/>
<stop offset="1" stop-color="#d07600"/>
</linearGradient>
<linearGradient id="b" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="scale(499.109) rotate(51 -6 4)">
<stop offset="0" stop-color="#bf5802"/>
<stop offset="1" stop-color="#9e3d06"/>
</linearGradient>
<filter id="g0" x="0" y="0%" width="100%" height="16%">
      <feFlood flood-color="hsl(1331deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="12" dy="2" result="a"/>
      <feOffset in="SourceGraphic" dx="12" dy="2" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g1" x="0" y="16%" width="100%" height="0%">
      <feFlood flood-color="hsl(1331deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="58" dy="2" result="a"/>
      <feOffset in="SourceGraphic" dx="24" dy="2" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g2" x="0" y="16%" width="100%" height="44%">
      <feFlood flood-color="hsl(1331deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="12" dy="2" result="a"/>
      <feOffset in="SourceGraphic" dx="12" dy="2" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g3" x="0" y="60%" width="100%" height="9%">
      <feFlood flood-color="hsl(1728deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="-7" dy="-2" result="a"/>
      <feOffset in="SourceGraphic" dx="9" dy="2" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g4" x="0" y="69%" width="100%" height="4%">
      <feFlood flood-color="hsl(216deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="11" dy="2" result="a"/>
      <feOffset in="SourceGraphic" dx="11" dy="2" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g5" x="0" y="73%" width="100%" height="3%">
      <feFlood flood-color="hsl(216deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="54" dy="2" result="a"/>
      <feOffset in="SourceGraphic" dx="22" dy="2" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g6" x="0" y="76%" width="100%" height="35%">
      <feFlood flood-color="hsl(216deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="11" dy="2" result="a"/>
      <feOffset in="SourceGraphic" dx="11" dy="2" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter><filter id="g7" x="0" y="111%" width="100%" height="5%">
      <feFlood flood-color="hsl(512deg, 85%, 50%)" result="f" />
      <feOffset in="SourceGraphic" dx="-9" dy="1" result="a"/>
      <feOffset in="SourceGraphic" dx="7" dy="1" result="b"/>
      <feColorMatrix in="b" type="hueRotate" values="0" result="m"/>
      <feComposite in="f" in2="a" operator="in" result="c" />
      <feMerge>
        <feMergeNode in = "c" />
        <feMergeNode in = "m" />
      </feMerge>
    </filter></defs></svg>
'''
'''--- frontend/assets/facai.svg ---
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg width="100%" height="100%" viewBox="0 0 1080 1080" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" xmlns:serif="http://www.serif.com/" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:1.61585;">
    <g transform="matrix(1,0,0,1,0,-2910.32)">
        <g id="V3" transform="matrix(1,0,0,1,0,2910.32)">
            <rect x="0" y="0" width="1080" height="1080" style="fill:none;"/>
            <g id="Layer4" transform="matrix(1,0,0,1,0,-2910.32)">
                <g transform="matrix(1,0,0,1,-11.142,11.0403)">
                    <path d="M473.607,3843.08C460.574,3847.76 446.237,3850.35 431.189,3850.35C388.634,3850.35 351.757,3829.63 333.914,3799.47L333.701,3594.01C351.544,3624.17 388.421,3644.9 430.977,3644.9C446.024,3644.9 460.361,3642.31 473.395,3637.62L473.607,3843.08Z" style="fill:rgb(127,58,1);stroke:rgb(210,136,39);stroke-width:4px;"/>
                </g>
                <g transform="matrix(1,0,0,1,-11.3692,10.9118)">
                    <path d="M857.852,3538.67C866.568,3536.67 875.226,3533.51 883.589,3529.13C920.315,3509.88 940.833,3472.51 938.239,3436.25C945.854,3422.99 950.662,3407.61 951.743,3391.11L951.743,3579.64C952.081,3583.35 952.23,3587.11 952.178,3590.93C951.925,3609.57 946.927,3626.94 938.452,3641.71C941.045,3677.97 920.527,3715.33 883.802,3734.58C875.438,3738.97 866.781,3742.13 858.064,3744.12L857.852,3538.67Z" style="fill:rgb(127,58,1);stroke:rgb(210,136,39);stroke-width:4px;"/>
                </g>
                <g transform="matrix(1,0,0,1,-11.3692,10.9118)">
                    <path d="M858.064,3744.12C850.704,3768.96 832.869,3791.53 806.978,3805.11C788.093,3815.01 767.707,3818.66 748.506,3816.78L748.294,3611.32C767.495,3613.21 787.88,3609.55 806.766,3599.65C832.656,3586.08 850.491,3563.51 857.852,3538.67L858.064,3744.12Z" style="fill:rgb(127,58,1);stroke:rgb(210,136,39);stroke-width:4px;"/>
                </g>
                <g transform="matrix(1,0,0,1,-11.3692,10.9118)">
                    <path d="M748.506,3816.78C734.656,3837.81 711.985,3853.99 684.264,3859.99C657.958,3865.68 632.001,3861.14 611.204,3849.18L610.991,3643.73C631.788,3655.68 657.745,3660.23 684.052,3654.53C711.773,3648.54 734.443,3632.35 748.294,3611.32L748.506,3816.78Z" style="fill:rgb(127,58,1);stroke:rgb(210,136,39);stroke-width:4px;"/>
                </g>
                <g transform="matrix(1,0,0,1,-11.3692,10.9118)">
                    <path d="M611.204,3849.18C593.803,3863.37 570.893,3872 545.805,3872C517.302,3872 491.608,3860.86 473.607,3843.08L473.395,3637.62C491.395,3655.41 517.089,3666.54 545.593,3666.54C570.68,3666.54 593.591,3657.92 610.991,3643.73L611.204,3849.18Z" style="fill:rgb(127,58,1);stroke:rgb(210,136,39);stroke-width:4px;"/>
                </g>
                <g transform="matrix(1,0,0,1,-11.76,10.9694)">
                    <path d="M333.914,3799.47C285.631,3796.98 246.457,3758.7 241.017,3709.96L240.804,3504.5C246.244,3553.25 285.419,3591.52 333.701,3594.01L333.914,3799.47Z" style="fill:rgb(127,58,1);stroke:rgb(210,136,39);stroke-width:4px;"/>
                </g>
                <g transform="matrix(1,0,0,1,-12.2509,10.1115)">
                    <path d="M241.017,3709.96C205.317,3694.72 180.183,3658.53 180.183,3616.36C180.183,3615.09 180.206,3613.82 180.251,3612.57C173.062,3599.31 168.689,3584.22 167.962,3568.15L167.928,3568.15L167.928,3567.34C167.879,3566.02 167.854,3564.7 167.854,3563.38C167.854,3562.05 167.879,3560.73 167.928,3559.41L167.928,3365.7C169.034,3380.64 173.299,3394.68 180.039,3407.11C179.993,3408.37 179.971,3409.63 179.971,3410.9C179.971,3453.08 205.104,3489.27 240.804,3504.5L241.017,3709.96Z" style="fill:rgb(127,58,1);stroke:rgb(210,136,39);stroke-width:4px;"/>
                </g>
                <g transform="matrix(1,0,0,1,-7.05368,15.5341)">
                    <path d="M528.012,3074.29C546.258,3059.21 570.67,3050.38 597.189,3051.28C628.199,3052.33 655.436,3066.45 672.804,3087.65C691.99,3084.17 712.83,3086.23 732.621,3094.78C756.413,3105.05 774.424,3122.85 784.624,3143.64C820.293,3145.55 854.411,3169.64 869.51,3207.5C871.56,3212.64 873.18,3217.83 874.389,3223.04C909.666,3236.87 934.659,3273.91 934.074,3317.04C934.018,3321.16 933.729,3325.23 933.221,3329.22C941.806,3344.52 946.652,3362.58 946.391,3381.85C946.138,3400.49 941.14,3417.86 932.665,3432.63C935.258,3468.89 914.74,3506.25 878.015,3525.5C869.651,3529.89 860.993,3533.05 852.277,3535.04C844.917,3559.88 827.081,3582.45 801.191,3596.03C782.306,3605.93 761.92,3609.58 742.719,3607.7C728.869,3628.73 706.198,3644.91 678.477,3650.91C652.171,3656.6 626.214,3652.06 605.417,3640.1C588.016,3654.29 565.105,3662.92 540.018,3662.92C511.514,3662.92 485.821,3651.78 467.82,3634C454.786,3638.68 440.449,3641.27 425.402,3641.27C382.847,3641.27 345.97,3620.55 328.127,3590.39C279.844,3587.9 240.669,3549.62 235.23,3500.88C199.53,3485.64 174.396,3449.45 174.396,3407.28C174.396,3406.01 174.419,3404.74 174.464,3403.49C166.566,3388.92 162.067,3372.14 162.067,3354.3C162.067,3326.21 173.214,3300.78 191.2,3282.43C192.733,3234.41 226.852,3194.8 271.544,3186.23C280.179,3161.69 298.807,3139.13 325.171,3124.62C345.992,3113.16 368.475,3108.46 389.497,3109.86C402.343,3088.97 423.658,3072.37 450.249,3065.11C477.957,3057.55 505.889,3061.65 528.012,3074.29Z" style="fill:url(#_Linear1);"/>
                </g>
                <g transform="matrix(1,0,0,1,-6.09605,6.45116)">
                    <g transform="matrix(1,0,0,1,9.44641,9.64327)">
                        <path d="M516.297,3101.47C531.492,3087.48 554.251,3078.76 579.542,3079.15C611.335,3079.64 638.689,3094.4 651.847,3115.49C667.53,3101.84 694.628,3098.4 720.819,3108.59C744.535,3117.82 761.322,3135.81 766.113,3154.51C790.183,3152.76 817.306,3163.35 838.071,3185.06C852.82,3200.47 861.878,3218.89 864.932,3236.92C886.091,3244.38 903.384,3261.72 909.822,3284.99C915.145,3304.23 912.034,3323.85 902.724,3339.89C916.034,3350.44 924.223,3365.24 923.974,3381.5C923.614,3405.11 905.563,3425.09 880.246,3433.21C895.491,3451.18 899.537,3476.5 888.459,3497.61C878.718,3516.17 859.704,3526.87 839.38,3527.47C833.423,3551.93 815.051,3576.08 787.744,3591.57C764.044,3605.02 738.277,3609.3 716.248,3605.28C710.861,3631.48 687.136,3651.25 658.719,3651.25C638.538,3651.25 620.722,3641.28 610.163,3626.12C595.216,3646.61 567.395,3660.16 535.778,3659.68C500.368,3659.13 470.255,3641.12 457.879,3616.02C447.283,3630.93 429.622,3640.7 409.641,3640.7C377.905,3640.7 352.02,3616.05 350.998,3585.31C324.195,3592.12 291.359,3582 267.233,3556.78C247.07,3535.71 237.616,3508.93 239.612,3485.14C217.954,3479.59 201.418,3464.94 197.889,3445.38C194.819,3428.36 202.264,3411.35 216.323,3398.76C198.464,3387.09 186.94,3367.97 187.267,3346.54C187.609,3324.2 200.753,3304.75 220.276,3293.86C208.889,3274.98 209.281,3250.13 223.19,3231.07C236.185,3213.27 257.517,3205.27 277.653,3208.59C279.937,3183.98 302.017,3156.5 335.45,3140.1C356.498,3129.77 378.218,3125.72 396.585,3127.46C407.008,3108.73 426.741,3093.86 451.36,3088.66C475.626,3083.53 499.305,3088.93 516.297,3101.47ZM469.873,3593.99C498.665,3600.15 529.177,3603.23 560.726,3602.73C575.576,3602.5 590.171,3601.48 604.424,3599.73C589.352,3615.14 563.654,3628.32 538.675,3627.94C510.193,3627.51 483.303,3612.83 469.873,3593.99ZM699.044,3575.89C692.846,3597.83 673.827,3620.51 649.67,3620.51C633.894,3620.51 622.993,3609.93 614.166,3598.42C644.219,3593.99 672.731,3586.31 699.044,3575.89ZM377.569,3560.84C402.998,3574.3 431.238,3584.91 461.488,3592.1C452.352,3602.86 440.395,3611.2 424.794,3611.2C397.512,3611.2 379.979,3586.59 377.569,3560.84ZM803.579,3509.15C798.136,3530.02 789.307,3555.07 766.157,3567.89C746.953,3578.53 724.99,3576.1 706.313,3572.92C744.289,3556.91 777.412,3535.11 803.579,3509.15ZM758.302,3505.38C744.062,3511.36 726.594,3513.03 711.598,3515.22C619.692,3528.63 526.847,3535.5 434.086,3540.16C425.684,3540.58 416.81,3541.55 407.937,3542.14C451.369,3561.19 502.672,3571.8 557.47,3570.94C636.854,3569.69 708.15,3544.6 758.302,3505.38ZM277.753,3471.5C299.717,3504.53 328.107,3532.09 367.218,3553.72C343.375,3558.11 316.559,3557.98 296.224,3537.22C279.123,3519.77 276.355,3491.8 277.753,3471.5ZM720.368,3232.14C662.303,3230.14 498.603,3246.08 388.108,3257.39C354.909,3260.79 351.644,3271.82 354.892,3303.32C360.535,3358.04 363.6,3414.17 371.01,3468.69C372.836,3482.12 372.388,3498.28 382.595,3507.12C394.501,3517.44 413.903,3512.21 429.523,3510.77C521.677,3502.28 611.088,3498.61 702.87,3486.75C716.178,3485.03 736.582,3480.78 744.725,3470.05C755.749,3455.51 752.739,3433.92 751.99,3415.63C749.982,3366.64 744.829,3317.66 736.501,3269.34C734.204,3256.01 733.783,3232.6 720.368,3232.14ZM854.261,3434.21C864.168,3448.75 866.065,3465.41 857.284,3481.76C848.97,3497.23 825.688,3503.87 807.669,3505C828.137,3483.76 844.031,3459.88 854.261,3434.21ZM321.871,3261.43C292.145,3293.99 275.078,3332.99 275.733,3374.66C276.509,3424.01 302.005,3468.84 343.638,3503.15C342.37,3493.44 342.137,3483.14 340.684,3474.19C331.331,3416.55 323.022,3358.55 319.869,3300.25C319.188,3287.66 318.431,3273.59 321.871,3261.43ZM766.127,3238.36C775.031,3273.82 779.744,3333.97 783.493,3411.43C784.655,3435.45 792.052,3463.38 781.776,3484.41C814.574,3450.82 833.589,3409.85 832.898,3365.91C832.13,3317.01 807.093,3272.56 766.127,3238.36ZM248.949,3399.08C252.987,3424.27 256.725,3439.25 270.514,3461.24C251.762,3456.08 236.622,3455.26 233.618,3439C230.944,3424.52 237.109,3410.05 248.949,3399.08ZM866.716,3350.97C877.63,3359.64 889.342,3370.41 889.15,3382.68C888.863,3401.01 876.194,3416.86 857.57,3425.27C864.285,3405.62 867.711,3385 867.378,3363.79C867.31,3359.49 867.089,3355.22 866.716,3350.97ZM256.838,3311.16C249.913,3331.1 246.376,3352.01 246.715,3373.55C246.839,3381.4 247.475,3389.16 248.598,3396.8C233.426,3386.43 223.743,3370.09 224.028,3351.85C224.309,3333.93 240.62,3320.64 256.838,3311.16ZM832.12,3258.36C851.016,3265 870.63,3277.32 876.373,3297.59C880.429,3311.9 872.896,3326.99 865.392,3339.86C860.98,3310.66 849.438,3283.17 832.12,3258.36ZM407.382,3164.59C336.484,3194.59 282.587,3244.76 259.304,3304.47C250.315,3288.02 244.871,3265.56 256.461,3250.05C268.192,3234.36 287.452,3227.3 305.632,3230.23C307.694,3208.53 327.628,3184.3 357.812,3169.84C374.437,3161.88 392.112,3163.12 407.382,3164.59ZM822.617,3245.67C801.931,3216.46 781.856,3202.5 747.348,3182.5C768.897,3181.21 793.053,3190.56 811.594,3209.48C824.637,3222.79 819.872,3229.97 822.617,3245.67ZM701.175,3198.64C657.665,3179.47 606.174,3168.76 551.161,3169.63C471.547,3170.88 400.067,3196.12 349.877,3235.55C356.858,3233.86 364.302,3233.13 371.048,3232.44C467.812,3222.53 621.482,3199.56 701.175,3198.64ZM739.828,3177.94C710.858,3161.26 684.493,3152.45 648.748,3144.35C663.245,3135.57 684.811,3134.11 705.735,3142.06C726.909,3150.11 735.314,3161.65 739.828,3177.94ZM518.066,3136.67C481.827,3140.35 447.548,3148.72 416.329,3160.95C426.111,3145.47 442.117,3128.68 462.459,3124.49C482.582,3120.34 502.986,3126.99 518.066,3136.67ZM639.167,3142.31C611.846,3136.85 583.066,3134.14 553.366,3134.61C544.1,3134.76 534.933,3135.21 525.876,3135.95C539.309,3125.02 557.448,3115.8 578.186,3116.11C603.781,3116.49 626.189,3126.88 639.167,3142.31Z" style="fill:rgb(66,31,2);"/>
                    </g>
                    <g transform="matrix(1,0,0,1,-0.13676,-2.70003)">
                        <path d="M516.297,3101.47C531.492,3087.48 554.251,3078.76 579.542,3079.15C611.335,3079.64 638.689,3094.4 651.847,3115.49C667.53,3101.84 694.628,3098.4 720.819,3108.59C744.535,3117.82 761.322,3135.81 766.113,3154.51C790.183,3152.76 817.306,3163.35 838.071,3185.06C852.82,3200.47 861.878,3218.89 864.932,3236.92C886.091,3244.38 903.384,3261.72 909.822,3284.99C915.145,3304.23 912.034,3323.85 902.724,3339.89C916.034,3350.44 924.223,3365.24 923.974,3381.5C923.614,3405.11 905.563,3425.09 880.246,3433.21C895.491,3451.18 899.537,3476.5 888.459,3497.61C878.718,3516.17 859.704,3526.87 839.38,3527.47C833.423,3551.93 815.051,3576.08 787.744,3591.57C764.044,3605.02 738.277,3609.3 716.248,3605.28C710.861,3631.48 687.136,3651.25 658.719,3651.25C638.538,3651.25 620.722,3641.28 610.163,3626.12C595.216,3646.61 567.395,3660.16 535.778,3659.68C500.368,3659.13 470.255,3641.12 457.879,3616.02C447.283,3630.93 429.622,3640.7 409.641,3640.7C377.905,3640.7 352.02,3616.05 350.998,3585.31C324.195,3592.12 291.359,3582 267.233,3556.78C247.07,3535.71 237.616,3508.93 239.612,3485.14C217.954,3479.59 201.418,3464.94 197.889,3445.38C194.819,3428.36 202.264,3411.35 216.323,3398.76C198.464,3387.09 186.94,3367.97 187.267,3346.54C187.609,3324.2 200.753,3304.75 220.276,3293.86C208.889,3274.98 209.281,3250.13 223.19,3231.07C236.185,3213.27 257.517,3205.27 277.653,3208.59C279.937,3183.98 302.017,3156.5 335.45,3140.1C356.498,3129.77 378.218,3125.72 396.585,3127.46C407.008,3108.73 426.741,3093.86 451.36,3088.66C475.626,3083.53 499.305,3088.93 516.297,3101.47ZM469.873,3593.99C498.665,3600.15 529.177,3603.23 560.726,3602.73C575.576,3602.5 590.171,3601.48 604.424,3599.73C589.352,3615.14 563.654,3628.32 538.675,3627.94C510.193,3627.51 483.303,3612.83 469.873,3593.99ZM699.044,3575.89C692.846,3597.83 673.827,3620.51 649.67,3620.51C633.894,3620.51 622.993,3609.93 614.166,3598.42C644.219,3593.99 672.731,3586.31 699.044,3575.89ZM377.569,3560.84C402.998,3574.3 431.238,3584.91 461.488,3592.1C452.352,3602.86 440.395,3611.2 424.794,3611.2C397.512,3611.2 379.979,3586.59 377.569,3560.84ZM803.579,3509.15C798.136,3530.02 789.307,3555.07 766.157,3567.89C746.953,3578.53 724.99,3576.1 706.313,3572.92C744.289,3556.91 777.412,3535.11 803.579,3509.15ZM758.302,3505.38C744.062,3511.36 726.594,3513.03 711.598,3515.22C619.692,3528.63 526.847,3535.5 434.086,3540.16C425.684,3540.58 416.81,3541.55 407.937,3542.14C451.369,3561.19 502.672,3571.8 557.47,3570.94C636.854,3569.69 708.15,3544.6 758.302,3505.38ZM279.204,3474.92C301.168,3507.94 333.25,3536.4 372.361,3558.03C348.518,3562.42 316.559,3557.98 296.224,3537.22C279.123,3519.77 277.806,3495.22 279.204,3474.92ZM720.368,3232.14C662.303,3230.14 498.603,3246.08 388.108,3257.39C354.909,3260.79 351.644,3271.82 354.892,3303.32C360.535,3358.04 363.6,3414.17 371.01,3468.69C372.836,3482.12 372.388,3498.28 382.595,3507.12C394.501,3517.44 413.903,3512.21 429.523,3510.77C521.677,3502.28 611.088,3498.61 702.87,3486.75C716.178,3485.03 736.582,3480.78 744.725,3470.05C755.749,3455.51 752.739,3433.92 751.99,3415.63C749.982,3366.64 744.829,3317.66 736.501,3269.34C734.204,3256.01 733.783,3232.6 720.368,3232.14ZM854.261,3434.21C864.168,3448.75 866.065,3465.41 857.284,3481.76C848.97,3497.23 825.688,3503.87 807.669,3505C828.137,3483.76 844.031,3459.88 854.261,3434.21ZM321.871,3261.43C292.145,3293.99 275.078,3332.99 275.733,3374.66C276.509,3424.01 302.005,3468.84 343.638,3503.15C342.37,3493.44 342.137,3483.14 340.684,3474.19C331.331,3416.55 323.022,3358.55 319.869,3300.25C319.188,3287.66 318.431,3273.59 321.871,3261.43ZM766.127,3238.36C775.031,3273.82 779.744,3333.97 783.493,3411.43C784.655,3435.45 792.052,3463.38 781.776,3484.41C814.574,3450.82 833.589,3409.85 832.898,3365.91C832.13,3317.01 807.093,3272.56 766.127,3238.36ZM248.949,3399.08C252.987,3424.27 262.34,3448.17 276.128,3470.16C257.377,3464.99 236.622,3455.26 233.618,3439C230.944,3424.52 237.109,3410.05 248.949,3399.08ZM866.716,3350.97C877.63,3359.64 889.342,3370.41 889.15,3382.68C888.863,3401.01 876.194,3416.86 857.57,3425.27C864.285,3405.62 867.711,3385 867.378,3363.79C867.31,3359.49 867.089,3355.22 866.716,3350.97ZM256.838,3311.16C249.913,3331.1 246.376,3352.01 246.715,3373.55C246.839,3381.4 247.475,3389.16 248.598,3396.8C233.426,3386.43 223.743,3370.09 224.028,3351.85C224.309,3333.93 240.62,3320.64 256.838,3311.16ZM832.12,3258.36C851.016,3265 870.63,3277.32 876.373,3297.59C880.429,3311.9 872.896,3326.99 865.392,3339.86C860.98,3310.66 849.438,3283.17 832.12,3258.36ZM407.382,3164.59C336.484,3194.59 282.587,3244.76 259.304,3304.47C250.315,3288.02 244.871,3265.56 256.461,3250.05C268.192,3234.36 287.452,3227.3 305.632,3230.23C307.694,3208.53 327.628,3184.3 357.812,3169.84C374.437,3161.88 392.112,3163.12 407.382,3164.59ZM831.263,3257.14C810.578,3227.93 781.856,3202.5 747.348,3182.5C768.897,3181.21 793.053,3190.56 811.594,3209.48C824.637,3222.79 828.519,3241.45 831.263,3257.14ZM701.175,3198.64C657.665,3179.47 606.174,3168.76 551.161,3169.63C471.547,3170.88 400.067,3196.12 349.877,3235.55C356.858,3233.86 364.302,3233.13 371.048,3232.44C467.812,3222.53 621.482,3199.56 701.175,3198.64ZM746.48,3182C717.51,3165.32 684.493,3152.45 648.748,3144.35C663.245,3135.57 684.811,3134.11 705.735,3142.06C726.909,3150.11 741.965,3165.71 746.48,3182ZM518.066,3136.67C481.827,3140.35 447.548,3148.72 416.329,3160.95C426.111,3145.47 442.117,3128.68 462.459,3124.49C482.582,3120.34 502.986,3126.99 518.066,3136.67ZM639.167,3142.31C611.846,3136.85 583.066,3134.14 553.366,3134.61C544.1,3134.76 534.933,3135.21 525.876,3135.95C539.309,3125.02 557.448,3115.8 578.186,3116.11C603.781,3116.49 626.189,3126.88 639.167,3142.31Z" style="fill:url(#_Linear2);"/>
                    </g>
                    <g>
                        <g transform="matrix(0.634538,-0.772891,0.772891,0.634538,-2441.07,1594.6)">
                            <path d="M345.371,3151.06C336.917,3152.55 332.158,3158.41 326.495,3155.73C321.267,3153.25 329.174,3145.79 339.053,3141.1C351.865,3135.02 374.997,3140.39 370.839,3146C367.154,3150.97 354.635,3149.42 345.371,3151.06Z" style="fill:rgb(254,209,170);"/>
                        </g>
                        <g transform="matrix(1,0,0,1,0.847758,3.41092)">
                            <path d="M341.948,3154.36C318.077,3168.94 299.594,3188.02 296.037,3184.8C291.75,3180.92 309.457,3158.32 330.49,3146.45C360.961,3129.24 386.414,3130.09 382.256,3135.7C378.571,3140.67 356.235,3145.64 341.948,3154.36Z" style="fill:rgb(254,209,170);"/>
                        </g>
                        <g transform="matrix(-0.178973,-0.983854,0.983854,-0.178973,-2760.8,4440.1)">
                            <path d="M341.948,3154.36C318.077,3168.94 305.967,3201.75 302.41,3198.53C298.123,3194.64 309.457,3158.32 330.49,3146.45C360.961,3129.24 391.029,3133.78 386.872,3139.39C383.186,3144.36 356.235,3145.64 341.948,3154.36Z" style="fill:rgb(254,209,170);"/>
                        </g>
                        <g transform="matrix(1.5476,0,0,1.95307,-172.582,-2941.86)">
                            <path d="M338.485,3151.16C335.672,3152.77 332.953,3154.46 330.343,3156.2C310.335,3169.47 296.552,3187.18 294.372,3186.21C289.865,3184.54 308.466,3162.48 329.499,3150.61C359.971,3133.4 377.433,3128.49 377.13,3131.41C376.955,3133.09 369.881,3133.18 338.485,3151.16Z" style="fill:rgb(254,209,170);"/>
                        </g>
                        <g transform="matrix(-1.16447,0.153474,-0.214855,-1.6302,1865.23,8574.27)">
                            <path d="M338.485,3151.16C335.672,3152.77 332.953,3154.46 330.343,3156.2C310.335,3169.47 296.552,3187.18 294.372,3186.21C289.865,3184.54 306.295,3161.31 327.328,3149.44C357.8,3132.23 377.433,3128.49 377.13,3131.41C376.955,3133.09 369.881,3133.18 338.485,3151.16Z" style="fill:rgb(254,209,170);"/>
                        </g>
                        <g transform="matrix(1.18276,0.998063,-1.25956,1.49265,4111.19,-1796.18)">
                            <path d="M257.265,3234.42C263.346,3238.18 266.927,3239.88 279.968,3251.45C295.483,3265.23 317.679,3279.94 313.465,3283.12C311.44,3284.64 292.568,3271.08 275.547,3256.73C260.911,3244.39 258.002,3240.78 253.452,3236.03C249.671,3232.08 252.775,3231.64 257.265,3234.42Z" style="fill:rgb(254,209,170);"/>
                        </g>
                        <g transform="matrix(1.18276,0.998063,-1.25956,1.49265,4108.7,-1803.68)">
                            <path d="M260.777,3205.47C275.951,3189.2 334.562,3141.53 351.31,3130.11C371.183,3116.57 376.401,3117.71 348.469,3138.87C324.622,3156.95 272.172,3204.07 265.481,3208.03C257.323,3212.86 255.875,3210.73 260.777,3205.47Z" style="fill:rgb(254,209,170);"/>
                        </g>
                        <g transform="matrix(0.975404,0.220423,-0.220423,0.975404,818.253,-42.4862)">
                            <path d="M328.235,3155.41C304.365,3169.98 301.99,3186.1 298.433,3182.87C294.146,3178.99 304.779,3158.46 324.877,3145.06C339.383,3135.39 361.684,3130.11 357.526,3135.72C353.841,3140.69 342.523,3146.68 328.235,3155.41Z" style="fill:rgb(254,209,170);"/>
                        </g>
                        <g transform="matrix(0.772621,0.634867,-0.634867,0.772621,2333.49,445.76)">
                            <path d="M313.635,3167.68C304.258,3177.39 300.721,3196.5 297.165,3193.27C292.877,3189.39 299.311,3170.03 308.99,3161.08C315.917,3154.67 328.923,3147.5 330.594,3150.15C331.397,3151.42 325.263,3155.64 313.635,3167.68Z" style="fill:rgb(254,209,170);"/>
                        </g>
                        <g transform="matrix(0.928985,-0.370117,0.370117,0.928985,-1236.98,434.561)">
                            <path d="M338.476,3152.96C313.33,3165.2 312.592,3181.09 309.036,3177.86C304.748,3173.98 308.492,3151.21 331.055,3142.59C348.738,3135.84 363.822,3136.45 365.88,3143.12C367.738,3149.15 353.589,3145.6 338.476,3152.96Z" style="fill:rgb(254,209,170);"/>
                        </g>
                    </g>
                </g>
            </g>
            <g transform="matrix(1,0,0,1,-1.78385,-2905.57)">
                <g transform="matrix(1.01401,-0.104985,0.0918659,0.887297,-1047.49,3223.79)">
                    <path d="M1519.14,243.214C1510.47,245.168 1478.43,245.406 1474.63,263.374C1471.39,278.673 1504.12,264.423 1508.24,268.969C1512.36,273.515 1505.02,286.432 1499.35,290.649C1493.67,294.866 1480.59,293.383 1474.2,294.271C1469.8,294.882 1462.24,292.386 1460.99,295.976C1459.74,299.566 1462.74,312.373 1466.71,315.809C1470.69,319.246 1485.02,310.659 1484.85,316.596C1484.68,322.533 1472.81,341.614 1465.69,351.432C1459.11,360.518 1447.43,367.347 1442.17,375.507C1439.05,380.345 1430.09,386.765 1428.75,392.488C1428.07,395.43 1434.15,398.919 1434.14,400.387C1434.13,403.038 1439.54,402.383 1442.03,401.452C1445.72,400.067 1452.17,395.994 1456.3,392.076C1461.09,387.534 1465.85,380.076 1470.77,374.197C1476.59,367.237 1485.03,354.968 1491.25,350.312C1495.87,346.854 1505.95,344.914 1508.08,346.264C1510.21,347.613 1506.54,354.954 1504.03,358.409C1499.88,364.133 1487.72,375.068 1483.18,380.608C1481.69,382.424 1472.29,381.49 1470.77,383.814C1469.54,385.702 1475.88,390.984 1476.76,391.65C1478.71,393.135 1491.71,388.063 1494.87,389.519C1498.03,390.975 1497.88,397.461 1495.72,400.387C1492.45,404.838 1479.08,410.866 1475.2,416.229C1473.19,419.025 1466.84,421.061 1466.66,424.783C1466.55,427.017 1472.12,431.448 1472.5,432.562C1473.44,435.361 1478.46,435.077 1481.23,434.054C1485.85,432.349 1495.3,424.536 1500.2,422.334C1503.4,420.893 1508.9,419.6 1510.64,420.843C1512.38,422.086 1511.56,426.954 1510.64,429.792C1508.93,435.048 1503.54,447.584 1500.41,452.379C1498.5,455.319 1494.81,459.761 1491.89,458.558C1488.97,457.355 1486.82,445.04 1482.89,445.162C1478.96,445.283 1466.52,452.771 1468.33,459.286C1470.17,465.927 1487.13,482.284 1493.97,485.003C1499.56,487.225 1505.76,480.419 1509.36,475.605C1516.05,466.66 1525.43,439.139 1534.1,431.334C1540.9,425.218 1557.88,425.222 1561.42,428.78C1564.96,432.337 1560.65,448.379 1555.33,452.679C1550.02,456.979 1533.27,451.64 1529.52,454.579C1527.14,456.451 1523.33,457.174 1524.94,461.085C1525.86,463.316 1531.26,469.268 1532.87,470.313C1537.29,473.188 1548.61,473.964 1556.06,471.833C1565.89,469.021 1578.54,451.647 1591.82,453.444C1605.88,455.346 1628.73,479.836 1640.42,483.245C1647.92,485.435 1661.56,479.053 1661.93,473.9C1662.3,468.747 1650.69,457.635 1642.64,452.325C1632.4,445.575 1607.46,440.642 1600.5,433.4C1594.83,427.506 1599.51,414.27 1600.87,408.874C1601.77,405.3 1608.84,404.707 1608.66,401.026C1608.43,396.392 1597.05,387.782 1599.51,381.07C1601.95,374.358 1623.11,365.418 1623.36,360.753C1623.46,358.803 1620.83,354.274 1617.07,352.177C1611.87,349.274 1603.02,355.547 1600.99,353.082C1597.5,348.847 1601.2,340.738 1602.44,335.34C1603.63,330.199 1604.13,320.54 1608.44,320.694C1612.76,320.847 1621,332.094 1628.31,336.261C1635.66,340.451 1644.04,344.081 1652.55,345.837C1661.32,347.647 1675.17,350.164 1680.89,347.116C1686.62,344.067 1692.02,332.046 1686.89,327.547C1685.11,325.984 1683.73,320.292 1678.95,318.827C1670.06,316.099 1655.62,321.304 1647.09,317.458C1632.74,310.988 1606.93,294.691 1600.77,288.731C1597.97,286.014 1606.63,283.406 1610.15,281.699C1615.05,279.32 1626.01,277.174 1630.18,274.455C1633.07,272.571 1635.14,268.474 1635.14,265.384C1635.14,262.295 1632.14,258.891 1630.18,255.916C1627.81,252.322 1622.88,244.365 1620.91,243.821C1612.96,241.622 1594.34,274.033 1585.01,277.864C1577.94,280.766 1564.07,270.289 1564.92,266.809C1565.78,263.328 1584.82,259.01 1590.12,256.982C1592.3,256.147 1596.6,256.971 1596.73,254.638C1597,249.704 1596.39,231.341 1591.76,227.381C1587.12,223.421 1575.79,227.38 1568.93,230.877C1561.31,234.767 1553.06,247.254 1546.01,250.717C1540.2,253.569 1531.1,252.905 1526.62,251.655C1523,250.644 1522.81,242.388 1519.14,243.214ZM1587.7,399.653C1585.05,397.591 1564.25,410.683 1560.94,413.812C1558.92,415.716 1565.66,416.728 1567.85,418.428C1570.51,420.49 1573.99,428.91 1576.87,426.186C1580.17,423.057 1590.36,401.715 1587.7,399.653ZM1526.12,274.192C1522.49,275.59 1522.8,281.225 1520.92,284.629C1517.93,290.047 1510.59,299.793 1508.21,306.7C1506.09,312.824 1503.55,323.982 1506.61,326.071C1509.67,328.161 1522.27,320.052 1526.57,319.236C1528.58,318.855 1530.89,319.796 1532.4,321.179C1535.19,323.739 1541.79,331.155 1543.35,334.598C1544.36,336.848 1543.12,339.779 1541.76,341.837C1539.25,345.604 1531.53,353.576 1528.34,357.199C1526.45,359.341 1522.5,361.75 1522.62,363.574C1522.74,365.399 1527.6,365.953 1529.04,368.146C1530.67,370.615 1533.82,375.086 1532.4,378.387C1530.51,382.772 1521.07,390.717 1517.74,394.455C1515.91,396.515 1511.36,398.274 1512.44,400.811C1514.24,405.019 1523.32,417.71 1528.51,419.704C1533.68,421.689 1541.68,415.22 1543.62,412.777C1545.38,410.568 1538,406.857 1540.17,405.049C1547.33,399.069 1580.03,384.524 1586.59,376.902C1590.72,372.116 1580.55,365.552 1579.54,359.317C1578.45,352.59 1582.31,339.571 1580.07,336.54C1577.83,333.509 1568.61,336.916 1566.12,341.131C1563.53,345.516 1565.59,356.669 1564.53,362.849C1563.63,368.133 1562.94,373.973 1559.77,378.21C1556.59,382.448 1547.41,392.218 1545.46,388.275C1544.79,386.906 1539.31,383.992 1539.69,379.96C1540.41,372.377 1547.8,361.543 1548.11,354.55C1548.56,344.378 1546.08,329.212 1548.29,324.004C1549.99,319.988 1557.2,324.633 1561.36,323.297C1567.21,321.414 1579.01,316.352 1583.43,312.703C1586.54,310.127 1588.61,303.992 1587.84,301.403C1587.08,298.813 1582.07,296.41 1578.84,297.165C1574.13,298.267 1564.17,308.412 1559.59,308.012C1555,307.612 1550,297.956 1551.32,294.765C1552.65,291.574 1568.1,292.292 1567.53,288.866C1566.97,285.441 1554.84,276.657 1547.93,274.211C1541.08,271.782 1530.62,272.456 1526.12,274.192Z" style="fill:rgb(67,29,2);"/>
                </g>
                <g transform="matrix(1.01401,-0.104985,0.0918659,0.887297,-1054.22,3217.76)">
                    <path d="M1519.14,243.214C1510.47,245.168 1478.43,245.406 1474.63,263.374C1471.39,278.673 1504.12,264.423 1508.24,268.969C1512.36,273.515 1505.02,286.432 1499.35,290.649C1493.67,294.866 1480.59,293.383 1474.2,294.271C1469.8,294.882 1462.24,292.386 1460.99,295.976C1459.74,299.566 1462.74,312.373 1466.71,315.809C1470.69,319.246 1485.02,310.659 1484.85,316.596C1484.68,322.533 1472.81,341.614 1465.69,351.432C1459.11,360.518 1447.43,367.347 1442.17,375.507C1437.45,382.831 1434.17,396.062 1434.14,400.387C1434.13,403.038 1439.54,402.383 1442.03,401.452C1445.72,400.067 1452.17,395.994 1456.3,392.076C1461.09,387.534 1465.85,380.076 1470.77,374.197C1476.59,367.237 1485.03,354.968 1491.25,350.312C1495.87,346.854 1505.95,344.914 1508.08,346.264C1510.21,347.613 1506.54,354.954 1504.03,358.409C1499.88,364.133 1487.72,375.068 1483.18,380.608C1480.48,383.9 1474.81,390.165 1476.76,391.65C1478.71,393.135 1491.71,388.063 1494.87,389.519C1498.03,390.975 1497.88,397.461 1495.72,400.387C1492.45,404.838 1479.08,410.866 1475.2,416.229C1471.98,420.703 1471.49,429.591 1472.5,432.562C1473.44,435.361 1478.46,435.077 1481.23,434.054C1485.85,432.349 1495.3,424.536 1500.2,422.334C1503.4,420.893 1508.9,419.6 1510.64,420.843C1512.38,422.086 1511.56,426.954 1510.64,429.792C1508.93,435.048 1503.54,447.584 1500.41,452.379C1498.5,455.319 1494.81,459.761 1491.89,458.558C1488.97,457.355 1486.82,445.04 1482.89,445.162C1478.96,445.283 1466.52,452.771 1468.33,459.286C1470.17,465.927 1487.13,482.284 1493.97,485.003C1499.56,487.225 1505.76,480.419 1509.36,475.605C1516.05,466.66 1525.43,439.139 1534.1,431.334C1540.9,425.218 1557.88,425.222 1561.42,428.78C1564.96,432.337 1560.65,448.379 1555.33,452.679C1550.02,456.979 1533.27,451.64 1529.52,454.579C1525.78,457.518 1528.44,467.437 1532.87,470.313C1537.29,473.188 1548.61,473.964 1556.06,471.833C1565.89,469.021 1578.54,451.647 1591.82,453.444C1605.88,455.346 1628.73,479.836 1640.42,483.245C1647.92,485.435 1661.74,478.861 1661.93,473.9C1662.11,468.94 1649.56,458.777 1641.53,453.482C1631.29,446.732 1607.27,440.835 1600.5,433.4C1594.99,427.357 1599.51,414.27 1600.87,408.874C1601.77,405.3 1608.84,404.707 1608.66,401.026C1608.43,396.392 1597.05,387.782 1599.51,381.07C1601.95,374.358 1623.11,365.418 1623.36,360.753C1623.61,356.088 1604.47,357.318 1600.99,353.082C1597.5,348.847 1601.2,340.738 1602.44,335.34C1603.63,330.199 1604.13,320.54 1608.44,320.694C1612.76,320.847 1621,332.094 1628.31,336.261C1635.66,340.451 1644.04,344.081 1652.55,345.837C1661.32,347.647 1675.17,350.164 1680.89,347.116C1686.62,344.067 1692.02,332.046 1686.89,327.547C1681.25,322.604 1659.57,323.081 1647.09,317.458C1632.74,310.988 1606.93,294.691 1600.77,288.731C1597.97,286.014 1606.63,283.406 1610.15,281.699C1615.05,279.32 1626.01,277.174 1630.18,274.455C1633.07,272.571 1635.14,268.474 1635.14,265.384C1635.14,262.295 1632.04,258.631 1630.18,255.916C1628.45,253.385 1626.76,247.757 1624,249.098C1616.47,252.756 1594.85,274.912 1585.01,277.864C1577.68,280.058 1564.07,270.289 1564.92,266.809C1565.78,263.328 1584.82,259.01 1590.12,256.982C1592.3,256.147 1596.67,256.974 1596.73,254.638C1596.82,250.645 1596.26,234.813 1590.7,233.023C1585.13,231.233 1570.79,240.947 1563.34,243.896C1557.57,246.182 1552.08,249.434 1546.01,250.717C1539.89,252.01 1531.1,252.905 1526.62,251.655C1523,250.644 1522.81,242.388 1519.14,243.214ZM1587.7,399.653C1585.05,397.591 1564.25,410.683 1560.94,413.812C1558.92,415.716 1565.66,416.728 1567.85,418.428C1570.51,420.49 1573.99,428.91 1576.87,426.186C1580.17,423.057 1590.36,401.715 1587.7,399.653ZM1526.12,274.192C1522.49,275.59 1522.8,281.225 1520.92,284.629C1517.93,290.047 1510.59,299.793 1508.21,306.7C1506.09,312.824 1503.55,323.982 1506.61,326.071C1509.67,328.161 1522.27,320.052 1526.57,319.236C1528.58,318.855 1530.89,319.796 1532.4,321.179C1535.19,323.739 1541.79,331.155 1543.35,334.598C1544.36,336.848 1543.12,339.779 1541.76,341.837C1539.25,345.604 1531.53,353.576 1528.34,357.199C1526.45,359.341 1522.5,361.75 1522.62,363.574C1522.74,365.399 1527.6,365.953 1529.04,368.146C1530.67,370.615 1533.82,375.086 1532.4,378.387C1530.51,382.772 1521.07,390.717 1517.74,394.455C1515.91,396.515 1511.36,398.274 1512.44,400.811C1514.24,405.019 1523.32,417.71 1528.51,419.704C1533.68,421.689 1541.68,415.22 1543.62,412.777C1545.38,410.568 1538,406.857 1540.17,405.049C1547.33,399.069 1580.03,384.524 1586.59,376.902C1590.72,372.116 1580.55,365.552 1579.54,359.317C1578.45,352.59 1582.31,339.571 1580.07,336.54C1577.83,333.509 1568.61,336.916 1566.12,341.131C1563.53,345.516 1565.59,356.669 1564.53,362.849C1563.63,368.133 1562.94,373.973 1559.77,378.21C1556.59,382.448 1547.41,392.218 1545.46,388.275C1543.52,384.331 1547.64,365.262 1548.11,354.55C1548.56,344.378 1546.08,329.212 1548.29,324.004C1549.99,319.988 1557.2,324.633 1561.36,323.297C1567.21,321.414 1579.01,316.352 1583.43,312.703C1586.54,310.127 1588.61,303.992 1587.84,301.403C1587.08,298.813 1582.07,296.41 1578.84,297.165C1574.13,298.267 1563.24,307.512 1559.59,308.012C1556.85,308.387 1555.88,302.716 1556.94,300.167C1558.27,296.976 1569.04,293.192 1567.53,288.866C1566.03,284.54 1554.84,276.657 1547.93,274.211C1541.08,271.782 1530.62,272.456 1526.12,274.192Z" style="fill:rgb(177,77,4);"/>
                </g>
                <g transform="matrix(0.451722,-0.00591428,0.00557758,0.426006,312.526,1948.06)">
                    <path d="M342.816,3158.67C317.67,3170.91 310.221,3180.2 306.664,3176.98C302.377,3173.09 308.492,3151.21 331.055,3142.59C348.738,3135.84 365.048,3128.37 367.106,3135.04C368.965,3141.06 357.929,3151.32 342.816,3158.67Z" style="fill:rgb(254,209,170);"/>
                </g>
                <g transform="matrix(0.41761,-0.00546767,0.00485114,0.370521,399.4,2110.31)">
                    <path d="M339.972,3157.58C314.826,3169.82 292.565,3174.25 289.008,3171.02C284.721,3167.14 314.862,3151.83 335.409,3140.21C351.995,3130.83 362.879,3123.87 364.937,3130.54C366.796,3136.57 355.085,3150.22 339.972,3157.58Z" style="fill:rgb(254,209,170);"/>
                </g>
                <g transform="matrix(0.451722,-0.00591428,0.00557758,0.426006,394.183,2005.89)">
                    <path d="M315.931,3160.11C310.007,3164.36 307.814,3168.31 303.628,3169.4C299.494,3170.48 299.842,3148.84 303.21,3146.17C307.081,3143.09 327.243,3140.56 327.324,3147.58C327.357,3150.45 321.247,3156.3 315.931,3160.11Z" style="fill:rgb(254,209,170);"/>
                </g>
                <g transform="matrix(0.422414,-0.16017,0.151052,0.398366,-154.271,2187.04)">
                    <path d="M308.984,3176.53C283.837,3188.77 281.491,3193.58 277.934,3190.36C273.647,3186.48 280.925,3172.28 293.335,3165.24C307.711,3157.09 368.721,3124.14 369.89,3131.18C370.923,3137.4 324.096,3169.17 308.984,3176.53Z" style="fill:rgb(254,209,170);"/>
                </g>
            </g>
        </g>
    </g>
    <defs>
        <linearGradient id="_Linear1" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="matrix(295.615,720.701,-720.701,295.615,360.059,2925.1)"><stop offset="0" style="stop-color:rgb(255,189,68);stop-opacity:1"/><stop offset="0.52" style="stop-color:rgb(220,137,18);stop-opacity:1"/><stop offset="1" style="stop-color:rgb(208,118,0);stop-opacity:1"/></linearGradient>
        <linearGradient id="_Linear2" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="matrix(312.903,388.846,-388.846,312.903,419.2,3174.23)"><stop offset="0" style="stop-color:rgb(191,88,2);stop-opacity:1"/><stop offset="1" style="stop-color:rgb(158,61,6);stop-opacity:1"/></linearGradient>
    </defs>
</svg>

'''
'''--- frontend/index.html ---
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="/assets/favicon-32x32.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="apple-touch-icon" href="/assets/favicon-32x32.png" />
    <link rel="stylesheet" href="/src/main.css" />
    <title>Mooncake NFT</title>
  </head>
    <body class="bg-black text-slate-50">
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
    <script src="./src/index.jsx" type="module"></script>
  </body>
</html>

'''
'''--- frontend/package.json ---
{
  "name": "mooncake-nft-ui",
  "version": "1.0.0",
  "license": "(MIT AND Apache-2.0)",
  "scripts": {
    "start": "env-cmd -f ../contract/neardev/dev-account.env vite",
    "build": "CONTRACT_NAME=mooncakenft.near vite build && yarn netlify_redirects",
    "build_testnet": "CONTRACT_NAME=mooncakenft.testnet vite build -m testnet && yarn netlify_redirects",
    "build_mainnet": "CONTRACT_NAME=mooncakenft.near vite build -m mainnet && yarn netlify_redirects",
    "netlify_redirects": "echo \"/* /index.html 200\" > dist/_redirects"
  },
  "devDependencies": {
    "@babel/core": "^7.18.2",
    "@babel/preset-env": "^7.18.2",
    "@babel/preset-react": "^7.17.12",
    "@types/node": "^18.6.2",
    "@vitejs/plugin-react": "^2.0.1",
    "autoprefixer": "^10.4.8",
    "ava": "^4.2.0",
    "env-cmd": "^10.1.0",
    "nodemon": "^2.0.16",
    "postcss": "^8.4.16",
    "process": "^0.11.10",
    "react-test-renderer": "^18.1.0",
    "tailwindcss": "^3.1.8",
    "ts-node": "^10.8.0",
    "typescript": "^4.7.2",
    "vite": "^3.0.9"
  },
  "dependencies": {
    "near-api-js": "^0.44.2",
    "react": "^18.1.0",
    "react-dom": "^18.1.0",
    "react-router-dom": "6",
    "regenerator-runtime": "^0.13.9"
  },
  "resolutions": {
    "@babel/preset-env": "7.13.8"
  },
  "browserslist": {
    "production": [">0.2%", "not dead", "not op_mini all"],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}

'''
'''--- frontend/src/NftImages.js ---
import glitchFacaiUrl0 from "/assets/e_0.svg";
import glitchFacaiUrl1 from "/assets/e_1.svg";
import glitchFacaiUrl2 from "/assets/e_2.svg";
import glitchFacaiUrl3 from "/assets/e_3.svg";
import glitchFacaiUrl4 from "/assets/e_4.svg";
import glitchFacaiUrl5 from "/assets/e_5.svg";
import glitchFacaiUrl6 from "/assets/e_6.svg";
import glitchFacaiUrl7 from "/assets/e_7.svg";
import glitchFacaiUrl8 from "/assets/e_8.svg";
import glitchFacaiUrl9 from "/assets/e_9.svg";

export const glitchFacaiUrls = [
  glitchFacaiUrl0,
  glitchFacaiUrl1,
  glitchFacaiUrl2,
  glitchFacaiUrl3,
  glitchFacaiUrl4,
  glitchFacaiUrl5,
  glitchFacaiUrl6,
  glitchFacaiUrl7,
  glitchFacaiUrl8,
  glitchFacaiUrl9,
];

'''
'''--- frontend/src/main.css ---
@tailwind base;
@tailwind components;
@tailwind utilities;

'''
'''--- frontend/tailwind.config.js ---
/** @type {import('tailwindcss').Config} */
module.exports = {
  content: ["./src/**/*.{html,js,jsx,ts,tsx}", "./index.html"],
  theme: {
    extend: {},
  },
  plugins: [],
};

'''
'''--- frontend/vite.config.js ---
import { defineConfig } from "vite";
import react from "@vitejs/plugin-react";

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
  loader: { ".js": "jsx" },
  // To read contract name
  envPrefix: "CONTRACT_",
});

'''
'''--- integration-tests/Cargo.toml ---
[package]
name = "integration-tests"
version = "1.0.0"
publish = false
edition = "2018"

[dev-dependencies]
anyhow = "1.0"
borsh = "0.9"
maplit = "1.0"
near-units = "0.2.0"
# arbitrary_precision enabled for u128 types that workspaces requires for Balance types
serde_json = { version = "1.0", features = ["arbitrary_precision"] }
tokio = { version = "1.18.1", features = ["full"] }
tracing = "0.1"
tracing-subscriber = { version = "0.3.11", features = ["env-filter"] }
workspaces = "0.4.0"
pkg-config = "0.3.1"

[[example]]
name = "integration-tests"
path = "src/tests.rs"

'''
'''--- integration-tests/src/tests.rs ---
use std::{env, fs};
use near_units::parse_near;
use serde_json::json;
use workspaces::prelude::*;
use workspaces::{network::Sandbox, Account, Contract, Worker};

#[tokio::main]
async fn main() -> anyhow::Result<()> {
    let wasm_arg: &str = &(env::args().nth(1).unwrap());
    let wasm_filepath = fs::canonicalize(env::current_dir()?.join(wasm_arg))?;

    let worker = workspaces::sandbox().await?;
    let wasm = std::fs::read(wasm_filepath)?;
    let contract = worker.dev_deploy(&wasm).await?;

    // create accounts
    let account = worker.dev_create_account().await?;
    let alice = account
        .create_subaccount(&worker, "alice")
        .initial_balance(parse_near!("30 N"))
        .transact()
        .await?
        .into_result()?;

    // begin tests
    test_default_message(&alice, &contract, &worker).await?;
    test_changes_message(&alice, &contract, &worker).await?;
    Ok(())
}

async fn test_default_message(
    user: &Account,
    contract: &Contract,
    worker: &Worker<Sandbox>,
) -> anyhow::Result<()> {
    let message: String = user
        .call(&worker, contract.id(), "get_greeting")
        .args_json(json!({}))?
        .transact()
        .await?
        .json()?;

    assert_eq!(message, "Hello".to_string());
    println!("      Passed ✅ gets default message");
    Ok(())
}

async fn test_changes_message(
    user: &Account,
    contract: &Contract,
    worker: &Worker<Sandbox>,
) -> anyhow::Result<()> {
    user.call(&worker, contract.id(), "set_greeting")
        .args_json(json!({"message": "Howdy"}))?
        .transact()
        .await?;

    let message: String = user
        .call(&worker, contract.id(), "get_greeting")
        .args_json(json!({}))?
        .transact()
        .await?
        .json()?;

    assert_eq!(message, "Howdy".to_string());
    println!("      Passed ✅ changes message");
    Ok(())
}
'''
'''--- package.json ---
{
  "name": "mooncake-nft",
  "version": "1.0.0",
  "license": "(MIT AND Apache-2.0)",
  "scripts": {
    "start": "cd frontend && yarn start",
    "deploy": "yarn build:contract && cd contract && near dev-deploy --wasmFile ./target/wasm32-unknown-unknown/release/mooncake_nft.wasm",
    "deploy_testnet": "yarn build:contract && cd contract && near deploy --wasmFile ./target/wasm32-unknown-unknown/release/mooncake_nft.wasm --accountId mooncakenft.testnet",
    "deploy_mainnet": "yarn build:contract && cd contract && NEAR_ENV=mainnet near deploy --wasmFile ./target/wasm32-unknown-unknown/release/mooncake_nft.wasm --accountId mooncakenft.near",
    "preview": "cd frontend && yarn vite preview",
    "build": "yarn build:contract && yarn build:web",
    "build:web": "cd frontend && yarn build",
    "build_testnet:web": "cd frontend && yarn build_testnet",
    "build_mainnet:web": "cd frontend && yarn build_mainnet",
    "build:contract": "cd contract && rustup target add wasm32-unknown-unknown && cargo build --all --target wasm32-unknown-unknown --release",
    "test": "yarn test:unit && yarn test:integration",
    "test:unit": "cd contract && cargo test",
    "test:integration": "yarn build:contract && cd integration-tests && cargo run --example integration-tests \"../contract/target/wasm32-unknown-unknown/release/mooncake_nft.wasm\"",
    "deps-install": "yarn install && cd frontend && yarn install && cd .."
  },
  "devDependencies": {
    "near-api-js": "^1.0.0",
    "near-cli": "^3.3.0"
  },
  "dependencies": {}
}

'''
'''--- scripts/init.js ---
const { Contract } = nearAPI;

const contract = new Contract(account, account.accountId, {
  viewMethods: ["nft_tokens_for_owner"],
  changeMethods: ["new_default_meta", "nft_mint"],
  sender: account,
});

await contract.new_default_meta({ args: { owner_id: account.accountId } });

'''
'''--- scripts/migrate.js ---
const { Contract } = nearAPI;

const contract = new Contract(account, account.accountId, {
  viewMethods: ["nft_tokens_for_owner"],
  changeMethods: ["new_default_meta", "migrate", "nft_mint"],
  sender: account,
});

await contract.migrate({ args: {} });

'''
'''--- scripts/mint_2022.js ---
const { Contract } = nearAPI;

const contract = new Contract(account, account.accountId, {
  viewMethods: ["nft_tokens_for_owner"],
  changeMethods: ["new_default_meta", "nft_mint_2022"],
  sender: account,
});

await contract.nft_mint_2022({
  args: {
    receiver_id: "libo.testnet",
  },
  amount: "168310000000000000000000",
});

'''