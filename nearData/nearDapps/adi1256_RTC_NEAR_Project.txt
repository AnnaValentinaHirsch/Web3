*GitHub Repository "adi1256/RTC_NEAR_Project"*

'''--- near-package-service/README.txt ---
Project is- Packaging Service Using NearPay.
This is a packaging service where customer comes to send his/her package to an address with a custom message. And, customer pays in Near token for the payment service. Customer places the new order which gets saved on blockchain using smart contract in index.ts file.
Customer sees his order details including the order status.

Thank you RTC and NEAR for this opportunity to learn and grow!

'''
'''--- near-package-service/front-end/assignment.html ---
<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>NEAR Package Delivery Service</title>

  <style>
    .button {
      background-color: #008CBA;
      ;
      border: none;
      color: white;
      padding: 15px 32px;
      text-align: center;
      text-decoration: none;
      display: inline-block;
      font-size: 16px;
      margin: 4px 2px;
      cursor: pointer;
    }

    input[type=text],
    select {
      width: 100%;
      padding: 12px 20px;
      margin: 8px 0;
      display: inline-block;
      border: 1px solid #ccc;
      border-radius: 4px;
      box-sizing: border-box;
    }

    textarea {
      width: 100%;
      padding: 12px 20px;
      margin: 8px 0;
      display: inline-block;
      border: 1px solid #ccc;
      border-radius: 4px;
      box-sizing: border-box;
    }

    input[type=number],
    select {
      width: 100%;
      padding: 12px 20px;
      margin: 8px 0;
      display: inline-block;
      border: 1px solid #ccc;
      border-radius: 4px;
      box-sizing: border-box;
    }

    input[type=submit] {
      width: 100%;
      background-color: #4CAF50;
      color: white;
      padding: 14px 20px;
      margin: 8px 0;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }

    div {
      border-radius: 5px;
      background-color: #f2f2f2;
      padding: 20px;
    }

    input[type=submit]:hover {
      background-color: #45a049;
    }
  </style>
</head>

<body>
  <h1>Order</h1>
  All Order Ids:
  <p> Order Ids: <span id="orderids"> </span></p>

  Enter Order ID to check status:</h2>

  <form id="view-form-order">

    <input type="text" id="order-id">
    <button id="view-button" class="button" type="submit">View Order Details</button>

  </form>

  <p><span id="sender-id"></span> has placed an order:</p>
  Address:<p id="text"></p>
  Message:<p id="msg"></p>
  Order Status:<p id="status"></p>
  <p>They were charged <span id="amount"></span></p>

  <form id="complete-order">
    <textarea name="answer"></textarea>
    <button class="button">Complete Order</button>
  </form>

  <script src="https://cdn.jsdelivr.net/npm/near-api-js@0.42.0/dist/near-api-js.min.js"></script>
  <script src="./js/assignment.js"></script>
</body>

</html>
'''
'''--- near-package-service/front-end/index.html ---
<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>NEAR Package Delivery Service</title>
  <style>
    .button {
      background-color: #008CBA;
      ;
      border: none;
      color: white;
      padding: 15px 32px;
      text-align: center;
      text-decoration: none;
      display: inline-block;
      font-size: 16px;
      margin: 4px 2px;
      cursor: pointer;
    }

    input[type=text],
    select {
      width: 100%;
      padding: 12px 20px;
      margin: 8px 0;
      display: inline-block;
      border: 1px solid #ccc;
      border-radius: 4px;
      box-sizing: border-box;
    }

    textarea {
      width: 100%;
      padding: 12px 20px;
      margin: 8px 0;
      display: inline-block;
      border: 1px solid #ccc;
      border-radius: 4px;
      box-sizing: border-box;
    }

    input[type=number],
    select {
      width: 100%;
      padding: 12px 20px;
      margin: 8px 0;
      display: inline-block;
      border: 1px solid #ccc;
      border-radius: 4px;
      box-sizing: border-box;
    }

    input[type=submit] {
      width: 100%;
      background-color: #4CAF50;
      color: white;
      padding: 14px 20px;
      margin: 8px 0;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }

    div {
      border-radius: 5px;
      background-color: #f2f2f2;
      padding: 20px;
    }

    input[type=submit]:hover {
      background-color: #45a049;
    }
  </style>
</head>

<body bgcolor=#D2EFF7>
  <h1>Send Your Package Service (NEAR-Pay)</h1>
 
   <label id="check-sign-in"></label>

  <h2>Sign In</h2>
  <button class="button" id="sign-in">Sign in with NEAR</button>

  <form action="signout.html">
    <h2>Sign Out</h2>
    <button class="button" id="sign-out">Sign Out</button>

    <!--input type="submit" value="Go to Google" /-->
  </form>

  <h2>Create Account</h2>
  <button class="button" id="create-account">Create New NEAR Account</button>

  <form action="assignment.html">
    <h2>View Orders</h2>
    <button class="button" id="view-order">View Order</button>
  </form>

  <p><span id="orderNewid"></span> </p>

  <div>
    <h1> Enter Order Details: </h1>
    <form id="assignment-form">
      <label>From Person NEAR Account</label>
      <input id="accountId" name="accountId" type="text" />
      <br /> <br />
      <label>To Person Address</label>
      <textarea id="address" name="address"></textarea>
      <br /> <br />
      <label>Amount to pay for Service(In NEAR)</label>
      <input id="amount" name="amount" type="number" />
      <br /> <br />
      <label>Sender's Message</label>
      <input id="msg" name="msg" type="text" />
      <br /> <br />
      <button class="button">Place Order</button>
    </form>

  </div>

  <script src="https://cdn.jsdelivr.net/npm/near-api-js@0.42.0/dist/near-api-js.min.js"></script>
  <script src="./js/index.js"></script>
</body>

</html>
'''
'''--- near-package-service/front-end/js/assignment.js ---
const near = new nearApi.Near({
  keyStore: new nearApi.keyStores.BrowserLocalStorageKeyStore(),
  networkId: "testnet",
  nodeUrl: "https://rpc.testnet.near.org",
  walletUrl: "https://wallet.testnet.near.org",
});
const wallet = new nearApi.WalletConnection(near, "assign-a-friend");

const params = new URLSearchParams(window.location.search);
const orderId = params.get("id");

//get order is list
//view function does not change state, it will get all the Ids of orders 
//placed
window.onload = async () => {

  const orderIdElement = document.getElementById("orderids");
  const orderIds = await wallet
    .account()
    .viewFunction("dev-1627747103314-12926545171909", "getAllOrderIds");
  orderIdElement.textContent = orderIds;
};

//get the elements by Ids to set the value for order
const orderIdElement = document.getElementById("order-id");
const senderIdElement = document.getElementById("sender-id");
const addressElement = document.getElementById("text");
const messageElement = document.getElementById("msg");
const orderStatusElement = document.getElementById("status");
const amountElement = document.getElementById("amount");

//get order details 
const form1 = document.getElementById("view-form-order");

form1.addEventListener("submit", (event) => {

  event.preventDefault();

  const fd = new FormData(event.target);

  //await wallet
  const order = wallet
    .account()
    .viewFunction(
      {
        contractId: "dev-1627747103314-12926545171909",
        methodName: "getOrder",
        args: { id: document.getElementById("order-id").value },
      });

  if (order == null || order != null) {
    orderIdElement.textContent = "NULL" + order;// order.orderId;

  }
  //set the content according to the order details fetched
  orderIdElement.textContent = order.orderId;
  senderIdElement.textContent = order.senderName;
  addressElement.textContent = order.address;
  messageElement.textContent = order.msg;
  orderStatusElement.textContent = order.status;
  amountElement.textContent = order.payment;
});

//complete order-> closeorder
const form = document.getElementById("complete-order");
form.addEventListener("submit", (event) => {
  event.preventDefault();

  const fd = new FormData(event.target);

  wallet.account().functionCall({
    contractId: "dev-1627747103314-12926545171909",
    methodName: "closeorder",
    args: { id: orderId, answer: fd.get("answer") },
  });
});

'''
'''--- near-package-service/front-end/js/index.js ---
const near = new nearApi.Near({
  keyStore: new nearApi.keyStores.BrowserLocalStorageKeyStore(),
  networkId: "testnet",
  nodeUrl: "https://rpc.testnet.near.org",
  walletUrl: "https://wallet.testnet.near.org",
});
const wallet = new nearApi.WalletConnection(near, "near-package-service");

//checking sign-in status
window.onload = async () => {
  const signinElement = document.getElementById("check-sign-in");
  const accountIdElement = document.getElementById("accountId");

  signinElement.textContent = "Not Signed-In, Please sign-in!";
  if (wallet.isSignedIn()) {
    signinElement.textContent = "You are Signed-In!";
    accountIdElement.textContent = " Welcome!";
  }
  else {
    signinElement.textContent = "Not Signed-In, Please sign-in!";
  }

};

//sign-into the wallet functioning
const button = document.getElementById("sign-in");

button.addEventListener("click", () => {
  wallet.requestSignIn({
    contractId: "dev-1627747103314-12926545171909",
  });
  //document.location.href = 'sendPackage.html';
});

//sign-out of the wallet functioning
const buttonSignOut = document.getElementById("sign-out");

buttonSignOut.addEventListener("click", () => {
  wallet.signOut();
});

//view order
const buttonViewOrder = document.getElementById("view-order");

buttonViewOrder.addEventListener("click", () => {

});

//create-order
const form = document.getElementById("assignment-form");

form.addEventListener("submit", (event) => {
  event.preventDefault();

  const fd = new FormData(event.target);
  const orderNewId = document.getElementById("orderNewid");
  const oid = wallet.account().functionCall({
    contractId: "dev-1627747103314-12926545171909",
    methodName: "createOrder",
    args: {
      accountId: fd.get("accountId"),
      address: fd.get("address"),
      msg: fd.get("msg"),

    },
    attachedDeposit: fd.get("amount"),
  });

  orderNewId.textContent("Your order iD:" + oid);
  //alert("Order Placed Successfully!");
});

/*
// creates a new account using funds from the account used to create it
const account = await near.account("adititest.testnet");
await account.createAccount(
  "newer1.testnet", // new account name
  "8hSHprDq2StXwMtNd43wDTXQYsjXcD4MJTXQYsjXcc", // public key for new account
  "10000000000000000000" // initial balance for new account in yoctoNEAR
);*/
'''
'''--- near-package-service/front-end/sendPackage.html ---
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>NEAR Package Delivery Service</title>
  </head>
  <body>
    <h1>Send Your Package</h1>
   

    <form action="signout.html">
    <h2>Sign Out</h2>
    <button id="sign-out">Sign Out</button>
    
    <!--input type="submit" value="Go to Google" /-->
    </form>
    
    <h2>View Orders</h2>
    <button id="view-order">View Order</button>

     <h1> ENter Details: </h1>
     <form id="assignment-form">
      <label>From Person Name</label>
      <input id="accountId" name="accountId" type="text" />
      
      <label>Add To Address</label>
      <textarea id="text" name="text"></textarea>

      <label>Amount to pay</label>
      <input id="amount" name="amount" type="number" />

      
      <label>Sender's Message</label>
      <input id="msg" name="msg" type="text" />

      <button>Create Assignment</button>
    </form>

    <script src="https://cdn.jsdelivr.net/npm/near-api-js@0.42.0/dist/near-api-js.min.js"></script>
    <script src="./js/index.js"></script>
  </body>
</html>

'''
'''--- near-package-service/front-end/signout.html ---
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>NEAR Package Delivery Service</title>
    <style>
      .button {
        background-color: #008CBA;
        ;
        border: none;
        color: white;
        padding: 15px 32px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        margin: 4px 2px;
        cursor: pointer;
      }
  
      input[type=text],
      select {
        width: 100%;
        padding: 12px 20px;
        margin: 8px 0;
        display: inline-block;
        border: 1px solid #ccc;
        border-radius: 4px;
        box-sizing: border-box;
      }
  
  
      textarea {
        width: 100%;
        padding: 12px 20px;
        margin: 8px 0;
        display: inline-block;
        border: 1px solid #ccc;
        border-radius: 4px;
        box-sizing: border-box;
      }
  
  
  
      input[type=number],
      select {
        width: 100%;
        padding: 12px 20px;
        margin: 8px 0;
        display: inline-block;
        border: 1px solid #ccc;
        border-radius: 4px;
        box-sizing: border-box;
      }
  
      input[type=submit] {
        width: 100%;
        background-color: #4CAF50;
        color: white;
        padding: 14px 20px;
        margin: 8px 0;
        border: none;
        border-radius: 4px;
        cursor: pointer;
      }
  
  
      div {
        border-radius: 5px;
        background-color: #f2f2f2;
        padding: 20px;
      }
  
      input[type=submit]:hover {
        background-color: #45a049;
      }
    </style>
  </head>
  <body>
    <h1>Send Your Package</h1>
    
    <h1> Sign out successful!</h1>
    
    <a href="index.html">Sign In</a>

   
    <script src="https://cdn.jsdelivr.net/npm/near-api-js@0.42.0/dist/near-api-js.min.js"></script>
    <script src="./js/index.js"></script>
  </body>
</html>

'''