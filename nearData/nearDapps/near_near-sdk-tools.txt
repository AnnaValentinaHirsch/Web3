*GitHub Repository "near/near-sdk-tools"*

'''--- .github/workflows/binaries.yml ---
# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Add Binaries to Release

on: push
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: remove old files
        run: rm -rf Linux Darwin
      - name: Download a linix file
        if: startsWith(github.ref, 'refs/tags/')
        uses: carlosperate/download-file-action@v1.0.3
        with:
            file-url: 'http://s3-us-west-1.amazonaws.com/build.nearprotocol.com/nearcore/Linux/master/6196ca7631f524a61c50476f9110ce130f47211e/near-vm-runner-standalone'
            file-name: 'near-vm-runner-standalone'
            location: './Linux/Linux'
      - name: Download a mac file
        if: startsWith(github.ref, 'refs/tags/')
        uses: carlosperate/download-file-action@v1.0.3
        with:
            file-url: 'http://s3-us-west-1.amazonaws.com/build.nearprotocol.com/nearcore/Darwin/master/6196ca7631f524a61c50476f9110ce130f47211e/near-vm-runner-standalone'
            file-name: 'near-vm-runner-standalone'
            location: './Darwin/Darwin'
      - name:  Make Executable
        if: startsWith(github.ref, 'refs/tags/')
        run: chmod +x Linux/Linux/near-vm-runner-standalone && chmod +x Darwin/Darwin/near-vm-runner-standalone
      - name:  Tar linux file
        if: startsWith(github.ref, 'refs/tags/')
        run: tar -C Linux -czvf Linux.tar.gz Linux
      - name:  Tar macos file
        if: startsWith(github.ref, 'refs/tags/')
        run: tar -C Darwin -czvf Darwin.tar.gz Darwin
      - name: Release Linux
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GHR_PATH: Linux.tar.gz
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: fnkr/github-action-ghr@v1
      - name: Release Macos
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GHR_PATH: Darwin.tar.gz
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: fnkr/github-action-ghr@v1

'''
'''--- .travis.yml ---
language: node_js
node_js:
  - 12

before_script:
  - "curl -H 'Cache-Control: no-cache' https://raw.githubusercontent.com/fossas/fossa-cli/master/install.sh | sudo bash"

script:
  - fossa init
  - fossa analyze --server-scan
  - fossa test

'''
'''--- README.md ---
*Deprecation warning: This project is not maintained. Use https://github.com/near/workspaces instead.*

# near-sdk-tools
Collection of tools to support testing smart contracts.

## License
This repository is distributed under the terms of both the MIT license and the Apache License (Version 2.0).
See [MIT-LICENSE](MIT-LICENSE) and [LICENSE-APACHE](LICENSE-APACHE) for details.

'''
'''--- npm/getBinary.js ---
const { Binary } = require('binary-install');
const os = require('os');

function getPlatform() {
    const type = os.type();
    const arch = os.arch();

    // if (type === 'Windows_NT' && arch === 'x64') return 'win64';
    // TODO support windows
    if (type === 'Windows_NT') {
        console.error("Don't support windows");
        process.exit(0);
    }
    if (type === 'Linux' && arch === 'x64') return 'Linux';
    if (type === 'Darwin' && arch === 'x64') return 'Darwin';

    throw new Error(`Unsupported platform: ${type} ${arch}`);
}

function getBinary() {
    const platform = getPlatform();
    const version = require('./package.json').version;
    const url = `https://github.com/near/near-sdk-tools/releases/download/v${ version }/${ platform }.tar.gz`;
    const name = 'near-vm-runner-standalone';
    return new Binary(url, { name });
}

module.exports = getBinary;
'''
'''--- npm/install.js ---
const getBinary = require('./getBinary');
getBinary().install();

'''
'''--- npm/package.json ---
{
  "name": "near-vm",
  "version": "1.1.0",
  "description": "CLI tool for testing NEAR smart contracts",
  "bin": {
    "near-vm": "./run.js"
  },
  "repository": "https://github.com/near/near-sdk-tools",
  "author": "Willem Wyndham (willem@nearprotocol.com)",
  "license": "MIT",
  "private": false,
  "dependencies": {
    "binary-install": "^0.0.1"
  },
  "scripts": {
    "postinstall": "node ./install.js",
    "preinstall": "node ./uninstall.js"
  }
}

'''
'''--- npm/run.js ---
#!/usr/bin/env node

const getBinary = require('./getBinary');
const join = require("path").join;
const fs = require("fs");

const binary = getBinary();
const binPath = join(binary.installDirectory, "bin", binary.name);

function binExists() {
  return fs.existsSync(binPath);
}

function run() {
  if (process.argv.length < 3) {
    process.argv.push("--help");
  }
  binary.run();
}

function install() {
  binary.install().then(() => {
    setTimeout(function() {
      fs.exists(binPath, (exists) => {
        if (!exists) {
          throw new Error("binary failed to be installed to " + binPath);
        }
        run();
      });
  }, 1000);
  });
}

if (!binExists()) {
  install();
} else {
  run();
}

'''
'''--- npm/uninstall.js ---
try {
    const getBinary = require('./getBinary');
    if (getBinary != undefined) {
      getBinary.uninstall();
    }
} catch (err) { }
'''