*GitHub Repository "near-crowdfunding/monorepo"*

'''--- Cargo.toml ---
[workspace]
members = ["smart-contract", "fungible-token", "integration-tests"]

'''
'''--- README.md ---
# Near IDO

```bash
cargo build --all --target wasm32-unknown-unknown --release
```

```bash
export FT_TOKEN_ID=dev-1672478985876-45180344800441;
export IDO_TOKEN_ID=dev-1672479104776-29293708941738;
```

```bash
near dev-deploy --wasmFile ../target/wasm32-unknown-unknown/release/fungible_token.wasm --initFunction new_default_meta --initArgs '{"owner_id": "trungtin2001.testnet", "total_supply": "100000000000000000"}'
```

```bash
near call dev-1672478985876-45180344800441 storage_deposit '{"account_id": "dev-1672479104776-29293708941738", "registration_only": true}' --accountId trungtin2001.testnet --amount 0.1
```

```bash
near call dev-1672458740713-61913261715971 ft_transfer_call '{"receiver_id": "dev-1672477004835-11284451339123", "amount": "10", "msg": "take my mone zy"}' --depositYocto 1 --accountId trungtin2001.testnet --gas 40000000000000
```

```bash
near call dev-1672479950182-11629533174275 create_campaign '{"name": "Demo campaigin 1", "goal": "10000", "incoming_token_id": "dev-1672478985876-45180344800441", "outgoing_token_id": "dev-1672458740713-61913261715971", "amount": "10", "start_time": "1709508541000000000", "end_time": "1809508541000000000"}' --depositYocto 1 --accountId trungtin2001.testnet --gas 40000000000000
```

'''
'''--- build_all_and_deploy.sh ---
#!/bin/sh

echo ">> Building contract"

rustup target add wasm32-unknown-unknown
cargo build --all --target wasm32-unknown-unknown --release

echo ">> Deploying FT contract"
near dev-deploy --wasmFile ./target/wasm32-unknown-unknown/release/fungible_token.wasm --initFunction new_default_meta --initArgs '{"owner_id": "trungtin2001.testnet", "total_supply": "100000000000000000"}' --projectKeyDirectory ft-neardev -f &

echo ">> Deploying IDO contract"
near dev-deploy --wasmFile ./target/wasm32-unknown-unknown/release/smart_contract.wasm --initFunction new --initArgs '{}' -f --projectKeyDirectory ido-neardev &

wait

'''
'''--- deploy.sh ---
#!/bin/sh

./build.sh

echo ">> Deploying contract"

near dev-deploy --wasmFile ./target/wasm32-unknown-unknown/release/fungible_token.wasm
# near dev-deploy --wasmFile ./target/wasm32-unknown-unknown/release/smart_contract.wasm
'''
'''--- ft-neardev/dev-account.env ---
CONTRACT_NAME=dev-1672497207125-17620638595385
'''
'''--- ido-neardev/dev-account.env ---
CONTRACT_NAME=dev-1672497207118-71692630126647
'''
'''--- integration-tests/Cargo.toml ---
[package]
name = "fungible-token-integration-tests"
version = "1.0.0"
publish = false
edition = "2018"

[dev-dependencies]
near-sdk = "4.1.1"
anyhow = "1.0"
borsh = "0.9"
maplit = "1.0"
near-units = "0.2.0"
# arbitrary_precision enabled for u128 types that workspaces requires for Balance types
serde_json = { version = "1.0", features = ["arbitrary_precision"] }
tokio = { version = "1.18.1", features = ["full"] }
tracing = "0.1"
tracing-subscriber = { version = "0.3.11", features = ["env-filter"] }
workspaces = "0.3.1"
pkg-config = "0.3.1"

[[example]]
name = "integration-tests"
path = "src/tests.rs"

'''
'''--- integration-tests/src/helpers.rs ---

'''
'''--- integration-tests/src/tests.rs ---
use near_units::parse_near;
use serde_json::json;
use workspaces::prelude::*;
use workspaces::{network::Sandbox, Account, Contract, Worker};

mod helpers;

const FT_WASM_FILEPATH: &str = "./target/wasm32-unknown-unknown/release/fungible_token.wasm";
const IDO_WASM_FILEPATH: &str = "./target/wasm32-unknown-unknown/release/smart_contract.wasm";

#[tokio::main]
async fn main() -> anyhow::Result<()> {
    // initiate environemnt
    let worker = workspaces::sandbox().await?;

    // deploy contracts
    let nft_wasm = std::fs::read(FT_WASM_FILEPATH)?;
    let nft_contract = worker.dev_deploy(&nft_wasm).await?;
    let ido_wasm = std::fs::read(IDO_WASM_FILEPATH)?;
    let ido_contract = worker.dev_deploy(&ido_wasm).await?;

    // create accounts
    let owner = worker.root_account();
    let alice = owner
        .create_subaccount(&worker, "alice")
        .initial_balance(parse_near!("30 N"))
        .transact()
        .await?
        .into_result()?;
    let bob = owner
        .create_subaccount(&worker, "bob")
        .initial_balance(parse_near!("30 N"))
        .transact()
        .await?
        .into_result()?;
    let charlie = owner
        .create_subaccount(&worker, "charlie")
        .initial_balance(parse_near!("30 N"))
        .transact()
        .await?
        .into_result()?;

    // Initialize contracts
    nft_contract
        .call(&worker, "new_default_meta")
        .args_json(serde_json::json!({"owner_id": owner.id()}))?
        .transact()
        .await?;
    ido_contract
        .call(&worker, "new")
        .args_json(serde_json::json!({"owner_id": owner.id()}))?
        .transact()
        .await?;

    Ok(())
}

'''
'''--- run-test.sh ---
#!/bin/bash

echo ">> Source and map CONTRACT_NAME -> FT_CONTRACT_NAME"
source ft-neardev/dev-account.env
export FT_CONTRACT_NAME=$CONTRACT_NAME

echo ">> Source and map CONTRACT_NAME -> IDO_CONTRACT_NAME"
source ido-neardev/dev-account.env
export IDO_CONTRACT_NAME=$CONTRACT_NAME

# user name = trungtin2001.testnet
export USER_NAME=trungtin2001.testnet

echo ">> Running tests"

echo ">> Test 1: Storage deposit"
near call $FT_CONTRACT_NAME storage_deposit '{"account_id": "'$IDO_CONTRACT_NAME'", "registration_only": true}' --accountId $USER_NAME --amount 0.1

echo ">> Test 2: FT transfer call"
near call $FT_CONTRACT_NAME ft_transfer_call '{"receiver_id": "'$IDO_CONTRACT_NAME'", "amount": "10", "msg": "{\"kind\":0}"}' --depositYocto 1 --accountId $USER_NAME --gas 40000000000000

'''