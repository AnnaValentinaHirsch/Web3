*GitHub Repository "NEARBuilders/discoverbos"*

'''--- .eslintrc.js ---
module.exports = {
  env: {
    node: true,
    es2021: true,
    browser: true,
  },
  extends: ["eslint:recommended", "plugin:react/recommended"],
  overrides: [
    {
      env: {
        node: true,
      },
      files: [".eslintrc.{js,cjs}"],
      parserOptions: {
        sourceType: "script",
      },
    },
  ],
  parserOptions: {
    ecmaVersion: "latest",
    sourceType: "module",
  },
  plugins: ["react"],
  rules: {
    "react/prop-types": 0,
  },
};

'''
'''--- .github/ISSUE_TEMPLATE/bug_report.md ---
---
name: Bug report
about: Create a report to help us improve
title: ''
labels: bug
assignees: ''

---

**Describe the bug**
A clear and concise description of what the bug is.

**To Reproduce**
Steps to reproduce the behavior:
1. Go to '...'
2. Click on '....'
3. Scroll down to '....'
4. See error

**Expected behavior**
A clear and concise description of what you expected to happen.

**Screenshots**
If applicable, add screenshots to help explain your problem.

**Desktop (please complete the following information):**
 - OS: [e.g. iOS]
 - Browser [e.g. chrome, safari]
 - Version [e.g. 22]

**Smartphone (please complete the following information):**
 - Device: [e.g. iPhone6]
 - OS: [e.g. iOS8.1]
 - Browser [e.g. stock browser, safari]
 - Version [e.g. 22]

**Additional context**
Add any other context about the problem here.

'''
'''--- .github/ISSUE_TEMPLATE/feature-request.md ---
---
name: Feature request
about: Suggest an idea for this project
title: ''
labels: enhancement
assignees: ''

---

**Is your feature request related to a problem? Please describe.**
A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]

**Describe the solution you'd like**
A clear and concise description of what you want to happen.

**Describe alternatives you've considered**
A clear and concise description of any alternative solutions or features you've considered.

**Additional context**
Add any other context or screenshots about the feature request here.

'''
'''--- .github/workflows/release.yml ---
name: Deploy Components to Mainnet
on:
  push:
    branches: [main]
jobs:
  deploy-mainnet:
    uses: NEARBuilders/bos-workspace/.github/workflows/deploy.yml@main
    with:
      deploy-env: "mainnet"
      app-name: "discoverbos"
      deploy-account-address:  ${{ vars.DEPLOY_ACCOUNT_ID }}
      signer-account-address: ${{ vars.SIGNER_ACCOUNT_ID }}
      signer-public-key: ${{ vars.SIGNER_PUBLIC_KEY }}
    secrets:
      SIGNER_PRIVATE_KEY:  ${{ secrets.SIGNER_PRIVATE_KEY }}

'''
'''--- README.md ---
# Discover BOS

Discover the ecosystem home of BOS. Community driven BOS curation platform.

## Setup & Development

Install packages:
```
yarn
```

Start development version:
```
yarn dev
```

This will start both the gateway and http server for loading your local components.

To view your local developments, either visit them through a gateway ${gateway_url}/flags

For example, to use this local gateway, use:

* Set the flag (something like http://127.0.0.1:4040/api/loader) at localhost:3000/flags

'''
'''--- apps/discoverbos/bos.config.json ---
{
  "appAccount": "discover.near",
  "aliases": {
      "hello": "<h1>Hello, world! Have a nice day!</h1>"
  }
}
'''
'''--- config/paths.js ---
const path = require("path");

const srcPath = path.resolve(__dirname, "../src");
const distPath = path.resolve(__dirname, "../dist");
const publicPath = path.resolve(__dirname, "../public");
const nodeModulesPath = path.resolve(__dirname, "../node_modules");

module.exports = {
  srcPath,
  distPath,
  publicPath,
  nodeModulesPath,
};

'''
'''--- config/presets/loadPreset.js ---
const { merge } = require("webpack-merge");

const loadPresets = (env = { presets: [] }) => {
  const presets = env.presets || [];
  /** @type {string[]} */
  const mergedPresets = [].concat(...[presets]);
  const mergedConfigs = mergedPresets.map((presetName) =>
    require(`./webpack.${presetName}.js`)(env)
  );

  return merge({}, ...mergedConfigs);
};
module.exports = loadPresets;

'''
'''--- config/presets/webpack.analyze.js ---
const WebpackBundleAnalyzer =
  require("webpack-bundle-analyzer").BundleAnalyzerPlugin;

module.exports = () => ({
  plugins: [new WebpackBundleAnalyzer()],
});

'''
'''--- config/webpack.development.js ---
const path = require("path");
const { HotModuleReplacementPlugin } = require("webpack");

module.exports = () => ({
  devtool: false,
  module: {
    rules: [
      {
        test: /\.(scss|css)$/,
        use: [
          {
            // inject CSS to page
            loader: "style-loader",
          },
          {
            // translates CSS into CommonJS modules
            loader: "css-loader",
          },
          {
            // Run postcss actions
            loader: "postcss-loader",
            options: {
              // `postcssOptions` is needed for postcss 8.x;
              // if you use postcss 7.x skip the key
              postcssOptions: {
                // postcss plugins, can be exported to postcss.config.js
                plugins: function () {
                  return [require("autoprefixer")];
                },
              },
            },
          },
          {
            // compiles Sass to CSS
            loader: "sass-loader",
          },
        ],
      },
    ],
  },
  devServer: {
    open: true,
    static: path.resolve(__dirname, "../dist"),
    port: 3000,
    compress: true,
    historyApiFallback: {
      disableDotRule: true,
    },
  },
  plugins: [new HotModuleReplacementPlugin()],
});

'''
'''--- config/webpack.production.js ---
const MiniCssExtractPlugin = require("mini-css-extract-plugin");
const CssMinimizerPlugin = require("css-minimizer-webpack-plugin");
const path = require("path");

module.exports = () => {
  return {
    output: {
      path: path.resolve(__dirname, "../dist"),
      publicPath: "./",
      filename: "[name].[contenthash].bundle.js",
    },
    devtool: false,
    module: {
      rules: [
        // {
        //   test: /\.(css)$/,
        //   use: [MiniCssExtractPlugin.loader, "css-loader"],
        //   //   options: {
        //   //     sourceMap: false,
        //   //   },
        // },
        {
          test: /\.(scss|css)$/,
          use: [
            {
              // inject CSS to page
              loader: "style-loader",
            },
            {
              // translates CSS into CommonJS modules
              loader: "css-loader",
            },
            {
              // Run postcss actions
              loader: "postcss-loader",
              options: {
                // `postcssOptions` is needed for postcss 8.x;
                // if you use postcss 7.x skip the key
                postcssOptions: {
                  // postcss plugins, can be exported to postcss.config.js
                  plugins: function () {
                    return [require("autoprefixer")];
                  },
                },
              },
            },
            {
              // compiles Sass to CSS
              loader: "sass-loader",
            },
          ],
        },
      ],
    },
    plugins: [
      new MiniCssExtractPlugin({
        filename: "styles/[name].[contenthash].css",
        chunkFilename: "[id].css",
      }),
    ],
    optimization: {
      minimize: true,
      minimizer: [new CssMinimizerPlugin(), "..."],
      runtimeChunk: {
        name: "runtime",
      },
    },
    performance: {
      hints: false,
      maxEntrypointSize: 512000,
      maxAssetSize: 512000,
    },
  };
};

'''
'''--- package.json ---
{
  "name": "frontend",
  "version": "0.12.2",
  "homepage": "/",
  "private": true,
  "dependencies": {
    "@near-wallet-selector/core": "^8.5.0",
    "@near-wallet-selector/here-wallet": "^8.5.0",
    "@near-wallet-selector/meteor-wallet": "^8.5.0",
    "@near-wallet-selector/modal-ui": "^8.5.0",
    "@near-wallet-selector/my-near-wallet": "^8.5.0",
    "@near-wallet-selector/near-wallet": "^8.5.0",
    "@near-wallet-selector/neth": "^8.5.0",
    "@near-wallet-selector/nightly": "^8.5.0",
    "@near-wallet-selector/sender": "^8.5.0",
    "@web3-onboard/core": "^2.20.2",
    "@web3-onboard/injected-wallets": "^2.10.1",
    "@web3-onboard/ledger": "^2.4.6",
    "@web3-onboard/react": "^2.8.7",
    "@web3-onboard/walletconnect": "^2.3.9",
    "big.js": "^6.1.1",
    "bn.js": "^5.1.1",
    "bootstrap": "^5.2.1",
    "bootstrap-icons": "^1.9.0",
    "collections": "^5.1.12",
    "dompurify": "^3.0.6",
    "error-polyfill": "^0.1.2",
    "local-storage": "^2.0.0",
    "near-api-js": "^2.1.3",
    "near-social-vm": "git+https://github.com/NearSocial/VM.git#d4176930eeae95879e0f836c11d64384faafaab1",
    "prettier": "^2.7.1",
    "react": "^18.2.0",
    "react-bootstrap": "^2.5.0",
    "react-bootstrap-typeahead": "^6.1.2",
    "react-dom": "^18.2.0",
    "react-draggable": "^4.4.6",
    "react-router-dom": "^5.2.0",
    "react-select": "^5.7.7",
    "styled-components": "^5.3.6",
    "zustand": "^4.4.0"
  },
  "scripts": {
    "serve": "webpack serve",
    "webpack": "webpack",
    "dev": "concurrently \"bos-workspace dev\" \"npm run serve -- --env mode=development\"",
    "prod": "npm run webpack -- --env mode=production",
    "prod:analyze": "npm run prod -- --env presets=analyze",
    "build": "npm run prod",
    "start": "npm run dev",
    "lint": "eslint src --ext js,jsx --report-unused-disable-directives --max-warnings 0"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "@babel/cli": "^7.15.4",
    "@babel/core": "^7.15.5",
    "@babel/preset-env": "^7.15.4",
    "@babel/preset-react": "^7.14.5",
    "assert": "^2.0.0",
    "babel-loader": "^8.2.2",
    "bos-workspace": "^0.0.1-alpha.5",
    "browserify-zlib": "^0.2.0",
    "buffer": "^6.0.3",
    "clean-webpack-plugin": "^4.0.0",
    "concurrently": "^8.2.1",
    "copy-webpack-plugin": "^9.0.1",
    "cross-env": "^7.0.3",
    "crypto-browserify": "^3.12.0",
    "css-loader": "^6.2.0",
    "css-minimizer-webpack-plugin": "^3.0.2",
    "eslint": "^8.49.0",
    "eslint-plugin-react": "^7.33.2",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.3",
    "html-webpack-plugin": "^5.3.2",
    "https-browserify": "^1.0.0",
    "mini-css-extract-plugin": "^2.2.2",
    "node-sass": "^7.0.3",
    "os-browserify": "^0.3.0",
    "path-browserify": "^1.0.1",
    "postcss-loader": "^7.0.1",
    "process": "^0.11.10",
    "sass-loader": "^13.1.0",
    "stream-browserify": "^3.0.0",
    "stream-http": "^3.2.0",
    "style-loader": "^3.2.1",
    "url": "^0.11.0",
    "webpack": "^5.52.0",
    "webpack-bundle-analyzer": "^4.4.2",
    "webpack-cli": "^4.8.0",
    "webpack-dev-server": "^4.1.0",
    "webpack-manifest-plugin": "^5.0.0",
    "webpack-merge": "^5.8.0"
  }
}

'''
'''--- public/manifest.json ---
{
  "short_name": "DiscoverBOS",
  "name": "DiscoverBOS",
  "icons": [
    {
      "src": "/favicon.png",
      "sizes": "1024x1024",
      "type": "image/png"
    }
  ],
  "start_url": ".",
  "display": "standalone",
  "theme_color": "#333333",
  "background_color": "#ffffff",

  "index.html": "/index.html",
  "template.html": "/template.html",
  "manifest.json": "/manifest.json",
  "robots.txt": "/robots.txt",
  "_redirects": "/_redirects",
  "CNAME": "/CNAME",
  ".nojekyll": "/.nojekyll",
  "main.js": "/main.bundle.js"
}

'''
'''--- public/robots.txt ---
# https://www.robotstxt.org/robotstxt.html
User-agent: *
Disallow:

'''
'''--- public/template.html ---
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="/favicon.png" />

    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta
      name="description"
      content="DiscoverBOS: Discover the ecosystem home of BOS. Community driven BOS curation platform."
    />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:image" content="/favicon.png" />
    <meta property="og:image" content="/favicon.png" />
    <meta property="og:type" content="website" />
    <meta property="og:title" content="DiscoverBOS" />
    <meta
      property="og:description"
      content="DiscoverBOS: Discover the ecosystem home of BOS. Community driven BOS curation platform."
    />
    <link rel="apple-touch-icon" href="/favicon.png" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700;800;900&display=swap"
      rel="stylesheet"
    />
    <link
      rel="preload"
      href="Mona-Sans.woff2"
      as="font"
      type="font/woff2"
      crossorigin
    />
    <!--
      manifest.json provides metadata used when your web app is installed on a
      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/
    -->
    <link rel="manifest" href="/manifest.json" />
    <title>DiscoverBOS</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
  </body>
</html>

'''
'''--- renovate.json ---
{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:base"
  ]
}

'''
'''--- src/App.js ---
import { setupWalletSelector } from "@near-wallet-selector/core";
import { setupHereWallet } from "@near-wallet-selector/here-wallet";
import { setupMeteorWallet } from "@near-wallet-selector/meteor-wallet";
import { setupModal } from "@near-wallet-selector/modal-ui";
import "@near-wallet-selector/modal-ui/styles.css";
import { setupMyNearWallet } from "@near-wallet-selector/my-near-wallet";
import { setupNearWallet } from "@near-wallet-selector/near-wallet";
import { setupNeth } from "@near-wallet-selector/neth";
import { setupSender } from "@near-wallet-selector/sender";
import "App.scss";
import Big from "big.js";
import "bootstrap-icons/font/bootstrap-icons.css";
import "bootstrap/dist/js/bootstrap.bundle";
import "error-polyfill";
import { useAccount, useInitNear, useNear, utils } from "near-social-vm";
import React, { useCallback, useEffect, useState } from "react";
import "react-bootstrap-typeahead/css/Typeahead.bs5.css";
import "react-bootstrap-typeahead/css/Typeahead.css";
import { Link, Route, BrowserRouter as Router, Switch } from "react-router-dom";
import { BosLoaderBanner } from "./components/BosLoaderBanner";
import { NavigationWrapper } from "./components/navigation/NavigationWrapper";
import { NetworkId, Widgets } from "./data/widgets";
import { useBosLoaderInitializer } from "./hooks/useBosLoaderInitializer";
import Flags from "./pages/Flags";
import ViewPage from "./pages/ViewPage";

import RootLayout from "./components/layouts/root";

// Page imports
import { EventCalendar, LibraryEvents } from "./pages/events";

import {
  DeveloperCommunity,
  GeneralCommunity,
  ProjectCommunity,
  RegionalCommunity,
} from "./pages/communities";

import { ComponentsPage } from "./pages/components";

import {
  EducationCodeReviews,
  EducationOfficeHours,
  EducationTutorials,
  EducationWorkshops,
} from "./pages/education";

import {
  OpportunitiesAccelerator,
  OpportunitiesAmplification,
  OpportunitiesFunding,
  OpportunitiesIncubation,
} from "./pages/opportunities";

import {
  ProjectsBOSIntegration,
  ProjectsBuiltWithBOS,
  ProjectsNativeProjects,
} from "./pages/projects";

import About from "./pages/About";
import Home from "./pages/Home";
import Community from "./pages/communities/Community";
import Resources from "./pages/education/Resources";
import HomeSelector from "./pages/home/HomeSelector";
import { Gateways, Infrastructure, Integrations } from "./pages/more";
import Projects from "./pages/projects/Projects";
// import ProjectsForm from "./pages/projects/ProjectsForm";
import { isValidAttribute } from "dompurify";
import ProjectsForm from "./pages/projects/Form";
import { setupNightly } from "@near-wallet-selector/nightly";

export const refreshAllowanceObj = {};
const documentationHref = "https://social.near-docs.io/";

function App() {
  const [connected, setConnected] = useState(false);
  const [signedIn, setSignedIn] = useState(false);
  const [signedAccountId, setSignedAccountId] = useState(null);
  const [availableStorage, setAvailableStorage] = useState(null);
  const [walletModal, setWalletModal] = useState(null);
  const [widgetSrc, setWidgetSrc] = useState(null);

  useBosLoaderInitializer();

  const { initNear } = useInitNear();
  const near = useNear();
  const account = useAccount();
  const accountId = account.accountId;

  useEffect(() => {
    initNear &&
      initNear({
        networkId: NetworkId,
        selector: setupWalletSelector({
          network: NetworkId,
          modules: [
            setupNearWallet(),
            setupMyNearWallet(),
            setupSender(),
            setupHereWallet(),
            setupMeteorWallet(),
            setupNightly(),
            setupNeth({
              gas: "300000000000000",
              bundle: false,
            }),
          ],
        }),
        customElements: {
          Link: (props) => {
            if (!props.to && props.href) {
              props.to = props.href;
              delete props.href;
            }
            if (props.to) {
              props.to = isValidAttribute("a", "href", props.to)
                ? props.to
                : "about:blank";
            }
            return <Link {...props} />;
          },
        },
        config: {
          defaultFinality: undefined,
        },
      });
  }, [initNear]);

  useEffect(() => {
    if (!near) {
      return;
    }
    near.selector.then((selector) => {
      setWalletModal(
        setupModal(selector, { contractId: near.config.contractName })
      );
    });
  }, [near]);

  const requestSignIn = useCallback(
    (e) => {
      e && e.preventDefault();
      walletModal.show();
      return false;
    },
    [walletModal]
  );

  const logOut = useCallback(async () => {
    if (!near) {
      return;
    }
    const wallet = await (await near.selector).wallet();
    wallet.signOut();
    near.accountId = null;
    setSignedIn(false);
    setSignedAccountId(null);
  }, [near]);

  const refreshAllowance = useCallback(async () => {
    alert(
      "You're out of access key allowance. Need sign in again to refresh it"
    );
    await logOut();
    requestSignIn();
  }, [logOut, requestSignIn]);
  refreshAllowanceObj.refreshAllowance = refreshAllowance;

  useEffect(() => {
    if (!near) {
      return;
    }
    setSignedIn(!!accountId);
    setSignedAccountId(accountId);
    setConnected(true);
  }, [near, accountId]);

  useEffect(() => {
    setAvailableStorage(
      account.storageBalance
        ? Big(account.storageBalance.available).div(utils.StorageCostPerByte)
        : Big(0)
    );
  }, [account]);

  const passProps = {
    refreshAllowance: () => refreshAllowance(),
    setWidgetSrc,
    signedAccountId,
    signedIn,
    connected,
    availableStorage,
    widgetSrc,
    logOut,
    requestSignIn,
    widgets: Widgets,
    documentationHref,
  };

  const eventRoutes = [
    {
      path: "/events/calendar",
      component: <EventCalendar />,
    },
    {
      path: "/events/library",
      component: <LibraryEvents />,
    },
  ];

  const communitiesRoutes = [
    { path: "/community", component: <Community /> },
    {
      path: "/communities/developer",
      component: <DeveloperCommunity />,
    },
    {
      path: "/communities/project",
      component: <ProjectCommunity />,
    },
    {
      path: "/communities/regional",
      component: <RegionalCommunity />,
    },
    {
      path: "/communities/general-bos",
      component: <GeneralCommunity />,
    },
  ];

  const educationRoutes = [
    { path: "/resources", component: <Resources /> },
    {
      path: "/education/tutorials",
      component: <EducationTutorials />,
    },
    {
      path: "/education/code-reviews",
      component: <EducationCodeReviews />,
    },
    {
      path: "/education/workshops",
      component: <EducationWorkshops />,
    },
    {
      path: "/education/office-hours",
      component: <EducationOfficeHours />,
    },
  ];

  const componentsRoutes = [
    {
      path: "/components",
      component: <ComponentsPage />,
    },
  ];

  const projectsRoutes = [
    {
      path: "/projects/built-with-bos",
      component: <ProjectsBuiltWithBOS />,
    },
    {
      path: "/projects/native-projects",
      component: <ProjectsNativeProjects />,
    },
    {
      path: "/projects/bos-integration",
      component: <ProjectsBOSIntegration />,
    },
  ];

  const opportunitiesRoutes = [
    {
      path: "/opportunities/funding",
      component: <OpportunitiesFunding />,
    },
    {
      path: "/opportunities/accelerator",
      component: <OpportunitiesAccelerator />,
    },
    {
      path: "/opportunities/incubation",
      component: <OpportunitiesIncubation />,
    },
    {
      path: "/opportunities/amplification",
      component: <OpportunitiesAmplification />,
    },
  ];

  const routes = [
    ...eventRoutes,
    ...communitiesRoutes,
    ...educationRoutes,
    ...componentsRoutes,
    ...projectsRoutes,
    ...opportunitiesRoutes,
    {
      path: "/integrations",
      component: <Integrations />,
    },
    {
      path: "/infrastructure",
      component: <Infrastructure />,
    },
    {
      path: "/gateways",
      component: <Gateways />,
    },
    {
      path: "/homepage-selector",
      component: <HomeSelector />,
    },
    {
      path: "/about",
      component: <About />,
    },
  ];

  return (
    <RootLayout {...passProps}>
      <Router basename={process.env.PUBLIC_URL}>
        <Switch>
          <Route path={"/flags"}>
            <Flags {...passProps} />
          </Route>
          <Route path={"/scanner"}>
            <NavigationWrapper {...passProps} />
          </Route>
          <Route path={"/create"}>
            <ViewPage overrideSrc={passProps.widgets.create} {...passProps} />
          </Route>
          {routes.map((route) => (
            <Route key={`${route.path}`} path={route.path}>
              <div className="container">{route.component}</div>
            </Route>
          ))}
          <Route exact path={"/"}>
            <Home />
          </Route>
          <Route exact path={"/projects"}>
            <Projects />
          </Route>
          <Route exact path={"/projects-form"}>
            <ProjectsForm />
          </Route>
          <Route path={"/:widgetSrc*"}>
            <BosLoaderBanner />
            <ViewPage {...passProps} />
          </Route>
        </Switch>
      </Router>
    </RootLayout>
  );
}

export default App;

'''
'''--- src/components/BosLoaderBanner.js ---
import styled from "styled-components";
import Draggable from "react-draggable";

import { useFlags } from "../hooks/useFlags";
import { useBosLoaderStore } from "../stores/bos-loader";
import React from "react";
import { OverlayTrigger, Tooltip } from "react-bootstrap";

const Button = styled.button`
  all: unset;
  display: block;
  height: 16px;
  line-height: 16px;
  color: #664d04;

  border-radius: 100rem;

  &:active,
  &:hover {
    outline: none;
    border: none;
  }
`;

const Floating = styled.div`
  position: fixed;
  top: 7rem;
  right: 1rem;
  width: max-content;

  z-index: 1000;

  display: flex;
  align-items: center;
  gap: 0.5rem;

  border-radius: 50rem;
  padding: 8px 16px;
  text-align: center;

  background: #fff2cd;
  color: #664d04;

  @media screen and (max-width: 800px) {
    top: 4rem;
    right: 0.5rem;
  }
`;

const Container = styled.a`
  color: inherit;
  &:hover {
    text-decoration: none;
  }
`;

export function BosLoaderBanner() {
  const redirectMapStore = useBosLoaderStore();
  const [flags, setFlags] = useFlags();

  function closeBanner() {
    if (flags?.bosLoaderUrl) {
      setFlags({ bosLoaderUrl: undefined });
    }
  }

  function onRefresh() {
    window.location.reload();
  }

  if (!redirectMapStore.loaderUrl) return null;

  return (
    <Draggable position={null}>
      <Floating>
        <OverlayTrigger
          key={"bos-loader"}
          placement={"bottom"}
          overlay={
            <Tooltip>
              {redirectMapStore.failedToLoad
                ? "Check console.log. CORS errors may be misleading"
                : redirectMapStore.loaderUrl}
            </Tooltip>
          }
        >
          <Container href={"/flags"}>
            {redirectMapStore.failedToLoad
              ? "BOS Loader fetch error"
              : "Loading components"}
          </Container>
        </OverlayTrigger>
        <Button type="button" onClick={closeBanner}>
          <i className="bi bi-x" />
        </Button>
        <Button type="button" onClick={onRefresh}>
          <i className="bi bi-arrow-clockwise"></i>
        </Button>
      </Floating>
    </Draggable>
  );
}

'''
'''--- src/components/Core.js ---
// src/components/Core.js
import { Widget, useAccount, useNear } from "near-social-vm";
import { default as React, useCallback, useEffect, useState } from "react";
import { NavLink } from "react-router-dom/cjs/react-router-dom.min";
import styled from "styled-components";
import { LogOut } from "./icons/LogOut";
import { Pretend } from "./icons/Pretend";
import { StopPretending } from "./icons/StopPretending";
import { User } from "./icons/User";
import PretendModal from "./navigation/PretendModal";

const StyledDropdown = styled.div`
  .dropdown-toggle {
    display: flex;

    &:after {
      border-top-color: var(--slate-dark-11);
    }

    img {
      border-radius: 50% !important;
    }

    .profile-info {
      margin: 5px 10px;
      line-height: normal;
      max-width: 140px;

      .profile-name,
      .profile-username {
        text-overflow: ellipsis;
        overflow: hidden;
      }

      .profile-name {
        color: black;
      }
      .profile-username {
        color: var(--slate-dark-11);
      }
    }
  }

  ul {
    width: 100%;

    li {
      padding: 0 6px;
    }

    button,
    a {
      font-weight: var(--font-weight-medium);
      text-transform: lowercase !important;
      display: inline-block;
      text-align: center;
      text-decoration: none;
      border: 2px outset #333;
      background-color: #f5f5f5;
      cursor: pointer;
      color: #333;
      padding: 12px;

      &:active {
        border-style: inset;
        background-color: #d5d5d5;
        color: #000;
      }

      &:hover {
        background-color: #e5e5e5;
        color: #111;
      }

      svg {
        margin-right: 7px;
        min-width: 24px;
        path {
          stroke: var(--slate-dark-9);
        }
      }
    }
  }
`;

const ButtonRow = styled.div`
  display: flex;
  flex-direction: row;
  flex: 1;
  // justify-content: space-between;
`;

const ArrowButton = styled.button`
  flex-grow: 1;
`;

const Core = (props) => {
  const near = useNear();
  const account = useAccount();
  const [matches, setMatches] = useState(
    window.matchMedia("(min-width: 992px)").matches
  );

  useEffect(() => {
    window
      .matchMedia("(min-width: 992px)")
      .addEventListener("change", (e) => setMatches(e.matches));
  }, []);

  const withdrawStorage = useCallback(async () => {
    await near.contract.storage_withdraw({}, undefined, "1");
  }, [near]);

  const [showPretendModal, setShowPretendModal] = React.useState(false);

  const Button = styled.button`
    display: flex;
    justify-content: center;
    align-items: center;

    text-transform: lowercase !important;
    height: 48px;
    text-align: center;
    text-decoration: none;
    border: 2px outset #333;
    background-color: #f5f5f5;
    cursor: pointer;
    color: #333;
    padding: 20px 20px;
    margin: 4px;

    &:active {
      border-style: inset;
      background-color: #d5d5d5;
      color: #000;
    }

    &:hover {
      background-color: #e5e5e5;
      color: #111;
    }
  `;

  return (
    <>
      <StyledDropdown className="dropdown">
        {props.signedIn ? (
          <div
            type="button"
            id="dropdownMenu2222"
            data-bs-toggle="dropdown"
            aria-expanded="false"
          >
            <Widget
              src={"mob.near/widget/ProfileImage"}
              props={{
                accountId: account.accountId,
                className: "d-inline-block m-2",
                imageClassName: "rounded-circle w-100 h-100",
                style: { width: "42px", height: "42px" },
              }}
            />
          </div>
        ) : (
          <Button onClick={props.requestSignIn}>sign in</Button>
        )}
        <ul
          className="dropdown-menu"
          aria-labelledby="dropdownMenu2222"
          style={{ minWidth: "fit-content" }}
        >
          <li>
            <NavLink
              className="dropdown-item"
              type="button"
              to={`/${account.accountId}`}
            >
              <User />
              my profile
            </NavLink>
          </li>
          {/* <li>
            <button
              className="dropdown-item"
              type="button"
              onClick={() => withdrawStorage()}
            >
              <Withdraw />
              Withdraw {props.availableStorage.div(1000).toFixed(2)}kb
            </button>
          </li> */}
          {account.pretendAccountId ? (
            <li>
              <button
                className="dropdown-item"
                disabled={!account.startPretending}
                onClick={() => account.startPretending(undefined)}
              >
                <StopPretending />
                Stop pretending
              </button>
            </li>
          ) : (
            <li>
              <button
                className="dropdown-item"
                onClick={() => setShowPretendModal(true)}
              >
                <Pretend />
                Pretend to be another account
              </button>
            </li>
          )}
          <li>
            <button className="dropdown-item" onClick={() => props.logOut()}>
              <LogOut />
              Sign Out
            </button>
          </li>
          <li>
            <ButtonRow>
              <ArrowButton>
                <i className="bi bi-arrow-left"></i>
              </ArrowButton>
              <NavLink type="button" to={"/"}>
                <i className="bi bi-house"></i>
              </NavLink>
              <ArrowButton>
                <i className="bi bi-arrow-right"></i>
              </ArrowButton>
            </ButtonRow>
          </li>
        </ul>
      </StyledDropdown>
      <PretendModal
        show={showPretendModal}
        onHide={() => setShowPretendModal(false)}
        widgets={props.widgets}
      />
    </>
  );
};

export default Core;

'''
'''--- src/components/Editor/FileTab.js ---
import { Nav } from "react-bootstrap";
import React, { useEffect, useState } from "react";
import { useAccountId, useCache, useNear } from "near-social-vm";

export const Filetype = {
  Widget: "widget",
  Module: "module",
};

export const StorageDomain = {
  page: "editor",
};

export const StorageType = {
  Code: "code",
  Files: "files",
};

export function toPath(type, nameOrPath) {
  const name =
    nameOrPath.indexOf("/") >= 0
      ? nameOrPath.split("/").slice(2).join("/")
      : nameOrPath;
  return { type, name };
}

export function FileTab(props) {
  const {
    files,
    p,
    active,
    idx,
    removeFromFiles,
    openFile,
    createFile,
    code,
    updateSaved,
  } = props;
  const cache = useCache();
  const near = useNear();
  const accountId = useAccountId();
  const [localCode, setLocalCode] = useState(null);
  const [chainCode, setChainCode] = useState(null);
  const [saved, setSaved] = useState(false);

  const jp = JSON.stringify(p);

  useEffect(() => {
    if (code !== undefined) {
      setLocalCode(code);
      return;
    }
    cache
      .asyncLocalStorageGet(StorageDomain, {
        path: p,
        type: StorageType.Code,
      })
      .then(({ code }) => {
        setLocalCode(code);
      });
  }, [code, cache, p]);

  useEffect(() => {
    const widgetSrc = `${accountId}/${p?.type}/${p?.name}`;
    const c = () => {
      const code = cache.socialGet(
        near,
        widgetSrc,
        false,
        undefined,
        undefined,
        c
      );
      setChainCode(code);
    };
    c();
  }, [cache, near, p, accountId]);

  useEffect(() => {
    const unsaved = localCode !== chainCode;
    setSaved(unsaved);
  }, [localCode, chainCode]);

  useEffect(() => {
    updateSaved && updateSaved(jp, !saved);
  }, [saved, updateSaved]);

  return (
    <Nav.Item>
      <Nav.Link className="text-decoration-none" eventKey={jp}>
        {p.name}
        {saved && (
          <sup key="unsaved">
            <i className="bi bi-asterisk text-secondary" title="Unsaved"></i>
          </sup>
        )}
        <button
          className={`btn btn-sm border-0 py-0 px-1 ms-1 rounded-circle ${
            active ? "btn-outline-light" : "btn-outline-secondary"
          }`}
          onClick={(e) => {
            e.preventDefault();
            e.stopPropagation();
            removeFromFiles(p);
            if (active) {
              if (files.length > 1) {
                openFile(files[idx - 1] || files[idx + 1]);
              } else {
                createFile(Filetype.Widget);
              }
            }
          }}
        >
          <i className="bi bi-x"></i>
        </button>
      </Nav.Link>
    </Nav.Item>
  );
}

'''
'''--- src/components/Editor/OpenModal.js ---
import React, { useState } from "react";
import Modal from "react-bootstrap/Modal";

export default function OpenModal(props) {
  const onHide = props.onHide;
  const onOpen = props.onOpen;
  const onNew = props.onNew;
  const show = props.show;

  const [widgetSrc, setWidgetSrc] = useState("");

  return (
    <Modal centered scrollable show={show} onHide={onHide}>
      <Modal.Header closeButton>
        <Modal.Title>Open widget</Modal.Title>
      </Modal.Header>
      <Modal.Body>
        <label htmlFor="widget-src-input" className="form-label">
          Widget name <span className="text-muted">(or path)</span>
        </label>
        <input
          className="form-control"
          id="widget-src-input"
          type="text"
          value={widgetSrc}
          onChange={(e) =>
            setWidgetSrc(e.target.value.replaceAll(/[^a-zA-Z0-9_.\-/]/g, ""))
          }
        />
      </Modal.Body>
      <Modal.Footer>
        <button
          className="btn btn-success"
          disabled={!widgetSrc}
          onClick={(e) => {
            e.preventDefault();
            onOpen(widgetSrc);
            setWidgetSrc("");
            onHide();
          }}
        >
          Open
        </button>
        <button
          className="btn btn-outline-success"
          disabled={widgetSrc && widgetSrc.indexOf("/") !== -1}
          onClick={(e) => {
            e.preventDefault();
            onNew(widgetSrc);
            setWidgetSrc("");
            onHide();
          }}
        >
          Create New
        </button>
        <button className="btn btn-secondary" onClick={onHide}>
          Close
        </button>
      </Modal.Footer>
    </Modal>
  );
}

'''
'''--- src/components/Editor/RenameModal.js ---
import React, { useState } from "react";
import Modal from "react-bootstrap/Modal";

export default function RenameModal(props) {
  const onHide = props.onHide;
  const name = props.name;
  const onRename = props.onRename;
  const show = props.show;

  const [newName, setNewName] = useState(name);

  return (
    <Modal centered scrollable show={show} onHide={onHide}>
      <Modal.Header closeButton>
        <Modal.Title>Rename</Modal.Title>
      </Modal.Header>
      <Modal.Body>
        <label htmlFor="rename-input" className="form-label">
          New name
        </label>
        <input
          className="form-control"
          id="rename-input"
          type="text"
          value={newName}
          onChange={(e) =>
            setNewName(e.target.value.replaceAll(/[^a-zA-Z0-9_.-]/g, ""))
          }
        />
      </Modal.Body>
      <Modal.Footer>
        <button
          className="btn btn-success"
          disabled={!newName || newName === name}
          onClick={(e) => {
            e.preventDefault();
            onRename(newName);
            onHide();
          }}
        >
          Confirm
        </button>
        <button className="btn btn-secondary" onClick={onHide}>
          Close
        </button>
      </Modal.Footer>
    </Modal>
  );
}

'''
'''--- src/components/common/buttons/BlueButton.js ---
import React from "react";
import { Button } from "./Button";
import styled from "styled-components";

const StyledButton = styled(Button)`
  background-color: var(--blue-light-9);
  border-color: var(--blue-light-9);
  color: white;
`;

export function BlueButton(props) {
  return <StyledButton {...props}>{props.children}</StyledButton>;
}

'''
'''--- src/components/common/buttons/Button.js ---
import React from "react";
import styled from "styled-components";

const StyledButton = styled.button`
  border-radius: 8px;
  border-style: solid;
  border-width: 1px;
  border-color: transparent;
  padding: 8px 16px;
  font-weight: var(--font-weight-bold);
  display: inline-block;
  height: 40px;
`;

export function Button(props) {
  return (
    <StyledButton
      className={props.className}
      onClick={props.onClick}
      title={props.title}
      disabled={props.disabled}
    >
      {props.children}
    </StyledButton>
  );
}

'''
'''--- src/components/common/buttons/GrayBorderButton.js ---
import React from "react";
import { Button } from "./Button";
import styled from "styled-components";

const StyledButton = styled(Button)`
  background-color: var(--slate-dark-6);
  border-color: var(--slate-dark-8);
  color: white;
`;

export function GrayBorderButton(props) {
  return <StyledButton {...props}>{props.children}</StyledButton>;
}

'''
'''--- src/components/header/Heading.js ---
import React from "react";

export default function Heading({ title }) {
  return (
    <>
      <h2>{title}</h2>
    </>
  );
}

'''
'''--- src/components/header/Navbar.js ---
import React, { useState } from "react";
import styled from "styled-components";

import Button from "react-bootstrap/Button";
import Offcanvas from "react-bootstrap/Offcanvas";
import ProfileIcon from "./ProfileIcon";

const DesktopSVG = styled.svg`
  @media screen and (max-width: 800px) {
    display: none;
  }
`;

const MobileSVG = styled.svg`
  display: none;

  @media screen and (max-width: 800px) {
    display: block;
  }
`;

function Logo() {
  return (
    <>
      <DesktopSVG
        xmlns="http://www.w3.org/2000/svg"
        width="178"
        height="26"
        viewBox="0 0 178 26"
        fill="none"
      >
        <g clipPath="url(#clip0_384_1148)">
          <path
            d="M116.305 1.74011H124.459C125.815 1.74011 127.069 1.92611 128.221 2.29811C129.385 2.67011 130.321 3.28211 131.029 4.13411C131.749 4.97411 132.109 6.11411 132.109 7.55411C132.109 8.50211 131.929 9.34811 131.569 10.0921C131.221 10.8361 130.753 11.4481 130.165 11.9281C129.589 12.3961 128.959 12.7081 128.275 12.8641C128.875 12.9361 129.457 13.1101 130.021 13.3861C130.597 13.6501 131.113 14.0221 131.569 14.5021C132.037 14.9701 132.403 15.5581 132.667 16.2661C132.943 16.9621 133.081 17.7901 133.081 18.7501C133.081 20.0821 132.781 21.2581 132.181 22.2781C131.593 23.2861 130.729 24.0781 129.589 24.6541C128.461 25.2181 127.075 25.5001 125.431 25.5001H116.305V1.74011ZM121.687 21.1981H124.135C124.903 21.1981 125.527 21.0841 126.007 20.8561C126.499 20.6161 126.859 20.2801 127.087 19.8481C127.315 19.4041 127.429 18.8761 127.429 18.2641C127.429 17.3041 127.129 16.6021 126.529 16.1581C125.941 15.7021 125.113 15.4741 124.045 15.4741H121.687V21.1981ZM121.687 11.2621H123.865C124.501 11.2621 125.029 11.1481 125.449 10.9201C125.881 10.6921 126.205 10.3741 126.421 9.9661C126.649 9.5461 126.763 9.06611 126.763 8.52611C126.763 7.55411 126.487 6.90011 125.935 6.56411C125.383 6.21611 124.627 6.04211 123.667 6.04211H121.687V11.2621ZM140.032 13.6021C140.032 14.9581 140.308 16.1881 140.86 17.2921C141.424 18.3841 142.198 19.2541 143.182 19.9021C144.178 20.5501 145.33 20.8741 146.638 20.8741C147.946 20.8741 149.092 20.5501 150.076 19.9021C151.072 19.2541 151.846 18.3841 152.398 17.2921C152.962 16.1881 153.244 14.9581 153.244 13.6021C153.244 12.2461 152.962 11.0221 152.398 9.93011C151.846 8.83811 151.072 7.96811 150.076 7.32011C149.092 6.66011 147.946 6.33011 146.638 6.33011C145.33 6.33011 144.178 6.66011 143.182 7.32011C142.198 7.96811 141.424 8.83811 140.86 9.93011C140.308 11.0221 140.032 12.2461 140.032 13.6021ZM134.434 13.6021C134.434 11.8741 134.74 10.2661 135.352 8.77811C135.964 7.27811 136.822 5.97011 137.926 4.85411C139.03 3.73811 140.326 2.86811 141.814 2.24411C143.302 1.62011 144.91 1.30811 146.638 1.30811C148.39 1.30811 150.004 1.62011 151.48 2.24411C152.968 2.86811 154.258 3.73811 155.35 4.85411C156.454 5.97011 157.306 7.27811 157.906 8.77811C158.518 10.2661 158.824 11.8741 158.824 13.6021C158.824 15.3421 158.53 16.9621 157.942 18.4621C157.354 19.9501 156.514 21.2581 155.422 22.3861C154.33 23.5021 153.04 24.3721 151.552 24.9961C150.064 25.6201 148.426 25.9321 146.638 25.9321C144.814 25.9321 143.152 25.6201 141.652 24.9961C140.164 24.3721 138.88 23.5021 137.8 22.3861C136.72 21.2581 135.886 19.9501 135.298 18.4621C134.722 16.9621 134.434 15.3421 134.434 13.6021ZM169.487 1.30811C170.963 1.30811 172.253 1.47011 173.357 1.79411C174.461 2.11811 175.349 2.46011 176.021 2.82011C176.693 3.18011 177.101 3.42011 177.245 3.54011L174.653 7.87811C174.461 7.73411 174.131 7.52411 173.663 7.24811C173.207 6.97211 172.661 6.72611 172.025 6.51011C171.401 6.29411 170.747 6.18611 170.063 6.18611C169.139 6.18611 168.389 6.3541 167.813 6.6901C167.249 7.0141 166.967 7.5001 166.967 8.14811C166.967 8.5921 167.117 8.9941 167.417 9.3541C167.729 9.7021 168.197 10.0381 168.821 10.3621C169.457 10.6741 170.261 11.0161 171.233 11.3881C172.121 11.7121 172.955 12.0961 173.735 12.5401C174.515 12.9841 175.199 13.5121 175.787 14.1241C176.387 14.7241 176.861 15.4201 177.209 16.2121C177.557 17.0041 177.731 17.9041 177.731 18.9121C177.731 20.1121 177.485 21.1561 176.993 22.0441C176.501 22.9201 175.829 23.6461 174.977 24.2221C174.137 24.7981 173.177 25.2241 172.097 25.5001C171.029 25.7881 169.919 25.9321 168.767 25.9321C167.135 25.9321 165.671 25.7461 164.375 25.3741C163.091 25.0021 162.053 24.6001 161.261 24.1681C160.469 23.7361 159.995 23.4481 159.839 23.3041L162.521 18.7861C162.665 18.8941 162.941 19.0681 163.349 19.3081C163.769 19.5481 164.279 19.8001 164.879 20.0641C165.479 20.3161 166.115 20.5321 166.787 20.7121C167.471 20.8921 168.143 20.9821 168.803 20.9821C169.907 20.9821 170.735 20.7721 171.287 20.3521C171.839 19.9201 172.115 19.3561 172.115 18.6601C172.115 18.1441 171.941 17.6821 171.593 17.2741C171.245 16.8661 170.723 16.4821 170.027 16.1221C169.331 15.7501 168.461 15.3601 167.417 14.9521C166.373 14.5321 165.395 14.0221 164.483 13.4221C163.583 12.8221 162.851 12.0721 162.287 11.1721C161.723 10.2721 161.441 9.15611 161.441 7.82411C161.441 6.49211 161.813 5.34011 162.557 4.36811C163.313 3.38411 164.303 2.62811 165.527 2.10011C166.763 1.57211 168.083 1.30811 169.487 1.30811Z"
            fill="#00BF63"
          />
          <path
            d="M7.5145 25.9319C6.0865 25.9319 4.8445 25.5839 3.7885 24.8879C2.7325 24.1799 1.9105 23.2379 1.3225 22.0619C0.746496 20.8739 0.458496 19.5599 0.458496 18.1199C0.458496 16.6799 0.746496 15.3719 1.3225 14.1959C1.9105 13.0079 2.7325 12.0599 3.7885 11.3519C4.8445 10.6439 6.0865 10.2899 7.5145 10.2899C8.4625 10.2899 9.3025 10.4399 10.0345 10.7399C10.7665 11.0279 11.3605 11.3759 11.8165 11.7839C12.2725 12.1799 12.5485 12.5459 12.6445 12.8819V0.731934H18.1165V25.4999H12.6985V23.1059C12.4705 23.5499 12.0985 23.9939 11.5825 24.4379C11.0665 24.8699 10.4605 25.2239 9.7645 25.4999C9.0685 25.7879 8.3185 25.9319 7.5145 25.9319ZM9.1885 21.6299C9.8485 21.6299 10.4365 21.4799 10.9525 21.1799C11.4805 20.8799 11.8945 20.4659 12.1945 19.9379C12.4945 19.3979 12.6445 18.7919 12.6445 18.1199C12.6445 17.4479 12.4945 16.8479 12.1945 16.3199C11.8945 15.7799 11.4805 15.3599 10.9525 15.0599C10.4365 14.7479 9.8485 14.5919 9.1885 14.5919C8.5525 14.5919 7.9765 14.7479 7.4605 15.0599C6.9565 15.3599 6.5545 15.7799 6.2545 16.3199C5.9665 16.8479 5.8225 17.4479 5.8225 18.1199C5.8225 18.7919 5.9665 19.3979 6.2545 19.9379C6.5545 20.4659 6.9565 20.8799 7.4605 21.1799C7.9765 21.4799 8.5525 21.6299 9.1885 21.6299ZM19.1279 25.4999V10.7219H24.5999V25.4999H19.1279ZM21.9359 7.67993C21.0719 7.67993 20.3399 7.37993 19.7399 6.77993C19.1399 6.16793 18.8399 5.44193 18.8399 4.60193C18.8399 3.76193 19.1399 3.03593 19.7399 2.42393C20.3519 1.79993 21.0839 1.48793 21.9359 1.48793C22.4999 1.48793 23.0159 1.63193 23.4839 1.91993C23.9519 2.19593 24.3299 2.56793 24.6179 3.03593C24.9059 3.50393 25.0499 4.02593 25.0499 4.60193C25.0499 5.44193 24.7439 6.16793 24.1319 6.77993C23.5199 7.37993 22.7879 7.67993 21.9359 7.67993ZM32.6538 10.2899C33.6258 10.2899 34.5138 10.3739 35.3178 10.5419C36.1218 10.6979 36.7938 10.8779 37.3338 11.0819C37.8858 11.2859 38.2398 11.4539 38.3958 11.5859L36.6138 14.8079C36.3858 14.6399 35.9598 14.4239 35.3358 14.1599C34.7238 13.8959 34.0398 13.7639 33.2838 13.7639C32.7078 13.7639 32.2218 13.8539 31.8258 14.0339C31.4298 14.2019 31.2318 14.4719 31.2318 14.8439C31.2318 15.2159 31.4478 15.5159 31.8798 15.7439C32.3238 15.9599 32.9598 16.1519 33.7878 16.3199C34.5078 16.4639 35.2398 16.6919 35.9838 17.0039C36.7278 17.3159 37.3458 17.7779 37.8378 18.3899C38.3418 18.9899 38.5938 19.7939 38.5938 20.8019C38.5938 21.8339 38.3718 22.6859 37.9278 23.3579C37.4838 24.0299 36.8958 24.5519 36.1638 24.9239C35.4318 25.2959 34.6398 25.5539 33.7878 25.6979C32.9358 25.8539 32.1078 25.9319 31.3038 25.9319C30.1758 25.9319 29.1918 25.8299 28.3518 25.6259C27.5238 25.4219 26.8518 25.1879 26.3358 24.9239C25.8198 24.6599 25.4598 24.4499 25.2558 24.2939L27.0198 20.6939C27.3318 20.9579 27.8418 21.2579 28.5498 21.5939C29.2578 21.9179 30.0078 22.0799 30.7998 22.0799C31.5678 22.0799 32.1618 21.9659 32.5818 21.7379C33.0018 21.5099 33.2118 21.2099 33.2118 20.8379C33.2118 20.5379 33.1098 20.2979 32.9058 20.1179C32.7018 19.9379 32.4138 19.7819 32.0418 19.6499C31.6698 19.5179 31.2198 19.3979 30.6918 19.2899C30.2118 19.1939 29.7018 19.0439 29.1618 18.8399C28.6218 18.6359 28.1118 18.3599 27.6318 18.0119C27.1518 17.6519 26.7618 17.2019 26.4618 16.6619C26.1618 16.1219 26.0118 15.4679 26.0118 14.6999C26.0118 13.7159 26.3298 12.8999 26.9658 12.2519C27.6018 11.6039 28.4238 11.1179 29.4318 10.7939C30.4398 10.4579 31.5138 10.2899 32.6538 10.2899ZM47.1685 21.6299C47.8525 21.6299 48.4165 21.5159 48.8605 21.2879C49.3045 21.0479 49.6045 20.8559 49.7605 20.7119L52.2625 24.4199C52.0705 24.5759 51.7405 24.7799 51.2725 25.0319C50.8045 25.2719 50.2165 25.4819 49.5085 25.6619C48.8125 25.8419 48.0145 25.9319 47.1145 25.9319C45.4225 25.9319 43.9345 25.6139 42.6505 24.9779C41.3665 24.3299 40.3645 23.4179 39.6445 22.2419C38.9365 21.0659 38.5825 19.6859 38.5825 18.1019C38.5825 16.5059 38.9365 15.1259 39.6445 13.9619C40.3645 12.7979 41.3665 11.8979 42.6505 11.2619C43.9345 10.6139 45.4225 10.2899 47.1145 10.2899C48.0025 10.2899 48.7945 10.3859 49.4905 10.5779C50.1985 10.7579 50.7925 10.9679 51.2725 11.2079C51.7525 11.4359 52.0885 11.6339 52.2805 11.8019L49.7245 15.5459C49.6405 15.4619 49.4845 15.3419 49.2565 15.1859C49.0405 15.0299 48.7585 14.8919 48.4105 14.7719C48.0625 14.6519 47.6485 14.5919 47.1685 14.5919C46.5805 14.5919 46.0285 14.7419 45.5125 15.0419C45.0085 15.3419 44.6005 15.7559 44.2885 16.2839C43.9765 16.8119 43.8205 17.4179 43.8205 18.1019C43.8205 18.7859 43.9765 19.3979 44.2885 19.9379C44.6005 20.4659 45.0085 20.8799 45.5125 21.1799C46.0285 21.4799 46.5805 21.6299 47.1685 21.6299ZM59.6706 25.9319C58.0506 25.9319 56.6106 25.6019 55.3506 24.9419C54.1026 24.2699 53.1186 23.3519 52.3986 22.1879C51.6906 21.0119 51.3366 19.6679 51.3366 18.1559C51.3366 16.6439 51.6906 15.2999 52.3986 14.1239C53.1186 12.9359 54.1026 11.9999 55.3506 11.3159C56.6106 10.6319 58.0506 10.2899 59.6706 10.2899C61.2906 10.2899 62.7186 10.6319 63.9546 11.3159C65.1906 11.9999 66.1566 12.9359 66.8526 14.1239C67.5486 15.2999 67.8966 16.6439 67.8966 18.1559C67.8966 19.6679 67.5486 21.0119 66.8526 22.1879C66.1566 23.3519 65.1906 24.2699 63.9546 24.9419C62.7186 25.6019 61.2906 25.9319 59.6706 25.9319ZM59.6706 21.4319C60.2946 21.4319 60.8346 21.2939 61.2906 21.0179C61.7466 20.7419 62.1006 20.3519 62.3526 19.8479C62.6046 19.3439 62.7306 18.7739 62.7306 18.1379C62.7306 17.4899 62.6046 16.9139 62.3526 16.4099C62.1006 15.9059 61.7466 15.5099 61.2906 15.2219C60.8346 14.9339 60.2946 14.7899 59.6706 14.7899C59.0466 14.7899 58.5006 14.9339 58.0326 15.2219C57.5766 15.5099 57.2166 15.9059 56.9526 16.4099C56.7006 16.9139 56.5746 17.4899 56.5746 18.1379C56.5746 18.7739 56.7006 19.3439 56.9526 19.8479C57.2166 20.3519 57.5766 20.7419 58.0326 21.0179C58.5006 21.2939 59.0466 21.4319 59.6706 21.4319ZM67.0723 10.7219H72.9223L76.4863 20.5319L80.0683 10.7219H85.8823L79.6903 25.4999H73.2823L67.0723 10.7219ZM90.1078 19.2719C90.1438 19.7999 90.3118 20.2679 90.6118 20.6759C90.9118 21.0839 91.3258 21.4079 91.8538 21.6479C92.3938 21.8759 93.0298 21.9899 93.7618 21.9899C94.4578 21.9899 95.0818 21.9179 95.6338 21.7739C96.1978 21.6299 96.6838 21.4499 97.0918 21.2339C97.5118 21.0179 97.8358 20.7959 98.0638 20.5679L100.188 23.9519C99.888 24.2759 99.462 24.5939 98.9098 24.9059C98.3698 25.2059 97.6558 25.4519 96.7678 25.6439C95.8798 25.8359 94.7578 25.9319 93.4018 25.9319C91.7698 25.9319 90.3178 25.6259 89.0458 25.0139C87.7738 24.4019 86.7718 23.5019 86.0398 22.3139C85.3078 21.1259 84.9418 19.6739 84.9418 17.9579C84.9418 16.5179 85.2538 15.2219 85.8778 14.0699C86.5138 12.9059 87.4318 11.9879 88.6318 11.3159C89.8318 10.6319 91.2778 10.2899 92.9698 10.2899C94.5778 10.2899 95.9698 10.5839 97.1458 11.1719C98.3338 11.7599 99.246 12.6359 99.882 13.7999C100.53 14.9519 100.854 16.3919 100.854 18.1199C100.854 18.2159 100.848 18.4079 100.836 18.6959C100.836 18.9839 100.824 19.1759 100.8 19.2719H90.1078ZM95.7058 16.4099C95.6938 16.0259 95.5918 15.6479 95.3998 15.2759C95.2078 14.8919 94.9198 14.5799 94.5358 14.3399C94.1518 14.0879 93.6598 13.9619 93.0598 13.9619C92.4598 13.9619 91.9498 14.0819 91.5298 14.3219C91.1218 14.5499 90.8098 14.8499 90.5938 15.2219C90.3778 15.5939 90.2578 15.9899 90.2338 16.4099H95.7058ZM106.345 25.4999H100.873V10.7219H106.345V13.0079H106.255C106.351 12.7319 106.585 12.3839 106.957 11.9639C107.329 11.5319 107.851 11.1479 108.523 10.8119C109.195 10.4639 110.017 10.2899 110.989 10.2899C111.673 10.2899 112.303 10.3979 112.879 10.6139C113.455 10.8179 113.875 11.0159 114.139 11.2079L112.015 15.6539C111.847 15.4499 111.547 15.2399 111.115 15.0239C110.695 14.7959 110.167 14.6819 109.531 14.6819C108.799 14.6819 108.193 14.8679 107.713 15.2399C107.245 15.6119 106.897 16.0619 106.669 16.5899C106.453 17.1179 106.345 17.6159 106.345 18.0839V25.4999Z"
            fill="black"
          />
        </g>
        <defs>
          <clipPath id="clip0_384_1148">
            <rect width="178" height="26" fill="white" />
          </clipPath>
        </defs>
      </DesktopSVG>
      <MobileSVG
        xmlns="http://www.w3.org/2000/svg"
        width="83"
        height="13"
        viewBox="0 0 83 13"
        fill="none"
      >
        <g clipPath="url(#clip0_341_8333)">
          <path
            d="M53.6792 0.933027H57.4426C58.0684 0.933027 58.6472 1.01887 59.1789 1.19057C59.7161 1.36226 60.1481 1.64472 60.4749 2.03795C60.8072 2.42564 60.9734 2.9518 60.9734 3.61641C60.9734 4.05395 60.8903 4.44441 60.7241 4.7878C60.5635 5.13118 60.3475 5.41364 60.0761 5.63518C59.8103 5.85118 59.5195 5.99518 59.2038 6.06718C59.4807 6.10041 59.7494 6.18072 60.0097 6.3081C60.2755 6.42995 60.5137 6.60164 60.7241 6.82318C60.9401 7.03918 61.109 7.31057 61.2309 7.63733C61.3583 7.95857 61.422 8.34072 61.422 8.7838C61.422 9.39857 61.2835 9.94133 61.0066 10.4121C60.7352 10.8773 60.3364 11.2429 59.8103 11.5087C59.2897 11.769 58.65 11.8992 57.8912 11.8992H53.6792V0.933027ZM56.1632 9.91364H57.293C57.6475 9.91364 57.9355 9.86103 58.157 9.7558C58.3841 9.64503 58.5503 9.48995 58.6555 9.29057C58.7607 9.08564 58.8134 8.84195 58.8134 8.55949C58.8134 8.11641 58.6749 7.79241 58.398 7.58749C58.1266 7.37703 57.7444 7.2718 57.2515 7.2718H56.1632V9.91364ZM56.1632 5.3278H57.1684C57.462 5.3278 57.7057 5.27518 57.8995 5.16995C58.0989 5.06472 58.2484 4.91795 58.3481 4.72964C58.4534 4.5358 58.506 4.31426 58.506 4.06503C58.506 3.61641 58.3786 3.31457 58.1238 3.15949C57.869 2.99887 57.5201 2.91857 57.077 2.91857H56.1632V5.3278ZM64.6301 6.4078C64.6301 7.03364 64.7575 7.60133 65.0123 8.11087C65.2726 8.61487 65.6298 9.01641 66.084 9.31549C66.5437 9.61457 67.0754 9.7641 67.679 9.7641C68.2827 9.7641 68.8117 9.61457 69.2658 9.31549C69.7255 9.01641 70.0827 8.61487 70.3375 8.11087C70.5978 7.60133 70.728 7.03364 70.728 6.4078C70.728 5.78195 70.5978 5.21703 70.3375 4.71303C70.0827 4.20903 69.7255 3.80749 69.2658 3.50841C68.8117 3.2038 68.2827 3.05149 67.679 3.05149C67.0754 3.05149 66.5437 3.2038 66.084 3.50841C65.6298 3.80749 65.2726 4.20903 65.0123 4.71303C64.7575 5.21703 64.6301 5.78195 64.6301 6.4078ZM62.0464 6.4078C62.0464 5.61026 62.1877 4.8681 62.4701 4.18133C62.7526 3.48903 63.1486 2.88533 63.6581 2.37026C64.1677 1.85518 64.7658 1.45364 65.4526 1.16564C66.1394 0.877643 66.8815 0.733643 67.679 0.733643C68.4877 0.733643 69.2326 0.877643 69.9138 1.16564C70.6006 1.45364 71.196 1.85518 71.7 2.37026C72.2095 2.88533 72.6027 3.48903 72.8797 4.18133C73.1621 4.8681 73.3034 5.61026 73.3034 6.4078C73.3034 7.21087 73.1677 7.95857 72.8963 8.65087C72.6249 9.33764 72.2372 9.94133 71.7332 10.462C71.2292 10.977 70.6338 11.3786 69.947 11.6666C69.2603 11.9546 68.5043 12.0986 67.679 12.0986C66.8372 12.0986 66.0701 11.9546 65.3778 11.6666C64.691 11.3786 64.0984 10.977 63.6 10.462C63.1015 9.94133 62.7166 9.33764 62.4452 8.65087C62.1794 7.95857 62.0464 7.21087 62.0464 6.4078ZM78.2247 0.733643C78.906 0.733643 79.5014 0.808412 80.0109 0.95795C80.5204 1.10749 80.9303 1.26533 81.2404 1.43149C81.5506 1.59764 81.7389 1.70841 81.8054 1.7638L80.609 3.76595C80.5204 3.69949 80.3681 3.60257 80.1521 3.47518C79.9417 3.3478 79.6897 3.23426 79.3961 3.13457C79.1081 3.03487 78.8063 2.98503 78.4906 2.98503C78.0641 2.98503 77.718 3.06257 77.4521 3.21764C77.1918 3.36718 77.0617 3.59149 77.0617 3.89057C77.0617 4.09549 77.1309 4.28103 77.2694 4.44718C77.4134 4.6078 77.6294 4.76287 77.9174 4.91241C78.2109 5.05641 78.582 5.21426 79.0306 5.38595C79.4404 5.53549 79.8254 5.71272 80.1854 5.91764C80.5454 6.12257 80.861 6.36626 81.1324 6.64872C81.4094 6.92564 81.6281 7.24687 81.7887 7.61241C81.9494 7.97795 82.0297 8.39333 82.0297 8.85857C82.0297 9.41241 81.9161 9.89426 81.689 10.3041C81.462 10.7084 81.1518 11.0435 80.7586 11.3093C80.3709 11.5752 79.9278 11.7718 79.4294 11.8992C78.9364 12.0321 78.4241 12.0986 77.8924 12.0986C77.1392 12.0986 76.4635 12.0127 75.8654 11.841C75.2727 11.6693 74.7937 11.4838 74.4281 11.2844C74.0626 11.085 73.8438 10.9521 73.7718 10.8856L75.0097 8.80041C75.0761 8.85026 75.2035 8.93057 75.3918 9.04134C75.5857 9.1521 75.821 9.26841 76.098 9.39026C76.3749 9.50657 76.6684 9.60626 76.9786 9.68933C77.2943 9.77241 77.6044 9.81395 77.909 9.81395C78.4186 9.81395 78.8007 9.71703 79.0555 9.52318C79.3103 9.3238 79.4377 9.06349 79.4377 8.74226C79.4377 8.5041 79.3574 8.29087 79.1967 8.10257C79.0361 7.91426 78.7952 7.73703 78.474 7.57087C78.1527 7.39918 77.7512 7.21918 77.2694 7.03087C76.7875 6.83703 76.3361 6.60164 75.9152 6.32472C75.4998 6.0478 75.162 5.70164 74.9017 5.28626C74.6414 4.87087 74.5112 4.3558 74.5112 3.74103C74.5112 3.12626 74.6829 2.59457 75.0263 2.14595C75.3752 1.6918 75.8321 1.34287 76.397 1.09918C76.9675 0.855489 77.5767 0.733643 78.2247 0.733643Z"
            fill="#00BF63"
          />
          <mask id="path-2-inside-1_341_8333" fill="white">
            <path d="M3.46804 12.0987C2.80896 12.0987 2.23573 11.938 1.74835 11.6168C1.26096 11.29 0.88158 10.8553 0.610195 10.3125C0.344349 9.7642 0.211426 9.15774 0.211426 8.49313C0.211426 7.82851 0.344349 7.22482 0.610195 6.68205C0.88158 6.13374 1.26096 5.6962 1.74835 5.36943C2.23573 5.04266 2.80896 4.87928 3.46804 4.87928C3.90558 4.87928 4.29327 4.94851 4.63112 5.08697C4.96896 5.2199 5.24312 5.38051 5.45358 5.56882C5.66404 5.75159 5.79143 5.92051 5.83573 6.07559V0.467896H8.36127V11.8993H5.86066V10.7944C5.75543 10.9993 5.58373 11.2042 5.34558 11.4091C5.10743 11.6085 4.82773 11.7719 4.5065 11.8993C4.18527 12.0322 3.83912 12.0987 3.46804 12.0987ZM4.24066 10.1131C4.54527 10.1131 4.81666 10.0439 5.05481 9.90543C5.2985 9.76697 5.48958 9.5759 5.62804 9.3322C5.7665 9.08297 5.83573 8.80328 5.83573 8.49313C5.83573 8.18297 5.7665 7.90605 5.62804 7.66236C5.48958 7.41313 5.2985 7.21928 5.05481 7.08082C4.81666 6.93682 4.54527 6.86482 4.24066 6.86482C3.94712 6.86482 3.68127 6.93682 3.44312 7.08082C3.2105 7.21928 3.02496 7.41313 2.8865 7.66236C2.75358 7.90605 2.68712 8.18297 2.68712 8.49313C2.68712 8.80328 2.75358 9.08297 2.8865 9.3322C3.02496 9.5759 3.2105 9.76697 3.44312 9.90543C3.68127 10.0439 3.94712 10.1131 4.24066 10.1131ZM8.82807 11.8993V5.07866H11.3536V11.8993H8.82807ZM10.1241 3.67466C9.7253 3.67466 9.38746 3.5362 9.11053 3.25928C8.83361 2.97682 8.69515 2.64174 8.69515 2.25405C8.69515 1.86636 8.83361 1.53128 9.11053 1.24882C9.393 0.960819 9.73084 0.816819 10.1241 0.816819C10.3844 0.816819 10.6225 0.88328 10.8385 1.0162C11.0545 1.14359 11.229 1.31528 11.3619 1.53128C11.4948 1.74728 11.5613 1.9882 11.5613 2.25405C11.5613 2.64174 11.4201 2.97682 11.1376 3.25928C10.8551 3.5362 10.5173 3.67466 10.1241 3.67466ZM15.0708 4.87928C15.5194 4.87928 15.9293 4.91805 16.3003 4.99559C16.6714 5.06759 16.9816 5.15066 17.2308 5.24482C17.4856 5.33897 17.649 5.41651 17.7209 5.47743L16.8985 6.96451C16.7933 6.88697 16.5966 6.78728 16.3086 6.66543C16.0262 6.54359 15.7105 6.48266 15.3616 6.48266C15.0957 6.48266 14.8714 6.5242 14.6886 6.60728C14.5059 6.68482 14.4145 6.80943 14.4145 6.98113C14.4145 7.15282 14.5142 7.29128 14.7136 7.39651C14.9185 7.4962 15.212 7.58482 15.5942 7.66236C15.9265 7.72882 16.2643 7.83405 16.6077 7.97805C16.9511 8.12205 17.2363 8.33528 17.4634 8.61774C17.696 8.89466 17.8123 9.26574 17.8123 9.73097C17.8123 10.2073 17.7099 10.6005 17.5049 10.9107C17.3 11.2208 17.0286 11.4617 16.6908 11.6334C16.3529 11.8051 15.9874 11.9242 15.5942 11.9907C15.2009 12.0627 14.8188 12.0987 14.4477 12.0987C13.9271 12.0987 13.4729 12.0516 13.0853 11.9574C12.7031 11.8633 12.3929 11.7553 12.1548 11.6334C11.9166 11.5116 11.7505 11.4147 11.6563 11.3427L12.4705 9.68113C12.6145 9.80297 12.8499 9.94143 13.1766 10.0965C13.5034 10.246 13.8496 10.3208 14.2151 10.3208C14.5696 10.3208 14.8437 10.2682 15.0376 10.163C15.2314 10.0577 15.3283 9.91928 15.3283 9.74759C15.3283 9.60913 15.2813 9.49836 15.1871 9.41528C15.0929 9.3322 14.96 9.2602 14.7883 9.19928C14.6166 9.13836 14.4089 9.08297 14.1653 9.03313C13.9437 8.98882 13.7083 8.91959 13.4591 8.82543C13.2099 8.73128 12.9745 8.6039 12.7529 8.44328C12.5314 8.27713 12.3514 8.06943 12.2129 7.8202C12.0745 7.57097 12.0053 7.26913 12.0053 6.91466C12.0053 6.46051 12.152 6.0839 12.4456 5.78482C12.7391 5.48574 13.1185 5.26143 13.5837 5.1119C14.0489 4.95682 14.5446 4.87928 15.0708 4.87928ZM21.7699 10.1131C22.0856 10.1131 22.3459 10.0605 22.5508 9.95528C22.7557 9.84451 22.8942 9.7559 22.9662 9.68943L24.121 11.4008C24.0323 11.4728 23.88 11.567 23.664 11.6833C23.448 11.794 23.1767 11.891 22.8499 11.974C22.5287 12.0571 22.1603 12.0987 21.745 12.0987C20.964 12.0987 20.2773 11.9519 19.6847 11.6584C19.092 11.3593 18.6296 10.9384 18.2973 10.3956C17.9705 9.85282 17.8071 9.21589 17.8071 8.48482C17.8071 7.7482 17.9705 7.11128 18.2973 6.57405C18.6296 6.03682 19.092 5.62143 19.6847 5.3279C20.2773 5.02882 20.964 4.87928 21.745 4.87928C22.1548 4.87928 22.5203 4.92359 22.8416 5.0122C23.1684 5.09528 23.4425 5.1922 23.664 5.30297C23.8856 5.4082 24.0407 5.49959 24.1293 5.57713L22.9496 7.30513C22.9108 7.26636 22.8388 7.21097 22.7336 7.13897C22.6339 7.06697 22.5037 7.00328 22.3431 6.9479C22.1825 6.89251 21.9914 6.86482 21.7699 6.86482C21.4985 6.86482 21.2437 6.93405 21.0056 7.07251C20.773 7.21097 20.5847 7.40205 20.4407 7.64574C20.2967 7.88943 20.2247 8.16913 20.2247 8.48482C20.2247 8.80051 20.2967 9.08297 20.4407 9.3322C20.5847 9.5759 20.773 9.76697 21.0056 9.90543C21.2437 10.0439 21.4985 10.1131 21.7699 10.1131ZM27.5401 12.0987C26.7924 12.0987 26.1278 11.9464 25.5462 11.6417C24.9702 11.3316 24.5161 10.9079 24.1838 10.3707C23.857 9.8279 23.6936 9.20759 23.6936 8.50974C23.6936 7.8119 23.857 7.19159 24.1838 6.64882C24.5161 6.10051 24.9702 5.66851 25.5462 5.35282C26.1278 5.03713 26.7924 4.87928 27.5401 4.87928C28.2878 4.87928 28.9469 5.03713 29.5173 5.35282C30.0878 5.66851 30.5336 6.10051 30.8549 6.64882C31.1761 7.19159 31.3367 7.8119 31.3367 8.50974C31.3367 9.20759 31.1761 9.8279 30.8549 10.3707C30.5336 10.9079 30.0878 11.3316 29.5173 11.6417C28.9469 11.9464 28.2878 12.0987 27.5401 12.0987ZM27.5401 10.0217C27.8281 10.0217 28.0773 9.95805 28.2878 9.83066C28.4982 9.70328 28.6616 9.52328 28.7779 9.29066C28.8942 9.05805 28.9524 8.79497 28.9524 8.50143C28.9524 8.20236 28.8942 7.93651 28.7779 7.7039C28.6616 7.47128 28.4982 7.28851 28.2878 7.15559C28.0773 7.02266 27.8281 6.9562 27.5401 6.9562C27.2521 6.9562 27.0001 7.02266 26.7841 7.15559C26.5736 7.28851 26.4075 7.47128 26.2856 7.7039C26.1693 7.93651 26.1112 8.20236 26.1112 8.50143C26.1112 8.79497 26.1693 9.05805 26.2856 9.29066C26.4075 9.52328 26.5736 9.70328 26.7841 9.83066C27.0001 9.95805 27.2521 10.0217 27.5401 10.0217ZM30.9563 5.07866H33.6563L35.3012 9.60636L36.9544 5.07866H39.6378L36.7799 11.8993H33.8224L30.9563 5.07866ZM41.588 9.02482C41.6046 9.26851 41.6822 9.48451 41.8206 9.67282C41.9591 9.86113 42.1502 10.0107 42.3939 10.1214C42.6431 10.2267 42.9366 10.2793 43.2745 10.2793C43.5957 10.2793 43.8837 10.246 44.1385 10.1796C44.3988 10.1131 44.6231 10.03 44.8114 9.93036C45.0053 9.83066 45.1548 9.7282 45.26 9.62297L46.2404 11.1848C46.102 11.3344 45.9053 11.4811 45.6505 11.6251C45.4013 11.7636 45.0717 11.8771 44.6619 11.9657C44.252 12.0544 43.7342 12.0987 43.1083 12.0987C42.3551 12.0987 41.6849 11.9574 41.0979 11.675C40.5108 11.3925 40.0483 10.9771 39.7105 10.4288C39.3726 9.88051 39.2037 9.21036 39.2037 8.41836C39.2037 7.75374 39.3477 7.15559 39.6357 6.6239C39.9293 6.08666 40.3529 5.66297 40.9068 5.35282C41.4606 5.03713 42.128 4.87928 42.9089 4.87928C43.6511 4.87928 44.2936 5.01497 44.8363 5.28636C45.3846 5.55774 45.8057 5.96205 46.0992 6.49928C46.3983 7.03097 46.5478 7.69559 46.5478 8.49313C46.5478 8.53743 46.545 8.62605 46.5395 8.75897C46.5395 8.8919 46.534 8.98051 46.5229 9.02482H41.588ZM44.1717 7.7039C44.1662 7.52666 44.1191 7.3522 44.0305 7.18051C43.9419 7.00328 43.8089 6.85928 43.6317 6.74851C43.4545 6.6322 43.2274 6.57405 42.9505 6.57405C42.6736 6.57405 42.4382 6.62943 42.2443 6.7402C42.056 6.84543 41.912 6.9839 41.8123 7.15559C41.7126 7.32728 41.6573 7.51005 41.6462 7.7039H44.1717ZM49.0821 11.8993H46.5566V5.07866H49.0821V6.13374H49.0406C49.0849 6.00636 49.1929 5.84574 49.3646 5.6519C49.5363 5.45251 49.7772 5.27528 50.0873 5.1202C50.3975 4.95959 50.7769 4.87928 51.2255 4.87928C51.5412 4.87928 51.832 4.92913 52.0978 5.02882C52.3637 5.12297 52.5575 5.21436 52.6793 5.30297L51.699 7.35497C51.6215 7.26082 51.483 7.1639 51.2837 7.0642C51.0898 6.95897 50.8461 6.90636 50.5526 6.90636C50.2147 6.90636 49.935 6.9922 49.7135 7.1639C49.4975 7.33559 49.3369 7.54328 49.2317 7.78697C49.132 8.03066 49.0821 8.26051 49.0821 8.47651V11.8993Z" />
          </mask>
          <path
            d="M3.46804 12.0987C2.80896 12.0987 2.23573 11.938 1.74835 11.6168C1.26096 11.29 0.88158 10.8553 0.610195 10.3125C0.344349 9.7642 0.211426 9.15774 0.211426 8.49313C0.211426 7.82851 0.344349 7.22482 0.610195 6.68205C0.88158 6.13374 1.26096 5.6962 1.74835 5.36943C2.23573 5.04266 2.80896 4.87928 3.46804 4.87928C3.90558 4.87928 4.29327 4.94851 4.63112 5.08697C4.96896 5.2199 5.24312 5.38051 5.45358 5.56882C5.66404 5.75159 5.79143 5.92051 5.83573 6.07559V0.467896H8.36127V11.8993H5.86066V10.7944C5.75543 10.9993 5.58373 11.2042 5.34558 11.4091C5.10743 11.6085 4.82773 11.7719 4.5065 11.8993C4.18527 12.0322 3.83912 12.0987 3.46804 12.0987ZM4.24066 10.1131C4.54527 10.1131 4.81666 10.0439 5.05481 9.90543C5.2985 9.76697 5.48958 9.5759 5.62804 9.3322C5.7665 9.08297 5.83573 8.80328 5.83573 8.49313C5.83573 8.18297 5.7665 7.90605 5.62804 7.66236C5.48958 7.41313 5.2985 7.21928 5.05481 7.08082C4.81666 6.93682 4.54527 6.86482 4.24066 6.86482C3.94712 6.86482 3.68127 6.93682 3.44312 7.08082C3.2105 7.21928 3.02496 7.41313 2.8865 7.66236C2.75358 7.90605 2.68712 8.18297 2.68712 8.49313C2.68712 8.80328 2.75358 9.08297 2.8865 9.3322C3.02496 9.5759 3.2105 9.76697 3.44312 9.90543C3.68127 10.0439 3.94712 10.1131 4.24066 10.1131ZM8.82807 11.8993V5.07866H11.3536V11.8993H8.82807ZM10.1241 3.67466C9.7253 3.67466 9.38746 3.5362 9.11053 3.25928C8.83361 2.97682 8.69515 2.64174 8.69515 2.25405C8.69515 1.86636 8.83361 1.53128 9.11053 1.24882C9.393 0.960819 9.73084 0.816819 10.1241 0.816819C10.3844 0.816819 10.6225 0.88328 10.8385 1.0162C11.0545 1.14359 11.229 1.31528 11.3619 1.53128C11.4948 1.74728 11.5613 1.9882 11.5613 2.25405C11.5613 2.64174 11.4201 2.97682 11.1376 3.25928C10.8551 3.5362 10.5173 3.67466 10.1241 3.67466ZM15.0708 4.87928C15.5194 4.87928 15.9293 4.91805 16.3003 4.99559C16.6714 5.06759 16.9816 5.15066 17.2308 5.24482C17.4856 5.33897 17.649 5.41651 17.7209 5.47743L16.8985 6.96451C16.7933 6.88697 16.5966 6.78728 16.3086 6.66543C16.0262 6.54359 15.7105 6.48266 15.3616 6.48266C15.0957 6.48266 14.8714 6.5242 14.6886 6.60728C14.5059 6.68482 14.4145 6.80943 14.4145 6.98113C14.4145 7.15282 14.5142 7.29128 14.7136 7.39651C14.9185 7.4962 15.212 7.58482 15.5942 7.66236C15.9265 7.72882 16.2643 7.83405 16.6077 7.97805C16.9511 8.12205 17.2363 8.33528 17.4634 8.61774C17.696 8.89466 17.8123 9.26574 17.8123 9.73097C17.8123 10.2073 17.7099 10.6005 17.5049 10.9107C17.3 11.2208 17.0286 11.4617 16.6908 11.6334C16.3529 11.8051 15.9874 11.9242 15.5942 11.9907C15.2009 12.0627 14.8188 12.0987 14.4477 12.0987C13.9271 12.0987 13.4729 12.0516 13.0853 11.9574C12.7031 11.8633 12.3929 11.7553 12.1548 11.6334C11.9166 11.5116 11.7505 11.4147 11.6563 11.3427L12.4705 9.68113C12.6145 9.80297 12.8499 9.94143 13.1766 10.0965C13.5034 10.246 13.8496 10.3208 14.2151 10.3208C14.5696 10.3208 14.8437 10.2682 15.0376 10.163C15.2314 10.0577 15.3283 9.91928 15.3283 9.74759C15.3283 9.60913 15.2813 9.49836 15.1871 9.41528C15.0929 9.3322 14.96 9.2602 14.7883 9.19928C14.6166 9.13836 14.4089 9.08297 14.1653 9.03313C13.9437 8.98882 13.7083 8.91959 13.4591 8.82543C13.2099 8.73128 12.9745 8.6039 12.7529 8.44328C12.5314 8.27713 12.3514 8.06943 12.2129 7.8202C12.0745 7.57097 12.0053 7.26913 12.0053 6.91466C12.0053 6.46051 12.152 6.0839 12.4456 5.78482C12.7391 5.48574 13.1185 5.26143 13.5837 5.1119C14.0489 4.95682 14.5446 4.87928 15.0708 4.87928ZM21.7699 10.1131C22.0856 10.1131 22.3459 10.0605 22.5508 9.95528C22.7557 9.84451 22.8942 9.7559 22.9662 9.68943L24.121 11.4008C24.0323 11.4728 23.88 11.567 23.664 11.6833C23.448 11.794 23.1767 11.891 22.8499 11.974C22.5287 12.0571 22.1603 12.0987 21.745 12.0987C20.964 12.0987 20.2773 11.9519 19.6847 11.6584C19.092 11.3593 18.6296 10.9384 18.2973 10.3956C17.9705 9.85282 17.8071 9.21589 17.8071 8.48482C17.8071 7.7482 17.9705 7.11128 18.2973 6.57405C18.6296 6.03682 19.092 5.62143 19.6847 5.3279C20.2773 5.02882 20.964 4.87928 21.745 4.87928C22.1548 4.87928 22.5203 4.92359 22.8416 5.0122C23.1684 5.09528 23.4425 5.1922 23.664 5.30297C23.8856 5.4082 24.0407 5.49959 24.1293 5.57713L22.9496 7.30513C22.9108 7.26636 22.8388 7.21097 22.7336 7.13897C22.6339 7.06697 22.5037 7.00328 22.3431 6.9479C22.1825 6.89251 21.9914 6.86482 21.7699 6.86482C21.4985 6.86482 21.2437 6.93405 21.0056 7.07251C20.773 7.21097 20.5847 7.40205 20.4407 7.64574C20.2967 7.88943 20.2247 8.16913 20.2247 8.48482C20.2247 8.80051 20.2967 9.08297 20.4407 9.3322C20.5847 9.5759 20.773 9.76697 21.0056 9.90543C21.2437 10.0439 21.4985 10.1131 21.7699 10.1131ZM27.5401 12.0987C26.7924 12.0987 26.1278 11.9464 25.5462 11.6417C24.9702 11.3316 24.5161 10.9079 24.1838 10.3707C23.857 9.8279 23.6936 9.20759 23.6936 8.50974C23.6936 7.8119 23.857 7.19159 24.1838 6.64882C24.5161 6.10051 24.9702 5.66851 25.5462 5.35282C26.1278 5.03713 26.7924 4.87928 27.5401 4.87928C28.2878 4.87928 28.9469 5.03713 29.5173 5.35282C30.0878 5.66851 30.5336 6.10051 30.8549 6.64882C31.1761 7.19159 31.3367 7.8119 31.3367 8.50974C31.3367 9.20759 31.1761 9.8279 30.8549 10.3707C30.5336 10.9079 30.0878 11.3316 29.5173 11.6417C28.9469 11.9464 28.2878 12.0987 27.5401 12.0987ZM27.5401 10.0217C27.8281 10.0217 28.0773 9.95805 28.2878 9.83066C28.4982 9.70328 28.6616 9.52328 28.7779 9.29066C28.8942 9.05805 28.9524 8.79497 28.9524 8.50143C28.9524 8.20236 28.8942 7.93651 28.7779 7.7039C28.6616 7.47128 28.4982 7.28851 28.2878 7.15559C28.0773 7.02266 27.8281 6.9562 27.5401 6.9562C27.2521 6.9562 27.0001 7.02266 26.7841 7.15559C26.5736 7.28851 26.4075 7.47128 26.2856 7.7039C26.1693 7.93651 26.1112 8.20236 26.1112 8.50143C26.1112 8.79497 26.1693 9.05805 26.2856 9.29066C26.4075 9.52328 26.5736 9.70328 26.7841 9.83066C27.0001 9.95805 27.2521 10.0217 27.5401 10.0217ZM30.9563 5.07866H33.6563L35.3012 9.60636L36.9544 5.07866H39.6378L36.7799 11.8993H33.8224L30.9563 5.07866ZM41.588 9.02482C41.6046 9.26851 41.6822 9.48451 41.8206 9.67282C41.9591 9.86113 42.1502 10.0107 42.3939 10.1214C42.6431 10.2267 42.9366 10.2793 43.2745 10.2793C43.5957 10.2793 43.8837 10.246 44.1385 10.1796C44.3988 10.1131 44.6231 10.03 44.8114 9.93036C45.0053 9.83066 45.1548 9.7282 45.26 9.62297L46.2404 11.1848C46.102 11.3344 45.9053 11.4811 45.6505 11.6251C45.4013 11.7636 45.0717 11.8771 44.6619 11.9657C44.252 12.0544 43.7342 12.0987 43.1083 12.0987C42.3551 12.0987 41.6849 11.9574 41.0979 11.675C40.5108 11.3925 40.0483 10.9771 39.7105 10.4288C39.3726 9.88051 39.2037 9.21036 39.2037 8.41836C39.2037 7.75374 39.3477 7.15559 39.6357 6.6239C39.9293 6.08666 40.3529 5.66297 40.9068 5.35282C41.4606 5.03713 42.128 4.87928 42.9089 4.87928C43.6511 4.87928 44.2936 5.01497 44.8363 5.28636C45.3846 5.55774 45.8057 5.96205 46.0992 6.49928C46.3983 7.03097 46.5478 7.69559 46.5478 8.49313C46.5478 8.53743 46.545 8.62605 46.5395 8.75897C46.5395 8.8919 46.534 8.98051 46.5229 9.02482H41.588ZM44.1717 7.7039C44.1662 7.52666 44.1191 7.3522 44.0305 7.18051C43.9419 7.00328 43.8089 6.85928 43.6317 6.74851C43.4545 6.6322 43.2274 6.57405 42.9505 6.57405C42.6736 6.57405 42.4382 6.62943 42.2443 6.7402C42.056 6.84543 41.912 6.9839 41.8123 7.15559C41.7126 7.32728 41.6573 7.51005 41.6462 7.7039H44.1717ZM49.0821 11.8993H46.5566V5.07866H49.0821V6.13374H49.0406C49.0849 6.00636 49.1929 5.84574 49.3646 5.6519C49.5363 5.45251 49.7772 5.27528 50.0873 5.1202C50.3975 4.95959 50.7769 4.87928 51.2255 4.87928C51.5412 4.87928 51.832 4.92913 52.0978 5.02882C52.3637 5.12297 52.5575 5.21436 52.6793 5.30297L51.699 7.35497C51.6215 7.26082 51.483 7.1639 51.2837 7.0642C51.0898 6.95897 50.8461 6.90636 50.5526 6.90636C50.2147 6.90636 49.935 6.9922 49.7135 7.1639C49.4975 7.33559 49.3369 7.54328 49.2317 7.78697C49.132 8.03066 49.0821 8.26051 49.0821 8.47651V11.8993Z"
            fill="black"
            stroke="black"
            strokeWidth="2"
            mask="url(#path-2-inside-1_341_8333)"
          />
        </g>
        <defs>
          <clipPath id="clip0_341_8333">
            <rect
              width="82.1538"
              height="12"
              fill="white"
              transform="translate(0 0.130005)"
            />
          </clipPath>
        </defs>
      </MobileSVG>
    </>
  );
}

const NavLinks = styled.a`
  color: var(--Eerie-Black, #1b1b18);
  font-family: "Mona Sans", sans-serif;
  font-size: 16px;
  font-style: normal;
  font-weight: 700;
  line-height: normal;

  display: flex;
  justify-content: space-between;
  align-items: center;

  padding: 16px 8px;
`;

const AuthButton = styled.button`
  border: none;
  outline: none;
  border-radius: 50rem;
  width: max-content;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
  font-size: 0.75rem;
  padding: 0.5rem 1.25rem;
  color: #1b1b18;
  font-weight: 600;
  border: 1px solid #e3e3e0;
  background: #f3f3f2;

  &.sign-in {
    color: #fff;
    background: #1b1b18;
  }

  &:active,
  &:focus {
    border: none;
    outline: none;
    border: 1px solid #e3e3e0;
  }

  @media screen and (max-width: 800px) {
    display: flex;
    padding: 8px 24px;
    justify-content: center;
    align-items: center;
    gap: 10px;

    border-radius: 24px;
    border: 1px solid #e3e3e0;
    background: #f3f3f2;

    color: var(--Eerie-Black, #1b1b18);
    font-family: "Mona Sans", sans-serif;
    font-size: 12px;
    font-style: normal;
    font-weight: 600;
    line-height: normal;
  }
`;

const Nav = styled.nav`
  width: 100%;
  height: 5.75rem;
  padding: 24px 120px;
  height: 92px;
  background: var(--White, #fdfdfc);
  border-bottom: 1px solid #cfcfcf;

  position: fixed;
  top: 0;

  z-index: 50;

  @media screen and (max-width: 1200px) {
    padding: 24px 60px;
  }

  @media screen and (max-width: 990px) {
    padding: 24px;
  }

  @media screen and (max-width: 800px) {
    padding: 12px 16px;
    height: 52px !important;
  }
`;

const LinksDiv = styled.div`
  display: flex;
  gap: 1rem;

  @media screen and (max-width: 1180px) {
    gap: 0.5rem;
  }

  @media screen and (max-width: 800px) {
    display: none;
  }
`;

const MobileLinks = styled.div`
  display: none;

  @media screen and (max-width: 800px) {
    margin-left: auto;
    display: block !important;
  }
`;

const MobileHeading = styled.div`
  color: #1b1b18;
  font-family: "Mona Sans", sans-serif;
  font-size: 16px;
  font-style: normal;
  font-weight: 700;
  line-height: normal;

  cursor: pointer;

  display: flex;
  justify-content: space-between;
  align-items: center;

  padding: 16px 8px;

  &.selected {
    i {
      transform: rotate(180deg);
    }
  }
`;

const MobileDropdown = ({ title, links, href }) => {
  const [open, setOpen] = useState(false);

  return (
    <div key={title}>
      <MobileHeading onClick={() => setOpen((prev) => !prev)}>
        {!links ? (
          <a style={{ color: "inherit" }} href={href}>
            {title}
          </a>
        ) : (
          <>
            {title}{" "}
            <i className={`ms-auto bi bi-chevron-${open ? "up" : "down"}`}></i>
          </>
        )}
      </MobileHeading>
    </div>
  );
};

function MenuDropdown({ name, href }) {
  return (
    <div className="position-relative d-flex flex-column align-items-center">
      <NavLinks href={href}>{name}</NavLinks>
    </div>
  );
}

const links = [
  { category: "Components", href: "/components" },
  {
    category: "Projects",
    href: "/projects",
  },
  {
    category: "Resources",
    href: "/resources",
  },
  {
    category: "Build",
    href: "https://jutsu.ai",
  },
  {
    category: "Tools",
    href: "/tools",
  },
];

export default function Navbar(props) {
  const [show, setShow] = useState(false);

  const handleClose = () => setShow(false);
  const handleShow = () => setShow(true);

  return (
    <>
      <Nav
        className={`w-100 d-flex gap-3 align-items-center`}
        style={{ height: 92 }}
      >
        <a style={{ cursor: "pointer" }} href="/">
          <Logo />
        </a>
        <LinksDiv className="ms-auto align-items-center">
          {/* Dropdowns */}
          {links.map((item) => (
            <MenuDropdown
              name={item.category}
              links={item.menu}
              key={item.href}
              href={item.href}
            />
          ))}

          {/* <AuthButton onClick={props.logOut} className="sign-in">
              Sign out
            </AuthButton> */}
          {props.signedIn ? (
            <ProfileIcon
              accountId={props.signedAccountId}
              logOut={props.logOut}
            />
          ) : (
            <AuthButton onClick={props.requestSignIn} className="sign-in">
              Sign in
            </AuthButton>
          )}
        </LinksDiv>
        <MobileLinks>
          <div className="d-flex gap-3 align-items-center">
            {props.signedIn ? (
              <AuthButton onClick={props.logOut} className="sign-in">
                Sign out
              </AuthButton>
            ) : (
              <AuthButton onClick={props.requestSignIn}>
                Create Account
              </AuthButton>
            )}
            <Button
              style={{ width: "24px", height: "24px" }}
              className="rounded-circle p-0 d-flex align-items-center justify-content-center"
              variant="dark"
              onClick={handleShow}
            >
              <i className="bi bi-list"></i>
            </Button>
          </div>

          <Offcanvas show={show} onHide={handleClose} placement="end">
            <Offcanvas.Header>
              <Offcanvas.Title>
                <Logo />
              </Offcanvas.Title>
              <Button
                style={{ width: "24px", height: "24px" }}
                className="rounded-circle p-0 d-flex align-items-center justify-content-center"
                variant="dark"
                onClick={handleClose}
              >
                <i className="bi bi-x"></i>
              </Button>
            </Offcanvas.Header>
            <Offcanvas.Body>
              <div className="d-flex flex-column gap-3">
                <div className="d-flex flex-column">
                  {links.map((it) => (
                    <MobileDropdown
                      title={it.category}
                      links={it.menu}
                      key={it.href}
                      href={it.href}
                    />
                  ))}
                </div>

                {props.signedIn ? (
                  <AuthButton
                    style={{ width: "100%" }}
                    onClick={props.logOut}
                    className="sign-in"
                  >
                    Sign out
                  </AuthButton>
                ) : (
                  <AuthButton
                    style={{ width: "100%" }}
                    onClick={props.requestSignIn}
                    className="sign-in"
                  >
                    Sign in
                  </AuthButton>
                )}
              </div>
            </Offcanvas.Body>
          </Offcanvas>
        </MobileLinks>
      </Nav>
      <nav
        style={{
          position: "fixed",
          top: -60,
          left: 0,
          width: "100%",
          transition: "top 0.3s",
        }}
      >
        <div>test</div>
      </nav>
    </>
  );
}

'''
'''--- src/components/header/ProfileIcon.js ---
import React, { useState } from "react";
import { Widget } from "near-social-vm";
import styled from "styled-components";

const Button = styled.button`
  all: unset;

  padding: 8px 16px;
  border-radius: 50rem;

  background: #1b1b18;
  color: #fcfcfc;

  font-size: 12px;
  font-weight: 500;
  font-family: "Mona Sans", sans-serif;

  display: flex;
  align-items: center;
  justify-content: center;
  gap: 4px;
`;

const AuthButton = ({ logOut }) => {
  return (
    <Button onClick={logOut}>
      <i className="bi bi-box-arrow-right"></i> Sign out
    </Button>
  );
};

const ProfileButton = ({ accountId }) => {
  return (
    <a style={{ all: 'unset' }} href={`/mob.near/widget/ProfilePage?accountId=${accountId}`}>
      <Button>
        <i className="bi bi-person"></i> Profile
      </Button>
    </a>
  );
};

export default function ProfileIcon({ accountId, logOut }) {
  const [show, setShow] = useState(false);
  const onMouseEnter = () => {
    setShow(true);
  };

  const onMouseLeave = () => {
    setShow(false);
  };

  return (
    <div
      onMouseEnter={onMouseEnter}
      onMouseLeave={onMouseLeave}
      className="position-relative d-flex flex-column align-items-center p-3"
    >
      <Widget
        src="mob.near/widget/ProfileImage"
        props={{
          accountId: accountId,
          imageClassName: "rounded-circle w-100 h-100",
          style: { width: "3em", height: "3em", cursor: "pointer" },
        }}
      />
      {show && (
        <div
          style={{ zIndex: 100, top: 75, width: "max-content" }}
          className="position-absolute rounded-3 shadow bg-white p-3"
        >
          <div className="d-flex flex-column gap-3">
            <div>
              <small style={{ color: "inherit" }}>{accountId}</small>
            </div>
            <div className="d-flex flex-column align-items-center gap-2 w-100">
              <ProfileButton accountId={accountId} />
              <AuthButton logOut={logOut} />
            </div>
          </div>
        </div>
      )}
    </div>
  );
}

'''
'''--- src/components/icons/ArrowUpRight.js ---
import React from "react";

export function ArrowUpRight() {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className="arrow-up-right"
    >
      <path
        d="M17.25 15.25V6.75H8.75"
        stroke="#9BA1A6"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M17 7L6.75 17.25"
        stroke="#9BA1A6"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
}

'''
'''--- src/components/icons/Book.js ---
import React from "react";

export function Book() {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M19.25 5.75C19.25 5.19772 18.8023 4.75 18.25 4.75H14C12.8954 4.75 12 5.64543 12 6.75V19.25L12.8284 18.4216C13.5786 17.6714 14.596 17.25 15.6569 17.25H18.25C18.8023 17.25 19.25 16.8023 19.25 16.25V5.75Z"
        stroke="#9BA1A6"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M4.75 5.75C4.75 5.19772 5.19772 4.75 5.75 4.75H10C11.1046 4.75 12 5.64543 12 6.75V19.25L11.1716 18.4216C10.4214 17.6714 9.40401 17.25 8.34315 17.25H5.75C5.19772 17.25 4.75 16.8023 4.75 16.25V5.75Z"
        stroke="#9BA1A6"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
}

'''
'''--- src/components/icons/Close.js ---
import React from "react";

export function Close() {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M17.25 6.75L6.75 17.25"
        stroke="#9BA1A6"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M6.75 6.75L17.25 17.25"
        stroke="#9BA1A6"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
}

'''
'''--- src/components/icons/Code.js ---
import React from "react";

export function Code() {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M4.75 6.75C4.75 5.64543 5.64543 4.75 6.75 4.75H17.25C18.3546 4.75 19.25 5.64543 19.25 6.75V17.25C19.25 18.3546 18.3546 19.25 17.25 19.25H6.75C5.64543 19.25 4.75 18.3546 4.75 17.25V6.75Z"
        stroke="#9BA1A6"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M8.75 10.75L11.25 13L8.75 15.25"
        stroke="#9BA1A6"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
}

'''
'''--- src/components/icons/Diff.js ---
import React from "react";

export function Diff() {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      fill="none"
      viewBox="-4 -4 24 24"
    >
      <path d="M8.515 1.019A7 7 0 0 0 8 1V0a8 8 0 0 1 .589.022l-.074.997zm2.004.45a7.003 7.003 0 0 0-.985-.299l.219-.976c.383.086.76.2 1.126.342l-.36.933zm1.37.71a7.01 7.01 0 0 0-.439-.27l.493-.87a8.025 8.025 0 0 1 .979.654l-.615.789a6.996 6.996 0 0 0-.418-.302zm1.834 1.79a6.99 6.99 0 0 0-.653-.796l.724-.69c.27.285.52.59.747.91l-.818.576zm.744 1.352a7.08 7.08 0 0 0-.214-.468l.893-.45a7.976 7.976 0 0 1 .45 1.088l-.95.313a7.023 7.023 0 0 0-.179-.483zm.53 2.507a6.991 6.991 0 0 0-.1-1.025l.985-.17c.067.386.106.778.116 1.17l-1 .025zm-.131 1.538c.033-.17.06-.339.081-.51l.993.123a7.957 7.957 0 0 1-.23 1.155l-.964-.267c.046-.165.086-.332.12-.501zm-.952 2.379c.184-.29.346-.594.486-.908l.914.405c-.16.36-.345.706-.555 1.038l-.845-.535zm-.964 1.205c.122-.122.239-.248.35-.378l.758.653a8.073 8.073 0 0 1-.401.432l-.707-.707z" />
      <path d="M8 1a7 7 0 1 0 4.95 11.95l.707.707A8.001 8.001 0 1 1 8 0v1z" />
      <path d="M7.5 3a.5.5 0 0 1 .5.5v5.21l3.248 1.856a.5.5 0 0 1-.496.868l-3.5-2A.5.5 0 0 1 7 9V3.5a.5.5 0 0 1 .5-.5z" />
    </svg>
  );
}

'''
'''--- src/components/icons/Fork.js ---
import React from "react";

export function Fork() {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M9.25 7C9.25 8.24264 8.24264 9.25 7 9.25C5.75736 9.25 4.75 8.24264 4.75 7C4.75 5.75736 5.75736 4.75 7 4.75C8.24264 4.75 9.25 5.75736 9.25 7Z"
        stroke="#9BA1A6"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M19.25 7C19.25 8.24264 18.2426 9.25 17 9.25C15.7574 9.25 14.75 8.24264 14.75 7C14.75 5.75736 15.7574 4.75 17 4.75C18.2426 4.75 19.25 5.75736 19.25 7Z"
        stroke="#9BA1A6"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M14.25 17C14.25 18.2426 13.2426 19.25 12 19.25C10.7574 19.25 9.75 18.2426 9.75 17C9.75 15.7574 10.7574 14.75 12 14.75C13.2426 14.75 14.25 15.7574 14.25 17Z"
        stroke="#9BA1A6"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M6.75 9.5V10.25C6.75 11.3546 7.64543 12.25 8.75 12.25H12M17.25 9.5V10.25C17.25 11.3546 16.3546 12.25 15.25 12.25H12M12 12.25V14.5"
        stroke="#9BA1A6"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
}

'''
'''--- src/components/icons/Home.js ---
import React from "react";

export function Home() {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M6.75024 19.2502H17.2502C18.3548 19.2502 19.2502 18.3548 19.2502 17.2502V9.75025L12.0002 4.75024L4.75024 9.75025V17.2502C4.75024 18.3548 5.64568 19.2502 6.75024 19.2502Z"
        stroke="#9BA1A6"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M9.74963 15.7493C9.74963 14.6447 10.6451 13.7493 11.7496 13.7493H12.2496C13.3542 13.7493 14.2496 14.6447 14.2496 15.7493V19.2493H9.74963V15.7493Z"
        stroke="#9BA1A6"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
}

'''
'''--- src/components/icons/LogOut.js ---
import React from "react";

export function LogOut() {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M15.75 8.75L19.25 12L15.75 15.25"
        stroke="#697177"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M19 12H10.75"
        stroke="#697177"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M15.25 4.75H6.75C5.64543 4.75 4.75 5.64543 4.75 6.75V17.25C4.75 18.3546 5.64543 19.25 6.75 19.25H15.25"
        stroke="#697177"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
}

'''
'''--- src/components/icons/NearSocialLogo.js ---
import React from "react";

export function NearSocialLogo() {
  return (
    <svg
      width="29"
      height="20"
      viewBox="0 0 29 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M9.55396 17.509L2 9.99996L9.55396 2.49097"
        stroke="#3D7FFF"
        strokeWidth="3"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M19.536 2.49097L27 9.99996L19.536 17.509"
        stroke="#3D7FFF"
        strokeWidth="3"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
}

'''
'''--- src/components/icons/Pretend.js ---
import React from "react";

export function Pretend() {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="16"
      height="16"
      fill="none"
      viewBox="0 0 16 16"
    >
      <path
        strokeWidth="0.3px"
        fill="#697177"
        d="M1.5 1a.5.5 0 0 0-.5.5v3a.5.5 0 0 1-1 0v-3A1.5 1.5 0 0 1 1.5 0h3a.5.5 0 0 1 0 1h-3zM11 .5a.5.5 0 0 1 .5-.5h3A1.5 1.5 0 0 1 16 1.5v3a.5.5 0 0 1-1 0v-3a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 1-.5-.5zM.5 11a.5.5 0 0 1 .5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 1 0 1h-3A1.5 1.5 0 0 1 0 14.5v-3a.5.5 0 0 1 .5-.5zm15 0a.5.5 0 0 1 .5.5v3a1.5 1.5 0 0 1-1.5 1.5h-3a.5.5 0 0 1 0-1h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 1 .5-.5z"
      />
      <path
        strokeWidth="0.3px"
        fill="#697177"
        d="M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3zm8-9a3 3 0 1 1-6 0 3 3 0 0 1 6 0z"
      />
    </svg>
  );
}

'''
'''--- src/components/icons/StopPretending.js ---
import React from "react";

export function StopPretending() {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="16"
      height="16"
      fill="none"
      viewBox="0 0 16 16"
    >
      <path
        strokeWidth="0.3px"
        fill="#697177"
        d="M13.879 10.414a2.501 2.501 0 0 0-3.465 3.465l3.465-3.465Zm.707.707-3.465 3.465a2.501 2.501 0 0 0 3.465-3.465Zm-4.56-1.096a3.5 3.5 0 1 1 4.949 4.95 3.5 3.5 0 0 1-4.95-4.95ZM11 5a3 3 0 1 1-6 0 3 3 0 0 1 6 0Zm-9 8c0 1 1 1 1 1h5.256A4.493 4.493 0 0 1 8 12.5a4.49 4.49 0 0 1 1.544-3.393C9.077 9.038 8.564 9 8 9c-5 0-6 3-6 4Z"
      />
    </svg>
  );
}

'''
'''--- src/components/icons/User.js ---
import React from "react";

export function User() {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M15.25 8C15.25 9.79493 13.7949 11.25 12 11.25C10.2051 11.25 8.75 9.79493 8.75 8C8.75 6.20507 10.2051 4.75 12 4.75C13.7949 4.75 15.25 6.20507 15.25 8Z"
        stroke="#697177"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M6.84751 19.25H17.1525C18.2944 19.25 19.174 18.2681 18.6408 17.2584C17.8563 15.7731 16.068 14 12 14C7.93201 14 6.14367 15.7731 5.35924 17.2584C4.82597 18.2681 5.70559 19.25 6.84751 19.25Z"
        stroke="#697177"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
}

'''
'''--- src/components/icons/UserCircle.js ---
import React from "react";

export function UserCircle() {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M19.25 12C19.25 16.0041 16.0041 19.25 12 19.25C7.99594 19.25 4.75 16.0041 4.75 12C4.75 7.99594 7.99594 4.75 12 4.75C16.0041 4.75 19.25 7.99594 19.25 12Z"
        stroke="#9BA1A6"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M14.25 10C14.25 11.2426 13.2426 12.25 12 12.25C10.7574 12.25 9.75 11.2426 9.75 10C9.75 8.75736 10.7574 7.75 12 7.75C13.2426 7.75 14.25 8.75736 14.25 10Z"
        stroke="#9BA1A6"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M7.19745 17C8.34392 15.625 10.0698 14.75 12 14.75C13.9302 14.75 15.6561 15.625 16.8025 17"
        stroke="#9BA1A6"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
}

'''
'''--- src/components/icons/Withdraw.js ---
import React from "react";

export function Withdraw() {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        strokeWidth="0.3px"
        d="M14.9634 10.8766C15.2234 11.1366 15.2234 11.5567 14.9634 11.8167L12.4701 14.3067C12.2101 14.5701 11.79 14.5701 11.5301 14.3067L9.03676 11.8167C8.77679 11.5567 8.77679 11.1366 9.03676 10.8766C9.30016 10.6133 9.72011 10.6133 9.98008 10.8766L11.3333 12.2267V6.66667C11.3333 5.1933 12.5266 4 14 4H17.3333C18.8067 4 20 5.1933 20 6.66667V17.3333C20 18.8067 18.8067 20 17.3333 20H6.66667C5.1933 20 4 18.8067 4 17.3333V6.66667C4 5.1933 5.1933 4 6.66667 4H9.33333C9.7 4 10 4.3 10 4.66667C10 5.03333 9.7 5.33333 9.33333 5.33333H6.66667C5.93006 5.33333 5.33333 5.93006 5.33333 6.66667V17.3333C5.33333 18.0699 5.93006 18.6667 6.66667 18.6667H17.3333C18.0699 18.6667 18.6667 18.0699 18.6667 17.3333V6.66667C18.6667 5.93006 18.0699 5.33333 17.3333 5.33333H14C13.2634 5.33333 12.6667 5.93006 12.6667 6.66667V12.2267L14.0199 10.8766C14.28 10.6134 14.7 10.6134 14.9634 10.8766Z"
        fill="#697177"
      />
    </svg>
  );
}

'''
'''--- src/components/layouts/Footer.js ---
import React from "react";
import styled from "styled-components";

const Logo = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="120"
      height="19"
      viewBox="0 0 120 19"
      fill="none"
    >
      <g clipPath="url(#clip0_364_14702)">
        <path
          d="M78.408 1.822H83.905C84.8192 1.822 85.6646 1.94739 86.4412 2.19818C87.2259 2.44896 87.857 2.86155 88.3343 3.43593C88.8196 4.00222 89.0623 4.77076 89.0623 5.74155C89.0623 6.38065 88.941 6.95099 88.6983 7.45256C88.4637 7.95413 88.1482 8.36672 87.7518 8.69031C87.3635 9.00582 86.9387 9.21616 86.4776 9.32132C86.8821 9.36986 87.2745 9.48717 87.6547 9.67323C88.043 9.85121 88.3909 10.102 88.6983 10.4256C89.0138 10.7411 89.2605 11.1375 89.4385 11.6148C89.6246 12.084 89.7176 12.6422 89.7176 13.2894C89.7176 14.1874 89.5154 14.9802 89.1109 15.6678C88.7145 16.3474 88.132 16.8813 87.3635 17.2696C86.603 17.6499 85.6686 17.84 84.5603 17.84H78.408V1.822ZM82.0363 14.9398H83.6866C84.2044 14.9398 84.625 14.8629 84.9486 14.7092C85.2803 14.5474 85.523 14.3209 85.6767 14.0296C85.8304 13.7303 85.9073 13.3744 85.9073 12.9618C85.9073 12.3146 85.705 11.8413 85.3005 11.542C84.9041 11.2346 84.3459 11.0809 83.6259 11.0809H82.0363V14.9398ZM82.0363 8.24132H83.5046C83.9334 8.24132 84.2893 8.16447 84.5725 8.01076C84.8637 7.85705 85.0821 7.64267 85.2277 7.36762C85.3814 7.08447 85.4583 6.76087 85.4583 6.39683C85.4583 5.74155 85.2722 5.30065 84.9001 5.07413C84.528 4.83953 84.0183 4.72222 83.3711 4.72222H82.0363V8.24132ZM94.4037 9.81885C94.4037 10.733 94.5898 11.5622 94.9619 12.3065C95.3421 13.0427 95.8639 13.6292 96.5273 14.066C97.1987 14.5029 97.9754 14.7213 98.8572 14.7213C99.739 14.7213 100.512 14.5029 101.175 14.066C101.846 13.6292 102.368 13.0427 102.74 12.3065C103.121 11.5622 103.311 10.733 103.311 9.81885C103.311 8.90469 103.121 8.07953 102.74 7.34335C102.368 6.60717 101.846 6.02065 101.175 5.5838C100.512 5.13885 99.739 4.91638 98.8572 4.91638C97.9754 4.91638 97.1987 5.13885 96.5273 5.5838C95.8639 6.02065 95.3421 6.60717 94.9619 7.34335C94.5898 8.07953 94.4037 8.90469 94.4037 9.81885ZM90.6298 9.81885C90.6298 8.65391 90.8361 7.56986 91.2486 6.56672C91.6612 5.55548 92.2396 4.67368 92.9839 3.92132C93.7282 3.16896 94.6019 2.58245 95.605 2.16177C96.6082 1.7411 97.6922 1.53076 98.8572 1.53076C100.038 1.53076 101.126 1.7411 102.121 2.16177C103.125 2.58245 103.994 3.16896 104.73 3.92132C105.475 4.67368 106.049 5.55548 106.454 6.56672C106.866 7.56986 107.072 8.65391 107.072 9.81885C107.072 10.9919 106.874 12.084 106.478 13.0953C106.081 14.0984 105.515 14.9802 104.779 15.7406C104.043 16.493 103.173 17.0795 102.17 17.5002C101.167 17.9209 100.063 18.1312 98.8572 18.1312C97.6275 18.1312 96.5071 17.9209 95.4958 17.5002C94.4927 17.0795 93.6271 16.493 92.899 15.7406C92.1709 14.9802 91.6086 14.0984 91.2122 13.0953C90.8239 12.084 90.6298 10.9919 90.6298 9.81885ZM114.261 1.53076C115.256 1.53076 116.126 1.63998 116.87 1.8584C117.614 2.07683 118.213 2.30739 118.666 2.55009C119.119 2.79278 119.394 2.95458 119.491 3.03548L117.744 5.95998C117.614 5.8629 117.392 5.72132 117.076 5.53526C116.769 5.34919 116.401 5.18335 115.972 5.03773C115.551 4.89211 115.11 4.8193 114.649 4.8193C114.026 4.8193 113.521 4.93256 113.132 5.15908C112.752 5.3775 112.562 5.70514 112.562 6.142C112.562 6.44132 112.663 6.71233 112.865 6.95503C113.076 7.18964 113.391 7.41616 113.812 7.63458C114.241 7.84492 114.783 8.07548 115.438 8.32627C116.037 8.54469 116.599 8.80357 117.125 9.1029C117.651 9.40222 118.112 9.75818 118.508 10.1708C118.913 10.5753 119.232 11.0445 119.467 11.5784C119.701 12.1123 119.819 12.7191 119.819 13.3986C119.819 14.2076 119.653 14.9114 119.321 15.5101C118.99 16.1006 118.537 16.5901 117.962 16.9784C117.396 17.3667 116.749 17.6539 116.021 17.84C115.301 18.0341 114.552 18.1312 113.776 18.1312C112.675 18.1312 111.688 18.0058 110.815 17.755C109.949 17.5042 109.249 17.2332 108.715 16.942C108.181 16.6508 107.862 16.4566 107.757 16.3595L109.565 13.3137C109.662 13.3865 109.848 13.5038 110.123 13.6656C110.406 13.8274 110.75 13.9973 111.154 14.1753C111.559 14.3451 111.988 14.4908 112.441 14.6121C112.902 14.7335 113.355 14.7941 113.8 14.7941C114.544 14.7941 115.102 14.6526 115.474 14.3694C115.847 14.0782 116.033 13.698 116.033 13.2287C116.033 12.8809 115.915 12.5694 115.681 12.2944C115.446 12.0193 115.094 11.7604 114.625 11.5177C114.156 11.2669 113.569 11.004 112.865 10.729C112.162 10.4458 111.502 10.102 110.888 9.6975C110.281 9.29301 109.787 8.78739 109.407 8.18065C109.027 7.57391 108.837 6.82155 108.837 5.92357C108.837 5.02559 109.088 4.24896 109.589 3.59368C110.099 2.93031 110.766 2.42065 111.591 2.06469C112.425 1.70874 113.314 1.53076 114.261 1.53076Z"
          fill="#00BF63"
        />
        <path
          d="M5.06594 18.1311C4.10324 18.1311 3.26594 17.8965 2.55403 17.4273C1.84212 16.95 1.28796 16.3149 0.891554 15.5221C0.503239 14.7212 0.309082 13.8354 0.309082 12.8646C0.309082 11.8938 0.503239 11.012 0.891554 10.2192C1.28796 9.41829 1.84212 8.77919 2.55403 8.30188C3.26594 7.82458 4.10324 7.58593 5.06594 7.58593C5.70504 7.58593 6.27133 7.68705 6.76481 7.8893C7.2583 8.08346 7.65874 8.31806 7.96616 8.59312C8.27358 8.86009 8.45964 9.10683 8.52436 9.33335V1.14233H12.2134V17.8399H8.56077V16.2259C8.40706 16.5253 8.15627 16.8246 7.80841 17.1239C7.46054 17.4151 7.052 17.6538 6.58279 17.8399C6.11358 18.034 5.60796 18.1311 5.06594 18.1311ZM6.19448 15.2309C6.63942 15.2309 7.03582 15.1298 7.38369 14.9275C7.73964 14.7253 8.01874 14.4462 8.22099 14.0902C8.42324 13.7262 8.52436 13.3176 8.52436 12.8646C8.52436 12.4115 8.42324 12.0071 8.22099 11.6511C8.01874 11.2871 7.73964 11.0039 7.38369 10.8017C7.03582 10.5913 6.63942 10.4862 6.19448 10.4862C5.76571 10.4862 5.3774 10.5913 5.02953 10.8017C4.68976 11.0039 4.41874 11.2871 4.2165 11.6511C4.02234 12.0071 3.92526 12.4115 3.92526 12.8646C3.92526 13.3176 4.02234 13.7262 4.2165 14.0902C4.41874 14.4462 4.68976 14.7253 5.02953 14.9275C5.3774 15.1298 5.76571 15.2309 6.19448 15.2309ZM12.8952 17.8399V7.87717H16.5842V17.8399H12.8952ZM14.7882 5.82638C14.2058 5.82638 13.7123 5.62413 13.3078 5.21964C12.9033 4.80705 12.701 4.31762 12.701 3.75132C12.701 3.18503 12.9033 2.69559 13.3078 2.28301C13.7204 1.86233 14.2138 1.652 14.7882 1.652C15.1685 1.652 15.5163 1.74908 15.8318 1.94323C16.1473 2.1293 16.4022 2.38009 16.5963 2.69559C16.7905 3.0111 16.8876 3.36301 16.8876 3.75132C16.8876 4.31762 16.6813 4.80705 16.2687 5.21964C15.8561 5.62413 15.3626 5.82638 14.7882 5.82638ZM22.0138 7.58593C22.6691 7.58593 23.2677 7.64256 23.8097 7.75582C24.3518 7.86099 24.8048 7.98233 25.1688 8.11986C25.541 8.25739 25.7796 8.37065 25.8848 8.45964L24.6834 10.6318C24.5297 10.5185 24.2425 10.3729 23.8219 10.1949C23.4093 10.0169 22.9482 9.92795 22.4385 9.92795C22.0502 9.92795 21.7225 9.98863 21.4556 10.11C21.1886 10.2232 21.0551 10.4053 21.0551 10.656C21.0551 10.9068 21.2007 11.1091 21.492 11.2628C21.7913 11.4084 22.2201 11.5378 22.7783 11.6511C23.2637 11.7482 23.7571 11.9019 24.2587 12.1122C24.7603 12.3226 25.1769 12.634 25.5086 13.0466C25.8484 13.4511 26.0183 13.9931 26.0183 14.6727C26.0183 15.3684 25.8686 15.9428 25.5693 16.3958C25.27 16.8489 24.8736 17.2008 24.3801 17.4515C23.8866 17.7023 23.3527 17.8763 22.7783 17.9733C22.2039 18.0785 21.6457 18.1311 21.1037 18.1311C20.3432 18.1311 19.6798 18.0623 19.1136 17.9248C18.5554 17.7873 18.1023 17.6295 17.7545 17.4515C17.4066 17.2736 17.1639 17.132 17.0264 17.0268L18.2156 14.5999C18.4259 14.7778 18.7697 14.9801 19.247 15.2066C19.7243 15.425 20.23 15.5342 20.7639 15.5342C21.2816 15.5342 21.6821 15.4574 21.9652 15.3037C22.2484 15.15 22.39 14.9477 22.39 14.6969C22.39 14.4947 22.3212 14.3329 22.1837 14.2115C22.0461 14.0902 21.852 13.985 21.6012 13.896C21.3504 13.8071 21.047 13.7262 20.6911 13.6533C20.3675 13.5886 20.0237 13.4875 19.6596 13.35C19.2956 13.2124 18.9518 13.0264 18.6282 12.7918C18.3046 12.5491 18.0416 12.2457 17.8394 11.8817C17.6371 11.5176 17.536 11.0767 17.536 10.559C17.536 9.89559 17.7504 9.34548 18.1792 8.90863C18.6079 8.47177 19.1621 8.14413 19.8416 7.9257C20.5212 7.69919 21.2452 7.58593 22.0138 7.58593ZM31.799 15.2309C32.2601 15.2309 32.6403 15.154 32.9396 15.0003C33.239 14.8385 33.4412 14.7091 33.5464 14.612L35.2331 17.1118C35.1037 17.2169 34.8812 17.3545 34.5657 17.5244C34.2502 17.6862 33.8538 17.8277 33.3765 17.9491C32.9073 18.0704 32.3693 18.1311 31.7626 18.1311C30.6219 18.1311 29.6187 17.9167 28.7531 17.488C27.8875 17.0511 27.212 16.4363 26.7266 15.6435C26.2493 14.8506 26.0107 13.9203 26.0107 12.8524C26.0107 11.7765 26.2493 10.8462 26.7266 10.0614C27.212 9.27672 27.8875 8.66997 28.7531 8.24121C29.6187 7.80436 30.6219 7.58593 31.7626 7.58593C32.3612 7.58593 32.8951 7.65065 33.3644 7.78009C33.8417 7.90144 34.2421 8.04301 34.5657 8.20481C34.8893 8.35851 35.1158 8.492 35.2453 8.60526L33.5221 11.1293C33.4655 11.0727 33.3603 10.9918 33.2066 10.8866C33.061 10.7814 32.8709 10.6884 32.6363 10.6075C32.4017 10.5266 32.1226 10.4862 31.799 10.4862C31.4026 10.4862 31.0304 10.5873 30.6826 10.7895C30.3428 10.9918 30.0677 11.2709 29.8574 11.6268C29.6471 11.9828 29.5419 12.3913 29.5419 12.8524C29.5419 13.3136 29.6471 13.7262 29.8574 14.0902C30.0677 14.4462 30.3428 14.7253 30.6826 14.9275C31.0304 15.1298 31.4026 15.2309 31.799 15.2309ZM40.2273 18.1311C39.1352 18.1311 38.1644 17.9086 37.315 17.4637C36.4736 17.0106 35.8103 16.3918 35.3249 15.6071C34.8476 14.8142 34.6089 13.9082 34.6089 12.8889C34.6089 11.8695 34.8476 10.9635 35.3249 10.1706C35.8103 9.36975 36.4736 8.73874 37.315 8.27761C38.1644 7.81649 39.1352 7.58593 40.2273 7.58593C41.3195 7.58593 42.2822 7.81649 43.1154 8.27761C43.9487 8.73874 44.5999 9.36975 45.0691 10.1706C45.5384 10.9635 45.773 11.8695 45.773 12.8889C45.773 13.9082 45.5384 14.8142 45.0691 15.6071C44.5999 16.3918 43.9487 17.0106 43.1154 17.4637C42.2822 17.9086 41.3195 18.1311 40.2273 18.1311ZM40.2273 15.0974C40.648 15.0974 41.0121 15.0044 41.3195 14.8183C41.6269 14.6322 41.8656 14.3693 42.0354 14.0295C42.2053 13.6897 42.2903 13.3055 42.2903 12.8767C42.2903 12.4399 42.2053 12.0515 42.0354 11.7118C41.8656 11.372 41.6269 11.105 41.3195 10.9109C41.0121 10.7167 40.648 10.6196 40.2273 10.6196C39.8067 10.6196 39.4386 10.7167 39.1231 10.9109C38.8157 11.105 38.573 11.372 38.395 11.7118C38.2251 12.0515 38.1402 12.4399 38.1402 12.8767C38.1402 13.3055 38.2251 13.6897 38.395 14.0295C38.573 14.3693 38.8157 14.6322 39.1231 14.8183C39.4386 15.0044 39.8067 15.0974 40.2273 15.0974ZM45.2173 7.87717H49.1611L51.5638 14.4906L53.9786 7.87717H57.8982L53.7238 17.8399H49.4038L45.2173 7.87717ZM60.7468 13.6412C60.7711 13.9972 60.8843 14.3127 61.0866 14.5877C61.2888 14.8628 61.5679 15.0812 61.9239 15.243C62.2879 15.3967 62.7167 15.4736 63.2102 15.4736C63.6794 15.4736 64.1001 15.425 64.4722 15.328C64.8524 15.2309 65.1801 15.1095 65.4551 14.9639C65.7383 14.8183 65.9567 14.6686 66.1104 14.5149L67.5424 16.7963C67.3402 17.0147 67.053 17.2291 66.6807 17.4394C66.3167 17.6417 65.8353 17.8075 65.2367 17.9369C64.638 18.0664 63.8816 18.1311 62.9675 18.1311C61.8673 18.1311 60.8884 17.9248 60.0308 17.5122C59.1733 17.0996 58.4978 16.4929 58.0043 15.692C57.5109 14.8911 57.2641 13.9122 57.2641 12.7554C57.2641 11.7846 57.4744 10.9109 57.8951 10.1342C58.3239 9.34952 58.9428 8.73065 59.7517 8.27761C60.5607 7.81649 61.5356 7.58593 62.6762 7.58593C63.7603 7.58593 64.6987 7.78413 65.4915 8.18054C66.2924 8.57694 66.9074 9.1675 67.3362 9.95222C67.773 10.7289 67.9914 11.6996 67.9914 12.8646C67.9914 12.9293 67.9874 13.0587 67.9793 13.2529C67.9793 13.4471 67.9712 13.5765 67.955 13.6412H60.7468ZM64.5207 11.7118C64.5126 11.4529 64.4439 11.1981 64.3144 10.9473C64.185 10.6884 63.9908 10.4781 63.732 10.3163C63.4731 10.1464 63.1414 10.0614 62.7369 10.0614C62.3324 10.0614 61.9886 10.1423 61.7055 10.3041C61.4304 10.4578 61.2201 10.6601 61.0744 10.9109C60.9288 11.1617 60.8479 11.4286 60.8318 11.7118H64.5207ZM71.6932 17.8399H68.0042V7.87717H71.6932V9.41829H71.6326C71.6973 9.23222 71.855 8.99762 72.1058 8.71447C72.3566 8.42323 72.7085 8.16436 73.1616 7.93784C73.6146 7.70323 74.1687 7.58593 74.824 7.58593C75.2851 7.58593 75.7099 7.65874 76.0982 7.80436C76.4865 7.94188 76.7696 8.07537 76.9476 8.20481L75.5157 11.2021C75.4024 11.0646 75.2002 10.923 74.909 10.7774C74.6258 10.6237 74.2699 10.5468 73.8411 10.5468C73.3476 10.5468 72.9391 10.6722 72.6155 10.923C72.3 11.1738 72.0654 11.4772 71.9117 11.8331C71.766 12.1891 71.6932 12.5248 71.6932 12.8403V17.8399Z"
          fill="black"
        />
      </g>
      <defs>
        <clipPath id="clip0_364_14702">
          <rect
            width="120"
            height="17.5281"
            fill="white"
            transform="translate(0 0.648926)"
          />
        </clipPath>
      </defs>
    </svg>
  );
};

const Footnotes = () => {
  const year = new Date().getFullYear();

  return (
    <div className="d-flex w-100 justify-content-between">
      <p>© {year} - Copyright</p>
      <a href="#" style={{ color: "inherit", textDecoration: "none" }}>
        Privacy
      </a>
    </div>
  );
};

const SocialLink = styled.a`
  display: flex;
  width: 40px;
  height: 40px;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  border-radius: 40px;
  background: #1b1819;
`;

const MainContainer = styled.div`
  display: flex;
  gap: 80px;
  justify-content: space-between;

  @media screen and (max-width: 900px) {
    gap: 40px;
    flex-direction: column;
  }
`;

const RoundedDiv = styled.div`
  padding: 32px 40px;
  gap: 32px;

  border-radius: 16px;
  background: #fff;

  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;

  @media screen and (max-width: 900px) {
    padding: 32px 20px;
    gap: 16px;
  }
`;

export default function Footer(props) {
  return (
    <footer
      style={{
        width: "100%",
        background: "linear-gradient(90deg, #03B172 0%, #05EB97 100%)",
        padding: "40px 40px 24px 40px",
        gap: 48,
      }}
      className="d-flex flex-column justify-content-center align-content-center"
    >
      <RoundedDiv>
        <MainContainer>
          <div>
            <Logo />
          </div>
          <div>
            {props.signedIn ? (
              <button
                className="d-flex justify-content-center align-content-center"
                style={{
                  color: "#FCFCFB",
                  padding: "0.5rem 1.25rem",
                  gap: 10,
                  borderRadius: "50rem",
                  border: "1px solid #E3E3E0",
                  background: "#1B1B18",
                  fontSize: "0.75rem",
                  fontWeight: 600,
                  height: "max-content",
                }}
                onClick={props.logOut}
              >
                Sign out
              </button>
            ) : (
              <div className="d-flex flex-column gap-3">
                <button
                  className="d-flex justify-content-center align-content-center"
                  style={{
                    color: "#FCFCFB",
                    padding: "0.5rem 1.25rem",
                    gap: 10,
                    borderRadius: "50rem",
                    border: "1px solid #E3E3E0",
                    background: "#1B1B18",
                    fontSize: "0.75rem",
                    fontWeight: 600,
                  }}
                  onClick={props.requestSignIn}
                >
                  Create Account
                </button>
                <button
                  className="d-flex justify-content-center align-content-center"
                  style={{
                    padding: "0.5rem 1.25rem",
                    gap: 10,
                    borderRadius: "50rem",
                    border: "1px solid #E3E3E0",
                    background: "#F3F3F2",
                    fontSize: "0.75rem",
                    fontWeight: 600,
                  }}
                  onClick={props.requestSignIn}
                >
                  Sign In
                </button>
              </div>
            )}
          </div>
        </MainContainer>
        <div className="d-flex flex-column flex-lg-row align-items-start justify-content-between gap-3">
          <div className="d-flex flex-column">
            <div className="d-flex gap-3">
              <SocialLink href="https://x.com/TheblockchainOS?t=46O8ePGVxXVbjnolKRT_-w&s=09">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="20"
                  height="21"
                  viewBox="0 0 20 21"
                  fill="none"
                >
                  <path
                    d="M19.3273 5.50002C19.2801 5.38581 19.2 5.28818 19.0972 5.21949C18.9944 5.15079 18.8736 5.11411 18.75 5.11408H16.3727C16.0403 4.5486 15.5672 4.07874 14.9995 3.75018C14.4318 3.42163 13.7887 3.24555 13.1328 3.23908C12.6442 3.23268 12.1591 3.32406 11.7063 3.50787C11.2535 3.69168 10.842 3.9642 10.4961 4.3094C10.1401 4.65879 9.85746 5.07584 9.66494 5.53603C9.47241 5.99621 9.37383 6.49025 9.375 6.98908V7.46487C6.22969 6.63518 3.65703 4.07658 3.62969 4.04924C3.54584 3.96465 3.43956 3.90578 3.32337 3.87956C3.20719 3.85334 3.08593 3.86087 2.97387 3.90126C2.86182 3.94165 2.76364 4.01321 2.6909 4.10753C2.61816 4.20184 2.57388 4.31498 2.56328 4.43362C2.22656 8.16721 3.31094 10.6656 4.28203 12.1039C4.75553 12.8149 5.33155 13.452 5.99141 13.9946C4.80156 15.3641 2.92812 16.0836 2.90781 16.0914C2.81962 16.1245 2.74003 16.177 2.675 16.2451C2.60996 16.3132 2.56116 16.3951 2.53223 16.4848C2.50331 16.5744 2.49502 16.6694 2.50797 16.7627C2.52092 16.856 2.55478 16.9451 2.60703 17.0235C2.66562 17.111 2.9 17.418 3.47266 17.7047C4.18047 18.0594 5.11562 18.2391 6.25 18.2391C11.7711 18.2391 16.3844 13.9875 16.8555 8.51721L19.1922 6.18127C19.2796 6.09382 19.339 5.98241 19.3631 5.86115C19.3872 5.73989 19.3747 5.61421 19.3273 5.50002ZM15.8117 7.79768C15.7046 7.9051 15.6401 8.04782 15.6305 8.19924C15.3125 13.1281 11.1937 16.9891 6.25 16.9891C5.425 16.9891 4.84375 16.8797 4.43594 16.7485C5.33516 16.2602 6.58906 15.4203 7.39531 14.211C7.44263 14.1398 7.47487 14.0598 7.49005 13.9757C7.50522 13.8917 7.503 13.8054 7.48352 13.7222C7.46405 13.6391 7.42773 13.5608 7.37682 13.4922C7.32591 13.4236 7.26147 13.3662 7.1875 13.3235C7.15078 13.3024 3.75703 11.2656 3.75 5.82346C5 6.83909 7.28516 8.41487 9.89609 8.85393C9.98558 8.86902 10.0773 8.86444 10.1648 8.84051C10.2523 8.81658 10.3336 8.77387 10.403 8.71536C10.4723 8.65685 10.5281 8.58394 10.5665 8.50169C10.6048 8.41944 10.6248 8.32983 10.625 8.23908V6.98908C10.6243 6.65569 10.6903 6.32551 10.8191 6.018C10.9479 5.71048 11.1369 5.43184 11.375 5.19846C11.6032 4.96979 11.875 4.78919 12.1743 4.66735C12.4735 4.54551 12.7941 4.48489 13.1172 4.48908C14.1062 4.50158 15.0305 5.10471 15.4172 5.98987C15.4659 6.10115 15.5461 6.19582 15.6478 6.26228C15.7495 6.32874 15.8683 6.36412 15.9898 6.36408H17.2398L15.8117 7.79768Z"
                    fill="white"
                  />
                </svg>
              </SocialLink>
              <SocialLink href="https://t.me/Discover_BOS">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="20"
                  height="21"
                  viewBox="0 0 20 21"
                  fill="none"
                >
                  <path
                    d="M18.5063 2.16021C18.4094 2.07659 18.2916 2.02098 18.1655 1.99936C18.0394 1.97775 17.9098 1.99095 17.7906 2.03755L1.95783 8.23365C1.73344 8.3209 1.54347 8.47868 1.41652 8.68325C1.28957 8.88781 1.2325 9.12808 1.25392 9.36788C1.27533 9.60768 1.37407 9.83403 1.53526 10.0129C1.69645 10.1917 1.91137 10.3133 2.14767 10.3594L6.25001 11.1649V15.7391C6.24921 15.9883 6.32325 16.2319 6.46255 16.4385C6.60184 16.6451 6.79998 16.8051 7.03126 16.8977C7.2622 16.992 7.51616 17.0146 7.76013 16.9627C8.00409 16.9107 8.22678 16.7865 8.39923 16.6063L10.3774 14.5547L13.5156 17.3016C13.7421 17.5024 14.0341 17.6136 14.3367 17.6141C14.4694 17.614 14.6012 17.5932 14.7274 17.5524C14.9336 17.487 15.119 17.3687 15.2653 17.2092C15.4115 17.0498 15.5135 16.8549 15.561 16.6438L18.732 2.84849C18.7604 2.72407 18.7544 2.59429 18.7146 2.47304C18.6748 2.35179 18.6028 2.24365 18.5063 2.16021ZM13.7297 4.97271L6.73048 9.98521L2.85548 9.22505L13.7297 4.97271ZM7.50001 15.7391V12.0297L9.43673 13.7282L7.50001 15.7391ZM14.3383 16.3641L7.87892 10.7001L17.1758 4.03677L14.3383 16.3641Z"
                    fill="white"
                  />
                </svg>
              </SocialLink>
              <SocialLink href="mailto:hello@nearbuilders.org">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="20"
                  height="21"
                  viewBox="0 0 20 21"
                  fill="none"
                >
                  <path
                    d="M17.5 3.86426H2.5C2.33424 3.86426 2.17527 3.93011 2.05806 4.04732C1.94085 4.16453 1.875 4.3235 1.875 4.48926V15.1143C1.875 15.4458 2.0067 15.7637 2.24112 15.9981C2.47554 16.2326 2.79348 16.3643 3.125 16.3643H16.875C17.2065 16.3643 17.5245 16.2326 17.7589 15.9981C17.9933 15.7637 18.125 15.4458 18.125 15.1143V4.48926C18.125 4.3235 18.0592 4.16453 17.9419 4.04732C17.8247 3.93011 17.6658 3.86426 17.5 3.86426ZM10 10.5166L4.10703 5.11426H15.893L10 10.5166ZM7.71172 10.1143L3.125 14.3182V5.91035L7.71172 10.1143ZM8.63672 10.9619L9.57422 11.8252C9.68953 11.931 9.84035 11.9898 9.99687 11.9898C10.1534 11.9898 10.3042 11.931 10.4195 11.8252L11.357 10.9619L15.8883 15.1143H4.10703L8.63672 10.9619ZM12.2883 10.1143L16.875 5.90957V14.3189L12.2883 10.1143Z"
                    fill="white"
                  />
                </svg>
              </SocialLink>
            </div>
            <div className="d-flex align-items-end">
              <svg
                style={{ padding: "4.715px 7.611px 4.748px 7.606px" }}
                xmlns="http://www.w3.org/2000/svg"
                width="61"
                height="59"
                viewBox="0 0 61 59"
                fill="none"
              >
                <path
                  d="M16.0578 5.08163C15.5438 7.74655 15.0612 10.3058 14.5693 12.8613C14.4735 13.3713 14.4053 13.731 14.1799 14.3506C14.0173 14.8124 13.6514 15.7844 13.1931 15.505C12.8386 15.2347 12.6214 14.9977 12.7019 14.0947C12.9215 11.7638 13.4861 9.48448 14.034 7.21999C14.5191 5.22072 14.9196 3.7036 15.4533 1.96012C15.7026 1.14588 16.2178 0.985796 16.9043 1.36689C17.5203 1.70914 18.1585 2.04951 18.6986 2.50124C20.6547 4.11929 22.5609 5.78191 24.493 7.43337C24.7343 7.63702 24.9347 7.7814 25.1872 8.06476C25.4899 8.4111 25.7293 8.64628 25.4591 9.00073C25.2055 9.34034 24.6564 9.09998 24.404 8.92416C22.2627 7.501 17.8945 4.49164 17.6255 4.38443C17.9203 5.90997 18.1612 7.32804 18.4819 8.73488C20.7614 18.5216 23.7192 28.0627 28.9064 36.7834C33.0124 43.6867 37.8648 49.9845 43.6841 55.5285C44.0256 55.8581 44.3431 56.2211 44.6421 56.5767C45.0542 57.0527 45.1844 57.3733 44.953 57.6035C44.4602 57.9768 44.0984 57.7251 43.7922 57.5493C43.1763 57.207 42.625 56.7294 42.0886 56.2684C34.9781 50.027 29.5883 42.4616 25.171 34.1552C20.6366 25.6302 18.1928 16.4444 16.5219 7.01856C16.4527 6.51804 16.1656 5.29657 16.0578 5.08163Z"
                  fill="black"
                />
              </svg>
              <p
                className="m-0"
                style={{
                  fontSize: "14px",
                  fontWeight: 500,
                  lineHeight: "130%",
                }}
              >
                Follow us on Twitter, we are super active there!
              </p>
            </div>
          </div>
        </div>
      </RoundedDiv>
      <Footnotes />
    </footer>
  );
}

'''
'''--- src/components/layouts/root.js ---
import React from "react";
import Navbar from "../header/Navbar";
import Footer from "./Footer";
import styled from "styled-components";

const Container = styled.div`
  margin-top: 92px;

  @media screen and (max-width: 800px) {
    margin-top: 52px;
  }
`;

const ChildrenDiv = styled.div`
  margin-top: 92px;
  max-width: 100%;

  @media screen and (max-width: 800px) {
    margin-top: 16px;
  }
`;

export default function RootLayout(props) {
  return (
    <>
      <Navbar {...props} />
      <main>
        <Container className="flex-grow-1">
          <ChildrenDiv>{props.children}</ChildrenDiv>
        </Container>
      </main>
      <Footer {...props} />
    </>
  );
}

'''
'''--- src/components/navigation/CreateWidget.js ---
import React from "react";
// import { Link } from "react-router-dom";
import styled from "styled-components";

const StyledCreateWidget = styled.div`
  // margin: 0 15px;
  // background-color: var(--slate-dark-5);
  height: 40px;
  width: 40px;
  border-radius: 50%;
  font-weight: var(--font-weight-medium);
  text-transform: lowercase !important;
  // display: inline-block;
  text-align: center;
  text-decoration: none;
  border: 2px outset #333;
  background-color: #f5f5f5;
  cursor: pointer;

  > div,
  a {
    width: 100%;
    height: 100%;
  }

  a {
    color: black !important;
    display: flex;
    align-items: center;
    justify-content: center;

    i {
      font-size: 18px !important;
    }
  }

  :hover {
    a,
    i {
      color: black;
      // background-color: var(--slate-dark-5);
    }
  }
`;

export function CreateWidget() {
  return (
    <StyledCreateWidget className="nav-create-btn">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      >
        <line x1="12" y1="8" x2="12" y2="16"></line>
        <line x1="8" y1="12" x2="16" y2="12"></line>
      </svg>
    </StyledCreateWidget>
  );
}

'''
'''--- src/components/navigation/Footer.js ---
// src/components/Footer.js
import React from "react";
import { useHistory } from "react-router-dom/cjs/react-router-dom.min";
import styled from "styled-components";
import Core from "../Core";

const FooterWrapper = styled.footer`
  display: flex;
  justify-content: center;
  align-items: center;
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 10000;
`;

const Form = styled.form`
  flex: 1;
  display: flex;
  margin: 0;
`;

const Input = styled.input`
  flex: 1;
  padding: 10px;
  height: 48px;
  background-color: #fff;
  border: 2px inset #333;

  background-color: #fff;
  border: 2px inset #333;

  &:focus {
    outline: none;
    border: 2px solid #333;
  }

  font-family: "Arial", sans-serif;
`;

const Button = styled.button`
  display: flex;
  justify-content: center;
  align-items: center;

  text-transform: lowercase !important;
  height: 48px;
  text-align: center;
  text-decoration: none;
  border: 2px outset #333;
  background-color: #f5f5f5;
  cursor: pointer;
  color: #333;
  padding: 20px 20px;
  margin-right: 10px;
  margin-left: 4px;

  &:active {
    border-style: inset;
    background-color: #d5d5d5;
    color: #000;
  }

  &:hover {
    background-color: #e5e5e5;
    color: #111;
  }
`;

const Footer = (props) => {
  const history = useHistory();
  return (
    <FooterWrapper className="classic">
      <Core {...props} />
      <Form
        onSubmit={(e) => {
          e.preventDefault();
          history.push(`/${e.target[0].value}`);
          history.refresh();
        }}
      >
        <Input
          type="text"
          className="classic"
          placeholder="browse discoverBOS..."
        />
        <Button type="submit">
          <i className="bi bi-search"></i>
        </Button>
      </Form>
    </FooterWrapper>
  );
};

export default Footer;

'''
'''--- src/components/navigation/Logotype.js ---
import React from "react";

export function Logotype() {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 26 26"
      fill="black"
      width="36px"
      height="36px"
    >
      <circle cx="13" cy="13" r="13" />
    </svg>
  );
}

'''
'''--- src/components/navigation/NavigationButton.js ---
import React from "react";
import styled from "styled-components";
import { NavLink } from "react-router-dom";

const StyledNavigationButton = styled.div`
  a {
    color: var(--slate-dark-11);
    font-size: 16px;
    padding: 10px;
    border-radius: 8px;
    font-weight: var(--font-weight-bold);
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;

    &:hover,
    &.active {
      color: white;
      text-decoration: none;
      background-color: var(--slate-dark-6);
    }
  }
  &.disabled {
    opacity: 0.5;
  }
`;

export function NavigationButton(props) {
  return (
    <StyledNavigationButton className={props.disabled ? "disabled" : ""}>
      {props.route ? (
        <NavLink
          onClick={(e) => {
            if (props.disabled) {
              e.preventDefault();
            }
          }}
          to={props.route}
          exact={true}
        >
          {props.children}
        </NavLink>
      ) : (
        <a href={props.href} target="_blank" rel="noopener noreferrer">
          {props.children}
        </a>
      )}
    </StyledNavigationButton>
  );
}

'''
'''--- src/components/navigation/NavigationWrapper.js ---
import React, { useState, useEffect } from "react";
import { DesktopNavigation } from "./desktop/DesktopNavigation";
import { MobileNavigation } from "./mobile/MobileNavigation";

export function NavigationWrapper(props) {
  const [matches, setMatches] = useState(
    window.matchMedia("(min-width: 992px)").matches
  );

  useEffect(() => {
    window
      .matchMedia("(min-width: 992px)")
      .addEventListener("change", (e) => setMatches(e.matches));
  }, []);
  return (
    <>
      {matches && <DesktopNavigation {...props} />}
      {!matches && <MobileNavigation {...props} />}
      {/* <MobileNavigation {...props} /> */}
    </>
  );
}

'''
'''--- src/components/navigation/NotificationWidget.js ---
import React from "react";
import styled from "styled-components";
import { Widget } from "near-social-vm";

const StyledNotificationWidget = styled.div`
  margin: 0 15px;
  // background-color: var(--slate-dark-5);
  height: 40px;
  width: 40px;
  border-radius: 50%;
  font-weight: var(--font-weight-medium);
    text-transform: lowercase !important;
    // display: inline-block;
    text-align: center;
    text-decoration: none;
    border: 2px outset #333;
    background-color: #f5f5f5;
    cursor: pointer;

  > div,
  a {
    width: 100%;
    height: 100%;
  }

  a {
    color: black !important;
    display: flex;
    align-items: center;
    justify-content: center;

    i {
      font-size: 18px !important;
    }
  }

  :hover {
    a,
    i {
      color: black;
      // background-color: var(--slate-dark-5);
    }
  }
`;

export function NotificationWidget({ notificationButtonSrc }) {
  return (
    <StyledNotificationWidget className="nav-notification-btn">
      <Widget src={notificationButtonSrc} />
    </StyledNotificationWidget>
  );
}

'''
'''--- src/components/navigation/PretendModal.js ---
import React, { useState } from "react";
import Modal from "react-bootstrap/Modal";
import { Widget, useAccount } from "near-social-vm";

export default function PretendModal(props) {
  const account = useAccount();
  const onHide = props.onHide;
  const show = props.show;

  const [accountId, setAccountId] = useState("");

  return (
    <Modal centered show={show} onHide={onHide}>
      <Modal.Header closeButton>
        <Modal.Title>Pretend to be another account</Modal.Title>
      </Modal.Header>
      <Modal.Body>
        <div>
          <label htmlFor="widget-src-input" className="form-label">
            Pretend to be account ID:
          </label>
          <input
            className="form-control"
            id="widget-src-input"
            type="text"
            value={accountId}
            onChange={(e) =>
              setAccountId(
                e.target.value.toLowerCase().replaceAll(/[^a-z0-9_.-]/g, "")
              )
            }
          />
        </div>
        <div className="mt-2">
          <Widget
            src={props.widgets.profileInlineBlock}
            props={{ accountId }}
          />
        </div>
      </Modal.Body>
      <Modal.Footer>
        <button
          className="btn btn-success"
          disabled={!accountId || !account.startPretending}
          onClick={(e) => {
            e.preventDefault();
            account.startPretending(accountId);
            setAccountId("");
            onHide();
          }}
        >
          Pretend
        </button>
        <button className="btn btn-secondary" onClick={onHide}>
          Cancel
        </button>
      </Modal.Footer>
    </Modal>
  );
}

'''
'''--- src/components/navigation/SignInButton.js ---
import React from "react";
// import { GrayBorderButton } from "../common/buttons/GrayBorderButton";

export function SignInButton(props) {
  return (
    <button
      onClick={props.onSignIn}
      style={{ padding: "12px", fontWeight: "var(--font-weight-medium)" }}
    >
      Sign In
    </button>
  );
}

'''
'''--- src/components/navigation/desktop/DesktopNavigation.js ---
import React, { useEffect, useState } from "react";
import { Link, useHistory } from "react-router-dom";
import styled from "styled-components";
import { CreateWidget } from "../CreateWidget";
import { NotificationWidget } from "../NotificationWidget";
import { SignInButton } from "../SignInButton";
import { UserDropdown } from "./UserDropdown";

const StyledNavigation = styled.div`
  position: sticky;
  top: 0;
  left: 0;
  right: 0;
  width: 100%;
  // background-color: var(--slate-dark-1);
  z-index: 1000;
  padding: 12px 0;

  .user-section {
    margin-left: auto;
    > button {
      font-size: 14px;
    }
  }

  .container {
    display: flex;
    align-items: center;
    justify-content: space-between;

    .user-section {
      display: flex;
      align-items: center;

      .nav-create-btn {
        margin-left: 10px;
      }

      .nav-sign-in-btn {
        margin-left: 10px;
      }
    }

    .arrow-up-right {
      margin-left: 4px;
    }
  }

  .search {
    display: flex;
    flex-direction: row;
    align-items: center;
  }
`;

// const StyledInput = styled.input`
//   border: none;
//   outline: none;
//   box-shadow: none !important;
//   height: 3rem;
//   font-size: 1.5em;
//   font-family: Arial, Times, serif;
//   line-height: 2em;
//   font-weight: 400;
//   cursor: pointer;
//   text-align: left;
//   width: 100%;

//   &::placeholder {
//     font-size: 1.5em;
//   }

//   &:focus {
//     /* Add styles for focus state here if needed */
//   }
// `;

export function DesktopNavigation(props) {
  const history = useHistory();
  const [matches, setMatches] = useState(
    window.matchMedia("(min-width: 992px)").matches
  );

  useEffect(() => {
    window
      .matchMedia("(min-width: 992px)")
      .addEventListener("change", (e) => setMatches(e.matches));
  }, []);

  return (
    <StyledNavigation>
      <div className="container">
        <Link to="/" className="logo-link">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            fill="black"
            width="64px"
            height="64px"
          >
            <circle cx="12" cy="12" r="8" />
          </svg>
        </Link>
        <div>
          <form
            onSubmit={(e) => {
              e.preventDefault();
              history.push(`/${e.target[0].value}`);
            }}
            className="search"
            style={{ display: "flex", alignItems: "stretch" }}
          >
            <input
              placeholder="everything"
              style={{ fontSize: "2em", width: "100%" }}
              onFocus={() => {}}
            />
          </form>
        </div>
        <div className="user-section">
          {!props.signedIn && (
            <SignInButton onSignIn={() => props.requestSignIn()} />
          )}
          {props.signedIn && (
            <>
              {matches && (
                <>
                  <Link
                    to={`/${props.widgets?.create}`}
                    style={{ textDecoration: "none", color: "inherit" }}
                  >
                    <CreateWidget
                      createWidgetSrc={props.widgets.createButton}
                    />
                  </Link>
                  <NotificationWidget
                    notificationButtonSrc={props.widgets.notificationButton}
                  />
                </>
              )}
              <UserDropdown {...props} />
            </>
          )}
        </div>
      </div>
    </StyledNavigation>
  );
}

'''
'''--- src/components/navigation/desktop/UserDropdown.js ---
import React, { useCallback, useEffect, useState } from "react";
import { Widget, useNear, useAccount } from "near-social-vm";
import styled from "styled-components";
import { User } from "../../icons/User";
import { LogOut } from "../../icons/LogOut";
import { Withdraw } from "../../icons/Withdraw";
import { NavLink } from "react-router-dom";
import PretendModal from "../PretendModal";
import { Pretend } from "../../icons/Pretend";
import { StopPretending } from "../../icons/StopPretending";
// import { Link } from "react-router-dom";
// import { CreateWidget } from "../CreateWidget";
// import { NotificationWidget } from "../NotificationWidget";

const StyledDropdown = styled.div`
  button,
  a {
    font-weight: var(--font-weight-medium);
  }
  .dropdown-toggle {
    display: flex;
    flex-direction: row;
    align-items: center;
    font-weight: var(--font-weight-medium);
    text-transform: lowercase !important;
    // display: inline-block;
    text-align: center;
    text-decoration: none;
    border: 2px outset #333;
    background-color: #f5f5f5;
    cursor: pointer;
    color: #333;
    // display: flex;
    // align-items: center;
    // text-align: left;
    // // background-color: rgba(46, 51, 56, 0.8); /* Adjust the alpha value (0.8) to control transparency */
    // border-radius: 50px;
    // outline: none;
    // border: 0;
    height: 54px;

    &:after {
      margin: 0 15px;
      border-top-color: var(--slate-dark-11);
    }

    img {
      border-radius: 50% !important;
    }

    .profile-info {
      margin: 5px 10px;
      line-height: normal;
      max-width: 140px;

      .profile-name,
      .profile-username {
        text-overflow: ellipsis;
        overflow: hidden;
      }

      .profile-name {
        color: black;
      }
      .profile-username {
        color: var(--slate-dark-11);
      }
    }
  }

  ul {
    // background-color: rgba(46, 51, 56, 0.8); /* Adjust the alpha value (0.8) to control transparency */
    width: 100%;

    li {
      padding: 0 6px;
    }

    button,
    a {
      font-weight: var(--font-weight-medium);
      text-transform: lowercase !important;
      display: inline-block;
      text-align: center;
      text-decoration: none;
      border: 2px outset #333;
      background-color: #f5f5f5;
      cursor: pointer;
      color: #333;
      // color: var(--slate-dark-11);
      // display: flex;
      // align-items: center;
      // border-radius: 8px;
      padding: 12px;

      :hover,
      :focus {
        text-decoration: none;
        background-color: var(--slate-dark-1);
        color: white;

        svg {
          path {
            stroke: white;
          }
        }
      }

      svg {
        margin-right: 7px;
        min-width: 24px;
        path {
          stroke: var(--slate-dark-9);
        }
      }
    }
  }
`;

export function UserDropdown(props) {
  const near = useNear();
  const account = useAccount();
  const [matches, setMatches] = useState(
    window.matchMedia("(min-width: 992px)").matches
  );

  useEffect(() => {
    window
      .matchMedia("(min-width: 992px)")
      .addEventListener("change", (e) => setMatches(e.matches));
  }, []);

  const withdrawStorage = useCallback(async () => {
    await near.contract.storage_withdraw({}, undefined, "1");
  }, [near]);

  const [showPretendModal, setShowPretendModal] = React.useState(false);

  return (
    <>
      <StyledDropdown className="dropdown">
        <button
          className="dropdown-toggle"
          type="button"
          id="dropdownMenu2222"
          data-bs-toggle="dropdown"
          aria-expanded="false"
        >
          <Widget
            src={props.widgets.profileImage}
            props={{
              accountId: account.accountId,
              className: "d-inline-block",
              style: { width: "40px", height: "40px" },
            }}
          />
          {matches && (
            <>
              <div className="profile-info">
                {props.widgets.profileName && (
                  <div className="profile-name">
                    <Widget src={props.widgets.profileName} />
                  </div>
                )}
                <div className="profile-username">{account.accountId}</div>
              </div>
            </>
          )}
        </button>
        <ul
          className="dropdown-menu"
          aria-labelledby="dropdownMenu2222"
          style={{ minWidth: "fit-content" }}
        >
          <li>
            <NavLink
              className="dropdown-item"
              type="button"
              to={`/${account.accountId}`}
            >
              <User />
              my profile
            </NavLink>
          </li>
          <li>
            <button
              className="dropdown-item"
              type="button"
              onClick={() => withdrawStorage()}
            >
              <Withdraw />
              Withdraw {props.availableStorage.div(1000).toFixed(2)}kb
            </button>
          </li>
          {account.pretendAccountId ? (
            <li>
              <button
                className="dropdown-item"
                type="button"
                disabled={!account.startPretending}
                onClick={() => account.startPretending(undefined)}
              >
                <StopPretending />
                Stop pretending
              </button>
            </li>
          ) : (
            <li>
              <button
                className="dropdown-item"
                type="button"
                onClick={() => setShowPretendModal(true)}
              >
                <Pretend />
                Pretend to be another account
              </button>
            </li>
          )}
          <li>
            <button
              className="dropdown-item"
              type="button"
              onClick={() => props.logOut()}
            >
              <LogOut />
              Sign Out
            </button>
          </li>
          <li className="icon-buttons">
            <button className="dropdown-item" type="button">
              <i className="bi bi-arrow-left"></i>
            </button>
            <button className="dropdown-item" type="button">
              <i className="bi bi-house"></i>
            </button>
            <button className="dropdown-item" type="button">
              <i className="bi bi-arrow-right"></i>
            </button>
          </li>
        </ul>
      </StyledDropdown>
      <PretendModal
        show={showPretendModal}
        onHide={() => setShowPretendModal(false)}
        widgets={props.widgets}
      />
    </>
  );
}

'''
'''--- src/components/navigation/mobile/Menu.js ---
import { Widget } from "near-social-vm";
import React from "react";
import styled from "styled-components";

const StyledMenu = styled.div`
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 50;
  display: flex;
  transition: 350ms;
  transform: translateX(-100%);

  &.show {
    transform: translateX(0);
  }

  ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
  }

  .left-side {
    position: relative;
    display: flex;
    width: 100%;
    flex-direction: column;
    padding: 25px;
    overflow-x: auto;
  }

  .right-side {
    flex: 20;
    opacity: 0.8;
    background-color: var(--slate-dark-1);
  }
`;

export function Menu(props) {
  return (
    <StyledMenu className={props.showMenu ? "show" : ""}>
      <div className="left-side">
        <Widget
          src={props.widgets.left.menu}
          props={{
            requestSignIn: props.requestSignIn,
            logOut: props.logOut,
            handleCloseMenu: props.onCloseMenu,
          }}
        />
      </div>
      <div className="right-side" onClick={props.onCloseMenu} />
    </StyledMenu>
  );
}

'''
'''--- src/components/navigation/mobile/MobileNavigation.js ---
import React, { useEffect, useState } from "react";
import { useLocation } from "react-router-dom";
import styled from "styled-components";
import useScrollBlock from ".././../../hooks/useScrollBlock";
import { Menu } from "./Menu";
import { Widget } from "near-social-vm";

const Header = styled.div`
  position: sticky;
  top: 0;
  left: 0;
  right: 0;
  width: 100%;
  z-index: 50;
`;

export function MobileNavigation(props) {
  const [showMenu, setShowMenu] = useState(false);
  const location = useLocation();
  const [blockScroll, allowScroll] = useScrollBlock();

  useEffect(() => {
    setShowMenu(false);
    allowScroll();
  }, [location.pathname]);

  return (
    <>
      <Header>
        <Widget
          src={props.widgets.header.mobile}
          props={{
            ...props,
            onClickShowMenu: () => {
              setShowMenu(true);
              blockScroll();
            },
          }}
        />
      </Header>
      <Menu
        {...props}
        showMenu={showMenu}
        onCloseMenu={() => {
          setShowMenu(false);
          allowScroll();
        }}
      />
    </>
  );
}

'''
'''--- src/components/pages/links.js ---
import React from "react";
import Table from "react-bootstrap/Table";

export default function Links({ links }) {
  return (
    <Table striped bordered hover>
      <thead>
        <tr>
          <th scope="col">#</th>
          <th scope="col">Resource</th>
          <th scope="col">Link</th>
        </tr>
      </thead>
      <tbody>
        {links &&
          links.map((link, index) => (
            <tr key={index}>
              <th scope="row">{index + 1}</th>
              <td>{link.name}</td>
              <td>
                <a href={link.href} target="_blank" rel="noreferrer">
                  {link.name}
                </a>
              </td>
            </tr>
          ))}
      </tbody>
    </Table>
  );
}

'''
'''--- src/data/web3.js ---
// import { singletonHook } from "react-singleton-hook";
// import { useEffect, useState } from "react";
// import { init, useConnectWallet } from "@web3-onboard/react";
// import injectedModule from "@web3-onboard/injected-wallets";
// import walletConnectModule from "@web3-onboard/walletconnect";
// import ledgerModule from "@web3-onboard/ledger";
// import { ethers } from "ethers";
// import ls from "local-storage";
// import icon from "../images/near_social_icon.svg";

// const web3onboardKey = "web3-onboard:connectedWallets";

// const wcV1InitOptions = {
//   qrcodeModalOptions: {
//     mobileLinks: ["metamask", "argent", "trust"],
//   },
//   connectFirstChainId: true,
// };

// const walletConnect = walletConnectModule(wcV1InitOptions);
// const ledger = ledgerModule();
// const injected = injectedModule();

// // initialize Onboard
// export const onboard = init({
//   wallets: [injected, walletConnect, ledger],
//   chains: [
//     {
//       id: 1,
//       token: "ETH",
//       label: "Ethereum Mainnet",
//       rpcUrl: "https://rpc.ankr.com/eth",
//     },
//     {
//       id: 3,
//       token: "ETH",
//       label: "Ropsten - Ethereum Testnet",
//       rpcUrl: "https://rpc.ankr.com/eth_ropsten",
//     },
//     {
//       id: 5,
//       token: "ETH",
//       label: "Goerli - Ethereum Testnet",
//       rpcUrl: "https://rpc.ankr.com/eth_goerli",
//     },
//     {
//       id: "0x4e454152",
//       token: "ETH",
//       label: "Aurora Mainnet",
//       rpcUrl: "https://mainnet.aurora.dev",
//     },
//     {
//       id: 137,
//       token: "MATIC",
//       label: "Matic Mainnet",
//       rpcUrl: "https://rpc.ankr.com/polygon",
//     },
//     {
//       id: 324,
//       token: "ETH",
//       label: "zkSync",
//       rpcUrl: "https://zksync2-mainnet.zksync.io",
//     },
//     {
//       id: 56,
//       token: "BNB",
//       label: "Binance Smart Chain Mainnet",
//       rpcUrl: "https://bsc.publicnode.com",
//     },
//     {
//       id: 42161,
//       token: "ETH",
//       label: "Arbitrum One Mainnet",
//       rpcUrl: "https://endpoints.omniatech.io/v1/arbitrum/one/public",
//     },
//   ],
//   appMetadata: {
//     name: "NEAR Social",
//     icon,
//     description: "NEAR Social",
//   },
//   theme: "dark",
//   containerElements: {
//     // connectModal: '#near-social-navigation-bar',
//     // accountCenter: "#near-social-web3-account",
//   },
// });

// const defaultEthersProviderContext = { useConnectWallet };

// export const useEthersProviderContext = singletonHook(
//   defaultEthersProviderContext,
//   () => {
//     const [{ wallet }] = useConnectWallet();
//     const [ethersProvider, setEthersProvider] = useState(
//       defaultEthersProviderContext
//     );

//     useEffect(() => {
//       (async () => {
//         const walletsSub = onboard.state.select("wallets");
//         const { unsubscribe } = walletsSub.subscribe((wallets) => {
//           const connectedWallets = wallets.map(({ label }) => label);
//           ls.set(web3onboardKey, connectedWallets);
//         });

//         const previouslyConnectedWallets = ls.get(web3onboardKey) || [];

//         if (previouslyConnectedWallets) {
//           // You can also auto connect "silently" and disable all onboard modals to avoid them flashing on page load
//           await onboard.connectWallet({
//             autoSelect: {
//               label: previouslyConnectedWallets[0],
//               disableModals: true,
//             },
//           });
//         }
//       })();
//     }, []);

//     useEffect(() => {
//       setEthersProvider({
//         provider: wallet?.provider,
//         useConnectWallet,
//       });
//     }, [wallet]);

//     return ethersProvider;
//   }
// );

'''
'''--- src/data/widgets.js ---
const TestnetDomains = {
  "test.discoverbos.org": true,
  "127.0.0.1": true,
};

export const NetworkId =
  window.location.hostname in TestnetDomains ? "testnet" : "mainnet";
const TestnetWidgets = {
  image: "eugenethedream/widget/Image",
  default: "efiz.testnet/widget/every.app.homepage",
  viewSource: "eugenethedream/widget/WidgetSource",
  widgetMetadataEditor: "eugenethedream/widget/WidgetMetadataEditor",
  widgetMetadata: "eugenethedream/widget/WidgetMetadata",
  profileImage: "eugenethedream/widget/ProfileImage",
  profilePage: "eugenethedream/widget/Profile",
  profileName: "eugenethedream/widget/ProfileName",
  notificationButton: "eugenethedream/widget/NotificationButton",
};

const MainnetWidgets = {
  image: "mob.near/widget/Image",
  default: "discover.near/widget/Home.Index",
  thing: "efiz.near/widget/every.thing.view",
  create: "efiz.near/widget/creator",
  header: {
    mobile: "efiz.near/widget/every.app.header.mobile",
  },
  left: {
    menu: "efiz.near/widget/every.app.left.menu",
  },
  action: {
    button: "efiz.near/widget/every.app.action.button",
  },
  viewSource: "mob.near/widget/WidgetSource",
  widgetMetadataEditor: "mob.near/widget/WidgetMetadataEditor",
  widgetMetadata: "mob.near/widget/WidgetMetadata",
  profileImage: "mob.near/widget/ProfileImage",
  notificationButton: "mob.near/widget/NotificationButton",
  createButton: "mob.near/widget/NotificationButton",
  profilePage: "mob.near/widget/ProfilePage",
  profileName: "patrick.near/widget/ProfileName",
  editorComponentSearch: "mob.near/widget/Editor.ComponentSearch",
  profileInlineBlock: "mob.near/widget/Profile.InlineBlock",
  viewHistory: "bozon.near/widget/WidgetHistory",
};

export const Widgets =
  NetworkId === "testnet" ? TestnetWidgets : MainnetWidgets;

'''
'''--- src/hooks/useBosLoaderInitializer.js ---
import { useCallback, useEffect } from 'react';

import { useBosLoaderStore } from '../stores/bos-loader';

import { useFlags } from './useFlags';

export function useBosLoaderInitializer() {
  const [flags] = useFlags();
  const loaderUrl = flags?.bosLoaderUrl;
  const setStore = useBosLoaderStore((store) => store.set);

  /**
   * Fetch local component versions if a local loader
   * is provided. must be provided as {components: { <path>: { code : <code>}}}
   */
  const fetchRedirectMap = useCallback(
    async (url) => {
      setStore({
        loaderUrl: url,
      });

      try {
        const res = await fetch(url, {
          method: 'GET',
          headers: {
            Accept: 'application/json',
          },
        });

        if (!res.ok) {
          throw new Error('Network response was not OK');
        }

        const data = await res.json();

        setStore({
          hasResolved: true,
          redirectMap: data.components,
        });
      } catch (e) {
        console.error(e);

        setStore({
          failedToLoad: true,
          hasResolved: true,
        });
      }
    },
    [setStore],
  );

  useEffect(() => {
    if (loaderUrl) {
      fetchRedirectMap(loaderUrl);
    } else {
      setStore({ hasResolved: true });
    }
  }, [fetchRedirectMap, loaderUrl, setStore]);
}
'''
'''--- src/hooks/useFlags.js ---
import { useCallback, useEffect, useState } from 'react';

export function useFlags() {
  const [rawFlags, setRawFlags] = useState();

  useEffect(() => {
    const flags = localStorage.getItem('flags') ? JSON.parse(localStorage.getItem('flags') || '') : {};
    setRawFlags(flags);
  }, []);

  const setFlags = useCallback((newFlags) => {
    setRawFlags((f) => {
      const updated = { ...f, ...newFlags };
      localStorage.setItem('flags', JSON.stringify(updated));

      alert('Flags have been saved.');

      // reload for changes to take effect
      location.reload();

      // may not be reachable
      return updated;
    });
  }, []);

  return [rawFlags, setFlags];
}
'''
'''--- src/hooks/useHashRouterLegacy.js ---
import { useHistory } from "react-router-dom";
import { useCallback, useEffect } from "react";

export function useHashRouterLegacy() {
  const history = useHistory();

  const onHashChange = useCallback(
    (event) => {
      let url = event.newURL.split("#").pop() ?? "/";

      if (url[0] === "/") {
        history && history.replace(url);
      }
    },
    [history]
  );

  useEffect(() => {
    window.addEventListener("hashchange", onHashChange);

    return () => {
      window.removeEventListener("hashchange", onHashChange);
    };
  }, [onHashChange]);

  useEffect(() => {
    if (!history) {
      return;
    }
    const currentUrl = window.location.href;

    if (currentUrl.includes("#")) {
      const path = currentUrl.split("#")[1];
      history.replace(path);
    }
  }, [history]);
}

'''
'''--- src/hooks/useQuery.js ---
import { useLocation } from "react-router-dom";
import React from "react";

export function useQuery() {
  const { search } = useLocation();

  return React.useMemo(() => new URLSearchParams(search), [search]);
}

'''
'''--- src/hooks/useScrollBlock.js ---
import { useRef } from "react";

const safeDocument = typeof document !== "undefined" ? document : {};

/**
 * Usage:
 * const [blockScroll, allowScroll] = useScrollBlock();
 */
export default () => {
  const scrollBlocked = useRef();
  const html = safeDocument.documentElement;
  const { body } = safeDocument;

  const blockScroll = () => {
    if (!body || !body.style || scrollBlocked.current) return;

    const scrollBarWidth = window.innerWidth - html.clientWidth;
    const bodyPaddingRight =
      parseInt(
        window.getComputedStyle(body).getPropertyValue("padding-right")
      ) || 0;

    /**
     * 1. Fixes a bug in iOS and desktop Safari whereby setting
     *    `overflow: hidden` on the html/body does not prevent scrolling.
     * 2. Fixes a bug in desktop Safari where `overflowY` does not prevent
     *    scroll if an `overflow-x` style is also applied to the body.
     */
    html.style.position = "relative"; /* [1] */
    html.style.overflow = "hidden"; /* [2] */
    body.style.position = "relative"; /* [1] */
    body.style.overflow = "hidden"; /* [2] */
    body.style.paddingRight = `${bodyPaddingRight + scrollBarWidth}px`;

    scrollBlocked.current = true;
  };

  const allowScroll = () => {
    if (!body || !body.style || !scrollBlocked.current) return;

    html.style.position = "";
    html.style.overflow = "";
    body.style.position = "";
    body.style.overflow = "";
    body.style.paddingRight = "";

    scrollBlocked.current = false;
  };

  return [blockScroll, allowScroll];
};

'''
'''--- src/images/near_social_combo.svg ---
<svg width="1601" height="250" viewBox="0 0 1601 250" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M452.2 200V60H479L556.4 164.6H550.8C550.267 160.467 549.8 156.467 549.4 152.6C549 148.6 548.6 144.6 548.2 140.6C547.933 136.467 547.667 132.267 547.4 128C547.267 123.6 547.133 119 547 114.2C546.867 109.267 546.8 103.933 546.8 98.2V60H576.2V200H549L470 94.4L477.6 94.6C478.267 101.533 478.8 107.467 479.2 112.4C479.733 117.2 480.133 121.4 480.4 125C480.667 128.6 480.867 131.733 481 134.4C481.267 137.067 481.4 139.6 481.4 142C481.533 144.4 481.6 146.933 481.6 149.6V200H452.2ZM658.752 202C647.285 202 637.285 199.667 628.752 195C620.218 190.333 613.552 183.933 608.752 175.8C603.952 167.667 601.552 158.333 601.552 147.8C601.552 139.667 602.885 132.2 605.552 125.4C608.218 118.6 611.952 112.733 616.752 107.8C621.552 102.733 627.218 98.8667 633.752 96.2C640.418 93.4 647.618 92 655.352 92C662.552 92 669.218 93.3333 675.352 96C681.485 98.5333 686.752 102.2 691.152 107C695.685 111.667 699.152 117.2 701.552 123.6C703.952 130 705.018 137 704.752 144.6L704.552 153.4H619.552L614.952 136H681.152L677.952 139.6V135.2C677.685 131.6 676.485 128.333 674.352 125.4C672.352 122.467 669.752 120.2 666.552 118.6C663.352 117 659.752 116.2 655.752 116.2C649.885 116.2 644.885 117.333 640.752 119.6C636.752 121.867 633.685 125.2 631.552 129.6C629.418 134 628.352 139.333 628.352 145.6C628.352 152 629.685 157.533 632.352 162.2C635.152 166.867 639.018 170.533 643.952 173.2C649.018 175.733 654.952 177 661.752 177C666.418 177 670.685 176.267 674.552 174.8C678.418 173.333 682.552 170.8 686.952 167.2L700.552 186.2C696.685 189.667 692.418 192.6 687.752 195C683.085 197.267 678.285 199 673.352 200.2C668.418 201.4 663.552 202 658.752 202ZM765.339 202C756.539 202 748.606 199.6 741.539 194.8C734.472 190 728.872 183.467 724.739 175.2C720.606 166.933 718.539 157.467 718.539 146.8C718.539 136.133 720.606 126.733 724.739 118.6C729.006 110.333 734.739 103.867 741.939 99.2C749.139 94.4 757.339 92 766.539 92C771.739 92 776.472 92.8 780.739 94.4C785.139 95.8667 788.939 97.9333 792.139 100.6C795.472 103.267 798.272 106.333 800.539 109.8C802.806 113.267 804.406 117 805.339 121L799.339 120V94.2H827.539V200H798.939V174.6L805.339 174C804.272 177.733 802.539 181.267 800.139 184.6C797.739 187.933 794.739 190.933 791.139 193.6C787.672 196.133 783.739 198.2 779.339 199.8C774.939 201.267 770.272 202 765.339 202ZM773.139 177.4C778.472 177.4 783.139 176.133 787.139 173.6C791.139 171.067 794.206 167.533 796.339 163C798.606 158.333 799.739 152.933 799.739 146.8C799.739 140.8 798.606 135.533 796.339 131C794.206 126.467 791.139 122.933 787.139 120.4C783.139 117.733 778.472 116.4 773.139 116.4C767.939 116.4 763.339 117.733 759.339 120.4C755.472 122.933 752.406 126.467 750.139 131C747.872 135.533 746.739 140.8 746.739 146.8C746.739 152.933 747.872 158.333 750.139 163C752.406 167.533 755.472 171.067 759.339 173.6C763.339 176.133 767.939 177.4 773.139 177.4ZM856.013 200V94.2H883.413L884.413 128.2L879.613 121.2C881.213 115.733 883.813 110.8 887.413 106.4C891.013 101.867 895.213 98.3333 900.013 95.8C904.946 93.2667 910.079 92 915.413 92C917.679 92 919.879 92.2 922.013 92.6C924.146 93 925.946 93.4667 927.413 94L919.813 125.2C918.213 124.4 916.279 123.733 914.013 123.2C911.746 122.533 909.413 122.2 907.013 122.2C903.813 122.2 900.813 122.8 898.013 124C895.346 125.067 893.013 126.667 891.013 128.8C889.013 130.8 887.413 133.2 886.213 136C885.146 138.8 884.613 141.867 884.613 145.2V200H856.013ZM1054.44 202C1045.77 202 1037.84 200.933 1030.64 198.8C1023.57 196.667 1017.24 193.533 1011.64 189.4C1006.17 185.267 1001.24 180.267 996.836 174.4L1015.64 153C1022.17 162.067 1028.64 168.267 1035.04 171.6C1041.57 174.8 1048.64 176.4 1056.24 176.4C1060.37 176.4 1064.04 175.867 1067.24 174.8C1070.57 173.6 1073.17 171.933 1075.04 169.8C1076.9 167.667 1077.84 165.133 1077.84 162.2C1077.84 160.067 1077.37 158.133 1076.44 156.4C1075.5 154.533 1074.17 152.933 1072.44 151.6C1070.7 150.133 1068.64 148.867 1066.24 147.8C1063.84 146.6 1061.17 145.6 1058.24 144.8C1055.3 143.867 1052.1 143.133 1048.64 142.6C1041.17 140.867 1034.64 138.8 1029.04 136.4C1023.44 133.867 1018.77 130.8 1015.04 127.2C1011.3 123.467 1008.5 119.267 1006.64 114.6C1004.9 109.933 1004.04 104.667 1004.04 98.8C1004.04 92.8 1005.37 87.2667 1008.04 82.2C1010.7 77 1014.37 72.5333 1019.04 68.8C1023.84 65.0667 1029.3 62.2 1035.44 60.2C1041.7 58.2 1048.3 57.2 1055.24 57.2C1063.77 57.2 1071.24 58.2 1077.64 60.2C1084.04 62.0667 1089.57 64.8 1094.24 68.4C1099.04 72 1103.04 76.4 1106.24 81.6L1087.24 100C1084.44 96.2667 1081.37 93.1333 1078.04 90.6C1074.84 88.0667 1071.3 86.2 1067.44 85C1063.7 83.6667 1059.84 83 1055.84 83C1051.44 83 1047.64 83.6 1044.44 84.8C1041.24 85.8667 1038.7 87.4667 1036.84 89.6C1035.1 91.7333 1034.24 94.3333 1034.24 97.4C1034.24 99.8 1034.84 101.933 1036.04 103.8C1037.24 105.667 1038.97 107.333 1041.24 108.8C1043.5 110.133 1046.24 111.333 1049.44 112.4C1052.64 113.467 1056.17 114.4 1060.04 115.2C1067.37 116.667 1073.97 118.6 1079.84 121C1085.7 123.4 1090.7 126.333 1094.84 129.8C1099.1 133.133 1102.37 137.133 1104.64 141.8C1106.9 146.333 1108.04 151.467 1108.04 157.2C1108.04 166.667 1105.77 174.733 1101.24 181.4C1096.7 188.067 1090.44 193.2 1082.44 196.8C1074.44 200.267 1065.1 202 1054.44 202ZM1180.41 202C1169.61 202 1159.94 199.667 1151.41 195C1143.01 190.2 1136.34 183.667 1131.41 175.4C1126.61 167.133 1124.21 157.667 1124.21 147C1124.21 136.333 1126.61 126.933 1131.41 118.8C1136.34 110.533 1143.01 104 1151.41 99.2C1159.94 94.4 1169.61 92 1180.41 92C1191.07 92 1200.61 94.4 1209.01 99.2C1217.54 104 1224.21 110.533 1229.01 118.8C1233.81 126.933 1236.21 136.333 1236.21 147C1236.21 157.667 1233.81 167.133 1229.01 175.4C1224.21 183.667 1217.54 190.2 1209.01 195C1200.61 199.667 1191.07 202 1180.41 202ZM1180.41 177.2C1185.61 177.2 1190.27 175.933 1194.41 173.4C1198.54 170.733 1201.74 167.133 1204.01 162.6C1206.41 157.933 1207.61 152.733 1207.61 147C1207.61 141.133 1206.41 135.933 1204.01 131.4C1201.74 126.733 1198.54 123.133 1194.41 120.6C1190.27 117.933 1185.61 116.6 1180.41 116.6C1175.07 116.6 1170.34 117.933 1166.21 120.6C1162.07 123.267 1158.81 126.867 1156.41 131.4C1154.01 135.933 1152.87 141.133 1153.01 147C1152.87 152.733 1154.01 157.933 1156.41 162.6C1158.81 167.133 1162.07 170.733 1166.21 173.4C1170.34 175.933 1175.07 177.2 1180.41 177.2ZM1303.58 202C1293.44 202 1284.38 199.6 1276.38 194.8C1268.38 190 1262.04 183.467 1257.38 175.2C1252.84 166.933 1250.58 157.533 1250.58 147C1250.58 136.6 1252.84 127.267 1257.38 119C1262.04 110.6 1268.38 104 1276.38 99.2C1284.38 94.4 1293.44 92 1303.58 92C1313.04 92 1321.71 93.7333 1329.58 97.2C1337.44 100.667 1343.58 105.467 1347.98 111.6L1332.38 130.4C1330.51 127.867 1328.18 125.6 1325.38 123.6C1322.58 121.467 1319.51 119.8 1316.18 118.6C1312.98 117.4 1309.64 116.8 1306.18 116.8C1300.71 116.8 1295.84 118.133 1291.58 120.8C1287.44 123.333 1284.18 126.867 1281.78 131.4C1279.38 135.933 1278.18 141.133 1278.18 147C1278.18 152.733 1279.38 157.867 1281.78 162.4C1284.31 166.8 1287.71 170.4 1291.98 173.2C1296.24 175.867 1301.04 177.2 1306.38 177.2C1309.84 177.2 1313.11 176.733 1316.18 175.8C1319.24 174.733 1322.11 173.2 1324.78 171.2C1327.58 169.2 1330.11 166.8 1332.38 164L1347.78 182.8C1343.24 188.533 1336.98 193.2 1328.98 196.8C1320.98 200.267 1312.51 202 1303.58 202ZM1368.37 200V94.2H1396.77V200H1368.37ZM1382.37 72.4C1376.91 72.4 1372.64 71.0667 1369.57 68.4C1366.51 65.7333 1364.97 61.9333 1364.97 57C1364.97 52.4667 1366.51 48.8 1369.57 46C1372.77 43.0667 1377.04 41.6 1382.37 41.6C1387.84 41.6 1392.11 43 1395.17 45.8C1398.24 48.4667 1399.77 52.2 1399.77 57C1399.77 61.6667 1398.17 65.4 1394.97 68.2C1391.91 71 1387.71 72.4 1382.37 72.4ZM1466.71 202C1457.91 202 1449.97 199.6 1442.91 194.8C1435.84 190 1430.24 183.467 1426.11 175.2C1421.97 166.933 1419.91 157.467 1419.91 146.8C1419.91 136.133 1421.97 126.733 1426.11 118.6C1430.37 110.333 1436.11 103.867 1443.31 99.2C1450.51 94.4 1458.71 92 1467.91 92C1473.11 92 1477.84 92.8 1482.11 94.4C1486.51 95.8667 1490.31 97.9333 1493.51 100.6C1496.84 103.267 1499.64 106.333 1501.91 109.8C1504.17 113.267 1505.77 117 1506.71 121L1500.71 120V94.2H1528.91V200H1500.31V174.6L1506.71 174C1505.64 177.733 1503.91 181.267 1501.51 184.6C1499.11 187.933 1496.11 190.933 1492.51 193.6C1489.04 196.133 1485.11 198.2 1480.71 199.8C1476.31 201.267 1471.64 202 1466.71 202ZM1474.51 177.4C1479.84 177.4 1484.51 176.133 1488.51 173.6C1492.51 171.067 1495.57 167.533 1497.71 163C1499.97 158.333 1501.11 152.933 1501.11 146.8C1501.11 140.8 1499.97 135.533 1497.71 131C1495.57 126.467 1492.51 122.933 1488.51 120.4C1484.51 117.733 1479.84 116.4 1474.51 116.4C1469.31 116.4 1464.71 117.733 1460.71 120.4C1456.84 122.933 1453.77 126.467 1451.51 131C1449.24 135.533 1448.11 140.8 1448.11 146.8C1448.11 152.933 1449.24 158.333 1451.51 163C1453.77 167.533 1456.84 171.067 1460.71 173.6C1464.71 176.133 1469.31 177.4 1474.51 177.4ZM1557.58 200V52H1585.98V200H1557.58Z" fill="black"/>
<path d="M107.137 208L18 124.5L107.137 41" stroke="#3D7FFF" stroke-width="35" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M224.924 41L313 124.5L224.924 208" stroke="#3D7FFF" stroke-width="35" stroke-linecap="round" stroke-linejoin="round"/>
</svg>

'''
'''--- src/images/near_social_icon.svg ---
<svg width="331" height="203" viewBox="0 0 331 203" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M107.137 185L18 101.5L107.137 18" stroke="#3D7FFF" stroke-width="35" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M224.924 18L313 101.5L224.924 185" stroke="#3D7FFF" stroke-width="35" stroke-linecap="round" stroke-linejoin="round"/>
</svg>

'''
'''--- src/index.css ---
:root {
  --slate-dark-1: #151718;
  --slate-dark-5: #2b2f31;
  --slate-dark-6: #313538;
  --slate-dark-8: #4c5155;
  --slate-dark-9: #697177;
  --slate-dark-11: #9ba1a6;
  --slate-dark-12: #ecedee;
  --blue-light-9: #0091ff;

  --font-weight-medium: 500;
  --font-weight-bold: 600;

  /* For web3 onboard */
  --account-center-z-index: 999;
  --account-center-position-top: 64px;
  --account-center-position-right: -10px;
}

#root {
  min-height: 100vh;
}

@font-face {
  font-family: 'Mona Sans';
  src:
    url('../public/Mona-Sans.woff2') format('woff2 supports variations'),
    url('../public/Mona-Sans.woff2') format('woff2-variations');
  font-weight: 200 900;
  font-stretch: 75% 125%;
}

'''
'''--- src/index.js ---
import React from "react";
import { createRoot } from "react-dom/client";
import "./index.css";
import App from "./App";
import { StrictMode } from "react";

const container = document.getElementById("root");
const root = createRoot(container);
root.render(
  <StrictMode>
    <App />
  </StrictMode>
);

'''
'''--- src/pages/About.js ---
import React from "react";

export default function About() {
  return <div>About</div>;
}

'''
'''--- src/pages/Flags.js ---
import styled from "styled-components";

import { useFlags } from "../hooks/useFlags";
import React, { useState } from "react";

const Container = styled.div`
  display: flex;
  flex-direction: column;
  gap: 1rem;
  padding: 2rem 1rem;
`;

const Form = styled.div`
  display: flex;
  flex-direction: column;
  gap: 1rem;
`;

const InputGrid = styled.div`
  display: grid;
  grid-template-columns: max-content 1fr;
  align-items: center;
  gap: 1rem;

  @media (max-width: 600px) {
    grid-template-columns: 1fr;
  }
`;

export default function Flags() {
  const [flags, setFlags] = useFlags();
  const [url, setUrl] = useState(flags?.bosLoaderUrl || "");

  return (
    <Container className="container-xl">
      <h1>Flags</h1>

      <Form>
        <InputGrid>
          <p>BOS Loader Url</p>

          <input
            className="form-control"
            placeholder="e.g. http://127.0.0.1:3030/, https://my-loader.ngrok.io"
            id="bosLoaderUrl"
            onChange={(e) => setUrl(e.target.value)}
          />
        </InputGrid>

        <button
          onClick={() => setFlags({ bosLoaderUrl: url })}
          style={{ marginLeft: "auto" }}
        >
          Save
        </button>
      </Form>
    </Container>
  );
}

'''
'''--- src/pages/Home.js ---
import React from "react";
import { Widget } from "near-social-vm";
import { useBosLoaderStore } from "../stores/bos-loader";

export default function Home() {
  const redirectMapStore = useBosLoaderStore();

  // set page title
  document.title = "DiscoverBOS | Home";
  return (
    <div>
      <Widget
        src="discover.near/widget/Home.Index"
        config={{
          redirectMap: redirectMapStore.redirectMap,
        }}
      />
    </div>
  );
}

'''
'''--- src/pages/ViewPage.js ---
import { Widget } from "near-social-vm";
import React, { useEffect, useState } from "react";
import { useParams } from "react-router-dom";
import { useHashRouterLegacy } from "../hooks/useHashRouterLegacy";
import { useQuery } from "../hooks/useQuery";
import { useBosLoaderStore } from "../stores/bos-loader";
import styled from "styled-components";

const Container = styled.div`
  display: flex;
  flex-direction: column;
  width: 100%;
  min-height: 100vh;
  align-items: stretch;
  padding-bottom: 48px;
`;

export default function ViewPage(props) {
  useHashRouterLegacy();
  const { widgetSrc } = useParams();
  const query = useQuery();
  const [widgetProps, setWidgetProps] = useState({});
  const redirectMapStore = useBosLoaderStore();

  const src = widgetSrc || props.widgets.default;
  const setWidgetSrc = props.setWidgetSrc;
  const viewSourceWidget = props.widgets.viewSource;

  useEffect(() => {
    setWidgetProps(Object.fromEntries([...query.entries()]));
  }, [query]);

  useEffect(() => {
    setTimeout(() => {
      setWidgetSrc(
        src === viewSourceWidget && query.get("src")
          ? {
            edit: query.get("src"),
            view: null,
          }
          : {
            edit: src,
            view: src,
          }
      );
    }, 1);
  }, [src, query, setWidgetSrc, viewSourceWidget]);

  function Thing({ path }) {
    const parts = path.split("/");
    if (parts[1] === "widget") {
      return (
        <Widget
          key={path}
          config={{
            redirectMap: redirectMapStore.redirectMap,
          }}
          src={path}
          props={widgetProps}
        />
      );
    } else {
      // TODO: every.thing.view could be abstracted out
      return (
        <Widget
          key={path}
          config={{
            redirectMap: redirectMapStore.redirectMap,
          }}
          src={"every.near/widget/every.thing.view"}
          props={{ path, ...widgetProps }}
        />
      );
    }
  }

  return (
    <Container className="container-xl">
      <Thing path={src} />
    </Container>
  );
}

'''
'''--- src/pages/communities/Community.js ---
import React from "react";
import styled from "styled-components";

const Container = styled.div`
  margin-top: 1rem;
  margin-bottom: 1rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 120px;

  @media screen and (max-width: 1730px) {
    align-items: flex-start;
  }

  @media screen and (max-width: 1200px) {
    flex-direction: column;
    align-items: center;
  }

  @media screen and (max-width: 800px) {
    padding: 60px 1rem;
    gap: 40px;
  }
`;

const SectionHeading = styled.h2`
  color: #1b1b18;
  font-family: Poppins;
  font-size: 48px;
  font-style: normal;
  font-weight: 700;
  line-height: 103.5%; /* 49.68px */
  margin-bottom: 40px;

  @media screen and (max-width: 800px) {
    color: #1b1b18;
    font-family: Poppins;
    font-size: 32px;
    font-style: normal;
    font-weight: 700;
    line-height: 103.5%; /* 33.12px */
  }
`;

const ExploreCard = ({ title, description, icon, link }) => {
  const Title = styled.p`
    color: #1b1b18;
    font-size: 24px;
    font-style: normal;
    font-weight: 600;
    line-height: 120.5%; /* 28.92px */
    margin: 0;
  `;

  const Description = styled.p`
    color: #1b1b18;
    font-size: 16px;
    font-style: normal;
    font-weight: 400;
    line-height: 120.5%; /* 19.28px */
    margin: 0;
  `;

  const Card = styled.a`
    border-radius: 8px;
    transition: all 300ms;
    cursor: pointer;
    &:hover {
      background: #eee8dd;
      text-decoration: none;
      svg {
        transition: all 300ms;
        filter: invert(42%) sepia(97%) saturate(649%) hue-rotate(117deg)
          brightness(97%) contrast(98%);
      }
    }
  `;

  return (
    <Card href={link} className="d-flex p-3 gap-3" style={{ maxWidth: "475" }}>
      <div>{icon}</div>
      <div>
        <Title className="mb-3">{title}</Title>
        <Description>{description}</Description>
      </div>
    </Card>
  );
};

const CommunityIcon = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="32"
      height="32"
      fill="#000"
      className="bi bi-people"
      viewBox="0 0 16 16"
    >
      <path d="M15 14s1 0 1-1-1-4-5-4-5 3-5 4 1 1 1 1h8Zm-7.978-1A.261.261 0 0 1 7 12.996c.001-.264.167-1.03.76-1.72C8.312 10.629 9.282 10 11 10c1.717 0 2.687.63 3.24 1.276.593.69.758 1.457.76 1.72l-.008.002a.274.274 0 0 1-.014.002H7.022ZM11 7a2 2 0 1 0 0-4 2 2 0 0 0 0 4Zm3-2a3 3 0 1 1-6 0 3 3 0 0 1 6 0ZM6.936 9.28a5.88 5.88 0 0 0-1.23-.247A7.35 7.35 0 0 0 5 9c-4 0-5 3-5 4 0 .667.333 1 1 1h4.216A2.238 2.238 0 0 1 5 13c0-1.01.377-2.042 1.09-2.904.243-.294.526-.569.846-.816ZM4.92 10A5.493 5.493 0 0 0 4 13H1c0-.26.164-1.03.76-1.724.545-.636 1.492-1.256 3.16-1.275ZM1.5 5.5a3 3 0 1 1 6 0 3 3 0 0 1-6 0Zm3-2a2 2 0 1 0 0 4 2 2 0 0 0 0-4Z" />
    </svg>
  );
};

const cards = [
  {
    title: "Developer Communities",
    description:
      "Lorem ipsum dolor sit amet consectetur. Tincidunt dui a penatibus laoreet dui lectus tempor sed integer.",
    icon: <CommunityIcon />,
    link: "/communities/developer",
  },
  {
    title: "Project Communities",
    description:
      "Lorem ipsum dolor sit amet consectetur. Tincidunt dui a penatibus laoreet dui lectus tempor sed integer.",
    icon: <CommunityIcon />,
    link: "/communities/project",
  },
  {
    title: "Regional Communities",
    description:
      "Lorem ipsum dolor sit amet consectetur. Tincidunt dui a penatibus laoreet dui lectus tempor sed integer.",
    icon: <CommunityIcon />,
    link: "/communities/regional",
  },
  {
    title: "General BOS Communities",
    description:
      "Lorem ipsum dolor sit amet consectetur. Tincidunt dui a penatibus laoreet dui lectus tempor sed integer.",
    icon: <CommunityIcon />,
    link: "/communities/general-bos",
  },
];

export default function Community() {
  return (
    <Container className="container">
      <div>
        <SectionHeading>Explore Communities</SectionHeading>
        <div
          className="d-flex flex-wrap align-items-center"
          style={{ gap: 40 }}
        >
          {cards.map((card) => (
            <ExploreCard
              title={card.title}
              description={card.description}
              icon={card.icon}
              link={card.link}
              key={`Opportunity-${Math.random()}`}
            />
          ))}
        </div>
      </div>
    </Container>
  );
}

'''
'''--- src/pages/communities/developer.js ---
import React from "react";
import Links from "../../components/pages/links";
import Heading from "../../components/header/Heading";

const links = [
  {
    name: "Near DevHUB",
    href: "https://neardevhub.org/",
  },
  {
    name: "BOS VM DEV",
    href: "https://t.me/NearSocialDev/",
  },
  {
    name: "BOS Decentralised Frontend",
    href: "https://t.me/NEARisBOS/",
  },
  {
    name: "Jutsu.ai",
    href: "http://nearbuilders.com/tg-nearpad/",
  },
  {
    name: "DiscoverBOS Tg",
    href: "https://t.me/Discover_BOS/",
  },
  {
    name: "Near BuildDao",
    href: "https://nearbuilders.com/tg-builders/",
  },
  {
    name: "NearHacks",
    href: "https://x.com/NEARHACKS?t=d7Q3epo2FUMsgs6xWE4ZXw&s=09/",
  },
  {
    name: "BanyanUS",
    href: "https://x.com/BanyanUS?t=mwhMakGXc1P1prWl0lFmfw&s=09/",
  },
  {
    name: "Near Balkans",
    href: "https://near.org/near/widget/ProfilePage?accountId=nearbalkans.near&utm_source=Linktree&utm_medium=Button&utm_campaign=NBH-BOS/",
  },
  {
    name: "Hack.nearsocial",
    href: "https://www.youtube.com/watch?v=iYHMP2bg1-4/",
  },
];

export default function DeveloperCommunity() {
  return (
    <div>
      <Heading title="Developer Communities" />
      <Links links={links} />
    </div>
  );
}

'''
'''--- src/pages/communities/general.js ---
import React from "react";

export default function GeneralCommunity() {
  return <div>GeneralCommunity</div>;
}

'''
'''--- src/pages/communities/index.js ---
import DeveloperCommunity from "./developer";
import GeneralCommunity from "./general";
import ProjectCommunity from "./project";
import RegionalCommunity from "./regional";

export {
  DeveloperCommunity,
  GeneralCommunity,
  ProjectCommunity,
  RegionalCommunity,
};

'''
'''--- src/pages/communities/project.js ---
import React from "react";

export default function ProjectCommunity() {
  return <div>ProjectCommunity</div>;
}

'''
'''--- src/pages/communities/regional.js ---
import React from "react";
import Links from "../../components/pages/links";
import Heading from "../../components/header/Heading";

const links = [
  {
    name: "Near San Francesco",
    href: "https://x.com/NEAR__SF?t=_4mnzICRvSYWRakgk4AZ5w&s=09/",
  },
  {
    name: "Near NYC",
    href: "https://x.com/NEAR__NYC?t=WREvsFzmSHHxZ5Fu9b8Rkw&s=09/",
  },
  {
    name: "BanYan US",
    href: "https://x.com/BanyanUS?t=mwhMakGXc1P1prWl0lFmfw&s=09/",
  },
  {
    name: "Near Balkans",
    href: "https://near.org/near/widget/ProfilePage?accountId=nearbalkans.near&utm_source=Linktree&utm_medium=Button&utm_campaign=NBH-BOS/",
  },
  {
    name: "Near Vietam Hub",
    href: "https://linktr.ee/nearvietnamhub/",
  },
  {
    name: "Near Ukraine",
    href: "https://linktr.ee/nearuaguild/",
  },
  {
    name: "Near Africa",
    href: "https://t.me/NEAR_Africa/1/",
  },
  {
    name: "Near Hausa",
    href: "https://t.me/NearHausa/",
  },
  {
    name: "Open Web Academy",
    href: "#",
  },
  {
    name: "Near Turkiye",
    href: "#",
  },
];

export default function RegionalCommunity() {
  return (
    <div>
      <Heading title="Regional Communities" />
      <Links links={links} />
    </div>
  );
}

'''
'''--- src/pages/components/Components.js ---
import React from "react";
import { Widget } from "near-social-vm";
import { useBosLoaderStore } from "../../stores/bos-loader";

export default function ComponentsPage() {
  const redirectMapStore = useBosLoaderStore(); // We need this in order to run Widgets from local

  return (
    <div className="mb-5 w-100 container">
      <Widget
        src="discover.near/widget/Components.Library"
        config={{
          redirectMap: redirectMapStore.redirectMap,
        }}
      />
    </div>
  );
}

'''
'''--- src/pages/components/index.js ---
import ComponentsPage from "./Components";

export { ComponentsPage };

'''
'''--- src/pages/education/CodeReviews.js ---
import React from "react";
import Heading from "../../components/header/Heading";
import Links from "../../components/pages/links";

const links = [
  {
    name: "BOS Code review: Building a Near Social bot and NFT barter application",
    href: "https://youtu.be/8-Y-eBxG_Cs?si=LlBGsWQ4G5G1T0zX",
  },
  {
    name: "Build A #BOS Bot & NFT Barter Application -",
    href: "https://youtu.be/8-Y-eBxG_Cs?si=J_zzE_zGUYGbxX95",
  },
  {
    name: "Creating SDKs on BOS (Lens, GenaDrop) + New Vue Inspired Skip Framework with Matt B",
    href: "https://youtu.be/IVQoocmWDGU?si=J6sQWi3vZgAO70qF",
  },
  {
    name: "Using SocialDB on #BOS to Create + Visualize Groups & Create Pull Requests",
    href: "https://youtu.be/HAyweTF7IjU?si=zbs4m3qlGqzCOWip",
  },
  {
    name: "Adding External Packages to the Your Gateway / #BOS VM",
    href: "https://youtu.be/cJuHp8exNVY?si=weF9Sjt99U80yJZj",
  },
  {
    name: "Build A Multichain #NFT Minter on #BOS",
    href: "https://youtu.be/YJbnbfY7xOE?si=AsiiLb3cZ-VZDTYY",
  },

];

export default function EducationCodeReviews() {
  return (
    <div>
      <Heading title="Code Reviews" />
      <Links links={links} />
    </div>
  );
}

'''
'''--- src/pages/education/OfficeHours.js ---
import React from "react";

import Heading from "../../components/header/Heading";
import Links from "../../components/pages/links";

const links = [
  {
    name: "#",
    href: "#",
  },
];

export default function EducationOfficeHours() {
  return (
    <div>
      <Heading title="Office Hours" />
      <Links links={links} />
    </div>
  );
}

'''
'''--- src/pages/education/Resources.js ---
import React, { useState } from "react";
import styled from "styled-components";

import EducationTutorials from "./tutorials";
import EducationWorkshops from "./Workshops";
import EducationCodeReviews from "./CodeReviews";
// import EducationOfficeHours from "./OfficeHours";

const SidebarContainer = styled.div`
  grid-column: span 1 / span 1;
  display: flex;
  flex-direction: column;
  gap: 1rem;

  @media screen and (max-width: 800px) {
    flex-direction: row;
    overflow: auto;
  }
`;

const Container = styled.div`
  display: grid;
  grid-template-columns: repeat(4, minmax(0, 1fr));
  padding: 1rem 0;

  @media screen and (max-width: 800px) {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
`;

const MainContainer = styled.div`
  grid-column: 3 span / 3 span;
  margin-bottom: 1rem;
  display: flex;
  flex-direction: column;
  gap: 1rem;
`;

const SidebarLinks = styled.div`
  cursor: pointer;
  flex-grow: 1;
  &:hover {
    text-decoration: underline;
  }
`;

export default function Resources() {
  const [menu, setMenu] = useState("All");

  function Sidebar() {
    return (
      <div>
        <h3>Resources</h3>
        <SidebarContainer>
          <SidebarLinks onClick={() => setMenu("All")}>All</SidebarLinks>
          <SidebarLinks onClick={() => setMenu("Tutorials")}>
            Tutorials
          </SidebarLinks>
          <SidebarLinks onClick={() => setMenu("Code Reviews")}>
            Code Reviews
          </SidebarLinks>
          <SidebarLinks onClick={() => setMenu("Workshops")}>
            Workshops
          </SidebarLinks>
          {/* <SidebarLinks onClick={() => setMenu("Office Hours")}>
            Office Hours
          </SidebarLinks> */}
        </SidebarContainer>
      </div>
    );
  }

  const Education = () => {
    switch (menu) {
      case "Tutorials":
        return <EducationTutorials />;
      case "Code Reviews":
        return <EducationCodeReviews />;
      case "Workshops":
        return <EducationWorkshops />;
      // case "Office Hours":
      //   return <EducationOfficeHours />;
      default:
        return (
          <>
            <EducationTutorials />
            <EducationCodeReviews />
            <EducationWorkshops />
            {/* <EducationOfficeHours /> */}
          </>
        );
    }
  };
  return (
    <Container>
      <Sidebar />
      <MainContainer>
        <Education />
      </MainContainer>
    </Container>
  );
}

'''
'''--- src/pages/education/Workshops.js ---
import React from "react";
import Heading from "../../components/header/Heading";
import Links from "../../components/pages/links";

const links = [
  {
    name: "Case for BOS",
    href: "https://youtu.be/Z3mVpZiy_gc?si=tPgPJc1ShGBk-ieq",
  },
  {
    name: "Building BOS gateway in 5mins",
    href: "https://youtu.be/xAygBTn3SPY?si=7BR7JZUYQJvjlTbO",
  },
  {
    name: "BOS Technical Workshop with Illia Polosukhin",
    href: "https://youtu.be/yzGuZkORR3I?si=VUZHmf4-vxpnQHy7",
  },
  {
    name: "Decentralised FRONTEND on near",
    href: "https://www.youtube.com/watch?v=iYHMP2bg1-4",
  },
  {
    name: "BOS Academy: Build your First BOS Dapp by James Waugh",
    href: "https://youtu.be/2hBBUBIWjqI?si=NibRGU1o_lVQk_kL",
  },
  {
    name: "BOS academy: BOS Gateway + VM by Matt Lockyer",
    href: "https://youtu.be/mmeDHWnavyw?si=ldh_MAwU1GWjWg7x",
  },
  {
    name: "BOS Academy BOS chain Design Patterns by Manzanal Spanish content",
    href: "https://youtu.be/IJjoTAIr4Pk?si=NWmLpUTGOms8co2Q",
  },
  {
    name: "BOS Academy: Building anything with Everything by Elliot",
    href: "https://youtu.be/DukrdJtZtSU?si=HlvFtWiKEzx-XUV4",
  },
  {
    name: "Integrating Soul Bound Token",
    href: "https://youtu.be/60RXbaWxu90",
  },
  {
    name: "BOS Community group call 1",
    href: "https://youtu.be/pFN6wpT5htI?si=D04LuUTJzWeUfM2f",
  },
  {
    name: "Calimero Network  Discusses what lacking on BOS ",
    href: "https://twitter.com/CalimeroNetwork/status/1702672634436092383?t=zRQC8JFzneMojq0n2118Qg&s=19",
  },
  {
    name: "Deploy Your Own Lintree on BOS",
    href: "https://youtu.be/a8ULNp1q2uQ",
  },
  {
    name: "BOS demo to Non tech people",
    href: "https://youtu.be/14c8tAsbLdo?si=HuQzXKQ_5IaNghAL",
  },
  {
    name: "Decencentralise your Game with BOS on Near",
    href: "https://youtu.be/RYGNBjdnYfg?si=oxx1EhRwFuNoyO-Q",
  },
  {
    name: "Open Sprints on Building on BOS for Project Managers",
    href: "https://youtu.be/RsxuLJi5EvU?si=Gpn3_VazcZc2mpV7",
  },
  {
    name: "Top Influencers on BOS",
    href: "https://youtu.be/R1aZdG_m2dQ?si=h1jrjbuq6miL6OP0",
  },
  {
    name: "How to see Who Are building what on BOS",
    href: "https://youtu.be/a2RuTZDr8_c?si=G6mazurxyVrmkTWE",
  },
];

export default function EducationWorkshops() {
  return (
    <div>
      <Heading title="Workshops" />
      <Links links={links} />
    </div>
  );
}

'''
'''--- src/pages/education/index.js ---
import EducationCodeReviews from "./CodeReviews";
import EducationOfficeHours from "./OfficeHours";
import EducationTutorials from "./tutorials";
import EducationWorkshops from "./Workshops";

export {
  EducationCodeReviews,
  EducationOfficeHours,
  EducationTutorials,
  EducationWorkshops,
};

'''
'''--- src/pages/education/tutorials.js ---
import React from "react";
import Links from "../../components/pages/links";
import Heading from "../../components/header/Heading";

const links = [
  {
    name: "dApp with Near BOS, Near Social Bridge & Thirdweb/",
    href: "https://www.linkedin.com/pulse/dapp-near-bos-social-bridge-thirdweb-wenderson-pires/",
  },
  {
    name: "Near Social VM",
    href: "https://github.com/NearSocial/VM/releases/tag/2.4.0",
  },
  { name: "Near Docs", href: "http://gitHub.com/near/docs" },
  { name: "Near BOS Docs", href: "http://docs.near.org/bos" },
  {
    name: "Library that lets you build on BOS using React JS",
    href: "https://github.com/wpdas/near-social-bridge",
  },
  { name: "BOS CLI", href: "https://github.com/FroVolod/bos-cli-rs" },
  { name: "WorkSpace js", href: "https://github.com/near/workspaces-js" },
  { name: "Near SDK JS", href: "https://github.com/near/near-sdk-js" },
  {
    name: "BOS Tutorial Gateway",
    href: "https://docs.near.org/bos/tutorial/bos-gateway",
  },
  { name: "BOS educational", href: "http://docs.bos.gg/intro" },
  {
    name: "Building on BOS for users and Dev",
    href: "https://nearbuilders.com/bos",
  },
  {
    name: "Users starting with BOS",
    href: "https://banyan-collective.notion.site/For-Users-7dd27eb65e8b4753a8a3c28bd9fea81e",
  },
  {
    name: "Creating a Component",
    href: "https://banyan-collective.notion.site/Creating-a-Component-766915955ed840dca4ddbabaeef1ab41",
  },
  {
    name: "Running a component Locally",
    href: "https://banyan-collective.notion.site/Running-A-Component-Locally-c0224156ba3d45a2a6e1f2717d28aef6",
  },
  {
    name: "Building a Dapp and Composing all Widgets",
    href: "https://banyan-collective.notion.site/Building-a-Whole-dApp-Composing-All-Your-Widgets-59a93480b3274a028c721f1456967ccf",
  },
  {
    name: "Integrating Social DB into Dapps ",
    href: "https://banyan-collective.notion.site/Integrating-Social-DB-Into-Your-dApps-315b3aac48294f479e5cd7a43e16897a",
  },
  {
    name: "Running and Setting up a Gateway",
    href: "https://banyan-collective.notion.site/Running-A-Gateway-efa787d410744b2eb77ff0f6c27d68ff",
  },
  {
    name: "UX/UIDesigners guide to BOS",
    href: "https://banyan-collective.notion.site/For-Designers-83d3b5e3e1ba41c6a507ff058bbb7ac7",
  },
  {
    name: "BOS Academy BOS chain Design Patterns by Manzanal Spanish content",
    href: "https://youtu.be/IJjoTAIr4Pk?si=NWmLpUTGOms8co2Q",
  },
  {
    name: "BOS Academy: Building anything with Everything by Elliot",
    href: "https://youtu.be/DukrdJtZtSU?si=HlvFtWiKEzx-XUV4",
  },
  {
    name: "BOS academy: BOS Gateway + VM by Matt Lockyer",
    href: "https://youtu.be/mmeDHWnavyw?si=ldh_MAwU1GWjWg7x",
  },
  {
    name: "BOS Academy: Build your First BOS Dapp by James Waugh",
    href: "https://youtu.be/2hBBUBIWjqI?si=NibRGU1o_lVQk_kL",
  },
  {
    name: "Near Social 2.0",
    href: "https://github.com/NearSocial/VM/releases/tag/2.4.0",
  },
  {
    name: "How to build a Dapp from Scratch",
    href: "https://github.com/wpdas/near-social-bridge/blob/main/examples/dapp-bos-tutorial/TUTORIAL.md",
  },
  {
    name: "How to Use IPFS to Store Your React Build App",
    href: "https://github.com/wpdas/near-social-bridge#deploying-to-ipfs-csr",
  },
  {
    name: "Jutsu.ai 1-Click BOS onboarding Flow",
    href: "https://miro.com/app/board/uXjVMpIhdAI=/?share_link_id=196640010390",
  },
  {
    name: "TypeScript Starter Project on BOS",
    href: "https://github.com/frol/bos-component-ts-starter",
  },
  {
    name: "Building Unstoppable Dapps on BOS",
    href: "https://outlierventures.io/article/building-truly-unstoppable-dapps",
  },
  {
    name: "Building LinkTree with BOS",
    href: "https://github.com/Open-Cann/lp/tree/main",
  },
  {
    name: "Keypom Developer Documentation",
    href: "https://docs.keypom.xyz/docs/next/Tutorials/Advanced/daos/introduction",
  },
  {
    name: "Deploy Your Own Linktree on BOS",
    href: "https://youtu.be/a8ULNp1q2uQ",
  },
  {
    name: "Detailed Guide to Enhancing Near BOS VM",
    href: "https://hackmd.io/@microchipgnu/extend-near-vm",
  },
  {
    name: "BOS complete APIs to Allow your Components interact with different block chains, websites and stores data",
    href: "https://docs.near.org/bos/api/home",
  },
  {
    name: " Browser for Social Data and Web4. Fork your own gateway",
    href: "https://github.com/NearSocial/viewer",
  },
  {
    name: "BonSai, How to use it",
    href: "https://hackmd.io/@microchipgnu/bonsai",
  },
  { name: "Documentation ", href: "https://docs.near.org/" },
  {
    name: "Build Web frontEnd",
    href: "https://docs.near.org/develop/integrate/frontend",
  },
  { name: "BOS Loader", href: "https://docs.near.org/bos/dev/bos-loader" },
  { name: "Near CLI", href: "http://near.cli.rs" },
];

export default function EducationTutorials() {
  return (
    <div>
      <Heading title="Library of Tutorials" />
      <Links links={links} />
    </div>
  );
}

'''
'''--- src/pages/events/EventCalendar.js ---
import React from "react";
import { Widget } from "near-social-vm";

export default function EventCalendar() {
  return <Widget src="itexpert120-contra.near/widget/Events" />;
}

'''
'''--- src/pages/events/LibaryEvents.js ---
import React from "react";

export default function LibraryEvents() {
  return <div>Library Events</div>;
}

'''
'''--- src/pages/events/index.js ---
import EventCalendar from "./EventCalendar";
import LibraryEvents from "./LibaryEvents";

export { EventCalendar, LibraryEvents };

'''
'''--- src/pages/home/HomeSelector.js ---
import React from "react";
import { Widget } from "near-social-vm";
import { useBosLoaderStore } from "../../stores/bos-loader";

export default function HomeSelector() {
  const redirectMapStore = useBosLoaderStore();

  return (
    <div>
      <Widget
        src="itexpert120-contra.near/widget/Home.pageSelector"
        config={{
          redirectMap: redirectMapStore.redirectMap,
        }}
      />
    </div>
  );
}

'''
'''--- src/pages/more/Gateways.js ---
import React from "react";
import { Widget } from "near-social-vm";

export default function Gateways() {
  return (
    <div className="mb-5">
      <Widget src="itexpert120-contra.near/widget/Gateway" />
      <div className="mt-5">
        <small className="text-body-secondary">
          Add your gateways here:{" "}
          <a href="https://github.com/itexpert120/bos-gateway/blob/main/gateways.json">
            Github
          </a>
        </small>
      </div>
    </div>
  );
}

'''
'''--- src/pages/more/Infrastructure.js ---
import React from "react";
import Links from "../../components/pages/links";
import Heading from "../../components/header/Heading";

const links = [
  {
    name: "BOS Loader",
    href: "https://docs.near.org/bos/dev/bos-loader",
  },
  {
    name: "Jutsu.ai",
    href: "https://jutsu.ai",
  },
];

export default function Infrastructure() {
  return (
    <div>
      <Heading title="Infrastructure" />
      <Links links={links} />
    </div>
  );
}

'''
'''--- src/pages/more/Integrations.js ---
import React from "react";

export default function Integrations() {
  return <div>Integrations</div>;
}

'''
'''--- src/pages/more/index.js ---
import Gateways from "./Gateways";
import Infrastructure from "./Infrastructure";
import Integrations from "./Integrations";

export { Gateways, Infrastructure, Integrations };

'''
'''--- src/pages/opportunities/Accelerator.js ---
import React from "react";
import Links from "../../components/pages/links";
import Heading from "../../components/header/Heading";

const links = [
  {
    name: "HackBOX: Streamline and incubate your Hackathon and get funding",
    href: "https://near.org/hackbox.near/widget/home",
  },
  {
    name: "Near Horizon",
    href: "https://near.org/horizon",
  },
];

export default function OpportunitiesAccelerator() {
  return (
    <div>
      <Heading title="Accelerator Program" />
      <Links links={links} />
    </div>
  );
}

'''
'''--- src/pages/opportunities/Amplification.js ---
import React from "react";

export default function OpportunitiesAmplification() {
  return <div>OpportunitiesAmplification</div>;
}

'''
'''--- src/pages/opportunities/Funding.js ---
import React from "react";
import Links from "../../components/pages/links";
import Heading from "../../components/header/Heading";

const links = [
  {
    name: "HackBOX: Streamline and incubate your Hackathon and get funding",
    href: "https://near.org/hackbox.near/widget/Home.",
  },
  {
    name: "Grassroots DAO Onboarding + Funding via NDC",
    href: "https://gov.near.org/t/grassroots-daos-onboarding-procedure-v1-onboarding-round-is-open/36828",
  },
  {
    name: "NEAR MDAO Funding",
    href: "https://gov.near.org/t/marketing-eco-dao-announcement-novembers-funding-round/36806",
  },
  {
    name: "NEAR CDAO Funding",
    href: "https://gov.near.org/t/announcement-creatives-dao-november-funding-round/36813",
  },
  {
    name: "DeFi Protocols funding via Proximity",
    href: "https://form.jotform.com/212877151135050",
  },
  {
    name: "NEAR Horizon - Accelerator + Funding opportunity",
    href: "https://app.hzn.xyz/",
  },
];

export default function OpportunitiesFunding() {
  return (
    <div>
      <Heading title="Funding Opportunities" />
      <Links links={links} />
    </div>
  );
}

'''
'''--- src/pages/opportunities/Incubation.js ---
import React from "react";

export default function OpportunitiesIncubation() {
  return <div>OpportunitiesIncubation</div>;
}

'''
'''--- src/pages/opportunities/index.js ---
import OpportunitiesAccelerator from "./Accelerator";
import OpportunitiesAmplification from "./Amplification";
import OpportunitiesIncubation from "./Incubation";
import OpportunitiesFunding from "./Funding";

export {
  OpportunitiesAccelerator,
  OpportunitiesAmplification,
  OpportunitiesFunding,
  OpportunitiesIncubation,
};

'''
'''--- src/pages/projects/BOSIntegration.js ---
import React from "react";

export default function ProjectsBOSIntegration() {
  return <div>ProjectsBOSIntegration</div>;
}

'''
'''--- src/pages/projects/BuiltWithBOS.js ---
import React from "react";
import { Widget } from "near-social-vm";
import { useBosLoaderStore } from "../../stores/bos-loader";

export default function ProjectsBuiltWithBOS() {
  const redirectMapStore = useBosLoaderStore(); // We need this in order to run Widgets from local

  return (
    <Widget
      src="discover.near/widget/Project.Feed" // this references a local widget in apps/discoverbos/widget/Project./feed
      config={{
        redirectMap: redirectMapStore.redirectMap,
      }}
    />
  );
}

'''
'''--- src/pages/projects/Form.js ---
import React, { useMemo, useState, useEffect } from "react";

import Form from "react-bootstrap/Form";
import CreatableSelect from "react-select/creatable";
import { Widget } from "near-social-vm";
import { useBosLoaderStore } from "../../stores/bos-loader";
import { v4 } from "uuid";

const verticalOptions = [
  { value: "DeSci", label: "DeSci" },
  { value: "DeFi", label: "DeFi" },
  { value: "Gaming", label: "Gaming" },
  { value: "Metaverse", label: "Metaverse" },
  { value: "Commercial", label: "Commercial" },
  { value: "Sports and Entertainment", label: "Sports and Entertainment" },
  { value: "Infrastructure", label: "Infrastructure" },
  { value: "Social", label: "Social" },
  { value: "Social Impact", label: "Social Impact" },
  { value: "Creative", label: "Creative" },
  { value: "Education", label: "Education" },
];

const productTypeOptions = [
  { value: "DAO", label: "DAO" },
  { value: "NFT", label: "NFT" },
  { value: "AI", label: "AI" },
  { value: "Tooling", label: "Tooling" },
];

const integrationWithNearOptions = [
  { value: "Native", label: "Native" },
  { value: "Multichain", label: "Multichain" },
  { value: "Not yet but interested", label: "Not yet but interested" },
  { value: "No", label: "No" },
];

const developmentPhaseOptions = [
  { value: "Idea Stage", label: "Idea Stage" },
  { value: "Testnet Launched", label: "Testnet Launched" },
  { value: "Mainnet Launched", label: "Mainnet Launched" },
  { value: "Scaling Startup", label: "Scaling Startup" },
  { value: "Established Business", label: "Established Business" },
];

const distributionModelOptions = [
  { value: "Open Source", label: "Open Source" },
  { value: "Partial", label: "Partial" },
  { value: "Proprietry", label: "Proprietry" },
];

export default function ProjectsForm() {
  const redirectMapStore = useBosLoaderStore(); // We need this in order to run Widgets from local

  // form state values
  const [projectName, setProjectName] = useState("");
  const [projectAccount, setProjectAccount] = useState("");
  const [tagline, setTagline] = useState("");
  const [description, setDescription] = useState("");
  const [website, setWebsite] = useState("");
  const [teamSize, setTeamSize] = useState();
  const [location, setLocation] = useState("");
  const [projectLogo, setProjectLogo] = useState();
  const [backgroundImage, setBackgroundImage] = useState();

  // form validation
  const [nameValidation, setNameValidation] = useState(false);
  const [accountValidation, setAccountValidation] = useState(false);

  useEffect(() => {
    setNameValidation(projectName.length >= 2);
  }, [projectName]);

  useEffect(() => {
    setAccountValidation(projectAccount.endsWith(".near"));
  }, [projectAccount]);

  // select values
  const [selectedVerticals, setSelectedVerticals] = useState([]);
  const [selectedProductType, setSelectedProductType] = useState(null);
  const [selectedNearIntegration, setSelectedNearIntegration] = useState(null);
  const [selectedDevelopmentPhase, setSelectedDevelopmentPhase] =
    useState(null);
  const [selectedDistrubutionModal, setSelectedDistrubutionModal] =
    useState(null);

  // select validations
  const [verticalsValidation, setVerticalsValidation] = useState(false);
  const [productTypeValidation, setProductTypeValidation] = useState(false);
  const [nearIntegrationValidation, setNearIntegrationValidation] =
    useState(false);
  const [developmentPhaseValidation, setDevelopmentPhaseValidation] =
    useState(false);
  const [distributionModelValidation, setDistributionModelValidation] =
    useState(false);
  const [projectLogoValidation, setProjectLogoValidation] = useState(false);

  // validate select
  useEffect(() => {
    setVerticalsValidation(selectedVerticals.length === 0 ? false : true);
  }, [selectedVerticals]);

  useEffect(() => {
    setProductTypeValidation(selectedProductType === null ? false : true);
  }, [selectedProductType]);

  useEffect(() => {
    setNearIntegrationValidation(
      selectedNearIntegration === null ? false : true
    );
  }, [selectedNearIntegration]);

  useEffect(() => {
    setDevelopmentPhaseValidation(
      selectedDevelopmentPhase === null ? false : true
    );
  }, [selectedDevelopmentPhase]);

  useEffect(() => {
    setDistributionModelValidation(
      selectedDistrubutionModal === null ? false : true
    );
  }, [selectedDistrubutionModal]);

  useEffect(() => {
    setProjectLogoValidation(projectLogo ? true : false);
  }, [projectLogo]);

  const validateForm = () => {
    return (
      nameValidation &&
      accountValidation &&
      verticalsValidation &&
      productTypeValidation &&
      nearIntegrationValidation &&
      developmentPhaseValidation &&
      distributionModelValidation &&
      projectLogoValidation
    );
  };

  const did = useMemo(() => v4(), []);

  return (
    <main className="container pt-3" style={{ maxWidth: "72rem" }}>
      <h2 style={{ textAlign: "center" }} className="mb-3">
        Submit New Project
      </h2>
      <div>
        <Form noValidate onSubmit={(e) => e.preventDefault()}>
          <Form.Group className="mb-3" controlId="projectName">
            <Form.Label>Project Name *</Form.Label>
            <Form.Control
              required
              type="text"
              placeholder="Enter project name"
              value={projectName}
              onChange={(e) => setProjectName(e.target.value)}
            />
            {!nameValidation && (
              <Form.Text>
                Project Name should be greater than 2 characters
              </Form.Text>
            )}
          </Form.Group>

          <Form.Group className="mb-3" controlId="projectAccount">
            <Form.Label>Your project&apos; NEAR Account *</Form.Label>
            <Form.Control
              required
              type="text"
              placeholder="Enter NEAR Account ID of your project (like discover.near)"
              value={projectAccount}
              onChange={(e) => setProjectAccount(e.target.value)}
            />
            {!accountValidation && (
              <Form.Text>Account ID must end with &apos;.near&apos;</Form.Text>
            )}
          </Form.Group>

          <Form.Group className="mb-3" controlId="projectAccount">
            <Form.Label>Project Logo *</Form.Label>
            <Widget
              src="near/widget/ImageEditorTabs"
              props={{
                image: projectLogo,
                onChange: (img) => setProjectLogo(img),
              }}
            />
          </Form.Group>

          <Form.Group className="mb-3" controlId="projectAccount">
            <Form.Label>Project Background</Form.Label>
            <Widget
              src="near/widget/ImageEditorTabs"
              props={{
                image: backgroundImage,
                onChange: (img) => setBackgroundImage(img),
              }}
            />
          </Form.Group>

          <Form.Group className="mb-3" controlId="verticals">
            <Form.Label>Verticals *</Form.Label>
            <CreatableSelect
              className="mb-3"
              isMulti
              options={verticalOptions}
              value={selectedVerticals}
              onChange={setSelectedVerticals}
              required={true}
            />
          </Form.Group>

          <Form.Group className="mb-3" controlId="productType">
            <Form.Label>Product Type *</Form.Label>
            <CreatableSelect
              className="mb-3"
              options={productTypeOptions}
              value={selectedProductType}
              onChange={setSelectedProductType}
              required={true}
            />
          </Form.Group>

          <Form.Group className="mb-3" controlId="nearIntegration">
            <Form.Label>Integration with NEAR *</Form.Label>
            <CreatableSelect
              className="mb-3"
              options={integrationWithNearOptions}
              value={selectedNearIntegration}
              onChange={setSelectedNearIntegration}
              required={true}
            />
          </Form.Group>

          <Form.Group className="mb-3" controlId="developmentPhase">
            <Form.Label>Development Phase *</Form.Label>
            <CreatableSelect
              className="mb-3"
              options={developmentPhaseOptions}
              value={selectedDevelopmentPhase}
              onChange={setSelectedDevelopmentPhase}
              required={true}
            />
          </Form.Group>

          <Form.Group className="mb-3" controlId="tagline">
            <Form.Label>Tagline</Form.Label>
            <Form.Control
              type="text"
              placeholder="Write one liner about your project"
              value={tagline}
              onChange={(e) => setTagline(e.target.value)}
            />
          </Form.Group>

          <Form.Group className="mb-3" controlId="description">
            <Form.Label>Description</Form.Label>
            <Form.Control
              type="text"
              placeholder="Give a short description of your project"
              value={description}
              as={"textarea"}
              rows={5}
              onChange={(e) => setDescription(e.target.value)}
            />
          </Form.Group>

          <Form.Group className="mb-3" controlId="distrubutionModal">
            <Form.Label>
              What is your project&apos;s distrubution modal? *
            </Form.Label>
            <CreatableSelect
              className="mb-3"
              options={distributionModelOptions}
              value={selectedDistrubutionModal}
              onChange={setSelectedDistrubutionModal}
              required={true}
            />
          </Form.Group>

          <Form.Group className="mb-3" controlId="website">
            <Form.Label>Website</Form.Label>
            <Form.Control
              type="text"
              placeholder="Website URL (like discoverbos.org)"
              value={website}
              onChange={(e) => setWebsite(e.target.value)}
            />
          </Form.Group>

          <Form.Group className="mb-3" controlId="teamSize">
            <Form.Label>Team Size</Form.Label>
            <Form.Control
              type="number"
              placeholder="10"
              value={teamSize}
              onChange={(e) => setTeamSize(e.target.value)}
            />
          </Form.Group>

          <Form.Group className="mb-3" controlId="location">
            <Form.Label>Location</Form.Label>
            <Form.Control
              type="text"
              placeholder="San Francisco, CA"
              value={location}
              onChange={(e) => setLocation(e.target.value)}
            />
          </Form.Group>
          <Widget
            src="discover.near/widget/Project.SubmitButton"
            config={{
              redirectMap: redirectMapStore.redirectMap,
            }}
            props={{
              data: {
                name: projectName,
                accountId: projectAccount,
                verticals: selectedVerticals,
                productType: selectedProductType,
                nearIntegration: selectedNearIntegration,
                developmentPhase: selectedDevelopmentPhase,
                tagline: tagline,
                description: description,
                distributionModal: selectedDistrubutionModal,
                website: website,
                teamSize: teamSize,
                location: location,
              },
              validateForm: validateForm(),
              did,
            }}
          />
        </Form>
      </div>
    </main>
  );
}

'''
'''--- src/pages/projects/NativeProjects.js ---
import React from "react";

export default function ProjectsNativeProjects() {
  return <div>ProjectsNativeProjects</div>;
}

'''
'''--- src/pages/projects/Projects.js ---
import React from "react";
import { Widget } from "near-social-vm";
import { useBosLoaderStore } from "../../stores/bos-loader";

export default function Projects() {
  const redirectMapStore = useBosLoaderStore(); // We need this in order to run Widgets from local

  return (
    <div className="container">
      <Widget
       src="nearcatalog.near/widget/NearCatalog.App"
        //src="nearcatalog.near/widget/NearCatalog.App"
        config={{
          redirectMap: redirectMapStore.redirectMap,
        }}
      />
    </div>
  );
}

'''
'''--- src/pages/projects/ProjectsForm.js ---
import React from "react";
import { useBosLoaderStore } from "../../stores/bos-loader";
import { Widget } from "near-social-vm";

export default function ProjectsForm() {
  const redirectMapStore = useBosLoaderStore(); // We need this in order to run Widgets from local

  return (
    <div className="container mb-3 my-5">
      <Widget
        src="discover.near/widget/Project.Form" // this references a local widget in apps/discoverbos/widget/Project./feed
        config={{
          redirectMap: redirectMapStore.redirectMap,
        }}
      />
    </div>
  );
}

'''
'''--- src/pages/projects/index.js ---
import ProjectsBOSIntegration from "./BOSIntegration";
import ProjectsBuiltWithBOS from "./BuiltWithBOS";
import ProjectsNativeProjects from "./NativeProjects";

export { ProjectsBOSIntegration, ProjectsBuiltWithBOS, ProjectsNativeProjects };

'''
'''--- src/stores/bos-loader.js ---
import { create } from 'zustand';

export const useBosLoaderStore = create((set) => ({
  failedToLoad: false,
  hasResolved: false,
  loaderUrl: '',
  redirectMap: {},
  set: (state) => set((previousState) => ({ ...previousState, ...state })),
}));
'''
'''--- vercel.json ---
{
    "rewrites":  [
        {"source": "/(.*)", "destination": "/"}
     ]
}
'''
'''--- webpack.config.js ---
const webpack = require("webpack");
const paths = require("./config/paths");
const path = require("path");
// const ManifestPlugin = require("webpack-manifest-plugin");
const { CleanWebpackPlugin } = require("clean-webpack-plugin");
const HTMLWebpackPlugin = require("html-webpack-plugin");
const CopyWebpackPlugin = require("copy-webpack-plugin");
const { merge } = require("webpack-merge");
const loadPreset = require("./config/presets/loadPreset");
const loadConfig = (mode) => require(`./config/webpack.${mode}.js`)(mode);

module.exports = function (env) {
  const { mode = "production" } = env || {};
  return merge(
    {
      mode,
      entry: `${paths.srcPath}/index.js`,
      output: {
        path: paths.distPath,
        filename: "[name].bundle.js",
        publicPath: "/",
      },
      module: {
        rules: [
          {
            test: /\.m?js/,
            resolve: {
              fullySpecified: false,
            },
          },
          {
            test: /\.js$/,
            use: ["babel-loader"],
            exclude: path.resolve(__dirname, "node_modules"),
          },
          // Images: Copy image files to build folder
          { test: /\.(?:ico|gif|png|jpg|jpeg)$/i, type: "asset/resource" },

          // Fonts and SVGs: Inline files
          { test: /\.(woff(2)?|eot|ttf|otf|svg|)$/, type: "asset/inline" },
        ],
      },
      resolve: {
        modules: [paths.srcPath, "node_modules"],
        extensions: [".js", ".jsx", ".json"],
        fallback: {
          crypto: require.resolve("crypto-browserify"),
          stream: require.resolve("stream-browserify"),
          http: require.resolve("stream-http"),
          https: require.resolve("https-browserify"),
          fs: false,
          path: require.resolve("path-browserify"),
          zlib: require.resolve("browserify-zlib"),
        },
        // Fix for using `yarn link "near-social-vm"`
        alias: {
          react: path.resolve(__dirname, "./node_modules/react"),
          "react-dom": path.resolve(__dirname, "./node_modules/react-dom"),
          "near-api-js": path.resolve(__dirname, "./node_modules/near-api-js"),
        },
      },
      plugins: [
        new webpack.EnvironmentPlugin({
          // Configure environment variables here.
          ENVIRONMENT: "browser",
        }),
        new CleanWebpackPlugin(),
        // Copies files from target to destination folder
        new CopyWebpackPlugin({
          patterns: [
            {
              from: paths.publicPath,
              // to: "/",
              globOptions: {
                ignore: ["*.DS_Store", "robots.txt"],
              },
              noErrorOnMissing: true,
            },
          ],
        }),
        new HTMLWebpackPlugin({
          template: `${paths.publicPath}/template.html`,
          favicon: `${paths.publicPath}/favicon.png`,
          robots: `${paths.publicPath}/robots.txt`,
          publicPath: "/",
        }),
        // new webpack.ProgressPlugin(),
        new webpack.ProvidePlugin({
          process: "process/browser",
          Buffer: [require.resolve("buffer/"), "Buffer"],
        }),
        // new ManifestPlugin.WebpackManifestPlugin(),
      ],
    },
    loadConfig(mode),
    loadPreset(env)
  );
};

'''