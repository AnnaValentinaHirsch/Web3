*GitHub Repository "nearprotocol/stakewars"*

'''--- .github/ISSUE_TEMPLATE/issue-template.md ---
---
name: Issue Template
about: Stake Wars Simplified Bug or Test report
title: "[Choose one --> BUG | TEST] ..."
labels: ''
assignees: ''

---

**Describe the bug or test**
A clear and concise description of what the bug is.

**How to Reproduce**
Steps to reproduce the behavior:
1. Go to '...'
2. Click on '....'
3. Scroll down to '....'
4. See thing

**Expected behavior OR Outcome of test**
A clear and concise description of what you expected to happen.

**Specs (please complete the following information):**
 - OS:
- Which cloud / on-premise: 
- CPU: 
- RAM: 
- Disk space: 

**Additional context**
Add any other context about the problem here.

**Screenshots Optional**
If applicable, add screenshots to help explain your problem.

'''
'''--- GUIDELINES.md ---
# Stake Wars 2.0 Guidelines

## Format
This new phase of Stake Wars will test stake delegation to validators. The winners will be those validators who deploy reliable nodes and challenge the boundaries of Proof of Stake, by offering innovative delegation solutions that can attract the favor of Stake Wars participants. The larger the stake you will attract from real users, the bigger your success during the Stake Wars and beyond, when the MainNet will be running on your nodes.
NEAR Protocol will promote this initiative across all its channels, by progressively releasing Stake Wars to every user who owns a TestNet wallet. This will be a unique opportunity to attract NEAR adopters on your platform and grow your validator business.

This is not going to be easy: we will deploy hard forks constantly, we will test your team reactivity in case of network issues, we will run benchmarks at the network level, and we will measure the strenght of the participants as a whole.
However, Stake Wars is not about doing things right or wrong. It is mostly about learning how smart contract-based delegation works, and get ready to run NEAR together.

## Rules
There are no strict rules, rather guidelines and examples. Judges on NEAR side will rate your participation, and will update the [leaderboard](LEADERBOARD.md) every week.

_If you are acting in good faith, you’re almost assuredly good. If you’re acting in bad faith, moderators will exclude you from the competition._

Here are some examples and we will trust you to follow the spirit of the law:

### DO…
* Check out the QA scenarios and run them on your system.
* Read the documentation, and open GitHub issues if you find ways to improve it.
* Run your node like it's a production environment and you are staking with real funds.
* Run any kind of benchmark you think is valuable.
* Try staking in all sorts of ways
  * You will be rewarded for creativity, effort and magnitude of the submission
* Write reports on your experience and send them to us publicly.
* Complain about things that need fixing or cleanup!

### DON’T…
* Do anything illegal in order to hack our stuff.
* Hack other peoples’ computers or use attack vectors that are outside of our control
  * For example, if you add a keylogger to someone’s computer, that is showing a flaw in their Operational Security not a flaw in the system we’re building.
* Harass people in any way. This includes community members and team members.
* Be a jerk.

## Our Goals for this
We want...

* You to build things that solve your own problems as future validators on the network
* To put the last year or so of hard work in front of our community to try it out
* To find glaring flaws in our systems, designs and code
* To learn what your needs are as part of the validator community

## Additional guidelines for validators joining TestNet
After a validator generated at least \~6000 blocks on BetaNet (and has been one week in the active set), it becomes eligible to receive staking on TestNet. Before the migration takes place, Stake Wars organizers will reach out directly to the validator, proposing to shut down the BetaNet node, and receive delegated tokens on TestNet.

There are no specific requirements, and the promotion is not automatic. The evaluation will be based on these factors (not in order of importance):
* your staking pool uptime is in the 90th percentile of the [leaderboard](LEADERBOARD.md)
* your pool run for a substantial number of epochs without being kicked out
* you successfully completed the Stake Wars challenges
* you are active in the community channels (Discord and the [portal](https://portal.near.org))
* you actively updated your node and successfully applied BetaNet node ugrades
* you are already a successful validator on other PoS networks
* you contributed to `nearcore` and other NEAR repositories (submitting issues, finding bugs, improving docs...)

While we are happy to have as many professional validators and distinguished BetaNet node operators to TestNet as we can, all validators need to guarantee TestNet uptime and reliability. Failing to do so may induce the Stake Wars organizers to unstake the funds from the pool.

In practical terms, to join TestNet you will have to:
1. deploy your TestNet staking pool, using the staking pool factory [smart contract](https://explorer.testnet.near.org/accounts/stakingpool)
2. build and run your TestNet node
3. submit your information to [this form](https://nearprotocol1001.typeform.com/to/x4Bval). Specify both your BetaNet and TestNet pools, and don't forget to disclose your Github and Discord/Telegram IDs, so it's easier for us to contact you in case of issues

You can instantly deploy the staking pool factory with near-cli, using the command:
```
near call pool.f863973.m0 create_staking_pool '{"staking_pool_id":"<POOL_ID>", "owner_id":"<OWNER_ID>", "stake_public_key":"<VALIDATOR_KEY>", "reward_fee_fraction": {"numerator": <X>, "denominator": <Y>}}' --account_id <OWNER_ID> --amount 30 --gas 300000000000000
```
Where:
* `pool.f863973.m0` is the staking pool factory mentioned above
* `POOL_ID` is the name of the staking pool contract. If your validator name is `nearkat` the result will be `nearkat.pool.f863973.m0`
* `OWNER_ID` is the owner of the pool, who's authorized to change the stake public key and the fees
* `VALIDATOR_KEY` is the public key found in the file `~/.near/testnet/validator_key.json` on the machine running the node
* `{"numerator": <X>, "denominator": <Y>}` set the validator fees. To set 10% of fees x=10 and y=100
* `--amount 30` attaches 30 $NEAR to the transaction, as a reserve to pay the contract storage
* `--gas 300000000000000` specifies the gas for the transaction (optional)

**Heads up:** be sure that your validator node and your staking pool have the same ID, as explained [here](troubleshooting.md#11-my-validator-is-in-the-current_validators-set-but-its-not-producing-blocks).

The main differences with BetaNet will be:
- less frequent updates
- a different build of nearcore: [x.y.z-rc](https://github.com/nearprotocol/nearcore/releases) instead of beta
- longer epochs (43,200 blocks instead of 10,000)

**Heads up:** TestNet is a permissionless network, so you can deploy your validator node and its staking pool today. However, Stake Wars organizers will delegate TestNet tokens to your pool only after reaching out and discussing your commitment in running the network.

'''
'''--- LEADERBOARD.md ---
# STAKE WARS LEADERBOARD

## Stake Wars Final Leaderboard - BetaNet Nodes
Updated on October 30, 9:55 AM PST - [block 18608936](https://explorer.betanet.near.org/blocks/18608936) 

This is the final Stake Wars Leaderboard for BetaNet:
- `ACCOUNT_ID` represents the name of the staking pool
- `NUM_EXPECTED_BLOCKS` the number of expected blocks, given the stake
- `ONLINE` the number of generated blocks, out of the expected ones
- `TOTAL EPOCHS` is the number of epochs this validator was online
- `HOURS` is an estimation on how many hours the epoch was online, given 10,000 blocks per epoch at 1 second each
- `TOKENS` are the tokens that will be sent to these validators for their participation in the Stake Wars (see below for calculation criteria)
- `SEND FORM` if TRUE, please send your contact information again using the [Validators Contact Form](https://nearprotocol1001.typeform.com/to/x4Bval), as we weren't able to associate any email with the staking pool ID. **It's really appreciated if you specify the same email previously used to receive tokens, to save time on the KYC**

Note: the amounts below don't include other token allocations, such as Stake Wars Challenge docs.

| ACCOUNT\_ID                                  | NUM\_EXPECTED\_BLOCKS | ONLINE  | TOTAL EPOCHS | HOURS | TOKENS | SEND FORM |
| -------------------------------------------- | --------------------- | ------- | ------------ | ----- | ------ | --------- |
| plex2                                        | 241041                | 98.05%  | 1199         | 3331  | 1050   |           |
| ag\_staking                                  | 208933                | 99.42%  | 1199         | 3331  | 1050   |           |
| validator\_italia\_contract                  | 205640                | 97.96%  | 1148         | 3189  | 1007.5 |           |
| sfpool                                       | 203125                | 98.01%  | 1073         | 2981  | 945    |           |
| sub1.crazylandd.betanet                      | 200039                | 98.20%  | 1174         | 3261  | 1027.5 |           |
| pro.stakehouse.betanet                       | 196934                | 98.68%  | 1001         | 2781  | 885    | TRUE      |
| staked.stakehouse.betanet                    | 176835                | 99.31%  | 680          | 1889  | 617.5  |           |
| volvos60909                                  | 175329                | 95.24%  | 866          | 2406  | 772.5  |           |
| mort1.mort.betanet                           | 168023                | 96.21%  | 1002         | 2783  | 885    |           |
| sc.galbraith.betanet                         | 151228                | 98.41%  | 991          | 2753  | 875    |           |
| pool.everstake.betanet                       | 145032                | 99.78%  | 841          | 2336  | 750    |           |
| olegjan                                      | 148612                | 96.62%  | 1090         | 3028  | 957.5  |           |
| a\_validator                                 | 150947                | 92.66%  | 897          | 2492  | 797.5  |           |
| gems                                         | 140631                | 96.13%  | 909          | 2525  | 807.5  |           |
| c1.hashquark                                 | 140335                | 95.65%  | 1122         | 3117  | 985    |           |
| sub.rosalessierra91.betanet                  | 131541                | 97.49%  | 743          | 2064  | 670    |           |
| smart.askold.betanet                         | 131549                | 96.06%  | 1001         | 2781  | 885    |           |
| olaiolsen                                    | 142050                | 88.21%  | 964          | 2678  | 852.5  |           |
| pool.happin.betanet                          | 123335                | 98.03%  | 909          | 2525  | 807.5  |           |
| villiamsivertsen                             | 125351                | 95.50%  | 897          | 2492  | 797.5  |           |
| dochpryof                                    | 125053                | 95.69%  | 882          | 2450  | 785    |           |
| cryp                                         | 120326                | 95.53%  | 936          | 2600  | 830    |           |
| wetez                                        | 119516                | 95.74%  | 829          | 2303  | 740    |           |
| fredrik\_pool                                | 159666                | 71.51%  | 1001         | 2781  | 885    |           |
| sc.foxnorth1210.betanet                      | 118708                | 94.92%  | 868          | 2411  | 772.5  |           |
| sl-he                                        | 115701                | 95.56%  | 849          | 2358  | 757.5  |           |
| silver1                                      | 113926                | 96.05%  | 817          | 2269  | 730    |           |
| oligarr                                      | 128829                | 84.87%  | 913          | 2536  | 810    |           |
| janliamnilsson                               | 115851                | 94.15%  | 861          | 2392  | 767.5  |           |
| sl1sub                                       | 114747                | 94.73%  | 766          | 2128  | 687.5  |           |
| delight\_pool                                | 113291                | 93.38%  | 1017         | 2825  | 897.5  |           |
| pool.easy2stake.betanet                      | 107724                | 96.79%  | 571          | 1586  | 525    |           |
| tommywesley                                  | 147710                | 68.43%  | 994          | 2761  | 877.5  |           |
| bucket                                       | 138674                | 70.26%  | 1003         | 2786  | 885    |           |
| tatianka                                     | 101334                | 94.63%  | 893          | 2481  | 795    |           |
| contract.nats.betanet                        | 98726                 | 96.48%  | 814          | 2261  | 727.5  |           |
| phenom                                       | 100600                | 94.48%  | 713          | 1981  | 645    |           |
| validator.projecttent.betanet                | 94712                 | 99.12%  | 549          | 1525  | 507.5  |           |
| huglester                                    | 98196                 | 94.63%  | 494          | 1372  | 462.5  |           |
| 31337x.31337.betanet                         | 96249                 | 95.65%  | 871          | 2419  | 775    |           |
| kokos-anti-covid                             | 98328                 | 92.74%  | 712          | 1978  | 642.5  |           |
| starlink-pool.stakehouse.betanet             | 92112                 | 97.10%  | 455          | 1264  | 430    |           |
| megatron                                     | 96711                 | 91.42%  | 815          | 2264  | 730    |           |
| yoda                                         | 96370                 | 86.55%  | 835          | 2319  | 745    |           |
| fuckit.betanet                               | 90694                 | 90.77%  | 413          | 1147  | 395    |           |
| crypto-solutions.stakehouse.betanet          | 85214                 | 94.17%  | 429          | 1192  | 407.5  |           |
| contract.bartalamew.betanet                  | 86428                 | 91.95%  | 793          | 2203  | 710    |           |
| cloudpost\_pool                              | 80816                 | 97.63%  | 691          | 1919  | 625    |           |
| valeraverim                                  | 96850                 | 80.71%  | 644          | 1789  | 587.5  |           |
| node0                                        | 77515                 | 98.32%  | 330          | 917   | 325    |           |
| arm.armada.betanet                           | 79893                 | 95.13%  | 569          | 1581  | 525    |           |
| techno\_validator                            | 78485                 | 96.39%  | 555          | 1542  | 512.5  |           |
| rockpathpool                                 | 76740                 | 97.04%  | 680          | 1889  | 617.5  |           |
| simonhugo                                    | 80737                 | 89.49%  | 604          | 1678  | 552.5  |           |
| ou812.stakehouse.betanet                     | 76049                 | 94.76%  | 544          | 1511  | 502.5  |           |
| dog.bears.betanet                            | 74597                 | 93.85%  | 541          | 1503  | 500    |           |
| coolpool.dimaro1.betanet                     | 73611                 | 95.05%  | 503          | 1397  | 470    |           |
| sparkpool.test                               | 71533                 | 96.98%  | 429          | 1192  | 407.5  |           |
| sam.stakehouse.betanet                       | 71448                 | 95.41%  | 560          | 1556  | 517.5  |           |
| launooskuarttu                               | 74441                 | 91.08%  | 641          | 1781  | 585    |           |
| node                                         | 69004                 | 97.66%  | 357          | 992   | 347.5  |           |
| emilia.stakehouse.betanet                    | 70443                 | 95.51%  | 560          | 1556  | 517.5  |           |
| bitcat.stakehouse.betanet                    | 69320                 | 96.39%  | 484          | 1344  | 452.5  |           |
| zenqqqq                                      | 67283                 | 97.68%  | 652          | 1811  | 592.5  |           |
| swain2.stakehouse.betanet                    | 69147                 | 94.86%  | 556          | 1544  | 512.5  |           |
| isillien                                     | 92720                 | 70.67%  | 741          | 2058  | 667.5  |           |
| felixschulz                                  | 68214                 | 94.09%  | 649          | 1803  | 590    |           |
| 777stakes                                    | 73269                 | 86.74%  | 538          | 1494  | 497.5  |           |
| nearmars.stakehouse.betanet                  | 62806                 | 98.32%  | 425          | 1181  | 405    |           |
| masternode24                                 | 62728                 | 98.25%  | 501          | 1392  | 467.5  |           |
| genesislab.stakehouse.betanet                | 61606                 | 99.74%  | 592          | 1644  | 542.5  |           |
| filippova\_pool.stakehouse.betanet           | 61608                 | 99.09%  | 385          | 1069  | 370    |           |
| mmm.stakehouse.betanet                       | 61107                 | 96.66%  | 409          | 1136  | 390    |           |
| rioblocks.stakehouse.betanet                 | 59408                 | 99.02%  | 206          | 572   | 222.5  |           |
| stakin                                       | 64671                 | 90.39%  | 569          | 1581  | 525    |           |
| chorus-one-pool-v1.stakehouse.betanet        | 58806                 | 99.08%  | 381          | 1058  | 367.5  |           |
| optimisticvalidator                          | 60700                 | 93.59%  | 623          | 1731  | 570    |           |
| aptemuyc4                                    | 106685                | 53.01%  | 807          | 2242  | 722.5  |           |
| vova                                         | 60719                 | 92.10%  | 528          | 1467  | 490    |           |
| node3                                        | 57206                 | 97.73%  | 129          | 358   | 157.5  |           |
| sub2.balinode.betanet                        | 55907                 | 98.70%  | 346          | 961   | 337.5  |           |
| yyyyyyyyyyyyy1                               | 55780                 | 98.02%  | 578          | 1606  | 532.5  |           |
| node2                                        | 54803                 | 97.30%  | 132          | 367   | 160    |           |
| alive29                                      | 59845                 | 88.47%  | 534          | 1483  | 495    |           |
| c.eosis.betanet                              | 54217                 | 96.61%  | 540          | 1500  | 500    |           |
| delphidigital.stakehouse.betanet             | 52205                 | 99.90%  | 318          | 883   | 315    |           |
| 40th.meridian.betanet                        | 53683                 | 95.18%  | 538          | 1494  | 497.5  |           |
| mfsc                                         | 52909                 | 96.46%  | 405          | 1125  | 387.5  |           |
| swiss\_staking.stakehouse.betanet            | 55306                 | 92.07%  | 267          | 742   | 272.5  |           |
| savelev.stakehouse.betanet                   | 51203                 | 98.90%  | 512          | 1422  | 477.5  |           |
| get\_rich                                    | 77729                 | 64.64%  | 554          | 1539  | 512.5  |           |
| somebody                                     | 53389                 | 93.41%  | 545          | 1514  | 505    |           |
| jaroslavrud                                  | 54811                 | 90.36%  | 556          | 1544  | 512.5  |           |
| stakedpool.staked.test                       | 50972                 | 96.95%  | 442          | 1228  | 417.5  |           |
| shudo                                        | 53113                 | 92.63%  | 553          | 1536  | 510    |           |
| majlovesreg.stakehouse.betanet               | 51311                 | 94.85%  | 414          | 1150  | 395    |           |
| seby05.betanet                               | 49910                 | 96.18%  | 345          | 958   | 337.5  |           |
| meleapool                                    | 47915                 | 97.49%  | 456          | 1267  | 430    | TRUE      |
| blink                                        | 47813                 | 95.89%  | 485          | 1347  | 455    |           |
| forbole.stakehouse.betanet                   | 46308                 | 97.13%  | 377          | 1047  | 365    |           |
| staking4all.stakehouse.betanet               | 48402                 | 92.63%  | 388          | 1078  | 372.5  |           |
| general.alfa.betanet                         | 46643                 | 94.20%  | 467          | 1297  | 440    |           |
| ryabina                                      | 44406                 | 98.44%  | 446          | 1239  | 422.5  |           |
| anonstake                                    | 44428                 | 95.14%  | 378          | 1050  | 365    |           |
| kazan-pool.stakehouse.betanet                | 44206                 | 95.27%  | 383          | 1064  | 370    |           |
| sllpool                                      | 48018                 | 84.38%  | 492          | 1367  | 460    |           |
| warger\_sub                                  | 43703                 | 92.47%  | 389          | 1081  | 375    |           |
| jazza                                        | 49981                 | 79.78%  | 499          | 1386  | 465    |           |
| nearcola                                     | 41629                 | 95.39%  | 384          | 1067  | 370    |           |
| node1                                        | 40405                 | 96.42%  | 73           | 203   | 110    |           |
| audit\_two.stakehouse.betanet                | 39702                 | 88.67%  | 397          | 1103  | 380    |           |
| stake2earnfunds2                             | 36280                 | 95.45%  | 376          | 1044  | 362.5  |           |
| swissqstakepoolsw3                           | 36382                 | 95.07%  | 378          | 1050  | 365    |           |
| lunanova\_pool                               | 35403                 | 96.11%  | 340          | 944   | 332.5  |           |
| www.nodeasy.test                             | 34715                 | 97.29%  | 363          | 1008  | 352.5  |           |
| baziliksub                                   | 34700                 | 97.23%  | 330          | 917   | 325    |           |
| cryptium.stakehouse.betanet                  | 34402                 | 97.71%  | 273          | 758   | 277.5  |           |
| blazenet                                     | 35302                 | 94.12%  | 342          | 950   | 335    |           |
| 777staker.7777nda.betanet                    | 36606                 | 89.01%  | 361          | 1003  | 350    |           |
| bambarello                                   | 88317                 | 36.60%  | 665          | 1847  | 605    |           |
| joe1                                         | 35202                 | 91.21%  | 339          | 942   | 332.5  |           |
| mmm                                          | 35201                 | 89.46%  | 340          | 944   | 332.5  |           |
| poolz                                        | 38014                 | 82.71%  | 402          | 1117  | 385    |           |
| top                                          | 34501                 | 90.64%  | 332          | 922   | 327.5  |           |
| staking\_viboracecata.stakehouse.betanet     | 32653                 | 93.87%  | 271          | 753   | 275    |           |
| vipstakes                                    | 67422                 | 45.14%  | 611          | 1697  | 560    |           |
| luckystaker.stakehouse.betanet               | 33809                 | 87.88%  | 296          | 822   | 297.5  |           |
| nearcool2                                    | 35696                 | 78.90%  | 303          | 842   | 302.5  |           |
| alexzz                                       | 29802                 | 94.45%  | 253          | 703   | 260    |           |
| avadon41.stakehouse.betanet                  | 30001                 | 91.78%  | 150          | 417   | 175    |           |
| pool.bibiwang.betanet                        | 51931                 | 52.71%  | 537          | 1492  | 497.5  |           |
| c3.inotel.betanet                            | 27713                 | 98.25%  | 261          | 725   | 267.5  |           |
| kvasnear                                     | 27401                 | 96.56%  | 258          | 717   | 265    |           |
| pool                                         | 29295                 | 89.82%  | 290          | 806   | 292.5  |           |
| maxhealth                                    | 31614                 | 83.10%  | 335          | 931   | 330    |           |
| nazar92                                      | 29688                 | 88.48%  | 261          | 725   | 267.5  |           |
| paulainsley1betanet.stakehouse.betanet       | 30247                 | 86.79%  | 246          | 683   | 255    |           |
| pool.ryabina\_io.betanet                     | 39309                 | 66.52%  | 328          | 911   | 322.5  |           |
| thstakepool.stakehouse.betanet               | 30002                 | 86.87%  | 296          | 822   | 297.5  |           |
| zpooll                                       | 26401                 | 97.16%  | 204          | 567   | 220    |           |
| stake-machine                                | 27676                 | 91.14%  | 283          | 786   | 285    |           |
| vlad-validator.test                          | 25600                 | 96.54%  | 255          | 708   | 262.5  |           |
| stakewolf\_pool                              | 25005                 | 98.50%  | 268          | 744   | 272.5  |           |
| averonix                                     | 84906                 | 28.99%  | 624          | 1733  | 570    |           |
| enterpool.stakehouse.betanet                 | 27403                 | 89.73%  | 237          | 658   | 247.5  |           |
| joe1.joejoen.betanet                         | 26716                 | 91.77%  | 253          | 703   | 260    |           |
| awesome                                      | 25304                 | 96.71%  | 231          | 642   | 242.5  |           |
| gielve.stakehouse.betanet                    | 24204                 | 98.04%  | 242          | 672   | 252.5  |           |
| neonong\_pool.stakehouse.betanet             | 24446                 | 96.14%  | 243          | 675   | 252.5  |           |
| thepassivetrust.stakehouse.betanet           | 25463                 | 91.43%  | 228          | 633   | 240    |           |
| c2.bibiwang.betanet                          | 25702                 | 89.84%  | 225          | 625   | 237.5  |           |
| interference                                 | 23218                 | 98.86%  | 253          | 703   | 260    | TRUE      |
| freshnears                                   | 23899                 | 95.88%  | 231          | 642   | 242.5  |           |
| pool.kytzu.betanet                           | 23115                 | 98.93%  | 228          | 633   | 240    |           |
| test1ch01.challenge01.betanet                | 23001                 | 97.83%  | 230          | 639   | 242.5  | TRUE      |
| pool.dokiacapital.betanet                    | 26618                 | 84.21%  | 265          | 736   | 270    |           |
| blockdaemon.stakehouse.betanet               | 22203                 | 98.88%  | 221          | 614   | 235    |           |
| buildlinks                                   | 22100                 | 98.36%  | 216          | 600   | 230    |           |
| applied                                      | 22300                 | 96.80%  | 222          | 617   | 235    |           |
| betapool                                     | 22493                 | 95.62%  | 219          | 608   | 232.5  |           |
| tribe-pool.stakehouse.betanet                | 22105                 | 97.27%  | 203          | 564   | 220    |           |
| mathwallet                                   | 23896                 | 89.65%  | 240          | 667   | 250    |           |
| driftforall                                  | 20400                 | 98.26%  | 225          | 625   | 237.5  |           |
| c2.inotel.betanet                            | 24297                 | 81.79%  | 228          | 633   | 240    |           |
| aquariuspool.stakehouse.betanet              | 20464                 | 97.05%  | 158          | 439   | 182.5  |           |
| denis                                        | 20100                 | 98.12%  | 197          | 547   | 215    |           |
| phenom100uptime.stakehouse.betanet           | 20104                 | 96.84%  | 195          | 542   | 212.5  |           |
| roma\_k.stakehouse.betanet                   | 19701                 | 98.73%  | 197          | 547   | 215    |           |
| akme.betanet                                 | 19402                 | 98.78%  | 165          | 458   | 187.5  |           |
| ou812                                        | 22186                 | 82.43%  | 228          | 633   | 240    |           |
| farm                                         | 21802                 | 79.37%  | 108          | 300   | 140    |           |
| bisontrails.stakehouse.betanet               | 19602                 | 86.00%  | 178          | 494   | 197.5  |           |
| stakingpool.youlaiwuqu.betanet               | 30574                 | 55.12%  | 203          | 564   | 220    |           |
| neozaru.stakehouse.betanet                   | 20197                 | 78.34%  | 213          | 592   | 227.5  |           |
| alma3.stakehouse.betanet                     | 16500                 | 95.47%  | 165          | 458   | 187.5  |           |
| lovegood.harrypotter                         | 15500                 | 97.16%  | 132          | 367   | 160    |           |
| d1.betanet                                   | 15500                 | 96.88%  | 152          | 422   | 177.5  |           |
| staking.dsrv.betanet                         | 14901                 | 97.97%  | 149          | 414   | 175    |           |
| zeropool                                     | 15100                 | 89.77%  | 149          | 414   | 175    |           |
| nodeasy.test                                 | 14702                 | 88.53%  | 147          | 408   | 172.5  |           |
| castle.stakehouse.betanet                    | 13002                 | 97.06%  | 130          | 361   | 157.5  |           |
| abc.alphabet1.betanet                        | 13600                 | 90.15%  | 135          | 375   | 162.5  |           |
| zebra                                        | 13101                 | 93.24%  | 131          | 364   | 160    |           |
| stakery                                      | 14177                 | 84.38%  | 163          | 453   | 185    |           |
| audit\_one                                   | 13623                 | 86.58%  | 135          | 375   | 162.5  |           |
| justice.immortal.betanet                     | 13101                 | 88.68%  | 132          | 367   | 160    |           |
| gunpool                                      | 11502                 | 97.25%  | 115          | 319   | 145    |           |
| anechoic.stakehouse.betanet                  | 12002                 | 92.37%  | 120          | 333   | 150    |           |
| mfsc.stakehouse.betanet                      | 14201                 | 77.85%  | 88           | 244   | 122.5  |           |
| bowen.test                                   | 10002                 | 95.97%  | 86           | 239   | 122.5  |           |
| global                                       | 10001                 | 94.37%  | 101          | 281   | 135    |           |
| pool.syncnode.betanet                        | 9210                  | 99.65%  | 93           | 258   | 127.5  |           |
| harrypotter                                  | 9501                  | 95.17%  | 77           | 214   | 115    |           |
| iosgvc.stakehouse.betanet                    | 8814                  | 98.79%  | 89           | 247   | 125    |           |
| pool.alexandruast.betanet                    | 8912                  | 97.05%  | 88           | 244   | 122.5  |           |
| validator\_buildlinks.betanet                | 8800                  | 96.66%  | 44           | 122   | 87.5   |           |
| cher5                                        | 8998                  | 91.69%  | 105          | 292   | 137.5  |           |
| stakefarm.stakehouse.betanet                 | 9101                  | 89.67%  | 62           | 172   | 102.5  |           |
| pool.zeropool.betanet                        | 8476                  | 94.11%  | 91           | 253   | 125    |           |
| maximus-power-pool.stakehouse.betanet        | 8477                  | 92.07%  | 107          | 297   | 140    |           |
| validator.arno\_nym.betanet                  | 33117                 | 23.44%  | 347          | 964   | 340    |           |
| dreamstaker.betanet                          | 8101                  | 95.10%  | 81           | 225   | 117.5  |           |
| stakingfund                                  | 8100                  | 88.83%  | 76           | 211   | 112.5  |           |
| moonlet.test                                 | 6900                  | 98.57%  | 69           | 192   | 107.5  |           |
| huglester.betanet                            | 7300                  | 91.38%  | 23           | 64    | 70     |           |
| takeittothemoon.fuckit.betanet               | 7001                  | 93.72%  | 70           | 194   | 107.5  |           |
| ujjjoshipooldeux                             | 7298                  | 89.38%  | 91           | 253   | 125    |           |
| unknown.test                                 | 7001                  | 92.72%  | 28           | 78    | 72.5   | TRUE      |
| solidone.stakehouse.betanet                  | 6601                  | 97.70%  | 66           | 183   | 105    |           |
| vegan.stakehouse.betanet                     | 7420                  | 85.61%  | 74           | 206   | 112.5  |           |
| stakewarspools.fuckit.betanet                | 7707                  | 78.59%  | 63           | 175   | 102.5  |           |
| fund.mamojkool.betanet                       | 6403                  | 94.25%  | 62           | 172   | 102.5  |           |
| moonlet                                      | 6400                  | 91.05%  | 64           | 178   | 102.5  |           |
| dmitrue.stakehouse.betanet                   | 6501                  | 84.13%  | 65           | 181   | 105    |           |
| isillien.betanet                             | 5500                  | 99.09%  | 50           | 139   | 92.5   |           |
| dokiacapital.betanet                         | 5400                  | 99.19%  | 54           | 150   | 95     |           |
| ivan.validatorivan5.betanet                  | 5100                  | 98.35%  | 51           | 142   | 92.5   |           |
| bi23.betanet                                 | 5224                  | 94.01%  | 52           | 144   | 92.5   |           |
| catcatcat.test                               | 5001                  | 97.80%  | 49           | 136   | 90     |           |
| aquariusluo.betanet                          | 10101                 | 47.50%  | 96           | 267   | 130    |           |
| goodstake2                                   | 4900                  | 90.14%  | 49           | 136   | 90     |           |
| pool66.stakehouse.betanet                    | 4000                  | 99.25%  | 40           | 111   | 82.5   | TRUE      |
| swimmingpool                                 | 4100                  | 94.56%  | 41           | 114   | 85     |           |
| nazar92.betanet                              | 3901                  | 93.36%  | 39           | 108   | 82.5   |           |
| c.mutedtommy.betanet                         | 3700                  | 98.27%  | 37           | 103   | 80     |           |
| kysenpool.stakehouse.betanet                 | 3700                  | 96.19%  | 37           | 103   | 80     |           |
| highstakes                                   | 4101                  | 85.39%  | 42           | 117   | 85     |           |
| zpool                                        | 3800                  | 87.21%  | 26           | 72    | 72.5   |           |
| rock1path                                    | 3201                  | 99.16%  | 17           | 47    | 65     |           |
| itokenpool.betanet                           | 3700                  | 85.30%  | 34           | 94    | 77.5   |           |
| gamah.betanet                                | 3200                  | 96.28%  | 32           | 89    | 77.5   |           |
| pool.hogwarts                                | 4397                  | 69.37%  | 42           | 117   | 85     |           |
| pool.chainflow.betanet                       | 3001                  | 99.37%  | 30           | 83    | 75     |           |
| c2.nearkat                                   | 3201                  | 93.10%  | 31           | 86    | 75     |           |
| bowen2.test                                  | 3477                  | 79.35%  | 35           | 97    | 80     |           |
| andrew\_builder.betanet                      | 3000                  | 89.50%  | 30           | 83    | 75     |           |
| stakeatnovy                                  | 3000                  | 85.83%  | 15           | 42    | 0      |           |
| inotel.betanet                               | 2500                  | 99.80%  | 25           | 69    | 70     |           |
| freshnear                                    | 3301                  | 75.43%  | 29           | 81    | 75     |           |
| ryabina\_io.betanet                          | 2400                  | 99.63%  | 24           | 67    | 70     |           |
| pool.certusone.betanet                       | 2600                  | 89.85%  | 26           | 72    | 72.5   |           |
| c1.erkan.betanet                             | 2301                  | 99.48%  | 22           | 61    | 67.5   | TRUE      |
| mutedtommy-staking-pool-2.stakehouse.betanet | 2500                  | 89.72%  | 25           | 69    | 70     |           |
| agrestus.betanet                             | 2500                  | 89.56%  | 25           | 69    | 70     |           |
| c2.nuc001.betanet                            | 2300                  | 97.30%  | 23           | 64    | 70     |           |
| sll.betanet                                  | 2201                  | 99.86%  | 21           | 58    | 67.5   |           |
| afi.betanet                                  | 2100                  | 99.86%  | 21           | 58    | 67.5   |           |
| zav.betanet                                  | 2100                  | 99.81%  | 21           | 58    | 67.5   |           |
| cypherhunter.betanet                         | 2201                  | 89.78%  | 22           | 61    | 67.5   |           |
| humanh.betanet                               | 2000                  | 94.65%  | 20           | 56    | 67.5   |           |
| s5.stakehouse.betanet                        | 2283                  | 80.29%  | 24           | 67    | 70     |           |
| denysof-pool.stakehouse.betanet              | 1801                  | 97.33%  | 18           | 50    | 65     |           |
| unicorn.betanet                              | 1800                  | 94.50%  | 14           | 39    | 0      |           |
| techno-t1.betanet                            | 1700                  | 100.00% | 17           | 47    | 65     | TRUE      |
| gaia.test                                    | 1700                  | 99.94%  | 17           | 47    | 65     |           |
| sebytza05\_val.betanet                       | 1700                  | 99.82%  | 17           | 47    | 65     |           |
| warger01.betanet                             | 1700                  | 99.82%  | 17           | 47    | 65     |           |
| fra.betanet                                  | 1700                  | 99.76%  | 17           | 47    | 65     |           |
| stakery.betanet                              | 1700                  | 99.47%  | 17           | 47    | 65     |           |
| alexg                                        | 1901                  | 87.38%  | 19           | 53    | 65     | TRUE      |
| a\_breeze                                    | 1800                  | 91.67%  | 18           | 50    | 65     |           |
| deadpool.stakehouse.betanet                  | 2200                  | 72.64%  | 22           | 61    | 67.5   |           |
| machina\_staking.stakehouse.betanet          | 1616                  | 98.02%  | 17           | 47    | 65     |           |
| swissqstakepoolsw                            | 1700                  | 91.71%  | 17           | 47    | 65     |           |
| stake\_pool.sharchov.betanet                 | 1898                  | 80.98%  | 21           | 58    | 67.5   |           |
| stake2earnfunds                              | 1700                  | 88.18%  | 17           | 47    | 65     |           |
| bisonshark.betanet                           | 1701                  | 86.54%  | 16           | 44    | 0      |           |
| zzbar                                        | 1400                  | 98.79%  | 14           | 39    | 0      |           |
| masternode24.betanet                         | 1600                  | 76.75%  | 15           | 42    | 0      |           |
| bazilik2020.test                             | 1100                  | 99.91%  | 11           | 31    | 0      |           |
| zee                                          | 1300                  | 70.77%  | 14           | 39    | 0      |           |
| novy.betanet                                 | 900                   | 99.56%  | 9            | 25    | 0      |           |
| lxyw.betanet                                 | 700                   | 100.00% | 7            | 19    | 0      |           |
| nearpool.aquariusluo.betanet                 | 3099                  | 19.81%  | 15           | 42    | 0      |           |
| wheat.stakehouse.betanet                     | 800                   | 75.50%  | 8            | 22    | 0      |           |
| auditone.betanet                             | 600                   | 100.00% | 6            | 17    | 0      |           |
| erkan.betanet                                | 500                   | 100.00% | 5            | 14    | 0      |           |
| mf                                           | 500                   | 99.80%  | 5            | 14    | 0      |           |
| cryptomilion.betanet                         | 700                   | 70.29%  | 7            | 19    | 0      |           |
| sharchov.betanet                             | 2500                  | 19.60%  | 29           | 81    | 75     |           |
| c4.nuc001.betanet                            | 800                   | 60.25%  | 8            | 22    | 0      |           |
| vipnamai.betanet                             | 400                   | 100.00% | 4            | 11    | 0      |           |
| bears.betanet                                | 400                   | 100.00% | 4            | 11    | 0      |           |
| andreyvelde.test                             | 400                   | 99.75%  | 4            | 11    | 0      |           |
| zero.zeropool.betanet                        | 400                   | 99.50%  | 4            | 11    | 0      |           |
| alexturetskiy.betanet                        | 400                   | 99.25%  | 4            | 11    | 0      |           |
| mutedtommy-staking-pool.stakehouse.betanet   | 500                   | 73.60%  | 5            | 14    | 0      |           |
| pool.zebra.betanet                           | 500                   | 59.20%  | 7            | 19    | 0      |           |
| account.sdsolo.betanet                       | 300                   | 82.00%  | 3            | 8     | 0      |           |
| weiser.betanet                               | 1199                  | 20.35%  | 12           | 33    | 0      |           |
| gunray.test                                  | 400                   | 50.00%  | 4            | 11    | 0      |           |
| beeram527-stakingpool                        | 200                   | 100.00% | 2            | 6     | 0      |           |
| exoplanet                                    | 200                   | 100.00% | 2            | 6     | 0      |           |
| auditone\_validator                          | 200                   | 93.50%  | 2            | 6     | 0      |           |
| aalex                                        | 1101                  | 12.53%  | 10           | 28    | 0      |           |
| s5.betanet                                   | 100                   | 100.00% | 1            | 3     | 0      |           |
| alexb                                        | 300                   | 31.67%  | 3            | 8     | 0      |           |
| ablue                                        | 400                   | 17.00%  | 4            | 11    | 0      |           |
| mike.betanet                                 | 401                   | 0.00%   | 6            | 17    | 0      |           |
| gamah.stakehouse.betanet                     | 601                   | 0.00%   | 6            | 17    | 0      |           |
| alexz01                                      | 700                   | 0.00%   | 7            | 19    | 0      |           |
| fredrikmalmqvist                             | 2900                  | 0.00%   | 24           | 67    | 70     |           |
| stakeing.arno\_nym.betanet                   | 3402                  | 0.00%   | 34           | 94    | 77.5   |           |
| omonla.betanet                               | 600                   | 0.00%   | 6            | 17    | 0      |           |
| staking\_pool.lizhongbo3.betanet             | 2496                  | 0.00%   | 19           | 53    | 65     |           |
| swiss-staking.stakehouse.betanet             | 800                   | 0.00%   | 8            | 22    | 0      |           |
| huobipool.stakehouse.betanet                 | 1300                  | 0.00%   | 15           | 42    | 0      |           |
| vipnamai                                     | 400                   | 0.00%   | 4            | 11    | 0      |           |
| cher3                                        | 400                   | 0.00%   | 4            | 11    | 0      |           |
| fredoombelarus.stakehouse.betanet            | 600                   | 0.00%   | 6            | 17    | 0      |           |
| tornado.stakehouse.betanet                   | 600                   | 0.00%   | 6            | 17    | 0      |           |
| bur.vwed.betanet                             | 400                   | 0.00%   | 4            | 11    | 0      |           |
| baidu.weiser.betanet                         | 400                   | 0.00%   | 4            | 11    | 0      |           |
| dsrvbeta.stakehouse.betanet                  | 1000                  | 0.00%   | 10           | 28    | 0      |           |
| ryabina-validator                            | 400                   | 0.00%   | 4            | 11    | 0      |           |
| cant-touch-this.stakehouse.betanet           | 200                   | 0.00%   | 2            | 6     | 0      |           |
| pool.huglester.betanet                       | 1000                  | 0.00%   | 5            | 14    | 0      |           |
| stake.afi.betanet                            | 200                   | 0.00%   | 2            | 6     | 0      |           |
| genesis.stakehouse.betanet                   | 600                   | 0.00%   | 6            | 17    | 0      |           |
| bibiwang.betanet                             | 200                   | 0.00%   | 2            | 6     | 0      |           |
| avadon2.stakehouse.betanet                   | 200                   | 0.00%   | 2            | 6     | 0      |           |
| swag1.stakehouse.betanet                     | 900                   | 0.00%   | 9            | 25    | 0      |           |
| andrew\_builder                              | 600                   | 0.00%   | 4            | 11    | 0      |           |
| cher4                                        | 400                   | 0.00%   | 4            | 11    | 0      |           |
| sconestaking.sconeman.betanet                | 201                   | 0.00%   | 2            | 6     | 0      |           |
| smartstake.stakehouse.betanet                | 200                   | 0.00%   | 2            | 6     | 0      |           |
| frapool                                      | 200                   | 0.00%   | 2            | 6     | 0      |           |
| slsub                                        | 200                   | 0.00%   | 2            | 6     | 0      |           |
| lotanna.stakehouse.betanet                   | 200                   | 0.00%   | 2            | 6     | 0      |           |
| bitcat                                       | 200                   | 0.00%   | 2            | 6     | 0      |           |
| join.zav.betanet                             | 700                   | 0.00%   | 7            | 19    | 0      |           |
| blockpower.betanet                           | 200                   | 0.00%   | 2            | 6     | 0      |           |
| 3q\_val                                      | 200                   | 0.00%   | 2            | 6     | 0      |           |
| mutedtommy.stakehouse.betanet                | 100                   | 0.00%   | 1            | 3     | 0      |           |
| blockpower.stakehouse.betanet                | 200                   | 0.00%   | 2            | 6     | 0      |           |
| c1.bibiwang.betanet                          | 200                   | 0.00%   | 2            | 6     | 0      |           |
| stakefish.betanet                            | 200                   | 0.00%   | 4            | 11    | 0      |			 |

### BetaNet Tokens calculation criteria
We used the same [Validators Scoreboard](https://github.com/frol/near-validators-scoreboard/tree/scoreboard) of the Stake Wars, processing the epoch files with [this script](https://gist.github.com/jimmy3dita/e60b974701ac64cec51632fc57d3e5e8). The last epoch processed is `18608936`, which ended on October 30th 2020 at 9:55 AM Pacific Time.

The output of the script is the json available [here](validators_counted.json), the orginal data comes from [this commit](https://github.com/frol/near-validators-scoreboard/tree/ba7fc50432d5ac611c92cfb79933f527a3f332ef). 

Once the number of epochs for each validator is known, we applied the following calculations:
- number of epochs `*` number of blocks per epoch `*` block speed (1 second per block) `/` 3600 `=` hours the node was operating
- hours `*` $0.12 (which is the estimated hourly cost of a $80/month VPS) `*` 2.5 `+` 50 `=` the total NEAR tokens allocated

All validators that run their node for 17 epochs or more (>=47 hours) received a base tokens allocation of `50 NEAR`, plus the hourly VPS costs to run the node.

**HEADS UP:** if the `SEND FORM` column next to your staking pool is TRUE, please send your contact information again using the [Validators Contact Form](https://nearprotocol1001.typeform.com/to/x4Bval), as we weren't able to associate any email with the staking pool ID. **It's really appreciated if you specify the same email previously used to receive tokens, to save time on the KYC**

## Stake Wars Final Leaderboard - TestNet Nodes
Updated on October 30, 10:00 PM PST - [block 22232536](https://explorer.testnet.near.org/blocks/22232536) 

This is the final Stake Wars Leaderboard for TestNet:
- `ACCOUNT_ID` represents the name of the staking pool
- `NUM_EXPECTED_BLOCKS` the number of expected blocks, given the stake
- `ONLINE` the number of generated blocks, out of the expected ones
- `TOTAL EPOCHS` is the number of epochs this validator was online
- `HOURS` is an estimation on how many hours the epoch was online, given 43,200 blocks per epoch at 1 second each
- `TOKENS` are the tokens that will be sent to these validators for their participation in the Stake Wars (see below for calculation criteria)
- `SEND FORM` if TRUE, please send your contact information again using the [Validators Contact Form](https://nearprotocol1001.typeform.com/to/x4Bval), as we weren't able to associate any email with the staking pool ID. **It's really appreciated if you specify the same email previously used to receive tokens, to save time on the KYC**

Note: the amounts below don't include other token allocations, such as Stake Wars Challenge docs.

| ACCOUNT\_ID                      | NUM\_EXPECTED\_BLOCKS | ONLINE | TOTAL EPOCHS | HOURS | TOKENS | SEND FORM |
| -------------------------------- | --------------------- | ------ | ------------ | ----- | ------ | --------- |
| node1                            | 1395768               | 99.86% | 193          | 2316  | 1126.4 |           |
| node2                            | 1222539               | 99.09% | 184          | 2208  | 1083.2 |           |
| node0                            | 1203745               | 98.41% | 167          | 2004  | 1001.6 |           |
| node3                            | 786675                | 99.42% | 151          | 1812  | 924.8  |           |
| bisontrails.pool.f863973.m0      | 192453                | 99.79% | 177          | 2124  | 1049.6 |           |
| fresh\_lockup.pool.f863973.m0    | 144718                | 99.10% | 182          | 2184  | 1073.6 |           |
| orangeclub.pool.f863973.m0       | 135430                | 96.77% | 176          | 2112  | 1044.8 |           |
| staked.pool.6fb1358              | 128517                | 98.76% | 177          | 2124  | 1049.6 |           |
| lunanova.pool.f863973.m0         | 127223                | 99.12% | 187          | 2244  | 1097.6 |           |
| inotel.pool.f863973.m0           | 125496                | 99.54% | 186          | 2232  | 1092.8 |           |
| 01node.pool.f863973.m0           | 119664                | 99.41% | 185          | 2220  | 1088   |           |
| pool\_easy2stake.pool.f863973.m0 | 118152                | 99.51% | 183          | 2196  | 1078.4 |           |
| jazza.pool.f863973.m0            | 116855                | 98.56% | 184          | 2208  | 1083.2 |           |
| valeraverim.pool.f863973.m0      | 112537                | 99.04% | 140          | 1680  | 872    |           |
| certusone.pool.f863973.m0        | 113399                | 98.01% | 170          | 2040  | 1016   |           |
| sl1sub.pool.f863973.m0           | 109511                | 97.82% | 185          | 2220  | 1088   |           |
| alexandruast.pool.f863973.m0     | 106055                | 99.13% | 185          | 2220  | 1088   |           |
| thepassivetrust.pool.f863973.m0  | 105406                | 97.19% | 175          | 2100  | 1040   |           |
| blazenet.pool.f863973.m0         | 103247                | 99.12% | 187          | 2244  | 1097.6 |           |
| staked.pool.f863973.m0           | 103463                | 97.83% | 177          | 2124  | 1049.6 |           |
| northernlights.stakingpool       | 99792                 | 99.90% | 146          | 1752  | 900.8  |           |
| moonlet.pool.f863973.m0          | 100871                | 98.48% | 173          | 2076  | 1030.4 |           |
| dokia.pool.f863973.m0            | 100438                | 95.89% | 117          | 1404  | 761.6  |           |
| bitcat.pool.f863973.m0           | 94175                 | 97.91% | 169          | 2028  | 1011.2 |           |
| aquarius.pool.f863973.m0         | 95471                 | 95.27% | 175          | 2100  | 1040   |           |
| bazilik.pool.f863973.m0          | 93959                 | 94.42% | 162          | 1944  | 977.6  |           |
| cloudpost.pool.f863973.m0        | 88346                 | 99.87% | 144          | 1728  | 891.2  |           |
| top.pool.f863973.m0              | 93744                 | 90.76% | 171          | 2052  | 1020.8 |           |
| zpool.pool.f863973.m0            | 85967                 | 95.31% | 163          | 1956  | 982.4  |           |
| stakin.pool.f863973.m0           | 81647                 | 97.61% | 165          | 1980  | 992    |           |
| masternode24.pool.f863973.m0     | 82511                 | 95.60% | 145          | 1740  | 896    |           |
| joe1.pool.f863973.m0             | 78408                 | 98.14% | 144          | 1728  | 891.2  |           |
| kytzu.pool.f863973.m0            | 76032                 | 99.84% | 154          | 1848  | 939.2  |           |
| staking-power.pool.f863973.m0    | 72576                 | 98.26% | 148          | 1776  | 910.4  |           |
| lowfeevalidation.pool.f863973.m0 | 68472                 | 96.39% | 139          | 1668  | 867.2  |           |
| zainy.pool.f863973.m0            | 66527                 | 89.58% | 148          | 1776  | 910.4  |           |
| kronos.pool.f863973.m0           | 50544                 | 93.29% | 111          | 1332  | 732.8  |           |
| dsrvlabs.pool.f863973.m0         | 44495                 | 98.76% | 102          | 1224  | 689.6  |           |
| chorus-one.pool.f863973.m0       | 44064                 | 96.89% | 98           | 1176  | 670.4  |           |
| nodeasy.pool.f863973.m0          | 48167                 | 88.12% | 109          | 1308  | 723.2  |           |
| pathrock.pool.f863973.m0         | 43200                 | 97.59% | 100          | 1200  | 680    |           |
| syncnode.pool.f863973.m0         | 41038                 | 97.47% | 95           | 1140  | 656    |           |
| iosg.pool.f863973.m0             | 21168                 | 86.96% | 49           | 588   | 435.2  |           |
| sparkpool.pool.f863973.m0        | 19872                 | 86.89% | 46           | 552   | 420.8  |           |
| figment.pool.f863973.m0          | 16847                 | 92.00% | 39           | 468   | 387.2  |           |
| node.pool.6fb1358                | 16416                 | 93.46% | 19           | 228   | 291.2  |           |
| dimaro.pool.f863973.m0           | 10584                 | 81.90% | 49           | 588   | 435.2  |           |
| mmm.pool.f863973.m0              | 7560                  | 82.54% | 35           | 420   | 368    |           |
| canary0.near                     | 5616                  | 87.43% | 13           | 156   | 262.4  |           |
| audit\_one.pool.f863973.m0       | 4320                  | 88.43% | 20           | 240   | 296    |           |
| cryptium.pool.f863973.m0         | 2592                  | 77.62% | 6            | 72    | 228.8  |           |
| hashquark01.pool.f863973.m0      | 2592                  | 75.81% | 6            | 72    | 228.8  |           |
| p2p.pool.f863973.m0              | 1296                  | 99.77% | 6            | 72    | 228.8  |           |
| buildlinks3.pool.f863973.m0      | 864                   | 99.65% | 2            | 24    | 209.6  |           |
| tribe-pool.pool.f863973.m0       | 432                   | 90.05% | 2            | 24    | 209.6  |           |
| okexpool.pool.f863973.m0         | 864                   | 29.75% | 2            | 24    | 209.6  |           |
| moonlet.pool.6fb1358             | 2592                  | 0.00%  | 6            | 72    | 228.8  |           |
| masternode24.pool.6fb1358        | 864                   | 0.00%  | 2            | 24    | 209.6  |           |
| shudo.pool.f863973.m0            | 864                   | 0.00%  | 2            | 24    | 209.6  |           |
| stakin-pool.pool.f863973.m0      | 864                   | 0.00%  | 2            | 24    | 209.6  |			|

### TestNet Tokens calculation criteria
We used the same [Validators Scoreboard](https://github.com/frol/near-validators-scoreboard/) of the Stake Wars, processing the epoch files with [this script](https://gist.github.com/jimmy3dita/e60b974701ac64cec51632fc57d3e5e8). The last epoch processed is `22232536`, which ended on October 30th 2020 at 10:00 PM Pacific Time.

The output of the script is the json available [here](validators_counted_testnet.json), the orignal data comes from [this commit](https://github.com/frol/near-validators-scoreboard/tree/6f36e2b9d98274a9b47208ec36c55d030d8ba65c). 

Once the number of epochs for each validator is known, we applied the following calculations:
- number of epochs `*` number of blocks per epoch `*` block speed (1 second per block) `/` 3600 `=` hours the node was operating
- hours `*` $0.16 (which is the estimated hourly cost of a $120/month VPS) `*` 2.5 `+` 200 `=` the total NEAR tokens allocated

All validators received a base tokens allocation of `200 NEAR`, plus the hourly VPS costs to run the node.

## Stake Wars 1.0 Leaderboard

**HEADS UP:** if the `send form` next to your Github ID is `TRUE`, we don't have the email to send you the instructions to claim your tokens. Please send your contact information again using the [Validators Contact Form](https://nearprotocol1001.typeform.com/to/x4Bval), as we weren't able to associate any email with the staking pool ID. **It's really appreciated if you specify the same email previously used to receive tokens, to save time on the KYC**

| name             | points      | tokens | send form |
|------------------|-------------| ------ | --------- |
| krisbolt         |  3900       | 5850 | |
| marco-sundsk     |  3200       | 4800 | |
| Eorituz          |  2800       | 4200 | |
| mbucci           |  1500       | 2250 | |
| hoekevin         |  900        | 1350 | TRUE |
| sweetpotatoz     |  900        | 1350 | |
| etherscam        |  600        | 900 | |
| k9thebeast       |  300        | 450 | TRUE |
| StakerSpace      |  200        | 300 | |
| bgapinski-bt     |  200        | 300 | |
| andreisid        |  200        | 300 | |
| swswsw           |  200        | 300 | TRUE |
| caesarchad       |  200        | 300 | TRUE |
| marshall-d-teach |  200        | 300 | |
| bentiancai629    |  100        | 150 | TRUE |
| victorxu0411     |  100        | 150 | |
| wjdfx            |  100        | 150 | |
| zavodil          |  100        | 150 | |
| xz-cn            |  100        | 150 | |
| novy4            |  100        | 150 | |
| winslyin         |  100        | 150 | |
| pranaymohan      |  100        | 150 | |
| stakehost        |  100        | 150 | TRUE |
| zhanglianghui    |  100        | 150 | |
| ferat8           |  100        | 150 | TRUE |
| stakery          |  100        | 150 | |
| joesixpack       |  100        | 150 | |

'''
'''--- README.md ---
# Stake Wars Episode II: Return of the Validators
September 25rd 2020 update: contribution opportunities will be over next week.

Welcome to NEAR Stake Wars Episode II, Return of the Validators!

This page will guide you through three main aspects of this initiative:
1. In a Few Words
2. What is NEAR Stake Wars
3. Your toolbox
4. What you have to do

## :information_desk_person: In a Few Words

Stake Wars is the program that accelerates your path to become a validator on NEAR Protocol. It is structured in technical challenges of increasing difficulty, giving you the opportunity of "learning by doing". Validators that will complete all the challenges will prove to be ready to join [MainNet Restricted](https://near.org/blog/near-mainnet-genesis/) and will be recognized as early supporters of NEAR Protocol.

### Quickstart
If you want to get your feet wet, and see if Stake Wars is for you, try this quickstart guide:
- Create a **BetaNet** account using our hosted wallet [here](https://wallet.betanet.near.org).
- Spin up your Ubuntu/Debian VPS and run [nearup](https://github.com/near/nearup).
- Deploy your staking pool using the [Staking Pool Factory](https://near-examples.github.io/staking-pool-factory/)
- Submit up [this form](https://nearprotocol1001.typeform.com/to/TvvOMf) to enroll in the Stake Wars and receive your BetaNet tokens.

Stake Wars received an exceptional interest by the community of validators (500+ applications, 300+ PRs). We are processing all of them, sending 75,000 BetaNet tokens as promised, while making sure the network runs with no issues. As explained in the [docs](https://docs.near.org/docs/validator/economics), there are 100 seats per shard, so BetaNet is running at capacity with a cost per seat that could be above the 75.000 tokens we normally provide.

You can receive more BetaNet tokens by completing the available challenges and submitting contributions on the [NEAR community portal](https://portal.near.org/topic/validator).

_Here is the list of the available challenges:_
* [001](challenges/challenge001.md): Create your BetaNet wallet, deploy your node, and correctly configure your staking pool.
* [002](challenges/challenge002.md): Enroll your staking pool, receive your delegation, and maintain your validator status!
* [003](challenges/challenge003.md): Monitor your node health, and send an automated email in case of issues.
* [004](challenges/challenge004.md): Create a warchest of staked tokens, and dynamically maintain no more than one validator seat.
* [005](challenges/challenge005.md): Automatically deploy nearcore using a CI/CD pipeline.

After you successfully complete the challenges, and you maintain a high uptime of your node, you will be invited by NEAR team to run your node on TestNet, and become a candidate run MainNet Restricted.

## :rocket: What is NEAR Stake Wars

Stake Wars is NEAR's incentivized testnet for professional validators.

NEAR’s [MainNet](https://explorer.near.org/) recently launched into its first phase, called “POA” ([see full roadmap](https://near.org/blog/mainnet-roadmap/)). This means that a small handful of validating nodes are currently being run by the core team. In order to progress to the next phase, “MainNet: Restricted”, the operation of the network will be handed off to a large group of node operators called validators. 

The goal of Stake Wars: Episode II is to onboard those validators, test the stability of their system, and begin introducing some of the unique aspects of NEAR’s delegation in preparation for the next phase of MainNet itself.

If you want to know more, read the [Stake Wars Episode II blog post](https://near.org/blog/stake-wars-episode-ii/).

**Blogpost TL;DR:**

Stake Wars Ep.II introduces NEAR's contract-based delegation, offering validators the opportunity to take part in the [Open Finance](https://near.org/blog/the-evolution-of-the-open-web/) ecosystem. There is a _staking pool_ reference contract on [Github](https://github.com/near/core-contracts), ready for experimenting with these principles. Deploying the staking pool and participating in the Stake Wars will give access to NEAR's MainNet Restricted. Rewards will include 10,000 NEAR tokens/month for every validator on MainNet Restricted, plus 1 Million NEAR tokens available for contributions and community challenges. To become validators on MainNet Restricted, participants will have to accomplish technical challenges and successfully run nodes on BetaNet and TestNet. Judgment criteria will be quantitative, such as number of blocks generated and uptime; and qualitative, such as reactivity to network updates and community participation.
A Validator Advisory Board, with a selected group of professional validators, will become over time the voice of validators in the technical governance of the protocol

## :wrench: Your Toolbox

NEAR Protocol provides you multiple tools such as Github repositories,  applications, documentation and web-based resources. As a Stake Wars participant you will need all of them.

### Github Repositories
NEAR is using two main accounts: [github.com/nearprotocol](https://github.com/nearprotocol) and [github.com/near](https://github.com/near).
To join Stake Wars you will use:
- [nearup](https://github.com/near/nearup), public scripts to launch NEAR Protocol devnet, betanet and testnet nodes
- [nearcore](https://github.com/nearprotocol/nearcore), the reference client for NEAR Protocol
- [near-cli](https://github.com/near/near-cli), the general purpose command line tools for interacting with NEAR Protocol
- [core-contracts](https://github.com/near/core-contracts), where you can find the reference staking pool smart contract

### NEAR Documentation
Most of the technical documentation is available at [docs.near.org](https://docs.near.org). An [entire section](https://docs.near.org/docs/validator/staking-overview) is dedicated to validators.

### NEAR Online Resources
The website provides a block explorer and a web wallet:
- BetaNet web wallet: [wallet.betanet.near.org](https://wallet.betanet.near.org)
- BetaNet explorer: [explorer.betanet.near.org](https://explorer.betanet.near.org/)

You will need a BetaNet wallet to deploy your staking pool and receive your first delegation.

You can also use the JSON RPC interface at the address [https://rpc.betanet.near.org/status](https://rpc.betanet.near.org/status) to quickly retrieve information about network, blocks, transactions and wallets. There's also a [documentation section](https://docs.near.org/docs/interaction/rpc) with an overview of the available RPC endpoints.

As a final note, https://status.nearprotocol.com/ will give you feedback on the status of the network, and the most recent incidents.

### NEAR Community channels
Connect to other validators using the dedicated channel on [Discord](https://near.ai/validator-chat). You might join also [NEAR Validators](https://t.me/near_validators) on Telegram.

**Important:** NEAR core team will use the prefix `[CODE_RED]` if a particular message requires technical attention by validators. Some examples are new releases, hard forks and critical issues.

Overall, if you want to successfully participate in the Stake Wars, you'll have to:
- Keep an eye to Validator Announcements on Discord (there's [a dedicated channel](https://discord.gg/xsrHaCb)). It will be used to inform you about technical releases and hard forks, community challenges, contribution opportunities and other initiatives that will be valuable for you.
- Give and receive technical help here on Github, in the [issues section](https://github.com/nearprotocol/stakewars/issues).

### Other files is in this repo
* [GUIDELINES.md](GUIDELINES.md): some basic rules to follow, and what to do when you are invited to join TestNet
* [updates.md](updates.md): good to catch up if you missed the last few weeks
* [VALIDATORS.md](VALIDATORS.md): who else is participating in the Stake Wars
* [LEADERBOARD.md](LEADERBOARD.md): how validators are doing in terms of uptime
* [troubleshooting.md](troubleshooting.md): a colletion of the most common issues
* [staking_cheatsheet.md](staking_cheatsheet.md): a list of the most common commands to manage the staking pool
* [scenarios.md](scenarios.md): some high-level examples of what you will have to do

...and the [challenges](challenges/) folder...

## :trophy: What You Have to Do

As you know, validators are responsible to generate new blocks to update the state of the network. NEAR Protocol uses proof-of-stake to secure its infrastruture, so you have to _stake_ tokens to become a validator. The contract-based delegation, as explained in the Stake Wars Ep.II [blog post](https://near.org/blog/stake-wars-episode-ii/), will provide you stake from users who don't want to run a node but are interested to secure the network - and earn rewards with you.

If your mission is to become a validator on MainNet, you have two ways to succeed:
1. Wait until NEAR enters Phase Two of MainNet (see the roadmap [here](https://near.org/blog/mainnet-roadmap/))
2. Complete the Stake Wars challenges, be invited to join TestNet, and prove that you are ready for the Phase One, called MainNet Restricted

Validators joining MainNet Restricted will receive help from NEAR foundation in the form of a grant in NEAR tokens, and tokens delegation to help them retain their validator seat while they onboard their customers.
The plan is to onboard \~50 validators in the Phase One, so if you are interested you simply have to successfully complete the challenges below!

### List of Validator Challenges
We will publish new challenges for validators on a regular basis. Every challenge will have a progressive number, with an increasing level of difficulty. The acceptance criteria will provide high-level indications, and some of these challenges may list previous challenges as a requirement.

List of challenges:

1. May 25th 2020, [Challenge 001](challenges/challenge001.md)
  Deploy your node and your staking pool
2. May 25th 2020, [Challenge 002](challenges/challenge002.md)
  Become a validator and manage your seat
3. June 8th 2020, [Challenge 003](challenges/challenge003.md)
  Monitor your node and setup automated alerts
4. June 22nd 2020, [Challenge 004](challenges/challenge004.md)
  Dynamically adjust your stake
5. July 17 2020, [Challenge 005](challenges/challenge005.md)
  Automatically deploy nearcore using a CI/CD pipeline.

'''
'''--- VALIDATORS.md ---

# Stake Wars Ep.II Validators List

Hello! This is the list of professional validators that joined Stake Wars Episode II
Fork this repo and submit you PR adding or updating your validator. We will merge all the changes to `master` at least once per week.
The list etiquette is first come, first serve: please append your validator at the **end** of the table, in the section reflecting your staking pool status.
**NVAB** means NEAR Validator Advisory Board Member, they are added in alphabetic order on top of the list. Read more [here](https://near.org/blog/stake-wars-episode-ii/)

Validators running the [staking-pool contract](https://github.com/near/core-contracts) can update their entry below and append themselves to the top section of the list (which is reserved for staking pools). Please note that starting May 17th tokens will only be _delegated_ to staking pools, and not anymore transferred.
We encourage to try delegation yourself, staking some tokens to other validators.

## TestNet Validators
_in alphabetic order by staking pool name. Thank you [Figment Network](https://hubble.figment.network/near/chains/testnet) for Hubble explorer._

| Logo  | Validator | Blurb                                              | Account ID | Country | 
| :---: | :-------: | -------------------------------------------------- | ---------- | :-----: |
| <img src="https://01node.com/wp-content/themes/01Node/assets/img/01node.svg" width="40"> | [01node](https://01node.com/) | 01node Staking Services | [@01node.pool.6fb1358](https://hubble.figment.network/near/chains/testnet/validators/01node.pool.6fb1358) | RO🇷🇴 |
| <img src="https://s3.amazonaws.com/keybase_processed_uploads/f1c3ac0c88fd06cc78907e71bceb6405_360_360.jpg" width="40"> | [alexandruast](https://stake.systems) | secure and highly available infrastructure | [@alexandruast.pool.f863973.m0](https://explorer.testnet.near.org/accounts/alexandruast.pool.f863973.m0) | RO🇷🇴 |
| <img src="https://shop.io.mi-img.com/app/shop/img?id=shop_cb3982acbf9f4c974b9a855b6416aece.jpeg" width="40"> | Aquarius | Node operator to make rewards from China | [@aquarius.pool.f863973.m0](https://explorer.testnet.near.org/accounts/aquarius.pool.f863973.m0)| CN |
| <img src="https://i.ibb.co/k3bmP1g/BAZILIK.jpg" width="40"> | [Bazilik] |  TestNet validator - Stake with me! | [@baziliksub.pool.6fb1358](https://explorer.testnet.near.org/accounts/baziliksub.pool.6fb1358) | RU |
| <img src="https://bisontrails.co/images/assets/brand-symbol.svg" width="40"> | Bison Trails | The premiere platform operating security-first robust and redundant infrastructure across 20+ protocols. Proud NVAB member. | [@bisontrails.stakingpool](https://hubble.figment.network/near/chains/testnet/validators/bisontrails.stakingpool) | US |
| <img src="https://www.bitcat365.com/wp-content/uploads/cn/2019/09/05-12533755.png" width="40"> | Bit Cat | A maverick cat. Secure and stable validator service from China team. | [@bitcat.pool.f863973.m0](https://explorer.testnet.near.org/accounts/bitcat.pool.f863973.m0) | CN |
| <img src="https://blazenet.io/wp-content/uploads/2020/05/cropped-blaze-favicon-9.png" width="40"> | Blaze | Staking up a Blaze of Rewards! | [@blazenet](https://explorer.testnet.near.org/accounts/blazenet_voting.pool.6fb1358) | US |
| <img src="http://near.buildlinks.org/buildlinks-logo.png" width="40"> | [buildlinks](http://near.buildlinks.org) | Buildlinks, build on-chain governance. NVAB member. | [@buildlinks_pool.stakingpool](https://hubble.figment.network/near/chains/testnet/validators/buildlinks_pool.stakingpool) | CN |
| | Castle | Network Verification Services | @castle.testnet | UK
| <img src="https://i.imgur.com/ZwHpy1V.jpg" width="40"> | Cloudpost Pool | Let's build a better future together with NEAR protocol | [@cloudpost.pool.f863973.m0](https://explorer.testnet.near.org/accounts/cloudpost.pool.f863973.m0) | RU |
| <img src="https://user-images.githubusercontent.com/11320251/86902478-4df7a680-c10e-11ea-9452-4f11716fb803.jpg" width="40"> | [Cryptium Labs](https://cryptium.ch) | Secure and available validation from the Swiss Alps! Proud **NVAB** member! | [@cryptium.stakingpool](https://hubble.figment.network/near/chains/testnet/validators/cryptium.stakingpool) | 🇨🇭CH🇨🇭 |
| ![certus logo](media/certus_logo.svg) | Certus One | Certus One is the premier operator for Web3 infrastructure. We have a strong focus on sustainability, cyber security and technical excellence. | [@certusone.stakingpool](https://hubble.figment.network/near/chains/testnet/validators/certusone.stakingpool) | DE |
| <img src="https://user-images.githubusercontent.com/21022937/86912791-91770280-c158-11ea-8dfc-b5c95f2ecafd.png" width="40"> | [dsrv labs](http://www.dsrvlabs.com) | DSRV is a trusted Proof of Stake validator and infrastructure provider that serves innovative blockchain networks | [@staking.dsrvlabs.testnet](https://hubble.figment.network/near/chains/testnet/validators/staking.dsrvlabs.testnet) | KR |
| | Kronos | Team of 7 crypto developers | [@kronos.testnet]([https://explorer.testnet.near.org/accounts/kronos.pool.6fb1358](https://explorer.testnet.near.org/accounts/kronos.pool.6fb1358)) | US |
| <img src="https://raw.githubusercontent.com/Pete-LunaNova/LunaNova/master/LunaNova-logo-Square-blackbackground-discordv3.png" width="40"> | [LunaNova](https://lunanova.tech) | Robust, vigilant, performant. Experienced organization using closely-monitored, enterprise-grade hardware in secure, high-availability UK datacentres. | [@lunanova.pool.6fb1358](https://hubble.figment.network/near/chains/testnet/validators/lunanova.pool.6fb1358) | UK |
| <img src="https://masternode24.de/wp-content/uploads/2020/05/LOGO-Github.jpg" width="40"> | [Masternode24](https://masternode24.de) | Staking Provider from Germany | [@masternode24.pool.6fb1358](https://explorer.testnet.near.org/accounts/masternode24.pool.6fb1358) | DE |
| <img src="https://camo.githubusercontent.com/e01879d323491dd09b33fd93792f130b01f71b21/68747470733a2f2f692e696d6775722e636f6d2f6d38556b4d7a412e706e67" width="40"> | [Mitera.net](https://mitera.net) | Mitera runs on bare metal in a SSAE16 SOC2 certified Tier 3 datacenter with geographically distributed private sentry nodes, hardware protected keys, with 24/7 monitoring, alerting, and analytics. | [@freshnears.stakingpool](https://hubble.figment.network/near/chains/testnet/validators/freshnears.stakingpool) | NL |
|| NEAR THE BEST | easy money | @mmm.pool.f863973.m0 | RU |
| <img src="http://inotel.ro/wp-content/uploads/2020/04/white_logo_dark_background-1-scaled.jpg" width="40"> | Inotel | We do staking for a living | [@inotel.pool.6fb1358](https://hubble.figment.network/near/chains/testnet/validators/inotel.pool.6fb1358) | RO🇷🇴 |
| <img src="https://github.githubassets.com/images/icons/emoji/unicode/1f511.png" width="40"> | Jazza | Decentralized validator | [@jazza.pool.6fb1358](https://hubble.figment.network/near/chains/testnet/validators/jazza.pool.6fb1358) | RU |
| <img src="https://miro.medium.com/max/5000/1*8GDFUEsd0z8SidRfg9IljA.png" width="40"> | joejoen | living inside the POS | [@joe1.pool.f863973.m0](https://explorer.testnet.near.org/accounts/joe1.pool.f863973.m0) | |
| <img src="https://kytzu.com/assets/images/logo%202.png"> | [kytzu](https://kytzu.com) | kytzu validator services | [@kytzu.pool.f863973.m0](https://explorer.testnet.near.org/accounts/kytzu.pool.f863973.m0) | RO |
| <img src="https://avatars1.githubusercontent.com/u/30159243?s=400&u=7b7f78e29066712728abf7672af9d6802f05a97a&v=4" width="40"> | RussellGalt | Optimistic validator | [@optimistic.pool.f863973.m0](https://explorer.testnet.near.org/accounts/optimistic.pool.f863973.m0) | RU |
| <img src="https://avatars1.githubusercontent.com/u/35801878?s=460&u=8681d485115d5da9341a1bf33447fe93a5f7d534&v=4" width="40"> | Orangeclub | Orange. Staking. Nothing more. | [@orangeclub.pool.f863973.m0](https://explorer.testnet.near.org/accounts/orangeclub.pool.f863973.m0) | RU |
| | pathrock | stake with us | [@rockpath.testnet](https://wallet.testnet.near.org/profile/rockpath.testnet)| 10% | GER | [@pool.f863973.m0](https://explorer.testnet.near.org/accounts/pool.f863973.m0) | yes |
| <img src="https://dokia.capital/img/loader.svg" width="40"> | [DokiaCapital](https://staking.dokia.cloud) | Stake with a pro! | [@pool_dokiacapital.stakingpool](https://hubble.figment.network/near/chains/testnet/validators/pool_dokiacapital.stakingpool) | RO🇷🇴 |
| <img src="https://sparkpool-public-files.oss-cn-hangzhou.aliyuncs.com/sparkpool.png" width="40"> | [Sparkpool](https://www.sparkpool.com) | The keeper of blockchain networks. | [@sparkpool.testnet](https://wallet.testnet.near.org/sparkpool.testnet) | CN |
| <img src="https://user-images.githubusercontent.com/3753783/80396381-8c592580-8882-11ea-81b9-8ec06e242f93.png" width="40"> | [Staked.us](https://staked.us/) | Staked operates highly reliable and secure staking infrastructure for 20+ PoS protocols on behalf of the leading crypto asset investors in the industry. NVAB member.| [@staked.pool.6fb1358](https://hubble.figment.network/near/chains/testnet/validators/staked.pool.6fb1358); [@staked_vote.pool.6fb1358](https://hubble.figment.network/near/chains/testnet/validators/staked_vote.pool.6fb1358) | US |
| <img src="https://raw.githubusercontent.com/hashquark-research/resource/master/HashQuark_logo_icon_blue.png" width="40"> | [HashQuark](https://www.hashquark.io/#/) | Staking Made Easier. NVAB member. | [@stakepool.hashquark.testnet](https://hubble.figment.network/near/chains/testnet/validators/stakepool.hashquark.testnet) | CN |
| <img src="https://stakin.com/assets/icon/logo256.png" width="40"> | [Stakin](https://www.stakin.com/) | Your Trusted Crypto Rewards | [@stakin.testnet](https://hubble.figment.network/near/chains/testnet/validators/stakin.testnet)| UK |
| <img src="https://p.pstatp.com/origin/138040000417b361a135c" width="40"> | [Staking-Power](http://www.staking-power.tech) | Chinese Professional Node Operator | [@staking-power.pool.f863973.m0](https://explorer.testnet.near.org/accounts/staking-power.pool.f863973.m0)| CN |
| <img src="https://swiss-staking.ch/img/logo.png" width="80"> | Swiss Staking | Validating since 2018. With over 700 days of staking experience we offer a highly secure and stable validator. | [@swiss_staking.pool.f863973.m0](https://explorer.testnet.near.org/accounts/swiss_staking.pool.f863973.m0) | CH |
|  | [syncnode](https://wallet.syncnode.ro) | syncnode staking services | [@syncnode.pool.f863973.m0](https://hubble.figment.network/near/chains/testnet/validators/syncnode.pool.f863973.m0) | RO🇷🇴 |
|<a href="https://imgbb.com/"><img src="https://i.ibb.co/FqtwSmg/mstile-150x150.png" alt="mstile-150x150" border="0" width="100" /></a> | [ThePassiveTrust](http://www.thepassivetrust.com) | Professional Secure Blockchain Infracstruture  | [@thepassivetrust.pool.6fb1358](https://hubble.figment.network/near/chains/testnet/validators/thepassivetrust.pool.6fb1358) | CA | 
| <img src="https://secure.meetupstatic.com/photos/event/6/4/5/d/600_478285693.jpeg" width="40"> | ru | Freedom and peace | [@top.pool.6fb1358](https://hubble.figment.network/near/chains/testnet/validators/top.pool.6fb1358) | RU |
| <img src="https://github.com/Viacheslav198/near/blob/master/m.jpg" width="40"> | sl1sub | Stake for life | [@sl1sub.pool.f863973.m0](https://explorer.testnet.near.org/accounts/sl1sub.pool.f863973.m0) | RU |
| <a href="https://ibb.co/GncY2Vv"><img src="https://i.ibb.co/GncY2Vv/2020-10-03-16-28-11.jpg" alt="2020-10-03-16-28-11" border="0" /></a> |stake with Ains |Zainy| Assets Infracstruture | [@zainy.pool.f863973.m0](https://hubble.figment.network/near/chains/testnet/validators/@zainy.pool.f863973.m0) | UK |

## BetaNet Validators

| Logo  | Validator | Blurb                                              | Account ID | Fees | Country | Pool ID | Locked |
| :---: | :-------: | -------------------------------------------------- | ---------- | ---- | :-----: | :-----: | :----: |
| <img src="https://user-images.githubusercontent.com/11320251/86902478-4df7a680-c10e-11ea-9452-4f11716fb803.jpg" width="40"> | [Cryptium Labs](https://cryptium.ch) | Secure and available validation from the Swiss Alps! Proud **NVAB** member! | [@cryptium.betanet](https://explorer.betanet.near.org/accounts/cryptium.betanet) | 20% | 🇨🇭CH🇨🇭 | [@cryptium.stakehouse.betanet](https://explorer.betanet.near.org/accounts/cryptium.stakehouse.betanet) | ✅ |
| <img src="https://user-images.githubusercontent.com/3753783/80396381-8c592580-8882-11ea-81b9-8ec06e242f93.png" width="40"> | [Staked.us](https://staked.us/) | Staked operates highly reliable and secure staking infrastructure for 20+ PoS protocols on behalf of the leading crypto asset investors in the industry. NVAB member.| @staked.test | 10% | US | [@staked.stakehouse.betanet](https://explorer.betanet.near.org/accounts/staked.stakehouse.betanet) | yes |
| <img src="https://img.bfmtv.com/c/630/420/f10deb/0b195b76b77995a22743df27d9.jpg" width="40">  | Stake2Earn | Nearup No Stop  | @arnzo.betanet | 6% | CH | [@stake2earnfunds2](https://explorer.betanet.near.org/accounts/stake2earnfunds2) | Yes |
| <img src="https://www.swiss-fencing.ch/wp-content/uploads/2015/03/croix-suisse.jpg" width="40"> | swissQualitystake | node Up On Time All Time  | @axone.betanet | 5% | CH | [@swissqstakepoolsw3](https://explorer.betanet.near.org/accounts/swissqstakepoolsw3) | YES |
| | flyhigh | Stake to my node | @vovaferma.betanet | 10% | UA | @vova | yes |
| | silvervir | Stake it | @silvervir.betanet | -% | UA | [@silver1](https://explorer.betanet.near.org/accounts/silver1) | yes |
| | validator_italia | #Stayhome and get 25% ROI | [@validator_italia.betanet](https://explorer.betanet.near.org/accounts/validator_italia.betanet) | 25% | ITA | [@validator_italia_contract](https://explorer.betanet.near.org/accounts/validator_italia_contract) | YES |
| <img src="https://agx10k.ml/favicons/android-icon-48x48.png" width="40"> | [AG](https://agx10k.ml) | Validating the CELO mainnet since genesis | [@ag.betanet](https://explorer.betanet.near.org/accounts/ag.betanet) | 10% | RU | [@ag_staking](https://explorer.betanet.near.org/accounts/ag_staking) | yes |
| <img src="https://avatars3.githubusercontent.com/u/150731?s=460&v=4" width="40"> | huglester | be the best and never rest | @huglester.betanet | 10% | LT | [@huglester](https://explorer.betanet.near.org/accounts/huglester) | yes |
| | gunray | Stake it till you make it | [@gunray.test](https://explorer.betanet.near.org/accounts/gunray.test) | 10% | CRO | [@gunpool](https://explorer.betanet.near.org/accounts/gunpool) | yes |
| <img src="http://delightlabs.io/wp-content/uploads/DELIGHT-primary-symbol.svg" width="40"> | [DELIGHT](https://delightlabs.io) | DELIGHT, highly secure and reliable validator. | @delight.betanet | 10% | KO | [@delight_pool](https://explorer.betanet.near.org/accounts/delight_pool) | yes |
| <img src="https://i.imgur.com/kaSFhqv.png" width="40"> | [ArmyIDs](http://armyids.com) | ArmyIDs protect the civilization from The Aliens. Support the Armies and safe your assets by staking with ArmyIDs right now! | @armyid.betanet | 1% | ID | [@armyids_pool](https://explorer.betanet.near.org/accounts/armyids_pool) | Yes |
| | MutedTommy | Lets (S)takeoff! | [@mutedtommy.betanet](https://explorer.betanet.near.org/accounts/mutedtommy.betanet) | 10% | AU | [@mutedtommy-staking-pool-2.stakehouse.betanet](https://explorer.betanet.near.org/accounts/c.mutedtommy.betanet) | Yes |
| <img src="https://raw.githubusercontent.com/th3m477/applied/master/as.png" width="40"> | Applied | Galactic validation! 🚀 | @applied.betanet | 10% | UK | [@applied](https://explorer.betanet.near.org/accounts/applied) | yes |
| <img src="https://chainflow.io/content/images/2020/02/chainflow-1.png" width="40"> | [Chainflow](https://chainflow.io/chainflow-staking-systems/) | | @chainflow.betanet | 10% | US | [@pool.chainflow.betanet](https://explorer.betanet.near.org/accounts/pool.chainflow.betanet) | yes |
| <img src="https://avatars2.githubusercontent.com/u/62909056?s=96&v=4" width="40"> | FredrikMalmqvist | --- | @fredrikmalmqvist.test | 15% | SE | [@fredrik_pool](https://explorer.betanet.near.org/accounts/fredrik_pool)| yes |
| <img src="https://www.stratege.ru/forums/files/gallery/1/d95/645/0472d5c7c302952c27102a261cddeb9e.png" width="40"> | Mort | Welcome home, good Hunter. What is it you desire? | @mort.betanet | 10% | RU | [@mort1.mort.betanet](https://explorer.betanet.near.org/accounts/mort1.mort.betanet) | yes |
| <img src="https://rating-ico.com/wp-content/uploads/2019/01/binance-coin-logo-png-transparent.png" width="40"> | crazylandd | I am hero! | @crazylandd.betanet | 9% | RU | [@sub1.crazylandd.betanet](https://explorer.betanet.near.org/accounts/sub1.crazylandd.betanet) | yes |
| <img src="https://i.imgur.com/yh1kBba.png" width="40"> | Bartalamew | Node tester, need toster! | @bartalamew.betanet | 10% | RU | [@contract.bartalamew.betanet](https://explorer.betanet.near.org/accounts/contract.bartalamew.betanet) | yes |
| <img src="https://i.pinimg.com/originals/4b/89/73/4b8973e887f90d654b6fd3f00cd2d9b6.png" width="40"> | tatitati1 | Join to me! I am firt validator-girl here! | @tati.betanet | 5% | RU | [@tatianka](https://explorer.betanet.near.org/accounts/tatianka) | yes |
| <img src="https://i.imgur.com/2jD6bzU.png" width="40"> | Foxnorth1210 | What Does The Fox Say? | @foxnorth1210.betanet | 10% | RU | [@sc.foxnorth1210.betanet](https://explorer.betanet.near.org/accounts/sc.foxnorth1210.betanet) | yes |
| <img src="https://store.playstation.com/store/api/chihiro/00_09_000/container/RU/ru/999/EP1003-CUSA12054_00-FALLOUT1ST01YEAR/1585667908000/image?w=240&h=240&bg_color=000000&opacity=100&_version=00_09_000" width="40"> | askoldd | Need more gold! | @askold.betanet | 10% | RU | [@smart.askold.betanet](https://explorer.betanet.near.org/accounts/smart.askold.betanet) | yes |
| <img src="https://avatarfiles.alphacoders.com/167/167492.jpg" width="40"> | happin |  | @happin.betanet | 0% |  | [@pool.happin.betanet](https://explorer.betanet.near.org/accounts/pool.happin.betanet) | yes |
| (╯°□°）╯ | NatsZ | Do you want a little bit NEAR? | @nats.betanet | 10% | RU | [@contract.nats.betanet](https://explorer.betanet.near.org/accounts/contract.nats.betanet) | yes |
| <img src="https://miro.medium.com/max/1400/1*9Rg2AU9mF3eURmzDRPtXLA.jpeg" width="40"> | immortal | Justice | @immortal.betanet | 0% | - | [@justice.immortal.betanet](https://explorer.betanet.near.org/accounts/justice.immortal.betanet) | yes |
|  | galbraith | Node operator | @galbraith.betanet | 0% | RO | [@sc.galbraith.betanet](https://explorer.betanet.near.org/accounts/sc.galbraith.betanet) | yes |
| <img src="https://previews.123rf.com/images/uasumy/uasumy1706/uasumy170600018/80558815-letter-b-logo-modern-design-element-template-paper-material-idea-identity-mark-business-card-tech-bl.jpg" width="40"> | alphabet1 | Steak with alphabet1 | @alphabet1.betanet | 0% | RU | [@abc.alphabet1.betanet](https://explorer.betanet.near.org/accounts/abc.alphabet1.betanet) | yes |
|  | eosis | Lorem ipsum dolor sit amet, consectetur adipiscing elit. | @eosis.betanet | 0% | RO | [@c.eosis.betanet](https://explorer.betanet.near.org/accounts/c.eosis.betanet) | yes |
|  | mamojkool | RUde validator | @mamojkool.betanet | 0% | RU | [@fund.mamojkool.betanet](https://explorer.betanet.near.org/accounts/fund.mamojkool.betanet) | YES |
| <img src="https://avatars0.githubusercontent.com/u/34697173?s=460&u=c428e7758828eb5d3fbd66a6ea8e7040dc841f45&v=4" width="40"> | Averonix | Validator in a galaxy far far away | @averonix.betanet | 10% | RU |@averonix | yes |
| <img src="https://secure.meetupstatic.com/photos/event/6/4/5/d/600_478285693.jpeg" width="40"> | ru | Freedom and peace | @ru.betanet | 10% | RU | [@top](https://explorer.betanet.near.org/accounts/top) | YES |
| <img src="https://avatars2.githubusercontent.com/u/60854664?s=96&v=4" width="40"> | k0kk0k | Stake them ALL! | @danil.betanet | 10% | RU | [@bucket](https://explorer.betanet.near.org/accounts/bucket) | yes |
|  | goodstake2 | Honest Validator node from India | @lalitnear.betanet | 10% | IN | [@goodstake2](https://explorer.betanet.near.org/accounts/goodstake2) | yes |
| :rocket:  | YYYYYYYYYYYYY | [Y so serious](https://keybase.io/yyyyyyyyyyyyy)                                              | [@yyyyyyyyyyyyy.betanet](https://explorer.betanet.near.org/accounts/yyyyyyyyyyyyy.betanet) | 10% | RU | [@yyyyyyyyyyyyy1](https://explorer.betanet.near.org/accounts/yyyyyyyyyyyyy1) | yes |
| <img src="https://avatars3.githubusercontent.com/u/41889754?s=460&u=4" width="40"> | Agrestus |  | @agrestus.betanet | 9% | BY |  [@awesome](https://explorer.betanet.near.org/accounts/awesome) | yes |
|<img src="https://66.media.tumblr.com/0c5c8e8d155dc32908529547af67de0b/tumblr_mewoq3YrGH1qbwnuho4_540.jpg" width="40"> | @ujjjoshi.betanet | may the force  be with you | [@ujjjoshi.betanet](https://explorer.betanet.near.org/accounts/ujjjoshi.betanet) | 5% | FR | | yes|
| <img src="https://s3.amazonaws.com/keybase_processed_uploads/54d9aa8c94a4c2a8b9893fe94a721305_360_360.jpg" width="40"> | [Bambarello](https://keybase.io/bambarello) | Secured and trusted professional validator. | @bambarello | 10% | UA | [@bambarello](https://explorer.betanet.near.org/accounts/bambarello) | yes |
| <img src="https://avatars0.githubusercontent.com/u/58822673?s=400&u=2ea6326dbc9b37d854f66a2a2757e3f38539037c&v=4" width="40"> | 7777nda | Much node very uptime | @7777nda.betanet | 10% | RU | @777staker.7777nda.betanet | YES |
| | BearsNode | Life begins at the end of your WiFi zone | @bears.betanet | 10% | RU | [@dog.bears.betanet](https://explorer.betanet.near.org/accounts/dog.bears.betanet) | yes |
| <img src="https://i.imgur.com/igH34oi.jpg" width="40"> | RosalesSierra91 | Give me more NEAR's! | @rosalessierra91.betanet | 10% | RU | [@sub.rosalessierra91.betanet](https://explorer.betanet.near.org/accounts/sub.rosalessierra91.betanet) | yes |
| <img src="https://avatars2.githubusercontent.com/u/55540473?s=96&v=4" width="40"> | Tyler34214 | Low fees, great experience in validating! | @dochpryof.test| 10% | UK | [@dochpryof](https://explorer.betanet.near.org/accounts/dochpryof)| yes |
| <img src="https://avatars0.githubusercontent.com/u/61023562?s=460&u=57fd8688f27f6f84cc81cbafd4de8c895d3d454c&v=4" width="40"> | [2Staked](http://2staked.xyz) | Validate Everything! | @ractolechoc5.test | 10% | RU |[@sl-he](https://explorer.betanet.near.org/accounts/sl-he) | YES |
| <img src="https://avatars1.githubusercontent.com/u/62909153?s=96&v=4" width="40"> | JaroslavRud | Just Staking. Cheapest than others | @jaroslavrud.test | 10% | CZ | [@jaroslavrud](https://explorer.betanet.near.org/accounts/jaroslavrud)| yes |
| <img src="https://avatars3.githubusercontent.com/u/62906588?s=96&v=4" width="40"> | SimonHugo | Make Staking Great Again! | @simonhugo.test| 50% | UK | [@simonhugo](https://explorer.betanet.near.org/accounts/simonhugo)| Yes |
| <img src="https://avatars1.githubusercontent.com/u/62906668?s=96&v=4" width="40"> | Sivertsen VPS | I give you more profit than other validators | @villiamsivertsen.test | 10% | NO | [@villiamsivertsen](https://explorer.betanet.near.org/accounts/villiamsivertsen)| yes |
| <img src="https://avatars3.githubusercontent.com/u/62905575?s=96&v=4" width="40"> | TommyWesley | Me and my little node give U a big profit | @tommywesley.test| 25% | UK | [@tommywesley](https://explorer.betanet.near.org/accounts/tommywesley)| yes |
| <img src="https://avatars2.githubusercontent.com/u/62908990?s=96&v=4" width="40"> | felix.schulz | Need validating? Go with us! | @felixschulz.test | 25% | DE | [@felixschulz](https://explorer.betanet.near.org/accounts/felixschulz)| YES  |
| <img src="https://avatars1.githubusercontent.com/u/62905922?s=96&v=4" width="40"> | Launo.Osku.Arttu | Hot Finnish Guy (as Validator, of course) | @launooskuarttu.test | 10% | FI | [@launooskuarttu](https://explorer.betanet.near.org/accounts/launooskuarttu)| Yes |
| <img src="https://avatars1.githubusercontent.com/u/62904697?s=96&v=4" width="40"> | OliGarr | - | @oligarr.test| 10% | UK | [@oligarr](https://explorer.betanet.near.org/accounts/oligarr)| Yes |
| <img src="https://masternode24.de/wp-content/uploads/2020/05/LOGO-Github.jpg" width="40"> | [Masternode24](https://masternode24.de) | Staking Provider from Germany | @masternode24.betanet | 10% | DE | @masternode24 | yes |
| <img src="https://avatars1.githubusercontent.com/u/62907314?s=96&v=4" width="40"> | OlaiOlsen | More tokens, more stakes! | @olaiolsen.test | 50% | NL | [@olaiolsen](https://explorer.betanet.near.org/accounts/olaiolsen)| YES |
| <img src="https://avatars1.githubusercontent.com/u/62906205?s=96&v=4" width="40"> | JanLiamNilsson | ---- | @janliamnilsson.test | 10% | SE | [@janliamnilsson](https://explorer.betanet.near.org/accounts/janliamnilsson)| yes |
| <img src="https://github.com/AndreyVelde/AndreyVelde/blob/master/avatar.png" width="40"> | andreyvelde | Tester and validator | @andreyvelde.test | 10% | RU | [@shudo](https://explorer.betanet.near.org/accounts/shudo) | YES |
|  | lixoy | Tester of nodes | @lxyw.betanet | 10% | RU | [@interference](https://explorer.betanet.near.org/accounts/interference) | yes |
| <img src="https://raw.githubusercontent.com/stakery/stakery/master/assets/stakery-logo-256.png" width="40"> | [Stakery](https://stakery.io) | Staking around the clock. Berlin-based. | @stakery.betanet | 10% | DE | [@stakery](https://explorer.betanet.near.org/accounts/stakery) | Yes |
| <img src=" https://avatars0.githubusercontent.com/u/66552062?s=460&u=9917802fa05db4eefa8ec6a411071114a2062dd0&v=4 " width="40"> | denis| Stake me! | @moon.betanet | 10% | RU | [@denis](https://explorer.betanet.near.org/accounts/denis) | yes |
| <img src="https://avatars2.githubusercontent.com/u/59618272?s=400&u=54f6926d571cae56797a4d3555a3d1a9c84788c8&v=4" width="40"> | kokos | secures Near from covid | @covid.betanet | 1% | UA | [@kokos-anti-covid](https://explorer.betanet.near.org/accounts/cocos-anti-covid) | YES |
| <img src="https://raw.githubusercontent.com/calify/IOSG/master/IOSG.png" width="40"> | [IOSG](https://iosg.vc) | Thesis and Community Driven | @iosgvc.betanet | 10% | CN | [@iosgvc.betanet](https://explorer.betanet.near.org/accounts/iosgvc.betanet) | yes |
| <img src="https://www.kruptosnomisma.org/gallery_gen/be6a3702672f8947247d859b06035ec4.png" width="40"> | [Kruptos Nomisma](https://www.kruptosnomisma.org) | Crypto's - ICO's - Nodes | @joesixpack.betanet | 0% | CH | [@ou812.stakehouse.betanet](https://explorer.betanet.near.org/accounts/ou812.stakehouse.betanet) | YES |
| | isillien | Pool staking is easy with Near | @isillien.betanet | 10% | LT | [@isillien](https://explorer.betanet.near.org/accounts/isillien) | yes |
| | VIPnamai | NotSoSimpleStaking | @vipnamai.betanet | 10% | LT | [@vipstakes](https://explorer.betanet.near.org/accounts/vipstakes) | yes |
| | Alex | Stake here | [@alexzz.betanet](https://explorer.betanet.near.org/accounts/alexzz.betanet) | 10% | CN |[@alexzz](https://explorer.betanet.near.org/accounts/alexzz)| Yes |
| <img src="https://s3.amazonaws.com/keybase_processed_uploads/d48739023a250815c4ac564c9870ec05_360_360.jpg" width="40"> | [Staking Fund](https://staking.fund) | - | @stakingfund.test | -% | KR | [@sfpool](https://explorer.betanet.near.org/accounts/sfpool) | Yes |
| :-) | Alex Turetskiy |Arllight! | @alexturetskiy.betanet | -% | RU | @alextur_pool | yes |
| <img src="https://raw.githubusercontent.com/iammelea/logs_melea/38cd50835125f5cce30741666e0199d1ec07198a/melea_cubo.svg" width="60"> | [melea](http://melea.xyz/) | Safe and trustworthy validator service, currently Validating in Cosmos, Solana, Iris, eMoney, KaVa → soon: Near, Nucypher, Coda & more. Validating blocks since 2017. | @melea.betanet | 10% | ES | [@meleapool](https://explorer.betanet.near.org/accounts/meleapool) | YES |
| <img src="https://github.com/stakewolf/logos/blob/master/stakewolf%20logo%20bw.png" width="50"> | [stakewolf](http://stakewolf.com/) | The validation service you are looking for, secure and reliable. | [@stakewolf.test](https://wallet.betanet.nearprotocol.com/profile/stakewolf.test) | 10% | ES | [@stakewolf_pool](https://explorer.betanet.near.org/accounts/stakewolf_pool) | YES |
| <img src="http://www.wetez.io/_nuxt/img/72ebb49.png" width="40"> | [Wetez](https://wetez.io) | Wetez is the most professional team in the POS ( Proof of Stake) field. And we provide the most secure and efficient node management service. Stake with us! | @wetez11.test | 10% | CN | [@wetez](https://explorer.betanet.near.org/accounts/wetez) | yes |
| <img src="https://scx2.b-cdn.net/gfx/news/hires/2019/newstudyhelp.jpg" width="40"> | Phenom | Phenomenal fisherman | @fisherman.betanet | 2% | - | [@phenom](https://explorer.betanet.near.org/accounts/phenom) | YES |
| <img src="https://ggscore.com/media/logo/t14.png" width="40">  | Jazza | Jazza are doing it  | @jazza.test | 1% | RU | [@jazza](https://explorer.betanet.near.org/accounts/jazza) | yes |
| | freshmen | Newbie exploring | @freshmen.betanet | 10% | UA | @freshmen.stakehouse.betanet | yes |
| | Plex | Don't Trust. Validate. | [@jjangg96.betanet](https://explorer.betanet.near.org/accounts/jjangg96.betanet) | 6% | KR🇰🇷 | [@plex2](https://explorer.betanet.near.org/accounts/plex2) | YES |
| <img src="https://avatars0.githubusercontent.com/u/65075036?s=460&u=e42cf776a0a449f55dce14c4c230eb2d1bfade6a&v=4"> | DreamStaker | On your marks, get set, STAKE!  | @dreamstaker.betanet | 10% | RU | [@valeraverim](https://explorer.betanet.near.org/accounts/valeraverim) | yes |
| <img src="http://ubik.capital/ubikprep/ubik256x256.png" width="40"> | [Ubik Capital](https://ubik.capital/ ) | Ubik Capital is providing highly resilient and secure staking service for different blockchain projects.| @ubik.betanet | 10% | RO | [@ubikcapital](https://explorer.betanet.near.org/accounts/ubikcapital) | YES |
| <img src="https://avatars1.githubusercontent.com/u/35801878?s=460&u=8681d485115d5da9341a1bf33447fe93a5f7d534&v=4" width="40"> | [Orangeclub] | Orange. Staking. Nothing more. | @something.betanet | 10% | RU | [@somebody](https://explorer.betanet.near.org/accounts/somebody) | yes |
| <img src="http://neozaru.com/avatar.png" width="40" alt="neozaru" title="neozaru"> | neozaru | Decentralized sheep | [@neozaru14.betanet](https://explorer.betanet.near.org/accounts/neozaru14.betanet) | 0.1% | FR | [@neozaru.stakehouse.betanet](https://explorer.betanet.near.org/accounts/neozaru.stakehouse.betanet) | YES |
| | Breeze | Stake of Zone | @zebra.betanet | 10% | CN | [@zebra](https://explorer.betanet.near.org/accounts/zebra) | Yes |
| <img src="https://avatars2.githubusercontent.com/u/10295908?s=460&v=4" width="40"> | mark_fo | To infinity ... and beyond | [@mf.betanet](https://explorer.betanet.near.org/accounts/mf.betanet) | 10% | RU | [@mfsc.stakehouse.betanet](https://explorer.betanet.near.org/accounts/mfsc) | YES |
| <img src="https://i.imgur.com/rDKVNWd.png" width="40"> | youlaiwuqu | Having a qualified and robust hardware with i7-10700K, 16G DDR4 RAM, 512G nvme SSD. Currently staking on Avalanche Protocol. Happy staking! | @youlaiwuqu.betanet |10% | CN |  [@stakingpool.youlaiwuqu.betanet](https://explorer.betanet.near.org/accounts/stakingpool.youlaiwuqu.betanet)  | Yes |
| <img src="https://www.nodeasy.com/nodeasy_360_360.jpg" width="40"> | [Nodeasy](https://www.nodeasy.com/) | Nodeasy is a website dedicated to statistics, monitoring masternode cryptocurrencies and providing related node building services. | @nodeasy.test | -% | CN | [@www.nodeasy.test](https://explorer.betanet.near.org/accounts/www.nodeasy.test) | YES |
| <img src="https://www.yieh.com/Common/ShowaImg?faname=4BD075EDADDBDBC1A2AF05A8D85F02FC2965C4CA3932F74293978ACCDC9F7CB6B0DFFEAEB8EB8EAEC9ACCE63AA1554FA" width="40"> | arm | your validator-friend | [@armada.betanet](https://explorer.betanet.near.org/accounts/armada.betanet) | 10% |  | [@arm.armada.betanet](https://explorer.betanet.near.org/accounts/arm.armada.betanet) | YES |
| <img src="https://wp.technologyreview.com/wp-content/uploads/2019/09/spacejunk_0-10.jpg" width="40"> | meridian | staking aroung meridians | [@meridian.betanet](https://explorer.betanet.near.org/accounts/meridian.betanet) | 1% | GEOID | [@40th.meridian.betanet](https://explorer.betanet.near.org/accounts/40th.meridian.betanet) | YES |
| <img src="https://www.bitcat365.com/wp-content/uploads/cn/2019/09/05-12533755.png" width="40"> | [Bit Cat](https://www.bitcat365.com) | A maverick cat. Secure and stable validator service from China team. | @catcatcat.test | 10% | CN |[@bitcat.stakehouse.betanet](https://explorer.betanet.near.org/accounts/bitcat.stakehouse.betanet) |  yes |
| <img src="https://raw.githubusercontent.com/traderok/screenshots/master/megatron.jpg" width="40"> | megatron | "Give me the spark, silly, and I will leave you alive." | @hexbi.betanet | 10% | UA | [@megatron](https://explorer.betanet.near.org/accounts/megatron) | Yes |
| <img src="https://raw.githubusercontent.com/magisteryada/screenshots/master/b7ca2b40b99b4827ecea08769e8a5fd5.jpg" width="40"> | yoda | "Let the force be with you" | @magisteryoda.betanet | 10% | UA |[@yoda](https://explorer.betanet.near.org/accounts/yoda) | Yes |
| <img src="https://github.com/everstake/everstake.github.io/blob/master/img/Everstake-256.png" width="40"> | [Everstake](https://everstake.one/) | Reliable and experienced staking service provider from Ukraine. | [@everstake.betanet](https://explorer.betanet.near.org/accounts/everstake.betanet) | 10% | UA | [@pool.everstake.betanet](https://explorer.betanet.near.org/accounts/pool.everstake.betanet) | yes |
| <img src="https://01node.com/wp-content/themes/01Node/assets/img/01node.svg" width="40"> | [01node](https://01node.com) | 01node Trusted Validator | [@01node.betanet](https://explorer.betanet.near.org/accounts/01node.betanet) | 10% | RO🇷🇴 | [@01node.stakehouse.betanet](https://explorer.betanet.near.org/accounts/01node.betanet) | yes |
| | Zero Pool | Stake here | [@zeropool.betanet](https://explorer.betanet.near.org/accounts/zeropool.betanet) | 10% | CN |[@pool.zeropool.betanet](https://explorer.betanet.near.org/accounts/pool.zeropool.betanet)| Yes |
| <img src="https://s3.amazonaws.com/keybase_processed_uploads/de32b7ca9108d3d7de68949f81114205_360_360.jpg" width="40"> | @s5.betanet | Professional PoS node contributor | @s5.stakehouse.betanet | 10% | CN | yes | 
| <img src="https://swiss-staking.ch/img/logo.png" width="80"> | Swiss Staking | Validating since 2018. With over 700 days of staking experience we offer a highly secure and stable validator. | @swiss-staking.betanet | 10% | CH | @swiss-staking.stakehouse.betanet | Yes |
| <img src="https://p.pstatp.com/origin/138040000417b361a135c" width="40"> | Staking-Power(http://www.staking-power.tech) | Chinese professional node operator | [@lizhongbo3.betanet](https://explorer.betanet.near.org/accounts/lizhongbo3.betanet) | 10% | CN | [@staking_viboracecata.stakehouse.betanet](https://explorer.betanet.near.org/accounts/staking_viboracecata.stakehouse.betanet) | Yes |
| <img src="https://img.bafang.com/cdn/assets/imgs/MjAxOTg/C3B8310FFC1B46DA82C8ED7910C2AD61.png" width="40"> | [OKExPool](https://okex.com/pool) | OKExPool | [@okexpool.betanet](https://explorer.betanet.near.org/accounts/okexpool.betanet) | 10% | CN | [@okexpool.stakehouse.betanet](https://explorer.betanet.near.org/accounts/okexpool.stakehouse.betanet) | Yes |
| <img src="https://i.imgur.com/EkFy7z7.jpg" width="40"> | swag2 | Happy staking! | @swag2.betanet | 10% | US | [@swain2.stakehouse.betanet](https://explorer.betanet.near.org/accounts/swain2.stakehouse.betanet) | Yes |
| :+ | swag1 | Boom | @swag1.betanet | 10% | US | [@sam.stakehouse.betanet](https://explorer.betanet.near.org/accounts/sam.stakehouse.betanet) | Yes |
|<a href="https://blockchain.gielve.com/"><img src="https://avatars3.githubusercontent.com/u/1295417?s=100&v=4" alt="Gielve" width="40"/></a> | [Gielve](https://blockchain.gielve.com) | Efficient blockchain infrastructure | [@gielve.betanet](https://explorer.betanet.near.org/accounts/gielve.betanet) | 10% | FR 🇫🇷 | [@gielve.stakehouse.betanet](https://explorer.betanet.near.org/accounts/gielve.stakehouse.betanet) | Yes |
| <img src="https://shop.io.mi-img.com/app/shop/img?id=shop_cb3982acbf9f4c974b9a855b6416aece.jpeg" width="40"> | aquariuspool.stakehouse.betanet | Professional,trusted and Stable node operator | @aquariusluo.betanet | 10% | CN | [@aquariuspool.stakehouse.betanet](https://explorer.betanet.near.org/accounts/aquariuspool.stakehouse.betanet) | YES |
|<img src="https://p.pstatp.com/origin/fe7100021f105b2a7206" width="40">  | neonong_pool.stakehouse.betanet | Stable Node Operator | @neonong.betanet | 10% | CN | [@neonong_pool.stakehouse.betanet](https://explorer.betanet.near.org/accounts/neonong_pool.stakehouse.betanet) | YES |
| <img src="https://i.imgur.com/nAY4JVl.jpg" width="40"> | john1 | Emilia #1 Waifu | @john1.betanet | 10% | TT | [@emilia.stakehouse.betanet](https://explorer.betanet.near.org/accounts/emilia.stakehouse.betanet) | Yes |
| <img src=https://upload.wikimedia.org/wikipedia/commons/thumb/1/1d/1996._Elektrostal._Cat._img_001.jpg/413px-1996._Elektrostal._Cat._img_001.jpg width="40"> | marat111 |Easy for you | @marat111.betanet | -% | RU | [@mmm.stakehouse.betanet](https://explorer.betanet.near.org/accounts/mmm.stakehouse.betanet) | YES |
| | Machina Staking | Your key to the staking world. Start earning today. | @machina_staking.betanet | 10% | UK | machina_staking.stakehouse.betanet | YES |
| <img src="https://raw.githubusercontent.com/easy2stake/marketing-kit/master/Easy%202%20Stake_512x512%20(1).png" width="40"> | [Easy 2 Stake](https://www.easy2stake.com/) | Your secure and stable validator. | [@Easy2Stake](https://explorer.betanet.near.org/accounts/pool.easy2stake.betanet) | 10% | RO | [@Easy2Stake](https://explorer.betanet.near.org/accounts/pool.easy2stake.betanet) | YES |
| <img src="https://avatars3.githubusercontent.com/u/63687596" width="40"> | [Maj Loves Reg](https://www.majlovesreg.one/) | Secure and stable cloud infrastructure. Automated upgrades and systems maintenance. Always online. | [@majlovesreg.betanet](https://explorer.betanet.near.org/accounts/majlovesreg.betanet) | 1% | PH | [@majlovesreg.stakehouse.betanet](https://explorer.betanet.near.org/accounts/majlovesreg.stakehouse.betanet) | Yes |
| | crypto-solutions | Wheres the stake? | [@crypto-solutions.betanet](https://explorer.betanet.near.org/accounts/crypto-solutions.betanet) | 10% | US | [@crypto-solutions.stakehouse.betanet](https://explorer.betanet.near.org/accounts/crypto-solutions.stakehouse.betanet) | yes |
| <img src="https://user-images.githubusercontent.com/3634574/81186113-1f990600-8fbb-11ea-92a1-17b44b3e65f0.png" width="40"> | [Ryabina](https://ryabina.io) | Validators for awesome networks. | @ryabina_io.betanet | -% | RU | [@pool.ryabina_io.betanet](https://explorer.betanet.near.org/accounts/pool.ryabina_io.betanet) | yes |
| https://avatars0.githubusercontent.com/u/47457161?s=60&v=4 | Serj | Take me to the Mars | fuckit.betanet | 10% | UA | [@takeittothemoon.fuckit.betanet](https://explorer.betanet.near.org/accounts/takeittothemoon.fuckit.betanet)| YES |
| <img src="http://www.tecnogob.com/Logo-cuadrado.png"> | tecnogob | Technology experts from the south  | @luciotato.betanet | 8% | AR | @luckystaker.stakehouse.betanet | yes |
| <img src="https://github.com/alma-uk/alma3/blob/master/Alma3.png" width="40"> | Alma3 | Alma Staking | @alma3.betanet | 10% | UK | [@alma3.stakehouse.betanet](https://explorer.betanet.near.org/accounts/alma3.stakehouse.betanet) | YES |
| <img src="https://genesislab.net/img/logo.png" width=40> | Genesis Lab | Blockchain-focused development company and validation nodes operator in PoS networks. We provide staking services in Cosmos, Kava, IRIS, Terra, Minter and Kusama networks and participate in NEAR, Solana and Coda testnets as a potential validator. | [@genesislab.betanet](https://explorer.betanet.near.org/accounts/genesislab.betanet) | 7% | RU | [@genesislab.stakehouse.betanet](https://explorer.betanet.near.org/accounts/genesislab.stakehouse.betanet) | YES |
| <img src="https://cdni.rbth.com/rbthmedia/images/2019.06/original/5cffb50715e9f971c10e59e4.jpg" width="40"> | [General] | General of blockchains | @alfa.betanet | 10% | RU | [@general.alfa.betanet](https://explorer.betanet.near.org/accounts/general.alfa.betanet) | yes |
| <img src="https://github.com/OhmTHStakePool/THStakePool-Near/blob/master/THStakePool%20Logo%20Only%20Small%2064x64.png" width="40"> | [🇹🇭 THStakePool](https://thstakepool.com)  | Be Your Own Bank  | @thstakepool.betanet | 10% | 🇹🇭 | [@thstakepool.stakehouse.betanet](https://explorer.betanet.near.org/accounts/thstakepool.stakehouse.betanet) | YES |
| | Dmitry | Learning by doing | [@dmitrue.betanet](https://explorer.betanet.near.org/accounts/dmitrue.betanet) | 10% | RU | [@dmitrue.stakehouse.betanet](https://explorer.betanet.near.org/accounts/dmitrue.stakehouse.betanet)| YES |
| <img src="https://avatars3.githubusercontent.com/u/32561566?s=200&v=4" width="40"> | [Forbole](https://www.forbole.com/) | WE ARE VALIDATORS, BUILDERS AND CONTRIBUTORS. | [@forbole_hk.betanet](https://explorer.betanet.near.org/accounts/forbole_hk.betanet) | 5% | HK | [@forbole.stakehouse.betanet](https://explorer.betanet.near.org/accounts/forbole.stakehouse.betanet) | YES |
| <img src="https://avatars0.githubusercontent.com/u/31588547?s=60&v=4">  | DenysK | Validating is only the beginning | <a href="https://explorer.betanet.near.org/accounts/starlink.betanet" target="_blank">@starlink.betanet</a> | 10% | Ireland | <a href="https://explorer.betanet.near.org/accounts/starlink-pool.stakehouse.betanet" target="_blank">@starlink-pool.stakehouse.betanet</a> | YES |
| <img src="https://lh3.googleusercontent.com/-BYUotXE-QoE/AAAAAAAAAAI/AAAAAAAAAAA/AMZuuckwQN_Bmqzfw58oRKqSZ8VY1NbkJw/photo.jpg?sz=46" width="40"> | dimaro1 | "Experienced staking provider from UA" | [@dimaro1.betanet](https://explorer.betanet.near.org/accounts/dimaro1.betanet)  | 8% | UA |[@coolpool.dimaro1.betanet](https://explorer.betanet.near.org/accounts/coolpool.dimaro1.betanet) | Yes |
| <img src="https://s3.amazonaws.com/keybase_processed_uploads/39002ba27b7a8267410a2fedd5528305_360_360.jpg" width=40> | [AUDIT.one](https://audit.one) | Validators of today, Auditors of tomorrow | [@auditone](https://explorer.betanet.near.org/accounts/auditone.betanet) | 20% | IN | [@audit_two.stakehouse.betanet](https://explorer.betanet.near.org/accounts/audit_two.stakehouse.betanet) | YES |
| <img src="https://avatars2.githubusercontent.com/u/26545493?s=40&u=bfba8360f6c4e06b0bb16c390c476770663ff06a&v=4" width="40"> | [Savelev](https://tele.click/savelev96) | Stake pool for your game change | [@savelev.betanet](https://explorer.betanet.near.org/accounts/savelev.betanet) | 10% | RU | [@savelev.stakehouse.betanet](https://explorer.betanet.near.org/accounts/savelev.stakehouse.betanet) | YES |
|| enterpool | Near forever | [@enter](https://explorer.betanet.near.org/accounts/enter.betanet) | 10% | UA | [@enterpool.stakehouse.betanet](https://explorer.betanet.near.org/accounts/enterpool.stakehouse.betanet) | Yes |
| | Castle | Network Verification Services | @testaccount1.betanet | 10% | UK | @castle.stakehouse.betanet | YES |
| <img src="https://i.imgur.com/URWEnJC.jpg" width="40"> | ronmnm | Best validator in the world | [@ronmnm.betanet](https://explorer.betanet.near.org/accounts/ronmnm.betanet) | 10% | UA | [@roma_k.stakehouse.betanet](https://explorer.betanet.near.org/accounts/roma_k.stakehouse.betanet) | yes | | |
| <img src="https://images.prismic.io/anechoic/4f35a3f4-f643-447a-ab01-65d0dd8a55c6_logo.png?auto=compress,format"> | [Anechoic](http://www.anechoic.company) | Pioneering DApp Staking Incentives since 2020. Learn More about our programs on our website!  | [@anechoic.betanet](https://explorer.betanet.near.org/accounts/anechoic.betanet)  | 3% | US 🇺🇸 | anechoic.stakehouse.betanet | YES |
| <img src="https://d33wubrfki0l68.cloudfront.net/07afeaae1790553e5481e5f35e99236ad7d7f583/42a25/assets/images/logo@2x.png"> | [KysenPool](https://www.kysenpool.io)  | Professional Stake Pool Operator.  |@kysenpool.betanet |10%|EU|[@kysenpool.stakehouse.betanet](https://explorer.betanet.near.org/accounts/kysenpool.stakehouse.betanet)| Yes |
| <img src="https://i.imgur.com/KILUmAT.png" width="40"> | DolphinTwo | Happy Staking. | [@dolphin.betanet](https://explorer.betanet.near.org/accounts/dolphin.betanet) | 10% | CN | [@pool.dolphin.betanet](https://explorer.betanet.near.org/accounts/pool.dolphin.betanet) | Yes|
| <img src="https://s3.amazonaws.com/keybase_processed_uploads/39be673afeff56dc1c5ad17f68734505_360_360.jpg" width="40"> | Blockdaemon | our nodes are manned by a dedicated clone army | @blockdaemon.betanet | 10% | IE 🇮🇪 | [@blockdaemon.stakehouse.betanet](https://explorer.betanet.near.org/accounts/blockdaemon.stakehouse.betanet) | YES |
| | filippova | "Safe and responcible validator" | [@filippova.betanet](https://explorer.betanet.near.org/accounts/filippova.betanet)  | 10% | UA |[@filippova_pool.stakehouse.betanet](https://explorer.betanet.near.org/accounts/filippova_pool.stakehouse.betanet) | Yes |
| <img src="https://avatars0.githubusercontent.com/u/46092299?s=460&v=4" width="40"> | iuriig | unstoppable | @iuriig.betanet | 10% | NL | [@genesis.stakehouse.betanet](https://explorer.betanet.near.org/accounts/genesis.stakehouse.betanet) | Yes |
| | | | | | | | |
| | | | From here, the list contains validators who are not part of the NVAB and haven't locked their staking pool contract yet | | | | | |
| | | | | | | | |
| <img src="https://petapixel.com/assets/uploads/2017/01/baikal3-800x781.jpg" width="40"> | Gladba | .. no false promises here .. | @gladba.betanet | 10% | Wonderful world | [@global](https://explorer.betanet.near.org/accounts/global) | no |
| <img src="https://avatars2.githubusercontent.com/u/60854664?s=96&v=4" width="40"> | k0kk0k | Stake them ALL! | @danil.betanet | 10% | RU | [@bucket](https://explorer.betanet.near.org/accounts/bucket) | no |
| <img src="https://bitoven.me/assets/img/logo.png" width="40"> | [Bitoven](https://bitoven.me) | Just a small guy with small budget but high node uptime who love crypto. If you like decentralization spirit, stake with me! :smile: | @bitoven.test | 1% | ID | [@pool](https://explorer.betanet.near.org/accounts/pool) |no |
| <img src="https://bi23.com/bi23.svg" width="40"> | [Bi23 Labs](https://bi23.com) | Bi23 focuses on the blockchain and crypto-assets,providing users with Staking and DeFi services. | @bi23.betanet | 10% | CA | [@bi23_validator](https://explorer.betanet.near.org/accounts/bi23_validator) | no |
| <img src="https://i.imgur.com/ji5j63s.png" width="40"> | Farmers | Everyone is welcome | @pony.test | 1% | Countryside | [@farm](https://explorer.betanet.near.org/accounts/farm) | no |
| <img src="https://pbs.twimg.com/profile_images/780076084452855808/jIzkJtJ8_400x400.jpg" width="40"> | [sebytza05](https://twitter.com/sebytza05) | Stake with sebytza05 | @sebytza05_val.betanet | 10% | RO | [@sebytza05](https://explorer.betanet.near.org/accounts/sebytza05_val.betanet) | no |
| <img src="https://pbs.twimg.com/profile_images/1193309662071930880/FLUelAy-_400x400.jpg" width="40"> | [alexDcrypto](https://twitter.com/AlexDcrypto) | Come And Stake | @alexdcrypto-validator.betanet | 10% | Ro | [@alexDcrypto](https://explorer.betanet.near.org/accounts/alexdcrypto-validator.betanet) | no |
| | tanderug | Easy Money - stake it here  | @tanderug5.betanet | 10% | RU | [@get_rich](https://explorer.betanet.near.org/accounts/get_rich) | no |
| | Stake Tomato | Stake and bake | @ade.betanet | 10% | RO | [@stake_tomato](https://explorer.betanet.near.org/accounts/stake_tomato) | no |
| <img src="https://avatars3.githubusercontent.com/u/54758560?s=200&v=4" width="40"> | [D1 Ventures](https://d1.ventures/) | Powering the Future of Open Economy | @d1admin.betanet | 10% | US 🇺🇸 | [@d1.betanet](https://explorer.betanet.near.org/accounts/d1.betanet) | no |
| <img src="https://avatars2.githubusercontent.com/u/61577793?s=200&v=4" width="40"> | [CypherHunter](https://cypherhunter.com/) | Data Intelligence in Crypto | @cypherhunteradmin.betanet | 10% | US 🇺🇸 | [@cypherhunter.betanet](https://explorer.betanet.near.org/accounts/cypherhunter.betanet) | no |
| <img src="https://github.com/AndreyVelde/AndreyVelde/blob/master/avatar.png" width="40"> | andreyvelde | Tester and validator | @andreyvelde.test | 10% | RU | [@shudo](https://explorer.betanet.near.org/accounts/shudo) | no |
| | Stake Tomato | Stake and bake | @ade.betanet | 10% | RO | [@stake_tomato](https://explorer.betanet.near.org/accounts/stake_tomato) | no |
| <img src="https://avatars3.githubusercontent.com/u/54758560?s=200&v=4" width="40"> | [D1 Ventures](https://d1.ventures/) | Powering the Future of Open Economy | @d1admin.betanet | 10% | US 🇺🇸 | [@d1.betanet](https://explorer.betanet.near.org/accounts/d1.betanet) | no |
| <img src="https://avatars2.githubusercontent.com/u/61577793?s=200&v=4" width="40"> | [CypherHunter](https://cypherhunter.com/) | Data Intelligence in Crypto | @cypherhunteradmin.betanet | 10% | US 🇺🇸 | [@cypherhunter.betanet](https://explorer.betanet.near.org/accounts/cypherhunter.betanet) | no |
| <img src="https://avatars0.githubusercontent.com/u/61023562?s=460&u=57fd8688f27f6f84cc81cbafd4de8c895d3d454c&v=4" width="40"> | [2Staked](http://2staked.xyz) | Validate Everything! | @ractolechoc5.test | 10% | RU |[@sl-he](https://explorer.betanet.near.org/accounts/sl-he) | no |
| <img src="https://avatars2.githubusercontent.com/u/55540473?s=96&v=4" width="40"> | Tyler34214 | Low fees, great experience in validating! | @dochpryof.test| 10% | UK | [@dochpryof](https://explorer.betanet.near.org/accounts/dochpryof)| no |
| <img src="https://avatars2.githubusercontent.com/u/62908990?s=96&v=4" width="40"> | felix.schulz | Need validating? Go with us! | @felixschulz.test | 25% | DE | [@felixschulz](https://explorer.betanet.near.org/accounts/felixschulz)| no  |
| <img src="https://avatars1.githubusercontent.com/u/62909153?s=96&v=4" width="40"> | JaroslavRud | Just Staking. Cheapest than others | @jaroslavrud.test | 10% | CZ | [@jaroslavrud](https://explorer.betanet.near.org/accounts/jaroslavrud)| no |
| <img src="https://avatars3.githubusercontent.com/u/62906588?s=96&v=4" width="40"> | SimonHugo | Make Staking Great Again! | @simonhugo.test| 50% | UK | [@simonhugo](https://explorer.betanet.near.org/accounts/simonhugo)| no |
| <img src="https://avatars1.githubusercontent.com/u/62907314?s=96&v=4" width="40"> | OlaiOlsen | More tokens, more stakes! | @olaiolsen.test | 50% | NL | [@olaiolsen](https://explorer.betanet.near.org/accounts/olaiolsen)| no |
| <img src="https://avatars1.githubusercontent.com/u/62904697?s=96&v=4" width="40"> | OliGarr | - | @oligarr.test| 10% | UK | [@oligarr](https://explorer.betanet.near.org/accounts/oligarr)| no |
| <img src="https://avatars1.githubusercontent.com/u/62906668?s=96&v=4" width="40"> | Sivertsen VPS | I give you more profit than other validators | @villiamsivertsen.test | 10% | NO | [@villiamsivertsen](https://explorer.betanet.near.org/accounts/villiamsivertsen)| no |
| <img src="https://avatars1.githubusercontent.com/u/62905922?s=96&v=4" width="40"> | Launo.Osku.Arttu | Hot Finnish Guy (as Validator, of course) | @launooskuarttu.test | 10% | FI | [@launooskuarttu](https://explorer.betanet.near.org/accounts/launooskuarttu)| no |
| <img src="https://avatars1.githubusercontent.com/u/62906205?s=96&v=4" width="40"> | JanLiamNilsson | ---- | @janliamnilsson.test | -% | SE | [@janliamnilsson](https://explorer.betanet.near.org/accounts/janliamnilsson)| no |
| <img src="https://avatars3.githubusercontent.com/u/62905575?s=96&v=4" width="40"> | TommyWesley | Me and my little node give U a big profit | @tommywesley.test| 25% | UK | [@tommywesley](https://explorer.betanet.near.org/accounts/tommywesley)| no |
| | Alex | stake here  | @alexa.betanet(https://explorer.betanet.near.org/accounts/alexa.betanet) | 1% | CN | [@alexa](https://explorer.betanet.near.org/accounts/alexa) | NO |
| <img src="https://miro.medium.com/fit/c/256/256/2*x4-T9Pv2avw-3nwaagqJBQ.jpeg" width="40"> | [Novy](https://stake.novy.pw) | Validator in Cosmos Ecosystem for 1 year, deliver quality staking and support services! | @novy.betanet | -% | MD |[@stakeatnovy](https://explorer.betanet.near.org/accounts/stakeatnovy) | no |
| <img src="https://i.imgur.com/HFN4gx7.jpg?1" width="40"> | GemsStake | The Art of Staking | @equilibrium.betanet | 2% | RU | [@gems](https://explorer.betanet.near.org/accounts/gems) | Yes |
| | karbentum | Stake all here  | @karbentum.betanet | 10% | BY | [@nearcool2](https://explorer.betanet.near.org/accounts/nearcool2) | no |
|  | lixoy | Tester of nodes | @lxyw.betanet | 10% | RU | [@interference](https://explorer.betanet.near.org/accounts/interference) | no |
| <img src="https://raw.githubusercontent.com/stakery/stakery/master/assets/stakery-logo-256.png" width="40"> | [Stakery](https://stakery.io) | Staking around the clock. Berlin-based. | @stakery.betanet | 10% | DE | [@stakery](https://explorer.betanet.near.org/accounts/stakery) | no |
| | George | Stake is open to everyone | @bbaa.betanet | 1% | CN | [@bbaa](https://wallet.betanet.near.org/profile/bbaa) | no |
| | jukblr1991 | World of stake  | @kvasik.betanet | 10% | BY | [@kvasnear](https://explorer.betanet.near.org/accounts/kvasnear) | no |
| | casualbrooks | casual verifying | @casualbrooks.betanet | 9% | US | [@casualbrooks](https://explorer.betanet.near.org/accounts/casualbrooks.betanet) | no |
| <img src="https://avatars2.githubusercontent.com/u/59943323?s=400&u=b18e7492a3dc011818808de7f78cbf41992b50a6&v=4" width="80"> | [Projecttent](https://projecttent.com) | Staking as a service. Validator on Celo and other next-gen networks. | @projecttent.betanet | 10% | US | [@validator.projecttent.betanet](https://explorer.betanet.near.org/accounts/validator.projecttent.betanet) | no |
|  | goodstake1 | Honest Validator node from India | @lalitnear.betanet | 10% | IN | [@goodstake1](https://explorer.betanet.near.org/accounts/goodstake1) | no |
| | | | | | | | |
| | | | From here, the list contains validators who didn't deploy a [staking pool](https://github.com/near/initial-contracts/) yet | | | | |
| | | | | | | | |
| | NUC "Home Alone" | A small, Intel NUC-based validator node, connected to a residential Interenet connection | @nuc.test | -% | US | | |
| | [Validators.Online ](https://validators.online/)| - | @validatorsonline.test | -% | MY | | |
| <img src="http://www.itokenpool.com/img/logo.png" width="40"> | [itokenpool](http://www.itokenpool.com/) | Blockchain Pos Node service provider. Our team members mainly come from Tsinghua University. | @itokenpool.betanet | -% | CN | | |
| <img src="https://avatars1.githubusercontent.com/u/52304443?s=460&u=9ece86f9785107cc1d3203af48ed7528ae7ba18e&v=4" width="40"> | c29r3 | -  | @c29r3.betanet | -% | RU | | |
| | stateb | Professional validator | @stateb.betanet | -% | RU | | |
| <img src="https://github.com/Moonlet/wallet-app/raw/master/ios/Moonlet/Images.xcassets/AppIcon.appiconset/Icon-App-83.5x83.5%402x.png" width="40"> | [Moonlet](https://moonlet.io) | Moonlet is a cryptocurrency wallet that allows you to stake easily and secure different crypto assets. Available on iOS, Android and Google Chrome. | @moonlet.test | -% | RO | | |
| <img src="https://pbs.twimg.com/profile_images/926173411482701824/HPFBrW_6_400x400.jpg" width="40"> | [Staking Facilities](https://stakingfacilities.com/) | Staking Facilities is an enterprise-grade validator based in Germany. We operate secure, reliable and performant bare-metal Proof of Stake infrastructure, distributed across multiple datacenter sites. | @stakingfacilities.betanet | -% | DE | | |
| <img src="https://pbs.twimg.com/profile_images/947826924029665281/NYMOrEIV_400x400.jpg" width="40"> | [Zavodil](https://zavodil.ru/category/near/) | [Near Protocol Russian Community](https://t.me/near_protocol). Lowest fees. Trusted validator. | @zavodil.betanet | -% | RU | | |
| | Vnode | Happy and easy Staking! | @volvos60909.test | -% | SG | | |
| | Gamah | Home server node! | @gamah.betanet | -% | FR | | |
| | Blaze | - | @blaze.betanet | -% | US | | |
| <img src="https://github.com/june07/NiM/blob/master/icon/icon128@3x.png?raw=true" width="40"> | [NiM](https://june07.com/nim) | Node.js tooling and other stuff.  Based in The Town (Oakland, CA). | @a.betanet | -% | US | | |
| <img src="https://pbs.twimg.com/profile_images/527176025931649024/sygiFNaR_400x400.jpeg" width="40"> | [Erkan](https://twitter.com/erknfe) | If you can't find a way to make money while you sleep, you'll work until you die. | @erkan.betanet | -% | TR | | |
| <img src="https://raw.githubusercontent.com/Anonstake/Anonstake/master/anonstake.png" width="40"> | [Anonstake](https://anonstake.com/) | Anonstake is a staking infrastructure provider for Proof-of-Stake blockchains. We work hard to provide secure, reliable and anonymous service. | @anonstake | -% | SI | | |
| | manhplus | - | @humanh.betanet | -% | UA | | |
| <img src="https://cdn.pixabay.com/photo/2013/07/13/10/45/vendetta-157703_960_720.png" width="40"> |  - | People shouldn't be afraigt of their government | @arno_nym.betanet | -% | NL | | |
| | pathrock | testing staking near - teacher - loving to learn | @pathrock.test | -% | DE | | |
| <img src="http://medishares.oss-cn-hongkong.aliyuncs.com/logo/math/MathWallet_App_Icon.png" width="40"> | [MathWallet](https://mathwallet.org) | Math Wallet is a powerful and secure universal crypto wallet that enables storage of all BTC, ETH/ERC20, NEO/NEP5, EOS/ENU/Telos, TRON, ONT, BinanceChain, Cosmos/IRISnet tokens, supports cross-chain token exchange and a multi-chain dApp store. | @math.betanet | -% | CN | | |
| | System_S | Make Staking Great Again! | @system_s.betanet | -% | RU | | |
| | Only25x |  | @only25x.betanet | -% | US | | |
| | crazylandd | I am hero! | @crazylandd.betanet | -% | RU | | |
|  (x)(x) | Skywalker | A new hope | @skywalker.betanet | 0% | RU | | |
| <img src="https://image.prntscr.com/image/gh3ymDG6QbmLmCAeW3f2Kw.jpg" width="40"> | E2ard | A penny saved is a penny earned! | @e2ard.betanet | -% | BY | | |
| <img src="https://i.imgur.com/PPnrjaD.jpg" width="40"> | blxpro | come and stake | @blxpro.betanet | -% | RU | | |
| | olegjan2008 | Let's validate! | @olegjan20008.betanet | -% | RU | | |
| | tanderug | Easy Money - stake it here  | @tanderug5.betanet | -% | RU | | |
| <img src="https://stakin.com/assets/icon/logo256.png" width="40"> | Stakin | Your Trusted Crypto Rewards | @stakin.betanet | -% | UK | | |
| <img src="https://i.imgur.com/3pGh2qD.png" width="40"> | Jupiter | A planet of staking | @crasengover.betanet | 5% | UA | | |
| <img src="https://previews.123rf.com/images/uasumy/uasumy1706/uasumy170600018/80558815-letter-b-logo-modern-design-element-template-paper-material-idea-identity-mark-business-card-tech-bl.jpg" width="40"> | alphabet1 | - | @alphabet1.betanet | -% | RU | | |
| https://imgur.com/CXlFA5x  | cryptomilion | Stake with me | @cryptomilion.betanet | -% | UA | @cryp | |
| <img src="https://imgur.com/HvL3dPt" width="40"> | chernopyatko | Near the beginning of something beautiful | @chernopyatko.betanet | 5% | RU | | |
| | blink | No money - no honey | @neartest2.betanet | 10% | RU | | |
| <img src="https://i.imgur.com/21fOAek.jpg" width="40"> | Kodvas | Stake is open to everyone! | @kodvas.betanet | 10% | UA |  | |
| <img src="https://trello-attachments.s3.amazonaws.com/5aceaf1164c86a15f5956cda/5ec8bfe10b5375695794efa1/a6e59225ea31918ee44f6f5c09f086d6/caos.jpeg" width="40"> | Caos | Blockchain developer | @caos.betanet | 10% | ZH | | |
| | alexgryb | if you had faith even as small as a mustard seed, you could say to this mountain, ‘Move from here to there,’ and it would move. Nothing would be impossible | @alexgryb.betanet | 10% | UA | | |
| | [Bibiwang](https://bibiwang.com) | A professional blockchain information website from China | @bibiwang.betanet | 3% | CN | | |
| | @active907.betanet |  | @active907.betanet | 10% | UA | | |
| <img src="https://i.imgur.com/lsGrsIV.jpg" width="40"> | [Alive29](https://keybase.io/alive29) | Secured and trusted validator | [@alive29.betanet](https://explorer.betanet.near.org/accounts/alive29.betanet) | 10% | RU | | |
| <img src="https://masternode24.de/wp-content/uploads/2020/05/LOGO-Github.jpg" width="40"> | [Masternode24](https://masternode24.de) | Staking Provider from Germany | @masternode24.betanet | 10% | DE | @masternode24 | no | | |
| | Alex Kodiak | Life begins at the end of your WiFi zone | @bears.betanet | 10% | RU | | |
| | alexgryb | if you had faith even as small as a mustard seed, you could say to this mountain, ‘Move from here to there,’ and it would move. Nothing would be impossible | @alexgryb.betanet | 10% | UA | | |
| | [Bibiwang](https://bibiwang.com) | A professional blockchain information website from China | @bibiwang.betanet | 3% | CN | | |
| | @active907.betanet |  | @active907.betanet | 10% | UA | | |
| <img src="https://i.imgur.com/lsGrsIV.jpg" width="40"> | [Alive29](https://keybase.io/alive29) | Secured and trusted validator | @alive29 | 10% | RU | | |
| | dmytrokonon |  | @dmytrokonon.betanet | 10% | UA | | |
| | kr1ps (Dominican-Crypto) | Dominican Crypto development Team | @kr1ps.betanet | -% | DR | | |
| | andrew_builder |  | @andrew_builder.betanet | 10% | UA | | |
| <img src="https://s3.amazonaws.com/keybase_processed_uploads/204d1abfeb21ece2e0b56e1ad8304305_360_360.jpg" width="40"> | [GRom81](https://keybase.io/grom81) | Professional and trusted validator | [@grom818181.betanet](https://explorer.betanet.near.org/accounts/grom818181.betanet) | 10% | RU | | |
| | nazar92 | Crypto trader group | @nazar92.betanet | 10% | UA | | |
| O_O | InstaPool |It could be real Instagram but it's too early | @mamayavkino.betanet | -% | RU | | |
| :D | hekit-cyber-pool |build crypto future | @hekit.betanet | 10% | UA | | |
| ;\ | papsan-pool |Validating in the future | @papsan1.betanet | 10% | UA | | |
| O_O | Nearcola | another validator | @bonsfi.betanet | -% | DE | | |
| | stake-machine | For the wealth of the ecosystem! | @akme.betanet | 10% | RU | | |
| | [AtreyaVC](https://atreya.vc) | Running NEAR  | @stk.atreyavc.betanet | 10% | IN | | |
| <img src="https://sparkpool-public-files.oss-cn-hangzhou.aliyuncs.com/sparkpool.png" width="40"> | [Sparkpool](https://www.sparkpool.com) | The keeper of blockchain networks. | [@sparkpool.test](https://wallet.betanet.near.org/sparkpool.test) | CN |
| :/ | Ethan | Bringing staking to everyone in the plug and play manner!  | @ethanwainer.betanet | -% | GB | | |
| <img src="https://i.loli.net/2020/07/31/guxsk2r3OTbi5t9.png" width="40"> | [Blockpower](https://www.blockpower.capital) | Genius stake the world | [@blockpower.betanet](https://explorer.betanet.near.org/accounts/blcokpower.betanet) | 1% | US | | |
| <img src="https://github.com/syncnode-srl/syncnode/blob/master/logo2.jpeg"> | syncnode | validating from the early days of PoS  | @syncnode.betanet | 10% | RO | | |
| <img src="https://www.nodeasy.com/nodeasy_360_360.jpg" width="40"> | [Nodeasy](https://www.nodeasy.com/) | Nodeasy is a website dedicated to statistics, monitoring masternode cryptocurrencies and providing related node building services. | [@nodeasy](https://explorer.testnet.near.org/accounts/nodeasy) | CN |
| V | DenysOf | Learning by doing | @denysof-pool.stakehouse.betanet | -% | IE | | |
| | KazanPool | Stake with us, it's easy! | @kazantip.betanet | 10% | RU | | |
| <img src="https://github.com/SmartStake/info/blob/master/logo/smartstake.png" width="40"> | [Smart Stake](https://smartstake.io) | Smart Stake is a transparent, professional, and feature rich staking service provider. We provide staking service with realtime performance assessment & analytics tools. | @smartstake.betanet | 10% | CA | | |
| <img src="http://eostribe.io/images/logo.png" width="40"> | TRIBE | Crypto Tribe - Experienced POS Validator | @tribe.betanet | 10% | US | [@tribe](https://explorer.betanet.near.org/accounts/tribe.betanet) | yes |
| ChainGo | ChainWang | Learning to staking | @wangyaxing.stakehouse.betanet | 35% | CN | | |

Notes:
- `Pool` attribute is referred to the id of delegation contract. As a validator, you can deploy the reference [Staking Pool Contract](https://github.com/near/initial-contracts), or create your own.
- `Locked` means that there are no access keys allowing the contract code to be re-deployed. If `near keys` of your Staking Pool is not `0`, your pool is not locked. See the Stake Wars [challenge 001](challenges/challenge001.md) for more information.

'''
'''--- challenges/challenge001.md ---
# Stake Wars Challenge 001
Published on: May 25th 2020
Updated on: July 22nd 2020

Create your BetaNet wallet, deploy your node, and correctly configure your staking pool.
This is designed to be your very first challenge: use it to understand how the staking on NEAR works, and how to run a node.

## Acceptance Criteria

1. Connect `near-cli` to your BetaNet wallet
2. Deploy your NEAR node
3. Launch your Staking Pool

## 1.Connect `near-cli` to your BetaNet wallet

You need [near-cli](https://github.com/near/near-cli), a Node.js application that relies on nearlib to generate secure keys, connect to the NEAR platform and send transactions to the network on your behalf.
You don't have to install near-cli on your validator node - on the contrary, it's suggested to keep your staking wallet on a different machine.

**Heads up:** please be sure to have Node version 10+ installed before trying to run near shell

1. Download `near-cli` with `npm install -g near-cli`
2. Set your NODE_ENV to betanet. You can do this in `bash` with the command `export NODE_ENV=betanet`
3. Run `near login` and copy/paste in your browser the link from the instructions on the screen
4. If you are not automatically redirected, manually type the `account_ID` of your BetaNet account in near-cli

**Heads up:** Even if you see an `ERR_CONNECTION_REFUSED` error in your browser, your login may be successful. So complete the step 5 and manually type your `account_ID` in near-cli.

This process is needed to authorize a `signer key` on your `account_ID`, enabling near-cli to control your wallet.

## 2.Deploy your NEAR node

Setup your validator node following the hardware requirements [here](https://docs.near.org/docs/roles/validator/hardware). If you use a firewall, set the rules to allow traffic to port `24567` from all IPs (0.0.0.0/0).
Once your machine is ready, install [nearup](https://github.com/near/nearup). Nearup will provide simplified tools to run NEAR nodes, and is designed to help validators start their nodes, and developers who need a local RPC for their applications.

Take your time to understand how to manually update [nearcore](https://github.com/nearprotocol/nearcore), and how to properly use the command `nearup betanet --nodocker --binary-path` (see below for contribution opportunities).
To connect your node to `betanet` download and compile the latest [nearcore release](https://github.com/nearprotocol/nearcore/releases):
- BetaNet releases of nearcore are mapped with the tag `x.y.z-beta`
- TestNet releases of nearcore are mapped with the tag `x.y.z-rc`

**Heads up:** at this point, you have to decide the name of your staking pool!
If your wallet is `nearkat.betanet`, you will have to choose a specific name for the staking pool, such as `nearkat_staking`. Since in the [step 3.2](challenge001.md#32-deploy-your-staking-pool) you will use the staking pool factory, your name will become `stakingPool_ID` + `stakehouse.betanet`.

The first time you run `nearup` the application will ask your staking pool account ID, which is where you have to type `nearkat_staking.stakehouse.betanet` if the name of the pool is just `nearkat_staking`:
```
Enter your account ID (leave empty if not going to be a validator):
```
As soon as you press enter nearup with automatically boot your validator node with the name you decided above. 

When nearup completed the boot process, export your validator key by typing the command `cat ~/.near/betanet/validator_key.json | grep public_key`, as it will be needed below to configure the staking pool contract.

## 3.Launch your Staking Pool

Once your validator node is running under the name you decided, you have to connect the staking pool to it. The steps below will guide you in this process:

### 3.1. Preparation: unstake any previously locked funds

If you were already a validator on BetaNet, and you are using the legacy `near stake` command, follow the commands below before proceeding:
1. Issue `export NODE_ENV=betanet` command before performing any unstaking, so near-cli will connect to `betanet` RPC.
2. Unstake your previously locked funds, by setting stake to zero: `near stake account_ID <staking public key> 0` - where the public key and the account ID are the same you used when you initially issued the staking transaction.

Please note that your staked funds will require three epochs to be available (9 hours on BetaNet). Once the funds are unlocked, you can stop nearup with the command `nearup stop`, cleanup the folder `~/.near/betanet` on your validator node, and start nearcore again, following the process from the step 2 above.

If you are running an old version of the staking pool jump to [step 3.4](challenge001.md#34-update-an-old-version-of-the-staking-pool-optional) before proceeding.

Once your node is not anymore a validator using the legacy `near stake` command you can begin deploy the staking pool.

### 3.2. Deploy your staking pool

Updated July 22nd: to accommodate MainNet Restricted requirements, we introduced a [Staking Pool Factory](https://github.com/near/core-contracts/tree/master/staking-pool-factory). This smart contract will deploy the staking pool for you, and will _whitelist_ the contract to receive and send tokens to your wallet. If you have any previous release of the staking pool, we strongly suggest to deploy this new version and dismiss the previous staking pool. 

Updated August 21st: You can use the staking pool factory via this web interface [Near Examples: Staking Pool Factory (betanet)](https://near-examples.github.io/staking-pool-factory) or you can invoke the factory's `create_staking_pool` function from the command line using `near-cli`

The staking pool factory is a normal smart contract that can be invoked with the `call` function on near-cli:
```
near call stakehouse.betanet create_staking_pool '{"staking_pool_id":"<POOL_ID>", "owner_id":"<OWNER_ID>", "stake_public_key":"<VALIDATOR_KEY>", "reward_fee_fraction": {"numerator": <X>, "denominator": <Y>}}' --account_id <OWNER_ID> --amount 30 --gas 300000000000000
```
Where:
* `stakehouse.betanet` is the staking pool factory contract
* `POOL_ID` is the name of the staking pool contract. If your validator name is `nearkat` the result will be `nearkat.pool.6fb1358`
* `OWNER_ID` is the owner of the pool, who's authorized to change the stake public key and the fees
* `VALIDATOR_KEY` is the public key found in the file `~/.near/testnet/validator_key.json` on the machine running the node
* `{"numerator": <X>, "denominator": <Y>}` set the validator fees. To set 10% of fees x=10 and y=100
* `--amount 30` attaches 30 $NEAR to the transaction, as a reserve to pay the contract storage
* `--gas 300000000000000` specifies the gas for the transaction (optional!)

### 3.3. Delegate your own unstaked funds to the staking pool

1. From your near-cli machine, deposit the funds from your master account to the staking pool: `near call stakingPool_ID deposit '{}' --accountId account_ID --amount 100`
	Where 100 is the amount in NEAR tokens you want to deposit.
2. Stake your deposited funds, with the command `near call stakingPool_ID stake '{"amount": "100000000000000000000000000"}' --accountId account_ID`

**Heads up:** the amount that you deposit is in $NEAR, while the amount in the stake argument is in YoctoNEAR. `1` $NEAR is `1*10^24` YoctoNEAR (1 followed by 24 zeroes). Therefore:

| NEAR |  YoctoNEAR  | YoctoNEAR |
| ---- | ----------- | ----------------|
| `1` | `1*10^24` | `1000000000000000000000000` |
| `10` | `1*10^25` | `10000000000000000000000000` |
| `100` | `1*10^26` | `100000000000000000000000000` |
| `1,000` | `1*10^27` | `1000000000000000000000000000` |
| `10,000` | `1*10^28` | `10000000000000000000000000000` |

We strongly suggest to get confidence with the `staking pool` contract, by reading more on the official initial-contracts repo on [Github](https://github.com/near/core-contracts/tree/master/staking-pool). Pay particular attention to the distinction between `stakingPool_ID` and `account_ID`.

### 3.4. Update an old version of the staking pool (optional)

The failsafe method is to deploy a new `stakingPool_ID` from step 3.2 of this challenge, unstake your funds from the old pool with the command `near call stakingPool_ID unstake`, and use them on the new pool. Only when the new node becomes validator, you can shut down the old node, and remove the pool.

At a high level, the steps to follow are:

1. View the total funds locked in the pool: `near view stakingPool_ID get_account_staked_balance '{"account_id": "account_ID"}'`
1. Unstake all your funds from the pool: `near call stakingPool_ID unstake '{"amount": "100007548461634906498130995"}' --accountId account_ID`
2. **IMPORTANT** Wait for 3 epochs (9 hours on BetaNet) to withdraw. Check if the stake is unlocked with the command `near view stakingPool_ID is_account_unstaked_balance_available '{"account_id": "account_ID"}' --accountId account_ID`
3. Once your funds are unlocked, withdraw them with the command `near call stakingPool_ID withdraw '{"amount": "100007548461634906498130995"}' --accountId account_ID`

Once completed, you are ready to get back to the step 3.2 and deploy a new staking pool contract. You may use the [Staking Pool Cheatsheet](../staking_cheatsheet.md) as a quick reference to use your staking pool.

## Contribution Opportunities

Do you want to earn extra tokens? We have contribution opportunities available below! 

Reply to the challenges application thread on [Github](https://github.com/nearprotocol/stakewars/issues/350) specifying:
- which contribution you want to do, and the link to the challenge
- the type of document you will release
- the date when you will publish the content (you can postpone a few days, no worries)

Once your work is done, you will be added to the list below. Please note that rewards in tokens will need to pass basic KYC checks from NEAR Foundation, and comply with regulations.

### List of contributions
**Heads Up:** No more contributions are accepted, except the ones already posted on https://portal.near.org before October 2nd. You are free to add new ones without receiving token rewards!

| Abstract | Description                    | Contributor | Publication | Link | NEAR Tokens |
| -------- | ------------------------------ | ----------- | ----------- | ---- | ----------- |
| How to compile nearcore | Create a tutorial, in the form of a video, a blogpost or Github document, that explains how to clone, compile and run `nearcore` from the beta branch, and prove that you can become validator with the process. Contributions in other languages are encouraged, but considered case by case basis. Updates to this guide, reflecting any updates of the tools involved, will be paid a % of the initial bounty per each revision, up to once per month, until Stake Wars is over. | @htafolla | Jun 8 2020 | PRs at [1](https://github.com/nearprotocol/stakewars#quickstart), [2](https://docs.near.org/docs/validator/staking), [3](https://docs.near.org/docs/local-setup/running-testnet) | 1,000 |
| How to compile nearcore | Same as above | @navneetlakra | Jun 8 2020 | [GitHub](https://github.com/mutedtommy/near-docs/blob/master/compile-nearcore.md) | 1,000 |
| How to compile nearcore | Same as above | @georgec138 | Jun 8 2020 | [GitHub](https://github.com/georgec138/near-docs/blob/master/COMPILE-NEARCORE_cn.md) | 1,000 |
| How to compile nearcore | Same as above | @narniec | Jun 8 2020 | [Medium](https://medium.com/@narniec2020/%D0%B7%D0%B0%D0%BF%D1%83%D1%81%D0%BA-%D0%BD%D0%BE%D0%B4%D1%8B-near-%D0%B2-%D1%82%D0%B5%D1%81%D1%82%D0%BE%D0%B2%D0%BE%D0%B9-%D1%81%D0%B5%D1%82%D0%B8-betanet-a4d58c9a7bb0) | 1,000 |
| How to compile nearcore | Same as above | @wjdfx | Jun 15 2020 | [Jianshu](https://www.jianshu.com/p/c962edcb1099) | 1,000 |
| How to compile nearcore | Same as above | @dreamstaker | Jun 23 2020 | [Medium](https://medium.com/@nodesanna/stake-wars-challenge-001-d87d207db948) | 1,000 |
| How to compile nearcore | Same as above | @marshall-d-teach | Jul 1 2020 | [Github](https://github.com/marshall-d-teach/near-doc/blob/master/create-validator.md) | 1,000 |
| How to compile nearcore | Same as the above | @imnisen | Jul 6 2020 | [Github](https://github.com/imnisen/near-stakewars-guide/blob/master/challenge001-how-to-compile-nearcore.org) | 1,000 |
| How to compile nearcore | Same as the above | @Lalit15 | Jul 21 2020 | [Medium](https://medium.com/@coolphil15/launch-near-node-on-near-betanet-test-network-4fcd810a71b5) | 1,000 |
| How to compile nearcore | Same as the above | @qwerspe | Jul 21 2020 | [Medium](https://medium.com/@qwerspe/compile-nearcore-and-create-validator-338fbf471ec0) | 1,000 |
| How to compile nearcore | Same as the above | @48cfu | Aug 24 2020 | [GitHub](https://github.com/48cfu/near-documentazione/blob/master/diventare-validatore.md) IT | 1,000 |
| How to compile nearcore | Same as the above | @mabalaru | Sep 17 2020 | [Medium](https://medium.com/@inotel/compile-nearcore-and-create-validator-6169c16838ee) EN | 1,000 |
| How to compile nearcore | Same as the above | @youlaiwuqu | Sep 7 2020 | [Jianshu](https://www.jianshu.com/p/d00033c83063) | 1,000 |
| How to compile nearcore | Ukrainian guide with video: сompile nearcore and deploy stacking pool | @Cryptomilion | Sep 23 2020 | [Medium](https://medium.com/@shiverov/%D0%B7%D0%B0%D0%BF%D1%83%D1%81%D0%BA-%D0%BD%D0%BE%D0%B4%D0%B8-nearcore-near-%D0%B2-%D1%82%D0%B5%D1%81%D1%82%D0%BE%D0%B2%D1%96%D0%B9-%D0%BC%D0%B5%D1%80%D0%B5%D0%B6%D1%96-betanet-216415954c4e) | 1,000 |
| How to compile nearcore | Same as above | @decemtk | Oct 01 2020 | [Bihu](https://bihu.com/article/1192815460)  | 1,000 |
| How to compile nearcore | Explainer video | @zavodil | Oct 24 2019 | [Youtube RU](https://youtu.be/ag037Vh46ls?t=582)  | 1,000 |
| How to compile nearcore | Beginners guide | @zavodil | [May 05 2019](https://github.com/zavodil/cryptasutra/commit/719d3f3598c0b225e8b9cebb3add64618f5126b2) | [Guide RU](https://nodes.cryptasutra.com/near-protocol/ustarevshee/nearup)  | 1,000 |
| Explain NEAR keys | Explain in the form of a video, a blogpost or Github document how `near login` works, how the authorization keys are generated, and how you can manage their backup and restore properly. Show in the guide the proof that you were able to run `near shell` on a different machine, without authorizing a new key. Contributions in other languages are encouraged, but considered on a case by case basis. Updates to this guide, reflecting any updates of the tools involved, will be paid a % of the initial bounty per each revision, up to once per month, until Stake Wars is over.  | @narniec | June 12 2020 | [Medium](https://medium.com/@narniec2020/near-shell-backup-%D0%BA%D0%BB%D1%8E%D1%87%D0%B5%D0%B9-b30e8ed1d39d); [Youtube](https://www.youtube.com/watch?v=VHtzBjbmzT0&feature=youtu.be) | 1,000 |
| Explain NEAR keys | Same as above | @wjdfx | June 15 2020 | [Jianshu](https://www.jianshu.com/p/f238b7049cb9) | 1,000 |
| Explain NEAR keys | Same as above | @georgec138 | June 23 2020 | [Github](https://github.com/georgec138/near-docs/blob/master/Explain-NEAR-keys_cn.md) | 1,000 |
| Explain NEAR keys | Same as above | @bonsfi | June 23 2020 | [Medium](https://link.medium.com/LQTQbsABy7) | 1,000 |
| Explain NEAR keys | Same as above | @marshall-d-teach | Jul 6 2020 | [Github](https://github.com/marshall-d-teach/near-doc/blob/master/explain-near-keys.md) | 1,000 |
| Explain NEAR keys | Same as above | @Viacheslav198 | Jul 7 2020 | [Github](https://github.com/Viacheslav198/near/blob/master/keys.md) | 1,000 |
| Explain NEAR keys | Same as above | @Vasya-krypto | July 21 2020 | [Medium](https://medium.com/@orang3club/explain-near-keys-737162914413) | 1,000 |
| Explain NEAR keys | Same as above | @Lalit15 | July 21 2020 | [Medium](https://medium.com/@coolphil15/how-to-generate-near-keys-using-near-shell-and-authorize-access-6b114003e9d) | 1,000 |
| Explain NEAR keys | Same as above | @48cfu | Aug 24 2020 | [GitHub](https://github.com/48cfu/near-documentazione/blob/master/chiavi-spiegate.md) IT | 1,000 |
| Explain NEAR keys | Same as above | @everuner | Sept 3 2020 | [Medium](https://medium.com/@serj_czech/explain-near-keys-845c9ad7b13d) | 1,000 |
| Explain NEAR keys | Same as above | @rozum-dev | Sept 5 2020 | [Medium](https://medium.com/@dmytro.rozum/дещо-про-ключі-near-2a94888a1ffa) UA | 1,000 |
| Explain NEAR keys | Same as above | @yes-filippova | Sept 13 2020 | [Medium](https://medium.com/@yes.filippova/%D0%B3%D0%B5%D0%BD%D0%B5%D1%80%D0%B0%D1%86%D1%96%D1%8F-%D0%BA%D0%BB%D1%8E%D1%87%D1%96%D0%B2-near-%D1%82%D0%B0-%D1%97%D1%85-%D0%B1%D0%B5%D0%BA%D0%B0%D0%BF-963cd6ab563?source=friends_link&sk=46b4d78cdfcf168234894e6df0fa9825) UA | 1,000 |
| Explain NEAR keys  | Same as above | @mabalaru | Sep 17 2020 | [Medium](https://medium.com/@inotel/explain-near-keys-c3bda285ebb2) EN | 1,000 |
| Explain NEAR keys | Same as above | @decemtk | Oct 01 2020 | [Bihu](https://bihu.com/article/1983456602)  | 1,000 |
| Explain NEAR keys | Same as above | @youlaiwuqu | Oct 1 2020 | [GitHub](https://github.com/youlaiwuqu/Explain-NEAR-keys/blob/main/README.md) | 1,000 |
| Explain NEAR keys  | Same as above | @qwerspe | Oct 3 2020 | [Medium](https://medium.com/@qwerspe/near密钥解析-b4440133d8e7) | 1,000 |
| Explain NEAR keys  | Same as above | @zavodil | [May 11 2020](https://github.com/zavodil/cryptasutra/commit/5438793d558125668954a8429be4922ae53a83b0) | [Guide RU](https://nodes.cryptasutra.com/near-protocol/ustarevshee/staking) | 1,000 |

## Next Challenge
Enroll your staking pool, receive your delegation, and maintain your validator status: [challenge002](challenge002.md)

'''
'''--- challenges/challenge002.md ---
# Stake Wars Challenge 002
Published on: May 25th 2020

Enroll your staking pool, receive your delegation, and maintain your validator status!
This challenge is designed to learn how to keep track of your validator, and make your delegators happy.

## Acceptance Criteria

1. Enroll your staking pool
2. Receive your delegation
3. Check your validator status
4. Collect your fees!

## 1.Enroll your staking pool
As soon as you completed the Stake Wars [Challenge 001](challenge001.md), your node is ready to be on the roster of Stake Wars, and receive your first delegation. 
The process will need some basic expertise with `git`. Follow the instructions in the file [VALIDATORS.md](../VALIDATORS.md), and submit a pull request to the branch `update-validators-list`. 

## 2.Receive your delegation
NEAR team, and other Stake Wars participants, will keep an eye on the validators who deployed the staking pool, and will delegate some tokens to the ones of their choice. At the moment of writing, the cost of a validator seat on BetaNet is higher than 70,000 $NEAR, and there are only 100 seats available. With more than 120 validators already on the list (and growing), it will be difficult for you to attract delegation.

This step of the challenge requires that you have at least 100 tokens alread delegated to your staking pool. If you participated in the previous Stake Wars, and you already received BetaNet tokens in the past weeks, you can delegate all of them to your own pool.

Understand how to use the comamnd `near delete-key` from near-cli, and lock on your staking pool. Otherwise your pool will be listed, but you will not receive any delegation.
To verify if your pool is locked, use the command `near keys stakingPool_ID | grep length`. If the result is different than `[length]: 0`, your pool is not locked.

## 3.Check your validator status
You have five different ways to verify that your staking pool is successfully working, and you are a validator:
1. Check on BetaNet block explorer
2. Use the `near validators next | grep stakingPool_ID` on near-cli
3. Control the locked balance in your account, using `near state stakingPool_ID | grep locked` command
4. Check that `nearup` logs are displayng an uppercase "V"
5. A query to the JSON RPC using the `validator` endpoint

### 3.1.Check on the betanet block explorer
Visit the [betanet explorer](https://explorer.betanet.near.org) and check that your staking transaction succeeded:
![alt text](../media/near_explorer_staking_pool.png "Explorer successful transaction")

### 3.2.Use near-cli
Use the command `near validators current` and `near validators next` to know who is currently running the network, a who will join next. The command `near validators next | grep stakingPool_ID` will show if your node will keep its seat in the next epoch.
Use `near validators next | grep 'seat price'` to know how big is the stake to become a validator.

### 3.3.Control the locked balance
Use the command `near state stakingPool_ID` to see the locked balance in your staking pool, and control if it is sufficient to earn a seat as a validator.

### 3.4.Check your nearup logs
Nearup logs can show if you are a validator or not. The `V/71` below shows that your node is one of the 71 validators running the network:
![alt text](../media/nearcore_logs_wide.png "nearcore validator logs")

### 3.5.Query the JSON RPC
A combination of `curl` and `jq` can give you a trove of information about present and future validators:

```bash
curl -d '{"jsonrpc": "2.0", "method": "validators", "id": "dontcare", "params": [null]}' -H 'Content-Type: application/json' https://rpc.betanet.near.org -v | jq 
```

Instead of using only `jq`, add the filter `jq .result.current_proposals` to see the staking transactions that are pending.

### 4.Collect your fees!

If you configured your pool correctly, and you control the pool owner wallet, you should be able to unstake and withdraw the fees collected by your pool. These fees will be listed as normal stake in the account used as the owner of the staking pool.
Use the command `near view stakingPool_ID get_account_total_balance '{"account_id": "account_ID"}' --accountId=account_ID` to see the balance of the pool owner, and call the delegator functions to unstake and withdraw your funds.

## HEADS UP!

Always check that your `stakingPool_ID` and your validator node use the same ID and public_key. Otherwise, you will receive your delegation, your validator will receive a seat, but your node will not be able to create blocks!

With the command `near validators current | grep ' 0%'` you see those validators who got a seat, but generated 0% of the blocks. This means they will be kicked out in the next epoch (as you can see in `near validators next | grep 'Kicked'`), and their delegators will lose rewards.

Use the command `cat ~/.near/betanet/validator_key.json | grep 'public_key\|account_id'` and verify they are **exactly the same** of the values in current proposals (see `3.5` above). NEAR team (and other delegators) will unstake their tokens if you misconfigure your pool and you produce 0 blocks.

## Contribution Opportunities

Do you want to earn extra tokens? We have contribution opportunities available below! 

Reply to the challenges application thread on [Github](https://github.com/nearprotocol/stakewars/issues/350) specifying:
- which contribution you want to do, and the link to the challenge
- the type of document you will release
- the date when you will publish the content (you can postpone a few days, no worries)

Once your work is done, you will be added to the list below. Please note that rewards in tokens will need to pass basic KYC checks from NEAR Foundation, and comply with regulations.

### List of available contributions
**Heads Up:** No more contributions are accepted, except the ones already posted on https://portal.near.org before October 2nd. You are free to add new ones without receiving token rewards!

| Abstract | Description                    | Contributor |  Date  | Link | NEAR Tokens | Maintenance | Languange |
| -------- | ------------------------------ | ----------- | ------ | ---- | ----------- | ----------- | --------- |
| Enroll your node | Create a tutorial, in the form of a video, a blogpost or Github document, that shows how to do a pull request to the VALIDATORS.md file, lock your contract, delegate some tokens, become a validator, and check that your pool and your node are correctly configured. Contributions in other languages are encouraged, but considered on a case by case basis. Updates to this guide, reflecting any updates of the tools involved, will be paid a % of the initial bounty per each revision, up to once per month, until Stake Wars is over. | @georgec138 | Jun 11 2020 | [Github](https://github.com/georgec138/near-docs/blob/master/Enroll-your-node_cn.md) | 1,000 | 10% | CN |
| Enroll your node | Same as above| @bonsfi | Jun 15 2020| [Github](https://github.com/georgec138/near-docs/blob/master/Enroll-your-node_cn.md) | 1,000 | 10% | ES |
| Enroll your node | Same as above | @wjdfx | Jun 15 2020| [Jianshu](https://www.jianshu.com/p/944a725c3d50) | 1,000 | 10% | CN |
| Enroll your node | Same as above | @dreamstaker | Jun 23 2020 | [Medium](https://link.medium.com/U4D8yiNBy7 ) | 1,000 | 10% | EN |
| Enroll your node | Same as above | @mabalaru | Sep 17 2020 | [Medium](https://medium.com/@inotel/enrol-your-node-c79d8d26d622) | 1,000 | 10% | EN |
| Enroll your node | Same as above | @narniec | Jul 1 2020 | [Medium](https://medium.com/@narniec2020/%D1%80%D0%B5%D0%B3%D0%B8%D1%81%D1%82%D1%80%D0%B0%D1%86%D0%B8%D1%8F-%D0%BD%D0%BE%D0%B4%D1%8B-%D0%B2-%D1%81%D0%B5%D1%82%D0%B8-near-84c7df7ee701) | 1,000 | 10% | RU |
| Enroll your node | Same as above | @marshall-d-teach | Jul 6 2020 | [Github](https://github.com/marshall-d-teach/near-doc/) | 1,000 | 10% | EN |
| Enroll your node | Same as above | @youlaiwuqu | Sep 8 2020| [Jianshu](https://www.jianshu.com/p/39709af55d8a) | 1,000 | 10% | CN |
| Enroll your node | Same as above | @rozum-dev | Sept 6 2020 | [Medium](https://medium.com/@dmytro.rozum/зареєструйте-свою-ноду-39be8334a512) | 1,000 | 10% | UA |
| Enroll your node | Same as above | @yes-filippova | Sep 13 2020| [Medium](https://medium.com/@yes.filippova/%D0%B2%D1%81%D1%82%D1%83%D0%BF-9754c948ca3d?source=friends_link&sk=cde4a7f92837c8716f6df2f64cae6e63) | 1,000 | 10% | UA |
| Enroll your node | Same as above | @decemtk | Oct 01 2020| [Bihu](https://bihu.com/article/1468231469) | 1,000 | 10% | CN |
| Enroll your node | Same as above | @qwerspe | Oct 3 2020| [Medium](https://medium.com/@qwerspe/enroll-near-node-83401c35c68e) | 1,000 | 10% | CN |
| Enroll your node | Same as above | @zavodil | Jun 2020 | [Guide](https://nodes.cryptasutra.com/near-protocol/ustarevshee/stakewars) | 1,000 | 10% | RU |
| Enroll your node | Same as above | @zavodil | Jun 2020 | [Guide](https://nodes.cryptasutra.com/near-protocol/ustarevshee/testnet-near) | 1,000 | 10% | RU |
| Manage the pool | Create a tutorial, in the form of a video, a blogpost or Github document, that shows how to update the parameters of the staking pool, such as the fees and the validator key. Show also how to collect the fees and unstake them. Contributions in other languages are encouraged, but considered on a case by case basis. Updates to this guide, reflecting any updates of the tools involved, will be paid a % of the initial bounty per each revision, up to once per month, until Stake Wars is over. | @wjdfx | Jun 15 2020| [Jianshu](https://www.jianshu.com/p/b6b954e121c0) | 1,000 | 10% | CN |
| Manage the pool | Same as above | @narniec | Jun 16 2020 | [Github](https://link.medium.com/o0nn4kVzy7) | 1,000 | 10% | RU |
| Manage the pool | Same as above | @mabalaru | Sep 17 2020 | [Github](https://github.com/mabalaru/near/blob/master/manage_the_pool.md) | 1,000 | 10% | EN |
| Manage the pool | Same as above | @Vasya-kripto | Jul 1 2020 | [Medium](https://medium.com/@orang3club/manage-your-staking-pool-80709494cc63)| 1,000 | 10% | EN |
| Manage the pool | Same as above | @marshall-d-teach | Jul 6 2020 | [Github](https://github.com/marshall-d-teach/near-doc/) | 1,000 | 10% | EN |
| Manage the pool | Same as above | @Viacheslav198 | Jul 7 2020 | [Github](https://github.com/Viacheslav198/near/blob/master/pool.md) | 1,000 | 10% | RU |
| Manage the pool | Same as above | @48cfu | Aug 24 2020 | [Github](https://github.com/48cfu/near-documentazione/blob/master/diventare-validatore.md) | 1,000 | 10% | IT |
| Manage the pool | Same as above | @zavodil | Jun 2020 | [Guide](https://nodes.cryptasutra.com/near-protocol/ustarevshee/staking-pool-contact) | 1,000 | 10% | RU |
| Manage the pool | Explain how to enroll your staking pool, receive your delegation, check your validator status, fees | @everuner | Aug 29 2020 | [Medium](https://medium.com/@serj_czech/%D0%BF%D1%83%D0%BB-%D1%81%D1%82%D0%B0%D0%B2%D0%BE%D0%BA-%D0%B4%D0%B5%D0%BB%D0%B5%D0%B3%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5-%D1%81%D1%82%D0%B0%D1%82%D1%83%D1%81-%D1%81%D0%B1%D0%BE%D1%80-%D0%BA%D0%BE%D0%BC%D0%B8%D1%81%D1%81%D0%B8%D0%B8-stake-wars-challenge-002-19c172b3d0)| 1,000 | 10% | EN |
| Manage the pool |  Same as above  | @Cryptomilion | Sep 05 2020 | [Medium](https://medium.com/@shiverov/near-stake-wars-challenge-002-%D1%80%D0%B5%D0%B3%D0%B8%D1%81%D1%82%D1%80%D0%B0%D1%86%D0%B8%D1%8F-%D0%BF%D1%83%D0%BB%D0%B0-%D0%B4%D0%B5%D0%BB%D0%B5%D0%B3%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5-%D1%81%D1%82%D0%B0%D1%82%D1%83%D1%81-%D0%B2%D0%B0%D0%BB%D0%B8%D0%B4%D0%B0%D1%82%D0%BE%D1%80%D0%B0-%D0%B8-%D1%81%D0%B1%D0%BE%D1%80-%D0%BA%D0%BE%D0%BC%D0%B8%D1%81%D1%81%D0%B8%D0%B9-52ba16aedb49)| 1,000 | 10% | RU |
| Manage the pool | Same as above | @youlaiwuqu | Sep 11 2020 | [Jianshu](https://www.jianshu.com/p/24b9220a3fc1) | 1,000 | 10% | CN |
| Manage the pool | Same as above | @georgec138 | Sep 28 2020 | [Github](https://github.com/georgec138/near-docs/blob/master/Manage-the-pool_cn.md) | 1,000 | 10% | CN |
| Manage the pool | Same as above | @decemtk | Oct 01 2020 | [Bihu](https://bihu.com/article/1737575265) | 1,000 | 10% | CN |
| Manage the pool | Same as above | @qwerspe | Oct 3 2020 | [Medium](https://medium.com/@qwerspe/manage-near-pool-508fe0c20bc7) | 1,000 | 10% | CN |
| Monitor uptime | Create a tutorial, in the form of a video, a blogpost or Github document, that shows how to automatically check the performance of your validator node, such as creating reports (per epoch, per day) and sending alerts via chat-bots or SMS if your node is stuck/kicked out and needs attention. Contributions in other languages are encouraged, but considered on a case by case basis. Updates to this guide, reflecting any updates of the tools involved, will be paid a % of the initial bounty per each revision, up to once per month, until Stake Wars is over. | @marco-sundsk | Jun 13 2020 | Github [EN](https://github.com/marco-sundsk/NEAR_DOC_zhcn/blob/master/StakeWar/near_monitor.md), [CN](https://github.com/marco-sundsk/NEAR_DOC_zhcn/blob/master/StakeWar/near_monitor_cn.md) | 1,000 | 10% | EN, CN |
| Monitor uptime | Same as above | @wjdfx | Jun 15 2020| [Jianshu](https://www.jianshu.com/p/6e197eeb63a0) | 1,000 | 10% | CN |
| Monitor uptime | Same as above | @marshall-d-teach | Jul 6 2020 | [Github](https://github.com/marshall-d-teach/near-doc/) | 1,000 | 10% | EN |
| Monitor uptime | Same as above | @masknetgoal634 | Aug 24 2020 | [Github](https://github.com/masknetgoal634/StakeWarsGuides/blob/master/Monitor-Uptime.md) | 1,000 | 10% | EN |
| Monitor uptime | Same as above | @youlaiwuqu | Sep 11 2020| [Jianshu](https://www.jianshu.com/p/e60764d1333c) | 1,000 | 10% | CN |
| Monitor uptime | Same as above | @decemtk | Oct 01 2020| [Bihu](https://bihu.com/article/1540777294) | 1,000 | 10% | CN |
| Monitor uptime | Same as above | @qwerspe | Oct 3 2020| [Medium](https://medium.com/@qwerspe/monitor-near-node-uptime-739587b6bd15) | 1,000 | 10% | CN |
| Use Ledger Nano S | Create a tutorial, in the form of a video, a blogpost or Github document, that shows how to run `near shell` with your Ledger Nano S, from the seed key creation, to its backup and restore, to the delegation of funds to a staking pool. Contributions in other languages are encouraged, but considered on a case by case basis. Updates to this guide, reflecting any updates of the tools involved, will be paid a % of the initial bounty per each revision, up to once per month, until Stake Wars is over. | @wjdfx | Jun 15 2020| [Jianshu](https://www.jianshu.com/p/39b3562943e0) | 1,500 | 10% | CN |
| Use Ledger Nano S | Same as above | @narniec | Jul 1 2020 | [Medium](https://medium.com/@narniec2020/%D0%BF%D0%BE%D0%B4%D0%BA%D0%BB%D1%8E%D1%87%D0%B5%D0%BD%D0%B8%D0%B5-ledger-nano-s-%D0%B2-near-b536abfaaf7e)| 1,500 | 10% | RU |
| Use Ledger Nano S | Same as above | @Viacheslav198 | Jul 6 2020 | [Github](https://github.com/Viacheslav198/near/blob/master/ledger.md)| 1,500 | 10% | RU |
| Use Ledger Nano S | Same as above | @bonsfi | Jul 22 2020 | [Medium](https://medium.com/@bonsfi/como-usar-ledger-nano-s-como-key-en-nearprotocol-aac252dd374f) | 1,500 | 10% | ES |
| Use Ledger Nano S | Same as above | @48cfu | Aug 28 2020 | [Github](https://github.com/48cfu/near-documentazione/blob/master/ledger-nano-EN.md) | 1,500 | 10% | EN |
| Use Ledger Nano S | Same as above | @48cfu | Aug 28 2020 | [Github](https://github.com/48cfu/near-documentazione/blob/master/ledger-nano-IT.md) | 1,500 | 10% | IT |
| Use Ledger Nano S | Same as above | @decemtk | Oct 01 2020 | [Bihu](https://bihu.com/article/1726076153) | 1,500 | 10% | CN |
| Use Ledger Nano S | Same as above | @qwerspe | Oct 3 2020 | [Medium](https://medium.com/@qwerspe/near-wallet-use-ledger-nano-s-315568f077db) | 1,500 | 10% | CN |
| Use Ledger Nano S with Near cli | Basic operation with Ledger to interact with Near | @bonsfi | Aug 22 2020 | [Medium](https://medium.com/@bonsfi/como-usar-leger-con-near-cli-8b9ed66f3b1d) | 1,500 | 10% | ES |
| Use Ledger Nano S with Near cli | Basic operation with Ledger to interact with Near | @bonsfi | Aug 22 2020 | [Medium](https://medium.com/@bonsfi/how-to-use-ledger-with-near-cli-648d5d990517) | 1,500 | 10% | EN |

## Next Challenge
Monitor your node health, and setup automated email alerts: [challenge003](challenge003.md)

## Previous Challenge
Create your BetaNet wallet, deploy your node, and correctly configure your staking pool: [challenge001](challenge001.md)

'''
'''--- challenges/challenge003.md ---
# Stake Wars Challenge 003
Published on: June 9 2020

Monitor your node health, and send an automated email in case of issues.

## Acceptance Criteria

1. Monitor your node
2. Send email alerts

## 1.Monitor your node
Define a list of parameters that you want to monitor on your node, to promptly intervene if your node risks to be kicked out, the network is stalling, or your nearcore version is outdated.

### General Parameters
Monitor storage, CPU and memory usage, to be sure that your node is working properly. Most cloud providers offer this service by configuring a few simple parameters.
Alternatively, run your own crontab scripts, or install your favorite monitoring tools.

### Nearcore Parameters
Nearup comes with simplified logs, available via `docker logs nearcore` or `nearup logs` (the latter is necessary if you are running nearup in `--nodocker` mode).
By using `grep` or `tee` commands you can extract data from your node, such as:
* number of active peers
* validator status, by parsing `V/xx`
* block height progress
* network health, by parsing the `bps` value

Alternatively, you can connect nearcore with [Prometheus](https://prometheus.io/) using the `<NODE_IP>:3030/metrics` endpoint.

### NEAR Network Parameters
Monitor the network by using NEAR's [JSON RPC APIs](https://docs.near.org/docs/interaction/rpc). Simple `curl` commands can extract valuable information for your validator operations, such as:
* number of blocks `produced` vs `expected`
* current, next and kicked out validators
* cost of a validator seat
* epoch start height vs current block height
* NEAR's nodes version and build

BetaNet changes epoch every 10,000 blocks; TestNet changes epoch every 43,200 blocks. Use these constants together with the `epoch_start_height` to estimate the remaining epoch duration.

Additionally, you can direct the same RPC calls to your local node, and check any differences between your node and the rest of the network.

## 2.Send email alerts
Define the thresholds that trigger alerts, such as:
* memory/CPU/storage usage
* low number of peers or zero new blocks downloaded
* missed blocks, risk of being kicked out, or insufficient stake
* a new nearcore build is running in the network

**Heads up:** To prove that you are running your automated monitoring system, add `stefano@near.org` to your email alerts. If your node is running with insufficient stake and sends an alert email, a script will provide additional BetaNet tokens to your pool.

## List of Validators who already completed this challenge (updated Jun 9)

| pool ID |  date  | token staked |
| ------- | ------ | ------------ |
| [@validator_italia_contract](https://explorer.betanet.near.org/accounts/validator_italia.betanet) | Jun 9 | 10,000 |
| [@plex2](https://explorer.betanet.near.org/accounts/plex2) | Jun 9 | 10,000 |
| [@staking.dsrv.betanet](https://explorer.betanet.near.org/accounts/staking.dsrv.betanet) | Jun 9 | 10,000 |
| [@pool.dokiacapital.betanet](https://explorer.betanet.near.org/accounts/pool.dokiacapital.betanet) | Jun 9 | 10,000 |
| [@c3.inotel.betanet](https://explorer.betanet.near.org/accounts/c3.inotel.betanet) | Jun 9 | 10,000 |
| [@a_validator](https://explorer.betanet.near.org/accounts/a_validator) | Jun 9 | 10,000 |
| [@huglester](https://explorer.betanet.near.org/accounts/huglester) | Jun 9 | 10,000 |
| [@applied](https://explorer.betanet.near.org/accounts/applied) | Jun 17 | 10,000 |
| [@bitcat.stakehouse.betanet](https://explorer.betanet.near.org/accounts/bitcat.stakehouse.betanet) | Jun 17 | 10,000 |
| [@mutedtommy.betanet](https://explorer.betanet.near.org/accounts/bitcat.stakehouse.betanet) | Jun 17 | 10,000 |
| [@sfpool](https://explorer.betanet.near.org/accounts/sfpool) | Jun 17 | 10,000 |
| [@yyyyyyyyyyyyy1](https://explorer.betanet.near.org/accounts/yyyyyyyyyyyyy1) | Jun 17 | 10,000 |
| [@alexzz](https://explorer.betanet.near.org/accounts/alexzz) | Jun 17 | 10,000 |
| [@a.betanet](https://explorer.betanet.near.org/accounts/a.betanet) | Jun 17 | no staking pool |
| [@freshnears](https://explorer.betanet.near.org/accounts/freshnears) | Jun 17 | 10,000 |
| [@jazza](https://explorer.betanet.near.org/accounts/jazza) | Jun 17 | 10,000 |
| [@top](https://explorer.betanet.near.org/accounts/top) | Jun 17 | 10,000 |
| [@joejoen.betanet](https://explorer.betanet.near.org/accounts/joejoen.betanet) | Jun 17 | 10,000 |
| [@joesixpack.betanet](https://explorer.betanet.near.org/accounts/joesixpack.betanet) | Jun 17 | 10,000 |
| [@blazenet](https://explorer.betanet.near.org/accounts/blazenet) | Jun 17 | 10,000 |
| [@buildlinks](https://explorer.betanet.near.org/accounts/buildlinks) | Jun 17 | 10,000 |
| [@c2.bibwang.betanet](https://explorer.betanet.near.org/accounts/c2.bibwang.betanet) | Jun 17 | 10,000 |
| [@nodeasy.test](https://explorer.betanet.near.org/accounts/nodeasy.test) | Jun 17 | no staking pool |
| [wetez](https://explorer.betanet.near.org/accounts/wetez) | Jun 19 | 10,000 |
| [@masternode24](https://explorer.betanet.near.org/accounts/masernode24) | Jun 23 | 10,000 |
| [@rockpathpool](https://explorer.betanet.near.org/accounts/rockpathpool) | Jun 23 | 10,000 |
| [@kokos-anti-covid](https://explorer.betanet.near.org/accounts/kokos-anti-covid) | Jun 23 | 10,000 |
| [@zeropool](https://explorer.betanet.near.org/accounts/zeropool) | Jun 23 | 10,000 |
| [@ryabina](https://explorer.betanet.near.org/accounts/ryabina) | Jun 23 | 10,000 |
| [@sl1sub](https://explorer.betanet.near.org/accounts/sl1sub) | Jun 23 | 10,000 |
| [@mathwallet](https://explorer.betanet.near.org/accounts/mathwallet) | Jun 23 | 10,000 |
| [@stakedpool.staked.test](https://explorer.betanet.near.org/accounts/stakedpool.staked.test) | Jun 24 | 10,000 |
| [@neozaru.stakehouse.betanet](https://explorer.betanet.near.org/accounts/neozaru.stakehouse.betanet) | Jun 24 | 10,000 |
| [@sc.galbraith.betanet](https://explorer.betanet.near.org/accounts/sc.galbraith.betanet) | Jul 1 | 10,000 |
| [@ag_staking](https://explorer.betanet.near.org/accounts/ag_staking) | Jul 6 | 10,000 |
| [@777stakes](https://explorer.betanet.near.org/accounts/777stakes) | Jul 29 | 10,000 |
| [@paulainsley1betanet.stakehouse.betanet](https://explorer.betanet.near.org/accounts/paulainsley1betanet.stakehouse.betanet) | Jul 31 | 10,000 |
| [staking_viboracecata.stakehouse.betanet](https://explorer.betanet.near.org/accounts/staking_viboracecata.stakehouse.betanet) | Aug 8 | 10,000 |
| [general.alfa.betanet](https://explorer.betanet.near.org/accounts/general.alfa.betanet) | Aug 13 | 10,000 |
| [aquariuspool.stakehouse.betanet](https://explorer.betanet.near.org/accounts/aquariuspool.stakehouse.betanet) | Aug 13 | 10,000 |
| [arm.armada.betanet](https://explorer.betanet.near.org/accounts/arm.armada.betanet) | Aug 13 | 10,000 |
| [iosgvc.stakehouse.betanet ](https://explorer.betanet.near.org/accounts/iosgvc.stakehouse.betanet) | Aug 13 | 10,000 |
| [swiss-staking.stakehouse.betanet ](https://explorer.betanet.near.org/accounts/swiss-staking.stakehouse.betanet) | Aug 19 | 10,000 |
| [crypto-solutions.stakehouse.betanet ](https://explorer.betanet.near.org/accounts/crypto-solutions.stakehouse.betanet) | Aug 20 | 10,000 |
| [genesislab.stakehouse.betanet](https://explorer.betanet.near.org/accounts/genesislab.stakehouse.betanet) | Sep 07 | 10,000  | 
| [crypto-solutions.stakehouse.betanet ](https://explorer.betanet.near.org/accounts/crypto-solutions.stakehouse.betanet) | Aug 20 | 10,000 | 
| [@optimisticvalidator ](https://explorer.betanet.near.org/accounts/optimisticvalidator) | Sep 01 | 10,000 | 
| [stakingpool.youlaiwuqu.betanet ](https://explorer.betanet.near.org/accounts/stakingpool.youlaiwuqu.betanet) | Sep 1 | 10,000 |
| [get_rich](https://explorer.betanet.near.org/accounts/get_rich) | Sep  2 | 10,000 | 
| [starlink-pool.stakehouse.betanet](https://explorer.betanet.near.org/accounts/starlink-pool.stakehouse.betanet) | Sep 02 | 10,000  |
| [@mfsc.stakehouse.betanet](https://explorer.betanet.near.org/accounts/mfsc.stakehouse.betanet) | Sep 04 | 10,000  |
| [@majlovesreg.stakehouse.betanet](https://explorer.betanet.near.org/accounts/majlovesreg.stakehouse.betanet) | Aug 26 | 115,685 |

## Contribution Opportunities

Do you want to earn extra tokens? We have contribution opportunities available below! 

Reply to the challenges application thread on [Github](https://github.com/nearprotocol/stakewars/issues/350) specifying:
- which contribution you want to do, and the link to the challenge
- the type of document you will release
- the date when you will publish the content (you can postpone a few days, no worries)

Once your work is done, you will be added to the list below. Please note that rewards in tokens will need to pass basic KYC checks from NEAR Foundation, and comply with regulations.

### List of available contributions
**Heads Up:** No more contributions are accepted, except the ones already posted on https://portal.near.org before October 2nd. You are free to add new ones without receiving token rewards!

| Abstract | Description                    | Contributor | Due Date | Link | NEAR Tokens | Maintenance | Language |
| -------- | ------------------------------ | ----------- | -------- | ---- | ----------- | ----------- | -------- |
| Run a monitoring platform | Create a tutorial, in the form of a video, a blogpost or Github document, that explains how to monitor the health of your node (general parameters, nearcore parameters and NEAR network). Updates to this guide, reflecting any updates of the tools involved, will be paid a % of the initial bounty per each revision, up to once per month, until Stake Wars is over. Contributions in other language than English are encouraged, but considered case by case basis. | @masknetgoal634 | Jun 11 2020 | [Github](https://github.com/masknetgoal634/near-prometheus-exporter/blob/master/guide/GUIDE.md) | 1,100* | 10% | EN |
| Run a monitoring platform | Same as above | @narniec | Jun 14 2020 | [Medium](https://link.medium.com/C82TyDMXo7) | 1,000 | 10% | RU |
| Run a monitoring platform | Same as above | @Minstr22 | Sept 30 2020 | [Github] (https://github.com/minstr22/Monitoring-Alerting | 1,000 | 10% | EN |
| Run a monitoring platform | Same as above | @wjdfx | Jun 15 2020 | [Jianshu](https://www.jianshu.com/p/c0b9d21eba3d) | 1,000 | 10% | CN |
| Run a monitoring platform | Same as above | @imnisen | Jun 23 2020 | [Github](https://github.com/dolphintwo/near-prometheus-exporter/blob/master/guide/GUIDE-compose.md) | 1,000 | 10% | CN |
| Run a monitoring platform | Same as above | @Viacheslav198 | Jul 1 2020 | [Github](https://github.com/Viacheslav198/grafana-prometheus/blob/master/alert.md) | 1,000 | 10% | IT |
| Run a monitoring platform | Same as above | @Lalit15 | Jul 6 2020 | [Medium](https://medium.com/@coolphil15/setting-up-monitoring-on-near-node-via-grafana-prometheus-fd641ff82aeb) | 1,000 | 10% | EN |
| Run a monitoring platform | Same as above | @everuner | Aug 29 2020 | Medium: [1](https://medium.com/@serj_czech/%D0%BC%D0%BE%D0%BD%D0%B8%D1%82%D0%BE%D1%80%D0%B8%D0%BD%D0%B3-%D0%BD%D0%BE%D0%B4%D1%8B-%D1%83%D0%B2%D0%B5%D0%B4%D0%BE%D0%BC%D0%BB%D0%B5%D0%BD%D0%B8%D1%8F-%D0%BD%D0%B0-%D1%8D%D0%BB%D0%B5%D0%BA%D1%82%D1%80%D0%BE%D0%BD%D0%BD%D1%83%D1%8E-%D0%BF%D0%BE%D1%87%D1%82%D1%83-stake-wars-challenge-003-%D1%87%D0%B0%D1%81%D1%82%D1%8C-1-1b8564fca2be), [2](https://medium.com/@serj_czech/%D0%BD%D0%BE%D0%B4%D0%B0-near-%D1%83%D0%B2%D0%B5%D0%B4%D0%BE%D0%BC%D0%BB%D0%B5%D0%BD%D0%B8%D1%8F-%D0%BD%D0%B0-%D1%8D%D0%BB%D0%B5%D0%BA%D1%82%D1%80%D0%BE%D0%BD%D0%BD%D1%83%D1%8E-%D0%BF%D0%BE%D1%87%D1%82%D1%83-stake-wars-challenge-003-%D1%87%D0%B0%D1%81%D1%82%D1%8C-2-363b6743e7dc), [3](https://medium.com/@serj_czech/%D0%BD%D0%BE%D0%B4%D0%B0-near-%D1%83%D0%B2%D0%B5%D0%B4%D0%BE%D0%BC%D0%BB%D0%B5%D0%BD%D0%B8%D1%8F-telegram-stake-wars-challenge-003-%D1%87%D0%B0%D1%81%D1%82%D1%8C-3-98598d613e2c) | 1,000 | 10% | RU |
| Run a monitoring platform | Same as above | @RussellGalt | Sep 01 2020 | [Notion](https://www.notion.so/Install-Zabbix-5-0-Ubuntu-18-6f63c1d985cb4d1ab7dc6edc3a91bafb) | 1,000 | 10% | EN |
| Run a monitoring platform | Same as above | @RussellGalt | Sep 03 2020 | [Notion](https://www.notion.so/Zabbix-5-0-Ubuntu-18-04-5f93580ffde34bf4a8b3b13e1650f1a3) | 1,000 | 10% | RU |
| Run a monitoring platform | Same as above | @everuner | Sept 07 2020 | [Medium] (https://medium.com/@serj_czech/run-a-monitoring-platform-30ef76041ca4) | 1,000 | 10% | RU |
| Run a monitoring platform | Same as above | @youlaiwuqu | Sep 12 2020 | [Jianshu](https://www.jianshu.com/p/2beea09af773) | 1,000 | 10% | CN |
| Run a monitoring platform | Same as above | @Cryptomilion | Sept 13 2020 | [Medium](https://medium.com/@shiverov/near-stake-wars-challenge-003-%D0%BC%D0%BE%D0%BD%D1%96%D1%82%D0%BE%D1%80%D0%B8%D0%BD%D0%B3-near-%D1%87%D0%B5%D1%80%D0%B5%D0%B7-grafana-prometheus-bce1dde57d30) | 1,000 | 10% | UA |
| Run a monitoring platform | Same as above | @mabalaru | Sep 17 2020 | [Ansible](https://github.com/mabalaru/near/tree/master/monitoring) | 1,000 | 10% | EN |
| Run a monitoring platform | Same as above | [@48cfu](https://github.com/48cfu) | Sep 17 2020 | [Github](https://github.com/48cfu/near-documentazione/blob/master/monitoraggio-server-near.md) | 1,000 | 10% | IT |
| Run a monitoring platform | Same as above | [@bonsfi](https://github.com/bonsfi) | Oct 1 2020 | [Github Gist](https://gist.github.com/bonsfi/d6331d70caae74dd3eefe3c198ed6857) | 1,000 | 10% | EN |
| Run a monitoring platform | Same as above | @zavodil | May 2020 | [Telegram](https://github.com/zavodil/nearup_telegram_bot/blob/master/cron/nodes.php) | 1,000 | 10% | RU |
| Send alerts | Create a tutorial, in the form of a video, a blogpost or Github document, that explains how to connect cloud alerts from AWS, GCP, Azure, Alibaba (and others) with your nearcore node. Contributions in other languages are encouraged, but considered case by case basis. | @wjdfx | Jun 15 2020 | [Jianshu](https://www.jianshu.com/p/0ae64d4c53aa) | 1,000 | 10% | CN |
| Send alerts | Same as above | @imnisen | Jun 23 2020 | [Github](https://github.com/dolphintwo/near-prometheus-exporter/blob/master/guide/GUIDE-alert.md) | 1,000 | 10% | CN |
| Send alerts | Same as above | @narniec | Jul 1 2020 | [Medium](https://medium.com/@narniec2020/%D1%81%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%BE%D1%82%D0%BF%D1%80%D0%B0%D0%B2%D0%BA%D0%B0-%D1%83%D0%B2%D0%B5%D0%B4%D0%BE%D0%BC%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B2-grafana-b697f3e92cc4) | 1,000 | 10% | RU |
| Send alerts | Create a tutorial, in the form of a video, a blogpost or Github document, that explains how to connect cloud alerts from AWS, GCP, Azure, Alibaba (and others) with your nearcore node. Contributions in other languages are encouraged, but considered case by case basis. | @wjdfx | Jun 15 2020 | [Jianshu](https://www.jianshu.com/p/0ae64d4c53aa) | 1,000 | 10% | CN |
| Send alerts | Same as above | @imnisen | Jun 23 2020 | [Github](https://github.com/dolphintwo/near-prometheus-exporter/blob/master/guide/GUIDE-alert.md) | 1,000 | 10% | CN |
| Send alerts | Same as above | @narniec | Jul 1 2020 | [Medium](https://medium.com/@narniec2020/%D1%81%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%BE%D1%82%D0%BF%D1%80%D0%B0%D0%B2%D0%BA%D0%B0-%D1%83%D0%B2%D0%B5%D0%B4%D0%BE%D0%BC%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B2-grafana-b697f3e92cc4) | 1,000 | 10% | RU |
| Send alerts | Same as above | @masknetgoal634 | Aug 25 2020 | [Github](https://github.com/masknetgoal634/StakeWarsGuides/blob/master/Send-Alerts.md) | 1,000 | 10% | EN |
| Send alerts | Same as above | @rozum-dev | Sep 06 2020 | [Medium](https://medium.com/@dmytro.rozum/моніторимо-стан-ноди-near-node-з-prometheus-та-grafana-1943da054df4) | 1,000 | 10% | UA |
| Send alerts | Same as above | @ama31337 | Sep 09 2020 | [Github](https://github.com/ama31337/neartips/blob/master/manuals/Telegram-Alerts.md) | 1,000 | 10% | EN |
| Send alerts | Same as above | @mabalaru | Sep 17 2020 | [Github](https://github.com/mabalaru/near/tree/master/monitoring) | 1,000 | 10% | EN |
| Send alerts | Same as above | @youlaiwuqu | Sep 12 2020 | [Jianshu](https://www.jianshu.com/p/b6f116e5105d) | 1,000 | 10% | CN |
| Send alerts | Same as above | @majal | Sep 16 2020 | [GitHub Gist](https://gist.github.com/majal/c36279140f9326c684edb758d3aa86d2) | 1,000 | 10% | EN
| Send alerts | Same as above | @yes-filippova | Sep 19 2020 | [Medium](https://medium.com/@yes.filippova/%D0%BC%D0%BE%D0%BD%D1%96%D1%82%D0%BE%D1%80%D0%B8%D0%BC%D0%BE-%D1%81%D1%82%D0%B0%D0%BD-%D0%BD%D0%BE%D0%B4%D0%B8-near-node-%D0%B7-prometheus-%D1%82%D0%B0-grafana-95a4b88ca643?source=friends_link&sk=12f7ac583d23e90c5abe581371ead6e8) | 1,000 | 10% | UA
| Send alerts | Same as above | [@48cfu](https://github.com/48cfu) | Sep 25 2020 | [Github](https://github.com/48cfu/near-documentazione/blob/master/monitoraggio-server-near.md#aggiunta-di-un-metodo-di-notifica) | 1,000 | 10% | IT |
| Send alerts | Same as above | [@bonsfi](https://github.com/bonsfi) | Oct 1 2020 | [Medium](https://medium.com/@bonsfi/como-monitorear-tu-nodo-de-near-para-recibir-alertas-mediante-email-y-slack-con-digital-ocean-ba7ec37fa9a6) | 1,000 | 10% | ES |
\*Including 10% update reward

## Next Challenge
Create your warchest to dynamically keep one seat: [challenge004](challenge004.md)

## Previous Challenge
Enroll your staking pool, receive your delegation, and maintain your validator status: [challenge002](challenge002.md)

'''
'''--- challenges/challenge004.md ---
# Stake Wars Challenge 004
Published on: June 22 2020

Create a warchest of staked tokens, and dynamically maintain **no more than one seat**.
This challenge is designed to learn how to monitor the minimum stake to become a validator, and dynamically manage your staking pool. Your achievement will be to control a liquid reserve of tokens, the _warchest_, that you can leverage if your validator risks to be kicked out from the current set for insufficient stake.
**Heads Up:** After you complete the script, fill up this form: https://nearprotocol1001.typeform.com/to/x4Bval

## Acceptance Criteria

1. Monitor your stake
2. Manage the seat price

## 1.Monitor your stake
Use [near-cli](https://github.com/near/near-cli) or the `validators` method in the [JSON RPC](https://docs.near.org/docs/interaction/rpc) to query the validators state:
| Action | near-cli | validators JSON RPC |
| ------ | ---------- | -------- |
| current set (t0) | `near validators current` | `result.current_validators` |
| next set (t+1) | `near validators next` | `result.next_validators` |
| proposals (t+2) | `near proposals` | `result.current_proposals` |

Where `t0` is the current epoch, and `t+n` epochs in the future.

### Monitor the current set of validators with near-cli
Use
```
near validators current | awk '/<POOL_ID>/ {print $4}'
```
This command will generate a string with an integer in NEAR tokens, where:
- `near validators current` is used to show the current set of validators
- `awk '/<POOL_ID> {print $4}'` filters by POOL_ID, and prints an integer with its current stake

### Monitor the current set with the RPC
Use
```
curl -d '{"jsonrpc": "2.0", "method": "validators", "id": "dontcare", "params": [null]}' -H 'Content-Type: application/json' https://rpc.betanet.near.org | jq -c '.result.current_validators[] | select(.account_id | contains ("<POOL_ID>"))' | jq .stake
```
This command query the JSON RPC with:
- `"method": "validators"`
- `jq -c '.result.current_validators` to visualize only the current set
- `select(.account_id | contains ("<POOL_ID>"))'` to filter only <POOL_ID> from the results
- `jq .stake` to filter again via jq the results and take only the total stake in YoctoNEAR

If compared with near-cli, this query provides a more accurate stake of the <POOL_ID>.

You can use similar filters to check if your pool will be in the next set or not:

### Monitor the next set with near-cli
Use the command below to see if your node will lose its seat in the next epoch:
```
near validators next | grep "Kicked out" | grep "<POOL_ID>"
```
If the result is not empty, <POOL_ID> will not be in the next validators set, and will lose its seat.

Alternatively, you can use
```
near proposals | grep "Rollover" | grep "<POOL_ID>"
```
If this result is not empty, <POOL_ID> will be in the Rollover set, and will maintain the validator seat.

### Monitor the next set with the JSON RPC:
Similar to the commands above, use
```
curl -d '{"jsonrpc": "2.0", "method": "validators", "id": "dontcare", "params": [null]}' -H 'Content-Type: application/json' https://rpc.betanet.near.org | jq -c '.result.next_validators[] | select(.account_id | contains ("<POOL_ID>"))'
```
If the result is not empty, <POOL_ID> will be in the next validators set.

The RPC provides data on the previous epoch, to investigate the reason why a node is not in the current set:
```
curl -d '{"jsonrpc": "2.0", "method": "validators", "id": "dontcare", "params": [null]}' -H 'Content-Type: application/json' https://rpc.betanet.near.org | jq -c '.result.prev_epoch_kickout[] | select(.account_id | contains ("<POOL_ID>"))' | jq .reason
```
Similar to the other command above above:
- `jq -c '.result.prev_epoch_kickout` filters the previous epoch set kick out
- `jq .reason` filters the reason, eg insufficient stake or insufficient number of blocks generated

### Monitor the epoch progress
- get the current block height
- get the current epoch start

As an example, you can use the command
```
curl https://rpc.betanet.near.org/status | jq .sync_info.latest_block_height
```
to return an integer of the current block height.

As of today, you can retrieve the `epoch_start` from the JSON RPC:
```
curl -d '{"jsonrpc": "2.0", "method": "validators", "id": "dontcare", "params": [null]}' -H 'Content-Type: application/json' https://rpc.betanet.near.org | jq .result.epoch_start_height
```
This query will generate an integer with the block number that started the current epoch

As a final step, estimate how many blocks are left in the current epoch by subtracting the `latest_block_height` from `epoch_start_height + 10000`.

**Heads up:** BetaNet, TestNet and MainNet have different epoch lengths:

| Network | Epoch Blocks |
| ------- | ------ |
| BetaNet | 10,000 |
| TestNet | 43,200 |
| MainNet | 43,200 |

### Monitor the seat price
Measure or calculate yourself the cost of a seat to become validator.

As an example, you may use near-cli to know:
- the current epoch seat price with `near validators current | awk '/price/ {print substr($6, 1, length($6)-2)}'`
- the next epoch seat price price with `near validators next | awk '/price/ {print substr($7, 1, length($7)-2)}'`
- the estimated t+2 seat price with `near proposals | awk '/price =/ {print substr($15, 1, length($15)-1)}'`

## 2.Manage the seat price
This challenge is complete when you can dynamically adjust the locked balance of your staking pool, and maintain **one seat**.

You can use the commands `stake` and `unstake` with near shell, dynamically locking your funds:
```
near call <POOL_ID> stake '{"amount": "<STAKE_AMOUNT>"}' --accountId <WARCHEST_ID>
```
Where:
- `POOL_ID` is the name of your staking pool
- `STAKE_AMOUNT` is calculated from the data collected above
- `WARCHEST_ID` is the account that you use to delegate funds to your pool

If your current stake provides two seats or more, your funds should be unstaked and held in the warchest balance.

To prove that your _warchest_ is deployed, provide a list of 4 transactions that staked or unstaked funds based on the seat pric following these principles. Reply to this [Form](https://nearprotocol1001.typeform.com/to/x4Bval) to receive 100,000 extra betanet tokens delegated to your pool and begin the challenge.

**Heads up:** we will run our monitoring scripts too, and will un-delegate the 100,000 tokens from your pool if:
- you retain **two or more seats** for three epochs in a row
- you retain **two or more seats** for 15 epochs in total

Overall, we suggest to use NEAR's delegated tokens as your main stake in the pool, and keep your own token reserves (earned from previous challenges and contributions) as liquid tokens within the pool.
Once you are running your _warchest_, reply to the [Issue #500](https://github.com/nearprotocol/stakewars/issues/500) posting your accomplishment. Use also the same issue if we undelegated your funds, and you want to try again.

## Contribution Opportunities
**Heads Up:** No more contributions are accepted, except the ones already posted on https://portal.near.org before October 2nd. You are free to add new ones without receiving token rewards!

Do you want to earn extra tokens? We have contribution opportunities available below! 

Reply to the challenges application thread on [Github](https://github.com/nearprotocol/stakewars/issues/350) specifying:
- which contribution you want to do, and the link to this challenge
- the type of document you will release
- the date when you will publish the content (you can postpone a few days, no worries)

Once your work is done, you will be added to the list below. Please note that rewards in tokens will need to pass basic KYC checks from NEAR Foundation, and comply with regulations.

### List of available contributions

| Abstract | Description                    | Contributor |  Date  | Link | NEAR Tokens | Maintenance | Language |
| -------- | ------------------------------ | ----------- | ------ | ---- | ----------- | --- | ---- |
| Monitor the Stake | Create a tutorial, in the form of a video, a blogpost or Github document, that shows how to monitor your stake, and the current seat price. The goal is to help users integrate this system with their monitoring platform, such as Grafana or Datadog. Updates to this guide, reflecting any updates of the tools involved, will be paid a % of the initial bounty per each revision, up to once per month, until Stake Wars is over. Contributions in other languages are encouraged, but considered case by case basis. | @narniec | Jun 23 2020 | [Medium](https://link.medium.com/ycHhCnWBy7 ) | 1,000 | 15% | RU |
| Monitor the Stake | Same as the above | @masknetgoal634 | Jun 26 2020 | [Github](https://github.com/masknetgoal634/near-go-warchest/blob/master/README.md) | 1,000 | 15% | EN |
| Monitor the Stake | Same as the above | @bonsfi | Jul 21 2020 | [Medium](https://medium.com/@bonsfi/como-monitorear-el-stake-de-tu-validador-en-near-protocol-d709326cf6ff?sk=09f62413b029762a549b5596c9543a4c) | 1,000 | 15% | ES |
| Monitor the Stake | Same as the above | @youlaiwuqu | Oct 1 2020 | [Github](https://github.com/youlaiwuqu/Monitor-the-Stake) | 1,000 | 15% | CN |
| Monitor the Stake | Same as the above | @wjdfx | Jul 7 2020 | [Jianshu](https://www.jianshu.com/p/18b5d159d73a) | 1,000 | 15% | CN |
| Release the Warchest Bot | Same as the above | @masknetgoal634 | Jun 26 2020 | [Github](https://github.com/masknetgoal634/near-go-warchest) | 2,500 | 15% | EN |
| Release the Warchest Bot | Release a Warchest Bot, in your favorite programming language, capable to manage your validator seat and maintain its number to **one**. It doesn't have to be production-ready, but it should document how to install and run it. | @48cfu | Jun 28 2020 | [Github EN](https://github.com/48cfu/near-warchest-bot)/[Github IT](https://github.com/48cfu/near-warchest-bot/blob/master/README-ITALIANO.md) | 2,875 | 15% | EN and IT |
| Release the Warchest Bot | Same as the above | @gaia | Jun 29 2020 | [Github](https://gist.github.com/gaia/cff45baf3fa710a42c3fc4cdaafe8edc) | 2,500 | 10% | EN |
| Release the Warchest Bot | Same as the above | @eorituz | Jul 1 2020 | [Github](https://github.com/eorituz/near_warchest) | 2,500 | 10% | EN |
| Release the Warchest Bot | Same as the above | @imnisen | Jul 6 2020 | [Github](https://github.com/imnisen/near-warchest/) | 2,500 | 15% | EN |
| Release the Warchest Bot | Same as the above | @WilliamGuozi | Jul 21 2020 | [Github](https://github.com/WilliamGuozi/near-monitor) | 2,500 | 15% | EN |
| Release the Warchest Bot | Same as the above | @minstr22 | aug 28 2020 | [Github](https://github.com/minstr22/Near-Protocol-warchest) | 2,500 | 15% | EN |
| Release the Warchest Bot | Same as the above | @denysk | Sep 15 2020 | [Github](https://gist.github.com/dentesting/3a919f394a0fe68dcfed1f5fada8ee58) | 2,500 | 15% | EN |
| Release the Warchest Bot | Same as the above | @savelev1 | Sep 16 2020 | [Github](https://github.com/savelev1/near-warchest-bot) | 2,500 | 15% | RU/EN |
| Release the Warchest Bot | Release the Warchest Bot, and have a Chinese usage description | @crackerli | sep 16 2020 | [Github](https://github.com/crackerli/near-validator-monitor) | 2,500 | 15% | CN |
| Release the Warchest Bot | Same as the above | @youlaiwuqu | Oct 1 2020 | [Github](https://github.com/youlaiwuqu/youlaiwuqu-stakewar-warchest/blob/master/README.md) | 2,500 | 15% | CN |
| Release the warchest bot | One script both as warchest and node monitor | @majal | Sep 16 2020 | [GitHub Gist](https://gist.github.com/majal/c36279140f9326c684edb758d3aa86d2) | 2,500 | 15% | EN |
| Release the Warchest Bot | Release the Warchest Bot with a Ukrainian usage description | @rozum-dev | sep 17 2020 | [Github](https://github.com/rozum-dev/near-go-warchest) | 2,500 | 15% | UA |
| Release the Warchest Bot | Same as the above | @marat586l(https://github.com/marat586l/) | Oct 04 2020 | [Github]( https://github.com/marat586l/-near_warchest) | 2,500 | 15% | EN |
| Release the warchest bot | One script both as warchest and node monitor | @bonsfi | Oct 1 2020 | [GitHub Gist](https://gist.github.com/bonsfi/1117e4ed39fb625402ab20acbaa4d275) | 2,500 | 15% | EN |
| Install and start warchest bot | Explain installation, configuration and monitoring work of warchest bot by @eorituz. Process of obtaining results | @everuner | Aug 30 2020 | [Medium](https://medium.com/@serj_czech/near-warchest-%D0%B1%D0%BE%D1%82-stake-wars-challenge-004-a332d028fb53) | - | - | RU |
| Install and start warchest bot | Same as the above | @Cryptomilion | Sep 19 2020 | [Medium](https://medium.com/@shiverov/near-warchest-bot-stake-wars-challenge-004-363b352567d2) | - | - | UA |

## Next Challenge
Automatically deploy nearcore using a CI/CD pipeline: [challenge005](challenge005.md)

## Previous Challenge
Monitor your node health, and setup automated email alerts: [challenge003](challenge003.md)

'''
'''--- challenges/challenge005.md ---
# Stake Wars Challenge 005
Published on: July 17 2020

Automatically deploy nearcore using a CI/CD pipeline.
This challenge is designed to have validators build and deploy their own node from the source code, instead of using the precompiled binaries provided by NEAR. The result is having multiple teams that can independently build and test new releases of the node, to improve the quality and security of the network as a whole.

To participate, validators will be asked to build and deploy a specific branch/tag of [nearcore](https://github.com/nearprotocol/nearcore), and keeping their nodes up to date. 

If you already run a professional validator setup, and you have CI/CD experience, you don't need any further instructions.

If you want to test yourself and use this as a learning opportunity, the list of available tools to accomplish can be very long:
- Jenkins
- Terraform
- Gitlab
- Github Actions
- Cloud provider tools (Google Cloud Build, Azure Pipelines, AWS CodePipeline...)

You may want to read [this article](https://hackernoon.com/understanding-the-basic-concepts-of-cicd-fw4k32s1) if you need some basic knowledge on CI/CD.

## Acceptance Criteria

1. Build nearcore
2. Run tests
3. Deploy the node

### 1.Build nearcore
Subscribe to [Nearcore releases](https://github.com/nearprotocol/nearcore/releases), and automatically build the artifact from the source code as soon as there's a new version of the node. Every release is tagged as follows:
- BetaNet releases of nearcore will be mapped with the tag `x.y.z-beta`
- TestNet releases of nearcore will be mapped with the tag `x.y.z-rc`

More information is available in the official documentation, in the [contribution section](https://docs.near.org/docs/contribution/nearcore) and in the [develop section](https://docs.near.org/docs/local-setup/running-testnet#compiling-and-running-official-node-without-docker)

### 2.Run tests
Once your artifact is deployed, you may want to test its networking functionality and existing applications. Some examples can be found in [nearcore scripts](https://github.com/nearprotocol/nearcore/tree/beta/scripts)

Some examples are:
- deploy multiple nodes in `localnet` mode (an example is in the [nearup repo](https://github.com/near/nearup#spawn-local-network)) and test the capacity to connect and synchronize with the network
- attach your own local services (helper, wallet, explorer)
- send transactions, deploy/call/view smart contracts
- execute load tests and measure the performance

The outcomes of these tests will help you decide if you want to deploy this release or not. NEAR will take in serious consideration the feedback of validators who setup their own suite of tests and find bugs or errors in new releases.

### 3.Deploy the node
With the merge of [nearcore PR #2701](https://github.com/nearprotocol/nearcore/pull/2701), NEAR Protocol can run different builds of the node within the same network. You can then decide which deployment stragy adopt (e.g. Blue/Green or a Canary) and merge the node keys from the previous release to the newer one.

This process may require intermediate steps, such as database migration or state resync (by deleting the `~/.near/betanet/data` folder).

## Additional considerations
In the upcoming weeks we will introduce special builds, with tags specifically for Stake Wars Challenge 005 participants. We will measure the reactivity of valdiators to newer releases, and the capacity to identify bugs or test failures prior to the node deployment.

## Contribution Opportunities

Do you want to earn extra tokens? We have contribution opportunities available below! 

Follow the Validator channel on [NEAR Portal](https://portal.near.org/topic/validator), you will find a list of available contributions to earn tokens. In order to participate, you will have to specify:
- the title of the contribution you made
- the type of document you released
- a clear reference to the available contribution below

Once your work is reviewed, you will be added to the list below. Please note that rewards in tokens will need to pass basic KYC checks from NEAR Foundation, and comply with regulations.

**Heads up:** If you can't see/write in the Validator Portal, be sure that you filled up the [Challenge 004 contact form](https://nearprotocol1001.typeform.com/to/x4Bval), so we can send you an invitation email.

### List of available contributions
**Heads Up:** No more contributions are accepted, except the ones already posted on https://portal.near.org before October 2nd. You are free to add new ones without receiving token rewards!

| Title | Abstract                    | Contributor |  Date  | Link | NEAR Tokens | Maintenance | Language |
| -------- | ------------------------------ | ----------- | ------ | ---- | ----------- | --- | ---- |
| Release a CI Pipeline doc | Create an article or a commented Github script to explain and execute an automated building and testing of a new release of nearcore. Before starting the project request approval in the NEAR portal. | masknetgoal634 | August 5 2020 | [Github Actions](https://github.com/masknetgoal634/nearcore-deploy) | 3,500 | 15% | EN |
| Release a CI Pipeline doc | Same as above | @abellinii | August 6 2020| [Github](https://github.com/abellinii/near-ci)  | 3,500 | 15% | EN |
| Release a CI Pipeline doc | Same as above | [@Hugoo](https://github.com/Hugoo) | August 19 2020| [Blog](https://blog.hugomasclet.com/deploy-near-validator-node-kubernetes/) / [GitHub Actions](https://github.com/Gielve/NearDeploy) | 3,500 | 15% | EN |
| Release a CI Pipeline doc | Same as above | @narniec | August 23 2020| [Medium](https://medium.com/@narniec2020/ci-pipeline-jenkins-for-near-91b4ae3edde)  | 3,500 | 15% | RU |
| Release a CI Pipeline doc | Same as above | [@48cfu](https://github.com/48cfu) | September 12 2020| [Github Actions + Shell](https://github.com/48cfu/near-documentazione/blob/master/guida-localnet.md) | 3,500 | 15% | IT |
| Release a CI Pipeline doc | Same as above | [@majal](https://github.com/majal) | Sep 16 2020 | [GitHub Gist](https://gist.github.com/majal/ce091bf598ab77f69b7312791eba9af2) | 3,500 | 15% | EN |
| Release a CI Pipeline doc | Same as above | [@bonsfi](https://github.com/majal) | Sep 16 2020 | [GitHub](https://github.com/bonsfi/nixos-nearcore) | 3,500 | 15% | EN |
| Release a CD Pipeline doc | Create an article and a Github document/script to explain and execute an automated deployment of a new release of nearcore. Before starting the project request approval in the NEAR portal. | @abellinii | Jul 29 2020 | [Terraform](https://github.com/abellinii/near-terraform)| 3,000 | 15% | EN |
| Release a CD Pipeline doc | Same as the above | masknetgoal634 | August 5 2020 | [Github Actions](https://github.com/masknetgoal634/nearcore-deploy) | 3,000 | 15% | EN |
| Release a CD Pipeline doc | Same as the above | etherscam | August 17 2020 | [Jenkins](https://github.com/etherscam/testnear) | 3,000 | 15% | EN |
| Release a CD Pipeline doc | Same as the above | minstr22 <zainy | August 28 2020 | [Jenkins](https://github.com/minstr22/near-Protocol--ci-cd-Jenkins) | 3,000 | 15% | EN |
| Release a CD Pipeline doc | Same as the above | @mabalaru | Sep 17 2020 | [Ansible](https://github.com/mabalaru/near/tree/master/near-ci) | 3,000 | 15% | EN |
| Release a CD Pipeline doc | Same as the above | minstr22 <zainy | August 28 2020 | [Jenkins](https://github.com/minstr22/near-Protocol--ci-cd-Jenkins) | 3,500 | 15% | EN |
| Release a CD Pipeline doc | Same as the above | minstr22 <zainy | August 28 2020 | [Jenkins](https://github.com/minstr22/near-Protocol--ci-cd-Jenkins) | 3,000 | 15% | EN |
| Release a CD Pipeline doc | Same as the above | [@48cfu](https://github.com/48cfu) | September 12 2020 | [Github Actions + Shell](https://github.com/48cfu/near-documentazione/blob/master/guida-localnet.md) | 3,000 | 10% | IT |
| Release a CD Pipeline doc | Same as the above | @savelev1 | Sep 16 2020 | [Github](https://github.com/savelev1/nearcore-updater) | 3,000 | 15% | RU/EN |
| Release a CD Pipeline doc | Same as the above | @crypto-solutions(https://github.com/crypto-guys/) | Sep 16 2020 | [Github](https://github.com/crypto-guys/nearcore-continuous-delivery) | 3,000 | 15% | EN |
| Release a CD Pipeline doc | Same as the above | @rozum-dev(https://github.com/rozum-dev/) | Sep 20 2020 | [Medium](https://medium.com/@dmytro.rozum/використання-jenkins-для-ci-cd-nearcore-7e4aa8f598a0) | 3,000 | 15% | UA |
| Release a CD Pipeline doc | Same as the above | @ama31337(https://github.com/ama31337/) | Sep 24 2020 | [Github](https://github.com/ama31337/near-update) | 3,000 | 15% | EN |
| Release a CD Pipeline doc | Same as the above | @bonsfi(https://github.com/ama31337/) | Oct 1 2020 | [Github](https://github.com/bonsfi/nixos-nearcore) | 3,000 | 15% | EN |
| Release a CD Pipeline doc | Same as the above | @marat586l(https://github.com/marat586l/) | Oct 24 2020 | [Github]( https://github.com/marat586l/-nearcore-updater) | 3,500 | 15% | EN |
| Write a localnet tutorial | Create a tutorial on how to automatically deploy and boot your own NEAR network, using it to test a new release of nearcore. | @abellinii | August 6 2020 | [Medium](https://medium.com/@thepassivetrust/automating-ci-cd-on-a-near-network-validator-6803b3b63f2f) | 1,500 | 10% | EN |
| Write a localnet tutorial | Same as the above. | @minstr22 | August 6 2020 | [Medium](https://medium.com/@ainsleypaul7/near-jenkins-fbd42e027a93) | 1,500 | 10% | EN |
| Write a localnet tutorial | Same as the above. | [@48cfu](https://github.com/48cfu) | September 12 2020 | [Github](https://github.com/48cfu/near-documentazione/blob/master/guida-localnet.md) | 1,500 | 10% | IT |
| Write a localnet tutorial | Detailed guide on localnet | @ama31337(https://github.com/ama31337/) | September 24 2020 | [Github](https://github.com/ama31337/neartips/blob/master/manuals/running-localnet.md) | 1,500 | 10% | EN |
| Write a localnet tutorial | Same as the above | @cryptomilion | Sep 25 2020 | [Medium](https://medium.com/@shiverov/%D0%B0%D0%B2%D1%82%D0%BE%D0%BC%D0%B0%D1%82%D0%B8%D1%87%D0%BD%D0%B5-%D0%BE%D0%BD%D0%BE%D0%B2%D0%BB%D0%B5%D0%BD%D0%BD%D1%8F-nearcore-d84b22a691aa) | 1,500 | 10% | UA |
| Write a localnet tutorial | Same as the above | @bonsfi | Oct 1 2020 | [Medium](https://medium.com/@bonsfi/como-automatizar-ci-cd-en-tu-validador-de-near-protocol-6ccf9ca91529) | 1,500 | 10% | ES |

## Previous Challenge
Create your warchest to dynamically keep one seat: [challenge004](challenge004.md)

'''
'''--- challenges/challenge00x.md ---
# Stake Wars Challenge 00x _template_
Published on: Month day year

Abstract Here.
Why this challenge is important.

## Acceptance Criteria

1. First Criteria
2. Second Criteria

### 1.First Criteria
Explanation and walkthrough

### 2.Second Criteria
Explanation and walkthrough

## Contribution Opportunities

Do you want to earn extra tokens? We have contribution opportunities available below! 

Follow the Validator channel on [NEAR Portal](https://portal.near.org/topic/validator), you will find a list of available contributions to earn tokens. In order to participate, you will have to specify:
- the title of the contribution you made
- the type of document you released
- a clear reference to the available contribution below

Once your work is reviewed, you will be added to the list below. Please note that rewards in tokens will need to pass basic KYC checks from NEAR Foundation, and comply with regulations.

### List of available contributions

| Abstract | Description                    | Contributor |  Date  | Link | NEAR Tokens | Maintenance | Language |
| -------- | ------------------------------ | ----------- | ------ | ---- | ----------- | --- | ---- |
| Entry one | Create a tutorial, in the form of a video, a blogpost or Github document, that... Updates to this guide, reflecting any updates of the tools involved, will be paid a % of the initial bounty per each revision, up to once per month, until Stake Wars is over. | - | - | - | [amount] | 10% | CN |
| Entry two | Brief description. Contributions in other languages are encouraged, but considered case by case basis.| - | - | - | [amount] | - x% | US |

## Next Challenge

## Previous Challenge

'''
'''--- media/certus_logo.svg ---
<svg width="49" height="41" viewBox="0 0 49 41" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M20.2 36.28C17.2908 36.2776 14.4367 35.486 11.9419 33.9895C9.44714 32.493 7.40505 30.3478 6.03326 27.7823C4.66146 25.2169 4.01135 22.3273 4.15219 19.4215C4.29304 16.5157 5.21956 13.7026 6.83305 11.2818C8.44653 8.86103 10.6865 6.92334 13.3144 5.67517C15.9422 4.427 18.8594 3.91513 21.7552 4.19409C24.651 4.47304 27.4169 5.53238 29.7581 7.25923C32.0994 8.98607 33.9283 11.3157 35.05 14H39.43C37.9589 9.41395 34.8977 5.50444 30.7983 2.97643C26.6989 0.448423 21.8311 -0.531705 17.0728 0.212787C12.3145 0.95728 7.97878 3.3774 4.84748 7.03673C1.71617 10.6961 -0.00463867 15.3538 -0.00463867 20.17C-0.00463867 24.9862 1.71617 29.6439 4.84748 33.3032C7.97878 36.9626 12.3145 39.3827 17.0728 40.1272C21.8311 40.8717 26.6989 39.8915 30.7983 37.3635C34.8977 34.8355 37.9589 30.926 39.43 26.34H35.05C33.8332 29.2783 31.7735 31.7903 29.1306 33.5594C26.4878 35.3284 23.3802 36.2751 20.2 36.28Z" fill="#015EE7"/>
<path d="M27.75 22.26C27.2509 24.0925 26.1036 25.6816 24.5212 26.732C22.9387 27.7824 21.0288 28.2226 19.1463 27.9708C17.2637 27.7191 15.5366 26.7925 14.2858 25.3632C13.0349 23.934 12.3454 22.0993 12.3454 20.2C12.3454 18.3007 13.0349 16.466 14.2858 15.0367C15.5366 13.6075 17.2637 12.6809 19.1463 12.4292C21.0288 12.1774 22.9387 12.6176 24.5212 13.668C26.1036 14.7183 27.2509 16.3074 27.75 18.14H36.15C35.9696 16.7171 35.5996 15.3248 35.05 14H30.42C29.0704 11.7488 27.02 10.0021 24.5829 9.02766C22.1457 8.05319 19.4563 7.90465 16.9267 8.60479C14.3971 9.30494 12.1668 10.8151 10.5775 12.904C8.98824 14.9929 8.12769 17.5453 8.12769 20.17C8.12769 22.7947 8.98824 25.3471 10.5775 27.4359C12.1668 29.5248 14.3971 31.035 16.9267 31.7352C19.4563 32.4353 22.1457 32.2868 24.5829 31.3123C27.02 30.3378 29.0704 28.5912 30.42 26.34H35.05C35.5971 25.0248 35.967 23.6427 36.15 22.23L27.75 22.26Z" fill="#015EE7"/>
<path d="M39.43 26.38H43.69C44.0404 25.0292 44.2746 23.6508 44.39 22.26H40.26C40.1283 23.6586 39.8502 25.0395 39.43 26.38Z" fill="#015EE7"/>
<path d="M40.27 18.14H44.39C44.2739 16.742 44.0363 15.3568 43.68 14H39.43C39.8565 15.3462 40.138 16.734 40.27 18.14Z" fill="#015EE7"/>
<path d="M40.37 20.2C40.37 19.5 40.37 18.82 40.27 18.14H36.15C36.3233 19.5079 36.3233 20.8921 36.15 22.26H40.27C40.33 21.58 40.37 20.89 40.37 20.2Z" fill="#015EE7"/>
<path d="M20.18 23.38C21.9584 23.38 23.4 21.9384 23.4 20.16C23.4 18.3816 21.9584 16.94 20.18 16.94C18.4017 16.94 16.96 18.3816 16.96 20.16C16.96 21.9384 18.4017 23.38 20.18 23.38Z" fill="#015EE7"/>
<path d="M48.46 18.14H44.4C44.45 18.81 44.49 19.48 44.49 20.14C44.49 20.8 44.49 21.55 44.39 22.24H48.45C48.51 21.5733 48.54 20.8733 48.54 20.14C48.54 19.48 48.51 18.81 48.46 18.14Z" fill="#015EE7"/>
</svg>
'''
'''--- scenarios.md ---
# Stake Wars 2.0 Test Scenarios

## Basic Participation Needs
This second phase of NEAR Stake Wars will try to break the delegation of tokens to Validators.
Validators still have to properly run their nodes infrastructure, and get familiar with the activities below:
1. Professionally deploy and run the node
2. Update the node software
3. Deploy the Delegation smart contract
4. Enroll your Validator
5. Update the Delegation smart contract

### 1.Professionally deploy and run the node
- Pull `nearcore` from [https://github.com/nearprotocol/nearcore](https://github.com/nearprotocol/nearcore). To run on BetaNet you have to checkout on the `beta` branch
- Build `nearcore` launching `make release`
- Install `nearup` from [https://github.com/near/nearup](https://github.com/near/nearup)
- Run the node from your compiled binary, properly using `--nodocker` and `--binary-path`
- Monitor your node performance, by measuring `num_expected_blocks` and `num_produced_blocks` from the `validators` method on the JSON RPC - [here more info](https://docs.nearprotocol.com/docs/interaction/rpc)
- Design and build your own redundancy/availability solutions for your nodes

**Heads up:** running a node is up to your experience, these are not requirements. As an example, you may build your own docker image, or avoid using `nearup` completely.

### 2.Update the node software
- Download and deploy the weekly release of `nearcore` from the `beta` branch. It is normally merged by NEAR core team on Monday at 5:30pm Pacific and deployed on `DevNet`.
- In case of a planned hard-fork, restart the node with the new release at the programmed time
- Update the node without missing more than 10% of the `num_expected_blocks` (to avoid being kicked out in the next epoch)
- Promptly Re-stake if your node misses the target and will be kicked out

**Heads up:** BetaNet goes through frequent updates and hard-forks, set to every Monday at 5:30pm Pacific. TestNet is using a less tight schedule, with releases that can be deployed up to once every four weeks. Please use the `stable` branch of [nearcore](https://github.com/nearprotocol/nearcore) if you are running a node on TestNet.
More details can be found in the documentation pages at [docs.near.org/validator/staking-overview](https://docs.near.org/docs/validator/staking-overview)

### 3.Deploy the Delegation smart contract
- Deploy your Staking Pool using the `staking-pool-factory` from the [Initial Contracts repo](https://github.com/near/core-contracts)
- Deploy the contract with `near-cli`
- Configure the contract with the exact node id and its validator public key
- Stake delegating your BetaNet funds to the contract

### 4. Enroll your Validator
Once your contract is ready, you can issue a pull request to the file [VALIDATORS.md](VALIDATORS.md), including your information at the bottom of the list. This file will automatically enroll your node in the Stake Wars 2.0, and will help users to find your staking pool.

## Advanced Participation Opportunities
Stake Wars is an opportunity to explore the potential of smart contracts for delegation. Ideally, every Validator could release its very own staking pool contract, with unique features in terms of:
- Lock duration and liquidity
- Variable validation fees
- Compounding rewards
- Governance and community voting
- Bounties and community projects
- Rewarded custody services

Our goal, as validators, is to make end-users used with this new way of staking tokens.
Their actions will be quite basic:
- deposit and withdraw tokens
- lock and unlock tokens in the staking
- measure their rewards

## Stake Wars Rewards
Please note that Stake Wars 2.0 is not rewarding any basic scenarios, as they were already tested and rewarded during the first phase. At this stage, we suggest participating Validators to test the delegation via smart contracts and, once ready, leverage this opportunity to join the MainNet Restricted along with their users.

'''
'''--- staking_cheatsheet.md ---
# Staking Pool Cheatsheet

This low-maintained cheatsheet supports Validators and Delegators who use [near-cli](https://github.com/near/near-cli) to manage their stake.

Replace `nearkat.stakingpool` with the name of your pool, and `pool_admin.nearkat` with the owner/administrator of the pool (or the account that is staking the tokens).

If you get stuck, give a look to the [troubleshooting page](trobuleshooting.md), open an issue, or join [near.chat](https://near.chat) on Discord

## Deploy a staking pool using the staking pool factory
This is the only method allowed to deploy a staking pool on TestNet and MainNet, and uses the [staking pool factory](https://github.com/near/core-contracts/tree/master/staking-pool-factory). All pools deployed with this method on TestNet will end with the `.stakingpool` suffix.

### Call the staking pool factory `.stakingpool` to deploy the contract
```
near call stakingpool create_staking_pool '{"staking_pool_id":"nearkat", "owner_id":"pool_admin.nearkat", "stake_public_key":"ed25519:00000000000000000000000000000000000000000042", "reward_fee_fraction": {"numerator":25, "denominator": 100}}' --accountId pool_admin.nearkat --amount 30
```
From the example above, you have to replace:
- `nearkat` with the name of your staking pool (**HEADS UP:** the factory automatically adds its name to this parameter, creating `nearkat.stakingpool`)
- `pool_admin.nearkat` with the wallet that will control the staking pool
- `ed25519:0..042` with the public key in your `validator.json` file
- `25` with the fees that you like (in this case 25 over 100 is 25% of fees!)
- `pool_admin.nearkat` in the --accountId with your pool admin account
- be sure to have `30` NEAR available in your account (**HEADS UP:** keep the minimum balance to pay the [storage stake](https://near.org/papers/the-official-near-white-paper/#economics))

## Manage your deployed staking pool
Once your pool is deployed, you can issue the commands below

### Deposit 10k tokens for the account `pool_admin.nearkat`
```
near call nearkat.stakingpool deposit '' --accountId pool_admin.nearkat --amount 10000
```

### Stake 10k tokens (value in YoctoNEAR) with the account `pool_admin.nearkat`
```
near call nearkat.stakingpool stake '{"amount": "10000000000000000000000000000"}' --accountId pool_admin.nearkat
```

### Ping the pool, paying gas from account `pool_admin.nearkat`
```
near call nearkat.stakingpool ping '{}' --accountId pool_admin.nearkat
```

### Retrieve the total balance in YoctoNEAR for the account `pool_admin.nearkat`
```
near view nearkat.stakingpool get_account_total_balance '{"account_id": "pool_admin.nearkat"}'
```

### Retrieve the staked balance in YoctoNEAR for the account `pool_admin.nearkat`
```
near view nearkat.stakingpool get_account_staked_balance '{"account_id": "pool_admin.nearkat"}'
```

### Unstake 10k tokens (value in YoctoNEAR) from the account `pool_admin.nearkat`
```
near call nearkat.stakingpool unstake '{"amount": "10000000000000000000000000000"}' --accountId pool_admin.nearkat
```

### Retrieve the unstaked balance in YoctoNEAR for the account `pool_admin.nearkat`
```
near view nearkat.stakingpool get_account_unstaked_balance '{"account_id": "pool_admin.nearkat"}'
```

### Check if the unstaked balance for the account `pool_admin.nearkat` is unlocked
```
near view nearkat.stakingpool is_account_unstaked_balance_available '{"account_id": "pool_admin.nearkat"}'
```

### Withdraw 10k tokens in YoctoNEAR from the account `pool_admin.nearkat`
```
near call nearkat.stakingpool withdraw '{"amount": "10000000000000000000000000000"}' --accountId pool_admin.nearkat
```

### Retrieve the owner ID of the staking pool
```
near view nearkat.stakingpool get_owner_id '{}'
```

### Retrieve the staking key of the staking pool
```
near view nearkat.stakingpool get_staking_key '{}'
```

### Update the staking key of the staking pool
(replace the pubkey below with the key in your `validator.json` file)
```
near call nearkat.stakingpool update_staking_key '{"stake_public_key": "ed25519:00000000000000000000000000000000000000000042"}' --accountId pool_admin.nearkat
```

### Put the staking pool on hold
```
near call nearkat.stakingpool pause_staking '{}' --accountId pool_admin.nearkat
```

### Resume the staking
```
near call nearkat.stakingpool resume_staking '{}' --accountId pool_admin.nearkat
```

## Alternative Method: deploy a custom staking pool, using your locally-compiled contract
This method can be used only on BetaNet, and allows you to run your own fork of the [staking pool](https://github.com/near/core-contracts/tree/master/staking-pool).

### Deploy the smart contract in the account `my_cool_pool.nearkat`
(replace `my_cool_pool.nearkat` account with your cool pool name)
```
near deploy --accountId=my_cool_pool.nearkat --wasmFile=res/staking_pool_with_shares.wasm
```

### Configure the staking pool contract
(replace `my_cool_pool.nearkat`, `pool_admin.nearkat`, `stake_public_key` and `reward_fee_fraction` accordingly)
```
near call my_cool_pool.nearkat new '{"owner_id": "pool_admin.nearkat", "stake_public_key": "ed25519:00000000000000000000000000000000000000000042", "reward_fee_fraction": {"numerator": 25, "denominator": 100}}' --accountId pool_admin.nearkat
```
The pool above will have 25% of fees (25 numerator, 100 denominator).
'''
'''--- troubleshooting.md ---
# Stake Wars Troubleshooting

This document will address the most common issues you may have while running Stake Wars and setting up your node.
Contributions and corrections are welcome!

## Table of contents

### Node-related issues
1. My validator is in the `current_validators` set, but it's not producing blocks
2. I get `Telemetry data` error in the logs
3. I get a `Peer stream error` while syncing with other nodes
4. My node seems stuck at 98% of the sync, without progressing
5. My node is stuck at zero peers

### Near-cli and RPC issues
1. I get a `Server error: Timeout` when I use near-cli
2. I get a `type: 'UntypedError'` if I try to use near-cli
3. I get a `KeyNotFound` error if I try to use near-cli
4. I get a timeout error from the RPC after I send a command
5. I had a wallet created on [nearprotocol.com](http://nearprotocol.com), and now I can't access it anymore
6. I try to login with near-cli, but I receive the `ERR_CONNECTION_REFUSED` error on the website

### Staking-related issues
1. I used `near send` instead of `near call` to my staking pool
2. I used `near stake` instead of `near call` to stake funds to my pool
3. I get a `GuestPanic` when I try to _unstake_ funds from my staking pool
4. I get a `GuestPanic` when I try to _withdraw_ funds from my staking pool
5. I set up the wrong owner to my staking pool

## 1. Node-related issues

### 1.1 My validator is in the `current_validators` set, but it's not producing blocks
This issue can happen if there's a mismatch of `public_key` or `account_id` between your validator node and the staking transaction.

**On your node**

Check if your node is actively validating blocks, by inspecting the logs with the command `docker logs nearcore --tail 5 2>&1 | grep "V/"` or `nearup logs | grep "V/" -n 5` (the latter if you are not using Docker). If this command produces zero results, your node may be misconfigured. 

Issue the command `cat .near/betanet/validator_key.json | grep "account_id\|public_key"`. You should expect the following result:
```
  "account_id": "c2.nearkat",
  "public_key": "ed25519:Zk6cdWPxmK1H5cy3K3GbyDRUyHz9w8a9Q2Mb7ezKiHW",
```
Note this result and proceed to verify the staking pool configuration.

**On your near-cli machine**

Issue the command `curl -d '{"jsonrpc": "2.0", "method": "validators", "id": "dontcare", "params": [null]}' -H 'Content-Type: application/json' https://rpc.betanet.near.org | jq -c '.result.current_validators[] | select(.account_id | contains ("c2.nearkat"))'`. (Remember to replace `c2.nearkat` with the account_id from your validator_key.json)

You should expect the following result:

```
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 39719  100 39641  100    78   342k    690 --:--:-- --:--:-- --:--:--  343k
{"account_id":"c2.nearkat","public_key":"ed25519:Zk6cdWPxmK1H5cy3K3GbyDRUyHz9w8a9Q2Mb7ezKiHW","is_slashed":false,"stake":"289982335519735189330363217693","shards":[0],"num_produced_blocks":196,"num_expected_blocks":197}
```
If the `account_id` or `public_key` are different from your validator_key.json, your pool is misconfigured, and you have to correct either the node or the staking pool config.

**Remediation**

If your `account_id` is wrong, follow these steps:
1. Stop your node with `nearup stop`
2. Edit the file `~/.near/betanet/validator.json` and manually change the `account_id` with the one from the RPC query
3. Delete the data folder with the command `rm -rf ~/.near/betanet/data`
4. Restart your node

You might expect a result similar to this one:
```
Using officially compiled binary
Downloaded binary version is up to date
Our genesis version is up to date
Stake for user 'c2.nearkat' with 'ed25519:Zk6cdWPxmK1H5cy3K3GbyDRUyHz9w8a9Q2Mb7ezKiHW'
Starting NEAR client...
Node is running! 
To check logs call: `nearup logs` or `nearup logs --follow`
```
If successful, `num_produced_blocks` will be higher than zero.

**Otherwise**, if your `public_key` is wrong, follow these steps:
1. Issue the command `near call <ACCOUNT_ID> update_staking_key '{"stake_public_key":"ed25519:Zk6cdWPxmK1H5cy3K3GbyDRUyHz9w8a9Q2Mb7ezKiHW"}' --accountId <OWNER_ID>`
2. Issue the command `curl -d '{"jsonrpc": "2.0", "method": "validators", "id": "dontcare", "params": [null]}' -H 'Content-Type: application/json' https://rpc.betanet.near.org | jq -c '.result.current_proposals[] | select(.account_id | contains ("<ACCOUNT_ID>"))'`

(where <ACCOUNT_ID> is the ID of your staking pool, and <OWNER_ID> is your main wallet).

You might expect a result similar to this one:
```
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 33922  100 33844  100    78   367k    866 --:--:-- --:--:-- --:--:--  368k
{"account_id":"c2.nearkat","public_key":"ed25519:Zk6cdWPxmK1H5cy3K3GbyDRUyHz9w8a9Q2Mb7ezKiHW","stake":"101665314574769168872143240913"}
```
If successful, `num_produced_blocks` will be higher than zero.

Remember to ping your staking pool to re-issue your staking transaction, as your node will most probably be kicked out in the next epoch, and you will lose your validator seat. Use the command `near call <ACCOUNT_ID> ping '{}' --accountId <OWNER_ID>`.

### 1.2. I get Telemetry data errors in the logs
Sometimes, after you restart your node or shortly after an update, you may see this error in the logs:
```
Jun 10 23:17:30.014  INFO telemetry: Telemetry data could not be sent due to: Failed to connect to host: Timeout out while establishing connection
```

This is not an issue, you can safely ignore this error as it only impacts the ability of the BetaNet explorer to receive data from your node. As a result, it is possible that your node won't appear in the list at the address https://explorer.betanet.near.org/nodes/validators.

### 1.3. I get a `Peer stream error` while syncing with other nodes
If you see an error similar to this one:
```
May 26 04:39:58.712 WARN network: Peer stream error: Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" }
```
it is possible that one of your peers disconnected your node. It may happen if:
- your node is not running the same version of the other peer
- your node is a validator, but it's producing zero blocks (see above)

If this message is repeated multiple times and your node gets zero connected peers, you may need to stop nearup, clean entirely the data in the folder at `~/.near/betanet`, and start the node again.

**Heads up:** deleting this folder will generate a new public key for your node and will need a resync. As a result, your node may result offline and be kicked out.

### 1.4. My node seems stuck at 98% of the sync, without progressing
The counter simply measures the number of blocks remaining to reach the tip of the chain, and not the amount of computation necessary to complete the operation. As a result, it is possible that certain blocks contain more information and need more time to be processed, showing slower progress.

If your node has no active peers, you may need to reset your `.near/betanet` folder, and generate a new node key. Check the in the logs if the number of peers is not `0/0/40`:

```
Jun 10 23:18:15.092  INFO stats: # 6949467 Downloading headers 5% -/86  8/8/40 peers ⬇ 493.4kiB/s ⬆ 181.2kiB/s 0.00 bps 0 gas/s CPU: 80%, Mem: 462.5 MiB
```

### 1.5. My node is stuck at zero peers
Other peers may have banned your node because it is running an outdated release of `nearcore`.

**On your node**
Issue one of these two commands:
- `docker logs nearcore 2>&1 | grep Build` if you are running nearup using Docker
- `nearup logs | grep Build` if you are running nearup with the --nodocker switch

You should expect a result similar to this one:
```
Jun 10 23:17:11.628  INFO near: Version: 1.0.0, Build: b30864b8, Latest Protocol: 22 
```

**On your near-cli machine**
Issue the command `curl -d '{"jsonrpc": "2.0", "method": "status", "id": "dontcare", "params": [null]}' -H 'Content-Type: application/json' https://rpc.betanet.near.org | jq .result.version`

You should expect a result similar to this one:
```
{
  "version": "1.0.0",
  "build": "b30864b8"
}
```

If you see different version or build, your node is running an outdated release of nearcore and needs a reset. 

**Remediation**
1. Stop nearup with `nearup stop`
2. Make a backup copy of your validator_key.json file with the command `cp ~/.near/betanet/validator_key.json ~`
3. Clean the betanet folder with the command `rm -rf ~/.near/betanet`
4. [ONLY FOR DOCKER USERS] run the command `docker system prune --volumes` to clean up the containers and the cache
5. Start nearup again with the command `nearup betanet` (remember to add `--nodocker` and the `--binary-path` if you are using them)
6. Press enter, leaving empty the validator ID
7. Stop nearup again with `nearup stop`
8. Clean the data folder in `~/.near/betanet/data`
9. Copy the validator key in the betanet folder with the command `cp ~/validator_key.json ~/.near/betanet/`
10. Start nearup again 

At the end of this process, you should expect a message like the one below:

```
Using officially compiled binary
Downloaded binary version is up to date
Our genesis version is up to date
Stake for user 'c2.nearkat' with 'ed25519:Zk6cdWPxmK1H5cy3K3GbyDRUyHz9w8a9Q2Mb7ezKiHW'
Starting NEAR client...
Node is running! 
To check logs call: `nearup logs` or `nearup logs --follow`
```

This process will use nearup scripts to generate the config files, the node keys and the genesis.json file from scratch while keeping the validator_key intact (which is used by the staking pool contract).
Be sure that only one node at a time is using your validator_key.json, or you risk to double-sign blocks.

## 2.Near-cli and RPC issues

### 2.1. I get a `Server error: Timeout` when I use near-cli
If you are on BetaNet, we often apply experimental features that can impact RPC's stability.

The error may look similar to this one:
```
Error:  TypedError: [-32000] Server error: Timeout
    at JsonRpcProvider.sendJsonRpc (/usr/lib/node_modules/near-shell/node_modules/near-api-js/lib/providers/json-rpc-provider.js:129:27)
    at processTicksAndRejections (internal/process/task_queues.js:97:5)
    at async Account.signAndSendTransaction (/usr/lib/node_modules/near-shell/node_modules/near-api-js/lib/account.js:97:22)
    at async scheduleFunctionCall (/usr/lib/node_modules/near-shell/commands/call.js:30:34)
    at async Object.handler (/usr/lib/node_modules/near-shell/utils/exit-on-error.js:4:9) {
  type: 'UntypedError'
}
```

**Remediation:**
1. Look for the transaction on the [BetaNet Explorer](https://explorer.betanet.near.org)
2. Point near-cli to a local node
3. The network is not producing new blocks

**1. Look for the transaction on the BetaNet Explorer**
Most of the time, your transaction was correctly sent to the network, regardless of the timeout error in `near-cli`.
If you don't see the transaction in the explorer, you can issue the command again and refres the explorer page.

**2. Point near-cli to a local node**
Download and run `nearup` on your local machine, and point near-cli to the localhost for the queries. As an example, the command `near state test` would become `near state test --nodeUrl http://127.0.0.1:3030 --helperUrl http://127.0.0.1:3030`.
You should see a result similar to this one:

```
Using options: {
  nodeUrl: 'http://127.0.0.1:3030',
  helperUrl: 'http://127.0.0.1:3030',
  networkId: 'betanet',
  contractName: undefined,
  walletUrl: 'https://wallet.betanet.near.org',
  useLedgerKey: "44'/397'/0'/0'/1'",
  accountId: 'test',
  initialBalance: null
}
Account test
{
  amount: '78447050893413945551764297785000',
  locked: '0',
  code_hash: '11111111111111111111111111111111',
  storage_usage: 182,
  storage_paid_at: 0,
  block_height: 7095636,
  block_hash: '9ukamhGe6fFgDnHXWvUQJoJhWXVQqKxqEr7zmmugfyWs',
  formattedAmount: '78,447,050.893413945551764297785'
}

```

**3. The network is not producing new blocks**
In the unlikely situation that NEAR Protocol is not producing new blocks, near-cli cannot issue commands that change the state of the ledger, such as `near call` or `near login`. In this case, you have to check the status of the network from the page at https://status.nearprotocol.com/ and wait when the services are back online to perform such actions.

### 2.2. I get a `type: 'UntypedError'` if I try to use near-cli
Most of the time you can find the reason of the error by scrolling up a few lines:
```
Using options: {
  networkId: 'default',
  nodeUrl: 'https://rpc.testnet.near.org',
  contractName: undefined,
  walletUrl: 'https://wallet.testnet.near.org',
  helperUrl: 'https://helper.testnet.near.org',
  useLedgerKey: "44'/397'/0'/0'/1'",
  accountId: 'nearkat',
  initialBalance: null
}
Error:  TypedError: [-32000] Server error: account nearkat does not exist while viewing
    at JsonRpcProvider.sendJsonRpc (/usr/lib/node_modules/near-shell/node_modules/near-api-js/lib/providers/json-rpc-provider.js:129:27)
    at processTicksAndRejections (internal/process/task_queues.js:97:5)
    at async JsonRpcProvider.query (/usr/lib/node_modules/near-shell/node_modules/near-api-js/lib/providers/json-rpc-provider.js:61:24)
    at async Account.fetchState (/usr/lib/node_modules/near-shell/node_modules/near-api-js/lib/account.js:46:23)
    at async Account.state (/usr/lib/node_modules/near-shell/node_modules/near-api-js/lib/account.js:53:9)
    at async Near.account (/usr/lib/node_modules/near-shell/node_modules/near-api-js/lib/near.js:41:9)
    at async exports.viewAccount (/usr/lib/node_modules/near-shell/index.js:161:19)
    at async Object.handler (/usr/lib/node_modules/near-shell/utils/exit-on-error.js:4:9) {
  type: 'UntypedError'
}

```
Simply analyze the `Error:` line of the message. In this case, `account nearkat does not exist while viewing` means I'm trying to view the user `nearkat` on TestNet network and not BetaNet (as you can see in the `walletUrl` and `helperUrl` fields of the options).

### 2.3. I get a `KeyNotFound` error if I try to use near-cli
Your near-cli may not have the keys to operate on your account, showing an error similar to the one below: 

```
}
Sending 1 NEAR to test from bowen.test
Error:  TypedError: Can not sign transactions for account bowen.test, no matching key pair found in Signer.
    at Account.signAndSendTransaction (/usr/local/lib/node_modules/near-shell/node_modules/near-api-js/lib/account.js:91:19)
    at async exports.sendMoney (/usr/local/lib/node_modules/near-shell/index.js:198:33)
    at async Object.handler (/usr/local/lib/node_modules/near-shell/utils/exit-on-error.js:4:9) {
  type: 'KeyNotFound'
}
```

**Remediations**
You can use `near login` again, and authorize your machine, or just copy your json key from your backups to the `~/.near-credentials/betanet/` folder. Previous versions of near-cli were storing credentials in the `neardev` folder, so if your account name is `nearkat.betanet` you may look for it with the command `find -name "*nearkat*.json"`, showing results as below:
```
./betanet/c1.nearkat.betanet.json
./betanet/nearkat.betanet.json
./neardev/betanet/c2.nearkat.betanet.json
./neardev/betanet/c3.nearkat.betanet.json
./neardev/betanet/c1.nearkat.json
./neardev/betanet/c1.nearkat.betanet.json
./neardev/betanet/c2.nearkat.json
./neardev/betanet/nearkat.betanet.json
./neardev/betanet/nearkat.json
./.near-credentials/betanet/c2.nearkat.json
```
The files `./betanet/nearkat.betanet.json` and `./neardev/betanet/nearkat.betanet.json` contain a valid private key to control the account `nearkat.betanet`, so moving them to the directory `./.near-credentials/betanet/` will allow your near-cli to sign a transaction for that account.

**Heads Up:** This solution doesn't apply if you are using a Ledger Wallet.

### 2.4. I get a timeout error from RPC after I sent a command
NEAR RPC may be unresponsive or too slow to reply, generating this type of error. The first step is to control that all the services are running correctly from the url https://status.nearprotocol.com/.

If all services are operational, try to use the explorer yourself, by visiting the url https://explorer.betanet.near.org. If the explorer itself is slow or unresponsive, you can try to use your local node.

**Remediation:**
You can call the same RPC commands to your local node, replacing `https://rpc.betanet.near.org` with your node's IP address. As an example the command
```
curl -d '{"jsonrpc": "2.0", "method": "status", "id": "dontcare", "params": [null]}' -H 'Content-Type: application/json' https://rpc.betanet.near.org | jq
```
becomes
```
curl -d '{"jsonrpc": "2.0", "method": "status", "id": "dontcare", "params": [null]}' -H 'Content-Type: application/json' http://127.0.0.1:3030 | jq
```
(note that you have to use plain http, and specify the port `3030`).

### 2.5. I had a wallet created from the URL at betanet.nearprotocol.com and now I can't see it anymore
NEAR Protocol recently switched from the website `nearprotocol.com` to `near.org`. As a result, some cookies have been reset and your browser can't find your wallet.

**Remediation:**
You have two main ways to recover your account:
1. Use the method above to recover your json wallet file, and copy it where it is needed
2. Recover your wallet using the recovery email, sms or seed passphrase

While option 1 is already documented above, option 2 requires additional steps if you want to use the recovery email with a _magic link_. More specifically, the magic link may still point to `nearprotocol.com`, so your recovery could fail.
Look for any email coming from `wallet@nearprotocol.com` and copy/paste the "Recover Account" link on your favorite text editor.
The result should be similar to the one below:
```
http://undefined/recover-with-link/nearkat/crazy%20horse%20battery%20staple
```
Your seed passphrase is separated by `%20`, so you can manually separate the keys (in this case they are `crazy`, `horse`, `battery`, `staple`) and try to recover your account using the passphrase method.

**Heads Up:** always use the right wallet address to recover your account:
| Network | Wallet URL |
| ------- | ---------- |
| MainNet | https://wallet.near.org |
| TestNet | https://wallet.testnet.near.org |
| BetaNet | https://wallet.betanet.near.org |
| DevNet | https://wallet.devnet.near.org |

Trying to use the right passphrase with the wrong wallet URL will produce no results.

### 2.6. I try to login with near-cli, but I receive the `ERR_CONNECTION_REFUSED` error on the website
You may encounter this error if you copy/paste the url from the login window. The login dialog may be similar to the one below:
```
 ~ $ near login
Using options: {
  networkId: 'betanet',
  nodeUrl: 'https://rpc.betanet.near.org',
  contractName: undefined,
  walletUrl: 'https://wallet.betanet.near.org',
  helperUrl: 'https://helper.betanet.near.org',
  helperAccount: 'betanet',
  useLedgerKey: "44'/397'/0'/0'/1'",
  initialBalance: null
}

Please authorize NEAR Shell on at least one of your accounts.

If your browser doesn't automatically open, please visit this URL
https://wallet.betanet.near.org/login/?title=NEAR+Shell&public_key=ed25519%3AAvQK7mV22ua7QW2Me4BCGzVL2XBMehk1oH6XUuAmQ5iZ&success_url=http%3A%2F%2F127.0.0.1%3A5000
Please authorize at least one account at the URL above.

Which account did you authorize for use with NEAR Shell?
Enter it here (if not redirected automatically):
```
Near-cli generates an URL to automatically redirect to `http%3A%2F%2F127.0.0.1%3A5000`, generating the error if your near-cli is not running locally but on a remote server.

**Remediation**
This error has no impact on a successful login. Simply return to the shell window, and type the username you want to use on near-cli in the propmt screen. If successful, you should see a message similar to the one below:

```
Enter it here (if not redirected automatically):
nearkat.betanet
Logged in as [ nearkat.betanet ] with public key [ ed25519:AvQK7m... ] successfully

```

## 3. Staking-related issues

**Heads up:** most of the commands below imply that you are using the most recent [Staking Pool Contract](https://github.com/near/core-contracts/tree/master/staking-pool) to participate in the Stake Wars.

### 3.1. I used `near send` instead of `near call deposit` to send funds to my staking pool
This command will produce a loss of these funds. More specifically, the staking pool will use these funds as very generous rewards, distributing them to all delegators, based on their shares.

**Remediation:**
There is no remediation, as using the command `near send` will produce a `key not found` error:
```
}
Sending 10 NEAR to pepe.betanet from c2.nearkat
Error:  TypedError: Can not sign transactions for account c2.nearkat, no matching key pair found in Signer.
    at Account.signAndSendTransaction (/usr/lib/node_modules/near-shell/node_modules/near-api-js/lib/account.js:91:19)
    at processTicksAndRejections (internal/process/task_queues.js:97:5)
    at async exports.sendMoney (/usr/lib/node_modules/near-shell/index.js:198:33)
    at async Object.handler (/usr/lib/node_modules/near-shell/utils/exit-on-error.js:4:9) {
  type: 'KeyNotFound'
}
```

### 3.2. I used `near stake` instead of `near call` to send funds to my staking pool
If your pool is correctly deployed, you shouldn't have the keys to perform this command. If you still have the keys to the staking pool, this command will generate an invalid state of the contract, locking your funds but not using them to stake as a validator.

**Remediation:**
Try to unstake your funds with the command `near stake <POOL_ID> <VALIDATOR_PUBKEY> 0 --accountId <POOL_ID>`, where `0` is the amount you want to stake with pool. After three epochs, you should be able to recover the funds and deploy a new pool from scratch.

Please note that:
- this solution won't work if you issue pool commands like `near call <POOL_ID> ping` or `near call <POOL_ID> stake` as they will re-stake the funds
- moving the funds out of the pool with `near send` will steal the tokens of other delegators and will put the contract into an inconsistent/unresponsive state
- this solution wouldn't be possible if you deleted all the access keys to your pool

Use the command `near keys <POOL_ID> | grep length` to see if your pool is locked:
```
 ~ $ near keys blazenet | grep length
[ [length]: 0 ]
```

### 3.3. I get a GuestPanic error when I try to _unstake_ funds from my staking pool
This error may appear when you use a command similar to this one:
`near call c2.nearkat unstake '{"amount": "10094702816452052707222750328"}' --accountId pepe.betanet`

This call is trying to unstake a certain amount of _YoctoNEAR_, with no success:
```
{
  type: 'GuestPanic',
  index: 0,
  panic_msg: "panicked at 'The new total balance should not be less than the old total balance', src/lib.rs:509:9"
}
```

**Remediation:**
1. Ping the contract
2. Unstake the funds
3. Send a small amount of NEAR tokens

In detail:

1. Call the ping method with the command `near call <POOL_ID> ping '{}' --accountId <ACCOUNT_ID>`, to spend some gas from <ACCOUNT_ID> and calculate the rewards of the pool. You should see a result similar to this:
```
 ~ $ near call blazenet ping '{}' --accountId pepe.betanet
Using options: {
  accountId: 'pepe.betanet',
  networkId: 'betanet',
  nodeUrl: 'https://rpc.betanet.near.org',
  contractName: 'blazenet',
  walletUrl: 'https://wallet.betanet.near.org',
  helperUrl: 'https://helper.betanet.near.org',
  useLedgerKey: "44'/397'/0'/0'/1'",
  gas: '100000000000000',
  amount: '0',
  methodName: 'ping',
  args: '{}',
  initialBalance: null
}
Scheduling a call: blazenet.ping({})
[blazenet]: Epoch 50: Contract received total rewards of 28434755107890138499172929 tokens. New total staked balance is 118722681336756467553977389908. Total number of shares 113966017752308135773807659229
[blazenet]: Total rewards fee is 2729550721834190531620296 stake shares.
''

```

2. Unstake the funds
Use the command `near view <POOL_ID> get_account_staked_balance '{"account_id": "<ACCOUNT_ID"}'` to receive the exact amount of YoctoNEAR available in the account. The result should be as follows:
```
 ~ $ near view blazenet get_account_staked_balance '{"account_id": "pepe.betanet"}'
Using options: {
  networkId: 'betanet',
  nodeUrl: 'https://rpc.betanet.near.org',
  contractName: 'blazenet',
  walletUrl: 'https://wallet.betanet.near.org',
  helperUrl: 'https://helper.betanet.near.org',
  useLedgerKey: "44'/397'/0'/0'/1'",
  methodName: 'get_account_staked_balance',
  args: '{"account_id": "pepe.betanet"}',
  initialBalance: null
}
View call: blazenet.get_account_staked_balance({"account_id": "pepe.betanet"})
'25074462113250696720368460556'
```
Afterward, you can issue the command `near call <POOL_ID> unstake '{"amount": "<AMOUNT>"}' --accountId <ACCOUNT_ID>` where it is important to copy/paste an amount in YoctoNEAR wich is minor or equal to the amount above (`25074462113250696720368460556`), and set the <ACCOUNT_ID> with the owner of the staked funds (in this case `--accountId pepe.betanet`).
The result should be similar to the one below:
```
$ near call blazenet unstake '{"amount":"100"}' --accountId pepe.betanet
Using options: {
  accountId: 'pepe.betanet',
  networkId: 'betanet',
  nodeUrl: 'https://rpc.betanet.near.org',
  contractName: 'blazenet',
  walletUrl: 'https://wallet.betanet.near.org',
  helperUrl: 'https://helper.betanet.near.org',
  useLedgerKey: "44'/397'/0'/0'/1'",
  gas: '100000000000000',
  amount: '0',
  methodName: 'unstake',
  args: '{"amount":"100"}',
  initialBalance: null
}
Scheduling a call: blazenet.unstake({"amount":"100"})
[blazenet]: Epoch 49: Contract received total rewards of 954000293751552732160506517 tokens. New total staked balance is 118694246581648577415478217080. Total number of shares 113963288201586301583276039030
[blazenet]: Total rewards fee is 91597540363018443977531872 stake shares.
[blazenet]: @pepe.betanet unstaking 102. Spent 97 staking shares. Total 104 unstaked balance and 24250598102835383494138245619 staking shares
[blazenet]: Contract total staked balance is 118694246581648577415478216979. Total number of shares 113963288201586301583276038933
''
```

3. If you still can't issue any `call` method on your staking pool, it is possible that you need additional funds to pay for the storage (see the [Introduction to NEAR Protocol’s Economics](https://near.org/blog/near-protocol-economics) for more details).
Sending 1 NEAR token should be enough. From the shell, you can issue the command `near send <ACCOUNT_ID> <POOL_ID> 1` to add some funds, and try if the contract becomes responsive again.

**Heads Up:** Any funds sent to a locked pool become _inaccessible_, so you won't be able to withdraw them later on.

### 3.4. I get a GuestPanic when I try to _withdraw_ funds from my staking pool
The _widthdraw_ command is used to move back to your wallet any _unstaked_ funds in the pool. You have to check if:
- the amount you are trying to withdraw is higher than your unstaked balance
- the unstaked balance is not yet available and still in the lock-period 
You should see an error similar to the one below:
```
{
  type: 'GuestPanic',
  index: 0,
  panic_msg: "panicked at 'Not enough unstaked balance to withdraw', src/lib.rs:224:9"
}
```

**Remediation:**
1. Ping the contract
2. View the available unstaked balance
3. Verify if the funds are unlocked

In detail:

1. is documented above, and is easily performed with the command `near call <POOL_ID> call ping '{}' --accountId <ACCOUNT_ID>`.

2. requires the use of the command `near call <POOL_ID> get_account_unstaked_balance '{"account_id": "<ACCOUNT_ID>"}' --accountId <ACCOUNT_ID>` to show the amount of YoctoNEAR available to withdraw. You should see a result similar to the one below:
```
 ~ $ near call blazenet get_account_unstaked_balance '{"account_id":"pepe.betanet"}' --accountId pepe.betanet
Using options: {
  accountId: 'pepe.betanet',
  networkId: 'betanet',
  nodeUrl: 'https://rpc.betanet.near.org',
  contractName: 'blazenet',
  walletUrl: 'https://wallet.betanet.near.org',
  helperUrl: 'https://helper.betanet.near.org',
  useLedgerKey: "44'/397'/0'/0'/1'",
  gas: '100000000000000',
  amount: '0',
  methodName: 'get_account_unstaked_balance',
  args: '{"account_id":"pepe.betanet"}',
  initialBalance: null
}
Scheduling a call: blazenet.get_account_unstaked_balance({"account_id":"pepe.betanet"})
'104'

```
`104` is the balance available to withdraw.

3. requires the use of the command `near call <POOL_ID> is_account_unstaked_balance_available '{"account_id": "<ACCOUNT_ID"}' --accountId <ACCOUNT_ID>` to see if the funds are locked or not by the protocol. NEAR allows the withdraw of unstaked funds after **3 epochs**, to mitigate attacks.

By issuing this command, you should get the following result:
```
 ~ $ near view blazenet is_account_unstaked_balance_available '{"account_id": "pepe.betanet"}'
Using options: {
  networkId: 'betanet',
  nodeUrl: 'https://rpc.betanet.near.org',
  contractName: 'blazenet',
  walletUrl: 'https://wallet.betanet.near.org',
  helperUrl: 'https://helper.betanet.near.org',
  useLedgerKey: "44'/397'/0'/0'/1'",
  methodName: 'is_account_unstaked_balance_available',
  args: '{"account_id": "pepe.betanet"}',
  initialBalance: null
}
View call: blazenet.is_account_unstaked_balance_available({"account_id": "pepe.betanet"})
false
```

If the result is not `true`, your withdraw command will fail, with an error similar to the one below:
```
{
  type: 'GuestPanic',
  index: 0,
  panic_msg: "panicked at 'The unstaked balance is not yet available due to unstaking delay', src/lib.rs:228:9"
}
```

**Heads up:** this remediation can't make a distinction between funds unstaked at different times. It would show a `false` statement even if a portion of your funds was available for withdraw (in the example above 4 YoctoNEAR are available out of the 104 unstaked).

### 3.5. I set up the wrong owner to my staking pool, are funds lost?
When you deploy the staking pool, you have to specify the <POOL_ID> and the <OWNER_ID>. The former is an account that will have to be locked and will receive funds by other users (the delegators). The latter is the manager of the pool, which has specific methods to configure the pool (such as change the validator node public key or the fees).

Setting the <OWNER_ID> with the same account as the <POOL_ID> will lock your pool and will make you unable to change its parameters. As a result, when you lock your staking pool you lose the capability to change any of the parameters above. The solution is to re-deploy the pool and ask your delegators to manually move their funds.
Your delegators will not lose funds, but they will have to unstake, wait three epochs, and withdraw any funds that were previously locked in your misconfigured pool.

You can check the pool owner id by using the command `near view <POOL_ID> get_owner_id '{}'`. The resulting account should be different from the <POOL_ID> itself:
```
 ~ $ near view c2.nearkat get_owner_id '{}'
Using options: {
  networkId: 'betanet',
  nodeUrl: 'https://rpc.betanet.near.org',
  contractName: 'c2.nearkat',
  walletUrl: 'https://wallet.betanet.near.org',
  helperUrl: 'https://helper.betanet.near.org',
  useLedgerKey: "44'/397'/0'/0'/1'",
  methodName: 'get_owner_id',
  args: '{}',
  initialBalance: null
}
View call: c2.nearkat.get_owner_id({})
'c2.nearkat'
```

In the example above, the owner is the same of the pool address, so the only way to control the pool is to have keys to the account `c2.nearkat`.

**Remediation:**
You and your delegators have to unstake the funds and move them to a new pool. Expect to have your node offline more than four epochs of time: three to unlock the funds, and up to two to receive a seat.

## Additional resources

- Join the Validator chat at [https://near.chat].
- Ask questions on Stack Overflow, using the tags [nearprotocol](https://stackoverflow.com/questions/tagged/nearprotocol) and [nearprotocol-validator](https://stackoverflow.com/questions/tagged/nearprotocol-validator).
- Submit a bug (or ask for a new feature!) directly from the Stake Wars [issues section](../../issues).
'''
'''--- updates.md ---
# UPDATES

## UPDATE September 25th
* With NEAR [entering Phase 1](https://near.org/blog/near-mainnet-is-now-community-operated/) we will suspend token rewards after October 2nd 2020. You are still free to add and update your guides, but you will not receive tokens.

## UPDATE August 5th

* Changed `near-shell` into `near-cli`, reflecting the new naming of this tool: https://github.com/near/near-cli

## UPDATE August 3rd

* Nearcore releases are not using anymore branching, so the instructions to build the binaries are different. Refer to https://github.com/nearprotocol/nearcore/releases to see the new release mapping.

## UPDATE July 22nd

* Improved the [README.md](README.md) to clarify the role of challenges and add orientation of the files in this repository.

## UPDATE July 17th

* A new challenge is live [here](challenges/challenge005.md)! Deploy your CI/CD infrastructure to upgrade your node programmatically. This challenge will be very important if you plan to join MainNet Restricted as a validator.
* Added the [staking cheatsheet](staking_cheatsheet.md) 

## UPDATE July 6th

* The first validators officially joined TestNet, and they will progressively unstake and leave BetaNet.
* Thank you Figment Networks for the first [experimental release](https://hubble.figment.network/near/chains/testnet) of Figment Hubble on NEAR!

## UPDATE June 29th

* Added the guidelines to join TestNet! See them [here](GUIDELINES.md)

## UPDATE June 22nd

* Added the Challenge 004, to learn how to dynamically adjust the stake of a pool: [Challenge004](/challenges/challenge004.md)

## UPDATE June 17th

* Leaderboard modified: now it counts only expected blocks and uptime.
* Contributions listed in the challenges, they are worth to be read!
* Another BetaNet update was successfully completed, with minimal downtime. Congrats validators!

## UPDATE June 8th

* New challenge available [here](challenges/challenge003.md)! Build your monitoring platform and send alert emails in case of issues. Add `stefano@near.org` to your email recipients to receive extra funds for delegation.

## UPDATE May 28th

**We sent 75,000 tokens to all applicants, excluding obvious duplicates**
We received exceptional interest by the community of validators, with 300+ applications and 200+ PRs). We are processing all of them, sending 75,000 BetaNet tokens as promised, while making sure the network runs with no issues. As explained in the [docs](https://docs.near.org/docs/validator/economics), there are 100 seats per shard, so BetaNet is running at capacity with a cost per seat right above 75.000 tokens - which means that our contribution will not be sufficient.
How to solve this issue? Activate your network, and ask other validators to delegate to your staking pool. There are many of them with 100k+ tokens who can delegate 5-10k of their stake to you.

The plan is to start transitioning the first batch of validators to TestNet. As soon as that happens, the seat price will go down, allowing more folks to join BetaNet.
In the meantime, apply for the [contributions](challenges/challenge001.md) as they are worth real NEAR tokens, and keep an eye on the seat price, using the command `near validators current`.

## UPDATE May 22nd

* New `near-shell` 
* BetaNet Incident #0004

### New near-shell

The release `0.24.0` of `near-shell` is live! Update by using `npm` and check with `near --version` if you are up to date. 

### BetaNet Incident #0004

**Incident Abstract:**

The entire betanet crashed on May 22 at 09:36:47 UTC due to a bug that resulted in storage inconsistent state for every node.

**Incident Description:**

Betanet nodes crashed with the following error

```
StorageInconsistentState("Account stakepool_buildlinks.betanet with max of stakes 0 is not found")
```

It is [a known issue](https://github.com/nearprotocol/nearcore/issues/2687) that has already been [fixed](https://github.com/nearprotocol/nearcore/pull/2688) in master of nearcore, but the fix was not included in the last betanet release. 

**Remediation:**

1. Upon discovery of the issue, @Vlad Frolov and @Illia Polosukhin did a hard fork of the network with the same binary to restart the network.
2. After @Sandi Fatic and @Bowen Wang joined, we realized that the issue is already fixed in master so we release a new version of betanet with the fix.
3. We are going to improve on the incident communication internally and externally. We use will experiment a better integration with slack to effectively communicate when an incident like this occurs. 
4. We are also going to improve how critical issues get fixed and deployed to the live networks. In this case, the fix didn't get included in last Tuesday's BetaNet release because it was considered unlikely to happen. From now on, bugs that can cause the entire network to go down will be communicated differently, and the fixes deployed as soon as possible, unless it is technically impossible for the bug to occur (due to current restrictions to other functionalities).
5. We will organize and implement a training to handle such incidents across more team members, instead of having time-zone constraints and waiting for certain team members to wake up. Specifically, this action will teach how to debug, make a decision about doing a hard-fork or not doing it, and, finally, how to deploy the fixes.

If you have questions and you want to know more, reach out on [Discord](https://discord.gg/jWynGsn).

## UPDATE May 19th

* Stake Wars Ep.II is live!
* Deploy your Staking Pool Contract

### Stake Wars Episode II is live!

We officially launched Stake Wars Episode II: The Return of Valdiators. This new phase will test the contract-based delegation of NEAR Protocol, and will offer new ways for validators to differentiate their services. More information on the [official blog post](https://near.org/blog/stake-wars-episode-ii/). Remember to update your validator entry on the [VALIDATORS.md](VALIDATORS.md), adding the link to your deployed staking pool.

### Deploy your Staking Pool Contract

To enter this second phase of Stake Wars, you will have to:
- unstake your tokens from your node
- deploy the staking pool contract (you can find more info in the [initial-contracts Github repo](https://github.com/near/initial-contracts))
- update the [VALIDATORS.md](VALIDATORS.md) file with the staking pool address
- delegate any original stake to the new contract

If you lost your tokens, or you just joined and you don't have enough stake, reply in the [issue 289](https://github.com/nearprotocol/stakewars/issues/289) with your staking pool address. 

## UPDATE Apr 29th

* New `near-shell`
* New `nearcore`, improved consensus and networking for higher stability
* BetaNet Incident #0002

### BetaNet Incident #0002

NEAR's planned weekly update of BetaNet failed, the network didn't produce new blocks from 00:55 GMT to 7:10 GMT

**Incident Description:**

- NEAR began the scheduled weekly update of its `nearcore` node at 00:00 GMT
- The deployment pipeline completed successfully at 00:55 GMT, with the release `Version: 0.4.13, Build: 38d54ba7-modified`
- This update needed a hard-fork, with a new `genesis.json` file containing `"genesis_height": "3818145"`. Previous releases were not able to sync to any block higher than `3818145`
- As planned, all NEAR's BetaNet nodes switched to this new release, and the new genesis block was broadcasted through NEAR's `boot nodes`
- At 00:56 GM the Core Team informed NEAR Validators on Telegram and Discord that all nodes had to be updated and restarted asap
- This update could be automatically triggered by stopping and starting `nearup` (only for `nearup` users), or in case of automated deployment pipeline, by downloading and compiling `nearcore` from the branch `beta`
- Multiple nodes were correctly updated, however the network reached 66% of the total stake only at 7:10 GMT, after 6 hours and 20 minutes from the advertised release messages
- At 7:10 GMT the network reached a quorum, with a throughput between `0.10 bps` and `0.20 bps (blocks per second)`
- At 10:49 GMT, with block 3822000, the protocol unstaked the validators which failed to update on time and the ones that were running the old release, bringing back BetaNet in its normal state

**Remediation:**

- An investigation is in progress: NEAR's Core Team is contacting all the node operators that were validators at 00:00 GMT, to troubleshoot the upgrade process and identify the issues encountered
- As soon as the investigation is complete, this remediation will be extended with the introduced measures in terms of bug fixes, new features, documentation and communication

## UPDATE Apr 21st

* Released [Road to Mainnet](https://near.ai/mainnet-roadmap)
* Released `nearup` to the validator community
* Updated the Stake Wars 2.0 branch on GitHub

## UPDATE Apr 14th

* Stake Wars has been redesigned to involve end-users, and test NEAR smart contracts delegation
* The reference network for Stake Wars is now `betanet`. We suggest you to install and run the new node via [nearup](https://github.com/near/nearup)
* To obtain some betanet tokens and become validator, send a request via [this form](https://forms.gle/5KabPsD4BefR6nv68).

## UPDATE Nov 12th

* Just update the issue templates. We are now measuring severity internally since the templates were just confusing.
* The simplified submission process is: just follow the template, and we will add label.
* If we add the `help wanted` tag, you can fix it and receive tokens as part of the competition as well

## UPDATE Nov 20th

* sudo is no longer needed if you're on Mac, or if you're on linux and can run docker without sudo.

## UPDATE Nov 22nd

* We're using Github to collect genesis for this week. Please don't submit your keys for genesis if you can't make the call. Put in a PR againts accounts.csv with your changes.

## UPDATE Dec 13th

* We're restructuring the program to focus on finding bugs that are based on QA scenarios rather than security breaches and attacks.
* You can find these in `scenarios.md` in this repo. [HERE](./scenarios.md)
'''
'''--- validators_counted.json ---
{"processed": ["9990957", "9980955", "9970951", "15268518", "5802839", "14688473", "15278518", "16388724", "14698473", "5812839", "9770926", "9760926", "10290982", "7099486", "14598471", "14588471", "10060859", "15568548", "15788581", "15578548", "16528733", "13748382", "7009483", "7019483", "15088482", "12708075", "12718075", "17678868", "10651036", "12313811", "17668868", "12303811", "10431003", "8464574", "11873789", "16568746", "8474574", "11863789", "16578746", "6482337", "12133806", "13328338", "13338338", "15468539", "15478539", "17168814", "11223734", "9320891", "9330891", "18318919", "11233734", "12548065", "10270980", "14318443", "10260980", "6502343", "14308443", "11833787", "11823787", "6760432", "8204303", "7657488", "9890936", "17238822", "7974303", "17228822", "10260979", "11523772", "16198653", "16188653", "10451012", "16068620", "15758573", "10140972", "8304309", "11613779", "8314309", "10150972", "18158899", "11043717", "13798389", "12073802", "12063802", "13788389", "8960872", "12193806", "12183806", "8970872", "15028482", "11763781", "15038482", "10753689", "9850931", "13018094", "14138435", "18608936", "14128435", "11453765", "17108809", "12928087", "6032298", "15718567", "15418532", "7717496", "14188439", "15408532", "14198439", "9680918", "7707496", "13178324", "8144303", "7897497", "7887497", "13168324", "8154303", "6910572", "14538471", "14528471", "15838593", "6900572", "18018891", "12103803", "7917498", "17398845", "18008891", "12113803", "9520900", "9530900", "18258907", "12323814", "14638473", "9840927", "14298440", "17518861", "17808882", "16218658", "17508861", "17818882", "18308915", "17198820", "13378341", "13368341", "16878785", "11783783", "16868785", "11793783", "6700415", "14468463", "6532346", "14978479", "14268439", "14968479", "14278439", "16588748", "13718379", "13708379", "16618758", "12263811", "16608758", "15168491", "12273811", "9640912", "18358920", "12678075", "9650912", "15508542", "12668075", "17898886", "12398054", "11433763", "9690923", "11423763", "17888886", "8514574", "15968607", "12458062", "11903789", "8504574", "6312314", "10471016", "10040963", "11803783", "12558068", "13938410", "13928410", "8094303", "10000957", "18228901", "9200889", "10010957", "8084303", "18238901", "9210889", "11103732", "17688871", "11113732", "6372329", "17698871", "9940941", "7647485", "10541015", "15318518", "6620397", "17798882", "15308518", "11653740", "11363750", "8274309", "8264309", "17958891", "17948891", "15388527", "13878402", "13768386", "11053720", "17778879", "17768879", "10100967", "10933711", "10110967", "11013714", "10380993", "10390993", "11003714", "15908600", "17358834", "11323748", "15918600", "7209486", "7219486", "12618072", "12608072", "8644578", "14098432", "8654578", "10743688", "6422336", "6830570", "18088895", "6432336", "18098895", "6820570", "9450900", "18148898", "9440900", "14758473", "8734580", "11083727", "14748473", "8724580", "16148634", "7677496", "6590395", "8904587", "8914587", "6580395", "6870572", "7964302", "8034303", "7149486", "7159486", "8024303", "13908403", "17638867", "16848781", "17628867", "16858781", "7379487", "7369487", "13108115", "13118115", "17078809", "16028615", "17068809", "14848477", "8824584", "14858477", "8834584", "17338829", "16208655", "17328829", "11913793", "16978794", "16968794", "9900938", "9420897", "12528063", "13668379", "12538063", "13678379", "7409487", "14058419", "14048419", "15098483", "10080964", "6382331", "9600906", "9610906", "9150889", "10501017", "6920576", "7517485", "6930576", "10030883", "13548364", "13558364", "7837496", "7827496", "12998090", "10551023", "6022295", "17188817", "12988090", "16348714", "6352316", "6342316", "6402333", "11553774", "11543774", "10641021", "11573776", "14908478", "11563776", "14918478", "17278826", "9750925", "9740925", "10200974", "17268826", "10030963", "10020963", "16288698", "16298698", "15998614", "11443763", "6262308", "6272308", "15988614", "8374312", "15118487", "8364312", "10410996", "6072300", "10400996", "11943796", "9480900", "11953796", "9490900", "12588072", "12598072", "12818082", "7199486", "9270889", "16558745", "7189486", "9260889", "8254307", "7637485", "9930941", "9920941", "7627485", "8404312", "13818394", "10541012", "10953711", "10943711", "10611032", "12768078", "12778078", "9090883", "9950946", "5902842", "9080883", "5912842", "15628558", "11503767", "15638558", "12878085", "12868085", "16598758", "17938891", "8634578", "8624578", "10050964", "10783692", "10793692", "10803693", "18568935", "6840570", "18578935", "6302313", "7477483", "6850570", "13088107", "9390897", "7279486", "6082302", "9190889", "7269486", "6092302", "9180889", "15598556", "15518545", "15008481", "15018481", "11283745", "18278912", "11293745", "7139486", "8044303", "8054303", "7129486", "18138898", "17018798", "15338520", "17008798", "9430900", "8574578", "8564578", "15558547", "14728473", "8744580", "15548547", "14738473", "8754580", "16128634", "15798587", "16138634", "17848886", "16538735", "14838477", "8854584", "17558865", "17858886", "14828477", "8844584", "12488062", "12498062", "10521019", "10531019", "17648867", "16838781", "17658867", "10671039", "16828781", "18508928", "13978415", "13968415", "18518928", "16438729", "10973714", "12428054", "6600395", "5892841", "6610395", "7577485", "10450701", "7567485", "9290891", "9570904", "14028419", "18058895", "12383828", "14038419", "16338714", "16478731", "16468731", "16328714", "6332316", "13458353", "17988891", "17998891", "11533774", "15678560", "15668560", "10020693", "16078626", "18378922", "18368922", "13538364", "16268680", "13528364", "7847496", "7857496", "15958605", "11403761", "8194303", "8184303", "13068098", "8694580", "5862839", "8684580", "13448352", "16368721", "8214304", "9010872", "9000872", "17298829", "10150934", "6512344", "17288829", "12143806", "14388457", "12153806", "14398457", "11483765", "11493765", "6940577", "13738382", "14878478", "7079483", "7069483", "8324311", "13318336", "8334311", "13308336", "16278697", "11687893", "16428728", "13498359", "14608471", "17428853", "14618471", "7309486", "5972848", "7319486", "5962848", "13348338", "9630909", "11673780", "9620909", "11663780", "7507483", "13848401", "9350891", "13858401", "9340891", "10130972", "10710937", "15818587", "12908085", "17378837", "18408923", "15808587", "17368837", "18418923", "15898594", "12003802", "11393758", "11033717", "15888594", "12013802", "11023717", "11383758", "6362319", "10210979", "6162307", "6172307", "14148435", "6979483", "14158435", "6969483", "18478928", "18468928", "6222307", "6052298", "6042298", "11513770", "6452337", "9730923", "17218820", "6442337", "17928886", "17208820", "16318710", "9720923", "15058482", "6750426", "14418459", "11703781", "15048482", "11713781", "14408459", "15218514", "13608374", "13618374", "11253743", "9550900", "8424571", "9540900", "8434571", "9820927", "13298335", "10863705", "14658473", "13288335", "9830927", "14648473", "9120884", "17708878", "17718878", "7767496", "7777496", "13588365", "8134303", "8124303", "14548471", "15858593", "15848593", "14558471", "11173733", "11163733", "6790568", "9060879", "6780568", "18598936", "13948411", "13958411", "18268909", "13488355", "6542346", "6640400", "9360894", "18188899", "9370894", "17128811", "16508731", "13078104", "17138811", "12203806", "10190972", "12213806", "10180972", "15708560", "14518469", "18128895", "14508469", "10310986", "8774584", "16158645", "10711042", "10701042", "14218439", "14208439", "8394312", "8704580", "8384312", "8714580", "10731033", "9460900", "9470900", "7944302", "8934587", "7954302", "8924587", "8004303", "7179486", "9280889", "7169486", "8014303", "14078423", "11593776", "11693723", "14478467", "10010952", "11583776", "17608867", "17618867", "16948794", "16958794", "9400897", "9130887", "9410897", "8814584", "6282308", "8804584", "14868477", "17308829", "17318829", "11923793", "13658379", "18248903", "13648379", "7487483", "13408345", "18588935", "13418345", "7497483", "7537485", "7527485", "6650403", "9170889", "7299486", "9160889", "11653769", "7289486", "7807496", "7817496", "10561023", "13578364", "13008090", "13568364", "12788078", "6720422", "9070883", "6730422", "14358453", "14348453", "12363824", "12898085", "7429491", "11693575", "12888085", "7439491", "11413763", "6232308", "6292312", "8524574", "10350987", "12468062", "10340987", "12478062", "8534574", "12253811", "15148491", "15158491", "11693781", "14948478", "14958478", "13998415", "18548932", "13988415", "9880932", "11123732", "12568068", "18298912", "10240124", "11983802", "11273745", "18288912", "12578068", "13918410", "11993802", "18218901", "9230889", "18208901", "9220889", "11353750", "11343750", "8594578", "6680412", "8584578", "15328518", "11691745", "12243807", "16498731", "16488731", "17968891", "12838085", "17978891", "12728078", "15698560", "12738078", "15688560", "5942842", "17748879", "17758879", "16238675", "18388922", "10120967", "6660406", "13758386", "16628762", "16638762", "10983714", "7239486", "7229486", "10993714", "10681042", "12628072", "13128318", "10691042", "12638072", "7597485", "7587485", "12918086", "11303748", "15938600", "11313748", "15928600", "9580904", "9590904", "6800570", "14488469", "6412336", "12373828", "14498469", "6810570", "16088630", "16308699", "16098630", "10731045", "11743781", "13248330", "13258330", "11753781", "10763689", "9870931", "10773689", "9860931", "12353820", "12343820", "14368457", "8950872", "14378457", "11463765", "11473765", "14898478", "14888478", "7089483", "13038094", "13028094", "14118435", "5872840", "8174303", "13148324", "8164303", "13158324", "6670407", "18398923", "7727496", "15728567", "15428532", "7737496", "15738567", "10641033", "8674580", "8664580", "18028891", "10430928", "16048616", "16058616", "7927498", "18038891", "9260869", "9510900", "9500900", "9100883", "9110883", "12438057", "11373758", "17838882", "17528861", "15878594", "17828882", "16228658", "17538861", "6690413", "14458463", "14448463", "6182307", "11133733", "13358341", "6192307", "10843702", "17448856", "17458856", "10853702", "14258439", "14248439", "6322315", "7667492", "6102302", "5982848", "11683780", "12958089", "12948089", "13728379", "15358524", "12798079", "5832839", "11693348", "15258518", "5822839", "15248518", "7787496", "7797496", "18438924", "17348830", "6999483", "6989483", "16518733", "15178505", "18498928", "18488928", "7039483", "7029483", "11843789", "12808081", "8454574", "12518062", "11853789", "12508062", "8444574", "17388840", "10661036", "8244304", "9040872", "17158814", "17148814", "9310891", "15198511", "18338919", "9300891", "15188511", "18328919", "15458539", "8794584", "15448539", "8784584", "13208324", "7349486", "7359486", "13218324", "16748774", "10240980", "10250980", "17048808", "16018614", "16008614", "17058808", "11813787", "14068422", "6122307", "11193733", "11183733", "6132307", "6770568", "13478355", "9380894", "18178899", "18168899", "12043802", "12053802", "10170972", "13598371", "15768573", "11633779", "11623779", "15978608", "6062298", "6212307", "6202307", "15348523", "13048094", "12658073", "6959483", "12648073", "15068482", "11733781", "13238330", "14428459", "15078482", "13228330", "14438459", "11723781", "15228514", "6112305", "11893789", "8484574", "11883789", "8494574", "12333820", "9700923", "6462337", "17908886", "9710923", "6472337", "17918886", "17478858", "17468858", "9810927", "16378724", "14668473", "15288518", "9800927", "14678473", "15298518", "16038616", "9790926", "11263743", "18048891", "9780926", "8414571", "9560900", "8104303", "13138324", "8114303", "14578471", "15868593", "14568471", "17738878", "17728878", "7757496", "11093732", "7747496", "6630398", "15748567", "12123804", "11653734", "7994303", "7984303", "17028804", "17038804", "10090967", "10240948", "11143733", "6392332", "11153733", "17438856", "9050879", "10823702", "12233806", "12223806", "11653763", "16908790", "16918790", "13778389", "12093802", "17118811", "12083802", "17548861", "16988795", "15488539", "15498539", "14108432", "18118895", "12938089", "18108895", "11693744", "14228439", "13438350", "10290980", "14238439", "13428350", "10721042", "17418849", "16888789", "16898789", "14778475", "13058098", "15778574", "14768475", "9670918", "15588552", "14178439", "12448061", "7877497", "13198324", "13188324", "7867497", "16448730", "10813697", "10560970", "15208511", "5842839", "5852839", "6740423", "10461015", "15238518", "6522344", "12173806", "8980872", "8990872", "12163806", "16358721", "8224304", "9020872", "9030872", "8234304", "13808390", "13098115", "7049483", "11203733", "7059483", "11933795", "6492342", "11213733", "14628471", "7339486", "14088427", "7329486", "14998479", "14288439", "7419488", "14988479", "16418728", "18538929", "16408728", "18528929", "18348919", "13868401", "15438539", "14798477", "15108483", "11653780", "10240339", "15828587", "18428923", "10300983", "12033802", "12023802", "15398532", "9880810", "11643779", "13398341", "16178649", "6152307", "16168649", "13388341", "6142307", "16808779", "16818779", "11773783", "10230979", "10220979", "7109486", "8074303", "8064303", "7119486", "13268333", "13278333", "14718473", "8764580", "14708473", "16998798", "16118634", "16108634", "8554578", "16938794", "12283811", "10511019", "16928794", "12293811", "9140887", "12698075", "14788476", "12688075", "8864584", "14808477", "17568865", "17878886", "17578865", "8874584", "14818477", "17868886", "6002284", "6012284", "16548740", "10481016", "10491016", "7547485", "7557485", "10370993", "12408054", "16248679", "13838398", "12418054", "10551017", "13628379", "13638379", "14018419", "18068895", "14008419", "18078895", "15648560", "15658560", "8294309", "8284309", "14338453", "16458731", "13468353", "7459491", "7449491", "15368527", "13888402", "18458925", "13898402", "15378527", "18448925", "8894586", "17598867", "17588867", "8884586", "17788879", "13508364", "14168438", "11603776", "13518364", "16258680", "17408848", "6710420", "16398727", "7399487", "7389487", "14938478", "14928478", "10280981", "17098809", "17248826", "17088809", "17258826", "10541021", "6252308", "6242308", "10320987", "8544574", "10330987", "11973796", "11333750", "11963796", "8344312", "15128487", "11073727", "8354312", "15138487", "11063727", "7687496", "7697496", "10421000", "7607485", "9910941", "7617485", "6570395", "6880572", "6560395", "6890572", "9240889", "12828082", "7907497", "16708770", "9250889", "13828394", "10963711", "12978090", "17178817", "12968090", "16648762", "15618558", "17488861", "14328449", "15608558", "17498861", "12848085", "12858085", "10621032", "12758078", "10631032", "10441007", "12748078", "5932842", "5922842", "6372327", "13688379", "13698379", "18558935", "6860570", "8604578", "8614578", "10060964", "10070964", "9960950", "7249486", "18198901", "7259486", "15538545", "9660915", "15528545", "10360989", "15948600", "11653758"], "validators": {"31337x.31337.betanet": 852, "a_validator": 881, "ag_staking": 1180, "alive29": 515, "aptemuyc4": 788, "averonix": 607, "betapool": 214, "bitcat.stakehouse.betanet": 468, "blink": 466, "c1.hashquark": 1103, "cloudpost_pool": 673, "contract.bartalamew.betanet": 776, "contract.nats.betanet": 795, "felixschulz": 634, "fredrik_pool": 986, "gems": 890, "huglester": 475, "isillien": 722, "janliamnilsson": 846, "jaroslavrud": 541, "jazza": 483, "launooskuarttu": 626, "masternode24": 482, "mathwallet": 229, "maxhealth": 316, "maximus-power-pool.stakehouse.betanet": 88, "megatron": 798, "meleapool": 437, "mfsc": 400, "mort1.mort.betanet": 986, "nearcola": 380, "neozaru.stakehouse.betanet": 201, "olaiolsen": 949, "olegjan": 1081, "oligarr": 898, "optimisticvalidator": 609, "paulainsley1betanet.stakehouse.betanet": 240, "phenom": 703, "plex2": 1181, "pool.bibiwang.betanet": 520, "pool.everstake.betanet": 828, "pool.zeropool.betanet": 86, "poolz": 383, "pro.stakehouse.betanet": 989, "rockpathpool": 670, "ryabina": 427, "sfpool": 1054, "shudo": 535, "simonhugo": 589, "sl-he": 834, "sl1sub": 754, "sllpool": 473, "smart.askold.betanet": 982, "somebody": 526, "sparkpool.test": 410, "stake-machine": 264, "stake_pool.sharchov.betanet": 21, "stakedpool.staked.test": 428, "stakefish.betanet": 4, "stakery": 144, "stakewolf_pool": 249, "stakin": 560, "stakingpool.youlaiwuqu.betanet": 195, "sub.rosalessierra91.betanet": 724, "sub1.crazylandd.betanet": 1155, "swissqstakepoolsw3": 362, "tatianka": 874, "thepassivetrust.stakehouse.betanet": 215, "tommywesley": 979, "valeraverim": 628, "validator.arno_nym.betanet": 334, "validator_italia_contract": 1129, "villiamsivertsen": 882, "vipstakes": 592, "volvos60909": 864, "www.nodeasy.test": 344, "yoda": 818, "yyyyyyyyyyyyy1": 559, "zenqqqq": 635, "777stakes": 533, "arm.armada.betanet": 554, "bucket": 989, "c2.inotel.betanet": 226, "delight_pool": 998, "dochpryof": 866, "driftforall": 206, "get_rich": 542, "joe1.joejoen.betanet": 253, "nearcool2": 289, "pool": 287, "sc.galbraith.betanet": 972, "stake2earnfunds2": 358, "staking_pool.lizhongbo3.betanet": 19, "techno_validator": 536, "c.eosis.betanet": 529, "interference": 234, "ou812": 216, "sc.foxnorth1210.betanet": 855, "40th.meridian.betanet": 536, "777staker.7777nda.betanet": 361, "anechoic.stakehouse.betanet": 120, "blockdaemon.stakehouse.betanet": 221, "chorus-one-pool-v1.stakehouse.betanet": 381, "coolpool.dimaro1.betanet": 503, "cryp": 935, "crypto-solutions.stakehouse.betanet": 429, "emilia.stakehouse.betanet": 560, "forbole.stakehouse.betanet": 377, "genesislab.stakehouse.betanet": 592, "gielve.stakehouse.betanet": 242, "kazan-pool.stakehouse.betanet": 383, "kokos-anti-covid": 708, "majlovesreg.stakehouse.betanet": 414, "nearmars.stakehouse.betanet": 425, "ou812.stakehouse.betanet": 544, "phenom100uptime.stakehouse.betanet": 195, "pool.easy2stake.betanet": 571, "pool.happin.betanet": 898, "roma_k.stakehouse.betanet": 197, "sam.stakehouse.betanet": 560, "savelev.stakehouse.betanet": 512, "seby05.betanet": 345, "staked.stakehouse.betanet": 680, "stakefarm.stakehouse.betanet": 62, "starlink-pool.stakehouse.betanet": 455, "swain2.stakehouse.betanet": 556, "swiss_staking.stakehouse.betanet": 267, "thstakepool.stakehouse.betanet": 296, "validator.projecttent.betanet": 549, "afi.betanet": 21, "agrestus.betanet": 25, "akme.betanet": 165, "alexz01": 7, "anonstake": 378, "bears.betanet": 4, "bowen.test": 86, "c.mutedtommy.betanet": 37, "c2.nuc001.betanet": 23, "catcatcat.test": 49, "cryptomilion.betanet": 7, "dokiacapital.betanet": 54, "dreamstaker.betanet": 81, "fra.betanet": 17, "fredrikmalmqvist": 24, "fuckit.betanet": 401, "gaia.test": 17, "global": 101, "harrypotter": 77, "highstakes": 42, "huglester.betanet": 23, "inotel.betanet": 25, "isillien.betanet": 50, "itokenpool.betanet": 34, "joe1": 337, "lunanova_pool": 340, "lxyw.betanet": 7, "node": 355, "node0": 330, "node1": 73, "node2": 132, "node3": 129, "nodeasy.test": 147, "novy.betanet": 9, "rock1path": 17, "ryabina_io.betanet": 24, "sebytza05_val.betanet": 17, "sll.betanet": 21, "stakery.betanet": 17, "stakingfund": 76, "techno-t1.betanet": 17, "top": 332, "unicorn.betanet": 14, "unknown.test": 28, "vlad-validator.test": 255, "warger01.betanet": 17, "wetez": 816, "zav.betanet": 21, "avadon41.stakehouse.betanet": 150, "bambarello": 665, "dog.bears.betanet": 533, "filippova_pool.stakehouse.betanet": 385, "general.alfa.betanet": 467, "luckystaker.stakehouse.betanet": 296, "mfsc.stakehouse.betanet": 88, "pool.ryabina_io.betanet": 328, "silver1": 816, "sub2.balinode.betanet": 346, "test1ch01.challenge01.betanet": 230, "awesome": 231, "delphidigital.stakehouse.betanet": 318, "enterpool.stakehouse.betanet": 237, "cher5": 89, "cryptium.stakehouse.betanet": 266, "pool.zebra.betanet": 5, "ujjjoshipooldeux": 73, "warger_sub": 374, "mmm": 336, "nazar92": 251, "pool.dokiacapital.betanet": 265, "huobipool.stakehouse.betanet": 13, "mmm.stakehouse.betanet": 409, "s5.stakehouse.betanet": 23, "swag1.stakehouse.betanet": 9, "abc.alphabet1.betanet": 135, "alexzz": 253, "andrew_builder.betanet": 30, "applied": 222, "baziliksub": 330, "bisontrails.stakehouse.betanet": 178, "blazenet": 342, "buildlinks": 216, "freshnears": 231, "goodstake2": 49, "gunpool": 115, "justice.immortal.betanet": 132, "nazar92.betanet": 39, "pool.hogwarts": 42, "staking.dsrv.betanet": 149, "vova": 527, "zpooll": 204, "audit_two.stakehouse.betanet": 397, "castle.stakehouse.betanet": 130, "bowen2.test": 35, "staking4all.stakehouse.betanet": 388, "genesis.stakehouse.betanet": 6, "pool66.stakehouse.betanet": 40, "solidone.stakehouse.betanet": 66, "audit_one": 135, "c2.bibiwang.betanet": 225, "kvasnear": 258, "moonlet.test": 69, "mutedtommy-staking-pool-2.stakehouse.betanet": 25, "pool.chainflow.betanet": 30, "farm": 108, "alma3.stakehouse.betanet": 165, "c3.inotel.betanet": 261, "ivan.validatorivan5.betanet": 51, "lovegood.harrypotter": 132, "neonong_pool.stakehouse.betanet": 243, "pool.kytzu.betanet": 228, "stakewarspools.fuckit.betanet": 63, "staking_viboracecata.stakehouse.betanet": 271, "rioblocks.stakehouse.betanet": 206, "tribe-pool.stakehouse.betanet": 203, "aquariuspool.stakehouse.betanet": 158, "bi23.betanet": 52, "pool.alexandruast.betanet": 88, "takeittothemoon.fuckit.betanet": 70, "vegan.stakehouse.betanet": 74, "nearpool.aquariusluo.betanet": 15, "aquariusluo.betanet": 90, "d1.betanet": 152, "denis": 197, "zebra": 131, "zeropool": 149, "iosgvc.stakehouse.betanet": 89, "pool.syncnode.betanet": 93, "stakeing.arno_nym.betanet": 34, "aalex": 10, "cher4": 4, "fund.mamojkool.betanet": 62, "validator_buildlinks.betanet": 44, "zpool": 26, "dmitrue.stakehouse.betanet": 65, "weiser.betanet": 12, "denysof-pool.stakehouse.betanet": 18, "deadpool.stakehouse.betanet": 22, "alexturetskiy.betanet": 4, "bisonshark.betanet": 16, "cypherhunter.betanet": 22, "zzbar": 14, "alexg": 19, "swimmingpool": 41, "moonlet": 64, "machina_staking.stakehouse.betanet": 17, "kysenpool.stakehouse.betanet": 37, "c1.erkan.betanet": 22, "c2.nearkat": 31, "masternode24.betanet": 15, "stake2earnfunds": 17, "swissqstakepoolsw": 17, "andrew_builder": 4, "wheat.stakehouse.betanet": 8, "sharchov.betanet": 25, "alexb": 3, "fredoombelarus.stakehouse.betanet": 6, "tornado.stakehouse.betanet": 6, "bur.vwed.betanet": 4, "omonla.betanet": 6, "freshnear": 29, "pool.certusone.betanet": 26, "zee": 14, "dsrvbeta.stakehouse.betanet": 10, "swiss-staking.stakehouse.betanet": 8, "mike.betanet": 4, "humanh.betanet": 20, "baidu.weiser.betanet": 4, "sconestaking.sconeman.betanet": 2, "s5.betanet": 1, "a_breeze": 18, "gamah.stakehouse.betanet": 6, "mutedtommy-staking-pool.stakehouse.betanet": 5, "zero.zeropool.betanet": 4, "c4.nuc001.betanet": 8, "join.zav.betanet": 7, "pool.huglester.betanet": 5, "stake.afi.betanet": 2, "stakeatnovy": 15, "gamah.betanet": 32, "vipnamai.betanet": 4, "account.sdsolo.betanet": 3, "auditone.betanet": 6, "bazilik2020.test": 11, "blockpower.stakehouse.betanet": 2, "frapool": 2, "slsub": 2, "bitcat": 2, "gunray.test": 4, "ryabina-validator": 4, "cher3": 4, "avadon2.stakehouse.betanet": 2, "exoplanet": 2, "andreyvelde.test": 4, "erkan.betanet": 5, "mf": 5, "3q_val": 2, "auditone_validator": 2, "vipnamai": 4, "ablue": 4, "mutedtommy.stakehouse.betanet": 1, "lotanna.stakehouse.betanet": 2, "smartstake.stakehouse.betanet": 2, "bibiwang.betanet": 2, "cant-touch-this.stakehouse.betanet": 2, "c1.bibiwang.betanet": 2, "blockpower.betanet": 2, "beeram527-stakingpool": 2}}
'''
'''--- validators_counted_testnet.json ---
{"processed": ["14427782", "16501389", "16285389", "19338128", "21368531", "17494990", "21584531", "17278990", "15421385", "14730182", "15248585", "18531792", "20720528", "21930132", "15982989", "17149390", "18574992", "18099790", "16976590", "14384582", "14946182", "18272590", "14643782", "16371789", "20418128", "22102936", "21411731", "15637385", "17667790", "14254982", "20029328", "13952581", "21454931", "18776528", "15162182", "14211782", "20245328", "19381328", "15205382", "19942928", "21843732", "17235790", "20979728", "18618192", "15507785", "15550985", "20677328", "15939789", "19726928", "21714131", "20115728", "19899728", "21195728", "17408590", "19035728", "14557382", "17106190", "17192590", "21282128", "16198989", "20202128", "20547728", "22232536", "16890190", "19770128", "15291785", "22146136", "15853385", "19467728", "18315792", "21109328", "18358992", "20936528", "16760590", "20461328", "18142990", "16933390", "17926990", "18862928", "14902982", "19251728", "17970190", "21238928", "19078928", "15464585", "15118982", "20158928", "18661392", "14470982", "18488592", "16587790", "21886932", "20850128", "16674190", "20590928", "21800532", "15896585", "18445392", "20806928", "20893328", "14600582", "15594185", "15378185", "16544590", "21152528", "15075664", "19208528", "17624590", "14686982", "18013390", "22016536", "21973332", "16069389", "20763728", "22189336", "17710990", "19554128", "20374928", "16112589", "15075782", "19165328", "19597328", "18186190", "16458189", "21325328", "20331728", "17451790", "17322190", "21022928", "14773382", "14168582", "21627731", "18949328", "14859782", "19856528", "16717390", "17365390", "15334985", "21670931", "21498131", "17797390", "20288528", "18704593", "20072528", "15032582", "19122128", "13909381", "21066128", "15723785", "19640528", "17062990", "14341382", "19813328", "21541331", "17538190", "19510928", "16328589", "15766985", "19294928", "16155789", "17754190", "14038981", "19683728", "14298182", "16242189", "14816582", "18992528", "16414989", "18906128", "14989382", "20504528", "19986128", "17581390", "16846990", "18229390", "14082181", "17840590", "15810185", "19424528", "17019790", "14125382", "18056590", "13995781", "20634128", "16630990", "18402192", "21757331", "14514182", "16026189", "17883790", "15680585", "22059736", "16803790"], "validators": {"01node.pool.f863973.m0": 185, "alexandruast.pool.f863973.m0": 185, "aquarius.pool.f863973.m0": 175, "bazilik.pool.f863973.m0": 162, "bisontrails.pool.f863973.m0": 177, "blazenet.pool.f863973.m0": 187, "canary0.near": 13, "certusone.pool.f863973.m0": 170, "dokia.pool.f863973.m0": 117, "dsrvlabs.pool.f863973.m0": 102, "fresh_lockup.pool.f863973.m0": 182, "inotel.pool.f863973.m0": 186, "iosg.pool.f863973.m0": 49, "jazza.pool.f863973.m0": 184, "kronos.pool.f863973.m0": 111, "lunanova.pool.f863973.m0": 187, "masternode24.pool.f863973.m0": 145, "node.pool.6fb1358": 19, "node0": 167, "node1": 193, "node2": 184, "nodeasy.pool.f863973.m0": 109, "okexpool.pool.f863973.m0": 2, "orangeclub.pool.f863973.m0": 176, "pool_easy2stake.pool.f863973.m0": 183, "sl1sub.pool.f863973.m0": 185, "sparkpool.pool.f863973.m0": 46, "staked.pool.6fb1358": 177, "staked.pool.f863973.m0": 177, "stakin.pool.f863973.m0": 165, "syncnode.pool.f863973.m0": 95, "thepassivetrust.pool.f863973.m0": 175, "top.pool.f863973.m0": 171, "zainy.pool.f863973.m0": 148, "zpool.pool.f863973.m0": 163, "bitcat.pool.f863973.m0": 169, "chorus-one.pool.f863973.m0": 98, "cloudpost.pool.f863973.m0": 144, "joe1.pool.f863973.m0": 144, "kytzu.pool.f863973.m0": 154, "lowfeevalidation.pool.f863973.m0": 139, "moonlet.pool.f863973.m0": 173, "node3": 151, "northernlights.stakingpool": 146, "staking-power.pool.f863973.m0": 148, "valeraverim.pool.f863973.m0": 140, "mmm.pool.f863973.m0": 35, "dimaro.pool.f863973.m0": 49, "pathrock.pool.f863973.m0": 100, "figment.pool.f863973.m0": 39, "moonlet.pool.6fb1358": 6, "audit_one.pool.f863973.m0": 20, "buildlinks3.pool.f863973.m0": 2, "shudo.pool.f863973.m0": 2, "p2p.pool.f863973.m0": 6, "cryptium.pool.f863973.m0": 6, "hashquark01.pool.f863973.m0": 6, "stakin-pool.pool.f863973.m0": 2, "masternode24.pool.6fb1358": 2, "tribe-pool.pool.f863973.m0": 2}}
'''