*GitHub Repository "jtenner/near-runtime-ts"*

'''--- .gitlab-ci.yml ---
image: node:latest

stages:
  - build
  - test

cache:
  paths:
    - node_modules/

install_dependencies:
  stage: build
  script:
    - npm install
  artifacts:
    paths:
      - node_modules/

run_tests:
  stage: test
  script: npm run test

'''
'''--- README.md ---
# near-runtime-ts
Typescript library for writing near smart contracts

## Generate documentation

API docs are produced using typedoc. To run, first install dependencies:

```
npm install
```

After installing dependencies, run

```
npm run doc
```

## Run tests

```
npm test
```

'''
'''--- apidoc/README.md ---

near-runtime-ts
===============

Typescript library for writing near smart contracts

Generate documentation
----------------------

API docs are produced using typedoc. To run, first install dependencies:

```
npm install
```

After installing dependencies, run

```
npm run doc
```

Run tests
---------

```
npm test
```

## Index

### External modules

* ["near"](modules/_near_.md)

---

'''
'''--- apidoc/classes/_near_.collections.deque.md ---
[near-runtime-ts](../README.md) > ["near"](../modules/_near_.md) > [collections](../modules/_near_.collections.md) > [Deque](../classes/_near_.collections.deque.md)

# Class: Deque

A deque class that implements a persistent bidirectional queue.

## Type parameters
#### T 
## Hierarchy

**Deque**

## Index

### Constructors

* [constructor](_near_.collections.deque.md#constructor)

### Accessors

* [back](_near_.collections.deque.md#back)
* [first](_near_.collections.deque.md#first)
* [front](_near_.collections.deque.md#front)
* [isEmpty](_near_.collections.deque.md#isempty)
* [last](_near_.collections.deque.md#last)
* [length](_near_.collections.deque.md#length)

### Methods

* [containsIndex](_near_.collections.deque.md#containsindex)
* [delete](_near_.collections.deque.md#delete)
* [popBack](_near_.collections.deque.md#popback)
* [popFront](_near_.collections.deque.md#popfront)
* [pushBack](_near_.collections.deque.md#pushback)
* [pushFront](_near_.collections.deque.md#pushfront)

---

## Constructors

<a id="constructor"></a>

###  constructor

⊕ **new Deque**(prefix: *`string`*): [Deque](_near_.collections.deque.md)

*Defined in [near.ts:459](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L459)*

Creates or restores a persistent deque with a given storage prefix. Always use a unique storage prefix for different collections.

**Parameters:**

| Name | Type | Description |
| ------ | ------ | ------ |
| prefix | `string` |  A prefix to use for every key of this deque. |

**Returns:** [Deque](_near_.collections.deque.md)

___

## Accessors

<a id="back"></a>

###  back

**get back**(): `T`

*Defined in [near.ts:661](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L661)*

**Returns:** `T`
The last/back element of the deque.

___
<a id="first"></a>

###  first

**get first**(): `T`

*Defined in [near.ts:628](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L628)*

**Returns:** `T`
The first/front element of the deque.

___
<a id="front"></a>

###  front

**get front**(): `T`

*Defined in [near.ts:620](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L620)*

**Returns:** `T`
The first/front element of the deque.

___
<a id="isempty"></a>

###  isEmpty

**get isEmpty**(): `bool`

*Defined in [near.ts:545](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L545)*

**Returns:** `bool`
True if the deque is empty.

___
<a id="last"></a>

###  last

**get last**(): `T`

*Defined in [near.ts:669](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L669)*

**Returns:** `T`
The last/back element of the deque.

___
<a id="length"></a>

###  length

**get length**(): `i32`

*Defined in [near.ts:538](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L538)*

**Returns:** `i32`
The length of the deque.

___

## Methods

<a id="containsindex"></a>

###  containsIndex

▸ **containsIndex**(index: *`i32`*): `bool`

*Defined in [near.ts:522](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L522)*

**Parameters:**

| Name | Type | Description |
| ------ | ------ | ------ |
| index | `i32` |  The index to check. |

**Returns:** `bool`
True if the given index is within the range of the deque indices.

___
<a id="delete"></a>

###  delete

▸ **delete**(index: *`i32`*): `void`

*Defined in [near.ts:530](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L530)*

Removes the content of the element from storage without changing length of the deque.

**Parameters:**

| Name | Type | Description |
| ------ | ------ | ------ |
| index | `i32` |  The index of the element to remove. |

**Returns:** `void`

___
<a id="popback"></a>

###  popBack

▸ **popBack**(): `T`

*Defined in [near.ts:649](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L649)*

Removes the last/back element from the deque and returns it. Asserts that the deque is not empty. Decreases the length of the deque.

**Returns:** `T`
The removed first element of the queue.

___
<a id="popfront"></a>

###  popFront

▸ **popFront**(): `T`

*Defined in [near.ts:609](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L609)*

Removes the first/front element from the deque and returns it. Asserts that the deque is not empty. Decreases the length of the deque.

**Returns:** `T`
The removed first element of the queue.

___
<a id="pushback"></a>

###  pushBack

▸ **pushBack**(element: *`T`*): `i32`

*Defined in [near.ts:637](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L637)*

Adds a new element to the end of the deque. Increases the length of the deque.

**Parameters:**

| Name | Type | Description |
| ------ | ------ | ------ |
| element | `T` |  A new element to add. |

**Returns:** `i32`
The index of a newly added element

___
<a id="pushfront"></a>

###  pushFront

▸ **pushFront**(element: *`T`*): `i32`

*Defined in [near.ts:598](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L598)*

Adds a new element in front of the deque. Increases the length of the deque.

**Parameters:**

| Name | Type | Description |
| ------ | ------ | ------ |
| element | `T` |  A new element to add. |

**Returns:** `i32`
The index of a newly added element

___

'''
'''--- apidoc/classes/_near_.collections.map.md ---
[near-runtime-ts](../README.md) > ["near"](../modules/_near_.md) > [collections](../modules/_near_.collections.md) > [Map](../classes/_near_.collections.map.md)

# Class: Map

A map class that implements a persistent unordered map. NOTE: The Map doesn't store keys, so if you need to retrive them, include keys in the values.

## Type parameters
#### K 
#### V 
## Hierarchy

**Map**

## Index

### Constructors

* [constructor](_near_.collections.map.md#constructor)

### Methods

* [contains](_near_.collections.map.md#contains)
* [delete](_near_.collections.map.md#delete)
* [get](_near_.collections.map.md#get)
* [set](_near_.collections.map.md#set)
* [values](_near_.collections.map.md#values)

---

## Constructors

<a id="constructor"></a>

###  constructor

⊕ **new Map**(prefix: *`string`*): [Map](_near_.collections.map.md)

*Defined in [near.ts:680](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L680)*

Creates or restores a persistent map with a given storage prefix. Always use a unique storage prefix for different collections.

**Parameters:**

| Name | Type | Description |
| ------ | ------ | ------ |
| prefix | `string` |  A prefix to use for every key of this map. |

**Returns:** [Map](_near_.collections.map.md)

___

## Methods

<a id="contains"></a>

###  contains

▸ **contains**(key: *`K`*): `bool`

*Defined in [near.ts:720](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L720)*

**Parameters:**

| Name | Type | Description |
| ------ | ------ | ------ |
| key | `K` |  Key to check. |

**Returns:** `bool`
True if the given key present in the map.

___
<a id="delete"></a>

###  delete

▸ **delete**(key: *`K`*): `void`

*Defined in [near.ts:728](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L728)*

Removes value and the key from the map.

**Parameters:**

| Name | Type | Description |
| ------ | ------ | ------ |
| key | `K` |  Key to remove. |

**Returns:** `void`

___
<a id="get"></a>

###  get

▸ **get**(key: *`K`*, defaultValue?: *`V`*): `V`

*Defined in [near.ts:737](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L737)*

**Parameters:**

| Name | Type | Default value | Description |
| ------ | ------ | ------ | ------ |
| key | `K` | - |  Key of the element. |
| `Default value` defaultValue | `V` |  null |  The default value if the key is not present. |

**Returns:** `V`
Value for the given key or the default value.

___
<a id="set"></a>

###  set

▸ **set**(key: *`K`*, value: *`V`*): `void`

*Defined in [near.ts:746](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L746)*

Sets the new value for the given key.

**Parameters:**

| Name | Type | Description |
| ------ | ------ | ------ |
| key | `K` |  Key of the element. |
| value | `V` |  The new value of the element. |

**Returns:** `void`

___
<a id="values"></a>

###  values

▸ **values**(start?: *`K`*, end?: *`K`*, limit?: *`i32`*, startInclusive?: *`bool`*): `V`[]

*Defined in [near.ts:706](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L706)*

Returns values of the map between the given start key and the end key.

**Parameters:**

| Name | Type | Default value | Description |
| ------ | ------ | ------ | ------ |
| `Default value` start | `K` |  null |  Starting from which key to include values. Default is \`null\`, means from the beginning. |
| `Default value` end | `K` |  null |  Up to which key include values (inclusive). Default is \`null\`, means to the end. |
| `Default value` limit | `i32` |  -1 |  The maximum number of values to return. Default is \`-1\`, means no limit. |
| `Default value` startInclusive | `bool` | true |  Whether the start key is inclusive. Default is \`true\`, means include start key. It's useful to set it to false for pagination. |

**Returns:** `V`[]

___

'''
'''--- apidoc/classes/_near_.collections.topn.md ---
[near-runtime-ts](../README.md) > ["near"](../modules/_near_.md) > [collections](../modules/_near_.collections.md) > [TopN](../classes/_near_.collections.topn.md)

# Class: TopN

A TopN class that can return first N keys of a type K sorted by rating. Rating is stored as i32. Default sort order is descending (highest rated keys), but can be changed to ascending (lowest rated keys).

## Type parameters
#### K 
## Hierarchy

**TopN**

## Index

### Constructors

* [constructor](_near_.collections.topn.md#constructor)

### Accessors

* [isEmpty](_near_.collections.topn.md#isempty)
* [length](_near_.collections.topn.md#length)

### Methods

* [contains](_near_.collections.topn.md#contains)
* [delete](_near_.collections.topn.md#delete)
* [getRating](_near_.collections.topn.md#getrating)
* [getTop](_near_.collections.topn.md#gettop)
* [getTopFromKey](_near_.collections.topn.md#gettopfromkey)
* [getTopWithRating](_near_.collections.topn.md#gettopwithrating)
* [getTopWithRatingFromKey](_near_.collections.topn.md#gettopwithratingfromkey)
* [incrementRating](_near_.collections.topn.md#incrementrating)
* [keysToRatings](_near_.collections.topn.md#keystoratings)
* [setRating](_near_.collections.topn.md#setrating)

---

## Constructors

<a id="constructor"></a>

###  constructor

⊕ **new TopN**(prefix: *`string`*, descending?: *`bool`*): [TopN](_near_.collections.topn.md)

*Defined in [near.ts:766](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L766)*

Creates or restores a persistent top N collection with a given storage prefix. Always use a unique storage prefix for different collections.

**Parameters:**

| Name | Type | Default value | Description |
| ------ | ------ | ------ | ------ |
| prefix | `string` | - |  A prefix to use for every key of this collection. |
| `Default value` descending | `bool` | true |  Sorting order of keys for rating. Default is descending (the highest rated keys). |

**Returns:** [TopN](_near_.collections.topn.md)

___

## Accessors

<a id="isempty"></a>

###  isEmpty

**get isEmpty**(): `bool`

*Defined in [near.ts:810](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L810)*

**Returns:** `bool`
True if the TopN collection is empty.

___
<a id="length"></a>

###  length

**get length**(): `i32`

*Defined in [near.ts:817](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L817)*

**Returns:** `i32`
The number of unique elements in the TopN collection.

___

## Methods

<a id="contains"></a>

###  contains

▸ **contains**(key: *`K`*): `bool`

*Defined in [near.ts:837](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L837)*

**Parameters:**

| Name | Type | Description |
| ------ | ------ | ------ |
| key | `K` |  Key to check. |

**Returns:** `bool`
True if the given key is present.

___
<a id="delete"></a>

###  delete

▸ **delete**(key: *`K`*): `void`

*Defined in [near.ts:845](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L845)*

Removes rating and the key from the collection.

**Parameters:**

| Name | Type | Description |
| ------ | ------ | ------ |
| key | `K` |  Key to remove. |

**Returns:** `void`

___
<a id="getrating"></a>

###  getRating

▸ **getRating**(key: *`K`*, defaultRating?: *`i32`*): `i32`

*Defined in [near.ts:915](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L915)*

**Parameters:**

| Name | Type | Default value | Description |
| ------ | ------ | ------ | ------ |
| key | `K` | - |  Key of the element. |
| `Default value` defaultRating | `i32` | 0 |  The default rating to return if the key is not present. |

**Returns:** `i32`
Value for the given key or the defaultRating.

___
<a id="gettop"></a>

###  getTop

▸ **getTop**(limit: *`i32`*): `K`[]

*Defined in [near.ts:871](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L871)*

**Parameters:**

| Name | Type | Description |
| ------ | ------ | ------ |
| limit | `i32` |  The maximum limit of keys to return. |

**Returns:** `K`[]
The array of top rated keys.

___
<a id="gettopfromkey"></a>

###  getTopFromKey

▸ **getTopFromKey**(limit: *`i32`*, fromKey: *`K`*): `K`[]

*Defined in [near.ts:882](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L882)*

Returns a top list starting from the given key (exclusive). It's useful for pagination.

**Parameters:**

| Name | Type | Description |
| ------ | ------ | ------ |
| limit | `i32` |  The maximum limit of keys to return. |
| fromKey | `K` |  The key from which return top list (exclisive). |

**Returns:** `K`[]
The array of top rated keys starting from the given key.

___
<a id="gettopwithrating"></a>

###  getTopWithRating

▸ **getTopWithRating**(limit: *`i32`*): [MapEntry](_near_.near.mapentry.md)<`K`, `i32`>[]

*Defined in [near.ts:895](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L895)*

**Parameters:**

| Name | Type | Description |
| ------ | ------ | ------ |
| limit | `i32` |  The maximum limit of keys to return. |

**Returns:** [MapEntry](_near_.near.mapentry.md)<`K`, `i32`>[]
The array of top rated keys with their corresponding rating.

___
<a id="gettopwithratingfromkey"></a>

###  getTopWithRatingFromKey

▸ **getTopWithRatingFromKey**(limit: *`i32`*, fromKey: *`K`*): [MapEntry](_near_.near.mapentry.md)<`K`, `i32`>[]

*Defined in [near.ts:906](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L906)*

Returns a top list with rating starting from the given key (exclusive). It's useful for pagination.

**Parameters:**

| Name | Type | Description |
| ------ | ------ | ------ |
| limit | `i32` |  The maximum limit of keys to return. |
| fromKey | `K` |  The key from which return top list (exclisive). |

**Returns:** [MapEntry](_near_.near.mapentry.md)<`K`, `i32`>[]
The array of top rated keys with their rating starting from the given key.

___
<a id="incrementrating"></a>

###  incrementRating

▸ **incrementRating**(key: *`K`*, increment?: *`i32`*): `void`

*Defined in [near.ts:940](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L940)*

Increments rating of the given key by the given increment (1 by default).

**Parameters:**

| Name | Type | Default value | Description |
| ------ | ------ | ------ | ------ |
| key | `K` | - |  The key to update. |
| `Default value` increment | `i32` | 1 |  The increment value for the rating (1 by default). |

**Returns:** `void`

___
<a id="keystoratings"></a>

###  keysToRatings

▸ **keysToRatings**(keys: *`K`[]*): [MapEntry](_near_.near.mapentry.md)<`K`, `i32`>[]

*Defined in [near.ts:858](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L858)*

**Parameters:**

| Name | Type | Description |
| ------ | ------ | ------ |
| keys | `K`[] |  The array of keys to lookup rating. |

**Returns:** [MapEntry](_near_.near.mapentry.md)<`K`, `i32`>[]
an array of key to rating pairs for the given keys.

___
<a id="setrating"></a>

###  setRating

▸ **setRating**(key: *`K`*, rating: *`i32`*): `void`

*Defined in [near.ts:924](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L924)*

Sets the new rating for the given key.

**Parameters:**

| Name | Type | Description |
| ------ | ------ | ------ |
| key | `K` |  The key to update. |
| rating | `i32` |  The new rating of the key. |

**Returns:** `void`

___

'''
'''--- apidoc/classes/_near_.collections.vector.md ---
[near-runtime-ts](../README.md) > ["near"](../modules/_near_.md) > [collections](../modules/_near_.collections.md) > [Vector](../classes/_near_.collections.vector.md)

# Class: Vector

A vector class that implements a persistent array.

## Type parameters
#### T 
## Hierarchy

**Vector**

## Index

### Constructors

* [constructor](_near_.collections.vector.md#constructor)

### Accessors

* [back](_near_.collections.vector.md#back)
* [first](_near_.collections.vector.md#first)
* [front](_near_.collections.vector.md#front)
* [isEmpty](_near_.collections.vector.md#isempty)
* [last](_near_.collections.vector.md#last)
* [length](_near_.collections.vector.md#length)

### Methods

* [containsIndex](_near_.collections.vector.md#containsindex)
* [delete](_near_.collections.vector.md#delete)
* [pop](_near_.collections.vector.md#pop)
* [popBack](_near_.collections.vector.md#popback)
* [push](_near_.collections.vector.md#push)
* [pushBack](_near_.collections.vector.md#pushback)

---

## Constructors

<a id="constructor"></a>

###  constructor

⊕ **new Vector**(prefix: *`string`*): [Vector](_near_.collections.vector.md)

*Defined in [near.ts:266](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L266)*

Creates or restores a persistent vector with a given storage prefix. Always use a unique storage prefix for different collections.

**Parameters:**

| Name | Type | Description |
| ------ | ------ | ------ |
| prefix | `string` |  A prefix to use for every key of this vector. |

**Returns:** [Vector](_near_.collections.vector.md)

___

## Accessors

<a id="back"></a>

###  back

**get back**(): `T`

*Defined in [near.ts:422](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L422)*

**Returns:** `T`
The last element of the vector. Asserts that the vector is not empty.

___
<a id="first"></a>

###  first

**get first**(): `T`

*Defined in [near.ts:445](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L445)*

**Returns:** `T`
The first element of the vector. Asserts that the vector is not empty.

___
<a id="front"></a>

###  front

**get front**(): `T`

*Defined in [near.ts:437](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L437)*

**Returns:** `T`
The first element of the vector. Asserts that the vector is not empty.

___
<a id="isempty"></a>

###  isEmpty

**get isEmpty**(): `bool`

*Defined in [near.ts:307](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L307)*

**Returns:** `bool`
True if the vector is empty.

___
<a id="last"></a>

###  last

**get last**(): `T`

*Defined in [near.ts:430](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L430)*

**Returns:** `T`
The last element of the vector. Asserts that the vector is not empty.

___
<a id="length"></a>

###  length

**get length**(): `i32`

*Defined in [near.ts:314](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L314)*

**Returns:** `i32`
The length of the vector.

___

## Methods

<a id="containsindex"></a>

###  containsIndex

▸ **containsIndex**(index: *`i32`*): `bool`

*Defined in [near.ts:300](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L300)*

**Parameters:**

| Name | Type | Description |
| ------ | ------ | ------ |
| index | `i32` |  The index to check. |

**Returns:** `bool`
True if the given index is within the range of the vector indices.

___
<a id="delete"></a>

###  delete

▸ **delete**(index: *`i32`*): `void`

*Defined in [near.ts:291](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L291)*

Removes the content of the element from storage without changing length of the vector.

**Parameters:**

| Name | Type | Description |
| ------ | ------ | ------ |
| index | `i32` |  The index of the element to remove. |

**Returns:** `void`

___
<a id="pop"></a>

###  pop

▸ **pop**(): `T`

*Defined in [near.ts:400](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L400)*

Removes the last element from the vector and returns it. Asserts that the vector is not empty. Decreases the length of the vector.

**Returns:** `T`
The removed last element of the vector.

___
<a id="popback"></a>

###  popBack

▸ **popBack**(): `T`

*Defined in [near.ts:415](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L415)*

Removes the last element from the vector and returns it. Asserts that the vector is not empty. Decreases the length of the vector.

**Returns:** `T`
The removed last element of the vector.

___
<a id="push"></a>

###  push

▸ **push**(element: *`T`*): `i32`

*Defined in [near.ts:378](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L378)*

Adds a new element to the end of the vector. Increases the length of the vector.

**Parameters:**

| Name | Type | Description |
| ------ | ------ | ------ |
| element | `T` |  A new element to add. |

**Returns:** `i32`
The index of a newly added element

___
<a id="pushback"></a>

###  pushBack

▸ **pushBack**(element: *`T`*): `i32`

*Defined in [near.ts:391](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L391)*

Adds a new element to the end of the vector. Increases the length of the vector.

**Parameters:**

| Name | Type | Description |
| ------ | ------ | ------ |
| element | `T` |  A new element to add. |

**Returns:** `i32`
The index of a newly added element

___

'''
'''--- apidoc/classes/_near_.context.md ---
[near-runtime-ts](../README.md) > ["near"](../modules/_near_.md) > [Context](../classes/_near_.context.md)

# Class: Context

Provides context for contract execution, including information about transaction sender, etc.

## Hierarchy

**Context**

## Index

### Accessors

* [blockIndex](_near_.context.md#blockindex)
* [contractName](_near_.context.md#contractname)
* [frozenBalance](_near_.context.md#frozenbalance)
* [liquidBalance](_near_.context.md#liquidbalance)
* [receivedAmount](_near_.context.md#receivedamount)
* [sender](_near_.context.md#sender)
* [storageUsage](_near_.context.md#storageusage)

### Methods

* [deposit](_near_.context.md#deposit)
* [withdraw](_near_.context.md#withdraw)

---

## Accessors

<a id="blockindex"></a>

###  blockIndex

**get blockIndex**(): `u64`

*Defined in [near.ts:1013](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1013)*

Current block index.

**Returns:** `u64`

___
<a id="contractname"></a>

###  contractName

**get contractName**(): `string`

*Defined in [near.ts:1006](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1006)*

Account ID of contract.

**Returns:** `string`

___
<a id="frozenbalance"></a>

###  frozenBalance

**get frozenBalance**(): `u128`

*Defined in [near.ts:1027](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1027)*

The amount of tokens that are locked in the account. Storage usage fee is deducted from this balance.

**Returns:** `u128`

___
<a id="liquidbalance"></a>

###  liquidBalance

**get liquidBalance**(): `u128`

*Defined in [near.ts:1035](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1035)*

The amount of tokens that can be used for running wasm, creating transactions, and sending to other contracts through cross-contract calls.

**Returns:** `u128`

___
<a id="receivedamount"></a>

###  receivedAmount

**get receivedAmount**(): `u128`

*Defined in [near.ts:1020](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1020)*

The amount of tokens received with this execution call.

**Returns:** `u128`

___
<a id="sender"></a>

###  sender

**get sender**(): `string`

*Defined in [near.ts:999](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L999)*

Account ID of transaction sender.

**Returns:** `string`

___
<a id="storageusage"></a>

###  storageUsage

**get storageUsage**(): `u64`

*Defined in [near.ts:1042](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1042)*

The current storage usage in bytes.

**Returns:** `u64`

___

## Methods

<a id="deposit"></a>

###  deposit

▸ **deposit**(minAmount: *`u128`*, maxAmount: *`u128`*): `u128`

*Defined in [near.ts:1051](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1051)*

Moves assets from liquid balance to frozen balance. If there is enough liquid balance will deposit the maximum amount. Otherwise will deposit as much as possible. Will fail if there is less than minimum amount on the liquid balance. Returns the deposited amount.

**Parameters:**

| Name | Type |
| ------ | ------ |
| minAmount | `u128` |
| maxAmount | `u128` |

**Returns:** `u128`

___
<a id="withdraw"></a>

###  withdraw

▸ **withdraw**(minAmount: *`u128`*, maxAmount: *`u128`*): `u128`

*Defined in [near.ts:1060](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1060)*

Moves assets from frozen balance to liquid balance. If there is enough frozen balance will withdraw the maximum amount. Otherwise will withdraw as much as possible. Will fail if there is less than minimum amount on the frozen balance. Returns the withdrawn amount.

**Parameters:**

| Name | Type |
| ------ | ------ |
| minAmount | `u128` |
| maxAmount | `u128` |

**Returns:** `u128`

___

'''
'''--- apidoc/classes/_near_.contractpromise.md ---
[near-runtime-ts](../README.md) > ["near"](../modules/_near_.md) > [ContractPromise](../classes/_near_.contractpromise.md)

# Class: ContractPromise

Class to make asynchronous calls to other contracts and receive callbacks. Here is an example on how to create a new async call with the callback.

```
export function callMetaNear(): void {
  let itemArgs: AddItemArgs = {
    accountId: "alice.near",
    itemId: "Sword +9000",s
  };
  let promise = ContractPromise.create(
    "metanear",
    "addItem",
    itemArgs.encode(),
    0,
  );
  // Setting up args for the callback
  let requestArgs: OnItemAddedArgs = {
    "itemAddedRequestId": "UNIQUE_REQUEST_ID",
  };
  let callbackPromise = promise.then(
     "_onItemAdded",
     requestArgs.encode(),
     2,  // Attaching 2 additional requests, in case we need to do another call
  );
  callbackPromise.returnAsResult();
}
```

See docs on used methods for more details.

## Hierarchy

**ContractPromise**

## Index

### Properties

* [id](_near_.contractpromise.md#id)

### Methods

* [returnAsResult](_near_.contractpromise.md#returnasresult)
* [then](_near_.contractpromise.md#then)
* [all](_near_.contractpromise.md#all)
* [create](_near_.contractpromise.md#create)
* [getResults](_near_.contractpromise.md#getresults)

---

## Properties

<a id="id"></a>

###  id

**● id**: *`i32`*

*Defined in [near.ts:1280](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1280)*

___

## Methods

<a id="returnasresult"></a>

###  returnAsResult

▸ **returnAsResult**(): `void`

*Defined in [near.ts:1384](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1384)*

Returns the promise as a result of your function. Don't return any other results from the function. Your current function should be `void` and shouldn't return anything else. E.g.

```
export function callMetaNear(): void {
  let itemArgs: AddItemArgs = {
    accountId: "alice.near",
    itemId: "Sword +9000",
  };
  let promise = ContractPromise.create(
    "metanear",
    "addItem",
    itemArgs.encode(),
    0,
    0,
  );
  promise.returnAsResult();
}
```

Now when you call `callMetaNear` method, it creates new promise to `metanear` contract. And saying that the result of the current execution depends on the result `addItem`. Even though this contract is not going to be called with a callback, the contract which calling `callMetaNear` would receive the result from `addItem`. This call essentially acts as a proxy.

You can also attach a callback on top of the promise before returning it, e.g.

```
  ...
  let promise = ContractPromise.create(
     ...
  );
  // Setting up args for the callback
  let requestArgs: OnItemAddedArgs = {
    "itemAddedRequestId": "UNIQUE_REQUEST_ID",
  };
  let callbackPromise = promise.then(
     "_onItemAdded",
     requestArgs.encode(),
     2,  // Attaching 2 additional requests, in case we need to do another call
  );
  callbackPromise.returnAsResult();
}
```

**Returns:** `void`

___
<a id="then"></a>

###  then

▸ **then**(methodName: *`string`*, args: *`Uint8Array`*, amount: *`u128`*): [ContractPromise](_near_.contractpromise.md)

*Defined in [near.ts:1324](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1324)*

Creating a callback for the AsyncCall Promise created with `create` method.

**Parameters:**

| Name | Type | Description |
| ------ | ------ | ------ |
| methodName | `string` |  Method name on your contract to be called to receive the callback. NOTE: Your callback method name can start with \`_\`, which would prevent other contracts from calling it directly. Only callbacks can call methods with \`_\` prefix. |
| args | `Uint8Array` |  Serialized arguments on your callback method, see \`create\` for details. |
| amount | `u128` |  The amount of tokens from the called contract to be sent to the current contract with this call. |

**Returns:** [ContractPromise](_near_.contractpromise.md)

___
<a id="all"></a>

### `<Static>` all

▸ **all**(promises: *[ContractPromise](_near_.contractpromise.md)[]*): [ContractPromise](_near_.contractpromise.md)

*Defined in [near.ts:1394](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1394)*

Joins multiple async call promises into one, to aggregate results before the callback. NOTE: Given promises can only be new async calls and can't be callbacks. Joined promise can't be returned as a result

**Parameters:**

| Name | Type | Description |
| ------ | ------ | ------ |
| promises | [ContractPromise](_near_.contractpromise.md)[] |  List of async call promises to join. |

**Returns:** [ContractPromise](_near_.contractpromise.md)

___
<a id="create"></a>

### `<Static>` create

▸ **create**(contractName: *`string`*, methodName: *`string`*, args: *`Uint8Array`*, amount?: *`u128`*): [ContractPromise](_near_.contractpromise.md)

*Defined in [near.ts:1301](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1301)*

Creates a new async call promise. Returns an instance of `ContractPromise`. The call would be scheduled if the this current execution of the contract succeeds without errors or failed asserts.

**Parameters:**

| Name | Type | Default value | Description |
| ------ | ------ | ------ | ------ |
| contractName | `string` | - |  Account ID of the remote contract to call. E.g. \`metanear\`. |
| methodName | `string` | - |  Method name on the remote contract to call. E.g. \`addItem\`. |
| args | `Uint8Array` | - |  Serialized arguments to pass into the method. To get them create a new model specific for the method you calling, e.g. \`AddItemArgs\`. Then create an instance of it and populate arguments. After this, serialize it into bytes. E.g. ``` let itemArgs: AddItemArgs = { accountId: "alice.near", itemId: "Sword +9000", }; // Serialize args let args = itemArgs.encode(); ``` |
| `Default value` amount | `u128` | 0 |  The amount of tokens from your contract to be sent to the remote contract with this call. |

**Returns:** [ContractPromise](_near_.contractpromise.md)

___
<a id="getresults"></a>

### `<Static>` getResults

▸ **getResults**(): [ContractPromiseResult](_near_.contractpromiseresult.md)[]

*Defined in [near.ts:1426](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1426)*

Method to receive async (one or multiple) results from the remote contract in the callback. Example of using it.

```
// This function is prefixed with `_`, so other contracts or people can't call it directly.
export function _onItemAdded(itemAddedRequestId: string): bool {
  // Get all results
  let results = ContractPromise.getResults();
  let addItemResult = results[0];
  // Verifying the remote contract call succeeded.
  if (addItemResult.success) {
    // Decoding data from the bytes buffer into the local object.
    let data = AddItemResult.decode(addItemResult.buffer);
    if (data.itemPower > 9000) {
      return true;
    }
  }
  return false;
}
```

**Returns:** [ContractPromiseResult](_near_.contractpromiseresult.md)[]
An array of results based on the number of promises the callback was created on. If the callback using `then` was scheduled only on one result, then one result will be returned.

___

'''
'''--- apidoc/classes/_near_.contractpromiseresult.md ---
[near-runtime-ts](../README.md) > ["near"](../modules/_near_.md) > [ContractPromiseResult](../classes/_near_.contractpromiseresult.md)

# Class: ContractPromiseResult

Class to store results of the async calls on the remote contracts.

## Hierarchy

**ContractPromiseResult**

## Index

### Properties

* [buffer](_near_.contractpromiseresult.md#buffer)
* [success](_near_.contractpromiseresult.md#success)

---

## Properties

<a id="buffer"></a>

###  buffer

**● buffer**: *`Uint8Array`*

*Defined in [near.ts:1450](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1450)*

___
<a id="success"></a>

###  success

**● success**: *`bool`*

*Defined in [near.ts:1447](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1447)*

___

'''
'''--- apidoc/classes/_near_.near.mapentry.md ---
[near-runtime-ts](../README.md) > ["near"](../modules/_near_.md) > [near](../modules/_near_.near.md) > [MapEntry](../classes/_near_.near.mapentry.md)

# Class: MapEntry

Helper class to store key->value pairs.

## Type parameters
#### K 
#### V 
## Hierarchy

**MapEntry**

## Index

### Constructors

* [constructor](_near_.near.mapentry.md#constructor)

### Properties

* [key](_near_.near.mapentry.md#key)
* [value](_near_.near.mapentry.md#value)

---

## Constructors

<a id="constructor"></a>

###  constructor

⊕ **new MapEntry**(key: *`K`*, value: *`V`*): [MapEntry](_near_.near.mapentry.md)

*Defined in [near.ts:1133](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1133)*

**Parameters:**

| Name | Type |
| ------ | ------ |
| key | `K` |
| value | `V` |

**Returns:** [MapEntry](_near_.near.mapentry.md)

___

## Properties

<a id="key"></a>

###  key

**● key**: *`K`*

*Defined in [near.ts:1132](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1132)*

___
<a id="value"></a>

###  value

**● value**: *`V`*

*Defined in [near.ts:1133](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1133)*

___

'''
'''--- apidoc/classes/_near_.storage.md ---
[near-runtime-ts](../README.md) > ["near"](../modules/_near_.md) > [Storage](../classes/_near_.storage.md)

# Class: Storage

Represents contract storage.

## Hierarchy

**Storage**

## Index

### Methods

* [contains](_near_.storage.md#contains)
* [delete](_near_.storage.md#delete)
* [get](_near_.storage.md#get)
* [getBytes](_near_.storage.md#getbytes)
* [getItem](_near_.storage.md#getitem)
* [getString](_near_.storage.md#getstring)
* [getU64](_near_.storage.md#getu64)
* [hasKey](_near_.storage.md#haskey)
* [keyRange](_near_.storage.md#keyrange)
* [keys](_near_.storage.md#keys)
* [remove](_near_.storage.md#remove)
* [removeItem](_near_.storage.md#removeitem)
* [set](_near_.storage.md#set)
* [setBytes](_near_.storage.md#setbytes)
* [setItem](_near_.storage.md#setitem)
* [setString](_near_.storage.md#setstring)
* [setU64](_near_.storage.md#setu64)

---

## Methods

<a id="contains"></a>

###  contains

▸ **contains**(key: *`string`*): `bool`

*Defined in [near.ts:115](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L115)*

Returns true if the given key is present in the storage.

**Parameters:**

| Name | Type |
| ------ | ------ |
| key | `string` |

**Returns:** `bool`

___
<a id="delete"></a>

###  delete

▸ **delete**(key: *`string`*): `void`

*Defined in [near.ts:124](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L124)*

**Parameters:**

| Name | Type |
| ------ | ------ |
| key | `string` |

**Returns:** `void`

___
<a id="get"></a>

###  get

▸ **get**<`T`>(key: *`string`*, defaultValue?: *`T`*): `T`

*Defined in [near.ts:187](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L187)*

Gets given generic value stored under the key. Key is encoded as UTF-8 strings. Supported types: bool, integer, string and data objects defined in model.ts.

**Type parameters:**

#### T 
**Parameters:**

| Name | Type | Default value | Description |
| ------ | ------ | ------ | ------ |
| key | `string` | - |  A key to read from storage. |
| `Default value` defaultValue | `T` |  null |  The default value if the key is not available |

**Returns:** `T`
A value of type T stored under the given key.

___
<a id="getbytes"></a>

###  getBytes

▸ **getBytes**(key: *`string`*): `Uint8Array`

*Defined in [near.ts:108](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L108)*

Get byte array stored under given key. Key is encoded as UTF-8 strings. Byte array stored as is.

It's convenient to use this together with `DomainObject.decode()`.

**Parameters:**

| Name | Type |
| ------ | ------ |
| key | `string` |

**Returns:** `Uint8Array`

___
<a id="getitem"></a>

###  getItem

▸ **getItem**(key: *`string`*): `string`

*Defined in [near.ts:74](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L74)*

*__deprecated__*: Use getString or get

**Parameters:**

| Name | Type |
| ------ | ------ |
| key | `string` |

**Returns:** `string`

___
<a id="getstring"></a>

###  getString

▸ **getString**(key: *`string`*): `string`

*Defined in [near.ts:88](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L88)*

Get string value stored under given key. Both key and value are encoded as UTF-8 strings.

**Parameters:**

| Name | Type |
| ------ | ------ |
| key | `string` |

**Returns:** `string`

___
<a id="getu64"></a>

###  getU64

▸ **getU64**(key: *`string`*): `u64`

*Defined in [near.ts:158](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L158)*

Get 64-bit unsigned int stored under given key. Key is encoded as UTF-8 strings. Number is encoded as decimal string.

**Parameters:**

| Name | Type |
| ------ | ------ |
| key | `string` |

**Returns:** `u64`
int value or 0 if value is not found

___
<a id="haskey"></a>

###  hasKey

▸ **hasKey**(key: *`string`*): `bool`

*Defined in [near.ts:120](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L120)*

**Parameters:**

| Name | Type |
| ------ | ------ |
| key | `string` |

**Returns:** `bool`

___
<a id="keyrange"></a>

###  keyRange

▸ **keyRange**(start: *`string`*, end: *`string`*, limit?: *`i32`*): `string`[]

*Defined in [near.ts:44](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L44)*

Returns list of keys between the given start key and the end key. Both inclusive. NOTE: Must be very careful to avoid exploding amount of compute with this method.

**Parameters:**

| Name | Type | Default value | Description |
| ------ | ------ | ------ | ------ |
| start | `string` | - |  The start key used as a lower bound in lexicographical order. Inclusive. |
| end | `string` | - |  The end key used as a upper bound in lexicographical order. Inclusive. |
| `Default value` limit | `i32` |  -1 |  The maximum number of keys to return. Default is \`-1\`, means no limit. |

**Returns:** `string`[]

___
<a id="keys"></a>

###  keys

▸ **keys**(prefix: *`string`*, limit?: *`i32`*): `string`[]

*Defined in [near.ts:57](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L57)*

Returns list of keys starting with given prefix. NOTE: Must be very careful to avoid exploding amount of compute with this method.

**Parameters:**

| Name | Type | Default value | Description |
| ------ | ------ | ------ | ------ |
| prefix | `string` | - |  The key prefix. |
| `Default value` limit | `i32` |  -1 |  The maximum number of keys to return. Default is \`-1\`, means no limit. |

**Returns:** `string`[]

___
<a id="remove"></a>

###  remove

▸ **remove**(key: *`string`*): `void`

*Defined in [near.ts:132](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L132)*

*__deprecated__*: Use #delete

**Parameters:**

| Name | Type |
| ------ | ------ |
| key | `string` |

**Returns:** `void`

___
<a id="removeitem"></a>

###  removeItem

▸ **removeItem**(key: *`string`*): `void`

*Defined in [near.ts:140](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L140)*

*__deprecated__*: Use #delete

**Parameters:**

| Name | Type |
| ------ | ------ |
| key | `string` |

**Returns:** `void`

___
<a id="set"></a>

###  set

▸ **set**<`T`>(key: *`string`*, value: *`T`*): `void`

*Defined in [near.ts:169](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L169)*

Stores given generic value under the key. Key is encoded as UTF-8 strings. Supported types: bool, integer, string and data objects defined in model.ts.

**Type parameters:**

#### T 
**Parameters:**

| Name | Type | Description |
| ------ | ------ | ------ |
| key | `string` |  A key to use for storage. |
| value | `T` |  A value to store. |

**Returns:** `void`

___
<a id="setbytes"></a>

###  setBytes

▸ **setBytes**(key: *`string`*, value: *`Uint8Array`*): `void`

*Defined in [near.ts:98](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L98)*

Store byte array under given key. Key is encoded as UTF-8 strings. Byte array stored as is.

It's convenient to use this together with `domainObject.encode()`.

**Parameters:**

| Name | Type |
| ------ | ------ |
| key | `string` |
| value | `Uint8Array` |

**Returns:** `void`

___
<a id="setitem"></a>

###  setItem

▸ **setItem**(key: *`string`*, value: *`string`*): `void`

*Defined in [near.ts:67](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L67)*

*__deprecated__*: Use setString or set

**Parameters:**

| Name | Type |
| ------ | ------ |
| key | `string` |
| value | `string` |

**Returns:** `void`

___
<a id="setstring"></a>

###  setString

▸ **setString**(key: *`string`*, value: *`string`*): `void`

*Defined in [near.ts:81](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L81)*

Store string value under given key. Both key and value are encoded as UTF-8 strings.

**Parameters:**

| Name | Type |
| ------ | ------ |
| key | `string` |
| value | `string` |

**Returns:** `void`

___
<a id="setu64"></a>

###  setU64

▸ **setU64**(key: *`string`*, value: *`u64`*): `void`

*Defined in [near.ts:148](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L148)*

Store 64-bit unsigned int under given key. Key is encoded as UTF-8 strings. Number is encoded as decimal string.

**Parameters:**

| Name | Type |
| ------ | ------ |
| key | `string` |
| value | `u64` |

**Returns:** `void`

___

'''
'''--- apidoc/modules/_near_.base64.md ---
[near-runtime-ts](../README.md) > ["near"](../modules/_near_.md) > [base64](../modules/_near_.base64.md)

# Module: base64

base64 encoding/decoding

## Index

### Variables

* [ALPHA](_near_.base64.md#alpha)
* [PADCHAR](_near_.base64.md#padchar)

### Functions

* [decode](_near_.base64.md#decode)
* [encode](_near_.base64.md#encode)
* [getByte64](_near_.base64.md#getbyte64)

---

## Variables

<a id="alpha"></a>

### `<Const>` ALPHA

**● ALPHA**: *`string`* = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"

*Defined in [near.ts:1585](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1585)*

___
<a id="padchar"></a>

### `<Const>` PADCHAR

**● PADCHAR**: *`string`* = "="

*Defined in [near.ts:1584](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1584)*

___

## Functions

<a id="decode"></a>

###  decode

▸ **decode**(s: *`string`*): `Uint8Array`

*Defined in [near.ts:1595](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1595)*

Decode base64-encoded string and return a Uint8Array.

**Parameters:**

| Name | Type | Description |
| ------ | ------ | ------ |
| s | `string` |  Base64 encoded string. |

**Returns:** `Uint8Array`

___
<a id="encode"></a>

###  encode

▸ **encode**(bytes: *`Uint8Array`*): `string`

*Defined in [near.ts:1644](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1644)*

Encode Uint8Array in base64.

**Parameters:**

| Name | Type | Description |
| ------ | ------ | ------ |
| bytes | `Uint8Array` |  Byte array of type Uint8Array. |

**Returns:** `string`

___
<a id="getbyte64"></a>

###  getByte64

▸ **getByte64**(s: *`string`*, i: *`u32`*): `u32`

*Defined in [near.ts:1587](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1587)*

**Parameters:**

| Name | Type |
| ------ | ------ |
| s | `string` |
| i | `u32` |

**Returns:** `u32`

___

'''
'''--- apidoc/modules/_near_.collections.md ---
[near-runtime-ts](../README.md) > ["near"](../modules/_near_.md) > [collections](../modules/_near_.collections.md)

# Module: collections

A namespace with classes and functions for persistent collections on the blockchain.

## Index

### Classes

* [Deque](../classes/_near_.collections.deque.md)
* [Map](../classes/_near_.collections.map.md)
* [TopN](../classes/_near_.collections.topn.md)
* [Vector](../classes/_near_.collections.vector.md)

### Variables

* [_KEY_BACK_INDEX_SUFFIX](_near_.collections.md#_key_back_index_suffix)
* [_KEY_ELEMENT_SUFFIX](_near_.collections.md#_key_element_suffix)
* [_KEY_FRONT_INDEX_SUFFIX](_near_.collections.md#_key_front_index_suffix)
* [_KEY_LENGTH_SUFFIX](_near_.collections.md#_key_length_suffix)
* [_KEY_RATING_SUFFIX](_near_.collections.md#_key_rating_suffix)
* [_RATING_OFFSET](_near_.collections.md#_rating_offset)

### Functions

* [deque](_near_.collections.md#deque-1)
* [map](_near_.collections.md#map-1)
* [topN](_near_.collections.md#topn-1)
* [vector](_near_.collections.md#vector-1)

---

## Variables

<a id="_key_back_index_suffix"></a>

### `<Const>` _KEY_BACK_INDEX_SUFFIX

**● _KEY_BACK_INDEX_SUFFIX**: *":back"* = ":back"

*Defined in [near.ts:255](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L255)*

___
<a id="_key_element_suffix"></a>

### `<Const>` _KEY_ELEMENT_SUFFIX

**● _KEY_ELEMENT_SUFFIX**: *"::"* = "::"

*Defined in [near.ts:256](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L256)*

___
<a id="_key_front_index_suffix"></a>

### `<Const>` _KEY_FRONT_INDEX_SUFFIX

**● _KEY_FRONT_INDEX_SUFFIX**: *":front"* = ":front"

*Defined in [near.ts:254](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L254)*

___
<a id="_key_length_suffix"></a>

### `<Const>` _KEY_LENGTH_SUFFIX

**● _KEY_LENGTH_SUFFIX**: *":len"* = ":len"

*Defined in [near.ts:253](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L253)*

___
<a id="_key_rating_suffix"></a>

### `<Const>` _KEY_RATING_SUFFIX

**● _KEY_RATING_SUFFIX**: *":r"* = ":r"

*Defined in [near.ts:257](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L257)*

___
<a id="_rating_offset"></a>

### `<Const>` _RATING_OFFSET

**● _RATING_OFFSET**: *`u64`* = 2147483648

*Defined in [near.ts:258](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L258)*

___

## Functions

<a id="deque-1"></a>

###  deque

▸ **deque**<`T`>(prefix: *`string`*): [Deque](../classes/_near_.collections.deque.md)<`T`>

*Defined in [near.ts:968](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L968)*

Creates or restores a persistent deque with a given storage prefix. Always use a unique storage prefix for different collections.

**Type parameters:**

#### T 
**Parameters:**

| Name | Type | Description |
| ------ | ------ | ------ |
| prefix | `string` |  A prefix to use for every key of this deque. |

**Returns:** [Deque](../classes/_near_.collections.deque.md)<`T`>

___
<a id="map-1"></a>

###  map

▸ **map**<`K`,`V`>(prefix: *`string`*): [Map](../classes/_near_.collections.map.md)<`K`, `V`>

*Defined in [near.ts:977](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L977)*

Creates or restores a persistent map with a given storage prefix. Always use a unique storage prefix for different collections.

**Type parameters:**

#### K 
#### V 
**Parameters:**

| Name | Type | Description |
| ------ | ------ | ------ |
| prefix | `string` |  A prefix to use for every key of this map. |

**Returns:** [Map](../classes/_near_.collections.map.md)<`K`, `V`>

___
<a id="topn-1"></a>

###  topN

▸ **topN**<`K`>(prefix: *`string`*, descending?: *`bool`*): [TopN](../classes/_near_.collections.topn.md)<`K`>

*Defined in [near.ts:987](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L987)*

Creates or restores a persistent TopN with a given storage prefix. Always use a unique storage prefix for different collections.

**Type parameters:**

#### K 
**Parameters:**

| Name | Type | Default value | Description |
| ------ | ------ | ------ | ------ |
| prefix | `string` | - |  A prefix to use for every key of this collection. |
| `Default value` descending | `bool` | true |  Sorting order of keys for rating. Default is descending (the highest rated keys). |

**Returns:** [TopN](../classes/_near_.collections.topn.md)<`K`>

___
<a id="vector-1"></a>

###  vector

▸ **vector**<`T`>(prefix: *`string`*): [Vector](../classes/_near_.collections.vector.md)<`T`>

*Defined in [near.ts:959](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L959)*

Creates or restores a persistent vector with a given storage prefix. Always use a unique storage prefix for different collections.

**Type parameters:**

#### T 
**Parameters:**

| Name | Type | Description |
| ------ | ------ | ------ |
| prefix | `string` |  A prefix to use for every key of this vector. |

**Returns:** [Vector](../classes/_near_.collections.vector.md)<`T`>

___

'''
'''--- apidoc/modules/_near_.md ---
[near-runtime-ts](../README.md) > ["near"](../modules/_near_.md)

# External module: "near"

## Index

### Modules

* [base64](_near_.base64.md)
* [collections](_near_.collections.md)
* [near](_near_.near.md)

### Classes

* [Context](../classes/_near_.context.md)
* [ContractPromise](../classes/_near_.contractpromise.md)
* [ContractPromiseResult](../classes/_near_.contractpromiseresult.md)
* [Storage](../classes/_near_.storage.md)

### Type aliases

* [DataTypeIndex](_near_.md#datatypeindex)

### Variables

* [DATA_TYPE_CURRENT_ACCOUNT_ID](_near_.md#data_type_current_account_id)
* [DATA_TYPE_INPUT](_near_.md#data_type_input)
* [DATA_TYPE_ORIGINATOR_ACCOUNT_ID](_near_.md#data_type_originator_account_id)
* [DATA_TYPE_RESULT](_near_.md#data_type_result)
* [DATA_TYPE_STORAGE](_near_.md#data_type_storage)
* [DATA_TYPE_STORAGE_ITER](_near_.md#data_type_storage_iter)
* [DEFAULT_SCRATCH_BUFFER_SIZE](_near_.md#default_scratch_buffer_size)
* [context](_near_.md#context-1)
* [storage](_near_.md#storage-1)

### Functions

* [check_ethash](_near_.md#check_ethash)
* [data_read](_near_.md#data_read)
* [promise_and](_near_.md#promise_and)
* [promise_create](_near_.md#promise_create)
* [promise_then](_near_.md#promise_then)
* [result_count](_near_.md#result_count)
* [result_is_ok](_near_.md#result_is_ok)
* [return_promise](_near_.md#return_promise)
* [return_value](_near_.md#return_value)
* [storage_has_key](_near_.md#storage_has_key)
* [storage_iter](_near_.md#storage_iter)
* [storage_iter_next](_near_.md#storage_iter_next)
* [storage_range](_near_.md#storage_range)
* [storage_remove](_near_.md#storage_remove)
* [storage_write](_near_.md#storage_write)

---

## Type aliases

<a id="datatypeindex"></a>

###  DataTypeIndex

**Ƭ DataTypeIndex**: *`u32`*

*Defined in [near.ts:5](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L5)*

___

## Variables

<a id="data_type_current_account_id"></a>

### `<Const>` DATA_TYPE_CURRENT_ACCOUNT_ID

**● DATA_TYPE_CURRENT_ACCOUNT_ID**: *[DataTypeIndex](_near_.md#datatypeindex)* = 2

*Defined in [near.ts:8](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L8)*

___
<a id="data_type_input"></a>

### `<Const>` DATA_TYPE_INPUT

**● DATA_TYPE_INPUT**: *[DataTypeIndex](_near_.md#datatypeindex)* = 4

*Defined in [near.ts:10](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L10)*

___
<a id="data_type_originator_account_id"></a>

### `<Const>` DATA_TYPE_ORIGINATOR_ACCOUNT_ID

**● DATA_TYPE_ORIGINATOR_ACCOUNT_ID**: *[DataTypeIndex](_near_.md#datatypeindex)* = 1

*Defined in [near.ts:7](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L7)*

___
<a id="data_type_result"></a>

### `<Const>` DATA_TYPE_RESULT

**● DATA_TYPE_RESULT**: *[DataTypeIndex](_near_.md#datatypeindex)* = 5

*Defined in [near.ts:11](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L11)*

___
<a id="data_type_storage"></a>

### `<Const>` DATA_TYPE_STORAGE

**● DATA_TYPE_STORAGE**: *[DataTypeIndex](_near_.md#datatypeindex)* = 3

*Defined in [near.ts:9](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L9)*

___
<a id="data_type_storage_iter"></a>

### `<Const>` DATA_TYPE_STORAGE_ITER

**● DATA_TYPE_STORAGE_ITER**: *[DataTypeIndex](_near_.md#datatypeindex)* = 6

*Defined in [near.ts:12](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L12)*

___
<a id="default_scratch_buffer_size"></a>

### `<Const>` DEFAULT_SCRATCH_BUFFER_SIZE

**● DEFAULT_SCRATCH_BUFFER_SIZE**: *`usize`* =  1 << 16

*Defined in [near.ts:3](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L3)*

___
<a id="context-1"></a>

### `<Let>` context

**● context**: *[Context](../classes/_near_.context.md)* =  new Context()

*Defined in [near.ts:1065](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1065)*

___
<a id="storage-1"></a>

### `<Let>` storage

**● storage**: *[Storage](../classes/_near_.storage.md)* =  new Storage()

*Defined in [near.ts:247](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L247)*

An instance of a Storage class that is used for working with contract storage on the blockchain.

___

## Functions

<a id="check_ethash"></a>

###  check_ethash

▸ **check_ethash**(block_number: *`u64`*, header_hash_ptr: *`u32`*, header_hash_len: *`u32`*, nonce: *`u64`*, mix_hash_ptr: *`u32`*, mix_hash_len: *`u32`*, difficulty: *`u64`*): `bool`

*Defined in [near.ts:1497](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1497)*

**Parameters:**

| Name | Type |
| ------ | ------ |
| block_number | `u64` |
| header_hash_ptr | `u32` |
| header_hash_len | `u32` |
| nonce | `u64` |
| mix_hash_ptr | `u32` |
| mix_hash_len | `u32` |
| difficulty | `u64` |

**Returns:** `bool`

___
<a id="data_read"></a>

###  data_read

▸ **data_read**(type_index: *`u32`*, key_len: *`usize`*, key: *`usize`*, max_buf_len: *`usize`*, buf_ptr: *`usize`*): `usize`

*Defined in [near.ts:1477](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1477)*

**Parameters:**

| Name | Type |
| ------ | ------ |
| type_index | `u32` |
| key_len | `usize` |
| key | `usize` |
| max_buf_len | `usize` |
| buf_ptr | `usize` |

**Returns:** `usize`

___
<a id="promise_and"></a>

###  promise_and

▸ **promise_and**(promise_index1: *`u32`*, promise_index2: *`u32`*): `u32`

*Defined in [near.ts:1494](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1494)*

**Parameters:**

| Name | Type |
| ------ | ------ |
| promise_index1 | `u32` |
| promise_index2 | `u32` |

**Returns:** `u32`

___
<a id="promise_create"></a>

###  promise_create

▸ **promise_create**(account_id_len: *`usize`*, account_id_ptr: *`usize`*, method_name_len: *`usize`*, method_name_ptr: *`usize`*, args_len: *`usize`*, args_ptr: *`usize`*, amount: *`u128`*): `u32`

*Defined in [near.ts:1480](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1480)*

**Parameters:**

| Name | Type |
| ------ | ------ |
| account_id_len | `usize` |
| account_id_ptr | `usize` |
| method_name_len | `usize` |
| method_name_ptr | `usize` |
| args_len | `usize` |
| args_ptr | `usize` |
| amount | `u128` |

**Returns:** `u32`

___
<a id="promise_then"></a>

###  promise_then

▸ **promise_then**(promise_index: *`u32`*, method_name_len: *`usize`*, method_name_ptr: *`usize`*, args_len: *`usize`*, args_ptr: *`usize`*, amount: *`u128`*): `u32`

*Defined in [near.ts:1487](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1487)*

**Parameters:**

| Name | Type |
| ------ | ------ |
| promise_index | `u32` |
| method_name_len | `usize` |
| method_name_ptr | `usize` |
| args_len | `usize` |
| args_ptr | `usize` |
| amount | `u128` |

**Returns:** `u32`

___
<a id="result_count"></a>

###  result_count

▸ **result_count**(): `u32`

*Defined in [near.ts:1467](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1467)*

**Returns:** `u32`

___
<a id="result_is_ok"></a>

###  result_is_ok

▸ **result_is_ok**(index: *`u32`*): `bool`

*Defined in [near.ts:1469](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1469)*

**Parameters:**

| Name | Type |
| ------ | ------ |
| index | `u32` |

**Returns:** `bool`

___
<a id="return_promise"></a>

###  return_promise

▸ **return_promise**(promise_index: *`u32`*): `void`

*Defined in [near.ts:1474](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1474)*

**Parameters:**

| Name | Type |
| ------ | ------ |
| promise_index | `u32` |

**Returns:** `void`

___
<a id="return_value"></a>

###  return_value

▸ **return_value**(value_len: *`usize`*, value_ptr: *`usize`*): `void`

*Defined in [near.ts:1472](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1472)*

**Parameters:**

| Name | Type |
| ------ | ------ |
| value_len | `usize` |
| value_ptr | `usize` |

**Returns:** `void`

___
<a id="storage_has_key"></a>

###  storage_has_key

▸ **storage_has_key**(key_len: *`usize`*, key_ptr: *`usize`*): `bool`

*Defined in [near.ts:1458](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1458)*

**Parameters:**

| Name | Type |
| ------ | ------ |
| key_len | `usize` |
| key_ptr | `usize` |

**Returns:** `bool`

___
<a id="storage_iter"></a>

###  storage_iter

▸ **storage_iter**(prefix_len: *`usize`*, prefix_ptr: *`usize`*): `u32`

*Defined in [near.ts:1460](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1460)*

**Parameters:**

| Name | Type |
| ------ | ------ |
| prefix_len | `usize` |
| prefix_ptr | `usize` |

**Returns:** `u32`

___
<a id="storage_iter_next"></a>

###  storage_iter_next

▸ **storage_iter_next**(id: *`u32`*): `u32`

*Defined in [near.ts:1464](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1464)*

**Parameters:**

| Name | Type |
| ------ | ------ |
| id | `u32` |

**Returns:** `u32`

___
<a id="storage_range"></a>

###  storage_range

▸ **storage_range**(start_len: *`usize`*, start_ptr: *`usize`*, end_len: *`usize`*, end_ptr: *`usize`*): `u32`

*Defined in [near.ts:1462](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1462)*

**Parameters:**

| Name | Type |
| ------ | ------ |
| start_len | `usize` |
| start_ptr | `usize` |
| end_len | `usize` |
| end_ptr | `usize` |

**Returns:** `u32`

___
<a id="storage_remove"></a>

###  storage_remove

▸ **storage_remove**(key_len: *`usize`*, key_ptr: *`usize`*): `void`

*Defined in [near.ts:1456](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1456)*

**Parameters:**

| Name | Type |
| ------ | ------ |
| key_len | `usize` |
| key_ptr | `usize` |

**Returns:** `void`

___
<a id="storage_write"></a>

###  storage_write

▸ **storage_write**(key_len: *`usize`*, key_ptr: *`usize`*, value_len: *`usize`*, value_ptr: *`usize`*): `void`

*Defined in [near.ts:1454](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1454)*

**Parameters:**

| Name | Type |
| ------ | ------ |
| key_len | `usize` |
| key_ptr | `usize` |
| value_len | `usize` |
| value_ptr | `usize` |

**Returns:** `void`

___

'''
'''--- apidoc/modules/_near_.near.md ---
[near-runtime-ts](../README.md) > ["near"](../modules/_near_.md) > [near](../modules/_near_.near.md)

# Module: near

## Index

### Classes

* [MapEntry](../classes/_near_.near.mapentry.md)

### Functions

* [base58](_near_.near.md#base58)
* [bytesToString](_near_.near.md#bytestostring)
* [hash](_near_.near.md#hash)
* [hash32](_near_.near.md#hash32)
* [log](_near_.near.md#log)
* [parseFromBytes](_near_.near.md#parsefrombytes)
* [parseFromString](_near_.near.md#parsefromstring)
* [random32](_near_.near.md#random32)
* [randomBuffer](_near_.near.md#randombuffer)
* [str](_near_.near.md#str)
* [stringToBytes](_near_.near.md#stringtobytes)

---

## Functions

<a id="base58"></a>

###  base58

▸ **base58**(source: *`Uint8Array`*): `string`

*Defined in [near.ts:1195](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1195)*

**Parameters:**

| Name | Type |
| ------ | ------ |
| source | `Uint8Array` |

**Returns:** `string`

___
<a id="bytestostring"></a>

###  bytesToString

▸ **bytesToString**(bytes: *`Uint8Array`*): `string`

*Defined in [near.ts:1117](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1117)*

**Parameters:**

| Name | Type |
| ------ | ------ |
| bytes | `Uint8Array` |

**Returns:** `string`

___
<a id="hash"></a>

###  hash

▸ **hash**<`T`>(data: *`T`*): `Uint8Array`

*Defined in [near.ts:1145](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1145)*

Hash given data. Returns hash as 32-byte array.

**Type parameters:**

#### T 
**Parameters:**

| Name | Type | Description |
| ------ | ------ | ------ |
| data | `T` |  data can be passed as either Uint8Array or anything with .toString (hashed as UTF-8 string). |

**Returns:** `Uint8Array`

___
<a id="hash32"></a>

###  hash32

▸ **hash32**<`T`>(data: *`T`*): `u32`

*Defined in [near.ts:1160](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1160)*

Hash given data. Returns hash as 32-bit integer.

**Type parameters:**

#### T 
**Parameters:**

| Name | Type | Description |
| ------ | ------ | ------ |
| data | `T` |  data can be passed as either Uint8Array or anything with .toString (hashed as UTF-8 string). |

**Returns:** `u32`

___
<a id="log"></a>

###  log

▸ **log**(msg: *`string`*): `void`

*Defined in [near.ts:1186](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1186)*

**Parameters:**

| Name | Type |
| ------ | ------ |
| msg | `string` |

**Returns:** `void`

___
<a id="parsefrombytes"></a>

###  parseFromBytes

▸ **parseFromBytes**<`T`>(bytes: *`Uint8Array`*, defaultValue?: *`T`*): `T`

*Defined in [near.ts:1105](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1105)*

Parses the given bytes array to return a value of the given generic type. Supported types: bool, integer, string and data objects defined in model.ts.

**Type parameters:**

#### T 
**Parameters:**

| Name | Type | Default value | Description |
| ------ | ------ | ------ | ------ |
| bytes | `Uint8Array` | - |  Bytes to parse. |
| `Default value` defaultValue | `T` |  null |  The default value if the bytes are null |

**Returns:** `T`
A parsed value of type T.

___
<a id="parsefromstring"></a>

###  parseFromString

▸ **parseFromString**<`T`>(s: *`string`*, defaultValue?: *`T`*): `T`

*Defined in [near.ts:1077](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1077)*

Parses the given string to return a value of the given generic type. Supported types: bool, integer, string and data objects defined in model.ts.

**Type parameters:**

#### T 
**Parameters:**

| Name | Type | Default value | Description |
| ------ | ------ | ------ | ------ |
| s | `string` | - |  String to parse. |
| `Default value` defaultValue | `T` |  null |  The default value if the string is null |

**Returns:** `T`
A parsed value of type T.

___
<a id="random32"></a>

###  random32

▸ **random32**(): `u32`

*Defined in [near.ts:1182](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1182)*

Returns random 32-bit integer.

**Returns:** `u32`

___
<a id="randombuffer"></a>

###  randomBuffer

▸ **randomBuffer**(len: *`u32`*): `Uint8Array`

*Defined in [near.ts:1173](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1173)*

Returns random byte buffer of given length.

**Parameters:**

| Name | Type |
| ------ | ------ |
| len | `u32` |

**Returns:** `Uint8Array`

___
<a id="str"></a>

###  str

▸ **str**<`T`>(value: *`T`*): `string`

*Defined in [near.ts:1190](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1190)*

**Type parameters:**

#### T 
**Parameters:**

| Name | Type |
| ------ | ------ |
| value | `T` |

**Returns:** `string`

___
<a id="stringtobytes"></a>

###  stringToBytes

▸ **stringToBytes**(s: *`string`*): `Uint8Array`

*Defined in [near.ts:1121](https://github.com/nearprotocol/near-runtime-ts/blob/5196cd6/near.ts#L1121)*

**Parameters:**

| Name | Type |
| ------ | ------ |
| s | `string` |

**Returns:** `Uint8Array`

___

'''
'''--- as-pect.config.js ---
module.exports = {
  /**
   * A set of globs passed to the glob package that qualify typescript files for testing.
   */
  include: ["assembly/__tests__/**/*.spec.ts"],
  /**
   * A set of globs passed to the glob package that quality files to be added to each test.
   */
  add: ["assembly/__tests__/**/*.include.ts"],
  /**
   * All the compiler flags needed for this test suite. Make sure that a binary file is output.
   */
  flags: {
    "--validate": [],
    "--debug": [],
    /** This is required. Do not change this. The filename is ignored, but required by the compiler. */
    "--binaryFile": ["output.wasm"],
    /** To enable wat file output, use the following flag. The filename is ignored, but required by the compiler. */
    // "--textFile": ["output.wat"],
    /** To select an appropriate runtime, use the --runtime compiler flag. */
    "--runtime": ["stub"] // Acceptable values are: full, half, stub (arena), and none
  },
  /**
   * A set of regexp that will disclude source files from testing.
   */
  disclude: [/node_modules/],
  /**
   * Add your required AssemblyScript imports here.
   */
  imports: {},
  /**
   * All performance statistics reporting can be configured here.
   */
  performance: {
    /** Enable performance statistics gathering for every test. */
    enabled: false,
    /** Set the maximum number of samples to run for every test. */
    maxSamples: 10000,
    /** Set the maximum test run time in milliseconds for every test. */
    maxTestRunTime: 2000,
    /** Report the median time in the default reporter for every test. */
    reportMedian: true,
    /** Report the average time in milliseconds for every test. */
    reportAverage: true,
    /** Report the standard deviation for every test. */
    reportStandardDeviation: false,
    /** Report the maximum run time in milliseconds for every test. */
    reportMax: false,
    /** Report the minimum run time in milliseconds for every test. */
    reportMin: false,
  },
  /**
   * Add a custom reporter here if you want one. The following example is in typescript.
   *
   * @example
   * import { TestReporter, TestGroup, TestResult, TestContext } from "as-pect";
   *
   * export class CustomReporter extends TestReporter {
   *   // implement each abstract method here
   *   public abstract onStart(suite: TestContext): void;
   *   public abstract onGroupStart(group: TestGroup): void;
   *   public abstract onGroupFinish(group: TestGroup): void;
   *   public abstract onTestStart(group: TestGroup, result: TestResult): void;
   *   public abstract onTestFinish(group: TestGroup, result: TestResult): void;
   *   public abstract onFinish(suite: TestContext): void;
   * }
   */
  // reporter: new CustomReporter(),
  /**
   * Specify if the binary wasm file should be written to the file system.
   */
  outputBinary: false,
};

'''
'''--- assembly/__tests__/near.spec.ts ---
import { base64, near } from '../../near';

function testBase64(original: string, expectedEncoding: string): void {
    let bytes = near.stringToBytes(original);
    let encoded = base64.encode(bytes);
    expect<string>(encoded).toBe(expectedEncoding);
    let decoded = base64.decode(encoded);
    expect<string>(near.bytesToString(decoded)).toBe(original);
}

describe('utils', (): void => {
    it('bytesToString', (): void => {
        let byteArray = new Uint8Array(4);
        byteArray[0] = 131;
        byteArray[1] = 100;
        byteArray[2] = 111;
        byteArray[3] = 103;
        let bytes = byteArray.subarray(1);
        let s = near.bytesToString(bytes);
        expect<string>(s).toBe('dog');
    });
});

describe('base64 encoding/decoding', (): void => {
    it('hello world', (): void => {
        testBase64('hello, world', 'aGVsbG8sIHdvcmxk');
    });

    it('test pad 1', (): void => {
        testBase64('some string', 'c29tZSBzdHJpbmc=');
    });

    it('test pad 2', (): void => {
        testBase64('some long string', 'c29tZSBsb25nIHN0cmluZw==');
    });
});

'''
'''--- near.ts ---
import { u128 } from "./bignum/integer/u128";

const DEFAULT_SCRATCH_BUFFER_SIZE: usize = 1 << 16;

type DataTypeIndex = u32;

const DATA_TYPE_ORIGINATOR_ACCOUNT_ID: DataTypeIndex = 1;
const DATA_TYPE_CURRENT_ACCOUNT_ID: DataTypeIndex = 2;
const DATA_TYPE_STORAGE: DataTypeIndex = 3;
const DATA_TYPE_INPUT: DataTypeIndex = 4;
const DATA_TYPE_RESULT: DataTypeIndex = 5;
const DATA_TYPE_STORAGE_ITER: DataTypeIndex = 6;

/**
 * Represents contract storage.
 */
export class Storage {
  private _scratchBuf: Uint8Array = new Uint8Array(DEFAULT_SCRATCH_BUFFER_SIZE);

  /**
   * Internal method to fetch list of keys from the given iterator up the limit.
   */
  private _fetchIter(iterId: u32, limit: i32 = -1): string[] {
    let result: string[] = new Array<string>();
    while (limit-- != 0) {
      let key = this._internalReadString(DATA_TYPE_STORAGE_ITER, 0, iterId);
      if (key != null) {
        result.push(key);
      }
      if (!storage_iter_next(iterId)) {
        break;
      }
    }
    return result;
  }

  /**
   * Returns list of keys between the given start key and the end key. Both inclusive.
   * NOTE: Must be very careful to avoid exploding amount of compute with this method.
   * @param start The start key used as a lower bound in lexicographical order. Inclusive.
   * @param end The end key used as a upper bound in lexicographical order. Inclusive.
   * @param limit The maximum number of keys to return. Default is `-1`, means no limit.
   */
  keyRange(start: string, end: string, limit: i32 = -1): string[] {
    return this._fetchIter(
      storage_range(start.lengthUTF8 - 1, start.toUTF8(), end.lengthUTF8 - 1, end.toUTF8()),
      limit,
    );
  }

  /**
   * Returns list of keys starting with given prefix.
   * NOTE: Must be very careful to avoid exploding amount of compute with this method.
   * @param prefix The key prefix.
   * @param limit The maximum number of keys to return. Default is `-1`, means no limit.
   */
  keys(prefix: string, limit: i32 = -1): string[] {
    return this._fetchIter(
      storage_iter(prefix.lengthUTF8 - 1, prefix.toUTF8()),
      limit,
    );
  }

  /**
   * @deprecated Use setString or set<string>
   */
  setItem(key: string, value: string): void {
    this.setString(key, value);
  }

  /**
   * @deprecated Use getString or get<string>
   */
  getItem(key: string): string {
    return this.getString(key);
  }

  /**
   * Store string value under given key. Both key and value are encoded as UTF-8 strings.
   */
  setString(key: string, value: string): void {
    storage_write(key.lengthUTF8 - 1, key.toUTF8(), value.lengthUTF8 - 1, value.toUTF8());
  }

  /**
   * Get string value stored under given key. Both key and value are encoded as UTF-8 strings.
   */
  getString(key: string): string {
    return this._internalReadString(DATA_TYPE_STORAGE, key.lengthUTF8 - 1, key.toUTF8());
  }

  /**
   * Store byte array under given key. Key is encoded as UTF-8 strings.
   * Byte array stored as is.
   *
   * It's convenient to use this together with `domainObject.encode()`.
   */
  setBytes(key: string, value: Uint8Array): void {
    storage_write(key.lengthUTF8 - 1, key.toUTF8(), value.byteLength, value.dataStart);
  }

  /**
   * Get byte array stored under given key. Key is encoded as UTF-8 strings.
   * Byte array stored as is.
   *
   * It's convenient to use this together with `DomainObject.decode()`.
   */
  getBytes(key: string): Uint8Array {
    return this._internalReadBytes(DATA_TYPE_STORAGE, key.lengthUTF8 - 1, key.toUTF8());
  }

  /**
   * Returns true if the given key is present in the storage.
   */
  contains(key: string): bool {
    return storage_has_key(key.lengthUTF8 - 1, key.toUTF8());
  }

  @inline
  hasKey(key: string): bool {
    return this.contains(key);
  }

  delete(key: string): void {
    storage_remove(key.lengthUTF8 - 1, key.toUTF8());
  }

  /**
   * @deprecated Use #delete
   */
  @inline
  remove(key: string): void {
    this.delete(key);
  }

  /**
   * @deprecated Use #delete
   */
  @inline
  removeItem(key: string): void {
    this.delete(key);
  }

  /**
   * Store 64-bit unsigned int under given key. Key is encoded as UTF-8 strings.
   * Number is encoded as decimal string.
   */
  setU64(key: string, value: u64): void {
    this.setItem(key, value.toString());
  }

  /**
   * Get 64-bit unsigned int stored under given key. Key is encoded as UTF-8 strings.
   * Number is encoded as decimal string.
   *
   * @returns int value or 0 if value is not found
   */
  getU64(key: string): u64 {
    return U64.parseInt(this.getItem(key) || "0");
  }

  /**
   * Stores given generic value under the key. Key is encoded as UTF-8 strings.
   * Supported types: bool, integer, string and data objects defined in model.ts.
   *
   * @param key A key to use for storage.
   * @param value A value to store.
   */
  set<T>(key: string, value: T): void {
    if (isString<T>()) {
      this.setString(key, value);
    } else if (isInteger<T>()) {
      this.setString(key, value.toString());
    } else {
      this.setBytes(key, value.encode());
    }
  }

  /**
   * Gets given generic value stored under the key. Key is encoded as UTF-8 strings.
   * Supported types: bool, integer, string and data objects defined in model.ts.
   *
   * @param key A key to read from storage.
   * @param defaultValue The default value if the key is not available
   * @returns A value of type T stored under the given key.
   */
  get<T>(key: string, defaultValue: T = null): T {
    if (isString<T>() || isInteger<T>()) {
      return near.parseFromString<T>(this.getString(key), defaultValue);
    } else {
      return near.parseFromBytes<T>(this.getBytes(key), defaultValue);
    }
  }

  /**
   * @hidden
   * Reads given params into the internal scratch buffer and returns length.
   */
  private _internalBufferRead(dataType: DataTypeIndex, keyLen: usize, key: usize): usize {
    for (let i = 0; i < 2; ++i) {
      let len = data_read(
        dataType,
        keyLen,
        key,
        this._scratchBuf.byteLength,
        this._scratchBuf.dataStart,
      );
      if (len <= <usize>(this._scratchBuf.byteLength)) {
        return len;
      }
      this._scratchBuf = new Uint8Array(len);
    }
    assert(false, "Internal scratch buffer was resized more than once");
    return 0;
  }

  /**
   * @hidden
   * Reads a string for the given params.
   */
  _internalReadString(dataType: DataTypeIndex, keyLen: usize, key: usize): string {
    let len = this._internalBufferRead(dataType, keyLen, key);
    if (len == 0) {
      return null;
    }
    return String.fromUTF8(this._scratchBuf.dataStart, len);
  }

  /**
   * @hidden
   * Reads bytes for the given params.
   */
  _internalReadBytes(dataType: DataTypeIndex, keyLen: usize, key: usize): Uint8Array {
    let len = this._internalBufferRead(dataType, keyLen, key);
    if (len == 0) {
      return null;
    }
    let res = new Uint8Array(len);
    memory.copy(res.dataStart, this._scratchBuf.dataStart, len);
    return res;
  }
}

/**
 * An instance of a Storage class that is used for working with contract storage on the blockchain.
 */
export let storage: Storage = new Storage();

/**
 * A namespace with classes and functions for persistent collections on the blockchain.
 */
export namespace collections {
  const _KEY_LENGTH_SUFFIX = ":len";
  const _KEY_FRONT_INDEX_SUFFIX = ":front";
  const _KEY_BACK_INDEX_SUFFIX = ":back";
  const _KEY_ELEMENT_SUFFIX = "::";
  const _KEY_RATING_SUFFIX = ":r";
  const _RATING_OFFSET: u64 = 2147483648;

  /**
   * A vector class that implements a persistent array.
   */
  export class Vector<T> {
    private _elementPrefix: string;
    private _lengthKey: string;
    private _length: i32;

    /**
     * Creates or restores a persistent vector with a given storage prefix.
     * Always use a unique storage prefix for different collections.
     * @param prefix A prefix to use for every key of this vector.
     */
    constructor(prefix: string) {
      this._elementPrefix = prefix + _KEY_ELEMENT_SUFFIX;
      this._lengthKey = prefix + _KEY_LENGTH_SUFFIX;
      this._length = -1;
    }

    /**
     * @returns An interal key for a given index.
     */
    @inline
    private _key(index: i32): string {
      return this._elementPrefix + index.toString();
    }

    /**
     * Removes the content of the element from storage without changing length of the vector.
     * @param index The index of the element to remove.
     */
    delete(index: i32): void {
      assert(this.containsIndex(index), "Index out of range");
      storage.delete(this._key(index));
    }

    /**
     * @param index The index to check.
     * @returns True if the given index is within the range of the vector indices.
     */
    containsIndex(index: i32): bool {
      return index >= 0 && index < this.length;
    }

    /**
     * @returns True if the vector is empty.
     */
    get isEmpty(): bool {
      return this.length == 0;
    }

    /**
     * @returns The length of the vector.
     */
    get length(): i32 {
      if (this._length < 0) {
        this._length = storage.get<i32>(this._lengthKey, 0);
      }
      return this._length;
    }

    /**
     * Internally sets the length of the vector
     */
    private set length(value: i32) {
      this._length = value;
      storage.set<i32>(this._lengthKey, value);
    }

    /**
     * Returns the element of the vector for a given index. Asserts the given index is within the
     * range of the vector.
     * @param index The index of the element to return.
     * @returns The element at the given index.
     */
    @operator("[]")
    private __get(index: i32): T {
      assert(this.containsIndex(index), "Index out of range");
      return this.__unchecked_get(index);
    }

    /**
     * Returns the element of the vector for a given index without checks.
     * @param index The index of the element to return.
     * @returns The element at the given index.
     */
    @operator("{}")
    private __unchecked_get(index: i32): T {
      return storage.get<T>(this._key(index));
    }

    /**
     * Sets the value of an element at the given index. Asserts the given index is within the
     * range of the vector.
     * @param index The index of the element.
     * @param value The new value.
     */
    @operator("[]=")
    private __set(index: i32, value: T): void {
      assert(this.containsIndex(index), "Index out of range");
      this.__unchecked_set(index, value);
    }

    /**
     * Sets the value of an element at the given index without checks.
     * @param index The index of the element.
     * @param value The new value.
     */
    @operator("{}=")
    private __unchecked_set(index: i32, value: T): void {
      storage.set<T>(this._key(index), value);
    }

    /**
     * Adds a new element to the end of the vector. Increases the length of the vector.
     * @param element A new element to add.
     * @returns The index of a newly added element
     */
    push(element: T): i32 {
      let index = this.length;
      this.length = index + 1;
      this.__unchecked_set(index, element);
      return index;
    }

    /**
     * Adds a new element to the end of the vector. Increases the length of the vector.
     * @param element A new element to add.
     * @returns The index of a newly added element
     */
    @inline
    pushBack(element: T): i32 {
      return this.push(element);
    }

    /**
     * Removes the last element from the vector and returns it. Asserts that the vector is not empty.
     * Decreases the length of the vector.
     * @returns The removed last element of the vector.
     */
    pop(): T {
      assert(this.length > 0, "Vector is empty");
      let index = this.length - 1;
      this.length = index;
      let result = this.__unchecked_get(index);
      storage.delete(this._key(index));
      return result;
    }

    /**
     * Removes the last element from the vector and returns it. Asserts that the vector is not empty.
     * Decreases the length of the vector.
     * @returns The removed last element of the vector.
     */
    @inline
    popBack(): T {
      return this.pop();
    }

    /**
     * @returns The last element of the vector. Asserts that the vector is not empty.
     */
    get back(): T {
      return this.__get(this.length - 1);
    }

    /**
     * @returns The last element of the vector. Asserts that the vector is not empty.
     */
    @inline
    get last(): T {
      return this.back;
    }

    /**
     * @returns The first element of the vector. Asserts that the vector is not empty.
     */
    get front(): T {
      return this.__get(0);
    }

    /**
     * @returns The first element of the vector. Asserts that the vector is not empty.
     */
    @inline
    get first(): T {
      return this.front;
    }
  }

  /**
   * A deque class that implements a persistent bidirectional queue.
   */
  export class Deque<T> {
    private _elementPrefix: string;
    private _frontIndexKey: string;
    private _backIndexKey: string;
    private _frontIndex: i32;
    private _backIndex: i32;

    /**
     * Creates or restores a persistent deque with a given storage prefix.
     * Always use a unique storage prefix for different collections.
     * @param prefix A prefix to use for every key of this deque.
     */
    constructor(prefix: string) {
      this._elementPrefix = prefix + _KEY_ELEMENT_SUFFIX;
      this._frontIndexKey = prefix + _KEY_FRONT_INDEX_SUFFIX;
      this._backIndexKey = prefix + _KEY_BACK_INDEX_SUFFIX;
      this._frontIndex = i32.MIN_VALUE;
      this._backIndex = i32.MAX_VALUE;
    }

    /**
     * @returns An interal key for a given index.
     */
    @inline
    private _key(index: i32): string {
      return this._elementPrefix + index.toString();
    }

    /**
     * @returns The index of the first/front element of the deque (inclusive).
     */
    private get frontIndex(): i32 {
      if (this._frontIndex == i32.MIN_VALUE) {
        this._frontIndex = storage.get<i32>(this._frontIndexKey, 0);
      }
      return this._frontIndex;
    }

    /**
     * Internal. Sets the index of the first/front element.
     */
    private set frontIndex(value: i32) {
      this._frontIndex = value;
      storage.set<i32>(this._frontIndexKey, value);
    }

    /**
     * @returns The index of the last/back element of the deque (inclusive).
     */
    private get backIndex(): i32 {
      if (this._backIndex == i32.MAX_VALUE) {
        this._backIndex = storage.get<i32>(this._backIndexKey, -1);
      }
      return this._backIndex;
    }

    /**
     * Internal. Sets the index of the last/back element.
     */
    private set backIndex(value: i32) {
      this._backIndex = value;
      storage.set<i32>(this._backIndexKey, value);
    }

    /**
     * @param index The index to check.
     * @returns True if the given index is within the range of the deque indices.
     */
    containsIndex(index: i32): bool {
      return index >= 0 && index < this.length;
    }

    /**
     * Removes the content of the element from storage without changing length of the deque.
     * @param index The index of the element to remove.
     */
    delete(index: i32): void {
      assert(this.containsIndex(index), "Index out of range");
      storage.delete(this._key(index + this.frontIndex));
    }

    /**
     * @returns The length of the deque.
     */
    get length(): i32 {
      return this.backIndex - this.frontIndex + 1;
    }

    /**
     * @returns True if the deque is empty.
     */
    get isEmpty(): bool {
      return this.length == 0;
    }

    /**
     * Returns the element of the deque for a given index. Asserts the given index is within the
     * range of the vector.
     * @param index The index of the element to return.
     * @returns The element at the given index.
     */
    @operator("[]")
    private __get(index: i32): T {
      assert(this.containsIndex(index), "Index out of range");
      return this.__unchecked_get(index);
    }

    /**
     * Returns the element of the deque for a given index without checks.
     * @param index The index of the element to return.
     * @returns The element at the given index.
     */
    @operator("{}")
    private __unchecked_get(index: i32): T {
      return storage.get<T>(this._key(index + this.frontIndex));
    }

    /**
     * Sets the new value of an element at the given index. Asserts the given index is within the
     * range of the deque.
     * @param index The index of the element.
     * @param value The new value.
     */
    @operator("[]=")
    private __set(index: i32, value: T): void {
      assert(this.containsIndex(index), "Index out of range");
      this.__unchecked_set(index, value);
    }

    /**
     * Sets the new value of an element at the given index without checks.
     * @param index The index of the element.
     * @param value The new value.
     */
    @operator("{}=")
    private __unchecked_set(index: i32, value: T): void {
      storage.set<T>(this._key(index + this.frontIndex), value);
    }

    /**
     * Adds a new element in front of the deque. Increases the length of the deque.
     * @param element A new element to add.
     * @returns The index of a newly added element
     */
    pushFront(element: T): i32 {
      this.frontIndex -= 1;
      this.__unchecked_set(0, element);
      return 0;
    }

    /**
     * Removes the first/front element from the deque and returns it.
     * Asserts that the deque is not empty. Decreases the length of the deque.
     * @returns The removed first element of the queue.
     */
    popFront(): T {
      assert(this.length > 0, "Deque is empty");
      let result = this.__unchecked_get(0);
      storage.delete(this._key(this.frontIndex));
      this.frontIndex += 1;
      return result;
    }

    /**
     * @returns The first/front element of the deque.
     */
    get front(): T {
      return this.__get(0);
    }

    /**
     * @returns The first/front element of the deque.
     */
    @inline
    get first(): T {
      return this.front;
    }

    /**
     * Adds a new element to the end of the deque. Increases the length of the deque.
     * @param element A new element to add.
     * @returns The index of a newly added element
     */
    pushBack(element: T): i32 {
      let index = this.length;
      this.backIndex += 1;
      this.__unchecked_set(index, element);
      return index;
    }

    /**
     * Removes the last/back element from the deque and returns it.
     * Asserts that the deque is not empty. Decreases the length of the deque.
     * @returns The removed first element of the queue.
     */
    popBack(): T {
      let index = this.length - 1;
      assert(index >= 0, "Deque is empty");
      let result = this.__unchecked_get(index);
      storage.delete(this._key(this.backIndex));
      this.backIndex -= 1;
      return result;
    }

    /**
     * @returns The last/back element of the deque.
     */
    get back(): T {
      return this.__get(this.length - 1);
    }

    /**
     * @returns The last/back element of the deque.
     */
    @inline
    get last(): T {
      return this.back;
    }
  }

  /**
   * A map class that implements a persistent unordered map.
   * NOTE: The Map doesn't store keys, so if you need to retrive them, include keys in the values.
   */
  export class Map<K, V> {
    private _elementPrefix: string;

    /**
     * Creates or restores a persistent map with a given storage prefix.
     * Always use a unique storage prefix for different collections.
     * @param prefix A prefix to use for every key of this map.
     */
    constructor(prefix: string) {
      this._elementPrefix = prefix + _KEY_ELEMENT_SUFFIX;
    }

    /**
     * @returns An interal string key for a given key of type K.
     */
    private _key(key: K): string {
      return this._elementPrefix + key.toString();
    }

    /**
     * Returns values of the map between the given start key and the end key.
     * @param start Starting from which key to include values. Default is `null`, means from the beginning.
     * @param end Up to which key include values (inclusive). Default is `null`, means to the end.
     * @param limit The maximum number of values to return. Default is `-1`, means no limit.
     * @param startInclusive Whether the start key is inclusive. Default is `true`, means include start key.
     *     It's useful to set it to false for pagination.
     */
    values(start: K = null, end: K = null, limit: i32 = -1, startInclusive: bool = true): V[] {
      let startKey = (start != null) ? this._key(start) : this._elementPrefix;
      if (!startInclusive) {
        startKey += String.fromCharCode(0);
      }
      let endKey = (end != null) ? this._key(end) : (this._elementPrefix + String.fromCharCode(255));
      let keys = storage.keyRange(startKey, endKey, limit);
      return keys.map<V>((key: string) => storage.get<V>(key));
    }

    /**
     * @param key Key to check.
     * @returns True if the given key present in the map.
     */
    contains(key: K): bool {
      return storage.contains(this._key(key));
    }

    /**
     * Removes value and the key from the map.
     * @param key Key to remove.
     */
    delete(key: K): void {
      storage.delete(this._key(key));
    }

    /**
     * @param key Key of the element.
     * @param defaultValue The default value if the key is not present.
     * @returns Value for the given key or the default value.
     */
    get(key: K, defaultValue: V = null): V {
      return storage.get<V>(this._key(key), defaultValue);
    }

    /**
     * Sets the new value for the given key.
     * @param key Key of the element.
     * @param value The new value of the element.
     */
    set(key: K, value: V): void {
      storage.set<V>(this._key(key), value);
    }
  }

  /**
   * A TopN class that can return first N keys of a type K sorted by rating. Rating is stored as i32.
   * Default sort order is descending (highest rated keys), but can be changed to ascending (lowest rated keys).
   */
  export class TopN<K> {
    // Internally, this prefix is used for storing padded ratings
    private _orderPrefix: string;
    // Whether the order is descending
    private _descending: bool;
    // Number of unique keys.
    private _length: i32;
    // The key to store length.
    private _lengthKey: string;

    // A map to store rating by key
    private _ratings: Map<K, i32>;

    /**
     * Creates or restores a persistent top N collection with a given storage prefix.
     * Always use a unique storage prefix for different collections.
     * @param prefix A prefix to use for every key of this collection.
     * @param descending Sorting order of keys for rating. Default is descending (the highest rated keys).
     */
    constructor(prefix: string, descending: bool = true) {
      this._ratings = new Map<K, i32>(prefix + _KEY_RATING_SUFFIX);
      this._orderPrefix = prefix + _KEY_ELEMENT_SUFFIX;
      this._descending = descending;
      this._lengthKey = prefix + _KEY_LENGTH_SUFFIX;
      this._length = -1;
    }

    /**
     * @returns A suffix for an internal key for a given external key of type K.
     */
    private _keySuffix(key: K): string {
      return _KEY_ELEMENT_SUFFIX + key.toString();
    }

    /**
     * @returns Converted integer rating into a padded string.
     */
    private _ratingKey(rating: i32): string {
      let r: u32 = <u32>((<i64>rating) + _RATING_OFFSET);
      if (this._descending) {
        r = u32.MAX_VALUE - r;
      }
      return r.toString().padStart(10, "0");
    }

    /**
     * Creates an internal key from a given rating and a given external key.
     */
    private _orderKey(rating: i32, key: K): string {
      return this._orderPrefix + this._ratingKey(rating) + this._keySuffix(key);
    }

    /**
     * @returns True if the TopN collection is empty.
     */
    get isEmpty(): bool {
      return this.length == 0;
    }

    /**
     * @returns The number of unique elements in the TopN collection.
     */
    get length(): i32 {
      if (this._length < 0) {
        this._length = storage.get<i32>(this._lengthKey, 0);
      }
      return this._length;
    }

    /**
     * Internally sets the length of the collection.
     */
    private set length(value: i32) {
      this._length = value;
      storage.set<i32>(this._lengthKey, value);
    }

    /**
     * @param key Key to check.
     * @returns True if the given key is present.
     */
    contains(key: K): bool {
      return this._ratings.contains(key);
    }

    /**
     * Removes rating and the key from the collection.
     * @param key Key to remove.
     */
    delete(key: K): void {
      if (this.contains(key)) {
        let rating = this._ratings.get(key);
        this._ratings.delete(key);
        storage.delete(this._orderKey(rating, key));
        this.length -= 1;
      }
    }

    /**
     * @param keys The array of keys to lookup rating.
     * @returns an array of key to rating pairs for the given keys.
     */
    keysToRatings(keys: K[]): near.MapEntry<K, i32>[] {
      let result = Array.create<near.MapEntry<K, i32>>(keys.length);
      for (let index = 0; index < keys.length; ++index) {
        let key = keys[index];
        result[index] = new near.MapEntry<K, i32>(key, this._ratings.get(key));
      }
      return result;
    }

    /**
     * @param limit The maximum limit of keys to return.
     * @returns The array of top rated keys.
     */
    getTop(limit: i32): K[] {
      let orderKeys = storage.keys(this._orderPrefix, limit);
      return orderKeys.map<K>((orderKey: string) => storage.get<K>(orderKey));
    }

    /**
     * Returns a top list starting from the given key (exclusive). It's useful for pagination.
     * @param limit The maximum limit of keys to return.
     * @param fromKey The key from which return top list (exclisive).
     * @returns The array of top rated keys starting from the given key.
     */
    getTopFromKey(limit: i32, fromKey: K): K[] {
      let rating = this.getRating(fromKey, 0);
      let orderKeys = storage.keyRange(
        this._orderKey(rating, fromKey) + String.fromCharCode(0),
        this._orderPrefix + String.fromCharCode(255),
        limit);
      return orderKeys.map<K>((orderKey: string) => storage.get<K>(orderKey));
    }

    /**
     * @param limit The maximum limit of keys to return.
     * @returns The array of top rated keys with their corresponding rating.
     */
    getTopWithRating(limit: i32): near.MapEntry<K, i32>[] {
      return this.keysToRatings(this.getTop(limit));
    }

    /**
     * Returns a top list with rating starting from the given key (exclusive).
     * It's useful for pagination.
     * @param limit The maximum limit of keys to return.
     * @param fromKey The key from which return top list (exclisive).
     * @returns The array of top rated keys with their rating starting from the given key.
     */
    getTopWithRatingFromKey(limit: i32, fromKey: K): near.MapEntry<K, i32>[] {
      return this.keysToRatings(this.getTopFromKey(limit, fromKey));
    }

    /**
     * @param key Key of the element.
     * @param defaultRating The default rating to return if the key is not present.
     * @returns Value for the given key or the defaultRating.
     */
    getRating(key: K, defaultRating: i32 = 0): i32 {
      return this._ratings.get(key, defaultRating);
    }

    /**
     * Sets the new rating for the given key.
     * @param key The key to update.
     * @param rating The new rating of the key.
     */
    setRating(key: K, rating: i32): void {
      if (this.contains(key)) {
        let oldRating = this.getRating(key);
        storage.delete(this._orderKey(oldRating, key));
      } else {
        this.length += 1;
      }
      this._ratings.set(key, rating);
      storage.set<K>(this._orderKey(rating, key), key);
    }

    /**
     * Increments rating of the given key by the given increment (1 by default).
     * @param key The key to update.
     * @param increment The increment value for the rating (1 by default).
     */
    incrementRating(key: K, increment: i32 = 1): void {
      let oldRating = 0;
      if (this.contains(key)) {
        oldRating = this.getRating(key);
        storage.delete(this._orderKey(oldRating, key));
      } else {
        this.length += 1;
      }
      let rating = oldRating + increment;
      this._ratings.set(key, rating);
      storage.set<K>(this._orderKey(rating, key), key);
    }
  }

  /**
   * Creates or restores a persistent vector with a given storage prefix.
   * Always use a unique storage prefix for different collections.
   * @param prefix A prefix to use for every key of this vector.
   */
  export function vector<T>(prefix: string): Vector<T> {
    return new Vector<T>(prefix);
  }

  /**
   * Creates or restores a persistent deque with a given storage prefix.
   * Always use a unique storage prefix for different collections.
   * @param prefix A prefix to use for every key of this deque.
   */
  export function deque<T>(prefix: string): Deque<T> {
    return new Deque<T>(prefix);
  }

  /**
   * Creates or restores a persistent map with a given storage prefix.
   * Always use a unique storage prefix for different collections.
   * @param prefix A prefix to use for every key of this map.
   */
  export function map<K, V>(prefix: string): Map<K, V> {
    return new Map<K, V>(prefix);
  }

  /**
   * Creates or restores a persistent TopN with a given storage prefix.
   * Always use a unique storage prefix for different collections.
   * @param prefix A prefix to use for every key of this collection.
   * @param descending Sorting order of keys for rating. Default is descending (the highest rated keys).
   */
  export function topN<K>(prefix: string, descending: bool = true): TopN<K> {
    return new TopN<K>(prefix, descending);
  }
}

/**
 * Provides context for contract execution, including information about transaction sender, etc.
 */
class Context {
  /**
   * Account ID of transaction sender.
   */
  get sender(): string {
    return storage._internalReadString(DATA_TYPE_ORIGINATOR_ACCOUNT_ID, 0, 0);
  }

  /**
   * Account ID of contract.
   */
  get contractName(): string {
    return storage._internalReadString(DATA_TYPE_CURRENT_ACCOUNT_ID, 0, 0);
  }

  /**
   * Current block index.
   */
  get blockIndex(): u64 {
    return block_index();
  }

  /**
   * The amount of tokens received with this execution call.
   */
  get receivedAmount(): u128 {
    let buffer = new Uint8Array(16);
    received_amount(buffer.dataStart);
    return u128.fromBytes(<Uint8Array>buffer);
  }

  /**
   * The amount of tokens that are locked in the account. Storage usage fee is deducted from this balance.
   */
  get frozenBalance(): u128 {
    let buffer = new Uint8Array(16);
    frozen_balance(buffer.dataStart);
    return u128.fromBytes(<Uint8Array>buffer);
  }

  /**
   * The amount of tokens that can be used for running wasm, creating transactions, and sending to other contracts
   * through cross-contract calls.
   */
  get liquidBalance(): u128 {
    let buffer = new Uint8Array(16);
    liquid_balance(buffer.dataStart);
    return u128.fromBytes(<Uint8Array>buffer);
  }

  /**
   * The current storage usage in bytes.
   */
  get storageUsage(): u64 {
    return storage_usage();
  }

  /**
   * Moves assets from liquid balance to frozen balance.
   * If there is enough liquid balance will deposit the maximum amount. Otherwise will deposit as much as possible.
   * Will fail if there is less than minimum amount on the liquid balance. Returns the deposited amount.
   */
  deposit(minAmount: u128, maxAmount: u128): u128 {
    let minAmountBuffer = minAmount.toUint8Array();
    let maxAmountBuffer = maxAmount.toUint8Array();
    let balanceBuffer = new Uint8Array(16);
    deposit(minAmountBuffer.dataStart, maxAmountBuffer.dataStart, balanceBuffer.dataStart);
    return u128.fromBytes(<Uint8Array>balanceBuffer);
  }

   /**
   * Moves assets from frozen balance to liquid balance.
   * If there is enough frozen balance will withdraw the maximum amount. Otherwise will withdraw as much as possible.
   * Will fail if there is less than minimum amount on the frozen balance. Returns the withdrawn amount.
   */
  withdraw(minAmount: u128, maxAmount: u128): u128 {
     let minAmountBuffer = minAmount.toUint8Array();
     let maxAmountBuffer = maxAmount.toUint8Array();
     let balanceBuffer = new Uint8Array(16);
     withdraw(minAmountBuffer.dataStart, maxAmountBuffer.dataStart, balanceBuffer.dataStart);
     return u128.fromBytes(<Uint8Array>balanceBuffer);
  }
}

export let context: Context = new Context();

export namespace near {

  /**
   * Parses the given string to return a value of the given generic type.
   * Supported types: bool, integer, string and data objects defined in model.ts.
   *
   * @param s String to parse.
   * @param defaultValue The default value if the string is null
   * @returns A parsed value of type T.
   */
  export function parseFromString<T>(s: string, defaultValue: T = null): T {
    if (s == null) {
      return defaultValue;
    }
    if (isString<T>()) {
      return s;
    } else if (isInteger<T>()) {
      if (defaultValue instanceof bool) {
        return <T>(s == "true");
      } else if (isSigned<T>()) {
        return <T>I64.parseInt(s);
      } else {
        return <T>U64.parseInt(s);
      }
    } else {
      let v = instantiate<T>();
      return v.decode(stringToBytes(s));
    }
  }

  /**
   * Parses the given bytes array to return a value of the given generic type.
   * Supported types: bool, integer, string and data objects defined in model.ts.
   *
   * @param bytes Bytes to parse.
   * @param defaultValue The default value if the bytes are null
   * @returns A parsed value of type T.
   */
  export function parseFromBytes<T>(bytes: Uint8Array, defaultValue: T = null): T {
    if (bytes == null) {
      return defaultValue;
    }
    if (isString<T>() || isInteger<T>()) {
      return parseFromString<T>(bytesToString(bytes), defaultValue);
    } else {
      let v = instantiate<T>();
      return v.decode(bytes);
    }
  }

  export function bytesToString(bytes: Uint8Array): string {
    return String.fromUTF8(bytes.dataStart, bytes.byteLength)
  }

  export function stringToBytes(s: string): Uint8Array {
    let len = s.lengthUTF8 - 1;
    let bytes = new Uint8Array(len);
    memory.copy(bytes.dataStart, s.toUTF8(), len);
    return bytes;
  }

  /**
   * Helper class to store key->value pairs.
   */
  export class MapEntry<K, V> {
    key: K;
    value: V;

    constructor(key: K, value: V) {
      this.key = key;
      this.value = value;
    }
  }

  /**
   * Hash given data. Returns hash as 32-byte array.
   * @param data data can be passed as either Uint8Array or anything with .toString (hashed as UTF-8 string).
   */
  export function hash<T>(data: T): Uint8Array {
    let result = new Uint8Array(32);
    if (data instanceof Uint8Array) {
      _near_hash(data.byteLength, data.dataStart, result.dataStart);
    } else {
      let str = data.toString();
      _near_hash(str.lengthUTF8 - 1, str.toUTF8(), result.dataStart);
    }
    return result;
  }

  /**
   * Hash given data. Returns hash as 32-bit integer.
   * @param data data can be passed as either Uint8Array or anything with .toString (hashed as UTF-8 string).
   */
  export function hash32<T>(data: T): u32 {
    let dataToHash : Uint8Array;
    if (data instanceof Uint8Array) {
      return _near_hash32(data.byteLength, data.dataStart);
    } else {
      let str = data.toString();
      return _near_hash32(str.lengthUTF8 - 1, str.toUTF8());
    }
  }

  /**
   * Returns random byte buffer of given length.
   */
  export function randomBuffer(len: u32): Uint8Array {
    let result = new Uint8Array(len);
    _near_random_buf(len, result.dataStart);
    return result;
  }

  /**
   * Returns random 32-bit integer.
   */
  export function random32(): u32 {
    return random32();
  }

  export function log(msg: string): void {
    _near_log(<usize>msg);
  }

  export function str<T>(value: T): string {
    let arr: Array<T> = [value];
    return arr.toString();
  }

  export function base58(source: Uint8Array): string {
    // Code converted from:
    // https://github.com/cryptocoinjs/base-x/blob/master/index.js
    const iFACTOR = 2; // TODO: Calculate precise value to avoid overallocating
    const ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';
    let BASE = ALPHABET.length;
    let LEADER = ALPHABET.charAt(0);

    // Skip & count leading zeroes.
    let zeroes = 0
    let length = 0
    let pbegin = 0
    let pend = source.length

    while (pbegin !== pend && source[pbegin] === 0) {
      pbegin++
      zeroes++
    }

    // Allocate enough space in big-endian base58 representation.
    let size = ((pend - pbegin) * iFACTOR + 1) >>> 0
    let b58 = new Uint8Array(size)

    // Process the bytes.
    while (pbegin !== pend) {
      let carry = i32(source[pbegin])

      // Apply "b58 = b58 * 256 + ch".
      let i = 0
      for (let it = size - 1; (carry !== 0 || i < length) && (it !== -1); it--, i++) {
        carry += (256 * b58[it]) >>> 0
        b58[it] = (carry % BASE) >>> 0
        carry = (carry / BASE) >>> 0
      }

      assert(carry == 0, 'Non-zero carry');
      length = i
      pbegin++
    }

    // Skip leading zeroes in base58 result.
    let it = size - length
    while (it !== size && b58[it] === 0) {
      it++
    }

    // Translate the result into a string.
    let str = LEADER.repeat(zeroes)
    for (; it < size; ++it) str += ALPHABET.charAt(b58[it])

    return str
  }
}

/**
 * Class to make asynchronous calls to other contracts and receive callbacks.
 * Here is an example on how to create a new async call with the callback.
 * ```
 * export function callMetaNear(): void {
 *   let itemArgs: AddItemArgs = {
 *     accountId: "alice.near",
 *     itemId: "Sword +9000",s
 *   };
 *   let promise = ContractPromise.create(
 *     "metanear",
 *     "addItem",
 *     itemArgs.encode(),
 *     0,
 *   );
 *   // Setting up args for the callback
 *   let requestArgs: OnItemAddedArgs = {
 *     "itemAddedRequestId": "UNIQUE_REQUEST_ID",
 *   };
 *   let callbackPromise = promise.then(
 *      "_onItemAdded",
 *      requestArgs.encode(),
 *      2,  // Attaching 2 additional requests, in case we need to do another call
 *   );
 *   callbackPromise.returnAsResult();
 * }
 * ```
 * See docs on used methods for more details.
 */
export class ContractPromise {
  // Session-based unique promise ID. Don't preserve it longer than this execution.
  id: i32;

  /**
   * Creates a new async call promise. Returns an instance of `ContractPromise`.
   * The call would be scheduled if the this current execution of the contract succeeds
   * without errors or failed asserts.
   * @param contractName Account ID of the remote contract to call. E.g. `metanear`.
   * @param methodName Method name on the remote contract to call. E.g. `addItem`.
   * @param args Serialized arguments to pass into the method. To get them create a new model
   *     specific for the method you calling, e.g. `AddItemArgs`. Then create an instance of it
   *     and populate arguments. After this, serialize it into bytes. E.g.
   *     ```
   *     let itemArgs: AddItemArgs = {
   *       accountId: "alice.near",
   *       itemId: "Sword +9000",
   *     };
   *     // Serialize args
   *     let args = itemArgs.encode();
   *     ```
   * @param amount The amount of tokens from your contract to be sent to the remote contract with this call.
   */
  static create(
      contractName: string,
      methodName: string,
      args: Uint8Array,
      amount: u128 = 0
  ): ContractPromise {
    return {
      id: promise_create(
        contractName.lengthUTF8 - 1, contractName.toUTF8(),
        methodName.lengthUTF8 - 1, methodName.toUTF8(),
        args.byteLength, args.dataStart, amount.toUint8Array().dataStart)
    };
  }

  /**
   * Creating a callback for the AsyncCall Promise created with `create` method.
   * @param methodName Method name on your contract to be called to receive the callback.
   *     NOTE: Your callback method name can start with `_`, which would prevent other
   *     contracts from calling it directly. Only callbacks can call methods with `_` prefix.
   * @param args Serialized arguments on your callback method, see `create` for details.
   * @param amount The amount of tokens from the called contract to be sent to the current contract with this call.
   */
  then(
      methodName: string,
      args: Uint8Array,
      amount: u128
  ): ContractPromise {
    return {
      id: promise_then(
        this.id,
        methodName.lengthUTF8 - 1, methodName.toUTF8(),
        args.byteLength, args.dataStart,
        amount.toUint8Array().dataStart)
    };
  }

  /**
   * Returns the promise as a result of your function. Don't return any other results from the function.
   * Your current function should be `void` and shouldn't return anything else. E.g.
   * ```
   * export function callMetaNear(): void {
   *   let itemArgs: AddItemArgs = {
   *     accountId: "alice.near",
   *     itemId: "Sword +9000",
   *   };
   *   let promise = ContractPromise.create(
   *     "metanear",
   *     "addItem",
   *     itemArgs.encode(),
   *     0,
   *     0,
   *   );
   *   promise.returnAsResult();
   * }
   * ```
   *
   * Now when you call `callMetaNear` method, it creates new promise to `metanear` contract.
   * And saying that the result of the current execution depends on the result `addItem`.
   * Even though this contract is not going to be called with a callback, the contract which
   * calling `callMetaNear` would receive the result from `addItem`. This call essentially acts
   * as a proxy.
   *
   * You can also attach a callback on top of the promise before returning it, e.g.
   *
   * ```
   *   ...
   *   let promise = ContractPromise.create(
   *      ...
   *   );
   *   // Setting up args for the callback
   *   let requestArgs: OnItemAddedArgs = {
   *     "itemAddedRequestId": "UNIQUE_REQUEST_ID",
   *   };
   *   let callbackPromise = promise.then(
   *      "_onItemAdded",
   *      requestArgs.encode(),
   *      2,  // Attaching 2 additional requests, in case we need to do another call
   *   );
   *   callbackPromise.returnAsResult();
   * }
   * ```
   */
  returnAsResult(): void {
    return_promise(this.id);
  }

  /**
   * Joins multiple async call promises into one, to aggregate results before the callback.
   * NOTE: Given promises can only be new async calls and can't be callbacks.
   * Joined promise can't be returned as a result
   * @param promises List of async call promises to join.
   */
  static all(promises: ContractPromise[]): ContractPromise {
    assert(promises.length > 0);
    let id = promises[0].id;
    for (let i = 1; i < promises.length; i++) {
      id = promise_and(id, promises[i].id);
    }
    return { id };
  }

  /**
   * Method to receive async (one or multiple) results from the remote contract in the callback.
   * Example of using it.
   * ```
   * // This function is prefixed with `_`, so other contracts or people can't call it directly.
   * export function _onItemAdded(itemAddedRequestId: string): bool {
   *   // Get all results
   *   let results = ContractPromise.getResults();
   *   let addItemResult = results[0];
   *   // Verifying the remote contract call succeeded.
   *   if (addItemResult.success) {
   *     // Decoding data from the bytes buffer into the local object.
   *     let data = AddItemResult.decode(addItemResult.buffer);
   *     if (data.itemPower > 9000) {
   *       return true;
   *     }
   *   }
   *   return false;
   * }
   * ```
   * @returns An array of results based on the number of promises the callback was created on.
   *     If the callback using `then` was scheduled only on one result, then one result will be returned.
   */
  static getResults() : ContractPromiseResult[] {
    let count = <i32>result_count();
    let results = Array.create<ContractPromiseResult>(count);
    for (let i = 0; i < count; i++) {
      let isOk = result_is_ok(i);
      if (!isOk) {
        results[i] = { success: false }
        continue;
      }
      let buffer = storage._internalReadBytes(DATA_TYPE_RESULT, 0, i);
      results[i] = { success: isOk, buffer: buffer };
    }
    return results;
  }
}

/**
 * Class to store results of the async calls on the remote contracts.
 */
export class ContractPromiseResult {
  // Whether the execution of the remote call succeeded.
  success: bool;
  // Bytes data returned by the remote contract. Can be empty or null, if the remote
  // method returns `void`.
  buffer: Uint8Array;
}

@external("env", "storage_write")
declare function storage_write(key_len: usize, key_ptr: usize, value_len: usize, value_ptr: usize): void;
@external("env", "storage_remove")
declare function storage_remove(key_len: usize, key_ptr: usize): void;
@external("env", "storage_has_key")
declare function storage_has_key(key_len: usize, key_ptr: usize): bool;
@external("env", "storage_iter")
declare function storage_iter(prefix_len: usize, prefix_ptr: usize): u32;
@external("env", "storage_range")
declare function storage_range(start_len: usize, start_ptr: usize, end_len: usize, end_ptr: usize): u32;
@external("env", "storage_iter_next")
declare function storage_iter_next(id: u32): u32;

@external("env", "result_count")
declare function result_count(): u32;
@external("env", "result_is_ok")
declare function result_is_ok(index: u32): bool;

@external("env", "return_value")
declare function return_value(value_len: usize, value_ptr: usize): void;
@external("env", "return_promise")
declare function return_promise(promise_index: u32): void;

@external("env", "data_read")
declare function data_read(type_index: u32, key_len: usize, key: usize, max_buf_len: usize, buf_ptr: usize): usize;

@external("env", "promise_create")
declare function promise_create(
    account_id_len: usize, account_id_ptr: usize,
    method_name_len: usize, method_name_ptr: usize,
    args_len: usize, args_ptr: usize,
    amount_ptr: usize): u32;

@external("env", "promise_then")
declare function promise_then(
    promise_index: u32,
    method_name_len: usize, method_name_ptr: usize,
    args_len: usize, args_ptr: usize,
    amount_ptr: usize): u32;

@external("env", "promise_and")
declare function promise_and(promise_index1: u32, promise_index2: u32): u32;

@external("env", "check_ethash")
declare function check_ethash(
    block_number: u64,
    header_hash_ptr: usize, header_hash_len: u32,
    nonce: u64,
    mix_hash_ptr: usize, mix_hash_len: u32,
    difficulty: u64
): bool;

/**
 * @hidden
 * Hash buffer is 32 bytes
 */
@external("env", "hash")
declare function _near_hash(value_len: usize, value_ptr: usize, buf_ptr: usize): void;

/**
 * @hidden
 */
@external("env", "hash32")
declare function _near_hash32(value_len: usize, value_ptr: usize): u32;

/**
 * @hidden
 * Fills given buffer with random u8.
 */
@external("env", "random_buf")
declare function _near_random_buf(buf_len: u32, buf_ptr: usize): void

/**
 * @hidden
 */
@external("env", "random32")
declare function random32(): u32;

/**
 * @hidden
 */
@external("env", "log")
declare function _near_log(msg_ptr: usize): void;

/**
 * @hidden
 */
@external("env", "frozen_balance")
declare function frozen_balance(balance_ptr: usize): void;

/**
 * @hidden
 */
@external("env", "liquid_balance")
declare function liquid_balance(balance_ptr: usize): void;

/**
 * @hidden
 */
@external("env", "storage_usage")
declare function storage_usage(): u64;

/**
 * @hidden
 */
@external("env", "deposit")
declare function deposit(min_amount_ptr: usize, max_amount_ptr: usize, balance_ptr: usize): void;

/**
 * @hidden
 */
@external("env", "withdraw")
declare function withdraw(min_amount_ptr: usize, max_amount_ptr: usize, balance_ptr: usize): void;

/**
 * @hidden
 */
@external("env", "received_amount")
declare function received_amount(balance_ptr: usize): void;

/**
 * @hidden
 */
@external("env", "block_index")
declare function block_index(): u64;

// adapted from https://gist.github.com/Juszczak/63e6d9e01decc850de03
/**
 * base64 encoding/decoding
 */
export namespace base64 {
  const PADCHAR: string = '=';
  const ALPHA: string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

  function getByte64(s: string, i: u32): u32 {
    return this.ALPHA.indexOf(s.charAt(i));
  }

  /**
   * Decode base64-encoded string and return a Uint8Array.
   * @param s Base64 encoded string.
   */
  export function decode (s: string): Uint8Array {
    let i: u32, b10: u32;
    let pads = 0,
        imax = s.length as u32;

    if (imax == 0) {
      return new Uint8Array(0);
    }

    if (s.charAt(imax - 1) == this.PADCHAR) {
      pads = 1;
      if (s.charAt(imax - 2) == this.PADCHAR) {
        pads = 2;
      }
      imax -= 4;
    }

    let main_chunk = imax % 4 == 0 ? imax / 4 * 3 : (imax / 4 + 1) * 3;
    let pad_size = pads > 0 ? 3 - pads : 0;
    let size = main_chunk + pad_size;

    let x = new Uint8Array(size),
        index = 0;

    for (i = 0; i < imax; i += 4) {
      b10 = (this.getByte64(s, i) << 18) | (this.getByte64(s, i + 1) << 12) | (this.getByte64(s, i + 2) << 6) | this.getByte64(s, i + 3);
      x[index++] = b10 >> 16;
      x[index++] = (b10 >> 8) & 255;
      x[index++] = b10 & 255;
    }
    switch (pads) {
      case 1:
        b10 = (this.getByte64(s, i) << 18) | (this.getByte64(s, i + 1) << 12) | (this.getByte64(s, i + 2) << 6);
        x[index++] = b10 >> 16;
        x[index++] = (b10 >> 8) & 255;
        break;
      case 2:
        b10 = (this.getByte64(s, i) << 18) | (this.getByte64(s, i + 1) << 12);
        x[index++] = b10 >> 16;
        break;
    }

    return x;
  }

  /**
   * Encode Uint8Array in base64.
   * @param bytes Byte array of type Uint8Array.
   */
  export function encode(bytes: Uint8Array): string {
    let i: i32, b10: u32;
    let x = new Array<string>(),
        imax = bytes.length - bytes.length % 3;

    if (bytes.length == 0) {
      return "";
    }

    for (i = 0; i < imax; i += 3) {
      b10 = (bytes[i] as u32 << 16) | (bytes[i+1] as u32 << 8) | bytes[i+2] as u32;
      x.push(this.ALPHA.charAt(b10 >> 18));
      x.push(this.ALPHA.charAt((b10 >> 12) & 63));
      x.push(this.ALPHA.charAt((b10 >> 6) & 63));
      x.push(this.ALPHA.charAt(b10 & 63));
    }

    switch (bytes.length - imax) {
      case 1:
        b10 = bytes[i] as u32 << 16;
        x.push(this.ALPHA.charAt(b10 >> 18));
        x.push(this.ALPHA.charAt((b10 >> 12) & 63));
        x.push(this.PADCHAR);
        x.push(this.PADCHAR);
        break;
      case 2:
        b10 = (bytes[i] as u32 << 16) | (bytes[i+1] as u32 << 8);
        x.push(this.ALPHA.charAt(b10 >> 18));
        x.push(this.ALPHA.charAt((b10 >> 12) & 63));
        x.push(this.ALPHA.charAt((b10 >> 6) & 63));
        x.push(this.PADCHAR);
        break;
    }

    return x.join('');
  }
}

'''
'''--- package-lock.json ---
{
  "name": "near-runtime-ts",
  "version": "0.0.1",
  "lockfileVersion": 1,
  "requires": true,
  "dependencies": {
    "@protobufjs/utf8": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@protobufjs/utf8/-/utf8-1.1.0.tgz",
      "integrity": "sha1-p3c2C1s5oaLlEG+OhY8v0tBgxXA=",
      "dev": true
    },
    "@types/events": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/@types/events/-/events-3.0.0.tgz",
      "integrity": "sha512-EaObqwIvayI5a8dCzhFrjKzVwKLxjoG9T6Ppd5CEo07LRKfQ8Yokw54r5+Wq7FaBQ+yXRvQAYPrHwya1/UFt9g==",
      "dev": true
    },
    "@types/fs-extra": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/@types/fs-extra/-/fs-extra-5.1.0.tgz",
      "integrity": "sha512-AInn5+UBFIK9FK5xc9yP5e3TQSPNNgjHByqYcj9g5elVBnDQcQL7PlO1CIRy2gWlbwK7UPYqi7vRvFA44dCmYQ==",
      "dev": true,
      "requires": {
        "@types/node": "*"
      }
    },
    "@types/glob": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/@types/glob/-/glob-7.1.1.tgz",
      "integrity": "sha512-1Bh06cbWJUHMC97acuD6UMG29nMt0Aqz1vF3guLfG+kHHJhy3AyohZFFxYk2f7Q1SQIrNwvncxAE0N/9s70F2w==",
      "dev": true,
      "requires": {
        "@types/events": "*",
        "@types/minimatch": "*",
        "@types/node": "*"
      }
    },
    "@types/handlebars": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/@types/handlebars/-/handlebars-4.1.0.tgz",
      "integrity": "sha512-gq9YweFKNNB1uFK71eRqsd4niVkXrxHugqWFQkeLRJvGjnxsLr16bYtcsG4tOFwmYi0Bax+wCkbf1reUfdl4kA==",
      "dev": true,
      "requires": {
        "handlebars": "*"
      }
    },
    "@types/highlight.js": {
      "version": "9.12.3",
      "resolved": "https://registry.npmjs.org/@types/highlight.js/-/highlight.js-9.12.3.tgz",
      "integrity": "sha512-pGF/zvYOACZ/gLGWdQH8zSwteQS1epp68yRcVLJMgUck/MjEn/FBYmPub9pXT8C1e4a8YZfHo1CKyV8q1vKUnQ==",
      "dev": true
    },
    "@types/lodash": {
      "version": "4.14.134",
      "resolved": "https://registry.npmjs.org/@types/lodash/-/lodash-4.14.134.tgz",
      "integrity": "sha512-2/O0khFUCFeDlbi7sZ7ZFRCcT812fAeOLm7Ev4KbwASkZ575TDrDcY7YyaoHdTOzKcNbfiwLYZqPmoC4wadrsw==",
      "dev": true
    },
    "@types/marked": {
      "version": "0.4.2",
      "resolved": "https://registry.npmjs.org/@types/marked/-/marked-0.4.2.tgz",
      "integrity": "sha512-cDB930/7MbzaGF6U3IwSQp6XBru8xWajF5PV2YZZeV8DyiliTuld11afVztGI9+yJZ29il5E+NpGA6ooV/Cjkg==",
      "dev": true
    },
    "@types/minimatch": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/@types/minimatch/-/minimatch-3.0.3.tgz",
      "integrity": "sha512-tHq6qdbT9U1IRSGf14CL0pUlULksvY9OZ+5eEgl1N7t+OA3tGvNpxJCzuKQlsNgCVwbAs670L1vcVQi8j9HjnA==",
      "dev": true
    },
    "@types/node": {
      "version": "12.0.8",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-12.0.8.tgz",
      "integrity": "sha512-b8bbUOTwzIY3V5vDTY1fIJ+ePKDUBqt2hC2woVGotdQQhG/2Sh62HOKHrT7ab+VerXAcPyAiTEipPu/FsreUtg==",
      "dev": true
    },
    "@types/shelljs": {
      "version": "0.8.5",
      "resolved": "https://registry.npmjs.org/@types/shelljs/-/shelljs-0.8.5.tgz",
      "integrity": "sha512-bZgjwIWu9gHCjirKJoOlLzGi5N0QgZ5t7EXEuoqyWCHTuSddURXo3FOBYDyRPNOWzZ6NbkLvZnVkn483Y/tvcQ==",
      "dev": true,
      "requires": {
        "@types/glob": "*",
        "@types/node": "*"
      }
    },
    "abab": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/abab/-/abab-2.0.0.tgz",
      "integrity": "sha512-sY5AXXVZv4Y1VACTtR11UJCPHHudgY5i26Qj5TypE6DKlIApbwb5uqhXcJ5UUGbvZNRh7EeIoW+LrJumBsKp7w==",
      "dev": true
    },
    "acorn": {
      "version": "5.7.3",
      "resolved": "https://registry.npmjs.org/acorn/-/acorn-5.7.3.tgz",
      "integrity": "sha512-T/zvzYRfbVojPWahDsE5evJdHb3oJoQfFbsrKM7w5Zcs++Tr257tia3BmMP8XYVjp1S9RZXQMh7gao96BlqZOw==",
      "dev": true
    },
    "acorn-globals": {
      "version": "4.3.2",
      "resolved": "https://registry.npmjs.org/acorn-globals/-/acorn-globals-4.3.2.tgz",
      "integrity": "sha512-BbzvZhVtZP+Bs1J1HcwrQe8ycfO0wStkSGxuul3He3GkHOIZ6eTqOkPuw9IP1X3+IkOo4wiJmwkobzXYz4wewQ==",
      "dev": true,
      "requires": {
        "acorn": "^6.0.1",
        "acorn-walk": "^6.0.1"
      },
      "dependencies": {
        "acorn": {
          "version": "6.1.1",
          "resolved": "https://registry.npmjs.org/acorn/-/acorn-6.1.1.tgz",
          "integrity": "sha512-jPTiwtOxaHNaAPg/dmrJ/beuzLRnXtB0kQPQ8JpotKJgTB6rX6c8mlf315941pyjBSaPg8NHXS9fhP4u17DpGA==",
          "dev": true
        }
      }
    },
    "acorn-walk": {
      "version": "6.1.1",
      "resolved": "https://registry.npmjs.org/acorn-walk/-/acorn-walk-6.1.1.tgz",
      "integrity": "sha512-OtUw6JUTgxA2QoqqmrmQ7F2NYqiBPi/L2jqHyFtllhOUvXYQXf0Z1CYUinIfyT4bTCGmrA7gX9FvHA81uzCoVw==",
      "dev": true
    },
    "ajv": {
      "version": "6.10.0",
      "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.10.0.tgz",
      "integrity": "sha512-nffhOpkymDECQyR0mnsUtoCE8RlX38G0rYP+wgLWFyZuUyuuojSSvi/+euOiQBIn63whYwYVIIH1TvE3tu4OEg==",
      "dev": true,
      "requires": {
        "fast-deep-equal": "^2.0.1",
        "fast-json-stable-stringify": "^2.0.0",
        "json-schema-traverse": "^0.4.1",
        "uri-js": "^4.2.2"
      }
    },
    "ansi-styles": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
      "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
      "dev": true,
      "requires": {
        "color-convert": "^1.9.0"
      }
    },
    "arg": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/arg/-/arg-4.1.0.tgz",
      "integrity": "sha512-ZWc51jO3qegGkVh8Hwpv636EkbesNV5ZNQPCtRa+0qytRYPEs9IYT9qITY9buezqUH5uqyzlWLcufrzU2rffdg==",
      "dev": true
    },
    "array-equal": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/array-equal/-/array-equal-1.0.0.tgz",
      "integrity": "sha1-jCpe8kcv2ep0KwTHenUJO6J1fJM=",
      "dev": true
    },
    "as-pect": {
      "version": "github:jtenner/as-pect#943f31d4ca927c00f535253ce73b9503b0bb138e",
      "from": "github:jtenner/as-pect",
      "dev": true,
      "requires": {
        "assemblyscript": "github:assemblyscript/assemblyscript#addb99eff250af2af0241442d45ff3d23434e6f1",
        "chalk": "^2.4.2",
        "csv-stringify": "^5.3.0",
        "glob": "^7.1.4",
        "long": "^4.0.0",
        "mathjs": "^6.0.2",
        "ts-node": "^8.2.0",
        "yargs-parser": "^13.1.1"
      }
    },
    "asn1": {
      "version": "0.2.4",
      "resolved": "https://registry.npmjs.org/asn1/-/asn1-0.2.4.tgz",
      "integrity": "sha512-jxwzQpLQjSmWXgwaCZE9Nz+glAG01yF1QnWgbhGwHI5A6FRIEY6IVqtHhIepHqI7/kyEyQEagBC5mBEFlIYvdg==",
      "dev": true,
      "requires": {
        "safer-buffer": "~2.1.0"
      }
    },
    "assemblyscript": {
      "version": "github:assemblyscript/assemblyscript#addb99eff250af2af0241442d45ff3d23434e6f1",
      "from": "github:assemblyscript/assemblyscript",
      "dev": true,
      "requires": {
        "@protobufjs/utf8": "^1.1.0",
        "binaryen": "84.0.0-nightly.20190522",
        "glob": "^7.1.4",
        "long": "^4.0.0",
        "opencollective-postinstall": "^2.0.0",
        "source-map-support": "^0.5.12"
      }
    },
    "assert-plus": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
      "integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU=",
      "dev": true
    },
    "async-limiter": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/async-limiter/-/async-limiter-1.0.0.tgz",
      "integrity": "sha512-jp/uFnooOiO+L211eZOoSyzpOITMXx1rBITauYykG3BRYPu8h0UcxsPNB04RR5vo4Tyz3+ay17tR6JVf9qzYWg==",
      "dev": true
    },
    "asynckit": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
      "integrity": "sha1-x57Zf380y48robyXkLzDZkdLS3k=",
      "dev": true
    },
    "aws-sign2": {
      "version": "0.7.0",
      "resolved": "https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz",
      "integrity": "sha1-tG6JCTSpWR8tL2+G1+ap8bP+dqg=",
      "dev": true
    },
    "aws4": {
      "version": "1.8.0",
      "resolved": "https://registry.npmjs.org/aws4/-/aws4-1.8.0.tgz",
      "integrity": "sha512-ReZxvNHIOv88FlT7rxcXIIC0fPt4KZqZbOlivyWtXLt8ESx84zd3kMC6iK5jVeS2qt+g7ftS7ye4fi06X5rtRQ==",
      "dev": true
    },
    "balanced-match": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.0.tgz",
      "integrity": "sha1-ibTRmasr7kneFk6gK4nORi1xt2c=",
      "dev": true
    },
    "bcrypt-pbkdf": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.2.tgz",
      "integrity": "sha1-pDAdOJtqQ/m2f/PKEaP2Y342Dp4=",
      "dev": true,
      "requires": {
        "tweetnacl": "^0.14.3"
      }
    },
    "bignum": {
      "version": "github:MaxGraey/bignum.wasm#ca7f57f37301eedc9ec91b108fed0613c0c2fe06",
      "from": "github:MaxGraey/bignum.wasm",
      "dev": true
    },
    "binaryen": {
      "version": "84.0.0-nightly.20190522",
      "resolved": "https://registry.npmjs.org/binaryen/-/binaryen-84.0.0-nightly.20190522.tgz",
      "integrity": "sha512-bxSPi3MOkFmK5W6VIlqxnOc1nYzpUCzT/tHz3C7sgbz7jTR2lOBlZnKStTJlBt018xeZK9/JpK/jXdduH7eQFg==",
      "dev": true
    },
    "brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "dev": true,
      "requires": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "browser-process-hrtime": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/browser-process-hrtime/-/browser-process-hrtime-0.1.3.tgz",
      "integrity": "sha512-bRFnI4NnjO6cnyLmOV/7PVoDEMJChlcfN0z4s1YMBY989/SvlfMI1lgCnkFUs53e9gQF+w7qu7XdllSTiSl8Aw==",
      "dev": true
    },
    "buffer-from": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.1.tgz",
      "integrity": "sha512-MQcXEUbCKtEo7bhqEs6560Hyd4XaovZlO/k9V3hjVUF/zwW7KBVdSK4gIt/bzwS9MbR5qob+F5jusZsb0YQK2A==",
      "dev": true
    },
    "camelcase": {
      "version": "5.3.1",
      "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz",
      "integrity": "sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==",
      "dev": true
    },
    "caseless": {
      "version": "0.12.0",
      "resolved": "https://registry.npmjs.org/caseless/-/caseless-0.12.0.tgz",
      "integrity": "sha1-G2gcIf+EAzyCZUMJBolCDRhxUdw=",
      "dev": true
    },
    "chalk": {
      "version": "2.4.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
      "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
      "dev": true,
      "requires": {
        "ansi-styles": "^3.2.1",
        "escape-string-regexp": "^1.0.5",
        "supports-color": "^5.3.0"
      }
    },
    "color-convert": {
      "version": "1.9.3",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
      "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
      "dev": true,
      "requires": {
        "color-name": "1.1.3"
      }
    },
    "color-name": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
      "integrity": "sha1-p9BVi9icQveV3UIyj3QIMcpTvCU=",
      "dev": true
    },
    "combined-stream": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
      "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
      "dev": true,
      "requires": {
        "delayed-stream": "~1.0.0"
      }
    },
    "commander": {
      "version": "2.20.0",
      "resolved": "https://registry.npmjs.org/commander/-/commander-2.20.0.tgz",
      "integrity": "sha512-7j2y+40w61zy6YC2iRNpUe/NwhNyoXrYpHMrSunaMG64nRnaf96zO/KMQR4OyN/UnE5KLyEBnKHd4aG3rskjpQ==",
      "dev": true,
      "optional": true
    },
    "complex.js": {
      "version": "2.0.11",
      "resolved": "https://registry.npmjs.org/complex.js/-/complex.js-2.0.11.tgz",
      "integrity": "sha512-6IArJLApNtdg1P1dFtn3dnyzoZBEF0MwMnrfF1exSBRpZYoy4yieMkpZhQDC0uwctw48vii0CFVyHfpgZ/DfGw==",
      "dev": true
    },
    "concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=",
      "dev": true
    },
    "core-util-is": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz",
      "integrity": "sha1-tf1UIgqivFq1eqtxQMlAdUUDwac=",
      "dev": true
    },
    "cssom": {
      "version": "0.3.6",
      "resolved": "https://registry.npmjs.org/cssom/-/cssom-0.3.6.tgz",
      "integrity": "sha512-DtUeseGk9/GBW0hl0vVPpU22iHL6YB5BUX7ml1hB+GMpo0NX5G4voX3kdWiMSEguFtcW3Vh3djqNF4aIe6ne0A==",
      "dev": true
    },
    "cssstyle": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/cssstyle/-/cssstyle-1.2.2.tgz",
      "integrity": "sha512-43wY3kl1CVQSvL7wUY1qXkxVGkStjpkDmVjiIKX8R97uhajy8Bybay78uOtqvh7Q5GK75dNPfW0geWjE6qQQow==",
      "dev": true,
      "requires": {
        "cssom": "0.3.x"
      }
    },
    "csv-stringify": {
      "version": "5.3.0",
      "resolved": "https://registry.npmjs.org/csv-stringify/-/csv-stringify-5.3.0.tgz",
      "integrity": "sha512-VMYPbE8zWz475smwqb9VbX9cj0y4J0PBl59UdcqzLkzXHZZ8dh4Rmbb0ZywsWEtUml4A96Hn7Q5MW9ppVghYzg==",
      "dev": true,
      "requires": {
        "lodash.get": "~4.4.2"
      }
    },
    "dashdash": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/dashdash/-/dashdash-1.14.1.tgz",
      "integrity": "sha1-hTz6D3y+L+1d4gMmuN1YEDX24vA=",
      "dev": true,
      "requires": {
        "assert-plus": "^1.0.0"
      }
    },
    "data-urls": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/data-urls/-/data-urls-1.1.0.tgz",
      "integrity": "sha512-YTWYI9se1P55u58gL5GkQHW4P6VJBJ5iBT+B5a7i2Tjadhv52paJG0qHX4A0OR6/t52odI64KP2YvFpkDOi3eQ==",
      "dev": true,
      "requires": {
        "abab": "^2.0.0",
        "whatwg-mimetype": "^2.2.0",
        "whatwg-url": "^7.0.0"
      },
      "dependencies": {
        "whatwg-url": {
          "version": "7.0.0",
          "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-7.0.0.tgz",
          "integrity": "sha512-37GeVSIJ3kn1JgKyjiYNmSLP1yzbpb29jdmwBSgkD9h40/hyrR/OifpVUndji3tmwGgD8qpw7iQu3RSbCrBpsQ==",
          "dev": true,
          "requires": {
            "lodash.sortby": "^4.7.0",
            "tr46": "^1.0.1",
            "webidl-conversions": "^4.0.2"
          }
        }
      }
    },
    "decamelize": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz",
      "integrity": "sha1-9lNNFRSCabIDUue+4m9QH5oZEpA=",
      "dev": true
    },
    "decimal.js": {
      "version": "10.2.0",
      "resolved": "https://registry.npmjs.org/decimal.js/-/decimal.js-10.2.0.tgz",
      "integrity": "sha512-vDPw+rDgn3bZe1+F/pyEwb1oMG2XTlRVgAa6B4KccTEpYgF8w6eQllVbQcfIJnZyvzFtFpxnpGtx8dd7DJp/Rw==",
      "dev": true
    },
    "deep-is": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.3.tgz",
      "integrity": "sha1-s2nW+128E+7PUk+RsHD+7cNXzzQ=",
      "dev": true
    },
    "delayed-stream": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
      "integrity": "sha1-3zrhmayt+31ECqrgsp4icrJOxhk=",
      "dev": true
    },
    "diff": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/diff/-/diff-4.0.1.tgz",
      "integrity": "sha512-s2+XdvhPCOF01LRQBC8hf4vhbVmI2CGS5aZnxLJlT5FtdhPCDFq80q++zK2KlrVorVDdL5BOGZ/VfLrVtYNF+Q==",
      "dev": true
    },
    "domexception": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/domexception/-/domexception-1.0.1.tgz",
      "integrity": "sha512-raigMkn7CJNNo6Ihro1fzG7wr3fHuYVytzquZKX5n0yizGsTcYgzdIUwj1X9pK0VvjeihV+XiclP+DjwbsSKug==",
      "dev": true,
      "requires": {
        "webidl-conversions": "^4.0.2"
      }
    },
    "ecc-jsbn": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/ecc-jsbn/-/ecc-jsbn-0.1.2.tgz",
      "integrity": "sha1-OoOpBOVDUyh4dMVkt1SThoSamMk=",
      "dev": true,
      "requires": {
        "jsbn": "~0.1.0",
        "safer-buffer": "^2.1.0"
      }
    },
    "escape-latex": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/escape-latex/-/escape-latex-1.2.0.tgz",
      "integrity": "sha512-nV5aVWW1K0wEiUIEdZ4erkGGH8mDxGyxSeqPzRNtWP7ataw+/olFObw7hujFWlVjNsaDFw5VZ5NzVSIqRgfTiw==",
      "dev": true
    },
    "escape-string-regexp": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
      "integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=",
      "dev": true
    },
    "escodegen": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/escodegen/-/escodegen-1.11.1.tgz",
      "integrity": "sha512-JwiqFD9KdGVVpeuRa68yU3zZnBEOcPs0nKW7wZzXky8Z7tffdYUHbe11bPCV5jYlK6DVdKLWLm0f5I/QlL0Kmw==",
      "dev": true,
      "requires": {
        "esprima": "^3.1.3",
        "estraverse": "^4.2.0",
        "esutils": "^2.0.2",
        "optionator": "^0.8.1",
        "source-map": "~0.6.1"
      }
    },
    "esprima": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/esprima/-/esprima-3.1.3.tgz",
      "integrity": "sha1-/cpRzuYTOJXjyI1TXOSdv/YqRjM=",
      "dev": true
    },
    "estraverse": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-4.2.0.tgz",
      "integrity": "sha1-De4/7TH81GlhjOc0IJn8GvoL2xM=",
      "dev": true
    },
    "esutils": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.2.tgz",
      "integrity": "sha1-Cr9PHKpbyx96nYrMbepPqqBLrJs=",
      "dev": true
    },
    "extend": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/extend/-/extend-3.0.2.tgz",
      "integrity": "sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g==",
      "dev": true
    },
    "extsprintf": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/extsprintf/-/extsprintf-1.3.0.tgz",
      "integrity": "sha1-lpGEQOMEGnpBT4xS48V06zw+HgU=",
      "dev": true
    },
    "fast-deep-equal": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-2.0.1.tgz",
      "integrity": "sha1-ewUhjd+WZ79/Nwv3/bLLFf3Qqkk=",
      "dev": true
    },
    "fast-json-stable-stringify": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.0.0.tgz",
      "integrity": "sha1-1RQsDK7msRifh9OnYREGT4bIu/I=",
      "dev": true
    },
    "fast-levenshtein": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",
      "integrity": "sha1-PYpcZog6FqMMqGQ+hR8Zuqd5eRc=",
      "dev": true
    },
    "forever-agent": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/forever-agent/-/forever-agent-0.6.1.tgz",
      "integrity": "sha1-+8cfDEGt6zf5bFd60e1C2P2sypE=",
      "dev": true
    },
    "form-data": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/form-data/-/form-data-2.3.3.tgz",
      "integrity": "sha512-1lLKB2Mu3aGP1Q/2eCOx0fNbRMe7XdwktwOruhfqqd0rIJWwN4Dh+E3hrPSlDCXnSR7UtZ1N38rVXm+6+MEhJQ==",
      "dev": true,
      "requires": {
        "asynckit": "^0.4.0",
        "combined-stream": "^1.0.6",
        "mime-types": "^2.1.12"
      }
    },
    "fraction.js": {
      "version": "4.0.12",
      "resolved": "https://registry.npmjs.org/fraction.js/-/fraction.js-4.0.12.tgz",
      "integrity": "sha512-8Z1K0VTG4hzYY7kA/1sj4/r1/RWLBD3xwReT/RCrUCbzPszjNQCCsy3ktkU/eaEqX3MYa4pY37a52eiBlPMlhA==",
      "dev": true
    },
    "fs-extra": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-7.0.1.tgz",
      "integrity": "sha512-YJDaCJZEnBmcbw13fvdAM9AwNOJwOzrE4pqMqBq5nFiEqXUqHwlK4B+3pUw6JNvfSPtX05xFHtYy/1ni01eGCw==",
      "dev": true,
      "requires": {
        "graceful-fs": "^4.1.2",
        "jsonfile": "^4.0.0",
        "universalify": "^0.1.0"
      }
    },
    "fs.realpath": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
      "integrity": "sha1-FQStJSMVjKpA20onh8sBQRmU6k8=",
      "dev": true
    },
    "getpass": {
      "version": "0.1.7",
      "resolved": "https://registry.npmjs.org/getpass/-/getpass-0.1.7.tgz",
      "integrity": "sha1-Xv+OPmhNVprkyysSgmBOi6YhSfo=",
      "dev": true,
      "requires": {
        "assert-plus": "^1.0.0"
      }
    },
    "glob": {
      "version": "7.1.4",
      "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.4.tgz",
      "integrity": "sha512-hkLPepehmnKk41pUGm3sYxoFs/umurYfYJCerbXEyFIWcAzvpipAgVkBqqT9RBKMGjnq6kMuyYwha6csxbiM1A==",
      "dev": true,
      "requires": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^3.0.4",
        "once": "^1.3.0",
        "path-is-absolute": "^1.0.0"
      }
    },
    "graceful-fs": {
      "version": "4.1.15",
      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.1.15.tgz",
      "integrity": "sha512-6uHUhOPEBgQ24HM+r6b/QwWfZq+yiFcipKFrOFiBEnWdy5sdzYoi+pJeQaPI5qOLRFqWmAXUPQNsielzdLoecA==",
      "dev": true
    },
    "handlebars": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/handlebars/-/handlebars-4.1.2.tgz",
      "integrity": "sha512-nvfrjqvt9xQ8Z/w0ijewdD/vvWDTOweBUm96NTr66Wfvo1mJenBLwcYmPs3TIBP5ruzYGD7Hx/DaM9RmhroGPw==",
      "dev": true,
      "requires": {
        "neo-async": "^2.6.0",
        "optimist": "^0.6.1",
        "source-map": "^0.6.1",
        "uglify-js": "^3.1.4"
      }
    },
    "har-schema": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/har-schema/-/har-schema-2.0.0.tgz",
      "integrity": "sha1-qUwiJOvKwEeCoNkDVSHyRzW37JI=",
      "dev": true
    },
    "har-validator": {
      "version": "5.1.3",
      "resolved": "https://registry.npmjs.org/har-validator/-/har-validator-5.1.3.tgz",
      "integrity": "sha512-sNvOCzEQNr/qrvJgc3UG/kD4QtlHycrzwS+6mfTrrSq97BvaYcPZZI1ZSqGSPR73Cxn4LKTD4PttRwfU7jWq5g==",
      "dev": true,
      "requires": {
        "ajv": "^6.5.5",
        "har-schema": "^2.0.0"
      }
    },
    "has-flag": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
      "integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0=",
      "dev": true
    },
    "highlight.js": {
      "version": "9.15.8",
      "resolved": "https://registry.npmjs.org/highlight.js/-/highlight.js-9.15.8.tgz",
      "integrity": "sha512-RrapkKQWwE+wKdF73VsOa2RQdIoO3mxwJ4P8mhbI6KYJUraUHRKM5w5zQQKXNk0xNL4UVRdulV9SBJcmzJNzVA==",
      "dev": true
    },
    "html-encoding-sniffer": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/html-encoding-sniffer/-/html-encoding-sniffer-1.0.2.tgz",
      "integrity": "sha512-71lZziiDnsuabfdYiUeWdCVyKuqwWi23L8YeIgV9jSSZHCtb6wB1BKWooH7L3tn4/FuZJMVWyNaIDr4RGmaSYw==",
      "dev": true,
      "requires": {
        "whatwg-encoding": "^1.0.1"
      }
    },
    "http-signature": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/http-signature/-/http-signature-1.2.0.tgz",
      "integrity": "sha1-muzZJRFHcvPZW2WmCruPfBj7rOE=",
      "dev": true,
      "requires": {
        "assert-plus": "^1.0.0",
        "jsprim": "^1.2.2",
        "sshpk": "^1.7.0"
      }
    },
    "iconv-lite": {
      "version": "0.4.24",
      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz",
      "integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==",
      "dev": true,
      "requires": {
        "safer-buffer": ">= 2.1.2 < 3"
      }
    },
    "inflight": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
      "integrity": "sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=",
      "dev": true,
      "requires": {
        "once": "^1.3.0",
        "wrappy": "1"
      }
    },
    "inherits": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz",
      "integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=",
      "dev": true
    },
    "interpret": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/interpret/-/interpret-1.2.0.tgz",
      "integrity": "sha512-mT34yGKMNceBQUoVn7iCDKDntA7SC6gycMAWzGx1z/CMCTV7b2AAtXlo3nRyHZ1FelRkQbQjprHSYGwzLtkVbw==",
      "dev": true
    },
    "is-typedarray": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz",
      "integrity": "sha1-5HnICFjfDBsR3dppQPlgEfzaSpo=",
      "dev": true
    },
    "isstream": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/isstream/-/isstream-0.1.2.tgz",
      "integrity": "sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo=",
      "dev": true
    },
    "javascript-natural-sort": {
      "version": "0.7.1",
      "resolved": "https://registry.npmjs.org/javascript-natural-sort/-/javascript-natural-sort-0.7.1.tgz",
      "integrity": "sha1-+eIwPUUH9tdDVac2ZNFED7Wg71k=",
      "dev": true
    },
    "jsbn": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/jsbn/-/jsbn-0.1.1.tgz",
      "integrity": "sha1-peZUwuWi3rXyAdls77yoDA7y9RM=",
      "dev": true
    },
    "jsdom": {
      "version": "11.12.0",
      "resolved": "https://registry.npmjs.org/jsdom/-/jsdom-11.12.0.tgz",
      "integrity": "sha512-y8Px43oyiBM13Zc1z780FrfNLJCXTL40EWlty/LXUtcjykRBNgLlCjWXpfSPBl2iv+N7koQN+dvqszHZgT/Fjw==",
      "dev": true,
      "requires": {
        "abab": "^2.0.0",
        "acorn": "^5.5.3",
        "acorn-globals": "^4.1.0",
        "array-equal": "^1.0.0",
        "cssom": ">= 0.3.2 < 0.4.0",
        "cssstyle": "^1.0.0",
        "data-urls": "^1.0.0",
        "domexception": "^1.0.1",
        "escodegen": "^1.9.1",
        "html-encoding-sniffer": "^1.0.2",
        "left-pad": "^1.3.0",
        "nwsapi": "^2.0.7",
        "parse5": "4.0.0",
        "pn": "^1.1.0",
        "request": "^2.87.0",
        "request-promise-native": "^1.0.5",
        "sax": "^1.2.4",
        "symbol-tree": "^3.2.2",
        "tough-cookie": "^2.3.4",
        "w3c-hr-time": "^1.0.1",
        "webidl-conversions": "^4.0.2",
        "whatwg-encoding": "^1.0.3",
        "whatwg-mimetype": "^2.1.0",
        "whatwg-url": "^6.4.1",
        "ws": "^5.2.0",
        "xml-name-validator": "^3.0.0"
      }
    },
    "json-schema": {
      "version": "0.2.3",
      "resolved": "https://registry.npmjs.org/json-schema/-/json-schema-0.2.3.tgz",
      "integrity": "sha1-tIDIkuWaLwWVTOcnvT8qTogvnhM=",
      "dev": true
    },
    "json-schema-traverse": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
      "dev": true
    },
    "json-stringify-safe": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz",
      "integrity": "sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus=",
      "dev": true
    },
    "jsonfile": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-4.0.0.tgz",
      "integrity": "sha1-h3Gq4HmbZAdrdmQPygWPnBDjPss=",
      "dev": true,
      "requires": {
        "graceful-fs": "^4.1.6"
      }
    },
    "jsprim": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/jsprim/-/jsprim-1.4.1.tgz",
      "integrity": "sha1-MT5mvB5cwG5Di8G3SZwuXFastqI=",
      "dev": true,
      "requires": {
        "assert-plus": "1.0.0",
        "extsprintf": "1.3.0",
        "json-schema": "0.2.3",
        "verror": "1.10.0"
      }
    },
    "left-pad": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/left-pad/-/left-pad-1.3.0.tgz",
      "integrity": "sha512-XI5MPzVNApjAyhQzphX8BkmKsKUxD4LdyK24iZeQGinBN9yTQT3bFlCBy/aVx2HrNcqQGsdot8ghrjyrvMCoEA==",
      "dev": true
    },
    "levn": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/levn/-/levn-0.3.0.tgz",
      "integrity": "sha1-OwmSTt+fCDwEkP3UwLxEIeBHZO4=",
      "dev": true,
      "requires": {
        "prelude-ls": "~1.1.2",
        "type-check": "~0.3.2"
      }
    },
    "lodash": {
      "version": "4.17.11",
      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.11.tgz",
      "integrity": "sha512-cQKh8igo5QUhZ7lg38DYWAxMvjSAKG0A8wGSVimP07SIUEK2UO+arSRKbRZWtelMtN5V0Hkwh5ryOto/SshYIg==",
      "dev": true
    },
    "lodash.get": {
      "version": "4.4.2",
      "resolved": "https://registry.npmjs.org/lodash.get/-/lodash.get-4.4.2.tgz",
      "integrity": "sha1-LRd/ZS+jHpObRDjVNBSZ36OCXpk=",
      "dev": true
    },
    "lodash.sortby": {
      "version": "4.7.0",
      "resolved": "https://registry.npmjs.org/lodash.sortby/-/lodash.sortby-4.7.0.tgz",
      "integrity": "sha1-7dFMgk4sycHgsKG0K7UhBRakJDg=",
      "dev": true
    },
    "long": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/long/-/long-4.0.0.tgz",
      "integrity": "sha512-XsP+KhQif4bjX1kbuSiySJFNAehNxgLb6hPRGJ9QsUr8ajHkuXGdrHmFUTUUXhDwVX2R5bY4JNZEwbUiMhV+MA==",
      "dev": true
    },
    "make-error": {
      "version": "1.3.5",
      "resolved": "https://registry.npmjs.org/make-error/-/make-error-1.3.5.tgz",
      "integrity": "sha512-c3sIjNUow0+8swNwVpqoH4YCShKNFkMaw6oH1mNS2haDZQqkeZFlHS3dhoeEbKKmJB4vXpJucU6oH75aDYeE9g==",
      "dev": true
    },
    "marked": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/marked/-/marked-0.4.0.tgz",
      "integrity": "sha512-tMsdNBgOsrUophCAFQl0XPe6Zqk/uy9gnue+jIIKhykO51hxyu6uNx7zBPy0+y/WKYVZZMspV9YeXLNdKk+iYw==",
      "dev": true
    },
    "mathjs": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/mathjs/-/mathjs-6.0.2.tgz",
      "integrity": "sha512-K3Q0qoZx7iFz0PnFC0b4kIRZPBQq6rg4htRGnLU4o7SvBTNZnACaUrqqk6sQ891aa7maCDKp8PK1J8YyDAmw2g==",
      "dev": true,
      "requires": {
        "complex.js": "2.0.11",
        "decimal.js": "10.2.0",
        "escape-latex": "1.2.0",
        "fraction.js": "4.0.12",
        "javascript-natural-sort": "0.7.1",
        "seed-random": "2.2.0",
        "tiny-emitter": "2.1.0",
        "typed-function": "1.1.0"
      }
    },
    "mime-db": {
      "version": "1.40.0",
      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.40.0.tgz",
      "integrity": "sha512-jYdeOMPy9vnxEqFRRo6ZvTZ8d9oPb+k18PKoYNYUe2stVEBPPwsln/qWzdbmaIvnhZ9v2P+CuecK+fpUfsV2mA==",
      "dev": true
    },
    "mime-types": {
      "version": "2.1.24",
      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.24.tgz",
      "integrity": "sha512-WaFHS3MCl5fapm3oLxU4eYDw77IQM2ACcxQ9RIxfaC3ooc6PFuBMGZZsYpvoXS5D5QTWPieo1jjLdAm3TBP3cQ==",
      "dev": true,
      "requires": {
        "mime-db": "1.40.0"
      }
    },
    "minimatch": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz",
      "integrity": "sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==",
      "dev": true,
      "requires": {
        "brace-expansion": "^1.1.7"
      }
    },
    "minimist": {
      "version": "0.0.10",
      "resolved": "https://registry.npmjs.org/minimist/-/minimist-0.0.10.tgz",
      "integrity": "sha1-3j+YVD2/lggr5IrRoMfNqDYwHc8=",
      "dev": true
    },
    "neo-async": {
      "version": "2.6.1",
      "resolved": "https://registry.npmjs.org/neo-async/-/neo-async-2.6.1.tgz",
      "integrity": "sha512-iyam8fBuCUpWeKPGpaNMetEocMt364qkCsfL9JuhjXX6dRnguRVOfk2GZaDpPjcOKiiXCPINZC1GczQ7iTq3Zw==",
      "dev": true
    },
    "nwsapi": {
      "version": "2.1.4",
      "resolved": "https://registry.npmjs.org/nwsapi/-/nwsapi-2.1.4.tgz",
      "integrity": "sha512-iGfd9Y6SFdTNldEy2L0GUhcarIutFmk+MPWIn9dmj8NMIup03G08uUF2KGbbmv/Ux4RT0VZJoP/sVbWA6d/VIw==",
      "dev": true
    },
    "oauth-sign": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.9.0.tgz",
      "integrity": "sha512-fexhUFFPTGV8ybAtSIGbV6gOkSv8UtRbDBnAyLQw4QPKkgNlsH2ByPGtMUqdWkos6YCRmAqViwgZrJc/mRDzZQ==",
      "dev": true
    },
    "once": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
      "integrity": "sha1-WDsap3WWHUsROsF9nFC6753Xa9E=",
      "dev": true,
      "requires": {
        "wrappy": "1"
      }
    },
    "opencollective-postinstall": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/opencollective-postinstall/-/opencollective-postinstall-2.0.2.tgz",
      "integrity": "sha512-pVOEP16TrAO2/fjej1IdOyupJY8KDUM1CvsaScRbw6oddvpQoOfGk4ywha0HKKVAD6RkW4x6Q+tNBwhf3Bgpuw==",
      "dev": true
    },
    "optimist": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/optimist/-/optimist-0.6.1.tgz",
      "integrity": "sha1-2j6nRob6IaGaERwybpDrFaAZZoY=",
      "dev": true,
      "requires": {
        "minimist": "~0.0.1",
        "wordwrap": "~0.0.2"
      }
    },
    "optionator": {
      "version": "0.8.2",
      "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.8.2.tgz",
      "integrity": "sha1-NkxeQJ0/TWMB1sC0wFu6UBgK62Q=",
      "dev": true,
      "requires": {
        "deep-is": "~0.1.3",
        "fast-levenshtein": "~2.0.4",
        "levn": "~0.3.0",
        "prelude-ls": "~1.1.2",
        "type-check": "~0.3.2",
        "wordwrap": "~1.0.0"
      },
      "dependencies": {
        "wordwrap": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/wordwrap/-/wordwrap-1.0.0.tgz",
          "integrity": "sha1-J1hIEIkUVqQXHI0CJkQa3pDLyus=",
          "dev": true
        }
      }
    },
    "parse5": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/parse5/-/parse5-4.0.0.tgz",
      "integrity": "sha512-VrZ7eOd3T1Fk4XWNXMgiGBK/z0MG48BWG2uQNU4I72fkQuKUTZpl+u9k+CxEG0twMVzSmXEEz12z5Fnw1jIQFA==",
      "dev": true
    },
    "path-is-absolute": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
      "integrity": "sha1-F0uSaHNVNP+8es5r9TpanhtcX18=",
      "dev": true
    },
    "path-parse": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.6.tgz",
      "integrity": "sha512-GSmOT2EbHrINBf9SR7CDELwlJ8AENk3Qn7OikK4nFYAu3Ote2+JYNVvkpAEQm3/TLNEJFD/xZJjzyxg3KBWOzw==",
      "dev": true
    },
    "performance-now": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz",
      "integrity": "sha1-Ywn04OX6kT7BxpMHrjZLSzd8nns=",
      "dev": true
    },
    "pn": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/pn/-/pn-1.1.0.tgz",
      "integrity": "sha512-2qHaIQr2VLRFoxe2nASzsV6ef4yOOH+Fi9FBOVH6cqeSgUnoyySPZkxzLuzd+RYOQTRpROA0ztTMqxROKSb/nA==",
      "dev": true
    },
    "prelude-ls": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.1.2.tgz",
      "integrity": "sha1-IZMqVJ9eUv/ZqCf1cOBL5iqX2lQ=",
      "dev": true
    },
    "progress": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/progress/-/progress-2.0.3.tgz",
      "integrity": "sha512-7PiHtLll5LdnKIMw100I+8xJXR5gW2QwWYkT6iJva0bXitZKa/XMrSbdmg3r2Xnaidz9Qumd0VPaMrZlF9V9sA==",
      "dev": true
    },
    "psl": {
      "version": "1.1.32",
      "resolved": "https://registry.npmjs.org/psl/-/psl-1.1.32.tgz",
      "integrity": "sha512-MHACAkHpihU/REGGPLj4sEfc/XKW2bheigvHO1dUqjaKigMp1C8+WLQYRGgeKFMsw5PMfegZcaN8IDXK/cD0+g==",
      "dev": true
    },
    "punycode": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz",
      "integrity": "sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A==",
      "dev": true
    },
    "qs": {
      "version": "6.5.2",
      "resolved": "https://registry.npmjs.org/qs/-/qs-6.5.2.tgz",
      "integrity": "sha512-N5ZAX4/LxJmF+7wN74pUD6qAh9/wnvdQcjq9TZjevvXzSUo7bfmw91saqMjzGS2xq91/odN2dW/WOl7qQHNDGA==",
      "dev": true
    },
    "rechoir": {
      "version": "0.6.2",
      "resolved": "https://registry.npmjs.org/rechoir/-/rechoir-0.6.2.tgz",
      "integrity": "sha1-hSBLVNuoLVdC4oyWdW70OvUOM4Q=",
      "dev": true,
      "requires": {
        "resolve": "^1.1.6"
      }
    },
    "request": {
      "version": "2.88.0",
      "resolved": "https://registry.npmjs.org/request/-/request-2.88.0.tgz",
      "integrity": "sha512-NAqBSrijGLZdM0WZNsInLJpkJokL72XYjUpnB0iwsRgxh7dB6COrHnTBNwN0E+lHDAJzu7kLAkDeY08z2/A0hg==",
      "dev": true,
      "requires": {
        "aws-sign2": "~0.7.0",
        "aws4": "^1.8.0",
        "caseless": "~0.12.0",
        "combined-stream": "~1.0.6",
        "extend": "~3.0.2",
        "forever-agent": "~0.6.1",
        "form-data": "~2.3.2",
        "har-validator": "~5.1.0",
        "http-signature": "~1.2.0",
        "is-typedarray": "~1.0.0",
        "isstream": "~0.1.2",
        "json-stringify-safe": "~5.0.1",
        "mime-types": "~2.1.19",
        "oauth-sign": "~0.9.0",
        "performance-now": "^2.1.0",
        "qs": "~6.5.2",
        "safe-buffer": "^5.1.2",
        "tough-cookie": "~2.4.3",
        "tunnel-agent": "^0.6.0",
        "uuid": "^3.3.2"
      },
      "dependencies": {
        "punycode": {
          "version": "1.4.1",
          "resolved": "https://registry.npmjs.org/punycode/-/punycode-1.4.1.tgz",
          "integrity": "sha1-wNWmOycYgArY4esPpSachN1BhF4=",
          "dev": true
        },
        "tough-cookie": {
          "version": "2.4.3",
          "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.4.3.tgz",
          "integrity": "sha512-Q5srk/4vDM54WJsJio3XNn6K2sCG+CQ8G5Wz6bZhRZoAe/+TxjWB/GlFAnYEbkYVlON9FMk/fE3h2RLpPXo4lQ==",
          "dev": true,
          "requires": {
            "psl": "^1.1.24",
            "punycode": "^1.4.1"
          }
        }
      }
    },
    "request-promise-core": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/request-promise-core/-/request-promise-core-1.1.2.tgz",
      "integrity": "sha512-UHYyq1MO8GsefGEt7EprS8UrXsm1TxEvFUX1IMTuSLU2Rh7fTIdFtl8xD7JiEYiWU2dl+NYAjCTksTehQUxPag==",
      "dev": true,
      "requires": {
        "lodash": "^4.17.11"
      }
    },
    "request-promise-native": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/request-promise-native/-/request-promise-native-1.0.7.tgz",
      "integrity": "sha512-rIMnbBdgNViL37nZ1b3L/VfPOpSi0TqVDQPAvO6U14lMzOLrt5nilxCQqtDKhZeDiW0/hkCXGoQjhgJd/tCh6w==",
      "dev": true,
      "requires": {
        "request-promise-core": "1.1.2",
        "stealthy-require": "^1.1.1",
        "tough-cookie": "^2.3.3"
      }
    },
    "resolve": {
      "version": "1.11.0",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.11.0.tgz",
      "integrity": "sha512-WL2pBDjqT6pGUNSUzMw00o4T7If+z4H2x3Gz893WoUQ5KW8Vr9txp00ykiP16VBaZF5+j/OcXJHZ9+PCvdiDKw==",
      "dev": true,
      "requires": {
        "path-parse": "^1.0.6"
      }
    },
    "safe-buffer": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
      "dev": true
    },
    "safer-buffer": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==",
      "dev": true
    },
    "sax": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/sax/-/sax-1.2.4.tgz",
      "integrity": "sha512-NqVDv9TpANUjFm0N8uM5GxL36UgKi9/atZw+x7YFnQ8ckwFGKrl4xX4yWtrey3UJm5nP1kUbnYgLopqWNSRhWw==",
      "dev": true
    },
    "seed-random": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/seed-random/-/seed-random-2.2.0.tgz",
      "integrity": "sha1-KpsZ4lCoFwmSMaW5mk2vgLf77VQ=",
      "dev": true
    },
    "shelljs": {
      "version": "0.8.3",
      "resolved": "https://registry.npmjs.org/shelljs/-/shelljs-0.8.3.tgz",
      "integrity": "sha512-fc0BKlAWiLpwZljmOvAOTE/gXawtCoNrP5oaY7KIaQbbyHeQVg01pSEuEGvGh3HEdBU4baCD7wQBwADmM/7f7A==",
      "dev": true,
      "requires": {
        "glob": "^7.0.0",
        "interpret": "^1.0.0",
        "rechoir": "^0.6.2"
      }
    },
    "source-map": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
      "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
      "dev": true
    },
    "source-map-support": {
      "version": "0.5.12",
      "resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.12.tgz",
      "integrity": "sha512-4h2Pbvyy15EE02G+JOZpUCmqWJuqrs+sEkzewTm++BPi7Hvn/HwcqLAcNxYAyI0x13CpPPn+kMjl+hplXMHITQ==",
      "dev": true,
      "requires": {
        "buffer-from": "^1.0.0",
        "source-map": "^0.6.0"
      }
    },
    "sshpk": {
      "version": "1.16.1",
      "resolved": "https://registry.npmjs.org/sshpk/-/sshpk-1.16.1.tgz",
      "integrity": "sha512-HXXqVUq7+pcKeLqqZj6mHFUMvXtOJt1uoUx09pFW6011inTMxqI8BA8PM95myrIyyKwdnzjdFjLiE6KBPVtJIg==",
      "dev": true,
      "requires": {
        "asn1": "~0.2.3",
        "assert-plus": "^1.0.0",
        "bcrypt-pbkdf": "^1.0.0",
        "dashdash": "^1.12.0",
        "ecc-jsbn": "~0.1.1",
        "getpass": "^0.1.1",
        "jsbn": "~0.1.0",
        "safer-buffer": "^2.0.2",
        "tweetnacl": "~0.14.0"
      }
    },
    "stealthy-require": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/stealthy-require/-/stealthy-require-1.1.1.tgz",
      "integrity": "sha1-NbCYdbT/SfJqd35QmzCQoyJr8ks=",
      "dev": true
    },
    "supports-color": {
      "version": "5.5.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
      "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
      "dev": true,
      "requires": {
        "has-flag": "^3.0.0"
      }
    },
    "symbol-tree": {
      "version": "3.2.4",
      "resolved": "https://registry.npmjs.org/symbol-tree/-/symbol-tree-3.2.4.tgz",
      "integrity": "sha512-9QNk5KwDF+Bvz+PyObkmSYjI5ksVUYtjW7AU22r2NKcfLJcXp96hkDWU3+XndOsUb+AQ9QhfzfCT2O+CNWT5Tw==",
      "dev": true
    },
    "tiny-emitter": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/tiny-emitter/-/tiny-emitter-2.1.0.tgz",
      "integrity": "sha512-NB6Dk1A9xgQPMoGqC5CVXn123gWyte215ONT5Pp5a0yt4nlEoO1ZWeCwpncaekPHXO60i47ihFnZPiRPjRMq4Q==",
      "dev": true
    },
    "tough-cookie": {
      "version": "2.5.0",
      "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.5.0.tgz",
      "integrity": "sha512-nlLsUzgm1kfLXSXfRZMc1KLAugd4hqJHDTvc2hDIwS3mZAfMEuMbc03SujMF+GEcpaX/qboeycw6iO8JwVv2+g==",
      "dev": true,
      "requires": {
        "psl": "^1.1.28",
        "punycode": "^2.1.1"
      }
    },
    "tr46": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/tr46/-/tr46-1.0.1.tgz",
      "integrity": "sha1-qLE/1r/SSJUZZ0zN5VujaTtwbQk=",
      "dev": true,
      "requires": {
        "punycode": "^2.1.0"
      }
    },
    "ts-node": {
      "version": "8.2.0",
      "resolved": "https://registry.npmjs.org/ts-node/-/ts-node-8.2.0.tgz",
      "integrity": "sha512-m8XQwUurkbYqXrKqr3WHCW310utRNvV5OnRVeISeea7LoCWVcdfeB/Ntl8JYWFh+WRoUAdBgESrzKochQt7sMw==",
      "dev": true,
      "requires": {
        "arg": "^4.1.0",
        "diff": "^4.0.1",
        "make-error": "^1.1.1",
        "source-map-support": "^0.5.6",
        "yn": "^3.0.0"
      }
    },
    "tunnel-agent": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz",
      "integrity": "sha1-J6XeoGs2sEoKmWZ3SykIaPD8QP0=",
      "dev": true,
      "requires": {
        "safe-buffer": "^5.0.1"
      }
    },
    "turndown": {
      "version": "5.0.3",
      "resolved": "https://registry.npmjs.org/turndown/-/turndown-5.0.3.tgz",
      "integrity": "sha512-popfGXEiedpq6F5saRIAThKxq/bbEPVFnsDnUdjaDGIre9f3/OL9Yi/yPbPcZ7RYUDpekghr666bBfZPrwNnhQ==",
      "dev": true,
      "requires": {
        "jsdom": "^11.9.0"
      }
    },
    "tweetnacl": {
      "version": "0.14.5",
      "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz",
      "integrity": "sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q=",
      "dev": true
    },
    "type-check": {
      "version": "0.3.2",
      "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.3.2.tgz",
      "integrity": "sha1-WITKtRLPHTVeP7eE8wgEsrUg23I=",
      "dev": true,
      "requires": {
        "prelude-ls": "~1.1.2"
      }
    },
    "typed-function": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/typed-function/-/typed-function-1.1.0.tgz",
      "integrity": "sha512-TuQzwiT4DDg19beHam3E66oRXhyqlyfgjHB/5fcvsRXbfmWPJfto9B4a0TBdTrQAPGlGmXh/k7iUI+WsObgORA==",
      "dev": true
    },
    "typedoc": {
      "version": "0.14.2",
      "resolved": "https://registry.npmjs.org/typedoc/-/typedoc-0.14.2.tgz",
      "integrity": "sha512-aEbgJXV8/KqaVhcedT7xG6d2r+mOvB5ep3eIz1KuB5sc4fDYXcepEEMdU7XSqLFO5hVPu0nllHi1QxX2h/QlpQ==",
      "dev": true,
      "requires": {
        "@types/fs-extra": "^5.0.3",
        "@types/handlebars": "^4.0.38",
        "@types/highlight.js": "^9.12.3",
        "@types/lodash": "^4.14.110",
        "@types/marked": "^0.4.0",
        "@types/minimatch": "3.0.3",
        "@types/shelljs": "^0.8.0",
        "fs-extra": "^7.0.0",
        "handlebars": "^4.0.6",
        "highlight.js": "^9.13.1",
        "lodash": "^4.17.10",
        "marked": "^0.4.0",
        "minimatch": "^3.0.0",
        "progress": "^2.0.0",
        "shelljs": "^0.8.2",
        "typedoc-default-themes": "^0.5.0",
        "typescript": "3.2.x"
      }
    },
    "typedoc-default-themes": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/typedoc-default-themes/-/typedoc-default-themes-0.5.0.tgz",
      "integrity": "sha1-bcJDPnjti+qOiHo6zeLzF4W9Yic=",
      "dev": true
    },
    "typedoc-plugin-markdown": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/typedoc-plugin-markdown/-/typedoc-plugin-markdown-1.2.1.tgz",
      "integrity": "sha512-zOjoCaCWvgVca920IDSytkGQd1sFSztNKGGWWcYq4JWqmeklOWvYy5QODIeTeAcUeYsP9FZ5Ov7BU8WJk5Ypig==",
      "dev": true,
      "requires": {
        "turndown": "^5.0.3"
      }
    },
    "typescript": {
      "version": "3.2.4",
      "resolved": "https://registry.npmjs.org/typescript/-/typescript-3.2.4.tgz",
      "integrity": "sha512-0RNDbSdEokBeEAkgNbxJ+BLwSManFy9TeXz8uW+48j/xhEXv1ePME60olyzw2XzUqUBNAYFeJadIqAgNqIACwg==",
      "dev": true
    },
    "uglify-js": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/uglify-js/-/uglify-js-3.6.0.tgz",
      "integrity": "sha512-W+jrUHJr3DXKhrsS7NUVxn3zqMOFn0hL/Ei6v0anCIMoKC93TjcflTagwIHLW7SfMFfiQuktQyFVCFHGUE0+yg==",
      "dev": true,
      "optional": true,
      "requires": {
        "commander": "~2.20.0",
        "source-map": "~0.6.1"
      }
    },
    "universalify": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/universalify/-/universalify-0.1.2.tgz",
      "integrity": "sha512-rBJeI5CXAlmy1pV+617WB9J63U6XcazHHF2f2dbJix4XzpUF0RS3Zbj0FGIOCAva5P/d/GBOYaACQ1w+0azUkg==",
      "dev": true
    },
    "uri-js": {
      "version": "4.2.2",
      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.2.2.tgz",
      "integrity": "sha512-KY9Frmirql91X2Qgjry0Wd4Y+YTdrdZheS8TFwvkbLWf/G5KNJDCh6pKL5OZctEW4+0Baa5idK2ZQuELRwPznQ==",
      "dev": true,
      "requires": {
        "punycode": "^2.1.0"
      }
    },
    "uuid": {
      "version": "3.3.2",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-3.3.2.tgz",
      "integrity": "sha512-yXJmeNaw3DnnKAOKJE51sL/ZaYfWJRl1pK9dr19YFCu0ObS231AB1/LbqTKRAQ5kw8A90rA6fr4riOUpTZvQZA==",
      "dev": true
    },
    "verror": {
      "version": "1.10.0",
      "resolved": "https://registry.npmjs.org/verror/-/verror-1.10.0.tgz",
      "integrity": "sha1-OhBcoXBTr1XW4nDB+CiGguGNpAA=",
      "dev": true,
      "requires": {
        "assert-plus": "^1.0.0",
        "core-util-is": "1.0.2",
        "extsprintf": "^1.2.0"
      }
    },
    "w3c-hr-time": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/w3c-hr-time/-/w3c-hr-time-1.0.1.tgz",
      "integrity": "sha1-gqwr/2PZUOqeMYmlimViX+3xkEU=",
      "dev": true,
      "requires": {
        "browser-process-hrtime": "^0.1.2"
      }
    },
    "webidl-conversions": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-4.0.2.tgz",
      "integrity": "sha512-YQ+BmxuTgd6UXZW3+ICGfyqRyHXVlD5GtQr5+qjiNW7bF0cqrzX500HVXPBOvgXb5YnzDd+h0zqyv61KUD7+Sg==",
      "dev": true
    },
    "whatwg-encoding": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/whatwg-encoding/-/whatwg-encoding-1.0.5.tgz",
      "integrity": "sha512-b5lim54JOPN9HtzvK9HFXvBma/rnfFeqsic0hSpjtDbVxR3dJKLc+KB4V6GgiGOvl7CY/KNh8rxSo9DKQrnUEw==",
      "dev": true,
      "requires": {
        "iconv-lite": "0.4.24"
      }
    },
    "whatwg-mimetype": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/whatwg-mimetype/-/whatwg-mimetype-2.3.0.tgz",
      "integrity": "sha512-M4yMwr6mAnQz76TbJm914+gPpB/nCwvZbJU28cUD6dR004SAxDLOOSUaB1JDRqLtaOV/vi0IC5lEAGFgrjGv/g==",
      "dev": true
    },
    "whatwg-url": {
      "version": "6.5.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-6.5.0.tgz",
      "integrity": "sha512-rhRZRqx/TLJQWUpQ6bmrt2UV4f0HCQ463yQuONJqC6fO2VoEb1pTYddbe59SkYq87aoM5A3bdhMZiUiVws+fzQ==",
      "dev": true,
      "requires": {
        "lodash.sortby": "^4.7.0",
        "tr46": "^1.0.1",
        "webidl-conversions": "^4.0.2"
      }
    },
    "wordwrap": {
      "version": "0.0.3",
      "resolved": "https://registry.npmjs.org/wordwrap/-/wordwrap-0.0.3.tgz",
      "integrity": "sha1-o9XabNXAvAAI03I0u68b7WMFkQc=",
      "dev": true
    },
    "wrappy": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
      "integrity": "sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8=",
      "dev": true
    },
    "ws": {
      "version": "5.2.2",
      "resolved": "https://registry.npmjs.org/ws/-/ws-5.2.2.tgz",
      "integrity": "sha512-jaHFD6PFv6UgoIVda6qZllptQsMlDEJkTQcybzzXDYM1XO9Y8em691FGMPmM46WGyLU4z9KMgQN+qrux/nhlHA==",
      "dev": true,
      "requires": {
        "async-limiter": "~1.0.0"
      }
    },
    "xml-name-validator": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/xml-name-validator/-/xml-name-validator-3.0.0.tgz",
      "integrity": "sha512-A5CUptxDsvxKJEU3yO6DuWBSJz/qizqzJKOMIfUJHETbBw/sFaDxgd6fxm1ewUaM0jZ444Fc5vC5ROYurg/4Pw==",
      "dev": true
    },
    "yargs-parser": {
      "version": "13.1.1",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-13.1.1.tgz",
      "integrity": "sha512-oVAVsHz6uFrg3XQheFII8ESO2ssAf9luWuAd6Wexsu4F3OtIW0o8IribPXYrD4WC24LWtPrJlGy87y5udK+dxQ==",
      "dev": true,
      "requires": {
        "camelcase": "^5.0.0",
        "decamelize": "^1.2.0"
      }
    },
    "yn": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/yn/-/yn-3.1.0.tgz",
      "integrity": "sha512-kKfnnYkbTfrAdd0xICNFw7Atm8nKpLcLv9AZGEt+kczL/WQVai4e2V6ZN8U/O+iI6WrNuJjNNOyu4zfhl9D3Hg==",
      "dev": true
    }
  }
}

'''
'''--- package.json ---
{
  "name": "near-runtime-ts",
  "version": "0.0.2",
  "description": "Near smart contract runtime library for typescript",
  "main": "index.js",
  "scripts": {
    "doc": "rm -rf apidoc; mkdir apidoc; node_modules/.bin/typedoc near.ts --theme markdown --ignoreCompilerErrors --excludePrivate --excludeProtected --excludeExternals --out apidoc/",
    "test": "asp --types; asp"
  },
  "author": "",
  "license": "MIT",
  "dependencies": {},
  "devDependencies": {
    "as-pect": "github:jtenner/as-pect",
    "bignum": "MaxGraey/bignum.wasm",
    "typedoc": "^0.14.2",
    "typedoc-plugin-markdown": "^1.2.1"
  }
}

'''