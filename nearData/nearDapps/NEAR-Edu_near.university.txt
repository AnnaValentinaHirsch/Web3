*GitHub Repository "NEAR-Edu/near.university"*

'''--- .eslintrc.js ---
module.exports = {
  root: true,
  env: {
    node: true
  },
  'extends': [
    'plugin:vue/vue3-essential',
    'eslint:recommended'
  ],
  parserOptions: {
    parser: 'babel-eslint'
  },
  rules: {
    'no-console': process.env.NODE_ENV === 'production' ? 'warn' : 'off',
    'no-debugger': process.env.NODE_ENV === 'production' ? 'warn' : 'off'
  }
}

'''
'''--- README.md ---
# near.university

The one place where you can find the fastest way to learn about NEAR Protocol

## Project setup
```
yarn install
```

### Compiles and hot-reloads for development
```
yarn serve
```

### Compiles and minifies for production
```
yarn build
```

### Lints and fixes files
```
yarn lint
```

### Customize configuration
See [Configuration Reference](https://cli.vuejs.org/config/).

'''
'''--- babel.config.js ---
module.exports = {
  presets: [
    '@vue/cli-plugin-babel/preset'
  ]
}

'''
'''--- package.json ---
{
  "name": "near-university",
  "version": "0.1.0",
  "scripts": {
    "serve": "vue-cli-service serve",
    "build": "vue-cli-service build",
    "lint": "vue-cli-service lint"
  },
  "dependencies": {
    "@headlessui/vue": "^1.2.0",
    "@heroicons/vue": "^1.0.1",
    "@tailwindcss/forms": "^0.3.2",
    "@typeform/embed": "^1.10.0",
    "autoprefixer": "^9",
    "core-js": "^3.6.5",
    "postcss": "^7",
    "tailwindcss": "npm:@tailwindcss/postcss7-compat",
    "typed.js": "^2.0.12",
    "vue": "^3.0.0",
    "vue-router": "^4.0.0-0"
  },
  "devDependencies": {
    "@vue/cli-plugin-babel": "~4.5.0",
    "@vue/cli-plugin-eslint": "~4.5.0",
    "@vue/cli-plugin-router": "~4.5.0",
    "@vue/cli-service": "~4.5.0",
    "@vue/compiler-sfc": "^3.0.0",
    "babel-eslint": "^10.1.0",
    "eslint": "^6.7.2",
    "eslint-plugin-vue": "^7.0.0"
  }
}

'''
'''--- postcss.config.js ---
module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}

'''
'''--- public/index.html ---
<!DOCTYPE html>
<html lang="">
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width,initial-scale=1.0" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="icon" href="<%= BASE_URL %>favicon.ico" />
    <link rel="manifest" href="/site.webmanifest" />
    <title>NEAR University</title>
  </head>
  <body>
    <noscript>
      <strong>We're sorry but NEAR University doesn't work properly without JavaScript enabled. Please enable it to continue.</strong>
    </noscript>
    <div id="app"></div>
    <!-- built files will be auto injected -->
  </body>
</html>

'''
'''--- src/main.js ---
import { createApp } from 'vue'
import App from './App.vue'
import router from './router'
import 'tailwindcss/tailwind.css'

createApp(App)
  .use(router)
  .mount('#app')

'''
'''--- src/router/index.js ---
import { createRouter, createWebHistory } from 'vue-router';
import HomePage from '../pages/HomePage.vue';

const routes = [
  {
    path: '/',
    name: 'Home',
    component: HomePage
  },
  {
    path: '/earn',
    name: 'Earn',
    // route level code-splitting
    // this generates a separate chunk (earn.[hash].js) for this route
    // which is lazy-loaded when the route is visited.
    component: () => import(/* webpackChunkName: "earn" */ '../pages/EarnPage.vue')
  },
  {
    path: '/learn',
    name: 'Learn',
    component: () => import('../pages/LearnPage.vue')
  },
  {
    path: '/connect',
    name: 'Connect',
    component: () => import('../pages/ConnectPage.vue')
  },
  {
    path: '/certify',
    name: 'Certify',
    component: () => import('../pages/CertifyPage.vue')
  },
  {
    path: '/dashboard',
    name: 'Dashboard',
    component: () => import('../pages/DashboardPage.vue')
  },
  {
    path: '/signout',
    name: 'Signout',
    component: () => import('../pages/DashboardPage.vue')
  },
  {
    path: '/near-website',
    beforeEnter() {
      window.open('https://near.org', '_blank');
    }
  },
  {
    path: '/near-docs',
    beforeEnter() {
      window.open('https://docs.near.org', '_blank');
    }
  },
  {
    path: '/:catchAll(.*)',
    component: () => import('../pages/NotFound.vue')
  }
];

const router = createRouter({
  history: createWebHistory(process.env.BASE_URL),
  routes
});

export default router;

'''
'''--- tailwind.config.js ---
const colors = require('tailwindcss/colors');
const defaultTheme = require('tailwindcss/defaultTheme');

module.exports = {
  purge: {
    content: ['./index.html', './src/**/*.{vue,js,ts,jsx,tsx}'],
    options: {
      safelist: [/bg-(gray|red|yellow|green|blue|indigo|purple|pink)-[3-7]00/]
    }
  },
  darkMode: false, // or 'media' or 'class'
  theme: {
    screens: {
      xs: '475px',
      ...defaultTheme.screens
    },
    extend: {
      fontFamily: {
        sans: ['Inter var', 'Source code pro', ...defaultTheme.fontFamily.sans]
      },
      colors: {
        'near-black': '#000000',
        'near-white': '#FFFFFF',
        'near-gray': '#F2F2F2',
        'near-red': {
          light: '#FFADB0',
          medium: '#FF8589',
          DEFAULT: '#FF585D'
        },
        'near-orange': {
          light: '#FFD9AD',
          medium: '#FFC685',
          DEFAULT: '#FFB259'
        },
        'near-yellow': {
          light: '#F9F8C8',
          medium: '#F5F3A3',
          DEFAULT: '#F0EC74'
        },
        'near-green': {
          light: '#99FFE2',
          medium: '#00F5AF',
          DEFAULT: '#00C08B'
        },
        'near-blue': {
          light: '#99F1FF',
          medium: '#0ADEFF',
          DEFAULT: '#00C1DE'
        },
        'near-royal': {
          light: '#99D1FF',
          medium: '#0A91FF',
          DEFAULT: '#0072CE'
        },
        'blue-gray': colors.blueGray,
        'light-blue': colors.lightBlue,
        teal: colors.teal,
        rose: colors.rose
      }
    }
  },
  variants: {
    extend: {}
  },
  plugins: [require('@tailwindcss/forms')]
};

'''