*GitHub Repository "nkemjikaobi/voting-app-near-protocol-frontend"*

'''--- .eslintrc.json ---
{
  "extends": "next/core-web-vitals"
}

'''
'''--- README.md ---
### Voting App Near Protocol Frontend 

Live URL => https://voting-app-near-protocol-frontend.vercel.app/

DEMO PRESENTATION => https://www.loom.com/share/2080505659ad49b2aa63c05901563740

## Getting Started

First, run the development server:

```bash
npm install && npm run dev
# or
yarn && yarn dev
```

Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.

 ### Overview

 - This is a voting decentralised application whereby users can create elections, add contestants to a particular election and also vote for the contestant of their choice.

- This project is made up of two repositories as shown above. One houses the smart contract while the other houses the front end. 

- The smart contract is built with Assembly Script. It made use of <b>Persistent Map</b> and ,<b>Persistent Deque</b> to store information on-chain. Unit tests were also written to ensure all our functions work as expected.

- The front end was bult with NextJs and Typescript. Context API was used to manage the application-level state. Tailwind CSS was used for styling.

- Upon the arrival of the website, you are required to sign in, if you have an active login session, the sign-in button changes to the dashboard. Once you are in your dashboard, you can view all your elections if any have been created.

- When you create an election, you can click on the election card to view contestants and also add contestants to that election. Once you add contestants, you can begin voting.

- P.S:  The application and smart contract can be modified further and made better as it was more like an MVP due to time constraints.
'''
'''--- config.js ---
import { keyStores } from 'near-api-js';

/**
 * Function that returns a NEAR connection configuration object based on the given environment.
 *
 * @param  {string} environment='testnet'
 * @return {object}
 */
export const getConfig = (environment = 'testnet') => {
	switch (environment) {
		case 'mainnet':
			return {
				networkId: 'mainnet',
				keyStore: new keyStores.BrowserLocalStorageKeyStore(),
				nodeUrl: 'https://rpc.mainnet.near.org',
				walletUrl: 'https://wallet.mainnet.near.org',
				helperUrl: 'https://helper.mainnet.near.org',
				explorerUrl: 'https://explorer.mainnet.near.org',
			};
		case 'betanet':
			return {
				networkId: 'betanet',
				keyStore: new keyStores.BrowserLocalStorageKeyStore(),
				nodeUrl: 'https://rpc.betanet.near.org',
				walletUrl: 'https://wallet.betanet.near.org',
				helperUrl: 'https://helper.betanet.near.org',
			};
		case 'testnet':
		default:
			return {
				networkId: 'testnet',
				keyStore: new keyStores.BrowserLocalStorageKeyStore(),
				nodeUrl: 'https://rpc.testnet.near.org',
				walletUrl: 'https://wallet.testnet.near.org',
				helperUrl: 'https://helper.testnet.near.org',
				explorerUrl: 'https://explorer.testnet.near.org',
			};
	}
};

'''
'''--- context/types.ts ---
export const CONNECT_TO_NEAR = 'CONNECT_TO_NEAR';
export const LOAD_CONTRACT = 'LOAD_CONTRACT';
export const GET_BALANCE = 'GET_BALANCE';
export const CHECK_IF_SIGNED_IN = 'CHECK_IF_SIGNED_IN';
export const LOGIN = 'LOGIN';
export const LOGOUT = 'LOGOUT';

export const GET_USER_ELECTIONS = 'GET_USER_ELECTIONS';
export const GET_ALL_ELECTIONS = 'GET_ALL_ELECTIONS';
export const CREATE_ELECTION = 'CREATE_ELECTION';
export const START_ELECTION = 'START_ELECTION';
export const END_ELECTION = 'END_ELECTION';
export const ADD_CONTESTANT = 'ADD_CONTESTANT';
export const VOTE = 'VOTE';
'''
'''--- context/voting/VotingContext.ts ---
import { createContext } from 'react';

//create interface later
const VotingContext = createContext<any>(null);

export default VotingContext;

'''
'''--- context/voting/VotingReducer.ts ---
import {
	CHECK_IF_SIGNED_IN,
	CONNECT_TO_NEAR,
	GET_ALL_ELECTIONS,
	GET_BALANCE,
	GET_USER_ELECTIONS,
	LOAD_CONTRACT,
	LOGOUT,
} from '../types';

const VotingReducer = (state: any, action: any) => {
	switch (action.type) {
		case CONNECT_TO_NEAR:
			return {
				...state,
				wallet: action.payload,
			};
		case LOAD_CONTRACT:
			return {
				...state,
				contract: action.payload,
			};
		case GET_BALANCE:
			return {
				...state,
				balance: action.payload,
			};
		case CHECK_IF_SIGNED_IN:
			return {
				...state,
				isSignedIn: action.payload,
			};
		case LOGOUT:
			return {
				...state,
				balance: '',
				isSignedIn: false,
			};
		case GET_USER_ELECTIONS:
			return {
				...state,
				userElections: action.payload,
			};
		case GET_ALL_ELECTIONS:
			return {
				...state,
				allElections: action.payload,
			};
		default:
			return state;
	}
};
export default VotingReducer;

'''
'''--- next-env.d.ts ---
/// <reference types="next" />
/// <reference types="next/image-types/global" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/basic-features/typescript for more information.

'''
'''--- next.config.js ---
/** @type {import('next').NextConfig} */
const nextConfig = {
  reactStrictMode: true,
}

module.exports = nextConfig

'''
'''--- package.json ---
{
  "name": "voting-app-near-protocol-frontend",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "@types/uuid": "^8.3.4",
    "near-api-js": "^0.45.1",
    "next": "12.1.6",
    "react": "18.2.0",
    "react-dom": "18.2.0",
    "react-hot-toast": "^2.2.0",
    "react-icons": "^4.4.0",
    "uuid": "^8.3.2"
  },
  "devDependencies": {
    "@types/node": "18.0.0",
    "@types/react": "18.0.14",
    "@types/react-dom": "18.0.5",
    "autoprefixer": "^10.4.7",
    "eslint": "8.18.0",
    "eslint-config-next": "12.1.6",
    "postcss": "^8.4.14",
    "tailwindcss": "^3.1.4",
    "typescript": "4.7.4"
  }
}

'''
'''--- pages/api/hello.ts ---
// Next.js API route support: https://nextjs.org/docs/api-routes/introduction
import type { NextApiRequest, NextApiResponse } from 'next'

type Data = {
  name: string
}

export default function handler(
  req: NextApiRequest,
  res: NextApiResponse<Data>
) {
  res.status(200).json({ name: 'John Doe' })
}

'''
'''--- postcss.config.js ---
module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}

'''
'''--- public/vercel.svg ---
<svg width="283" height="64" viewBox="0 0 283 64" fill="none" 
    xmlns="http://www.w3.org/2000/svg">
    <path d="M141.04 16c-11.04 0-19 7.2-19 18s8.96 18 20 18c6.67 0 12.55-2.64 16.19-7.09l-7.65-4.42c-2.02 2.21-5.09 3.5-8.54 3.5-4.79 0-8.86-2.5-10.37-6.5h28.02c.22-1.12.35-2.28.35-3.5 0-10.79-7.96-17.99-19-17.99zm-9.46 14.5c1.25-3.99 4.67-6.5 9.45-6.5 4.79 0 8.21 2.51 9.45 6.5h-18.9zM248.72 16c-11.04 0-19 7.2-19 18s8.96 18 20 18c6.67 0 12.55-2.64 16.19-7.09l-7.65-4.42c-2.02 2.21-5.09 3.5-8.54 3.5-4.79 0-8.86-2.5-10.37-6.5h28.02c.22-1.12.35-2.28.35-3.5 0-10.79-7.96-17.99-19-17.99zm-9.45 14.5c1.25-3.99 4.67-6.5 9.45-6.5 4.79 0 8.21 2.51 9.45 6.5h-18.9zM200.24 34c0 6 3.92 10 10 10 4.12 0 7.21-1.87 8.8-4.92l7.68 4.43c-3.18 5.3-9.14 8.49-16.48 8.49-11.05 0-19-7.2-19-18s7.96-18 19-18c7.34 0 13.29 3.19 16.48 8.49l-7.68 4.43c-1.59-3.05-4.68-4.92-8.8-4.92-6.07 0-10 4-10 10zm82.48-29v46h-9V5h9zM36.95 0L73.9 64H0L36.95 0zm92.38 5l-27.71 48L73.91 5H84.3l17.32 30 17.32-30h10.39zm58.91 12v9.69c-1-.29-2.06-.49-3.2-.49-5.81 0-10 4-10 10V51h-9V17h9v9.2c0-5.08 5.91-9.2 13.2-9.2z" fill="#000"/>
</svg>
'''
'''--- styles/CreateElection.module.css ---
.container {
	padding: 30px;
    background-color: black;
    border-radius: 0.5rem;
    color: white;
}
.close_icon_container {
    display: flex;
    justify-content: flex-end;
    align-items: center;
    cursor: pointer;
}
.labelContainer {
    display: block;
    font-weight: 700;
    font-size: 1rem;
    line-height: 1.5rem;
    margin-bottom: 0.5rem;
}
.inputClass {
    background-color: rgb(24 24 27 / var(--tw-bg-opacity));
    width: 100%;
    border-radius: 0.5rem;
    padding: 1.25rem;
    margin-bottom: 1rem;
    border: 1px solid rgb(168 162 158 / var(--tw-border-opacity));
}
.buttonClass {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 2.5rem;
    background-color: rgb(75 96 176 / var(--tw-bg-opacity));
    width: 12rem;
    padding: 0.75rem 1.25rem;
    font-size: 16px;
    border-radius: 00.5rem;
}
.buttonClass:hover {
    background-color: rgb(15 23 42 / var(--tw-bg-opacity));
}

'''
'''--- styles/Home.module.css ---
.container {
  padding: 0 2rem;
}

.main {
  min-height: 100vh;
  padding: 4rem 0;
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.footer {
  display: flex;
  flex: 1;
  padding: 2rem 0;
  border-top: 1px solid #eaeaea;
  justify-content: center;
  align-items: center;
}

.footer a {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-grow: 1;
}

.title a {
  color: #0070f3;
  text-decoration: none;
}

.title a:hover,
.title a:focus,
.title a:active {
  text-decoration: underline;
}

.title {
  margin: 0;
  line-height: 1.15;
  font-size: 4rem;
}

.title,
.description {
  text-align: center;
}

.description {
  margin: 4rem 0;
  line-height: 1.5;
  font-size: 1.5rem;
}

.code {
  background: #fafafa;
  border-radius: 5px;
  padding: 0.75rem;
  font-size: 1.1rem;
  font-family: Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono,
    Bitstream Vera Sans Mono, Courier New, monospace;
}

.grid {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-wrap: wrap;
  max-width: 800px;
}

.card {
  margin: 1rem;
  padding: 1.5rem;
  text-align: left;
  color: inherit;
  text-decoration: none;
  border: 1px solid #eaeaea;
  border-radius: 10px;
  transition: color 0.15s ease, border-color 0.15s ease;
  max-width: 300px;
}

.card:hover,
.card:focus,
.card:active {
  color: #0070f3;
  border-color: #0070f3;
}

.card h2 {
  margin: 0 0 1rem 0;
  font-size: 1.5rem;
}

.card p {
  margin: 0;
  font-size: 1.25rem;
  line-height: 1.5;
}

.logo {
  height: 1em;
  margin-left: 0.5rem;
}

@media (max-width: 600px) {
  .grid {
    width: 100%;
    flex-direction: column;
  }
}

'''
'''--- styles/globals.css ---
@tailwind base;
@tailwind components;
@tailwind utilities;
'''
'''--- tailwind.config.js ---
module.exports = {
	content: [
		'./pages/**/*.{js,ts,jsx,tsx}',
		'./components/**/*.{js,ts,jsx,tsx}',
	],
	theme: {
		extend: {},
	},
	plugins: [],
};

'''
'''--- tsconfig.json ---
{
  "compilerOptions": {
    "target": "es5",
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "forceConsistentCasingInFileNames": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", "context/voting/VotingState.jsx", "pages/index.jsx", "pages/index.jsx"],
  "exclude": ["node_modules"]
}

'''