*GitHub Repository "hiba-machfej/near-guest-book-vue-ui"*

'''--- .eslintrc.js ---
module.exports = {
  root: true,
  env: {
    node: true,
  },
  extends: ["plugin:vue/vue3-essential", "eslint:recommended", "@vue/prettier"],
  parserOptions: {
    parser: "babel-eslint",
  },
  rules: {
    "no-console": process.env.NODE_ENV === "production" ? "warn" : "off",
    "no-debugger": process.env.NODE_ENV === "production" ? "warn" : "off",
  },
};

'''
'''--- README.md ---
# Guest Book

Sign in with <a href="https://near.org/">NEAR</a> and add a message to the guest book! 
<br>A starter app built with an AssemblyScript backend and a Vue frontend. This Frontend is created for learning purposes. 
 
### Check out the smart contract <a href="https://github.com/near-examples/guest-book">here</a>. 
The Guest Book smart contract is developed by the NEAR Team. 

### ⚠️ Warning
Any content produced by NEAR, or developer resources that NEAR provides, are for educational and inspirational purposes only. NEAR does not encourage, induce or sanction the deployment of any such applications in violation of applicable laws or regulations.

# Check out the project <a href="https://near-guestbook.onrender.com/">here</a>.

![screenshot-near-guestbook onrender com-2021 07 15-14_50_24](https://user-images.githubusercontent.com/58190902/125783494-b1f3896d-b58d-4bd0-a854-e6417264a4bc.png)

## Project setup
```
yarn install
```

### Compiles and hot-reloads for development
```
yarn serve
```

### Compiles and minifies for production
```
yarn build
```

### Lints and fixes files
```
yarn lint
```

### Customize configuration
See [Configuration Reference](https://cli.vuejs.org/config/).

'''
'''--- babel.config.js ---
module.exports = {
  presets: ["@vue/cli-plugin-babel/preset"],
};

'''
'''--- package.json ---
{
  "name": "near-guestbook",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "serve": "vue-cli-service serve",
    "build": "vue-cli-service build",
    "lint": "vue-cli-service lint"
  },
  "dependencies": {
    "@headlessui/vue": "^1.1.1",
    "@heroicons/vue": "^1.0.1",
    "big-js": "^3.1.3",
    "core-js": "^3.6.5",
    "near-api-js": "^0.41.0",
    "vue": "^3.0.0"
  },
  "devDependencies": {
    "@vue/cli-plugin-babel": "~4.5.0",
    "@vue/cli-plugin-eslint": "~4.5.0",
    "@vue/cli-service": "~4.5.0",
    "@vue/compiler-sfc": "^3.0.0",
    "@vue/eslint-config-prettier": "^6.0.0",
    "autoprefixer": "^9",
    "babel-eslint": "^10.1.0",
    "eslint": "^6.7.2",
    "eslint-plugin-prettier": "^3.3.1",
    "eslint-plugin-vue": "^7.0.0",
    "postcss": "^7",
    "prettier": "^2.2.1",
    "tailwindcss": "npm:@tailwindcss/postcss7-compat"
  }
}

'''
'''--- postcss.config.js ---
module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}

'''
'''--- public/index.html ---
<!DOCTYPE html>
<html lang="">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <link rel="icon" href="<%= BASE_URL %>favicon.ico">
    <title><%= htmlWebpackPlugin.options.title %></title>
  </head>
  <body>
    <noscript>
      <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled. Please enable it to continue.</strong>
    </noscript>
    <div id="app"></div>
    <!-- built files will be auto injected -->
  </body>
</html>

'''
'''--- src/assets/logo.svg ---
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 288 288"><defs><style>.cls-1{fill:#fff;}</style></defs><g id="Layer_1" data-name="Layer 1"><path class="cls-1" d="M187.58,79.81l-30.1,44.69a3.2,3.2,0,0,0,4.75,4.2L191.86,103a1.2,1.2,0,0,1,2,.91v80.46a1.2,1.2,0,0,1-2.12.77L102.18,77.93A15.35,15.35,0,0,0,90.47,72.5H87.34A15.34,15.34,0,0,0,72,87.84V201.16A15.34,15.34,0,0,0,87.34,216.5h0a15.35,15.35,0,0,0,13.08-7.31l30.1-44.69a3.2,3.2,0,0,0-4.75-4.2L96.14,186a1.2,1.2,0,0,1-2-.91V104.61a1.2,1.2,0,0,1,2.12-.77l89.55,107.23a15.35,15.35,0,0,0,11.71,5.43h3.13A15.34,15.34,0,0,0,216,201.16V87.84A15.34,15.34,0,0,0,200.66,72.5h0A15.35,15.35,0,0,0,187.58,79.81Z"/></g></svg>
'''
'''--- src/assets/tail-spin.svg ---
<!-- By Sam Herbert (@sherb), for everyone. More @ http://goo.gl/7AJzbL -->
<svg width="38" height="38" viewBox="0 0 38 38" xmlns="http://www.w3.org/2000/svg">
    <defs>
        <linearGradient x1="8.042%" y1="0%" x2="65.682%" y2="23.865%" id="a">
            <stop stop-color="#fff" stop-opacity="0" offset="0%"/>
            <stop stop-color="#fff" stop-opacity=".631" offset="63.146%"/>
            <stop stop-color="#fff" offset="100%"/>
        </linearGradient>
    </defs>
    <g fill="none" fill-rule="evenodd">
        <g transform="translate(1 1)">
            <path d="M36 18c0-9.94-8.06-18-18-18" id="Oval-2" stroke="url(#a)" stroke-width="2">
                <animateTransform
                    attributeName="transform"
                    type="rotate"
                    from="0 18 18"
                    to="360 18 18"
                    dur="0.9s"
                    repeatCount="indefinite" />
            </path>
            <circle fill="#fff" cx="36" cy="18" r="1">
                <animateTransform
                    attributeName="transform"
                    type="rotate"
                    from="0 18 18"
                    to="360 18 18"
                    dur="0.9s"
                    repeatCount="indefinite" />
            </circle>
        </g>
    </g>
</svg>

'''
'''--- src/composables/near.js ---
import { ref, onMounted } from "vue";
import { getMessages, addMessage } from "../services/near";

// There is only one reactive piece of data in this application (messages)
// this hook gets the array of messages and returns:
// 1. the array of messages (getter)
// 2. a function to add messages to the array of messages (setter)
export const useMessages = () => {
  // messages starts as an empty array
  const messages = ref([]);
  const isLoading = ref(false);

  // when the component first mounts get messages from the blockchain
  onMounted(async () => {
    messages.value = await getMessages();
  });

  // create a function that allows adding a message to the blockchain
  const handleAddMessage = async ({ text, donation }) => {
    isLoading.value = true;

    await addMessage({
      text,
      donation,
    });

    messages.value = await getMessages();
    isLoading.value = false;
  };

  return {
    messages,
    addMessage: handleAddMessage,
    isLoading,
  };
};

'''
'''--- src/main.js ---
import { createApp } from 'vue'
import App from './App.vue'
import 'tailwindcss/tailwind.css'

createApp(App).mount('#app')

'''
'''--- src/services/near.js ---
import { keyStores, Near, utils, WalletConnection } from "near-api-js";

export const CONTRACT_ID = "guest-book.testnet";

// use new NEAR here to avoid needing async/await
export const near = new Near({
  networkId: "testnet",
  keyStore: new keyStores.BrowserLocalStorageKeyStore(),
  nodeUrl: "https://rpc.testnet.near.org",
  walletUrl: "https://wallet.testnet.near.org",
});

// can now create a new WalletConnection with the created Near object
export const wallet = new WalletConnection(near, "guest-book");

// a service to get messages from the blockchain
export const getMessages = () => {
  return wallet.account().viewFunction(CONTRACT_ID, "getMessages", {});
};

// a service to add a message to the blockchain
export const addMessage = ({ text, donation = 0 }) => {
  return wallet.account().functionCall({
    contractId: CONTRACT_ID,
    methodName: "addMessage",
    args: { text },
    attachedDeposit: utils.format.parseNearAmount(donation),
  });
};

'''
'''--- tailwind.config.js ---
const defaultTheme = require("tailwindcss/defaultTheme");

module.exports = {
  purge: ["./index.html", "./src/**/*.{vue,js,ts,jsx,tsx}"],
  darkMode: false, // or 'media' or 'class'
  theme: {
    fontFamily: {
      sans: ["Inter var", "Source code pro", ...defaultTheme.fontFamily.sans],
    },
    colors: {
      "near-black": "#000000",
      "near-white": "#FFFFFF",
      "near-gray": "#F2F2F2",
      "near-red": {
        light: "#FFADB0",
        medium: "#FF8589",
        DEFAULT: "#FF585D",
      },
      "near-orange": {
        light: "#FFD9AD",
        medium: "#FFC685",
        DEFAULT: "#FFB259",
      },
      "near-yellow": {
        light: "#F9F8C8",
        medium: "#F5F3A3",
        DEFAULT: "#F0EC74",
      },
      "near-green": {
        light: "#99FFE2",
        medium: "#00F5AF",
        DEFAULT: "#00C08B",
      },
      "near-blue": {
        light: "#99F1FF",
        medium: "#0ADEFF",
        DEFAULT: "#00C1DE",
      },
      "near-royal": {
        light: "#99D1FF",
        medium: "#0A91FF",
        DEFAULT: "#0072CE",
      },
    },
  },
  variants: {
    extend: {},
  },
  plugins: [],
};

'''