*GitHub Repository "HorseXInsectCoder/near_rs_contract"*

'''--- .idea/modules.xml ---
<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ProjectModuleManager">
    <modules>
      <module fileurl="file://$PROJECT_DIR$/.idea/near_rs_contract.iml" filepath="$PROJECT_DIR$/.idea/near_rs_contract.iml" />
    </modules>
  </component>
</project>
'''
'''--- .idea/vcs.xml ---
<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="VcsDirectoryMappings">
    <mapping directory="$PROJECT_DIR$" vcs="Git" />
  </component>
</project>
'''
'''--- .vscode/settings.json ---
{
    "editor.accessibilityPageSize": 16
}
'''
'''--- asconfig.json ---
{
    "extents": "near-sdk-as/asconfig.json"
}
'''
'''--- assembly/as_types.d.ts ---
/// <reference types="near-sdk-as/assembly/as_types" />
'''
'''--- assembly/index.ts ---
import { storage, Context } from "near-sdk-as";

// must be export, or the blockchain can not access the contract
export class Greeting {
    getGreeting(accountID: string): string | null {
        return storage.get<string>(accountID, "Greeting not available");
    }

    setGreeting(greeting: string): void {
        storage.set(Context.sender, greeting);
    }

}
'''
'''--- assembly/tsconfig.json ---
{
    "extends": "../node_modules/assemblyscript/std/assembly.json",
    "include": [
        "./**/*.ts"
    ]
}
'''
'''--- hello.txt ---
test
'''
'''--- package.json ---
{
  "name": "near_rs_contract",
  "version": "1.0.0",
  "main": "index.js",
  "repository": "https://github.com/HorseXInsectCoder/near_rs_contract.git",
  "author": "HorseXInsect <cyhzero@gmail.com>",
  "license": "MIT",
  "devDependencies": {
    "near-sdk-as": "^3.2.3"
  },
  "dependencies": {
    "asbuild": "^0.2.0",
    "assemblyscript": "^0.24.1",
    "global": "^4.4.0"
  }
}

'''